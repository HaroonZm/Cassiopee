================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:19:47
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

def solve():
    input = sys.stdin.readline
    while True:
        # Lecture de X, Y, n
        line = input()
        if not line:
            break
        X, Y, n = map(int, line.split())
        if X == 0 and Y == 0 and n == 0:
            break

        # Lecture des informations (b_i,k_i) des acheteurs
        buyer_info = {}
        for _ in range(n):
            b, k = map(int, input().split())
            buyer_info[b] = k

        # Lecture du plan s (Y lignes de X cases)
        # s[y][x] correspond à la case (x,y) avec x de 0 à X-1, y de 0 à Y-1
        s = [list(map(int, input().split())) for _ in range(Y)]

        # Constantes
        INF = 10**9

        # La sortie recherchée est une répartition de la grille en rectangles.
        # Chaque rectangle représente une zone achetée par un acheteur avec :
        # - une forme rectangulaire (contiguë)
        # - la taille exacte k (déjà donnée)
        # - et au moins un marqueur b dans cette zone sur s.

        # Stratégie:
        # Pour chaque acheteur b:
        #   Chercher tous les rectangles possibles contenant exactement k cases et contenant au moins une cellule avec s[y][x]==b.
        #   Car on sait que pour b, la parcelle doit être un rectangle contenant k cases.
        # Ensuite, essayer toutes les combinaisons possibles de ces rectangles (un par acheteur).
        # Vérifier que ces rectangles forment une partition complète de la parcelle (X*Y).
        # - Si plus d'une solution valide: imprimer NA
        # - Si aucune solution valide: imprimer NA
        # - Sinon, imprimer la solution.

        # Construire une liste de rectangles candidates pour chaque acheteur
        rects = {b: [] for b in buyer_info.keys()}

        # Pré-calcul de zones candidates par acheteur
        # Recense les positions où chaque numéro b est marqué dans s
        positions = {b: [] for b in buyer_info.keys()}
        for y in range(Y):
            for x in range(X):
                bnum = s[y][x]
                if bnum in positions:
                    positions[bnum].append((x,y))

        # Fonction pour vérifier si un rectangle possede au moins un marqueur de l'acheteur
        def has_marker(rect, b):
            x1,y1,x2,y2 = rect
            for (mx,my) in positions[b]:
                if x1 <= mx <= x2 and y1 <= my <= y2:
                    return True
            return False

        # Fonction pour compter la taille du rectangle (x2-x1+1)*(y2-y1+1)
        def size(rect):
            x1,y1,x2,y2 = rect
            return (x2 - x1 +1) * (y2 - y1 +1)

        # Générer tous les rectangles possibles dans la grille, puis filtrer
        # Pour chaque rectangle (x1,y1) -> (x2,y2)
        # Si sa taille correspond à k pour l'acheteur b et contient un marqueur de b
        # Ajouter ce rectangle aux candidats de b
        for b,k in buyer_info.items():
            candidate_rects = []
            for y1 in range(Y):
                for y2 in range(y1, Y):
                    height = y2 - y1 + 1
                    if k % height != 0:
                        continue
                    width = k // height
                    if width > X:
                        continue
                    for x1 in range(X - width +1):
                        x2 = x1 + width -1
                        rect = (x1,y1,x2,y2)
                        if has_marker(rect,b):
                            candidate_rects.append(rect)
            rects[b] = candidate_rects
            # Si aucun rectangle possible, on peut s'arreter
            if not candidate_rects:
                rects[b] = []

        # Si pour quelque acheteur il n'y a pas de rectangle possible, sortie NA immédiate
        if any(len(rects[b]) == 0 for b in buyer_info):
            print("NA")
            continue

        # Il faut tester toute combinaison rects[b1] x rects[b2] x ...
        # et valider qu'elles partitionnent l'intégralité de la grille sans superposition
        # et que la somme des tailles est X*Y

        # Liste des acheteurs dans un ordre fixe pour parcours
        buyers = list(buyer_info.keys())

        # Ensemble des indices pour backtracking
        res = []
        solutions = []
        MAX_SOL = 2  # on va stopper après 2 solutions pour savoir s'il y en a plusieurs

        # Fonction pour vérifier s'il y a recouvrement entre rectangles
        # Pour stocker l'occupation on pleine grille on peut utiliser une matrice booléenne
        def backtrack(i, used_grid):
            if len(solutions) > MAX_SOL:
                return
            if i == len(buyers):
                # Solution trouvée
                solution = []
                for b in buyers:
                    solution.append(res[buyers.index(b)])
                solutions.append(solution)
                return

            b = buyers[i]
            for rect in rects[b]:
                # Tester si rect chevauche déjà utilisé
                x1,y1,x2,y2 = rect
                conflict = False
                for y in range(y1,y2+1):
                    for x in range(x1,x2+1):
                        if used_grid[y][x]:
                            conflict = True
                            break
                    if conflict:
                        break
                if conflict:
                    continue
                # marquer rectangle utilisé
                for y in range(y1,y2+1):
                    for x in range(x1,x2+1):
                        used_grid[y][x] = True
                res.append(rect)
                backtrack(i+1, used_grid)
                res.pop()
                for y in range(y1,y2+1):
                    for x in range(x1,x2+1):
                        used_grid[y][x] = False

        # Préparer une grille booléenne pour marquer occupation
        used_grid = [[False]*X for _ in range(Y)]

        backtrack(0, used_grid)

        # Analyse résultats
        if len(solutions) == 0:
            print("NA")
        elif len(solutions) > 1:
            print("NA")
        else:
            # Une seule solution
            sol = solutions[0]
            # Construire la grille de sortie avec les numéros d'acheteurs
            ans = [[0]*X for _ in range(Y)]
            for i,b in enumerate(buyers):
                rect = sol[i]
                x1,y1,x2,y2 = rect
                for y in range(y1,y2+1):
                    for x in range(x1,x2+1):
                        ans[y][x] = b

            # Impression au format demandé (Y lignes de X valeurs)
            for y in range(Y):
                print(' '.join(str(ans[y][x]) for x in range(X)))
if __name__ == "__main__":
    solve()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.03690023347735405
    2. '\n' → logprob: -3.661900281906128
    3. 'import' → logprob: -5.786900043487549
    4. '\' → logprob: -6.286900043487549
    5. 'newline' → logprob: -6.786900043487549
    6. '' → logprob: -7.161900043487549
    7. '```' → logprob: -7.411900043487549
    8. '<|end|>' → logprob: -7.411900043487549
    9. '[' → logprob: -7.661900043487549
    10. '
' → logprob: -7.786900043487549

Token 4: ' solve' (ID: 17722)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.013927715830504894
    2. ' space' → logprob: -6.388927936553955
    3. ' main' → logprob: -6.388927936553955
    4. ' ' → logprob: -6.888927936553955
    5. '<|end|>' → logprob: -6.888927936553955
    6. ' process' → logprob: -7.013927936553955
    7. '  ' → logprob: -7.013927936553955
    8. ' a' → logprob: -7.263927936553955
    9. ' sys' → logprob: -7.513927936553955
    10. '_' → logprob: -7.763927936553955

Token 5: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004431897774338722
    2. ':' → logprob: -6.75443172454834
    3. '():' → logprob: -6.87943172454834
    4. '_' → logprob: -7.12943172454834
    5. '(:' → logprob: -7.50443172454834
    6. '```' → logprob: -8.37943172454834
    7. '):' → logprob: -8.75443172454834
    8. '(
' → logprob: -9.12943172454834
    9. '(":' → logprob: -9.87943172454834
    10. ' (' → logprob: -10.00443172454834

Token 6: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21643885970115662
    2. '\n' → logprob: -1.966438889503479
    3. '\' → logprob: -3.3414387702941895
    4. '```' → logprob: -4.4664387702941895
    5. '    
' → logprob: -5.7164387702941895
    6. ':' → logprob: -6.8414387702941895
    7. 'print' → logprob: -7.0914387702941895
    8. '(sys' → logprob: -7.5914387702941895
    9. 'newline' → logprob: -8.341439247131348
    10. '\r' → logprob: -8.466439247131348

Token 7: ' input' (ID: 3422)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.150470495223999
    2. ' ' → logprob: -1.275470495223999
    3. 'n' → logprob: -1.900470495223999
    4. 'x' → logprob: -2.775470495223999
    5. 'i' → logprob: -3.650470495223999
    6. 'print' → logprob: -4.025470733642578
    7. '\n' → logprob: -4.025470733642578
    8. 'pass' → logprob: -4.025470733642578
    9. 'for' → logprob: -4.275470733642578
    10. '\' → logprob: -4.400470733642578

Token 8: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2589562237262726
    2. '()' → logprob: -1.5089561939239502
    3. '_data' → logprob: -6.258956432342529
    4. '().' → logprob: -6.258956432342529
    5. '.' → logprob: -7.258956432342529
    6. '_' → logprob: -8.008955955505371
    7. '('' → logprob: -8.133955955505371
    8. ' ()' → logprob: -8.383955955505371
    9. '_line' → logprob: -8.383955955505371
    10. ' (' → logprob: -8.508955955505371

Token 9: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.023262597620487213
    2. 'sys' → logprob: -3.7732625007629395
    3. '	sys' → logprob: -12.273262977600098
    4. 'input' → logprob: -12.398262977600098
    5. ' input' → logprob: -12.773262977600098
    6. '(sys' → logprob: -12.898262977600098
    7. '=sys' → logprob: -13.398262977600098
    8. ' ' → logprob: -13.523262977600098
    9. ' lambda' → logprob: -16.52326202392578
    10. '   ' → logprob: -18.14826202392578

Token 10: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.022058742120862007
    2. '.' → logprob: -4.272058963775635
    3. '.readline' → logprob: -4.897058963775635
    4. ' .' → logprob: -8.272058486938477
    5. '.stdout' → logprob: -9.397058486938477
    6. '.std' → logprob: -11.272058486938477
    7. '.setdefault' → logprob: -11.272058486938477
    8. '.argv' → logprob: -11.522058486938477
    9. '.read' → logprob: -12.022058486938477
    10. 'stdin' → logprob: -12.397058486938477

Token 11: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.016953300684690475
    2. '.read' → logprob: -4.141953468322754
    3. 'read' → logprob: -7.266953468322754
    4. '.' → logprob: -8.641953468322754
    5. '.readlines' → logprob: -10.266953468322754
    6. 'buffer' → logprob: -13.016953468322754
    7. '.Read' → logprob: -13.266953468322754
    8. ' readline' → logprob: -13.391953468322754
    9. '.buffer' → logprob: -13.891953468322754
    10. '```' → logprob: -14.641953468322754

Token 12: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03275246545672417
    2. '().' → logprob: -4.282752513885498
    3. '()
' → logprob: -4.532752513885498
    4. '(' → logprob: -5.282752513885498
    5. '()\' → logprob: -7.282752513885498
    6. '
' → logprob: -7.407752513885498
    7. '(
' → logprob: -8.28275203704834
    8. ' ()' → logprob: -8.90775203704834
    9. '()

' → logprob: -8.90775203704834
    10. '```' → logprob: -9.40775203704834

Token 13: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0077011496759951115
    2. '   ' → logprob: -5.0077009201049805
    3. '()
' → logprob: -7.5077009201049805
    4. '(' → logprob: -8.25770092010498
    5. '().' → logprob: -9.63270092010498
    6. ' ()' → logprob: -10.00770092010498
    7. '()\' → logprob: -11.13270092010498
    8. '()

' → logprob: -11.50770092010498
    9. ' ' → logprob: -12.00770092010498
    10. '```' → logprob: -12.13270092010498

Token 14: ' while' (ID: 2049)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.46450191736221313
    2. 'data' → logprob: -1.9645018577575684
    3. '(' → logprob: -2.0895018577575684
    4. 'n' → logprob: -2.9645018577575684
    5. '   ' → logprob: -3.2145018577575684
    6. 'for' → logprob: -5.339501857757568
    7. 'x' → logprob: -6.214501857757568
    8. 's' → logprob: -6.339501857757568
    9. 'count' → logprob: -6.839501857757568
    10. '(n' → logprob: -6.964501857757568

Token 15: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.0008315438753925264
    2. 'True' → logprob: -7.750831604003906
    3. '(True' → logprob: -8.000831604003906
    4. ' ' → logprob: -9.750831604003906
    5. ' not' → logprob: -12.500831604003906
    6. ' (' → logprob: -12.875831604003906
    7. '(' → logprob: -14.500831604003906
    8. '  ' → logprob: -15.500831604003906
    9. ' true' → logprob: -15.875831604003906
    10. '    ' → logprob: -16.625831604003906

Token 16: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.28544989228248596
    2. '():' → logprob: -1.4104498624801636
    3. '       ' → logprob: -6.285449981689453
    4. '):' → logprob: -7.410449981689453
    5. '():
' → logprob: -8.035449981689453
    6. ' :' → logprob: -8.285449981689453
    7. '(' → logprob: -8.285449981689453
    8. ':**' → logprob: -8.535449981689453
    9. ':
' → logprob: -8.660449981689453
    10. '<|end|>' → logprob: -8.910449981689453

Token 17: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05769240856170654
    2. '    ' → logprob: -3.307692527770996
    3. ' ' → logprob: -4.432692527770996
    4. '        ' → logprob: -5.557692527770996
    5. '        
' → logprob: -7.057692527770996
    6. '   ' → logprob: -7.182692527770996
    7. '(' → logprob: -7.307692527770996
    8. '      ' → logprob: -7.807692527770996
    9. '     ' → logprob: -8.682692527770996
    10. ' (' → logprob: -8.807692527770996

Token 18: ' #' (ID: 1069)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.06192544102668762
    2. 'line' → logprob: -3.0619254112243652
    3. ' data' → logprob: -4.936925411224365
    4. 'data' → logprob: -5.561925411224365
    5. '   ' → logprob: -7.186925411224365
    6. ' s' → logprob: -7.686925411224365
    7. '       ' → logprob: -7.936925411224365
    8. 's' → logprob: -8.436925888061523
    9. ' n' → logprob: -8.936925888061523
    10. 'n' → logprob: -9.311925888061523

Token 19: ' Lecture' (ID: 106534)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.1330650895833969
    2. 'line' → logprob: -2.1330649852752686
    3. 'data' → logprob: -5.383065223693848
    4. ' data' → logprob: -6.758065223693848
    5. 's' → logprob: -9.258065223693848
    6. '	line' → logprob: -9.758065223693848
    7. '    ' → logprob: -9.883065223693848
    8. '(line' → logprob: -10.633065223693848
    9. '       ' → logprob: -10.758065223693848
    10. '   ' → logprob: -11.008065223693848

Token 20: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8904574513435364
    2. '=' → logprob: -1.6404573917388916
    3. '       ' → logprob: -2.1404573917388916
    4. '   ' → logprob: -2.2654573917388916
    5. ' line' → logprob: -3.5154573917388916
    6. ':' → logprob: -3.5154573917388916
    7. 's' → logprob: -3.6404573917388916
    8. 'data' → logprob: -4.140457630157471
    9. ')' → logprob: -4.765457630157471
    10. '(' → logprob: -4.765457630157471

Token 21: ' X' (ID: 2127)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.47019433975219727
    2. 'l' → logprob: -1.5951943397521973
    3. ' l' → logprob: -2.8451943397521973
    4. 's' → logprob: -3.4701943397521973
    5. 'la' → logprob: -3.4701943397521973
    6. ' line' → logprob: -3.5951943397521973
    7. ' une' → logprob: -4.595194339752197
    8. 'une' → logprob: -5.345194339752197
    9. 'line' → logprob: -5.720194339752197
    10. ' data' → logprob: -6.845194339752197

Token 22: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23377379775047302
    2. '=' → logprob: -1.9837738275527954
    3. ',' → logprob: -3.358773708343506
    4. '       ' → logprob: -4.233773708343506
    5. ')' → logprob: -5.858773708343506
    6. '   ' → logprob: -5.983773708343506
    7. '    ' → logprob: -6.108773708343506
    8. ' ' → logprob: -6.483773708343506
    9. ':' → logprob: -6.608773708343506
    10. '        ' → logprob: -6.608773708343506

Token 23: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.08405724912881851
    2. ' Y' → logprob: -2.834057331085205
    3. 'y' → logprob: -4.084057331085205
    4. ' y' → logprob: -5.584057331085205
    5. 'n' → logprob: -7.834057331085205
    6. ' la' → logprob: -8.334056854248047
    7. 'l' → logprob: -8.959056854248047
    8. 'a' → logprob: -9.084056854248047
    9. 'la' → logprob: -9.834056854248047
    10. 'q' → logprob: -10.584056854248047

Token 24: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7867993116378784
    2. ' =' → logprob: -1.2867993116378784
    3. ' ' → logprob: -1.9117993116378784
    4. '=' → logprob: -3.411799430847168
    5. '    ' → logprob: -3.536799430847168
    6. '        ' → logprob: -3.661799430847168
    7. '       ' → logprob: -4.661799430847168
    8. '  ' → logprob: -5.536799430847168
    9. '   ' → logprob: -5.536799430847168
    10. ' ,' → logprob: -5.786799430847168

Token 25: ' n' (ID: 297)
  Prédit: ' Z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Z' → logprob: -0.6806220412254333
    2. 'Z' → logprob: -0.8056220412254333
    3. ' et' → logprob: -3.430622100830078
    4. ' and' → logprob: -5.805622100830078
    5. ',' → logprob: -5.805622100830078
    6. 'et' → logprob: -6.180622100830078
    7. '   ' → logprob: -6.680622100830078
    8. 'and' → logprob: -7.055622100830078
    9. '    ' → logprob: -7.305622100830078
    10. ' ' → logprob: -7.555622100830078

Token 26: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8549231886863708
    2. '       ' → logprob: -0.9799231886863708
    3. ',' → logprob: -2.9799232482910156
    4. ' ' → logprob: -3.3549232482910156
    5. '        ' → logprob: -3.3549232482910156
    6. '    ' → logprob: -3.4799232482910156
    7. '=' → logprob: -3.6049232482910156
    8. '   ' → logprob: -4.729923248291016
    9. '      ' → logprob: -5.979923248291016
    10. '  ' → logprob: -6.104923248291016

Token 27: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04139157384634018
    2. '        
' → logprob: -4.541391372680664
    3. '   ' → logprob: -5.041391372680664
    4. '        ' → logprob: -5.291391372680664
    5. ' ' → logprob: -5.541391372680664
    6. '<|end|>' → logprob: -5.541391372680664
    7. '    ' → logprob: -5.666391372680664
    8. '      ' → logprob: -6.791391372680664
    9. '()' → logprob: -7.166391372680664
    10. '  ' → logprob: -7.166391372680664

Token 28: ' line' (ID: 2543)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.679269552230835
    2. 'x' → logprob: -1.304269552230835
    3. '   ' → logprob: -3.304269552230835
    4. ' ' → logprob: -3.304269552230835
    5. '    ' → logprob: -3.429269552230835
    6. 'n' → logprob: -3.804269552230835
    7. '  ' → logprob: -3.929269552230835
    8. '      ' → logprob: -4.054269790649414
    9. 'data' → logprob: -4.429269790649414
    10. '        ' → logprob: -4.679269790649414

Token 29: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0021853535436093807
    2. '=' → logprob: -6.127185344696045
    3. ' ' → logprob: -16.377185821533203
    4. '=line' → logprob: -16.502185821533203
    5. 's' → logprob: -17.377185821533203
    6. ' ' → logprob: -18.377185821533203
    7. ' =)' → logprob: -18.502185821533203
    8. ' ==' → logprob: -18.502185821533203
    9. '=input' → logprob: -18.752185821533203
    10. ' =
' → logprob: -18.877185821533203

Token 30: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5779151320457458
    2. ' input' → logprob: -0.8279151320457458
    3. 'sys' → logprob: -6.702915191650391
    4. ' sys' → logprob: -7.202915191650391
    5. ' ' → logprob: -14.45291519165039
    6. '=input' → logprob: -14.57791519165039
    7. '	input' → logprob: -15.70291519165039
    8. 's' → logprob: -16.32791519165039
    9. 'import' → logprob: -16.32791519165039
    10. '<input' → logprob: -16.45291519165039

Token 31: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03804975748062134
    2. '().' → logprob: -3.2880496978759766
    3. '()

' → logprob: -13.038049697875977
    4. '()
' → logprob: -13.288049697875977
    5. ' ()' → logprob: -13.663049697875977
    6. '())' → logprob: -13.663049697875977
    7. '(' → logprob: -14.038049697875977
    8. '.strip' → logprob: -14.913049697875977
    9. '()`' → logprob: -16.163049697875977
    10. '（）' → logprob: -16.163049697875977

Token 32: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4116245210170746
    2. '.strip' → logprob: -1.911624550819397
    3. '   ' → logprob: -2.1616244316101074
    4. '<|end|>' → logprob: -2.9116244316101074
    5. '.rstrip' → logprob: -5.036624431610107
    6. '
' → logprob: -5.661624431610107
    7. ' if' → logprob: -5.786624431610107
    8. '<|end|>' → logprob: -6.036624431610107
    9. '  ' → logprob: -7.036624431610107
    10. ' ' → logprob: -7.161624431610107

Token 33: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09280175715684891
    2. '<|end|>' → logprob: -3.467801809310913
    3. '   ' → logprob: -3.592801809310913
    4. ' if' → logprob: -4.717801570892334
    5. ' ' → logprob: -5.217801570892334
    6. '    ' → logprob: -5.342801570892334
    7. '        ' → logprob: -6.592801570892334
    8. '
' → logprob: -6.592801570892334
    9. '      ' → logprob: -6.717801570892334
    10. '<|end|>' → logprob: -6.842801570892334

Token 34: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.0011993973748758435
    2. 'not' → logprob: -6.751199245452881
    3. ' line' → logprob: -10.501199722290039
    4. ' ' → logprob: -14.001199722290039
    5. 'line' → logprob: -14.376199722290039
    6. ' ' → logprob: -16.00119972229004
    7. '	not' → logprob: -16.25119972229004
    8. '#line' → logprob: -19.12619972229004
    9. '[line' → logprob: -19.12619972229004
    10. '!' → logprob: -19.12619972229004

Token 35: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.011048054322600365
    2. 'line' → logprob: -4.511047840118408
    3. '	line' → logprob: -15.636048316955566
    4. '(line' → logprob: -17.88604736328125
    5. '=line' → logprob: -18.26104736328125
    6. '#line' → logprob: -18.51104736328125
    7. ' ' → logprob: -18.63604736328125
    8. ' ' → logprob: -18.88604736328125
    9. '[line' → logprob: -19.01104736328125
    10. ' ligne' → logprob: -20.01104736328125

Token 36: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011184340342879295
    2. ' :' → logprob: -5.261184215545654
    3. '.strip' → logprob: -5.261184215545654
    4. ':
' → logprob: -7.511184215545654
    5. '.rstrip' → logprob: -9.636184692382812
    6. '.' → logprob: -10.261184692382812
    7. ' or' → logprob: -10.386184692382812
    8. ':return' → logprob: -10.886184692382812
    9. '.startswith' → logprob: -11.886184692382812
    10. '):' → logprob: -11.886184692382812

Token 37: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009855133481323719
    2. '       ' → logprob: -4.634855270385742
    3. '   ' → logprob: -9.884855270385742
    4. '<|end|>' → logprob: -11.759855270385742
    5. '<|end|>' → logprob: -12.134855270385742
    6. ' break' → logprob: -12.134855270385742
    7. '               ' → logprob: -12.384855270385742
    8. ':' → logprob: -12.634855270385742
    9. '          ' → logprob: -12.634855270385742
    10. ' ' → logprob: -13.009855270385742

Token 38: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.028444739058613777
    2. ' break' → logprob: -3.778444766998291
    3. 'break' (adapté à ' break') → logprob: -6.153444766998291
    4. '               ' → logprob: -6.153444766998291
    5. '       ' → logprob: -7.278444766998291
    6. '   ' → logprob: -8.903444290161133
    7. '	break' → logprob: -10.403444290161133
    8. ' ' → logprob: -10.653444290161133
    9. ' ' → logprob: -11.528444290161133
    10. '	       ' → logprob: -12.028444290161133

Token 39: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12293741106987
    2. '
' → logprob: -2.2479374408721924
    3. '<|end|>' → logprob: -4.997937202453613
    4. '        
' → logprob: -5.872937202453613
    5. '\n' → logprob: -9.247937202453613
    6. '   ' → logprob: -9.247937202453613
    7. '<|end|>' → logprob: -9.997937202453613
    8. '
' → logprob: -10.122937202453613
    9. '    
' → logprob: -10.372937202453613
    10. '' → logprob: -10.622937202453613

Token 40: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002846602350473404
    2. '        
' → logprob: -6.627846717834473
    3. '
' → logprob: -7.377846717834473
    4. '   ' → logprob: -7.752846717834473
    5. '<|end|>' → logprob: -8.002846717834473
    6. ',' → logprob: -10.252846717834473
    7. '    
' → logprob: -11.377846717834473
    8. '  
' → logprob: -11.627846717834473
    9. '      ' → logprob: -11.752846717834473
    10. '           ' → logprob: -11.877846717834473

Token 41: ' X' (ID: 2127)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01355686690658331
    2. '   ' → logprob: -4.513556957244873
    3. '        
' → logprob: -7.013556957244873
    4. 'x' → logprob: -7.638556957244873
    5. '<|end|>' → logprob: -8.138556480407715
    6. '
' → logprob: -8.263556480407715
    7. '    
' → logprob: -8.513556480407715
    8. ' x' → logprob: -9.263556480407715
    9. '<|end|>' → logprob: -10.263556480407715
    10. '      ' → logprob: -10.263556480407715

Token 42: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022201328829396516
    2. ' ,' → logprob: -9.000222206115723
    3. ',Y' → logprob: -9.250222206115723
    4. ',X' → logprob: -13.625222206115723
    5. ',y' → logprob: -15.250222206115723
    6. '_,' → logprob: -15.375222206115723
    7. ',I' → logprob: -16.375221252441406
    8. 's' → logprob: -16.500221252441406
    9. ',int' → logprob: -16.875221252441406
    10. '‌,' → logprob: -16.875221252441406

Token 43: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.07460270076990128
    2. ' Y' → logprob: -2.6996026039123535
    3. ' ' → logprob: -5.8246026039123535
    4. '<|end|>' → logprob: -6.9496026039123535
    5. '  ' → logprob: -8.574603080749512
    6. ' =' → logprob: -9.199603080749512
    7. '=' → logprob: -9.449603080749512
    8. 'y' → logprob: -9.574603080749512
    9. 'space' → logprob: -9.824603080749512
    10. ')' → logprob: -9.824603080749512

Token 44: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5140553116798401
    2. ',' → logprob: -1.1390552520751953
    3. '=' → logprob: -2.5140552520751953
    4. ' ,' → logprob: -7.139055252075195
    5. '<|end|>' → logprob: -10.014055252075195
    6. ' ' → logprob: -11.139055252075195
    7. ')' → logprob: -11.889055252075195
    8. '<|end|>' → logprob: -12.764055252075195
    9. '  ' → logprob: -13.014055252075195
    10. '   ' → logprob: -13.889055252075195

Token 45: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.38688984513282776
    2. 'n' → logprob: -1.1368898153305054
    3. ' =' → logprob: -12.011889457702637
    4. '_n' → logprob: -12.386889457702637
    5. '	n' → logprob: -13.136889457702637
    6. ' ' → logprob: -13.261889457702637
    7. ' ' → logprob: -13.636889457702637
    8. '=' → logprob: -14.386889457702637
    9. ',n' → logprob: -15.136889457702637
    10. '(n' → logprob: -15.136889457702637

Token 46: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687586784362793
    2. '=' → logprob: -1.136875867843628
    3. ')' → logprob: -13.386876106262207
    4. ',' → logprob: -13.761876106262207
    5. ' ' → logprob: -13.761876106262207
    6. '=line' → logprob: -15.136876106262207
    7. '   ' → logprob: -15.386876106262207
    8. '<|end|>' → logprob: -16.26187515258789
    9. '=int' → logprob: -16.38687515258789
    10. ' ' → logprob: -16.51187515258789

Token 47: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.023701250553131104
    2. 'map' → logprob: -4.398701190948486
    3. ' line' → logprob: -4.523701190948486
    4. 'line' → logprob: -8.398701667785645
    5. ' ' → logprob: -10.648701667785645
    6. ' ' → logprob: -11.398701667785645
    7. ' [' → logprob: -12.023701667785645
    8. '	map' → logprob: -12.898701667785645
    9. '[' → logprob: -13.023701667785645
    10. ' list' → logprob: -13.023701667785645

Token 48: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.08071578294038773
    2. '(' → logprob: -2.5807158946990967
    3. '(str' → logprob: -6.330715656280518
    4. '(lambda' → logprob: -10.455716133117676
    5. '(
' → logprob: -12.205716133117676
    6. '(float' → logprob: -13.205716133117676
    7. '(list' → logprob: -13.580716133117676
    8. 'int' → logprob: -13.580716133117676
    9. '[int' → logprob: -13.955716133117676
    10. '(eval' → logprob: -13.955716133117676

Token 49: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.09190972149372101
    2. ')' → logprob: -2.466909646987915
    3. 'line' → logprob: -7.091909885406494
    4. ' line' → logprob: -7.216909885406494
    5. ',line' → logprob: -7.341909885406494
    6. '(' → logprob: -7.591909885406494
    7. '	line' → logprob: -9.716909408569336
    8. '[line' → logprob: -10.091909408569336
    9. '=line' → logprob: -10.091909408569336
    10. ',' → logprob: -10.216909408569336

Token 50: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.47411930561065674
    2. ' line' → logprob: -0.9741193056106567
    3. ')' → logprob: -10.974119186401367
    4. '(line' → logprob: -11.099119186401367
    5. '	line' → logprob: -12.599119186401367
    6. '=line' → logprob: -12.724119186401367
    7. '[line' → logprob: -12.974119186401367
    8. '#line' → logprob: -13.849119186401367
    9. ',line' → logprob: -15.224119186401367
    10. '   ' → logprob: -16.349119186401367

Token 51: '.split' (ID: 10347)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.5376521348953247
    2. '().' → logprob: -1.2876521348953247
    3. '.split' → logprob: -2.037652015686035
    4. '.' → logprob: -4.787652015686035
    5. '.rstrip' → logprob: -6.912652015686035
    6. ')' → logprob: -9.037652015686035
    7. '.readline' → logprob: -9.287652015686035
    8. ').' → logprob: -9.912652015686035
    9. ' .' → logprob: -10.912652015686035
    10. 'split' → logprob: -11.912652015686035

Token 52: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.40691494941711426
    2. ')' → logprob: -1.1569149494171143
    3. '('' → logprob: -4.531914710998535
    4. '()' → logprob: -4.906914710998535
    5. '(' → logprob: -6.781914710998535
    6. '))' → logprob: -8.281914710998535
    7. '(','' → logprob: -9.281914710998535
    8. '')' → logprob: -9.656914710998535
    9. '()))' → logprob: -9.906914710998535
    10. '`)' → logprob: -10.906914710998535

Token 53: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 54: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41272610425949097
    2. 'result' → logprob: -1.9127261638641357
    3. ' result' → logprob: -3.6627261638641357
    4. '        ' → logprob: -3.9127261638641357
    5. 'for' → logprob: -4.037725925445557
    6. 'if' (adapté à ' if') → logprob: -4.412725925445557
    7. ' if' → logprob: -4.412725925445557
    8. 'a' → logprob: -4.537725925445557
    9. 'n' → logprob: -4.662725925445557
    10. ' for' → logprob: -4.662725925445557

Token 55: ' X' (ID: 2127)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.6620123982429504
    2. ' X' → logprob: -0.7870123982429504
    3. ' not' → logprob: -4.662012577056885
    4. 'n' → logprob: -5.162012577056885
    5. ' Y' → logprob: -5.287012577056885
    6. ' ' → logprob: -5.412012577056885
    7. 'X' → logprob: -5.537012577056885
    8. ' ' → logprob: -9.037012100219727
    9. ' (' → logprob: -9.162012100219727
    10. 'not' → logprob: -9.787012100219727

Token 56: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3968295156955719
    2. ' >' → logprob: -1.6468294858932495
    3. '==' → logprob: -2.521829605102539
    4. '>' → logprob: -3.646829605102539
    5. ' >=' → logprob: -4.271829605102539
    6. ' <' → logprob: -4.896829605102539
    7. ' <=' → logprob: -5.521829605102539
    8. '>=' → logprob: -6.896829605102539
    9. '<' → logprob: -7.271829605102539
    10. '%' → logprob: -7.771829605102539

Token 57: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.13019031286239624
    2. 'Y' → logprob: -2.755190372467041
    3. ' ' → logprob: -3.005190372467041
    4. ' Y' → logprob: -4.755190372467041
    5. '1' → logprob: -8.255189895629883
    6. '-' → logprob: -10.380189895629883
    7. ' -' → logprob: -11.255189895629883
    8. 'n' → logprob: -12.380189895629883
    9. '	Y' → logprob: -12.505189895629883
    10. '  ' → logprob: -12.942689895629883

Token 58: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.022870833054184914
    2. 'Y' → logprob: -3.8978707790374756
    3. ' ' → logprob: -6.147871017456055
    4. '-' → logprob: -9.522871017456055
    5. ' Y' → logprob: -9.772871017456055
    6. '1' → logprob: -10.022871017456055
    7. ' -' → logprob: -12.647871017456055
    8. '```' → logprob: -13.710371017456055
    9. '-Y' → logprob: -13.835371017456055
    10. 'X' → logprob: -13.960371017456055

Token 59: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.05495461821556091
    2. 'and' → logprob: -2.9299545288085938
    3. ' or' → logprob: -10.179954528808594
    4. ' ' → logprob: -10.554954528808594
    5. ':' → logprob: -12.929954528808594
    6. '   ' → logprob: -13.054954528808594
    7. '  ' → logprob: -14.054954528808594
    8. '	and' → logprob: -14.054954528808594
    9. '    ' → logprob: -14.679954528808594
    10. '<|end|>' → logprob: -15.054954528808594

Token 60: ' Y' (ID: 865)
  Prédit: ' Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Y' → logprob: -0.01605290174484253
    2. 'Y' → logprob: -4.141052722930908
    3. ' ' → logprob: -11.391053199768066
    4. '	Y' → logprob: -12.016053199768066
    5. '<|end|>' → logprob: -14.516053199768066
    6. ' and' → logprob: -15.391053199768066
    7. '  ' → logprob: -15.641053199768066
    8. ' ' → logprob: -15.641053199768066
    9. '   ' → logprob: -16.76605224609375
    10. '<|end|>' → logprob: -16.76605224609375

Token 61: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.007897617295384407
    2. '==' → logprob: -4.882897853851318
    3. '<|end|>' → logprob: -8.38289737701416
    4. ' ' → logprob: -10.13289737701416
    5. '<|end|>' → logprob: -11.00789737701416
    6. ' =' → logprob: -13.25789737701416
    7. ' ' → logprob: -13.38289737701416
    8. '  ' → logprob: -14.00789737701416
    9. '0' → logprob: -14.13289737701416
    10. ' ===' → logprob: -15.50789737701416

Token 62: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009756443090736866
    2. ' ' → logprob: -4.634756565093994
    3. '  ' → logprob: -16.134756088256836
    4. '   ' → logprob: -16.134756088256836
    5. ' ' → logprob: -16.259756088256836
    6. '       ' → logprob: -16.697256088256836
    7. '        ' → logprob: -17.634756088256836
    8. '```' → logprob: -17.697256088256836
    9. '<|end|>' → logprob: -17.759756088256836
    10. ' and' → logprob: -17.822256088256836

Token 63: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019297054968774319
    2. ' ' → logprob: -6.251929759979248
    3. '   ' → logprob: -15.00192928314209
    4. '  ' → logprob: -15.25192928314209
    5. '       ' → logprob: -16.439430236816406
    6. '1' → logprob: -17.064430236816406
    7. '```' → logprob: -17.064430236816406
    8. ' ' → logprob: -17.189430236816406
    9. '    ' → logprob: -17.626930236816406
    10. '           ' → logprob: -17.626930236816406

Token 64: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.002326648449525237
    2. 'and' → logprob: -6.502326488494873
    3. ':' → logprob: -7.252326488494873
    4. '   ' → logprob: -10.252326965332031
    5. '       ' → logprob: -10.377326965332031
    6. ' ' → logprob: -11.002326965332031
    7. ':
' → logprob: -11.252326965332031
    8. '           ' → logprob: -12.127326965332031
    9. '	and' → logprob: -12.502326965332031
    10. '        ' → logprob: -12.877326965332031

Token 65: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.013242820277810097
    2. 'n' → logprob: -4.388242721557617
    3. '0' → logprob: -7.513242721557617
    4. ' ' → logprob: -8.638242721557617
    5. '<|end|>' → logprob: -12.263242721557617
    6. '	n' → logprob: -12.888242721557617
    7. ' ' → logprob: -14.513242721557617
    8. '<|end|>' → logprob: -14.638242721557617
    9. '1' → logprob: -14.888242721557617
    10. '```' → logprob: -14.888242721557617

Token 66: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.012526246719062328
    2. '==' → logprob: -4.387526035308838
    3. '<|end|>' → logprob: -12.137526512145996
    4. ' ' → logprob: -12.262526512145996
    5. '<|end|>' → logprob: -13.262526512145996
    6. '  ' → logprob: -13.762526512145996
    7. ' ' → logprob: -13.887526512145996
    8. ' =' → logprob: -14.387526512145996
    9. '=' → logprob: -14.762526512145996
    10. ')==' → logprob: -15.012526512145996

Token 67: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3484518527984619
    2. '0' → logprob: -1.223451852798462
    3. '  ' → logprob: -12.098451614379883
    4. '   ' → logprob: -14.223451614379883
    5. '<|end|>' → logprob: -15.223451614379883
    6. ' ' → logprob: -15.348451614379883
    7. '<|end|>' → logprob: -15.910951614379883
    8. '=' → logprob: -16.785951614379883
    9. '    ' → logprob: -17.098451614379883
    10. ' -' → logprob: -17.285951614379883

Token 68: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002964935847558081
    2. ' ' → logprob: -8.125296592712402
    3. '  ' → logprob: -16.000295639038086
    4. '-' → logprob: -16.250295639038086
    5. '<|end|>' → logprob: -16.375295639038086
    6. '<|end|>' → logprob: -16.750295639038086
    7. '   ' → logprob: -16.875295639038086
    8. '۰' → logprob: -17.875295639038086
    9. '০' → logprob: -18.625295639038086
    10. '    ' → logprob: -18.812795639038086

Token 69: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006490522064268589
    2. ':
' → logprob: -8.000649452209473
    3. '       ' → logprob: -8.750649452209473
    4. '           ' → logprob: -9.000649452209473
    5. ' :' → logprob: -11.250649452209473
    6. ':return' → logprob: -11.750649452209473
    7. '   ' → logprob: -11.875649452209473
    8. '<|end|>' → logprob: -13.500649452209473
    9. '):' → logprob: -14.250649452209473
    10. '.' → logprob: -14.375649452209473

Token 70: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004850292112678289
    2. '       ' → logprob: -5.504850387573242
    3. ':' → logprob: -7.254850387573242
    4. '<|end|>' → logprob: -10.629850387573242
    5. ':
' → logprob: -11.129850387573242
    6. '   ' → logprob: -12.254850387573242
    7. '<|end|>' → logprob: -12.379850387573242
    8. '	       ' → logprob: -12.504850387573242
    9. '          ' → logprob: -12.754850387573242
    10. ' break' → logprob: -13.254850387573242

Token 71: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.7512914538383484
    2. '       ' → logprob: -1.5012915134429932
    3. '           ' → logprob: -1.6262915134429932
    4. 'break' (adapté à ' break') → logprob: -2.251291513442993
    5. 'return' → logprob: -6.376291275024414
    6. ' return' → logprob: -6.876291275024414
    7. '	break' → logprob: -7.876291275024414
    8. '   ' → logprob: -8.251291275024414
    9. '               ' → logprob: -9.376291275024414
    10. ' ' → logprob: -12.501291275024414

Token 72: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.32301977276802063
    2. '       ' → logprob: -1.4480197429656982
    3. '<|end|>' → logprob: -3.6980197429656982
    4. '        
' → logprob: -4.198019981384277
    5. '<|end|>' → logprob: -7.448019981384277
    6. '\n' → logprob: -9.448019981384277
    7. '
        
' → logprob: -9.698019981384277
    8. '```' → logprob: -9.698019981384277
    9. '
' → logprob: -9.698019981384277
    10. '    
' → logprob: -9.948019981384277

Token 73: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40382540225982666
    2. '
' → logprob: -1.1538254022598267
    3. '        
' → logprob: -4.153825283050537
    4. '        ' → logprob: -8.028825759887695
    5. '<|end|>' → logprob: -8.153825759887695
    6. '```' → logprob: -8.903825759887695
    7. '    
' → logprob: -9.778825759887695
    8. '   ' → logprob: -10.028825759887695
    9. '            
' → logprob: -10.153825759887695
    10. '<|end|>' → logprob: -10.278825759887695

Token 74: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7786081433296204
    2. 'result' → logprob: -0.9036081433296204
    3. 'a' → logprob: -3.5286080837249756
    4. ' result' → logprob: -3.9036080837249756
    5. 'res' → logprob: -4.028608322143555
    6. 'm' → logprob: -4.528608322143555
    7. 'for' → logprob: -4.528608322143555
    8. 's' → logprob: -5.403608322143555
    9. 'x' → logprob: -5.528608322143555
    10. ' for' → logprob: -5.903608322143555

Token 75: ' Lecture' (ID: 106534)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.705043375492096
    2. 'result' → logprob: -1.3300433158874512
    3. '       ' → logprob: -3.330043315887451
    4. ' for' → logprob: -3.330043315887451
    5. 'res' → logprob: -3.455043315887451
    6. ' res' → logprob: -4.080043315887451
    7. ' a' → logprob: -4.205043315887451
    8. 'for' → logprob: -4.580043315887451
    9. 'a' → logprob: -4.705043315887451
    10. ' p' → logprob: -5.080043315887451

Token 76: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.08385533839464188
    2. '       ' → logprob: -2.708855390548706
    3. 'des' → logprob: -4.833855152130127
    4. ' of' → logprob: -6.083855152130127
    5. ' de' → logprob: -6.458855152130127
    6. '<|end|>' → logprob: -6.708855152130127
    7. ' du' → logprob: -8.833855628967285
    8. '<|end|>' → logprob: -8.958855628967285
    9. ' ' → logprob: -9.333855628967285
    10. 'de' → logprob: -9.583855628967285

Token 77: ' informations' (ID: 33951)
  Prédit: ' points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' points' → logprob: -1.6200225353240967
    2. 'coeff' → logprob: -1.6200225353240967
    3. 'points' → logprob: -1.8700225353240967
    4. 'a' → logprob: -3.1200225353240967
    5. 'd' → logprob: -3.1200225353240967
    6. ' coefficients' → logprob: -3.8700225353240967
    7. 't' → logprob: -4.120022773742676
    8. 'p' → logprob: -4.370022773742676
    9. ' pol' → logprob: -4.495022773742676
    10. 'positions' → logprob: -4.620022773742676

Token 78: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39353176951408386
    2. ' for' → logprob: -2.0185317993164062
    3. ' des' → logprob: -2.7685317993164062
    4. 'des' → logprob: -3.2685317993164062
    5. '<|end|>' → logprob: -4.018531799316406
    6. 'for' → logprob: -4.018531799316406
    7. 'sur' → logprob: -4.768531799316406
    8. '<|end|>' → logprob: -4.893531799316406
    9. 'n' → logprob: -5.268531799316406
    10. ' about' → logprob: -5.393531799316406

Token 79: 'b' (ID: 65)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8882634043693542
    2. 'for' → logprob: -2.013263463973999
    3. ' for' → logprob: -2.388263463973999
    4. ' sur' → logprob: -2.513263463973999
    5. ' des' → logprob: -2.763263463973999
    6. 'sur' → logprob: -2.888263463973999
    7. 'des' → logprob: -3.138263463973999
    8. ' pour' → logprob: -4.63826322555542
    9. ' )' → logprob: -4.76326322555542
    10. 's' → logprob: -5.01326322555542

Token 80: '_i' (ID: 10853)
  Prédit: 'uild'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'uild' → logprob: -1.5686908960342407
    2. 'o' → logprob: -1.9436908960342407
    3. 'ases' → logprob: -2.068690776824951
    4. 'riques' → logprob: -2.818690776824951
    5. 'onnes' → logprob: -3.318690776824951
    6. 'ikes' → logprob: -3.443690776824951
    7. 'ombs' → logprob: -3.568690776824951
    8. 'abies' → logprob: -3.693690776824951
    9. 'omb' → logprob: -3.818690776824951
    10. 'ons' → logprob: -4.068690776824951

Token 81: ',k' (ID: 35155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.47777754068374634
    2. ')' → logprob: -1.1027774810791016
    3. 's' → logprob: -3.6027774810791016
    4. ' )' → logprob: -4.477777481079102
    5. ' ,' → logprob: -4.977777481079102
    6. ')s' → logprob: -7.102777481079102
    7. ',)' → logprob: -7.602777481079102
    8. '):' → logprob: -8.477777481079102
    9. ' et' → logprob: -8.727777481079102
    10. ' and' → logprob: -9.102777481079102

Token 82: '_i' (ID: 10853)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5056381225585938
    2. ',' → logprob: -1.1306381225585938
    3. ',i' → logprob: -3.3806381225585938
    4. '_i' → logprob: -4.005638122558594
    5. ',)' → logprob: -5.255638122558594
    6. 'i' → logprob: -5.755638122558594
    7. ',j' → logprob: -5.880638122558594
    8. ',s' → logprob: -6.005638122558594
    9. ',n' → logprob: -6.380638122558594
    10. ',k' → logprob: -7.380638122558594

Token 83: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.32060524821281433
    2. ',' → logprob: -1.3206052780151367
    3. ' )' → logprob: -5.945605278015137
    4. 's' → logprob: -6.320605278015137
    5. ' ,' → logprob: -6.570605278015137
    6. ',)' → logprob: -7.695605278015137
    7. ',n' → logprob: -8.320605278015137
    8. ',s' → logprob: -8.820605278015137
    9. '):' → logprob: -8.945605278015137
    10. ')s' → logprob: -9.570605278015137

Token 84: ' des' (ID: 731)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31093698740005493
    2. '<|end|>' → logprob: -1.4359369277954102
    3. ' for' → logprob: -3.81093692779541
    4. '<|end|>' → logprob: -5.18593692779541
    5. 'for' → logprob: -7.81093692779541
    6. ',' → logprob: -8.18593692779541
    7. '        
' → logprob: -8.93593692779541
    8. '        ' → logprob: -9.18593692779541
    9. '
' → logprob: -9.31093692779541
    10. ' ' → logprob: -9.43593692779541

Token 85: ' ache' (ID: 27427)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.551167368888855
    2. 'b' → logprob: -2.8636674880981445
    3. ' n' → logprob: -3.1136674880981445
    4. ' bâtiments' → logprob: -3.6761674880981445
    5. 'p' → logprob: -3.9261674880981445
    6. 'sold' → logprob: -4.1761674880981445
    7. 'points' → logprob: -4.3011674880981445
    8. ' soldats' → logprob: -4.3011674880981445
    9. 'bout' → logprob: -4.3636674880981445
    10. ' ' → logprob: -4.3636674880981445

Token 86: 'teurs' (ID: 77729)
  Prédit: 'teurs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'teurs' → logprob: -0.00016086915275081992
    2. 'te' → logprob: -9.125161170959473
    3. 'teur' → logprob: -10.250161170959473
    4. 't' → logprob: -11.750161170959473
    5. 'ters' → logprob: -12.625161170959473
    6. 'tte' → logprob: -12.625161170959473
    7. 'uteurs' → logprob: -14.125161170959473
    8. 'ateurs' → logprob: -15.750161170959473
    9. 'ts' → logprob: -15.750161170959473
    10. 'tele' → logprob: -15.875161170959473

Token 87: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04419141262769699
    2. '<|end|>' → logprob: -3.419191360473633
    3. ' for' → logprob: -5.044191360473633
    4. 'for' → logprob: -6.169191360473633
    5. '<|end|>' → logprob: -6.669191360473633
    6. ',' → logprob: -8.794191360473633
    7. '        
' → logprob: -9.044191360473633
    8. '        ' → logprob: -9.669191360473633
    9. '      ' → logprob: -9.919191360473633
    10. '   ' → logprob: -10.169191360473633

Token 88: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01686188392341137
    2. '<|end|>' → logprob: -4.266861915588379
    3. ' for' → logprob: -7.266861915588379
    4. '<|end|>' → logprob: -7.391861915588379
    5. ',' → logprob: -7.891861915588379
    6. '        
' → logprob: -8.641861915588379
    7. '```' → logprob: -8.891861915588379
    8. 's' → logprob: -9.016861915588379
    9. '        ' → logprob: -9.266861915588379
    10. '   ' → logprob: -9.391861915588379

Token 89: ' buyer' (ID: 28061)
  Prédit: ' buyers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' buyers' → logprob: -0.3173811733722687
    2. '       ' → logprob: -1.9423811435699463
    3. 'buyers' → logprob: -2.1923811435699463
    4. ' buyer' → logprob: -5.817381381988525
    5. ' purchasers' → logprob: -6.067381381988525
    6. 'b' → logprob: -6.317381381988525
    7. ' sellers' → logprob: -6.692381381988525
    8. ' compradores' → logprob: -6.692381381988525
    9. ' buy' → logprob: -7.067381381988525
    10. ' b' → logprob: -7.067381381988525

Token 90: '_info' (ID: 6744)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0010831828694790602
    2. '_s' → logprob: -7.1260833740234375
    3. '_info' → logprob: -8.751083374023438
    4. '_infos' → logprob: -10.126083374023438
    5. ' =' → logprob: -10.501083374023438
    6. ' s' → logprob: -10.626083374023438
    7. '_list' → logprob: -12.126083374023438
    8. '=' → logprob: -12.126083374023438
    9. '_' → logprob: -12.251083374023438
    10. '_data' → logprob: -12.501083374023438

Token 91: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4771265685558319
    2. '=' → logprob: -1.6021265983581543
    3. 's' → logprob: -1.7271265983581543
    4. '=[]' → logprob: -8.977126121520996
    5. '[]' → logprob: -10.477126121520996
    6. '   ' → logprob: -12.602126121520996
    7. ' ' → logprob: -12.727126121520996
    8. '_list' → logprob: -13.352126121520996
    9. '_' → logprob: -13.352126121520996
    10. ',' → logprob: -13.602126121520996

Token 92: ' {}
' (ID: 11421)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.329533189535141
    2. '[' → logprob: -1.5795332193374634
    3. ' []' → logprob: -2.829533100128174
    4. ' [' → logprob: -4.204533100128174
    5. '[]
' → logprob: -8.329533576965332
    6. '[int' → logprob: -8.829533576965332
    7. '[input' → logprob: -10.079533576965332
    8. '[s' → logprob: -10.454533576965332
    9. '[list' → logprob: -10.454533576965332
    10. '[n' → logprob: -10.954533576965332

Token 93: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00701124407351017
    2. ' for' → logprob: -5.632011413574219
    3. '<|end|>' → logprob: -6.132011413574219
    4. '
' → logprob: -7.632011413574219
    5. 'for' → logprob: -8.132011413574219
    6. '        
' → logprob: -8.882011413574219
    7. '<|end|>' → logprob: -9.507011413574219
    8. '	for' → logprob: -9.882011413574219
    9. '   ' → logprob: -10.132011413574219
    10. '	' → logprob: -10.132011413574219

Token 94: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2014457732439041
    2. 'for' (adapté à ' for') → logprob: -1.7014458179473877
    3. '       ' → logprob: -10.951445579528809
    4. '	for' → logprob: -11.701445579528809
    5. '   ' → logprob: -12.826445579528809
    6. '<|end|>' → logprob: -13.451445579528809
    7. ' ' → logprob: -14.201445579528809
    8. '
' → logprob: -14.451445579528809
    9. ' ' → logprob: -14.951445579528809
    10. '    ' → logprob: -15.451445579528809

Token 95: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.016099946573376656
    2. '_' → logprob: -4.26609992980957
    3. ' i' → logprob: -6.26609992980957
    4. ' range' → logprob: -11.26609992980957
    5. '_i' → logprob: -11.39109992980957
    6. ' in' → logprob: -12.14109992980957
    7. ' ' → logprob: -12.39109992980957
    8. 'i' → logprob: -13.64109992980957
    9. '_range' → logprob: -16.14109992980957
    10. ' ' → logprob: -17.76609992980957

Token 96: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6957735419273376
    2. 'in' → logprob: -0.8207735419273376
    3. 'range' → logprob: -2.8207736015319824
    4. ' range' → logprob: -6.570773601531982
    5. ' ' → logprob: -8.570773124694824
    6. '  ' → logprob: -10.695773124694824
    7. 'i' → logprob: -11.445773124694824
    8. 'import' → logprob: -12.195773124694824
    9. 'n' → logprob: -12.320773124694824
    10. '	range' → logprob: -12.570773124694824

Token 97: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0019359003053978086
    2. ' range' → logprob: -6.251935958862305
    3. '(range' → logprob: -12.626935958862305
    4. '	range' → logprob: -14.126935958862305
    5. 'rang' → logprob: -14.876935958862305
    6. '```' → logprob: -14.876935958862305
    7. 'ran' → logprob: -15.126935958862305
    8. ' ' → logprob: -15.126935958862305
    9. 'r' → logprob: -15.251935958862305
    10. ')' → logprob: -15.376935958862305

Token 98: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0005047772428952157
    2. ' n' → logprob: -8.000504493713379
    3. ' (' → logprob: -9.250504493713379
    4. 'n' → logprob: -9.750504493713379
    5. '(' → logprob: -11.125504493713379
    6. ' ' → logprob: -15.875504493713379
    7. '   ' → logprob: -16.375505447387695
    8. '	n' → logprob: -16.750505447387695
    9. '(int' → logprob: -17.125505447387695
    10. ',n' → logprob: -19.250505447387695

Token 99: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6341404318809509
    2. '):' → logprob: -0.7591404318809509
    3. '):
' → logprob: -7.634140491485596
    4. ' ):
' → logprob: -7.634140491485596
    5. ' ):' → logprob: -7.884140491485596
    6. '       ' → logprob: -9.259140014648438
    7. '   ' → logprob: -9.884140014648438
    8. ')' → logprob: -10.634140014648438
    9. ':' → logprob: -11.134140014648438
    10. '):

' → logprob: -12.884140014648438

Token 100: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010873435065150261
    2. '   ' → logprob: -4.760873317718506
    3. '       ' → logprob: -6.760873317718506
    4. ' line' → logprob: -8.135873794555664
    5. '
' → logprob: -9.010873794555664
    6. '```' → logprob: -9.135873794555664
    7. '            
' → logprob: -9.385873794555664
    8. '	       ' → logprob: -9.510873794555664
    9. '	   ' → logprob: -9.885873794555664
    10. '    
' → logprob: -9.885873794555664

Token 101: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.509652853012085
    2. ' line' → logprob: -1.009652853012085
    3. 'b' (adapté à ' b') → logprob: -4.259653091430664
    4. ' bi' → logprob: -4.634653091430664
    5. '           ' → logprob: -5.509653091430664
    6. ' buyer' → logprob: -5.759653091430664
    7. 'line' → logprob: -6.384653091430664
    8. ' parts' → logprob: -7.509653091430664
    9. ' bid' → logprob: -8.384653091430664
    10. ' data' → logprob: -8.384653091430664

Token 102: ',' (ID: 11)
  Prédit: '_i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.45569875836372375
    2. ',' → logprob: -1.0806987285614014
    3. '_,' → logprob: -4.7056989669799805
    4. 'i' → logprob: -4.8306989669799805
    5. ',k' → logprob: -5.7056989669799805
    6. ' ,' → logprob: -5.7056989669799805
    7. ',i' → logprob: -6.7056989669799805
    8. ',_' → logprob: -7.0806989669799805
    9. '_k' → logprob: -7.4556989669799805
    10. '_' → logprob: -8.70569896697998

Token 103: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.22546866536140442
    2. ' k' → logprob: -1.600468635559082
    3. ' ' → logprob: -11.725468635559082
    4. 'c' → logprob: -11.725468635559082
    5. 'p' → logprob: -12.225468635559082
    6. ' c' → logprob: -12.350468635559082
    7. ' p' → logprob: -12.475468635559082
    8. 'ki' → logprob: -12.725468635559082
    9. '_k' → logprob: -12.850468635559082
    10. ' t' → logprob: -13.162968635559082

Token 104: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5259906649589539
    2. ' =' → logprob: -0.9009906649589539
    3. ',' → logprob: -5.9009904861450195
    4. ' ' → logprob: -11.27599048614502
    5. '=int' → logprob: -11.27599048614502
    6. ')' → logprob: -11.40099048614502
    7. '    ' → logprob: -11.40099048614502
    8. '_' → logprob: -11.52599048614502
    9. '   ' → logprob: -11.90099048614502
    10. '<|end|>' → logprob: -12.02599048614502

Token 105: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.03804516792297363
    2. 'map' → logprob: -3.2880451679229736
    3. '	map' → logprob: -13.288044929504395
    4. '   ' → logprob: -14.163044929504395
    5. '    ' → logprob: -14.538044929504395
    6. ' ' → logprob: -14.538044929504395
    7. 'm' → logprob: -15.663044929504395
    8. '  ' → logprob: -16.66304588317871
    9. ' ' → logprob: -16.78804588317871
    10. ' input' → logprob: -17.03804588317871

Token 106: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -1.0325924449716695e-05
    2. 'int' → logprob: -12.37501049041748
    3. '(' → logprob: -12.62501049041748
    4. '[int' → logprob: -13.87501049041748
    5. ' (' → logprob: -14.25001049041748
    6. '<int' → logprob: -14.75001049041748
    7. '=int' → logprob: -15.00001049041748
    8. ',int' → logprob: -15.50001049041748
    9. ' int' → logprob: -16.000009536743164
    10. ']int' → logprob: -17.375009536743164

Token 107: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.2862667739391327
    2. ',input' → logprob: -1.786266803741455
    3. ',' → logprob: -2.536266803741455
    4. '(' → logprob: -6.661266803741455
    5. 'input' → logprob: -8.286266326904297
    6. '           ' → logprob: -8.661266326904297
    7. ' input' → logprob: -9.161266326904297
    8. ' (' → logprob: -9.286266326904297
    9. ' ,' → logprob: -9.411266326904297
    10. ')' → logprob: -9.411266326904297

Token 108: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.4740826487541199
    2. ' input' → logprob: -0.9740826487541199
    3. 'sys' → logprob: -13.474082946777344
    4. ')' → logprob: -13.599082946777344
    5. '(input' → logprob: -13.974082946777344
    6. ' sys' → logprob: -14.724082946777344
    7. '	input' → logprob: -14.724082946777344
    8. ' ' → logprob: -15.099082946777344
    9. 'line' → logprob: -15.224082946777344
    10. '   ' → logprob: -15.349082946777344

Token 109: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.5094070477061905e-05
    2. '()' → logprob: -11.125015258789062
    3. ' ().' → logprob: -15.250015258789062
    4. '(' → logprob: -17.500015258789062
    5. '())' → logprob: -17.875015258789062
    6. '()
' → logprob: -18.250015258789062
    7. ')' → logprob: -19.250015258789062
    8. '.readline' → logprob: -19.500015258789062
    9. ' ' → logprob: -20.750015258789062
    10. ' ()' → logprob: -20.875015258789062

Token 110: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0007135047344490886
    2. 'strip' → logprob: -7.250713348388672
    3. 'rstrip' → logprob: -13.000713348388672
    4. '(split' → logprob: -14.500713348388672
    5. ' split' → logprob: -14.750713348388672
    6. ')' → logprob: -14.750713348388672
    7. '_split' → logprob: -18.875713348388672
    8. '())' → logprob: -18.875713348388672
    9. 'spl' → logprob: -19.000713348388672
    10. '.split' → logprob: -19.000713348388672

Token 111: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4927801489830017
    2. '())' → logprob: -0.9927801489830017
    3. '()' → logprob: -3.9927802085876465
    4. '))' → logprob: -9.867779731750488
    5. '())
' → logprob: -11.117779731750488
    6. '()))' → logprob: -12.242779731750488
    7. ')
' → logprob: -12.617779731750488
    8. '(' → logprob: -12.867779731750488
    9. ' )' → logprob: -13.867779731750488
    10. ' ())' → logprob: -14.117779731750488

Token 112: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0027469811029732227
    2. '       ' → logprob: -6.377747058868408
    3. '<|end|>' → logprob: -7.627747058868408
    4. '
' → logprob: -8.50274658203125
    5. '            
' → logprob: -9.62774658203125
    6. ')' → logprob: -9.75274658203125
    7. '               ' → logprob: -10.00274658203125
    8. '<|end|>' → logprob: -10.12774658203125
    9. '   ' → logprob: -10.25274658203125
    10. ',' → logprob: -11.00274658203125

Token 113: ' buyer' (ID: 28061)
  Prédit: ' buyer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' buyer' → logprob: -0.7246991395950317
    2. 'buyer' (adapté à ' buyer') → logprob: -0.7246991395950317
    3. '           ' → logprob: -3.599699020385742
    4. '       ' → logprob: -5.974699020385742
    5. ' if' → logprob: -7.599699020385742
    6. '   ' → logprob: -8.349699020385742
    7. 'if' → logprob: -8.849699020385742
    8. 'b' → logprob: -9.599699020385742
    9. 'buy' → logprob: -10.099699020385742
    10. 'buyers' → logprob: -10.724699020385742

Token 114: '_info' (ID: 6744)
  Prédit: '_info'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_info' → logprob: -2.935296834039036e-06
    2. '_' → logprob: -13.25000286102295
    3. 's' → logprob: -14.25000286102295
    4. '_inf' → logprob: -15.87500286102295
    5. '_infos' → logprob: -16.375003814697266
    6. ' _' → logprob: -16.750003814697266
    7. '_s' → logprob: -17.250003814697266
    8. '_in' → logprob: -17.250003814697266
    9. '_i' → logprob: -17.375003814697266
    10. 'info' → logprob: -17.500003814697266

Token 115: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.0007059985073283315
    2. '[' → logprob: -7.375706195831299
    3. '[k' → logprob: -10.00070571899414
    4. '.setdefault' → logprob: -11.12570571899414
    5. ' [' → logprob: -11.62570571899414
    6. '[a' → logprob: -13.50070571899414
    7. 'b' → logprob: -14.00070571899414
    8. '[int' → logprob: -14.00070571899414
    9. '[c' → logprob: -14.12570571899414
    10. '[key' → logprob: -14.25070571899414

Token 116: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004810422658920288
    2. ']=' → logprob: -5.379810333251953
    3. '].' → logprob: -9.879810333251953
    4. ')]' → logprob: -10.254810333251953
    5. ' ]' → logprob: -10.379810333251953
    6. '])' → logprob: -10.754810333251953
    7. ']+=' → logprob: -10.879810333251953
    8. ')' → logprob: -11.004810333251953
    9. '][' → logprob: -12.879810333251953
    10. '[' → logprob: -13.254810333251953

Token 117: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11300885677337646
    2. ' =' → logprob: -2.238008975982666
    3. ']' → logprob: -8.988008499145508
    4. ']=' → logprob: -10.488008499145508
    5. '+=' → logprob: -10.863008499145508
    6. ' +=' → logprob: -11.863008499145508
    7. '[' → logprob: -13.488008499145508
    8. '.append' → logprob: -13.613008499145508
    9. ' ' → logprob: -14.238008499145508
    10. ')' → logprob: -14.238008499145508

Token 118: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.31619691848754883
    2. ' k' → logprob: -1.3161969184875488
    3. ' max' → logprob: -6.566196918487549
    4. 'max' → logprob: -6.566196918487549
    5. ' min' → logprob: -10.69119644165039
    6. 'min' → logprob: -10.94119644165039
    7. 'b' → logprob: -11.06619644165039
    8. '(k' → logprob: -11.06619644165039
    9. ' (' → logprob: -11.81619644165039
    10. ' ' → logprob: -12.25369644165039

Token 119: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.434922456741333
    2. '<|end|>' → logprob: -1.184922456741333
    3. '       ' → logprob: -3.184922456741333
    4. '        
' → logprob: -6.559922218322754
    5. '<|end|>' → logprob: -6.559922218322754
    6. '   ' → logprob: -6.684922218322754
    7. '    
' → logprob: -7.309922218322754
    8. '  
' → logprob: -8.934922218322754
    9. '\n' → logprob: -9.309922218322754
    10. '

' → logprob: -9.559922218322754

Token 120: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7642731666564941
    2. '       ' → logprob: -0.7642731666564941
    3. '<|end|>' → logprob: -2.764273166656494
    4. '        
' → logprob: -5.889273166656494
    5. '   ' → logprob: -6.639273166656494
    6. '```' → logprob: -8.139272689819336
    7. '#' → logprob: -8.264272689819336
    8. ' for' → logprob: -8.764272689819336
    9. '<|end|>' → logprob: -8.889272689819336
    10. '    
' → logprob: -9.014272689819336

Token 121: ' #' (ID: 1069)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.4239140748977661
    2. 'result' → logprob: -1.5489140748977661
    3. '#' (adapté à ' #') → logprob: -1.9239140748977661
    4. '       ' → logprob: -2.2989139556884766
    5. 'best' → logprob: -2.7989139556884766
    6. 'for' → logprob: -3.2989139556884766
    7. 'dp' → logprob: -3.5489139556884766
    8. 'results' → logprob: -3.7989139556884766
    9. 'prices' → logprob: -4.298913955688477
    10. 'total' → logprob: -4.673913955688477

Token 122: ' Lecture' (ID: 106534)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.4202995300292969
    2. 'max' → logprob: -1.7952995300292969
    3. 'result' → logprob: -1.7952995300292969
    4. 'best' → logprob: -2.545299530029297
    5. 'total' → logprob: -3.170299530029297
    6. 'res' → logprob: -3.170299530029297
    7. 'remaining' → logprob: -3.295299530029297
    8. 'results' → logprob: -3.670299530029297
    9. 'dp' → logprob: -3.795299530029297
    10. 'for' → logprob: -3.795299530029297

Token 123: ' du' (ID: 1462)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.11359492689371109
    2. 'des' → logprob: -2.9885950088500977
    3. '       ' → logprob: -3.2385950088500977
    4. ' de' → logprob: -4.738595008850098
    5. ' of' → logprob: -5.238595008850098
    6. ' du' → logprob: -6.363595008850098
    7. '   ' → logprob: -7.738595008850098
    8. '_des' → logprob: -8.488595008850098
    9. '#' → logprob: -8.738595008850098
    10. '(' → logprob: -8.863595008850098

Token 124: ' plan' (ID: 3496)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.8902961015701294
    2. ' m' → logprob: -1.8902961015701294
    3. ' budget' → logprob: -3.01529598236084
    4. 'M' → logprob: -3.26529598236084
    5. 'Q' → logprob: -3.51529598236084
    6. ' M' → logprob: -3.64029598236084
    7. 'prix' → logprob: -3.64029598236084
    8. ' nombre' → logprob: -3.89029598236084
    9. ' Q' → logprob: -4.07779598236084
    10. 'p' → logprob: -4.14029598236084

Token 125: ' s' (ID: 265)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.6751326322555542
    2. '       ' → logprob: -1.9251326322555542
    3. ' for' → logprob: -1.9251326322555542
    4. 'for' → logprob: -2.5501327514648438
    5. ' de' → logprob: -2.5501327514648438
    6. ' des' → logprob: -2.8001327514648438
    7. '   ' → logprob: -3.0501327514648438
    8. ' =' → logprob: -3.8001327514648438
    9. 'A' → logprob: -3.9251327514648438
    10. ' d' → logprob: -4.362632751464844

Token 126: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.35472702980041504
    2. 'paces' → logprob: -2.604727029800415
    3. '=' → logprob: -2.854727029800415
    4. 'pace' → logprob: -2.979727029800415
    5. 'tr' → logprob: -3.604727029800415
    6. '=[]' → logprob: -4.604726791381836
    7. 'e' → logprob: -4.604726791381836
    8. 't' → logprob: -5.229726791381836
    9. '```' → logprob: -5.479726791381836
    10. '_' → logprob: -5.729726791381836

Token 127: 'Y' (ID: 56)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1177918910980225
    2. 's' → logprob: -1.2427918910980225
    3. ' s' → logprob: -2.4927918910980225
    4. ')
' → logprob: -2.4927918910980225
    5. 'input' → logprob: -3.3677918910980225
    6. ' for' → logprob: -3.8677918910980225
    7. 'for' → logprob: -4.242792129516602
    8. '
' → logprob: -4.242792129516602
    9. ' input' → logprob: -4.742792129516602
    10. '):
' → logprob: -4.992792129516602

Token 128: ' lignes' (ID: 81687)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7909303903579712
    2. '+' → logprob: -1.2909303903579712
    3. ' =' → logprob: -3.0409302711486816
    4. ' +' → logprob: -3.2909302711486816
    5. '=' → logprob: -4.040930271148682
    6. ',' → logprob: -4.290930271148682
    7. 's' → logprob: -4.290930271148682
    8. '
' → logprob: -4.415930271148682
    9. 'x' → logprob: -4.665930271148682
    10. 'paces' → logprob: -4.665930271148682

Token 129: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20569674670696259
    2. '       ' → logprob: -2.7056968212127686
    3. ',' → logprob: -3.0806968212127686
    4. '):' → logprob: -3.0806968212127686
    5. '):
' → logprob: -4.4556965827941895
    6. '   ' → logprob: -5.3306965827941895
    7. 's' → logprob: -6.4556965827941895
    8. 'for' → logprob: -6.5806965827941895
    9. '<|end|>' → logprob: -6.7056965827941895
    10. ').' → logprob: -7.3306965827941895

Token 130: ' X' (ID: 2127)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' code' → logprob: -0.19358192384243011
    2. 'code' → logprob: -2.4435818195343018
    3. 's' → logprob: -3.3185818195343018
    4. ' s' → logprob: -3.8185818195343018
    5. ' codes' → logprob: -4.693582057952881
    6. 'codes' → logprob: -4.943582057952881
    7. 'str' → logprob: -5.318582057952881
    8. ' input' → logprob: -6.568582057952881
    9. ' texte' → logprob: -6.693582057952881
    10. ' strings' → logprob: -6.693582057952881

Token 131: ' cases' (ID: 7911)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3697437047958374
    2. ' spaces' → logprob: -1.7447437047958374
    3. ' espaces' → logprob: -1.8697437047958374
    4. ' code' → logprob: -1.9947437047958374
    5. ' caractères' → logprob: -2.494743824005127
    6. 'spaces' → logprob: -3.369743824005127
    7. ' )' → logprob: -3.369743824005127
    8. ' codes' → logprob: -3.619743824005127
    9. ' characters' → logprob: -3.994743824005127
    10. '+' → logprob: -4.619743824005127

Token 132: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07392926514148712
    2. '):' → logprob: -3.0739293098449707
    3. '):
' → logprob: -4.573929309844971
    4. ')
' → logprob: -4.573929309844971
    5. '       ' → logprob: -6.323929309844971
    6. ' )' → logprob: -7.573929309844971
    7. 'each' → logprob: -7.823929309844971
    8. ' each' → logprob: -8.073928833007812
    9. '           ' → logprob: -8.198928833007812
    10. ',' → logprob: -8.323928833007812

Token 133: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010172381065785885
    2. '
' → logprob: -4.885172367095947
    3. 's' → logprob: -7.135172367095947
    4. ' for' → logprob: -7.510172367095947
    5. '<|end|>' → logprob: -8.010172843933105
    6. ' s' → logprob: -8.260172843933105
    7. 'for' → logprob: -8.385172843933105
    8. '        
' → logprob: -8.885172843933105
    9. '   ' → logprob: -9.135172843933105
    10. ',' → logprob: -9.885172843933105

Token 134: ' #' (ID: 1069)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8707464933395386
    2. 'plan' → logprob: -1.4957464933395386
    3. ' plan' → logprob: -1.6207464933395386
    4. ' s' → logprob: -1.8707464933395386
    5. ' grid' → logprob: -6.995746612548828
    6. 'grid' → logprob: -7.120746612548828
    7. '   ' → logprob: -8.120746612548828
    8. 'plans' → logprob: -8.495746612548828
    9. 'price' → logprob: -8.620746612548828
    10. 'stock' → logprob: -8.620746612548828

Token 135: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7284066081047058
    2. ' s' → logprob: -1.1034066677093506
    3. ' plan' → logprob: -2.2284066677093506
    4. 'plan' → logprob: -2.7284066677093506
    5. ' grid' → logprob: -5.1034064292907715
    6. 'grid' → logprob: -6.2284064292907715
    7. '   ' → logprob: -7.2284064292907715
    8. 'for' → logprob: -7.6034064292907715
    9. ' for' → logprob: -7.8534064292907715
    10. '       ' → logprob: -8.10340690612793

Token 136: '[y' (ID: 34551)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5235829949378967
    2. '=' → logprob: -0.8985829949378967
    3. '=[]' → logprob: -8.14858341217041
    4. '_lines' → logprob: -10.27358341217041
    5. '=[]
' → logprob: -10.27358341217041
    6. 'quares' → logprob: -10.77358341217041
    7. 'paces' → logprob: -10.89858341217041
    8. '_rows' → logprob: -11.27358341217041
    9. ' ' → logprob: -12.02358341217041
    10. '_plan' → logprob: -12.14858341217041

Token 137: '][' (ID: 2696)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03564930707216263
    2. '][' → logprob: -4.785649299621582
    3. ' =' → logprob: -4.785649299621582
    4. ')' → logprob: -5.285649299621582
    5. ']=' → logprob: -5.285649299621582
    6. '=' → logprob: -6.285649299621582
    7. ',' → logprob: -6.785649299621582
    8. '][]' → logprob: -6.910649299621582
    9. 'y' → logprob: -7.410649299621582
    10. 'for' → logprob: -7.535649299621582

Token 138: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.000993272173218429
    2. ']' → logprob: -7.125993251800537
    3. '0' → logprob: -9.125993728637695
    4. ' x' → logprob: -10.250993728637695
    5. '][' → logprob: -11.875993728637695
    6. 'y' → logprob: -12.625993728637695
    7. '<|end|>' → logprob: -12.750993728637695
    8. ']>' → logprob: -13.000993728637695
    9. ''x' → logprob: -13.000993728637695
    10. 'X' → logprob: -13.000993728637695

Token 139: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0010550802107900381
    2. ' ]' → logprob: -7.2510552406311035
    3. ']=' → logprob: -8.251054763793945
    4. '][' → logprob: -10.751054763793945
    5. ' =' → logprob: -11.126054763793945
    6. '=' → logprob: -11.251054763793945
    7. ')' → logprob: -11.876054763793945
    8. '   ' → logprob: -12.376054763793945
    9. '])' → logprob: -12.376054763793945
    10. '].' → logprob: -12.751054763793945

Token 140: ' correspond' (ID: 11095)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2520182132720947
    2. '=' → logprob: -1.5020182132720947
    3. ' =
' → logprob: -10.752017974853516
    4. 's' → logprob: -10.877017974853516
    5. '=[]' → logprob: -10.877017974853516
    6. '=[]
' → logprob: -11.252017974853516
    7. '       ' → logprob: -11.877017974853516
    8. '=
' → logprob: -12.877017974853516
    9. ' s' → logprob: -13.002017974853516
    10. '   ' → logprob: -13.877017974853516

Token 141: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.28171011805534363
    2. ' to' → logprob: -2.031710147857666
    3. 'to' → logprob: -2.906710147857666
    4. 'à' → logprob: -4.156710147857666
    5. ' au' → logprob: -4.531710147857666
    6. 'ra' → logprob: -4.656710147857666
    7. 'a' → logprob: -4.906710147857666
    8. 'au' → logprob: -5.531710147857666
    9. ' a' → logprob: -5.906710147857666
    10. '=' → logprob: -6.031710147857666

Token 142: ' la' (ID: 557)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4894982576370239
    2. 'input' → logprob: -2.3644981384277344
    3. '0' → logprob: -2.4894981384277344
    4. 'False' → logprob: -3.2394981384277344
    5. ''s' → logprob: -3.2394981384277344
    6. '[]' → logprob: -3.6144981384277344
    7. 's' → logprob: -3.8644981384277344
    8. 'list' → logprob: -3.8644981384277344
    9. '[int' → logprob: -4.239498138427734
    10. 'True' → logprob: -4.364498138427734

Token 143: ' case' (ID: 1890)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.6631356477737427
    2. 'case' → logprob: -1.6631356477737427
    3. 'ligne' → logprob: -2.538135528564453
    4. 'plan' → logprob: -2.788135528564453
    5. 'input' → logprob: -2.913135528564453
    6. 's' → logprob: -3.038135528564453
    7. 'car' → logprob: -3.288135528564453
    8. 'y' → logprob: -3.413135528564453
    9. 'position' → logprob: -3.538135528564453
    10. 'nombre' → logprob: -3.788135528564453

Token 144: ' (' (ID: 350)
  Prédit: '[y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.3590739667415619
    2. ' =' → logprob: -2.8590738773345947
    3. ' [' → logprob: -2.8590738773345947
    4. '[' → logprob: -2.9840738773345947
    5. 's' → logprob: -3.2340738773345947
    6. ' s' → logprob: -3.6090738773345947
    7. ' y' → logprob: -3.7340738773345947
    8. ' at' → logprob: -4.859074115753174
    9. '[x' → logprob: -5.359074115753174
    10. ',' → logprob: -5.359074115753174

Token 145: 'x' (ID: 87)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.9814444184303284
    2. 'x' → logprob: -1.2314443588256836
    3. 'y' → logprob: -1.7314443588256836
    4. ' x' → logprob: -1.8564443588256836
    5. ' ' → logprob: -10.606444358825684
    6. ')' → logprob: -10.731444358825684
    7. '	y' → logprob: -11.356444358825684
    8. ')x' → logprob: -12.106444358825684
    9. ')y' → logprob: -12.231444358825684
    10. ' (' → logprob: -12.606444358825684

Token 146: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.028260959312319756
    2. ',y' → logprob: -3.6532609462738037
    3. ' ,' → logprob: -7.028261184692383
    4. '+' → logprob: -7.153261184692383
    5. ')' → logprob: -9.528261184692383
    6. ',
' → logprob: -9.653261184692383
    7. '=' → logprob: -10.028261184692383
    8. ' +' → logprob: -10.778261184692383
    9. '+,' → logprob: -11.028261184692383
    10. 'y' → logprob: -11.153261184692383

Token 147: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008266602526418865
    2. '),' → logprob: -8.125826835632324
    3. ')
' → logprob: -8.125826835632324
    4. ' )' → logprob: -8.750826835632324
    5. ',' → logprob: -10.750826835632324
    6. ').' → logprob: -11.375826835632324
    7. ')y' → logprob: -12.000826835632324
    8. '[' → logprob: -12.250826835632324
    9. ')[' → logprob: -12.375826835632324
    10. ')

' → logprob: -12.625826835632324

Token 148: ' avec' (ID: 3937)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007634900975972414
    2. ' s' → logprob: -5.632635116577148
    3. 's' → logprob: -5.757635116577148
    4. ',' → logprob: -8.382635116577148
    5. ' =' → logprob: -8.382635116577148
    6. '<|end|>' → logprob: -8.632635116577148
    7. '   ' → logprob: -9.757635116577148
    8. '        
' → logprob: -9.882635116577148
    9. '=' → logprob: -11.257635116577148
    10. ')' → logprob: -11.257635116577148

Token 149: ' x' (ID: 1215)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.08615559339523315
    2. 'y' → logprob: -2.586155652999878
    3. '0' → logprob: -5.586155414581299
    4. ' ' → logprob: -6.711155414581299
    5. ' x' → logprob: -6.836155414581299
    6. 'x' → logprob: -6.961155414581299
    7. 's' → logprob: -10.836155891418457
    8. '1' → logprob: -10.836155891418457
    9. ' indices' → logprob: -11.211155891418457
    10. ' range' → logprob: -11.211155891418457

Token 150: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04917348548769951
    2. ' =' → logprob: -3.424173593521118
    3. ' in' → logprob: -4.424173355102539
    4. ' ranging' → logprob: -6.674173355102539
    5. '<|end|>' → logprob: -7.299173355102539
    6. ',' → logprob: -7.674173355102539
    7. ')' → logprob: -8.424173355102539
    8. 'in' → logprob: -8.424173355102539
    9. 'from' → logprob: -9.174173355102539
    10. ' from' → logprob: -10.049173355102539

Token 151: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00020985817536711693
    2. ' ' → logprob: -8.50020980834961
    3. 'range' → logprob: -12.25020980834961
    4. ' range' → logprob: -13.75020980834961
    5. '1' → logprob: -15.12520980834961
    6. 's' → logprob: -16.25020980834961
    7. '[' → logprob: -16.75020980834961
    8. '#' → logprob: -17.50020980834961
    9. '=' → logprob: -17.62520980834961
    10. '```' → logprob: -17.87520980834961

Token 152: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.7159857786027715e-05
    2. ' ' → logprob: -10.250046730041504
    3. '<|end|>' → logprob: -12.750046730041504
    4. '1' → logprob: -12.875046730041504
    5. '[' → logprob: -13.375046730041504
    6. 'g' → logprob: -13.875046730041504
    7. 'range' → logprob: -14.000046730041504
    8. ' gauche' → logprob: -14.625046730041504
    9. 'dro' → logprob: -15.000046730041504
    10. 'left' → logprob: -15.000046730041504

Token 153: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.059311095625162125
    2. 'à' → logprob: -3.3093111515045166
    3. ' to' → logprob: -5.1843109130859375
    4. ' ' → logprob: -6.0593109130859375
    5. '       ' → logprob: -6.1843109130859375
    6. '```' → logprob: -6.3093109130859375
    7. 'to' → logprob: -6.4343109130859375
    8. '=' → logprob: -6.9343109130859375
    9. '   ' → logprob: -7.0593109130859375
    10. ',' → logprob: -7.0593109130859375

Token 154: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.003180563682690263
    2. ' X' → logprob: -5.753180503845215
    3. '(X' → logprob: -13.003180503845215
    4. 'x' → logprob: -16.12818145751953
    5. '   ' → logprob: -16.25318145751953
    6. '	X' → logprob: -16.37818145751953
    7. ' ' → logprob: -16.87818145751953
    8. '<X' → logprob: -16.87818145751953
    9. '>X' → logprob: -17.25318145751953
    10. ' (' → logprob: -17.37818145751953

Token 155: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0012769035529345274
    2. ' -' → logprob: -6.751276969909668
    3. '       ' → logprob: -9.626276969909668
    4. ')' → logprob: -11.376276969909668
    5. '```' → logprob: -12.501276969909668
    6. '+' → logprob: -12.626276969909668
    7. '-
' → logprob: -12.626276969909668
    8. '−' → logprob: -12.751276969909668
    9. '–' → logprob: -12.876276969909668
    10. '   ' → logprob: -13.126276969909668

Token 156: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00041637211688794196
    2. ' ' → logprob: -8.75041675567627
    3. '-' → logprob: -9.37541675567627
    4. '```' → logprob: -10.00041675567627
    5. '19' → logprob: -10.12541675567627
    6. '   ' → logprob: -10.25041675567627
    7. '9' → logprob: -10.75041675567627
    8. '       ' → logprob: -11.75041675567627
    9. '``' → logprob: -12.75041675567627
    10. '0' → logprob: -13.00041675567627

Token 157: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0814133957028389
    2. '<|end|>' → logprob: -2.706413507461548
    3. ',' → logprob: -5.081413269042969
    4. 's' → logprob: -6.206413269042969
    5. ' s' → logprob: -6.831413269042969
    6. '<|end|>' → logprob: -7.581413269042969
    7. '        
' → logprob: -7.831413269042969
    8. '   ' → logprob: -7.956413269042969
    9. '
' → logprob: -8.706413269042969
    10. ')' → logprob: -9.081413269042969

Token 158: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.35282620787620544
    2. 'y' → logprob: -1.2278262376785278
    3. ' and' → logprob: -6.352826118469238
    4. ' et' → logprob: -6.602826118469238
    5. 'et' → logprob: -7.727826118469238
    6. 'and' → logprob: -8.102826118469238
    7. '<|end|>' → logprob: -9.227826118469238
    8. '0' → logprob: -9.352826118469238
    9. '       ' → logprob: -9.727826118469238
    10. ' ' → logprob: -9.977826118469238

Token 159: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6008132696151733
    2. '=' → logprob: -1.8508132696151733
    3. 'de' → logprob: -1.9758132696151733
    4. 'from' → logprob: -2.100813388824463
    5. ' from' → logprob: -4.100813388824463
    6. ' =' → logprob: -4.475813388824463
    7. '<|end|>' → logprob: -5.475813388824463
    8. ' allant' → logprob: -8.225812911987305
    9. ' ' → logprob: -8.475812911987305
    10. ')' → logprob: -8.475812911987305

Token 160: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00041113083716481924
    2. ' ' → logprob: -8.000411033630371
    3. 'range' → logprob: -10.125411033630371
    4. ' range' → logprob: -10.250411033630371
    5. 'Y' → logprob: -15.875411033630371
    6. '1' → logprob: -17.250411987304688
    7. ' y' → logprob: -17.375411987304688
    8. 'y' → logprob: -17.500411987304688
    9. ' Y' → logprob: -18.000411987304688
    10. '[' → logprob: -18.750411987304688

Token 161: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002585170092061162
    2. 'Y' → logprob: -6.002584934234619
    3. ' ' → logprob: -9.752585411071777
    4. 'range' → logprob: -10.377585411071777
    5. ' Y' → logprob: -11.502585411071777
    6. ' range' → logprob: -11.627585411071777
    7. 'y' → logprob: -14.502585411071777
    8. '1' → logprob: -15.127585411071777
    9. '(Y' → logprob: -16.00258445739746
    10. ' y' → logprob: -16.50258445739746

Token 162: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.3903543949127197
    2. 'à' → logprob: -1.1403543949127197
    3. ' to' → logprob: -7.015354156494141
    4. ' ' → logprob: -7.265354156494141
    5. 'to' → logprob: -7.390354156494141
    6. 'a' → logprob: -8.01535415649414
    7. ' a' → logprob: -8.51535415649414
    8. '```' → logprob: -8.51535415649414
    9. ''à' → logprob: -9.14035415649414
    10. ' ' → logprob: -9.14035415649414

Token 163: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.003179259831085801
    2. ' Y' → logprob: -5.75317907333374
    3. '	Y' → logprob: -14.628179550170898
    4. '
' → logprob: -15.128179550170898
    5. '   ' → logprob: -15.503179550170898
    6. ' ' → logprob: -15.503179550170898
    7. 'y' → logprob: -16.5031795501709
    8. '(Y' → logprob: -16.5031795501709
    9. ' ' → logprob: -17.2531795501709
    10. '```' → logprob: -18.1281795501709

Token 164: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -9.491498531133402e-06
    2. ' -' → logprob: -11.625009536743164
    3. '1' → logprob: -14.875009536743164
    4. '```' → logprob: -16.625009536743164
    5. '
' → logprob: -16.875009536743164
    6. '-
' → logprob: -17.500009536743164
    7. '0' → logprob: -18.750009536743164
    8. ')' → logprob: -18.750009536743164
    9. ')-' → logprob: -19.000009536743164
    10. '=' → logprob: -19.000009536743164

Token 165: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.500001907348633
    3. '-' → logprob: -15.375001907348633
    4. '```' → logprob: -16.250001907348633
    5. '2' → logprob: -16.875001907348633
    6. '0' → logprob: -17.000001907348633
    7. '<|end|>' → logprob: -17.312501907348633
    8. '１' → logprob: -17.500001907348633
    9. '۱' → logprob: -17.812501907348633
    10. '(' → logprob: -17.812501907348633

Token 166: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16138538718223572
    2. 's' → logprob: -1.911385416984558
    3. ' s' → logprob: -7.161385536193848
    4. '<|end|>' → logprob: -8.786385536193848
    5. '   ' → logprob: -8.911385536193848
    6. '        
' → logprob: -9.661385536193848
    7. '```' → logprob: -12.036385536193848
    8. '
' → logprob: -12.536385536193848
    9. ',' → logprob: -12.911385536193848
    10. '`s' → logprob: -13.286385536193848

Token 167: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09358032792806625
    2. 's' → logprob: -2.4685802459716797
    3. ' s' → logprob: -5.46858024597168
    4. '   ' → logprob: -8.21858024597168
    5. '<|end|>' → logprob: -9.59358024597168
    6. '        
' → logprob: -10.84358024597168
    7. ' ' → logprob: -11.96858024597168
    8. ',' → logprob: -12.09358024597168
    9. '	s' → logprob: -12.34358024597168
    10. '
' → logprob: -12.34358024597168

Token 168: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.012373910285532475
    2. ' s' → logprob: -4.637373924255371
    3. '       ' → logprob: -6.012373924255371
    4. '   ' → logprob: -8.762373924255371
    5. ' ' → logprob: -12.637373924255371
    6. '	s' → logprob: -14.012373924255371
    7. '```' → logprob: -14.137373924255371
    8. '_s' → logprob: -14.324873924255371
    9. '  ' → logprob: -14.762373924255371
    10. ' ' → logprob: -14.824873924255371

Token 169: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029832525178790092
    2. '=' → logprob: -3.529832601547241
    3. '=[]' → logprob: -9.52983283996582
    4. '[]' → logprob: -13.40483283996582
    5. 's' → logprob: -13.77983283996582
    6. ',' → logprob: -13.77983283996582
    7. '[' → logprob: -13.90483283996582
    8. '=[]
' → logprob: -14.15483283996582
    9. ' =
' → logprob: -14.15483283996582
    10. ' =[' → logprob: -14.15483283996582

Token 170: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3021734654903412
    2. '[]' → logprob: -2.052173376083374
    3. ' [' → logprob: -2.302173376083374
    4. ' []' → logprob: -3.552173376083374
    5. '[s' → logprob: -5.927173614501953
    6. '[int' → logprob: -8.302173614501953
    7. '[list' → logprob: -9.177173614501953
    8. '[]
' → logprob: -9.677173614501953
    9. '[str' → logprob: -9.802173614501953
    10. '[line' → logprob: -9.927173614501953

Token 171: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.02089487761259079
    2. 'input' → logprob: -3.895894765853882
    3. ' list' → logprob: -8.020895004272461
    4. '[input' → logprob: -11.145895004272461
    5. ' input' → logprob: -12.145895004272461
    6. '[list' → logprob: -12.770895004272461
    7. '[' → logprob: -14.270895004272461
    8. '[]' → logprob: -15.270895004272461
    9. '(list' → logprob: -15.770895004272461
    10. ']' → logprob: -16.14589500427246

Token 172: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.003241881961002946
    2. '(input' → logprob: -5.753242015838623
    3. 'map' → logprob: -10.003241539001465
    4. '(' → logprob: -11.128241539001465
    5. 'input' → logprob: -13.378241539001465
    6. '(int' → logprob: -13.878241539001465
    7. '()' → logprob: -14.378241539001465
    8. ']' → logprob: -15.128241539001465
    9. '(sys' → logprob: -15.128241539001465
    10. ' map' → logprob: -15.753241539001465

Token 173: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -7.743758760625497e-05
    2. '(str' → logprob: -9.875077247619629
    3. ')' → logprob: -11.250077247619629
    4. 'int' → logprob: -12.000077247619629
    5. '(' → logprob: -12.500077247619629
    6. '(lambda' → logprob: -13.500077247619629
    7. ',int' → logprob: -14.500077247619629
    8. '(
' → logprob: -15.250077247619629
    9. '=int' → logprob: -15.500077247619629
    10. 'str' → logprob: -15.625077247619629

Token 174: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.31393975019454956
    2. ',' → logprob: -1.3139398097991943
    3. '(input' → logprob: -7.313939571380615
    4. 'input' → logprob: -12.313940048217773
    5. ' ,' → logprob: -12.813940048217773
    6. ',int' → logprob: -13.688940048217773
    7. '(' → logprob: -13.813940048217773
    8. ',in' → logprob: -14.938940048217773
    9. ',list' → logprob: -14.938940048217773
    10. ',
' → logprob: -15.188940048217773

Token 175: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.008627460338175297
    2. ' input' → logprob: -4.758627414703369
    3. 'sys' → logprob: -11.883627891540527
    4. '(input' → logprob: -13.133627891540527
    5. ')' → logprob: -13.883627891540527
    6. '   ' → logprob: -14.008627891540527
    7. ',input' → logprob: -14.133627891540527
    8. ' sys' → logprob: -14.758627891540527
    9. ' ' → logprob: -14.883627891540527
    10. '	input' → logprob: -15.758627891540527

Token 176: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.842555426876061e-06
    2. '()' → logprob: -12.875004768371582
    3. ' ().' → logprob: -14.125004768371582
    4. '.' → logprob: -14.500004768371582
    5. '.readline' → logprob: -14.750004768371582
    6. '   ' → logprob: -15.375004768371582
    7. ' .' → logprob: -15.750004768371582
    8. 'input' → logprob: -17.8750057220459
    9. '.split' → logprob: -18.0000057220459
    10. '()
' → logprob: -18.2500057220459

Token 177: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0011779663618654013
    2. 'strip' → logprob: -6.751177787780762
    3. 'rstrip' → logprob: -12.001177787780762
    4. ' split' → logprob: -13.376177787780762
    5. 'read' → logprob: -17.001178741455078
    6. 'spl' → logprob: -18.501178741455078
    7. '(split' → logprob: -18.876178741455078
    8. ' strip' → logprob: -19.126178741455078
    9. '   ' → logprob: -20.501178741455078
    10. ' ' → logprob: -21.251178741455078

Token 178: '()))' (ID: 16829)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.3962602913379669
    2. '()))' → logprob: -1.1462602615356445
    3. '()' → logprob: -4.8962602615356445
    4. '(' → logprob: -7.5212602615356445
    5. '(input' → logprob: -7.8962602615356445
    6. '(line' → logprob: -8.396260261535645
    7. ')' → logprob: -8.396260261535645
    8. '())' → logprob: -9.021260261535645
    9. ' ))' → logprob: -9.521260261535645
    10. '(s' → logprob: -9.646260261535645

Token 179: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7058328986167908
    2. '()' → logprob: -0.9558328986167908
    3. ' for' → logprob: -2.2058329582214355
    4. ')' → logprob: -4.4558329582214355
    5. '	for' → logprob: -10.830832481384277
    6. '())' → logprob: -11.705832481384277
    7. '   ' → logprob: -12.205832481384277
    8. ']' → logprob: -13.080832481384277
    9. ' ' → logprob: -13.580832481384277
    10. '()]' → logprob: -13.580832481384277

Token 180: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.10034382343292236
    2. 'range' → logprob: -2.350343704223633
    3. '_' → logprob: -9.475343704223633
    4. '(range' → logprob: -10.225343704223633
    5. ' in' → logprob: -10.975343704223633
    6. '_range' → logprob: -12.600343704223633
    7. ' _' → logprob: -13.100343704223633
    8. '	range' → logprob: -14.100343704223633
    9. ' xrange' → logprob: -14.350343704223633
    10. 'in' → logprob: -16.225343704223633

Token 181: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005262218415737152
    2. ' range' → logprob: -5.25526237487793
    3. 'in' → logprob: -11.38026237487793
    4. ' in' → logprob: -11.50526237487793
    5. '(range' → logprob: -11.88026237487793
    6. '	range' → logprob: -16.75526237487793
    7. '.range' → logprob: -19.00526237487793
    8. ' ' → logprob: -19.13026237487793
    9. '  ' → logprob: -19.25526237487793
    10. 'Y' → logprob: -19.38026237487793

Token 182: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.003177952254191041
    2. ' range' → logprob: -5.753178119659424
    3. '(range' → logprob: -15.253177642822266
    4. '	range' → logprob: -18.003177642822266
    5. '   ' → logprob: -18.628177642822266
    6. ' ' → logprob: -19.253177642822266
    7. 'rang' → logprob: -19.878177642822266
    8. 'Y' → logprob: -20.253177642822266
    9. '[' → logprob: -20.253177642822266
    10. '  ' → logprob: -20.503177642822266

Token 183: '(Y' (ID: 44341)
  Prédit: '(Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Y' → logprob: -0.00016921341011766344
    2. 'Y' → logprob: -8.875168800354004
    3. '(' → logprob: -10.625168800354004
    4. '(X' → logprob: -13.250168800354004
    5. ' (' → logprob: -13.750168800354004
    6. ' Y' → logprob: -14.125168800354004
    7. 'range' → logprob: -14.625168800354004
    8. '(y' → logprob: -14.875168800354004
    9. '(
' → logprob: -16.00016975402832
    10. '   ' → logprob: -16.25016975402832

Token 184: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -5.073596548754722e-05
    2. ')' → logprob: -10.12505054473877
    3. ']' → logprob: -11.75005054473877
    4. ' )' → logprob: -13.25005054473877
    5. ')]
' → logprob: -15.37505054473877
    6. '   ' → logprob: -15.75005054473877
    7. ')],' → logprob: -16.000051498413086
    8. ' ' → logprob: -16.125051498413086
    9. ')}' → logprob: -16.625051498413086
    10. '))' → logprob: -16.625051498413086

Token 185: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09090696275234222
    2. '
' → logprob: -3.215906858444214
    3. '<|end|>' → logprob: -4.090907096862793
    4. '        
' → logprob: -4.340907096862793
    5. '   ' → logprob: -5.465907096862793
    6. '#' → logprob: -5.715907096862793
    7. 'for' → logprob: -6.340907096862793
    8. 'total' → logprob: -6.465907096862793
    9. 'max' → logprob: -6.840907096862793
    10. 'price' → logprob: -7.215907096862793

Token 186: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.5086191892623901
    2. '#' (adapté à ' #') → logprob: -1.6336191892623901
    3. 'max' → logprob: -1.6336191892623901
    4. 'result' → logprob: -3.0086193084716797
    5. 'total' → logprob: -3.0086193084716797
    6. 'profit' → logprob: -3.1336193084716797
    7. 'valid' → logprob: -3.5086193084716797
    8. 'best' → logprob: -3.6336193084716797
    9. 'res' → logprob: -4.13361930847168
    10. 'possible' → logprob: -4.25861930847168

Token 187: ' Const' (ID: 19594)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.49056339263916016
    2. 'max' → logprob: -2.36556339263916
    3. 'dp' → logprob: -2.74056339263916
    4. 'total' → logprob: -3.11556339263916
    5. 'best' → logprob: -3.61556339263916
    6. 'result' → logprob: -3.86556339263916
    7. 'for' → logprob: -3.99056339263916
    8. 're' → logprob: -4.11556339263916
    9. 'profit' → logprob: -5.36556339263916
    10. 'remaining' → logprob: -5.49056339263916

Token 188: 'antes' (ID: 5193)
  Prédit: 'ant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ant' → logprob: -1.341073751449585
    2. 'ants' → logprob: -1.341073751449585
    3. 'raints' → logprob: -1.466073751449585
    4. '#' → logprob: -2.716073751449585
    5. 'raint' → logprob: -3.341073751449585
    6. 's' → logprob: -3.591073751449585
    7. 'ru' → logprob: -3.716073751449585
    8. 'st' → logprob: -4.341073989868164
    9. 'r' → logprob: -4.341073989868164
    10. 'ra' → logprob: -4.591073989868164

Token 189: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.500001847743988
    2. ' ' → logprob: -1.8750019073486328
    3. 'MAX' → logprob: -2.375001907348633
    4. '=' → logprob: -2.750001907348633
    5. ' MAX' → logprob: -3.250001907348633
    6. 'TOTAL' → logprob: -5.125001907348633
    7. '    ' → logprob: -5.250001907348633
    8. 'M' → logprob: -5.375001907348633
    9. ' M' → logprob: -5.750001907348633
    10. 'INF' → logprob: -6.125001907348633

Token 190: '       ' (ID: 309)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.2926955223083496
    2. '    ' → logprob: -1.6676955223083496
    3. 'MAX' → logprob: -1.9176955223083496
    4. ' ' → logprob: -2.1676955223083496
    5. '   ' → logprob: -2.6676955223083496
    6. ' MAX' → logprob: -3.1676955223083496
    7. 'max' → logprob: -4.29269552230835
    8. '=' → logprob: -4.29269552230835
    9. 'M' → logprob: -4.41769552230835
    10. '_MAX' → logprob: -4.41769552230835

Token 191: ' INF' (ID: 69196)
  Prédit: 'INF'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INF' (adapté à ' INF') → logprob: -0.9675124287605286
    2. 'MAX' → logprob: -1.0925123691558838
    3. 'MOD' → logprob: -3.092512369155884
    4. ' INF' → logprob: -3.217512369155884
    5. 'M' → logprob: -3.467512369155884
    6. ' MAX' → logprob: -3.842512369155884
    7. 'max' → logprob: -4.467512607574463
    8. 'PRICE' → logprob: -4.592512607574463
    9. 'MIN' → logprob: -5.155012607574463
    10. 'import' → logprob: -5.155012607574463

Token 192: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016036011278629303
    2. '=' → logprob: -4.141036033630371
    3. '=int' → logprob: -14.766036033630371
    4. ' =
' → logprob: -15.141036033630371
    5. '   ' → logprob: -15.391036033630371
    6. ',' → logprob: -15.516036033630371
    7. ' ' → logprob: -15.516036033630371
    8. ')' → logprob: -15.891036033630371
    9. '  ' → logprob: -16.141035079956055
    10. '_' → logprob: -16.141035079956055

Token 193: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.7292892932891846
    2. ' ' → logprob: -1.2292892932891846
    3. 'float' → logprob: -1.9792892932891846
    4. ' float' → logprob: -2.4792892932891846
    5. 'int' → logprob: -6.2292890548706055
    6. ' int' → logprob: -7.3542890548706055
    7. '1' → logprob: -7.9792890548706055
    8. '100' → logprob: -8.229289054870605
    9. '999' → logprob: -11.229289054870605
    10. '   ' → logprob: -11.354289054870605

Token 194: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.08165479451417923
    2. 'float' → logprob: -2.5816547870635986
    3. 'int' → logprob: -6.206655025482178
    4. '100' → logprob: -7.831655025482178
    5. '1' → logprob: -8.33165454864502
    6. '999' → logprob: -9.95665454864502
    7. ' float' → logprob: -10.70665454864502
    8. ' ' → logprob: -10.83165454864502
    9. '-' → logprob: -12.45665454864502
    10. '987' → logprob: -13.20665454864502

Token 195: '**' (ID: 410)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.004581076558679342
    2. '10' → logprob: -6.129580974578857
    3. '18' → logprob: -6.754580974578857
    4. '6' → logprob: -8.004581451416016
    5. '12' → logprob: -8.004581451416016
    6. '8' → logprob: -8.254581451416016
    7. '7' → logprob: -8.629581451416016
    8. '15' → logprob: -9.254581451416016
    9. '09' → logprob: -11.879581451416016
    10. '```' → logprob: -12.379581451416016

Token 196: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.006807972211390734
    2. '15' → logprob: -5.631807804107666
    3. '18' → logprob: -6.506807804107666
    4. '10' → logprob: -6.631807804107666
    5. '12' → logprob: -8.131808280944824
    6. '7' → logprob: -10.256808280944824
    7. '6' → logprob: -10.881808280944824
    8. '14' → logprob: -11.131808280944824
    9. '8' → logprob: -11.631808280944824
    10. '16' → logprob: -11.631808280944824

Token 197: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0664786770939827
    2. '<|end|>' → logprob: -3.566478729248047
    3. '       ' → logprob: -3.941478729248047
    4. '        
' → logprob: -4.691478729248047
    5. 'dp' → logprob: -6.941478729248047
    6. '    
' → logprob: -7.066478729248047
    7. '
' → logprob: -7.066478729248047
    8. '   ' → logprob: -7.316478729248047
    9. '

' → logprob: -7.691478729248047
    10. 'for' → logprob: -7.941478729248047

Token 198: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03405435010790825
    2. '   ' → logprob: -3.7840542793273926
    3. '        
' → logprob: -5.409054279327393
    4. 'dp' → logprob: -6.034054279327393
    5. '
' → logprob: -6.784054279327393
    6. '<|end|>' → logprob: -7.284054279327393
    7. '    
' → logprob: -7.659054279327393
    8. '#' → logprob: -8.15905475616455
    9. 'max' → logprob: -8.28405475616455
    10. '    ' → logprob: -8.28405475616455

Token 199: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.08790786564350128
    2. '#' (adapté à ' #') → logprob: -2.7129077911376953
    3. 'dist' → logprob: -4.962907791137695
    4. '       ' → logprob: -5.462907791137695
    5. 'distance' → logprob: -6.462907791137695
    6. 'max' → logprob: -6.712907791137695
    7. 'DP' → logprob: -7.212907791137695
    8. '        
' → logprob: -7.337907791137695
    9. '
' → logprob: -7.587907791137695
    10. 'cost' → logprob: -7.712907791137695

Token 200: ' La' (ID: 3038)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.06837556511163712
    2. '#' → logprob: -2.943375587463379
    3. 'dist' → logprob: -5.568375587463379
    4. 'distance' → logprob: -6.318375587463379
    5. 'cost' → logprob: -6.318375587463379
    6. 'max' → logprob: -6.568375587463379
    7. 'from' → logprob: -7.193375587463379
    8. 'DP' → logprob: -7.818375587463379
    9. 'min' → logprob: -8.068375587463379
    10. 'def' → logprob: -8.193375587463379

Token 201: ' sortie' (ID: 52761)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.9326058030128479
    2. '#' → logprob: -1.1826057434082031
    3. ' dp' → logprob: -2.182605743408203
    4. 'best' → logprob: -4.057605743408203
    5. ' #' → logprob: -4.057605743408203
    6. 'rg' → logprob: -4.182605743408203
    7. ' meilleure' → logprob: -4.432605743408203
    8. 'r' → logprob: -4.557605743408203
    9. 'def' → logprob: -4.682605743408203
    10. 'distance' → logprob: -4.932605743408203

Token 202: ' recherch' (ID: 116148)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.5440565347671509
    2. '<|end|>' → logprob: -1.6690565347671509
    3. ':' → logprob: -2.0440564155578613
    4. 'for' → logprob: -2.6690564155578613
    5. '[]' → logprob: -3.2940564155578613
    6. 'print' → logprob: -3.5440564155578613
    7. '<|end|>' → logprob: -3.5440564155578613
    8. '#' → logprob: -3.7940564155578613
    9. '(' → logprob: -3.9190564155578613
    10. ',' → logprob: -4.044056415557861

Token 203: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.0031116455793380737
    2. 'e' → logprob: -6.503111839294434
    3. 'é' → logprob: -7.003111839294434
    4. 'ee' → logprob: -7.628111839294434
    5. 'ue' → logprob: -9.128111839294434
    6. 'u' → logprob: -9.753111839294434
    7. 'er' → logprob: -11.128111839294434
    8. 'rée' → logprob: -12.253111839294434
    9. 'ées' → logprob: -12.378111839294434
    10. 'uée' → logprob: -12.503111839294434

Token 204: ' est' (ID: 893)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 205: ' une' (ID: 2463)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -1.6118474006652832
    2. '[]' → logprob: -1.9868474006652832
    3. ' =' → logprob: -2.361847400665283
    4. 'max' → logprob: -2.361847400665283
    5. ' ' → logprob: -2.486847400665283
    6. ' la' → logprob: -2.611847400665283
    7. ' min' → logprob: -2.986847400665283
    8. ':' → logprob: -3.361847400665283
    9. 'min' → logprob: -3.736847400665283
    10. '0' → logprob: -3.736847400665283

Token 206: ' ré' (ID: 3146)
  Prédit: ' fonction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' fonction' → logprob: -1.5464730262756348
    2. ' liste' → logprob: -1.6714730262756348
    3. 'fonction' → logprob: -1.6714730262756348
    4. ' valeur' → logprob: -2.6714730262756348
    5. ' solution' → logprob: -3.1714730262756348
    6. 'liste' → logprob: -3.7339730262756348
    7. ' permutation' → logprob: -3.9214730262756348
    8. ' matr' → logprob: -3.9839730262756348
    9. 'aff' → logprob: -3.9839730262756348
    10. ' chaîne' → logprob: -4.233973026275635

Token 207: 'partition' (ID: 67655)
  Prédit: 'partition'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'partition' → logprob: -0.8083400726318359
    2. 'ponse' → logprob: -1.433340072631836
    3. 'solution' → logprob: -2.433340072631836
    4. 'duction' → logprob: -2.808340072631836
    5. 's' → logprob: -2.808340072631836
    6. 'allocation' → logprob: -4.058340072631836
    7. 'c' → logprob: -4.183340072631836
    8. 'union' → logprob: -4.433340072631836
    9. 'al' → logprob: -4.558340072631836
    10. 'comp' → logprob: -4.808340072631836

Token 208: ' de' (ID: 334)
  Prédit: ' optimale'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' optimale' → logprob: -0.5572797060012817
    2. '<|end|>' → logprob: -1.4322797060012817
    3. ' des' → logprob: -1.8072797060012817
    4. 'des' → logprob: -4.557279586791992
    5. ' de' → logprob: -6.182279586791992
    6. ' du' → logprob: -6.307279586791992
    7. 'optimal' → logprob: -6.682279586791992
    8. ' optim' → logprob: -6.807279586791992
    9. '[' → logprob: -6.932279586791992
    10. ' ' → logprob: -7.307279586791992

Token 209: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.4265257120132446
    2. ' l' → logprob: -1.8015257120132446
    3. ' coûts' → logprob: -2.676525592803955
    4. 'l' → logprob: -2.801525592803955
    5. ' prix' → logprob: -2.926525592803955
    6. 's' → logprob: -3.051525592803955
    7. 'prix' → logprob: -3.551525592803955
    8. 'la' → logprob: -3.926525592803955
    9. 'charges' → logprob: -4.051525592803955
    10. 'n' → logprob: -4.176525592803955

Token 210: ' grille' (ID: 99153)
  Prédit: 'surface'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'surface' → logprob: -0.8465040326118469
    2. ' surface' → logprob: -2.596503973007202
    3. 'production' → logprob: -2.596503973007202
    4. 'march' → logprob: -3.096503973007202
    5. 'quant' → logprob: -3.346503973007202
    6. 'vente' → logprob: -3.471503973007202
    7. 'population' → logprob: -3.471503973007202
    8. 'case' → logprob: -3.471503973007202
    9. 'charge' → logprob: -3.596503973007202
    10. 'val' → logprob: -3.846503973007202

Token 211: ' en' (ID: 469)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 212: ' rectangles' (ID: 164265)
  Prédit: 'rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rect' → logprob: -0.570179283618927
    2. ' rectangles' → logprob: -2.4451792240142822
    3. ' blocs' → logprob: -2.5701792240142822
    4. 'zones' → logprob: -3.4451792240142822
    5. 'bl' → logprob: -3.5701792240142822
    6. 'regions' → logprob: -3.8201792240142822
    7. ' régions' → logprob: -4.070179462432861
    8. 'K' → logprob: -4.070179462432861
    9. ' zones' → logprob: -4.195179462432861
    10. 'X' → logprob: -4.195179462432861

Token 213: '.
' (ID: 558)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 214: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11622824519872665
    2. '<|end|>' → logprob: -2.7412283420562744
    3. '       ' → logprob: -3.7412283420562744
    4. ' 
' → logprob: -4.241228103637695
    5. '        ' → logprob: -6.116228103637695
    6. '    ' → logprob: -6.616228103637695
    7. '        
' → logprob: -7.116228103637695
    8. '   ' → logprob: -7.741228103637695
    9. ' ' → logprob: -8.116228103637695
    10. '#' → logprob: -8.116228103637695

Token 215: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 216: ' Chaque' (ID: 94758)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.587613046169281
    2. 'dp' → logprob: -1.3376131057739258
    3. 'from' → logprob: -2.587613105773926
    4. '       ' → logprob: -3.712613105773926
    5. 'pass' → logprob: -3.712613105773926
    6. ' #' → logprob: -4.587613105773926
    7. 'import' → logprob: -4.712613105773926
    8. 'for' → logprob: -5.337613105773926
    9. '   ' → logprob: -5.587613105773926
    10. 'def' → logprob: -5.837613105773926

Token 217: ' rectangle' (ID: 45808)
  Prédit: ' rectangle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rectangle' → logprob: -0.6583235859870911
    2. 'rectangle' → logprob: -1.7833235263824463
    3. ' buyer' → logprob: -2.1583235263824463
    4. '#' → logprob: -3.4083235263824463
    5. 'rect' → logprob: -3.6583235263824463
    6. ' #' → logprob: -3.9083235263824463
    7. 'buyer' → logprob: -4.408323764801025
    8. ' y' → logprob: -4.408323764801025
    9. 'x' → logprob: -4.658323764801025
    10. ' ' → logprob: -5.158323764801025

Token 218: ' représente' (ID: 88912)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 219: ' une' (ID: 2463)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.7087600231170654
    2. ' une' → logprob: -0.8337600231170654
    3. 'une' → logprob: -3.3337600231170654
    4. 'un' → logprob: -3.4587600231170654
    5. ' a' → logprob: -6.4587602615356445
    6. 'a' → logprob: -6.9587602615356445
    7. '<|end|>' → logprob: -6.9587602615356445
    8. ' l' → logprob: -7.4587602615356445
    9. ' la' → logprob: -7.8337602615356445
    10. ' soit' → logprob: -7.9587602615356445

Token 220: ' zone' (ID: 15070)
  Prédit: 'vente'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vente' → logprob: -1.1678838729858398
    2. ' zone' → logprob: -2.04288387298584
    3. ' vente' → logprob: -2.16788387298584
    4. 'part' → logprob: -2.79288387298584
    5. 'zone' → logprob: -2.79288387298584
    6. ' portion' → logprob: -2.91788387298584
    7. 'achat' → logprob: -4.29288387298584
    8. 'portion' → logprob: -4.35538387298584
    9. ' part' → logprob: -4.48038387298584
    10. ' partie' → logprob: -4.54288387298584

Token 221: ' ache' (ID: 27427)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -1.1233460903167725
    2. ' de' → logprob: -1.1233460903167725
    3. '<|end|>' → logprob: -2.1233460903167725
    4. ',' → logprob: -3.7483460903167725
    5. ' à' → logprob: -3.7483460903167725
    6. '.' → logprob: -3.8733460903167725
    7. '    ' → logprob: -4.123346328735352
    8. ' qui' → logprob: -4.373346328735352
    9. 'de' → logprob: -4.373346328735352
    10. '   ' → logprob: -4.498346328735352

Token 222: 't' (ID: 83)
  Prédit: 'teur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'teur' → logprob: -0.2216263860464096
    2. 'te' → logprob: -2.2216262817382812
    3. 't' → logprob: -2.4716262817382812
    4. 'teurs' → logprob: -5.596626281738281
    5. 'ter' → logprob: -7.346626281738281
    6. '``' → logprob: -8.596626281738281
    7. '\' → logprob: -8.596626281738281
    8. 'té' → logprob: -8.971626281738281
    9. '#' → logprob: -9.096626281738281
    10. '```' → logprob: -9.221626281738281

Token 223: 'ée' (ID: 2894)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.027372168377041817
    2. 'te' → logprob: -3.777372121810913
    3. 'e' → logprob: -7.027372360229492
    4. 'ut' → logprob: -7.277372360229492
    5. 'té' → logprob: -7.527372360229492
    6. 'urée' → logprob: -7.527372360229492
    7. 'tte' → logprob: -8.277372360229492
    8. 'teur' → logprob: -8.277372360229492
    9. 'ur' → logprob: -8.777372360229492
    10. '```' → logprob: -8.902372360229492

Token 224: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -1.0824787616729736
    2. 'par' → logprob: -1.4574787616729736
    3. ',' → logprob: -1.5824787616729736
    4. '.' → logprob: -2.0824787616729736
    5. '<|end|>' → logprob: -2.4574787616729736
    6. 'by' → logprob: -6.0824785232543945
    7. ')' → logprob: -6.7074785232543945
    8. ' by' → logprob: -6.8324785232543945
    9. '```' → logprob: -7.4574785232543945
    10. '#' → logprob: -7.7074785232543945

Token 225: ' un' (ID: 537)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.23310041427612305
    2. ' un' → logprob: -1.608100414276123
    3. ''un' → logprob: -5.483100414276123
    4. 'une' → logprob: -6.233100414276123
    5. 'a' → logprob: -7.483100414276123
    6. ' une' → logprob: -8.608100891113281
    7. 'buyer' → logprob: -9.233100891113281
    8. ' buyer' → logprob: -9.358100891113281
    9. '<|end|>' → logprob: -9.483100891113281
    10. 'one' → logprob: -9.733100891113281

Token 226: ' ache' (ID: 27427)
  Prédit: 'ache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ache' → logprob: -0.498434454202652
    2. ' ache' → logprob: -1.1234344244003296
    3. ' buyer' → logprob: -3.998434543609619
    4. ' unique' → logprob: -4.123434543609619
    5. 'unique' → logprob: -4.373434543609619
    6. 'buyer' → logprob: -5.748434543609619
    7. 'ach' → logprob: -6.373434543609619
    8. ' des' → logprob: -6.373434543609619
    9. ' client' → logprob: -6.373434543609619
    10. ' seul' → logprob: -6.623434543609619

Token 227: 'teur' (ID: 45262)
  Prédit: 'teur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'teur' → logprob: -0.003122340887784958
    2. 'te' → logprob: -6.503122329711914
    3. 'ter' → logprob: -7.253122329711914
    4. 'ur' → logprob: -7.253122329711914
    5. 'teurs' → logprob: -10.128122329711914
    6. 'yeur' → logprob: -10.253122329711914
    7. 'r' → logprob: -10.628122329711914
    8. '#' → logprob: -10.628122329711914
    9. '```' → logprob: -10.628122329711914
    10. 't' → logprob: -11.128122329711914

Token 228: ' avec' (ID: 3937)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0502656698226929
    2. '.' → logprob: -1.1752656698226929
    3. '<|end|>' → logprob: -1.3002656698226929
    4. '       ' → logprob: -3.3002657890319824
    5. ',
' → logprob: -4.675265789031982
    6. '   ' → logprob: -4.800265789031982
    7. '#' → logprob: -5.550265789031982
    8. ':' → logprob: -6.175265789031982
    9. '
' → logprob: -6.175265789031982
    10. '<|end|>' → logprob: -6.675265789031982

Token 229: ' :
' (ID: 10039)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.876287579536438
    2. ' une' → logprob: -1.876287579536438
    3. 'un' → logprob: -2.2512874603271484
    4. '#' → logprob: -2.6262874603271484
    5. ' des' → logprob: -2.7512874603271484
    6. 'une' → logprob: -3.0012874603271484
    7. ' la' → logprob: -3.2512874603271484
    8. ' #' → logprob: -3.7512874603271484
    9. 'out' → logprob: -3.8762874603271484
    10. ' les' → logprob: -4.501287460327148

Token 230: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21908073127269745
    2. '<|end|>' → logprob: -1.7190806865692139
    3. '...' → logprob: -4.969080924987793
    4. '   ' → logprob: -6.219080924987793
    5. '#' → logprob: -6.844080924987793
    6. '```' → logprob: -6.969080924987793
    7. '           ' → logprob: -7.344080924987793
    8. ' ' → logprob: -7.344080924987793
    9. '<|end|>' → logprob: -7.344080924987793
    10. 'pass' → logprob: -7.469080924987793

Token 231: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06514585763216019
    2. '#' (adapté à ' #') → logprob: -4.315145969390869
    3. '   ' → logprob: -4.565145969390869
    4. ' #' → logprob: -5.315145969390869
    5. '```' → logprob: -5.315145969390869
    6. '           ' → logprob: -5.440145969390869
    7. '<|end|>' → logprob: -5.440145969390869
    8. ' ' → logprob: -5.815145969390869
    9. '        ' → logprob: -6.065145969390869
    10. ' for' → logprob: -6.440145969390869

Token 232: ' -' (ID: 533)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.09701785445213318
    2. ' #' → logprob: -3.472017765045166
    3. 'pass' → logprob: -4.472017765045166
    4. '"""
' → logprob: -4.722017765045166
    5. ' for' → logprob: -4.847017765045166
    6. '```' → logprob: -4.847017765045166
    7. '       ' → logprob: -5.347017765045166
    8. 'for' → logprob: -5.722017765045166
    9. '
' → logprob: -6.097017765045166
    10. ' pass' → logprob: -6.222017765045166

Token 233: ' une' (ID: 2463)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -1.0355106592178345
    2. ' une' → logprob: -1.7855106592178345
    3. ' la' → logprob: -2.160510540008545
    4. ' x' → logprob: -2.410510540008545
    5. 'b' → logprob: -2.785510540008545
    6. ' b' → logprob: -3.035510540008545
    7. 'un' → logprob: -3.410510540008545
    8. 'une' → logprob: -3.785510540008545
    9. ' l' → logprob: -4.410510540008545
    10. ' le' → logprob: -4.660510540008545

Token 234: ' forme' (ID: 27450)
  Prédit: 'surface'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'surface' → logprob: -0.7365389466285706
    2. ' surface' → logprob: -1.8615388870239258
    3. 'aire' → logprob: -2.486538887023926
    4. ' superficie' → logprob: -2.611538887023926
    5. ' aire' → logprob: -3.361538887023926
    6. 'super' → logprob: -3.986538887023926
    7. '#' → logprob: -4.611538887023926
    8. 'large' → logprob: -4.736538887023926
    9. ' largeur' → logprob: -5.111538887023926
    10. 'fonction' → logprob: -5.111538887023926

Token 235: ' rect' (ID: 13107)
  Prédit: ' rect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rect' → logprob: -0.37433183193206787
    2. 'rect' → logprob: -1.9993318319320679
    3. ' rectangle' → logprob: -3.2493319511413574
    4. '(rect' → logprob: -3.6243319511413574
    5. ' rectangular' → logprob: -3.8743319511413574
    6. ' en' → logprob: -3.9993319511413574
    7. ' de' → logprob: -4.374331951141357
    8. '_rectangle' → logprob: -4.874331951141357
    9. 'rectangle' → logprob: -4.999331951141357
    10. '_rect' → logprob: -4.999331951141357

Token 236: 'ang' (ID: 516)
  Prédit: 'ang'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ang' → logprob: -0.5775599479675293
    2. 'angle' → logprob: -0.8275599479675293
    3. 'angular' → logprob: -6.577559947967529
    4. 'angler' → logprob: -10.077560424804688
    5. 'angles' → logprob: -10.452560424804688
    6. 'a' → logprob: -10.577560424804688
    7. '```' → logprob: -10.702560424804688
    8. 'angulo' → logprob: -10.952560424804688
    9. ' angle' → logprob: -11.202560424804688
    10. '#' → logprob: -11.452560424804688

Token 237: 'ulaire' (ID: 48584)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angle' → logprob: -0.5259577631950378
    2. 'ang' → logprob: -0.9009577631950378
    3. 'angular' → logprob: -6.5259575843811035
    4. 'e' → logprob: -8.275958061218262
    5. 'a' → logprob: -8.650958061218262
    6. '#' → logprob: -8.775958061218262
    7. 'ulaire' → logprob: -8.775958061218262
    8. 'angulo' → logprob: -9.525958061218262
    9. ')' → logprob: -9.650958061218262
    10. '```' → logprob: -9.775958061218262

Token 238: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.332620620727539
    2. '<|end|>' → logprob: -1.457620620727539
    3. ',' → logprob: -1.832620620727539
    4. ',
' → logprob: -2.082620620727539
    5. '#' → logprob: -2.707620620727539
    6. '       ' → logprob: -2.832620620727539
    7. '(s' → logprob: -4.207620620727539
    8. '   ' → logprob: -4.332620620727539
    9. '.' → logprob: -4.457620620727539
    10. ' #' → logprob: -4.582620620727539

Token 239: 'cont' (ID: 1377)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.1413377523422241
    2. ' x' → logprob: -1.1413377523422241
    3. ')' → logprob: -1.8913377523422241
    4. ' )' → logprob: -3.3913378715515137
    5. ' s' → logprob: -4.391337871551514
    6. ' rectangle' → logprob: -4.516337871551514
    7. ' y' → logprob: -4.641337871551514
    8. 'y' → logprob: -5.266337871551514
    9. 'def' → logprob: -5.266337871551514
    10. '       ' → logprob: -5.266337871551514

Token 240: 'igu' (ID: 12143)
  Prédit: 'inue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inue' → logprob: -0.19580239057540894
    2. 'in' → logprob: -2.8208024501800537
    3. 'iguous' → logprob: -2.8208024501800537
    4. 'igu' → logprob: -4.070802211761475
    5. 'inu' → logprob: -4.320802211761475
    6. 'enue' → logprob: -4.820802211761475
    7. 'ig' → logprob: -5.570802211761475
    8. ')' → logprob: -6.070802211761475
    9. 'igue' → logprob: -6.320802211761475
    10. 'INUE' → logprob: -6.820802211761475

Token 241: 'ë' (ID: 1730)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.5234822630882263
    2. 'ue' → logprob: -1.523482322692871
    3. 'ueuse' → logprob: -2.773482322692871
    4. 'e' → logprob: -3.273482322692871
    5. 'uée' → logprob: -3.398482322692871
    6. 'inue' → logprob: -4.398482322692871
    7. 'igu' → logprob: -4.523482322692871
    8. 'üe' → logprob: -4.648482322692871
    9. 'ué' → logprob: -5.273482322692871
    10. 'uous' → logprob: -5.398482322692871

Token 242: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05722509324550629
    2. ')
' → logprob: -3.932224988937378
    3. ',' → logprob: -4.307225227355957
    4. ' et' → logprob: -4.682225227355957
    5. ' )' → logprob: -5.182225227355957
    6. 'et' → logprob: -5.932225227355957
    7. ' sur' → logprob: -6.807225227355957
    8. '),' → logprob: -7.182225227355957
    9. ' en' → logprob: -7.557225227355957
    10. ',
' → logprob: -7.682225227355957

Token 243: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005920142866671085
    2. '#' → logprob: -6.505919933319092
    3. '        
' → logprob: -7.005919933319092
    4. '<|end|>' → logprob: -7.005919933319092
    5. ',' → logprob: -7.755919933319092
    6. '   ' → logprob: -7.880919933319092
    7. '        ' → logprob: -8.00592041015625
    8. '
' → logprob: -8.13092041015625
    9. '           ' → logprob: -8.25592041015625
    10. ' ' → logprob: -8.63092041015625

Token 244: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005293765105307102
    2. '#' (adapté à ' #') → logprob: -6.130293846130371
    3. '   ' → logprob: -7.380293846130371
    4. '<|end|>' → logprob: -7.630293846130371
    5. ' ' → logprob: -7.755293846130371
    6. '        
' → logprob: -7.880293846130371
    7. '           ' → logprob: -8.130293846130371
    8. '        ' → logprob: -8.380293846130371
    9. ' #' → logprob: -9.380293846130371
    10. '
' → logprob: -9.380293846130371

Token 245: ' -' (ID: 533)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.37740078568458557
    2. '       ' → logprob: -1.7524007558822632
    3. '
' → logprob: -2.1274008750915527
    4. ' #' → logprob: -4.752400875091553
    5. '   ' → logprob: -5.002400875091553
    6. '        
' → logprob: -7.002400875091553
    7. ' ' → logprob: -7.377400875091553
    8. 'for' → logprob: -7.502400875091553
    9. '\n' → logprob: -7.627400875091553
    10. ' ' → logprob: -8.002400398254395

Token 246: ' la' (ID: 557)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.3867260217666626
    2. ' une' → logprob: -2.136725902557373
    3. 'des' → logprob: -3.011725902557373
    4. 'un' → logprob: -3.261725902557373
    5. 'les' → logprob: -3.761725902557373
    6. ' des' → logprob: -4.136725902557373
    7. ' chaque' → logprob: -4.261725902557373
    8. ' un' → logprob: -4.386725902557373
    9. 'la' → logprob: -4.761725902557373
    10. 'le' → logprob: -5.261725902557373

Token 247: ' taille' (ID: 41644)
  Prédit: 'surface'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'surface' → logprob: -0.9090055823326111
    2. 's' → logprob: -1.7840056419372559
    3. ' surface' → logprob: -1.9090056419372559
    4. ' somme' → logprob: -3.159005641937256
    5. ' même' → logprob: -3.159005641937256
    6. ' superficie' → logprob: -3.284005641937256
    7. 'prem' → logprob: -3.659005641937256
    8. ' largeur' → logprob: -3.909005641937256
    9. 'm' → logprob: -4.284005641937256
    10. 'som' → logprob: -4.659005641937256

Token 248: ' exacte' (ID: 188756)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 249: ' k' (ID: 372)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 250: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.86311274766922
    2. '<|end|>' → logprob: -0.86311274766922
    3. '   ' → logprob: -2.988112688064575
    4. '
' → logprob: -3.613112688064575
    5. ')' → logprob: -3.738112688064575
    6. '<|end|>' → logprob: -4.238112926483154
    7. 'def' → logprob: -5.363112926483154
    8. ',' → logprob: -5.363112926483154
    9. ' ' → logprob: -5.738112926483154
    10. '           ' → logprob: -6.113112926483154

Token 251: 'dé' (ID: 98340)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.021770784631371498
    2. ' )' → logprob: -4.02177095413208
    3. ')
' → logprob: -7.27177095413208
    4. ' ' → logprob: -7.64677095413208
    5. '==' → logprob: -8.521770477294922
    6. '<|end|>' → logprob: -8.521770477294922
    7. 'k' → logprob: -8.771770477294922
    8. 'b' → logprob: -8.896770477294922
    9. 's' → logprob: -9.146770477294922
    10. '=' → logprob: -9.271770477294922

Token 252: 'jà' (ID: 19483)
  Prédit: 'fin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.28533735871315
    2. 'f' → logprob: -1.4103373289108276
    3. 'tail' → logprob: -6.410337448120117
    4. 'termin' → logprob: -6.660337448120117
    5. 'limit' → logprob: -8.160337448120117
    6. 'ta' → logprob: -8.785337448120117
    7. ')' → logprob: -9.035337448120117
    8. '   ' → logprob: -9.410337448120117
    9. 'com' → logprob: -9.410337448120117
    10. 'tect' → logprob: -9.660337448120117

Token 253: ' donnée' (ID: 130126)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -2.0041396617889404
    2. 'dé' → logprob: -2.0041396617889404
    3. '   ' → logprob: -2.3791396617889404
    4. 'ac' → logprob: -2.5041396617889404
    5. 'ach' → logprob: -2.5041396617889404
    6. 'con' → logprob: -3.0041396617889404
    7. '#' → logprob: -3.1291396617889404
    8. ')' → logprob: -3.1291396617889404
    9. 'known' → logprob: -3.3791396617889404
    10. 'pr' → logprob: -3.6291396617889404

Token 254: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02559429593384266
    2. ')
' → logprob: -5.150594234466553
    3. ' )' → logprob: -5.150594234466553
    4. 'par' → logprob: -5.275594234466553
    5. ' par' → logprob: -5.400594234466553
    6. 'pour' → logprob: -6.900594234466553
    7. ' pour' → logprob: -7.525594234466553
    8. 'en' → logprob: -7.650594234466553
    9. ' en' → logprob: -7.775594234466553
    10. '),' → logprob: -8.525594711303711

Token 255: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5785701274871826
    2. '
' → logprob: -0.9535701274871826
    3. '<|end|>' → logprob: -3.3285701274871826
    4. '        
' → logprob: -4.328570365905762
    5. '  
' → logprob: -7.203570365905762
    6. '```' → logprob: -7.328570365905762
    7. '\n' → logprob: -7.453570365905762
    8. ' 
' → logprob: -7.703570365905762
    9. ' ' → logprob: -7.828570365905762
    10. '<|end|>' → logprob: -7.828570365905762

Token 256: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5652745366096497
    2. '
' → logprob: -1.0652744770050049
    3. '<|end|>' → logprob: -2.940274477005005
    4. '        
' → logprob: -4.315274715423584
    5. ' ' → logprob: -4.940274715423584
    6. ' 
' → logprob: -5.315274715423584
    7. '#' (adapté à ' #') → logprob: -5.565274715423584
    8. ' for' → logprob: -7.190274715423584
    9. '\n' → logprob: -7.315274715423584
    10. '        ' → logprob: -7.315274715423584

Token 257: ' -' (ID: 533)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3310629725456238
    2. '       ' → logprob: -1.9560630321502686
    3. ' #' → logprob: -3.2060630321502686
    4. 'for' → logprob: -3.2060630321502686
    5. ' for' → logprob: -3.5810630321502686
    6. 'dp' → logprob: -5.4560627937316895
    7. '        
' → logprob: -5.7060627937316895
    8. 'max' → logprob: -6.0810627937316895
    9. 'pass' → logprob: -6.3310627937316895
    10. 'possible' → logprob: -6.3310627937316895

Token 258: ' et' (ID: 859)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.9169115424156189
    2. ' une' → logprob: -1.4169116020202637
    3. ' le' → logprob: -2.5419116020202637
    4. '#' → logprob: -2.9169116020202637
    5. ' un' → logprob: -3.1669116020202637
    6. ' chaque' → logprob: -3.2919116020202637
    7. ' l' → logprob: -3.5419116020202637
    8. ' #' → logprob: -3.7919116020202637
    9. 'une' → logprob: -4.166911602020264
    10. ' les' → logprob: -4.166911602020264

Token 259: ' au' (ID: 2791)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.543615996837616
    2. ' la' → logprob: -2.6686160564422607
    3. ' une' → logprob: -2.6686160564422607
    4. 'la' → logprob: -2.9186160564422607
    5. 'le' → logprob: -3.1686160564422607
    6. 'les' → logprob: -3.2936160564422607
    7. ' que' → logprob: -3.5436160564422607
    8. ' les' → logprob: -3.9186160564422607
    9. ' un' → logprob: -3.9186160564422607
    10. ' chaque' → logprob: -4.293615818023682

Token 260: ' moins' (ID: 15924)
  Prédit: 'moins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moins' → logprob: -0.0633782297372818
    2. ' moins' → logprob: -4.06337833404541
    3. 'mo' → logprob: -4.56337833404541
    4. '   ' → logprob: -4.56337833404541
    5. 'm' → logprob: -4.93837833404541
    6. 'c' → logprob: -5.06337833404541
    7. '```' → logprob: -6.18837833404541
    8. '#' → logprob: -6.93837833404541
    9. '       ' → logprob: -6.93837833404541
    10. '``' → logprob: -7.68837833404541

Token 261: ' un' (ID: 537)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.554522693157196
    2. 'une' → logprob: -1.1795227527618408
    3. ' un' → logprob: -2.679522752761841
    4. ' one' → logprob: -3.679522752761841
    5. 'un' → logprob: -3.929522752761841
    6. ' ' → logprob: -6.179522514343262
    7. 'one' → logprob: -7.304522514343262
    8. ''une' → logprob: -8.179522514343262
    9. '1' → logprob: -8.304522514343262
    10. '```' → logprob: -8.429522514343262

Token 262: ' marque' (ID: 38644)
  Prédit: ' buyer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' buyer' → logprob: -1.554547905921936
    2. 'e' → logprob: -1.804547905921936
    3. ' ache' → logprob: -1.929547905921936
    4. 'case' → logprob: -2.8045477867126465
    5. ' espace' → logprob: -3.1795477867126465
    6. 'ache' → logprob: -3.3045477867126465
    7. 'élé' → logprob: -3.3045477867126465
    8. 'es' → logprob: -3.5545477867126465
    9. ' case' → logprob: -3.6795477867126465
    10. 'ach' → logprob: -3.6795477867126465

Token 263: 'ur' (ID: 330)
  Prédit: 'ur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ur' → logprob: -0.034109536558389664
    2. 'r' → logprob: -3.409109592437744
    3. 'urs' → logprob: -9.659109115600586
    4. 'd' → logprob: -9.909109115600586
    5. 'u' → logprob: -9.909109115600586
    6. 'er' → logprob: -10.034109115600586
    7. 'teur' → logprob: -10.471609115600586
    8. 'eur' → logprob: -10.721609115600586
    9. '```' → logprob: -10.909109115600586
    10. 't' → logprob: -11.221609115600586

Token 264: ' b' (ID: 287)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9174678325653076
    2. '
' → logprob: -1.4174678325653076
    3. '<|end|>' → logprob: -1.4174678325653076
    4. '        
' → logprob: -3.9174678325653076
    5. ' ' → logprob: -4.167468070983887
    6. '.' → logprob: -4.167468070983887
    7. ',' → logprob: -4.417468070983887
    8. ' 
' → logprob: -4.542468070983887
    9. '#' → logprob: -5.417468070983887
    10. '   ' → logprob: -5.542468070983887

Token 265: ' dans' (ID: 2671)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5573594570159912
    2. '<|end|>' → logprob: -1.5573594570159912
    3. '
' → logprob: -1.9323594570159912
    4. '        
' → logprob: -3.682359457015991
    5. '.' → logprob: -4.93235969543457
    6. ',' → logprob: -5.18235969543457
    7. '        ' → logprob: -5.30735969543457
    8. '#' → logprob: -5.30735969543457
    9. '<|end|>' → logprob: -5.55735969543457
    10. ' ' → logprob: -5.55735969543457

Token 266: ' cette' (ID: 7696)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.5145490765571594
    2. 's' → logprob: -1.7645490169525146
    3. ' la' → logprob: -2.1395490169525146
    4. 'la' → logprob: -3.3895490169525146
    5. ' le' → logprob: -3.6395490169525146
    6. 'l' → logprob: -4.764549255371094
    7. ' buyer' → logprob: -4.764549255371094
    8. 'rectangle' → logprob: -5.389549255371094
    9. ' the' → logprob: -5.639549255371094
    10. ' ' → logprob: -5.639549255371094

Token 267: ' zone' (ID: 15070)
  Prédit: 'rectangle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rectangle' → logprob: -0.099433034658432
    2. ' rectangle' → logprob: -2.974432945251465
    3. 'rect' → logprob: -3.474432945251465
    4. 'range' → logprob: -5.474432945251465
    5. 's' → logprob: -6.474432945251465
    6. 'region' → logprob: -6.974432945251465
    7. 'zone' → logprob: -7.099432945251465
    8. 'case' → logprob: -7.599432945251465
    9. 'r' → logprob: -7.724432945251465
    10. 'c' → logprob: -7.724432945251465

Token 268: ' sur' (ID: 1512)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9170596599578857
    2. '<|end|>' → logprob: -1.1670596599578857
    3. '       ' → logprob: -1.2920596599578857
    4. '        
' → logprob: -5.042059898376465
    5. '<|end|>' → logprob: -6.167059898376465
    6. '#' → logprob: -6.292059898376465
    7. ' ' → logprob: -7.292059898376465
    8. '

' → logprob: -7.792059898376465
    9. '\n' → logprob: -7.792059898376465
    10. '        ' → logprob: -8.167059898376465

Token 269: ' s' (ID: 265)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.6506111025810242
    2. 'la' → logprob: -1.275611162185669
    3. 's' → logprob: -2.150611162185669
    4. 'l' → logprob: -3.275611162185669
    5. ' s' → logprob: -4.40061092376709
    6. '(s' → logprob: -5.27561092376709
    7. 'le' → logprob: -5.52561092376709
    8. ' le' → logprob: -5.65061092376709
    9. ' ' → logprob: -5.65061092376709
    10. 'une' → logprob: -6.27561092376709

Token 270: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7084012031555176
    2. '
' → logprob: -1.4584012031555176
    3. '<|end|>' → logprob: -1.4584012031555176
    4. '\n' → logprob: -4.458401203155518
    5. '        
' → logprob: -5.333401203155518
    6. '   ' → logprob: -5.333401203155518
    7. '<|end|>' → logprob: -5.458401203155518
    8. ',' → logprob: -6.208401203155518
    9. '.' → logprob: -6.208401203155518
    10. ' 
' → logprob: -6.208401203155518

Token 271: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 272: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.74976646900177
    2. '       ' → logprob: -0.74976646900177
    3. 'for' → logprob: -3.3747663497924805
    4. ' for' → logprob: -5.2497663497924805
    5. ' #' → logprob: -5.7497663497924805
    6. 'max' → logprob: -5.8747663497924805
    7. '        
' → logprob: -6.3747663497924805
    8. '   ' → logprob: -6.4997663497924805
    9. 'dp' → logprob: -6.6247663497924805
    10. 'def' → logprob: -6.8747663497924805

Token 273: ' Str' (ID: 5641)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.0724397599697113
    2. 'dp' → logprob: -3.322439670562744
    3. 'def' → logprob: -4.572439670562744
    4. 'from' → logprob: -4.947439670562744
    5. 'for' → logprob: -5.572439670562744
    6. 'rect' → logprob: -5.697439670562744
    7. 'height' → logprob: -6.072439670562744
    8. '       ' → logprob: -7.197439670562744
    9. 'res' → logprob: -7.322439670562744
    10. 'visited' → logprob: -7.447439670562744

Token 274: 'atég' (ID: 25440)
  Prédit: 'ict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ict' → logprob: -0.9954649209976196
    2. 'ategy' → logprob: -1.4954649209976196
    3. '#' → logprob: -1.8704649209976196
    4. 'uct' → logprob: -2.37046480178833
    5. 'ateg' → logprob: -2.74546480178833
    6. 'ips' → logprob: -3.49546480178833
    7. 'ip' → logprob: -4.12046480178833
    8. 'ing' → logprob: -4.37046480178833
    9. 'def' → logprob: -4.62046480178833
    10. 'atég' → logprob: -5.62046480178833

Token 275: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.05631234496831894
    2. 'y' → logprob: -2.931312322616577
    3. '       ' → logprob: -7.306312561035156
    4. '   ' → logprob: -7.806312561035156
    5. 'ies' → logprob: -8.931312561035156
    6. ' y' → logprob: -9.556312561035156
    7. ' ie' → logprob: -9.681312561035156
    8. 'e' → logprob: -9.806312561035156
    9. '    ' → logprob: -12.056312561035156
    10. '           ' → logprob: -12.431312561035156

Token 276: ':
' (ID: 734)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6730402112007141
    2. ':' → logprob: -1.2980401515960693
    3. ' :' → logprob: -1.6730401515960693
    4. '#' → logprob: -5.548040390014648
    5. 'def' → logprob: -5.673040390014648
    6. '=' → logprob: -5.798040390014648
    7. ' ' → logprob: -5.798040390014648
    8. '<|end|>' → logprob: -5.798040390014648
    9. '    ' → logprob: -5.923040390014648
    10. '   ' → logprob: -6.173040390014648

Token 277: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8521119356155396
    2. '    ' → logprob: -0.9771119356155396
    3. '       ' → logprob: -2.35211181640625
    4. '        ' → logprob: -2.60211181640625
    5. '<|end|>' → logprob: -4.85211181640625
    6. ' pass' → logprob: -5.22711181640625
    7. '   ' → logprob: -6.10211181640625
    8. ' ' → logprob: -6.22711181640625
    9. '        
' → logprob: -6.35211181640625
    10. '     ' → logprob: -6.47711181640625

Token 278: ' #' (ID: 1069)
  Prédit: ' pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.9232330322265625
    2. ' #' → logprob: -1.0482330322265625
    3. '#' (adapté à ' #') → logprob: -1.9232330322265625
    4. '       ' → logprob: -3.1732330322265625
    5. 'pass' → logprob: -3.2982330322265625
    6. '   ' → logprob: -4.1732330322265625
    7. ' for' → logprob: -5.0482330322265625
    8. 'for' → logprob: -7.2982330322265625
    9. '    ' → logprob: -7.4232330322265625
    10. ' x' → logprob: -7.9232330322265625

Token 279: ' Pour' (ID: 13931)
  Prédit: ' pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.675354540348053
    2. 'pass' → logprob: -1.3003544807434082
    3. '#' → logprob: -1.6753544807434082
    4. ' #' → logprob: -3.550354480743408
    5. 'for' → logprob: -7.425354480743408
    6. 'def' → logprob: -7.800354480743408
    7. 'from' → logprob: -7.800354480743408
    8. 'import' → logprob: -8.800354957580566
    9. ' for' → logprob: -8.800354957580566
    10. 'possible' → logprob: -8.925354957580566

Token 280: ' chaque' (ID: 21194)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.502335250377655
    2. ' y' → logprob: -2.0023353099823
    3. ' x' → logprob: -2.1273353099823
    4. ' i' → logprob: -2.7523353099823
    5. ' _' → logprob: -3.3773353099823
    6. ' ' → logprob: -4.002335071563721
    7. ' h' → logprob: -5.127335071563721
    8. 'b' → logprob: -5.502335071563721
    9. 'x' → logprob: -5.752335071563721
    10. ' chaque' → logprob: -5.752335071563721

Token 281: ' ache' (ID: 27427)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.8704284429550171
    2. ' b' → logprob: -1.620428442955017
    3. 'x' → logprob: -1.995428442955017
    4. ' buyer' → logprob: -2.2454285621643066
    5. ' x' → logprob: -3.1204285621643066
    6. 'buyer' → logprob: -3.1204285621643066
    7. 'y' → logprob: -3.8704285621643066
    8. ' y' → logprob: -3.8704285621643066
    9. ' possible' → logprob: -6.370428562164307
    10. 'possible' → logprob: -6.870428562164307

Token 282: 'teur' (ID: 45262)
  Prédit: 'teur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'teur' → logprob: -0.00038419815246015787
    2. 'te' → logprob: -8.125384330749512
    3. 'teurs' → logprob: -10.625384330749512
    4. '#' → logprob: -10.750384330749512
    5. 't' → logprob: -10.750384330749512
    6. 'ter' → logprob: -11.000384330749512
    7. '_' → logprob: -14.375384330749512
    8. 'reur' → logprob: -14.500384330749512
    9. '`' → logprob: -14.750384330749512
    10. '\' → logprob: -14.750384330749512

Token 283: ' b' (ID: 287)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -1.046802043914795
    2. ' ,' → logprob: -1.296802043914795
    3. ',' → logprob: -1.546802043914795
    4. ':' → logprob: -1.921802043914795
    5. ' b' → logprob: -5.171802043914795
    6. ',b' → logprob: -5.921802043914795
    7. ' in' → logprob: -6.046802043914795
    8. ' (' → logprob: -6.546802043914795
    9. ' ' → logprob: -7.171802043914795
    10. 'b' → logprob: -7.296802043914795

Token 284: ':
' (ID: 734)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1603834480047226
    2. ' ,' → logprob: -2.160383462905884
    3. ' in' → logprob: -3.660383462905884
    4. ':' → logprob: -5.410383224487305
    5. ',b' → logprob: -7.035383224487305
    6. 'in' → logprob: -7.160383224487305
    7. ' :' → logprob: -7.535383224487305
    8. ' ' → logprob: -8.535383224487305
    9. '<|end|>' → logprob: -9.785383224487305
    10. ' b' → logprob: -10.410383224487305

Token 285: '       ' (ID: 309)
  Prédit: '        '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '        ' → logprob: -0.7290112376213074
    2. '       ' → logprob: -0.9790112376213074
    3. ' for' → logprob: -2.979011297225952
    4. ' ' → logprob: -3.479011297225952
    5. '<|end|>' → logprob: -3.854011297225952
    6. '    ' → logprob: -3.979011297225952
    7. ' ' → logprob: -4.854011058807373
    8. '        
' → logprob: -6.104011058807373
    9. '<|end|>' → logprob: -6.479011058807373
    10. ',' → logprob: -6.604011058807373

Token 286: ' #' (ID: 1069)
  Prédit: '        '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '        ' → logprob: -0.5421929359436035
    2. '       ' → logprob: -1.6671929359436035
    3. ' ' → logprob: -2.1671929359436035
    4. ' ' → logprob: -2.9171929359436035
    5. '    ' → logprob: -3.1671929359436035
    6. ' for' → logprob: -5.5421929359436035
    7. '        
' → logprob: -5.7921929359436035
    8. '     ' → logprob: -6.2921929359436035
    9. '   ' → logprob: -6.2921929359436035
    10. '<|end|>' → logprob: -6.5421929359436035

Token 287: '  ' (ID: 256)
  Prédit: '        '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '        ' → logprob: -0.859584391117096
    2. '       ' → logprob: -1.2345843315124512
    3. ' for' → logprob: -1.6095843315124512
    4. ' ' → logprob: -3.609584331512451
    5. ' ' → logprob: -4.359584331512451
    6. '    ' → logprob: -4.484584331512451
    7. ' #' → logprob: -4.609584331512451
    8. ' continue' → logprob: -5.109584331512451
    9. 'for' → logprob: -5.234584331512451
    10. '        
' → logprob: -6.109584331512451

Token 288: ' Cher' (ID: 48756)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0226142406463623
    2. ' for' → logprob: -1.2726142406463623
    3. 'pass' → logprob: -1.8976142406463623
    4. ' pass' → logprob: -2.1476142406463623
    5. '#' → logprob: -3.7726142406463623
    6. ' possible' → logprob: -4.522614479064941
    7. ' #' → logprob: -4.772614479064941
    8. '       ' → logprob: -4.897614479064941
    9. '   ' → logprob: -5.022614479064941
    10. ' buyer' → logprob: -5.147614479064941

Token 289: 'cher' (ID: 6665)
  Prédit: 'cher'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cher' → logprob: -0.0012341608526185155
    2. 'ch' → logprob: -7.75123405456543
    3. 'che' → logprob: -8.00123405456543
    4. '   ' → logprob: -8.62623405456543
    5. '#' → logprob: -9.00123405456543
    6. '       ' → logprob: -10.25123405456543
    7. 'chez' → logprob: -10.75123405456543
    8. 'er' → logprob: -10.75123405456543
    9. '    ' → logprob: -11.12623405456543
    10. 'chent' → logprob: -11.12623405456543

Token 290: ' tous' (ID: 10688)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.3285661935806274
    2. '<|end|>' → logprob: -1.5785661935806274
    3. ' ' → logprob: -2.078566074371338
    4. ' un' → logprob: -2.578566074371338
    5. 'for' → logprob: -3.203566074371338
    6. ' les' → logprob: -3.453566074371338
    7. ' for' → logprob: -3.828566074371338
    8. 'des' → logprob: -3.828566074371338
    9. ' rectangles' → logprob: -3.828566074371338
    10. 'les' → logprob: -3.953566074371338

Token 291: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.13224421441555023
    2. '<|end|>' → logprob: -2.632244110107422
    3. 'les' → logprob: -3.257244110107422
    4. 'es' → logprob: -5.882244110107422
    5. ' possible' → logprob: -5.882244110107422
    6. 'possible' → logprob: -5.882244110107422
    7. ' ' → logprob: -6.632244110107422
    8. ' des' → logprob: -6.882244110107422
    9. 's' → logprob: -7.882244110107422
    10. '_possible' → logprob: -8.007244110107422

Token 292: ' rectangles' (ID: 164265)
  Prédit: 'rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rect' → logprob: -0.7499446868896484
    2. ' rectangles' → logprob: -1.1249446868896484
    3. 'poss' → logprob: -2.4999446868896484
    4. 'positions' → logprob: -3.7499446868896484
    5. 'x' → logprob: -4.249944686889648
    6. 'b' → logprob: -4.249944686889648
    7. 'possible' → logprob: -4.624944686889648
    8. 'ach' → logprob: -4.999944686889648
    9. ' rect' → logprob: -5.124944686889648
    10. 'X' → logprob: -5.374944686889648

Token 293: ' possibles' (ID: 97753)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 294: ' contenant' (ID: 131049)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 295: ' exactement' (ID: 108701)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.26612159609794617
    2. ' b' → logprob: -2.2661216259002686
    3. ' au' → logprob: -2.2661216259002686
    4. 'au' → logprob: -4.5161213874816895
    5. ' ' → logprob: -5.2661213874816895
    6. ' at' → logprob: -5.3911213874816895
    7. 'at' → logprob: -6.2661213874816895
    8. 'le' → logprob: -6.7661213874816895
    9. ' un' → logprob: -7.3911213874816895
    10. ' le' → logprob: -7.6411213874816895

Token 296: ' k' (ID: 372)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.5235602259635925
    2. 'b' → logprob: -2.0235602855682373
    3. ' ' → logprob: -2.3985602855682373
    4. ' buyer' → logprob: -2.5235602855682373
    5. ' k' → logprob: -2.8985602855682373
    6. '1' → logprob: -4.023560047149658
    7. 'k' → logprob: -4.398560047149658
    8. ' at' → logprob: -5.398560047149658
    9. 'buyer' → logprob: -5.523560047149658
    10. ' buyers' → logprob: -5.523560047149658

Token 297: ' cases' (ID: 7911)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 298: ' et' (ID: 859)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 299: ' contenant' (ID: 131049)
  Prédit: 'con'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'con' → logprob: -1.1727617979049683
    2. 'cont' → logprob: -1.5477617979049683
    3. ' contenant' → logprob: -1.9227617979049683
    4. '#' → logprob: -2.297761917114258
    5. 'ayant' → logprob: -2.922761917114258
    6. 'au' → logprob: -2.922761917114258
    7. ' ayant' → logprob: -3.422761917114258
    8. '<|end|>' → logprob: -4.047761917114258
    9. ' au' → logprob: -4.547761917114258
    10. ' ' → logprob: -5.047761917114258

Token 300: ' au' (ID: 2791)
  Prédit: ' au'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' au' → logprob: -0.002634161151945591
    2. 'au' → logprob: -6.002634048461914
    3. ' at' → logprob: -9.252634048461914
    4. ''au' → logprob: -10.752634048461914
    5. ' un' → logprob: -11.252634048461914
    6. 'at' → logprob: -11.877634048461914
    7. '’au' → logprob: -12.127634048461914
    8. ' ' → logprob: -12.252634048461914
    9. ' le' → logprob: -12.502634048461914
    10. 'un' → logprob: -13.002634048461914

Token 301: ' moins' (ID: 15924)
  Prédit: 'moins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'moins' → logprob: -0.02337988093495369
    2. 'least' → logprob: -4.398379802703857
    3. 'mo' → logprob: -4.773379802703857
    4. 'minimum' → logprob: -6.273379802703857
    5. 'less' → logprob: -9.273380279541016
    6. '```' → logprob: -9.648380279541016
    7. '   ' → logprob: -9.773380279541016
    8. 'menos' → logprob: -10.023380279541016
    9. 'minste' → logprob: -10.398380279541016
    10. 'min' → logprob: -10.523380279541016

Token 302: ' une' (ID: 2463)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.2097972333431244
    2. 'une' → logprob: -2.8347971439361572
    3. ' un' → logprob: -3.0847971439361572
    4. ' ' → logprob: -4.084797382354736
    5. 'au' → logprob: -4.334797382354736
    6. '   ' → logprob: -4.584797382354736
    7. 'least' → logprob: -4.584797382354736
    8. 'moins' → logprob: -4.959797382354736
    9. '```' → logprob: -4.959797382354736
    10. 'one' → logprob: -5.459797382354736

Token 303: ' cellule' (ID: 169440)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.9688734412193298
    2. ' case' → logprob: -1.4688735008239746
    3. ' marque' → logprob: -1.8438735008239746
    4. 'case' → logprob: -2.3438735008239746
    5. 'b' → logprob: -2.8438735008239746
    6. ' occur' → logprob: -4.093873500823975
    7. ' occurrence' → logprob: -4.093873500823975
    8. ' ' → logprob: -4.593873500823975
    9. ' cellule' → logprob: -4.968873500823975
    10. ' ' → logprob: -5.093873500823975

Token 304: ' avec' (ID: 3937)
  Prédit: ' mar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mar' → logprob: -0.14424113929271698
    2. ' avec' → logprob: -3.3942410945892334
    3. ' marked' → logprob: -3.6442410945892334
    4. ' marqué' → logprob: -3.8942410945892334
    5. ' b' → logprob: -4.2692413330078125
    6. ' ' → logprob: -4.8942413330078125
    7. ' with' → logprob: -5.3942413330078125
    8. ' marc' → logprob: -5.6442413330078125
    9. ' de' → logprob: -5.6442413330078125
    10. ' contenant' → logprob: -5.7692413330078125

Token 305: ' s' (ID: 265)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.4287484586238861
    2. ' b' → logprob: -1.0537484884262085
    3. ' ' → logprob: -11.42874813079834
    4. '   ' → logprob: -12.05374813079834
    5. '```' → logprob: -12.30374813079834
    6. ' s' → logprob: -12.55374813079834
    7. ' ' → logprob: -12.55374813079834
    8. '    ' → logprob: -12.67874813079834
    9. 's' → logprob: -12.92874813079834
    10. '`' → logprob: -13.42874813079834

Token 306: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -0.10133513063192368
    2. '[b' → logprob: -3.101335048675537
    3. '==' → logprob: -4.101335048675537
    4. '[' → logprob: -4.351335048675537
    5. ' ==' → logprob: -4.476335048675537
    6. ' [' → logprob: -5.351335048675537
    7. '[x' → logprob: -5.601335048675537
    8. '=' → logprob: -7.726335048675537
    9. 'b' → logprob: -7.851335048675537
    10. '[i' → logprob: -7.976335048675537

Token 307: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -1.001165509223938
    2. ']' → logprob: -1.376165509223938
    3. ']==' → logprob: -1.376165509223938
    4. '[y' → logprob: -2.1261653900146484
    5. '==' → logprob: -5.126165390014648
    6. '[' → logprob: -7.376165390014648
    7. ' ==' → logprob: -7.876165390014648
    8. '[x' → logprob: -8.126165390014648
    9. 'y' → logprob: -8.626165390014648
    10. '']==' → logprob: -9.126165390014648

Token 308: 'x' (ID: 87)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8913382291793823
    2. ']==' → logprob: -1.0163382291793823
    3. '==' → logprob: -2.516338348388672
    4. 'y' → logprob: -3.016338348388672
    5. ' ==' → logprob: -3.141338348388672
    6. 'b' → logprob: -3.516338348388672
    7. ' y' → logprob: -4.891338348388672
    8. ' ]' → logprob: -5.266338348388672
    9. 'x' → logprob: -5.391338348388672
    10. '```' → logprob: -6.016338348388672

Token 309: ']==' (ID: 34128)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08907894790172577
    2. ']==' → logprob: -2.464078903198242
    3. ' ]' → logprob: -9.589078903198242
    4. '==' → logprob: -10.464078903198242
    5. '[' → logprob: -11.839078903198242
    6. '[y' → logprob: -11.839078903198242
    7. ' ==' → logprob: -12.214078903198242
    8. ']=' → logprob: -12.589078903198242
    9. '```' → logprob: -12.714078903198242
    10. '][' → logprob: -12.839078903198242

Token 310: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.020542588084936142
    2. ' b' → logprob: -3.895542621612549
    3. ' ' → logprob: -16.02054214477539
    4. ' ' → logprob: -16.02054214477539
    5. '	b' → logprob: -16.39554214477539
    6. '`' → logprob: -16.64554214477539
    7. '   ' → logprob: -16.77054214477539
    8. ''b' → logprob: -16.89554214477539
    9. '```' → logprob: -16.89554214477539
    10. ')b' → logprob: -17.77054214477539

Token 311: '.
' (ID: 558)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 312: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02203495241701603
    2. ' ' → logprob: -4.772035121917725
    3. ' 
' → logprob: -5.897035121917725
    4. '#' → logprob: -5.897035121917725
    5. '        ' → logprob: -6.272035121917725
    6. '        
' → logprob: -6.522035121917725
    7. '   ' → logprob: -6.897035121917725
    8. '<|end|>' → logprob: -7.147035121917725
    9. ' ' → logprob: -7.647035121917725
    10. '    ' → logprob: -8.022034645080566

Token 313: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08089545369148254
    2. '<|end|>' → logprob: -2.83089542388916
    3. ' ' → logprob: -4.83089542388916
    4. '        
' → logprob: -5.95589542388916
    5. '#' (adapté à ' #') → logprob: -6.20589542388916
    6. '        ' → logprob: -6.70589542388916
    7. ' 
' → logprob: -6.70589542388916
    8. '   ' → logprob: -6.83089542388916
    9. '
' → logprob: -6.83089542388916
    10. '<|end|>' → logprob: -8.20589542388916

Token 314: '  ' (ID: 256)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1313834935426712
    2. ' for' → logprob: -3.1313834190368652
    3. '#' → logprob: -3.7563834190368652
    4. 'for' → logprob: -3.8813834190368652
    5. ' 
' → logprob: -4.631383419036865
    6. ' ' → logprob: -5.256383419036865
    7. '        ' → logprob: -5.381383419036865
    8. '   ' → logprob: -5.631383419036865
    9. '        
' → logprob: -5.631383419036865
    10. ' ' → logprob: -6.256383419036865

Token 315: ' Car' (ID: 4004)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.19448983669281006
    2. '       ' → logprob: -2.0694899559020996
    3. '<|end|>' → logprob: -3.8194899559020996
    4. ' #' → logprob: -4.9444899559021
    5. 'for' → logprob: -5.1944899559021
    6. '
' → logprob: -5.3194899559021
    7. ' for' → logprob: -6.3194899559021
    8. ' ' → logprob: -6.3194899559021
    9. '...' → logprob: -6.4444899559021
    10. 'continue' → logprob: -6.4444899559021

Token 316: ' on' (ID: 402)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.363508939743042
    2. 'e' → logprob: -2.363508939743042
    3. 'te' → logprob: -2.363508939743042
    4. 'tes' → logprob: -3.988508939743042
    5. '#' → logprob: -4.238509178161621
    6. 'y' → logprob: -4.613509178161621
    7. 't' → logprob: -4.738509178161621
    8. 'r' → logprob: -4.863509178161621
    9. '   ' → logprob: -4.988509178161621
    10. 're' → logprob: -5.238509178161621

Token 317: ' sait' (ID: 52101)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6015346646308899
    2. 'nt' → logprob: -1.9765346050262451
    3. ' doit' → logprob: -2.976534605026245
    4. ' n' → logprob: -3.351534605026245
    5. 'n't' → logprob: -3.726534605026245
    6. 'ut' → logprob: -3.851534605026245
    7. '   ' → logprob: -3.851534605026245
    8. 'ra' → logprob: -3.851534605026245
    9. 'pe' → logprob: -4.726534843444824
    10. '       ' → logprob: -4.851534843444824

Token 318: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.2905457019805908
    2. 'que' → logprob: -1.4155457019805908
    3. '   ' → logprob: -6.290545463562012
    4. '    ' → logprob: -6.540545463562012
    5. ' that' → logprob: -6.790545463562012
    6. ' qu' → logprob: -6.915545463562012
    7. '       ' → logprob: -6.915545463562012
    8. 'that' → logprob: -7.040545463562012
    9. 'qu' → logprob: -7.915545463562012
    10. '  ' → logprob: -8.165545463562012

Token 319: ' pour' (ID: 1930)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.2641429901123047
    2. ' les' → logprob: -2.7641429901123047
    3. 'les' → logprob: -2.8891429901123047
    4. 'le' → logprob: -4.264142990112305
    5. ' le' → logprob: -4.639142990112305
    6. ' la' → logprob: -4.639142990112305
    7. ' l' → logprob: -4.639142990112305
    8. 'l' → logprob: -4.889142990112305
    9. ' buyer' → logprob: -5.014142990112305
    10. ' each' → logprob: -5.139142990112305

Token 320: ' b' (ID: 287)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.6934418678283691
    2. 'cha' → logprob: -1.0684418678283691
    3. 'tout' → logprob: -3.318441867828369
    4. 'l' → logprob: -3.818441867828369
    5. 'each' → logprob: -4.193441867828369
    6. 't' → logprob: -4.693441867828369
    7. ' l' → logprob: -4.693441867828369
    8. 'b' → logprob: -4.693441867828369
    9. 'le' → logprob: -4.943441867828369
    10. 'ch' → logprob: -5.193441867828369

Token 321: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1726189851760864
    2. ',' → logprob: -1.2976189851760864
    3. ''' → logprob: -2.297618865966797
    4. '   ' → logprob: -2.672618865966797
    5. '  ' → logprob: -3.547618865966797
    6. ' ,' → logprob: -3.797618865966797
    7. ''il' → logprob: -4.047618865966797
    8. ' on' → logprob: -4.047618865966797
    9. ')' → logprob: -4.172618865966797
    10. ' ' → logprob: -4.172618865966797

Token 322: ' la' (ID: 557)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.703898012638092
    2. ' il' → logprob: -1.5788979530334473
    3. ' chaque' → logprob: -2.4538979530334473
    4. ' la' → logprob: -3.2038979530334473
    5. ' toutes' → logprob: -3.5788979530334473
    6. ' n' → logprob: -3.7038979530334473
    7. 'il' → logprob: -3.9538979530334473
    8. ' k' → logprob: -4.203897953033447
    9. ' les' → logprob: -4.328897953033447
    10. ' le' → logprob: -4.453897953033447

Token 323: ' parc' (ID: 22138)
  Prédit: 'tail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tail' → logprob: -1.9569299221038818
    2. 'case' → logprob: -2.081929922103882
    3. 'surface' → logprob: -2.081929922103882
    4. ' surface' → logprob: -2.956929922103882
    5. 'zone' → logprob: -3.081929922103882
    6. 'k' → logprob: -3.081929922103882
    7. ' taille' → logprob: -3.081929922103882
    8. ' case' → logprob: -3.456929922103882
    9. ' zone' → logprob: -3.831929922103882
    10. 'val' → logprob: -4.206930160522461

Token 324: 'elle' (ID: 3486)
  Prédit: 'elle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elle' → logprob: -0.774937093257904
    2. 'el' → logprob: -1.0249371528625488
    3. 'èle' → logprob: -2.649937152862549
    4. 'e' → logprob: -2.649937152862549
    5. 'ell' → logprob: -5.274937152862549
    6. 'él' → logprob: -5.649937152862549
    7. 'iel' → logprob: -6.274937152862549
    8. 'o' → logprob: -6.274937152862549
    9. '```' → logprob: -6.399937152862549
    10. '[' → logprob: -6.774937152862549

Token 325: ' doit' (ID: 21822)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.39249783754348755
    2. '<|end|>' → logprob: -2.1424977779388428
    3. ' s' → logprob: -3.1424977779388428
    4. ' est' → logprob: -3.5174977779388428
    5. '   ' → logprob: -4.142498016357422
    6. ' ' → logprob: -4.642498016357422
    7. 'e' → logprob: -4.892498016357422
    8. ' n' → logprob: -5.142498016357422
    9. ')' → logprob: -5.142498016357422
    10. '_' → logprob: -5.267498016357422

Token 326: ' être' (ID: 9104)
  Prédit: 'être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'être' → logprob: -0.7000314593315125
    2. ' être' → logprob: -1.0750315189361572
    3. 'contin' → logprob: -2.5750315189361572
    4. 's' → logprob: -4.450031280517578
    5. 'cont' → logprob: -4.575031280517578
    6. ' conten' → logprob: -4.700031280517578
    7. 'avoir' → logprob: -5.200031280517578
    8. ' ' → logprob: -5.450031280517578
    9. 'con' → logprob: -5.575031280517578
    10. 'conten' → logprob: -5.575031280517578

Token 327: ' un' (ID: 537)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -1.2068465948104858
    2. 'cont' → logprob: -1.5818465948104858
    3. 'exact' → logprob: -2.0818467140197754
    4. 'un' → logprob: -2.8318467140197754
    5. 'continue' → logprob: -2.9568467140197754
    6. 'rect' → logprob: -3.0818467140197754
    7. ' une' → logprob: -3.4568467140197754
    8. 'contin' → logprob: -3.5818467140197754
    9. ' exactement' → logprob: -3.8318467140197754
    10. ' un' → logprob: -4.581846714019775

Token 328: ' rectangle' (ID: 45808)
  Prédit: 'rectangle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rectangle' → logprob: -0.6953676342964172
    2. ' rectangle' → logprob: -0.9453676342964172
    3. 'rect' → logprob: -2.8203675746917725
    4. 'e' → logprob: -3.4453675746917725
    5. ' rect' → logprob: -5.945367813110352
    6. 'ensemble' → logprob: -5.945367813110352
    7. 's' → logprob: -6.070367813110352
    8. '_rectangle' → logprob: -6.882867813110352
    9. 'ique' → logprob: -7.007867813110352
    10. 'unique' → logprob: -7.070367813110352

Token 329: ' contenant' (ID: 131049)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2855103611946106
    2. '<|end|>' → logprob: -1.5355103015899658
    3. ',' → logprob: -4.285510540008545
    4. '<|end|>' → logprob: -5.285510540008545
    5. ')' → logprob: -5.660510540008545
    6. '...' → logprob: -6.285510540008545
    7. 's' → logprob: -6.535510540008545
    8. '.' → logprob: -6.785510540008545
    9. '   ' → logprob: -6.910510540008545
    10. '        
' → logprob: -7.160510540008545

Token 330: ' k' (ID: 372)
  Prédit: ' au'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' au' → logprob: -0.11390877515077591
    2. 'au' → logprob: -2.2389087677001953
    3. ' at' → logprob: -7.738908767700195
    4. 'at' → logprob: -8.363908767700195
    5. ' ' → logprob: -9.488908767700195
    6. 'un' → logprob: -9.738908767700195
    7. ' un' → logprob: -9.863908767700195
    8. 'exact' → logprob: -9.863908767700195
    9. ''au' → logprob: -10.488908767700195
    10. 'le' → logprob: -10.738908767700195

Token 331: ' cases' (ID: 7911)
  Prédit: ' cases'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cases' → logprob: -0.3279905319213867
    2. 'cases' → logprob: -1.3279905319213867
    3. ' cells' → logprob: -5.952990531921387
    4. '_cases' → logprob: -6.327990531921387
    5. ' tokens' → logprob: -6.327990531921387
    6. '<|end|>' → logprob: -6.577990531921387
    7. ' cellules' → logprob: -6.827990531921387
    8. ' espaces' → logprob: -6.827990531921387
    9. 'cells' → logprob: -7.202990531921387
    10. '_' → logprob: -7.327990531921387

Token 332: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3115445077419281
    2. '<|end|>' → logprob: -1.4365445375442505
    3. '.' → logprob: -4.186544418334961
    4. ',' → logprob: -4.686544418334961
    5. '<|end|>' → logprob: -5.811544418334961
    6. '...' → logprob: -6.811544418334961
    7. '        
' → logprob: -8.436544418334961
    8. ')' → logprob: -8.561544418334961
    9. '#' → logprob: -8.936544418334961
    10. ' and' → logprob: -8.936544418334961

Token 333: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03116978146135807
    2. ' ' → logprob: -4.156169891357422
    3. '<|end|>' → logprob: -4.906169891357422
    4. '        ' → logprob: -5.906169891357422
    5. '        
' → logprob: -6.781169891357422
    6. '#' → logprob: -7.156169891357422
    7. '   ' → logprob: -7.531169891357422
    8. ' for' → logprob: -7.781169891357422
    9. '    ' → logprob: -8.031169891357422
    10. ' 
' → logprob: -8.531169891357422

Token 334: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022348007187247276
    2. ' ' → logprob: -5.022347927093506
    3. '<|end|>' → logprob: -5.772347927093506
    4. '        
' → logprob: -5.897347927093506
    5. '        ' → logprob: -6.272347927093506
    6. '   ' → logprob: -6.272347927093506
    7. ' 
' → logprob: -6.647347927093506
    8. ' for' → logprob: -6.897347927093506
    9. '#' (adapté à ' #') → logprob: -6.897347927093506
    10. '    ' → logprob: -7.897347927093506

Token 335: ' Ensuite' (ID: 113884)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07290178537368774
    2. '#' → logprob: -2.947901725769043
    3. ' for' → logprob: -5.197901725769043
    4. ' #' → logprob: -5.947901725769043
    5. '   ' → logprob: -6.197901725769043
    6. '        
' → logprob: -6.322901725769043
    7. 'for' → logprob: -6.447901725769043
    8. ' 
' → logprob: -6.947901725769043
    9. '        ' → logprob: -7.947901725769043
    10. 'from' → logprob: -8.197901725769043

Token 336: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13516303896903992
    2. ' for' → logprob: -2.8851630687713623
    3. '#' → logprob: -3.2601630687713623
    4. 'for' → logprob: -4.010162830352783
    5. ',' → logprob: -5.135162830352783
    6. '<|end|>' → logprob: -6.010162830352783
    7. ' #' → logprob: -6.260162830352783
    8. ' on' → logprob: -7.385162830352783
    9. '   ' → logprob: -7.635162830352783
    10. 'import' → logprob: -7.760162830352783

Token 337: ' essayer' (ID: 92713)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.0405937135219574
    2. '       ' → logprob: -3.9155936241149902
    3. ' #' → logprob: -4.16559362411499
    4. 'for' → logprob: -6.04059362411499
    5. ' for' → logprob: -7.29059362411499
    6. 'pass' → logprob: -7.41559362411499
    7. ' on' → logprob: -8.540594100952148
    8. '        ' → logprob: -9.915594100952148
    9. ' ' → logprob: -9.915594100952148
    10. '        
' → logprob: -10.040594100952148

Token 338: ' toutes' (ID: 17502)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.45609328150749207
    2. ' d' → logprob: -1.8310933113098145
    3. '    ' → logprob: -2.0810933113098145
    4. '<|end|>' → logprob: -3.8310933113098145
    5. 'de' → logprob: -3.9560933113098145
    6. 'd' → logprob: -3.9560933113098145
    7. ' ' → logprob: -4.8310933113098145
    8. '   ' → logprob: -5.0810933113098145
    9. 's' → logprob: -6.7060933113098145
    10. ' ' → logprob: -7.2060933113098145

Token 339: ' les' (ID: 1341)
  Prédit: ' possibles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' possibles' → logprob: -1.1540123224258423
    2. ' possible' → logprob: -1.2790123224258423
    3. 'possible' → logprob: -1.6540123224258423
    4. '<|end|>' → logprob: -3.2790122032165527
    5. 'poss' → logprob: -3.6540122032165527
    6. '_possible' → logprob: -3.9040122032165527
    7. ' des' → logprob: -4.029012203216553
    8. ' combinations' → logprob: -4.029012203216553
    9. ' ' → logprob: -4.154012203216553
    10. 's' → logprob: -4.279012203216553

Token 340: ' comb' (ID: 4134)
  Prédit: 'ache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ache' → logprob: -1.7775053977966309
    2. 'poss' → logprob: -2.027505397796631
    3. ' ache' → logprob: -2.652505397796631
    4. 'positions' → logprob: -2.902505397796631
    5. 'man' → logprob: -2.902505397796631
    6. 'rect' → logprob: -3.027505397796631
    7. ' configurations' → logprob: -3.027505397796631
    8. 'ach' → logprob: -3.152505397796631
    9. 'comb' → logprob: -3.277505397796631
    10. ' façons' → logprob: -3.277505397796631

Token 341: 'inais' (ID: 42744)
  Prédit: 'inais'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inais' → logprob: -0.14005392789840698
    2. 'inations' → logprob: -2.1400539875030518
    3. 'in' → logprob: -5.265053749084473
    4. 'os' → logprob: -5.515053749084473
    5. '```' → logprob: -6.765053749084473
    6. '#' → logprob: -7.265053749084473
    7. 'ina' → logprob: -7.640053749084473
    8. 'inas' → logprob: -8.265053749084473
    9. '``' → logprob: -8.390053749084473
    10. 'o' → logprob: -9.140053749084473

Token 342: 'ons' (ID: 1808)
  Prédit: 'ons'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ons' → logprob: -0.1930338442325592
    2. 'sons' → logprob: -1.8180338144302368
    3. 't' → logprob: -4.443033695220947
    4. 's' → logprob: -7.068033695220947
    5. 'on' → logprob: -8.693034172058105
    6. '```' → logprob: -9.068034172058105
    7. 'son' → logprob: -9.443034172058105
    8. 'ations' → logprob: -9.568034172058105
    9. 'ts' → logprob: -10.193034172058105
    10. 'ais' → logprob: -10.193034172058105

Token 343: ' possibles' (ID: 97753)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 344: ' de' (ID: 334)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 345: ' ces' (ID: 10532)
  Prédit: ' rectangles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' rectangles' → logprob: -0.9854363799095154
    2. 'placements' → logprob: -1.7354364395141602
    3. 'rect' → logprob: -1.9854364395141602
    4. 'placement' → logprob: -3.11043643951416
    5. ' rec' → logprob: -3.23543643951416
    6. ' placements' → logprob: -3.36043643951416
    7. ' placement' → logprob: -3.73543643951416
    8. ' l' → logprob: -3.86043643951416
    9. 'assign' → logprob: -3.86043643951416
    10. 'rec' → logprob: -4.11043643951416

Token 346: ' rectangles' (ID: 164265)
  Prédit: 'rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rect' → logprob: -0.6067308187484741
    2. ' rectangles' → logprob: -0.9817308187484741
    3. ' rect' → logprob: -2.9817309379577637
    4. '_rect' → logprob: -3.8567309379577637
    5. ' espaces' → logprob: -5.856730937957764
    6. '_' → logprob: -6.731730937957764
    7. ' zones' → logprob: -7.231730937957764
    8. 'poss' → logprob: -7.981730937957764
    9. ' candidats' → logprob: -8.356730461120605
    10. 'rectangle' → logprob: -8.606730461120605

Token 347: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5961151123046875
    2. '<|end|>' → logprob: -0.8461151123046875
    3. '<|end|>' → logprob: -4.3461151123046875
    4. ',' → logprob: -6.2211151123046875
    5. '   ' → logprob: -6.9711151123046875
    6. '...' → logprob: -7.0961151123046875
    7. '        
' → logprob: -7.4711151123046875
    8. ' for' → logprob: -7.8461151123046875
    9. '.' → logprob: -7.9711151123046875
    10. '        ' → logprob: -8.221115112304688

Token 348: 'un' (ID: 373)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.039786163717508316
    2. ' )' → logprob: -3.5397861003875732
    3. ' pour' → logprob: -5.914786338806152
    4. 'pour' → logprob: -6.289786338806152
    5. '#' → logprob: -6.414786338806152
    6. '),' → logprob: -7.289786338806152
    7. ',' → logprob: -7.414786338806152
    8. ').' → logprob: -7.539786338806152
    9. ')
' → logprob: -8.164786338806152
    10. ' sur' → logprob: -8.539786338806152

Token 349: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -1.3221044540405273
    2. ' )' → logprob: -1.3221044540405273
    3. ')' → logprob: -2.0721044540405273
    4. ' espace' → logprob: -2.0721044540405273
    5. ' pour' → logprob: -2.8221044540405273
    6. ' for' → logprob: -3.1971044540405273
    7. '_' → logprob: -3.4471044540405273
    8. ' seul' → logprob: -3.9471044540405273
    9. 'par' → logprob: -4.697104454040527
    10. ' space' → logprob: -4.822104454040527

Token 350: ' ache' (ID: 27427)
  Prédit: ' ache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ache' → logprob: -0.1104133129119873
    2. 'ache' → logprob: -2.3604133129119873
    3. ' buyer' → logprob: -5.235413551330566
    4. ' vendeur' → logprob: -6.610413551330566
    5. ' b' → logprob: -6.735413551330566
    6. 'b' → logprob: -7.485413551330566
    7. 'buyer' → logprob: -7.735413551330566
    8. 'ach' → logprob: -8.485413551330566
    9. 'achat' → logprob: -8.860413551330566
    10. ' ach' → logprob: -9.110413551330566

Token 351: 'teur' (ID: 45262)
  Prédit: 'teur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'teur' → logprob: -0.0002647927321959287
    2. '#' → logprob: -8.875265121459961
    3. 'te' → logprob: -9.500265121459961
    4. '\' → logprob: -11.000265121459961
    5. 'teurs' → logprob: -11.375265121459961
    6. '``' → logprob: -12.875265121459961
    7. '```' → logprob: -13.000265121459961
    8. 't' → logprob: -13.375265121459961
    9. 'ter' → logprob: -13.500265121459961
    10. '`' → logprob: -13.750265121459961

Token 352: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.043928034603595734
    2. ' )' → logprob: -3.1689281463623047
    3. '):' → logprob: -7.918928146362305
    4. ').' → logprob: -8.918928146362305
    5. ' pour' → logprob: -8.918928146362305
    6. '),' → logprob: -9.418928146362305
    7. ',' → logprob: -10.418928146362305
    8. ' ):' → logprob: -10.668928146362305
    9. ')
' → logprob: -10.918928146362305
    10. ' for' → logprob: -10.918928146362305

Token 353: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022565171122550964
    2. ' ' → logprob: -4.5225653648376465
    3. '        ' → logprob: -5.7725653648376465
    4. '#' → logprob: -6.6475653648376465
    5. '   ' → logprob: -6.6475653648376465
    6. ' 
' → logprob: -6.6475653648376465
    7. '        
' → logprob: -6.6475653648376465
    8. '<|end|>' → logprob: -6.6475653648376465
    9. ' ' → logprob: -8.147564888000488
    10. '    ' → logprob: -8.272564888000488

Token 354: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005916827358305454
    2. '<|end|>' → logprob: -5.755916595458984
    3. '#' (adapté à ' #') → logprob: -6.630916595458984
    4. '   ' → logprob: -7.630916595458984
    5. '        
' → logprob: -8.880916595458984
    6. ' ' → logprob: -9.130916595458984
    7. '
' → logprob: -9.630916595458984
    8. ' for' → logprob: -9.630916595458984
    9. '           ' → logprob: -9.880916595458984
    10. ',' → logprob: -10.005916595458984

Token 355: ' Vér' (ID: 159169)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08398139476776123
    2. '        ' → logprob: -3.333981513977051
    3. ' ' → logprob: -4.458981513977051
    4. '#' → logprob: -4.708981513977051
    5. '<|end|>' → logprob: -4.958981513977051
    6. '   ' → logprob: -5.708981513977051
    7. '        
' → logprob: -5.708981513977051
    8. '    ' → logprob: -6.083981513977051
    9. ' for' → logprob: -6.833981513977051
    10. 'from' → logprob: -7.083981513977051

Token 356: 'ifier' (ID: 4550)
  Prédit: 'ifier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifier' → logprob: -0.18496286869049072
    2. 'ification' → logprob: -2.434962749481201
    3. 'ifie' → logprob: -3.559962749481201
    4. 'if' → logprob: -3.684962749481201
    5. 'ifiez' → logprob: -4.184962749481201
    6. 'i' → logprob: -5.559962749481201
    7. 'ifiant' → logprob: -6.434962749481201
    8. '```' → logprob: -6.434962749481201
    9. 'ifié' → logprob: -6.684962749481201
    10. 'ify' → logprob: -7.184962749481201

Token 357: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.45108264684677124
    2. ' si' → logprob: -1.451082706451416
    3. ' if' → logprob: -3.826082706451416
    4. ' la' → logprob: -3.951082706451416
    5. ' leur' → logprob: -3.951082706451416
    6. '<|end|>' → logprob: -4.326082706451416
    7. 'si' → logprob: -4.576082706451416
    8. ' s' → logprob: -4.826082706451416
    9. 'que' → logprob: -4.826082706451416
    10. ' ' → logprob: -5.326082706451416

Token 358: ' ces' (ID: 10532)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -1.7332488298416138
    2. 'auc' → logprob: -1.7332488298416138
    3. 'les' → logprob: -1.8582488298416138
    4. ' ils' → logprob: -2.108248710632324
    5. ' l' → logprob: -2.608248710632324
    6. ' ces' → logprob: -2.983248710632324
    7. ' ' → logprob: -3.483248710632324
    8. '   ' → logprob: -3.608248710632324
    9. ' la' → logprob: -3.608248710632324
    10. ' leur' → logprob: -3.733248710632324

Token 359: ' rectangles' (ID: 164265)
  Prédit: ' rectangles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rectangles' → logprob: -0.04294678568840027
    2. 'rect' → logprob: -3.2929468154907227
    3. ' rect' → logprob: -5.667946815490723
    4. ' espaces' → logprob: -8.417946815490723
    5. '_rect' → logprob: -8.417946815490723
    6. ' comb' → logprob: -8.667946815490723
    7. ' ' → logprob: -8.917946815490723
    8. '#' → logprob: -9.542946815490723
    9. '(rect' → logprob: -9.542946815490723
    10. ' rectangle' → logprob: -9.792946815490723

Token 360: ' for' (ID: 395)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6740339398384094
    2. ' n' → logprob: -1.6740338802337646
    3. 'ne' → logprob: -2.0490338802337646
    4. ' ne' → logprob: -2.2990338802337646
    5. 's' → logprob: -2.7990338802337646
    6. '#' → logprob: -6.049034118652344
    7. '   ' → logprob: -6.424034118652344
    8. ' couvr' → logprob: -6.549034118652344
    9. ' sont' → logprob: -6.799034118652344
    10. 'se' → logprob: -6.799034118652344

Token 361: 'ment' (ID: 508)
  Prédit: 'ment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -5.796184723294573e-06
    2. '```' → logprob: -13.125005722045898
    3. '#' → logprob: -13.625005722045898
    4. 'm' → logprob: -14.500005722045898
    5. 'mant' → logprob: -15.250005722045898
    6. '\' → logprob: -15.375005722045898
    7. '   ' → logprob: -15.500005722045898
    8. '``' → logprob: -15.500005722045898
    9. 'me' → logprob: -15.625005722045898
    10. '##' → logprob: -16.3750057220459

Token 362: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.5800968408584595
    2. 'une' → logprob: -1.3300968408584595
    3. ' un' → logprob: -1.9550968408584595
    4. 'un' → logprob: -3.58009672164917
    5. '   ' → logprob: -6.58009672164917
    6. ' des' → logprob: -6.83009672164917
    7. 't' → logprob: -7.70509672164917
    8. 'ensemble' → logprob: -7.83009672164917
    9. ' bien' → logprob: -8.080097198486328
    10. 'des' → logprob: -8.205097198486328

Token 363: ' partition' (ID: 31512)
  Prédit: 'partition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'partition' → logprob: -0.021186113357543945
    2. ' partition' → logprob: -4.021185874938965
    3. 'part' → logprob: -6.521185874938965
    4. 'cou' → logprob: -7.021185874938965
    5. 'd' → logprob: -8.646185874938965
    6. 'p' → logprob: -8.896185874938965
    7. '_partition' → logprob: -9.021185874938965
    8. ' couverture' → logprob: -9.896185874938965
    9. 'solution' → logprob: -10.146185874938965
    10. 'dis' → logprob: -10.396185874938965

Token 364: ' complète' (ID: 75660)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 365: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5575620532035828
    2. '   ' → logprob: -1.6825621128082275
    3. '<|end|>' → logprob: -2.3075621128082275
    4. '_' → logprob: -2.9325621128082275
    5. '
' → logprob: -3.6825621128082275
    6. ',' → logprob: -4.182561874389648
    7. '#' → logprob: -4.307561874389648
    8. ':' → logprob: -5.432561874389648
    9. '\' → logprob: -5.557561874389648
    10. '        
' → logprob: -5.807561874389648

Token 366: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.11537419259548187
    2. ' la' → logprob: -2.6153740882873535
    3. 's' → logprob: -4.2403740882873535
    4. 'the' → logprob: -4.2403740882873535
    5. ' s' → logprob: -6.1153740882873535
    6. 'l' → logprob: -6.1153740882873535
    7. 'le' → logprob: -6.3653740882873535
    8. ' the' → logprob: -7.7403740882873535
    9. 'range' → logprob: -8.740374565124512
    10. ' l' → logprob: -9.615374565124512

Token 367: ' parc' (ID: 22138)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.029485240578651428
    2. ' grille' → logprob: -4.02948522567749
    3. ' gr' → logprob: -4.90448522567749
    4. 'surface' → logprob: -6.27948522567749
    5. ' surface' → logprob: -7.15448522567749
    6. 'grid' → logprob: -7.65448522567749
    7. ' grid' → logprob: -8.779485702514648
    8. '```' → logprob: -9.029485702514648
    9. 's' → logprob: -9.529485702514648
    10. 'terrain' → logprob: -9.654485702514648

Token 368: 'elle' (ID: 3486)
  Prédit: 'elle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elle' → logprob: -0.005020394455641508
    2. 'e' → logprob: -5.630020618438721
    3. 'èle' → logprob: -7.255020618438721
    4. 'ele' → logprob: -7.880020618438721
    5. 'el' → logprob: -9.255020141601562
    6. 'ielle' → logprob: -10.005020141601562
    7. 'le' → logprob: -10.630020141601562
    8. 'iel' → logprob: -10.630020141601562
    9. 'ule' → logprob: -11.005020141601562
    10. 'ell' → logprob: -11.130020141601562

Token 369: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06351730227470398
    2. '<|end|>' → logprob: -4.063517093658447
    3. '   ' → logprob: -4.313517093658447
    4. '
' → logprob: -4.313517093658447
    5. '        
' → logprob: -5.313517093658447
    6. '#' → logprob: -5.938517093658447
    7. ' ' → logprob: -6.188517093658447
    8. '        ' → logprob: -6.938517093658447
    9. ' for' → logprob: -7.188517093658447
    10. '_' → logprob: -7.563517093658447

Token 370: 'X' (ID: 55)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5571515560150146
    2. ' la' → logprob: -2.0571515560150146
    3. ' s' → logprob: -2.5571515560150146
    4. 'la' → logprob: -2.6821515560150146
    5. ' )' → logprob: -2.6821515560150146
    6. 's' → logprob: -2.8071515560150146
    7. 'sans' → logprob: -2.9321515560150146
    8. 'le' → logprob: -3.0571515560150146
    9. ' sans' → logprob: -3.1821515560150146
    10. 'l' → logprob: -3.5571515560150146

Token 371: '*' (ID: 9)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -1.0953359603881836
    2. ' >=' → logprob: -1.9703359603881836
    3. '   ' → logprob: -2.0953359603881836
    4. ',' → logprob: -2.3453359603881836
    5. ' >' → logprob: -2.5953359603881836
    6. ')' → logprob: -2.7203359603881836
    7. '=' → logprob: -3.5953359603881836
    8. ' ==' → logprob: -3.8453359603881836
    9. ' ' → logprob: -4.345335960388184
    10. ' ,' → logprob: -4.470335960388184

Token 372: 'Y' (ID: 56)
  Prédit: 'Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.002201167168095708
    2. ' Y' → logprob: -6.127201080322266
    3. '   ' → logprob: -12.002201080322266
    4. ' ' → logprob: -12.877201080322266
    5. '
' → logprob: -13.002201080322266
    6. '	Y' → logprob: -14.127201080322266
    7. '```' → logprob: -14.252201080322266
    8. ')' → logprob: -14.502201080322266
    9. '  ' → logprob: -14.752201080322266
    10. '

' → logprob: -14.877201080322266

Token 373: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.062020789831876755
    2. ' )' → logprob: -2.937020778656006
    3. ').' → logprob: -5.312020778656006
    4. '),' → logprob: -7.312020778656006
    5. '*' → logprob: -7.562020778656006
    6. '.' → logprob: -8.562021255493164
    7. ' ).' → logprob: -8.937021255493164
    8. ',' → logprob: -9.437021255493164
    9. '):' → logprob: -9.687021255493164
    10. ' ),' → logprob: -9.687021255493164

Token 374: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14296121895313263
    2. '#' → logprob: -2.267961263656616
    3. 'for' → logprob: -5.392961025238037
    4. ' for' → logprob: -5.517961025238037
    5. '   ' → logprob: -5.767961025238037
    6. 'possible' → logprob: -5.892961025238037
    7. 'from' → logprob: -6.142961025238037
    8. '        
' → logprob: -6.142961025238037
    9. '
' → logprob: -6.267961025238037
    10. 'import' → logprob: -7.017961025238037

Token 375: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.060499176383018494
    2. '<|end|>' → logprob: -3.0604991912841797
    3. '
' → logprob: -5.56049919128418
    4. '#' (adapté à ' #') → logprob: -5.56049919128418
    5. '        
' → logprob: -6.43549919128418
    6. '   ' → logprob: -7.31049919128418
    7. ' ' → logprob: -7.56049919128418
    8. '        ' → logprob: -8.06049919128418
    9. '<|end|>' → logprob: -8.31049919128418
    10. '...' → logprob: -9.18549919128418

Token 376: ' -' (ID: 533)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 377: ' Si' (ID: 7832)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9204731583595276
    2. 'from' → logprob: -0.9204731583595276
    3. 'for' → logprob: -2.795473098754883
    4. 'import' → logprob: -3.170473098754883
    5. '       ' → logprob: -3.545473098754883
    6. 'pass' → logprob: -3.670473098754883
    7. 'possible' → logprob: -4.670473098754883
    8. '   ' → logprob: -4.920473098754883
    9. 'continue' → logprob: -5.170473098754883
    10. ' #' → logprob: -5.545473098754883

Token 378: ' plus' (ID: 2932)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.8814188241958618
    2. ' not' → logprob: -2.0064187049865723
    3. 'possible' → logprob: -2.2564187049865723
    4. 'len' → logprob: -2.6314187049865723
    5. 'X' → logprob: -3.3814187049865723
    6. ' possible' → logprob: -3.8814187049865723
    7. ' X' → logprob: -3.8814187049865723
    8. 'une' → logprob: -3.8814187049865723
    9. ' la' → logprob: -4.256418704986572
    10. 'les' → logprob: -4.256418704986572

Token 379: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.5284847021102905
    2. ' d' → logprob: -1.7784847021102905
    3. 'de' → logprob: -2.65348482131958
    4. '_' → logprob: -3.15348482131958
    5. 'd' → logprob: -3.40348482131958
    6. 'ieurs' → logprob: -4.02848482131958
    7. '<|end|>' → logprob: -4.27848482131958
    8. '=' → logprob: -4.27848482131958
    9. ')' → logprob: -5.40348482131958
    10. ' complet' → logprob: -5.65348482131958

Token 380: ''une' (ID: 13337)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.7499067783355713
    2. 'e' → logprob: -1.1249067783355713
    3. '```' → logprob: -2.7499067783355713
    4. 'ieurs' → logprob: -3.3749067783355713
    5. 'de' → logprob: -3.4999067783355713
    6. 'u' → logprob: -4.499906539916992
    7. 'i' → logprob: -4.874906539916992
    8. ' rien' → logprob: -4.874906539916992
    9. '_' → logprob: -5.124906539916992
    10. ' aucun' → logprob: -5.249906539916992

Token 381: ' solution' (ID: 7578)
  Prédit: ' solution'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' solution' → logprob: -0.2026408165693283
    2. ' espace' → logprob: -2.9526407718658447
    3. ' space' → logprob: -3.4526407718658447
    4. ' partition' → logprob: -4.452641010284424
    5. ' personne' → logprob: -4.452641010284424
    6. ' possible' → logprob: -4.577641010284424
    7. ' de' → logprob: -4.702641010284424
    8. ' d' → logprob: -5.202641010284424
    9. ' ' → logprob: -5.702641010284424
    10. '_' → logprob: -5.952641010284424

Token 382: ' valide' (ID: 137323)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 383: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06682651489973068
    2. ',' → logprob: -3.566826581954956
    3. '<|end|>' → logprob: -3.566826581954956
    4. ':
' → logprob: -6.691826343536377
    5. ')' → logprob: -6.941826343536377
    6. '.' → logprob: -6.941826343536377
    7. '<|end|>' → logprob: -7.191826343536377
    8. ' :' → logprob: -7.441826343536377
    9. '=' → logprob: -7.941826343536377
    10. '#' → logprob: -7.941826343536377

Token 384: ' impr' (ID: 30234)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.5520930886268616
    2. ' return' → logprob: -1.5520930290222168
    3. 'print' → logprob: -2.427093029022217
    4. ' pass' → logprob: -3.177093029022217
    5. 'return' → logprob: -3.427093029022217
    6. ' continue' → logprob: -3.927093029022217
    7. '   ' → logprob: -4.802093029022217
    8. 'continue' → logprob: -5.177093029022217
    9. ' #' → logprob: -5.302093029022217
    10. '#' → logprob: -5.552093029022217

Token 385: 'imer' (ID: 3747)
  Prédit: 'imer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imer' → logprob: -0.04350116103887558
    2. 'im' → logprob: -3.418501138687134
    3. 'ime' → logprob: -5.918501377105713
    4. 'ess' → logprob: -6.793501377105713
    5. 'imir' → logprob: -7.293501377105713
    6. 'int' → logprob: -7.293501377105713
    7. 'inter' → logprob: -7.731001377105713
    8. 'es' → logprob: -8.293500900268555
    9. 'ession' → logprob: -8.293500900268555
    10. 'IMER' → logprob: -8.356000900268555

Token 386: ' NA' (ID: 24259)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5280395150184631
    2. ''' → logprob: -1.1530394554138184
    3. ' "' → logprob: -3.1530394554138184
    4. 's' → logprob: -4.403039455413818
    5. '```' → logprob: -4.528039455413818
    6. ' ' → logprob: -5.028039455413818
    7. '`' → logprob: -5.528039455413818
    8. ''s' → logprob: -5.778039455413818
    9. '<|end|>' → logprob: -6.278039455413818
    10. ' '' → logprob: -6.403039455413818

Token 387: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.046859271824359894
    2. '
' → logprob: -3.7968592643737793
    3. '<|end|>' → logprob: -4.296859264373779
    4. '        
' → logprob: -5.546859264373779
    5. '   ' → logprob: -6.046859264373779
    6. '        ' → logprob: -7.796859264373779
    7. ',' → logprob: -7.796859264373779
    8. ' ' → logprob: -7.796859264373779
    9. ')' → logprob: -8.046859741210938
    10. 'import' → logprob: -8.171859741210938

Token 388: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025608818978071213
    2. '#' → logprob: -4.150609016418457
    3. '
' → logprob: -5.275609016418457
    4. '   ' → logprob: -6.650609016418457
    5. '<|end|>' → logprob: -7.150609016418457
    6. '        
' → logprob: -7.650609016418457
    7. '\n' → logprob: -8.275609016418457
    8. '           ' → logprob: -8.400609016418457
    9. ',' → logprob: -8.525609016418457
    10. '\' → logprob: -8.650609016418457

Token 389: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03409501910209656
    2. '#' (adapté à ' #') → logprob: -3.409095048904419
    3. '   ' → logprob: -8.90909481048584
    4. '           ' → logprob: -9.65909481048584
    5. '<|end|>' → logprob: -9.78409481048584
    6. ' #' → logprob: -10.03409481048584
    7. ',' → logprob: -10.65909481048584
    8. '
' → logprob: -11.03409481048584
    9. ' ' → logprob: -11.03409481048584
    10. ')' → logprob: -11.15909481048584

Token 390: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020650502294301987
    2. '#' → logprob: -4.645650386810303
    3. '   ' → logprob: -5.770650386810303
    4. '<|end|>' → logprob: -5.895650386810303
    5. ' for' → logprob: -7.020650386810303
    6. 'for' → logprob: -7.270650386810303
    7. '...' → logprob: -7.520650386810303
    8. '
' → logprob: -7.770650386810303
    9. ')' → logprob: -7.770650386810303
    10. '        
' → logprob: -8.395650863647461

Token 391: ' Si' (ID: 7832)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.679688572883606
    2. 'else' → logprob: -1.929688572883606
    3. 'return' → logprob: -2.3046884536743164
    4. ' return' → logprob: -2.8046884536743164
    5. ' else' → logprob: -2.8046884536743164
    6. 'Sinon' → logprob: -3.3046884536743164
    7. '#' → logprob: -3.5546884536743164
    8. ' elif' → logprob: -4.054688453674316
    9. ' Sinon' → logprob: -4.304688453674316
    10. '   ' → logprob: -4.304688453674316

Token 392: ' aucune' (ID: 51173)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.9871844053268433
    2. 'une' → logprob: -0.9871844053268433
    3. 'exact' → logprob: -2.612184524536133
    4. ' aucune' → logprob: -2.987184524536133
    5. 'len' → logprob: -3.362184524536133
    6. ' len' → logprob: -4.362184524536133
    7. 'auc' → logprob: -4.487184524536133
    8. ' exactly' → logprob: -4.612184524536133
    9. ' seulement' → logprob: -4.737184524536133
    10. ' only' → logprob: -4.862184524536133

Token 393: ' solution' (ID: 7578)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 394: ' valide' (ID: 137323)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.025870924815535545
    2. 'val' → logprob: -4.5258708000183105
    3. 'valid' → logprob: -4.5258708000183105
    4. '_valid' → logprob: -6.7758708000183105
    5. '_val' → logprob: -6.7758708000183105
    6. '   ' → logprob: -7.5258708000183105
    7. ' valid' → logprob: -8.025871276855469
    8. 'found' → logprob: -9.150871276855469
    9. ' ' → logprob: -9.400871276855469
    10. ' valide' → logprob: -9.650871276855469

Token 395: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0015325936255976558
    2. '   ' → logprob: -6.751532554626465
    3. ',' → logprob: -8.626532554626465
    4. ' :' → logprob: -9.251532554626465
    5. ':
' → logprob: -10.626532554626465
    6. 'print' → logprob: -11.501532554626465
    7. '       ' → logprob: -11.501532554626465
    8. '==' → logprob: -11.876532554626465
    9. '           ' → logprob: -12.126532554626465
    10. '    ' → logprob: -12.501532554626465

Token 396: ' impr' (ID: 30234)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.20590709149837494
    2. ' print' → logprob: -1.7059071063995361
    3. 'im' → logprob: -5.955906867980957
    4. '   ' → logprob: -6.580906867980957
    5. ' impr' → logprob: -8.955906867980957
    6. '       ' → logprob: -9.830906867980957
    7. 'pr' → logprob: -9.830906867980957
    8. '```' → logprob: -10.080906867980957
    9. 'Im' → logprob: -10.330906867980957
    10. '	print' → logprob: -10.330906867980957

Token 397: 'imer' (ID: 3747)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.18093141913414001
    2. 'imer' → logprob: -1.9309314489364624
    3. 'im' → logprob: -5.055931568145752
    4. 'ime' → logprob: -5.305931568145752
    5. 'nt' → logprob: -5.680931568145752
    6. 'INT' → logprob: -6.805931568145752
    7. 'imir' → logprob: -7.680931568145752
    8. 'IMER' → logprob: -7.805931568145752
    9. 'inter' → logprob: -7.930931568145752
    10. 'ent' → logprob: -7.930931568145752

Token 398: ' NA' (ID: 24259)
  Prédit: 'Impossible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Impossible' → logprob: -0.4421057105064392
    2. 'IMP' → logprob: -1.942105770111084
    3. ' impossible' → logprob: -2.442105770111084
    4. 'NO' → logprob: -3.567105770111084
    5. ' Impossible' → logprob: -3.942105770111084
    6. 'im' → logprob: -4.192105770111084
    7. '"' → logprob: -4.567105770111084
    8. 'None' → logprob: -4.817105770111084
    9. '"No' → logprob: -4.817105770111084
    10. 'No' → logprob: -5.067105770111084

Token 399: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15448957681655884
    2. '<|end|>' → logprob: -2.029489517211914
    3. '#' → logprob: -5.529489517211914
    4. '<|end|>' → logprob: -6.279489517211914
    5. '
' → logprob: -6.654489517211914
    6. '   ' → logprob: -6.779489517211914
    7. '        
' → logprob: -7.154489517211914
    8. '        ' → logprob: -7.779489517211914
    9. ' ' → logprob: -7.779489517211914
    10. ',' → logprob: -8.154489517211914

Token 400: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08626101911067963
    2. '<|end|>' → logprob: -2.711261034011841
    3. '
' → logprob: -4.586260795593262
    4. '        
' → logprob: -5.836260795593262
    5. '<|end|>' → logprob: -6.711260795593262
    6. '#' → logprob: -7.211260795593262
    7. '   ' → logprob: -7.586260795593262
    8. '```' → logprob: -9.836260795593262
    9. '\n' → logprob: -9.961260795593262
    10. '\' → logprob: -9.961260795593262

Token 401: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08867201954126358
    2. '
' → logprob: -2.963671922683716
    3. '        
' → logprob: -3.963671922683716
    4. '\n' → logprob: -5.338672161102295
    5. '   ' → logprob: -5.588672161102295
    6. '    
' → logprob: -6.838672161102295
    7. '<|end|>' → logprob: -6.838672161102295
    8. '  
' → logprob: -7.088672161102295
    9. '\' → logprob: -7.338672161102295
    10. ' 
' → logprob: -7.463672161102295

Token 402: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01738019473850727
    2. '   ' → logprob: -5.267380237579346
    3. '#' → logprob: -5.767380237579346
    4. ' 
' → logprob: -6.517380237579346
    5. '        
' → logprob: -6.517380237579346
    6. '        ' → logprob: -7.142380237579346
    7. ' ' → logprob: -7.267380237579346
    8. '[' → logprob: -7.392380237579346
    9. '\' → logprob: -7.642380237579346
    10. '_' → logprob: -7.767380237579346

Token 403: ' Sinon' (ID: 154924)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.22887727618217468
    2. '       ' → logprob: -2.228877305984497
    3. 'return' → logprob: -3.353877305984497
    4. 'for' → logprob: -3.853877305984497
    5. '   ' → logprob: -4.103877067565918
    6. 'else' → logprob: -4.853877067565918
    7. 'def' → logprob: -5.978877067565918
    8. ' for' → logprob: -6.103877067565918
    9. 'Pour' → logprob: -6.103877067565918
    10. ' return' → logprob: -6.353877067565918

Token 404: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030377337709069252
    2. ':' → logprob: -5.155377388000488
    3. '   ' → logprob: -5.280377388000488
    4. ' for' → logprob: -5.405377388000488
    5. '#' → logprob: -5.655377388000488
    6. 'return' → logprob: -5.780377388000488
    7. ' return' → logprob: -5.905377388000488
    8. 'for' → logprob: -6.780377388000488
    9. 'print' → logprob: -6.905377388000488
    10. '           ' → logprob: -7.530377388000488

Token 405: ' impr' (ID: 30234)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7150692939758301
    2. '       ' → logprob: -0.9650692939758301
    3. 'return' → logprob: -2.84006929397583
    4. 'print' → logprob: -3.84006929397583
    5. ' return' → logprob: -4.09006929397583
    6. '   ' → logprob: -4.46506929397583
    7. ' #' → logprob: -4.84006929397583
    8. ' print' → logprob: -5.84006929397583
    9. 'for' → logprob: -5.96506929397583
    10. ' retourner' → logprob: -6.21506929397583

Token 406: 'imer' (ID: 3747)
  Prédit: 'imer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imer' → logprob: -0.07986582815647125
    2. 'mer' → logprob: -2.7048659324645996
    3. 'ter' → logprob: -6.5798659324646
    4. 'm' → logprob: -6.8298659324646
    5. 'im' → logprob: -6.8298659324646
    6. 'primer' → logprob: -7.0798659324646
    7. 'inter' → logprob: -7.2048659324646
    8. 'ment' → logprob: -7.3298659324646
    9. 'nt' → logprob: -7.9548659324646
    10. 'r' → logprob: -8.079865455627441

Token 407: ' la' (ID: 557)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.6281844973564148
    2. ' la' → logprob: -2.3781845569610596
    3. 'la' → logprob: -2.5031845569610596
    4. ''' → logprob: -2.7531845569610596
    5. 'l' → logprob: -3.1281845569610596
    6. 'les' → logprob: -3.2531845569610596
    7. 'the' → logprob: -3.3781845569610596
    8. 'len' → logprob: -3.6281845569610596
    9. 'le' → logprob: -4.2531843185424805
    10. 'rect' → logprob: -4.5031843185424805

Token 408: ' solution' (ID: 7578)
  Prédit: ' solution'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' solution' → logprob: -0.4512987434864044
    2. 'solution' → logprob: -1.201298713684082
    3. 's' → logprob: -4.576298713684082
    4. 'rect' → logprob: -4.826298713684082
    5. 'sol' → logprob: -4.826298713684082
    6. 'rectangle' → logprob: -4.951298713684082
    7. 're' → logprob: -5.576298713684082
    8. ' rectangle' → logprob: -6.451298713684082
    9. 'partition' → logprob: -6.576298713684082
    10. ' code' → logprob: -6.701298713684082

Token 409: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.70533287525177
    2. '_' → logprob: -1.33033287525177
    3. '
' → logprob: -2.7053327560424805
    4. '<|end|>' → logprob: -2.9553327560424805
    5. '   ' → logprob: -3.4553327560424805
    6. '        
' → logprob: -4.0803327560424805
    7. 'import' → logprob: -4.2053327560424805
    8. '#' → logprob: -4.2053327560424805
    9. ' _' → logprob: -4.7053327560424805
    10. '\n' → logprob: -5.4553327560424805

Token 410: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09464375674724579
    2. '        
' → logprob: -3.5946438312530518
    3. '
' → logprob: -3.9696438312530518
    4. '   ' → logprob: -4.094643592834473
    5. '<|end|>' → logprob: -4.344643592834473
    6. ' 
' → logprob: -6.219643592834473
    7. '        ' → logprob: -6.344643592834473
    8. ' ' → logprob: -6.594643592834473
    9. '    
' → logprob: -6.719643592834473
    10. '    ' → logprob: -7.094643592834473

Token 411: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49949270486831665
    2. '#' (adapté à ' #') → logprob: -1.8744926452636719
    3. 'from' → logprob: -2.624492645263672
    4. 'for' → logprob: -3.249492645263672
    5. 'buyers' → logprob: -3.624492645263672
    6. '   ' → logprob: -3.749492645263672
    7. 'buyer' → logprob: -3.999492645263672
    8. ' buyers' → logprob: -4.499492645263672
    9. ' for' → logprob: -4.749492645263672
    10. 'import' → logprob: -4.749492645263672

Token 412: ' Constru' (ID: 98396)
  Prédit: ' buyers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' buyers' → logprob: -1.3054735660552979
    2. 'buyers' → logprob: -1.4304735660552979
    3. '#' → logprob: -2.055473566055298
    4. 'buyer' → logprob: -2.180473566055298
    5. 'from' → logprob: -2.555473566055298
    6. ' buyer' → logprob: -2.805473566055298
    7. '       ' → logprob: -3.305473566055298
    8. ' from' → logprob: -4.055473327636719
    9. ' #' → logprob: -4.555473327636719
    10. ' rectangles' → logprob: -4.930473327636719

Token 413: 'ire' (ID: 594)
  Prédit: 'ire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ire' → logprob: -0.39308682084083557
    2. 'ction' → logprob: -1.5180867910385132
    3. 'ct' → logprob: -2.5180869102478027
    4. '#' → logprob: -5.143086910247803
    5. 'ctions' → logprob: -5.143086910247803
    6. 'ir' → logprob: -5.518086910247803
    7. 'it' → logprob: -6.268086910247803
    8. 'tion' → logprob: -7.268086910247803
    9. '```' → logprob: -7.393086910247803
    10. 'ite' → logprob: -7.643086910247803

Token 414: ' une' (ID: 2463)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.22673557698726654
    2. 'height' → logprob: -2.6017355918884277
    3. '#' → logprob: -3.3517355918884277
    4. 'width' → logprob: -3.9767355918884277
    5. 'area' → logprob: -4.101735591888428
    6. 'rect' → logprob: -4.351735591888428
    7. 'sum' → logprob: -4.851735591888428
    8. 'he' → logprob: -5.226735591888428
    9. 'from' → logprob: -5.226735591888428
    10. 'acc' → logprob: -5.726735591888428

Token 415: ' liste' (ID: 31719)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.4372304677963257
    2. '#' → logprob: -2.3122305870056152
    3. 'possible' → logprob: -2.6872305870056152
    4. 'dp' → logprob: -2.8122305870056152
    5. 'area' → logprob: -3.9372305870056152
    6. 'from' → logprob: -3.9372305870056152
    7. 'poss' → logprob: -4.312230587005615
    8. 'rect' → logprob: -4.812230587005615
    9. 'def' → logprob: -4.812230587005615
    10. 'height' → logprob: -5.062230587005615

Token 416: ' de' (ID: 334)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.5200628042221069
    2. 'possible' → logprob: -2.7700629234313965
    3. 'de' → logprob: -3.1450629234313965
    4. '[]' → logprob: -3.3950629234313965
    5. '_possible' → logprob: -3.3950629234313965
    6. 'par' → logprob: -3.5200629234313965
    7. '_des' → logprob: -3.6450629234313965
    8. 'of' → logprob: -3.6450629234313965
    9. 'd' → logprob: -3.6450629234313965
    10. '_of' → logprob: -3.7700629234313965

Token 417: ' rectangles' (ID: 164265)
  Prédit: 'rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rect' → logprob: -1.4872220754623413
    2. 'buyers' → logprob: -1.4872220754623413
    3. 'positions' → logprob: -1.8622220754623413
    4. 'c' → logprob: -1.8622220754623413
    5. 'possible' → logprob: -2.487222194671631
    6. 'poss' → logprob: -2.737222194671631
    7. 'buyer' → logprob: -3.737222194671631
    8. ' buyers' → logprob: -4.737222194671631
    9. 'pos' → logprob: -4.862222194671631
    10. 'all' → logprob: -4.987222194671631

Token 418: ' candidates' (ID: 18116)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.9480615258216858
    2. ' =' → logprob: -1.198061466217041
    3. 'for' → logprob: -2.698061466217041
    4. 'rect' → logprob: -2.823061466217041
    5. '=' → logprob: -3.448061466217041
    6. 'by' → logprob: -3.573061466217041
    7. 's' → logprob: -3.823061466217041
    8. '_per' → logprob: -4.073061466217041
    9. 'par' → logprob: -4.573061466217041
    10. '_by' → logprob: -4.573061466217041

Token 419: ' pour' (ID: 1930)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.17767004668712616
    2. 'rect' → logprob: -2.4276700019836426
    3. 'candidate' → logprob: -3.5526700019836426
    4. 'buyer' → logprob: -3.6776700019836426
    5. 'buyers' → logprob: -4.427670001983643
    6. 'per' → logprob: -6.177670001983643
    7. 'for' → logprob: -6.552670001983643
    8. 'from' → logprob: -6.677670001983643
    9. 'possible' → logprob: -6.802670001983643
    10. '       ' → logprob: -6.927670001983643

Token 420: ' chaque' (ID: 21194)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.4298868179321289
    2. ' each' → logprob: -1.929886817932129
    3. ' chaque' → logprob: -2.054886817932129
    4. 'b' → logprob: -3.179886817932129
    5. 'ach' → logprob: -4.179886817932129
    6. 'buyer' → logprob: -4.804886817932129
    7. ' buyer' → logprob: -5.429886817932129
    8. 'acheter' → logprob: -6.054886817932129
    9. ' b' → logprob: -6.304886817932129
    10. '_each' → logprob: -6.929886817932129

Token 421: ' ache' (ID: 27427)
  Prédit: 'buyer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'buyer' → logprob: -0.7667660117149353
    2. 'b' → logprob: -1.26676607131958
    3. ' buyer' → logprob: -1.64176607131958
    4. ' b' → logprob: -2.89176607131958
    5. 'buyers' → logprob: -6.89176607131958
    6. 'range' → logprob: -7.39176607131958
    7. 'for' → logprob: -7.64176607131958
    8. ' ache' → logprob: -7.64176607131958
    9. ' range' → logprob: -8.016765594482422
    10. 'ach' → logprob: -8.016765594482422

Token 422: 'teur' (ID: 45262)
  Prédit: 'teur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'teur' → logprob: -0.00018280261429026723
    2. 'te' → logprob: -8.75018310546875
    3. 'teurs' → logprob: -11.37518310546875
    4. '#' → logprob: -11.50018310546875
    5. '\' → logprob: -14.00018310546875
    6. 'ter' → logprob: -14.37518310546875
    7. '[' → logprob: -16.00018310546875
    8. 't' → logprob: -16.00018310546875
    9. '```' → logprob: -16.12518310546875
    10. '
' → logprob: -16.25018310546875

Token 423: '
' (ID: 198)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.2790587246417999
    2. 'buyer' → logprob: -2.6540586948394775
    3. 'buyers' → logprob: -2.7790586948394775
    4. 'rect' → logprob: -2.9040586948394775
    5. 'candidate' → logprob: -3.7790586948394775
    6. 'from' → logprob: -3.9040586948394775
    7. ' =' → logprob: -5.904058933258057
    8. '=' → logprob: -6.404058933258057
    9. '   ' → logprob: -6.654058933258057
    10. ' candidates' → logprob: -7.154058933258057

Token 424: '       ' (ID: 309)
  Prédit: 'buyer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'buyer' → logprob: -1.5867083072662354
    2. 'buyers' → logprob: -1.8367083072662354
    3. 'from' → logprob: -1.9617083072662354
    4. 'rect' → logprob: -2.0867083072662354
    5. 'candidate' → logprob: -2.4617083072662354
    6. ' buyer' → logprob: -2.7117083072662354
    7. ' rectangles' → logprob: -2.7117083072662354
    8. '       ' → logprob: -3.2117083072662354
    9. ' buyers' → logprob: -3.7117083072662354
    10. ' candidates' → logprob: -3.8367083072662354

Token 425: ' rect' (ID: 13107)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.2504754066467285
    2. 'rect' (adapté à ' rect') → logprob: -1.5004754066467285
    3. 'buyer' → logprob: -1.6254754066467285
    4. 'buyers' → logprob: -1.7504754066467285
    5. 'from' → logprob: -2.8754754066467285
    6. 'candidate' → logprob: -3.1254754066467285
    7. '       ' → logprob: -4.7504754066467285
    8. '   ' → logprob: -5.2504754066467285
    9. 'buy' → logprob: -7.0004754066467285
    10. 'import' → logprob: -7.2504754066467285

Token 426: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.026811430230736732
    2. 'angles' → logprob: -3.776811361312866
    3. '_candidates' → logprob: -5.776811599731445
    4. '_list' → logprob: -8.651811599731445
    5. 'angle' → logprob: -8.901811599731445
    6. '_angles' → logprob: -9.901811599731445
    7. ' =' → logprob: -10.776811599731445
    8. '_lists' → logprob: -10.901811599731445
    9. '_s' → logprob: -11.651811599731445
    10. '_rect' → logprob: -12.651811599731445

Token 427: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3489767014980316
    2. ' =' → logprob: -1.223976731300354
    3. '=[]' → logprob: -8.598977088928223
    4. '={}' → logprob: -8.723977088928223
    5. 's' → logprob: -8.848977088928223
    6. '[' → logprob: -11.348977088928223
    7. '_' → logprob: -12.098977088928223
    8. ',' → logprob: -12.723977088928223
    9. '[]' → logprob: -12.973977088928223
    10. ']' → logprob: -12.973977088928223

Token 428: ' {' (ID: 354)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.01107282005250454
    2. '{' → logprob: -4.511072635650635
    3. '[' → logprob: -11.386073112487793
    4. '{}
' → logprob: -12.011073112487793
    5. ' {}' → logprob: -12.636073112487793
    6. '[]' → logprob: -13.386073112487793
    7. '{}

' → logprob: -13.886073112487793
    8. 'default' → logprob: -13.886073112487793
    9. '{})' → logprob: -15.136073112487793
    10. '[{' → logprob: -15.761073112487793

Token 429: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0005171707598492503
    2. '}' → logprob: -7.87551736831665
    3. ' b' → logprob: -9.000516891479492
    4. '   ' → logprob: -11.750516891479492
    5. '       ' → logprob: -12.500516891479492
    6. 'k' → logprob: -14.000516891479492
    7. 'i' → logprob: -14.500516891479492
    8. '           ' → logprob: -15.375516891479492
    9. 'key' → logprob: -16.000516891479492
    10. 'buyer' → logprob: -16.750516891479492

Token 430: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00010878815373871475
    2. ' :' → logprob: -9.50010871887207
    3. ':set' → logprob: -11.12510871887207
    4. ':[' → logprob: -11.25010871887207
    5. ':list' → logprob: -12.75010871887207
    6. ':b' → logprob: -13.62510871887207
    7. '[]' → logprob: -14.25010871887207
    8. '=[]' → logprob: -14.75010871887207
    9. '   ' → logprob: -15.50010871887207
    10. ':[[' → logprob: -15.75010871887207

Token 431: ' []' (ID: 6126)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0011896300129592419
    2. '[]}' → logprob: -6.751189708709717
    3. '[]
' → logprob: -11.001189231872559
    4. ' []' → logprob: -13.001189231872559
    5. '[]

' → logprob: -14.751189231872559
    6. 'set' → logprob: -17.376190185546875
    7. '[],' → logprob: -18.001190185546875
    8. '[' → logprob: -18.001190185546875
    9. '[]>' → logprob: -18.626190185546875
    10. '   ' → logprob: -19.001190185546875

Token 432: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0942605659365654
    2. 'for' → logprob: -2.7192604541778564
    3. '   ' → logprob: -3.8442604541778564
    4. '       ' → logprob: -6.4692606925964355
    5. '}' → logprob: -7.2192606925964355
    6. '    ' → logprob: -9.219260215759277
    7. ')' → logprob: -9.719260215759277
    8. '        ' → logprob: -10.094260215759277
    9. '	for' → logprob: -10.094260215759277
    10. '           ' → logprob: -10.719260215759277

Token 433: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.009209003299474716
    2. 'buyer' → logprob: -4.759209156036377
    3. ' b' → logprob: -7.634209156036377
    4. ' buyer' → logprob: -9.634208679199219
    5. '_b' → logprob: -11.384208679199219
    6. 'buy' → logprob: -11.634208679199219
    7. 'buyers' → logprob: -11.759208679199219
    8. 'range' → logprob: -12.696708679199219
    9. '	b' → logprob: -13.071708679199219
    10. 'k' → logprob: -13.321708679199219

Token 434: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12717367708683014
    2. 'in' → logprob: -2.127173662185669
    3. 'b' → logprob: -8.62717342376709
    4. 's' → logprob: -11.25217342376709
    5. ',' → logprob: -11.62717342376709
    6. 'n' → logprob: -12.00217342376709
    7. ' b' → logprob: -12.12717342376709
    8. 'buyer' → logprob: -12.12717342376709
    9. ' ' → logprob: -12.25217342376709
    10. '_' → logprob: -12.87717342376709

Token 435: ' buyer' (ID: 28061)
  Prédit: 'buyer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'buyer' → logprob: -0.000918604782782495
    2. ' buyer' → logprob: -7.000918388366699
    3. 'range' → logprob: -12.0009183883667
    4. 'buy' → logprob: -14.2509183883667
    5. 'b' → logprob: -15.6259183883667
    6. 'buyers' → logprob: -16.375919342041016
    7. ' range' → logprob: -17.625919342041016
    8. 'seller' → logprob: -18.375919342041016
    9. 'Buyer' → logprob: -19.125919342041016
    10. '(b' → logprob: -19.375919342041016

Token 436: '_info' (ID: 6744)
  Prédit: '_info'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_info' → logprob: -6.706686690449715e-05
    2. 'info' → logprob: -10.500066757202148
    3. 's' → logprob: -11.500066757202148
    4. ' in' → logprob: -11.625066757202148
    5. '_' → logprob: -12.000066757202148
    6. '}' → logprob: -12.250066757202148
    7. 'Info' → logprob: -13.125066757202148
    8. ' _' → logprob: -13.750066757202148
    9. '_INFO' → logprob: -13.875066757202148
    10. 'b' → logprob: -14.000066757202148

Token 437: '.keys' (ID: 18392)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.014606967568397522
    2. '.keys' → logprob: -4.264606952667236
    3. ' }' → logprob: -7.889606952667236
    4. 'keys' → logprob: -10.639607429504395
    5. ')}' → logprob: -11.639607429504395
    6. '}
' → logprob: -11.764607429504395
    7. '.values' → logprob: -11.889607429504395
    8. 'b' → logprob: -11.889607429504395
    9. '   ' → logprob: -12.764607429504395
    10. '()}' → logprob: -12.764607429504395

Token 438: '()' (ID: 416)
  Prédit: '()}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()}' → logprob: -0.0041634030640125275
    2. '}' → logprob: -5.6291632652282715
    3. '()' → logprob: -7.5041632652282715
    4. '())' → logprob: -12.37916374206543
    5. ')}' → logprob: -13.12916374206543
    6. '()}
' → logprob: -13.12916374206543
    7. '():' → logprob: -13.37916374206543
    8. ' ()' → logprob: -14.25416374206543
    9. '   ' → logprob: -14.50416374206543
    10. ' }' → logprob: -14.62916374206543

Token 439: '}

' (ID: 943)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.00018411019118502736
    2. ' }' → logprob: -9.125184059143066
    3. '   ' → logprob: -10.125184059143066
    4. '       ' → logprob: -10.375184059143066
    5. '}
' → logprob: -12.750184059143066
    6. '}

' → logprob: -15.375184059143066
    7. ')' → logprob: -15.750184059143066
    8. '	' → logprob: -15.875184059143066
    9. ')}' → logprob: -16.000185012817383
    10. '
' → logprob: -16.375185012817383

Token 440: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15496617555618286
    2. 'for' → logprob: -2.404966115951538
    3. ' for' → logprob: -3.154966115951538
    4. '
' → logprob: -5.279966354370117
    5. '        
' → logprob: -6.029966354370117
    6. '   ' → logprob: -6.279966354370117
    7. '#' → logprob: -7.779966354370117
    8. '<|end|>' → logprob: -8.279966354370117
    9. '    
' → logprob: -9.029966354370117
    10. '  
' → logprob: -9.529966354370117

Token 441: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03348766639828682
    2. '#' (adapté à ' #') → logprob: -4.283487796783447
    3. ' for' → logprob: -4.783487796783447
    4. '       ' → logprob: -5.783487796783447
    5. 'from' → logprob: -5.783487796783447
    6. 'max' → logprob: -6.533487796783447
    7. 'height' → logprob: -7.033487796783447
    8. 'possible' → logprob: -7.408487796783447
    9. 'def' → logprob: -7.658487796783447
    10. 'area' → logprob: -7.908487796783447

Token 442: ' Pré' (ID: 86400)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.002933364361524582
    2. ' for' → logprob: -6.002933502197266
    3. '       ' → logprob: -8.127933502197266
    4. 'from' → logprob: -9.377933502197266
    5. '   ' → logprob: -10.627933502197266
    6. 'def' → logprob: -11.377933502197266
    7. 'import' → logprob: -11.377933502197266
    8. '#' → logprob: -11.627933502197266
    9. 'max' → logprob: -11.877933502197266
    10. 'y' → logprob: -12.002933502197266

Token 443: '-cal' (ID: 84920)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.37446531653404236
    2. 'fix' → logprob: -1.3744653463363647
    3. 'for' → logprob: -3.124465227127075
    4. 'prefix' → logprob: -5.499465465545654
    5. 'c' → logprob: -6.124465465545654
    6. 's' → logprob: -6.249465465545654
    7. 'compute' → logprob: -6.374465465545654
    8. 'computed' → logprob: -6.499465465545654
    9. 'f' → logprob: -7.249465465545654
    10. 'from' → logprob: -7.624465465545654

Token 444: 'cul' (ID: 2885)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.839309573173523
    2. 'c' → logprob: -1.714309573173523
    3. 'al' → logprob: -1.964309573173523
    4. 'om' → logprob: -2.8393096923828125
    5. 'fix' → logprob: -3.0893096923828125
    6. 'm' → logprob: -3.0893096923828125
    7. 'alc' → logprob: -3.9643096923828125
    8. 's' → logprob: -4.3393096923828125
    9. 'som' → logprob: -4.8393096923828125
    10. 'cul' → logprob: -5.0893096923828125

Token 445: ' de' (ID: 334)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.892479658126831
    2. '       ' → logprob: -1.767479658126831
    3. 'prefix' → logprob: -1.892479658126831
    4. 'psum' → logprob: -2.017479658126831
    5. 's' → logprob: -3.142479658126831
    6. ' prefix' → logprob: -3.892479658126831
    7. '#' → logprob: -4.01747989654541
    8. ' sums' → logprob: -4.64247989654541
    9. 'for' → logprob: -4.89247989654541
    10. ' for' → logprob: -5.51747989654541

Token 446: ' zones' (ID: 34102)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.06370680779218674
    2. 's' → logprob: -4.188706874847412
    3. 'psum' → logprob: -4.313706874847412
    4. 'sum' → logprob: -4.313706874847412
    5. 'pref' → logprob: -5.563706874847412
    6. 'pre' → logprob: -6.063706874847412
    7. ' prefix' → logprob: -6.063706874847412
    8. 'Y' → logprob: -6.188706874847412
    9. '#' → logprob: -6.188706874847412
    10. 'the' → logprob: -6.438706874847412

Token 447: ' candidates' (ID: 18116)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.6287643909454346
    2. 'prefix' → logprob: -1.8787643909454346
    3. 's' → logprob: -2.6287643909454346
    4. ' =' → logprob: -2.8787643909454346
    5. '_sum' → logprob: -3.5037643909454346
    6. 'psum' → logprob: -3.5037643909454346
    7. '       ' → logprob: -3.5037643909454346
    8. '_prefix' → logprob: -3.8787643909454346
    9. '=' → logprob: -4.2537641525268555
    10. ' prefix' → logprob: -4.8787641525268555

Token 448: ' par' (ID: 686)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.365638017654419
    2. '<|end|>' → logprob: -1.490638017654419
    3. '
' → logprob: -1.740638017654419
    4. 'for' → logprob: -1.865638017654419
    5. ':' → logprob: -2.365638017654419
    6. '       ' → logprob: -2.990638017654419
    7. '        
' → logprob: -4.86563777923584
    8. ',' → logprob: -4.99063777923584
    9. '<|end|>' → logprob: -5.11563777923584
    10. '#' → logprob: -5.36563777923584

Token 449: ' ache' (ID: 27427)
  Prédit: 'tail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tail' → logprob: -0.6764393448829651
    2. 'ha' → logprob: -0.9264393448829651
    3. 'k' → logprob: -3.4264392852783203
    4. 'height' → logprob: -4.80143928527832
    5. ' hauteur' → logprob: -4.80143928527832
    6. 'la' → logprob: -5.05143928527832
    7. 'y' → logprob: -5.30143928527832
    8. 'surface' → logprob: -5.42643928527832
    9. 'aire' → logprob: -5.92643928527832
    10. 'l' → logprob: -6.05143928527832

Token 450: 'teur' (ID: 45262)
  Prédit: 'teur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'teur' → logprob: -0.0003503626212477684
    2. 'te' → logprob: -8.000349998474121
    3. '#' → logprob: -12.250349998474121
    4. 'teurs' → logprob: -12.750349998474121
    5. 'ter' → logprob: -13.250349998474121
    6. 'neur' → logprob: -13.500349998474121
    7. 'eur' → logprob: -14.125349998474121
    8. 'yeur' → logprob: -14.375349998474121
    9. 'ur' → logprob: -14.500349998474121
    10. '\' → logprob: -14.500349998474121

Token 451: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9942036271095276
    2. '<|end|>' → logprob: -1.1192035675048828
    3. '
' → logprob: -1.9942035675048828
    4. ' for' → logprob: -2.369203567504883
    5. 'for' → logprob: -2.869203567504883
    6. '        
' → logprob: -4.994203567504883
    7. '#' → logprob: -6.119203567504883
    8. ':' → logprob: -6.494203567504883
    9. '<|end|>' → logprob: -6.744203567504883
    10. ',' → logprob: -6.869203567504883

Token 452: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008181667886674404
    2. '<|end|>' → logprob: -5.883181571960449
    3. ' for' → logprob: -6.633181571960449
    4. '        
' → logprob: -6.758181571960449
    5. 'for' → logprob: -6.883181571960449
    6. '
' → logprob: -7.008181571960449
    7. '#' → logprob: -8.50818157196045
    8. 'prefix' → logprob: -8.50818157196045
    9. '   ' → logprob: -9.38318157196045
    10. ',' → logprob: -9.75818157196045

Token 453: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.28062304854393005
    2. ' for' → logprob: -1.7806230783462524
    3. '       ' → logprob: -2.780622959136963
    4. 'prefix' → logprob: -4.905622959136963
    5. 'from' → logprob: -5.905622959136963
    6. '#' (adapté à ' #') → logprob: -6.530622959136963
    7. 'he' → logprob: -7.655622959136963
    8. 'height' → logprob: -8.155623435974121
    9. ' prefix' → logprob: -8.155623435974121
    10. ' from' → logprob: -8.405623435974121

Token 454: ' Rec' (ID: 14753)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00467991828918457
    2. ' for' → logprob: -5.6296796798706055
    3. '       ' → logprob: -7.0046796798706055
    4. 'from' → logprob: -9.129679679870605
    5. 'max' → logprob: -10.379679679870605
    6. 'import' → logprob: -11.879679679870605
    7. '#' → logprob: -12.254679679870605
    8. 'prefix' → logprob: -12.254679679870605
    9. 'area' → logprob: -13.129679679870605
    10. '   ' → logprob: -13.379679679870605

Token 455: 'ense' (ID: 1603)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.014371157623827457
    2. 'for' → logprob: -5.264371395111084
    3. 'T' → logprob: -5.764371395111084
    4. 'Y' → logprob: -6.889371395111084
    5. 'up' → logprob: -6.889371395111084
    6. 'def' → logprob: -7.014371395111084
    7. 'tu' → logprob: -7.139371395111084
    8. '#' → logprob: -7.389371395111084
    9. 'tal' → logprob: -7.889371395111084
    10. '
' → logprob: -8.389370918273926

Token 456: ' les' (ID: 1341)
  Prédit: 'her'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'her' → logprob: -0.7147859930992126
    2. 'h' → logprob: -1.0897860527038574
    3. 't' → logprob: -3.2147860527038574
    4. 'lement' → logprob: -3.9647860527038574
    5. 'r' → logprob: -4.089786052703857
    6. 'nt' → logprob: -4.089786052703857
    7. 'ment' → logprob: -4.714786052703857
    8. 'le' → logprob: -4.839786052703857
    9. 'l' → logprob: -4.964786052703857
    10. 'n' → logprob: -5.214786052703857

Token 457: ' positions' (ID: 15897)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -1.4774932861328125
    2. 'y' → logprob: -1.6024932861328125
    3. 'possible' → logprob: -1.6024932861328125
    4. 'rect' → logprob: -2.4774932861328125
    5. 'poss' → logprob: -2.6024932861328125
    6. 'for' → logprob: -3.1024932861328125
    7. 'c' → logprob: -3.3524932861328125
    8. '#' → logprob: -3.3524932861328125
    9. 'he' → logprob: -4.2274932861328125
    10. 'areas' → logprob: -4.8524932861328125

Token 458: ' où' (ID: 15113)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.152411699295044
    2. '=' → logprob: -1.277411699295044
    3. 'des' → logprob: -2.027411699295044
    4. 'de' → logprob: -2.902411699295044
    5. 'for' → logprob: -3.152411699295044
    6. 'where' → logprob: -3.902411699295044
    7. ' of' → logprob: -4.152411460876465
    8. 'of' → logprob: -4.152411460876465
    9. 'with' → logprob: -4.152411460876465
    10. ' where' → logprob: -4.277411460876465

Token 459: ' chaque' (ID: 21194)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6841933727264404
    2. 'b' → logprob: -1.3091933727264404
    3. ' s' → logprob: -1.9341933727264404
    4. 'for' → logprob: -3.9341933727264404
    5. ' b' → logprob: -3.9341933727264404
    6. ' for' → logprob: -4.6841936111450195
    7. 'y' → logprob: -4.6841936111450195
    8. 'buyer' → logprob: -5.4341936111450195
    9. ' y' → logprob: -5.5591936111450195
    10. ' buyer' → logprob: -6.0591936111450195

Token 460: ' numéro' (ID: 65036)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.2189842015504837
    2. ' b' → logprob: -1.8439842462539673
    3. ' buyer' → logprob: -3.8439841270446777
    4. 'buyer' → logprob: -4.093984127044678
    5. 'buyers' → logprob: -9.968984603881836
    6. 'token' → logprob: -9.968984603881836
    7. 'y' → logprob: -10.093984603881836
    8. ' buyers' → logprob: -10.218984603881836
    9. ' y' → logprob: -10.593984603881836
    10. ' for' → logprob: -10.718984603881836

Token 461: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.02207285165786743
    2. ' b' → logprob: -5.522072792053223
    3. 'd' → logprob: -5.647072792053223
    4. 'appe' → logprob: -5.897072792053223
    5. ' apparaît' → logprob: -5.897072792053223
    6. 'de' → logprob: -6.522072792053223
    7. 'buyer' → logprob: -6.647072792053223
    8. ' appears' → logprob: -7.397072792053223
    9. '=' → logprob: -7.397072792053223
    10. ' appara' → logprob: -7.647072792053223

Token 462: ' est' (ID: 893)
  Prédit: ' se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' se' → logprob: -1.1355890035629272
    2. ' est' → logprob: -1.3855890035629272
    3. ' apparaît' → logprob: -1.5105890035629272
    4. 'appar' → logprob: -2.760589122772217
    5. ' appears' → logprob: -3.135589122772217
    6. 'se' → logprob: -3.885589122772217
    7. ' appara' → logprob: -3.885589122772217
    8. 'appe' → logprob: -4.385589122772217
    9. 'est' → logprob: -4.760589122772217
    10. 'app' → logprob: -5.010589122772217

Token 463: ' marqué' (ID: 141173)
  Prédit: 'prés'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prés' → logprob: -0.03536226227879524
    2. 'present' → logprob: -3.9103622436523438
    3. ' présent' → logprob: -4.410362243652344
    4. ' present' → logprob: -6.535362243652344
    5. 'mar' → logprob: -7.535362243652344
    6. 'visible' → logprob: -9.285362243652344
    7. 'found' → logprob: -9.785362243652344
    8. 'dans' → logprob: -10.035362243652344
    9. ' marqué' → logprob: -10.285362243652344
    10. ' visible' → logprob: -10.410362243652344

Token 464: ' dans' (ID: 2671)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9741474986076355
    2. 'for' → logprob: -1.4741475582122803
    3. 'positions' → logprob: -1.8491475582122803
    4. ' =' → logprob: -2.5991475582122803
    5. ' for' → logprob: -3.4741475582122803
    6. ':' → logprob: -3.5991475582122803
    7. 'pos' → logprob: -3.7241475582122803
    8. 'in' → logprob: -3.8491475582122803
    9. ' in' → logprob: -4.099147319793701
    10. '=' → logprob: -4.349147319793701

Token 465: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.04866650700569153
    2. ' s' → logprob: -3.048666477203369
    3. ' la' → logprob: -10.673666954040527
    4. ' ' → logprob: -11.548666954040527
    5. 'range' → logprob: -11.548666954040527
    6. 'la' → logprob: -12.048666954040527
    7. '   ' → logprob: -12.298666954040527
    8. 'the' → logprob: -12.423666954040527
    9. '`s' → logprob: -12.548666954040527
    10. '       ' → logprob: -12.673666954040527

Token 466: '
' (ID: 198)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.32942670583724976
    2. '       ' → logprob: -1.3294267654418945
    3. 'pos' → logprob: -4.9544267654418945
    4. ' positions' → logprob: -5.3294267654418945
    5. 'for' → logprob: -6.5794267654418945
    6. '        
' → logprob: -7.3294267654418945
    7. 'points' → logprob: -8.204426765441895
    8. 'markers' → logprob: -8.454426765441895
    9. 'occ' → logprob: -8.704426765441895
    10. '
' → logprob: -8.954426765441895

Token 467: '       ' (ID: 309)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.40814828872680664
    2. '       ' → logprob: -1.2831482887268066
    3. 'for' → logprob: -3.9081482887268066
    4. ' positions' → logprob: -3.9081482887268066
    5. ' for' → logprob: -5.033148288726807
    6. 'pos' → logprob: -5.283148288726807
    7. 'marked' → logprob: -6.658148288726807
    8. 'b' → logprob: -7.033148288726807
    9. 'points' → logprob: -7.158148288726807
    10. 'marks' → logprob: -7.158148288726807

Token 468: ' positions' (ID: 15897)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' (adapté à ' positions') → logprob: -0.035803791135549545
    2. 'pos' → logprob: -3.66080379486084
    3. 'b' → logprob: -6.28580379486084
    4. 'markers' → logprob: -6.41080379486084
    5. 'buyer' → logprob: -6.66080379486084
    6. '       ' → logprob: -6.66080379486084
    7. 'marker' → logprob: -6.78580379486084
    8. 'buyers' → logprob: -7.53580379486084
    9. 'marks' → logprob: -7.91080379486084
    10. ' positions' → logprob: -8.16080379486084

Token 469: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22541585564613342
    2. ' =' → logprob: -1.600415825843811
    3. '={' → logprob: -13.72541618347168
    4. '={}' → logprob: -14.72541618347168
    5. '   ' → logprob: -15.47541618347168
    6. 's' → logprob: -15.47541618347168
    7. ' ' → logprob: -15.60041618347168
    8. '={}
' → logprob: -15.85041618347168
    9. ' ={' → logprob: -15.85041618347168
    10. 'for' → logprob: -16.35041618347168

Token 470: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.030214844271540642
    2. '{}' → logprob: -4.030214786529541
    3. ' {' → logprob: -4.780214786529541
    4. '{}
' → logprob: -5.655214786529541
    5. ' {}' → logprob: -10.7802152633667
    6. ' {}
' → logprob: -10.7802152633667
    7. '{i' → logprob: -11.4052152633667
    8. '{x' → logprob: -11.5302152633667
    9. '{}

' → logprob: -11.7802152633667
    10. '{k' → logprob: -12.0302152633667

Token 471: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -2.856408536899835e-05
    2. '   ' → logprob: -11.375028610229492
    3. ' b' → logprob: -12.000028610229492
    4. '}' → logprob: -12.125028610229492
    5. '       ' → logprob: -12.500028610229492
    6. '           ' → logprob: -14.750028610229492
    7. '	b' → logprob: -15.000028610229492
    8. '     ' → logprob: -15.500028610229492
    9. 'k' → logprob: -15.750028610229492
    10. ' ' → logprob: -15.875028610229492

Token 472: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -9.758300438988954e-05
    2. ':set' → logprob: -9.750097274780273
    3. ' :' → logprob: -10.750097274780273
    4. '=[]' → logprob: -12.375097274780273
    5. 'set' → logprob: -12.500097274780273
    6. '[]' → logprob: -12.625097274780273
    7. ':[' → logprob: -12.875097274780273
    8. '=' → logprob: -13.500097274780273
    9. '=set' → logprob: -14.500097274780273
    10. '   ' → logprob: -14.625097274780273

Token 473: ' []' (ID: 6126)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0013846398796886206
    2. 'set' → logprob: -7.251384735107422
    3. ' []' → logprob: -7.751384735107422
    4. '[]}' → logprob: -9.001384735107422
    5. '[]
' → logprob: -9.376384735107422
    6. '[(' → logprob: -10.376384735107422
    7. ' set' → logprob: -13.126384735107422
    8. '[' → logprob: -13.251384735107422
    9. '[]

' → logprob: -13.876384735107422
    10. '[
' → logprob: -15.501384735107422

Token 474: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16026638448238373
    2. ' for' → logprob: -1.910266399383545
    3. '   ' → logprob: -10.660265922546387
    4. '	for' → logprob: -11.785265922546387
    5. '       ' → logprob: -12.660265922546387
    6. ' ' → logprob: -12.910265922546387
    7. '
' → logprob: -13.410265922546387
    8. '}' → logprob: -13.535265922546387
    9. '    ' → logprob: -14.535265922546387
    10. '  ' → logprob: -14.785265922546387

Token 475: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.25843381881713867
    2. 'buyer' → logprob: -1.5084338188171387
    3. 'rect' → logprob: -5.383433818817139
    4. ' buyer' → logprob: -6.883433818817139
    5. ' b' → logprob: -7.383433818817139
    6. 'range' → logprob: -9.883434295654297
    7. ' rect' → logprob: -10.008434295654297
    8. 'buy' → logprob: -10.758434295654297
    9. 'buyers' → logprob: -10.758434295654297
    10. '[b' → logprob: -11.133434295654297

Token 476: ' in' (ID: 306)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.09275514632463455
    2. ' in' → logprob: -3.342755079269409
    3. 'buyer' → logprob: -3.717755079269409
    4. 'in' → logprob: -3.842755079269409
    5. ' b' → logprob: -5.592755317687988
    6. ' buyer' → logprob: -5.967755317687988
    7. ',b' → logprob: -7.967755317687988
    8. '=b' → logprob: -8.967755317687988
    9. 'positions' → logprob: -9.217755317687988
    10. 'range' → logprob: -9.217755317687988

Token 477: ' buyer' (ID: 28061)
  Prédit: 'buyer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'buyer' → logprob: -0.0022286446765065193
    2. 'rect' → logprob: -6.502228736877441
    3. ' buyer' → logprob: -7.252228736877441
    4. 'buy' → logprob: -12.002228736877441
    5. 'b' → logprob: -12.627228736877441
    6. 'range' → logprob: -12.877228736877441
    7. 'buyers' → logprob: -13.002228736877441
    8. ' rect' → logprob: -13.502228736877441
    9. '[b' → logprob: -15.377228736877441
    10. 'Buyer' → logprob: -15.627228736877441

Token 478: '_info' (ID: 6744)
  Prédit: '_info'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_info' → logprob: -0.0003243798855692148
    2. 'buyer' → logprob: -8.500324249267578
    3. 'info' → logprob: -9.125324249267578
    4. 'buyers' → logprob: -12.625324249267578
    5. 'user' → logprob: -13.125324249267578
    6. 'b' → logprob: -13.375324249267578
    7. 's' → logprob: -13.375324249267578
    8. 'Info' → logprob: -14.500324249267578
    9. 'rect' → logprob: -14.625324249267578
    10. '_INFO' → logprob: -14.750324249267578

Token 479: '.keys' (ID: 18392)
  Prédit: '.keys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.keys' → logprob: -0.0004791704413946718
    2. 'keys' → logprob: -7.875479221343994
    3. '}' → logprob: -9.500478744506836
    4. '}
' → logprob: -11.625478744506836
    5. '_keys' → logprob: -12.625478744506836
    6. 'b' → logprob: -12.875478744506836
    7. '.' → logprob: -13.250478744506836
    8. 's' → logprob: -13.375478744506836
    9. '.values' → logprob: -13.500478744506836
    10. '   ' → logprob: -13.750478744506836

Token 480: '()}
' (ID: 46697)
  Prédit: '()}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()}' → logprob: -0.41411229968070984
    2. '}' → logprob: -1.7891123294830322
    3. '()}
' → logprob: -1.9141123294830322
    4. '()' → logprob: -4.039112091064453
    5. '}
' → logprob: -5.039112091064453
    6. '   ' → logprob: -9.289112091064453
    7. '()
' → logprob: -9.289112091064453
    8. '}

' → logprob: -9.414112091064453
    9. '       ' → logprob: -10.414112091064453
    10. '}
' → logprob: -11.039112091064453

Token 481: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.036063697189092636
    2. 'for' → logprob: -3.4110636711120605
    3. ' for' → logprob: -6.0360636711120605
    4. '        
' → logprob: -11.786064147949219
    5. '   ' → logprob: -12.161064147949219
    6. '<|end|>' → logprob: -12.286064147949219
    7. '
' → logprob: -12.911064147949219
    8. '	for' → logprob: -13.661064147949219
    9. '           ' → logprob: -14.161064147949219
    10. '```' → logprob: -14.286064147949219

Token 482: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.31957730650901794
    2. '       ' → logprob: -1.3195773363113403
    3. ' for' → logprob: -5.069577217102051
    4. '        
' → logprob: -12.56957721710205
    5. '	for' → logprob: -12.81957721710205
    6. '
' → logprob: -13.69457721710205
    7. '   ' → logprob: -14.06957721710205
    8. '```' → logprob: -14.31957721710205
    9. ' ' → logprob: -14.94457721710205
    10. '<|end|>' → logprob: -15.06957721710205

Token 483: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.003177952254191041
    2. ' y' → logprob: -5.753178119659424
    3. 'x' → logprob: -16.003177642822266
    4. '	y' → logprob: -16.128177642822266
    5. '   ' → logprob: -18.503177642822266
    6. 'b' → logprob: -18.628177642822266
    7. '_y' → logprob: -18.753177642822266
    8. 'Y' → logprob: -19.628177642822266
    9. '[y' → logprob: -20.503177642822266
    10. '(y' → logprob: -20.503177642822266

Token 484: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.029760675504803658
    2. 'in' → logprob: -3.5297605991363525
    3. ',' → logprob: -12.154760360717773
    4. ' ' → logprob: -13.404760360717773
    5. '   ' → logprob: -13.654760360717773
    6. 'range' → logprob: -14.779760360717773
    7. '	in' → logprob: -15.029760360717773
    8. 'import' → logprob: -15.279760360717773
    9. '```' → logprob: -15.779760360717773
    10. '<|end|>' → logprob: -15.904760360717773

Token 485: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.25192928314208984
    2. ' range' → logprob: -1.5019292831420898
    3. '0' → logprob: -15.75192928314209
    4. '(range' → logprob: -17.501930236816406
    5. '	range' → logprob: -17.626930236816406
    6. ' ' → logprob: -17.876930236816406
    7. '   ' → logprob: -18.126930236816406
    8. ' xrange' → logprob: -18.251930236816406
    9. '```' → logprob: -19.876930236816406
    10. ' in' → logprob: -20.001930236816406

Token 486: '(Y' (ID: 44341)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.014179613441228867
    2. '(Y' → logprob: -4.264179706573486
    3. ' Y' → logprob: -12.264179229736328
    4. '       ' → logprob: -12.389179229736328
    5. '   ' → logprob: -12.639179229736328
    6. '           ' → logprob: -13.764179229736328
    7. '
' → logprob: -14.264179229736328
    8. '	Y' → logprob: -14.389179229736328
    9. '               ' → logprob: -14.764179229736328
    10. '                   ' → logprob: -14.764179229736328

Token 487: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.004524111747741699
    2. '):' → logprob: -5.504524230957031
    3. '   ' → logprob: -8.504524230957031
    4. '       ' → logprob: -8.504524230957031
    5. '):
' → logprob: -10.879524230957031
    6. ':
' → logprob: -12.004524230957031
    7. '           ' → logprob: -12.254524230957031
    8. '+' → logprob: -12.504524230957031
    9. ':' → logprob: -13.129524230957031
    10. ')' → logprob: -14.004524230957031

Token 488: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1067262887954712
    2. ' for' → logprob: -1.1067262887954712
    3. '           ' → logprob: -1.1067262887954712
    4. '       ' → logprob: -5.356726169586182
    5. 'for' → logprob: -5.731726169586182
    6. '	   ' → logprob: -9.98172664642334
    7. '	for' → logprob: -10.48172664642334
    8. '               ' → logprob: -11.48172664642334
    9. ' ' → logprob: -11.60672664642334
    10. '```' → logprob: -12.35672664642334

Token 489: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.3143942654132843
    2. ' for' → logprob: -1.314394235610962
    3. 'x' → logprob: -7.064394474029541
    4. '   ' → logprob: -9.064393997192383
    5. '           ' → logprob: -9.814393997192383
    6. ' x' → logprob: -9.939393997192383
    7. '               ' → logprob: -10.189393997192383
    8. '       ' → logprob: -11.689393997192383
    9. '	for' → logprob: -12.064393997192383
    10. ' ' → logprob: -12.439393997192383

Token 490: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.007148433942347765
    2. ' x' → logprob: -5.007148265838623
    3. 'X' → logprob: -7.757148265838623
    4. ' X' → logprob: -12.132148742675781
    5. ' ' → logprob: -17.25714874267578
    6. '0' → logprob: -17.50714874267578
    7. '   ' → logprob: -17.63214874267578
    8. '	x' → logprob: -18.13214874267578
    9. '_x' → logprob: -19.38214874267578
    10. '(x' → logprob: -19.50714874267578

Token 491: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.038132719695568085
    2. 'in' → logprob: -3.288132667541504
    3. '=' → logprob: -10.163132667541504
    4. '<|end|>' → logprob: -11.288132667541504
    5. '   ' → logprob: -12.038132667541504
    6. '	in' → logprob: -12.163132667541504
    7. ' ' → logprob: -12.538132667541504
    8. 'In' → logprob: -12.913132667541504
    9. ':' → logprob: -12.913132667541504
    10. ')' → logprob: -13.038132667541504

Token 492: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6931476593017578
    2. 'range' → logprob: -0.6931476593017578
    3. 'X' → logprob: -14.693147659301758
    4. '(range' → logprob: -17.193147659301758
    5. ' X' → logprob: -17.818147659301758
    6. ' ' → logprob: -17.943147659301758
    7. '0' → logprob: -18.568147659301758
    8. '   ' → logprob: -19.193147659301758
    9. 'Range' → logprob: -20.193147659301758
    10. '	range' → logprob: -20.443147659301758

Token 493: '(X' (ID: 17061)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4030044376850128
    2. ' range' → logprob: -1.1530044078826904
    3. 'X' → logprob: -4.1530046463012695
    4. '(X' → logprob: -8.40300464630127
    5. ' X' → logprob: -9.77800464630127
    6. '(range' → logprob: -12.90300464630127
    7. '   ' → logprob: -13.65300464630127
    8. 'Range' → logprob: -14.27800464630127
    9. ' ' → logprob: -15.02800464630127
    10. '0' → logprob: -15.52800464630127

Token 494: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.03380279615521431
    2. '):' → logprob: -3.4088027477264404
    3. '):
' → logprob: -10.03380298614502
    4. '           ' → logprob: -10.15880298614502
    5. '               ' → logprob: -10.15880298614502
    6. ':' → logprob: -11.28380298614502
    7. ':
' → logprob: -12.15880298614502
    8. '):

' → logprob: -12.28380298614502
    9. '():
' → logprob: -12.53380298614502
    10. ')' → logprob: -13.03380298614502

Token 495: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0004341261519584805
    2. ' if' → logprob: -8.000433921813965
    3. '           ' → logprob: -10.375433921813965
    4. 'if' → logprob: -11.000433921813965
    5. ',' → logprob: -11.125433921813965
    6. '                
' → logprob: -11.625433921813965
    7. '	           ' → logprob: -12.125433921813965
    8. ':' → logprob: -12.750433921813965
    9. '              ' → logprob: -12.750433921813965
    10. '                   ' → logprob: -13.125433921813965

Token 496: ' b' (ID: 287)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5603833198547363
    2. '               ' → logprob: -1.4353833198547363
    3. ' cell' → logprob: -2.1853833198547363
    4. ' c' → logprob: -3.9353833198547363
    5. ' val' → logprob: -4.060383319854736
    6. 'cell' → logprob: -4.185383319854736
    7. 'if' → logprob: -4.685383319854736
    8. ' b' → logprob: -5.685383319854736
    9. ' v' → logprob: -6.185383319854736
    10. 'v' → logprob: -6.185383319854736

Token 497: 'num' (ID: 4571)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10178830474615097
    2. ' =' → logprob: -2.351788282394409
    3. '=s' → logprob: -6.601788520812988
    4. 'in' → logprob: -9.226788520812988
    5. 's' → logprob: -9.476788520812988
    6. ' in' → logprob: -11.351788520812988
    7. 'if' → logprob: -11.476788520812988
    8. '   ' → logprob: -12.226788520812988
    9. '           ' → logprob: -13.101788520812988
    10. ' ' → logprob: -13.226788520812988

Token 498: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06272436678409576
    2. ' =' → logprob: -2.8127243518829346
    3. '=s' → logprob: -7.187724590301514
    4. '   ' → logprob: -16.062725067138672
    5. '=
' → logprob: -16.562725067138672
    6. '=int' → logprob: -16.687725067138672
    7. '==' → logprob: -16.687725067138672
    8. '=

' → logprob: -16.687725067138672
    9. ' ' → logprob: -16.812725067138672
    10. ' in' → logprob: -16.812725067138672

Token 499: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0031777136027812958
    2. ' s' → logprob: -5.753177642822266
    3. '`s' → logprob: -18.878177642822266
    4. '	s' → logprob: -19.378177642822266
    5. '   ' → logprob: -19.503177642822266
    6. '(s' → logprob: -19.753177642822266
    7. '_s' → logprob: -19.753177642822266
    8. ' ' → logprob: -20.503177642822266
    9. '{s' → logprob: -20.503177642822266
    10. '           ' → logprob: -20.753177642822266

Token 500: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -1.1472419600977446e-06
    2. 'y' → logprob: -13.750000953674316
    3. '[' → logprob: -17.750001907348633
    4. '][' → logprob: -18.375001907348633
    5. ' [' → logprob: -19.250001907348633
    6. ' y' → logprob: -19.750001907348633
    7. '[x' → logprob: -19.750001907348633
    8. '[b' → logprob: -20.000001907348633
    9. '   ' → logprob: -20.250001907348633
    10. '```' → logprob: -20.375001907348633

Token 501: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0014084475114941597
    2. '[x' → logprob: -6.626408576965332
    3. ' ][' → logprob: -10.126408576965332
    4. ']' → logprob: -11.001408576965332
    5. '[y' → logprob: -11.251408576965332
    6. '[' → logprob: -11.626408576965332
    7. ' [' → logprob: -14.251408576965332
    8. '   ' → logprob: -14.251408576965332
    9. '}[' → logprob: -14.626408576965332
    10. '```' → logprob: -14.751408576965332

Token 502: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.1517960956552997e-05
    2. ' x' → logprob: -11.375011444091797
    3. '	x' → logprob: -18.625011444091797
    4. ')x' → logprob: -20.250011444091797
    5. '][' → logprob: -21.000011444091797
    6. '[x' → logprob: -21.125011444091797
    7. ' ' → logprob: -21.375011444091797
    8. ']' → logprob: -21.375011444091797
    9. '{x' → logprob: -21.625011444091797
    10. '"x' → logprob: -21.750011444091797

Token 503: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.39154621958732605
    2. ']
' → logprob: -1.7665462493896484
    3. ')' → logprob: -2.1415462493896484
    4. ')
' → logprob: -3.3915462493896484
    5. '])' → logprob: -6.891546249389648
    6. ']
' → logprob: -8.391546249389648
    7. '])
' → logprob: -8.641546249389648
    8. '               ' → logprob: -9.141546249389648
    9. ')]' → logprob: -9.141546249389648
    10. ')
' → logprob: -9.641546249389648

Token 504: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00020711649267468601
    2. '<|end|>' → logprob: -9.37520694732666
    3. '                
' → logprob: -9.87520694732666
    4. ' if' → logprob: -10.12520694732666
    5. '           ' → logprob: -12.12520694732666
    6. '
' → logprob: -12.12520694732666
    7. '                   ' → logprob: -12.37520694732666
    8. '<|end|>' → logprob: -12.87520694732666
    9. ',' → logprob: -13.12520694732666
    10. 'if' → logprob: -13.25020694732666

Token 505: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.41230103373527527
    2. 'if' (adapté à ' if') → logprob: -1.7873010635375977
    3. '               ' → logprob: -1.7873010635375977
    4. ' positions' → logprob: -6.662301063537598
    5. '                ' → logprob: -7.287301063537598
    6. 'positions' → logprob: -7.787301063537598
    7. ' for' → logprob: -8.412301063537598
    8. 'for' → logprob: -8.912301063537598
    9. '                
' → logprob: -9.037301063537598
    10. '                   ' → logprob: -9.412301063537598

Token 506: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00033558503491804004
    2. ' b' → logprob: -8.000335693359375
    3. '   ' → logprob: -17.250335693359375
    4. '	b' → logprob: -18.000335693359375
    5. '           ' → logprob: -18.375335693359375
    6. ' ' → logprob: -19.000335693359375
    7. '               ' → logprob: -19.625335693359375
    8. '(b' → logprob: -19.750335693359375
    9. '       ' → logprob: -19.875335693359375
    10. '                   ' → logprob: -20.125335693359375

Token 507: 'num' (ID: 4571)
  Prédit: 'num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.004555323161184788
    2. 'b' → logprob: -5.8795552253723145
    3. 'in' → logprob: -7.0045552253723145
    4. ' num' → logprob: -8.254555702209473
    5. ' in' → logprob: -8.379555702209473
    6. ' b' → logprob: -9.379555702209473
    7. 'y' → logprob: -9.754555702209473
    8. '   ' → logprob: -10.129555702209473
    9. '_num' → logprob: -10.879555702209473
    10. '[num' → logprob: -10.879555702209473

Token 508: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.42873087525367737
    2. 'in' → logprob: -1.053730845451355
    3. '!=' → logprob: -11.678730964660645
    4. '>' → logprob: -12.303730964660645
    5. '==' → logprob: -12.553730964660645
    6. ' ' → logprob: -12.928730964660645
    7. 'b' → logprob: -13.053730964660645
    8. ')' → logprob: -13.428730964660645
    9. '<|end|>' → logprob: -13.803730964660645
    10. 'import' → logprob: -13.803730964660645

Token 509: ' positions' (ID: 15897)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.04880708083510399
    2. 'buyer' → logprob: -3.048807144165039
    3. ' positions' → logprob: -9.548807144165039
    4. ' buyer' → logprob: -9.798807144165039
    5. 'rect' → logprob: -9.798807144165039
    6. 'buyers' → logprob: -10.548807144165039
    7. 'buy' → logprob: -12.423807144165039
    8. 'pos' → logprob: -12.923807144165039
    9. 'position' → logprob: -13.423807144165039
    10. 'Positions' → logprob: -14.423807144165039

Token 510: ':
' (ID: 734)
  Prédit: '[b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.007253773044794798
    2. ':
' → logprob: -5.257253646850586
    3. '               ' → logprob: -7.507253646850586
    4. ':' → logprob: -7.632253646850586
    5. ' and' → logprob: -8.007253646850586
    6. '                   ' → logprob: -8.257253646850586
    7. '[y' → logprob: -8.757253646850586
    8. '           ' → logprob: -8.882253646850586
    9. 'and' → logprob: -10.382253646850586
    10. 'b' → logprob: -10.382253646850586

Token 511: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.005404150113463402
    2. 'positions' → logprob: -5.880403995513916
    3. ' positions' → logprob: -6.005403995513916
    4. '                       ' → logprob: -9.380404472351074
    5. '               ' → logprob: -10.505404472351074
    6. '.positions' → logprob: -11.630404472351074
    7. '                  ' → logprob: -13.255404472351074
    8. '                           ' → logprob: -13.505404472351074
    9. '   ' → logprob: -13.755404472351074
    10. '
' → logprob: -13.755404472351074

Token 512: ' positions' (ID: 15897)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' (adapté à ' positions') → logprob: -0.2519553005695343
    2. ' positions' → logprob: -1.501955270767212
    3. '                   ' → logprob: -10.876955032348633
    4. '                       ' → logprob: -11.876955032348633
    5. '.positions' → logprob: -15.251955032348633
    6. '_positions' → logprob: -16.501955032348633
    7. 'position' → logprob: -17.751955032348633
    8. '               ' → logprob: -17.876955032348633
    9. '   ' → logprob: -18.376955032348633
    10. ' ' → logprob: -18.876955032348633

Token 513: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -3.5716304410016164e-05
    2. 'b' → logprob: -10.250035285949707
    3. '[' → logprob: -15.625035285949707
    4. ' [' → logprob: -17.625036239624023
    5. '[num' → logprob: -18.250036239624023
    6. '][' → logprob: -18.375036239624023
    7. '   ' → logprob: -18.500036239624023
    8. '}[' → logprob: -19.375036239624023
    9. '	b' → logprob: -19.500036239624023
    10. '\b' → logprob: -19.625036239624023

Token 514: 'num' (ID: 4571)
  Prédit: '[b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.342451274394989
    2. 'num' → logprob: -1.3424513339996338
    3. 'b' → logprob: -4.342451095581055
    4. '[y' → logprob: -4.842451095581055
    5. '[num' → logprob: -5.092451095581055
    6. '][' → logprob: -6.467451095581055
    7. ']' → logprob: -10.217451095581055
    8. '[x' → logprob: -10.592451095581055
    9. 'y' → logprob: -10.842451095581055
    10. '[' → logprob: -10.967451095581055

Token 515: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.38702192902565
    2. '.append' → logprob: -1.1370218992233276
    3. '.' → logprob: -9.262022018432617
    4. ').' → logprob: -10.512022018432617
    5. ' ].' → logprob: -11.762022018432617
    6. ' .' → logprob: -12.012022018432617
    7. 'append' → logprob: -12.262022018432617
    8. '                   ' → logprob: -12.887022018432617
    9. ''].' → logprob: -13.012022018432617
    10. '.app' → logprob: -13.387022018432617

Token 516: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -3.128163257315464e-07
    2. ' append' → logprob: -15.25
    3. '.append' → logprob: -16.75
    4. '_append' → logprob: -19.875
    5. '	append' → logprob: -19.875
    6. 'appen' → logprob: -20.625
    7. 'Append' → logprob: -22.5
    8. 'app' → logprob: -22.625
    9. 'add' → logprob: -24.125
    10. 'insert' → logprob: -24.625

Token 517: '((' (ID: 2054)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.04325631260871887
    2. '(y' → logprob: -3.2932562828063965
    3. '(' → logprob: -5.2932562828063965
    4. ' (' → logprob: -8.668256759643555
    5. '((' → logprob: -12.543256759643555
    6. '(X' → logprob: -15.668256759643555
    7. '   ' → logprob: -16.918256759643555
    8. '(Y' → logprob: -16.918256759643555
    9. '(z' → logprob: -16.918256759643555
    10. '(xx' → logprob: -17.043256759643555

Token 518: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.10032042860984802
    2. 'y' → logprob: -2.350320339202881
    3. ' y' → logprob: -9.475320816040039
    4. ' x' → logprob: -10.225320816040039
    5. ')x' → logprob: -15.475320816040039
    6. ')' → logprob: -15.600320816040039
    7. ')y' → logprob: -15.725320816040039
    8. '(x' → logprob: -15.850320816040039
    9. '   ' → logprob: -15.975320816040039
    10. '(y' → logprob: -16.72532081604004

Token 519: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20156274735927582
    2. ',y' → logprob: -1.701562762260437
    3. ' ,' → logprob: -8.826562881469727
    4. ',
' → logprob: -13.201562881469727
    5. ',Y' → logprob: -15.701562881469727
    6. 'y' → logprob: -15.701562881469727
    7. ',x' → logprob: -16.326562881469727
    8. '```' → logprob: -17.076562881469727
    9. ',user' → logprob: -17.076562881469727
    10. ',b' → logprob: -17.326562881469727

Token 520: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -7.743758760625497e-05
    2. ')' → logprob: -9.750077247619629
    3. '))
' → logprob: -11.250077247619629
    4. ' ))' → logprob: -12.625077247619629
    5. ')))' → logprob: -13.125077247619629
    6. '))

' → logprob: -15.750077247619629
    7. '),' → logprob: -15.750077247619629
    8. '));' → logprob: -15.875077247619629
    9. ',' → logprob: -16.125078201293945
    10. '()))' → logprob: -17.250078201293945

Token 521: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2724565267562866
    2. '
' → logprob: -2.022456645965576
    3. '<|end|>' → logprob: -2.397456645965576
    4. '        
' → logprob: -5.397456645965576
    5. '```' → logprob: -6.022456645965576
    6. ' for' → logprob: -6.272456645965576
    7. 'for' → logprob: -6.397456645965576
    8. '#' → logprob: -6.397456645965576
    9. ')' → logprob: -7.022456645965576
    10. '<|end|>' → logprob: -7.647456645965576

Token 522: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.674787163734436
    2. '#' (adapté à ' #') → logprob: -1.299787163734436
    3. 'for' → logprob: -1.799787163734436
    4. 'from' → logprob: -3.5497870445251465
    5. ' for' → logprob: -4.2997870445251465
    6. 'import' → logprob: -5.4247870445251465
    7. '
' → logprob: -6.1747870445251465
    8. '```' → logprob: -6.7997870445251465
    9. '        
' → logprob: -7.6747870445251465
    10. 'def' → logprob: -7.7997870445251465

Token 523: ' Fonction' (ID: 189149)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10779604315757751
    2. '#' → logprob: -2.6077959537506104
    3. 'from' → logprob: -4.7327961921691895
    4. 'max' → logprob: -5.3577961921691895
    5. 'def' → logprob: -5.4827961921691895
    6. 'area' → logprob: -5.8577961921691895
    7. 'height' → logprob: -6.1077961921691895
    8. 'possible' → logprob: -6.2327961921691895
    9. '       ' → logprob: -6.4827961921691895
    10. 'he' → logprob: -7.1077961921691895

Token 524: ' pour' (ID: 1930)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.006460628472268581
    2. ' def' → logprob: -5.631460666656494
    3. 'find' → logprob: -7.256460666656494
    4. 'possible' → logprob: -7.756460666656494
    5. ' find' → logprob: -7.881460666656494
    6. ' can' → logprob: -8.006460189819336
    7. 'can' → logprob: -8.131460189819336
    8. ' possible' → logprob: -8.256460189819336
    9. 'get' → logprob: -9.631460189819336
    10. '
' → logprob: -9.756460189819336

Token 525: ' vérifier' (ID: 93671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.9251410365104675
    2. 'get' → logprob: -2.5501410961151123
    3. 'check' → logprob: -2.6751410961151123
    4. 'find' → logprob: -2.8001410961151123
    5. 'generate' → logprob: -3.3001410961151123
    6. 'y' → logprob: -3.4251410961151123
    7. ' find' → logprob: -3.5501410961151123
    8. ' check' → logprob: -3.5501410961151123
    9. 'range' → logprob: -3.6751410961151123
    10. 'r' → logprob: -3.6751410961151123

Token 526: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8963118195533752
    2. 'def' → logprob: -0.8963118195533752
    3. 'if' → logprob: -2.1463117599487305
    4. 'rect' → logprob: -3.7713117599487305
    5. ' si' → logprob: -4.7713117599487305
    6. '_rectangle' → logprob: -5.1463117599487305
    7. '_rect' → logprob: -5.2713117599487305
    8. ' def' → logprob: -5.6463117599487305
    9. ' la' → logprob: -5.7713117599487305
    10. 'possible' → logprob: -6.0213117599487305

Token 527: ' un' (ID: 537)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.199387788772583
    2. 'a' → logprob: -1.824387788772583
    3. 'rect' → logprob: -1.824387788772583
    4. 'un' → logprob: -2.449387788772583
    5. ' a' → logprob: -2.824387788772583
    6. ' un' → logprob: -3.074387788772583
    7. ' une' → logprob: -3.824387788772583
    8. '(x' → logprob: -3.824387788772583
    9. ' x' → logprob: -4.074387550354004
    10. ' ' → logprob: -4.199387550354004

Token 528: ' rectangle' (ID: 45808)
  Prédit: 'rectangle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rectangle' → logprob: -0.27389249205589294
    2. 'rect' → logprob: -2.023892402648926
    3. ' rectangle' → logprob: -2.398892402648926
    4. 'def' → logprob: -5.523892402648926
    5. ' given' → logprob: -5.523892402648926
    6. 'token' → logprob: -6.148892402648926
    7. 'given' → logprob: -6.148892402648926
    8. 'possible' → logprob: -7.023892402648926
    9. '```' → logprob: -7.523892402648926
    10. 'sub' → logprob: -7.648892402648926

Token 529: ' poss' (ID: 2456)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.040616609156131744
    2. ' (' → logprob: -3.540616512298584
    3. '(' → logprob: -5.665616512298584
    4. ' contains' → logprob: -6.415616512298584
    5. 'contains' → logprob: -6.540616512298584
    6. 'x' → logprob: -6.790616512298584
    7. '(rect' → logprob: -8.415616989135742
    8. ' is' → logprob: -8.540616989135742
    9. ' x' → logprob: -8.540616989135742
    10. ' can' → logprob: -8.665616989135742

Token 530: 'ede' (ID: 3549)
  Prédit: 'ède'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ède' → logprob: -0.448632150888443
    2. 'ede' → logprob: -1.9486321210861206
    3. 'et' → logprob: -2.07363224029541
    4. 'ed' → logprob: -3.57363224029541
    5. 't' → logprob: -3.57363224029541
    6. 'e' → logprob: -4.44863224029541
    7. 'eit' → logprob: -4.69863224029541
    8. 'è' → logprob: -4.94863224029541
    9. 'ent' → logprob: -5.94863224029541
    10. 'ert' → logprob: -6.94863224029541

Token 531: ' au' (ID: 2791)
  Prédit: 'au'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'au' → logprob: -0.7268197536468506
    2. ' au' → logprob: -0.7268197536468506
    3. '   ' → logprob: -4.85181999206543
    4. 'un' → logprob: -5.35181999206543
    5. 'at' → logprob: -5.72681999206543
    6. 'a' → logprob: -5.85181999206543
    7. ' ' → logprob: -5.97681999206543
    8. 'une' → logprob: -5.97681999206543
    9. ''au' → logprob: -6.47681999206543
    10. '_token' → logprob: -6.85181999206543

Token 532: ' moins' (ID: 15924)
  Prédit: 'moins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moins' → logprob: -0.0006572735728695989
    2. 'mo' → logprob: -8.875657081604004
    3. 'menos' → logprob: -8.875657081604004
    4. '   ' → logprob: -9.000657081604004
    5. ' moins' → logprob: -9.625657081604004
    6. '  ' → logprob: -10.250657081604004
    7. '```' → logprob: -10.375657081604004
    8. 'minimum' → logprob: -10.875657081604004
    9. ' ' → logprob: -11.500657081604004
    10. 'mon' → logprob: -11.500657081604004

Token 533: ' un' (ID: 537)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.10270554572343826
    2. 'une' → logprob: -2.477705478668213
    3. ' un' → logprob: -4.727705478668213
    4. ''un' → logprob: -6.602705478668213
    5. '```' → logprob: -6.602705478668213
    6. ' une' → logprob: -6.977705478668213
    7. 'one' → logprob: -7.477705478668213
    8. ''une' → logprob: -8.977705955505371
    9. '   ' → logprob: -9.477705955505371
    10. ' ' → logprob: -9.602705955505371

Token 534: ' marque' (ID: 38644)
  Prédit: 'mar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mar' → logprob: -0.5606505274772644
    2. 'b' → logprob: -1.4356505870819092
    3. 'marker' → logprob: -2.560650587081909
    4. ' marque' → logprob: -2.810650587081909
    5. 'token' → logprob: -4.18565034866333
    6. ' b' → logprob: -4.18565034866333
    7. ' mar' → logprob: -4.56065034866333
    8. 'cell' → logprob: -5.56065034866333
    9. 'point' → logprob: -6.06065034866333
    10. 's' → logprob: -6.68565034866333

Token 535: 'ur' (ID: 330)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.07109402120113373
    2. 'ur' → logprob: -2.696094036102295
    3. ' r' → logprob: -6.821094036102295
    4. 'ker' → logprob: -10.821093559265137
    5. 'u' → logprob: -11.196093559265137
    6. '   ' → logprob: -11.696093559265137
    7. 'er' → logprob: -12.196093559265137
    8. 'k' → logprob: -12.696093559265137
    9. ' ' → logprob: -13.071093559265137
    10. '  ' → logprob: -13.196093559265137

Token 536: ' de' (ID: 334)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6019490957260132
    2. 'b' → logprob: -1.8519490957260132
    3. '_b' → logprob: -2.1019492149353027
    4. '<|end|>' → logprob: -3.4769492149353027
    5. ' b' → logprob: -3.6019492149353027
    6. '_in' → logprob: -3.9769492149353027
    7. '_' → logprob: -4.226949214935303
    8. ' _' → logprob: -4.351949214935303
    9. 'def' → logprob: -4.851949214935303
    10. ' dans' → logprob: -4.851949214935303

Token 537: ' l' (ID: 305)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5919691920280457
    2. 'l' → logprob: -0.8419691920280457
    3. 'buyer' → logprob: -4.966969013214111
    4. 'la' → logprob: -6.091969013214111
    5. 'achat' → logprob: -6.716969013214111
    6. 'c' → logprob: -6.716969013214111
    7. 'ache' → logprob: -7.091969013214111
    8. 'cet' → logprob: -7.591969013214111
    9. ' l' → logprob: -7.841969013214111
    10. 'acheter' → logprob: -8.46696949005127

Token 538: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5837892889976501
    2. 'buyer' → logprob: -1.958789348602295
    3. 'a' → logprob: -2.083789348602295
    4. 'b' → logprob: -2.208789348602295
    5. ' buyer' → logprob: -3.833789348602295
    6. ''achat' → logprob: -4.208789348602295
    7. 'e' → logprob: -4.708789348602295
    8. ''b' → logprob: -5.458789348602295
    9. 'ach' → logprob: -6.208789348602295
    10. ''utilisateur' → logprob: -6.333789348602295

Token 539: 'ache' (ID: 2285)
  Prédit: 'ache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ache' → logprob: -0.03160449117422104
    2. 'b' → logprob: -4.531604290008545
    3. ''' → logprob: -4.906604290008545
    4. 'buyer' → logprob: -4.906604290008545
    5. 'acheter' → logprob: -6.406604290008545
    6. 'ach' → logprob: -7.031604290008545
    7. 'a' → logprob: -7.156604290008545
    8. ' ache' → logprob: -7.531604290008545
    9. 'achat' → logprob: -7.781604290008545
    10. 'achet' → logprob: -8.656604766845703

Token 540: 'teur' (ID: 45262)
  Prédit: 'teur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'teur' → logprob: -0.0027428159955888987
    2. 'te' → logprob: -6.627742767333984
    3. 'ct' → logprob: -7.252742767333984
    4. '#' → logprob: -7.877742767333984
    5. '{' → logprob: -9.252742767333984
    6. 'uteur' → logprob: -10.377742767333984
    7. 'ter' → logprob: -10.502742767333984
    8. 'a' → logprob: -10.627742767333984
    9. '[' → logprob: -10.752742767333984
    10. '\' → logprob: -11.002742767333984

Token 541: '
' (ID: 198)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.20864713191986084
    2. '_b' → logprob: -2.3336472511291504
    3. '(b' → logprob: -3.8336472511291504
    4. 'def' → logprob: -4.08364725112915
    5. 'b' → logprob: -4.33364725112915
    6. ' _' → logprob: -4.45864725112915
    7. ' (' → logprob: -4.45864725112915
    8. '(' → logprob: -5.20864725112915
    9. ':' → logprob: -6.08364725112915
    10. ' b' → logprob: -6.45864725112915

Token 542: '       ' (ID: 309)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07222706824541092
    2. '
' → logprob: -3.5722270011901855
    3. '(
' → logprob: -4.5722270011901855
    4. '(' → logprob: -4.8222270011901855
    5. ' def' → logprob: -5.6972270011901855
    6. '  
' → logprob: -5.6972270011901855
    7. '       ' → logprob: -5.9472270011901855
    8. '        
' → logprob: -5.9472270011901855
    9. '<|end|>' → logprob: -5.9472270011901855
    10. ':' → logprob: -6.5722270011901855

Token 543: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.4341498911380768
    2. '
' → logprob: -1.0591498613357544
    3. ' def' → logprob: -5.809149742126465
    4. ' 
' → logprob: -6.684149742126465
    5. '  
' → logprob: -7.184149742126465
    6. '        
' → logprob: -8.684149742126465
    7. '    
' → logprob: -8.934149742126465
    8. '
' → logprob: -10.184149742126465
    9. '   
' → logprob: -11.184149742126465
    10. '

' → logprob: -11.309149742126465

Token 544: ' has' (ID: 853)
  Prédit: 'has'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'has' → logprob: -0.032186444848775864
    2. 'contains' → logprob: -3.657186508178711
    3. 'rect' → logprob: -5.907186508178711
    4. 'rectangle' → logprob: -6.282186508178711
    5. ' has' → logprob: -6.907186508178711
    6. 'check' → logprob: -9.032186508178711
    7. ' contains' → logprob: -9.657186508178711
    8. 'can' → logprob: -10.407186508178711
    9. ' rectangle' → logprob: -10.657186508178711
    10. 'valid' → logprob: -11.282186508178711

Token 545: '_marker' (ID: 68466)
  Prédit: '_marker'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_marker' → logprob: -0.0012501158053055406
    2. '_b' → logprob: -6.876250267028809
    3. '_mark' → logprob: -8.626250267028809
    4. 'marker' → logprob: -11.251250267028809
    5. '_at' → logprob: -12.001250267028809
    6. '_point' → logprob: -12.251250267028809
    7. '_token' → logprob: -12.501250267028809
    8. '_one' → logprob: -13.126250267028809
    9. '_' → logprob: -13.251250267028809
    10. '_a' → logprob: -13.751250267028809

Token 546: '(rect' (ID: 68123)
  Prédit: '(rect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rect' → logprob: -0.1428953856229782
    2. '(b' → logprob: -2.642895460128784
    3. '(' → logprob: -3.392895460128784
    4. '(x' → logprob: -4.017895221710205
    5. '(s' → logprob: -5.017895221710205
    6. '(r' → logprob: -6.017895221710205
    7. ' (' → logprob: -7.767895221710205
    8. '   ' → logprob: -8.767895698547363
    9. '(a' → logprob: -9.267895698547363
    10. '_in' → logprob: -9.642895698547363

Token 547: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.43118199706077576
    2. 'angle' → logprob: -1.4311820268630981
    3. '):
' → logprob: -2.5561819076538086
    4. '):' → logprob: -3.5561819076538086
    5. ',b' → logprob: -6.556181907653809
    6. '):

' → logprob: -6.931181907653809
    7. ')' → logprob: -7.056181907653809
    8. ',x' → logprob: -7.181181907653809
    9. ',(' → logprob: -8.431181907653809
    10. '   ' → logprob: -9.056181907653809

Token 548: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.005036644637584686
    2. ' b' → logprob: -5.5050368309021
    3. 'buyer' → logprob: -7.2550368309021
    4. '   ' → logprob: -9.130036354064941
    5. ' buyer' → logprob: -9.505036354064941
    6. ' ' → logprob: -11.255036354064941
    7. 'rect' → logprob: -11.630036354064941
    8. '       ' → logprob: -11.880036354064941
    9. 'marker' → logprob: -12.255036354064941
    10. '           ' → logprob: -12.380036354064941

Token 549: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.25371161103248596
    2. '):' → logprob: -1.5037115812301636
    3. '):
' → logprob: -7.378711700439453
    4. '   ' → logprob: -7.378711700439453
    5. ',' → logprob: -9.003711700439453
    6. ')' → logprob: -9.503711700439453
    7. 'b' → logprob: -9.628711700439453
    8. ' ):
' → logprob: -9.628711700439453
    9. ' ):' → logprob: -9.878711700439453
    10. '):

' → logprob: -10.253711700439453

Token 550: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13995227217674255
    2. '(' → logprob: -3.0149521827697754
    3. ' (' → logprob: -3.2649521827697754
    4. '   ' → logprob: -4.764952182769775
    5. '        
' → logprob: -4.889952182769775
    6. ':' → logprob: -5.764952182769775
    7. '(space' → logprob: -5.889952182769775
    8. ',' → logprob: -5.889952182769775
    9. '(
' → logprob: -6.139952182769775
    10. '(x' → logprob: -6.139952182769775

Token 551: ' x' (ID: 1215)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7770971655845642
    2. ' x' → logprob: -1.527097225189209
    3. '(x' → logprob: -1.777097225189209
    4. 'x' (adapté à ' x') → logprob: -2.027097225189209
    5. ' (' → logprob: -4.277097225189209
    6. '(' → logprob: -6.277097225189209
    7. '   ' → logprob: -6.402097225189209
    8. ' return' → logprob: -6.777097225189209
    9. '           ' → logprob: -7.902097225189209
    10. 'return' → logprob: -7.902097225189209

Token 552: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.13080736994743347
    2. '0' → logprob: -2.380807399749756
    3. ',' → logprob: -4.005807399749756
    4. ',y' → logprob: -5.505807399749756
    5. 'min' → logprob: -6.005807399749756
    6. '_start' → logprob: -6.005807399749756
    7. '_min' → logprob: -6.005807399749756
    8. 'start' → logprob: -8.380806922912598
    9. 'from' → logprob: -9.630806922912598
    10. ',min' → logprob: -10.130806922912598

Token 553: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.021981772035360336
    2. ',y' → logprob: -3.896981716156006
    3. ',x' → logprob: -6.896981716156006
    4. ' ,' → logprob: -7.771981716156006
    5. '=' → logprob: -13.396982192993164
    6. '_,' → logprob: -13.521982192993164
    7. ',
' → logprob: -13.771982192993164
    8. '0' → logprob: -14.271982192993164
    9. 'y' → logprob: -14.771982192993164
    10. 'x' → logprob: -14.896982192993164

Token 554: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9879730343818665
    2. '=' → logprob: -1.1129729747772217
    3. ',x' → logprob: -1.6129729747772217
    4. '1' → logprob: -2.6129729747772217
    5. ' =' → logprob: -4.487973213195801
    6. '<|end|>' → logprob: -5.612973213195801
    7. ' ,' → logprob: -6.487973213195801
    8. ')' → logprob: -6.737973213195801
    9. ' x' → logprob: -6.862973213195801
    10. '_' → logprob: -7.112973213195801

Token 555: ',x' (ID: 29748)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1271941363811493
    2. ',x' → logprob: -2.1271941661834717
    3. ' ,' → logprob: -8.50219440460205
    4. ' =' → logprob: -10.62719440460205
    5. '=' → logprob: -10.75219440460205
    6. ',y' → logprob: -11.62719440460205
    7. ',b' → logprob: -13.25219440460205
    8. '   ' → logprob: -13.50219440460205
    9. ',int' → logprob: -13.87719440460205
    10. 'x' → logprob: -14.12719440460205

Token 556: '2' (ID: 17)
  Prédit: ',x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',x' → logprob: -0.2894594967365265
    2. '2' → logprob: -1.539459466934204
    3. '1' → logprob: -3.414459466934204
    4. ',' → logprob: -5.664459705352783
    5. '0' → logprob: -8.164459228515625
    6. ',y' → logprob: -9.789459228515625
    7. 'x' → logprob: -10.164459228515625
    8. ' ,' → logprob: -10.664459228515625
    9. '_,' → logprob: -11.039459228515625
    10. '<x' → logprob: -11.539459228515625

Token 557: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.005433081649243832
    2. ',' → logprob: -5.755433082580566
    3. ',x' → logprob: -6.130433082580566
    4. ' ,' → logprob: -9.505433082580566
    5. ',
' → logprob: -14.255433082580566
    6. '_,' → logprob: -14.630433082580566
    7. ',Y' → logprob: -14.880433082580566
    8. ',z' → logprob: -15.255433082580566
    9. ',v' → logprob: -15.755433082580566
    10. ',user' → logprob: -16.00543212890625

Token 558: '2' (ID: 17)
  Prédit: ',x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',x' → logprob: -0.15078021585941315
    2. '1' → logprob: -2.650780200958252
    3. ',' → logprob: -2.900780200958252
    4. '=' → logprob: -5.275780200958252
    5. '<|end|>' → logprob: -6.150780200958252
    6. ')' → logprob: -6.275780200958252
    7. ',y' → logprob: -7.150780200958252
    8. ' =' → logprob: -7.275780200958252
    9. '(x' → logprob: -7.400780200958252
    10. '   ' → logprob: -7.525780200958252

Token 559: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.43330127000808716
    2. ' =' → logprob: -1.0583012104034424
    3. '   ' → logprob: -6.3083014488220215
    4. ')' → logprob: -6.4333014488220215
    5. '):' → logprob: -7.8083014488220215
    6. ':' → logprob: -8.433300971984863
    7. ')=' → logprob: -9.058300971984863
    8. ' ' → logprob: -9.183300971984863
    9. ',' → logprob: -9.308300971984863
    10. '    ' → logprob: -10.183300971984863

Token 560: ' rect' (ID: 13107)
  Prédit: 'rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rect' → logprob: -0.3868729770183563
    2. ' rect' → logprob: -1.1368730068206787
    3. '(rect' → logprob: -13.886873245239258
    4. '	rect' → logprob: -14.136873245239258
    5. '_rect' → logprob: -15.886873245239258
    6. '0' → logprob: -17.136873245239258
    7. '.rect' → logprob: -17.136873245239258
    8. '   ' → logprob: -17.511873245239258
    9. ' ' → logprob: -18.511873245239258
    10. '
' → logprob: -19.261873245239258

Token 561: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 562: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20944054424762726
    2. '<|end|>' → logprob: -2.3344404697418213
    3. ':
' → logprob: -3.2094404697418213
    4. '           ' → logprob: -4.5844407081604
    5. '\n' → logprob: -4.8344407081604
    6. '       ' → logprob: -5.2094407081604
    7. ':' → logprob: -5.2094407081604
    8. '  
' → logprob: -5.2094407081604
    9. '<|end|>' → logprob: -5.7094407081604
    10. '    
' → logprob: -5.7094407081604

Token 563: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7101439237594604
    2. 'for' (adapté à ' for') → logprob: -1.0851439237594604
    3. ' for' → logprob: -1.8351439237594604
    4. '   ' → logprob: -5.21014404296875
    5. '       ' → logprob: -5.83514404296875
    6. '               ' → logprob: -6.58514404296875
    7. 'return' → logprob: -7.33514404296875
    8. '	for' → logprob: -8.58514404296875
    9. '	       ' → logprob: -8.96014404296875
    10. ' return' → logprob: -10.46014404296875

Token 564: ' (' (ID: 350)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.9063944816589355
    2. 'y' → logprob: -1.2813944816589355
    3. ' y' → logprob: -1.6563944816589355
    4. ' x' → logprob: -3.0313944816589355
    5. 'yy' → logprob: -4.0313944816589355
    6. 'py' → logprob: -4.2813944816589355
    7. 'px' → logprob: -4.4063944816589355
    8. '_x' → logprob: -5.2813944816589355
    9. ' yy' → logprob: -5.2813944816589355
    10. 'yx' → logprob: -5.2813944816589355

Token 565: 'mx' (ID: 32467)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.013804510235786438
    2. 'px' → logprob: -4.8888044357299805
    3. 'mx' → logprob: -6.1388044357299805
    4. 'xx' → logprob: -6.3888044357299805
    5. 'bx' → logprob: -7.0138044357299805
    6. 'xi' → logprob: -7.5138044357299805
    7. '_x' → logprob: -7.7638044357299805
    8. 'xb' → logprob: -8.38880443572998
    9. 'xp' → logprob: -9.26380443572998
    10. 'xm' → logprob: -10.01380443572998

Token 566: ',my' (ID: 171276)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.054300397634506226
    2. ',m' → logprob: -3.179300308227539
    3. ',my' → logprob: -5.179300308227539
    4. ' ,' → logprob: -5.429300308227539
    5. ',y' → logprob: -7.054300308227539
    6. ',x' → logprob: -8.179300308227539
    7. ',n' → logprob: -9.929300308227539
    8. ',w' → logprob: -11.804300308227539
    9. ',b' → logprob: -12.804300308227539
    10. ',user' → logprob: -12.929300308227539

Token 567: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004037402104586363
    2. 'in' → logprob: -8.12540340423584
    3. ' )' → logprob: -9.25040340423584
    4. ' in' → logprob: -12.25040340423584
    5. '   ' → logprob: -13.12540340423584
    6. '),' → logprob: -13.25040340423584
    7. ')==' → logprob: -14.00040340423584
    8. '    ' → logprob: -14.50040340423584
    9. ')
' → logprob: -15.25040340423584
    10. '        ' → logprob: -15.37540340423584

Token 568: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5231422185897827
    2. ' in' → logprob: -0.8981422185897827
    3. ')' → logprob: -11.523141860961914
    4. ',' → logprob: -13.023141860961914
    5. ' ' → logprob: -13.898141860961914
    6. '    ' → logprob: -14.273141860961914
    7. '	in' → logprob: -14.398141860961914
    8. 'x' → logprob: -14.523141860961914
    9. '   ' → logprob: -14.523141860961914
    10. '        ' → logprob: -14.648141860961914

Token 569: ' positions' (ID: 15897)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.016046803444623947
    2. ' positions' → logprob: -4.14104700088501
    3. '           ' → logprob: -12.641046524047852
    4. '   ' → logprob: -13.016046524047852
    5. '[' → logprob: -13.266046524047852
    6. '.positions' → logprob: -13.766046524047852
    7. 'position' → logprob: -14.391046524047852
    8. 'rect' → logprob: -14.516046524047852
    9. '       ' → logprob: -14.641046524047852
    10. ' ' → logprob: -14.891046524047852

Token 570: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.0004309076175559312
    2. 'b' → logprob: -7.750431060791016
    3. '[' → logprob: -16.625431060791016
    4. '	b' → logprob: -17.250431060791016
    5. '(b' → logprob: -17.750431060791016
    6. ' b' → logprob: -18.250431060791016
    7. '[a' → logprob: -18.625431060791016
    8. '[c' → logprob: -19.000431060791016
    9. '[m' → logprob: -19.125431060791016
    10. '[B' → logprob: -19.250431060791016

Token 571: ']:
' (ID: 22152)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7818340063095093
    2. ':' → logprob: -1.2818340063095093
    3. ']:
' → logprob: -1.9068340063095093
    4. '):
' → logprob: -2.656834125518799
    5. ']:' → logprob: -3.781834125518799
    6. '):' → logprob: -4.781834125518799
    7. '           ' → logprob: -4.906834125518799
    8. '       ' → logprob: -5.531834125518799
    9. ']' → logprob: -6.781834125518799
    10. '               ' → logprob: -7.531834125518799

Token 572: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0008772778091952205
    2. '<|end|>' → logprob: -7.375877380371094
    3. '           ' → logprob: -8.750877380371094
    4. '<|end|>' → logprob: -10.625877380371094
    5. '                
' → logprob: -11.000877380371094
    6. '	           ' → logprob: -11.750877380371094
    7. ' if' → logprob: -12.250877380371094
    8. '                               ' → logprob: -12.250877380371094
    9. '       ' → logprob: -12.250877380371094
    10. '                   ' → logprob: -12.375877380371094

Token 573: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.011260372586548328
    2. ' if' → logprob: -4.636260509490967
    3. '           ' → logprob: -7.761260509490967
    4. '                ' → logprob: -7.761260509490967
    5. 'if' (adapté à ' if') → logprob: -8.011260032653809
    6. '<|end|>' → logprob: -9.511260032653809
    7. '                   ' → logprob: -9.636260032653809
    8. '                               ' → logprob: -10.636260032653809
    9. '              ' → logprob: -10.636260032653809
    10. '            ' → logprob: -10.761260032653809

Token 574: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.47407999634742737
    2. 'x' → logprob: -0.974079966545105
    3. '   ' → logprob: -13.474080085754395
    4. ' ' → logprob: -14.349080085754395
    5. '	x' → logprob: -14.724080085754395
    6. '(x' → logprob: -15.349080085754395
    7. ' ' → logprob: -15.974080085754395
    8. '_x' → logprob: -16.849079132080078
    9. '    ' → logprob: -17.099079132080078
    10. '  ' → logprob: -17.349079132080078

Token 575: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002250887919217348
    2. 'mx' → logprob: -6.252250671386719
    3. '>=' → logprob: -8.627250671386719
    4. '<=' → logprob: -10.502250671386719
    5. ' >=' → logprob: -10.627250671386719
    6. '(mx' → logprob: -11.127250671386719
    7. '```' → logprob: -11.252250671386719
    8. ' mx' → logprob: -11.377250671386719
    9. 'm' → logprob: -11.627250671386719
    10. 'x' → logprob: -12.002250671386719

Token 576: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.10020861029624939
    2. ' <=' → logprob: -2.3502085208892822
    3. ')<=' → logprob: -13.725208282470703
    4. ']<=' → logprob: -14.975208282470703
    5. '[' → logprob: -16.225208282470703
    6. '```' → logprob: -16.225208282470703
    7. '≤' → logprob: -16.350208282470703
    8. 'x' → logprob: -16.850208282470703
    9. '+' → logprob: -17.100208282470703
    10. ' ' → logprob: -17.225208282470703

Token 577: ' mx' (ID: 28004)
  Prédit: 'mx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mx' → logprob: -0.0007102862582542002
    2. ' mx' → logprob: -7.250710487365723
    3. '(mx' → logprob: -15.250710487365723
    4. '
' → logprob: -18.000709533691406
    5. '   ' → logprob: -18.125709533691406
    6. '.mx' → logprob: -19.125709533691406
    7. 'mc' → logprob: -19.875709533691406
    8. '
' → logprob: -20.000709533691406
    9. 'm' → logprob: -20.000709533691406
    10. ' ' → logprob: -20.250709533691406

Token 578: ' <=' (ID: 5017)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.33574920892715454
    2. 'and' → logprob: -1.8357491493225098
    3. ' <=' → logprob: -2.4607491493225098
    4. '<=' → logprob: -3.2107491493225098
    5. ' ' → logprob: -12.960749626159668
    6. '        ' → logprob: -14.085749626159668
    7. '```' → logprob: -14.460749626159668
    8. '            ' → logprob: -14.585749626159668
    9. '               ' → logprob: -15.460749626159668
    10. '≤' → logprob: -15.710749626159668

Token 579: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0001234428636962548
    2. ' x' → logprob: -9.000123023986816
    3. '	x' → logprob: -20.500123977661133
    4. '   ' → logprob: -22.125123977661133
    5. '"x' → logprob: -23.000123977661133
    6. ')x' → logprob: -23.375123977661133
    7. '(x' → logprob: -23.875123977661133
    8. ' ' → logprob: -24.000123977661133
    9. '$x' → logprob: -24.250123977661133
    10. '```' → logprob: -24.250123977661133

Token 580: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.750001907348633
    3. 'x' → logprob: -14.500001907348633
    4. '```' → logprob: -14.875001907348633
    5. '   ' → logprob: -17.250001907348633
    6. 'y' → logprob: -17.375001907348633
    7. '
' → logprob: -17.625001907348633
    8. ' x' → logprob: -18.000001907348633
    9. '۲' → logprob: -18.750001907348633
    10. 'and' → logprob: -18.750001907348633

Token 581: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.005933417472988367
    2. 'and' → logprob: -5.1309332847595215
    3. '                ' → logprob: -13.13093376159668
    4. '               ' → logprob: -13.75593376159668
    5. '            ' → logprob: -14.13093376159668
    6. ' ' → logprob: -14.25593376159668
    7. '	and' → logprob: -15.88093376159668
    8. '        ' → logprob: -16.50593376159668
    9. '           ' → logprob: -16.50593376159668
    10. '<|end|>' → logprob: -16.75593376159668

Token 582: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.10020710527896881
    2. 'y' → logprob: -2.3502070903778076
    3. '	y' → logprob: -15.850207328796387
    4. ' my' → logprob: -16.47520637512207
    5. 'my' → logprob: -17.22520637512207
    6. ' ' → logprob: -17.60020637512207
    7. ''y' → logprob: -17.85020637512207
    8. '<|end|>' → logprob: -17.85020637512207
    9. '                   ' → logprob: -18.10020637512207
    10. '    ' → logprob: -18.35020637512207

Token 583: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.968934758333489e-05
    2. ' <=' → logprob: -10.125069618225098
    3. '<=' → logprob: -10.750069618225098
    4. '```' → logprob: -12.250069618225098
    5. ' ' → logprob: -13.250069618225098
    6. '   ' → logprob: -15.062569618225098
    7. '2' → logprob: -15.937569618225098
    8. '``' → logprob: -16.125070571899414
    9. '<|end|>' → logprob: -16.125070571899414
    10. '_' → logprob: -16.687570571899414

Token 584: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.029752805829048157
    2. '<=' → logprob: -3.529752731323242
    3. ' >=' → logprob: -13.279752731323242
    4. '>=' → logprob: -15.404752731323242
    5. '<|end|>' → logprob: -15.904752731323242
    6. ' <=",' → logprob: -16.279752731323242
    7. ')<=' → logprob: -16.779752731323242
    8. ' ' → logprob: -16.904752731323242
    9. ' ≤' → logprob: -17.404752731323242
    10. '```' → logprob: -17.904752731323242

Token 585: ' my' (ID: 922)
  Prédit: 'my'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'my' → logprob: -0.3132636249065399
    2. ' my' → logprob: -1.3132636547088623
    3. ' ' → logprob: -14.688263893127441
    4. '   ' → logprob: -14.813263893127441
    5. '	my' → logprob: -15.188263893127441
    6. '(my' → logprob: -15.688263893127441
    7. '_my' → logprob: -15.938263893127441
    8. ' ' → logprob: -16.188262939453125
    9. ',my' → logprob: -16.188262939453125
    10. '=my' → logprob: -16.438262939453125

Token 586: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.10021314769983292
    2. '<=' → logprob: -2.350213050842285
    3. ')<=' → logprob: -13.100213050842285
    4. '<|end|>' → logprob: -13.475213050842285
    5. ']<=' → logprob: -13.725213050842285
    6. ' >=' → logprob: -14.850213050842285
    7. '>=' → logprob: -15.100213050842285
    8. '```' → logprob: -15.100213050842285
    9. ' <=",' → logprob: -15.350213050842285
    10. ' ≤' → logprob: -15.475213050842285

Token 587: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.003178071230649948
    2. ' y' → logprob: -5.753178119659424
    3. '   ' → logprob: -15.628177642822266
    4. '	y' → logprob: -16.253177642822266
    5. ' ' → logprob: -16.503177642822266
    6. '    ' → logprob: -19.128177642822266
    7. ''y' → logprob: -19.253177642822266
    8. 'x' → logprob: -19.628177642822266
    9. '(y' → logprob: -19.628177642822266
    10. '  ' → logprob: -19.753177642822266

Token 588: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.006049551069736481
    2. 'y' → logprob: -5.131049633026123
    3. ' y' → logprob: -9.881049156188965
    4. ' ' → logprob: -10.381049156188965
    5. '1' → logprob: -10.756049156188965
    6. 'x' → logprob: -11.756049156188965
    7. '<=' → logprob: -12.381049156188965
    8. '   ' → logprob: -13.381049156188965
    9. ' <=' → logprob: -14.131049156188965
    10. '```' → logprob: -14.381049156188965

Token 589: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23963676393032074
    2. ' and' → logprob: -1.989636778831482
    3. ':
' → logprob: -3.7396366596221924
    4. '                   ' → logprob: -4.1146368980407715
    5. '               ' → logprob: -4.2396368980407715
    6. '<|end|>' → logprob: -4.9896368980407715
    7. '                       ' → logprob: -5.4896368980407715
    8. ':return' → logprob: -5.6146368980407715
    9. 'and' → logprob: -6.2396368980407715
    10. '                           ' → logprob: -6.3646368980407715

Token 590: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5877196192741394
    2. ' return' → logprob: -1.5877196788787842
    3. '               ' → logprob: -1.9627196788787842
    4. '                       ' → logprob: -2.587719678878784
    5. 'return' → logprob: -3.962719678878784
    6. ' ' → logprob: -6.587719440460205
    7. '                               ' → logprob: -6.587719440460205
    8. '           ' → logprob: -7.337719440460205
    9. '                           ' → logprob: -8.212719917297363
    10. '       ' → logprob: -8.212719917297363

Token 591: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.17533427476882935
    2. 'return' (adapté à ' return') → logprob: -2.4253342151641846
    3. '                       ' → logprob: -2.6753342151641846
    4. '                   ' → logprob: -6.050334453582764
    5. '               ' → logprob: -6.925334453582764
    6. '                               ' → logprob: -10.300333976745605
    7. ' ' → logprob: -10.425333976745605
    8. '       ' → logprob: -10.675333976745605
    9. '	return' → logprob: -10.925333976745605
    10. ' 
' → logprob: -11.550333976745605

Token 592: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0024756586644798517
    2. ' True' → logprob: -6.002475738525391
    3. '   ' → logprob: -19.25247573852539
    4. '(True' → logprob: -20.87747573852539
    5. '1' → logprob: -22.00247573852539
    6. 'true' → logprob: -22.37747573852539
    7. '=True' → logprob: -23.12747573852539
    8. ' ' → logprob: -23.50247573852539
    9. 'False' → logprob: -24.50247573852539
    10. '           ' → logprob: -24.62747573852539

Token 593: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 594: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 595: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7151796221733093
    2. '       ' → logprob: -0.8401796221733093
    3. 'return' (adapté à ' return') → logprob: -3.465179681777954
    4. ' return' → logprob: -3.590179681777954
    5. '   ' → logprob: -4.590179443359375
    6. '	return' → logprob: -5.340179443359375
    7. '
' → logprob: -6.590179443359375
    8. ' ' → logprob: -6.590179443359375
    9. '               ' → logprob: -7.590179443359375
    10. '<|end|>' → logprob: -7.590179443359375

Token 596: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.001170225441455841
    2. ' False' → logprob: -6.7511701583862305
    3. '(False' → logprob: -20.376171112060547
    4. 'false' → logprob: -22.251171112060547
    5. '   ' → logprob: -23.626171112060547
    6. 'True' → logprob: -23.626171112060547
    7. '=False' → logprob: -23.626171112060547
    8. '.False' → logprob: -24.126171112060547
    9. '_false' → logprob: -24.251171112060547
    10. 'None' → logprob: -25.251171112060547

Token 597: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 598: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0507795512676239
    2. '        
' → logprob: -4.425779342651367
    3. ' 
' → logprob: -4.675779342651367
    4. '<|end|>' → logprob: -5.175779342651367
    5. ' for' → logprob: -5.550779342651367
    6. '        ' → logprob: -5.800779342651367
    7. '#' → logprob: -6.050779342651367
    8. '
' → logprob: -6.050779342651367
    9. '\' → logprob: -6.425779342651367
    10. 'for' → logprob: -6.550779342651367

Token 599: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.3151531219482422
    2. '       ' → logprob: -1.6901531219482422
    3. 'for' → logprob: -3.065153121948242
    4. 'def' → logprob: -3.315153121948242
    5. 'from' → logprob: -6.565153121948242
    6. 'height' → logprob: -7.440153121948242
    7. '   ' → logprob: -8.440153121948242
    8. 'import' → logprob: -9.440153121948242
    9. ' for' → logprob: -9.565153121948242
    10. '```' → logprob: -9.565153121948242

Token 600: ' Fonction' (ID: 189149)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11128635704517365
    2. '#' → logprob: -2.3612864017486572
    3. 'from' → logprob: -5.236286163330078
    4. 'def' → logprob: -6.861286163330078
    5. 'import' → logprob: -6.986286163330078
    6. 'max' → logprob: -6.986286163330078
    7. '       ' → logprob: -7.111286163330078
    8. 'possible' → logprob: -7.486286163330078
    9. 'area' → logprob: -7.486286163330078
    10. 'sizes' → logprob: -8.236286163330078

Token 601: ' pour' (ID: 1930)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5823917388916016
    2. ' for' → logprob: -1.7073917388916016
    3. 'for' → logprob: -2.2073917388916016
    4. ' to' → logprob: -2.7073917388916016
    5. 'to' → logprob: -3.0823917388916016
    6. ' pour' → logprob: -3.9573917388916016
    7. ' def' → logprob: -4.582391738891602
    8. 'pour' → logprob: -6.457391738891602
    9. '#' → logprob: -7.207391738891602
    10. '       ' → logprob: -7.457391738891602

Token 602: ' compter' (ID: 81694)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' find' → logprob: -1.5224025249481201
    2. 'find' → logprob: -2.02240252494812
    3. ' y' → logprob: -2.39740252494812
    4. 'generate' → logprob: -2.39740252494812
    5. 'y' → logprob: -2.64740252494812
    6. 'try' → logprob: -3.02240252494812
    7. 'x' → logprob: -3.02240252494812
    8. 'enumer' → logprob: -3.14740252494812
    9. ' possible' → logprob: -3.27240252494812
    10. ' enumerate' → logprob: -3.27240252494812

Token 603: ' la' (ID: 557)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.071713924407959
    2. 'les' → logprob: -1.821713924407959
    3. '_cells' → logprob: -1.821713924407959
    4. '_' → logprob: -2.071713924407959
    5. '_rectangle' → logprob: -2.821713924407959
    6. 'cells' → logprob: -3.821713924407959
    7. 'the' → logprob: -3.946713924407959
    8. '_rect' → logprob: -4.071713924407959
    9. 'rect' → logprob: -4.446713924407959
    10. 'rectangle' → logprob: -4.821713924407959

Token 604: ' taille' (ID: 41644)
  Prédit: 'area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'area' → logprob: -1.0628246068954468
    2. 'count' → logprob: -1.3128246068954468
    3. 'sum' → logprob: -1.5628246068954468
    4. 'number' → logprob: -3.1878247261047363
    5. 'x' → logprob: -3.4378247261047363
    6. '#' → logprob: -4.062824726104736
    7. 'width' → logprob: -4.187824726104736
    8. '1' → logprob: -4.937824726104736
    9. 'cells' → logprob: -4.937824726104736
    10. 'rectangle' → logprob: -5.062824726104736

Token 605: ' du' (ID: 1462)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'of' → logprob: -1.1210252046585083
    2. '_rectangle' → logprob: -1.1210252046585083
    3. 'def' → logprob: -1.8710252046585083
    4. '_of' → logprob: -2.6210250854492188
    5. '_rect' → logprob: -3.2460250854492188
    6. '       ' → logprob: -3.8710250854492188
    7. '(rect' → logprob: -4.371025085449219
    8. ' of' → logprob: -4.371025085449219
    9. '_' → logprob: -4.621025085449219
    10. 'rect' → logprob: -5.121025085449219

Token 606: ' rectangle' (ID: 45808)
  Prédit: 'rectangle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rectangle' → logprob: -0.2738634943962097
    2. ' rectangle' → logprob: -1.7738635540008545
    3. 'rect' → logprob: -2.7738635540008545
    4. '(rect' → logprob: -5.148863315582275
    5. ' rect' → logprob: -7.773863315582275
    6. ' (' → logprob: -8.148863792419434
    7. '(' → logprob: -8.398863792419434
    8. '_rectangle' → logprob: -8.648863792419434
    9. '(x' → logprob: -8.898863792419434
    10. ' ' → logprob: -9.273863792419434

Token 607: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.2665573060512543
    2. 'def' → logprob: -1.5165573358535767
    3. '(rect' → logprob: -5.141557216644287
    4. '(' → logprob: -5.266557216644287
    5. ' (' → logprob: -6.141557216644287
    6. '(
' → logprob: -7.641557216644287
    7. 'rect' → logprob: -8.391557693481445
    8. 'x' → logprob: -9.391557693481445
    9. '```' → logprob: -9.391557693481445
    10. '(width' → logprob: -9.391557693481445

Token 608: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0061164903454482555
    2. 'lambda' → logprob: -6.1311163902282715
    3. ' x' → logprob: -6.5061163902282715
    4. '(x' → logprob: -6.8811163902282715
    5. ')' → logprob: -7.1311163902282715
    6. 'rect' → logprob: -8.38111686706543
    7. 'def' → logprob: -9.00611686706543
    8. ' lambda' → logprob: -9.00611686706543
    9. ' (' → logprob: -10.00611686706543
    10. ')x' → logprob: -10.75611686706543

Token 609: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4741450846195221
    2. '2' → logprob: -0.9741450548171997
    3. '```' → logprob: -10.34914493560791
    4. ',' → logprob: -11.34914493560791
    5. ' ' → logprob: -11.84914493560791
    6. ')' → logprob: -11.84914493560791
    7. '   ' → logprob: -13.41164493560791
    8. '_' → logprob: -13.91164493560791
    9. '`' → logprob: -14.28664493560791
    10. '₂' → logprob: -14.41164493560791

Token 610: '-x' (ID: 12651)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1566614806652069
    2. '-x' → logprob: -2.2816615104675293
    3. '-' → logprob: -3.1566615104675293
    4. ',x' → logprob: -8.656661033630371
    5. ',' → logprob: -9.781661033630371
    6. '```' → logprob: -10.406661033630371
    7. 'x' → logprob: -10.531661033630371
    8. '-y' → logprob: -11.156661033630371
    9. ',y' → logprob: -12.031661033630371
    10. '+' → logprob: -12.281661033630371

Token 611: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004935794277116656
    2. '2' → logprob: -8.000494003295898
    3. '```' → logprob: -9.375494003295898
    4. '+' → logprob: -10.000494003295898
    5. ')' → logprob: -12.000494003295898
    6. ' +' → logprob: -12.250494003295898
    7. ' ' → logprob: -12.375494003295898
    8. '
' → logprob: -13.125494003295898
    9. '

' → logprob: -13.250494003295898
    10. '_' → logprob: -13.312994003295898

Token 612: '+' (ID: 10)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5766062140464783
    2. '+' → logprob: -0.8266062140464783
    3. ')' → logprob: -7.576606273651123
    4. ')+' → logprob: -9.076605796813965
    5. '1' → logprob: -10.701605796813965
    6. '```' → logprob: -11.826605796813965
    7. ' plus' → logprob: -13.576605796813965
    8. ' )' → logprob: -13.576605796813965
    9. '
' → logprob: -13.576605796813965
    10. ' ' → logprob: -13.951605796813965

Token 613: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012821101699955761
    2. '4' → logprob: -9.125127792358398
    3. '```' → logprob: -11.375127792358398
    4. ' ' → logprob: -12.250127792358398
    5. ')' → logprob: -13.375127792358398
    6. '2' → logprob: -14.250127792358398
    7. '   ' → logprob: -14.750127792358398
    8. '`' → logprob: -16.0001277923584
    9. '
' → logprob: -16.2501277923584
    10. 'x' → logprob: -16.2501277923584

Token 614: ')*(' (ID: 44406)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4751106798648834
    2. ')*(' → logprob: -1.100110650062561
    3. ')*' → logprob: -3.1001107692718506
    4. '*' → logprob: -8.60011100769043
    5. ' )' → logprob: -9.97511100769043
    6. ',' → logprob: -10.97511100769043
    7. '```' → logprob: -11.10011100769043
    8. ' *' → logprob: -11.60011100769043
    9. '*)' → logprob: -11.85011100769043
    10. '*(' → logprob: -12.60011100769043

Token 615: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.01698354072868824
    2. '(y' → logprob: -4.266983509063721
    3. ' y' → logprob: -5.891983509063721
    4. ' (' → logprob: -10.016983985900879
    5. '	y' → logprob: -12.516983985900879
    6. '(' → logprob: -12.891983985900879
    7. ')y' → logprob: -13.141983985900879
    8. '   ' → logprob: -14.391983985900879
    9. ''y' → logprob: -15.141983985900879
    10. ')' → logprob: -15.266983985900879

Token 616: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.588793960167095e-05
    2. '```' → logprob: -10.250076293945312
    3. ')' → logprob: -11.000076293945312
    4. ' ' → logprob: -11.875076293945312
    5. '   ' → logprob: -11.875076293945312
    6. '       ' → logprob: -13.375076293945312
    7. '1' → logprob: -13.625076293945312
    8. '[' → logprob: -14.000076293945312
    9. 'def' → logprob: -14.125076293945312
    10. '
' → logprob: -14.250076293945312

Token 617: '-y' (ID: 18102)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.39061835408210754
    2. '1' → logprob: -1.1406183242797852
    3. '```' → logprob: -6.515618324279785
    4. ' +' → logprob: -7.015618324279785
    5. ' -' → logprob: -7.890618324279785
    6. ')' → logprob: -8.265618324279785
    7. '-x' → logprob: -8.640618324279785
    8. 'x' → logprob: -8.765618324279785
    9. '-' → logprob: -9.015618324279785
    10. ')+' → logprob: -9.515618324279785

Token 618: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007995068095624447
    2. '2' → logprob: -4.882995128631592
    3. '-' → logprob: -8.507994651794434
    4. ' -' → logprob: -9.382994651794434
    5. '+' → logprob: -9.507994651794434
    6. '```' → logprob: -11.382994651794434
    7. '   ' → logprob: -11.882994651794434
    8. '4' → logprob: -12.757994651794434
    9. ')' → logprob: -13.132994651794434
    10. ' ' → logprob: -13.507994651794434

Token 619: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -4.656383680412546e-05
    2. ' +' → logprob: -10.000046730041504
    3. '1' → logprob: -14.375046730041504
    4. ')+' → logprob: -15.250046730041504
    5. '```' → logprob: -15.500046730041504
    6. '()+' → logprob: -17.000045776367188
    7. ')' → logprob: -17.500045776367188
    8. '＋' → logprob: -17.625045776367188
    9. '+
' → logprob: -17.875045776367188
    10. '+++' → logprob: -18.500045776367188

Token 620: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0021363403648138046
    2. '+' → logprob: -6.50213623046875
    3. '4' → logprob: -7.75213623046875
    4. '2' → logprob: -9.00213623046875
    5. ' ' → logprob: -10.25213623046875
    6. ')' → logprob: -10.62713623046875
    7. ')+' → logprob: -11.75213623046875
    8. '```' → logprob: -12.12713623046875
    9. ' +' → logprob: -12.25213623046875
    10. '   ' → logprob: -14.00213623046875

Token 621: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000588417868129909
    2. '):' → logprob: -8.375588417053223
    3. '   ' → logprob: -9.000588417053223
    4. ')
' → logprob: -9.125588417053223
    5. '       ' → logprob: -10.250588417053223
    6. '```' → logprob: -10.250588417053223
    7. '):
' → logprob: -10.875588417053223
    8. ' )' → logprob: -11.500588417053223
    9. 'def' → logprob: -12.125588417053223
    10. '
' → logprob: -13.250588417053223

Token 622: '       ' (ID: 309)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.012613137252628803
    2. '       ' → logprob: -4.512613296508789
    3. '   ' → logprob: -7.387613296508789
    4. '```' → logprob: -7.887613296508789
    5. '
' → logprob: -8.012613296508789
    6. ' def' → logprob: -9.012613296508789
    7. '        
' → logprob: -9.887613296508789
    8. '(' → logprob: -11.012613296508789
    9. '    
' → logprob: -11.762613296508789
    10. '  
' → logprob: -11.887613296508789

Token 623: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0022837184369564056
    2. '   ' → logprob: -6.752283573150635
    3. '       ' → logprob: -6.877283573150635
    4. ' def' → logprob: -10.127284049987793
    5. '
' → logprob: -10.252284049987793
    6. '```' → logprob: -13.502284049987793
    7. '    
' → logprob: -13.627284049987793
    8. '        
' → logprob: -13.627284049987793
    9. '	def' → logprob: -14.002284049987793
    10. '           ' → logprob: -14.127284049987793

Token 624: ' size' (ID: 2349)
  Prédit: 'rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rect' → logprob: -0.05135045945644379
    2. 'area' → logprob: -3.1763503551483154
    3. 'rectangle' → logprob: -5.4263505935668945
    4. 'size' → logprob: -5.9263505935668945
    5. ' rect' → logprob: -6.9263505935668945
    6. ' area' → logprob: -8.426350593566895
    7. ' rectangle' → logprob: -10.676350593566895
    8. 'get' → logprob: -11.676350593566895
    9. ' size' → logprob: -11.801350593566895
    10. 'count' → logprob: -12.551350593566895

Token 625: '(rect' (ID: 68123)
  Prédit: '(rect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rect' → logprob: -0.011146031320095062
    2. '(' → logprob: -4.511146068572998
    3. '(x' → logprob: -9.88614559173584
    4. '_rect' → logprob: -10.63614559173584
    5. ' (' → logprob: -11.26114559173584
    6. 'rect' → logprob: -12.38614559173584
    7. '(
' → logprob: -14.01114559173584
    8. '(Rect' → logprob: -14.01114559173584
    9. '(rest' → logprob: -15.01114559173584
    10. '=' → logprob: -15.01114559173584

Token 626: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3513721823692322
    2. '):' → logprob: -1.226372241973877
    3. ',' → logprob: -6.101372241973877
    4. '   ' → logprob: -8.351371765136719
    5. '):
' → logprob: -8.726371765136719
    6. ')' → logprob: -9.226371765136719
    7. '(x' → logprob: -9.601371765136719
    8. '(rect' → logprob: -10.351371765136719
    9. '):

' → logprob: -10.851371765136719
    10. ' ):' → logprob: -10.976371765136719

Token 627: '           ' (ID: 352)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.6589168906211853
    2. '(' → logprob: -0.7839168906211853
    3. '(rect' → logprob: -3.90891695022583
    4. ' (' → logprob: -6.03391695022583
    5. '   ' → logprob: -6.40891695022583
    6. '(
' → logprob: -6.90891695022583
    7. 'return' → logprob: -8.158916473388672
    8. ' return' → logprob: -8.908916473388672
    9. '       ' → logprob: -9.158916473388672
    10. 'rect' → logprob: -9.533916473388672

Token 628: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.014746640808880329
    2. '(x' → logprob: -4.76474666595459
    3. 'return' → logprob: -6.01474666595459
    4. '   ' → logprob: -6.26474666595459
    5. ' x' → logprob: -6.63974666595459
    6. '       ' → logprob: -7.88974666595459
    7. ' return' → logprob: -9.88974666595459
    8. '(' → logprob: -11.01474666595459
    9. '	x' → logprob: -11.76474666595459
    10. ' ' → logprob: -12.76474666595459

Token 629: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002079716883599758
    2. '2' → logprob: -6.877079486846924
    3. '_' → logprob: -8.127079963684082
    4. '+' → logprob: -8.502079963684082
    5. '[' → logprob: -8.502079963684082
    6. ',' → logprob: -9.252079963684082
    7. '```' → logprob: -9.502079963684082
    8. '<|end|>' → logprob: -9.627079963684082
    9. '#' → logprob: -11.002079963684082
    10. '<|end|>' → logprob: -11.002079963684082

Token 630: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.21455319225788116
    2. ',x' → logprob: -1.7145532369613647
    3. ' ,' → logprob: -5.089553356170654
    4. ',
' → logprob: -6.089553356170654
    5. '+' → logprob: -6.714553356170654
    6. ',y' → logprob: -7.214553356170654
    7. ' +' → logprob: -7.464553356170654
    8. '<|end|>' → logprob: -7.589553356170654
    9. '   ' → logprob: -7.964553356170654
    10. '1' → logprob: -8.089552879333496

Token 631: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0012197628384456038
    2. ',' → logprob: -6.751219749450684
    3. '```' → logprob: -10.751219749450684
    4. '<|end|>' → logprob: -11.001219749450684
    5. ',x' → logprob: -12.751219749450684
    6. '<|end|>' → logprob: -12.876219749450684
    7. '   ' → logprob: -13.501219749450684
    8. ' ,' → logprob: -13.876219749450684
    9. ' ' → logprob: -14.126219749450684
    10. '[' → logprob: -14.376219749450684

Token 632: ',x' (ID: 29748)
  Prédit: ',x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',x' → logprob: -0.4742017984390259
    2. ',' → logprob: -0.9742017984390259
    3. ' ,' → logprob: -9.974202156066895
    4. ',
' → logprob: -10.224202156066895
    5. '   ' → logprob: -11.224202156066895
    6. ',y' → logprob: -11.349202156066895
    7. ',int' → logprob: -11.849202156066895
    8. 'x' → logprob: -12.974202156066895
    9. '<|end|>' → logprob: -13.349202156066895
    10. '       ' → logprob: -14.349202156066895

Token 633: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0022825265768915415
    2. '2' → logprob: -6.252282619476318
    3. ',' → logprob: -8.75228214263916
    4. '```' → logprob: -9.12728214263916
    5. '<|end|>' → logprob: -10.00228214263916
    6. ',x' → logprob: -11.00228214263916
    7. '   ' → logprob: -11.62728214263916
    8. '<|end|>' → logprob: -12.50228214263916
    9. ',y' → logprob: -13.12728214263916
    10. '[' → logprob: -13.12728214263916

Token 634: ',y' (ID: 16103)
  Prédit: ',x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',x' → logprob: -0.4711684584617615
    2. ',y' → logprob: -1.4711685180664062
    3. '+' → logprob: -1.9711685180664062
    4. ',' → logprob: -5.096168518066406
    5. '+x' → logprob: -8.096168518066406
    6. ' +' → logprob: -8.596168518066406
    7. '<|end|>' → logprob: -9.721168518066406
    8. '1' → logprob: -10.471168518066406
    9. '+y' → logprob: -11.596168518066406
    10. 'x' → logprob: -11.721168518066406

Token 635: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.006737984716892242
    2. '1' → logprob: -5.006738185882568
    3. '```' → logprob: -11.13173770904541
    4. '   ' → logprob: -12.75673770904541
    5. ' ' → logprob: -14.00673770904541
    6. 'y' → logprob: -14.13173770904541
    7. '<|end|>' → logprob: -14.50673770904541
    8. '4' → logprob: -14.63173770904541
    9. '₂' → logprob: -14.88173770904541
    10. '_' → logprob: -15.13173770904541

Token 636: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.010920253582298756
    2. ' =' → logprob: -4.63592004776001
    3. ':' → logprob: -6.88592004776001
    4. '   ' → logprob: -9.885920524597168
    5. ')' → logprob: -10.010920524597168
    6. '):' → logprob: -10.385920524597168
    7. ':return' → logprob: -12.885920524597168
    8. ' ' → logprob: -13.010920524597168
    9. 'return' → logprob: -13.135920524597168
    10. ')=' → logprob: -13.385920524597168

Token 637: ' rect' (ID: 13107)
  Prédit: 'rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rect' → logprob: -0.01815006136894226
    2. ' rect' → logprob: -4.0181498527526855
    3. '(rect' → logprob: -16.393150329589844
    4. '	rect' → logprob: -16.893150329589844
    5. 'rest' → logprob: -18.143150329589844
    6. '_rect' → logprob: -18.768150329589844
    7. '.rect' → logprob: -19.143150329589844
    8. ' ' → logprob: -19.393150329589844
    9. 'Rect' → logprob: -20.393150329589844
    10. '   ' → logprob: -20.643150329589844

Token 638: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6815999746322632
    2. '   ' → logprob: -0.9315999746322632
    3. '       ' → logprob: -3.3066000938415527
    4. '
' → logprob: -4.306600093841553
    5. ' return' → logprob: -4.681600093841553
    6. 'return' → logprob: -4.806600093841553
    7. ':' → logprob: -4.931600093841553
    8. ':
' → logprob: -5.056600093841553
    9. '               ' → logprob: -5.181600093841553
    10. '<|end|>' → logprob: -5.806600093841553

Token 639: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.061178240925073624
    2. '   ' → logprob: -3.186178207397461
    3. 'return' → logprob: -5.061178207397461
    4. ' return' → logprob: -5.311178207397461
    5. '       ' → logprob: -5.686178207397461
    6. '
' → logprob: -5.936178207397461
    7. '	return' → logprob: -7.686178207397461
    8. '               ' → logprob: -9.186178207397461
    9. '	       ' → logprob: -9.936178207397461
    10. ':return' → logprob: -10.936178207397461

Token 640: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.07977446913719177
    2. '   ' → logprob: -2.5797743797302246
    3. ' return' → logprob: -7.329774379730225
    4. '           ' → logprob: -8.579774856567383
    5. '       ' → logprob: -10.329774856567383
    6. '	return' → logprob: -11.829774856567383
    7. '   ' → logprob: -14.579774856567383
    8. ' ' → logprob: -15.704774856567383
    9. '```' → logprob: -16.454774856567383
    10. '{return' → logprob: -17.204774856567383

Token 641: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.5759592652320862
    2. ' (' → logprob: -0.8259592652320862
    3. '   ' → logprob: -10.950959205627441
    4. '(' → logprob: -13.825959205627441
    5. ' ' → logprob: -14.075959205627441
    6. 'x' → logprob: -15.075959205627441
    7. ' x' → logprob: -16.450960159301758
    8. '(abs' → logprob: -16.450960159301758
    9. '  ' → logprob: -16.950960159301758
    10. '(y' → logprob: -17.450960159301758

Token 642: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00011045700375689194
    2. '(x' → logprob: -9.500110626220703
    3. ' x' → logprob: -10.250110626220703
    4. '   ' → logprob: -16.625110626220703
    5. ')x' → logprob: -17.250110626220703
    6. '	x' → logprob: -17.375110626220703
    7. ' (' → logprob: -17.375110626220703
    8. ')' → logprob: -19.750110626220703
    9. '{x' → logprob: -20.500110626220703
    10. '
' → logprob: -20.625110626220703

Token 643: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.816093228830141e-06
    2. '[' → logprob: -13.37500286102295
    3. '```' → logprob: -14.00000286102295
    4. '₂' → logprob: -16.625001907348633
    5. '۲' → logprob: -16.937501907348633
    6. '
' → logprob: -17.000001907348633
    7. ' ' → logprob: -17.562501907348633
    8. '２' → logprob: -18.187501907348633
    9. '1' → logprob: -18.375001907348633
    10. ')' → logprob: -18.500001907348633

Token 644: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3715417683124542
    2. '-' → logprob: -1.3715417385101318
    3. '-x' → logprob: -2.871541738510132
    4. '-xl' → logprob: -14.246541976928711
    5. '-token' → logprob: -14.746541976928711
    6. '-
' → logprob: -14.996541976928711
    7. '−' → logprob: -15.496541976928711
    8. 'x' → logprob: -15.621541976928711
    9. '<|end|>' → logprob: -15.996541976928711
    10. '```' → logprob: -16.24654197692871

Token 645: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0007099286303855479
    2. ' x' → logprob: -7.2507100105285645
    3. '(x' → logprob: -19.000709533691406
    4. ')x' → logprob: -19.000709533691406
    5. '	x' → logprob: -19.875709533691406
    6. '<|end|>' → logprob: -20.875709533691406
    7. '{x' → logprob: -21.000709533691406
    8. '"x' → logprob: -21.500709533691406
    9. '_x' → logprob: -21.625709533691406
    10. ' ' → logprob: -21.625709533691406

Token 646: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.625001907348633
    3. 'x' → logprob: -14.875001907348633
    4. '+' → logprob: -15.375001907348633
    5. '```' → logprob: -15.750001907348633
    6. '_' → logprob: -16.500001907348633
    7. '[' → logprob: -18.125001907348633
    8. ' +' → logprob: -18.875001907348633
    9. '   ' → logprob: -19.000001907348633
    10. ' x' → logprob: -19.125001907348633

Token 647: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03804171830415726
    2. ' +' → logprob: -3.288041830062866
    3. '+
' → logprob: -15.913042068481445
    4. ')+' → logprob: -16.413042068481445
    5. ' +
' → logprob: -17.038042068481445
    6. '[' → logprob: -17.663042068481445
    7. ')' → logprob: -17.663042068481445
    8. '＋' → logprob: -17.788042068481445
    9. '+x' → logprob: -18.413042068481445
    10. '1' → logprob: -18.538042068481445

Token 648: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '```' → logprob: -17.375009536743164
    4. '   ' → logprob: -19.875009536743164
    5. ')' → logprob: -20.250009536743164
    6. '`' → logprob: -22.250009536743164
    7. 'int' → logprob: -23.375009536743164
    8. '１' → logprob: -23.375009536743164
    9. '       ' → logprob: -23.375009536743164
    10. '۱' → logprob: -23.625009536743164

Token 649: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007180036976933479
    2. ')*(' → logprob: -5.132180213928223
    3. ' )' → logprob: -7.382180213928223
    4. ')*' → logprob: -7.382180213928223
    5. '*' → logprob: -12.757180213928223
    6. ' *' → logprob: -14.257180213928223
    7. '*)' → logprob: -14.632180213928223
    8. '*(' → logprob: -14.882180213928223
    9. ' ' → logprob: -15.132180213928223
    10. ')
' → logprob: -15.257180213928223

Token 650: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5638628602027893
    2. ' *' → logprob: -1.1888628005981445
    3. '*(' → logprob: -2.5638628005981445
    4. '<|end|>' → logprob: -3.9388628005981445
    5. ')*(' → logprob: -4.0638628005981445
    6. ')' → logprob: -4.6888628005981445
    7. ')*' → logprob: -5.6888628005981445
    8. '```' → logprob: -10.063862800598145
    9. '*)' → logprob: -10.188862800598145
    10. '       ' → logprob: -11.563862800598145

Token 651: ' (' (ID: 350)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.014258465729653835
    2. ' (' → logprob: -4.26425838470459
    3. '(' → logprob: -9.26425838470459
    4. ' ' → logprob: -16.889259338378906
    5. '   ' → logprob: -17.139259338378906
    6. ' y' → logprob: -17.514259338378906
    7. '(Y' → logprob: -17.764259338378906
    8. 'y' → logprob: -18.389259338378906
    9. '((' → logprob: -19.014259338378906
    10. '```' → logprob: -19.264259338378906

Token 652: 'y' (ID: 88)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.002992440015077591
    2. 'y' → logprob: -5.877992630004883
    3. '(' → logprob: -9.252992630004883
    4. ' (' → logprob: -9.377992630004883
    5. '   ' → logprob: -13.002992630004883
    6. '((' → logprob: -14.127992630004883
    7. ' y' → logprob: -14.377992630004883
    8. ')' → logprob: -14.502992630004883
    9. '[y' → logprob: -14.752992630004883
    10. '(
' → logprob: -14.877992630004883

Token 653: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.610702363715973e-06
    2. '1' → logprob: -12.375009536743164
    3. ' -' → logprob: -13.125009536743164
    4. '-' → logprob: -13.750009536743164
    5. 'y' → logprob: -14.125009536743164
    6. '```' → logprob: -14.125009536743164
    7. ' ' → logprob: -15.000009536743164
    8. '₂' → logprob: -15.750009536743164
    9. '``' → logprob: -16.125009536743164
    10. '[' → logprob: -17.000009536743164

Token 654: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3896404206752777
    2. ' -' → logprob: -1.1396404504776
    3. '-y' → logprob: -6.0146403312683105
    4. '1' → logprob: -8.139640808105469
    5. 'y' → logprob: -10.764640808105469
    6. '2' → logprob: -12.889640808105469
    7. '[' → logprob: -13.764640808105469
    8. '-Y' → logprob: -13.889640808105469
    9. '   ' → logprob: -14.014640808105469
    10. ' y' → logprob: -14.139640808105469

Token 655: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0022248411551117897
    2. ' y' → logprob: -6.252224922180176
    3. '(y' → logprob: -8.127224922180176
    4. ')y' → logprob: -15.127224922180176
    5. ' (' → logprob: -16.37722396850586
    6. '1' → logprob: -16.37722396850586
    7. ''y' → logprob: -16.50222396850586
    8. ')' → logprob: -16.62722396850586
    9. '	y' → logprob: -16.75222396850586
    10. '(' → logprob: -16.75222396850586

Token 656: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7968066206085496e-05
    2. 'y' → logprob: -10.500027656555176
    3. '-' → logprob: -15.625027656555176
    4. ' ' → logprob: -16.375028610229492
    5. '```' → logprob: -16.500028610229492
    6. ' y' → logprob: -17.125028610229492
    7. ' -' → logprob: -17.250028610229492
    8. '   ' → logprob: -17.500028610229492
    9. '``' → logprob: -18.125028610229492
    10. 'rect' → logprob: -18.375028610229492

Token 657: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1602364182472229
    2. ' +' → logprob: -1.9102363586425781
    3. '1' → logprob: -11.660236358642578
    4. ')' → logprob: -13.535236358642578
    5. ' -' → logprob: -14.285236358642578
    6. ')+' → logprob: -14.535236358642578
    7. '[' → logprob: -15.160236358642578
    8. '-' → logprob: -15.160236358642578
    9. '```' → logprob: -16.160236358642578
    10. '+
' → logprob: -16.285236358642578

Token 658: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '4' → logprob: -17.625003814697266
    4. ')' → logprob: -17.625003814697266
    5. '```' → logprob: -18.125003814697266
    6. '   ' → logprob: -18.375003814697266
    7. '(' → logprob: -20.625003814697266
    8. '
' → logprob: -20.875003814697266
    9. '``' → logprob: -21.375003814697266
    10. '2' → logprob: -21.875003814697266

Token 659: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.60414821645827e-06
    2. '<|end|>' → logprob: -12.750004768371582
    3. ' )' → logprob: -14.375004768371582
    4. ')
' → logprob: -14.500004768371582
    5. '}' → logprob: -15.750004768371582
    6. ')return' → logprob: -16.000003814697266
    7. '<|end|>' → logprob: -16.625003814697266
    8. '   ' → logprob: -16.875003814697266
    9. ')#' → logprob: -17.125003814697266
    10. '),' → logprob: -17.250003814697266

Token 660: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.061037734150886536
    2. '
' → logprob: -3.18603777885437
    3. '<|end|>' → logprob: -4.561037540435791
    4. '```' → logprob: -5.311037540435791
    5. '        
' → logprob: -6.436037540435791
    6. 'for' → logprob: -8.31103801727295
    7. '<|end|>' → logprob: -8.68603801727295
    8. ' for' → logprob: -8.68603801727295
    9. '   ' → logprob: -9.68603801727295
    10. '  
' → logprob: -10.18603801727295

Token 661: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.556415855884552
    2. '#' (adapté à ' #') → logprob: -1.5564157962799072
    3. '       ' → logprob: -1.5564157962799072
    4. '```' → logprob: -5.431416034698486
    5. ' for' → logprob: -8.556415557861328
    6. 'from' → logprob: -9.306415557861328
    7. '   ' → logprob: -9.431415557861328
    8. 'def' → logprob: -9.806415557861328
    9. 'max' → logprob: -10.306415557861328
    10. 'For' → logprob: -10.431415557861328

Token 662: ' Gén' (ID: 71828)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.002593969227746129
    2. '#' → logprob: -6.627593994140625
    3. '       ' → logprob: -6.752593994140625
    4. 'min' → logprob: -10.377593994140625
    5. 'max' → logprob: -11.002593994140625
    6. 'from' → logprob: -11.127593994140625
    7. 'def' → logprob: -11.377593994140625
    8. ' for' → logprob: -11.752593994140625
    9. 'possible' → logprob: -12.002593994140625
    10. 'area' → logprob: -12.752593994140625

Token 663: 'érer' (ID: 29097)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.014959689229726791
    2. 'érer' → logprob: -4.389959812164307
    3. 'def' → logprob: -6.389959812164307
    4. 'for' → logprob: -7.639959812164307
    5. 'ér' → logprob: -9.389959335327148
    6. '#' → logprob: -9.389959335327148
    7. 'erar' → logprob: -9.889959335327148
    8. 'erer' → logprob: -11.139959335327148
    9. 'rate' → logprob: -11.639959335327148
    10. 'enerate' → logprob: -11.889959335327148

Token 664: ' tous' (ID: 10688)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3405316472053528
    2. ' for' → logprob: -1.590531587600708
    3. 'rect' → logprob: -3.465531587600708
    4. 'x' → logprob: -3.590531587600708
    5. '       ' → logprob: -4.340531826019287
    6. ' x' → logprob: -5.590531826019287
    7. ' rectangles' → logprob: -5.965531826019287
    8. 'possible' → logprob: -6.465531826019287
    9. 'all' → logprob: -6.840531826019287
    10. ' all' → logprob: -6.840531826019287

Token 665: ' les' (ID: 1341)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -1.2557203769683838
    2. ' possible' → logprob: -1.8807203769683838
    3. ' (' → logprob: -1.8807203769683838
    4. '       ' → logprob: -2.130720376968384
    5. '(x' → logprob: -2.880720376968384
    6. 'possible' → logprob: -2.880720376968384
    7. ' rectangles' → logprob: -3.130720376968384
    8. 'rect' → logprob: -3.755720376968384
    9. ' ' → logprob: -4.130720138549805
    10. '   ' → logprob: -4.255720138549805

Token 666: ' rectangles' (ID: 164265)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4990435242652893
    2. 'b' → logprob: -1.2490434646606445
    3. 'rect' → logprob: -2.4990434646606445
    4. 'for' → logprob: -4.3740434646606445
    5. 'possible' → logprob: -5.4990434646606445
    6. 'buyers' → logprob: -5.6240434646606445
    7. 'X' → logprob: -7.4990434646606445
    8. 'y' → logprob: -7.6240434646606445
    9. 'buyer' → logprob: -7.7490434646606445
    10. '#' → logprob: -7.8740434646606445

Token 667: ' possibles' (ID: 97753)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8889920115470886
    2. 'for' → logprob: -0.8889920115470886
    3. '       ' → logprob: -1.7639920711517334
    4. ':' → logprob: -6.763991832733154
    5. ' b' → logprob: -7.388991832733154
    6. ' (' → logprob: -7.638991832733154
    7. ':
' → logprob: -7.888991832733154
    8. ' possible' → logprob: -8.013992309570312
    9. ' with' → logprob: -8.013992309570312
    10. '           ' → logprob: -8.138992309570312

Token 668: ' dans' (ID: 2671)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3173118233680725
    2. 'for' → logprob: -1.4423117637634277
    3. ' for' → logprob: -3.4423117637634277
    4. '   ' → logprob: -6.567311763763428
    5. ':
' → logprob: -7.192311763763428
    6. '
' → logprob: -8.192312240600586
    7. '```' → logprob: -8.192312240600586
    8. '           ' → logprob: -8.817312240600586
    9. ':' → logprob: -8.817312240600586
    10. ',' → logprob: -8.942312240600586

Token 669: ' la' (ID: 557)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0662338137626648
    2. ' range' → logprob: -3.0662338733673096
    3. 'for' → logprob: -4.5662336349487305
    4. 'X' → logprob: -5.9412336349487305
    5. 'rect' → logprob: -6.4412336349487305
    6. 'def' → logprob: -7.1912336349487305
    7. ' for' → logprob: -7.8162336349487305
    8. '   ' → logprob: -7.8162336349487305
    9. '```' → logprob: -7.8162336349487305
    10. 's' → logprob: -8.06623363494873

Token 670: ' grille' (ID: 99153)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1788690686225891
    2. ' range' → logprob: -2.0538690090179443
    3. 'X' → logprob: -4.178869247436523
    4. 'for' → logprob: -4.303869247436523
    5. 'ranges' → logprob: -6.428869247436523
    6. ' for' → logprob: -7.428869247436523
    7. '   ' → logprob: -7.428869247436523
    8. 'pl' → logprob: -7.803869247436523
    9. '```' → logprob: -7.803869247436523
    10. 's' → logprob: -7.928869247436523

Token 671: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03860503062605858
    2. ' for' → logprob: -3.663604974746704
    3. 'for' → logprob: -4.413605213165283
    4. '```' → logprob: -9.663604736328125
    5. '   ' → logprob: -10.913604736328125
    6. '
' → logprob: -11.038604736328125
    7. '           ' → logprob: -11.413604736328125
    8. ',' → logprob: -12.538604736328125
    9. '	for' → logprob: -13.913604736328125
    10. '``' → logprob: -14.163604736328125

Token 672: ' puis' (ID: 18766)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.45615699887275696
    2. '       ' → logprob: -1.2061569690704346
    3. ' for' → logprob: -2.7061569690704346
    4. '   ' → logprob: -9.831156730651855
    5. '           ' → logprob: -10.456156730651855
    6. '
' → logprob: -10.581156730651855
    7. '               ' → logprob: -11.706156730651855
    8. 'x' → logprob: -12.331156730651855
    9. '                   ' → logprob: -12.331156730651855
    10. '```' → logprob: -12.331156730651855

Token 673: ' filtr' (ID: 71370)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.007199443876743317
    2. ' for' → logprob: -5.257199287414551
    3. 'pour' → logprob: -6.507199287414551
    4. '       ' → logprob: -9.00719928741455
    5. '#' → logprob: -9.00719928741455
    6. ' pour' → logprob: -9.25719928741455
    7. '```' → logprob: -9.88219928741455
    8. '
' → logprob: -10.75719928741455
    9. '           ' → logprob: -11.00719928741455
    10. 'import' → logprob: -11.13219928741455

Token 674: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.00015681622608099133
    2. 'rer' → logprob: -10.00015640258789
    3. 'és' → logprob: -10.25015640258789
    4. 'ant' → logprob: -10.37515640258789
    5. 'ter' → logprob: -11.62515640258789
    6. '   ' → logprob: -11.75015640258789
    7. '```' → logprob: -11.75015640258789
    8. '       ' → logprob: -12.25015640258789
    9. 'érer' → logprob: -12.37515640258789
    10. 'trer' → logprob: -13.50015640258789

Token 675: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19789962470531464
    2. 'for' → logprob: -1.947899580001831
    3. ' for' → logprob: -3.322899580001831
    4. '
' → logprob: -8.32289981842041
    5. 'pour' → logprob: -8.69789981842041
    6. '```' → logprob: -8.94789981842041
    7. ' pour' → logprob: -9.19789981842041
    8. '           ' → logprob: -9.44789981842041
    9. ',' → logprob: -9.44789981842041
    10. '   ' → logprob: -10.57289981842041

Token 676: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6813912391662598
    2. '       ' → logprob: -0.9313912391662598
    3. ' for' → logprob: -2.3063912391662598
    4. '   ' → logprob: -8.431390762329102
    5. '```' → logprob: -8.431390762329102
    6. '
' → logprob: -11.431390762329102
    7. '           ' → logprob: -12.181390762329102
    8. '        
' → logprob: -13.181390762329102
    9. '``' → logprob: -13.181390762329102
    10. ',' → logprob: -13.181390762329102

Token 677: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3971465826034546
    2. ' for' → logprob: -1.3971465826034546
    3. '       ' → logprob: -2.522146701812744
    4. '```' → logprob: -9.397146224975586
    5. 'rect' → logprob: -9.647146224975586
    6. 'possible' → logprob: -11.897146224975586
    7. '   ' → logprob: -12.397146224975586
    8. '``' → logprob: -12.772146224975586
    9. ' rectangles' → logprob: -12.897146224975586
    10. 'c' → logprob: -13.147146224975586

Token 678: ' Pour' (ID: 13931)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.001891745370812714
    2. '       ' → logprob: -6.626891613006592
    3. ' for' → logprob: -7.501891613006592
    4. '```' → logprob: -12.62689208984375
    5. 'possible' → logprob: -13.12689208984375
    6. '#' → logprob: -13.25189208984375
    7. '
' → logprob: -13.37689208984375
    8. '   ' → logprob: -13.62689208984375
    9. 'rect' → logprob: -13.87689208984375
    10. 'from' → logprob: -14.37689208984375

Token 679: ' chaque' (ID: 21194)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.0062100887298584
    2. 'y' → logprob: -1.0062100887298584
    3. 'x' → logprob: -1.3812100887298584
    4. 'h' → logprob: -5.0062103271484375
    5. ' y' → logprob: -5.5062103271484375
    6. 'height' → logprob: -6.1312103271484375
    7. ' b' → logprob: -6.5062103271484375
    8. ' x' → logprob: -6.8812103271484375
    9. 'w' → logprob: -7.2562103271484375
    10. 'width' → logprob: -7.3812103271484375

Token 680: ' rectangle' (ID: 45808)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.03364858031272888
    2. ' b' → logprob: -3.5336484909057617
    3. 'y' → logprob: -6.158648490905762
    4. 'x' → logprob: -6.658648490905762
    5. ' y' → logprob: -8.158648490905762
    6. 'buyer' → logprob: -9.408648490905762
    7. ' x' → logprob: -9.658648490905762
    8. ' buyer' → logprob: -10.408648490905762
    9. '   ' → logprob: -11.908648490905762
    10. '```' → logprob: -12.596148490905762

Token 681: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.26157134771347046
    2. ' for' → logprob: -1.5115714073181152
    3. 'x' → logprob: -5.136571407318115
    4. 'y' → logprob: -5.636571407318115
    5. ' y' → logprob: -9.886570930480957
    6. ' x' → logprob: -10.636570930480957
    7. '   ' → logprob: -10.761570930480957
    8. '```' → logprob: -10.761570930480957
    9. '       ' → logprob: -11.011570930480957
    10. 'from' → logprob: -11.636570930480957

Token 682: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2537461221218109
    2. 'y' → logprob: -1.5037461519241333
    3. ' y' → logprob: -7.003746032714844
    4. ' x' → logprob: -7.378746032714844
    5. '   ' → logprob: -9.128746032714844
    6. 'height' → logprob: -9.503746032714844
    7. 'width' → logprob: -10.628746032714844
    8. 'b' → logprob: -10.753746032714844
    9. 'h' → logprob: -11.253746032714844
    10. 'w' → logprob: -11.628746032714844

Token 683: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.612634362885728e-05
    2. ' in' → logprob: -10.375076293945312
    3. ')' → logprob: -11.125076293945312
    4. '0' → logprob: -11.625076293945312
    5. '=' → logprob: -11.750076293945312
    6. ',' → logprob: -12.625076293945312
    7. ' =' → logprob: -13.250076293945312
    8. ' ' → logprob: -13.250076293945312
    9. '   ' → logprob: -13.500076293945312
    10. '       ' → logprob: -13.500076293945312

Token 684: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5148957371711731
    2. ',x' → logprob: -1.7648956775665283
    3. ' in' → logprob: -2.0148956775665283
    4. ')' → logprob: -3.3898956775665283
    5. 'in' → logprob: -4.014895915985107
    6. 'for' → logprob: -4.139895915985107
    7. '=' → logprob: -4.389895915985107
    8. ',y' → logprob: -5.264895915985107
    9. ' ,' → logprob: -5.514895915985107
    10. ' for' → logprob: -6.139895915985107

Token 685: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005678010638803244
    2. ',' → logprob: -5.380678176879883
    3. ',y' → logprob: -7.880678176879883
    4. ')' → logprob: -8.380678176879883
    5. ',x' → logprob: -8.380678176879883
    6. ' in' → logprob: -9.630678176879883
    7. '=' → logprob: -9.880678176879883
    8. '       ' → logprob: -10.755678176879883
    9. ' ,' → logprob: -10.880678176879883
    10. '   ' → logprob: -11.005678176879883

Token 686: ')' (ID: 8)
  Prédit: ',x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',x' → logprob: -0.134329691529274
    2. ',' → logprob: -2.1343297958374023
    3. ',y' → logprob: -5.259329795837402
    4. ' ,' → logprob: -7.384329795837402
    5. ')' → logprob: -8.134329795837402
    6. 'for' → logprob: -8.134329795837402
    7. '       ' → logprob: -8.509329795837402
    8. '   ' → logprob: -9.009329795837402
    9. ',X' → logprob: -9.134329795837402
    10. ' for' → logprob: -9.134329795837402

Token 687: ' ->' (ID: 2747)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02311083674430847
    2. ' for' → logprob: -4.398110866546631
    3. 'for' → logprob: -5.023110866546631
    4. 'in' → logprob: -5.773110866546631
    5. ',' → logprob: -7.773110866546631
    6. '       ' → logprob: -8.773110389709473
    7. '   ' → logprob: -8.898110389709473
    8. ':' → logprob: -9.523110389709473
    9. ':
' → logprob: -11.148110389709473
    10. '           ' → logprob: -11.648110389709473

Token 688: ' (' (ID: 350)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.03871696814894676
    2. ' x' → logprob: -3.788717031478882
    3. '(x' → logprob: -4.413716793060303
    4. ' (' → logprob: -6.788716793060303
    5. 'for' → logprob: -7.288716793060303
    6. ' for' → logprob: -7.788716793060303
    7. ',' → logprob: -8.413717269897461
    8. ',x' → logprob: -8.413717269897461
    9. 'X' → logprob: -8.663717269897461
    10. '
' → logprob: -9.163717269897461

Token 689: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.35378497838974
    2. 'X' → logprob: -1.2287850379943848
    3. ' x' → logprob: -5.728785037994385
    4. ' X' → logprob: -6.228785037994385
    5. '0' → logprob: -9.478784561157227
    6. ',' → logprob: -11.853784561157227
    7. '   ' → logprob: -11.978784561157227
    8. ' ' → logprob: -12.978784561157227
    9. '       ' → logprob: -13.353784561157227
    10. ',X' → logprob: -13.353784561157227

Token 690: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.002479700604453683
    2. '1' → logprob: -6.002479553222656
    3. '₂' → logprob: -14.002479553222656
    4. '```' → logprob: -14.127479553222656
    5. '

' → logprob: -14.502479553222656
    6. '
' → logprob: -14.627479553222656
    7. ',' → logprob: -14.877479553222656
    8. '۲' → logprob: -16.002479553222656
    9. '0' → logprob: -16.189979553222656
    10. 'max' → logprob: -16.502479553222656

Token 691: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.0009904148755595088
    2. ',' → logprob: -7.750990390777588
    3. ',x' → logprob: -7.750990390777588
    4. ' ,' → logprob: -9.000990867614746
    5. '1' → logprob: -12.875990867614746
    6. ',Y' → logprob: -13.625990867614746
    7. 'y' → logprob: -14.625990867614746
    8. ',j' → logprob: -15.000990867614746
    9. '=' → logprob: -15.750990867614746
    10. '       ' → logprob: -16.00098991394043

Token 692: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011724866926670074
    2. '2' → logprob: -6.7511725425720215
    3. ',' → logprob: -13.501172065734863
    4. ' ' → logprob: -14.501172065734863
    5. ',y' → logprob: -15.126172065734863
    6. '   ' → logprob: -16.25117301940918
    7. 'y' → logprob: -16.87617301940918
    8. ' y' → logprob: -18.12617301940918
    9. ')' → logprob: -18.37617301940918
    10. ',x' → logprob: -18.87617301940918

Token 693: ')
' (ID: 446)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5008394122123718
    2. '):' → logprob: -1.6258394718170166
    3. ')' → logprob: -1.8758394718170166
    4. '           ' → logprob: -4.0008392333984375
    5. ',' → logprob: -5.0008392333984375
    6. '       ' → logprob: -5.5008392333984375
    7. ')
' → logprob: -5.8758392333984375
    8. '   ' → logprob: -6.2508392333984375
    9. ' for' → logprob: -6.2508392333984375
    10. ',x' → logprob: -6.3758392333984375

Token 694: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002640937454998493
    2. ' for' → logprob: -6.002640724182129
    3. 'for' → logprob: -9.627640724182129
    4. '   ' → logprob: -10.252640724182129
    5. '           ' → logprob: -10.252640724182129
    6. '```' → logprob: -11.877640724182129
    7. ',' → logprob: -12.002640724182129
    8. '        
' → logprob: -12.127640724182129
    9. ' ' → logprob: -13.377640724182129
    10. '               ' → logprob: -13.752640724182129

Token 695: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004971881862729788
    2. ' for' → logprob: -5.379971981048584
    3. 'for' → logprob: -8.379971504211426
    4. '   ' → logprob: -9.504971504211426
    5. '```' → logprob: -10.254971504211426
    6. '           ' → logprob: -11.754971504211426
    7. '        
' → logprob: -14.129971504211426
    8. '	for' → logprob: -14.254971504211426
    9. '
' → logprob: -14.254971504211426
    10. ' ' → logprob: -14.629971504211426

Token 696: ' Si' (ID: 7832)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7643275260925293
    2. ' for' → logprob: -1.0143275260925293
    3. '       ' → logprob: -1.7643275260925293
    4. '   ' → logprob: -8.264328002929688
    5. '```' → logprob: -9.389328002929688
    6. '
' → logprob: -9.889328002929688
    7. '           ' → logprob: -12.889328002929688
    8. 'from' → logprob: -12.889328002929688
    9. ' ' → logprob: -13.264328002929688
    10. '	for' → logprob: -13.389328002929688

Token 697: ' sa' (ID: 880)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.5879946351051331
    2. ' size' → logprob: -0.8379946351051331
    3. '(size' → logprob: -4.962994575500488
    4. ' (' → logprob: -5.462994575500488
    5. ' x' → logprob: -8.712994575500488
    6. '(x' → logprob: -8.837994575500488
    7. ' ' → logprob: -8.962994575500488
    8. '(' → logprob: -9.462994575500488
    9. 'x' → logprob: -9.962994575500488
    10. 'X' → logprob: -10.587994575500488

Token 698: ' taille' (ID: 41644)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6663355231285095
    2. 'size' → logprob: -1.2913355827331543
    3. ' size' → logprob: -2.5413355827331543
    4. ' x' → logprob: -2.7913355827331543
    5. 'y' → logprob: -4.166335582733154
    6. '1' → logprob: -4.166335582733154
    7. 'width' → logprob: -4.791335582733154
    8. ' y' → logprob: -4.916335582733154
    9. ' width' → logprob: -5.541335582733154
    10. ' area' → logprob: -5.791335582733154

Token 699: ' correspond' (ID: 11095)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.07883217930793762
    2. ' <=' → logprob: -3.2038321495056152
    3. '==' → logprob: -3.5788321495056152
    4. ' >=' → logprob: -5.578832149505615
    5. ' in' → logprob: -6.953832149505615
    6. '<=' → logprob: -7.203832149505615
    7. '```' → logprob: -7.703832149505615
    8. ' !=' → logprob: -8.203832626342773
    9. '==(' → logprob: -8.703832626342773
    10. '>=' → logprob: -8.828832626342773

Token 700: ' à' (ID: 1221)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.47425219416618347
    2. '==' → logprob: -1.3492522239685059
    3. ' à' → logprob: -2.599252223968506
    4. ' to' → logprob: -4.474252223968506
    5. '           ' → logprob: -5.224252223968506
    6. '        ' → logprob: -5.349252223968506
    7. ' exactly' → logprob: -5.349252223968506
    8. 'to' → logprob: -5.474252223968506
    9. 'à' → logprob: -5.974252223968506
    10. '       ' → logprob: -6.724252223968506

Token 701: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.02978045865893364
    2. 'n' → logprob: -4.029780387878418
    3. 'buyer' → logprob: -5.279780387878418
    4. ' k' → logprob: -5.529780387878418
    5. ' buyer' → logprob: -7.029780387878418
    6. 'b' → logprob: -7.279780387878418
    7. ' n' → logprob: -7.404780387878418
    8. 'X' → logprob: -9.154780387878418
    9. '   ' → logprob: -10.279780387878418
    10. ' ' → logprob: -10.904780387878418

Token 702: ' pour' (ID: 1930)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2398117035627365
    2. '       ' → logprob: -2.364811658859253
    3. '           ' → logprob: -3.114811658859253
    4. ',' → logprob: -3.364811658859253
    5. ':
' → logprob: -4.114811897277832
    6. ' and' → logprob: -4.239811897277832
    7. 'for' → logprob: -5.989811897277832
    8. '               ' → logprob: -6.489811897277832
    9. ' for' → logprob: -6.489811897277832
    10. 'and' → logprob: -6.614811897277832

Token 703: ' l' (ID: 305)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.02342901937663555
    2. 'buyer' → logprob: -4.273428916931152
    3. 'l' → logprob: -5.398428916931152
    4. ' b' → logprob: -5.898428916931152
    5. ' buyer' → logprob: -7.523428916931152
    6. 'ach' → logprob: -8.273428916931152
    7. ' l' → logprob: -8.523428916931152
    8. 'un' → logprob: -8.773428916931152
    9. 'the' → logprob: -8.898428916931152
    10. 'le' → logprob: -9.023428916931152

Token 704: ''' (ID: 6)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.12799465656280518
    2. 'buyer' → logprob: -2.3779945373535156
    3. ' buyer' → logprob: -4.252994537353516
    4. ' b' → logprob: -4.877994537353516
    5. 'for' → logprob: -6.002994537353516
    6. 'a' → logprob: -7.002994537353516
    7. 'ach' → logprob: -7.502994537353516
    8. 'buyers' → logprob: -8.127994537353516
    9. 'each' → logprob: -8.377994537353516
    10. '```' → logprob: -8.877994537353516

Token 705: 'ache' (ID: 2285)
  Prédit: 'ache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ache' → logprob: -0.36254438757896423
    2. ' buyer' → logprob: -2.362544298171997
    3. 'buyer' → logprob: -2.487544298171997
    4. 'b' → logprob: -2.487544298171997
    5. ' ache' → logprob: -4.237544536590576
    6. ' b' → logprob: -4.612544536590576
    7. 'ach' → logprob: -4.862544536590576
    8. ''' → logprob: -5.487544536590576
    9. 'acheter' → logprob: -5.612544536590576
    10. 'achat' → logprob: -6.737544536590576

Token 706: 'teur' (ID: 45262)
  Prédit: 'teur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'teur' → logprob: -0.0020051265601068735
    2. '#' → logprob: -7.127005100250244
    3. 'te' → logprob: -7.877005100250244
    4. '\' → logprob: -8.627005577087402
    5. 'uteur' → logprob: -8.627005577087402
    6. 'ur' → logprob: -9.127005577087402
    7. 'teurs' → logprob: -10.002005577087402
    8. 'nte' → logprob: -10.127005577087402
    9. '{' → logprob: -10.377005577087402
    10. 'ure' → logprob: -10.377005577087402

Token 707: ' b' (ID: 287)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22856703400611877
    2. ':' → logprob: -2.478567123413086
    3. ',' → logprob: -2.728567123413086
    4. '           ' → logprob: -3.228567123413086
    5. '               ' → logprob: -5.228567123413086
    6. ' and' → logprob: -5.978567123413086
    7. '                   ' → logprob: -6.103567123413086
    8. '                       ' → logprob: -6.228567123413086
    9. ' for' → logprob: -6.478567123413086
    10. ':
' → logprob: -7.353567123413086

Token 708: ' et' (ID: 859)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4771812856197357
    2. '       ' → logprob: -1.227181315422058
    3. '           ' → logprob: -3.4771811962127686
    4. ',' → logprob: -3.7271811962127686
    5. ':
' → logprob: -3.7271811962127686
    6. '               ' → logprob: -6.352181434631348
    7. '                   ' → logprob: -6.477181434631348
    8. '                       ' → logprob: -6.477181434631348
    9. ' for' → logprob: -6.852181434631348
    10. 'for' → logprob: -7.352181434631348

Token 709: ' contient' (ID: 89067)
  Prédit: 'has'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'has' → logprob: -0.1435699313879013
    2. ' has' → logprob: -2.0185699462890625
    3. 'if' → logprob: -8.268569946289062
    4. 'x' → logprob: -8.643569946289062
    5. ' if' → logprob: -8.893569946289062
    6. ' x' → logprob: -9.268569946289062
    7. '(has' → logprob: -10.643569946289062
    8. 's' → logprob: -10.768569946289062
    9. '   ' → logprob: -10.893569946289062
    10. '
' → logprob: -11.018569946289062

Token 710: ' un' (ID: 537)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.26247718930244446
    2. ' au' → logprob: -2.387477159500122
    3. ' at' → logprob: -2.887477159500122
    4. 'au' → logprob: -3.262477159500122
    5. 'has' → logprob: -3.512477159500122
    6. 'un' → logprob: -5.012477397918701
    7. 'a' → logprob: -5.387477397918701
    8. ' has' → logprob: -6.887477397918701
    9. ' un' → logprob: -7.012477397918701
    10. ' a' → logprob: -7.387477397918701

Token 711: ' marque' (ID: 38644)
  Prédit: '_marker'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_marker' → logprob: -0.1302005648612976
    2. '_' → logprob: -2.3802006244659424
    3. 'marker' → logprob: -3.8802006244659424
    4. ' _' → logprob: -6.130200386047363
    5. ' marker' → logprob: -6.130200386047363
    6. ' marque' → logprob: -6.630200386047363
    7. '
' → logprob: -7.255200386047363
    8. '_mark' → logprob: -7.255200386047363
    9. ' marcador' → logprob: -7.505200386047363
    10. 'mar' → logprob: -8.880200386047363

Token 712: 'ur' (ID: 330)
  Prédit: 'ur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ur' → logprob: -0.020774278789758682
    2. 'r' → logprob: -3.8957743644714355
    3. 'ker' → logprob: -8.520773887634277
    4. '_r' → logprob: -12.145773887634277
    5. 'er' → logprob: -12.145773887634277
    6. '_' → logprob: -12.145773887634277
    7. '_marker' → logprob: -12.645773887634277
    8. 'u' → logprob: -12.770773887634277
    9. 'k' → logprob: -12.895773887634277
    10. 'x' → logprob: -13.520773887634277

Token 713: ' de' (ID: 334)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19661583006381989
    2. '           ' → logprob: -2.4466159343719482
    3. ',' → logprob: -3.4466159343719482
    4. '               ' → logprob: -3.8216159343719482
    5. ':
' → logprob: -3.9466159343719482
    6. '                   ' → logprob: -4.571615695953369
    7. ' for' → logprob: -6.071615695953369
    8. '                       ' → logprob: -6.446615695953369
    9. 'for' → logprob: -6.696615695953369
    10. '=' → logprob: -7.321615695953369

Token 714: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.06994044035673141
    2. ' b' → logprob: -2.6949403285980225
    3. 'l' → logprob: -13.819940567016602
    4. ' la' → logprob: -14.444940567016602
    5. 'le' → logprob: -14.694940567016602
    6. ' ' → logprob: -14.819940567016602
    7. ' l' → logprob: -15.194940567016602
    8. ')b' → logprob: -15.319940567016602
    9. 'la' → logprob: -15.569940567016602
    10. ' ' → logprob: -15.694940567016602

Token 715: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25521141290664673
    2. '           ' → logprob: -2.130211353302002
    3. ':
' → logprob: -2.755211353302002
    4. ',' → logprob: -4.130211353302002
    5. '                       ' → logprob: -4.630211353302002
    6. '               ' → logprob: -4.880211353302002
    7. '                   ' → logprob: -5.005211353302002
    8. '.' → logprob: -7.380211353302002
    9. '                           ' → logprob: -7.630211353302002
    10. ' for' → logprob: -7.880211353302002

Token 716: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00013762809976469725
    2. '           ' → logprob: -9.625137329101562
    3. ':' → logprob: -10.875137329101562
    4. ',' → logprob: -11.250137329101562
    5. ' for' → logprob: -11.375137329101562
    6. '               ' → logprob: -11.375137329101562
    7. '                       ' → logprob: -11.875137329101562
    8. '                   ' → logprob: -12.250137329101562
    9. 'for' → logprob: -13.750137329101562
    10. '        
' → logprob: -14.250137329101562

Token 717: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.889424836728722e-05
    2. ' for' → logprob: -9.875099182128906
    3. '           ' → logprob: -11.250099182128906
    4. '
' → logprob: -11.375099182128906
    5. ',' → logprob: -11.750099182128906
    6. 'for' → logprob: -11.875099182128906
    7. ':' → logprob: -12.875099182128906
    8. '        
' → logprob: -13.250099182128906
    9. '   ' → logprob: -14.125099182128906
    10. '               ' → logprob: -14.125099182128906

Token 718: ' Ajouter' (ID: 165754)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0058312686160206795
    2. ' for' → logprob: -5.505831241607666
    3. 'for' → logprob: -6.380831241607666
    4. '           ' → logprob: -10.005831718444824
    5. '   ' → logprob: -12.380831718444824
    6. '
' → logprob: -13.130831718444824
    7. '        
' → logprob: -13.380831718444824
    8. '               ' → logprob: -13.505831718444824
    9. '	for' → logprob: -14.255831718444824
    10. ',' → logprob: -15.005831718444824

Token 719: ' ce' (ID: 2357)
  Prédit: 'rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rect' → logprob: -1.344632863998413
    2. ' (' → logprob: -1.469632863998413
    3. '(b' → logprob: -2.094632863998413
    4. '               ' → logprob: -2.219632863998413
    5. '           ' → logprob: -2.594632863998413
    6. '(rect' → logprob: -2.719632863998413
    7. 'b' → logprob: -3.594632863998413
    8. '                   ' → logprob: -3.594632863998413
    9. ' rect' → logprob: -3.969632863998413
    10. '       ' → logprob: -4.094633102416992

Token 720: ' rectangle' (ID: 45808)
  Prédit: 'rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rect' → logprob: -0.8419758677482605
    2. ' rectangle' → logprob: -1.7169759273529053
    3. ' rect' → logprob: -2.2169759273529053
    4. ' token' → logprob: -2.5919759273529053
    5. ' ' → logprob: -2.9669759273529053
    6. 'rectangle' → logprob: -3.5919759273529053
    7. ' candidat' → logprob: -3.7169759273529053
    8. ' space' → logprob: -4.091975688934326
    9. ' candidate' → logprob: -4.091975688934326
    10. 'token' → logprob: -4.216975688934326

Token 721: ' aux' (ID: 5850)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005928283790126443
    2. '
' → logprob: -7.5005927085876465
    3. '           ' → logprob: -11.250593185424805
    4. ' for' → logprob: -11.250593185424805
    5. '        
' → logprob: -12.125593185424805
    6. 'for' → logprob: -12.750593185424805
    7. '   ' → logprob: -13.500593185424805
    8. ',' → logprob: -13.875593185424805
    9. '               ' → logprob: -13.875593185424805
    10. '```' → logprob: -14.500593185424805

Token 722: ' candidats' (ID: 100182)
  Prédit: 'rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rect' → logprob: -0.0004954866599291563
    2. ' rect' → logprob: -7.625495433807373
    3. 'b' → logprob: -13.000495910644531
    4. '
' → logprob: -13.375495910644531
    5. '   ' → logprob: -13.625495910644531
    6. '	rect' → logprob: -14.375495910644531
    7. '.rect' → logprob: -15.500495910644531
    8. '#' → logprob: -15.750495910644531
    9. 'buyer' → logprob: -16.00049591064453
    10. '_rect' → logprob: -16.12549591064453

Token 723: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0019355426775291562
    2. '
' → logprob: -6.6269354820251465
    3. ' for' → logprob: -8.376935958862305
    4. 'for' → logprob: -8.626935958862305
    5. '```' → logprob: -8.626935958862305
    6. '        
' → logprob: -11.376935958862305
    7. '           ' → logprob: -12.126935958862305
    8. '``' → logprob: -13.251935958862305
    9. '   ' → logprob: -14.126935958862305
    10. '               ' → logprob: -15.001935958862305

Token 724: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.01417984813451767
    2. ' b' → logprob: -4.264179706573486
    3. '[b' → logprob: -11.639180183410645
    4. '```' → logprob: -13.264180183410645
    5. '	b' → logprob: -13.389180183410645
    6. '   ' → logprob: -14.014180183410645
    7. ')b' → logprob: -14.264180183410645
    8. 'rect' → logprob: -14.764180183410645
    9. 'buyer' → logprob: -14.889180183410645
    10. '       ' → logprob: -15.014180183410645

Token 725: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0019368429202586412
    2. '
' → logprob: -6.376936912536621
    3. 'for' → logprob: -9.126936912536621
    4. ' for' → logprob: -9.251936912536621
    5. '```' → logprob: -11.001936912536621
    6. '        
' → logprob: -12.001936912536621
    7. '           ' → logprob: -12.751936912536621
    8. '   ' → logprob: -12.876936912536621
    9. '
' → logprob: -14.126936912536621
    10. '	for' → logprob: -15.751936912536621

Token 726: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00036049127811565995
    2. '
' → logprob: -8.500360488891602
    3. 'for' → logprob: -9.750360488891602
    4. '        
' → logprob: -10.000360488891602
    5. ' for' → logprob: -10.250360488891602
    6. '```' → logprob: -11.375360488891602
    7. '           ' → logprob: -13.500360488891602
    8. '' → logprob: -14.500360488891602
    9. '   ' → logprob: -14.625360488891602
    10. '               ' → logprob: -14.750360488891602

Token 727: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000726252153981477
    2. 'for' (adapté à ' for') → logprob: -8.125726699829102
    3. ' for' → logprob: -8.250726699829102
    4. '
' → logprob: -9.000726699829102
    5. '```' → logprob: -10.625726699829102
    6. '   ' → logprob: -11.375726699829102
    7. '        
' → logprob: -12.000726699829102
    8. '           ' → logprob: -12.875726699829102
    9. '``' → logprob: -14.875726699829102
    10. '
' → logprob: -15.625726699829102

Token 728: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.715438961982727
    2. 'y' → logprob: -0.715438961982727
    3. 'x' → logprob: -3.9654388427734375
    4. ' y' → logprob: -6.0904388427734375
    5. ' b' → logprob: -7.2154388427734375
    6. ' x' → logprob: -10.340438842773438
    7. 'Y' → logprob: -10.465438842773438
    8. 'X' → logprob: -12.215438842773438
    9. '_y' → logprob: -12.465438842773438
    10. 'k' → logprob: -12.840438842773438

Token 729: ',k' (ID: 35155)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0007648374885320663
    2. 'in' → logprob: -7.250764846801758
    3. ',' → logprob: -9.875764846801758
    4. 's' → logprob: -14.250764846801758
    5. ' ' → logprob: -14.375764846801758
    6. ' ,' → logprob: -14.625764846801758
    7. 'b' → logprob: -14.875764846801758
    8. '   ' → logprob: -15.000764846801758
    9. ' ' → logprob: -15.500764846801758
    10. '```' → logprob: -15.625764846801758

Token 730: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16029946506023407
    2. 'in' → logprob: -1.9102994203567505
    3. ',' → logprob: -9.660299301147461
    4. '	in' → logprob: -12.035299301147461
    5. '```' → logprob: -13.535299301147461
    6. '   ' → logprob: -13.535299301147461
    7. ' ' → logprob: -13.910299301147461
    8. ' ,' → logprob: -14.160299301147461
    9. '  ' → logprob: -15.160299301147461
    10. ',in' → logprob: -16.03529930114746

Token 731: ' buyer' (ID: 28061)
  Prédit: 'buyer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'buyer' → logprob: -0.004082435742020607
    2. ' buyer' → logprob: -5.504082202911377
    3. '   ' → logprob: -13.379082679748535
    4. 'buy' → logprob: -13.754082679748535
    5. 'buyers' → logprob: -13.754082679748535
    6. 'b' → logprob: -15.754082679748535
    7. 'Buyer' → logprob: -17.00408172607422
    8. 'user' → logprob: -17.12908172607422
    9. 'seller' → logprob: -17.50408172607422
    10. 'boy' → logprob: -17.87908172607422

Token 732: '_info' (ID: 6744)
  Prédit: '_info'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_info' → logprob: -0.00159163074567914
    2. 'fo' → logprob: -6.501591682434082
    3. 'buyer' → logprob: -10.126591682434082
    4. 'info' → logprob: -11.376591682434082
    5. 'for' → logprob: -11.376591682434082
    6. 'o' → logprob: -11.626591682434082
    7. 'f' → logprob: -12.126591682434082
    8. 'items' → logprob: -12.501591682434082
    9. 'Info' → logprob: -13.251591682434082
    10. '_items' → logprob: -13.751591682434082

Token 733: '.items' (ID: 19607)
  Prédit: '.items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.items' → logprob: -0.0003365350130479783
    2. 'items' → logprob: -8.250336647033691
    3. '.' → logprob: -9.750336647033691
    4. '.iteritems' → logprob: -11.625336647033691
    5. '().' → logprob: -13.125336647033691
    6. ' .' → logprob: -13.375336647033691
    7. '.values' → logprob: -13.625336647033691
    8. '.Items' → logprob: -13.875336647033691
    9. '   ' → logprob: -14.000336647033691
    10. '_items' → logprob: -14.250336647033691

Token 734: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.3869818150997162
    2. '():
' → logprob: -1.1369818449020386
    3. '()' → logprob: -9.761981964111328
    4. '():
' → logprob: -10.136981964111328
    5. ':' → logprob: -11.386981964111328
    6. '():

' → logprob: -13.886981964111328
    7. '()):
' → logprob: -14.761981964111328
    8. '(' → logprob: -14.886981964111328
    9. ' ():' → logprob: -15.261981964111328
    10. ':
' → logprob: -15.761981964111328

Token 735: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07011427730321884
    2. '       ' → logprob: -2.6951143741607666
    3. ' for' → logprob: -9.195114135742188
    4. '   ' → logprob: -9.570114135742188
    5. 'for' → logprob: -12.945114135742188
    6. '```' → logprob: -13.570114135742188
    7. '	       ' → logprob: -13.820114135742188
    8. '         ' → logprob: -14.320114135742188
    9. '               ' → logprob: -14.945114135742188
    10. '	   ' → logprob: -15.195114135742188

Token 736: ' candidate' (ID: 17098)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3517654538154602
    2. ' for' → logprob: -1.8517653942108154
    3. '           ' → logprob: -1.9767653942108154
    4. '       ' → logprob: -7.1017656326293945
    5. '   ' → logprob: -8.351765632629395
    6. 'x' → logprob: -12.476765632629395
    7. '               ' → logprob: -12.726765632629395
    8. ' ' → logprob: -12.976765632629395
    9. '```' → logprob: -12.976765632629395
    10. '	for' → logprob: -13.101765632629395

Token 737: '_rect' (ID: 39269)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0921456590294838
    2. '_rect' → logprob: -3.5921456813812256
    3. 'for' → logprob: -4.4671454429626465
    4. ' =' → logprob: -4.8421454429626465
    5. '_size' → logprob: -4.9671454429626465
    6. '_x' → logprob: -5.2171454429626465
    7. '_sizes' → logprob: -5.4671454429626465
    8. ' for' → logprob: -5.5921454429626465
    9. '   ' → logprob: -5.9671454429626465
    10. '_s' → logprob: -6.0921454429626465

Token 738: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0025647184811532497
    2. 'angles' → logprob: -6.377564907073975
    3. '=' → logprob: -7.127564907073975
    4. ' =' → logprob: -10.502564430236816
    5. 'angle' → logprob: -10.502564430236816
    6. 'for' → logprob: -13.127564430236816
    7. '=[]' → logprob: -13.752564430236816
    8. '=s' → logprob: -15.127564430236816
    9. '   ' → logprob: -15.377564430236816
    10. '=[' → logprob: -15.377564430236816

Token 739: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03175358474254608
    2. '=' → logprob: -3.5317535400390625
    3. '=[]' → logprob: -7.2817535400390625
    4. 'for' → logprob: -8.031753540039062
    5. '   ' → logprob: -8.281753540039062
    6. '=[]
' → logprob: -8.656753540039062
    7. '[b' → logprob: -8.906753540039062
    8. 's' → logprob: -9.031753540039062
    9. ':' → logprob: -9.031753540039062
    10. '=b' → logprob: -9.781753540039062

Token 740: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.1709194928407669
    2. '[]
' → logprob: -1.9209195375442505
    3. ' []' → logprob: -4.670919418334961
    4. ' []
' → logprob: -6.670919418334961
    5. '[]

' → logprob: -12.295919418334961
    6. '   ' → logprob: -13.295919418334961
    7. '[' → logprob: -14.545919418334961
    8. 'set' → logprob: -15.545919418334961
    9. '[]}' → logprob: -15.920919418334961
    10. '[
' → logprob: -16.29591941833496

Token 741: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011450730264186859
    2. ' for' → logprob: -4.51145076751709
    3. '       ' → logprob: -7.88645076751709
    4. 'for' → logprob: -12.01145076751709
    5. '   ' → logprob: -12.38645076751709
    6. '               ' → logprob: -12.38645076751709
    7. '```' → logprob: -12.51145076751709
    8. '
' → logprob: -12.63645076751709
    9. ' with' → logprob: -14.13645076751709
    10. '            
' → logprob: -14.63645076751709

Token 742: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0077542648650705814
    2. '           ' → logprob: -4.882754325866699
    3. ' for' → logprob: -9.1327543258667
    4. '       ' → logprob: -10.7577543258667
    5. 'max' → logprob: -12.1327543258667
    6. 'height' → logprob: -12.8827543258667
    7. 'area' → logprob: -13.2577543258667
    8. 'x' → logprob: -13.5077543258667
    9. 'found' → logprob: -13.6327543258667
    10. '   ' → logprob: -13.8827543258667

Token 743: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.47491952776908875
    2. 'x' → logprob: -0.9749195575714111
    3. ' y' → logprob: -7.224919319152832
    4. ' x' → logprob: -9.224919319152832
    5. 'b' → logprob: -11.349919319152832
    6. '   ' → logprob: -13.599919319152832
    7. '	y' → logprob: -14.599919319152832
    8. '_y' → logprob: -15.224919319152832
    9. 'Y' → logprob: -15.474919319152832
    10. '	x' → logprob: -15.599919319152832

Token 744: '1' (ID: 16)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.37343886494636536
    2. '1' → logprob: -1.248438835144043
    3. 'in' → logprob: -3.998438835144043
    4. '=' → logprob: -5.123438835144043
    5. ' =' → logprob: -9.373438835144043
    6. '0' → logprob: -9.623438835144043
    7. 'range' → logprob: -9.998438835144043
    8. '           ' → logprob: -10.123438835144043
    9. '_' → logprob: -10.498438835144043
    10. '   ' → logprob: -10.623438835144043

Token 745: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2519426941871643
    2. 'in' → logprob: -1.5019426345825195
    3. '0' → logprob: -13.25194263458252
    4. '```' → logprob: -13.50194263458252
    5. 'range' → logprob: -13.62694263458252
    6. 'In' → logprob: -13.75194263458252
    7. ',' → logprob: -13.87694263458252
    8. '   ' → logprob: -14.00194263458252
    9. '
' → logprob: -14.00194263458252
    10. 'import' → logprob: -14.50194263458252

Token 746: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0001234428636962548
    2. ' range' → logprob: -9.000123023986816
    3. '0' → logprob: -17.500123977661133
    4. '(range' → logprob: -19.250123977661133
    5. '   ' → logprob: -19.500123977661133
    6. '	range' → logprob: -20.125123977661133
    7. 'Range' → logprob: -21.875123977661133
    8. '_range' → logprob: -22.250123977661133
    9. 'ran' → logprob: -22.750123977661133
    10. 'r' → logprob: -22.750123977661133

Token 747: '(Y' (ID: 44341)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.038326505571603775
    2. '(Y' → logprob: -3.2883265018463135
    3. ' Y' → logprob: -8.538326263427734
    4. '0' → logprob: -9.663326263427734
    5. '   ' → logprob: -11.413326263427734
    6. '	Y' → logprob: -12.913326263427734
    7. '           ' → logprob: -13.038326263427734
    8. '       ' → logprob: -13.038326263427734
    9. '(' → logprob: -13.288326263427734
    10. '               ' → logprob: -13.788326263427734

Token 748: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.1184958815574646
    2. '):' → logprob: -2.2434959411621094
    3. '           ' → logprob: -5.618495941162109
    4. ':' → logprob: -7.118495941162109
    5. '       ' → logprob: -7.743495941162109
    6. '               ' → logprob: -8.49349594116211
    7. ',' → logprob: -8.49349594116211
    8. ')' → logprob: -8.86849594116211
    9. ':
' → logprob: -9.74349594116211
    10. '   ' → logprob: -9.74349594116211

Token 749: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08999111503362656
    2. '       ' → logprob: -3.2149910926818848
    3. '           ' → logprob: -3.4649910926818848
    4. '	       ' → logprob: -4.964991092681885
    5. '	           ' → logprob: -5.339991092681885
    6. '	' → logprob: -7.089991092681885
    7. ' for' → logprob: -7.214991092681885
    8. '   ' → logprob: -7.589991092681885
    9. '		       ' → logprob: -8.339991569519043
    10. '	   ' → logprob: -8.339991569519043

Token 750: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.7402076125144958
    2. ' for' → logprob: -0.8652076125144958
    3. '           ' → logprob: -2.3652076721191406
    4. '               ' → logprob: -4.865207672119141
    5. '                   ' → logprob: -8.74020767211914
    6. '   ' → logprob: -8.99020767211914
    7. '       ' → logprob: -10.86520767211914
    8. '	           ' → logprob: -10.86520767211914
    9. '	for' → logprob: -11.11520767211914
    10. '	       ' → logprob: -11.36520767211914

Token 751: ' y' (ID: 342)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.07005558907985687
    2. ' x' → logprob: -2.6950554847717285
    3. 'y' → logprob: -9.570055961608887
    4. ' y' → logprob: -10.195055961608887
    5. 'X' → logprob: -12.445055961608887
    6. '_x' → logprob: -13.570055961608887
    7. '   ' → logprob: -13.695055961608887
    8. 'Y' → logprob: -13.945055961608887
    9. '(x' → logprob: -14.070055961608887
    10. '0' → logprob: -14.195055961608887

Token 752: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.3822154111694545e-05
    2. '2' → logprob: -10.750043869018555
    3. ' y' → logprob: -12.000043869018555
    4. '=' → logprob: -12.500043869018555
    5. 'y' → logprob: -12.625043869018555
    6. '                   ' → logprob: -13.125043869018555
    7. 'range' → logprob: -13.250043869018555
    8. ' ' → logprob: -14.000043869018555
    9. '=y' → logprob: -14.125043869018555
    10. '               ' → logprob: -14.250043869018555

Token 753: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006718332413583994
    2. 'in' → logprob: -5.006718158721924
    3. ' y' → logprob: -13.256718635559082
    4. 'y' → logprob: -14.631718635559082
    5. '[y' → logprob: -16.381717681884766
    6. '	in' → logprob: -16.506717681884766
    7. 'In' → logprob: -16.631717681884766
    8. ')' → logprob: -16.756717681884766
    9. ' ' → logprob: -16.756717681884766
    10. ' в' → logprob: -17.131717681884766

Token 754: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0007108822464942932
    2. ' range' → logprob: -7.250710964202881
    3. '(range' → logprob: -14.125710487365723
    4. 'y' → logprob: -15.625710487365723
    5. '(y' → logprob: -16.37571144104004
    6. '[y' → logprob: -19.00071144104004
    7. ' y' → logprob: -19.12571144104004
    8. '   ' → logprob: -21.00071144104004
    9. '	range' → logprob: -21.00071144104004
    10. 'for' → logprob: -21.25071144104004

Token 755: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.006385414861142635
    2. 'y' → logprob: -5.756385326385498
    3. 'range' → logprob: -5.756385326385498
    4. ' y' → logprob: -11.131385803222656
    5. ' range' → logprob: -11.631385803222656
    6. '(Y' → logprob: -12.006385803222656
    7. '(range' → logprob: -12.506385803222656
    8. '(' → logprob: -13.631385803222656
    9. 'Y' → logprob: -13.756385803222656
    10. 'from' → logprob: -13.881385803222656

Token 756: '1' (ID: 16)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.012188438326120377
    2. '1' → logprob: -4.51218843460083
    3. ' y' → logprob: -7.51218843460083
    4. '(y' → logprob: -8.012188911437988
    5. 'Y' → logprob: -9.012188911437988
    6. '[y' → logprob: -9.387188911437988
    7. '=y' → logprob: -10.262188911437988
    8. ',y' → logprob: -11.637188911437988
    9. '	y' → logprob: -11.887188911437988
    10. ')y' → logprob: -13.762188911437988

Token 757: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0029365792870521545
    2. ',Y' → logprob: -5.877936363220215
    3. ' ,' → logprob: -9.377936363220215
    4. ',y' → logprob: -10.752936363220215
    5. 'Y' → logprob: -10.877936363220215
    6. '+' → logprob: -13.127936363220215
    7. '           ' → logprob: -13.627936363220215
    8. '       ' → logprob: -13.877936363220215
    9. '               ' → logprob: -14.752936363220215
    10. '   ' → logprob: -15.002936363220215

Token 758: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -7.465036105713807e-06
    2. ' Y' → logprob: -11.875007629394531
    3. 'y' → logprob: -15.375007629394531
    4. '                   ' → logprob: -17.12500762939453
    5. '	Y' → logprob: -17.37500762939453
    6. '           ' → logprob: -17.62500762939453
    7. '       ' → logprob: -18.25000762939453
    8. ')' → logprob: -18.37500762939453
    9. '   ' → logprob: -18.37500762939453
    10. '(Y' → logprob: -18.50000762939453

Token 759: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.16024646162986755
    2. '):' → logprob: -1.91024649143219
    3. '           ' → logprob: -11.785246849060059
    4. '):
' → logprob: -11.785246849060059
    5. '       ' → logprob: -13.285246849060059
    6. '               ' → logprob: -13.285246849060059
    7. '                   ' → logprob: -14.160246849060059
    8. ')' → logprob: -14.410246849060059
    9. '   ' → logprob: -14.660246849060059
    10. ':
' → logprob: -14.660246849060059

Token 760: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0011162848677486181
    2. '               ' → logprob: -7.1261162757873535
    3. '           ' → logprob: -8.876116752624512
    4. '                       ' → logprob: -9.251116752624512
    5. '       ' → logprob: -10.626116752624512
    6. ' for' → logprob: -10.876116752624512
    7. '```' → logprob: -11.001116752624512
    8. '   ' → logprob: -12.001116752624512
    9. '		           ' → logprob: -12.876116752624512
    10. '                ' → logprob: -13.876116752624512

Token 761: ' height' (ID: 4679)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6589893698692322
    2. '                   ' → logprob: -1.658989429473877
    3. 'for' → logprob: -2.158989429473877
    4. '                       ' → logprob: -2.283989429473877
    5. '               ' → logprob: -2.783989429473877
    6. '           ' → logprob: -4.783989429473877
    7. '       ' → logprob: -5.658989429473877
    8. '   ' → logprob: -7.908989429473877
    9. ' x' → logprob: -8.033988952636719
    10. 'x' → logprob: -8.283988952636719

Token 762: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6326388120651245
    2. '=' → logprob: -0.7576388120651245
    3. '           ' → logprob: -11.132638931274414
    4. '               ' → logprob: -11.632638931274414
    5. 's' → logprob: -12.757638931274414
    6. '            ' → logprob: -12.882638931274414
    7. '                   ' → logprob: -13.132638931274414
    8. '   ' → logprob: -13.257638931274414
    9. '                ' → logprob: -13.257638931274414
    10. '=size' → logprob: -14.132638931274414

Token 763: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.31397005915641785
    2. ' y' → logprob: -1.3139700889587402
    3. '(y' → logprob: -7.31397008895874
    4. ' (' → logprob: -10.188969612121582
    5. '   ' → logprob: -12.688969612121582
    6. '	y' → logprob: -14.438969612121582
    7. ' ' → logprob: -14.938969612121582
    8. '(' → logprob: -15.813969612121582
    9. '    ' → logprob: -16.4389705657959
    10. '`' → logprob: -18.0639705657959

Token 764: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.061676347395405e-05
    2. '```' → logprob: -11.50005054473877
    3. '   ' → logprob: -11.62505054473877
    4. '=' → logprob: -11.87505054473877
    5. '
' → logprob: -12.12505054473877
    6. '+' → logprob: -12.25005054473877
    7. ' =' → logprob: -12.37505054473877
    8. 'y' → logprob: -12.62505054473877
    9. ' ' → logprob: -13.00005054473877
    10. ' y' → logprob: -14.12505054473877

Token 765: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.31326231360435486
    2. ' -' → logprob: -1.3132623434066772
    3. '-y' → logprob: -15.063261985778809
    4. '   ' → logprob: -15.938261985778809
    5. ' ' → logprob: -16.563262939453125
    6. '−' → logprob: -17.438262939453125
    7. '```' → logprob: -17.563262939453125
    8. '=' → logprob: -17.813262939453125
    9. '–' → logprob: -18.813262939453125
    10. '<|end|>' → logprob: -18.938262939453125

Token 766: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00017970333283301443
    2. ' y' → logprob: -8.625179290771484
    3. '	y' → logprob: -17.750179290771484
    4. '(y' → logprob: -18.875179290771484
    5. '   ' → logprob: -19.375179290771484
    6. '=y' → logprob: -19.750179290771484
    7. 'x' → logprob: -19.750179290771484
    8. ')y' → logprob: -20.000179290771484
    9. '=' → logprob: -20.250179290771484
    10. '[y' → logprob: -20.375179290771484

Token 767: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.625
    3. '0' → logprob: -16.375
    4. 'y' → logprob: -16.75
    5. '+' → logprob: -16.875
    6. '```' → logprob: -17.625
    7. '   ' → logprob: -17.8125
    8. '                   ' → logprob: -18.5625
    9. ' y' → logprob: -19.0625
    10. '           ' → logprob: -19.4375

Token 768: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16022422909736633
    2. ' +' → logprob: -1.910224199295044
    3. '+
' → logprob: -16.78522491455078
    4. '()+' → logprob: -18.03522491455078
    5. '＋' → logprob: -18.78522491455078
    6. ' +
' → logprob: -18.91022491455078
    7. '
' → logprob: -20.28522491455078
    8. '```' → logprob: -20.41022491455078
    9. '           ' → logprob: -20.66022491455078
    10. '+i' → logprob: -20.66022491455078

Token 769: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.125005722045898
    3. '```' → logprob: -18.8750057220459
    4. '   ' → logprob: -19.2500057220459
    5. '
' → logprob: -20.1250057220459
    6. '=' → logprob: -21.6250057220459
    7. '2' → logprob: -22.0000057220459
    8. '0' → logprob: -22.2500057220459
    9. '       ' → logprob: -22.5000057220459
    10. '           ' → logprob: -23.2500057220459

Token 770: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '```' → logprob: -19.625001907348633
    4. '
' → logprob: -19.875001907348633
    5. '   ' → logprob: -20.250001907348633
    6. '１' → logprob: -22.000001907348633
    7. '2' → logprob: -22.000001907348633
    8. '=' → logprob: -22.125001907348633
    9. 'for' → logprob: -22.562501907348633
    10. '0' → logprob: -22.812501907348633

Token 771: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.054235026240348816
    2. '           ' → logprob: -3.1792349815368652
    3. '               ' → logprob: -5.804234981536865
    4. '
' → logprob: -5.929234981536865
    5. '                    
' → logprob: -6.054234981536865
    6. '       ' → logprob: -6.554234981536865
    7. ' for' → logprob: -7.929234981536865
    8. '                       ' → logprob: -8.679235458374023
    9. 'for' → logprob: -8.679235458374023
    10. '            
' → logprob: -8.804235458374023

Token 772: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.01864687167108059
    2. '           ' → logprob: -4.143646717071533
    3. '               ' → logprob: -6.268646717071533
    4. '       ' → logprob: -7.768646717071533
    5. '                       ' → logprob: -9.643647193908691
    6. ' for' → logprob: -9.893647193908691
    7. '```' → logprob: -10.018647193908691
    8. 'for' → logprob: -10.393647193908691
    9. '                    
' → logprob: -10.768647193908691
    10. '
' → logprob: -11.018647193908691

Token 773: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.7437469959259033
    2. 'for' → logprob: -0.8687469959259033
    3. 'width' → logprob: -2.7437469959259033
    4. 'max' → logprob: -3.2437469959259033
    5. '                   ' → logprob: -6.743746757507324
    6. 'w' → logprob: -8.243746757507324
    7. '           ' → logprob: -8.868746757507324
    8. '                       ' → logprob: -9.493746757507324
    9. 'min' → logprob: -9.868746757507324
    10. '               ' → logprob: -10.618746757507324

Token 774: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0035411552526056767
    2. 'height' → logprob: -5.753540992736816
    3. ' k' → logprob: -8.628540992736816
    4. 'n' → logprob: -9.253540992736816
    5. '(k' → logprob: -9.878540992736816
    6. ' height' → logprob: -11.503540992736816
    7. '   ' → logprob: -11.753540992736816
    8. '                   ' → logprob: -12.628540992736816
    9. '                           ' → logprob: -12.753540992736816
    10. '(height' → logprob: -13.003540992736816

Token 775: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.04343107342720032
    2. ' %' → logprob: -3.168431043624878
    3. '%x' → logprob: -8.543431282043457
    4. '%d' → logprob: -9.918431282043457
    5. '%s' → logprob: -9.918431282043457
    6. '%i' → logprob: -10.168431282043457
    7. '%n' → logprob: -10.293431282043457
    8. '%c' → logprob: -10.668431282043457
    9. '%e' → logprob: -10.918431282043457
    10. '%b' → logprob: -11.543431282043457

Token 776: ' height' (ID: 4679)
  Prédit: 'height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'height' → logprob: -2.816093228830141e-06
    2. ' height' → logprob: -12.87500286102295
    3. '(height' → logprob: -15.37500286102295
    4. 'width' → logprob: -17.625001907348633
    5. '0' → logprob: -19.125001907348633
    6. '   ' → logprob: -19.500001907348633
    7. '
' → logprob: -19.750001907348633
    8. '	height' → logprob: -20.000001907348633
    9. 'depth' → logprob: -20.125001907348633
    10. '=' → logprob: -20.500001907348633

Token 777: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.2606845498085022
    2. ' !=' → logprob: -1.6356844902038574
    3. '==' → logprob: -3.3856844902038574
    4. ' ==' → logprob: -7.260684490203857
    5. ':' → logprob: -9.760684967041016
    6. '!==' → logprob: -11.260684967041016
    7. ')!=' → logprob: -11.510684967041016
    8. '>' → logprob: -11.635684967041016
    9. '()!=' → logprob: -13.385684967041016
    10. '   ' → logprob: -13.510684967041016

Token 778: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.125
    3. '۰' → logprob: -21.375
    4. '=' → logprob: -21.5
    5. ' ' → logprob: -22.625
    6. '```' → logprob: -22.75
    7. '  ' → logprob: -22.875
    8. '٠' → logprob: -23.5
    9. 's' → logprob: -23.625
    10. 'k' → logprob: -23.875

Token 779: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '۰' → logprob: -21.0
    4. '=' → logprob: -21.875
    5. '  ' → logprob: -22.0
    6. '```' → logprob: -22.5
    7. ' ' → logprob: -22.875
    8. '   ' → logprob: -22.875
    9. 'k' → logprob: -23.0
    10. 's' → logprob: -23.125

Token 780: ':
' (ID: 734)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.3135138750076294
    2. ':
' → logprob: -2.31351375579834
    3. ':' → logprob: -2.81351375579834
    4. '                               ' → logprob: -3.31351375579834
    5. 'continue' → logprob: -3.93851375579834
    6. '                           ' → logprob: -4.06351375579834
    7. ' continue' → logprob: -4.31351375579834
    8. '                   ' → logprob: -4.43851375579834
    9. '               ' → logprob: -6.18851375579834
    10. ' or' → logprob: -6.31351375579834

Token 781: '                       ' (ID: 968)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.5193752646446228
    2. '                       ' → logprob: -1.0193753242492676
    3. 'continue' → logprob: -3.5193753242492676
    4. '                               ' → logprob: -5.019375324249268
    5. '                           ' → logprob: -5.269375324249268
    6. '                   ' → logprob: -6.394375324249268
    7. '               ' → logprob: -7.019375324249268
    8. '       ' → logprob: -9.64437484741211
    9. '           ' → logprob: -9.76937484741211
    10. '                        
' → logprob: -10.01937484741211

Token 782: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.011097577400505543
    2. ' continue' → logprob: -4.511097431182861
    3. '                       ' → logprob: -10.13609790802002
    4. '                           ' → logprob: -12.63609790802002
    5. '   ' → logprob: -13.01109790802002
    6. '                   ' → logprob: -13.26109790802002
    7. '               ' → logprob: -14.01109790802002
    8. '                               ' → logprob: -14.13609790802002
    9. '	continue' → logprob: -14.26109790802002
    10. '           ' → logprob: -14.88609790802002

Token 783: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0013945228420197964
    2. '           ' → logprob: -7.501394748687744
    3. '               ' → logprob: -7.876394748687744
    4. '                    
' → logprob: -8.626394271850586
    5. '```' → logprob: -9.001394271850586
    6. '
' → logprob: -9.251394271850586
    7. '                       ' → logprob: -11.376394271850586
    8. 'for' → logprob: -11.376394271850586
    9. '                    ' → logprob: -11.751394271850586
    10. '       ' → logprob: -11.751394271850586

Token 784: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.03718707710504532
    2. '           ' → logprob: -3.912187099456787
    3. '               ' → logprob: -4.412187099456787
    4. '```' → logprob: -6.537187099456787
    5. '       ' → logprob: -7.162187099456787
    6. ' for' → logprob: -7.287187099456787
    7. '                       ' → logprob: -7.787187099456787
    8. '                    ' → logprob: -7.787187099456787
    9. 'for' → logprob: -8.037186622619629
    10. '                    
' → logprob: -9.287186622619629

Token 785: ' width' (ID: 4345)
  Prédit: 'width'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'width' (adapté à ' width') → logprob: -0.13770340383052826
    2. '                   ' → logprob: -2.7627034187316895
    3. 'for' → logprob: -3.6377034187316895
    4. 'w' → logprob: -3.6377034187316895
    5. '               ' → logprob: -5.0127034187316895
    6. ' width' → logprob: -5.7627034187316895
    7. '           ' → logprob: -7.2627034187316895
    8. '                       ' → logprob: -7.3877034187316895
    9. 'x' → logprob: -7.5127034187316895
    10. ' for' → logprob: -8.512702941894531

Token 786: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25193077325820923
    2. ' =' → logprob: -1.5019307136535645
    3. '=k' → logprob: -13.376931190490723
    4. '＝' → logprob: -17.876930236816406
    5. '   ' → logprob: -18.626930236816406
    6. '=int' → logprob: -18.751930236816406
    7. ' ' → logprob: -18.751930236816406
    8. '```' → logprob: -18.876930236816406
    9. '=
' → logprob: -19.001930236816406
    10. 'k' → logprob: -19.876930236816406

Token 787: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.01814994215965271
    2. ' k' → logprob: -4.0181498527526855
    3. ' ' → logprob: -17.893150329589844
    4. '(k' → logprob: -18.768150329589844
    5. '	k' → logprob: -19.143150329589844
    6. '[k' → logprob: -19.393150329589844
    7. '   ' → logprob: -19.393150329589844
    8. '{k' → logprob: -20.393150329589844
    9. 'kx' → logprob: -20.643150329589844
    10. '  ' → logprob: -20.643150329589844

Token 788: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.693156361579895
    2. ' //' → logprob: -0.693156361579895
    3. '   ' → logprob: -12.818156242370605
    4. ' ' → logprob: -13.068156242370605
    5. '#' → logprob: -13.818156242370605
    6. '//=' → logprob: -13.943156242370605
    7. '=' → logprob: -14.818156242370605
    8. '           ' → logprob: -14.818156242370605
    9. '/' → logprob: -15.068156242370605
    10. ' ' → logprob: -15.193156242370605

Token 789: ' height' (ID: 4679)
  Prédit: 'height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'height' → logprob: -2.7610454708337784e-05
    2. ' height' → logprob: -10.500027656555176
    3. '(height' → logprob: -18.00002670288086
    4. 'width' → logprob: -18.50002670288086
    5. 'depth' → logprob: -19.12502670288086
    6. '.height' → logprob: -20.37502670288086
    7. '	height' → logprob: -20.62502670288086
    8. '
' → logprob: -21.12502670288086
    9. ' ' → logprob: -21.37502670288086
    10. '_height' → logprob: -21.37502670288086

Token 790: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.006808918435126543
    2. '                    
' → logprob: -5.881808757781982
    3. '           ' → logprob: -6.256808757781982
    4. '               ' → logprob: -7.756808757781982
    5. '
' → logprob: -7.881808757781982
    6. ' for' → logprob: -8.00680923461914
    7. 'for' → logprob: -8.25680923461914
    8. '                        
' → logprob: -8.75680923461914
    9. '<|end|>' → logprob: -9.38180923461914
    10. '            
' → logprob: -9.63180923461914

Token 791: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00790529977530241
    2. 'for' → logprob: -5.25790548324585
    3. ' for' → logprob: -6.00790548324585
    4. 'if' → logprob: -9.632905006408691
    5. '           ' → logprob: -10.132905006408691
    6. '               ' → logprob: -10.507905006408691
    7. '                    
' → logprob: -11.007905006408691
    8. ' if' → logprob: -11.132905006408691
    9. '				' → logprob: -11.257905006408691
    10. '
' → logprob: -11.382905006408691

Token 792: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.31715139746665955
    2. 'if' (adapté à ' if') → logprob: -1.317151427268982
    3. '                   ' → logprob: -5.5671515464782715
    4. ' for' → logprob: -10.567151069641113
    5. '           ' → logprob: -11.067151069641113
    6. ' if' → logprob: -11.442151069641113
    7. '               ' → logprob: -11.942151069641113
    8. '                       ' → logprob: -14.442151069641113
    9. '```' → logprob: -14.567151069641113
    10. '#' → logprob: -14.942151069641113

Token 793: ' width' (ID: 4345)
  Prédit: 'width'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'width' → logprob: -8.900034299585968e-05
    2. ' width' → logprob: -9.375088691711426
    3. '   ' → logprob: -12.750088691711426
    4. 'x' → logprob: -15.250088691711426
    5. '(width' → logprob: -15.250088691711426
    6. ' ' → logprob: -15.750088691711426
    7. '	width' → logprob: -16.000089645385742
    8. '       ' → logprob: -16.125089645385742
    9. 'wide' → logprob: -16.500089645385742
    10. '           ' → logprob: -16.500089645385742

Token 794: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.01695365272462368
    2. '>' → logprob: -4.141953468322754
    3. ' <=' → logprob: -7.016953468322754
    4. '<=' → logprob: -10.766953468322754
    5. '   ' → logprob: -15.016953468322754
    6. ' >
' → logprob: -15.391953468322754
    7. ' ' → logprob: -15.391953468322754
    8. '           ' → logprob: -16.39195442199707
    9. '=' → logprob: -16.64195442199707
    10. '[' → logprob: -16.76695442199707

Token 795: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -1.9027791495318525e-05
    2. ' X' → logprob: -10.875019073486328
    3. '>X' → logprob: -18.000019073486328
    4. '	X' → logprob: -18.125019073486328
    5. '=X' → logprob: -18.375019073486328
    6. '   ' → logprob: -18.500019073486328
    7. '(X' → logprob: -18.500019073486328
    8. 'x' → logprob: -18.500019073486328
    9. '=' → logprob: -18.875019073486328
    10. ' ' → logprob: -19.125019073486328

Token 796: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.1640799343585968
    2. ':' → logprob: -1.9140799045562744
    3. '                       ' → logprob: -5.6640801429748535
    4. '               ' → logprob: -8.414079666137695
    5. '                   ' → logprob: -9.539079666137695
    6. ' or' → logprob: -11.039079666137695
    7. ':
' → logprob: -11.164079666137695
    8. ' :
' → logprob: -11.414079666137695
    9. '           ' → logprob: -11.539079666137695
    10. 'continue' → logprob: -11.539079666137695

Token 797: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.001293927663937211
    2. 'continue' → logprob: -6.876294136047363
    3. ' continue' → logprob: -8.876294136047363
    4. ':
' → logprob: -10.001294136047363
    5. '                   ' → logprob: -10.376294136047363
    6. '                           ' → logprob: -11.376294136047363
    7. ':' → logprob: -11.376294136047363
    8. '               ' → logprob: -11.501294136047363
    9. '                               ' → logprob: -12.501294136047363
    10. '       ' → logprob: -12.876294136047363

Token 798: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.04924032837152481
    2. ' continue' → logprob: -3.0492403507232666
    3. '                       ' → logprob: -8.299240112304688
    4. '   ' → logprob: -8.799240112304688
    5. '                   ' → logprob: -9.174240112304688
    6. '           ' → logprob: -9.424240112304688
    7. '               ' → logprob: -10.299240112304688
    8. '                           ' → logprob: -11.424240112304688
    9. '	continue' → logprob: -11.424240112304688
    10. '       ' → logprob: -11.549240112304688

Token 799: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.000217006730963476
    2. '               ' → logprob: -9.62521743774414
    3. '           ' → logprob: -9.75021743774414
    4. '                       ' → logprob: -10.50021743774414
    5. '
' → logprob: -10.87521743774414
    6. '                    
' → logprob: -11.12521743774414
    7. 'for' → logprob: -11.75021743774414
    8. '```' → logprob: -12.12521743774414
    9. '				' → logprob: -12.50021743774414
    10. ' for' → logprob: -12.50021743774414

Token 800: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0001996066712308675
    2. '           ' → logprob: -9.625199317932129
    3. '               ' → logprob: -9.625199317932129
    4. '
' → logprob: -10.875199317932129
    5. '                    
' → logprob: -10.875199317932129
    6. '                       ' → logprob: -11.500199317932129
    7. 'for' → logprob: -12.375199317932129
    8. '                    ' → logprob: -12.750199317932129
    9. '```' → logprob: -12.875199317932129
    10. '       ' → logprob: -13.125199317932129

Token 801: ' for' (ID: 395)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.30472996830940247
    2. 'for' (adapté à ' for') → logprob: -1.42972993850708
    3. '           ' → logprob: -3.92972993850708
    4. ' for' → logprob: -5.92972993850708
    5. '               ' → logprob: -7.67972993850708
    6. '
' → logprob: -8.554730415344238
    7. '                    
' → logprob: -8.554730415344238
    8. '       ' → logprob: -10.429730415344238
    9. 'x' → logprob: -10.554730415344238
    10. '                       ' → logprob: -11.179730415344238

Token 802: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.0280383548888494e-06
    2. ' x' → logprob: -14.000000953674316
    3. '	x' → logprob: -17.125001907348633
    4. '   ' → logprob: -17.625001907348633
    5. '_x' → logprob: -18.750001907348633
    6. '```' → logprob: -18.750001907348633
    7. 'y' → logprob: -19.500001907348633
    8. '(x' → logprob: -19.500001907348633
    9. '$x' → logprob: -20.250001907348633
    10. '#' → logprob: -20.750001907348633

Token 803: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11619194597005844
    2. ' in' → logprob: -2.241191864013672
    3. 'in' → logprob: -5.741191864013672
    4. ' ' → logprob: -9.491191864013672
    5. '0' → logprob: -9.866191864013672
    6. '_' → logprob: -11.616191864013672
    7. '=' → logprob: -12.741191864013672
    8. 'x' → logprob: -12.866191864013672
    9. '```' → logprob: -12.991191864013672
    10. 'range' → logprob: -13.366191864013672

Token 804: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018156733363866806
    2. 'in' → logprob: -4.0181565284729
    3. 'range' → logprob: -13.393157005310059
    4. '```' → logprob: -13.643157005310059
    5. ' ' → logprob: -13.893157005310059
    6. '	in' → logprob: -14.143157005310059
    7. 'n' → logprob: -14.518157005310059
    8. 'x' → logprob: -15.268157005310059
    9. 'import' → logprob: -15.393157005310059
    10. 'to' → logprob: -15.518157005310059

Token 805: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0031784253660589457
    2. ' range' → logprob: -5.753178596496582
    3. '0' → logprob: -14.128178596496582
    4. 'in' → logprob: -18.628177642822266
    5. '(range' → logprob: -18.628177642822266
    6. ' ' → logprob: -19.628177642822266
    7. '	range' → logprob: -19.878177642822266
    8. 'x' → logprob: -19.878177642822266
    9. 'Range' → logprob: -20.378177642822266
    10. '   ' → logprob: -20.753177642822266

Token 806: '(X' (ID: 17061)
  Prédit: '(X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.0047965459525585175
    2. '(' → logprob: -5.754796504974365
    3. 'X' → logprob: -7.004796504974365
    4. '0' → logprob: -7.629796504974365
    5. ' (' → logprob: -8.879796981811523
    6. 'range' → logprob: -10.129796981811523
    7. ' X' → logprob: -11.129796981811523
    8. '   ' → logprob: -11.379796981811523
    9. ' ' → logprob: -11.754796981811523
    10. ' range' → logprob: -11.754796981811523

Token 807: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.18904727697372437
    2. '-' → logprob: -2.314047336578369
    3. '-x' → logprob: -2.814047336578369
    4. '-width' → logprob: -4.564047336578369
    5. '           ' → logprob: -7.064047336578369
    6. '):
' → logprob: -7.564047336578369
    7. '       ' → logprob: -8.189046859741211
    8. '):' → logprob: -8.314046859741211
    9. '   ' → logprob: -8.314046859741211
    10. '               ' → logprob: -8.689046859741211

Token 808: ' width' (ID: 4345)
  Prédit: 'width'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'width' → logprob: -0.00012035090912831947
    2. ' width' → logprob: -9.500120162963867
    3. '(width' → logprob: -10.000120162963867
    4. ' (' → logprob: -17.375120162963867
    5. '(' → logprob: -19.500120162963867
    6. ',width' → logprob: -19.875120162963867
    7. '   ' → logprob: -20.500120162963867
    8. '	width' → logprob: -21.125120162963867
    9. 'x' → logprob: -21.125120162963867
    10. 'w' → logprob: -21.375120162963867

Token 809: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5759396553039551
    2. ' +' → logprob: -0.8259396553039551
    3. '   ' → logprob: -16.575939178466797
    4. ' ' → logprob: -16.700939178466797
    5. '＋' → logprob: -17.075939178466797
    6. ')' → logprob: -18.200939178466797
    7. ')+' → logprob: -18.325939178466797
    8. '    ' → logprob: -18.825939178466797
    9. '):
' → logprob: -18.950939178466797
    10. '```' → logprob: -19.200939178466797

Token 810: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.13388703338569e-06
    2. ' ' → logprob: -11.625009536743164
    3. '   ' → logprob: -17.375009536743164
    4. '```' → logprob: -17.875009536743164
    5. '
' → logprob: -18.062509536743164
    6. '

' → logprob: -19.000009536743164
    7. '۱' → logprob: -19.500009536743164
    8. '  ' → logprob: -19.500009536743164
    9. '１' → logprob: -19.687509536743164
    10. '2' → logprob: -19.750009536743164

Token 811: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5662186145782471
    2. ':' → logprob: -1.066218614578247
    3. '):
' → logprob: -2.441218614578247
    4. '       ' → logprob: -8.566218376159668
    5. ':
' → logprob: -8.691218376159668
    6. '   ' → logprob: -8.816218376159668
    7. '                   ' → logprob: -9.441218376159668
    8. ' :' → logprob: -9.566218376159668
    9. '                       ' → logprob: -9.816218376159668
    10. '               ' → logprob: -10.191218376159668

Token 812: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.027740370482206345
    2. '		               ' → logprob: -5.152740478515625
    3. '               ' → logprob: -5.277740478515625
    4. '       ' → logprob: -5.777740478515625
    5. '	                   ' → logprob: -5.777740478515625
    6. '					' → logprob: -6.277740478515625
    7. '			           ' → logprob: -6.777740478515625
    8. '				       ' → logprob: -6.902740478515625
    9. '		       ' → logprob: -7.277740478515625
    10. '                   ' → logprob: -7.277740478515625

Token 813: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.009447099640965462
    2. 'rect' → logprob: -4.75944709777832
    3. '                       ' → logprob: -8.00944709777832
    4. ' x' → logprob: -8.50944709777832
    5. '                           ' → logprob: -9.00944709777832
    6. 'if' → logprob: -10.00944709777832
    7. 's' → logprob: -11.00944709777832
    8. '#' → logprob: -11.13444709777832
    9. '                               ' → logprob: -11.13444709777832
    10. '           ' → logprob: -11.38444709777832

Token 814: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1275162398815155
    2. '1' → logprob: -2.127516269683838
    3. '```' → logprob: -7.502516269683838
    4. '                       ' → logprob: -11.37751579284668
    5. 'x' → logprob: -12.37751579284668
    6. '                           ' → logprob: -12.50251579284668
    7. '=' → logprob: -13.25251579284668
    8. '                               ' → logprob: -13.37751579284668
    9. '₂' → logprob: -13.50251579284668
    10. '``' → logprob: -13.50251579284668

Token 815: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868798017501831
    2. ' =' → logprob: -1.136879801750183
    3. '=x' → logprob: -11.886879920959473
    4. '```' → logprob: -13.761879920959473
    5. 'x' → logprob: -15.136879920959473
    6. '＝' → logprob: -15.386879920959473
    7. '=
' → logprob: -15.511879920959473
    8. '=int' → logprob: -16.636878967285156
    9. ' =
' → logprob: -17.136878967285156
    10. ' x' → logprob: -17.636878967285156

Token 816: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.03804149478673935
    2. ' x' → logprob: -3.288041591644287
    3. '(x' → logprob: -18.413042068481445
    4. '	x' → logprob: -19.538042068481445
    5. '                       ' → logprob: -19.663042068481445
    6. '```' → logprob: -19.788042068481445
    7. '   ' → logprob: -20.038042068481445
    8. '                           ' → logprob: -20.663042068481445
    9. ' ' → logprob: -21.413042068481445
    10. '$x' → logprob: -21.538042068481445

Token 817: '1' (ID: 16)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0007102862582542002
    2. ' x' → logprob: -7.250710487365723
    3. '=' → logprob: -16.000709533691406
    4. '```' → logprob: -16.250709533691406
    5. '	x' → logprob: -16.875709533691406
    6. '1' → logprob: -17.125709533691406
    7. '=x' → logprob: -17.250709533691406
    8. '(x' → logprob: -17.375709533691406
    9. 'token' → logprob: -18.000709533691406
    10. ' ' → logprob: -18.250709533691406

Token 818: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.576086699962616
    2. '+' → logprob: -0.826086699962616
    3. '+x' → logprob: -8.82608699798584
    4. '＋' → logprob: -15.95108699798584
    5. '+
' → logprob: -17.201086044311523
    6. '+y' → logprob: -17.326086044311523
    7. 'x' → logprob: -17.326086044311523
    8. ' +
' → logprob: -17.576086044311523
    9. '+k' → logprob: -18.076086044311523
    10. '                       ' → logprob: -18.326086044311523

Token 819: ' width' (ID: 4345)
  Prédit: 'width'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'width' → logprob: -3.5954712075181305e-05
    2. ' width' → logprob: -10.250036239624023
    3. '(width' → logprob: -14.375036239624023
    4. ' ' → logprob: -21.250036239624023
    5. '	width' → logprob: -21.500036239624023
    6. ',width' → logprob: -22.375036239624023
    7. '   ' → logprob: -22.625036239624023
    8. 'w' → logprob: -22.625036239624023
    9. ' (' → logprob: -22.875036239624023
    10. '1' → logprob: -23.000036239624023

Token 820: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.20141451060771942
    2. ' -' → logprob: -1.7014144659042358
    3. '<|end|>' → logprob: -13.701414108276367
    4. '–' → logprob: -16.576414108276367
    5. '```' → logprob: -16.951414108276367
    6. '                       ' → logprob: -17.826414108276367
    7. '-token' → logprob: -18.201414108276367
    8. '−' → logprob: -18.576414108276367
    9. '<|end|>' → logprob: -18.826414108276367
    10. '()-' → logprob: -19.701414108276367

Token 821: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '```' → logprob: -20.250001907348633
    4. '<|end|>' → logprob: -22.125001907348633
    5. '۱' → logprob: -22.250001907348633
    6. '0' → logprob: -22.812501907348633
    7. '   ' → logprob: -23.187501907348633
    8. '১' → logprob: -23.375001907348633
    9. '１' → logprob: -23.625001907348633
    10. '=' → logprob: -24.000001907348633

Token 822: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 823: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.03646848350763321
    2. ' if' → logprob: -3.661468505859375
    3. '                        
' → logprob: -5.161468505859375
    4. 'if' → logprob: -5.786468505859375
    5. '<|end|>' → logprob: -8.286468505859375
    6. '
' → logprob: -8.411468505859375
    7. '               ' → logprob: -9.036468505859375
    8. '           ' → logprob: -9.411468505859375
    9. '                           ' → logprob: -9.411468505859375
    10. '       ' → logprob: -9.536468505859375

Token 824: ' rect' (ID: 13107)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0702965185046196
    2. ' if' → logprob: -2.9452965259552
    3. '                       ' → logprob: -4.570296287536621
    4. 'rect' (adapté à ' rect') → logprob: -5.320296287536621
    5. ' rect' → logprob: -10.695296287536621
    6. '                        
' → logprob: -11.945296287536621
    7. '   ' → logprob: -12.695296287536621
    8. '                   ' → logprob: -12.945296287536621
    9. 'candidate' → logprob: -13.070296287536621
    10. 'for' → logprob: -13.195296287536621

Token 825: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.42887240648269653
    2. '=' → logprob: -1.0538723468780518
    3. '=(' → logprob: -9.178872108459473
    4. ')' → logprob: -10.553872108459473
    5. '<|end|>' → logprob: -11.303872108459473
    6. ' =(' → logprob: -11.428872108459473
    7. 's' → logprob: -12.553872108459473
    8. '=
' → logprob: -13.053872108459473
    9. ')=' → logprob: -13.428872108459473
    10. '=

' → logprob: -13.678872108459473

Token 826: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.16026698052883148
    2. ' (' → logprob: -1.9102669954299927
    3. '(' → logprob: -10.285266876220703
    4. 'x' → logprob: -11.785266876220703
    5. ' x' → logprob: -14.285266876220703
    6. '   ' → logprob: -14.910266876220703
    7. ' ' → logprob: -17.410266876220703
    8. '[x' → logprob: -18.160266876220703
    9. '（' → logprob: -19.910266876220703
    10. '  ' → logprob: -19.910266876220703

Token 827: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -2.15310683415737e-05
    2. ' x' → logprob: -10.750021934509277
    3. ')x' → logprob: -17.62502098083496
    4. '   ' → logprob: -18.62502098083496
    5. '	x' → logprob: -19.75002098083496
    6. '(x' → logprob: -19.87502098083496
    7. ')' → logprob: -20.25002098083496
    8. '```' → logprob: -20.75002098083496
    9. ',x' → logprob: -21.00002098083496
    10. '"x' → logprob: -21.50002098083496

Token 828: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10022132843732834
    2. 'x' → logprob: -2.3502213954925537
    3. ' x' → logprob: -11.850221633911133
    4. ',x' → logprob: -12.600221633911133
    5. '```' → logprob: -13.100221633911133
    6. ',' → logprob: -14.100221633911133
    7. '_x' → logprob: -14.975221633911133
    8. '{x' → logprob: -15.850221633911133
    9. '(x' → logprob: -15.975221633911133
    10. ')x' → logprob: -15.975221633911133

Token 829: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.02979712188243866
    2. ',' → logprob: -3.529797077178955
    3. ' ,' → logprob: -10.029797554016113
    4. ',
' → logprob: -13.779797554016113
    5. ',x' → logprob: -14.404797554016113
    6. ',user' → logprob: -14.904797554016113
    7. ',Y' → logprob: -14.904797554016113
    8. '```' → logprob: -17.154796600341797
    9. ',b' → logprob: -17.529796600341797
    10. ',n' → logprob: -17.654796600341797

Token 830: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.696889623621246e-06
    2. 'y' → logprob: -13.25000286102295
    3. '```' → logprob: -14.62500286102295
    4. ' ' → logprob: -16.000001907348633
    5. ',' → logprob: -16.125001907348633
    6. ' y' → logprob: -16.250001907348633
    7. ')' → logprob: -17.000001907348633
    8. '
' → logprob: -18.125001907348633
    9. '   ' → logprob: -18.125001907348633
    10. '<|end|>' → logprob: -18.500001907348633

Token 831: ',x' (ID: 29748)
  Prédit: ',x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',x' → logprob: -0.021682949736714363
    2. ',' → logprob: -4.2716827392578125
    3. ',y' → logprob: -4.8966827392578125
    4. ' ,' → logprob: -10.896682739257812
    5. ',
' → logprob: -14.271682739257812
    6. 'x' → logprob: -15.896682739257812
    7. ',z' → logprob: -16.271682739257812
    8. ',,' → logprob: -16.646682739257812
    9. ',user' → logprob: -17.021682739257812
    10. ',c' → logprob: -17.021682739257812

Token 832: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.088346359931165e-07
    2. 'x' → logprob: -14.500000953674316
    3. '₂' → logprob: -15.500000953674316
    4. '```' → logprob: -16.375
    5. '1' → logprob: -16.625
    6. '۲' → logprob: -19.5
    7. ',' → logprob: -20.25
    8. '``' → logprob: -20.875
    9. ' ' → logprob: -21.0
    10. '２' → logprob: -21.0

Token 833: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.0003155625017825514
    2. ',' → logprob: -8.12531566619873
    3. ',x' → logprob: -11.37531566619873
    4. 'y' → logprob: -12.12531566619873
    5. ' ,' → logprob: -13.62531566619873
    6. ')' → logprob: -13.75031566619873
    7. ',
' → logprob: -16.000314712524414
    8. ',b' → logprob: -17.125314712524414
    9. ',user' → logprob: -17.750314712524414
    10. '```' → logprob: -17.750314712524414

Token 834: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. '```' → logprob: -18.25
    3. '۲' → logprob: -18.5
    4. '1' → logprob: -18.625
    5. 'y' → logprob: -19.0
    6. ')' → logprob: -19.375
    7. '₂' → logprob: -19.625
    8. ' ' → logprob: -19.75
    9. '２' → logprob: -21.125
    10. ',' → logprob: -21.125

Token 835: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5760530233383179
    2. ')' → logprob: -0.8260530233383179
    3. '                       ' → logprob: -10.07605266571045
    4. ')
' → logprob: -10.57605266571045
    5. '):
' → logprob: -10.82605266571045
    6. ')

' → logprob: -11.57605266571045
    7. '<|end|>' → logprob: -12.57605266571045
    8. ' )
' → logprob: -12.82605266571045
    9. ' )' → logprob: -13.20105266571045
    10. '                           ' → logprob: -13.57605266571045

Token 836: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.18450699746608734
    2. ' if' → logprob: -1.9345070123672485
    3. 'if' → logprob: -4.434506893157959
    4. '<|end|>' → logprob: -5.309506893157959
    5. '                        
' → logprob: -5.434506893157959
    6. '```' → logprob: -7.059506893157959
    7. ')' → logprob: -7.309506893157959
    8. '                           ' → logprob: -7.684506893157959
    9. '               ' → logprob: -8.934507369995117
    10. '                        ' → logprob: -9.059507369995117

Token 837: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.537699282169342
    2. '                       ' → logprob: -1.0376992225646973
    3. ' if' → logprob: -2.7876992225646973
    4. '           ' → logprob: -10.037699699401855
    5. '       ' → logprob: -11.537699699401855
    6. '                        
' → logprob: -11.787699699401855
    7. '               ' → logprob: -12.287699699401855
    8. '   ' → logprob: -13.162699699401855
    9. '                   ' → logprob: -13.287699699401855
    10. '	if' → logprob: -13.287699699401855

Token 838: ' has' (ID: 853)
  Prédit: 'has'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'has' → logprob: -0.038117337971925735
    2. ' has' → logprob: -3.2881174087524414
    3. ' not' → logprob: -10.663117408752441
    4. '                           ' → logprob: -10.913117408752441
    5. 'not' → logprob: -11.163117408752441
    6. '                       ' → logprob: -11.788117408752441
    7. '(has' → logprob: -12.538117408752441
    8. '	has' → logprob: -12.913117408752441
    9. '   ' → logprob: -13.538117408752441
    10. '                               ' → logprob: -13.663117408752441

Token 839: '_marker' (ID: 68466)
  Prédit: '_marker'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_marker' → logprob: -1.9361264946837764e-07
    2. 'marker' → logprob: -16.125
    3. '_mark' → logprob: -19.5
    4. '_indicator' → logprob: -20.75
    5. '```' → logprob: -21.0
    6. '_modifier' → logprob: -21.25
    7. '
' → logprob: -21.5
    8. ' _' → logprob: -21.875
    9. '(marker' → logprob: -22.0
    10. '\' → logprob: -22.0

Token 840: '(rect' (ID: 68123)
  Prédit: '(rect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rect' → logprob: -1.7432603272027336e-06
    2. ' (' → logprob: -13.625001907348633
    3. '(' → logprob: -14.750001907348633
    4. 'rect' → logprob: -17.125001907348633
    5. '(
' → logprob: -17.500001907348633
    6. '(Rect' → logprob: -18.000001907348633
    7. '(rec' → logprob: -18.250001907348633
    8. '	rect' → logprob: -19.750001907348633
    9. '(ret' → logprob: -19.875001907348633
    10. '```' → logprob: -19.875001907348633

Token 841: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008655699901282787
    2. ',b' → logprob: -4.758655548095703
    3. ' ,' → logprob: -10.133655548095703
    4. 'b' → logprob: -13.883655548095703
    5. ',s' → logprob: -16.633655548095703
    6. ')' → logprob: -16.758655548095703
    7. ',c' → logprob: -16.883655548095703
    8. ',k' → logprob: -17.008655548095703
    9. ',n' → logprob: -17.133655548095703
    10. ',user' → logprob: -17.258655548095703

Token 842: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12766671180725098
    2. '):
' → logprob: -2.127666711807251
    3. ')' → logprob: -7.752666473388672
    4. ' and' → logprob: -9.002666473388672
    5. '):
' → logprob: -9.627666473388672
    6. ':' → logprob: -9.877666473388672
    7. '                           ' → logprob: -10.377666473388672
    8. '):

' → logprob: -11.127666473388672
    9. '                       ' → logprob: -11.252666473388672
    10. 'and' → logprob: -13.377666473388672

Token 843: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.0005346827092580497
    2. '                       ' → logprob: -8.625535011291504
    3. '                               ' → logprob: -8.625535011291504
    4. '           ' → logprob: -9.875535011291504
    5. '                   ' → logprob: -9.875535011291504
    6. ' and' → logprob: -10.500535011291504
    7. '               ' → logprob: -11.250535011291504
    8. '```' → logprob: -11.750535011291504
    9. '                            
' → logprob: -12.375535011291504
    10. '                                   ' → logprob: -12.625535011291504

Token 844: ' candidate' (ID: 17098)
  Prédit: ' rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rect' → logprob: -0.4968876242637634
    2. 'rect' → logprob: -1.4968876838684082
    3. 'candidate' (adapté à ' candidate') → logprob: -2.371887683868408
    4. ' candidate' → logprob: -2.871887683868408
    5. '                               ' → logprob: -4.621887683868408
    6. '                           ' → logprob: -4.871887683868408
    7. '               ' → logprob: -8.62188720703125
    8. '   ' → logprob: -9.49688720703125
    9. '                                   ' → logprob: -10.37188720703125
    10. '           ' → logprob: -10.99688720703125

Token 845: '_rect' (ID: 39269)
  Prédit: '_rect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rect' → logprob: -1.8312570318812504e-05
    2. 'rect' → logprob: -11.125018119812012
    3. 's' → logprob: -12.625018119812012
    4. '_' → logprob: -16.000019073486328
    5. '```' → logprob: -17.375019073486328
    6. 'Rect' → logprob: -17.500019073486328
    7. '
' → logprob: -17.875019073486328
    8. '	rect' → logprob: -18.250019073486328
    9. '   ' → logprob: -18.375019073486328
    10. 'Rects' → logprob: -18.500019073486328

Token 846: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: 0.0
    2. '.append' → logprob: -18.25
    3. 'ats' → logprob: -18.5
    4. 'rect' → logprob: -18.625
    5. 'sts' → logprob: -18.875
    6. '```' → logprob: -19.25
    7. '[' → logprob: -19.625
    8. ' =' → logprob: -20.125
    9. '   ' → logprob: -20.125
    10. 'ects' → logprob: -20.25

Token 847: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -3.214019307051785e-05
    2. '.' → logprob: -10.375032424926758
    3. ' .' → logprob: -14.750032424926758
    4. '.app' → logprob: -15.500032424926758
    5. 'append' → logprob: -15.625032424926758
    6. '.Append' → logprob: -17.125032424926758
    7. '.setdefault' → logprob: -17.250032424926758
    8. '.add' → logprob: -18.000032424926758
    9. '.ap' → logprob: -18.375032424926758
    10. '.push' → logprob: -18.750032424926758

Token 848: '(rect' (ID: 68123)
  Prédit: '(rect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rect' → logprob: -1.6240566083070007e-06
    2. '((' → logprob: -14.250001907348633
    3. ' (' → logprob: -14.500001907348633
    4. '(' → logprob: -15.125001907348633
    5. 'rect' → logprob: -15.625001907348633
    6. '(Rect' → logprob: -17.125001907348633
    7. '(
' → logprob: -18.125001907348633
    8. '(rec' → logprob: -18.875001907348633
    9. ' rect' → logprob: -18.875001907348633
    10. '(ret' → logprob: -19.000001907348633

Token 849: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001677675754763186
    2. '<|end|>' → logprob: -6.501677513122559
    3. '                           ' → logprob: -9.751677513122559
    4. '                       ' → logprob: -10.126677513122559
    5. '<|end|>' → logprob: -10.626677513122559
    6. '           ' → logprob: -11.751677513122559
    7. ' )' → logprob: -11.751677513122559
    8. ')return' → logprob: -11.876677513122559
    9. '       ' → logprob: -12.126677513122559
    10. ')}' → logprob: -12.501677513122559

Token 850: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14296121895313263
    2. '           ' → logprob: -2.017961263656616
    3. '```' → logprob: -9.392961502075195
    4. '   ' → logprob: -9.517961502075195
    5. '               ' → logprob: -9.892961502075195
    6. '
' → logprob: -11.017961502075195
    7. 'for' → logprob: -11.017961502075195
    8. '                   ' → logprob: -11.267961502075195
    9. '                       ' → logprob: -11.642961502075195
    10. '                           ' → logprob: -11.892961502075195

Token 851: ' rect' (ID: 13107)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11354458332061768
    2. 'rect' (adapté à ' rect') → logprob: -2.238544464111328
    3. '           ' → logprob: -7.738544464111328
    4. '   ' → logprob: -9.363544464111328
    5. '```' → logprob: -9.488544464111328
    6. 'for' → logprob: -9.738544464111328
    7. 'rest' → logprob: -10.863544464111328
    8. '        
' → logprob: -11.738544464111328
    9. ' rect' → logprob: -11.863544464111328
    10. 'import' → logprob: -11.988544464111328

Token 852: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -9.088346359931165e-07
    2. '[' → logprob: -15.000000953674316
    3. '[s' → logprob: -15.250000953674316
    4. 'for' → logprob: -16.625
    5. '```' → logprob: -16.75
    6. '=' → logprob: -16.875
    7. '{s' → logprob: -18.0
    8. 'b' → logprob: -18.125
    9. 'angles' → logprob: -18.375
    10. '{' → logprob: -18.75

Token 853: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -1.5048530030981055e-06
    2. '[' → logprob: -14.250001907348633
    3. 'b' → logprob: -14.375001907348633
    4. '```' → logprob: -16.250001907348633
    5. ' [' → logprob: -16.500001907348633
    6. '[B' → logprob: -17.125001907348633
    7. '\[' → logprob: -17.625001907348633
    8. '[c' → logprob: -18.500001907348633
    9. '\b' → logprob: -18.625001907348633
    10. '	b' → logprob: -18.875001907348633

Token 854: ']' (ID: 60)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.07508926838636398
    2. '].' → logprob: -2.7000892162323
    3. '.' → logprob: -5.950089454650879
    4. ').' → logprob: -6.075089454650879
    5. '.setdefault' → logprob: -8.700089454650879
    6. '.app' → logprob: -11.075089454650879
    7. '.extend' → logprob: -11.200089454650879
    8. ']' → logprob: -11.825089454650879
    9. '>.' → logprob: -11.950089454650879
    10. '}.' → logprob: -12.325089454650879

Token 855: ' =' (ID: 314)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.1945115327835083
    2. '=' → logprob: -2.1945114135742188
    3. '.' → logprob: -2.9445114135742188
    4. '.setdefault' → logprob: -5.444511413574219
    5. '.=' → logprob: -5.569511413574219
    6. '.extend' → logprob: -5.694511413574219
    7. '[' → logprob: -7.694511413574219
    8. '+=' → logprob: -7.819511413574219
    9. 'append' → logprob: -9.194511413574219
    10. '=.' → logprob: -9.819511413574219

Token 856: ' candidate' (ID: 17098)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'candidate' → logprob: -0.00033546582562848926
    2. ' candidate' → logprob: -8.000335693359375
    3. '(candidate' → logprob: -17.125335693359375
    4. '   ' → logprob: -18.625335693359375
    5. '_candidate' → logprob: -20.750335693359375
    6. '           ' → logprob: -20.750335693359375
    7. 'rect' → logprob: -20.875335693359375
    8. 'c' → logprob: -21.000335693359375
    9. 'Candidate' → logprob: -21.000335693359375
    10. '[' → logprob: -21.125335693359375

Token 857: '_rect' (ID: 39269)
  Prédit: '_rect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rect' → logprob: -0.3700765073299408
    2. 't' → logprob: -1.6200765371322632
    3. 's' → logprob: -3.2450764179229736
    4. 'ct' → logprob: -3.2450764179229736
    5. 'cts' → logprob: -3.8700764179229736
    6. 'ts' → logprob: -4.870076656341553
    7. 'rect' → logprob: -5.370076656341553
    8. 'ects' → logprob: -9.370076179504395
    9. '_ct' → logprob: -9.620076179504395
    10. 'r' → logprob: -9.745076179504395

Token 858: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1472419600977446e-06
    2. 'ts' → logprob: -13.750000953674316
    3. 't' → logprob: -17.000001907348633
    4. '[' → logprob: -20.500001907348633
    5. '[s' → logprob: -20.500001907348633
    6. 'st' → logprob: -20.625001907348633
    7. 'sts' → logprob: -21.125001907348633
    8. 'ats' → logprob: -21.500001907348633
    9. 'cts' → logprob: -22.125001907348633
    10. 'ents' → logprob: -22.500001907348633

Token 859: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015113748610019684
    2. '
' → logprob: -4.890113830566406
    3. '<|end|>' → logprob: -5.390113830566406
    4. '```' → logprob: -6.640113830566406
    5. '   ' → logprob: -7.515113830566406
    6. 'import' → logprob: -7.890113830566406
    7. 'from' → logprob: -8.015113830566406
    8. '        
' → logprob: -8.765113830566406
    9. '<|end|>' → logprob: -9.890113830566406
    10. 'def' → logprob: -10.140113830566406

Token 860: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23511230945587158
    2. '```' → logprob: -2.485112190246582
    3. 'from' → logprob: -3.110112190246582
    4. '   ' → logprob: -3.235112190246582
    5. '
' → logprob: -3.735112190246582
    6. 'def' → logprob: -5.235112190246582
    7. 'import' → logprob: -5.235112190246582
    8. '        
' → logprob: -5.860112190246582
    9. '<|end|>' → logprob: -6.360112190246582
    10. ' from' → logprob: -6.985112190246582

Token 861: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1523047387599945
    2. '
' → logprob: -2.4023046493530273
    3. '   ' → logprob: -3.9023046493530273
    4. '<|end|>' → logprob: -4.277304649353027
    5. 'import' → logprob: -5.402304649353027
    6. '        
' → logprob: -5.527304649353027
    7. '```' → logprob: -5.777304649353027
    8. 'from' → logprob: -5.902304649353027
    9. '    
' → logprob: -7.402304649353027
    10. '#' (adapté à ' #') → logprob: -7.527304649353027

Token 862: ' Si' (ID: 7832)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5697970390319824
    2. '
' → logprob: -1.0697970390319824
    3. 'import' → logprob: -3.1947970390319824
    4. '#' → logprob: -4.069797039031982
    5. '   ' → logprob: -4.069797039031982
    6. 'from' → logprob: -5.194797039031982
    7. '        
' → logprob: -5.819797039031982
    8. '```' → logprob: -6.194797039031982
    9. 'def' → logprob: -6.444797039031982
    10. '    
' → logprob: -7.444797039031982

Token 863: ' aucun' (ID: 41678)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.16028577089309692
    2. 'not' → logprob: -1.9102857112884521
    3. ' not' → logprob: -10.410285949707031
    4. '   ' → logprob: -11.035285949707031
    5. '#' → logprob: -12.035285949707031
    6. ' len' → logprob: -12.410285949707031
    7. '           ' → logprob: -12.785285949707031
    8. '       ' → logprob: -13.660285949707031
    9. '(len' → logprob: -14.785285949707031
    10. 'rect' → logprob: -14.785285949707031

Token 864: ' rectangle' (ID: 45808)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'candidate' → logprob: -0.1939038634300232
    2. 'rect' → logprob: -1.943903923034668
    3. 'if' → logprob: -4.318903923034668
    4. ' candidate' → logprob: -4.818903923034668
    5. 'for' → logprob: -5.068903923034668
    6. 'continue' → logprob: -6.568903923034668
    7. 'b' → logprob: -7.068903923034668
    8. ' for' → logprob: -7.318903923034668
    9. ' if' → logprob: -7.443903923034668
    10. ' rect' → logprob: -7.943903923034668

Token 865: ' possible' (ID: 4149)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.8274545669555664
    2. '           ' → logprob: -0.9524545669555664
    3. ' ==' → logprob: -2.0774545669555664
    4. 'b' → logprob: -3.9524545669555664
    5. 'for' → logprob: -4.827454566955566
    6. '```' → logprob: -5.077454566955566
    7. ' for' → logprob: -5.702454566955566
    8. 'n' → logprob: -6.452454566955566
    9. '               ' → logprob: -6.702454566955566
    10. '=' → logprob: -6.702454566955566

Token 866: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16494132578372955
    2. 'if' → logprob: -2.7899413108825684
    3. '               ' → logprob: -2.9149413108825684
    4. ' if' → logprob: -4.289941310882568
    5. 'and' → logprob: -5.039941310882568
    6. ':' → logprob: -5.414941310882568
    7. ' for' → logprob: -5.789941310882568
    8. 'for' → logprob: -5.914941310882568
    9. ' and' → logprob: -6.039941310882568
    10. ' or' → logprob: -6.789941310882568

Token 867: ' on' (ID: 402)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1403060406446457
    2. '               ' → logprob: -2.140305995941162
    3. ' print' → logprob: -4.640305995941162
    4. '           ' → logprob: -6.265305995941162
    5. '```' → logprob: -7.515305995941162
    6. '#' → logprob: -7.765305995941162
    7. '#print' → logprob: -8.14030647277832
    8. '   ' → logprob: -8.26530647277832
    9. '                   ' → logprob: -9.76530647277832
    10. 'return' → logprob: -9.89030647277832

Token 868: ' peut' (ID: 9216)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6212030649185181
    2. ' continue' → logprob: -1.621203064918518
    3. 'continue' → logprob: -1.746203064918518
    4. '#' → logprob: -3.6212029457092285
    5. '```' → logprob: -4.2462029457092285
    6. 'if' → logprob: -4.4962029457092285
    7. 'n' → logprob: -4.4962029457092285
    8. '       ' → logprob: -5.3712029457092285
    9. 'print' → logprob: -5.4962029457092285
    10. 'return' → logprob: -6.2462029457092285

Token 869: ' s' (ID: 265)
  Prédit: 'im'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'im' → logprob: -1.1206969022750854
    2. '           ' → logprob: -1.2456969022750854
    3. 'print' → logprob: -1.6206969022750854
    4. '```' → logprob: -2.620697021484375
    5. 'contin' → logprob: -3.120697021484375
    6. ' print' → logprob: -3.745697021484375
    7. '   ' → logprob: -4.120697021484375
    8. 'continue' → logprob: -4.495697021484375
    9. ' continuer' → logprob: -5.245697021484375
    10. 'import' → logprob: -5.370697021484375

Token 870: ''ar' (ID: 54307)
  Prédit: 'ys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ys' → logprob: -1.0048032999038696
    2. 'ystem' → logprob: -1.8798032999038696
    3. 'ort' → logprob: -2.50480318069458
    4. 'kip' → logprob: -2.87980318069458
    5. 'break' → logprob: -2.87980318069458
    6. 'hort' → logprob: -3.00480318069458
    7. 'ur' → logprob: -3.00480318069458
    8. '```' → logprob: -4.00480318069458
    9. 'avoir' → logprob: -4.25480318069458
    10. 'u' → logprob: -4.25480318069458

Token 871: 'reter' (ID: 69430)
  Prédit: 'reter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reter' → logprob: -0.4749108552932739
    2. 'r' → logprob: -0.9749108552932739
    3. 'ret' → logprob: -7.474910736083984
    4. 'rete' → logprob: -9.224910736083984
    5. 'ré' → logprob: -9.474910736083984
    6. 're' → logprob: -10.099910736083984
    7. 'roger' → logprob: -11.349910736083984
    8. 'rer' → logprob: -11.724910736083984
    9. 'ro' → logprob: -12.099910736083984
    10. 'rée' → logprob: -12.474910736083984

Token 872: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006212578155100346
    2. '               ' → logprob: -5.5062127113342285
    3. '       ' → logprob: -6.2562127113342285
    4. 'if' → logprob: -9.38121223449707
    5. ' if' → logprob: -9.75621223449707
    6. '                   ' → logprob: -10.88121223449707
    7. '```' → logprob: -10.88121223449707
    8. '   ' → logprob: -11.13121223449707
    9. '                       ' → logprob: -11.38121223449707
    10. '                           ' → logprob: -12.88121223449707

Token 873: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.027552753686904907
    2. '       ' → logprob: -3.652552843093872
    3. '```' → logprob: -6.777552604675293
    4. '   ' → logprob: -9.652552604675293
    5. '<|end|>' → logprob: -10.902552604675293
    6. '               ' → logprob: -11.277552604675293
    7. ' if' → logprob: -12.527552604675293
    8. '	       ' → logprob: -12.652552604675293
    9. 'if' → logprob: -13.027552604675293
    10. '``' → logprob: -13.277552604675293

Token 874: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4754819869995117
    2. '       ' → logprob: -1.2254819869995117
    3. 'if' (adapté à ' if') → logprob: -2.4754819869995117
    4. '   ' → logprob: -7.725481986999512
    5. ' if' → logprob: -8.475481986999512
    6. '```' → logprob: -10.725481986999512
    7. '               ' → logprob: -12.850481986999512
    8. 'import' → logprob: -15.225481986999512
    9. ' ' → logprob: -15.350481986999512
    10. '	if' → logprob: -15.600481986999512

Token 875: ' not' (ID: 625)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.5215817093849182
    2. 'not' → logprob: -1.5215816497802734
    3. ' not' → logprob: -1.7715816497802734
    4. ' len' → logprob: -4.021581649780273
    5. '   ' → logprob: -9.896581649780273
    6. '           ' → logprob: -12.271581649780273
    7. '       ' → logprob: -12.646581649780273
    8. ' ' → logprob: -13.396581649780273
    9. '(len' → logprob: -14.146581649780273
    10. 'False' → logprob: -14.146581649780273

Token 876: ' candidate' (ID: 17098)
  Prédit: 'candidate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'candidate' → logprob: -0.03445787727832794
    2. 'rect' → logprob: -3.4094579219818115
    3. ' candidate' → logprob: -7.159457683563232
    4. ' rect' → logprob: -10.53445816040039
    5. '(candidate' → logprob: -12.78445816040039
    6. 'rectangle' → logprob: -13.65945816040039
    7. 'cand' → logprob: -14.03445816040039
    8. 'recipient' → logprob: -14.90945816040039
    9. '   ' → logprob: -15.15945816040039
    10. 'customer' → logprob: -15.15945816040039

Token 877: '_rect' (ID: 39269)
  Prédit: '_rect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rect' → logprob: -0.0013619012897834182
    2. 'rect' → logprob: -6.626361846923828
    3. 's' → logprob: -10.251361846923828
    4. 'Rects' → logprob: -15.751361846923828
    5. ' rect' → logprob: -15.876361846923828
    6. '_' → logprob: -16.751361846923828
    7. '(rect' → logprob: -16.876361846923828
    8. '	rect' → logprob: -17.001361846923828
    9. '
' → logprob: -17.126361846923828
    10. '   ' → logprob: -17.126361846923828

Token 878: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0007447104435414076
    2. 'ts' → logprob: -7.250744819641113
    3. 'ects' → logprob: -10.625744819641113
    4. 'cts' → logprob: -11.750744819641113
    5. 'ct' → logprob: -14.375744819641113
    6. 'ds' → logprob: -14.625744819641113
    7. 't' → logprob: -14.750744819641113
    8. 'sts' → logprob: -14.750744819641113
    9. 'ats' → logprob: -14.875744819641113
    10. 'ect' → logprob: -15.625744819641113

Token 879: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5077689290046692
    2. ':
' → logprob: -1.0077688694000244
    3. '           ' → logprob: -4.1327691078186035
    4. ':return' → logprob: -4.1327691078186035
    5. '               ' → logprob: -7.3827691078186035
    6. '       ' → logprob: -8.757768630981445
    7. '   ' → logprob: -9.632768630981445
    8. 'return' → logprob: -9.882768630981445
    9. '                   ' → logprob: -10.132768630981445
    10. '```' → logprob: -11.007768630981445

Token 880: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22741259634494781
    2. '               ' → logprob: -1.6024125814437866
    3. 'return' → logprob: -7.477412700653076
    4. 'print' → logprob: -7.602412700653076
    5. '```' → logprob: -7.602412700653076
    6. '       ' → logprob: -8.602412223815918
    7. ' return' → logprob: -8.977412223815918
    8. ' print' → logprob: -9.602412223815918
    9. '   ' → logprob: -11.227412223815918
    10. '                   ' → logprob: -11.602412223815918

Token 881: ' rect' (ID: 13107)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.22114306688308716
    2. '           ' → logprob: -1.7211430072784424
    3. 'return' → logprob: -4.8461432456970215
    4. ' print' → logprob: -5.0961432456970215
    5. '               ' → logprob: -5.7211432456970215
    6. '```' → logprob: -6.5961432456970215
    7. '       ' → logprob: -7.8461432456970215
    8. '   ' → logprob: -8.471142768859863
    9. 'continue' → logprob: -8.721142768859863
    10. ' return' → logprob: -9.096142768859863

Token 882: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.08001638203859329
    2. '                   ' → logprob: -3.4550163745880127
    3. '               ' → logprob: -3.9550163745880127
    4. '           ' → logprob: -4.080016613006592
    5. 'print' → logprob: -5.830016613006592
    6. 'eturn' → logprob: -6.580016613006592
    7. 'def' → logprob: -6.955016613006592
    8. 'return' → logprob: -6.955016613006592
    9. '   ' → logprob: -7.205016613006592
    10. '                       ' → logprob: -7.330016613006592

Token 883: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.0008304747752845287
    2. '=' → logprob: -7.62583065032959
    3. '=b' → logprob: -9.00083065032959
    4. ' =' → logprob: -9.37583065032959
    5. '==' → logprob: -9.75083065032959
    6. '=None' → logprob: -10.00083065032959
    7. 'b' → logprob: -11.12583065032959
    8. '[' → logprob: -12.37583065032959
    9. 'None' → logprob: -12.62583065032959
    10. '.clear' → logprob: -13.00083065032959

Token 884: ']' (ID: 60)
  Prédit: '[b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.308557391166687
    2. '=' → logprob: -1.933557391166687
    3. '=b' → logprob: -3.1835575103759766
    4. ' =' → logprob: -3.8085575103759766
    5. '==' → logprob: -4.058557510375977
    6. ']' → logprob: -4.933557510375977
    7. ']=' → logprob: -5.433557510375977
    8. ' is' → logprob: -5.558557510375977
    9. ']==' → logprob: -5.558557510375977
    10. ')' → logprob: -5.683557510375977

Token 885: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.007414482068270445
    2. '[b' → logprob: -6.2574143409729
    3. '=b' → logprob: -6.7574143409729
    4. 'is' → logprob: -7.0074143409729
    5. 'return' → logprob: -7.1324143409729
    6. '==' → logprob: -7.2574143409729
    7. '=None' → logprob: -7.3824143409729
    8. ' =' → logprob: -7.6324143409729
    9. '[' → logprob: -7.7574143409729
    10. '.clear' → logprob: -9.257414817810059

Token 886: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.02347501739859581
    2. 'None' → logprob: -3.773474931716919
    3. '[]
' → logprob: -8.39847469329834
    4. '[]

' → logprob: -13.27347469329834
    5. '[]}' → logprob: -13.64847469329834
    6. 'False' → logprob: -14.77347469329834
    7. '[' → logprob: -15.14847469329834
    8. ' None' → logprob: -15.39847469329834
    9. '[]"' → logprob: -15.39847469329834
    10. ' []' → logprob: -15.77347469329834

Token 887: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 888: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18150873482227325
    2. 'from' → logprob: -2.306508779525757
    3. '
' → logprob: -4.056508541107178
    4. '#' (adapté à ' #') → logprob: -4.181508541107178
    5. 'import' → logprob: -4.181508541107178
    6. '   ' → logprob: -4.431508541107178
    7. '```' → logprob: -5.306508541107178
    8. '        
' → logprob: -7.431508541107178
    9. ' from' → logprob: -7.431508541107178
    10. 'def' → logprob: -8.556509017944336

Token 889: ' Si' (ID: 7832)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.6765650510787964
    2. '#' → logprob: -1.5515650510787964
    3. 'from' → logprob: -1.9265650510787964
    4. 'def' → logprob: -2.301565170288086
    5. 'assigned' → logprob: -4.051565170288086
    6. 'import' → logprob: -5.051565170288086
    7. '   ' → logprob: -5.801565170288086
    8. 'solutions' → logprob: -6.426565170288086
    9. 'assign' → logprob: -6.801565170288086
    10. 'visited' → logprob: -7.051565170288086

Token 890: ' pour' (ID: 1930)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.06010132282972336
    2. ' any' → logprob: -3.560101270675659
    3. 'not' → logprob: -4.060101509094238
    4. 'len' → logprob: -4.560101509094238
    5. ' not' → logprob: -6.435101509094238
    6. 'all' → logprob: -7.935101509094238
    7. ' len' → logprob: -9.060101509094238
    8. 'None' → logprob: -9.685101509094238
    9. '   ' → logprob: -10.685101509094238
    10. '(any' → logprob: -12.560101509094238

Token 891: ' quelque' (ID: 36359)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.22372227907180786
    2. 'any' → logprob: -1.848722219467163
    3. ' b' → logprob: -3.848722219467163
    4. ' any' → logprob: -4.723722457885742
    5. 'not' → logprob: -4.723722457885742
    6. ' not' → logprob: -6.473722457885742
    7. 'all' → logprob: -7.098722457885742
    8. 'len' → logprob: -7.098722457885742
    9. '_any' → logprob: -8.598722457885742
    10. '#' → logprob: -9.223722457885742

Token 892: ' ache' (ID: 27427)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.043056052178144455
    2. 'ache' → logprob: -4.043056011199951
    3. ' b' → logprob: -4.793056011199951
    4. 'raison' → logprob: -5.668056011199951
    5. 'buyer' → logprob: -5.668056011199951
    6. '#' → logprob: -5.918056011199951
    7. ' ache' → logprob: -6.918056011199951
    8. 'ach' → logprob: -7.168056011199951
    9. '_' → logprob: -7.293056011199951
    10. 'cho' → logprob: -7.543056011199951

Token 893: 'teur' (ID: 45262)
  Prédit: 'teur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'teur' → logprob: -0.001156770158559084
    2. 'te' → logprob: -6.876156806945801
    3. 't' → logprob: -10.2511568069458
    4. 'teurs' → logprob: -10.6261568069458
    5. '#' → logprob: -10.7511568069458
    6. 'un' → logprob: -11.5011568069458
    7. 'b' → logprob: -11.6261568069458
    8. 'ter' → logprob: -12.0011568069458
    9. 'reur' → logprob: -12.8761568069458
    10. 'eur' → logprob: -13.1261568069458

Token 894: ' il' (ID: 1793)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6023648977279663
    2. 'in' → logprob: -1.4773648977279663
    3. ' in' → logprob: -1.6023648977279663
    4. ' not' → logprob: -4.727365016937256
    5. ' b' → logprob: -5.102365016937256
    6. 'not' → logprob: -5.852365016937256
    7. '```' → logprob: -6.852365016937256
    8. '       ' → logprob: -7.102365016937256
    9. 'any' → logprob: -7.227365016937256
    10. '           ' → logprob: -7.727365016937256

Token 895: ' n' (ID: 297)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1224393844604492
    2. ' in' → logprob: -1.1224393844604492
    3. ' not' → logprob: -2.747439384460449
    4. 'n' → logprob: -2.747439384460449
    5. 'in' → logprob: -2.997439384460449
    6. ' n' → logprob: -2.997439384460449
    7. 'b' → logprob: -2.997439384460449
    8. ' b' → logprob: -4.122439384460449
    9. 'not' → logprob: -4.497439384460449
    10. ' any' → logprob: -5.247439384460449

Token 896: ''y' (ID: 27913)
  Prédit: 'ot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ot' → logprob: -0.44421741366386414
    2. 'rect' → logprob: -1.6942174434661865
    3. 'b' → logprob: -3.5692174434661865
    4. 'o' → logprob: -3.5692174434661865
    5. 'e' → logprob: -3.9442174434661865
    6. 'a' → logprob: -4.194217205047607
    7. 'not' → logprob: -4.694217205047607
    8. 'en' → logprob: -5.069217205047607
    9. 'n' → logprob: -5.194217205047607
    10. 'any' → logprob: -5.194217205047607

Token 897: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2665027678012848
    2. 'est' → logprob: -2.016502857208252
    3. 'pas' → logprob: -3.016502857208252
    4. ' pas' → logprob: -4.391502857208252
    5. 'rect' → logprob: -4.891502857208252
    6. ''est' → logprob: -5.016502857208252
    7. '==' → logprob: -5.016502857208252
    8. '       ' → logprob: -5.266502857208252
    9. 'in' → logprob: -6.141502857208252
    10. ' a' → logprob: -6.891502857208252

Token 898: ' pas' (ID: 2173)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.1334989070892334
    2. ' not' → logprob: -2.1334989070892334
    3. 'len' → logprob: -5.8834991455078125
    4. 'rect' → logprob: -6.2584991455078125
    5. '[]' → logprob: -6.7584991455078125
    6. 'pas' → logprob: -9.008499145507812
    7. ' ' → logprob: -9.133499145507812
    8. 'any' → logprob: -9.258499145507812
    9. '0' → logprob: -9.383499145507812
    10. ' pas' → logprob: -9.883499145507812

Token 899: ' de' (ID: 334)
  Prédit: 'rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rect' → logprob: -0.40716424584388733
    2. 'candidate' → logprob: -1.532164216041565
    3. ' candidate' → logprob: -2.5321643352508545
    4. ' rect' → logprob: -3.9071643352508545
    5. ' de' → logprob: -4.657164096832275
    6. 'de' → logprob: -6.407164096832275
    7. ' candidat' → logprob: -6.407164096832275
    8. '           ' → logprob: -6.657164096832275
    9. '       ' → logprob: -6.657164096832275
    10. ' any' → logprob: -7.032164096832275

Token 900: ' rectangle' (ID: 45808)
  Prédit: 'rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rect' → logprob: -0.7954039573669434
    2. 'candidate' → logprob: -0.9204039573669434
    3. 'c' → logprob: -2.1704039573669434
    4. ' candidate' → logprob: -4.170403957366943
    5. ' rect' → logprob: -5.045403957366943
    6. 'rectangle' → logprob: -5.295403957366943
    7. ' candidat' → logprob: -5.670403957366943
    8. ' candidats' → logprob: -6.170403957366943
    9. ' candidates' → logprob: -6.920403957366943
    10. 'possible' → logprob: -7.045403957366943

Token 901: ' possible' (ID: 4149)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.02066006511449814
    2. ' possible' → logprob: -4.020659923553467
    3. 'candidate' → logprob: -7.395659923553467
    4. '       ' → logprob: -7.895659923553467
    5. '           ' → logprob: -7.895659923553467
    6. 'c' → logprob: -8.020660400390625
    7. '_possible' → logprob: -8.145660400390625
    8. 's' → logprob: -9.020660400390625
    9. ':' → logprob: -9.395660400390625
    10. '   ' → logprob: -9.520660400390625

Token 902: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3527475595474243
    2. '           ' → logprob: -1.3527475595474243
    3. ':
' → logprob: -4.102747440338135
    4. ':' → logprob: -4.602747440338135
    5. ' or' → logprob: -4.727747440338135
    6. ',' → logprob: -6.727747440338135
    7. ' for' → logprob: -6.977747440338135
    8. 'for' → logprob: -8.102747917175293
    9. ' and' → logprob: -8.477747917175293
    10. 'and' → logprob: -8.727747917175293

Token 903: ' sortie' (ID: 52761)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09136499464511871
    2. 'print' → logprob: -2.716365098953247
    3. '       ' → logprob: -4.091364860534668
    4. ' print' → logprob: -5.716364860534668
    5. '   ' → logprob: -6.841364860534668
    6. 'return' → logprob: -9.966364860534668
    7. '```' → logprob: -10.216364860534668
    8. '               ' → logprob: -11.091364860534668
    9. ' return' → logprob: -11.966364860534668
    10. '
' → logprob: -12.091364860534668

Token 904: ' NA' (ID: 24259)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0272061750292778
    2. '       ' → logprob: -3.6522061824798584
    3. '               ' → logprob: -7.277205944061279
    4. '   ' → logprob: -9.527206420898438
    5. ':
' → logprob: -10.652206420898438
    6. ',' → logprob: -10.777206420898438
    7. ':' → logprob: -11.027206420898438
    8. '
' → logprob: -11.277206420898438
    9. '          ' → logprob: -11.277206420898438
    10. 'return' → logprob: -11.902206420898438

Token 905: ' immédi' (ID: 69896)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018737860955297947
    2. '           ' → logprob: -6.376873970031738
    3. '   ' → logprob: -9.376873970031738
    4. '
' → logprob: -9.751873970031738
    5. 'if' → logprob: -11.501873970031738
    6. '```' → logprob: -11.751873970031738
    7. ' if' → logprob: -12.251873970031738
    8. '               ' → logprob: -13.126873970031738
    9. 'import' → logprob: -13.626873970031738
    10. '        
' → logprob: -13.751873970031738

Token 906: 'ate' (ID: 379)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4850877523422241
    2. '               ' → logprob: -1.4850877523422241
    3. 'print' → logprob: -2.6100878715515137
    4. '       ' → logprob: -2.7350878715515137
    5. '   ' → logprob: -4.860087871551514
    6. '
' → logprob: -5.485087871551514
    7. 'if' → logprob: -6.735087871551514
    8. '              ' → logprob: -6.860087871551514
    9. '                   ' → logprob: -6.985087871551514
    10. 'import' → logprob: -7.235087871551514

Token 907: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002192137064412236
    2. '   ' → logprob: -6.75219202041626
    3. 'if' → logprob: -7.75219202041626
    4. '
' → logprob: -7.87719202041626
    5. '           ' → logprob: -8.877192497253418
    6. '```' → logprob: -10.377192497253418
    7. ' if' → logprob: -10.627192497253418
    8. 'import' → logprob: -12.127192497253418
    9. '        
' → logprob: -12.377192497253418
    10. 'for' → logprob: -12.752192497253418

Token 908: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004915529862046242
    2. '   ' → logprob: -7.750491619110107
    3. '```' → logprob: -10.00049114227295
    4. 'if' → logprob: -11.62549114227295
    5. '           ' → logprob: -12.25049114227295
    6. ' if' → logprob: -13.87549114227295
    7. '
' → logprob: -15.62549114227295
    8. 'import' → logprob: -15.75049114227295
    9. '<|end|>' → logprob: -16.250492095947266
    10. ' ' → logprob: -16.375492095947266

Token 909: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015278366627171636
    2. '   ' → logprob: -7.001527786254883
    3. 'if' (adapté à ' if') → logprob: -7.501527786254883
    4. 'for' → logprob: -9.751527786254883
    5. ' if' → logprob: -12.751527786254883
    6. 'empty' → logprob: -14.251527786254883
    7. '```' → logprob: -14.251527786254883
    8. ' for' → logprob: -14.626527786254883
    9. '           ' → logprob: -14.876527786254883
    10. '
' → logprob: -15.626527786254883

Token 910: ' any' (ID: 1062)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.31330031156539917
    2. ' any' → logprob: -1.313300371170044
    3. '   ' → logprob: -11.063300132751465
    4. 'not' → logprob: -11.688300132751465
    5. ' not' → logprob: -11.813300132751465
    6. '       ' → logprob: -12.188300132751465
    7. '(any' → logprob: -13.813300132751465
    8. '           ' → logprob: -14.188300132751465
    9. 'all' → logprob: -16.31330108642578
    10. '               ' → logprob: -16.93830108642578

Token 911: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.03725484013557434
    2. '(not' → logprob: -3.537254810333252
    3. 'len' → logprob: -5.537254810333252
    4. 'not' → logprob: -5.912254810333252
    5. '(rect' → logprob: -7.662254810333252
    6. '(b' → logprob: -8.16225528717041
    7. 'rect' → logprob: -10.41225528717041
    8. 'b' → logprob: -10.78725528717041
    9. '(' → logprob: -11.28725528717041
    10. '(r' → logprob: -12.16225528717041

Token 912: '(rect' (ID: 68123)
  Prédit: '(rect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rect' → logprob: -0.1270592361688614
    2. 'rect' → logprob: -2.6270592212677
    3. '(r' → logprob: -3.2520592212677
    4. '(v' → logprob: -5.377059459686279
    5. 'v' → logprob: -6.252059459686279
    6. 'r' → logprob: -7.627059459686279
    7. '(value' → logprob: -7.877059459686279
    8. '(candidate' → logprob: -7.877059459686279
    9. 'candidate' → logprob: -8.752058982849121
    10. '(rs' → logprob: -9.127058982849121

Token 913: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0012673746095970273
    2. 'rect' → logprob: -7.251267433166504
    3. '[b' → logprob: -8.126267433166504
    4. '(rect' → logprob: -8.501267433166504
    5. '(b' → logprob: -10.251267433166504
    6. 'b' → logprob: -11.876267433166504
    7. '[s' → logprob: -12.251267433166504
    8. '==' → logprob: -13.376267433166504
    9. 'r' → logprob: -13.376267433166504
    10. '[r' → logprob: -13.376267433166504

Token 914: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.0013378625735640526
    2. 'b' → logprob: -6.626338005065918
    3. '(b' → logprob: -11.501338005065918
    4. ')' → logprob: -13.751338005065918
    5. ')b' → logprob: -15.626338005065918
    6. '[_' → logprob: -15.626338005065918
    7. ')==' → logprob: -16.1263370513916
    8. '[' → logprob: -16.7513370513916
    9. '_b' → logprob: -17.0013370513916
    10. '
' → logprob: -17.6263370513916

Token 915: '])' (ID: 4636)
  Prédit: ')=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')==' → logprob: -0.5100233554840088
    2. ')' → logprob: -1.2600233554840088
    3. '])' → logprob: -2.260023355484009
    4. '[b' → logprob: -4.51002311706543
    5. ']==' → logprob: -8.01002311706543
    6. '==' → logprob: -9.01002311706543
    7. '[])' → logprob: -10.63502311706543
    8. 'b' → logprob: -11.01002311706543
    9. '})' → logprob: -11.76002311706543
    10. ' )' → logprob: -12.01002311706543

Token 916: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.011264618486166
    2. ' ==' → logprob: -4.511264801025391
    3. ')==' → logprob: -9.01126480102539
    4. '()==' → logprob: -9.38626480102539
    5. ']==' → logprob: -11.88626480102539
    6. '```' → logprob: -14.13626480102539
    7. '==
' → logprob: -14.26126480102539
    8. '0' → logprob: -14.76126480102539
    9. '()' → logprob: -14.76126480102539
    10. '===' → logprob: -14.76126480102539

Token 917: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -15.50000286102295
    4. '       ' → logprob: -17.375003814697266
    5. '```' → logprob: -17.375003814697266
    6. '=' → logprob: -18.125003814697266
    7. '           ' → logprob: -18.750003814697266
    8. '  ' → logprob: -18.750003814697266
    9. '    ' → logprob: -19.750003814697266
    10. 'for' → logprob: -20.000003814697266

Token 918: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '```' → logprob: -18.125001907348633
    4. '=' → logprob: -18.875001907348633
    5. '==' → logprob: -19.625001907348633
    6. '   ' → logprob: -20.000001907348633
    7. '۰' → logprob: -20.000001907348633
    8. 'zero' → logprob: -20.125001907348633
    9. 'for' → logprob: -20.500001907348633
    10. ')' → logprob: -20.625001907348633

Token 919: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.12768696248531342
    2. 'for' → logprob: -2.1276869773864746
    3. ')' → logprob: -7.752686977386475
    4. '       ' → logprob: -8.627686500549316
    5. '           ' → logprob: -9.627686500549316
    6. '   ' → logprob: -10.627686500549316
    7. ' or' → logprob: -10.627686500549316
    8. '               ' → logprob: -11.627686500549316
    9. '        ' → logprob: -12.502686500549316
    10. '    ' → logprob: -12.627686500549316

Token 920: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.1807059794664383
    2. 'rect' → logprob: -1.9307060241699219
    3. 'buyer' → logprob: -3.930706024169922
    4. ' b' → logprob: -8.180706024169922
    5. ' rect' → logprob: -8.555706024169922
    6. ' buyer' → logprob: -9.180706024169922
    7. 'buy' → logprob: -11.555706024169922
    8. 'bid' → logprob: -11.618206024169922
    9. 'Buyer' → logprob: -11.868206024169922
    10. 'r' → logprob: -11.930706024169922

Token 921: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07891545444726944
    2. 'in' → logprob: -2.5789153575897217
    3. ')' → logprob: -10.9539155960083
    4. 'b' → logprob: -12.2039155960083
    5. 'for' → logprob: -13.7039155960083
    6. ' for' → logprob: -14.3289155960083
    7. ' ' → logprob: -14.3289155960083
    8. '   ' → logprob: -15.7039155960083
    9. '```' → logprob: -16.078914642333984
    10. ' )' → logprob: -16.203914642333984

Token 922: ' buyer' (ID: 28061)
  Prédit: 'rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rect' → logprob: -0.3496028184890747
    2. 'buyer' → logprob: -1.2246028184890747
    3. ' buyer' → logprob: -7.099602699279785
    4. ' rect' → logprob: -8.474602699279785
    5. 'buy' → logprob: -9.349602699279785
    6. 'Buyer' → logprob: -11.599602699279785
    7. 'buyers' → logprob: -11.724602699279785
    8. 'b' → logprob: -12.599602699279785
    9. 'boy' → logprob: -13.849602699279785
    10. '(rect' → logprob: -14.287102699279785

Token 923: '_info' (ID: 6744)
  Prédit: '_info'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_info' → logprob: -0.001926374970935285
    2. 's' → logprob: -6.501926422119141
    3. 'info' → logprob: -8.37692642211914
    4. 'rect' → logprob: -8.75192642211914
    5. '_rect' → logprob: -11.50192642211914
    6. '_infos' → logprob: -12.00192642211914
    7. 'in' → logprob: -12.50192642211914
    8. ')' → logprob: -12.50192642211914
    9. 'Info' → logprob: -12.50192642211914
    10. '_INFO' → logprob: -13.12692642211914

Token 924: '):
' (ID: 1883)
  Prédit: '.keys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.keys' → logprob: -0.026874445378780365
    2. ')' → logprob: -4.151874542236328
    3. '):
' → logprob: -5.276874542236328
    4. 'keys' → logprob: -5.901874542236328
    5. '):' → logprob: -6.526874542236328
    6. ' in' → logprob: -7.151874542236328
    7. '   ' → logprob: -8.776874542236328
    8. '	keys' → logprob: -8.776874542236328
    9. ')==' → logprob: -9.651874542236328
    10. '):

' → logprob: -9.776874542236328

Token 925: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04692889004945755
    2. ':
' → logprob: -3.546928882598877
    3. '       ' → logprob: -4.171928882598877
    4. ':' → logprob: -6.671928882598877
    5. '```' → logprob: -8.796929359436035
    6. '():
' → logprob: -9.296929359436035
    7. '):
' → logprob: -9.671929359436035
    8. ':return' → logprob: -12.171929359436035
    9. '          ' → logprob: -12.546929359436035
    10. '   ' → logprob: -12.671929359436035

Token 926: ' print' (ID: 2123)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.48582205176353455
    2. 'print' (adapté à ' print') → logprob: -0.9858220815658569
    3. '       ' → logprob: -4.6108222007751465
    4. ' print' → logprob: -7.1108222007751465
    5. '```' → logprob: -7.2358222007751465
    6. '
' → logprob: -9.110821723937988
    7. '   ' → logprob: -10.110821723937988
    8. '               ' → logprob: -10.735821723937988
    9. 'return' → logprob: -11.610821723937988
    10. '{
' → logprob: -12.360821723937988

Token 927: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -7.553032628493384e-05
    2. '('' → logprob: -9.500075340270996
    3. '(' → logprob: -14.375075340270996
    4. ' ("' → logprob: -18.875076293945312
    5. '"' → logprob: -19.375076293945312
    6. '(
' → logprob: -20.375076293945312
    7. '("""' → logprob: -22.625076293945312
    8. '(-' → logprob: -22.750076293945312
    9. '()' → logprob: -23.000076293945312
    10. '("\' → logprob: -23.250076293945312

Token 928: 'NA' (ID: 9555)
  Prédit: 'NA'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NA' → logprob: -6.704273118884885e-07
    2. ' NA' → logprob: -15.250000953674316
    3. '"' → logprob: -15.625000953674316
    4. 'NO' → logprob: -16.0
    5. 'N' → logprob: -16.375
    6. '   ' → logprob: -17.0
    7. 'Na' → logprob: -17.5
    8. 'na' → logprob: -18.625
    9. ''' → logprob: -20.0
    10. 'NI' → logprob: -20.875

Token 929: '")
' (ID: 1896)
  Prédit: '")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.059208083897829056
    2. '           ' → logprob: -3.0592081546783447
    3. '")' → logprob: -4.934207916259766
    4. '")
' → logprob: -5.934207916259766
    5. '       ' → logprob: -7.434207916259766
    6. '               ' → logprob: -9.934207916259766
    7. ')")
' → logprob: -10.059207916259766
    8. '   ' → logprob: -11.184207916259766
    9. ')
' → logprob: -11.434207916259766
    10. '                   ' → logprob: -12.434207916259766

Token 930: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.774276774493046e-05
    2. '       ' → logprob: -10.375038146972656
    3. 'continue' → logprob: -12.250038146972656
    4. '   ' → logprob: -14.375038146972656
    5. '               ' → logprob: -14.625038146972656
    6. ' continue' → logprob: -15.500038146972656
    7. 'import' → logprob: -15.625038146972656
    8. '```' → logprob: -16.500038146972656
    9. '
' → logprob: -16.750038146972656
    10. '		' → logprob: -16.750038146972656

Token 931: ' continue' (ID: 4901)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00013238313840702176
    2. 'continue' (adapté à ' continue') → logprob: -9.25013256072998
    3. '       ' → logprob: -10.87513256072998
    4. 'return' → logprob: -11.75013256072998
    5. '
' → logprob: -12.50013256072998
    6. ' continue' → logprob: -12.87513256072998
    7. '   ' → logprob: -13.37513256072998
    8. '               ' → logprob: -14.87513256072998
    9. '		' → logprob: -15.12513256072998
    10. '```' → logprob: -15.37513256072998

Token 932: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002948935842141509
    2. '
' → logprob: -6.252948760986328
    3. '```' → logprob: -7.502948760986328
    4. '        
' → logprob: -8.502948760986328
    5. 'from' → logprob: -9.127948760986328
    6. 'import' → logprob: -10.252948760986328
    7. '#' → logprob: -10.377948760986328
    8. '   ' → logprob: -10.377948760986328
    9. 'visited' → logprob: -11.127948760986328
    10. 'def' → logprob: -11.377948760986328

Token 933: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011092590866610408
    2. '
' → logprob: -7.6261091232299805
    3. 'from' → logprob: -7.8761091232299805
    4. '```' → logprob: -9.37610912322998
    5. 'import' → logprob: -9.75110912322998
    6. '        
' → logprob: -9.87610912322998
    7. '   ' → logprob: -10.37610912322998
    8. '#' → logprob: -11.75110912322998
    9. ' from' → logprob: -12.37610912322998
    10. '           ' → logprob: -14.12610912322998

Token 934: ' #' (ID: 1069)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.815443754196167
    2. '       ' → logprob: -1.065443754196167
    3. '#' (adapté à ' #') → logprob: -1.815443754196167
    4. 'import' → logprob: -3.190443754196167
    5. '```' → logprob: -6.440443992614746
    6. 'visited' → logprob: -6.690443992614746
    7. 'def' → logprob: -6.815443992614746
    8. 'used' → logprob: -6.940443992614746
    9. 'assigned' → logprob: -6.940443992614746
    10. 'buyer' → logprob: -7.065443992614746

Token 935: ' Il' (ID: 5329)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.6547592282295227
    2. '#' → logprob: -1.904759168624878
    3. 'def' → logprob: -2.029759168624878
    4. 'from' → logprob: -2.279759168624878
    5. '       ' → logprob: -3.279759168624878
    6. 'assigned' → logprob: -3.404759168624878
    7. 'import' → logprob: -4.779759407043457
    8. 'visited' → logprob: -5.404759407043457
    9. 'selected' → logprob: -6.154759407043457
    10. '   ' → logprob: -6.279759407043457

Token 936: ' faut' (ID: 17821)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.3565715551376343
    2. '       ' → logprob: -1.3565715551376343
    3. 'reste' → logprob: -1.8565715551376343
    4. '   ' → logprob: -1.9815715551376343
    5. 'rest' → logprob: -2.231571674346924
    6. ' reste' → logprob: -3.356571674346924
    7. 'f' → logprob: -4.606571674346924
    8. 'import' → logprob: -4.731571674346924
    9. 's' → logprob: -5.106571674346924
    10. ' semble' → logprob: -5.731571674346924

Token 937: ' tester' (ID: 51819)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.1223540306091309
    2. 'tr' → logprob: -1.7473540306091309
    3. 'chercher' → logprob: -1.7473540306091309
    4. '   ' → logprob: -1.8723540306091309
    5. '#' → logprob: -2.747354030609131
    6. '       ' → logprob: -3.747354030609131
    7. 'from' → logprob: -3.747354030609131
    8. 'expl' → logprob: -4.747354030609131
    9. 'def' → logprob: -4.997354030609131
    10. 'maint' → logprob: -5.122354030609131

Token 938: ' toute' (ID: 16825)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6000268459320068
    2. 'import' → logprob: -1.3500268459320068
    3. 'from' → logprob: -1.9750268459320068
    4. 'all' → logprob: -3.725026845932007
    5. 'def' → logprob: -3.975026845932007
    6. '#' → logprob: -6.100027084350586
    7. ' from' → logprob: -6.350027084350586
    8. '   ' → logprob: -6.850027084350586
    9. 'les' → logprob: -7.100027084350586
    10. 'b' → logprob: -7.100027084350586

Token 939: ' combinaison' (ID: 165933)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.15364068746566772
    2. 'comb' → logprob: -2.7786407470703125
    3. 'l' → logprob: -3.9036407470703125
    4. ' la' → logprob: -4.0286407470703125
    5. 's' → logprob: -4.0286407470703125
    6. 'une' → logprob: -4.7786407470703125
    7. 'import' → logprob: -5.2786407470703125
    8. 'com' → logprob: -5.2786407470703125
    9. ' combinaison' → logprob: -6.2786407470703125
    10. '   ' → logprob: -6.9036407470703125

Token 940: ' rect' (ID: 13107)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.0229175090789795
    2. '       ' → logprob: -1.1479175090789795
    3. 'from' → logprob: -1.1479175090789795
    4. 'of' → logprob: -6.647917747497559
    5. 'possible' → logprob: -6.897917747497559
    6. ' from' → logprob: -7.022917747497559
    7. 'for' → logprob: -7.647917747497559
    8. 'b' → logprob: -8.147917747497559
    9. '(b' → logprob: -8.397917747497559
    10. '#' → logprob: -8.522917747497559

Token 941: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.006021583918482065
    2. 'for' → logprob: -5.381021499633789
    3. 'angles' → logprob: -7.631021499633789
    4. 'b' → logprob: -7.756021499633789
    5. '(b' → logprob: -8.381021499633789
    6. 'angle' → logprob: -9.506021499633789
    7. '[b' → logprob: -10.256021499633789
    8. ' b' → logprob: -10.256021499633789
    9. ' for' → logprob: -10.631021499633789
    10. '(' → logprob: -11.131021499633789

Token 942: '[b' (ID: 40800)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.34847572445869446
    2. '[b' → logprob: -2.598475694656372
    3. ' =' → logprob: -2.973475694656372
    4. 'from' → logprob: -3.473475694656372
    5. '       ' → logprob: -3.598475694656372
    6. 'ions' → logprob: -3.848475694656372
    7. 'for' → logprob: -3.973475694656372
    8. 'import' → logprob: -4.348475933074951
    9. '.keys' → logprob: -4.973475933074951
    10. '.items' → logprob: -5.098475933074951

Token 943: '1' (ID: 16)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.022398369386792183
    2. 'for' → logprob: -4.272398471832275
    3. '[b' → logprob: -5.647398471832275
    4. ' for' → logprob: -7.272398471832275
    5. 'pour' → logprob: -7.397398471832275
    6. '])' → logprob: -7.397398471832275
    7. 'b' → logprob: -7.772398471832275
    8. '[' → logprob: -7.897398471832275
    9. '][' → logprob: -8.022397994995117
    10. 's' → logprob: -8.397397994995117

Token 944: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.11521728336811066
    2. '][' → logprob: -2.4902172088623047
    3. 'for' → logprob: -4.240217208862305
    4. '],' → logprob: -5.865217208862305
    5. ' for' → logprob: -5.990217208862305
    6. ']
' → logprob: -6.490217208862305
    7. ']*' → logprob: -6.740217208862305
    8. '].' → logprob: -6.865217208862305
    9. '[b' → logprob: -6.865217208862305
    10. '[' → logprob: -7.615217208862305

Token 945: ' x' (ID: 1215)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.47831037640571594
    2. ' for' → logprob: -1.6033103466033936
    3. '[b' → logprob: -1.8533103466033936
    4. '[' → logprob: -5.478310585021973
    5. '```' → logprob: -5.978310585021973
    6. ',' → logprob: -6.103310585021973
    7. '][' → logprob: -6.228310585021973
    8. '.keys' → logprob: -6.228310585021973
    9. ']' → logprob: -6.728310585021973
    10. '   ' → logprob: -6.853310585021973

Token 946: ' rect' (ID: 13107)
  Prédit: 'rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rect' → logprob: -0.008684894070029259
    2. ' rect' → logprob: -4.758685111999512
    3. 'for' → logprob: -11.133685111999512
    4. 'b' → logprob: -11.633685111999512
    5. 'list' → logprob: -11.758685111999512
    6. '   ' → logprob: -11.883685111999512
    7. '[b' → logprob: -12.258685111999512
    8. 'rest' → logprob: -12.258685111999512
    9. 'r' → logprob: -12.383685111999512
    10. '
' → logprob: -13.008685111999512

Token 947: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00036287534749135375
    2. '[b' → logprob: -8.00036334991455
    3. 'rect' → logprob: -11.00036334991455
    4. '[s' → logprob: -11.62536334991455
    5. '[' → logprob: -14.37536334991455
    6. 'r' → logprob: -15.75036334991455
    7. '```' → logprob: -16.125362396240234
    8. 'b' → logprob: -16.250362396240234
    9. 'vals' → logprob: -16.250362396240234
    10. 'sb' → logprob: -16.250362396240234

Token 948: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -2.7133641196996905e-05
    2. 'b' → logprob: -11.00002670288086
    3. '[' → logprob: -11.62502670288086
    4. '[
' → logprob: -14.62502670288086
    5. '```' → logprob: -14.87502670288086
    6. '
' → logprob: -16.00002670288086
    7. '[next' → logprob: -16.50002670288086
    8. '_b' → logprob: -16.87502670288086
    9. 's' → logprob: -16.87502670288086
    10. ' [' → logprob: -17.00002670288086

Token 949: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.5954712075181305e-05
    2. '[' → logprob: -10.750036239624023
    3. 'b' → logprob: -12.250036239624023
    4. '1' → logprob: -13.000036239624023
    5. ']' → logprob: -13.000036239624023
    6. '#' → logprob: -13.500036239624023
    7. '[b' → logprob: -14.250036239624023
    8. '_' → logprob: -14.500036239624023
    9. 's' → logprob: -14.750036239624023
    10. '
' → logprob: -14.750036239624023

Token 950: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.012341526336967945
    2. '...' → logprob: -5.012341499328613
    3. '[' → logprob: -6.137341499328613
    4. '...]' → logprob: -6.887341499328613
    5. '[b' → logprob: -7.012341499328613
    6. '.keys' → logprob: -7.887341499328613
    7. 'for' → logprob: -8.762341499328613
    8. '[]' → logprob: -8.762341499328613
    9. '[...]' → logprob: -9.012341499328613
    10. '][' → logprob: -9.262341499328613

Token 951: ' x' (ID: 1215)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5978533625602722
    2. 'for' → logprob: -1.847853422164917
    3. 'import' → logprob: -1.972853422164917
    4. 'from' → logprob: -2.972853422164917
    5. ':' → logprob: -3.847853422164917
    6. ' for' → logprob: -4.222853183746338
    7. '   ' → logprob: -4.347853183746338
    8. '
' → logprob: -4.847853183746338
    9. '#' → logprob: -5.097853183746338
    10. '           ' → logprob: -5.222853183746338

Token 952: ' ...
' (ID: 12646)
  Prédit: 'rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rect' → logprob: -0.0019457722082734108
    2. ' rect' → logprob: -6.251945972442627
    3. '...' → logprob: -11.876945495605469
    4. 'list' → logprob: -12.376945495605469
    5. '(rect' → logprob: -13.751945495605469
    6. 'rest' → logprob: -13.876945495605469
    7. '[' → logprob: -14.126945495605469
    8. '[b' → logprob: -14.251945495605469
    9. '
' → logprob: -14.626945495605469
    10. '	rect' → logprob: -15.251945495605469

Token 953: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5301384925842285
    2. 'from' → logprob: -1.4051384925842285
    3. 'import' → logprob: -2.2801384925842285
    4. 'buyers' → logprob: -3.9051384925842285
    5. 'for' → logprob: -4.1551384925842285
    6. ' from' → logprob: -4.6551384925842285
    7. 'b' → logprob: -4.7801384925842285
    8. ' buyers' → logprob: -6.2801384925842285
    9. ' for' → logprob: -6.4051384925842285
    10. 'buyer' → logprob: -6.5301384925842285

Token 954: ' #' (ID: 1069)
  Prédit: 'buyers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'buyers' → logprob: -0.7300300598144531
    2. '       ' → logprob: -1.6050300598144531
    3. 'from' → logprob: -1.7300300598144531
    4. 'import' → logprob: -2.105030059814453
    5. 'buyer' → logprob: -4.730030059814453
    6. 'b' → logprob: -5.105030059814453
    7. 'buy' → logprob: -7.230030059814453
    8. ' buyers' → logprob: -7.230030059814453
    9. 'bs' → logprob: -7.355030059814453
    10. '#' (adapté à ' #') → logprob: -7.855030059814453

Token 955: ' et' (ID: 859)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.7705869078636169
    2. 'import' → logprob: -1.2705869674682617
    3. 'buyers' → logprob: -1.3955869674682617
    4. '       ' → logprob: -5.395586967468262
    5. 'buyer' → logprob: -6.020586967468262
    6. '#' → logprob: -7.645586967468262
    7. 'bs' → logprob: -7.770586967468262
    8. 'b' → logprob: -8.020586967468262
    9. 'buy' → logprob: -8.145586967468262
    10. ' buyers' → logprob: -8.645586967468262

Token 956: ' val' (ID: 1459)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2681644558906555
    2. 'import' → logprob: -2.2681643962860107
    3. 'buyer' → logprob: -3.2681643962860107
    4. 'def' → logprob: -3.8931643962860107
    5. 'from' → logprob: -3.8931643962860107
    6. 'b' → logprob: -4.14316463470459
    7. '       ' → logprob: -4.39316463470459
    8. 'buyers' → logprob: -5.14316463470459
    9. ' buyer' → logprob: -5.64316463470459
    10. ' buyers' → logprob: -6.01816463470459

Token 957: 'ider' (ID: 1970)
  Prédit: 'ider'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ider' → logprob: -0.006518071983009577
    2. 'id' → logprob: -5.1315178871154785
    3. 'ide' → logprob: -7.5065178871154785
    4. 'uer' → logprob: -10.631518363952637
    5. 'idez' → logprob: -12.006518363952637
    6. '_id' → logprob: -13.006518363952637
    7. '#' → logprob: -13.381518363952637
    8. '   ' → logprob: -14.006518363952637
    9. 'ue' → logprob: -14.381518363952637
    10. 'iter' → logprob: -14.631518363952637

Token 958: ' qu' (ID: 474)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.7956834435462952
    2. 'buyers' → logprob: -1.5456833839416504
    3. '       ' → logprob: -1.6706833839416504
    4. 'import' → logprob: -2.2956833839416504
    5. 'buyer' → logprob: -3.7956833839416504
    6. 'b' → logprob: -5.17068338394165
    7. ' buyers' → logprob: -5.29568338394165
    8. '#' → logprob: -5.67068338394165
    9. 'all' → logprob: -6.17068338394165
    10. 'def' → logprob: -6.17068338394165

Token 959: ''elles' (ID: 118359)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.2762422561645508
    2. 'les' → logprob: -2.526242256164551
    3. 'la' → logprob: -3.401242256164551
    4. '   ' → logprob: -3.651242256164551
    5. 'the' → logprob: -3.651242256164551
    6. 'each' → logprob: -4.151242256164551
    7. '#' → logprob: -4.526242256164551
    8. 'sum' → logprob: -4.776242256164551
    9. ' len' → logprob: -5.151242256164551
    10. ' ' → logprob: -5.276242256164551

Token 960: ' partition' (ID: 31512)
  Prédit: ' couvr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' couvr' → logprob: -0.11894039809703827
    2. '   ' → logprob: -3.7439403533935547
    3. 'cover' → logprob: -3.7439403533935547
    4. 'for' → logprob: -3.8689403533935547
    5. '#' → logprob: -4.118940353393555
    6. '       ' → logprob: -5.368940353393555
    7. 't' → logprob: -5.618940353393555
    8. ' for' → logprob: -5.743940353393555
    9. ' cover' → logprob: -6.118940353393555
    10. 's' → logprob: -6.118940353393555

Token 961: 'nent' (ID: 32355)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.2042522132396698
    2. 'nent' → logprob: -1.7042522430419922
    3. 'e' → logprob: -6.329252243041992
    4. '```' → logprob: -7.954252243041992
    5. 'ont' → logprob: -8.579252243041992
    6. 'ion' → logprob: -8.954252243041992
    7. '_ent' → logprob: -9.704252243041992
    8. 'nt' → logprob: -9.954252243041992
    9. '``' → logprob: -10.329252243041992
    10. 'ient' → logprob: -10.454252243041992

Token 962: ' l' (ID: 305)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.8299694657325745
    2. 'la' → logprob: -1.3299694061279297
    3. 'the' → logprob: -2.4549694061279297
    4. 'l' → logprob: -3.2049694061279297
    5. ' correctement' → logprob: -3.4549694061279297
    6. ' the' → logprob: -3.7049694061279297
    7. 'le' → logprob: -3.8299694061279297
    8. '```' → logprob: -4.32996940612793
    9. ' l' → logprob: -4.45496940612793
    10. ' perfectly' → logprob: -4.70496940612793

Token 963: ''intégr' (ID: 166771)
  Prédit: ''ensemble'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ensemble' → logprob: -0.46970823407173157
    2. 'e' → logprob: -2.094708204269409
    3. ''intégr' → logprob: -2.219708204269409
    4. 'a' → logprob: -2.344708204269409
    5. ''espace' → logprob: -3.969708204269409
    6. ''' → logprob: -5.344708442687988
    7. 'gr' → logprob: -5.344708442687988
    8. 'par' → logprob: -5.469708442687988
    9. 'ensemble' → logprob: -5.469708442687988
    10. '’ensemble' → logprob: -6.344708442687988

Token 964: 'alité' (ID: 148805)
  Prédit: 'alité'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alité' → logprob: -1.171910047531128
    2. 'al' → logprob: -1.296910047531128
    3. 'ement' → logprob: -1.421910047531128
    4. 'e' → logprob: -2.046910047531128
    5. 'ément' → logprob: -4.171910285949707
    6. 'è' → logprob: -5.046910285949707
    7. 'èrement' → logprob: -5.171910285949707
    8. 'ent' → logprob: -5.546910285949707
    9. 'lement' → logprob: -6.171910285949707
    10. 'ité' → logprob: -6.171910285949707

Token 965: ' de' (ID: 334)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.252394676208496
    2. 'la' → logprob: -1.377394676208496
    3. ' de' → logprob: -1.502394676208496
    4. 'de' → logprob: -1.627394676208496
    5. '   ' → logprob: -4.627394676208496
    6. ' du' → logprob: -4.752394676208496
    7. 'du' → logprob: -5.127394676208496
    8. '#' → logprob: -5.877394676208496
    9. 'le' → logprob: -5.877394676208496
    10. '       ' → logprob: -6.127394676208496

Token 966: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.2295953929424286
    2. 's' → logprob: -1.854595422744751
    3. 'the' → logprob: -3.229595422744751
    4. ' la' → logprob: -5.354595184326172
    5. 'range' → logprob: -5.729595184326172
    6. ' s' → logprob: -7.354595184326172
    7. 'grid' → logprob: -9.104595184326172
    8. ' the' → logprob: -9.604595184326172
    9. 'l' → logprob: -9.729595184326172
    10. 'le' → logprob: -9.854595184326172

Token 967: ' grille' (ID: 99153)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.3767516016960144
    2. 'parcel' → logprob: -1.8767516613006592
    3. 'gr' → logprob: -2.626751661300659
    4. ' parc' → logprob: -3.376751661300659
    5. 'surface' → logprob: -3.751751661300659
    6. 'grid' → logprob: -4.37675142288208
    7. 'plan' → logprob: -5.00175142288208
    8. ' surface' → logprob: -6.37675142288208
    9. '#' → logprob: -6.62675142288208
    10. 's' → logprob: -6.75175142288208

Token 968: ' sans' (ID: 9828)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006332110147923231
    2. 'from' → logprob: -5.881331920623779
    3. 'import' → logprob: -6.006331920623779
    4. ' from' → logprob: -7.506331920623779
    5. '        
' → logprob: -9.006332397460938
    6. ' buyers' → logprob: -9.006332397460938
    7. 'buyers' → logprob: -9.256332397460938
    8. '
' → logprob: -9.631332397460938
    9. '```' → logprob: -11.131332397460938
    10. '   ' → logprob: -11.256332397460938

Token 969: ' super' (ID: 2539)
  Prédit: 'over'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'over' → logprob: -0.20623062551021576
    2. 'rec' → logprob: -2.331230640411377
    3. ' chev' → logprob: -3.206230640411377
    4. 'super' → logprob: -3.456230640411377
    5. 'import' → logprob: -5.206230640411377
    6. 'che' → logprob: -5.706230640411377
    7. ' overlap' → logprob: -5.831230640411377
    8. ' rec' → logprob: -6.206230640411377
    9. ' super' → logprob: -6.956230640411377
    10. ' overlaps' → logprob: -6.956230640411377

Token 970: 'position' (ID: 4504)
  Prédit: 'position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.010540017858147621
    2. 'positions' → logprob: -5.510540008544922
    3. 'pos' → logprob: -5.760540008544922
    4. 'poser' → logprob: -5.885540008544922
    5. 'po' → logprob: -8.010540008544922
    6. 'posé' → logprob: -9.885540008544922
    7. 'p' → logprob: -10.760540008544922
    8. 'pose' → logprob: -10.760540008544922
    9. '```' → logprob: -10.760540008544922
    10. '_position' → logprob: -10.885540008544922

Token 971: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012439481914043427
    2. 'from' → logprob: -5.137439250946045
    3. 'import' → logprob: -5.762439250946045
    4. '
' → logprob: -6.637439250946045
    5. ' buyers' → logprob: -7.637439250946045
    6. 'buyers' → logprob: -7.637439250946045
    7. ' from' → logprob: -7.762439250946045
    8. '        
' → logprob: -8.012439727783203
    9. '   ' → logprob: -9.637439727783203
    10. 'buyer' → logprob: -9.887439727783203

Token 972: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012005537748336792
    2. 'from' → logprob: -4.76200532913208
    3. 'import' → logprob: -6.13700532913208
    4. '        
' → logprob: -7.63700532913208
    5. ' from' → logprob: -7.76200532913208
    6. '
' → logprob: -8.637005805969238
    7. '```' → logprob: -10.262005805969238
    8. '   ' → logprob: -10.887005805969238
    9. '#' → logprob: -10.887005805969238
    10. ' buyers' → logprob: -11.512005805969238

Token 973: ' #' (ID: 1069)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.18982018530368805
    2. 'buyers' → logprob: -2.4398202896118164
    3. 'import' → logprob: -2.5648202896118164
    4. '       ' → logprob: -4.939820289611816
    5. 'buyer' → logprob: -7.564820289611816
    6. '#' (adapté à ' #') → logprob: -7.814820289611816
    7. 'b' → logprob: -8.564820289611816
    8. 'bs' → logprob: -9.064820289611816
    9. 'buy' → logprob: -9.314820289611816
    10. 'def' → logprob: -9.439820289611816

Token 974: ' et' (ID: 859)
  Prédit: 'buyers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'buyers' → logprob: -0.627936840057373
    2. 'from' → logprob: -1.002936840057373
    3. 'import' → logprob: -2.627936840057373
    4. '       ' → logprob: -3.752936840057373
    5. 'buyer' → logprob: -6.127936840057373
    6. 'buy' → logprob: -7.252936840057373
    7. '#' → logprob: -8.252937316894531
    8. 'def' → logprob: -8.377937316894531
    9. 'bs' → logprob: -8.752937316894531
    10. 'b' → logprob: -9.127937316894531

Token 975: ' que' (ID: 661)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7050355672836304
    2. '       ' → logprob: -1.9550355672836304
    3. 'import' → logprob: -2.08003568649292
    4. 'que' → logprob: -2.20503568649292
    5. 'def' → logprob: -3.33003568649292
    6. 'pas' → logprob: -4.20503568649292
    7. 'sans' → logprob: -4.20503568649292
    8. 'that' → logprob: -5.08003568649292
    9. 'avec' → logprob: -5.33003568649292
    10. 's' → logprob: -5.33003568649292

Token 976: ' la' (ID: 557)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.19030745327472687
    2. 'sum' → logprob: -2.315307378768921
    3. 'set' → logprob: -3.315307378768921
    4. 'all' → logprob: -4.0653076171875
    5. '#' → logprob: -4.6903076171875
    6. ' len' → logprob: -5.3153076171875
    7. '   ' → logprob: -6.9403076171875
    8. 'les' → logprob: -6.9403076171875
    9. 'import' → logprob: -7.4403076171875
    10. '
' → logprob: -7.4403076171875

Token 977: ' somme' (ID: 64484)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4348360300064087
    2. 'import' → logprob: -2.559835910797119
    3. 'total' → logprob: -3.434835910797119
    4. 's' → logprob: -3.809835910797119
    5. ' total' → logprob: -3.809835910797119
    6. ' somme' → logprob: -3.809835910797119
    7. 'len' → logprob: -3.934835910797119
    8. 'sum' → logprob: -4.184835910797119
    9. 'def' → logprob: -4.184835910797119
    10. 'size' → logprob: -4.434835910797119

Token 978: ' des' (ID: 731)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.7329072952270508
    2. 'of' → logprob: -1.1079072952270508
    3. ' ==' → logprob: -2.732907295227051
    4. '==' → logprob: -2.857907295227051
    5. 'rect' → logprob: -4.232907295227051
    6. ' des' → logprob: -4.357907295227051
    7. '       ' → logprob: -4.982907295227051
    8. '   ' → logprob: -5.107907295227051
    9. 'des' → logprob: -5.232907295227051
    10. 'for' → logprob: -5.357907295227051

Token 979: ' tailles' (ID: 169460)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.3948555886745453
    2. 'len' → logprob: -1.7698556184768677
    3. 'sizes' → logprob: -2.144855499267578
    4. 'areas' → logprob: -4.019855499267578
    5. ' k' → logprob: -5.394855499267578
    6. 'tokens' → logprob: -5.519855499267578
    7. '[k' → logprob: -6.019855499267578
    8. '[len' → logprob: -6.769855499267578
    9. 'zones' → logprob: -7.144855499267578
    10. 'ranges' → logprob: -7.144855499267578

Token 980: ' est' (ID: 893)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.7729589343070984
    2. '==' → logprob: -1.0229589939117432
    3. 'des' → logprob: -2.397958993911743
    4. ' des' → logprob: -2.647958993911743
    5. '()==' → logprob: -5.272958755493164
    6. '()' → logprob: -5.897958755493164
    7. '(rect' → logprob: -5.897958755493164
    8. 'rect' → logprob: -7.272958755493164
    9. '(' → logprob: -7.272958755493164
    10. '=' → logprob: -7.397958755493164

Token 981: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.014998444356024265
    2. '   ' → logprob: -5.389998435974121
    3. 'exact' → logprob: -5.764998435974121
    4. '==' → logprob: -5.889998435974121
    5. ' X' → logprob: -6.014998435974121
    6. '       ' → logprob: -7.639998435974121
    7. '=' → logprob: -8.139998435974121
    8. 'Y' → logprob: -8.764998435974121
    9. ' ég' → logprob: -9.014998435974121
    10. 'égal' → logprob: -9.014998435974121

Token 982: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.005950364284217358
    2. ' *' → logprob: -5.130950450897217
    3. '```' → logprob: -12.380949974060059
    4. '**' → logprob: -12.630949974060059
    5. '   ' → logprob: -12.755949974060059
    6. '       ' → logprob: -12.755949974060059
    7. '*N' → logprob: -13.130949974060059
    8. '*(' → logprob: -13.380949974060059
    9. '*S' → logprob: -13.755949974060059
    10. '*y' → logprob: -13.880949974060059

Token 983: 'Y' (ID: 56)
  Prédit: 'Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.00033665422233752906
    2. ' Y' → logprob: -8.000336647033691
    3. '
' → logprob: -14.500336647033691
    4. '   ' → logprob: -14.750336647033691
    5. '	Y' → logprob: -15.875336647033691
    6. ' ' → logprob: -16.375337600708008
    7. '```' → logprob: -17.000337600708008
    8. '       ' → logprob: -17.500337600708008
    9. '*' → logprob: -18.125337600708008
    10. '`' → logprob: -18.125337600708008

Token 984: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13816304504871368
    2. 'from' → logprob: -2.5131630897521973
    3. 'buyers' → logprob: -3.7631630897521973
    4. 'import' → logprob: -3.8881630897521973
    5. ' buyers' → logprob: -6.388163089752197
    6. '
' → logprob: -7.263163089752197
    7. ' from' → logprob: -7.263163089752197
    8. '        
' → logprob: -7.263163089752197
    9. 'buyer' → logprob: -8.138162612915039
    10. '   ' → logprob: -9.638162612915039

Token 985: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008887192234396935
    2. 'from' → logprob: -5.63388729095459
    3. '
' → logprob: -6.00888729095459
    4. 'import' → logprob: -6.75888729095459
    5. '        
' → logprob: -6.75888729095459
    6. ' from' → logprob: -7.88388729095459
    7. 'buyers' → logprob: -10.25888729095459
    8. ' buyers' → logprob: -10.63388729095459
    9. '```' → logprob: -11.00888729095459
    10. '   ' → logprob: -11.25888729095459

Token 986: ' #' (ID: 1069)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.7787360548973083
    2. 'buyers' → logprob: -0.7787360548973083
    3. 'import' → logprob: -2.778736114501953
    4. '       ' → logprob: -4.278736114501953
    5. 'buyer' → logprob: -5.528736114501953
    6. 'bs' → logprob: -7.528736114501953
    7. 'buy' → logprob: -7.778736114501953
    8. 'b' → logprob: -8.153736114501953
    9. ' buyers' → logprob: -8.528736114501953
    10. '#' (adapté à ' #') → logprob: -8.528736114501953

Token 987: ' Liste' (ID: 61030)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.6893608570098877
    2. 'buyers' → logprob: -0.9393608570098877
    3. 'import' → logprob: -2.3143608570098877
    4. 'buyer' → logprob: -5.439360618591309
    5. '       ' → logprob: -6.564360618591309
    6. 'buy' → logprob: -7.064360618591309
    7. '#' → logprob: -7.564360618591309
    8. 'def' → logprob: -7.939360618591309
    9. 'b' → logprob: -8.314360618591309
    10. 'bs' → logprob: -8.814360618591309

Token 988: ' des' (ID: 731)
  Prédit: 'buyers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'buyers' → logprob: -0.5767086148262024
    2. 'b' → logprob: -1.7017085552215576
    3. 'of' → logprob: -2.2017085552215576
    4. 'import' → logprob: -3.4517085552215576
    5. '       ' → logprob: -3.4517085552215576
    6. '_b' → logprob: -3.7017085552215576
    7. ' buyers' → logprob: -4.451708793640137
    8. ' of' → logprob: -4.576708793640137
    9. '_of' → logprob: -4.951708793640137
    10. 'bs' → logprob: -5.076708793640137

Token 989: ' ache' (ID: 27427)
  Prédit: 'buyers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'buyers' → logprob: -0.04707606881856918
    2. 'bs' → logprob: -3.2970759868621826
    3. 'b' → logprob: -5.797076225280762
    4. 'import' → logprob: -5.922076225280762
    5. 'from' → logprob: -7.172076225280762
    6. 'ache' → logprob: -7.297076225280762
    7. 'ach' → logprob: -7.672076225280762
    8. 'keys' → logprob: -7.797076225280762
    9. 'buyer' → logprob: -8.172076225280762
    10. ' buyers' → logprob: -8.422076225280762

Token 990: 'teurs' (ID: 77729)
  Prédit: 'teurs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'teurs' → logprob: -0.0001875671005109325
    2. 'teur' → logprob: -9.250187873840332
    3. 'te' → logprob: -10.000187873840332
    4. 'ters' → logprob: -11.000187873840332
    5. 'buyers' → logprob: -11.375187873840332
    6. 'yeurs' → logprob: -11.875187873840332
    7. 'eurs' → logprob: -12.125187873840332
    8. 'ete' → logprob: -13.500187873840332
    9. 'ateurs' → logprob: -13.875187873840332
    10. '#' → logprob: -14.625187873840332

Token 991: ' dans' (ID: 2671)
  Prédit: 'buyers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'buyers' → logprob: -0.006133910734206438
    2. 'b' → logprob: -5.756134033203125
    3. '       ' → logprob: -6.881134033203125
    4. 'bs' → logprob: -7.506134033203125
    5. ' buyers' → logprob: -7.756134033203125
    6. 'buyer' → logprob: -8.131134033203125
    7. 'buy' → logprob: -8.381134033203125
    8. ' =' → logprob: -8.756134033203125
    9. 'sorted' → logprob: -9.381134033203125
    10. 'keys' → logprob: -9.631134033203125

Token 992: ' un' (ID: 537)
  Prédit: 'buyer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'buyer' → logprob: -0.03175196796655655
    2. 'sorted' → logprob: -4.656752109527588
    3. 'list' → logprob: -5.031752109527588
    4. 'buyers' → logprob: -5.156752109527588
    5. 'order' → logprob: -5.406752109527588
    6. ' buyer' → logprob: -5.531752109527588
    7. 'ordered' → logprob: -7.906752109527588
    8. 'b' → logprob: -8.28175163269043
    9. 'buy' → logprob: -9.28175163269043
    10. 'liste' → logprob: -9.53175163269043

Token 993: ' ordre' (ID: 103061)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.11956867575645447
    2. 'sorted' → logprob: -2.8695685863494873
    3. 'b' → logprob: -3.7445685863494873
    4. 'ordered' → logprob: -4.369568824768066
    5. 'fixed' → logprob: -5.119568824768066
    6. 'consistent' → logprob: -5.119568824768066
    7. 'buyer' → logprob: -6.244568824768066
    8. 'order' → logprob: -6.494568824768066
    9. ' list' → logprob: -7.244568824768066
    10. '_list' → logprob: -7.744568824768066

Token 994: ' fixe' (ID: 111690)
  Prédit: 'buyers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'buyers' → logprob: -0.41995784640312195
    2. 'b' → logprob: -2.5449578762054443
    3. 'sorted' → logprob: -2.9199578762054443
    4. '=b' → logprob: -2.9199578762054443
    5. '=' → logprob: -3.1699578762054443
    6. 'ordered' → logprob: -3.4199578762054443
    7. 'order' → logprob: -3.5449578762054443
    8. ' =' → logprob: -4.044957637786865
    9. 'buy' → logprob: -4.544957637786865
    10. 'buyer' → logprob: -4.669957637786865

Token 995: ' pour' (ID: 1930)
  Prédit: 'buyers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'buyers' → logprob: -0.06624194979667664
    2. '       ' → logprob: -2.941241979598999
    3. 'b' → logprob: -5.44124174118042
    4. ' buyers' → logprob: -5.94124174118042
    5. 'buyer' → logprob: -6.06624174118042
    6. 'buy' → logprob: -6.94124174118042
    7. 'bs' → logprob: -7.81624174118042
    8. '```' → logprob: -8.691242218017578
    9. 'ach' → logprob: -9.691242218017578
    10. 'ache' → logprob: -9.816242218017578

Token 996: ' parcours' (ID: 62625)
  Prédit: 'back'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'back' → logprob: -0.05894244462251663
    2. 'b' → logprob: -3.1839425563812256
    3. ' back' → logprob: -5.0589423179626465
    4. '_back' → logprob: -5.6839423179626465
    5. 'buyer' → logprob: -5.8089423179626465
    6. 'solve' → logprob: -6.5589423179626465
    7. ' buyer' → logprob: -8.183942794799805
    8. 'rec' → logprob: -8.808942794799805
    9. 'solver' → logprob: -8.808942794799805
    10. 'recursive' → logprob: -9.308942794799805

Token 997: '
' (ID: 198)
  Prédit: 'buyers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'buyers' → logprob: -0.02286781370639801
    2. 'b' → logprob: -5.147867679595947
    3. 'bs' → logprob: -5.397867679595947
    4. 'order' → logprob: -5.647867679595947
    5. '       ' → logprob: -5.772867679595947
    6. 'buyer' → logprob: -6.272867679595947
    7. 'keys' → logprob: -7.022867679595947
    8. 'buy' → logprob: -7.272867679595947
    9. '   ' → logprob: -7.397867679595947
    10. 'ache' → logprob: -7.647867679595947

Token 998: '       ' (ID: 309)
  Prédit: 'buyers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'buyers' → logprob: -0.14754454791545868
    2. '       ' → logprob: -2.0225446224212646
    3. ' buyers' → logprob: -6.3975443840026855
    4. 'buyer' → logprob: -6.6475443840026855
    5. 'b' → logprob: -7.1475443840026855
    6. '   ' → logprob: -7.5225443840026855
    7. 'buy' → logprob: -7.8975443840026855
    8. 'clients' → logprob: -10.272544860839844
    9. '```' → logprob: -10.397544860839844
    10. 'bs' → logprob: -10.647544860839844

Token 999: ' buyers' (ID: 25359)
  Prédit: 'buyers'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'buyers' (adapté à ' buyers') → logprob: -0.0007712708320468664
    2. 'bs' → logprob: -7.5007710456848145
    3. 'buyer' → logprob: -9.250771522521973
    4. 'buy' → logprob: -10.125771522521973
    5. 'b' → logprob: -10.625771522521973
    6. '       ' → logprob: -11.250771522521973
    7. 'order' → logprob: -11.375771522521973
    8. 'sorted' → logprob: -11.500771522521973
    9. ' buyers' → logprob: -11.500771522521973
    10. '   ' → logprob: -11.875771522521973

Token 1000: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20145133137702942
    2. '=' → logprob: -1.701451301574707
    3. '=list' → logprob: -10.701451301574707
    4. '_list' → logprob: -12.201451301574707
    5. '_sorted' → logprob: -12.701451301574707
    6. 's' → logprob: -13.576451301574707
    7. '=[]' → logprob: -13.576451301574707
    8. '=b' → logprob: -14.076451301574707
    9. '   ' → logprob: -14.576451301574707
    10. '=[' → logprob: -14.701451301574707

Token 1001: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.01109450776129961
    2. ' list' → logprob: -4.511094570159912
    3. 'sorted' → logprob: -10.011094093322754
    4. '[list' → logprob: -13.511094093322754
    5. ' sorted' → logprob: -14.761094093322754
    6. '   ' → logprob: -16.88609504699707
    7. '[b' → logprob: -18.38609504699707
    8. '[' → logprob: -18.51109504699707
    9. '	list' → logprob: -19.13609504699707
    10. 'List' → logprob: -19.13609504699707

Token 1002: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.0024481848813593388
    2. '(rect' → logprob: -6.127448081970215
    3. 'rect' → logprob: -8.627448081970215
    4. 'buyer' → logprob: -9.502448081970215
    5. '(sorted' → logprob: -12.127448081970215
    6. '(' → logprob: -12.752448081970215
    7. '(s' → logprob: -15.377448081970215
    8. 'b' → logprob: -15.752448081970215
    9. ' buyer' → logprob: -15.877448081970215
    10. 'sorted' → logprob: -16.50244903564453

Token 1003: 'uyer' (ID: 78614)
  Prédit: 'buyer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'buyer' → logprob: -0.03310738503932953
    2. 'uyer' → logprob: -3.908107280731201
    3. 'rect' → logprob: -4.533107280731201
    4. 'buyers' → logprob: -6.658107280731201
    5. '(b' → logprob: -8.90810775756836
    6. 'uy' → logprob: -9.03310775756836
    7. ' buyer' → logprob: -9.15810775756836
    8. '(rect' → logprob: -10.03310775756836
    9. 'buy' → logprob: -10.53310775756836
    10. '(' → logprob: -12.90810775756836

Token 1004: '_info' (ID: 6744)
  Prédit: '_info'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_info' → logprob: -0.0007991461316123605
    2. ')' → logprob: -7.875799179077148
    3. '_rect' → logprob: -8.625799179077148
    4. 'rect' → logprob: -9.875799179077148
    5. ')
' → logprob: -10.125799179077148
    6. 's' → logprob: -10.250799179077148
    7. 'info' → logprob: -10.500799179077148
    8. '
' → logprob: -11.125799179077148
    9. '_infos' → logprob: -11.125799179077148
    10. '_' → logprob: -11.750799179077148

Token 1005: '.keys' (ID: 18392)
  Prédit: '.keys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.keys' → logprob: -6.515961285913363e-05
    2. '.' → logprob: -9.875064849853516
    3. ')' → logprob: -11.750064849853516
    4. '.values' → logprob: -12.750064849853516
    5. 'keys' → logprob: -13.250064849853516
    6. ' .' → logprob: -14.250064849853516
    7. '.items' → logprob: -15.250064849853516
    8. '().' → logprob: -16.500064849853516
    9. ').' → logprob: -16.875064849853516
    10. '.Keys' → logprob: -17.125064849853516

Token 1006: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3870435059070587
    2. '())' → logprob: -1.1370434761047363
    3. '()' → logprob: -9.137043952941895
    4. '   ' → logprob: -10.887043952941895
    5. '())
' → logprob: -10.887043952941895
    6. '       ' → logprob: -11.887043952941895
    7. ')
' → logprob: -11.887043952941895
    8. ' )' → logprob: -12.387043952941895
    9. ' ())' → logprob: -13.512043952941895
    10. '`)' → logprob: -13.887043952941895

Token 1007: '       ' (ID: 309)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6602450609207153
    2. '   ' → logprob: -1.2852450609207153
    3. 'used' → logprob: -2.660244941711426
    4. 'from' → logprob: -2.785244941711426
    5. 'import' → logprob: -4.160244941711426
    6. 'visited' → logprob: -4.660244941711426
    7. '       ' → logprob: -4.910244941711426
    8. 'selected' → logprob: -5.035244941711426
    9. 'assigned' → logprob: -5.160244941711426
    10. 'dp' → logprob: -5.535244941711426

Token 1008: ' #' (ID: 1069)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.27324017882347107
    2. 'def' → logprob: -1.8982402086257935
    3. '   ' → logprob: -3.648240089416504
    4. 'assigned' → logprob: -4.148240089416504
    5. 'assignment' → logprob: -4.398240089416504
    6. 'solution' → logprob: -4.773240089416504
    7. 'from' → logprob: -5.273240089416504
    8. 'covered' → logprob: -5.523240089416504
    9. 'chosen' → logprob: -5.523240089416504
    10. 'selected' → logprob: -6.023240089416504

Token 1009: ' Ensemble' (ID: 102359)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.6233216524124146
    2. 'from' → logprob: -1.7483216524124146
    3. 'def' → logprob: -1.8733216524124146
    4. 'solution' → logprob: -3.123321533203125
    5. 'assigned' → logprob: -3.498321533203125
    6. 'assignment' → logprob: -3.873321533203125
    7. 'chosen' → logprob: -4.373321533203125
    8. 'import' → logprob: -4.873321533203125
    9. 'selected' → logprob: -5.123321533203125
    10. 'result' → logprob: -6.123321533203125

Token 1010: ' des' (ID: 731)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.4100487232208252
    2. 'visited' → logprob: -2.035048723220825
    3. 'def' → logprob: -3.160048723220825
    4. 'occupied' → logprob: -3.285048723220825
    5. ' used' → logprob: -3.660048723220825
    6. 'covered' → logprob: -3.785048723220825
    7. ' =' → logprob: -3.910048723220825
    8. 'import' → logprob: -4.160048484802246
    9. '       ' → logprob: -4.410048484802246
    10. '   ' → logprob: -5.410048484802246

Token 1011: ' indices' (ID: 30378)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.14076489210128784
    2. ' used' → logprob: -2.5157649517059326
    3. 'visited' → logprob: -3.7657649517059326
    4. 'occupied' → logprob: -4.8907647132873535
    5. 'def' → logprob: -5.1407647132873535
    6. 'rect' → logprob: -5.6407647132873535
    7. 'seen' → logprob: -5.7657647132873535
    8. 'import' → logprob: -6.5157647132873535
    9. 'chosen' → logprob: -6.5157647132873535
    10. 'taken' → logprob: -7.3907647132873535

Token 1012: ' pour' (ID: 1930)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.22690099477767944
    2. 'visited' → logprob: -1.8519010543823242
    3. 'taken' → logprob: -3.976901054382324
    4. 'selected' → logprob: -4.976901054382324
    5. 'chosen' → logprob: -5.101901054382324
    6. 'occupied' → logprob: -5.351901054382324
    7. ' =' → logprob: -6.101901054382324
    8. 'covered' → logprob: -6.351901054382324
    9. ' used' → logprob: -6.601901054382324
    10. 'of' → logprob: -6.851901054382324

Token 1013: ' back' (ID: 1602)
  Prédit: 'back'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'back' → logprob: -1.573553442955017
    2. 'rect' → logprob: -1.698553442955017
    3. 'b' → logprob: -2.1985535621643066
    4. 'visited' → logprob: -2.3235535621643066
    5. 'buyers' → logprob: -2.5735535621643066
    6. 'rec' → logprob: -3.1985535621643066
    7. 'range' → logprob: -3.1985535621643066
    8. 'each' → logprob: -3.5735535621643066
    9. ' buyers' → logprob: -3.5735535621643066
    10. '0' → logprob: -3.6985535621643066

Token 1014: 'tracking' (ID: 83383)
  Prédit: 'tracking'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tracking' → logprob: -0.19377383589744568
    2. 'track' → logprob: -1.943773865699768
    3. '   ' → logprob: -3.8187737464904785
    4. 'ack' → logprob: -5.6937737464904785
    5. '       ' → logprob: -6.0687737464904785
    6. 'def' → logprob: -6.4437737464904785
    7. 'rack' → logprob: -7.3187737464904785
    8. 'tracked' → logprob: -7.8187737464904785
    9. 'tr' → logprob: -7.9437737464904785
    10. 'search' → logprob: -8.068774223327637

Token 1015: '
' (ID: 198)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.07038696110248566
    2. 'stack' → logprob: -3.3203868865966797
    3. 'idx' → logprob: -4.32038688659668
    4. ' =' → logprob: -5.19538688659668
    5. 'indexes' → logprob: -5.44538688659668
    6. 'index' → logprob: -5.94538688659668
    7. 'used' → logprob: -6.32038688659668
    8. '=' → logprob: -7.07038688659668
    9. 'visited' → logprob: -7.44538688659668
    10. 'inds' → logprob: -7.69538688659668

Token 1016: '       ' (ID: 309)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7758892178535461
    2. 'indices' → logprob: -1.4008891582489014
    3. 'stack' → logprob: -2.2758891582489014
    4. 'indexes' → logprob: -3.5258891582489014
    5. ' indices' → logprob: -3.7758891582489014
    6. '   ' → logprob: -3.9008891582489014
    7. 'idx' → logprob: -4.1508893966674805
    8. '[]' → logprob: -4.2758893966674805
    9. ' stack' → logprob: -4.5258893966674805
    10. '[' → logprob: -4.7758893966674805

Token 1017: ' res' (ID: 694)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.33277809619903564
    2. 'chosen' → logprob: -2.332777976989746
    3. 'used' → logprob: -2.832777976989746
    4. 'def' → logprob: -2.957777976989746
    5. 'selected' → logprob: -3.832777976989746
    6. 'index' → logprob: -4.332777976989746
    7. 'idx' → logprob: -4.457777976989746
    8. 'indexes' → logprob: -4.957777976989746
    9. 'import' → logprob: -5.707777976989746
    10. 'visited' → logprob: -5.707777976989746

Token 1018: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08863513171672821
    2. '=' → logprob: -2.838635206222534
    3. 'ults' → logprob: -4.338634967803955
    4. 's' → logprob: -4.713634967803955
    5. 'ects' → logprob: -6.338634967803955
    6. '=[]' → logprob: -7.088634967803955
    7. 'ult' → logprob: -7.338634967803955
    8. 'ected' → logprob: -8.088635444641113
    9. 'ect' → logprob: -9.213635444641113
    10. 'ts' → logprob: -9.463635444641113

Token 1019: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.01119141187518835
    2. ' []' → logprob: -5.136191368103027
    3. 'set' → logprob: -6.011191368103027
    4. '[]
' → logprob: -6.011191368103027
    5. 'None' → logprob: -8.261191368103027
    6. ' set' → logprob: -10.511191368103027
    7. ' []
' → logprob: -10.886191368103027
    8. '{}' → logprob: -11.511191368103027
    9. '[' → logprob: -11.761191368103027
    10. '0' → logprob: -11.761191368103027

Token 1020: '       ' (ID: 309)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12778212130069733
    2. '   ' → logprob: -2.627782106399536
    3. '
' → logprob: -3.877782106399536
    4. '       ' → logprob: -4.377782344818115
    5. 'visited' → logprob: -5.002782344818115
    6. 'stack' → logprob: -6.002782344818115
    7. 'import' → logprob: -6.627782344818115
    8. '    
' → logprob: -7.127782344818115
    9. 'selected' → logprob: -7.377782344818115
    10. 'index' → logprob: -7.627782344818115

Token 1021: ' solutions' (ID: 9368)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.5676702260971069
    2. 'def' → logprob: -1.067670226097107
    3. 'visited' → logprob: -3.5676703453063965
    4. 'solution' → logprob: -3.6926703453063965
    5. 'chosen' → logprob: -4.6926703453063965
    6. 'assigned' → logprob: -5.0676703453063965
    7. '
' → logprob: -5.3176703453063965
    8. 'found' → logprob: -5.6926703453063965
    9. 'grid' → logprob: -5.8176703453063965
    10. 'selected' → logprob: -6.4426703453063965

Token 1022: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.57623291015625
    2. ' =' → logprob: -0.82623291015625
    3. '=[]' → logprob: -8.57623291015625
    4. '_found' → logprob: -10.45123291015625
    5. ',' → logprob: -10.95123291015625
    6. '_count' → logprob: -11.20123291015625
    7. '=[]
' → logprob: -11.70123291015625
    8. '_' → logprob: -11.95123291015625
    9. '.append' → logprob: -12.07623291015625
    10. 's' → logprob: -12.07623291015625

Token 1023: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.00022296691895462573
    2. '[]
' → logprob: -8.750223159790039
    3. '0' → logprob: -9.750223159790039
    4. ' []' → logprob: -12.875223159790039
    5. 'set' → logprob: -13.750223159790039
    6. '[]

' → logprob: -13.875223159790039
    7. '[]}' → logprob: -14.000223159790039
    8. '[])' → logprob: -14.875223159790039
    9. '{}' → logprob: -15.250223159790039
    10. '[],' → logprob: -16.00022315979004

Token 1024: '       ' (ID: 309)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10367169231176376
    2. '
' → logprob: -2.3536717891693115
    3. '   ' → logprob: -5.978671550750732
    4. '       ' → logprob: -7.978671550750732
    5. 'visited' → logprob: -8.22867202758789
    6. '    
' → logprob: -8.85367202758789
    7. '        
' → logprob: -9.60367202758789
    8. 'from' → logprob: -9.97867202758789
    9. 'import' → logprob: -11.22867202758789
    10. 'stack' → logprob: -11.35367202758789

Token 1025: ' MAX' (ID: 16960)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.009556325152516365
    2. 'used' → logprob: -4.884556293487549
    3. '
' → logprob: -7.009556293487549
    4. 'visited' → logprob: -7.384556293487549
    5. 'import' → logprob: -9.509556770324707
    6. 'covered' → logprob: -9.509556770324707
    7. 'chosen' → logprob: -9.759556770324707
    8. 'assigned' → logprob: -10.009556770324707
    9. 'occupied' → logprob: -10.259556770324707
    10. 'taken' → logprob: -10.384556770324707

Token 1026: '_SOL' (ID: 151638)
  Prédit: '_SOL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_SOL' → logprob: -0.03459617868065834
    2. '_S' → logprob: -3.4095962047576904
    3. '_DEPTH' → logprob: -8.15959644317627
    4. '_s' → logprob: -8.65959644317627
    5. '=' → logprob: -8.90959644317627
    6. '_RESULTS' → logprob: -9.15959644317627
    7. '_' → logprob: -9.65959644317627
    8. 'SOL' → logprob: -9.78459644317627
    9. ' =' → logprob: -10.40959644317627
    10. '_sol' → logprob: -11.03459644317627

Token 1027: ' =' (ID: 314)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.8872866034507751
    2. 'UTIONS' → logprob: -1.01228666305542
    3. '=' → logprob: -2.01228666305542
    4. ' =' → logprob: -2.51228666305542
    5. 'UT' → logprob: -5.88728666305542
    6. 'ATIONS' → logprob: -6.51228666305542
    7. 'SOL' → logprob: -6.63728666305542
    8. '_' → logprob: -7.26228666305542
    9. '_COUNT' → logprob: -7.38728666305542
    10. '_SOL' → logprob: -8.012286186218262

Token 1028: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1041145626222715e-05
    2. '10' → logprob: -12.000011444091797
    3. '100' → logprob: -13.125011444091797
    4. '3' → logprob: -13.375011444091797
    5. ' ' → logprob: -14.375011444091797
    6. '   ' → logprob: -15.125011444091797
    7. '=' → logprob: -15.750011444091797
    8. '5' → logprob: -16.250011444091797
    9. '200' → logprob: -17.375011444091797
    10. '```' → logprob: -17.500011444091797

Token 1029: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.8921695047756657e-05
    2. '3' → logprob: -11.000028610229492
    3. '10' → logprob: -11.625028610229492
    4. '100' → logprob: -13.250028610229492
    5. '5' → logprob: -14.000028610229492
    6. '1' → logprob: -15.750028610229492
    7. '200' → logprob: -16.125028610229492
    8. '=' → logprob: -17.000028610229492
    9. ' ' → logprob: -17.000028610229492
    10. '20' → logprob: -17.000028610229492

Token 1030: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.017614582553505898
    2. '       ' → logprob: -4.892614364624023
    3. 'def' → logprob: -4.892614364624023
    4. '

' → logprob: -7.517614364624023
    5. '
' → logprob: -7.892614364624023
    6. '   ' → logprob: -8.017614364624023
    7. 'import' → logprob: -8.267614364624023
    8. '        
' → logprob: -8.392614364624023
    9. '0' → logprob: -8.517614364624023
    10. '<|end|>' → logprob: -9.142614364624023

Token 1031: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.018410956487059593
    2. 'def' → logprob: -4.018411159515381
    3. '   ' → logprob: -9.643410682678223
    4. '

' → logprob: -9.893410682678223
    5. '
' → logprob: -10.143410682678223
    6. '    
' → logprob: -10.518410682678223
    7. '```' → logprob: -10.518410682678223
    8. 'import' → logprob: -10.643410682678223
    9. ' def' → logprob: -11.518410682678223
    10. '        
' → logprob: -12.518410682678223

Token 1032: ' on' (ID: 402)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.04562310874462128
    2. '
' → logprob: -3.2956230640411377
    3. 'def' → logprob: -5.170623302459717
    4. '100' → logprob: -7.795623302459717
    5. '#' → logprob: -7.920623302459717
    6. 'MAX' → logprob: -8.295622825622559
    7. 'import' → logprob: -8.420622825622559
    8. '
' → logprob: -8.920622825622559
    9. '1' → logprob: -9.170622825622559
    10. '  
' → logprob: -9.670622825622559

Token 1033: ' va' (ID: 3423)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -1.026379942893982
    2. 'continue' → logprob: -1.276379942893982
    3. 'def' → logprob: -1.776379942893982
    4. '   ' → logprob: -3.5263800621032715
    5. '       ' → logprob: -3.9013800621032715
    6. ' continues' → logprob: -4.1513800621032715
    7. 'limit' → logprob: -4.5263800621032715
    8. ' limite' → logprob: -4.6513800621032715
    9. 'max' → logprob: -4.7763800621032715
    10. '    ' → logprob: -4.7763800621032715

Token 1034: ' stopper' (ID: 154160)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.5015238523483276
    2. ' continuer' → logprob: -1.8765238523483276
    3. ' rechercher' → logprob: -2.376523971557617
    4. '       ' → logprob: -2.501523971557617
    5. ' chercher' → logprob: -3.001523971557617
    6. 'limit' → logprob: -3.376523971557617
    7. ' limit' → logprob: -3.501523971557617
    8. ' search' → logprob: -3.501523971557617
    9. 'def' → logprob: -3.626523971557617
    10. ' continue' → logprob: -3.751523971557617

Token 1035: ' après' (ID: 16460)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.011683919467031956
    2. '   ' → logprob: -5.261683940887451
    3. 'd' → logprob: -6.761683940887451
    4. '           ' → logprob: -6.886683940887451
    5. 'search' → logprob: -7.136683940887451
    6. 'le' → logprob: -7.261683940887451
    7. 'l' → logprob: -7.636683940887451
    8. 'à' → logprob: -7.636683940887451
    9. '       ' → logprob: -7.886683940887451
    10. 'les' → logprob: -8.011683464050293

Token 1036: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03408361226320267
    2. 'MAX' → logprob: -4.034083843231201
    3. ' ' → logprob: -4.534083843231201
    4. '```' → logprob: -5.909083843231201
    5. '1' → logprob: -7.409083843231201
    6. ' MAX' → logprob: -7.534083843231201
    7. 'max' → logprob: -8.159083366394043
    8. ' max' → logprob: -8.659083366394043
    9. '=' → logprob: -8.659083366394043
    10. '   ' → logprob: -9.284083366394043

Token 1037: '2' (ID: 17)
  Prédit: 'MAX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MAX' → logprob: -0.021086083725094795
    2. '2' → logprob: -3.8960859775543213
    3. 'max' → logprob: -8.396085739135742
    4. 'solutions' → logprob: -8.646085739135742
    5. 'res' → logprob: -9.271085739135742
    6. 'len' → logprob: -10.521085739135742
    7. 'de' → logprob: -11.646085739135742
    8. '   ' → logprob: -12.896085739135742
    9. '[MAX' → logprob: -13.146085739135742
    10. ' MAX' → logprob: -13.396085739135742

Token 1038: ' solutions' (ID: 9368)
  Prédit: 'solutions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solutions' → logprob: -0.09504331648349762
    2. '
' → logprob: -2.845043420791626
    3. ' solutions' → logprob: -3.845043420791626
    4. 'res' → logprob: -5.970043182373047
    5. 'found' → logprob: -6.470043182373047
    6. '```' → logprob: -6.720043182373047
    7. 'sol' → logprob: -6.845043182373047
    8. '#' → logprob: -7.095043182373047
    9. 'results' → logprob: -7.970043182373047
    10. 'solution' → logprob: -7.970043182373047

Token 1039: ' pour' (ID: 1930)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3158107101917267
    2. 'def' → logprob: -1.3158106803894043
    3. '   ' → logprob: -7.190810680389404
    4. '    
' → logprob: -7.315810680389404
    5. '	
' → logprob: -8.065811157226562
    6. 'import' → logprob: -8.440811157226562
    7. '	def' → logprob: -8.815811157226562
    8. 'buyers' → logprob: -9.565811157226562
    9. '        
' → logprob: -9.690811157226562
    10. '```' → logprob: -9.815811157226562

Token 1040: ' savoir' (ID: 22835)
  Prédit: 'év'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'év' → logprob: -0.21605898439884186
    2. 'ev' → logprob: -2.3410589694976807
    3. ' éviter' → logprob: -2.9660589694976807
    4. 'pr' → logprob: -3.9660589694976807
    5. 'é' → logprob: -4.96605920791626
    6. 'dé' → logprob: -5.21605920791626
    7. 'lim' → logprob: -5.96605920791626
    8. 'tr' → logprob: -6.09105920791626
    9. 'print' → logprob: -6.71605920791626
    10. 's' → logprob: -6.71605920791626

Token 1041: ' s' (ID: 265)
  Prédit: ' si'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' si' → logprob: -0.7614231109619141
    2. 'si' → logprob: -0.7614231109619141
    3. 'if' → logprob: -3.261423110961914
    4. ' if' → logprob: -4.386423110961914
    5. '   ' → logprob: -4.886423110961914
    6. 's' → logprob: -6.011423110961914
    7. '       ' → logprob: -6.511423110961914
    8. '```' → logprob: -6.761423110961914
    9. ' ' → logprob: -7.511423110961914
    10. 'de' → logprob: -7.511423110961914

Token 1042: ''il' (ID: 14683)
  Prédit: ''il'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''il' → logprob: -0.044774968177080154
    2. 'i' → logprob: -4.294775009155273
    3. 'olutions' → logprob: -4.794775009155273
    4. ''ils' → logprob: -5.169775009155273
    5. '"' → logprob: -5.294775009155273
    6. '=' → logprob: -5.669775009155273
    7. '```' → logprob: -7.169775009155273
    8. ''i' → logprob: -7.169775009155273
    9. ''assurer' → logprob: -7.419775009155273
    10. 'u' → logprob: -7.544775009155273

Token 1043: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.4673217833042145
    2. ' y' → logprob: -1.842321753501892
    3. 'en' → logprob: -2.0923218727111816
    4. 'a' → logprob: -2.8423218727111816
    5. ' en' → logprob: -4.217321872711182
    6. ' a' → logprob: -4.842321872711182
    7. 'f' → logprob: -5.592321872711182
    8. ''en' → logprob: -6.092321872711182
    9. 'ex' → logprob: -6.842321872711182
    10. ''y' → logprob: -7.092321872711182

Token 1044: ' en' (ID: 469)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.4833695590496063
    2. 'a' → logprob: -1.1083695888519287
    3. ' en' → logprob: -3.1083695888519287
    4. ' a' → logprob: -4.85836935043335
    5. ''en' → logprob: -7.23336935043335
    6. ''a' → logprob: -10.483369827270508
    7. 'avait' → logprob: -12.358369827270508
    8. '’en' → logprob: -13.483369827270508
    9. '	a' → logprob: -13.858369827270508
    10. '```' → logprob: -13.983369827270508

Token 1045: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.15772315859794617
    2. 'en' → logprob: -2.0327231884002686
    3. ' a' → logprob: -4.5327229499816895
    4. ' en' → logprob: -5.5327229499816895
    5. ''en' → logprob: -8.782723426818848
    6. ''a' → logprob: -10.157723426818848
    7. 'avait' → logprob: -10.782723426818848
    8. '	a' → logprob: -12.907723426818848
    9. '```' → logprob: -13.157723426818848
    10. '#a' → logprob: -13.532723426818848

Token 1046: ' plusieurs' (ID: 20875)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09162597358226776
    2. '
' → logprob: -2.591625928878784
    3. '   ' → logprob: -4.966626167297363
    4. '       ' → logprob: -6.216626167297363
    5. '    
' → logprob: -7.091626167297363
    6. '        
' → logprob: -7.091626167297363
    7. 'index' → logprob: -7.466626167297363
    8. 'from' → logprob: -7.716626167297363
    9. 'import' → logprob: -7.841626167297363
    10. 'idx' → logprob: -7.841626167297363

Token 1047: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07431446760892868
    2. '
' → logprob: -2.9493143558502197
    3. '       ' → logprob: -4.574314594268799
    4. '   ' → logprob: -4.824314594268799
    5. 'visited' → logprob: -8.07431411743164
    6. '        
' → logprob: -8.69931411743164
    7. '    
' → logprob: -8.94931411743164
    8. 'import' → logprob: -9.44931411743164
    9. 'from' → logprob: -10.19931411743164
    10. ' def' → logprob: -10.32431411743164

Token 1048: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02767741121351719
    2. 'def' → logprob: -3.777677297592163
    3. '   ' → logprob: -5.777677536010742
    4. '    
' → logprob: -7.027677536010742
    5. '```' → logprob: -8.902677536010742
    6. '       ' → logprob: -9.652677536010742
    7. '        
' → logprob: -9.652677536010742
    8. ' def' → logprob: -10.027677536010742
    9. '	
' → logprob: -10.152677536010742
    10. '	def' → logprob: -10.527677536010742

Token 1049: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.007248918991535902
    2. '
' → logprob: -5.257248878479004
    3. '   ' → logprob: -6.382248878479004
    4. '       ' → logprob: -9.132248878479004
    5. 'import' → logprob: -9.382248878479004
    6. 'from' → logprob: -9.632248878479004
    7. '```' → logprob: -10.382248878479004
    8. '    
' → logprob: -11.757248878479004
    9. ' def' → logprob: -12.132248878479004
    10. '	def' → logprob: -12.507248878479004

Token 1050: ' Fonction' (ID: 189149)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0004282851587049663
    2. 'from' → logprob: -8.375428199768066
    3. '   ' → logprob: -9.375428199768066
    4. 'import' → logprob: -9.625428199768066
    5. '
' → logprob: -10.625428199768066
    6. 'visited' → logprob: -11.125428199768066
    7. '       ' → logprob: -12.250428199768066
    8. ' def' → logprob: -14.125428199768066
    9. 'idx' → logprob: -14.250428199768066
    10. 'stack' → logprob: -14.875428199768066

Token 1051: ' pour' (ID: 1930)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0033763842657208443
    2. ' def' → logprob: -5.753376483917236
    3. '
' → logprob: -9.003376007080078
    4. '   ' → logprob: -10.003376007080078
    5. '       ' → logprob: -11.003376007080078
    6. 'solve' → logprob: -13.003376007080078
    7. '	def' → logprob: -13.503376007080078
    8. ':def' → logprob: -13.628376007080078
    9. '```' → logprob: -13.628376007080078
    10. '(
' → logprob: -14.003376007080078

Token 1052: ' vérifier' (ID: 93671)
  Prédit: 'back'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'back' → logprob: -0.05836305022239685
    2. 'dfs' → logprob: -3.1833629608154297
    3. 'search' → logprob: -4.43336296081543
    4. 'def' → logprob: -6.43336296081543
    5. ' back' → logprob: -7.43336296081543
    6. 'bt' → logprob: -7.80836296081543
    7. 'try' → logprob: -7.93336296081543
    8. ' dfs' → logprob: -9.30836296081543
    9. 'solve' → logprob: -9.43336296081543
    10. 'check' → logprob: -9.80836296081543

Token 1053: ' s' (ID: 265)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02947261929512024
    2. '   ' → logprob: -4.154472827911377
    3. 'if' → logprob: -5.654472827911377
    4. ' def' → logprob: -6.154472827911377
    5. 'over' → logprob: -6.404472827911377
    6. 'rect' → logprob: -6.529472827911377
    7. ' if' → logprob: -6.654472827911377
    8. '       ' → logprob: -6.779472827911377
    9. 'covered' → logprob: -7.529472827911377
    10. '#' → logprob: -7.779472827911377

Token 1054: ''il' (ID: 14683)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.045291297137737274
    2. '   ' → logprob: -3.5452911853790283
    3. '       ' → logprob: -5.545291423797607
    4. 'e' → logprob: -5.795291423797607
    5. ' def' → logprob: -6.295291423797607
    6. 'et' → logprob: -6.420291423797607
    7. 'olution' → logprob: -6.795291423797607
    8. '#' → logprob: -7.420291423797607
    9. ' ' → logprob: -7.670291423797607
    10. 'quares' → logprob: -7.920291423797607

Token 1055: ' y' (ID: 342)
  Prédit: ' overlap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' overlap' → logprob: -0.6130967140197754
    2. 'a' → logprob: -1.9880967140197754
    3. 'n' → logprob: -2.3630967140197754
    4. ' a' → logprob: -2.8630967140197754
    5. 'y' → logprob: -3.3630967140197754
    6. 'over' → logprob: -3.6130967140197754
    7. 'x' → logprob: -4.238096714019775
    8. 'def' → logprob: -4.238096714019775
    9. 'inter' → logprob: -4.363096714019775
    10. ' y' → logprob: -4.738096714019775

Token 1056: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.015246666967868805
    2. ' a' → logprob: -5.390246868133545
    3. 'avoir' → logprob: -6.765246868133545
    4. 'avait' → logprob: -6.765246868133545
    5. 'x' → logprob: -7.015246868133545
    6. '#' → logprob: -7.140246868133545
    7. 'une' → logprob: -7.265246868133545
    8. 'poss' → logprob: -7.265246868133545
    9. ''a' → logprob: -7.765246868133545
    10. 'have' → logprob: -7.765246868133545

Token 1057: ' rec' (ID: 1369)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'une' → logprob: -1.0727390050888062
    2. 'des' → logprob: -1.1977390050888062
    3. 'un' → logprob: -1.4477390050888062
    4. 'super' → logprob: -2.4477391242980957
    5. 'over' → logprob: -4.697739124298096
    6. 'inter' → logprob: -4.822739124298096
    7. 'conf' → logprob: -5.947739124298096
    8. 'con' → logprob: -5.947739124298096
    9. 'intersection' → logprob: -5.947739124298096
    10. 'collision' → logprob: -6.072739124298096

Token 1058: 'ouv' (ID: 14851)
  Prédit: 'ouv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ouv' → logprob: -0.7358875870704651
    2. '_overlap' → logprob: -2.6108875274658203
    3. 't' → logprob: -2.8608875274658203
    4. 'ou' → logprob: -2.9858875274658203
    5. 'oup' → logprob: -3.2358875274658203
    6. 'ouverte' → logprob: -3.2358875274658203
    7. 'uper' → logprob: -3.3608875274658203
    8. 'ursion' → logprob: -3.3608875274658203
    9. 'ouvre' → logprob: -3.6108875274658203
    10. 'ur' → logprob: -3.9858875274658203

Token 1059: 'rement' (ID: 66132)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.8031606078147888
    2. 'verture' → logprob: -1.4281606674194336
    3. 'ouverte' → logprob: -2.6781606674194336
    4. 'ersion' → logprob: -2.9281606674194336
    5. 'ert' → logprob: -3.0531606674194336
    6. 'ouv' → logprob: -3.5531606674194336
    7. 'ervation' → logprob: -3.6781606674194336
    8. 'olution' → logprob: -4.303160667419434
    9. 'ouver' → logprob: -4.803160667419434
    10. 'erp' → logprob: -5.053160667419434

Token 1060: ' entre' (ID: 3853)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.014341313391923904
    2. '
' → logprob: -5.139341354370117
    3. '       ' → logprob: -6.014341354370117
    4. '(rect' → logprob: -6.889341354370117
    5. '   ' → logprob: -7.389341354370117
    6. 'visited' → logprob: -7.764341354370117
    7. 'occupied' → logprob: -7.764341354370117
    8. 'between' → logprob: -7.889341354370117
    9. ' def' → logprob: -8.014341354370117
    10. '(s' → logprob: -8.139341354370117

Token 1061: ' rectangles' (ID: 164265)
  Prédit: 'rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rect' → logprob: -0.3059789836406708
    2. 'res' → logprob: -2.430979013442993
    3. 'def' → logprob: -2.555979013442993
    4. 'new' → logprob: -3.805979013442993
    5. 'r' → logprob: -4.430978775024414
    6. 'chosen' → logprob: -4.680978775024414
    7. 'curr' → logprob: -4.930978775024414
    8. 'a' → logprob: -5.055978775024414
    9. 'selected' → logprob: -5.180978775024414
    10. 'current' → logprob: -5.305978775024414

Token 1062: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5306249260902405
    2. '
' → logprob: -0.9056249260902405
    3. '(rect' → logprob: -6.280624866485596
    4. ' def' → logprob: -6.405624866485596
    5. '       ' → logprob: -6.780624866485596
    6. '(' → logprob: -7.405624866485596
    7. '(s' → logprob: -7.905624866485596
    8. ' (' → logprob: -8.030625343322754
    9. '   ' → logprob: -8.155625343322754
    10. '        
' → logprob: -8.780625343322754

Token 1063: '       ' (ID: 309)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10665213316679001
    2. '
' → logprob: -2.606652021408081
    3. '       ' → logprob: -4.10665225982666
    4. '```' → logprob: -4.73165225982666
    5. ' def' → logprob: -6.60665225982666
    6. '   ' → logprob: -8.48165225982666
    7. '        
' → logprob: -8.48165225982666
    8. '``' → logprob: -9.10665225982666
    9. '  
' → logprob: -10.23165225982666
    10. ')
' → logprob: -10.35665225982666

Token 1064: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.014977899380028248
    2. '
' → logprob: -4.264977931976318
    3. ' def' → logprob: -7.139977931976318
    4. '       ' → logprob: -12.13997745513916
    5. '        
' → logprob: -12.63997745513916
    6. '```' → logprob: -12.63997745513916
    7. '   ' → logprob: -12.88997745513916
    8. ' 
' → logprob: -13.01497745513916
    9. '  
' → logprob: -13.76497745513916
    10. '#' (adapté à ' #') → logprob: -14.26497745513916

Token 1065: ' Pour' (ID: 13931)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.000929091009311378
    2. '
' → logprob: -7.00092887878418
    3. ' def' → logprob: -11.62592887878418
    4. '       ' → logprob: -12.50092887878418
    5. '#' → logprob: -13.12592887878418
    6. '        
' → logprob: -13.75092887878418
    7. '   ' → logprob: -13.87592887878418
    8. '```' → logprob: -15.25092887878418
    9. 'from' → logprob: -15.50092887878418
    10. '	def' → logprob: -16.75092887878418

Token 1066: ' stock' (ID: 6546)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6674951314926147
    2. ' def' → logprob: -2.0424952507019043
    3. 'r' → logprob: -2.1674952507019043
    4. 'b' → logprob: -2.5424952507019043
    5. 'rect' → logprob: -2.7924952507019043
    6. 'x' → logprob: -3.5424952507019043
    7. ' b' → logprob: -4.292495250701904
    8. 'i' → logprob: -4.417495250701904
    9. ' r' → logprob: -4.542495250701904
    10. ' rect' → logprob: -4.667495250701904

Token 1067: 'er' (ID: 259)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08761174231767654
    2. 'er' → logprob: -3.337611675262451
    3. 'e' → logprob: -3.962611675262451
    4. '       ' → logprob: -4.462611675262451
    5. '   ' → logprob: -5.087611675262451
    6. '           ' → logprob: -5.212611675262451
    7. '#' → logprob: -6.462611675262451
    8. 'ed' → logprob: -6.587611675262451
    9. 'é' → logprob: -7.087611675262451
    10. 'ée' → logprob: -8.08761215209961

Token 1068: ' l' (ID: 305)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.10415910184383392
    2. 'covered' → logprob: -2.854159116744995
    3. 'occupied' → logprob: -3.604159116744995
    4. ' used' → logprob: -5.229158878326416
    5. 'def' → logprob: -5.854158878326416
    6. 'taken' → logprob: -6.229158878326416
    7. 'visited' → logprob: -6.729158878326416
    8. 'rect' → logprob: -7.354158878326416
    9. 'coverage' → logprob: -7.979158878326416
    10. 'occup' → logprob: -8.104159355163574

Token 1069: ''' (ID: 6)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.4638293981552124
    2. 'def' → logprob: -1.9638293981552124
    3. ' used' → logprob: -2.338829517364502
    4. 'occupied' → logprob: -3.213829517364502
    5. ' occupied' → logprob: -3.838829517364502
    6. '_used' → logprob: -4.213829517364502
    7. 'e' → logprob: -4.338829517364502
    8. 'visited' → logprob: -5.088829517364502
    9. 'covered' → logprob: -5.088829517364502
    10. '#' → logprob: -5.213829517364502

Token 1070: 'occupation' (ID: 99142)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.211029052734375
    2. 'def' → logprob: -2.086029052734375
    3. 'covered' → logprob: -3.961029052734375
    4. 'occupied' → logprob: -4.586029052734375
    5. 'visited' → logprob: -4.711029052734375
    6. ' used' → logprob: -4.836029052734375
    7. '#' → logprob: -4.961029052734375
    8. 'seen' → logprob: -5.586029052734375
    9. 'checked' → logprob: -6.211029052734375
    10. '
' → logprob: -6.336029052734375

Token 1071: ' on' (ID: 402)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1822710931301117
    2. 'occupied' → logprob: -2.6822710037231445
    3. ' occupied' → logprob: -3.1822710037231445
    4. 'occup' → logprob: -4.0572710037231445
    5. '=' → logprob: -4.0572710037231445
    6. ' grid' → logprob: -4.9322710037231445
    7. '   ' → logprob: -5.0572710037231445
    8. 'grid' → logprob: -5.8072710037231445
    9. 'area' → logprob: -7.4322710037231445
    10. ' area' → logprob: -7.6822710037231445

Token 1072: ' pleine' (ID: 73274)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.44509896636009216
    2. '=' → logprob: -1.8200989961624146
    3. 'def' → logprob: -2.195098876953125
    4. ' use' → logprob: -4.195098876953125
    5. '       ' → logprob: -4.320098876953125
    6. ' can' → logprob: -4.445098876953125
    7. '   ' → logprob: -4.570098876953125
    8. ' def' → logprob: -5.070098876953125
    9. ' will' → logprob: -5.570098876953125
    10. ' used' → logprob: -5.945098876953125

Token 1073: ' grille' (ID: 99153)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grid' → logprob: -1.4909725189208984
    2. ' grid' → logprob: -1.6159725189208984
    3. 'occup' → logprob: -1.8659725189208984
    4. '   ' → logprob: -2.6159725189208984
    5. 'X' → logprob: -3.4909725189208984
    6. 'gr' → logprob: -3.6159725189208984
    7. ' occupied' → logprob: -3.7409725189208984
    8. ' occupancy' → logprob: -3.7409725189208984
    9. ' X' → logprob: -3.9909725189208984
    10. ' res' → logprob: -3.9909725189208984

Token 1074: ' on' (ID: 402)
  Prédit: 'occupied'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'occupied' → logprob: -0.6755174398422241
    2. 'used' → logprob: -1.9255174398422241
    3. 'occup' → logprob: -2.0505175590515137
    4. '   ' → logprob: -2.5505175590515137
    5. ' occupied' → logprob: -3.4255175590515137
    6. 'grid' → logprob: -3.5505175590515137
    7. 'visited' → logprob: -3.8005175590515137
    8. '       ' → logprob: -4.550517559051514
    9. 'covered' → logprob: -4.675517559051514
    10. ' used' → logprob: -4.800517559051514

Token 1075: ' peut' (ID: 9216)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7641791105270386
    2. 'used' → logprob: -1.7641791105270386
    3. 'util' → logprob: -2.764179229736328
    4. ' used' → logprob: -2.764179229736328
    5. ' utilise' → logprob: -2.764179229736328
    6. ' use' → logprob: -3.764179229736328
    7. ' =' → logprob: -3.764179229736328
    8. 'occup' → logprob: -4.389179229736328
    9. '_used' → logprob: -4.514179229736328
    10. ' utilize' → logprob: -4.514179229736328

Token 1076: ' utiliser' (ID: 43227)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'util' → logprob: -0.37949490547180176
    2. 'def' → logprob: -1.7544949054718018
    3. ' utiliser' → logprob: -2.2544949054718018
    4. 'use' → logprob: -4.254494667053223
    5. '[' → logprob: -5.129494667053223
    6. 'faire' → logprob: -5.629494667053223
    7. '#' → logprob: -5.754494667053223
    8. ''utiliser' → logprob: -6.129494667053223
    9. 'stock' → logprob: -6.754494667053223
    10. 'create' → logprob: -7.004494667053223

Token 1077: ' une' (ID: 2463)
  Prédit: 'occupied'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'occupied' → logprob: -1.0562916994094849
    2. '[[' → logprob: -1.4312916994094849
    3. 'occup' → logprob: -1.9312916994094849
    4. 'visited' → logprob: -2.0562915802001953
    5. 'a' → logprob: -2.3062915802001953
    6. 'occ' → logprob: -3.6812915802001953
    7. 'grid' → logprob: -5.806291580200195
    8. '[' → logprob: -6.431291580200195
    9. 'used' → logprob: -6.431291580200195
    10. 'occupation' → logprob: -6.556291580200195

Token 1078: ' matr' (ID: 25095)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.5295417904853821
    2. 'grid' → logprob: -1.1545417308807373
    3. 'visited' → logprob: -3.6545417308807373
    4. '[[' → logprob: -3.9045417308807373
    5. 'liste' → logprob: -4.154541969299316
    6. '2' → logprob: -4.529541969299316
    7. 'list' → logprob: -5.154541969299316
    8. 'occup' → logprob: -5.404541969299316
    9. 'matrix' → logprob: -5.529541969299316
    10. 'mat' → logprob: -6.029541969299316

Token 1079: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.015546124428510666
    2. 'ix' → logprob: -4.2655463218688965
    3. 'ic' → logprob: -7.1405463218688965
    4. 'rice' → logprob: -7.6405463218688965
    5. '#' → logprob: -10.390545845031738
    6. '```' → logprob: -10.890545845031738
    7. 'ce' → logprob: -12.140545845031738
    8. '[]' → logprob: -12.390545845031738
    9. 'def' → logprob: -12.515545845031738
    10. 'ices' → logprob: -12.515545845031738

Token 1080: ' bool' (ID: 3792)
  Prédit: 'occupied'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'occupied' → logprob: -0.7512937784194946
    2. ' occupied' → logprob: -1.2512937784194946
    3. '   ' → logprob: -2.501293659210205
    4. 'occup' → logprob: -2.876293659210205
    5. 'visited' → logprob: -3.751293659210205
    6. 'used' → logprob: -4.376293659210205
    7. 'def' → logprob: -4.876293659210205
    8. ' used' → logprob: -4.876293659210205
    9. ' grid' → logprob: -5.126293659210205
    10. ' visited' → logprob: -5.251293659210205

Token 1081: 'é' (ID: 377)
  Prédit: 'ée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.4722009301185608
    2. 'e' → logprob: -1.972200870513916
    3. 'é' → logprob: -2.097200870513916
    4. '[][]' → logprob: -2.472200870513916
    5. '   ' → logprob: -4.347200870513916
    6. '[]' → logprob: -5.347200870513916
    7. ' ' → logprob: -5.597200870513916
    8. '[' → logprob: -5.722200870513916
    9. '       ' → logprob: -6.347200870513916
    10. ' e' → logprob: -7.722200870513916

Token 1082: 'enne' (ID: 17721)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -1.0400326251983643
    2. 'ée' → logprob: -1.4150326251983643
    3. 'e' → logprob: -1.9150326251983643
    4. 'x' → logprob: -2.0400326251983643
    5. 'enne' → logprob: -2.2900326251983643
    6. 'ene' → logprob: -5.790032386779785
    7. 'ène' → logprob: -6.290032386779785
    8. 'ine' → logprob: -6.290032386779785
    9. 'ale' → logprob: -6.290032386779785
    10. '[][]' → logprob: -6.415032386779785

Token 1083: '
' (ID: 198)
  Prédit: 'occupied'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occupied' → logprob: -0.5557676553726196
    2. '   ' → logprob: -2.05576753616333
    3. 'occup' → logprob: -2.30576753616333
    4. '       ' → logprob: -2.55576753616333
    5. 'used' → logprob: -3.43076753616333
    6. 'occupation' → logprob: -3.93076753616333
    7. 'visited' → logprob: -4.05576753616333
    8. 'def' → logprob: -4.18076753616333
    9. '
' → logprob: -4.55576753616333
    10. ' occupied' → logprob: -4.68076753616333

Token 1084: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2212214171886444
    2. '   ' → logprob: -2.721221446990967
    3. 'occupied' → logprob: -2.971221446990967
    4. 'def' → logprob: -3.471221446990967
    5. '
' → logprob: -3.971221446990967
    6. 'occup' → logprob: -4.596221446990967
    7. 'occ' → logprob: -5.221221446990967
    8. 'visited' → logprob: -5.471221446990967
    9. ' occupied' → logprob: -5.846221446990967
    10. 'occupation' → logprob: -6.221221446990967

Token 1085: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8865867257118225
    2. 'def' (adapté à ' def') → logprob: -1.2615866661071777
    3. 'occupied' → logprob: -1.7615866661071777
    4. '
' → logprob: -3.1365866661071777
    5. '       ' → logprob: -3.3865866661071777
    6. 'visited' → logprob: -3.6365866661071777
    7. 'used' → logprob: -4.261586666107178
    8. 'occup' → logprob: -4.761586666107178
    9. 'grid' → logprob: -6.261586666107178
    10. '    
' → logprob: -6.886586666107178

Token 1086: ' back' (ID: 1602)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.4654402434825897
    2. 'can' → logprob: -1.965440273284912
    3. 'back' → logprob: -2.090440273284912
    4. 'check' → logprob: -2.715440273284912
    5. 'valid' → logprob: -4.465440273284912
    6. 'try' → logprob: -4.590440273284912
    7. 'dfs' → logprob: -4.965440273284912
    8. 'solve' → logprob: -5.715440273284912
    9. 'occupied' → logprob: -5.840440273284912
    10. 'mark' → logprob: -5.965440273284912

Token 1087: 'track' (ID: 22792)
  Prédit: 'track'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'track' → logprob: -0.016898926347494125
    2. 'tracking' → logprob: -4.141899108886719
    3. 'tr' → logprob: -8.266899108886719
    4. '_track' → logprob: -8.516899108886719
    5. 'tract' → logprob: -8.766899108886719
    6. 't' → logprob: -9.141899108886719
    7. 'trace' → logprob: -9.516899108886719
    8. '   ' → logprob: -10.641899108886719
    9. '_tracking' → logprob: -11.641899108886719
    10. '\t' → logprob: -11.891899108886719

Token 1088: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.8213570713996887
    2. '(b' → logprob: -0.9463570713996887
    3. '(depth' → logprob: -2.071357011795044
    4. '(idx' → logprob: -3.821357011795044
    5. '(' → logprob: -4.696357250213623
    6. '(pos' → logprob: -5.321357250213623
    7. '(index' → logprob: -5.321357250213623
    8. '(level' → logprob: -5.696357250213623
    9. '(ind' → logprob: -7.821357250213623
    10. ' (' → logprob: -8.696356773376465

Token 1089: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10863833129405975
    2. ',b' → logprob: -2.358638286590576
    3. ' ,' → logprob: -5.858638286590576
    4. '):' → logprob: -6.358638286590576
    5. '   ' → logprob: -6.483638286590576
    6. '(b' → logprob: -6.733638286590576
    7. ',i' → logprob: -7.483638286590576
    8. '(i' → logprob: -8.358638763427734
    9. ',(' → logprob: -8.983638763427734
    10. ' (' → logprob: -10.608638763427734

Token 1090: ' used' (ID: 2061)
  Prédit: 'occupied'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'occupied' → logprob: -0.3598569929599762
    2. 'used' → logprob: -1.3598569631576538
    3. 'occup' → logprob: -3.9848570823669434
    4. 'occupation' → logprob: -4.359857082366943
    5. 'covered' → logprob: -5.234857082366943
    6. 'grid' → logprob: -6.109857082366943
    7. 'chosen' → logprob: -6.234857082366943
    8. 'coverage' → logprob: -6.859857082366943
    9. 'visited' → logprob: -7.109857082366943
    10. ' occupied' → logprob: -7.484857082366943

Token 1091: '_grid' (ID: 34614)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014578535221517086
    2. '):' → logprob: -5.014578342437744
    3. '_rect' → logprob: -6.264578342437744
    4. '):
' → logprob: -6.514578342437744
    5. 'rect' → logprob: -6.764578342437744
    6. ' ,' → logprob: -6.889578342437744
    7. 'Rects' → logprob: -7.389578342437744
    8. 'occup' → logprob: -7.764578342437744
    9. '_cells' → logprob: -8.639578819274902
    10. 'cells' → logprob: -8.764578819274902

Token 1092: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012483402155339718
    2. '):
' → logprob: -4.887483596801758
    3. ' ,' → logprob: -6.137483596801758
    4. '):' → logprob: -6.137483596801758
    5. '   ' → logprob: -8.762483596801758
    6. ',b' → logprob: -9.387483596801758
    7. ',
' → logprob: -10.262483596801758
    8. '       ' → logprob: -10.762483596801758
    9. ',y' → logprob: -10.887483596801758
    10. ',s' → logprob: -11.012483596801758

Token 1093: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08530884236097336
    2. '   ' → logprob: -2.585308790206909
    3. '           ' → logprob: -5.960309028625488
    4. '```' → logprob: -6.960309028625488
    5. ',' → logprob: -7.085309028625488
    6. '(' → logprob: -7.835309028625488
    7. '        
' → logprob: -8.210309028625488
    8. '        ' → logprob: -8.710309028625488
    9. ':' → logprob: -8.710309028625488
    10. '[' → logprob: -8.835309028625488

Token 1094: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20435434579849243
    2. 'if' (adapté à ' if') → logprob: -1.9543542861938477
    3. ' if' → logprob: -3.4543542861938477
    4. '       ' → logprob: -4.579354286193848
    5. '	if' → logprob: -6.704354286193848
    6. ' ' → logprob: -10.704354286193848
    7. '           ' → logprob: -10.954354286193848
    8. '  ' → logprob: -11.204354286193848
    9. '               ' → logprob: -12.204354286193848
    10. '    ' → logprob: -12.704354286193848

Token 1095: ' len' (ID: 4631)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6931489706039429
    2. ' i' → logprob: -0.6931489706039429
    3. ' ' → logprob: -14.318148612976074
    4. '   ' → logprob: -14.568148612976074
    5. '	i' → logprob: -14.568148612976074
    6. '  ' → logprob: -16.06814956665039
    7. ' ' → logprob: -16.44314956665039
    8. '
' → logprob: -17.31814956665039
    9. '    ' → logprob: -17.69314956665039
    10. '=i' → logprob: -17.94314956665039

Token 1096: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2408386766910553
    2. '(res' → logprob: -2.1158387660980225
    3. '(b' → logprob: -2.6158387660980225
    4. '(s' → logprob: -4.115838527679443
    5. 'res' → logprob: -6.365838527679443
    6. 'used' → logprob: -7.365838527679443
    7. '(i' → logprob: -8.240839004516602
    8. '=' → logprob: -8.365839004516602
    9. '(sol' → logprob: -8.615839004516602
    10. '==' → logprob: -8.740839004516602

Token 1097: 'olutions' (ID: 83919)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7858035564422607
    2. '==' → logprob: -1.7858035564422607
    3. ' ==' → logprob: -2.4108035564422607
    4. '   ' → logprob: -2.4108035564422607
    5. ')==' → logprob: -2.9108035564422607
    6. 'olutions' → logprob: -3.0358035564422607
    7. 'used' → logprob: -3.2858035564422607
    8. '[i' → logprob: -4.53580379486084
    9. '[' → logprob: -4.78580379486084
    10. '       ' → logprob: -5.28580379486084

Token 1098: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3691212236881256
    2. '==' → logprob: -1.3691211938858032
    3. ')==' → logprob: -3.4941213130950928
    4. ' ==' → logprob: -3.7441213130950928
    5. '   ' → logprob: -9.244121551513672
    6. ']==' → logprob: -9.994121551513672
    7. '[i' → logprob: -10.369121551513672
    8. ' )' → logprob: -10.869121551513672
    9. '[' → logprob: -10.994121551513672
    10. '           ' → logprob: -11.244121551513672

Token 1099: ' >' (ID: 1424)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.10877819359302521
    2. '==' → logprob: -2.733778238296509
    3. ' >=' → logprob: -3.483778238296509
    4. ' ==' → logprob: -5.35877799987793
    5. '>' → logprob: -6.10877799987793
    6. ')>=' → logprob: -8.48377799987793
    7. '   ' → logprob: -8.98377799987793
    8. ' >' → logprob: -9.85877799987793
    9. ')' → logprob: -10.10877799987793
    10. '[' → logprob: -11.48377799987793

Token 1100: ' MAX' (ID: 16960)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1013893112540245
    2. 'MAX' → logprob: -2.8513894081115723
    3. '=' → logprob: -3.6013894081115723
    4. '0' → logprob: -4.601389408111572
    5. ' ' → logprob: -6.726389408111572
    6. ' MAX' → logprob: -9.601388931274414
    7. ' =' → logprob: -10.976388931274414
    8. '   ' → logprob: -11.851388931274414
    9. '=(' → logprob: -11.976388931274414
    10. '2' → logprob: -11.976388931274414

Token 1101: '_SOL' (ID: 151638)
  Prédit: '_SOL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_SOL' → logprob: -0.006782623939216137
    2. '_S' → logprob: -5.756782531738281
    3. '_' → logprob: -7.006782531738281
    4. '\' → logprob: -7.506782531738281
    5. '_sol' → logprob: -7.756782531738281
    6. 'SOL' → logprob: -7.881782531738281
    7. '_EOL' → logprob: -8.006782531738281
    8. ' _' → logprob: -8.631782531738281
    9. '```' → logprob: -8.756782531738281
    10. '_s' → logprob: -9.131782531738281

Token 1102: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12783823907375336
    2. ':
' → logprob: -2.377838134765625
    3. ':return' → logprob: -3.627838134765625
    4. '   ' → logprob: -8.252838134765625
    5. '           ' → logprob: -9.127838134765625
    6. 'return' → logprob: -9.377838134765625
    7. '-' → logprob: -9.877838134765625
    8. ' or' → logprob: -10.502838134765625
    9. '       ' → logprob: -10.627838134765625
    10. ':
' → logprob: -10.752838134765625

Token 1103: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10683523118495941
    2. '       ' → logprob: -2.481835126876831
    3. '           ' → logprob: -4.60683536529541
    4. ':
' → logprob: -5.48183536529541
    5. 'return' → logprob: -7.10683536529541
    6. '   ' → logprob: -7.23183536529541
    7. ' return' → logprob: -7.35683536529541
    8. ':return' → logprob: -7.35683536529541
    9. ':' → logprob: -8.10683536529541
    10. '	       ' → logprob: -9.23183536529541

Token 1104: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.010349845513701439
    2. '               ' → logprob: -5.260349750518799
    3. ' return' → logprob: -5.510349750518799
    4. '           ' → logprob: -7.010349750518799
    5. '   ' → logprob: -9.385350227355957
    6. '	return' → logprob: -10.010350227355957
    7. '                   ' → logprob: -11.010350227355957
    8. '       ' → logprob: -12.135350227355957
    9. '
' → logprob: -12.635350227355957
    10. ':return' → logprob: -13.885350227355957

Token 1105: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07368068397045135
    2. '           ' → logprob: -2.9486806392669678
    3. '       ' → logprob: -4.323680877685547
    4. '    
' → logprob: -6.573680877685547
    5. '        
' → logprob: -6.698680877685547
    6. '   ' → logprob: -6.823680877685547
    7. '            
' → logprob: -7.698680877685547
    8. '<|end|>' → logprob: -8.198680877685547
    9. '  
' → logprob: -8.323680877685547
    10. '
' → logprob: -8.698680877685547

Token 1106: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5997911691665649
    2. '   ' → logprob: -1.349791169166565
    3. '    
' → logprob: -2.0997910499572754
    4. '
' → logprob: -3.3497910499572754
    5. '        
' → logprob: -4.224791049957275
    6. '               ' → logprob: -5.724791049957275
    7. '           ' → logprob: -5.724791049957275
    8. '\n' → logprob: -6.099791049957275
    9. '  
' → logprob: -6.224791049957275
    10. '            
' → logprob: -6.849791049957275

Token 1107: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.8350309133529663
    2. '   ' → logprob: -1.4600309133529663
    3. '       ' → logprob: -1.7100309133529663
    4. ' if' → logprob: -2.085031032562256
    5. 'b' → logprob: -3.710031032562256
    6. '           ' → logprob: -5.835031032562256
    7. 'rect' → logprob: -7.710031032562256
    8. ' b' → logprob: -7.710031032562256
    9. 'buyer' → logprob: -8.585030555725098
    10. '	if' → logprob: -9.835030555725098

Token 1108: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.011048170737922192
    2. ' i' → logprob: -4.511048316955566
    3. '   ' → logprob: -16.01104736328125
    4. '	i' → logprob: -16.38604736328125
    5. ' ' → logprob: -16.51104736328125
    6. '
' → logprob: -17.26104736328125
    7. '<|end|>' → logprob: -19.13604736328125
    8. '  ' → logprob: -19.26104736328125
    9. ' ' → logprob: -20.01104736328125
    10. '(i' → logprob: -20.01104736328125

Token 1109: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.20149189233779907
    2. '==' → logprob: -1.7014918327331543
    3. ' >=' → logprob: -10.201492309570312
    4. '>=' → logprob: -10.451492309570312
    5. '===' → logprob: -12.951492309570312
    6. '<|end|>' → logprob: -13.326492309570312
    7. '==
' → logprob: -13.451492309570312
    8. ')==' → logprob: -13.576492309570312
    9. ' ==
' → logprob: -13.951492309570312
    10. ']==' → logprob: -14.076492309570312

Token 1110: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -5.512236498361744e-07
    2. ' len' → logprob: -14.500000953674316
    3. '   ' → logprob: -17.875
    4. 'n' → logprob: -18.625
    5. '(len' → logprob: -19.75
    6. '=len' → logprob: -20.875
    7. '           ' → logprob: -21.25
    8. '       ' → logprob: -21.875
    9. '[len' → logprob: -21.875
    10. '
' → logprob: -22.125

Token 1111: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.0001805377542041242
    2. 'buyers' → logprob: -8.6251802444458
    3. 'Buy' → logprob: -15.1251802444458
    4. '(s' → logprob: -15.5001802444458
    5. ' buyers' → logprob: -15.8751802444458
    6. '(' → logprob: -15.8751802444458
    7. 'buy' → logprob: -16.000181198120117
    8. 'b' → logprob: -17.625181198120117
    9. '_buy' → logprob: -17.625181198120117
    10. 's' → logprob: -18.000181198120117

Token 1112: 'uy' (ID: 3731)
  Prédit: 'uy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uy' → logprob: -0.0005113297956995666
    2. 'buyers' → logprob: -8.125511169433594
    3. 'uyer' → logprob: -8.750511169433594
    4. 'u' → logprob: -10.500511169433594
    5. 'yers' → logprob: -11.875511169433594
    6. 'ayers' → logprob: -11.875511169433594
    7. '```' → logprob: -12.125511169433594
    8. 'users' → logprob: -12.375511169433594
    9. 'uye' → logprob: -13.500511169433594
    10. ')' → logprob: -14.125511169433594

Token 1113: 'ers' (ID: 409)
  Prédit: 'ers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ers' → logprob: -0.00045033416245132685
    2. '```' → logprob: -8.500450134277344
    3. 's' → logprob: -8.625450134277344
    4. '
' → logprob: -11.750450134277344
    5. '   ' → logprob: -11.875450134277344
    6. ')' → logprob: -12.375450134277344
    7. '[' → logprob: -12.500450134277344
    8. 'rs' → logprob: -12.625450134277344
    9. 'ors' → logprob: -12.750450134277344
    10. '`' → logprob: -12.750450134277344

Token 1114: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.08015767484903336
    2. '):' → logprob: -2.58015775680542
    3. ':
' → logprob: -6.83015775680542
    4. ':' → logprob: -9.080157279968262
    5. ')' → logprob: -10.705157279968262
    6. '   ' → logprob: -11.080157279968262
    7. '           ' → logprob: -11.330157279968262
    8. '       ' → logprob: -12.080157279968262
    9. '():
' → logprob: -12.330157279968262
    10. '):

' → logprob: -12.580157279968262

Token 1115: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0007968813297338784
    2. '
' → logprob: -8.250797271728516
    3. '           ' → logprob: -8.750797271728516
    4. '       ' → logprob: -8.750797271728516
    5. '                
' → logprob: -9.875797271728516
    6. ':
' → logprob: -10.375797271728516
    7. '```' → logprob: -10.625797271728516
    8. '   ' → logprob: -10.875797271728516
    9. '                   ' → logprob: -11.000797271728516
    10. '<|end|>' → logprob: -11.375797271728516

Token 1116: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.20858509838581085
    2. ' if' → logprob: -2.083585023880005
    3. '           ' → logprob: -3.333585023880005
    4. '       ' → logprob: -4.458585262298584
    5. '                   ' → logprob: -5.208585262298584
    6. ' for' → logprob: -5.458585262298584
    7. '   ' → logprob: -5.583585262298584
    8. 'if' → logprob: -6.083585262298584
    9. ' res' → logprob: -8.958584785461426
    10. 'for' → logprob: -9.208584785461426

Token 1117: ' Solution' (ID: 20858)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.35756245255470276
    2. '#' → logprob: -2.23256254196167
    3. 'total' → logprob: -2.60756254196167
    4. 'solutions' → logprob: -3.35756254196167
    5. 'area' → logprob: -3.73256254196167
    6. 'occupied' → logprob: -4.35756254196167
    7. 'covered' → logprob: -4.48256254196167
    8. '   ' → logprob: -4.98256254196167
    9. 'for' → logprob: -5.23256254196167
    10. 'all' → logprob: -5.48256254196167

Token 1118: ' trouv' (ID: 40254)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5280517339706421
    2. '           ' → logprob: -1.028051733970642
    3. 'valid' → logprob: -4.778051853179932
    4. 'if' → logprob: -5.028051853179932
    5. 'for' → logprob: -5.028051853179932
    6. '=' → logprob: -5.278051853179932
    7. '#' → logprob: -5.528051853179932
    8. '                   ' → logprob: -5.528051853179932
    9. ':' → logprob: -5.653051853179932
    10. ' =' → logprob: -5.778051853179932

Token 1119: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.395252525806427
    2. '               ' → logprob: -1.7702524662017822
    3. '           ' → logprob: -2.5202524662017822
    4. 'é' → logprob: -3.0202524662017822
    5. 'e' → logprob: -4.270252704620361
    6. '                   ' → logprob: -5.395252704620361
    7. 'ées' → logprob: -5.895252704620361
    8. '       ' → logprob: -6.520252704620361
    9. ':
' → logprob: -6.770252704620361
    10. '=' → logprob: -7.020252704620361

Token 1120: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.20392870903015137
    2. '           ' → logprob: -1.7039287090301514
    3. 'if' → logprob: -7.2039289474487305
    4. '                   ' → logprob: -7.4539289474487305
    5. ' if' → logprob: -7.5789289474487305
    6. '       ' → logprob: -8.32892894744873
    7. ',' → logprob: -9.20392894744873
    8. '   ' → logprob: -9.32892894744873
    9. 'for' → logprob: -9.57892894744873
    10. '
' → logprob: -9.70392894744873

Token 1121: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12041175365447998
    2. '                   ' → logprob: -2.3704118728637695
    3. '           ' → logprob: -4.7454118728637695
    4. '   ' → logprob: -5.4954118728637695
    5. ' for' → logprob: -5.4954118728637695
    6. 'for' → logprob: -6.8704118728637695
    7. '
' → logprob: -7.1204118728637695
    8. '       ' → logprob: -8.37041187286377
    9. ' if' → logprob: -8.49541187286377
    10. '```' → logprob: -8.62041187286377

Token 1122: ' solution' (ID: 7578)
  Prédit: 'solutions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solutions' → logprob: -0.47938039898872375
    2. ' solutions' → logprob: -1.8543803691864014
    3. '   ' → logprob: -2.3543803691864014
    4. '               ' → logprob: -2.8543803691864014
    5. '           ' → logprob: -3.6043803691864014
    6. '       ' → logprob: -3.7293803691864014
    7. '                   ' → logprob: -4.6043806076049805
    8. 'sol' → logprob: -5.3543806076049805
    9. ' sols' → logprob: -7.1043806076049805
    10. 'solution' (adapté à ' solution') → logprob: -7.6043806076049805

Token 1123: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.002489214763045311
    2. ' =' → logprob: -6.37748908996582
    3. '.append' → logprob: -7.87748908996582
    4. '=' → logprob: -7.87748908996582
    5. '=s' → logprob: -11.50248908996582
    6. ' s' → logprob: -12.37748908996582
    7. '.' → logprob: -12.87748908996582
    8. '   ' → logprob: -13.12748908996582
    9. '       ' → logprob: -13.75248908996582
    10. '```' → logprob: -13.87748908996582

Token 1124: ' []
' (ID: 8911)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.36205101013183594
    2. '[' → logprob: -1.237051010131836
    3. '[]
' → logprob: -4.612051010131836
    4. '[(' → logprob: -5.862051010131836
    5. 'list' → logprob: -8.112051010131836
    6. '[]' → logprob: -8.987051010131836
    7. '[list' → logprob: -9.362051010131836
    8. ' used' → logprob: -9.862051010131836
    9. ' [' → logprob: -9.987051010131836
    10. 'tuple' → logprob: -10.362051010131836

Token 1125: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.053996626287698746
    2. ' for' → logprob: -3.5539965629577637
    3. 'for' → logprob: -3.8039965629577637
    4. '                   ' → logprob: -7.178996562957764
    5. '           ' → logprob: -7.428996562957764
    6. '.append' → logprob: -9.178997039794922
    7. '
' → logprob: -9.553997039794922
    8. '[' → logprob: -10.303997039794922
    9. '       ' → logprob: -10.553997039794922
    10. '   ' → logprob: -11.303997039794922

Token 1126: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.08457014709711075
    2. ' for' → logprob: -3.2095701694488525
    3. '               ' → logprob: -3.2095701694488525
    4. '                   ' → logprob: -8.709569931030273
    5. 'solution' → logprob: -8.834569931030273
    6. '           ' → logprob: -11.209569931030273
    7. '   ' → logprob: -12.459569931030273
    8. ' solution' → logprob: -12.834569931030273
    9. '```' → logprob: -12.834569931030273
    10. '
' → logprob: -12.959569931030273

Token 1127: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.011553487740457058
    2. 'j' → logprob: -4.8865532875061035
    3. 'rect' → logprob: -6.1365532875061035
    4. 'buyer' → logprob: -6.7615532875061035
    5. 'idx' → logprob: -8.136553764343262
    6. 'bid' → logprob: -9.136553764343262
    7. 'bi' → logprob: -9.386553764343262
    8. ' b' → logprob: -10.136553764343262
    9. 'r' → logprob: -10.261553764343262
    10. 'bj' → logprob: -11.136553764343262

Token 1128: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005294238682836294
    2. 'in' → logprob: -5.255294322967529
    3. 'b' → logprob: -11.505293846130371
    4. ' ' → logprob: -11.505293846130371
    5. 'token' → logprob: -12.005293846130371
    6. 'idx' → logprob: -12.005293846130371
    7. 's' → logprob: -12.130293846130371
    8. 'd' → logprob: -12.755293846130371
    9. ',' → logprob: -13.255293846130371
    10. 'tokens' → logprob: -13.380293846130371

Token 1129: ' buyers' (ID: 25359)
  Prédit: 'buyers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'buyers' → logprob: -0.007689440157264471
    2. 'range' → logprob: -5.132689476013184
    3. ' buyers' → logprob: -6.882689476013184
    4. 'rect' → logprob: -7.632689476013184
    5. 'buy' → logprob: -9.007689476013184
    6. 'buyer' → logprob: -10.132689476013184
    7. ' range' → logprob: -10.507689476013184
    8. '[' → logprob: -11.007689476013184
    9. 'res' → logprob: -11.007689476013184
    10. 'solutions' → logprob: -11.007689476013184

Token 1130: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2991819381713867
    2. ':' → logprob: -2.2991819381713867
    3. '                   ' → logprob: -2.2991819381713867
    4. '               ' → logprob: -3.6741819381713867
    5. ',' → logprob: -4.049181938171387
    6. '[' → logprob: -5.174181938171387
    7. '                       ' → logprob: -5.924181938171387
    8. '           ' → logprob: -6.174181938171387
    9. '```' → logprob: -6.799181938171387
    10. '):
' → logprob: -7.299181938171387

Token 1131: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0006065295310690999
    2. ',' → logprob: -8.000606536865234
    3. ' in' → logprob: -9.000606536865234
    4. '               ' → logprob: -10.000606536865234
    5. '                       ' → logprob: -11.250606536865234
    6. '                    ' → logprob: -11.500606536865234
    7. ':' → logprob: -11.750606536865234
    8. '   ' → logprob: -12.250606536865234
    9. ':
' → logprob: -12.375606536865234
    10. ' for' → logprob: -12.375606536865234

Token 1132: ' solution' (ID: 7578)
  Prédit: 'solution'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solution' (adapté à ' solution') → logprob: -0.6011800169944763
    2. '                   ' → logprob: -1.476180076599121
    3. ' solution' → logprob: -1.601180076599121
    4. ' for' → logprob: -5.101180076599121
    5. '   ' → logprob: -5.351180076599121
    6. '                       ' → logprob: -5.851180076599121
    7. 'for' → logprob: -6.101180076599121
    8. '       ' → logprob: -6.601180076599121
    9. ' if' → logprob: -7.101180076599121
    10. 'if' → logprob: -7.351180076599121

Token 1133: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0011761783389374614
    2. '=' → logprob: -7.876176357269287
    3. 'append' → logprob: -8.626175880432129
    4. '.' → logprob: -8.626175880432129
    5. '.extend' → logprob: -8.876175880432129
    6. ',' → logprob: -9.251175880432129
    7. '+=' → logprob: -10.001175880432129
    8. '                   ' → logprob: -10.126175880432129
    9. ' =' → logprob: -10.376175880432129
    10. ' +=' → logprob: -10.876175880432129

Token 1134: '(res' (ID: 8331)
  Prédit: '(rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(rect' → logprob: -0.4752275347709656
    2. 'rect' → logprob: -0.9752275347709656
    3. ' rect' → logprob: -7.350227355957031
    4. '((' → logprob: -7.975227355957031
    5. '(' → logprob: -9.350227355957031
    6. '   ' → logprob: -10.100227355957031
    7. ' (' → logprob: -11.850227355957031
    8. '	rect' → logprob: -11.975227355957031
    9. '(tuple' → logprob: -12.100227355957031
    10. '(
' → logprob: -13.100227355957031

Token 1135: '[' (ID: 58)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.847549319267273
    2. '[' → logprob: -1.222549319267273
    3. '[len' → logprob: -1.472549319267273
    4. '[i' → logprob: -3.2225494384765625
    5. '[b' → logprob: -5.0975494384765625
    6. '.append' → logprob: -7.8475494384765625
    7. '[arr' → logprob: -8.597549438476562
    8. '[
' → logprob: -8.722549438476562
    9. '[[' → logprob: -8.722549438476562
    10. '[count' → logprob: -9.097549438476562

Token 1136: 'buyers' (ID: 196921)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.040214065462350845
    2. 'len' → logprob: -4.5402140617370605
    3. 'buyers' → logprob: -4.6652140617370605
    4. '[i' → logprob: -4.9152140617370605
    5. 'b' → logprob: -5.0402140617370605
    6. '[' → logprob: -7.1652140617370605
    7. 'res' → logprob: -7.1652140617370605
    8. '[len' → logprob: -7.4152140617370605
    9. '])' → logprob: -7.5402140617370605
    10. ']' → logprob: -7.6652140617370605

Token 1137: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -0.0060186185874044895
    2. '[i' → logprob: -5.13101863861084
    3. 'index' → logprob: -9.50601863861084
    4. ' .' → logprob: -12.50601863861084
    5. 'b' → logprob: -13.00601863861084
    6. '[' → logprob: -13.13101863861084
    7. 'i' → logprob: -13.38101863861084
    8. '].' → logprob: -13.63101863861084
    9. '.' → logprob: -13.75601863861084
    10. '   ' → logprob: -14.38101863861084

Token 1138: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.0018251233268529177
    2. 'b' → logprob: -6.751825332641602
    3. '[b' → logprob: -7.626825332641602
    4. '(i' → logprob: -9.376825332641602
    5. '(' → logprob: -10.626825332641602
    6. ']' → logprob: -10.876825332641602
    7. ' (' → logprob: -11.751825332641602
    8. '](' → logprob: -11.876825332641602
    9. '```' → logprob: -12.126825332641602
    10. '][' → logprob: -12.626825332641602

Token 1139: ')])
' (ID: 66560)
  Prédit: ')])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')])' → logprob: -0.484590083360672
    2. '])' → logprob: -0.9845900535583496
    3. ']))' → logprob: -5.73459005355835
    4. ')])
' → logprob: -5.85959005355835
    5. '])]' → logprob: -6.73459005355835
    6. '])
' → logprob: -6.85959005355835
    7. ']])' → logprob: -6.98459005355835
    8. ')' → logprob: -7.35959005355835
    9. ')]' → logprob: -8.109590530395508
    10. ']))
' → logprob: -9.234590530395508

Token 1140: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04427752643823624
    2. '                   ' → logprob: -3.1692774295806885
    3. '                       ' → logprob: -8.29427719116211
    4. '
' → logprob: -8.29427719116211
    5. '```' → logprob: -8.54427719116211
    6. ')
' → logprob: -8.79427719116211
    7. ')' → logprob: -8.79427719116211
    8. '           ' → logprob: -9.79427719116211
    9. '                    
' → logprob: -9.91927719116211
    10. '                
' → logprob: -10.41927719116211

Token 1141: ' solutions' (ID: 9368)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00022022522171027958
    2. '
' → logprob: -9.12522029876709
    3. 'for' → logprob: -10.62522029876709
    4. ' for' → logprob: -10.75022029876709
    5. '                
' → logprob: -10.75022029876709
    6. '           ' → logprob: -10.87522029876709
    7. '                   ' → logprob: -11.50022029876709
    8. 'return' → logprob: -12.12522029876709
    9. ' if' → logprob: -13.00022029876709
    10. '       ' → logprob: -13.75022029876709

Token 1142: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00011021859245374799
    2. '.' → logprob: -9.125110626220703
    3. '.extend' → logprob: -14.125110626220703
    4. 'append' → logprob: -15.375110626220703
    5. ' .' → logprob: -16.500110626220703
    6. '.app' → logprob: -16.750110626220703
    7. '.clear' → logprob: -17.750110626220703
    8. '.Append' → logprob: -18.375110626220703
    9. 'Append' → logprob: -18.500110626220703
    10. '_append' → logprob: -18.500110626220703

Token 1143: '(solution' (ID: 126940)
  Prédit: '(res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.5224280953407288
    2. '(list' → logprob: -1.272428035736084
    3. '(solution' → logprob: -2.647428035736084
    4. '(tuple' → logprob: -2.897428035736084
    5. '([' → logprob: -8.147428512573242
    6. '(' → logprob: -8.272428512573242
    7. '(result' → logprob: -8.647428512573242
    8. '(sol' → logprob: -10.647428512573242
    9. '((' → logprob: -11.022428512573242
    10. '(sorted' → logprob: -13.397428512573242

Token 1144: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05931076034903526
    2. '               ' → logprob: -3.0593106746673584
    3. ')
' → logprob: -4.5593109130859375
    4. ')return' → logprob: -9.309310913085938
    5. '           ' → logprob: -9.684310913085938
    6. '<|end|>' → logprob: -11.059310913085938
    7. '                   ' → logprob: -11.684310913085938
    8. '<|end|>' → logprob: -12.934310913085938
    9. '       ' → logprob: -13.184310913085938
    10. ')
' → logprob: -13.309310913085938

Token 1145: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0017188541823998094
    2. '           ' → logprob: -6.376718997955322
    3. 'return' → logprob: -11.376718521118164
    4. '```' → logprob: -13.251718521118164
    5. '       ' → logprob: -13.751718521118164
    6. '                   ' → logprob: -14.251718521118164
    7. '	           ' → logprob: -14.751718521118164
    8. '   ' → logprob: -15.251718521118164
    9. '
' → logprob: -15.376718521118164
    10. '		       ' → logprob: -15.501718521118164

Token 1146: ' return' (ID: 622)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01135195977985859
    2. 'return' (adapté à ' return') → logprob: -4.511352062225342
    3. '           ' → logprob: -8.136351585388184
    4. ' return' → logprob: -11.636351585388184
    5. '   ' → logprob: -14.511351585388184
    6. '	return' → logprob: -14.636351585388184
    7. '                   ' → logprob: -15.011351585388184
    8. '       ' → logprob: -15.011351585388184
    9. '			' → logprob: -15.136351585388184
    10. '	           ' → logprob: -15.136351585388184

Token 1147: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16586896777153015
    2. '
' → logprob: -2.1658689975738525
    3. '       ' → logprob: -4.290868759155273
    4. '        
' → logprob: -4.915868759155273
    5. '            
' → logprob: -4.915868759155273
    6. '    
' → logprob: -5.415868759155273
    7. '		' → logprob: -6.165868759155273
    8. '	       ' → logprob: -6.915868759155273
    9. '   ' → logprob: -7.540868759155273
    10. '		
' → logprob: -7.915868759155273

Token 1148: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11623185127973557
    2. '       ' → logprob: -2.491231918334961
    3. '           ' → logprob: -4.491231918334961
    4. 'b' → logprob: -4.616231918334961
    5. '    
' → logprob: -5.741231918334961
    6. '
' → logprob: -6.866231918334961
    7. '        
' → logprob: -7.616231918334961
    8. '```' → logprob: -7.991231918334961
    9. '  
' → logprob: -8.616231918334961
    10. ' b' → logprob: -8.866231918334961

Token 1149: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.3573363423347473
    2. 'for' → logprob: -1.7323362827301025
    3. '           ' → logprob: -2.7323362827301025
    4. '   ' → logprob: -3.1073362827301025
    5. ' for' → logprob: -4.857336521148682
    6. '       ' → logprob: -5.857336521148682
    7. 'buyer' → logprob: -6.857336521148682
    8. 'buyers' → logprob: -7.357336521148682
    9. ' b' → logprob: -7.857336521148682
    10. 'buy' → logprob: -7.982336521148682

Token 1150: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5091601610183716
    2. '=' → logprob: -1.0091601610183716
    3. '_rect' → logprob: -4.384160041809082
    4. '_candidates' → logprob: -4.384160041809082
    5. '   ' → logprob: -6.134160041809082
    6. '_candidate' → logprob: -6.509160041809082
    7. '_' → logprob: -6.759160041809082
    8. ',' → logprob: -7.134160041809082
    9. 'for' → logprob: -7.384160041809082
    10. 'rect' → logprob: -7.634160041809082

Token 1151: ' buyers' (ID: 25359)
  Prédit: 'buyers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'buyers' → logprob: -4.572941179503687e-05
    2. ' buyers' → logprob: -10.000045776367188
    3. 'buy' → logprob: -16.250045776367188
    4. '   ' → logprob: -16.500045776367188
    5. 'buyer' → logprob: -18.375045776367188
    6. 'b' → logprob: -19.125045776367188
    7. 'users' → logprob: -19.625045776367188
    8. 'owners' → logprob: -20.375045776367188
    9. '       ' → logprob: -20.750045776367188
    10. ' ' → logprob: -21.500045776367188

Token 1152: '[i' (ID: 1768)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.27552151679992676
    2. 'for' → logprob: -2.1505215167999268
    3. '       ' → logprob: -3.0255215167999268
    4. '
' → logprob: -3.4005215167999268
    5. '   ' → logprob: -3.7755215167999268
    6. ' for' → logprob: -4.650521278381348
    7. '    
' → logprob: -6.025521278381348
    8. '            
' → logprob: -6.400521278381348
    9. '        
' → logprob: -6.525521278381348
    10. '[' → logprob: -6.775521278381348

Token 1153: ']
' (ID: 1592)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2811233699321747
    2. ')' → logprob: -2.156123399734497
    3. ']' → logprob: -3.031123399734497
    4. ')
' → logprob: -3.031123399734497
    5. ']
' → logprob: -3.531123399734497
    6. '       ' → logprob: -6.906123161315918
    7. '
' → logprob: -7.281123161315918
    8. '   ' → logprob: -7.906123161315918
    9. 'for' → logprob: -8.656123161315918
    10. '            
' → logprob: -8.781123161315918

Token 1154: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0316598117351532
    2. 'for' → logprob: -4.0316596031188965
    3. ' for' → logprob: -4.4066596031188965
    4. '       ' → logprob: -7.1566596031188965
    5. '   ' → logprob: -8.031660079956055
    6. '```' → logprob: -9.406660079956055
    7. 'tokens' → logprob: -11.531660079956055
    8. '	for' → logprob: -11.906660079956055
    9. '               ' → logprob: -12.531660079956055
    10. '            
' → logprob: -12.531660079956055

Token 1155: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.2258477360010147
    2. ' for' → logprob: -1.7258477210998535
    3. '           ' → logprob: -3.7258477210998535
    4. '```' → logprob: -10.600848197937012
    5. '            
' → logprob: -11.850848197937012
    6. '	for' → logprob: -11.975848197937012
    7. '   ' → logprob: -12.475848197937012
    8. '       ' → logprob: -13.350848197937012
    9. '
' → logprob: -14.475848197937012
    10. ' ' → logprob: -15.600848197937012

Token 1156: ' rect' (ID: 13107)
  Prédit: 'rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rect' → logprob: -0.001880923518911004
    2. 'r' → logprob: -6.501881122589111
    3. ' rect' → logprob: -8.001880645751953
    4. 'candidate' → logprob: -10.126880645751953
    5. 'idx' → logprob: -13.251880645751953
    6. 'cand' → logprob: -14.251880645751953
    7. 'rc' → logprob: -14.876880645751953
    8. ' candidate' → logprob: -15.251880645751953
    9. 'rec' → logprob: -15.501880645751953
    10. ' r' → logprob: -15.626880645751953

Token 1157: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04888210818171501
    2. 'in' → logprob: -3.048882007598877
    3. 's' → logprob: -8.173882484436035
    4. '_in' → logprob: -12.923882484436035
    5. '	in' → logprob: -13.298882484436035
    6. 'tokens' → logprob: -13.673882484436035
    7. ' ' → logprob: -14.048882484436035
    8. '_' → logprob: -14.298882484436035
    9. 't' → logprob: -14.298882484436035
    10. 'n' → logprob: -14.423882484436035

Token 1158: ' rect' (ID: 13107)
  Prédit: 'rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rect' → logprob: -0.0052350712940096855
    2. ' rect' → logprob: -5.255235195159912
    3. '   ' → logprob: -14.755234718322754
    4. '(rect' → logprob: -15.005234718322754
    5. '	rect' → logprob: -15.380234718322754
    6. '.rect' → logprob: -16.63023567199707
    7. '       ' → logprob: -17.50523567199707
    8. '           ' → logprob: -17.50523567199707
    9. '_rect' → logprob: -17.63023567199707
    10. '
' → logprob: -17.75523567199707

Token 1159: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -5.836499985889532e-05
    2. '[s' → logprob: -10.1250581741333
    3. '[b' → logprob: -11.1250581741333
    4. '{s' → logprob: -14.1250581741333
    5. 'rect' → logprob: -14.5000581741333
    6. '[' → logprob: -14.5000581741333
    7. '```' → logprob: -15.1250581741333
    8. ' s' → logprob: -15.5000581741333
    9. 'angle' → logprob: -15.6250581741333
    10. 'b' → logprob: -15.8750581741333

Token 1160: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -5.157039049663581e-05
    2. 'b' → logprob: -9.875051498413086
    3. '\b' → logprob: -18.250051498413086
    4. '```' → logprob: -18.375051498413086
    5. '	b' → logprob: -18.875051498413086
    6. ' [' → logprob: -19.625051498413086
    7. '   ' → logprob: -20.250051498413086
    8. '[
' → logprob: -20.250051498413086
    9. '[' → logprob: -20.250051498413086
    10. '[[' → logprob: -20.375051498413086

Token 1161: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.44082340598106384
    2. ']:' → logprob: -1.1908234357833862
    3. ':' → logprob: -3.6908233165740967
    4. '):
' → logprob: -4.190823554992676
    5. ']):' → logprob: -5.940823554992676
    6. '[' → logprob: -6.065823554992676
    7. '[b' → logprob: -6.190823554992676
    8. ']:
' → logprob: -6.315823554992676
    9. '           ' → logprob: -6.940823554992676
    10. ':
' → logprob: -7.690823554992676

Token 1162: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00800405815243721
    2. '<|end|>' → logprob: -6.008004188537598
    3. '                
' → logprob: -6.883004188537598
    4. '           ' → logprob: -6.883004188537598
    5. '```' → logprob: -7.508004188537598
    6. '       ' → logprob: -7.508004188537598
    7. '	           ' → logprob: -7.633004188537598
    8. '	       ' → logprob: -8.258004188537598
    9. '		       ' → logprob: -8.633004188537598
    10. '                   ' → logprob: -8.758004188537598

Token 1163: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5125396251678467
    2. '               ' → logprob: -1.3875396251678467
    3. 'x' → logprob: -2.3875396251678467
    4. '   ' → logprob: -3.6375396251678467
    5. 'occupied' → logprob: -4.512539863586426
    6. 'valid' → logprob: -5.137539863586426
    7. 'can' → logprob: -6.012539863586426
    8. '#' (adapté à ' #') → logprob: -6.012539863586426
    9. 'new' → logprob: -6.387539863586426
    10. ' can' → logprob: -6.512539863586426

Token 1164: ' Tester' (ID: 106986)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.3454372882843018
    2. 'x' → logprob: -1.5954372882843018
    3. 'over' → logprob: -1.8454372882843018
    4. 'ok' → logprob: -2.3454372882843018
    5. 'valid' → logprob: -2.7204372882843018
    6. 'occupied' → logprob: -2.8454372882843018
    7. ' overlap' → logprob: -3.7204372882843018
    8. 'can' → logprob: -3.7204372882843018
    9. '#' → logprob: -3.9704372882843018
    10. ' can' → logprob: -4.095437049865723

Token 1165: ' si' (ID: 1784)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.8602902889251709
    2. 'occupied' → logprob: -1.610290288925171
    3. 'over' → logprob: -2.360290288925171
    4. '               ' → logprob: -2.360290288925171
    5. '(x' → logprob: -2.985290288925171
    6. '   ' → logprob: -3.360290288925171
    7. '                   ' → logprob: -3.610290288925171
    8. 'occup' → logprob: -3.985290288925171
    9. 'covered' → logprob: -4.23529052734375
    10. 'can' → logprob: -4.73529052734375

Token 1166: ' rect' (ID: 13107)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.3842720091342926
    2. ' all' → logprob: -1.7592719793319702
    3. 'not' → logprob: -2.2592720985412598
    4. ' not' → logprob: -3.2592720985412598
    5. 'any' → logprob: -5.75927209854126
    6. ' any' → logprob: -7.50927209854126
    7. 'occupied' → logprob: -9.759271621704102
    8. 'can' → logprob: -10.009271621704102
    9. 'used' → logprob: -10.384271621704102
    10. ' True' → logprob: -10.509271621704102

Token 1167: ' chev' (ID: 127415)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -1.1252609491348267
    2. 'occup' → logprob: -1.8752609491348267
    3. ' est' → logprob: -2.625260829925537
    4. 'not' → logprob: -2.750260829925537
    5. '               ' → logprob: -3.000260829925537
    6. 'inter' → logprob: -3.125260829925537
    7. ' is' → logprob: -3.750260829925537
    8. ' occup' → logprob: -3.750260829925537
    9. '_inter' → logprob: -4.250260829925537
    10. '[' → logprob: -4.375260829925537

Token 1168: 'auche' (ID: 143141)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'que' → logprob: -1.0207422971725464
    2. 'er' → logprob: -1.1457422971725464
    3. 're' → logprob: -2.145742416381836
    4. 'erve' → logprob: -2.520742416381836
    5. 'r' → logprob: -3.020742416381836
    6. 'e' → logprob: -4.020742416381836
    7. '#' → logprob: -5.270742416381836
    8. '       ' → logprob: -5.395742416381836
    9. '   ' → logprob: -5.520742416381836
    10. 'over' → logprob: -5.520742416381836

Token 1169: ' déjà' (ID: 21229)
  Prédit: ' used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' used' → logprob: -0.29036885499954224
    2. 'used' → logprob: -2.5403687953948975
    3. ' not' → logprob: -2.6653687953948975
    4. ' any' → logprob: -2.9153687953948975
    5. 'not' → logprob: -4.165369033813477
    6. '_used' → logprob: -4.665369033813477
    7. 'any' → logprob: -5.415369033813477
    8. '_' → logprob: -5.665369033813477
    9. ' ' → logprob: -6.165369033813477
    10. '               ' → logprob: -6.290369033813477

Token 1170: ' utilisé' (ID: 53138)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -1.0692658424377441
    2. 'any' → logprob: -1.3192658424377441
    3. ' used' → logprob: -1.4442658424377441
    4. ' any' → logprob: -1.9442658424377441
    5. ' with' → logprob: -5.944265842437744
    6. 'occupied' → logprob: -6.194265842437744
    7. 'with' → logprob: -6.819265842437744
    8. '_any' → logprob: -7.319265842437744
    9. '_used' → logprob: -7.569265842437744
    10. '```' → logprob: -7.694265842437744

Token 1171: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8491291999816895
    2. 'd' → logprob: -2.5991291999816895
    3. 'used' → logprob: -2.7241291999816895
    4. 'occupied' → logprob: -2.9741291999816895
    5. 'rect' → logprob: -3.2241291999816895
    6. '_grid' → logprob: -3.3491291999816895
    7. 'if' → logprob: -3.4741291999816895
    8. '                   ' → logprob: -3.8491291999816895
    9. 'area' → logprob: -3.8491291999816895
    10. ':' → logprob: -3.8491291999816895

Token 1172: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.18381458520889282
    2. '_grid' → logprob: -2.308814525604248
    3. '                   ' → logprob: -3.558814525604248
    4. '_' → logprob: -5.058814525604248
    5. '_rect' → logprob: -5.058814525604248
    6. ':' → logprob: -5.308814525604248
    7. '```' → logprob: -5.683814525604248
    8. ' or' → logprob: -6.308814525604248
    9. ':
' → logprob: -6.433814525604248
    10. '_cells' → logprob: -6.558814525604248

Token 1173: ' x' (ID: 1215)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.8821544051170349
    2. ' occupied' → logprob: -2.0071544647216797
    3. ' if' → logprob: -2.2571544647216797
    4. 'occupied' → logprob: -2.3821544647216797
    5. 'if' → logprob: -2.8821544647216797
    6. '               ' → logprob: -2.8821544647216797
    7. ' x' → logprob: -3.5071544647216797
    8. ' area' → logprob: -4.38215446472168
    9. ' ok' → logprob: -4.38215446472168
    10. ' can' → logprob: -4.50715446472168

Token 1174: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017691855318844318
    2. ',' → logprob: -7.001769065856934
    3. ' in' → logprob: -8.626769065856934
    4. ' =' → logprob: -8.626769065856934
    5. '=' → logprob: -9.126769065856934
    6. '_' → logprob: -9.626769065856934
    7. '```' → logprob: -9.751769065856934
    8. 'for' → logprob: -9.876769065856934
    9. ' ,' → logprob: -10.126769065856934
    10. ')' → logprob: -10.501769065856934

Token 1175: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.45419031381607056
    2. ',' → logprob: -1.2041902542114258
    3. ' ,' → logprob: -3.329190254211426
    4. ',x' → logprob: -3.579190254211426
    5. ',
' → logprob: -7.079190254211426
    6. ' ,
' → logprob: -9.329190254211426
    7. '=' → logprob: -9.704190254211426
    8. ' <=' → logprob: -9.704190254211426
    9. ' x' → logprob: -9.829190254211426
    10. ',n' → logprob: -10.454190254211426

Token 1176: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003571535926312208
    2. ',' → logprob: -8.375357627868652
    3. '=' → logprob: -9.875357627868652
    4. '2' → logprob: -11.000357627868652
    5. ' ' → logprob: -11.250357627868652
    6. '```' → logprob: -11.250357627868652
    7. '<|end|>' → logprob: -11.750357627868652
    8. ' ,' → logprob: -11.875357627868652
    9. ' =' → logprob: -11.875357627868652
    10. '   ' → logprob: -12.500357627868652

Token 1177: ',x' (ID: 29748)
  Prédit: ',y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.739260196685791
    2. ',' → logprob: -1.364260196685791
    3. ',x' → logprob: -1.364260196685791
    4. ' ,' → logprob: -5.114260196685791
    5. '<|end|>' → logprob: -6.364260196685791
    6. ',
' → logprob: -7.239260196685791
    7. '=' → logprob: -7.489260196685791
    8. ',u' → logprob: -7.614260196685791
    9. ',int' → logprob: -8.114259719848633
    10. ',user' → logprob: -8.614259719848633

Token 1178: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.05862940847873688
    2. '1' → logprob: -2.9336295127868652
    3. ',y' → logprob: -5.933629512786865
    4. ',' → logprob: -7.808629512786865
    5. '```' → logprob: -8.308629035949707
    6. '0' → logprob: -9.058629035949707
    7. ',x' → logprob: -9.058629035949707
    8. ' ' → logprob: -9.683629035949707
    9. '=' → logprob: -9.933629035949707
    10. 'y' → logprob: -10.433629035949707

Token 1179: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.08251003175973892
    2. ',' → logprob: -3.082509994506836
    3. ',x' → logprob: -3.457509994506836
    4. ' ,' → logprob: -6.332509994506836
    5. '=' → logprob: -10.707509994506836
    6. ',b' → logprob: -11.332509994506836
    7. ',
' → logprob: -11.457509994506836
    8. '```' → logprob: -12.457509994506836
    9. ' =' → logprob: -12.832509994506836
    10. ',n' → logprob: -12.957509994506836

Token 1180: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00013035668234806508
    2. '2' → logprob: -9.500130653381348
    3. '=' → logprob: -9.875130653381348
    4. '```' → logprob: -13.250130653381348
    5. ' ' → logprob: -14.125130653381348
    6. ',' → logprob: -14.125130653381348
    7. '                   ' → logprob: -15.625130653381348
    8. ' =' → logprob: -16.25012969970703
    9. '   ' → logprob: -16.37512969970703
    10. '
' → logprob: -17.12512969970703

Token 1181: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1175403594970703
    2. '               ' → logprob: -1.3675403594970703
    3. '                   ' → logprob: -1.6175403594970703
    4. '=' → logprob: -1.8675403594970703
    5. ':
' → logprob: -3.8675403594970703
    6. ':' → logprob: -4.61754035949707
    7. ',' → logprob: -4.74254035949707
    8. ' for' → logprob: -5.11754035949707
    9. '   ' → logprob: -5.99254035949707
    10. ' in' → logprob: -5.99254035949707

Token 1182: ' rect' (ID: 13107)
  Prédit: 'rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rect' → logprob: -0.014163747429847717
    2. ' rect' → logprob: -4.264163970947266
    3. '	rect' → logprob: -16.014163970947266
    4. '   ' → logprob: -16.889163970947266
    5. '_rect' → logprob: -17.639163970947266
    6. '(rect' → logprob: -17.639163970947266
    7. 'rest' → logprob: -18.264163970947266
    8. 'rec' → logprob: -18.889163970947266
    9. 'x' → logprob: -19.139163970947266
    10. '               ' → logprob: -19.639163970947266

Token 1183: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0027617255691438913
    2. '
' → logprob: -6.3777618408203125
    3. ' for' → logprob: -7.6277618408203125
    4. '                
' → logprob: -8.252761840820312
    5. '           ' → logprob: -9.877761840820312
    6. ',' → logprob: -10.127761840820312
    7. '```' → logprob: -10.377761840820312
    8. '                   ' → logprob: -10.502761840820312
    9. 'for' → logprob: -10.627761840820312
    10. '       ' → logprob: -10.627761840820312

Token 1184: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0029129309114068747
    2. '                   ' → logprob: -6.502912998199463
    3. '```' → logprob: -7.377912998199463
    4. '   ' → logprob: -7.877912998199463
    5. ' for' → logprob: -8.502912521362305
    6. 'for' → logprob: -9.502912521362305
    7. '       ' → logprob: -10.502912521362305
    8. '           ' → logprob: -10.877912521362305
    9. '``' → logprob: -11.377912521362305
    10. ' valid' → logprob: -11.502912521362305

Token 1185: ' conflict' (ID: 21461)
  Prédit: 'over'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'over' → logprob: -0.07422061264514923
    2. 'can' → logprob: -3.199220657348633
    3. '               ' → logprob: -4.324220657348633
    4. '                   ' → logprob: -4.699220657348633
    5. 'valid' → logprob: -5.824220657348633
    6. 'ok' → logprob: -6.574220657348633
    7. ' overlap' → logprob: -6.699220657348633
    8. '   ' → logprob: -6.824220657348633
    9. ' can' → logprob: -8.074220657348633
    10. 'for' → logprob: -8.449220657348633

Token 1186: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6332414150238037
    2. '=' → logprob: -0.7582414150238037
    3. '=False' → logprob: -8.133241653442383
    4. '=True' → logprob: -8.758241653442383
    5. '               ' → logprob: -9.008241653442383
    6. '                   ' → logprob: -10.258241653442383
    7. '                ' → logprob: -11.758241653442383
    8. 'found' → logprob: -12.383241653442383
    9. '_found' → logprob: -12.758241653442383
    10. '           ' → logprob: -12.883241653442383

Token 1187: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -7.941850526549388e-06
    2. ' False' → logprob: -11.750007629394531
    3. '   ' → logprob: -17.12500762939453
    4. '               ' → logprob: -19.87500762939453
    5. '           ' → logprob: -20.37500762939453
    6. 'any' → logprob: -20.75000762939453
    7. '=False' → logprob: -20.75000762939453
    8. '                   ' → logprob: -20.87500762939453
    9. '(False' → logprob: -21.00000762939453
    10. '       ' → logprob: -21.12500762939453

Token 1188: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005035852082073689
    2. ' for' → logprob: -8.125503540039062
    3. '
' → logprob: -9.125503540039062
    4. '                   ' → logprob: -10.625503540039062
    5. 'for' → logprob: -10.625503540039062
    6. '                
' → logprob: -11.125503540039062
    7. '                       ' → logprob: -11.750503540039062
    8. '```' → logprob: -12.000503540039062
    9. '           ' → logprob: -12.375503540039062
    10. '                               ' → logprob: -12.500503540039062

Token 1189: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007276617921888828
    2. ' for' → logprob: -5.38227653503418
    3. '                   ' → logprob: -7.25727653503418
    4. '```' → logprob: -7.25727653503418
    5. '                       ' → logprob: -7.50727653503418
    6. '                               ' → logprob: -8.25727653503418
    7. 'for' → logprob: -8.75727653503418
    8. '                           ' → logprob: -9.38227653503418
    9. '           ' → logprob: -9.38227653503418
    10. '                
' → logprob: -11.13227653503418

Token 1190: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.06859519332647324
    2. ' for' → logprob: -3.0685951709747314
    3. '               ' → logprob: -3.9435951709747314
    4. '```' → logprob: -7.9435954093933105
    5. '                   ' → logprob: -10.193594932556152
    6. '	for' → logprob: -11.568594932556152
    7. '           ' → logprob: -11.693594932556152
    8. '                       ' → logprob: -11.943594932556152
    9. '``' → logprob: -12.068594932556152
    10. '                               ' → logprob: -13.318594932556152

Token 1191: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.08272121101617813
    2. 'yy' → logprob: -2.70772123336792
    3. 'x' → logprob: -4.58272123336792
    4. ' y' → logprob: -6.70772123336792
    5. '_y' → logprob: -7.83272123336792
    6. 'dy' → logprob: -8.332720756530762
    7. ' yy' → logprob: -9.332720756530762
    8. 'xx' → logprob: -9.707720756530762
    9. 'ny' → logprob: -9.832720756530762
    10. '   ' → logprob: -9.832720756530762

Token 1192: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16103586554527283
    2. 'in' → logprob: -1.9110358953475952
    3. '1' → logprob: -8.036035537719727
    4. 'y' → logprob: -8.161035537719727
    5. ' y' → logprob: -9.661035537719727
    6. ',y' → logprob: -9.786035537719727
    7. '=y' → logprob: -10.911035537719727
    8. '```' → logprob: -11.411035537719727
    9. ',' → logprob: -11.661035537719727
    10. '_in' → logprob: -11.661035537719727

Token 1193: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0019293478690087795
    2. ' range' → logprob: -6.25192928314209
    3. 'y' → logprob: -15.25192928314209
    4. '(range' → logprob: -15.50192928314209
    5. '   ' → logprob: -16.126930236816406
    6. '	range' → logprob: -16.626930236816406
    7. ' ' → logprob: -17.751930236816406
    8. ' y' → logprob: -19.001930236816406
    9. '```' → logprob: -19.001930236816406
    10. 'Range' → logprob: -19.251930236816406

Token 1194: '(y' (ID: 14684)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00044353955308906734
    2. ' y' → logprob: -7.750443458557129
    3. '(y' → logprob: -12.250443458557129
    4. '	y' → logprob: -12.625443458557129
    5. '                   ' → logprob: -13.500443458557129
    6. '=y' → logprob: -13.750443458557129
    7. ',y' → logprob: -14.625443458557129
    8. ')y' → logprob: -14.625443458557129
    9. '<|end|>' → logprob: -14.750443458557129
    10. '[y' → logprob: -14.875443458557129

Token 1195: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01875276118516922
    2. 'y' → logprob: -4.018752574920654
    3. ',y' → logprob: -8.518753051757812
    4. ' y' → logprob: -8.768753051757812
    5. ',' → logprob: -9.768753051757812
    6. '=y' → logprob: -10.393753051757812
    7. '```' → logprob: -10.393753051757812
    8. '<|end|>' → logprob: -10.768753051757812
    9. '	y' → logprob: -11.018753051757812
    10. '[y' → logprob: -11.268753051757812

Token 1196: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5765361189842224
    2. ',y' → logprob: -0.8265361189842224
    3. ' ,' → logprob: -7.826536178588867
    4. ',x' → logprob: -9.326536178588867
    5. '                   ' → logprob: -9.701536178588867
    6. '               ' → logprob: -11.451536178588867
    7. '                       ' → logprob: -11.576536178588867
    8. ',
' → logprob: -11.701536178588867
    9. 'y' → logprob: -12.326536178588867
    10. ',len' → logprob: -12.826536178588867

Token 1197: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.018393052741885185
    2. '2' → logprob: -4.018393039703369
    3. '```' → logprob: -8.768393516540527
    4. '0' → logprob: -10.268393516540527
    5. 'y' → logprob: -11.643393516540527
    6. ',' → logprob: -11.893393516540527
    7. '=' → logprob: -12.393393516540527
    8. '   ' → logprob: -12.518393516540527
    9. ' ' → logprob: -12.893393516540527
    10. 'e' → logprob: -13.018393516540527

Token 1198: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.006736215204000473
    2. ' +' → logprob: -5.0067362785339355
    3. ',' → logprob: -11.006735801696777
    4. ',y' → logprob: -12.881735801696777
    5. '+y' → logprob: -14.381735801696777
    6. '```' → logprob: -14.756735801696777
    7. ',x' → logprob: -15.631735801696777
    8. '1' → logprob: -15.756735801696777
    9. ',+' → logprob: -16.256736755371094
    10. '   ' → logprob: -16.381736755371094

Token 1199: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.292907877039397e-06
    2. ' ' → logprob: -12.75000286102295
    3. ')' → logprob: -15.25000286102295
    4. '```' → logprob: -16.750003814697266
    5. '   ' → logprob: -17.750003814697266
    6. ',' → logprob: -18.000003814697266
    7. '
' → logprob: -18.250003814697266
    8. '):
' → logprob: -18.875003814697266
    9. '),' → logprob: -19.875003814697266
    10. '{
' → logprob: -19.875003814697266

Token 1200: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.04709960147738457
    2. '):' → logprob: -3.2970995903015137
    3. ':' → logprob: -6.047099590301514
    4. '               ' → logprob: -6.297099590301514
    5. ':
' → logprob: -6.422099590301514
    6. '                   ' → logprob: -6.797099590301514
    7. '<|end|>' → logprob: -7.922099590301514
    8. '```' → logprob: -8.172100067138672
    9. ')' → logprob: -8.297100067138672
    10. ',' → logprob: -8.422100067138672

Token 1201: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.15029381215572357
    2. ' for' → logprob: -2.0252938270568848
    3. 'for' → logprob: -5.025293827056885
    4. '```' → logprob: -7.025293827056885
    5. '               ' → logprob: -9.650293350219727
    6. '   ' → logprob: -10.650293350219727
    7. '                       ' → logprob: -11.150293350219727
    8. '           ' → logprob: -11.275293350219727
    9. '                           ' → logprob: -12.650293350219727
    10. '``' → logprob: -13.025293350219727

Token 1202: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6528334617614746
    2. 'for' (adapté à ' for') → logprob: -0.7778334617614746
    3. '                   ' → logprob: -4.152833461761475
    4. '                       ' → logprob: -5.527833461761475
    5. '```' → logprob: -8.777833938598633
    6. '               ' → logprob: -9.402833938598633
    7. '                    ' → logprob: -10.777833938598633
    8. '	for' → logprob: -10.777833938598633
    9. '   ' → logprob: -11.152833938598633
    10. '       ' → logprob: -12.027833938598633

Token 1203: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -7.493430894101039e-05
    2. ' x' → logprob: -9.500075340270996
    3. '	x' → logprob: -18.00007438659668
    4. '   ' → logprob: -19.75007438659668
    5. ' in' → logprob: -20.00007438659668
    6. '```' → logprob: -21.12507438659668
    7. '(x' → logprob: -21.25007438659668
    8. 'in' → logprob: -21.75007438659668
    9. '"x' → logprob: -22.37507438659668
    10. ',x' → logprob: -22.37507438659668

Token 1204: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1129583865404129
    2. 'in' → logprob: -2.2379584312438965
    3. '                   ' → logprob: -10.237957954406738
    4. '                    ' → logprob: -10.737957954406738
    5. '=' → logprob: -11.362957954406738
    6. ' =' → logprob: -11.362957954406738
    7. '<|end|>' → logprob: -11.737957954406738
    8. '                       ' → logprob: -12.112957954406738
    9. '	in' → logprob: -12.112957954406738
    10. '                        ' → logprob: -12.362957954406738

Token 1205: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2220250517129898
    2. ' range' → logprob: -1.7220250368118286
    3. 'x' → logprob: -3.972025156021118
    4. ' x' → logprob: -6.472024917602539
    5. '(x' → logprob: -11.847024917602539
    6. ' in' → logprob: -12.347024917602539
    7. 'in' → logprob: -12.472024917602539
    8. '(range' → logprob: -12.847024917602539
    9. '   ' → logprob: -14.847024917602539
    10. '0' → logprob: -15.097024917602539

Token 1206: '(x' (ID: 4061)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.005270041991025209
    2. '(x' → logprob: -5.255270004272461
    3. ' x' → logprob: -10.630270004272461
    4. 'range' → logprob: -12.755270004272461
    5. '                   ' → logprob: -13.130270004272461
    6. ',x' → logprob: -13.130270004272461
    7. '0' → logprob: -13.255270004272461
    8. '               ' → logprob: -13.630270004272461
    9. '=x' → logprob: -14.130270004272461
    10. '                       ' → logprob: -14.755270004272461

Token 1207: '1' (ID: 16)
  Prédit: ',x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',x' → logprob: -0.47608518600463867
    2. 'x' → logprob: -1.2260851860046387
    3. ',' → logprob: -3.6010851860046387
    4. '1' → logprob: -3.8510851860046387
    5. ' x' → logprob: -3.9760851860046387
    6. ' ,' → logprob: -4.726085186004639
    7. '(x' → logprob: -5.851085186004639
    8. '                   ' → logprob: -6.601085186004639
    9. '	x' → logprob: -6.601085186004639
    10. '[x' → logprob: -7.351085186004639

Token 1208: ',x' (ID: 29748)
  Prédit: ',x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',x' → logprob: -0.012644438073039055
    2. ',' → logprob: -4.387644290924072
    3. ',y' → logprob: -9.51264476776123
    4. ' ,' → logprob: -9.76264476776123
    5. ',
' → logprob: -13.13764476776123
    6. 'x' → logprob: -15.01264476776123
    7. '(x' → logprob: -15.76264476776123
    8. '```' → logprob: -16.387643814086914
    9. ',int' → logprob: -16.637643814086914
    10. ',len' → logprob: -16.637643814086914

Token 1209: '2' (ID: 17)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.045125171542167664
    2. ',x' → logprob: -3.7951252460479736
    3. '1' → logprob: -3.9201252460479736
    4. '2' → logprob: -7.1701250076293945
    5. ',' → logprob: -7.4201250076293945
    6. ' x' → logprob: -9.045125007629395
    7. '```' → logprob: -9.920125007629395
    8. '+' → logprob: -10.295125007629395
    9. '(x' → logprob: -10.295125007629395
    10. ')' → logprob: -10.670125007629395

Token 1210: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00020747410599142313
    2. ' +' → logprob: -8.625207901000977
    3. '1' → logprob: -11.125207901000977
    4. ',y' → logprob: -12.250207901000977
    5. ',x' → logprob: -12.750207901000977
    6. '```' → logprob: -12.750207901000977
    7. ',' → logprob: -13.625207901000977
    8. '+x' → logprob: -14.500207901000977
    9. '()+' → logprob: -15.250207901000977
    10. ')+' → logprob: -15.250207901000977

Token 1211: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.051066520740278e-05
    2. '+' → logprob: -9.875060081481934
    3. '2' → logprob: -12.375060081481934
    4. 'x' → logprob: -12.625060081481934
    5. ' ' → logprob: -13.875060081481934
    6. '   ' → logprob: -15.875060081481934
    7. '0' → logprob: -16.68756103515625
    8. '
' → logprob: -16.68756103515625
    9. ' +' → logprob: -16.75006103515625
    10. ')' → logprob: -17.06256103515625

Token 1212: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.09440971165895462
    2. '                       ' → logprob: -2.719409704208374
    3. '                   ' → logprob: -4.094409942626953
    4. '):' → logprob: -5.594409942626953
    5. '               ' → logprob: -6.344409942626953
    6. ':
' → logprob: -6.594409942626953
    7. '                           ' → logprob: -9.094409942626953
    8. '):
' → logprob: -9.094409942626953
    9. ':' → logprob: -9.594409942626953
    10. 'if' → logprob: -9.844409942626953

Token 1213: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0010531729785725474
    2. ' if' → logprob: -7.001053333282471
    3. 'if' → logprob: -9.501052856445312
    4. '                   ' → logprob: -10.626052856445312
    5. '                           ' → logprob: -10.751052856445312
    6. '```' → logprob: -12.001052856445312
    7. '               ' → logprob: -12.501052856445312
    8. '                               ' → logprob: -13.001052856445312
    9. '       ' → logprob: -13.251052856445312
    10. '           ' → logprob: -13.626052856445312

Token 1214: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.16401973366737366
    2. ' if' → logprob: -1.9140197038650513
    3. '                       ' → logprob: -6.289019584655762
    4. '                           ' → logprob: -6.414019584655762
    5. '                   ' → logprob: -8.289019584655762
    6. '               ' → logprob: -11.164019584655762
    7. '                               ' → logprob: -11.414019584655762
    8. '```' → logprob: -11.539019584655762
    9. '   ' → logprob: -13.164019584655762
    10. '	if' → logprob: -13.539019584655762

Token 1215: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.20141859352588654
    2. ' used' → logprob: -1.7014186382293701
    3. '                   ' → logprob: -13.20141887664795
    4. '                       ' → logprob: -13.45141887664795
    5. '   ' → logprob: -14.57641887664795
    6. 'not' → logprob: -14.57641887664795
    7. '               ' → logprob: -14.82641887664795
    8. '                           ' → logprob: -15.32641887664795
    9. '.used' → logprob: -15.57641887664795
    10. '           ' → logprob: -16.201417922973633

Token 1216: '_grid' (ID: 34614)
  Prédit: '_grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_grid' → logprob: -7.896309739408025e-07
    2. '
' → logprob: -15.375000953674316
    3. '_' → logprob: -16.25
    4. '_
' → logprob: -16.875
    5. '```' → logprob: -16.875
    6. '[_' → logprob: -17.0
    7. 'grid' → logprob: -17.375
    8. '[y' → logprob: -17.375
    9. '[' → logprob: -17.875
    10. '_gr' → logprob: -18.125

Token 1217: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -7.505351095460355e-05
    2. '[x' → logprob: -9.500075340270996
    3. 'y' → logprob: -16.25007438659668
    4. '[' → logprob: -16.75007438659668
    5. '                       ' → logprob: -17.25007438659668
    6. '                   ' → logprob: -17.37507438659668
    7. ' [' → logprob: -18.00007438659668
    8. '```' → logprob: -18.25007438659668
    9. '               ' → logprob: -19.37507438659668
    10. '][' → logprob: -19.87507438659668

Token 1218: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.5760456919670105
    2. '[x' → logprob: -0.8260456919670105
    3. ' ][' → logprob: -10.451045989990234
    4. 'x' → logprob: -10.576045989990234
    5. '[y' → logprob: -11.451045989990234
    6. '```' → logprob: -11.576045989990234
    7. '   ' → logprob: -11.826045989990234
    8. ']' → logprob: -12.076045989990234
    9. '[' → logprob: -12.076045989990234
    10. '                   ' → logprob: -12.951045989990234

Token 1219: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -4.008129963040119e-06
    2. ' x' → logprob: -12.500003814697266
    3. 'True' → logprob: -16.250003814697266
    4. '[x' → logprob: -17.000003814697266
    5. '	x' → logprob: -18.750003814697266
    6. '```' → logprob: -18.875003814697266
    7. '   ' → logprob: -19.125003814697266
    8. '(x' → logprob: -19.125003814697266
    9. ']' → logprob: -19.125003814697266
    10. '
' → logprob: -19.875003814697266

Token 1220: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.5415730476379395
    2. ']==' → logprob: -1.2915730476379395
    3. '==' → logprob: -2.6665730476379395
    4. ':
' → logprob: -3.2915730476379395
    5. '                           ' → logprob: -3.6665730476379395
    6. '):
' → logprob: -5.9165730476379395
    7. '                       ' → logprob: -6.0415730476379395
    8. ']' → logprob: -6.4165730476379395
    9. ']:' → logprob: -6.9165730476379395
    10. ' ==' → logprob: -7.1665730476379395

Token 1221: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.0006129555404186249
    2. '                               ' → logprob: -8.12561321258545
    3. '```' → logprob: -9.12561321258545
    4. '                       ' → logprob: -9.75061321258545
    5. '=True' → logprob: -10.12561321258545
    6. '                            ' → logprob: -10.62561321258545
    7. '                                   ' → logprob: -10.87561321258545
    8. 'True' → logprob: -10.87561321258545
    9. ' True' → logprob: -11.00061321258545
    10. '                          ' → logprob: -11.62561321258545

Token 1222: ' conflict' (ID: 21461)
  Prédit: 'conf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'conf' → logprob: -0.41142702102661133
    2. ' conflict' → logprob: -1.1614270210266113
    3. '                               ' → logprob: -3.9114270210266113
    4. '                           ' → logprob: -5.536427021026611
    5. '                                   ' → logprob: -8.661426544189453
    6. 'Conflict' → logprob: -10.036426544189453
    7. '                       ' → logprob: -10.911426544189453
    8. '               ' → logprob: -11.411426544189453
    9. '                             ' → logprob: -11.536426544189453
    10. '                            ' → logprob: -11.661426544189453

Token 1223: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6572920083999634
    2. ' =' → logprob: -1.4072920083999634
    3. '=True' → logprob: -1.5322920083999634
    4. '                               ' → logprob: -4.032291889190674
    5. '                           ' → logprob: -6.532291889190674
    6. '=False' → logprob: -6.782291889190674
    7. '                                   ' → logprob: -9.157292366027832
    8. '                       ' → logprob: -9.532292366027832
    9. '                              ' → logprob: -9.657292366027832
    10. '==' → logprob: -9.782292366027832

Token 1224: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0009252764866687357
    2. ' True' → logprob: -7.000925064086914
    3. '                           ' → logprob: -11.250925064086914
    4. '                               ' → logprob: -14.625925064086914
    5. '(True' → logprob: -16.000925064086914
    6. '                       ' → logprob: -16.375925064086914
    7. '=True' → logprob: -16.500925064086914
    8. '                                   ' → logprob: -17.000925064086914
    9. '           ' → logprob: -18.750925064086914
    10. '                            ' → logprob: -18.875925064086914

Token 1225: '
' (ID: 198)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.0005388548015616834
    2. '                               ' → logprob: -7.7505388259887695
    3. '                       ' → logprob: -10.00053882598877
    4. '<|end|>' → logprob: -10.62553882598877
    5. '                            ' → logprob: -11.25053882598877
    6. '                            
' → logprob: -12.00053882598877
    7. '                                   ' → logprob: -12.75053882598877
    8. '           ' → logprob: -12.87553882598877
    9. '```' → logprob: -13.00053882598877
    10. '                   ' → logprob: -13.12553882598877

Token 1226: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.004461212549358606
    2. '                               ' → logprob: -5.504461288452148
    3. '                       ' → logprob: -8.504461288452148
    4. '```' → logprob: -9.629461288452148
    5. '                                   ' → logprob: -9.879461288452148
    6. '                            ' → logprob: -11.254461288452148
    7. '                            
' → logprob: -11.629461288452148
    8. '                   ' → logprob: -11.879461288452148
    9. '<|end|>' → logprob: -11.879461288452148
    10. '                             ' → logprob: -12.004461288452148

Token 1227: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.030842380598187447
    2. '                               ' → logprob: -3.7808423042297363
    3. '                           ' → logprob: -5.655842304229736
    4. ' break' → logprob: -6.155842304229736
    5. '                                   ' → logprob: -6.780842304229736
    6. 'return' → logprob: -7.655842304229736
    7. '                                       ' → logprob: -9.030842781066895
    8. '                       ' → logprob: -9.530842781066895
    9. '                                           ' → logprob: -10.530842781066895
    10. '               ' → logprob: -10.530842781066895

Token 1228: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.3292646110057831
    2. '                   ' → logprob: -1.7042646408081055
    3. '                           ' → logprob: -2.4542646408081055
    4. '               ' → logprob: -4.7042646408081055
    5. '```' → logprob: -6.7042646408081055
    6. '           ' → logprob: -6.9542646408081055
    7. '                               ' → logprob: -7.8292646408081055
    8. '<|end|>' → logprob: -8.204264640808105
    9. '                        
' → logprob: -8.954264640808105
    10. '                         ' → logprob: -9.079264640808105

Token 1229: '                   ' (ID: 699)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.6743305921554565
    2. '<|end|>' → logprob: -1.4243305921554565
    3. '                           ' → logprob: -1.9243305921554565
    4. '                   ' → logprob: -3.174330711364746
    5. '```' → logprob: -3.674330711364746
    6. '               ' → logprob: -4.049330711364746
    7. '                               ' → logprob: -5.299330711364746
    8. '           ' → logprob: -5.674330711364746
    9. '                        
' → logprob: -5.924330711364746
    10. '<|end|>' → logprob: -6.424330711364746

Token 1230: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7390263676643372
    2. '                   ' → logprob: -0.7390263676643372
    3. '                       ' → logprob: -3.8640263080596924
    4. 'if' (adapté à ' if') → logprob: -4.8640265464782715
    5. '           ' → logprob: -5.2390265464782715
    6. '                 ' → logprob: -5.4890265464782715
    7. '                           ' → logprob: -5.8640265464782715
    8. '             ' → logprob: -6.2390265464782715
    9. '				' → logprob: -8.239026069641113
    10. '			' → logprob: -8.614026069641113

Token 1231: ' conflict' (ID: 21461)
  Prédit: 'conf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'conf' → logprob: -0.008615872822701931
    2. ' conflict' → logprob: -4.758615970611572
    3. '                   ' → logprob: -14.508615493774414
    4. '                       ' → logprob: -15.008615493774414
    5. '                           ' → logprob: -15.258615493774414
    6. '   ' → logprob: -16.008615493774414
    7. '               ' → logprob: -16.633615493774414
    8. 'break' → logprob: -17.508615493774414
    9. '	conf' → logprob: -17.633615493774414
    10. '(conf' → logprob: -17.883615493774414

Token 1232: ':
' (ID: 734)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.001343446783721447
    2. ':
' → logprob: -7.251343250274658
    3. ':' → logprob: -8.001343727111816
    4. '                           ' → logprob: -8.876343727111816
    5. '                   ' → logprob: -9.376343727111816
    6. 'break' → logprob: -10.751343727111816
    7. '               ' → logprob: -11.126343727111816
    8. '                               ' → logprob: -11.626343727111816
    9. '=' → logprob: -12.001343727111816
    10. '=True' → logprob: -12.251343727111816

Token 1233: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0005211008246988058
    2. '                           ' → logprob: -8.125520706176758
    3. '					' → logprob: -8.875520706176758
    4. '                   ' → logprob: -10.250520706176758
    5. '	                   ' → logprob: -10.500520706176758
    6. '						' → logprob: -12.750520706176758
    7. '		' → logprob: -12.875520706176758
    8. '       ' → logprob: -13.000520706176758
    9. '           ' → logprob: -13.000520706176758
    10. '               ' → logprob: -13.250520706176758

Token 1234: ' break' (ID: 2338)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0027578065637499094
    2. 'break' (adapté à ' break') → logprob: -6.002758026123047
    3. '                           ' → logprob: -8.502758026123047
    4. '                   ' → logprob: -10.127758026123047
    5. ' break' → logprob: -10.877758026123047
    6. '               ' → logprob: -11.877758026123047
    7. '					' → logprob: -12.127758026123047
    8. '                               ' → logprob: -12.627758026123047
    9. '           ' → logprob: -13.127758026123047
    10. '	break' → logprob: -13.877758026123047

Token 1235: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0028199704829603434
    2. '                       ' → logprob: -6.252820014953613
    3. '                   ' → logprob: -7.877820014953613
    4. '			' → logprob: -8.752820014953613
    5. '           ' → logprob: -9.502820014953613
    6. '```' → logprob: -10.127820014953613
    7. '                        
' → logprob: -10.252820014953613
    8. '	               ' → logprob: -10.502820014953613
    9. '		       ' → logprob: -10.627820014953613
    10. '                           ' → logprob: -10.627820014953613

Token 1236: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.046673163771629333
    2. '                       ' → logprob: -3.296673059463501
    3. '                   ' → logprob: -5.54667329788208
    4. '```' → logprob: -5.67167329788208
    5. '           ' → logprob: -7.29667329788208
    6. '                           ' → logprob: -8.046672821044922
    7. '
' → logprob: -9.921672821044922
    8. '                               ' → logprob: -10.171672821044922
    9. '			' → logprob: -10.546672821044922
    10. '                        
' → logprob: -10.671672821044922

Token 1237: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0003529814421199262
    2. '           ' → logprob: -9.12535285949707
    3. '                   ' → logprob: -9.50035285949707
    4. '                       ' → logprob: -9.87535285949707
    5. '			' → logprob: -10.62535285949707
    6. '       ' → logprob: -11.12535285949707
    7. ' if' → logprob: -11.37535285949707
    8. '	           ' → logprob: -11.37535285949707
    9. '	               ' → logprob: -11.87535285949707
    10. '		       ' → logprob: -11.87535285949707

Token 1238: ' conflict' (ID: 21461)
  Prédit: ' conflict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' conflict' → logprob: -0.45175936818122864
    2. ' not' → logprob: -1.0767593383789062
    3. 'not' → logprob: -3.8267593383789062
    4. 'conf' → logprob: -7.076759338378906
    5. '               ' → logprob: -9.826759338378906
    6. '                   ' → logprob: -10.451759338378906
    7. '   ' → logprob: -10.701759338378906
    8. '                           ' → logprob: -11.201759338378906
    9. '                       ' → logprob: -11.826759338378906
    10. '           ' → logprob: -11.951759338378906

Token 1239: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2743489146232605
    2. ':
' → logprob: -1.5243489742279053
    3. ':' → logprob: -4.024348735809326
    4. '               ' → logprob: -6.024348735809326
    5. '                       ' → logprob: -6.399348735809326
    6. '                           ' → logprob: -9.149349212646484
    7. ' continue' → logprob: -10.399349212646484
    8. 'continue' → logprob: -11.149349212646484
    9. '==' → logprob: -11.399349212646484
    10. '           ' → logprob: -11.649349212646484

Token 1240: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0003921847674064338
    2. ' continue' → logprob: -8.375391960144043
    3. 'continue' → logprob: -9.750391960144043
    4. '                       ' → logprob: -10.125391960144043
    5. '               ' → logprob: -10.250391960144043
    6. '```' → logprob: -11.875391960144043
    7. '	               ' → logprob: -12.250391960144043
    8. '                           ' → logprob: -12.250391960144043
    9. '		           ' → logprob: -12.750391960144043
    10. '				' → logprob: -12.875391960144043

Token 1241: ' continue' (ID: 4901)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3187267482280731
    2. 'continue' (adapté à ' continue') → logprob: -1.3187267780303955
    3. ' continue' → logprob: -5.818726539611816
    4. '                       ' → logprob: -6.568726539611816
    5. '               ' → logprob: -7.068726539611816
    6. '				' → logprob: -8.818726539611816
    7. '```' → logprob: -10.693726539611816
    8. '	continue' → logprob: -10.818726539611816
    9. '           ' → logprob: -11.568726539611816
    10. '   ' → logprob: -11.943726539611816

Token 1242: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0020699677988886833
    2. '           ' → logprob: -6.50206995010376
    3. '
' → logprob: -9.252070426940918
    4. '			' → logprob: -9.252070426940918
    5. '                
' → logprob: -9.377070426940918
    6. 'res' → logprob: -9.377070426940918
    7. '	           ' → logprob: -10.127070426940918
    8. '```' → logprob: -10.127070426940918
    9. '	       ' → logprob: -10.377070426940918
    10. '		       ' → logprob: -10.502070426940918

Token 1243: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0016228145686909556
    2. '			' → logprob: -7.501622676849365
    3. '```' → logprob: -7.751622676849365
    4. '           ' → logprob: -8.376623153686523
    5. '                   ' → logprob: -9.376623153686523
    6. '		       ' → logprob: -9.626623153686523
    7. '	           ' → logprob: -9.751623153686523
    8. '	' → logprob: -9.876623153686523
    9. '                       ' → logprob: -10.376623153686523
    10. 'res' → logprob: -10.376623153686523

Token 1244: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0007461408386006951
    2. '           ' → logprob: -7.375746250152588
    3. 'res' → logprob: -9.25074577331543
    4. '
' → logprob: -11.87574577331543
    5. '```' → logprob: -11.87574577331543
    6. '                   ' → logprob: -12.75074577331543
    7. '                
' → logprob: -13.50074577331543
    8. '              ' → logprob: -13.87574577331543
    9. '			' → logprob: -14.00074577331543
    10. '       ' → logprob: -14.00074577331543

Token 1245: ' mar' (ID: 2674)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2796150743961334
    2. 'for' → logprob: -1.779615044593811
    3. 'res' → logprob: -3.0296151638031006
    4. '#' → logprob: -4.0296149253845215
    5. ' for' → logprob: -5.5296149253845215
    6. '           ' → logprob: -5.6546149253845215
    7. ' res' → logprob: -7.5296149253845215
    8. '       ' → logprob: -7.6546149253845215
    9. '   ' → logprob: -8.02961540222168
    10. ' #' → logprob: -9.02961540222168

Token 1246: 'quer' (ID: 8054)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.15810540318489075
    2. 'ker' → logprob: -2.4081053733825684
    3. 'quer' → logprob: -2.9081053733825684
    4. 'r' → logprob: -7.533105373382568
    5. 'rk' → logprob: -7.783105373382568
    6. 'qu' → logprob: -8.408105850219727
    7. 'q' → logprob: -8.533105850219727
    8. 'que' → logprob: -9.908105850219727
    9. '   ' → logprob: -10.158105850219727
    10. 'rer' → logprob: -10.908105850219727

Token 1247: ' rectangle' (ID: 45808)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.360751211643219
    2. ' for' → logprob: -1.8607511520385742
    3. 'for' → logprob: -2.110751152038574
    4. '                   ' → logprob: -4.235751152038574
    5. '                       ' → logprob: -5.610751152038574
    6. '                               ' → logprob: -5.735751152038574
    7. '                           ' → logprob: -6.110751152038574
    8. '	for' → logprob: -7.110751152038574
    9. '```' → logprob: -8.235751152038574
    10. '              ' → logprob: -8.735751152038574

Token 1248: ' utilisé' (ID: 53138)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10856015235185623
    2. ' for' → logprob: -2.358560085296631
    3. '                   ' → logprob: -5.983560085296631
    4. '                
' → logprob: -6.358560085296631
    5. 'for' → logprob: -6.483560085296631
    6. '                ' → logprob: -7.733560085296631
    7. '
' → logprob: -7.858560085296631
    8. '                       ' → logprob: -8.358560562133789
    9. '           ' → logprob: -8.483560562133789
    10. '	for' → logprob: -8.608560562133789

Token 1249: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0011793931480497122
    2. ' for' → logprob: -7.001179218292236
    3. '
' → logprob: -8.876179695129395
    4. '                   ' → logprob: -9.876179695129395
    5. '```' → logprob: -10.751179695129395
    6. '                       ' → logprob: -11.126179695129395
    7. '                
' → logprob: -11.501179695129395
    8. '           ' → logprob: -11.501179695129395
    9. 'for' → logprob: -12.626179695129395
    10. '   ' → logprob: -13.001179695129395

Token 1250: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006479933857917786
    2. ' for' → logprob: -5.131479740142822
    3. '                   ' → logprob: -8.00648021697998
    4. '```' → logprob: -9.50648021697998
    5. 'for' → logprob: -9.75648021697998
    6. '                       ' → logprob: -10.38148021697998
    7. '                
' → logprob: -10.50648021697998
    8. '
' → logprob: -12.13148021697998
    9. '   ' → logprob: -12.25648021697998
    10. '           ' → logprob: -12.50648021697998

Token 1251: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.526877760887146
    2. '               ' → logprob: -1.526877760887146
    3. 'for' (adapté à ' for') → logprob: -1.651877760887146
    4. '                   ' → logprob: -8.151877403259277
    5. '   ' → logprob: -9.026877403259277
    6. '           ' → logprob: -9.276877403259277
    7. '```' → logprob: -10.026877403259277
    8. ' ' → logprob: -10.776877403259277
    9. '                ' → logprob: -11.026877403259277
    10. ' res' → logprob: -11.276877403259277

Token 1252: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.07023784518241882
    2. ' y' → logprob: -2.695237874984741
    3. 'x' → logprob: -8.19523811340332
    4. '	y' → logprob: -11.69523811340332
    5. ' x' → logprob: -11.82023811340332
    6. '   ' → logprob: -12.19523811340332
    7. '(y' → logprob: -13.69523811340332
    8. ''y' → logprob: -14.19523811340332
    9. '[y' → logprob: -14.32023811340332
    10. '_y' → logprob: -14.44523811340332

Token 1253: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0891966000199318
    2. 'in' → logprob: -2.4641966819763184
    3. '                   ' → logprob: -8.58919620513916
    4. '1' → logprob: -10.96419620513916
    5. '```' → logprob: -11.33919620513916
    6. 'In' → logprob: -11.71419620513916
    7. '               ' → logprob: -12.08919620513916
    8. '   ' → logprob: -12.21419620513916
    9. '                       ' → logprob: -12.46419620513916
    10. ',y' → logprob: -12.96419620513916

Token 1254: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004079828038811684
    2. ' range' → logprob: -5.504079818725586
    3. 'in' → logprob: -14.004079818725586
    4. '(range' → logprob: -14.879079818725586
    5. ' in' → logprob: -16.129079818725586
    6. '   ' → logprob: -16.754079818725586
    7. 'y' → logprob: -17.004079818725586
    8. '	range' → logprob: -18.129079818725586
    9. 'x' → logprob: -19.379079818725586
    10. ' y' → logprob: -19.504079818725586

Token 1255: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.5774765610694885
    2. 'y' → logprob: -0.8274765610694885
    3. ' y' → logprob: -6.577476501464844
    4. '=y' → logprob: -9.702476501464844
    5. '                   ' → logprob: -10.577476501464844
    6. '[y' → logprob: -11.452476501464844
    7. ',y' → logprob: -11.577476501464844
    8. '               ' → logprob: -11.952476501464844
    9. '	y' → logprob: -12.202476501464844
    10. '   ' → logprob: -12.452476501464844

Token 1256: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0564331205387134e-05
    2. '```' → logprob: -13.12501049041748
    3. '=y' → logprob: -13.75001049041748
    4. 'y' → logprob: -13.87501049041748
    5. ')' → logprob: -14.00001049041748
    6. '[y' → logprob: -14.12501049041748
    7. '   ' → logprob: -14.12501049041748
    8. ',' → logprob: -14.12501049041748
    9. 'm' → logprob: -14.75001049041748
    10. 's' → logprob: -14.75001049041748

Token 1257: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.00038479414070025086
    2. ',' → logprob: -7.87538480758667
    3. ' ,' → logprob: -12.375384330749512
    4. 'y' → logprob: -15.750384330749512
    5. ',
' → logprob: -16.375385284423828
    6. ',x' → logprob: -16.875385284423828
    7. '   ' → logprob: -17.250385284423828
    8. '	y' → logprob: -17.375385284423828
    9. ';y' → logprob: -17.500385284423828
    10. ',Y' → logprob: -17.875385284423828

Token 1258: '2' (ID: 17)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0004755943373311311
    2. '1' → logprob: -8.000475883483887
    3. '2' → logprob: -9.250475883483887
    4. ' y' → logprob: -11.125475883483887
    5. ',y' → logprob: -11.500475883483887
    6. 'x' → logprob: -11.750475883483887
    7. '(y' → logprob: -12.625475883483887
    8. ',' → logprob: -13.375475883483887
    9. '0' → logprob: -13.625475883483887
    10. 'm' → logprob: -13.750475883483887

Token 1259: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -4.096126576769166e-05
    2. ' +' → logprob: -10.125041007995605
    3. '```' → logprob: -15.625041007995605
    4. '1' → logprob: -15.750041007995605
    5. '+x' → logprob: -15.875041007995605
    6. '+y' → logprob: -16.00004005432129
    7. '+
' → logprob: -16.50004005432129
    8. '<|end|>' → logprob: -16.87504005432129
    9. ',y' → logprob: -17.00004005432129
    10. ',' → logprob: -17.00004005432129

Token 1260: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.084206375409849e-05
    2. '+' → logprob: -10.125041007995605
    3. ' ' → logprob: -14.875041007995605
    4. '2' → logprob: -16.62504005432129
    5. '   ' → logprob: -17.12504005432129
    6. '
' → logprob: -17.25004005432129
    7. '```' → logprob: -17.50004005432129
    8. 'x' → logprob: -17.75004005432129
    9. '0' → logprob: -18.50004005432129
    10. ')' → logprob: -19.18754005432129

Token 1261: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.03778737783432007
    2. '                   ' → logprob: -3.912787437438965
    3. ':
' → logprob: -4.787787437438965
    4. '                       ' → logprob: -6.037787437438965
    5. '               ' → logprob: -6.162787437438965
    6. '):' → logprob: -6.412787437438965
    7. '           ' → logprob: -7.037787437438965
    8. '                           ' → logprob: -7.662787437438965
    9. '   ' → logprob: -7.912787437438965
    10. ':' → logprob: -7.912787437438965

Token 1262: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.036692362278699875
    2. '           ' → logprob: -4.286692142486572
    3. ' for' → logprob: -5.036692142486572
    4. '               ' → logprob: -5.036692142486572
    5. 'for' → logprob: -5.161692142486572
    6. '                       ' → logprob: -6.536692142486572
    7. '   ' → logprob: -7.036692142486572
    8. '```' → logprob: -7.286692142486572
    9. '       ' → logprob: -7.661692142486572
    10. '                           ' → logprob: -10.53669261932373

Token 1263: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.1284111589193344
    2. ' for' → logprob: -2.128411054611206
    3. '                       ' → logprob: -7.128411293029785
    4. '                   ' → logprob: -7.878411293029785
    5. '       ' → logprob: -9.128411293029785
    6. '```' → logprob: -9.503411293029785
    7. '               ' → logprob: -10.003411293029785
    8. '	for' → logprob: -10.378411293029785
    9. '   ' → logprob: -10.628411293029785
    10. '           ' → logprob: -11.253411293029785

Token 1264: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3132619559764862
    2. ' x' → logprob: -1.3132619857788086
    3. '	x' → logprob: -15.938261985778809
    4. '   ' → logprob: -16.313261032104492
    5. '(x' → logprob: -17.813261032104492
    6. ' ' → logprob: -18.938261032104492
    7. '```' → logprob: -19.188261032104492
    8. '$x' → logprob: -19.563261032104492
    9. ',x' → logprob: -19.688261032104492
    10. '       ' → logprob: -19.813261032104492

Token 1265: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03371647372841835
    2. 'in' → logprob: -3.4087164402008057
    3. '                   ' → logprob: -10.408716201782227
    4. '[' → logprob: -12.158716201782227
    5. '                       ' → logprob: -12.283716201782227
    6. '```' → logprob: -12.533716201782227
    7. '1' → logprob: -12.783716201782227
    8. '=' → logprob: -12.908716201782227
    9. ',' → logprob: -13.158716201782227
    10. '               ' → logprob: -13.283716201782227

Token 1266: ' range' (ID: 3352)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5607425570487976
    2. 'range' → logprob: -1.3107426166534424
    3. ' range' → logprob: -2.3107426166534424
    4. ' x' → logprob: -2.8107426166534424
    5. '(x' → logprob: -8.935742378234863
    6. '1' → logprob: -9.185742378234863
    7. '[x' → logprob: -12.310742378234863
    8. ' used' → logprob: -13.185742378234863
    9. 'used' → logprob: -13.560742378234863
    10. '(range' → logprob: -14.185742378234863

Token 1267: '(x' (ID: 4061)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.050727080553770065
    2. '(x' → logprob: -3.050727128982544
    3. ' x' → logprob: -6.175726890563965
    4. ' (' → logprob: -10.300726890563965
    5. '                   ' → logprob: -11.050726890563965
    6. '=x' → logprob: -13.425726890563965
    7. '[x' → logprob: -13.550726890563965
    8. '                       ' → logprob: -13.550726890563965
    9. ',x' → logprob: -13.925726890563965
    10. 'range' → logprob: -14.300726890563965

Token 1268: '1' (ID: 16)
  Prédit: ',x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',x' → logprob: -0.6149622201919556
    2. '1' → logprob: -1.2399622201919556
    3. '[x' → logprob: -2.114962100982666
    4. 'x' → logprob: -3.614962100982666
    5. ',y' → logprob: -5.239962100982666
    6. ',' → logprob: -5.364962100982666
    7. '][' → logprob: -5.864962100982666
    8. '+' → logprob: -6.364962100982666
    9. '```' → logprob: -6.614962100982666
    10. '                   ' → logprob: -6.739962100982666

Token 1269: ',x' (ID: 29748)
  Prédit: ',y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.3201959431171417
    2. ',x' → logprob: -1.3201959133148193
    3. ',' → logprob: -5.195196151733398
    4. '][' → logprob: -7.445196151733398
    5. '[x' → logprob: -7.695196151733398
    6. '                       ' → logprob: -9.820196151733398
    7. '                   ' → logprob: -9.820196151733398
    8. ' ,' → logprob: -10.070196151733398
    9. '[y' → logprob: -10.570196151733398
    10. '```' → logprob: -10.695196151733398

Token 1270: '2' (ID: 17)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.014064306393265724
    2. '1' → logprob: -5.264064311981201
    3. '2' → logprob: -5.514064311981201
    4. '+' → logprob: -6.639064311981201
    5. ',x' → logprob: -6.639064311981201
    6. '```' → logprob: -6.889064311981201
    7. 'y' → logprob: -7.389064311981201
    8. '   ' → logprob: -9.514063835144043
    9. '       ' → logprob: -9.639063835144043
    10. '+x' → logprob: -10.014063835144043

Token 1271: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.009077409282326698
    2. '1' → logprob: -5.009077548980713
    3. '][' → logprob: -7.009077548980713
    4. '[' → logprob: -7.509077548980713
    5. ' +' → logprob: -8.634077072143555
    6. '```' → logprob: -8.759077072143555
    7. ',' → logprob: -8.884077072143555
    8. '                   ' → logprob: -9.634077072143555
    9. '               ' → logprob: -9.884077072143555
    10. '                       ' → logprob: -10.009077072143555

Token 1272: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01290395762771368
    2. '+' → logprob: -4.512904167175293
    3. 'x' → logprob: -6.387904167175293
    4. '5' → logprob: -9.762904167175293
    5. 'y' → logprob: -10.012904167175293
    6. '+x' → logprob: -11.012904167175293
    7. '2' → logprob: -11.137904167175293
    8. '4' → logprob: -11.512904167175293
    9. ' ' → logprob: -12.137904167175293
    10. '   ' → logprob: -12.137904167175293

Token 1273: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.18893654644489288
    2. '                       ' → logprob: -1.8139365911483765
    3. '                   ' → logprob: -5.313936710357666
    4. '):' → logprob: -6.438936710357666
    5. ']:
' → logprob: -6.563936710357666
    6. ':
' → logprob: -7.563936710357666
    7. '                           ' → logprob: -8.063936233520508
    8. '               ' → logprob: -9.188936233520508
    9. '                               ' → logprob: -10.188936233520508
    10. ':' → logprob: -10.188936233520508

Token 1274: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0013548793504014611
    2. '                   ' → logprob: -7.626354694366455
    3. ' used' → logprob: -7.751354694366455
    4. '                           ' → logprob: -7.876354694366455
    5. '               ' → logprob: -11.626355171203613
    6. '                               ' → logprob: -11.751355171203613
    7. '                        
' → logprob: -12.001355171203613
    8. '	                   ' → logprob: -12.001355171203613
    9. '                        ' → logprob: -12.626355171203613
    10. '                      ' → logprob: -12.626355171203613

Token 1275: ' used' (ID: 2061)
  Prédit: ' used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' used' → logprob: -0.3133651614189148
    2. 'used' (adapté à ' used') → logprob: -1.3133652210235596
    3. '                           ' → logprob: -10.31336498260498
    4. '                   ' → logprob: -10.68836498260498
    5. '                       ' → logprob: -10.93836498260498
    6. '   ' → logprob: -11.18836498260498
    7. '                               ' → logprob: -12.18836498260498
    8. '           ' → logprob: -12.18836498260498
    9. '               ' → logprob: -12.31336498260498
    10. '                                   ' → logprob: -14.68836498260498

Token 1276: '_grid' (ID: 34614)
  Prédit: '_grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_grid' → logprob: -3.4121114822482923e-06
    2. '_' → logprob: -13.500003814697266
    3. '[y' → logprob: -13.625003814697266
    4. 'grid' → logprob: -16.125003814697266
    5. ' _' → logprob: -16.375003814697266
    6. '   ' → logprob: -16.750003814697266
    7. '```' → logprob: -16.750003814697266
    8. '_gr' → logprob: -16.750003814697266
    9. '_GRID' → logprob: -16.875003814697266
    10. '_
' → logprob: -17.000003814697266

Token 1277: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -3.128163257315464e-07
    2. ' [' → logprob: -15.75
    3. 'y' → logprob: -16.125
    4. '[' → logprob: -16.75
    5. '```' → logprob: -18.25
    6. '][' → logprob: -18.375
    7. '   ' → logprob: -18.5
    8. '                       ' → logprob: -18.875
    9. '=' → logprob: -19.25
    10. '[x' → logprob: -19.375

Token 1278: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.5760254263877869
    2. '[y' → logprob: -0.8260254263877869
    3. '                       ' → logprob: -9.826025009155273
    4. '[x' → logprob: -11.701025009155273
    5. '                   ' → logprob: -12.076025009155273
    6. '           ' → logprob: -12.451025009155273
    7. '                           ' → logprob: -12.451025009155273
    8. '   ' → logprob: -13.326025009155273
    9. ']' → logprob: -13.576025009155273
    10. '[' → logprob: -13.701025009155273

Token 1279: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -3.8889261304575484e-06
    2. ' x' → logprob: -13.125003814697266
    3. '1' → logprob: -14.000003814697266
    4. 'True' → logprob: -14.625003814697266
    5. '[x' → logprob: -15.125003814697266
    6. '```' → logprob: -16.625003814697266
    7. '   ' → logprob: -16.875003814697266
    8. '{x' → logprob: -17.625003814697266
    9. ']' → logprob: -18.000003814697266
    10. '	x' → logprob: -18.125003814697266

Token 1280: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.051162343472242355
    2. ']' → logprob: -3.4261622428894043
    3. ']=' → logprob: -4.426162242889404
    4. ' =' → logprob: -5.301162242889404
    5. '=True' → logprob: -8.176162719726562
    6. '                       ' → logprob: -9.676162719726562
    7. '[' → logprob: -10.926162719726562
    8. '[y' → logprob: -11.051162719726562
    9. '                           ' → logprob: -11.301162719726562
    10. '                        ' → logprob: -11.676162719726562

Token 1281: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0019599171355366707
    2. ' =' → logprob: -6.251959800720215
    3. '=True' → logprob: -10.376959800720215
    4. '=False' → logprob: -15.876959800720215
    5. '=
' → logprob: -19.00196075439453
    6. 'True' → logprob: -19.50196075439453
    7. '[' → logprob: -19.62696075439453
    8. '=true' → logprob: -20.12696075439453
    9. '   ' → logprob: -20.50196075439453
    10. ']=' → logprob: -20.75196075439453

Token 1282: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -1.5048530030981055e-06
    2. ' True' → logprob: -13.500001907348633
    3. '                   ' → logprob: -18.750001907348633
    4. '                       ' → logprob: -19.250001907348633
    5. '                           ' → logprob: -19.625001907348633
    6. '1' → logprob: -19.875001907348633
    7. '               ' → logprob: -21.125001907348633
    8. '   ' → logprob: -21.125001907348633
    9. '(True' → logprob: -21.125001907348633
    10. 'true' → logprob: -22.250001907348633

Token 1283: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003622404532507062
    2. '                       ' → logprob: -6.253622531890869
    3. '
' → logprob: -7.128622531890869
    4. '           ' → logprob: -7.753622531890869
    5. '```' → logprob: -9.253622055053711
    6. '<|end|>' → logprob: -9.378622055053711
    7. '                        
' → logprob: -9.503622055053711
    8. '                   ' → logprob: -9.878622055053711
    9. '       ' → logprob: -10.003622055053711
    10. '                
' → logprob: -10.753622055053711

Token 1284: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.000694919959641993
    2. '                       ' → logprob: -8.00069522857666
    3. '
' → logprob: -9.00069522857666
    4. '```' → logprob: -9.37569522857666
    5. '           ' → logprob: -9.75069522857666
    6. '       ' → logprob: -10.37569522857666
    7. '                   ' → logprob: -10.50069522857666
    8. '                
' → logprob: -11.75069522857666
    9. '                        
' → logprob: -11.87569522857666
    10. '    
' → logprob: -12.37569522857666

Token 1285: ' res' (ID: 694)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005077573587186635
    2. '       ' → logprob: -7.875507831573486
    3. '           ' → logprob: -9.125507354736328
    4. '                   ' → logprob: -11.875507354736328
    5. '
' → logprob: -12.250507354736328
    6. '                       ' → logprob: -12.875507354736328
    7. '```' → logprob: -13.000507354736328
    8. '   ' → logprob: -13.625507354736328
    9. '              ' → logprob: -15.000507354736328
    10. '                           ' → logprob: -15.250507354736328

Token 1286: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.723973582556937e-05
    2. '.' → logprob: -11.000017166137695
    3. '.app' → logprob: -15.625017166137695
    4. ' .' → logprob: -15.750017166137695
    5. 'append' → logprob: -16.625017166137695
    6. '.ap' → logprob: -17.750017166137695
    7. '.insert' → logprob: -18.625017166137695
    8. '[i' → logprob: -19.000017166137695
    9. '.Append' → logprob: -19.125017166137695
    10. '_append' → logprob: -19.375017166137695

Token 1287: '(rect' (ID: 68123)
  Prédit: '(rect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rect' → logprob: -0.0007102862582542002
    2. 'rect' → logprob: -7.250710487365723
    3. ' rect' → logprob: -15.750710487365723
    4. '(' → logprob: -16.125709533691406
    5. '((' → logprob: -16.250709533691406
    6. '	rect' → logprob: -18.750709533691406
    7. '(Rect' → logprob: -19.375709533691406
    8. ' (' → logprob: -20.125709533691406
    9. '.rect' → logprob: -20.375709533691406
    10. '(rec' → logprob: -20.750709533691406

Token 1288: ')
' (ID: 446)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.39325883984565735
    2. '<|end|>' → logprob: -1.518258810043335
    3. '
' → logprob: -2.893258810043335
    4. ')' → logprob: -3.518258810043335
    5. '<|end|>' → logprob: -4.268259048461914
    6. ')
' → logprob: -5.643259048461914
    7. '                
' → logprob: -6.143259048461914
    8. '  
' → logprob: -8.018259048461914
    9. '           ' → logprob: -8.768259048461914
    10. '            
' → logprob: -9.143259048461914

Token 1289: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0004693994123954326
    2. '```' → logprob: -8.875469207763672
    3. '                
' → logprob: -9.000469207763672
    4. '           ' → logprob: -9.375469207763672
    5. '
' → logprob: -10.250469207763672
    6. '                   ' → logprob: -10.500469207763672
    7. '       ' → logprob: -11.250469207763672
    8. '                       ' → logprob: -11.750469207763672
    9. '<|end|>' → logprob: -11.750469207763672
    10. '              ' → logprob: -12.125469207763672

Token 1290: ' back' (ID: 1602)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.030028853565454483
    2. ' back' → logprob: -4.280028820037842
    3. 'back' (adapté à ' back') → logprob: -4.405028820037842
    4. '           ' → logprob: -5.655028820037842
    5. '
' → logprob: -11.530029296875
    6. '       ' → logprob: -11.905029296875
    7. '   ' → logprob: -12.905029296875
    8. '	back' → logprob: -13.780029296875
    9. '                
' → logprob: -13.905029296875
    10. '```' → logprob: -14.030029296875

Token 1291: 'track' (ID: 22792)
  Prédit: 'track'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'track' → logprob: -3.702754474943504e-05
    2. 'tracking' → logprob: -10.50003719329834
    3. 't' → logprob: -12.00003719329834
    4. '               ' → logprob: -13.87503719329834
    5. 'tract' → logprob: -14.12503719329834
    6. 'tr' → logprob: -14.37503719329834
    7. '       ' → logprob: -14.37503719329834
    8. '   ' → logprob: -16.000036239624023
    9. '_track' → logprob: -16.250036239624023
    10. 'trace' → logprob: -16.500036239624023

Token 1292: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -2.236549335066229e-05
    2. '(' → logprob: -11.500021934509277
    3. '               ' → logprob: -12.000021934509277
    4. '   ' → logprob: -13.250021934509277
    5. '           ' → logprob: -13.750021934509277
    6. ' (' → logprob: -13.875021934509277
    7. '(
' → logprob: -14.000021934509277
    8. '                   ' → logprob: -14.250021934509277
    9. '	' → logprob: -15.000021934509277
    10. '```' → logprob: -15.625021934509277

Token 1293: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07889000326395035
    2. ' +' → logprob: -2.578890085220337
    3. '＋' → logprob: -15.953889846801758
    4. '+i' → logprob: -16.578889846801758
    5. '   ' → logprob: -16.703889846801758
    6. '+
' → logprob: -17.953889846801758
    7. '()+' → logprob: -18.328889846801758
    8. ' plus' → logprob: -19.328889846801758
    9. '```' → logprob: -19.328889846801758
    10. ' ' → logprob: -19.453889846801758

Token 1294: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.200166469876422e-06
    2. '   ' → logprob: -12.375004768371582
    3. ' ' → logprob: -14.250004768371582
    4. '```' → logprob: -15.125004768371582
    5. '``' → logprob: -17.0000057220459
    6. '+' → logprob: -18.1250057220459
    7. 'res' → logprob: -18.1250057220459
    8. '(' → logprob: -18.6250057220459
    9. '       ' → logprob: -18.7500057220459
    10. ')' → logprob: -19.1250057220459

Token 1295: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009294486371800303
    2. ',res' → logprob: -7.000929355621338
    3. ' ,' → logprob: -11.375929832458496
    4. '   ' → logprob: -12.750929832458496
    5. 'res' → logprob: -13.125929832458496
    6. ',
' → logprob: -13.875929832458496
    7. ',use' → logprob: -16.00092887878418
    8. '               ' → logprob: -16.50092887878418
    9. '```' → logprob: -16.75092887878418
    10. 'used' → logprob: -16.75092887878418

Token 1296: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.00012415809032972902
    2. ' used' → logprob: -9.625123977661133
    3. '[' → logprob: -9.875123977661133
    4. '   ' → logprob: -12.625123977661133
    5. '               ' → logprob: -14.000123977661133
    6. '           ' → logprob: -14.500123977661133
    7. '       ' → logprob: -14.875123977661133
    8. '[[' → logprob: -15.000123977661133
    9. ' [' → logprob: -15.125123977661133
    10. '                   ' → logprob: -15.375123977661133

Token 1297: '_grid' (ID: 34614)
  Prédit: '_grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_grid' → logprob: -4.320199877838604e-07
    2. 'grid' → logprob: -15.875
    3. '```' → logprob: -16.625
    4. '   ' → logprob: -16.75
    5. ' _' → logprob: -16.875
    6. '_' → logprob: -17.0
    7. '_GRID' → logprob: -17.375
    8. '
' → logprob: -18.375
    9. '<Grid' → logprob: -18.625
    10. '[_' → logprob: -18.625

Token 1298: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.0747414380311966
    2. ')' → logprob: -3.3247413635253906
    3. '               ' → logprob: -3.3247413635253906
    4. '```' → logprob: -10.82474136352539
    5. ')
' → logprob: -10.94974136352539
    6. '           ' → logprob: -11.82474136352539
    7. '       ' → logprob: -12.82474136352539
    8. '                   ' → logprob: -13.69974136352539
    9. '                
' → logprob: -14.19974136352539
    10. ')

' → logprob: -14.19974136352539

Token 1299: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00016873658751137555
    2. '```' → logprob: -8.750168800354004
    3. '           ' → logprob: -12.125168800354004
    4. '       ' → logprob: -13.375168800354004
    5. '   ' → logprob: -13.375168800354004
    6. '                   ' → logprob: -14.250168800354004
    7. '              ' → logprob: -14.625168800354004
    8. '``' → logprob: -15.250168800354004
    9. '                ' → logprob: -16.000167846679688
    10. ' res' → logprob: -16.250167846679688

Token 1300: ' res' (ID: 694)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00382881797850132
    2. 'for' → logprob: -6.128829002380371
    3. ' for' → logprob: -7.003829002380371
    4. 'res' (adapté à ' res') → logprob: -7.378829002380371
    5. ' res' → logprob: -9.628829002380371
    6. '```' → logprob: -10.253829002380371
    7. '#' → logprob: -12.753829002380371
    8. '       ' → logprob: -12.878829002380371
    9. '
' → logprob: -13.878829002380371
    10. '   ' → logprob: -14.378829002380371

Token 1301: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -2.3438327843905427e-05
    2. '.remove' → logprob: -11.50002384185791
    3. '.' → logprob: -11.62502384185791
    4. 'pop' → logprob: -12.87502384185791
    5. '_pop' → logprob: -14.00002384185791
    6. '	pop' → logprob: -14.50002384185791
    7. '.Pop' → logprob: -16.250022888183594
    8. 'Pop' → logprob: -17.000022888183594
    9. ' .' → logprob: -17.125022888183594
    10. '_POP' → logprob: -17.250022888183594

Token 1302: '()
' (ID: 1234)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -2.2200749754119897e-06
    2. 'for' → logprob: -13.375001907348633
    3. '                   ' → logprob: -15.750001907348633
    4. '              ' → logprob: -15.875001907348633
    5. '```' → logprob: -16.250001907348633
    6. ' for' → logprob: -16.375001907348633
    7. '           ' → logprob: -17.000001907348633
    8. '                       ' → logprob: -17.375001907348633
    9. '       ' → logprob: -17.500001907348633
    10. '                ' → logprob: -17.625001907348633

Token 1303: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -7.896309739408025e-07
    2. 'for' → logprob: -15.125000953674316
    3. '```' → logprob: -15.375000953674316
    4. '                   ' → logprob: -15.875000953674316
    5. '              ' → logprob: -16.375
    6. '                ' → logprob: -17.0
    7. '           ' → logprob: -17.375
    8. '       ' → logprob: -17.5
    9. '                       ' → logprob: -17.75
    10. ' for' → logprob: -18.75

Token 1304: ' for' (ID: 395)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00073197390884161
    2. 'for' (adapté à ' for') → logprob: -7.250731945037842
    3. ' for' → logprob: -10.875732421875
    4. '                   ' → logprob: -13.750732421875
    5. '                       ' → logprob: -13.750732421875
    6. '       ' → logprob: -14.625732421875
    7. '   ' → logprob: -15.625732421875
    8. '           ' → logprob: -15.875732421875
    9. '                ' → logprob: -16.000732421875
    10. '              ' → logprob: -16.125732421875

Token 1305: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.011050296947360039
    2. ' y' → logprob: -4.511050224304199
    3. '	y' → logprob: -13.2610502243042
    4. '(y' → logprob: -14.7610502243042
    5. 'x' → logprob: -15.8860502243042
    6. '[y' → logprob: -16.136051177978516
    7. '   ' → logprob: -16.261051177978516
    8. ''y' → logprob: -17.011051177978516
    9. ' ' → logprob: -18.511051177978516
    10. '_y' → logprob: -18.511051177978516

Token 1306: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6329931616783142
    2. 'in' → logprob: -0.7579931616783142
    3. '                   ' → logprob: -8.0079927444458
    4. '               ' → logprob: -11.5079927444458
    5. '                    ' → logprob: -12.0079927444458
    6. '1' → logprob: -12.1329927444458
    7. '```' → logprob: -12.2579927444458
    8. '                       ' → logprob: -12.3829927444458
    9. ',' → logprob: -12.6329927444458
    10. '=' → logprob: -12.7579927444458

Token 1307: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0015311705647036433
    2. ' range' → logprob: -6.50153112411499
    3. 'in' → logprob: -10.751531600952148
    4. '(range' → logprob: -11.876531600952148
    5. ' in' → logprob: -14.876531600952148
    6. 'y' → logprob: -16.37653160095215
    7. '(y' → logprob: -18.12653160095215
    8. '	range' → logprob: -18.25153160095215
    9. '   ' → logprob: -18.87653160095215
    10. 'Range' → logprob: -19.87653160095215

Token 1308: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.004172302782535553
    2. 'y' → logprob: -5.504172325134277
    3. '                   ' → logprob: -9.754172325134277
    4. '               ' → logprob: -10.504172325134277
    5. '(' → logprob: -13.129172325134277
    6. '           ' → logprob: -13.254172325134277
    7. '[y' → logprob: -14.129172325134277
    8. '                       ' → logprob: -14.254172325134277
    9. ',y' → logprob: -14.379172325134277
    10. '	y' → logprob: -14.504172325134277

Token 1309: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020139472326263785
    2. 'y' → logprob: -8.625201225280762
    3. '(y' → logprob: -11.125201225280762
    4. '2' → logprob: -13.000201225280762
    5. '[y' → logprob: -13.625201225280762
    6. ',y' → logprob: -13.750201225280762
    7. '=y' → logprob: -14.500201225280762
    8. '   ' → logprob: -14.750201225280762
    9. ' y' → logprob: -14.875201225280762
    10. 'r' → logprob: -15.000201225280762

Token 1310: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.0005551783833652735
    2. ',' → logprob: -7.500555038452148
    3. ' ,' → logprob: -13.625555038452148
    4. '                   ' → logprob: -14.750555038452148
    5. '               ' → logprob: -16.12555503845215
    6. ',
' → logprob: -16.12555503845215
    7. ',x' → logprob: -16.25055503845215
    8. '           ' → logprob: -16.50055503845215
    9. '                       ' → logprob: -16.62555503845215
    10. 'y' → logprob: -17.00055503845215

Token 1311: '2' (ID: 17)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.492743581533432
    2. '1' → logprob: -1.1177436113357544
    3. '2' → logprob: -3.117743492126465
    4. ',y' → logprob: -4.242743492126465
    5. '+' → logprob: -6.242743492126465
    6. ',' → logprob: -6.992743492126465
    7. '                   ' → logprob: -8.492743492126465
    8. '               ' → logprob: -9.617743492126465
    9. '           ' → logprob: -9.742743492126465
    10. '       ' → logprob: -9.867743492126465

Token 1312: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.3557529857498594e-05
    2. '1' → logprob: -11.50002384185791
    3. ' +' → logprob: -12.25002384185791
    4. '2' → logprob: -13.00002384185791
    5. '```' → logprob: -13.25002384185791
    6. ',' → logprob: -13.87502384185791
    7. '               ' → logprob: -14.50002384185791
    8. '[' → logprob: -14.62502384185791
    9. '           ' → logprob: -14.75002384185791
    10. '       ' → logprob: -14.75002384185791

Token 1313: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002208069898188114
    2. '+' → logprob: -6.127208232879639
    3. 'y' → logprob: -11.12720775604248
    4. '0' → logprob: -12.12720775604248
    5. ' ' → logprob: -14.00220775604248
    6. '   ' → logprob: -14.25220775604248
    7. '
' → logprob: -15.00220775604248
    8. '```' → logprob: -15.37720775604248
    9. ' +' → logprob: -15.75220775604248
    10. '2' → logprob: -16.377208709716797

Token 1314: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0356295220553875
    2. '               ' → logprob: -4.035629749298096
    3. '                   ' → logprob: -4.535629749298096
    4. ',x' → logprob: -6.035629749298096
    5. '           ' → logprob: -6.660629749298096
    6. '                       ' → logprob: -6.910629749298096
    7. '       ' → logprob: -7.160629749298096
    8. '):' → logprob: -8.160629272460938
    9. '```' → logprob: -8.535629272460938
    10. ':
' → logprob: -8.785629272460938

Token 1315: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0022963248193264008
    2. '                       ' → logprob: -6.252296447753906
    3. '```' → logprob: -8.752296447753906
    4. ' for' → logprob: -9.377296447753906
    5. '               ' → logprob: -9.627296447753906
    6. 'for' → logprob: -10.002296447753906
    7. '                           ' → logprob: -12.377296447753906
    8. '           ' → logprob: -12.627296447753906
    9. '   ' → logprob: -13.127296447753906
    10. '		           ' → logprob: -13.252296447753906

Token 1316: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.5276386141777039
    2. ' for' → logprob: -1.2776386737823486
    3. '                       ' → logprob: -2.4026386737823486
    4. '                   ' → logprob: -3.2776386737823486
    5. '               ' → logprob: -6.4026384353637695
    6. '           ' → logprob: -7.0276384353637695
    7. '   ' → logprob: -8.77763843536377
    8. '       ' → logprob: -8.90263843536377
    9. '	for' → logprob: -9.02763843536377
    10. '```' → logprob: -9.27763843536377

Token 1317: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0019286326132714748
    2. ' x' → logprob: -6.251928806304932
    3. '```' → logprob: -17.501928329467773
    4. '	x' → logprob: -19.126928329467773
    5. '   ' → logprob: -19.751928329467773
    6. '(x' → logprob: -21.376928329467773
    7. '$x' → logprob: -21.376928329467773
    8. '                           ' → logprob: -22.126928329467773
    9. ',x' → logprob: -22.126928329467773
    10. '                       ' → logprob: -22.251928329467773

Token 1318: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.032525401562452316
    2. 'in' → logprob: -3.6575253009796143
    3. '                   ' → logprob: -5.532525539398193
    4. '(x' → logprob: -7.032525539398193
    5. '[x' → logprob: -8.407525062561035
    6. ' (' → logprob: -8.407525062561035
    7. '                       ' → logprob: -8.532525062561035
    8. ' =' → logprob: -8.782525062561035
    9. '                    ' → logprob: -9.532525062561035
    10. '=x' → logprob: -9.657525062561035

Token 1319: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.49333760142326355
    2. ' range' → logprob: -0.9933376312255859
    3. 'x' → logprob: -3.993337631225586
    4. ' x' → logprob: -7.868337631225586
    5. '(x' → logprob: -8.493337631225586
    6. '(range' → logprob: -10.118337631225586
    7. '0' → logprob: -11.868337631225586
    8. ' in' → logprob: -13.618337631225586
    9. ' xrange' → logprob: -14.868337631225586
    10. ' (' → logprob: -14.868337631225586

Token 1320: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0003361774142831564
    2. 'x' → logprob: -8.250336647033691
    3. ' (' → logprob: -9.750336647033691
    4. '                   ' → logprob: -11.750336647033691
    5. '                       ' → logprob: -12.875336647033691
    6. '   ' → logprob: -13.250336647033691
    7. '               ' → logprob: -13.500336647033691
    8. '           ' → logprob: -13.875336647033691
    9. '       ' → logprob: -13.875336647033691
    10. '[x' → logprob: -14.875336647033691

Token 1321: '1' (ID: 16)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6507265567779541
    2. '1' → logprob: -0.9007265567779541
    3. ',x' → logprob: -3.025726556777954
    4. '(x' → logprob: -3.900726556777954
    5. '=x' → logprob: -6.775726318359375
    6. '[x' → logprob: -7.275726318359375
    7. '<x' → logprob: -8.150726318359375
    8. '+x' → logprob: -8.525726318359375
    9. '   ' → logprob: -9.025726318359375
    10. ':x' → logprob: -9.150726318359375

Token 1322: ',x' (ID: 29748)
  Prédit: ',x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',x' → logprob: -0.0004143456753809005
    2. ',' → logprob: -9.00041389465332
    3. ',y' → logprob: -9.25041389465332
    4. 'x' → logprob: -9.37541389465332
    5. '                   ' → logprob: -10.62541389465332
    6. '[x' → logprob: -11.00041389465332
    7. ' ,' → logprob: -11.12541389465332
    8. '                       ' → logprob: -11.12541389465332
    9. '```' → logprob: -11.75041389465332
    10. '               ' → logprob: -12.00041389465332

Token 1323: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.021662652492523193
    2. ',y' → logprob: -4.521662712097168
    3. '+' → logprob: -4.646662712097168
    4. ',' → logprob: -8.771662712097168
    5. '][' → logprob: -8.771662712097168
    6. '[y' → logprob: -8.771662712097168
    7. '           ' → logprob: -9.521662712097168
    8. ',x' → logprob: -9.646662712097168
    9. '   ' → logprob: -9.896662712097168
    10. '       ' → logprob: -10.021662712097168

Token 1324: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0004279275599401444
    2. '1' → logprob: -8.000428199768066
    3. '```' → logprob: -10.250428199768066
    4. 'x' → logprob: -10.375428199768066
    5. ' +' → logprob: -12.000428199768066
    6. '                       ' → logprob: -12.750428199768066
    7. '2' → logprob: -12.750428199768066
    8. '       ' → logprob: -12.875428199768066
    9. '                               ' → logprob: -13.375428199768066
    10. '+x' → logprob: -13.750428199768066

Token 1325: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0036611182149499655
    2. '+' → logprob: -6.003661155700684
    3. 'x' → logprob: -6.753661155700684
    4. '4' → logprob: -12.128661155700684
    5. '+x' → logprob: -12.378661155700684
    6. 'y' → logprob: -13.253661155700684
    7. '   ' → logprob: -14.003661155700684
    8. '2' → logprob: -14.128661155700684
    9. '(x' → logprob: -14.128661155700684
    10. '           ' → logprob: -14.378661155700684

Token 1326: '):
' (ID: 1883)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.16660258173942566
    2. '):
' → logprob: -2.041602611541748
    3. ':
' → logprob: -4.166602611541748
    4. '                   ' → logprob: -5.416602611541748
    5. ':' → logprob: -6.916602611541748
    6. '=' → logprob: -7.041602611541748
    7. '                      ' → logprob: -8.16660213470459
    8. ']:
' → logprob: -8.29160213470459
    9. '                           ' → logprob: -8.41660213470459
    10. '               ' → logprob: -8.54160213470459

Token 1327: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -4.572941179503687e-05
    2. '                   ' → logprob: -10.250045776367188
    3. '                           ' → logprob: -12.250045776367188
    4. '                      ' → logprob: -13.375045776367188
    5. '               ' → logprob: -13.875045776367188
    6. '                        ' → logprob: -14.500045776367188
    7. ' used' → logprob: -14.500045776367188
    8. '                        
' → logprob: -14.625045776367188
    9. '                     ' → logprob: -15.125045776367188
    10. '                               ' → logprob: -15.375045776367188

Token 1328: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' (adapté à ' used') → logprob: -0.07890884578227997
    2. ' used' → logprob: -2.578908920288086
    3. '                       ' → logprob: -11.203908920288086
    4. '                   ' → logprob: -12.703908920288086
    5. '   ' → logprob: -14.328908920288086
    6. '                           ' → logprob: -14.328908920288086
    7. '               ' → logprob: -14.578908920288086
    8. '           ' → logprob: -14.828908920288086
    9. '.used' → logprob: -16.078908920288086
    10. '_used' → logprob: -16.578908920288086

Token 1329: '_grid' (ID: 34614)
  Prédit: '_grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_grid' → logprob: -4.320199877838604e-07
    2. 'grid' → logprob: -15.125
    3. '_gr' → logprob: -17.25
    4. '_GRID' → logprob: -17.75
    5. 'Grid' → logprob: -18.0
    6. '_' → logprob: -19.25
    7. 'd' → logprob: -19.75
    8. '```' → logprob: -19.875
    9. '
' → logprob: -20.125
    10. '=' → logprob: -20.25

Token 1330: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -4.320199877838604e-07
    2. 'y' → logprob: -15.625
    3. '[' → logprob: -16.25
    4. '                       ' → logprob: -17.0
    5. '[user' → logprob: -17.375
    6. '=' → logprob: -17.875
    7. '                   ' → logprob: -18.0
    8. '[u' → logprob: -18.5
    9. '][' → logprob: -18.625
    10. 'False' → logprob: -18.75

Token 1331: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.13028983771800995
    2. '[y' → logprob: -2.6302897930145264
    3. '[x' → logprob: -3.1302897930145264
    4. '[' → logprob: -5.6302900314331055
    5. '1' → logprob: -6.8802900314331055
    6. '               ' → logprob: -7.3802900314331055
    7. '                       ' → logprob: -8.130290031433105
    8. '           ' → logprob: -8.505290031433105
    9. '                   ' → logprob: -8.755290031433105
    10. ']' → logprob: -9.130290031433105

Token 1332: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -3.128163257315464e-07
    2. 'False' → logprob: -15.25
    3. '{x' → logprob: -17.375
    4. ' x' → logprob: -17.375
    5. '[x' → logprob: -18.25
    6. '```' → logprob: -19.5
    7. '	x' → logprob: -19.625
    8. '1' → logprob: -20.0
    9. ''x' → logprob: -20.0
    10. 'false' → logprob: -20.25

Token 1333: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0810532197356224
    2. ']' → logprob: -2.8310532569885254
    3. ' =' → logprob: -4.581053256988525
    4. ']=' → logprob: -4.956053256988525
    5. '=False' → logprob: -6.456053256988525
    6. ')' → logprob: -10.956052780151367
    7. '                       ' → logprob: -10.956052780151367
    8. ' ]' → logprob: -12.831052780151367
    9. 'False' → logprob: -12.956052780151367
    10. '                           ' → logprob: -13.331052780151367

Token 1334: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0011833232128992677
    2. ' =' → logprob: -6.75118350982666
    3. '=False' → logprob: -11.25118350982666
    4. '                       ' → logprob: -17.001182556152344
    5. 'False' → logprob: -18.376182556152344
    6. '=
' → logprob: -19.626182556152344
    7. '                           ' → logprob: -20.001182556152344
    8. '==' → logprob: -20.501182556152344
    9. '                        ' → logprob: -20.626182556152344
    10. ']=' → logprob: -20.626182556152344

Token 1335: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -6.2729995988775045e-06
    2. ' False' → logprob: -12.000006675720215
    3. '(False' → logprob: -20.7500057220459
    4. '   ' → logprob: -20.8750057220459
    5. '=False' → logprob: -23.5000057220459
    6. 'false' → logprob: -24.3750057220459
    7. '0' → logprob: -24.5000057220459
    8. 'True' → logprob: -24.8750057220459
    9. '       ' → logprob: -25.0000057220459
    10. '.False' → logprob: -25.5000057220459

Token 1336: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1337: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.545781135559082
    2. '
' → logprob: -0.920781135559082
    3. '       ' → logprob: -4.670781135559082
    4. 'if' → logprob: -4.920781135559082
    5. '```' → logprob: -6.045781135559082
    6. 'print' → logprob: -6.795781135559082
    7. '    
' → logprob: -7.295781135559082
    8. '<|end|>' → logprob: -7.420781135559082
    9. '        
' → logprob: -7.795781135559082
    10. 'try' → logprob: -8.920781135559082

Token 1338: ' #' (ID: 1069)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.09630756080150604
    2. '       ' → logprob: -2.4713075160980225
    3. '   ' → logprob: -5.721307754516602
    4. ' used' → logprob: -6.471307754516602
    5. '```' → logprob: -6.721307754516602
    6. '
' → logprob: -6.971307754516602
    7. 'grid' → logprob: -8.721307754516602
    8. '        
' → logprob: -9.221307754516602
    9. '``' → logprob: -10.346307754516602
    10. 'if' → logprob: -10.846307754516602

Token 1339: ' Pré' (ID: 86400)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.0003365350130479783
    2. '       ' → logprob: -8.125336647033691
    3. '   ' → logprob: -10.500336647033691
    4. ' used' → logprob: -11.375336647033691
    5. '```' → logprob: -14.375336647033691
    6. '
' → logprob: -15.250336647033691
    7. '        
' → logprob: -15.750336647033691
    8. 'back' → logprob: -15.875336647033691
    9. '_used' → logprob: -16.500335693359375
    10. '#' → logprob: -16.875335693359375

Token 1340: 'parer' (ID: 48041)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.1977328658103943
    2. '       ' → logprob: -1.947732925415039
    3. '   ' → logprob: -3.572732925415039
    4. '_used' → logprob: -6.197732925415039
    5. ' used' → logprob: -6.322732925415039
    6. 'occupied' → logprob: -6.822732925415039
    7. 'pared' → logprob: -7.072732925415039
    8. 'pare' → logprob: -7.197732925415039
    9. '#' → logprob: -7.697732925415039
    10. 'occup' → logprob: -8.197732925415039

Token 1341: ' une' (ID: 2463)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -3.690834273584187e-05
    2. ' used' → logprob: -10.25003719329834
    3. '   ' → logprob: -13.75003719329834
    4. '```' → logprob: -15.37503719329834
    5. '       ' → logprob: -15.62503719329834
    6. '_used' → logprob: -19.375036239624023
    7. 'visited' → logprob: -19.625036239624023
    8. '
' → logprob: -19.625036239624023
    9. '``' → logprob: -20.000036239624023
    10. 'Used' → logprob: -20.375036239624023

Token 1342: ' grille' (ID: 99153)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.000204851632588543
    2. ' used' → logprob: -8.500205039978027
    3. '[[' → logprob: -14.750205039978027
    4. '[' → logprob: -15.125205039978027
    5. '   ' → logprob: -15.125205039978027
    6. '_used' → logprob: -15.375205039978027
    7. '
' → logprob: -16.00020408630371
    8. '```' → logprob: -17.37520408630371
    9. ' ' → logprob: -17.62520408630371
    10. 'empty' → logprob: -18.00020408630371

Token 1343: ' bool' (ID: 3792)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.0009143244242295623
    2. '       ' → logprob: -7.500914096832275
    3. ' used' → logprob: -8.375914573669434
    4. '   ' → logprob: -9.125914573669434
    5. '[' → logprob: -11.125914573669434
    6. ' =' → logprob: -12.875914573669434
    7. 'occupied' → logprob: -13.625914573669434
    8. '=' → logprob: -13.750914573669434
    9. '_used' → logprob: -14.125914573669434
    10. '```' → logprob: -14.125914573669434

Token 1344: 'é' (ID: 377)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03358161449432373
    2. 'used' → logprob: -4.408581733703613
    3. '   ' → logprob: -5.783581733703613
    4. 'e' → logprob: -5.908581733703613
    5. 'ean' → logprob: -5.908581733703613
    6. 'é' → logprob: -6.158581733703613
    7. '           ' → logprob: -6.408581733703613
    8. '               ' → logprob: -6.533581733703613
    9. '=True' → logprob: -6.783581733703613
    10. ' =' → logprob: -6.908581733703613

Token 1345: 'enne' (ID: 17721)
  Prédit: 'enne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enne' → logprob: -0.6013777256011963
    2. 'n' → logprob: -0.9763777256011963
    3. '       ' → logprob: -4.851377487182617
    4. 'ense' → logprob: -5.101377487182617
    5. 'nne' → logprob: -5.226377487182617
    6. '[' → logprob: -5.351377487182617
    7. 'ans' → logprob: -5.476377487182617
    8. '[][]' → logprob: -5.726377487182617
    9. 'e' → logprob: -6.101377487182617
    10. 'ence' → logprob: -6.101377487182617

Token 1346: ' pour' (ID: 1930)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6045501828193665
    2. 'used' → logprob: -0.8545501828193665
    3. ' used' → logprob: -4.104550361633301
    4. '   ' → logprob: -4.479550361633301
    5. ' =' → logprob: -8.3545503616333
    6. '
' → logprob: -10.1045503616333
    7. '        
' → logprob: -10.6045503616333
    8. '```' → logprob: -11.1045503616333
    9. '           ' → logprob: -11.7295503616333
    10. '=' → logprob: -11.7295503616333

Token 1347: ' mar' (ID: 2674)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5674498677253723
    2. 'used' → logprob: -1.0674498081207275
    3. '[y' → logprob: -2.6924498081207275
    4. '[x' → logprob: -4.067450046539307
    5. '[[' → logprob: -5.942450046539307
    6. ' [' → logprob: -7.192450046539307
    7. ' used' → logprob: -7.942450046539307
    8. 'False' → logprob: -8.817449569702148
    9. 'y' → logprob: -9.442449569702148
    10. '   ' → logprob: -9.692449569702148

Token 1348: 'quer' (ID: 8054)
  Prédit: 'quer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quer' → logprob: -0.0002637199067976326
    2. 'qu' → logprob: -8.375264167785645
    3. 'ker' → logprob: -11.500264167785645
    4. 'q' → logprob: -11.750264167785645
    5. 'que' → logprob: -11.750264167785645
    6. '   ' → logprob: -13.250264167785645
    7. '#' → logprob: -14.125264167785645
    8. '```' → logprob: -14.125264167785645
    9. '	' → logprob: -14.250264167785645
    10. '
' → logprob: -14.625264167785645

Token 1349: ' occupation' (ID: 54365)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.0006666870322078466
    2. ' used' → logprob: -8.000666618347168
    3. '   ' → logprob: -8.250666618347168
    4. '       ' → logprob: -9.875666618347168
    5. '[' → logprob: -11.250666618347168
    6. 'occupied' → logprob: -13.000666618347168
    7. 'False' → logprob: -13.875666618347168
    8. '[[' → logprob: -14.250666618347168
    9. '           ' → logprob: -14.875666618347168
    10. 'usage' → logprob: -15.000666618347168

Token 1350: '
' (ID: 198)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.20299731194972992
    2. '       ' → logprob: -1.7029973268508911
    3. ' used' → logprob: -6.577997207641602
    4. '   ' → logprob: -8.702997207641602
    5. '
' → logprob: -10.952997207641602
    6. '        
' → logprob: -12.952997207641602
    7. 'occupied' → logprob: -13.077997207641602
    8. '```' → logprob: -13.952997207641602
    9. '_used' → logprob: -14.077997207641602
    10. '.used' → logprob: -14.452997207641602

Token 1351: '       ' (ID: 309)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.0009345670696347952
    2. ' used' → logprob: -7.500934600830078
    3. '       ' → logprob: -8.000934600830078
    4. '   ' → logprob: -10.250934600830078
    5. '```' → logprob: -11.875934600830078
    6. '
' → logprob: -13.250934600830078
    7. '        
' → logprob: -14.000934600830078
    8. '_used' → logprob: -14.375934600830078
    9. '.used' → logprob: -15.125934600830078
    10. '``' → logprob: -15.125934600830078

Token 1352: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' (adapté à ' used') → logprob: -0.01934691332280636
    2. ' used' → logprob: -4.269346714019775
    3. '       ' → logprob: -5.519346714019775
    4. '   ' → logprob: -6.769346714019775
    5. '```' → logprob: -11.644347190856934
    6. '
' → logprob: -12.769347190856934
    7. '_used' → logprob: -14.894347190856934
    8. '        
' → logprob: -15.269347190856934
    9. ' ' → logprob: -15.394347190856934
    10. '.used' → logprob: -15.519347190856934

Token 1353: '_grid' (ID: 34614)
  Prédit: '_grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_grid' → logprob: -5.5861724831629544e-05
    2. ' =' → logprob: -10.875056266784668
    3. '_' → logprob: -11.250056266784668
    4. '=_' → logprob: -11.500056266784668
    5. '=' → logprob: -11.875056266784668
    6. '_gr' → logprob: -12.000056266784668
    7. '_=' → logprob: -16.37505531311035
    8. '\' → logprob: -16.37505531311035
    9. '_GRID' → logprob: -16.37505531311035
    10. '```' → logprob: -16.37505531311035

Token 1354: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02324605919420719
    2. ' =' → logprob: -3.7732460498809814
    3. '=[[' → logprob: -14.648245811462402
    4. '   ' → logprob: -16.52324676513672
    5. '=[' → logprob: -17.39824676513672
    6. '=
' → logprob: -19.52324676513672
    7. '＝' → logprob: -20.39824676513672
    8. ' ' → logprob: -20.64824676513672
    9. '=

' → logprob: -20.77324676513672
    10. '[[' → logprob: -20.89824676513672

Token 1355: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -1.0683535037969705e-05
    2. ' [[' → logprob: -11.50001049041748
    3. '[' → logprob: -14.50001049041748
    4. '   ' → logprob: -19.125011444091797
    5. '[y' → logprob: -20.875011444091797
    6. '=[[' → logprob: -21.750011444091797
    7. '([[' → logprob: -22.000011444091797
    8. ' [' → logprob: -22.500011444091797
    9. '[['' → logprob: -22.625011444091797
    10. '[
' → logprob: -22.750011444091797

Token 1356: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -5.512236498361744e-07
    2. ' False' → logprob: -14.500000953674316
    3. '(False' → logprob: -19.75
    4. '=False' → logprob: -22.375
    5. '0' → logprob: -22.625
    6. '   ' → logprob: -23.0
    7. 'false' → logprob: -24.375
    8. 'True' → logprob: -25.875
    9. '.False' → logprob: -26.0
    10. '[' → logprob: -26.375

Token 1357: ']*' (ID: 18579)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5760971903800964
    2. 'for' → logprob: -0.8260971903800964
    3. ']*' → logprob: -8.95109748840332
    4. '   ' → logprob: -11.20109748840332
    5. ']' → logprob: -11.45109748840332
    6. '	for' → logprob: -12.82609748840332
    7. '           ' → logprob: -14.57609748840332
    8. ' ' → logprob: -14.95109748840332
    9. '       ' → logprob: -16.20109748840332
    10. '    ' → logprob: -16.45109748840332

Token 1358: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.00013369438238441944
    2. '(X' → logprob: -9.000133514404297
    3. ' X' → logprob: -11.500133514404297
    4. ' (' → logprob: -17.000133514404297
    5. '   ' → logprob: -17.250133514404297
    6. 'import' → logprob: -17.375133514404297
    7. '[X' → logprob: -18.750133514404297
    8. '(' → logprob: -18.875133514404297
    9. '
' → logprob: -19.625133514404297
    10. '	X' → logprob: -20.750133514404297

Token 1359: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20142494142055511
    2. ' for' → logprob: -1.7014249563217163
    3. '   ' → logprob: -12.076424598693848
    4. '	for' → logprob: -12.326424598693848
    5. ']' → logprob: -14.576424598693848
    6. ')' → logprob: -15.201424598693848
    7. '       ' → logprob: -15.201424598693848
    8. '           ' → logprob: -15.576424598693848
    9. ' ' → logprob: -15.701424598693848
    10. '               ' → logprob: -17.076425552368164

Token 1360: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.026495015248656273
    2. '_y' → logprob: -4.151494979858398
    3. '_range' → logprob: -4.651494979858398
    4. '_Y' → logprob: -7.276494979858398
    5. ' range' → logprob: -9.526494979858398
    6. ' _' → logprob: -10.026494979858398
    7. 'range' → logprob: -11.151494979858398
    8. '_in' → logprob: -11.651494979858398
    9. '_yaml' → logprob: -12.401494979858398
    10. '_s' → logprob: -12.776494979858398

Token 1361: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.11306465417146683
    2. 'in' → logprob: -2.363064765930176
    3. ' range' → logprob: -4.613064765930176
    4. ' in' → logprob: -5.863064765930176
    5. '_' → logprob: -11.988064765930176
    6. '_range' → logprob: -12.738064765930176
    7. ' ' → logprob: -13.863064765930176
    8. '	range' → logprob: -13.988064765930176
    9. 'y' → logprob: -14.988064765930176
    10. ' _' → logprob: -15.988064765930176

Token 1362: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -2.15310683415737e-05
    2. ' range' → logprob: -10.750021934509277
    3. '   ' → logprob: -19.75002098083496
    4. '(range' → logprob: -19.75002098083496
    5. '	range' → logprob: -21.00002098083496
    6. ' ' → logprob: -22.00002098083496
    7. '[' → logprob: -22.25002098083496
    8. '_range' → logprob: -22.62502098083496
    9. '
' → logprob: -23.37502098083496
    10. '  ' → logprob: -23.50002098083496

Token 1363: '(Y' (ID: 44341)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06409484148025513
    2. ' range' → logprob: -2.9390947818756104
    3. '(Y' → logprob: -5.0640950202941895
    4. 'Y' → logprob: -5.9390950202941895
    5. '   ' → logprob: -8.814094543457031
    6. '[Y' → logprob: -10.189094543457031
    7. '(range' → logprob: -11.064094543457031
    8. '       ' → logprob: -12.314094543457031
    9. 'Range' → logprob: -13.064094543457031
    10. '
' → logprob: -13.564094543457031

Token 1364: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.16071128845214844
    2. ']' → logprob: -1.9107112884521484
    3. ')' → logprob: -7.660711288452148
    4. ' ]' → logprob: -11.910711288452148
    5. '       ' → logprob: -13.035711288452148
    6. ')]
' → logprob: -13.410711288452148
    7. ']
' → logprob: -13.410711288452148
    8. '])' → logprob: -13.535711288452148
    9. '>]' → logprob: -14.160711288452148
    10. '])]' → logprob: -14.785711288452148

Token 1365: '       ' (ID: 309)
  Prédit: 'back'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'back' → logprob: -0.24155095219612122
    2. '   ' → logprob: -1.7415509223937988
    3. '       ' → logprob: -3.241550922393799
    4. '
' → logprob: -9.116551399230957
    5. ' back' → logprob: -9.241551399230957
    6. '	back' → logprob: -11.366551399230957
    7. '```' → logprob: -11.491551399230957
    8. '        
' → logprob: -11.991551399230957
    9. '    
' → logprob: -13.366551399230957
    10. '           ' → logprob: -13.491551399230957

Token 1366: ' back' (ID: 1602)
  Prédit: 'back'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'back' (adapté à ' back') → logprob: -0.127410888671875
    2. '       ' → logprob: -2.127410888671875
    3. '
' → logprob: -8.502410888671875
    4. ' back' → logprob: -8.627410888671875
    5. '   ' → logprob: -9.252410888671875
    6. '	back' → logprob: -13.002410888671875
    7. '        
' → logprob: -13.627410888671875
    8. '(back' → logprob: -14.752410888671875
    9. '```' → logprob: -14.752410888671875
    10. '_back' → logprob: -15.377410888671875

Token 1367: 'track' (ID: 22792)
  Prédit: 'track'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'track' → logprob: -1.2664456789934775e-06
    2. 'tracking' → logprob: -14.250000953674316
    3. 'tract' → logprob: -15.250000953674316
    4. 't' → logprob: -15.875000953674316
    5. 'tr' → logprob: -16.000001907348633
    6. 'trace' → logprob: -16.750001907348633
    7. '_track' → logprob: -16.750001907348633
    8. 'tracker' → logprob: -18.250001907348633
    9. 'rack' → logprob: -19.750001907348633
    10. 'trap' → logprob: -20.000001907348633

Token 1368: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00012368128227535635
    2. '0' → logprob: -9.000123977661133
    3. ' (' → logprob: -15.500123977661133
    4. '(
' → logprob: -18.875123977661133
    5. '   ' → logprob: -21.750123977661133
    6. 'def' → logprob: -22.000123977661133
    7. ' ' → logprob: -22.125123977661133
    8. '
' → logprob: -23.000123977661133
    9. '()' → logprob: -23.125123977661133
    10. '(len' → logprob: -23.375123977661133

Token 1369: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -16.875
    3. '   ' → logprob: -17.5
    4. '۰' → logprob: -19.875
    5. ')' → logprob: -20.75
    6. '```' → logprob: -22.125
    7. '０' → logprob: -22.375
    8. '(' → logprob: -22.5
    9. '000' → logprob: -22.5
    10. '00' → logprob: -22.5

Token 1370: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018101456225849688
    2. ')' → logprob: -9.125181198120117
    3. ' ,' → logprob: -10.375181198120117
    4. ',b' → logprob: -11.250181198120117
    5. ',res' → logprob: -11.625181198120117
    6. ',)' → logprob: -12.000181198120117
    7. ',(' → logprob: -12.500181198120117
    8. '(' → logprob: -13.125181198120117
    9. ',len' → logprob: -13.625181198120117
    10. ',s' → logprob: -13.750181198120117

Token 1371: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -7.941850526549388e-06
    2. ' used' → logprob: -11.750007629394531
    3. '   ' → logprob: -18.62500762939453
    4. '-used' → logprob: -21.87500762939453
    5. '.used' → logprob: -22.12500762939453
    6. 'unused' → logprob: -22.37500762939453
    7. 'use' → logprob: -23.00000762939453
    8. '_used' → logprob: -23.25000762939453
    9. ' ' → logprob: -23.37500762939453
    10. 'Used' → logprob: -23.75000762939453

Token 1372: '_grid' (ID: 34614)
  Prédit: '_grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_grid' → logprob: -0.006744616664946079
    2. 'used' → logprob: -5.006744384765625
    3. 'grid' → logprob: -10.631744384765625
    4. '_used' → logprob: -12.756744384765625
    5. 'd' → logprob: -13.881744384765625
    6. 'ed' → logprob: -14.256744384765625
    7. '```' → logprob: -16.131744384765625
    8. 'Grid' → logprob: -16.381744384765625
    9. '_GRID' → logprob: -16.381744384765625
    10. '<Grid' → logprob: -16.756744384765625

Token 1373: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007594203110784292
    2. '   ' → logprob: -5.757594108581543
    3. ')
' → logprob: -6.382594108581543
    4. '
' → logprob: -6.757594108581543
    5. '       ' → logprob: -6.882594108581543
    6. ')

' → logprob: -7.757594108581543
    7. ' )' → logprob: -9.882594108581543
    8. '    
' → logprob: -11.382594108581543
    9. '

' → logprob: -11.632594108581543
    10. '```' → logprob: -11.757594108581543

Token 1374: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06791500747203827
    2. '       ' → logprob: -3.0679149627685547
    3. '   ' → logprob: -4.317914962768555
    4. '```' → logprob: -5.192914962768555
    5. ' if' → logprob: -8.317914962768555
    6. '``' → logprob: -11.442914962768555
    7. '        
' → logprob: -13.692914962768555
    8. '
' → logprob: -14.067914962768555
    9. '           ' → logprob: -14.067914962768555
    10. 'If' → logprob: -15.067914962768555

Token 1375: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -4.3226136767771095e-05
    2. '       ' → logprob: -10.750042915344238
    3. '```' → logprob: -10.750042915344238
    4. ' if' → logprob: -15.500042915344238
    5. '``' → logprob: -17.625043869018555
    6. '   ' → logprob: -17.625043869018555
    7. '#' (adapté à ' #') → logprob: -18.500043869018555
    8. '
' → logprob: -19.625043869018555
    9. '        
' → logprob: -19.750043869018555
    10. 'print' → logprob: -20.750043869018555

Token 1376: ' Analyse' (ID: 91441)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.3856492842023727e-06
    2. '       ' → logprob: -13.750000953674316
    3. '```' → logprob: -16.375001907348633
    4. ' if' → logprob: -16.625001907348633
    5. '#' → logprob: -18.500001907348633
    6. '   ' → logprob: -19.500001907348633
    7. '``' → logprob: -21.125001907348633
    8. 'If' → logprob: -22.000001907348633
    9. '
' → logprob: -22.125001907348633
    10. '           ' → logprob: -22.125001907348633

Token 1377: ' résultats' (ID: 48985)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.16093245148658752
    2. '       ' → logprob: -1.9109324216842651
    3. ' if' → logprob: -7.285932540893555
    4. '```' → logprob: -11.285932540893555
    5. '   ' → logprob: -12.410932540893555
    6. '
' → logprob: -12.535932540893555
    7. '#' → logprob: -14.535932540893555
    8. '	if' → logprob: -14.660932540893555
    9. '``' → logprob: -15.035932540893555
    10. ':' → logprob: -15.035932540893555

Token 1378: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.062371861189603806
    2. '       ' → logprob: -2.8123719692230225
    3. ' if' → logprob: -7.937371730804443
    4. '```' → logprob: -10.062372207641602
    5. '   ' → logprob: -12.562372207641602
    6. '
' → logprob: -14.437372207641602
    7. '``' → logprob: -15.312372207641602
    8. '	if' → logprob: -17.0623722076416
    9. '           ' → logprob: -17.5623722076416
    10. '        
' → logprob: -18.1873722076416

Token 1379: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.011639389209449291
    2. '       ' → logprob: -4.511639595031738
    3. '```' → logprob: -7.511639595031738
    4. ' if' → logprob: -10.136639595031738
    5. '   ' → logprob: -12.386639595031738
    6. '``' → logprob: -14.136639595031738
    7. '	if' → logprob: -16.886638641357422
    8. '        
' → logprob: -17.011638641357422
    9. 'If' → logprob: -17.636638641357422
    10. '           ' → logprob: -18.386638641357422

Token 1380: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.00015050210640765727
    2. '       ' → logprob: -9.000150680541992
    3. '```' → logprob: -10.750150680541992
    4. ' if' → logprob: -12.125150680541992
    5. '   ' → logprob: -16.625150680541992
    6. '``' → logprob: -17.125150680541992
    7. 'If' → logprob: -19.500150680541992
    8. '	if' → logprob: -21.250150680541992
    9. '        
' → logprob: -21.375150680541992
    10. '
' → logprob: -21.875150680541992

Token 1381: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0031947086099535227
    2. ' len' → logprob: -5.753194808959961
    3. '   ' → logprob: -11.253194808959961
    4. 'not' → logprob: -12.878194808959961
    5. ' not' → logprob: -13.878194808959961
    6. 'solutions' → logprob: -15.003194808959961
    7. ' ' → logprob: -16.00319480895996
    8. '(len' → logprob: -16.50319480895996
    9. ' solutions' → logprob: -16.87819480895996
    10. '  ' → logprob: -17.37819480895996

Token 1382: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -4.36574100604048e-06
    2. '(sol' → logprob: -13.750004768371582
    3. '(solution' → logprob: -13.875004768371582
    4. '(results' → logprob: -14.125004768371582
    5. '(res' → logprob: -14.375004768371582
    6. '(' → logprob: -14.750004768371582
    7. 'solutions' → logprob: -14.875004768371582
    8. '==' → logprob: -15.625004768371582
    9. 's' → logprob: -17.000003814697266
    10. ' (' → logprob: -17.000003814697266

Token 1383: 'olutions' (ID: 83919)
  Prédit: 'olutions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olutions' → logprob: -0.0001317871210630983
    2. 'solutions' → logprob: -9.000131607055664
    3. 'ols' → logprob: -13.000131607055664
    4. '>' → logprob: -13.250131607055664
    5. 'ol' → logprob: -13.875131607055664
    6. '[' → logprob: -14.000131607055664
    7. 'olution' → logprob: -14.250131607055664
    8. 'olu' → logprob: -14.375131607055664
    9. ' solutions' → logprob: -14.750131607055664
    10. '(' → logprob: -14.875131607055664

Token 1384: ')' (ID: 8)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.10073990374803543
    2. ' ==' → logprob: -2.3507399559020996
    3. '<' → logprob: -8.350739479064941
    4. '!=' → logprob: -8.850739479064941
    5. ')' → logprob: -9.225739479064941
    6. ' !=' → logprob: -10.600739479064941
    7. ')==' → logprob: -11.225739479064941
    8. '()==' → logprob: -12.225739479064941
    9. ' <' → logprob: -12.350739479064941
    10. '=' → logprob: -13.225739479064941

Token 1385: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2820611894130707
    2. ' ==' → logprob: -1.407061219215393
    3. '<' → logprob: -7.7820611000061035
    4. '!=' → logprob: -8.157061576843262
    5. ' !=' → logprob: -8.907061576843262
    6. '()==' → logprob: -10.907061576843262
    7. ' <' → logprob: -11.032061576843262
    8. '```' → logprob: -11.407061576843262
    9. '>' → logprob: -11.907061576843262
    10. '   ' → logprob: -12.282061576843262

Token 1386: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.25413551926612854
    2. '1' → logprob: -1.5041354894638062
    3. ' ' → logprob: -6.129135608673096
    4. '   ' → logprob: -11.004135131835938
    5. '```' → logprob: -12.379135131835938
    6. '  ' → logprob: -13.254135131835938
    7. '    ' → logprob: -14.004135131835938
    8. '==' → logprob: -14.629135131835938
    9. '	' → logprob: -15.129135131835938
    10. ' ' → logprob: -15.441635131835938

Token 1387: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4741177558898926
    2. '1' → logprob: -0.9741177558898926
    3. ' ' → logprob: -10.224117279052734
    4. '   ' → logprob: -12.474117279052734
    5. '```' → logprob: -15.224117279052734
    6. '    ' → logprob: -16.224117279052734
    7. '  ' → logprob: -16.224117279052734
    8. '==' → logprob: -16.599117279052734
    9. 'exact' → logprob: -16.974117279052734
    10. '     ' → logprob: -17.599117279052734

Token 1388: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.08961997181177139
    2. ':' → logprob: -2.4646198749542236
    3. ' or' → logprob: -8.089619636535645
    4. '           ' → logprob: -8.464619636535645
    5. '       ' → logprob: -9.214619636535645
    6. 'or' → logprob: -10.089619636535645
    7. '   ' → logprob: -12.089619636535645
    8. 'print' → logprob: -12.714619636535645
    9. '==' → logprob: -12.714619636535645
    10. ':
' → logprob: -12.839619636535645

Token 1389: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0034209280274808407
    2. '       ' → logprob: -5.753420829772949
    3. ':
' → logprob: -9.12842082977295
    4. ':' → logprob: -9.62842082977295
    5. '```' → logprob: -10.62842082977295
    6. 'print' → logprob: -11.00342082977295
    7. '   ' → logprob: -11.37842082977295
    8. '               ' → logprob: -12.25342082977295
    9. ' print' → logprob: -13.00342082977295
    10. '
' → logprob: -13.00342082977295

Token 1390: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.04592359438538551
    2. '           ' → logprob: -3.5459237098693848
    3. '       ' → logprob: -4.295923709869385
    4. ' print' → logprob: -6.420923709869385
    5. '   ' → logprob: -7.170923709869385
    6. '```' → logprob: -11.170923233032227
    7. '               ' → logprob: -11.795923233032227
    8. '	print' → logprob: -14.045923233032227
    9. '
' → logprob: -15.170923233032227
    10. ' ' → logprob: -15.545923233032227

Token 1391: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -1.9361264946837764e-07
    2. '('' → logprob: -16.0
    3. '(' → logprob: -16.75
    4. '"' → logprob: -19.375
    5. ' ("' → logprob: -21.25
    6. 'NA' → logprob: -21.25
    7. '(
' → logprob: -21.375
    8. '   ' → logprob: -22.375
    9. '("""' → logprob: -23.0
    10. '(("' → logprob: -23.25

Token 1392: 'NA' (ID: 9555)
  Prédit: 'NA'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NA' → logprob: -9.627176768844947e-05
    2. '"' → logprob: -9.250096321105957
    3. ' NA' → logprob: -17.37509536743164
    4. ''' → logprob: -18.25009536743164
    5. 'na' → logprob: -19.75009536743164
    6. 'NO' → logprob: -20.12509536743164
    7. 'Na' → logprob: -20.12509536743164
    8. '("' → logprob: -20.87509536743164
    9. '   ' → logprob: -21.00009536743164
    10. 'N' → logprob: -21.75009536743164

Token 1393: '")
' (ID: 1896)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04041020944714546
    2. '           ' → logprob: -3.415410280227661
    3. '")' → logprob: -5.540410041809082
    4. ')' → logprob: -6.040410041809082
    5. 'elif' → logprob: -8.665410041809082
    6. '")
' → logprob: -9.165410041809082
    7. '   ' → logprob: -9.290410041809082
    8. ')
' → logprob: -10.040410041809082
    9. '               ' → logprob: -12.040410041809082
    10. '')' → logprob: -13.040410041809082

Token 1394: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006822054740041494
    2. 'elif' → logprob: -5.006822109222412
    3. '           ' → logprob: -9.756821632385254
    4. '   ' → logprob: -10.506821632385254
    5. ' elif' → logprob: -11.381821632385254
    6. '<|end|>' → logprob: -12.256821632385254
    7. '```' → logprob: -12.881821632385254
    8. '	elif' → logprob: -14.756821632385254
    9. ')' → logprob: -14.756821632385254
    10. '#elif' → logprob: -15.131821632385254

Token 1395: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.0033155500423163176
    2. '       ' → logprob: -5.753315448760986
    3. ' elif' → logprob: -9.003315925598145
    4. '   ' → logprob: -11.503315925598145
    5. 'el' → logprob: -12.503315925598145
    6. '	elif' → logprob: -14.753315925598145
    7. '#elif' → logprob: -15.003315925598145
    8. 'else' → logprob: -16.003314971923828
    9. '```' → logprob: -16.628314971923828
    10. '    ' → logprob: -17.128314971923828

Token 1396: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.575949490070343
    2. 'len' → logprob: -0.825949490070343
    3. '   ' → logprob: -11.950949668884277
    4. ' ' → logprob: -12.950949668884277
    5. '  ' → logprob: -14.950949668884277
    6. '    ' → logprob: -15.075949668884277
    7. '(len' → logprob: -15.575949668884277
    8. '	len' → logprob: -15.700949668884277
    9. ' ' → logprob: -16.07594871520996
    10. '1' → logprob: -16.45094871520996

Token 1397: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00017433916218578815
    2. ' (' → logprob: -9.625174522399902
    3. '==' → logprob: -9.625174522399902
    4. ' ==' → logprob: -10.125174522399902
    5. '(solution' → logprob: -13.625174522399902
    6. '(' → logprob: -14.500174522399902
    7. '(sol' → logprob: -16.000173568725586
    8. '=' → logprob: -16.750173568725586
    9. '(S' → logprob: -17.500173568725586
    10. '   ' → logprob: -17.625173568725586

Token 1398: 'olutions' (ID: 83919)
  Prédit: 'solutions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solutions' → logprob: -0.49804192781448364
    2. 's' → logprob: -0.9980419278144836
    3. '(s' → logprob: -3.873041868209839
    4. '==' → logprob: -6.748042106628418
    5. ' solutions' → logprob: -7.748042106628418
    6. '(' → logprob: -7.998042106628418
    7. 'es' → logprob: -8.248042106628418
    8. 'olutions' → logprob: -8.373042106628418
    9. 'e' → logprob: -9.248042106628418
    10. '=' → logprob: -9.373042106628418

Token 1399: ')' (ID: 8)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6375730633735657
    2. ' ==' → logprob: -0.7625730633735657
    3. '>' → logprob: -5.6375732421875
    4. ' >' → logprob: -6.7625732421875
    5. ')' → logprob: -8.7625732421875
    6. '[' → logprob: -10.0125732421875
    7. '```' → logprob: -11.2625732421875
    8. ')==' → logprob: -11.7625732421875
    9. ' ' → logprob: -12.2625732421875
    10. '==
' → logprob: -12.5125732421875

Token 1400: ' >' (ID: 1424)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.47515687346458435
    2. '==' → logprob: -0.9751569032669067
    3. '>' → logprob: -7.100156784057617
    4. ' >' → logprob: -8.350156784057617
    5. '```' → logprob: -11.600156784057617
    6. '[' → logprob: -13.100156784057617
    7. ' ' → logprob: -13.475156784057617
    8. ' ' → logprob: -13.725156784057617
    9. '==
' → logprob: -13.975156784057617
    10. '   ' → logprob: -14.225156784057617

Token 1401: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010331686353310943
    2. ' ' → logprob: -6.876033306121826
    3. '2' → logprob: -15.501032829284668
    4. '=' → logprob: -16.501033782958984
    5. '   ' → logprob: -17.626033782958984
    6. '```' → logprob: -18.001033782958984
    7. '  ' → logprob: -18.876033782958984
    8. '0' → logprob: -19.126033782958984
    9. '１' → logprob: -19.501033782958984
    10. ' ' → logprob: -19.751033782958984

Token 1402: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004320996522437781
    2. '2' → logprob: -8.000432014465332
    3. 'MAX' → logprob: -9.500432014465332
    4. ' ' → logprob: -10.750432014465332
    5. '0' → logprob: -16.12543296813965
    6. '=' → logprob: -16.37543296813965
    7. '```' → logprob: -16.50043296813965
    8. '   ' → logprob: -16.75043296813965
    9. ' MAX' → logprob: -17.00043296813965
    10. '  ' → logprob: -18.25043296813965

Token 1403: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3742867708206177
    2. ':' → logprob: -1.3742867708206177
    3. '           ' → logprob: -2.874286651611328
    4. '==' → logprob: -6.499286651611328
    5. '       ' → logprob: -6.999286651611328
    6. ' ==' → logprob: -9.499286651611328
    7. ' or' → logprob: -9.874286651611328
    8. '   ' → logprob: -9.874286651611328
    9. '=' → logprob: -9.999286651611328
    10. '          ' → logprob: -11.124286651611328

Token 1404: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002678920282050967
    2. 'print' → logprob: -8.50026798248291
    3. '       ' → logprob: -10.50026798248291
    4. ' print' → logprob: -11.00026798248291
    5. '               ' → logprob: -11.87526798248291
    6. '   ' → logprob: -12.00026798248291
    7. '		' → logprob: -13.25026798248291
    8. '```' → logprob: -13.25026798248291
    9. '	       ' → logprob: -13.25026798248291
    10. '                   ' → logprob: -14.62526798248291

Token 1405: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0010145875858142972
    2. '           ' → logprob: -7.001014709472656
    3. ' print' → logprob: -9.251014709472656
    4. '       ' → logprob: -12.126014709472656
    5. '```' → logprob: -13.876014709472656
    6. '   ' → logprob: -14.251014709472656
    7. '	print' → logprob: -17.251014709472656
    8. '               ' → logprob: -17.626014709472656
    9. ' ' → logprob: -18.251014709472656
    10. '``' → logprob: -19.501014709472656

Token 1406: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -4.36574100604048e-06
    2. '(' → logprob: -12.375004768371582
    3. '('' → logprob: -15.875004768371582
    4. '("("' → logprob: -18.000003814697266
    5. '("""' → logprob: -18.625003814697266
    6. 'NA' → logprob: -19.375003814697266
    7. ' ("' → logprob: -19.750003814697266
    8. '(
' → logprob: -20.125003814697266
    9. '"' → logprob: -20.250003814697266
    10. '(("' → logprob: -20.875003814697266

Token 1407: 'NA' (ID: 9555)
  Prédit: 'NA'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NA' → logprob: -0.01815146580338478
    2. '"' → logprob: -4.01815128326416
    3. ''' → logprob: -13.76815128326416
    4. ' NA' → logprob: -14.76815128326416
    5. '
' → logprob: -17.143152236938477
    6. '   ' → logprob: -17.393152236938477
    7. '`' → logprob: -18.518152236938477
    8. 'na' → logprob: -18.643152236938477
    9. 'Na' → logprob: -18.768152236938477
    10. '("' → logprob: -18.893152236938477

Token 1408: '")
' (ID: 1896)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001295222609769553
    2. ')' → logprob: -9.750129699707031
    3. 'else' → logprob: -10.125129699707031
    4. ')
' → logprob: -10.500129699707031
    5. '```' → logprob: -13.875129699707031
    6. ' else' → logprob: -14.250129699707031
    7. '")' → logprob: -14.500129699707031
    8. '<|end|>' → logprob: -14.750129699707031
    9. '")
' → logprob: -15.000129699707031
    10. '   ' → logprob: -15.500129699707031

Token 1409: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.048671506345272064
    2. 'else' → logprob: -3.0486714839935303
    3. '```' → logprob: -9.92367172241211
    4. ' else' → logprob: -11.04867172241211
    5. 'elif' → logprob: -11.42367172241211
    6. '   ' → logprob: -11.79867172241211
    7. '	else' → logprob: -15.67367172241211
    8. '#else' → logprob: -16.17367172241211
    9. '}else' → logprob: -16.29867172241211
    10. '           ' → logprob: -16.54867172241211

Token 1410: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3132920265197754
    2. 'else' (adapté à ' else') → logprob: -1.3132920265197754
    3. ' else' → logprob: -10.563291549682617
    4. 'elif' → logprob: -12.563291549682617
    5. '```' → logprob: -14.438291549682617
    6. '   ' → logprob: -14.938291549682617
    7. '	else' → logprob: -16.188291549682617
    8. '}else' → logprob: -17.688291549682617
    9. '           ' → logprob: -17.813291549682617
    10. 'Else' → logprob: -18.563291549682617

Token 1411: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.29330745339393616
    2. ':' → logprob: -2.0433075428009033
    3. '           ' → logprob: -2.1683075428009033
    4. '       ' → logprob: -4.668307304382324
    5. '[' → logprob: -8.668307304382324
    6. '():
' → logprob: -8.918307304382324
    7. 'print' → logprob: -9.043307304382324
    8. ',' → logprob: -9.418307304382324
    9. '   ' → logprob: -10.293307304382324
    10. ':

' → logprob: -10.418307304382324

Token 1412: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.31429389119148254
    2. '       ' → logprob: -1.3142938613891602
    3. '```' → logprob: -7.81429386138916
    4. 'solution' → logprob: -8.06429386138916
    5. ' solution' → logprob: -9.06429386138916
    6. '   ' → logprob: -10.06429386138916
    7. 'b' → logprob: -10.06429386138916
    8. ' sol' → logprob: -10.06429386138916
    9. ' b' → logprob: -10.43929386138916
    10. 'sol' → logprob: -10.93929386138916

Token 1413: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.127390518784523
    2. 'solution' → logprob: -2.1273906230926514
    3. 'sol' → logprob: -8.25239086151123
    4. ' for' → logprob: -9.37739086151123
    5. 'answer' → logprob: -10.25239086151123
    6. 'ans' → logprob: -10.62739086151123
    7. '           ' → logprob: -10.87739086151123
    8. 'result' → logprob: -11.00239086151123
    9. '```' → logprob: -11.50239086151123
    10. ' solution' → logprob: -12.50239086151123

Token 1414: ' Une' (ID: 19758)
  Prédit: 'solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'solution' → logprob: -0.577303409576416
    2. 'for' → logprob: -0.952303409576416
    3. 'sol' → logprob: -3.077303409576416
    4. '#' → logprob: -5.577303409576416
    5. 'answer' → logprob: -6.952303409576416
    6. 'result' → logprob: -7.202303409576416
    7. '           ' → logprob: -8.202302932739258
    8. 'ans' → logprob: -8.202302932739258
    9. 'final' → logprob: -8.827302932739258
    10. '       ' → logprob: -8.827302932739258

Token 1415: ' seule' (ID: 41983)
  Prédit: 'solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'solution' → logprob: -0.03903837129473686
    2. 'b' → logprob: -4.414038181304932
    3. 'for' → logprob: -4.414038181304932
    4. '#' → logprob: -4.789038181304932
    5. '           ' → logprob: -6.164038181304932
    6. 'sol' → logprob: -6.539038181304932
    7. ' solution' → logprob: -7.039038181304932
    8. '       ' → logprob: -7.789038181304932
    9. '(solution' → logprob: -8.41403865814209
    10. 'unique' → logprob: -9.03903865814209

Token 1416: ' solution' (ID: 7578)
  Prédit: 'solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solution' → logprob: -0.019779333844780922
    2. ' solution' → logprob: -4.019779205322266
    3. 'sol' → logprob: -7.394779205322266
    4. '   ' → logprob: -8.519779205322266
    5. 'for' → logprob: -8.519779205322266
    6. '
' → logprob: -8.769779205322266
    7. '(solution' → logprob: -9.019779205322266
    8. '#' → logprob: -9.519779205322266
    9. 'import' → logprob: -9.644779205322266
    10. ' ' → logprob: -10.019779205322266

Token 1417: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.037710580974817276
    2. 'for' → logprob: -3.787710666656494
    3. 'solution' → logprob: -4.912710666656494
    4. ' for' → logprob: -5.287710666656494
    5. 'sol' → logprob: -6.912710666656494
    6. 'result' → logprob: -8.287710189819336
    7. ' solution' → logprob: -8.912710189819336
    8. '       ' → logprob: -9.287710189819336
    9. 'output' → logprob: -9.287710189819336
    10. 'ans' → logprob: -9.412710189819336

Token 1418: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0012522541219368577
    2. 'solution' → logprob: -7.626252174377441
    3. 'for' → logprob: -8.251252174377441
    4. ' for' → logprob: -8.626252174377441
    5. '       ' → logprob: -9.376252174377441
    6. 'output' → logprob: -9.876252174377441
    7. 'result' → logprob: -9.876252174377441
    8. ' solution' → logprob: -10.376252174377441
    9. '   ' → logprob: -10.501252174377441
    10. '(solution' → logprob: -10.876252174377441

Token 1419: ' sol' (ID: 1887)
  Prédit: 'solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solution' → logprob: -0.5567898750305176
    2. 'ans' → logprob: -1.6817898750305176
    3. 'sol' (adapté à ' sol') → logprob: -2.8067898750305176
    4. 'answer' → logprob: -2.8067898750305176
    5. 'result' → logprob: -3.1817898750305176
    6. 'output' → logprob: -3.8067898750305176
    7. 'assign' → logprob: -4.306789875030518
    8. 'assignment' → logprob: -4.431789875030518
    9. '           ' → logprob: -4.681789875030518
    10. 'final' → logprob: -4.931789875030518

Token 1420: ' =' (ID: 314)
  Prédit: 'ution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ution' → logprob: -0.4555395841598511
    2. ' =' → logprob: -1.080539584159851
    3. 'utions' → logprob: -3.9555397033691406
    4. '=' → logprob: -4.955539703369141
    5. 's' → logprob: -9.45553970336914
    6. 'u' → logprob: -9.70553970336914
    7. '   ' → logprob: -9.83053970336914
    8. '=[' → logprob: -10.95553970336914
    9. '=s' → logprob: -11.58053970336914
    10. '=u' → logprob: -11.83053970336914

Token 1421: ' solutions' (ID: 9368)
  Prédit: 'solutions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solutions' → logprob: -4.5491004129871726e-05
    2. ' solutions' → logprob: -10.000045776367188
    3. '[' → logprob: -17.500045776367188
    4. '[s' → logprob: -18.000045776367188
    5. '[]
' → logprob: -18.125045776367188
    6. '{' → logprob: -18.250045776367188
    7. 'solution' → logprob: -18.625045776367188
    8. '   ' → logprob: -18.625045776367188
    9. 'results' → logprob: -19.500045776367188
    10. 'olutions' → logprob: -20.000045776367188

Token 1422: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.4987974029500037e-05
    2. '           ' → logprob: -10.625024795532227
    3. '=' → logprob: -15.250024795532227
    4. ' =' → logprob: -15.875024795532227
    5. '][' → logprob: -16.500024795532227
    6. '0' → logprob: -17.125024795532227
    7. '               ' → logprob: -17.250024795532227
    8. '       ' → logprob: -18.000024795532227
    9. '                   ' → logprob: -18.000024795532227
    10. ')[' → logprob: -18.000024795532227

Token 1423: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. '[' → logprob: -13.875000953674316
    3. ' ' → logprob: -15.750000953674316
    4. '```' → logprob: -17.750001907348633
    5. '(' → logprob: -17.875001907348633
    6. '   ' → logprob: -18.500001907348633
    7. '
' → logprob: -18.750001907348633
    8. '-' → logprob: -19.000001907348633
    9. '#' → logprob: -19.250001907348633
    10. '1' → logprob: -19.500001907348633

Token 1424: ']
' (ID: 1592)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.27508974075317383
    2. '
' → logprob: -2.025089740753174
    3. ')
' → logprob: -2.400089740753174
    4. ')' → logprob: -4.275089740753174
    5. ']
' → logprob: -6.150089740753174
    6. '       ' → logprob: -7.150089740753174
    7. ']' → logprob: -7.650089740753174
    8. '
' → logprob: -8.900089263916016
    9. '   ' → logprob: -9.400089263916016
    10. '               ' → logprob: -9.900089263916016

Token 1425: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5136393904685974
    2. '       ' → logprob: -1.0136394500732422
    3. 'for' → logprob: -3.263639450073242
    4. ' for' → logprob: -8.513639450073242
    5. '   ' → logprob: -8.763639450073242
    6. 'output' → logprob: -9.138639450073242
    7. 'result' → logprob: -10.138639450073242
    8. '```' → logprob: -11.263639450073242
    9. '               ' → logprob: -11.888639450073242
    10. 'answer' → logprob: -12.513639450073242

Token 1426: ' #' (ID: 1069)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' → logprob: -0.3370101749897003
    2. 'for' → logprob: -2.337010145187378
    3. 'result' → logprob: -2.837010145187378
    4. '           ' → logprob: -2.962010145187378
    5. 'answer' → logprob: -3.212010145187378
    6. 'ans' → logprob: -4.462010383605957
    7. 'assign' → logprob: -4.587010383605957
    8. 'owner' → logprob: -5.587010383605957
    9. 'res' → logprob: -6.337010383605957
    10. '#' (adapté à ' #') → logprob: -6.337010383605957

Token 1427: ' Constru' (ID: 98396)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9391356110572815
    2. 'output' → logprob: -1.5641355514526367
    3. 'res' → logprob: -2.4391355514526367
    4. 'result' → logprob: -2.4391355514526367
    5. 'for' → logprob: -2.9391355514526367
    6. 'grid' → logprob: -2.9391355514526367
    7. 'owner' → logprob: -3.3141355514526367
    8. 'ans' → logprob: -3.4391355514526367
    9. 'answer' → logprob: -3.6891355514526367
    10. 'assign' → logprob: -5.064135551452637

Token 1428: 'ire' (ID: 594)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.011788899078965187
    2. 'ire' → logprob: -5.011788845062256
    3. 'cte' → logprob: -6.636788845062256
    4. 'cter' → logprob: -6.761788845062256
    5. 'ction' → logprob: -7.386788845062256
    6. 'er' → logprob: -7.386788845062256
    7. 'te' → logprob: -7.636788845062256
    8. 'ir' → logprob: -8.261789321899414
    9. 'ite' → logprob: -8.636789321899414
    10. 't' → logprob: -9.011789321899414

Token 1429: ' la' (ID: 557)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.2625486850738525
    2. 'output' → logprob: -1.2625486850738525
    3. 'result' → logprob: -1.6375486850738525
    4. 'answer' → logprob: -2.0125486850738525
    5. 'res' → logprob: -2.5125486850738525
    6. 'grid' → logprob: -4.262548446655273
    7. 'assign' → logprob: -5.262548446655273
    8. 'out' → logprob: -7.262548446655273
    9. 'owner' → logprob: -7.262548446655273
    10. 'assignment' → logprob: -7.262548446655273

Token 1430: ' grille' (ID: 99153)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'output' → logprob: -0.4228190779685974
    2. 'result' → logprob: -1.4228191375732422
    3. 'res' → logprob: -3.047819137573242
    4. 'answer' → logprob: -3.672819137573242
    5. 'grid' → logprob: -4.172819137573242
    6. 'ans' → logprob: -4.672819137573242
    7. 'out' → logprob: -6.297819137573242
    8. 'assign' → logprob: -6.672819137573242
    9. '#' → logprob: -7.547819137573242
    10. 'gr' → logprob: -7.797819137573242

Token 1431: ' de' (ID: 334)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'output' → logprob: -0.7332863211631775
    2. '           ' → logprob: -1.3582863807678223
    3. 'ans' → logprob: -2.2332863807678223
    4. 'answer' → logprob: -2.6082863807678223
    5. 'result' → logprob: -2.7332863807678223
    6. 'res' → logprob: -4.983286380767822
    7. 'out' → logprob: -5.108286380767822
    8. '            
' → logprob: -7.483286380767822
    9. '   ' → logprob: -7.733286380767822
    10. ' output' → logprob: -7.858286380767822

Token 1432: ' sortie' (ID: 52761)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.8704211711883545
    2. 'rés' → logprob: -1.1204211711883545
    3. 'res' → logprob: -2.4954211711883545
    4. 'output' → logprob: -2.6204211711883545
    5. 'sort' → logprob: -3.7454211711883545
    6. 'answer' → logprob: -3.9954211711883545
    7. 'labels' → logprob: -4.245421409606934
    8. 'ré' → logprob: -4.245421409606934
    9. 'assign' → logprob: -4.995421409606934
    10. 're' → logprob: -4.995421409606934

Token 1433: ' avec' (ID: 3937)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'output' → logprob: -0.017558708786964417
    2. 'out' → logprob: -4.767558574676514
    3. '           ' → logprob: -5.267558574676514
    4. 'result' → logprob: -6.517558574676514
    5. 'answer' → logprob: -6.642558574676514
    6. 'ans' → logprob: -7.267558574676514
    7. 'res' → logprob: -9.642559051513672
    8. '```' → logprob: -10.017559051513672
    9. 'grid' → logprob: -10.142559051513672
    10. ' output' → logprob: -10.392559051513672

Token 1434: ' les' (ID: 1341)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[[' → logprob: -1.3070696592330933
    2. 'buyer' → logprob: -1.6820696592330933
    3. '[['' → logprob: -1.8070696592330933
    4. '[' → logprob: -2.182069778442383
    5. 'b' → logprob: -2.557069778442383
    6. '['' → logprob: -2.682069778442383
    7. 'labels' → logprob: -2.682069778442383
    8. '0' → logprob: -4.057069778442383
    9. 'result' → logprob: -5.307069778442383
    10. 'output' → logprob: -5.307069778442383

Token 1435: ' num' (ID: 2269)
  Prédit: 'labels'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'labels' → logprob: -0.7884174585342407
    2. 'result' → logprob: -2.038417339324951
    3. 'output' → logprob: -2.163417339324951
    4. 'buyer' → logprob: -2.538417339324951
    5. 'res' → logprob: -3.038417339324951
    6. 'ids' → logprob: -3.163417339324951
    7. '[' → logprob: -3.788417339324951
    8. 'b' → logprob: -4.038417339324951
    9. 'ans' → logprob: -4.538417339324951
    10. 'id' → logprob: -4.788417339324951

Token 1436: 'éros' (ID: 120888)
  Prédit: 'éros'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éros' → logprob: -0.7364850044250488
    2. 'b' → logprob: -1.4864850044250488
    3. 'bers' → logprob: -2.611485004425049
    4. 'éro' → logprob: -2.736485004425049
    5. 'bres' → logprob: -3.111485004425049
    6. 'er' → logprob: -3.861485004425049
    7. 'for' → logprob: -3.861485004425049
    8. 'ber' → logprob: -4.111485004425049
    9. '#' → logprob: -4.486485004425049
    10. 'eros' → logprob: -4.486485004425049

Token 1437: ' d' (ID: 272)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3049072325229645
    2. 'output' → logprob: -2.1799073219299316
    3. '=' → logprob: -3.3049073219299316
    4. 'out' → logprob: -3.6799073219299316
    5. 'assign' → logprob: -3.8049073219299316
    6. 'assigned' → logprob: -4.304907321929932
    7. '           ' → logprob: -4.429907321929932
    8. 'ans' → logprob: -5.054907321929932
    9. '```' → logprob: -5.054907321929932
    10. 'b' → logprob: -5.179907321929932

Token 1438: ''' (ID: 6)
  Prédit: 'ache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ache' → logprob: -0.015021820552647114
    2. 'ach' → logprob: -5.015021800994873
    3. ''' → logprob: -5.390021800994873
    4. 'achat' → logprob: -6.765021800994873
    5. 'acheter' → logprob: -7.640021800994873
    6. '#' → logprob: -7.890021800994873
    7. 'achet' → logprob: -8.140022277832031
    8. 'buyers' → logprob: -8.140022277832031
    9. ''achat' → logprob: -8.265022277832031
    10. 'b' → logprob: -8.765022277832031

Token 1439: 'ache' (ID: 2285)
  Prédit: 'ache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ache' → logprob: -0.156662717461586
    2. 'b' → logprob: -2.906662702560425
    3. 'for' → logprob: -3.656662702560425
    4. 'buyer' → logprob: -3.656662702560425
    5. 'buyers' → logprob: -3.906662702560425
    6. 'ach' → logprob: -5.156662940979004
    7. 'rect' → logprob: -6.156662940979004
    8. 'sol' → logprob: -6.906662940979004
    9. 'res' → logprob: -7.031662940979004
    10. 'acheter' → logprob: -7.156662940979004

Token 1440: 'teurs' (ID: 77729)
  Prédit: 'teur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'teur' → logprob: -0.5761018991470337
    2. 'teurs' → logprob: -0.8261018991470337
    3. 'te' → logprob: -8.826102256774902
    4. 't' → logprob: -12.201102256774902
    5. 'ter' → logprob: -13.076102256774902
    6. 'uteur' → logprob: -13.201102256774902
    7. '#' → logprob: -13.326102256774902
    8. '```' → logprob: -14.326102256774902
    9. 'tte' → logprob: -14.576102256774902
    10. '`' → logprob: -14.576102256774902

Token 1441: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6686789393424988
    2. 'output' → logprob: -0.7936789393424988
    3. 'out' → logprob: -3.5436789989471436
    4. 'result' → logprob: -5.7936787605285645
    5. '
' → logprob: -7.1686787605285645
    6. 'answer' → logprob: -7.1686787605285645
    7. 'ans' → logprob: -7.4186787605285645
    8. '```' → logprob: -7.7936787605285645
    9. '            
' → logprob: -8.293679237365723
    10. ' output' → logprob: -8.793679237365723

Token 1442: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18449917435646057
    2. 'output' → logprob: -1.8094991445541382
    3. 'result' → logprob: -6.684499263763428
    4. 'out' → logprob: -6.809499263763428
    5. '   ' → logprob: -7.309499263763428
    6. 'grid' → logprob: -7.684499263763428
    7. '       ' → logprob: -8.18449878692627
    8. '
' → logprob: -8.30949878692627
    9. '            
' → logprob: -8.43449878692627
    10. 'answer' → logprob: -8.68449878692627

Token 1443: ' ans' (ID: 3345)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' → logprob: -0.029491722583770752
    2. 'out' → logprob: -3.779491662979126
    3. 'result' → logprob: -5.529491901397705
    4. 'res' → logprob: -7.029491901397705
    5. 'ans' (adapté à ' ans') → logprob: -7.279491901397705
    6. 'answer' → logprob: -7.779491901397705
    7. 'grid' → logprob: -8.279491424560547
    8. '   ' → logprob: -12.404491424560547
    9. 'solution' → logprob: -12.904491424560547
    10. 'final' → logprob: -13.279491424560547

Token 1444: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.201456218957901
    2. '=' → logprob: -1.7014561891555786
    3. '   ' → logprob: -10.451456069946289
    4. '=[' → logprob: -12.201456069946289
    5. '=[[' → logprob: -12.826456069946289
    6. '=
' → logprob: -13.826456069946289
    7. ' ' → logprob: -14.076456069946289
    8. ' =
' → logprob: -14.076456069946289
    9. '```' → logprob: -14.576456069946289
    10. '[' → logprob: -14.701456069946289

Token 1445: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -1.8550976164988242e-05
    2. ' [[' → logprob: -11.000018119812012
    3. '[' → logprob: -14.000018119812012
    4. '[['' → logprob: -14.000018119812012
    5. '   ' → logprob: -16.625019073486328
    6. '([[' → logprob: -20.000019073486328
    7. '[
' → logprob: -20.375019073486328
    8. '[]
' → logprob: -21.000019073486328
    9. '=[[' → logprob: -21.375019073486328
    10. ' ' → logprob: -22.250019073486328

Token 1446: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.624555291840807e-05
    2. '-' → logprob: -9.625076293945312
    3. 'None' → logprob: -11.875076293945312
    4. ' ' → logprob: -13.250076293945312
    5. '[' → logprob: -14.875076293945312
    6. ' -' → logprob: -15.750076293945312
    7. ''' → logprob: -15.750076293945312
    8. '"' → logprob: -15.875076293945312
    9. '   ' → logprob: -16.125076293945312
    10. 's' → logprob: -16.562576293945312

Token 1447: ']*' (ID: 18579)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.45622923970222473
    2. 'for' → logprob: -1.2062292098999023
    3. ']*' → logprob: -2.7062292098999023
    4. ']' → logprob: -8.706229209899902
    5. '	for' → logprob: -10.706229209899902
    6. '   ' → logprob: -10.956229209899902
    7. ']*(' → logprob: -12.456229209899902
    8. '           ' → logprob: -12.581229209899902
    9. '               ' → logprob: -13.581229209899902
    10. '*' → logprob: -13.581229209899902

Token 1448: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -1.8624639324116288e-06
    2. ' X' → logprob: -13.750001907348633
    3. '(X' → logprob: -15.125001907348633
    4. '   ' → logprob: -16.125001907348633
    5. 'Y' → logprob: -16.500001907348633
    6. 'import' → logprob: -17.375001907348633
    7. '
' → logprob: -17.500001907348633
    8. '           ' → logprob: -17.750001907348633
    9. '[X' → logprob: -17.875001907348633
    10. '       ' → logprob: -18.000001907348633

Token 1449: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07890135049819946
    2. ' for' → logprob: -2.5789012908935547
    3. '           ' → logprob: -11.953901290893555
    4. '       ' → logprob: -13.328901290893555
    5. '   ' → logprob: -13.453901290893555
    6. '	for' → logprob: -14.203901290893555
    7. '               ' → logprob: -14.953901290893555
    8. ']' → logprob: -15.078901290893555
    9. ')' → logprob: -15.578901290893555
    10. '          ' → logprob: -15.703901290893555

Token 1450: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.02107149548828602
    2. '_y' → logprob: -4.021071434020996
    3. '_Y' → logprob: -6.146071434020996
    4. '_range' → logprob: -7.271071434020996
    5. ' _' → logprob: -10.271071434020996
    6. '_x' → logprob: -10.396071434020996
    7. ' range' → logprob: -12.896071434020996
    8. '_X' → logprob: -12.896071434020996
    9. '_=' → logprob: -13.021071434020996
    10. ' y' → logprob: -13.271071434020996

Token 1451: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.006225729361176491
    2. 'in' → logprob: -5.2562255859375
    3. ' range' → logprob: -7.0062255859375
    4. ' in' → logprob: -9.3812255859375
    5. '(range' → logprob: -14.0062255859375
    6. '_range' → logprob: -16.0062255859375
    7. '	range' → logprob: -17.5062255859375
    8. '0' → logprob: -18.6312255859375
    9. '
' → logprob: -19.1312255859375
    10. ' ' → logprob: -19.1312255859375

Token 1452: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0002613358374219388
    2. ' range' → logprob: -8.250261306762695
    3. '(range' → logprob: -17.750261306762695
    4. 'Y' → logprob: -18.250261306762695
    5. '   ' → logprob: -19.875261306762695
    6. '
' → logprob: -20.250261306762695
    7. '_range' → logprob: -21.000261306762695
    8. '	range' → logprob: -21.375261306762695
    9. 'y' → logprob: -21.625261306762695
    10. ' ' → logprob: -22.250261306762695

Token 1453: '(Y' (ID: 44341)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.01311811339110136
    2. 'range' → logprob: -4.388118267059326
    3. ' range' → logprob: -8.013117790222168
    4. '(Y' → logprob: -8.888117790222168
    5. '[Y' → logprob: -10.263117790222168
    6. ' Y' → logprob: -10.388117790222168
    7. '   ' → logprob: -10.638117790222168
    8. '           ' → logprob: -11.138117790222168
    9. '       ' → logprob: -11.263117790222168
    10. '	Y' → logprob: -11.763117790222168

Token 1454: ')]
' (ID: 11587)
  Prédit: ']
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.19878962635993958
    2. ']' → logprob: -1.9487895965576172
    3. ')]
' → logprob: -3.448789596557617
    4. ')]' → logprob: -5.198789596557617
    5. '           ' → logprob: -7.948789596557617
    6. ']
' → logprob: -9.448789596557617
    7. ')' → logprob: -9.948789596557617
    8. '               ' → logprob: -11.448789596557617
    9. ']]
' → logprob: -11.698789596557617
    10. ')
' → logprob: -11.948789596557617

Token 1455: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013414320535957813
    2. 'for' → logprob: -4.38841438293457
    3. ' for' → logprob: -7.51341438293457
    4. '       ' → logprob: -8.63841438293457
    5. '   ' → logprob: -9.01341438293457
    6. '```' → logprob: -10.01341438293457
    7. '               ' → logprob: -12.51341438293457
    8. '	for' → logprob: -12.88841438293457
    9. '	       ' → logprob: -12.88841438293457
    10. '
' → logprob: -13.76341438293457

Token 1456: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.2044164389371872
    2. '           ' → logprob: -1.7044163942337036
    3. ' for' → logprob: -5.829416275024414
    4. '	for' → logprob: -10.579416275024414
    5. '   ' → logprob: -10.954416275024414
    6. '```' → logprob: -12.079416275024414
    7. '       ' → logprob: -12.579416275024414
    8. '	       ' → logprob: -12.829416275024414
    9. '
' → logprob: -12.954416275024414
    10. '		' → logprob: -14.329416275024414

Token 1457: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.025323979556560516
    2. 'idx' → logprob: -3.7753238677978516
    3. 'b' → logprob: -6.275323867797852
    4. ' i' → logprob: -9.150323867797852
    5. ' idx' → logprob: -9.525323867797852
    6. 'index' → logprob: -11.775323867797852
    7. 'bi' → logprob: -13.275323867797852
    8. '_i' → logprob: -13.400323867797852
    9. 'buyer' → logprob: -14.025323867797852
    10. '(i' → logprob: -14.275323867797852

Token 1458: ',b' (ID: 17568)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.06008605286478996
    2. ' in' → logprob: -3.1850860118865967
    3. ',' → logprob: -4.560086250305176
    4. ',b' → logprob: -5.185086250305176
    5. 'b' → logprob: -7.060086250305176
    6. '```' → logprob: -11.935086250305176
    7. ' ,' → logprob: -12.685086250305176
    8. ',in' → logprob: -12.935086250305176
    9. 'range' → logprob: -13.435086250305176
    10. '   ' → logprob: -13.685086250305176

Token 1459: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006075856741517782
    2. 'in' → logprob: -5.256075859069824
    3. ',' → logprob: -7.131075859069824
    4. 'n' → logprob: -11.381075859069824
    5. 's' → logprob: -11.756075859069824
    6. 'i' → logprob: -12.506075859069824
    7. 'range' → logprob: -13.131075859069824
    8. '
' → logprob: -13.381075859069824
    9. '...' → logprob: -13.381075859069824
    10. '```' → logprob: -13.506075859069824

Token 1460: ' enumerate' (ID: 29671)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12704485654830933
    2. 'enumer' → logprob: -2.127044916152954
    3. ' range' → logprob: -9.377044677734375
    4. ' enumerate' → logprob: -11.502044677734375
    5. 'in' → logprob: -11.877044677734375
    6. '
' → logprob: -11.877044677734375
    7. '   ' → logprob: -12.377044677734375
    8. '(range' → logprob: -13.377044677734375
    9. ' ' → logprob: -14.127044677734375
    10. 'ange' → logprob: -14.502044677734375

Token 1461: '(b' (ID: 3229)
  Prédit: 'buyers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'buyers' → logprob: -4.60414821645827e-06
    2. ' buyers' → logprob: -12.500004768371582
    3. '(b' → logprob: -15.125004768371582
    4. 'buy' → logprob: -15.625004768371582
    5. 'buyer' → logprob: -16.125003814697266
    6. '
' → logprob: -16.250003814697266
    7. 'range' → logprob: -16.500003814697266
    8. '(' → logprob: -17.000003814697266
    9. '   ' → logprob: -17.625003814697266
    10. '[' → logprob: -18.000003814697266

Token 1462: 'uy' (ID: 3731)
  Prédit: 'uy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uy' → logprob: -0.005284746177494526
    2. 'buyers' → logprob: -5.255284786224365
    3. 'yers' → logprob: -10.005284309387207
    4. 'uyer' → logprob: -13.255284309387207
    5. 'ayers' → logprob: -13.255284309387207
    6. 'users' → logprob: -14.630284309387207
    7. '```' → logprob: -15.005284309387207
    8. 'y' → logprob: -15.005284309387207
    9. '_buy' → logprob: -15.380284309387207
    10. 'buy' → logprob: -15.380284309387207

Token 1463: 'ers' (ID: 409)
  Prédit: 'yers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yers' → logprob: -0.15539509057998657
    2. 'ers' → logprob: -2.155395030975342
    3. 'rs' → logprob: -3.655395030975342
    4. 'buyers' → logprob: -6.530395030975342
    5. '```' → logprob: -7.905395030975342
    6. 'y' → logprob: -9.6553955078125
    7. 'r' → logprob: -10.0303955078125
    8. 'yrs' → logprob: -10.1553955078125
    9. '``' → logprob: -10.7803955078125
    10. '_buy' → logprob: -11.1553955078125

Token 1464: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.026705006137490273
    2. ':
' → logprob: -4.276704788208008
    3. '           ' → logprob: -5.526704788208008
    4. '               ' → logprob: -5.526704788208008
    5. ':' → logprob: -6.151704788208008
    6. '):' → logprob: -6.526704788208008
    7. '       ' → logprob: -7.276704788208008
    8. '   ' → logprob: -9.651704788208008
    9. ']:
' → logprob: -9.901704788208008
    10. '):
' → logprob: -10.651704788208008

Token 1465: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003500646213069558
    2. 'x' → logprob: -6.503500461578369
    3. '       ' → logprob: -7.628500461578369
    4. ' x' → logprob: -7.628500461578369
    5. '   ' → logprob: -8.003500938415527
    6. '           ' → logprob: -8.253500938415527
    7. 'rect' → logprob: -8.628500938415527
    8. 'b' → logprob: -10.128500938415527
    9. ' rect' → logprob: -10.128500938415527
    10. '                   ' → logprob: -10.503500938415527

Token 1466: ' rect' (ID: 13107)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.050429366528987885
    2. 'rect' (adapté à ' rect') → logprob: -3.050429344177246
    3. '   ' → logprob: -6.925429344177246
    4. 'for' → logprob: -7.550429344177246
    5. '           ' → logprob: -9.050429344177246
    6. '(x' → logprob: -9.550429344177246
    7. '       ' → logprob: -9.925429344177246
    8. '               ' → logprob: -9.925429344177246
    9. ' x' → logprob: -10.800429344177246
    10. '                   ' → logprob: -12.050429344177246

Token 1467: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3889315724372864
    2. '=' → logprob: -1.1389315128326416
    3. 'x' → logprob: -6.263931751251221
    4. '=(' → logprob: -9.513931274414062
    5. '=x' → logprob: -9.888931274414062
    6. '(x' → logprob: -11.388931274414062
    7. '   ' → logprob: -12.638931274414062
    8. '(' → logprob: -13.138931274414062
    9. ' =(' → logprob: -13.388931274414062
    10. '_x' → logprob: -13.388931274414062

Token 1468: ' sol' (ID: 1887)
  Prédit: 'sol'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sol' → logprob: -0.00032747918157838285
    2. ' sol' → logprob: -8.500327110290527
    3. 'solutions' → logprob: -9.000327110290527
    4. ' solutions' → logprob: -15.125327110290527
    5. 'solution' → logprob: -16.500328063964844
    6. 'res' → logprob: -16.750328063964844
    7. 'sal' → logprob: -17.000328063964844
    8. '   ' → logprob: -17.125328063964844
    9. '(sol' → logprob: -17.500328063964844
    10. ' sols' → logprob: -17.625328063964844

Token 1469: '[i' (ID: 1768)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3565109074115753
    2. '[i' → logprob: -1.356510877609253
    3. ' =' → logprob: -3.231510877609253
    4. '[' → logprob: -7.231511116027832
    5. '=
' → logprob: -7.356511116027832
    6. '=i' → logprob: -7.856511116027832
    7. '
' → logprob: -8.356511116027832
    8. '       ' → logprob: -8.356511116027832
    9. 's' → logprob: -8.606511116027832
    10. '   ' → logprob: -8.981511116027832

Token 1470: ']
' (ID: 1592)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.4496196508407593
    2. '               ' → logprob: -1.4496196508407593
    3. '                   ' → logprob: -2.699619770050049
    4. '
' → logprob: -3.449619770050049
    5. '           ' → logprob: -4.449619770050049
    6. ']
' → logprob: -4.699619770050049
    7. ')' → logprob: -5.074619770050049
    8. '[' → logprob: -8.19961929321289
    9. ']' → logprob: -8.69961929321289
    10. 'x' → logprob: -8.94961929321289

Token 1471: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21474717557430267
    2. '               ' → logprob: -1.7147471904754639
    3. 'x' → logprob: -5.089746952056885
    4. '```' → logprob: -5.589746952056885
    5. '       ' → logprob: -6.839746952056885
    6. '   ' → logprob: -6.964746952056885
    7. ' x' → logprob: -7.214746952056885
    8. '                   ' → logprob: -8.089747428894043
    9. '``' → logprob: -9.714747428894043
    10. '	       ' → logprob: -9.714747428894043

Token 1472: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -5.872261317563243e-05
    2. '(x' → logprob: -10.250059127807617
    3. '   ' → logprob: -11.125059127807617
    4. ' x' → logprob: -12.125059127807617
    5. '           ' → logprob: -13.375059127807617
    6. '               ' → logprob: -14.125059127807617
    7. '       ' → logprob: -14.250059127807617
    8. '                   ' → logprob: -16.500059127807617
    9. '	x' → logprob: -17.125059127807617
    10. 'for' → logprob: -17.250059127807617

Token 1473: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. '```' → logprob: -14.500000953674316
    3. '=' → logprob: -15.625000953674316
    4. 'for' → logprob: -16.000001907348633
    5. '0' → logprob: -16.250001907348633
    6. 'start' → logprob: -16.750001907348633
    7. 'from' → logprob: -17.000001907348633
    8. ' ' → logprob: -17.125001907348633
    9. ',' → logprob: -17.625001907348633
    10. '_' → logprob: -17.625001907348633

Token 1474: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.0036107590422034264
    2. ',' → logprob: -5.628610610961914
    3. ' ,' → logprob: -11.878610610961914
    4. ',
' → logprob: -12.628610610961914
    5. ',x' → logprob: -15.753610610961914
    6. 'y' → logprob: -16.628610610961914
    7. 'for' → logprob: -16.753610610961914
    8. '
' → logprob: -16.878610610961914
    9. ',Y' → logprob: -16.878610610961914
    10. '<|end|>' → logprob: -17.503610610961914

Token 1475: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4140441635390744e-05
    2. ',' → logprob: -11.375014305114746
    3. ',y' → logprob: -13.375014305114746
    4. '=' → logprob: -14.625014305114746
    5. ' ' → logprob: -15.875014305114746
    6. ',x' → logprob: -16.00001335144043
    7. '0' → logprob: -16.25001335144043
    8. 'y' → logprob: -16.37501335144043
    9. '```' → logprob: -16.62501335144043
    10. ' =' → logprob: -17.12501335144043

Token 1476: ',x' (ID: 29748)
  Prédit: ',y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.5850541591644287
    2. ',x' → logprob: -0.8350541591644287
    3. ',' → logprob: -4.710054397583008
    4. ' ,' → logprob: -9.835054397583008
    5. ',w' → logprob: -12.835054397583008
    6. '=' → logprob: -13.085054397583008
    7. ',
' → logprob: -13.085054397583008
    8. ',z' → logprob: -13.210054397583008
    9. ',v' → logprob: -14.210054397583008
    10. ',b' → logprob: -14.585054397583008

Token 1477: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00044496997725218534
    2. '=' → logprob: -8.625445365905762
    3. 'x' → logprob: -9.625445365905762
    4. ',x' → logprob: -9.750445365905762
    5. '0' → logprob: -10.500445365905762
    6. '2' → logprob: -11.000445365905762
    7. ',' → logprob: -11.250445365905762
    8. '<|end|>' → logprob: -11.250445365905762
    9. '```' → logprob: -11.375445365905762
    10. ',y' → logprob: -11.375445365905762

Token 1478: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.011441057547926903
    2. ',x' → logprob: -4.511441230773926
    3. ',' → logprob: -7.886441230773926
    4. ',
' → logprob: -12.011441230773926
    5. '+' → logprob: -12.011441230773926
    6. ' ,' → logprob: -12.761441230773926
    7. ',z' → logprob: -14.761441230773926
    8. ',n' → logprob: -15.136441230773926
    9. ',b' → logprob: -15.761441230773926
    10. '<|end|>' → logprob: -16.26144027709961

Token 1479: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.822646693966817e-06
    2. '0' → logprob: -12.875007629394531
    3. 'x' → logprob: -13.125007629394531
    4. 'y' → logprob: -13.875007629394531
    5. '```' → logprob: -14.125007629394531
    6. '2' → logprob: -14.500007629394531
    7. '=' → logprob: -15.375007629394531
    8. '   ' → logprob: -15.625007629394531
    9. ',x' → logprob: -15.875007629394531
    10. ' ' → logprob: -15.875007629394531

Token 1480: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0481607913970947
    2. ' =' → logprob: -1.0481607913970947
    3. ' for' → logprob: -1.7981607913970947
    4. 'for' → logprob: -2.2981607913970947
    5. '               ' → logprob: -4.298160552978516
    6. '           ' → logprob: -4.923160552978516
    7. '   ' → logprob: -4.923160552978516
    8. '                   ' → logprob: -6.673160552978516
    9. '       ' → logprob: -7.173160552978516
    10. ':
' → logprob: -7.423160552978516

Token 1481: ' rect' (ID: 13107)
  Prédit: 'rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rect' → logprob: -5.848420551046729e-05
    2. ' rect' → logprob: -9.7500581741333
    3. '   ' → logprob: -16.500059127807617
    4. '(rect' → logprob: -17.625059127807617
    5. '	rect' → logprob: -18.750059127807617
    6. '       ' → logprob: -21.000059127807617
    7. '           ' → logprob: -21.000059127807617
    8. ' ' → logprob: -21.625059127807617
    9. '
' → logprob: -21.750059127807617
    10. '_rect' → logprob: -21.875059127807617

Token 1482: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01363106444478035
    2. '
' → logprob: -4.3886308670043945
    3. '           ' → logprob: -7.6386308670043945
    4. ' for' → logprob: -8.513630867004395
    5. '                   ' → logprob: -9.138630867004395
    6. '```' → logprob: -9.138630867004395
    7. '<|end|>' → logprob: -10.138630867004395
    8. '                
' → logprob: -10.138630867004395
    9. '       ' → logprob: -10.638630867004395
    10. '   ' → logprob: -10.888630867004395

Token 1483: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -3.2617008400848135e-05
    2. '```' → logprob: -11.000032424926758
    3. '           ' → logprob: -11.500032424926758
    4. '   ' → logprob: -12.750032424926758
    5. ' for' → logprob: -13.625032424926758
    6. 'for' → logprob: -14.250032424926758
    7. '                   ' → logprob: -14.375032424926758
    8. '       ' → logprob: -15.250032424926758
    9. '``' → logprob: -16.625032424926758
    10. '	           ' → logprob: -17.125032424926758

Token 1484: ' for' (ID: 395)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7454640865325928
    2. 'for' (adapté à ' for') → logprob: -0.7454640865325928
    3. ' for' → logprob: -2.9954640865325928
    4. '           ' → logprob: -7.620464324951172
    5. '	for' → logprob: -8.495464324951172
    6. '```' → logprob: -8.745464324951172
    7. '   ' → logprob: -9.620464324951172
    8. '	           ' → logprob: -10.620464324951172
    9. '                   ' → logprob: -11.870464324951172
    10. '	       ' → logprob: -12.995464324951172

Token 1485: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0019291093340143561
    2. ' y' → logprob: -6.25192928314209
    3. 'x' → logprob: -14.87692928314209
    4. '	y' → logprob: -15.87692928314209
    5. '   ' → logprob: -17.001928329467773
    6. ''y' → logprob: -19.876928329467773
    7. 'yy' → logprob: -20.001928329467773
    8. '    ' → logprob: -20.376928329467773
    9. '```' → logprob: -20.501928329467773
    10. '_y' → logprob: -21.376928329467773

Token 1486: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3871743083000183
    2. 'in' → logprob: -1.137174367904663
    3. 'range' → logprob: -8.262174606323242
    4. 'y' → logprob: -10.762174606323242
    5. '   ' → logprob: -11.887174606323242
    6. ' range' → logprob: -12.637174606323242
    7. ' y' → logprob: -12.887174606323242
    8. '               ' → logprob: -12.887174606323242
    9. '           ' → logprob: -13.137174606323242
    10. '                   ' → logprob: -13.137174606323242

Token 1487: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.008629930205643177
    2. ' range' → logprob: -4.75862979888916
    3. 'y' → logprob: -11.13362979888916
    4. ' y' → logprob: -15.13362979888916
    5. 'in' → logprob: -15.38362979888916
    6. '(range' → logprob: -16.258630752563477
    7. ' in' → logprob: -16.258630752563477
    8. '	range' → logprob: -17.508630752563477
    9. '   ' → logprob: -18.258630752563477
    10. 'Range' → logprob: -19.508630752563477

Token 1488: '(y' (ID: 14684)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0002858881198335439
    2. '(y' → logprob: -8.250286102294922
    3. ' y' → logprob: -10.750286102294922
    4. '	y' → logprob: -12.875286102294922
    5. '[y' → logprob: -15.750286102294922
    6. '=y' → logprob: -16.500286102294922
    7. '           ' → logprob: -16.500286102294922
    8. ',y' → logprob: -16.875286102294922
    9. '       ' → logprob: -17.000286102294922
    10. '   ' → logprob: -17.000286102294922

Token 1489: '1' (ID: 16)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00021915239631198347
    2. ' y' → logprob: -8.875219345092773
    3. '1' → logprob: -9.875219345092773
    4. '=y' → logprob: -11.125219345092773
    5. 'Y' → logprob: -12.875219345092773
    6. '(y' → logprob: -12.875219345092773
    7. '	y' → logprob: -13.000219345092773
    8. ',y' → logprob: -13.375219345092773
    9. '[y' → logprob: -13.625219345092773
    10. ''y' → logprob: -14.250219345092773

Token 1490: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.016872432082891464
    2. ',' → logprob: -4.141872406005859
    3. 'y' → logprob: -7.141872406005859
    4. ' ,' → logprob: -11.26687240600586
    5. ' y' → logprob: -11.76687240600586
    6. ',
' → logprob: -11.76687240600586
    7. '```' → logprob: -12.76687240600586
    8. '       ' → logprob: -13.01687240600586
    9. '                   ' → logprob: -13.01687240600586
    10. '(y' → logprob: -13.01687240600586

Token 1491: '2' (ID: 17)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0004778592265211046
    2. 'x' → logprob: -7.7504777908325195
    3. ' y' → logprob: -10.00047779083252
    4. '(y' → logprob: -13.50047779083252
    5. '	y' → logprob: -15.87547779083252
    6. 'Y' → logprob: -16.000478744506836
    7. '0' → logprob: -17.125478744506836
    8. ',y' → logprob: -17.500478744506836
    9. '=y' → logprob: -17.500478744506836
    10. '   ' → logprob: -17.625478744506836

Token 1492: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.723973582556937e-05
    2. ' +' → logprob: -11.375017166137695
    3. ',' → logprob: -13.625017166137695
    4. ',y' → logprob: -13.875017166137695
    5. '```' → logprob: -14.000017166137695
    6. '1' → logprob: -14.125017166137695
    7. '+y' → logprob: -14.250017166137695
    8. ',x' → logprob: -14.250017166137695
    9. '+x' → logprob: -14.750017166137695
    10. '+
' → logprob: -15.500017166137695

Token 1493: '1' (ID: 16)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.24183863401412964
    2. 'y' → logprob: -1.6168386936187744
    3. '+' → logprob: -4.366838455200195
    4. '1' → logprob: -5.741838455200195
    5. '2' → logprob: -8.366838455200195
    6. '(x' → logprob: -9.741838455200195
    7. '(y' → logprob: -10.366838455200195
    8. '+x' → logprob: -10.991838455200195
    9. ' y' → logprob: -11.116838455200195
    10. ' x' → logprob: -11.116838455200195

Token 1494: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2414393424987793
    2. ':
' → logprob: -2.6164393424987793
    3. '                   ' → logprob: -2.8664393424987793
    4. ':' → logprob: -3.3664393424987793
    5. '               ' → logprob: -3.7414393424987793
    6. '                       ' → logprob: -4.116439342498779
    7. '```' → logprob: -5.491439342498779
    8. '):' → logprob: -6.366439342498779
    9. '           ' → logprob: -6.616439342498779
    10. '       ' → logprob: -7.616439342498779

Token 1495: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.31419655680656433
    2. '```' → logprob: -2.0641965866088867
    3. ' for' → logprob: -2.1891965866088867
    4. 'for' → logprob: -3.6891965866088867
    5. '               ' → logprob: -5.689196586608887
    6. '                       ' → logprob: -6.189196586608887
    7. '   ' → logprob: -8.814196586608887
    8. '                           ' → logprob: -10.564196586608887
    9. '``' → logprob: -10.689196586608887
    10. '           ' → logprob: -10.689196586608887

Token 1496: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.09109491854906082
    2. ' for' → logprob: -2.591094970703125
    3. '                       ' → logprob: -5.341094970703125
    4. '```' → logprob: -5.466094970703125
    5. '                   ' → logprob: -5.841094970703125
    6. '               ' → logprob: -8.716094970703125
    7. '           ' → logprob: -11.091094970703125
    8. '       ' → logprob: -11.341094970703125
    9. '   ' → logprob: -11.591094970703125
    10. '	for' → logprob: -12.841094970703125

Token 1497: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0024756586644798517
    2. ' x' → logprob: -6.002475738525391
    3. '	x' → logprob: -19.75247573852539
    4. 'range' → logprob: -20.37747573852539
    5. '   ' → logprob: -20.62747573852539
    6. '```' → logprob: -20.62747573852539
    7. '_x' → logprob: -21.37747573852539
    8. '(x' → logprob: -21.87747573852539
    9. '[x' → logprob: -22.50247573852539
    10. '{x' → logprob: -22.87747573852539

Token 1498: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07889199256896973
    2. 'in' → logprob: -2.5788919925689697
    3. '   ' → logprob: -14.07889175415039
    4. '	in' → logprob: -14.45389175415039
    5. '                   ' → logprob: -16.07889175415039
    6. 'x' → logprob: -16.32889175415039
    7. 'In' → logprob: -16.45389175415039
    8. '                       ' → logprob: -16.57889175415039
    9. ' ' → logprob: -16.70389175415039
    10. 'n' → logprob: -16.82889175415039

Token 1499: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06196846812963486
    2. ' range' → logprob: -2.8119685649871826
    3. '(range' → logprob: -14.061968803405762
    4. 'x' → logprob: -17.436967849731445
    5. 'in' → logprob: -17.561967849731445
    6. '	range' → logprob: -18.436967849731445
    7. ' in' → logprob: -19.061967849731445
    8. 'Range' → logprob: -19.436967849731445
    9. '_range' → logprob: -19.561967849731445
    10. '.range' → logprob: -20.311967849731445

Token 1500: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.32194674015045166
    2. 'x' → logprob: -1.3219467401504517
    3. 'range' → logprob: -4.821946620941162
    4. 'in' → logprob: -8.19694709777832
    5. ' range' → logprob: -9.19694709777832
    6. ' x' → logprob: -9.44694709777832
    7. ' in' → logprob: -9.94694709777832
    8. '(range' → logprob: -9.94694709777832
    9. ' (' → logprob: -10.32194709777832
    10. '[x' → logprob: -12.69694709777832

Token 1501: '1' (ID: 16)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0001238004770129919
    2. '(x' → logprob: -9.125123977661133
    3. ',x' → logprob: -12.125123977661133
    4. ' x' → logprob: -12.875123977661133
    5. '[x' → logprob: -13.125123977661133
    6. 'range' → logprob: -13.750123977661133
    7. '<x' → logprob: -14.250123977661133
    8. '=x' → logprob: -14.375123977661133
    9. '1' → logprob: -14.500123977661133
    10. 'in' → logprob: -14.750123977661133

Token 1502: ',x' (ID: 29748)
  Prédit: ',x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',x' → logprob: -0.00045319506898522377
    2. ',' → logprob: -7.875452995300293
    3. 'x' → logprob: -9.625452995300293
    4. '(x' → logprob: -13.250452995300293
    5. ' ,' → logprob: -13.500452995300293
    6. '[x' → logprob: -14.125452995300293
    7. ',y' → logprob: -14.250452995300293
    8. ',
' → logprob: -14.750452995300293
    9. '```' → logprob: -14.875452995300293
    10. '       ' → logprob: -15.375452995300293

Token 1503: '2' (ID: 17)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -3.79811754100956e-05
    2. '(x' → logprob: -11.500038146972656
    3. '2' → logprob: -11.875038146972656
    4. '```' → logprob: -12.250038146972656
    5. '<x' → logprob: -12.750038146972656
    6. '+x' → logprob: -13.000038146972656
    7. '1' → logprob: -13.125038146972656
    8. ' x' → logprob: -13.625038146972656
    9. '{x' → logprob: -13.750038146972656
    10. '   ' → logprob: -14.000038146972656

Token 1504: '+' (ID: 10)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0024983715265989304
    2. '+' → logprob: -6.627498149871826
    3. '(x' → logprob: -7.752498149871826
    4. ',x' → logprob: -8.002498626708984
    5. '+x' → logprob: -8.252498626708984
    6. '```' → logprob: -9.627498626708984
    7. ')x' → logprob: -11.002498626708984
    8. '1' → logprob: -11.252498626708984
    9. ' x' → logprob: -11.627498626708984
    10. '       ' → logprob: -11.877498626708984

Token 1505: '1' (ID: 16)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6350160837173462
    2. '1' → logprob: -0.7600160837173462
    3. '2' → logprob: -6.260015964508057
    4. '+' → logprob: -7.760015964508057
    5. '+x' → logprob: -10.260016441345215
    6. ' x' → logprob: -11.760016441345215
    7. '(x' → logprob: -11.760016441345215
    8. 'range' → logprob: -12.385016441345215
    9. 'X' → logprob: -12.760016441345215
    10. '```' → logprob: -12.760016441345215

Token 1506: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.046644724905490875
    2. ':
' → logprob: -3.671644687652588
    3. '                       ' → logprob: -4.921644687652588
    4. '                   ' → logprob: -5.171644687652588
    5. '):' → logprob: -5.421644687652588
    6. '=' → logprob: -6.796644687652588
    7. ':' → logprob: -7.671644687652588
    8. ' =' → logprob: -8.546645164489746
    9. '[' → logprob: -8.671645164489746
    10. ']:
' → logprob: -8.796645164489746

Token 1507: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.03250451385974884
    2. ' ans' → logprob: -4.407504558563232
    3. '                   ' → logprob: -4.907504558563232
    4. 'ans' → logprob: -5.032504558563232
    5. '                           ' → logprob: -5.407504558563232
    6. '                               ' → logprob: -7.532504558563232
    7. '               ' → logprob: -8.157504081726074
    8. '           ' → logprob: -8.782504081726074
    9. '```' → logprob: -8.782504081726074
    10. '   ' → logprob: -9.157504081726074

Token 1508: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.023256659507751465
    2. ' ans' → logprob: -3.773256778717041
    3. '                           ' → logprob: -12.523256301879883
    4. '	ans' → logprob: -12.523256301879883
    5. '                   ' → logprob: -13.273256301879883
    6. '           ' → logprob: -13.773256301879883
    7. '                       ' → logprob: -14.648256301879883
    8. '(ans' → logprob: -14.898256301879883
    9. '               ' → logprob: -16.273256301879883
    10. '   ' → logprob: -16.523256301879883

Token 1509: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -1.2664456789934775e-06
    2. '[' → logprob: -14.500000953674316
    3. ' [' → logprob: -15.250000953674316
    4. 'y' → logprob: -15.375000953674316
    5. '][' → logprob: -15.875000953674316
    6. '```' → logprob: -16.750001907348633
    7. '   ' → logprob: -17.625001907348633
    8. '           ' → logprob: -17.750001907348633
    9. '                   ' → logprob: -18.125001907348633
    10. '[i' → logprob: -18.125001907348633

Token 1510: '][' (ID: 2696)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.04860564321279526
    2. '][' → logprob: -3.0486056804656982
    3. '[' → logprob: -12.048605918884277
    4. '[y' → logprob: -12.548605918884277
    5. 'x' → logprob: -12.798605918884277
    6. '```' → logprob: -14.048605918884277
    7. ' ][' → logprob: -14.173605918884277
    8. '[
' → logprob: -14.298605918884277
    9. ' [' → logprob: -14.673605918884277
    10. '                       ' → logprob: -14.673605918884277

Token 1511: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -5.512236498361744e-07
    2. ' x' → logprob: -14.625000953674316
    3. '	x' → logprob: -19.125
    4. '(x' → logprob: -20.0
    5. ')x' → logprob: -21.125
    6. ']' → logprob: -21.5
    7. '[x' → logprob: -21.625
    8. '```' → logprob: -21.625
    9. 'X' → logprob: -21.75
    10. '{x' → logprob: -22.125

Token 1512: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.021373653784394264
    2. ' =' → logprob: -4.896373748779297
    3. ']=' → logprob: -5.021373748779297
    4. ']' → logprob: -5.021373748779297
    5. '=b' → logprob: -7.646373748779297
    6. ')' → logprob: -13.521373748779297
    7. ' ]' → logprob: -13.521373748779297
    8. ')=' → logprob: -14.521373748779297
    9. '   ' → logprob: -15.271373748779297
    10. 'b' → logprob: -15.396373748779297

Token 1513: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0004895264864899218
    2. ' =' → logprob: -7.750489711761475
    3. '=b' → logprob: -9.750489234924316
    4. '=s' → logprob: -15.500489234924316
    5. '=int' → logprob: -16.500490188598633
    6. '=user' → logprob: -16.750490188598633
    7. '=k' → logprob: -17.375490188598633
    8. ']=' → logprob: -17.875490188598633
    9. '=i' → logprob: -18.000490188598633
    10. '=c' → logprob: -18.250490188598633

Token 1514: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.0325924449716695e-05
    2. 'buyers' → logprob: -11.50001049041748
    3. ' b' → logprob: -16.250009536743164
    4. '   ' → logprob: -19.125009536743164
    5. ' buyers' → logprob: -19.625009536743164
    6. 'buy' → logprob: -20.375009536743164
    7. '	b' → logprob: -20.500009536743164
    8. '       ' → logprob: -21.125009536743164
    9. '           ' → logprob: -21.250009536743164
    10. ')b' → logprob: -21.750009536743164

Token 1515: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.28202560544013977
    2. '
' → logprob: -1.4070255756378174
    3. '       ' → logprob: -8.157025337219238
    4. '<|end|>' → logprob: -8.157025337219238
    5. '```' → logprob: -9.407025337219238
    6. '            
' → logprob: -9.657025337219238
    7. '		' → logprob: -9.782025337219238
    8. '   ' → logprob: -10.782025337219238
    9. '
' → logprob: -10.782025337219238
    10. '               ' → logprob: -11.407025337219238

Token 1516: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08758630603551865
    2. '           ' → logprob: -3.3375864028930664
    3. '       ' → logprob: -3.9625864028930664
    4. '
' → logprob: -4.087586402893066
    5. '```' → logprob: -5.087586402893066
    6. 'for' → logprob: -5.587586402893066
    7. 'print' → logprob: -6.087586402893066
    8. '    
' → logprob: -8.587586402893066
    9. ' for' → logprob: -9.837586402893066
    10. 'import' → logprob: -10.712586402893066

Token 1517: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6198791861534119
    2. '   ' → logprob: -0.8698791861534119
    3. '       ' → logprob: -3.3698792457580566
    4. '           ' → logprob: -4.869879245758057
    5. '```' → logprob: -7.244879245758057
    6. ' for' → logprob: -8.494878768920898
    7. 'import' → logprob: -14.369878768920898
    8. '
' → logprob: -14.619878768920898
    9. 'print' → logprob: -14.994878768920898
    10. '	for' → logprob: -15.369878768920898

Token 1518: ' Impression' (ID: 150658)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -8.537868779967539e-06
    2. '       ' → logprob: -12.750008583068848
    3. ' for' → logprob: -12.750008583068848
    4. '           ' → logprob: -13.375008583068848
    5. '   ' → logprob: -14.375008583068848
    6. '```' → logprob: -15.000008583068848
    7. 'print' → logprob: -15.125008583068848
    8. '``' → logprob: -18.87500762939453
    9. '	for' → logprob: -19.00000762939453
    10. '               ' → logprob: -21.37500762939453

Token 1519: ' au' (ID: 2791)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00034821697045117617
    2. 'for' → logprob: -8.000348091125488
    3. ' for' → logprob: -11.500348091125488
    4. '       ' → logprob: -13.125348091125488
    5. '   ' → logprob: -14.875348091125488
    6. '		' → logprob: -16.250349044799805
    7. '               ' → logprob: -16.625349044799805
    8. 'print' → logprob: -16.750349044799805
    9. '          ' → logprob: -18.500349044799805
    10. 'import' → logprob: -18.875349044799805

Token 1520: ' format' (ID: 6011)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1585281789302826
    2. 'stdout' → logprob: -2.5335280895233154
    3. '       ' → logprob: -3.5335280895233154
    4. 'format' → logprob: -4.6585283279418945
    5. '   ' → logprob: -5.0335283279418945
    6. 'for' → logprob: -5.4085283279418945
    7. '           ' → logprob: -5.7835283279418945
    8. 'pass' → logprob: -6.4085283279418945
    9. 'sys' → logprob: -6.9085283279418945
    10. '               ' → logprob: -7.0335283279418945

Token 1521: ' demandé' (ID: 82780)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14688974618911743
    2. 'print' → logprob: -2.0218896865844727
    3. 'f' → logprob: -6.146889686584473
    4. '```' → logprob: -7.146889686584473
    5. ' for' → logprob: -7.521889686584473
    6. '   ' → logprob: -9.021889686584473
    7. '           ' → logprob: -9.271889686584473
    8. '``' → logprob: -9.396889686584473
    9. '"' → logprob: -9.521889686584473
    10. '
' → logprob: -9.646889686584473

Token 1522: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06221650913357735
    2. 'for' → logprob: -2.8122165203094482
    3. ' for' → logprob: -9.312216758728027
    4. '       ' → logprob: -9.312216758728027
    5. 'print' → logprob: -9.812216758728027
    6. '   ' → logprob: -11.312216758728027
    7. '		' → logprob: -14.187216758728027
    8. '               ' → logprob: -15.187216758728027
    9. '	for' → logprob: -16.68721580505371
    10. '          ' → logprob: -17.31221580505371

Token 1523: 'Y' (ID: 56)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00028171599842607975
    2. 'print' → logprob: -8.75028133392334
    3. ' for' → logprob: -9.50028133392334
    4. '           ' → logprob: -10.25028133392334
    5. '               ' → logprob: -11.87528133392334
    6. ')' → logprob: -13.00028133392334
    7. '```' → logprob: -13.00028133392334
    8. '``' → logprob: -14.25028133392334
    9. ')
' → logprob: -14.75028133392334
    10. '                   ' → logprob: -15.25028133392334

Token 1524: ' lignes' (ID: 81687)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8357254266738892
    2. ')' → logprob: -1.2107254266738892
    3. '           ' → logprob: -2.4607253074645996
    4. 'print' → logprob: -2.7107253074645996
    5. ',' → logprob: -3.2107253074645996
    6. '
' → logprob: -3.4607253074645996
    7. ')
' → logprob: -3.9607253074645996
    8. ' for' → logprob: -4.0857253074646
    9. ' print' → logprob: -6.3357253074646
    10. '):
' → logprob: -6.4607253074646

Token 1525: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03732110187411308
    2. ' for' → logprob: -3.912321090698242
    3. '           ' → logprob: -4.162321090698242
    4. ',' → logprob: -7.662321090698242
    5. ')' → logprob: -8.287321090698242
    6. 'print' → logprob: -8.912321090698242
    7. '):
' → logprob: -9.662321090698242
    8. '               ' → logprob: -9.787321090698242
    9. '```' → logprob: -10.912321090698242
    10. '=' → logprob: -11.037321090698242

Token 1526: ' X' (ID: 2127)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.18704243004322052
    2. '"' → logprob: -1.812042474746704
    3. ' '' → logprob: -5.187042236328125
    4. ' "' → logprob: -7.562042236328125
    5. 'ans' → logprob: -7.687042236328125
    6. 'X' → logprob: -7.812042236328125
    7. ' X' → logprob: -9.687042236328125
    8. ''x' → logprob: -9.937042236328125
    9. '"x' → logprob: -9.937042236328125
    10. ' ans' → logprob: -10.187042236328125

Token 1527: ' valeurs' (ID: 73668)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.285504013299942
    2. 'ans' → logprob: -2.535504102706909
    3. 'print' → logprob: -2.785504102706909
    4. 'cells' → logprob: -4.03550386428833
    5. ' )' → logprob: -4.28550386428833
    6. ' ans' → logprob: -4.53550386428833
    7. ' cells' → logprob: -4.66050386428833
    8. '```' → logprob: -4.66050386428833
    9. 'b' → logprob: -4.78550386428833
    10. ',' → logprob: -5.28550386428833

Token 1528: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.175066739320755
    2. 'for' → logprob: -3.1750667095184326
    3. '):
' → logprob: -3.1750667095184326
    4. 'print' → logprob: -3.4250667095184326
    5. '               ' → logprob: -3.9250667095184326
    6. ')' → logprob: -4.800066947937012
    7. ',' → logprob: -5.050066947937012
    8. ' for' → logprob: -5.675066947937012
    9. '                   ' → logprob: -6.550066947937012
    10. '```' → logprob: -6.550066947937012

Token 1529: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001933277933858335
    2. 'for' → logprob: -6.2519330978393555
    3. '```' → logprob: -13.001933097839355
    4. ' for' → logprob: -13.876933097839355
    5. '       ' → logprob: -14.001933097839355
    6. '               ' → logprob: -15.126933097839355
    7. 'print' → logprob: -15.876933097839355
    8. '   ' → logprob: -16.001934051513672
    9. '		' → logprob: -16.501934051513672
    10. '``' → logprob: -18.501934051513672

Token 1530: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.011071168817579746
    2. '           ' → logprob: -4.51107120513916
    3. ' for' → logprob: -10.76107120513916
    4. '       ' → logprob: -13.38607120513916
    5. '   ' → logprob: -14.51107120513916
    6. '```' → logprob: -15.88607120513916
    7. '               ' → logprob: -17.761070251464844
    8. '	for' → logprob: -19.761070251464844
    9. 'print' → logprob: -20.761070251464844
    10. '``' → logprob: -20.886070251464844

Token 1531: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.6007201671600342
    2. ' y' → logprob: -1.3507201671600342
    3. ' row' → logprob: -1.8507201671600342
    4. 'row' → logprob: -3.350720167160034
    5. 'ans' → logprob: -8.600720405578613
    6. ' line' → logprob: -9.350720405578613
    7. 'line' → logprob: -9.725720405578613
    8. '   ' → logprob: -11.725720405578613
    9. ' ans' → logprob: -11.850720405578613
    10. ' ' → logprob: -14.725720405578613

Token 1532: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0380479171872139
    2. 'in' → logprob: -3.288048028945923
    3. 'range' → logprob: -12.663047790527344
    4. '   ' → logprob: -13.538047790527344
    5. '```' → logprob: -14.038047790527344
    6. 'n' → logprob: -15.538047790527344
    7. ')' → logprob: -15.788047790527344
    8. ' range' → logprob: -16.288047790527344
    9. '	in' → logprob: -16.538047790527344
    10. 'for' → logprob: -16.663047790527344

Token 1533: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.018150178715586662
    2. ' range' → logprob: -4.018150329589844
    3. 'ans' → logprob: -15.393150329589844
    4. '   ' → logprob: -16.893150329589844
    5. ' ' → logprob: -18.518150329589844
    6. '0' → logprob: -18.518150329589844
    7. ' ans' → logprob: -18.893150329589844
    8. '(range' → logprob: -19.768150329589844
    9. '  ' → logprob: -19.893150329589844
    10. '
' → logprob: -20.143150329589844

Token 1534: '(Y' (ID: 44341)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.4898706376552582
    2. '(Y' → logprob: -0.9898706674575806
    3. 'range' → logprob: -4.489870548248291
    4. ' range' → logprob: -5.989870548248291
    5. ' Y' → logprob: -6.489870548248291
    6. '   ' → logprob: -9.36487102508545
    7. ')' → logprob: -9.48987102508545
    8. 'X' → logprob: -9.86487102508545
    9. '(' → logprob: -9.86487102508545
    10. '           ' → logprob: -9.98987102508545

Token 1535: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.03445061668753624
    2. '):' → logprob: -3.5344505310058594
    3. ':
' → logprob: -6.034450531005859
    4. ':' → logprob: -7.409450531005859
    5. ')' → logprob: -7.534450531005859
    6. '   ' → logprob: -7.659450531005859
    7. 'print' → logprob: -8.03445053100586
    8. '       ' → logprob: -9.15945053100586
    9. ' print' → logprob: -10.15945053100586
    10. '           ' → logprob: -10.40945053100586

Token 1536: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005200279993005097
    2. ' print' → logprob: -8.125519752502441
    3. 'print' → logprob: -9.000519752502441
    4. '```' → logprob: -9.625519752502441
    5. '   ' → logprob: -11.250519752502441
    6. '       ' → logprob: -11.625519752502441
    7. '           ' → logprob: -12.500519752502441
    8. '	           ' → logprob: -12.875519752502441
    9. '                       ' → logprob: -13.500519752502441
    10. '                   ' → logprob: -14.000519752502441

Token 1537: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.5766724944114685
    2. 'print' (adapté à ' print') → logprob: -0.8266724944114685
    3. '               ' → logprob: -7.451672554016113
    4. '   ' → logprob: -8.951672554016113
    5. '       ' → logprob: -11.451672554016113
    6. '           ' → logprob: -12.201672554016113
    7. '	print' → logprob: -12.701672554016113
    8. '```' → logprob: -13.326672554016113
    9. ' ' → logprob: -14.076672554016113
    10. ' for' → logprob: -14.076672554016113

Token 1538: '('' (ID: 706)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.42596760392189026
    2. ''' → logprob: -1.4259675741195679
    3. '('' → logprob: -2.4259676933288574
    4. '("' → logprob: -4.300967693328857
    5. '(*' → logprob: -5.925967693328857
    6. '*' → logprob: -6.550967693328857
    7. ' '' → logprob: -8.0509672164917
    8. '   ' → logprob: -9.1759672164917
    9. ' "' → logprob: -9.8009672164917
    10. '(' → logprob: -10.1759672164917

Token 1539: ' '.' (ID: 12662)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00021748353901784867
    2. '"' → logprob: -9.12521743774414
    3. '*' → logprob: -9.87521743774414
    4. ' '' → logprob: -9.87521743774414
    5. ''end' → logprob: -13.00021743774414
    6. '('' → logprob: -13.37521743774414
    7. 'ans' → logprob: -15.12521743774414
    8. ''*' → logprob: -15.12521743774414
    9. ''s' → logprob: -15.75021743774414
    10. ''en' → logprob: -15.75021743774414

Token 1540: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -0.0001785112835932523
    2. '.join' → logprob: -9.375178337097168
    3. 'print' → logprob: -10.375178337097168
    4. ''.' → logprob: -10.375178337097168
    5. ' join' → logprob: -11.125178337097168
    6. 'ans' → logprob: -11.375178337097168
    7. ').' → logprob: -13.875178337097168
    8. ''' → logprob: -13.875178337097168
    9. ')' → logprob: -14.500178337097168
    10. 'write' → logprob: -14.625178337097168

Token 1541: '(str' (ID: 7946)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.5156493782997131
    2. 'map' → logprob: -1.0156493186950684
    3. '(str' → logprob: -3.5156493186950684
    4. '(map' → logprob: -4.515649318695068
    5. '[str' → logprob: -10.015649795532227
    6. ' map' → logprob: -11.765649795532227
    7. ' str' → logprob: -13.140649795532227
    8. '	map' → logprob: -15.765649795532227
    9. '.map' → logprob: -15.765649795532227
    10. '	str' → logprob: -16.140649795532227

Token 1542: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -5.319370302458992e-06
    2. 'ans' → logprob: -12.250005722045898
    3. '(v' → logprob: -15.750005722045898
    4. '(val' → logprob: -16.1250057220459
    5. '(x' → logprob: -16.5000057220459
    6. '(cell' → logprob: -17.1250057220459
    7. '(a' → logprob: -17.8750057220459
    8. '(c' → logprob: -18.5000057220459
    9. '	ans' → logprob: -18.5000057220459
    10. '(value' → logprob: -19.5000057220459

Token 1543: '[y' (ID: 34551)
  Prédit: '[y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[y' → logprob: -2.7729658540920354e-05
    2. 'y' → logprob: -10.500027656555176
    3. '(y' → logprob: -17.375028610229492
    4. '[' → logprob: -17.875028610229492
    5. ')y' → logprob: -18.750028610229492
    6. ' y' → logprob: -19.125028610229492
    7. '[x' → logprob: -19.125028610229492
    8. '	y' → logprob: -19.125028610229492
    9. '```' → logprob: -19.125028610229492
    10. '   ' → logprob: -19.625028610229492

Token 1544: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.5761089324951172
    2. '[x' → logprob: -0.8261089324951172
    3. 'x' → logprob: -8.826108932495117
    4. '   ' → logprob: -11.451108932495117
    5. '       ' → logprob: -12.576108932495117
    6. '[' → logprob: -13.701108932495117
    7. ' ][' → logprob: -13.701108932495117
    8. ']' → logprob: -13.826108932495117
    9. ''][' → logprob: -13.951108932495117
    10. '           ' → logprob: -13.951108932495117

Token 1545: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -5.512236498361744e-07
    2. ' x' → logprob: -14.750000953674316
    3. '(x' → logprob: -17.5
    4. '[x' → logprob: -17.625
    5. '   ' → logprob: -17.875
    6. '0' → logprob: -18.375
    7. '{x' → logprob: -19.5
    8. '	x' → logprob: -19.5
    9. 'X' → logprob: -19.625
    10. '])' → logprob: -19.75

Token 1546: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19282515347003937
    2. '[x' → logprob: -1.942825198173523
    3. '])' → logprob: -3.4428250789642334
    4. '(x' → logprob: -10.567825317382812
    5. '))' → logprob: -10.567825317382812
    6. ' )' → logprob: -11.067825317382812
    7. ']' → logprob: -11.567825317382812
    8. 'x' → logprob: -12.192825317382812
    9. '[y' → logprob: -12.317825317382812
    10. '[' → logprob: -12.442825317382812

Token 1547: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2634456157684326
    2. ' for' → logprob: -1.7634456157684326
    3. '[x' → logprob: -3.0134456157684326
    4. ')' → logprob: -4.638445854187012
    5. '(x' → logprob: -6.638445854187012
    6. '[' → logprob: -11.263445854187012
    7. 'x' → logprob: -11.763445854187012
    8. '   ' → logprob: -11.888445854187012
    9. '           ' → logprob: -12.888445854187012
    10. '	for' → logprob: -13.138445854187012

Token 1548: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -4.5491004129871726e-05
    2. ' x' → logprob: -10.000045776367188
    3. '(x' → logprob: -20.875045776367188
    4. '	x' → logprob: -22.000045776367188
    5. 'range' → logprob: -22.875045776367188
    6. ')x' → logprob: -23.375045776367188
    7. '_x' → logprob: -23.500045776367188
    8. '
' → logprob: -23.875045776367188
    9. ' ' → logprob: -24.250045776367188
    10. '   ' → logprob: -24.500045776367188

Token 1549: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.023302661255002022
    2. ' in' → logprob: -3.7733025550842285
    3. 'x' → logprob: -9.773303031921387
    4. 'range' → logprob: -16.39830207824707
    5. ' x' → logprob: -17.77330207824707
    6. ')' → logprob: -17.77330207824707
    7. '
' → logprob: -17.89830207824707
    8. ' ' → logprob: -18.52330207824707
    9. 'In' → logprob: -18.52330207824707
    10. 'inx' → logprob: -18.89830207824707

Token 1550: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0001234428636962548
    2. ' range' → logprob: -9.000123023986816
    3. 'x' → logprob: -18.875123977661133
    4. '(range' → logprob: -19.625123977661133
    5. 'in' → logprob: -22.750123977661133
    6. '	range' → logprob: -23.375123977661133
    7. '0' → logprob: -23.500123977661133
    8. '   ' → logprob: -23.500123977661133
    9. ')' → logprob: -24.500123977661133
    10. 'Range' → logprob: -24.625123977661133

Token 1551: '(X' (ID: 17061)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.000768413650803268
    2. ' range' → logprob: -7.250768184661865
    3. 'x' → logprob: -9.750768661499023
    4. '(range' → logprob: -15.250768661499023
    5. 'in' → logprob: -18.250768661499023
    6. '   ' → logprob: -19.750768661499023
    7. ' xrange' → logprob: -19.750768661499023
    8. '(x' → logprob: -19.875768661499023
    9. ' x' → logprob: -20.250768661499023
    10. ')' → logprob: -20.375768661499023

Token 1552: ')))
' (ID: 12562)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0019745498429983854
    2. ')' → logprob: -6.876974582672119
    3. ')))' → logprob: -7.001974582672119
    4. ' ))' → logprob: -10.626974105834961
    5. '   ' → logprob: -13.626974105834961
    6. '))
' → logprob: -13.751974105834961
    7. ')x' → logprob: -13.876974105834961
    8. '       ' → logprob: -14.251974105834961
    9. ' ' → logprob: -15.001974105834961
    10. '}))' → logprob: -15.126974105834961

Token 1553: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1554: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.006716555915772915
    2. '__' → logprob: -5.006716728210449
    3. ' ' → logprob: -14.88171672821045
    4. '___' → logprob: -15.13171672821045
    5. '_' → logprob: -15.25671672821045
    6. ' ___' → logprob: -16.006715774536133
    7. '____' → logprob: -16.631715774536133
    8. '(__' → logprob: -17.381715774536133
    9. '  ' → logprob: -17.631715774536133
    10. '=' → logprob: -17.881715774536133

Token 1555: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.037381622940301895
    2. ' ==' → logprob: -3.537381649017334
    3. ' __' → logprob: -5.412381649017334
    4. '==' → logprob: -6.037381649017334
    5. '```' → logprob: -8.537381172180176
    6. 'name' → logprob: -8.787381172180176
    7. '.__' → logprob: -8.787381172180176
    8. '__.__' → logprob: -9.037381172180176
    9. '=="' → logprob: -10.412381172180176
    10. '__.' → logprob: -10.662381172180176

Token 1556: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0006285638664849102
    2. '==' → logprob: -7.750628471374512
    3. '```' → logprob: -9.500628471374512
    4. '__.__' → logprob: -9.875628471374512
    5. ' ==' → logprob: -11.250628471374512
    6. '__('' → logprob: -11.375628471374512
    7. '=='' → logprob: -11.750628471374512
    8. '=="' → logprob: -11.750628471374512
    9. '__.' → logprob: -12.250628471374512
    10. '__":
' → logprob: -12.375628471374512

Token 1557: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.04894670844078064
    2. '==' → logprob: -3.2989466190338135
    3. ' ==' → logprob: -4.798946857452393
    4. '=="' → logprob: -6.548946857452393
    5. '=='' → logprob: -6.798946857452393
    6. '_' → logprob: -10.548946380615234
    7. '___' → logprob: -11.673946380615234
    8. '==
' → logprob: -12.298946380615234
    9. '__.__' → logprob: -12.548946380615234
    10. '__":
' → logprob: -13.048946380615234

Token 1558: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.023274481296539307
    2. ''' → logprob: -3.7732744216918945
    3. ' "__' → logprob: -10.898274421691895
    4. '__' → logprob: -11.523274421691895
    5. ' '__' → logprob: -15.023274421691895
    6. '   ' → logprob: -15.648274421691895
    7. '"name' → logprob: -17.64827537536621
    8. '"user' → logprob: -17.64827537536621
    9. '("__' → logprob: -17.77327537536621
    10. ''"' → logprob: -18.14827537536621

Token 1559: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0856691300868988
    2. '__' → logprob: -2.5856690406799316
    3. '"' → logprob: -5.210669040679932
    4. '_main' → logprob: -6.960669040679932
    5. ''' → logprob: -8.46066951751709
    6. '__":
' → logprob: -9.71066951751709
    7. 'name' → logprob: -10.21066951751709
    8. '___' → logprob: -11.46066951751709
    9. ' main' → logprob: -11.96066951751709
    10. '__':
' → logprob: -12.71066951751709

Token 1560: '__":
' (ID: 49892)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.14685611426830292
    2. '__":
' → logprob: -2.0218560695648193
    3. '__':
' → logprob: -5.896856307983398
    4. '==' → logprob: -7.521856307983398
    5. ' ==' → logprob: -8.146856307983398
    6. '__.' → logprob: -8.646856307983398
    7. '__.__' → logprob: -8.646856307983398
    8. '__:' → logprob: -9.146856307983398
    9. '__["' → logprob: -9.771856307983398
    10. '__
' → logprob: -11.521856307983398

Token 1561: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04110753908753395
    2. 'solve' → logprob: -3.666107654571533
    3. ' solve' → logprob: -4.291107654571533
    4. '.solve' → logprob: -7.291107654571533
    5. '```' → logprob: -8.166107177734375
    6. '	s' → logprob: -11.416107177734375
    7. '<|end|>' → logprob: -11.791107177734375
    8. '``' → logprob: -12.166107177734375
    9. ' ' → logprob: -12.541107177734375
    10. '    
' → logprob: -12.666107177734375

Token 1562: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' (adapté à ' solve') → logprob: -3.054500666621607e-06
    2. ' solve' → logprob: -13.37500286102295
    3. '   ' → logprob: -13.50000286102295
    4. '.solve' → logprob: -18.125003814697266
    5. 'resolve' → logprob: -19.250003814697266
    6. '    
' → logprob: -21.250003814697266
    7. 'import' → logprob: -21.625003814697266
    8. 'validate' → logprob: -22.250003814697266
    9. 'save' → logprob: -22.375003814697266
    10. 's' → logprob: -22.625003814697266

Token 1563: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1561
Tokens correctement prédits (1ère position, stricte): 530
Tokens correctement prédits (1ère position, avec adaptation): 575
Tokens correctement prédits (top 10): 1140
Précision stricte (1ère position): 33.95%
Précision adaptée (1ère position): 36.84%
Précision (top 10): 73.03%
================================================================================
