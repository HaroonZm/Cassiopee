================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:11:24
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(10**7)

n = int(sys.stdin.readline())
warehouses = [tuple(map(int, sys.stdin.readline().split())) for _ in range(n)]
# s_i: number, d_i: distance, v_i: boxes count

# Sort by distance ascending to fix start at nearest warehouse
warehouses.sort(key=lambda x: x[1])

dist = [w[1] for w in warehouses]
weights = [w[2]*20 for w in warehouses]
numbers = [w[0] for w in warehouses]

# Precompute speed function denominator
def speed(w):
    return 2000/(70+w)

# Precompute distance between warehouses along straight line
def dist_bw(i,j):
    return abs(dist[i]-dist[j])

from functools import lru_cache

full_mask = (1<<n)-1

@lru_cache(None)
def dp(mask,last):
    if mask == full_mask:
        return 0
    res = float('inf')
    w_sum = 0
    for i in range(n):
        if (mask>>i)&1:
            w_sum += weights[i]
    w_sum += weights[last] if last>=0 else 0  # hold last warehouse's boxes

    curr_weight = w_sum
    # If last == -1 means starting state before first warehouse
    start_pos = -1 if last<0 else last

    # If last == -1, we must choose first warehouse to visit
    for nxt in range(n):
        if (mask>>nxt)&1==0:
            # Moving from last to nxt
            from_pos = dist[last] if last>=0 else 0
            to_pos = dist[nxt]
            d_move = abs(to_pos - from_pos)
            speed_move = 2000/(70+curr_weight)
            t_move = d_move / speed_move

            # hacking time zero, just add t_move + recursive dp
            new_mask = mask | (1<<nxt)
            cost = t_move + dp(new_mask,nxt)
            if cost < res:
                res = cost
    return res

# We want to find path: so store route
from math import inf

@lru_cache(None)
def dp_with_path(mask,last):
    if mask == full_mask:
        return 0, []
    res = inf
    path = []
    w_sum = 0
    for i in range(n):
        if (mask>>i)&1:
            w_sum += weights[i]
    w_sum += weights[last] if last>=0 else 0
    curr_weight= w_sum
    for nxt in range(n):
        if (mask>>nxt)&1==0:
            from_pos = dist[last] if last>=0 else 0
            to_pos = dist[nxt]
            d_move = abs(to_pos - from_pos)
            speed_move = 2000/(70+curr_weight)
            t_move = d_move / speed_move
            new_mask = mask | (1<<nxt)
            cost_next, path_next = dp_with_path(new_mask, nxt)
            cost = t_move + cost_next
            if cost < res:
                res = cost
                path = [nxt] + path_next
    return res, path

_, best_path = dp_with_path(0, -1)
print(' '.join(str(numbers[i]) for i in best_path))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6975938677787781
    2. '\n' → logprob: -0.8225938677787781
    3. '<|end|>' → logprob: -3.572593927383423
    4. '\' → logprob: -4.322593688964844
    5. 'newline' → logprob: -5.072593688964844
    6. 'import' → logprob: -5.322593688964844
    7. '<|end|>' → logprob: -5.947593688964844
    8. '```' → logprob: -6.572593688964844
    9. '' → logprob: -6.697593688964844
    10. '
' → logprob: -6.947593688964844

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -3.523948907968588e-05
    2. ' .' → logprob: -11.875035285949707
    3. '.import' → logprob: -12.125035285949707
    4. '.user' → logprob: -12.875035285949707
    5. '.readline' → logprob: -12.875035285949707
    6. '.`' → logprob: -13.125035285949707
    7. '.stdout' → logprob: -13.625035285949707
    8. '[' → logprob: -13.625035285949707
    9. '.exit' → logprob: -13.875035285949707
    10. '​.' → logprob: -14.125035285949707

Token 5: 'rec' (ID: 9285)
  Prédit: 'trace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trace' → logprob: -0.7563169002532959
    2. 's' → logprob: -1.131316900253296
    3. 't' → logprob: -3.006316900253296
    4. 'sys' → logprob: -3.256316900253296
    5. 'set' → logprob: -3.631316900253296
    6. 'soft' → logprob: -4.006317138671875
    7. 'default' → logprob: -4.256317138671875
    8. 'ex' → logprob: -4.881317138671875
    9. '_' → logprob: -5.006317138671875
    10. 'suffix' → logprob: -5.131317138671875

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0028418414294719696
    2. 'ursive' → logprob: -6.252841949462891
    3. 'urs' → logprob: -7.377841949462891
    4. 'ur' → logprob: -9.12784194946289
    5. 'urse' → logprob: -10.50284194946289
    6. '_limit' → logprob: -10.50284194946289
    7. 'ursor' → logprob: -10.87784194946289
    8. 'ursively' → logprob: -10.87784194946289
    9. 'set' → logprob: -11.25284194946289
    10. '_' → logprob: -11.50284194946289

Token 7: 'limit' (ID: 19698)
  Prédit: '_limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.15307803452014923
    2. 'limit' → logprob: -2.028078079223633
    3. '_depth' → logprob: -4.653078079223633
    4. '_' → logprob: -7.903078079223633
    5. 'depth' → logprob: -9.653078079223633
    6. ' limit' → logprob: -10.028078079223633
    7. '_rate' → logprob: -10.153078079223633
    8. '_error' → logprob: -10.403078079223633
    9. '_lim' → logprob: -10.653078079223633
    10. '_max' → logprob: -10.778078079223633

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.3557529857498594e-05
    2. '(
' → logprob: -11.37502384185791
    3. ' (' → logprob: -11.87502384185791
    4. '(

' → logprob: -12.75002384185791
    5. '((' → logprob: -14.50002384185791
    6. '("("' → logprob: -14.75002384185791
    7. '```' → logprob: -14.75002384185791
    8. '('' → logprob: -15.50002384185791
    9. '(.' → logprob: -15.62502384185791
    10. '(
' → logprob: -15.75002384185791

Token 9: '10' (ID: 702)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.3135242462158203
    2. '10' → logprob: -1.3135242462158203
    3. ' ' → logprob: -9.18852424621582
    4. '500' → logprob: -9.43852424621582
    5. '1' → logprob: -10.31352424621582
    6. '300' → logprob: -10.81352424621582
    7. '999' → logprob: -11.18852424621582
    8. '150' → logprob: -12.56352424621582
    9. '400' → logprob: -12.56352424621582
    10. '200' → logprob: -13.18852424621582

Token 10: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6703574657440186
    2. '000' → logprob: -0.9203574657440186
    3. '00' → logprob: -2.4203574657440186
    4. '6' → logprob: -7.295357704162598
    5. '4' → logprob: -8.045357704162598
    6. '**' → logprob: -9.045357704162598
    7. '2' → logprob: -10.295357704162598
    8. '5' → logprob: -10.545357704162598
    9. '```' → logprob: -11.670357704162598
    10. '3' → logprob: -11.795357704162598

Token 11: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.00762082589790225
    2. '9' → logprob: -5.507620811462402
    3. '6' → logprob: -5.757620811462402
    4. '8' → logprob: -7.882620811462402
    5. '```' → logprob: -15.757620811462402
    6. ' ' → logprob: -16.38262176513672
    7. '(' → logprob: -17.13262176513672
    8. '5' → logprob: -17.75762176513672
    9. '``' → logprob: -18.25762176513672
    10. '999' → logprob: -18.38262176513672

Token 12: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.696889623621246e-06
    2. ' )' → logprob: -13.62500286102295
    3. '))' → logprob: -13.75000286102295
    4. ')
' → logprob: -15.12500286102295
    5. ')))' → logprob: -18.375001907348633
    6. ')`' → logprob: -18.375001907348633
    7. '`)' → logprob: -18.500001907348633
    8. '）' → logprob: -18.500001907348633
    9. ' ' → logprob: -18.500001907348633
    10. ')

' → logprob: -18.750001907348633

Token 13: 'n' (ID: 77)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0005326599348336458
    2. '```' → logprob: -8.750533103942871
    3. '
' → logprob: -8.875533103942871
    4. '\' → logprob: -9.125533103942871
    5. 'n' → logprob: -9.875533103942871
    6. '

' → logprob: -11.500533103942871
    7. '
' → logprob: -11.500533103942871
    8. ' def' → logprob: -11.625533103942871
    9. ')' → logprob: -11.750533103942871
    10. '#' → logprob: -11.875533103942871

Token 14: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17898240685462952
    2. ' ' → logprob: -2.3039824962615967
    3. '=' → logprob: -2.8039824962615967
    4. '.' → logprob: -6.553982257843018
    5. ',' → logprob: -6.928982257843018
    6. ')' → logprob: -7.803982257843018
    7. ' ,' → logprob: -8.928982734680176
    8. '  ' → logprob: -9.053982734680176
    9. ' )' → logprob: -9.428982734680176
    10. ' >' → logprob: -10.053982734680176

Token 15: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.013171996921300888
    2. 'int' → logprob: -4.388172149658203
    3. ' ' → logprob: -7.513172149658203
    4. ' input' → logprob: -10.013172149658203
    5. '10' → logprob: -10.388172149658203
    6. '0' → logprob: -10.763172149658203
    7. 'input' → logprob: -12.388172149658203
    8. '5' → logprob: -12.513172149658203
    9. '1' → logprob: -12.888172149658203
    10. '20' → logprob: -13.388172149658203

Token 16: '(sys' (ID: 41042)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004372086375951767
    2. '(input' → logprob: -5.5043721199035645
    3. '(sys' → logprob: -8.254371643066406
    4. '('' → logprob: -11.629371643066406
    5. ' (' → logprob: -12.129371643066406
    6. '(`' → logprob: -12.254371643066406
    7. '(n' → logprob: -12.379371643066406
    8. '()' → logprob: -13.879371643066406
    9. '(
' → logprob: -14.004371643066406
    10. '(s' → logprob: -14.129371643066406

Token 17: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.47326600551605225
    2. '.' → logprob: -1.2232660055160522
    3. '.argv' → logprob: -2.723266124725342
    4. '.readline' → logprob: -4.223266124725342
    5. '.input' → logprob: -6.598266124725342
    6. '.read' → logprob: -7.723266124725342
    7. ' .' → logprob: -8.348265647888184
    8. '.stdout' → logprob: -8.723265647888184
    9. '.import' → logprob: -9.848265647888184
    10. '.std' → logprob: -9.973265647888184

Token 18: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0043077534064650536
    2. '.' → logprob: -5.879307746887207
    3. '.read' → logprob: -6.504307746887207
    4. ')' → logprob: -13.504307746887207
    5. '.)' → logprob: -13.629307746887207
    6. '.readlines' → logprob: -14.504307746887207
    7. ').' → logprob: -14.629307746887207
    8. ' readline' → logprob: -14.754307746887207
    9. '.Read' → logprob: -15.129307746887207
    10. '.READ' → logprob: -15.754307746887207

Token 19: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0017508649034425616
    2. '()' → logprob: -6.501750946044922
    3. '().' → logprob: -8.876750946044922
    4. ')' → logprob: -9.376750946044922
    5. '()))' → logprob: -12.001750946044922
    6. ' ())' → logprob: -12.126750946044922
    7. '())
' → logprob: -12.251750946044922
    8. '()[' → logprob: -12.251750946044922
    9. '()),' → logprob: -14.251750946044922
    10. '(' → logprob: -14.376750946044922

Token 20: 'ware' (ID: 2266)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3763286769390106
    2. 'for' → logprob: -2.376328706741333
    3. 'arr' → logprob: -2.876328706741333
    4. 'dp' → logprob: -3.126328706741333
    5. 'data' → logprob: -3.376328706741333
    6. 'tree' → logprob: -4.126328468322754
    7. 'd' → logprob: -4.501328468322754
    8. 'lst' → logprob: -4.501328468322754
    9. 'if' → logprob: -4.876328468322754
    10. 's' → logprob: -5.126328468322754

Token 21: 'houses' (ID: 53599)
  Prédit: 'houses'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'houses' → logprob: -0.11433291435241699
    2. 'house' → logprob: -2.239332914352417
    3. 'h' → logprob: -6.864333152770996
    4. 'housing' → logprob: -8.614333152770996
    5. 'hou' → logprob: -9.364333152770996
    6. '_house' → logprob: -9.364333152770996
    7. 'hose' → logprob: -10.739333152770996
    8. '_h' → logprob: -11.114333152770996
    9. '=' → logprob: -11.614333152770996
    10. 'hs' → logprob: -11.739333152770996

Token 22: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.35175421833992004
    2. '[' → logprob: -1.9767541885375977
    3. '.' → logprob: -2.4767541885375977
    4. '=' → logprob: -2.9767541885375977
    5. '_' → logprob: -4.601754188537598
    6. 's' → logprob: -4.976754188537598
    7. '[:]' → logprob: -6.226754188537598
    8. '[]' → logprob: -6.976754188537598
    9. '_count' → logprob: -6.976754188537598
    10. ')' → logprob: -7.101754188537598

Token 23: ' [' (ID: 723)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.6072614192962646
    2. '[]' → logprob: -0.8572614192962646
    3. ' [' → logprob: -4.107261657714844
    4. '[' → logprob: -5.232261657714844
    5. 'list' → logprob: -5.607261657714844
    6. ' list' → logprob: -5.732261657714844
    7. '[list' → logprob: -6.607261657714844
    8. '[int' → logprob: -7.607261657714844
    9. ' [[]' → logprob: -8.732261657714844
    10. ' ' → logprob: -10.357261657714844

Token 24: 'tuple' (ID: 52834)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.10321647673845291
    2. 'int' → logprob: -2.7282164096832275
    3. ' list' → logprob: -4.228216648101807
    4. '0' → logprob: -5.353216648101807
    5. 'tuple' → logprob: -5.353216648101807
    6. '[]' → logprob: -5.603216648101807
    7. ']' → logprob: -6.353216648101807
    8. 'map' → logprob: -6.978216648101807
    9. ' tuple' → logprob: -7.478216648101807
    10. '   ' → logprob: -7.978216648101807

Token 25: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.004233443643897772
    2. '(int' → logprob: -5.754233360290527
    3. '(' → logprob: -7.504233360290527
    4. '(sys' → logprob: -7.629233360290527
    5. 'map' → logprob: -11.379233360290527
    6. '()' → logprob: -13.379233360290527
    7. '(
' → logprob: -13.379233360290527
    8. '(list' → logprob: -13.754233360290527
    9. '((' → logprob: -14.754233360290527
    10. ' map' → logprob: -15.129233360290527

Token 26: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.001949344645254314
    2. 'int' → logprob: -6.376949310302734
    3. '(' → logprob: -9.876949310302734
    4. '=int' → logprob: -10.251949310302734
    5. '[int' → logprob: -10.376949310302734
    6. '(str' → logprob: -10.376949310302734
    7. '<int' → logprob: -10.501949310302734
    8. ',int' → logprob: -10.626949310302734
    9. '<|end|>' → logprob: -11.376949310302734
    10. 'list' → logprob: -11.501949310302734

Token 27: ',' (ID: 11)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.00037836082628928125
    2. '(' → logprob: -8.375378608703613
    3. 'sys' → logprob: -9.250378608703613
    4. '=sys' → logprob: -10.625378608703613
    5. ')' → logprob: -11.125378608703613
    6. ' sys' → logprob: -12.875378608703613
    7. '(system' → logprob: -13.000378608703613
    8. '(Sys' → logprob: -13.250378608703613
    9. '	sys' → logprob: -13.500378608703613
    10. '(
' → logprob: -13.625378608703613

Token 28: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.054904285818338394
    2. ' sys' → logprob: -2.9299042224884033
    3. '(sys' → logprob: -11.304903984069824
    4. '=sys' → logprob: -12.179903984069824
    5. '	sys' → logprob: -12.679903984069824
    6. 'input' → logprob: -14.554903984069824
    7. ')' → logprob: -14.929903984069824
    8. '.sys' → logprob: -15.429903984069824
    9. '/sys' → logprob: -15.804903984069824
    10. '_sys' → logprob: -15.929903984069824

Token 29: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -4.4849443838757e-06
    2. 'stdin' → logprob: -12.625004768371582
    3. '.std' → logprob: -14.375004768371582
    4. '.stdout' → logprob: -14.875004768371582
    5. '.argv' → logprob: -16.000003814697266
    6. '.readline' → logprob: -16.875003814697266
    7. ' stdin' → logprob: -17.750003814697266
    8. '.st' → logprob: -18.125003814697266
    9. '.' → logprob: -18.625003814697266
    10. '(stdin' → logprob: -19.875003814697266

Token 30: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -8.97155623533763e-05
    2. '.stdin' → logprob: -9.500089645385742
    3. '.' → logprob: -11.250089645385742
    4. '.readlines' → logprob: -14.125089645385742
    5. '.read' → logprob: -14.250089645385742
    6. 'stdin' → logprob: -15.000089645385742
    7. '(stdin' → logprob: -18.375089645385742
    8. ' .' → logprob: -18.500089645385742
    9. ' readline' → logprob: -18.750089645385742
    10. '.stdout' → logprob: -18.875089645385742

Token 31: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.869017852295656e-06
    2. '.readline' → logprob: -12.500006675720215
    3. '()))' → logprob: -13.375006675720215
    4. '()' → logprob: -13.375006675720215
    5. '())' → logprob: -17.12500762939453
    6. '.strip' → logprob: -18.25000762939453
    7. '())))' → logprob: -18.37500762939453
    8. '(' → logprob: -18.50000762939453
    9. ' ().' → logprob: -18.50000762939453
    10. '()
' → logprob: -18.62500762939453

Token 32: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.7779365181922913
    2. 'strip' → logprob: -0.7779365181922913
    3. 'rstrip' → logprob: -2.5279364585876465
    4. 'read' → logprob: -6.5279364585876465
    5. ')' → logprob: -12.527936935424805
    6. ' split' → logprob: -13.277936935424805
    7. ' strip' → logprob: -14.027936935424805
    8. ' ' → logprob: -14.902936935424805
    9. '.readline' → logprob: -15.027936935424805
    10. 'rs' → logprob: -15.027936935424805

Token 33: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.008066614158451557
    2. '))' → logprob: -5.008066654205322
    3. '())' → logprob: -7.258066654205322
    4. '()' → logprob: -7.508066654205322
    5. '()))
' → logprob: -9.508066177368164
    6. '(' → logprob: -11.633066177368164
    7. '())))' → logprob: -12.133066177368164
    8. ')' → logprob: -12.758066177368164
    9. '()));' → logprob: -13.883066177368164
    10. '()
' → logprob: -14.133066177368164

Token 34: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06628669053316116
    2. ' for' → logprob: -3.06628680229187
    3. ')]' → logprob: -4.316286563873291
    4. 'for' → logprob: -5.941286563873291
    5. ',' → logprob: -7.566286563873291
    6. ']' → logprob: -7.566286563873291
    7. '),' → logprob: -8.19128704071045
    8. ' )' → logprob: -10.06628704071045
    9. ')],' → logprob: -10.06628704071045
    10. '(n' → logprob: -10.31628704071045

Token 35: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.13219241797924042
    2. '_' → logprob: -2.132192373275757
    3. 'range' → logprob: -6.007192611694336
    4. ' _' → logprob: -6.507192611694336
    5. '_range' → logprob: -6.757192611694336
    6. ' ' → logprob: -9.882192611694336
    7. ' in' → logprob: -10.007192611694336
    8. '(range' → logprob: -11.257192611694336
    9. ' i' → logprob: -11.382192611694336
    10. ' xrange' → logprob: -11.882192611694336

Token 36: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.11179029941558838
    2. ' range' → logprob: -2.486790180206299
    3. 'in' → logprob: -4.611790180206299
    4. ' in' → logprob: -4.611790180206299
    5. '(range' → logprob: -6.986790180206299
    6. '_' → logprob: -7.111790180206299
    7. 'n' → logprob: -7.236790180206299
    8. '	range' → logprob: -9.611790657043457
    9. '(' → logprob: -9.736790657043457
    10. 'i' → logprob: -10.486790657043457

Token 37: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00012368128227535635
    2. ' range' → logprob: -9.000123977661133
    3. '	range' → logprob: -16.375123977661133
    4. '(range' → logprob: -16.625123977661133
    5. ' ' → logprob: -18.125123977661133
    6. '   ' → logprob: -18.500123977661133
    7. '```' → logprob: -18.625123977661133
    8. '[' → logprob: -19.000123977661133
    9. '  ' → logprob: -19.125123977661133
    10. 'r' → logprob: -19.375123977661133

Token 38: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0019318510312587023
    2. '(' → logprob: -6.251931667327881
    3. 'n' → logprob: -13.001932144165039
    4. ' n' → logprob: -14.501932144165039
    5. '(
' → logprob: -14.876932144165039
    6. ' (' → logprob: -16.62693214416504
    7. ')n' → logprob: -16.87693214416504
    8. '(

' → logprob: -18.62693214416504
    9. ')' → logprob: -18.87693214416504
    10. '(range' → logprob: -19.50193214416504

Token 39: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.001526644453406334
    2. ')' → logprob: -6.501526832580566
    3. ']' → logprob: -11.001526832580566
    4. ')]
' → logprob: -12.751526832580566
    5. ')])' → logprob: -13.376526832580566
    6. '))' → logprob: -14.001526832580566
    7. ')
' → logprob: -14.501526832580566
    8. '])]' → logprob: -14.751526832580566
    9. '')]' → logprob: -14.876526832580566
    10. '])' → logprob: -15.751526832580566

Token 40: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.48789265751838684
    2. 'd' → logprob: -1.7378926277160645
    3. 'a' → logprob: -2.9878926277160645
    4. 'm' → logprob: -3.9878926277160645
    5. 'dp' → logprob: -3.9878926277160645
    6. 'w' → logprob: -4.1128926277160645
    7. '\' → logprob: -4.6128926277160645
    8. 'max' → logprob: -4.6128926277160645
    9. 'distance' → logprob: -4.6128926277160645
    10. 'def' → logprob: -4.7378926277160645

Token 41: ' s' (ID: 265)
  Prédit: 'ware'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ware' → logprob: -1.0008364915847778
    2. 'dp' → logprob: -1.0008364915847778
    3. 'dist' → logprob: -3.1258363723754883
    4. 'd' → logprob: -3.2508363723754883
    5. '#' → logprob: -3.3758363723754883
    6. 'sorted' → logprob: -3.5008363723754883
    7. 'distance' → logprob: -3.7508363723754883
    8. 'w' → logprob: -4.000836372375488
    9. 'max' → logprob: -4.000836372375488
    10. 'def' → logprob: -5.375836372375488

Token 42: '_i' (ID: 10853)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5496216416358948
    2. 'orted' → logprob: -1.92462158203125
    3. 'ys' → logprob: -2.29962158203125
    4. 'ort' → logprob: -2.79962158203125
    5. 'um' → logprob: -3.04962158203125
    6. '#' → logprob: -4.42462158203125
    7. 'orting' → logprob: -5.04962158203125
    8. 'ales' → logprob: -5.29962158203125
    9. 'earch' → logprob: -5.67462158203125
    10. 'tar' → logprob: -5.79962158203125

Token 43: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10494356602430344
    2. ' =' → logprob: -2.8549435138702393
    3. ' ,' → logprob: -3.6049435138702393
    4. 's' → logprob: -5.854943752288818
    5. ' ' → logprob: -6.104943752288818
    6. ',s' → logprob: -6.354943752288818
    7. ',_' → logprob: -6.729943752288818
    8. '=' → logprob: -7.229943752288818
    9. '_' → logprob: -7.229943752288818
    10. '_sizes' → logprob: -7.729943752288818

Token 44: ' number' (ID: 2086)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3207525610923767
    2. ' s' → logprob: -2.5707526206970215
    3. 'x' → logprob: -2.6957526206970215
    4. ' x' → logprob: -2.8207526206970215
    5. 'i' → logprob: -4.4457526206970215
    6. ' i' → logprob: -5.1957526206970215
    7. '0' → logprob: -5.4457526206970215
    8. ' ' → logprob: -5.4457526206970215
    9. ' storage' → logprob: -5.4457526206970215
    10. ' (' → logprob: -5.6957526206970215

Token 45: ',' (ID: 11)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4883200228214264
    2. '_' → logprob: -1.613319993019104
    3. ',' → logprob: -1.863319993019104
    4. ' =' → logprob: -4.3633198738098145
    5. '_s' → logprob: -5.3633198738098145
    6. ')' → logprob: -5.4883198738098145
    7. ' ' → logprob: -6.4883198738098145
    8. '=' → logprob: -6.4883198738098145
    9. '<|end|>' → logprob: -6.6133198738098145
    10. '0' → logprob: -6.9883198738098145

Token 46: ' d' (ID: 272)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -1.6268080472946167
    2. 's' → logprob: -1.8768080472946167
    3. ' s' → logprob: -2.0018081665039062
    4. ' d' → logprob: -2.7518081665039062
    5. ' capacity' → logprob: -2.7518081665039062
    6. 'x' → logprob: -3.0018081665039062
    7. '_' → logprob: -3.3768081665039062
    8. ' t' → logprob: -3.6268081665039062
    9. 'capacity' → logprob: -3.7518081665039062
    10. ' l' → logprob: -3.7518081665039062

Token 47: '_i' (ID: 10853)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3543422520160675
    2. ',' → logprob: -2.229342222213745
    3. 's' → logprob: -2.354342222213745
    4. '_' → logprob: -3.604342222213745
    5. ')' → logprob: -3.604342222213745
    6. '=' → logprob: -3.854342222213745
    7. '<|end|>' → logprob: -5.104342460632324
    8. '_s' → logprob: -5.604342460632324
    9. '_list' → logprob: -6.354342460632324
    10. ' ' → logprob: -6.479342460632324

Token 48: ':' (ID: 25)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.016586272045969963
    2. '<|end|>' → logprob: -4.2665863037109375
    3. '\n' → logprob: -7.1415863037109375
    4. '
' → logprob: -7.6415863037109375
    5. '

' → logprob: -8.266586303710938
    6. 's' → logprob: -8.641586303710938
    7. '<|end|>' → logprob: -9.016586303710938
    8. ')' → logprob: -9.141586303710938
    9. 'ware' → logprob: -9.516586303710938
    10. 'n' → logprob: -9.766586303710938

Token 49: ' distance' (ID: 9324)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7670566439628601
    2. 'distance' → logprob: -2.267056703567505
    3. '<|end|>' → logprob: -2.392056703567505
    4. ' distance' → logprob: -2.892056703567505
    5. ' ' → logprob: -3.267056703567505
    6. ' s' → logprob: -3.892056703567505
    7. ' number' → logprob: -3.892056703567505
    8. ' amount' → logprob: -4.142056465148926
    9. '_' → logprob: -4.142056465148926
    10. 'quantity' → logprob: -4.267056465148926

Token 50: ',' (ID: 11)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.45078516006469727
    2. 'max' → logprob: -2.5757851600646973
    3. 'ware' → logprob: -2.7007851600646973
    4. 'dist' → logprob: -2.9507851600646973
    5. 'd' → logprob: -3.4507851600646973
    6. 'distance' → logprob: -3.4507851600646973
    7. 'sorted' → logprob: -4.200785160064697
    8. '#' → logprob: -4.450785160064697
    9. 'def' → logprob: -4.575785160064697
    10. 's' → logprob: -4.575785160064697

Token 51: ' v' (ID: 323)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1821303367614746
    2. ' warehouses' → logprob: -1.4321303367614746
    3. 'dp' → logprob: -2.4321303367614746
    4. 'ware' → logprob: -3.1821303367614746
    5. 't' → logprob: -4.057130336761475
    6. 'd' → logprob: -4.057130336761475
    7. ' s' → logprob: -4.182130336761475
    8. ' sorted' → logprob: -4.307130336761475
    9. ' ans' → logprob: -4.432130336761475
    10. 'w' → logprob: -4.432130336761475

Token 52: '_i' (ID: 10853)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9043393135070801
    2. 's' → logprob: -1.27933931350708
    3. 'ware' → logprob: -2.65433931350708
    4. '<|end|>' → logprob: -3.02933931350708
    5. '#' → logprob: -3.15433931350708
    6. ' warehouses' → logprob: -3.52933931350708
    7. ' =' → logprob: -4.15433931350708
    8. '=' → logprob: -4.27933931350708
    9. 'd' → logprob: -4.52933931350708
    10. ')' → logprob: -4.77933931350708

Token 53: ':' (ID: 25)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.038764677941799164
    2. '
' → logprob: -4.413764476776123
    3. 's' → logprob: -5.038764476776123
    4. '

' → logprob: -5.538764476776123
    5. '\n' → logprob: -5.538764476776123
    6. 'dp' → logprob: -5.663764476776123
    7. 'd' → logprob: -6.038764476776123
    8. 'ware' → logprob: -7.038764476776123
    9. '#' → logprob: -7.413764476776123
    10. '' → logprob: -7.413764476776123

Token 54: ' boxes' (ID: 21967)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.7435558438301086
    2. ' ' → logprob: -2.118555784225464
    3. ' int' → logprob: -2.118555784225464
    4. 's' → logprob: -2.493555784225464
    5. '0' → logprob: -2.618555784225464
    6. ' s' → logprob: -3.618555784225464
    7. '<|end|>' → logprob: -3.868555784225464
    8. '1' → logprob: -4.868556022644043
    9. ' cost' → logprob: -5.118556022644043
    10. 'time' → logprob: -5.243556022644043

Token 55: ' count' (ID: 3605)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.45688438415527344
    2. 's' → logprob: -2.5818843841552734
    3. 'd' → logprob: -2.8318843841552734
    4. '#' → logprob: -3.0818843841552734
    5. '\n' → logprob: -3.5818843841552734
    6. '
' → logprob: -3.5818843841552734
    7. '

' → logprob: -3.7068843841552734
    8. '' → logprob: -4.331884384155273
    9. '```' → logprob: -4.331884384155273
    10. 'max' → logprob: -4.581884384155273

Token 56: '

' (ID: 279)
  Prédit: 'ware'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ware' → logprob: -1.1186354160308838
    2. 'dp' → logprob: -1.1186354160308838
    3. 'd' → logprob: -1.9936354160308838
    4. '#' → logprob: -3.368635416030884
    5. 'max' → logprob: -3.493635416030884
    6. 'dist' → logprob: -3.743635416030884
    7. 'sorted' → logprob: -3.743635416030884
    8. 'def' → logprob: -4.368635177612305
    9. 'distance' → logprob: -4.368635177612305
    10. '```' → logprob: -4.618635177612305

Token 57: '#' (ID: 2)
  Prédit: 'ware'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ware' → logprob: -0.020356997847557068
    2. 'dp' → logprob: -4.145357131958008
    3. 'sorted' → logprob: -6.270357131958008
    4. 'dist' → logprob: -7.520357131958008
    5. 'warehouse' → logprob: -7.770357131958008
    6. '#' → logprob: -7.770357131958008
    7. 'wares' → logprob: -8.645357131958008
    8. 'time' → logprob: -9.020357131958008
    9. 'def' → logprob: -9.520357131958008
    10. 'max' → logprob: -9.645357131958008

Token 58: ' Sort' (ID: 25945)
  Prédit: 'ware'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ware' → logprob: -0.041133981198072433
    2. 'dp' → logprob: -3.4161338806152344
    3. '#' → logprob: -5.916133880615234
    4. 'from' → logprob: -6.541133880615234
    5. 'sorted' → logprob: -6.791133880615234
    6. ' warehouses' → logprob: -7.541133880615234
    7. 'import' → logprob: -7.791133880615234
    8. 'warehouse' → logprob: -8.291133880615234
    9. 'wares' → logprob: -8.791133880615234
    10. 'def' → logprob: -9.041133880615234

Token 59: ' by' (ID: 656)
  Prédit: 'ware'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ware' → logprob: -0.005336335860192776
    2. '(' → logprob: -5.255336284637451
    3. ' warehouses' → logprob: -9.63033676147461
    4. 'wares' → logprob: -10.75533676147461
    5. 'warehouse' → logprob: -12.00533676147461
    6. 'by' → logprob: -12.50533676147461
    7. 'Ware' → logprob: -13.38033676147461
    8. '(
' → logprob: -14.00533676147461
    9. '```' → logprob: -14.38033676147461
    10. ' ware' → logprob: -14.38033676147461

Token 60: ' distance' (ID: 9324)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5653209686279297
    2. 'lambda' → logprob: -1.6903209686279297
    3. 'd' → logprob: -1.8153209686279297
    4. ' lambda' → logprob: -3.0653209686279297
    5. ' d' → logprob: -4.19032096862793
    6. 'ware' → logprob: -4.56532096862793
    7. ' s' → logprob: -4.69032096862793
    8. 'v' → logprob: -6.31532096862793
    9. ' warehouses' → logprob: -7.69032096862793
    10. 'distance' → logprob: -8.06532096862793

Token 61: ' ascending' (ID: 75564)
  Prédit: 'ware'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ware' → logprob: -0.0034081125631928444
    2. ',' → logprob: -5.753407955169678
    3. 'wares' → logprob: -9.378408432006836
    4. ',
' → logprob: -9.753408432006836
    5. 's' → logprob: -10.753408432006836
    6. ':' → logprob: -11.253408432006836
    7. '```' → logprob: -11.378408432006836
    8. ' warehouses' → logprob: -11.503408432006836
    9. '_' → logprob: -12.128408432006836
    10. 'sorted' → logprob: -12.253408432006836

Token 62: ' to' (ID: 316)
  Prédit: 'ware'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ware' → logprob: -0.0009697027853690088
    2. ',' → logprob: -7.375969886779785
    3. ',
' → logprob: -8.375969886779785
    4. '\n' → logprob: -10.000969886779785
    5. 'wares' → logprob: -10.500969886779785
    6. ',\' → logprob: -11.750969886779785
    7. '\' → logprob: -11.875969886779785
    8. '\
' → logprob: -12.000969886779785
    9. '
' → logprob: -12.750969886779785
    10. 'warehouse' → logprob: -12.875969886779785

Token 63: ' fix' (ID: 9295)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.45560070872306824
    2. 's' → logprob: -1.5806007385253906
    3. ' continue' → logprob: -2.7056007385253906
    4. 'continue' → logprob: -3.3306007385253906
    5. 'd' → logprob: -4.080600738525391
    6. '<|end|>' → logprob: -4.080600738525391
    7. ' s' → logprob: -5.830600738525391
    8. ' ensure' → logprob: -6.205600738525391
    9. 'distance' → logprob: -6.205600738525391
    10. 'ensure' → logprob: -6.330600738525391

Token 64: ' start' (ID: 1604)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.3095908463001251
    2. 'ware' → logprob: -2.4345908164978027
    3. ' warehouses' → logprob: -2.8095908164978027
    4. ')' → logprob: -3.4345908164978027
    5. 's' → logprob: -3.6845908164978027
    6. '<|end|>' → logprob: -4.309590816497803
    7. 'the' → logprob: -4.434590816497803
    8. ',' → logprob: -4.934590816497803
    9. ' d' → logprob: -5.059590816497803
    10. 'd' → logprob: -5.059590816497803

Token 65: ' at' (ID: 540)
  Prédit: 'ware'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ware' → logprob: -0.018787045031785965
    2. ',' → logprob: -4.018786907196045
    3. '.' → logprob: -8.768787384033203
    4. ',
' → logprob: -9.018787384033203
    5. '_' → logprob: -9.393787384033203
    6. 's' → logprob: -9.893787384033203
    7. ')' → logprob: -10.018787384033203
    8. 'wares' → logprob: -10.018787384033203
    9. '(' → logprob: -10.643787384033203
    10. ' warehouses' → logprob: -11.018787384033203

Token 66: ' nearest' (ID: 35210)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6968275904655457
    2. 'd' → logprob: -1.8218276500701904
    3. ' d' → logprob: -2.4468276500701904
    4. ' the' → logprob: -2.4468276500701904
    5. 'the' → logprob: -3.0718276500701904
    6. 's' → logprob: -3.3218276500701904
    7. ' s' → logprob: -3.3218276500701904
    8. ' ' → logprob: -3.5718276500701904
    9. 'ware' → logprob: -5.071827411651611
    10. ' zero' → logprob: -5.821827411651611

Token 67: ' warehouse' (ID: 39422)
  Prédit: 'ware'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ware' → logprob: -0.0068108150735497475
    2. ',' → logprob: -5.131810665130615
    3. '_' → logprob: -7.631810665130615
    4. ')' → logprob: -9.256811141967773
    5. ' warehouses' → logprob: -9.881811141967773
    6. 'wards' → logprob: -10.381811141967773
    7. '.' → logprob: -10.381811141967773
    8. 'wares' → logprob: -10.506811141967773
    9. 'warehouse' → logprob: -10.506811141967773
    10. ',
' → logprob: -10.631811141967773

Token 68: '
' (ID: 198)
  Prédit: 'ware'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ware' → logprob: -0.00034809779026545584
    2. ',' → logprob: -8.375348091125488
    3. ',
' → logprob: -9.625348091125488
    4. 'wares' → logprob: -10.875348091125488
    5. '\n' → logprob: -11.125348091125488
    6. 'warehouse' → logprob: -12.250348091125488
    7. ',\' → logprob: -12.750348091125488
    8. '```' → logprob: -13.000348091125488
    9. 'wards' → logprob: -13.375348091125488
    10. ',

' → logprob: -14.000348091125488

Token 69: 'ware' (ID: 2266)
  Prédit: 'ware'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ware' → logprob: -0.001613769680261612
    2. ',
' → logprob: -7.751613616943359
    3. '\n' → logprob: -7.751613616943359
    4. '
' → logprob: -7.876613616943359
    5. ',' → logprob: -8.50161361694336
    6. 'wares' → logprob: -9.87661361694336
    7. 'warehouse' → logprob: -10.25161361694336
    8. '\' → logprob: -10.87661361694336
    9. '\
' → logprob: -11.00161361694336
    10. ' warehouses' → logprob: -11.87661361694336

Token 70: 'houses' (ID: 53599)
  Prédit: 'houses'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'houses' → logprob: -1.2233183042553719e-05
    2. 'h' → logprob: -12.250012397766113
    3. 'house' → logprob: -12.625012397766113
    4. 'nh' → logprob: -12.750012397766113
    5. ' houses' → logprob: -14.875012397766113
    6. 'hou' → logprob: -15.125012397766113
    7. 'ouses' → logprob: -15.625012397766113
    8. 'eh' → logprob: -16.250011444091797
    9. 'hours' → logprob: -16.375011444091797
    10. 'gh' → logprob: -16.500011444091797

Token 71: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.000619388825725764
    2. '.' → logprob: -7.750619411468506
    3. '=' → logprob: -8.750618934631348
    4. ')' → logprob: -11.500618934631348
    5. ' =' → logprob: -11.875618934631348
    6. 'sort' → logprob: -12.125618934631348
    7. ').' → logprob: -13.250618934631348
    8. '_sorted' → logprob: -13.250618934631348
    9. '.sorted' → logprob: -13.500618934631348
    10. 'sorted' → logprob: -13.625618934631348

Token 72: '(key' (ID: 8932)
  Prédit: '(key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(key' → logprob: -0.014306291937828064
    2. '(' → logprob: -5.13930606842041
    3. '()' → logprob: -5.26430606842041
    4. '(lambda' → logprob: -6.13930606842041
    5. '(reverse' → logprob: -7.01430606842041
    6. 'key' → logprob: -10.26430606842041
    7. '(keys' → logprob: -10.63930606842041
    8. '((' → logprob: -11.26430606842041
    9. '(()' → logprob: -11.26430606842041
    10. '()(' → logprob: -12.13930606842041

Token 73: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.008618119172751904
    2. '=' → logprob: -4.758618354797363
    3. 'lambda' → logprob: -12.633618354797363
    4. '(lambda' → logprob: -15.133618354797363
    5. '=

' → logprob: -17.508617401123047
    6. '=item' → logprob: -17.758617401123047
    7. '=
' → logprob: -17.883617401123047
    8. ' lambda' → logprob: -18.383617401123047
    9. '=}' → logprob: -18.883617401123047
    10. '=len' → logprob: -19.008617401123047

Token 74: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6927807331085205
    2. ' x' → logprob: -0.8177807331085205
    3. ' lambda' → logprob: -3.0677807331085205
    4. 'lambda' → logprob: -4.692780494689941
    5. ' ware' → logprob: -7.067780494689941
    6. 'ware' → logprob: -7.317780494689941
    7. ' warehouse' → logprob: -7.692780494689941
    8. 's' → logprob: -8.817780494689941
    9. '=lambda' → logprob: -8.817780494689941
    10. ' warehouses' → logprob: -8.942780494689941

Token 75: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0012321342946961522
    2. ':x' → logprob: -6.751232147216797
    3. ' :' → logprob: -9.876232147216797
    4. 'x' → logprob: -11.751232147216797
    5. ' x' → logprob: -13.626232147216797
    6. ':
' → logprob: -14.376232147216797
    7. '[' → logprob: -15.376232147216797
    8. '1' → logprob: -15.501232147216797
    9. '   ' → logprob: -16.751232147216797
    10. ':

' → logprob: -16.876232147216797

Token 76: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.004078401252627373
    2. ' x' → logprob: -5.504078388214111
    3. '	x' → logprob: -18.879077911376953
    4. '1' → logprob: -18.879077911376953
    5. ')x' → logprob: -20.379077911376953
    6. ' ' → logprob: -20.504077911376953
    7. '   ' → logprob: -21.004077911376953
    8. '(x' → logprob: -21.504077911376953
    9. '$x' → logprob: -21.504077911376953
    10. '```' → logprob: -22.004077911376953

Token 77: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.697387966094539e-05
    2. '1' → logprob: -9.375086784362793
    3. ' [' → logprob: -13.875086784362793
    4. '[
' → logprob: -14.750086784362793
    5. ' ' → logprob: -15.000086784362793
    6. '\[' → logprob: -15.625086784362793
    7. ')' → logprob: -15.750086784362793
    8. ':' → logprob: -17.50008773803711
    9. ']' → logprob: -17.62508773803711
    10. '0' → logprob: -17.75008773803711

Token 78: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.2994620242971e-06
    2. '0' → logprob: -11.750008583068848
    3. '```' → logprob: -15.875008583068848
    4. ' ' → logprob: -16.37500762939453
    5. '-' → logprob: -17.50000762939453
    6. '
' → logprob: -17.93750762939453
    7. '`' → logprob: -18.25000762939453
    8. '[' → logprob: -18.68750762939453
    9. '' → logprob: -19.00000762939453
    10. '#' → logprob: -19.37500762939453

Token 79: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002520488342270255
    2. '))' → logprob: -6.002520561218262
    3. ' )' → logprob: -11.127520561218262
    4. '])' → logprob: -11.127520561218262
    5. '),' → logprob: -12.252520561218262
    6. '})' → logprob: -12.502520561218262
    7. '[' → logprob: -13.127520561218262
    8. ')}' → logprob: -14.127520561218262
    9. ')])' → logprob: -14.502520561218262
    10. '>)' → logprob: -14.627520561218262

Token 80: 'dist' (ID: 24126)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.15280447900295258
    2. 'd' → logprob: -2.777804374694824
    3. 'max' → logprob: -3.027804374694824
    4. 'total' → logprob: -4.402804374694824
    5. 'def' → logprob: -5.402804374694824
    6. 'v' → logprob: -5.652804374694824
    7. 'result' → logprob: -6.277804374694824
    8. 'm' → logprob: -7.027804374694824
    9. 'visited' → logprob: -7.027804374694824
    10. 'c' → logprob: -7.152804374694824

Token 81: ' =' (ID: 314)
  Prédit: 'ances'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -0.47430315613746643
    2. '_' → logprob: -1.599303126335144
    3. 's' → logprob: -2.2243032455444336
    4. 'ance' → logprob: -2.7243032455444336
    5. '_sum' → logprob: -8.224303245544434
    6. ' =' → logprob: -8.349303245544434
    7. '```' → logprob: -8.349303245544434
    8. '=' → logprob: -8.974303245544434
    9. ',' → logprob: -9.099303245544434
    10. 'a' → logprob: -9.224303245544434

Token 82: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4240267276763916
    2. '0' → logprob: -1.1740267276763916
    3. '[]' → logprob: -3.7990267276763916
    4. 'ware' → logprob: -5.0490264892578125
    5. ' [' → logprob: -5.7990264892578125
    6. '[int' → logprob: -6.7990264892578125
    7. ' ' → logprob: -6.9240264892578125
    8. '[-' → logprob: -7.9240264892578125
    9. '[]
' → logprob: -8.049026489257812
    10. 'float' → logprob: -8.174026489257812

Token 83: 'w' (ID: 86)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5403113961219788
    2. 'w' → logprob: -1.665311336517334
    3. 'ware' → logprob: -2.165311336517334
    4. 'float' → logprob: -2.540311336517334
    5. 'warehouse' → logprob: -4.415311336517334
    6. 'abs' → logprob: -4.915311336517334
    7. 'wh' → logprob: -5.290311336517334
    8. '-' → logprob: -5.665311336517334
    9. 'x' → logprob: -6.040311336517334
    10. 'inf' → logprob: -6.790311336517334

Token 84: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.047134305234067e-05
    2. ' for' → logprob: -11.625030517578125
    3. '[i' → logprob: -11.750030517578125
    4. ' [' → logprob: -12.625030517578125
    5. '][' → logprob: -13.000030517578125
    6. 'for' → logprob: -13.500030517578125
    7. '[-' → logprob: -13.500030517578125
    8. '```' → logprob: -13.750030517578125
    9. 'ar' → logprob: -14.125030517578125
    10. '[
' → logprob: -14.500030517578125

Token 85: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.2576454335358e-05
    2. '0' → logprob: -9.375092506408691
    3. '
' → logprob: -12.500092506408691
    4. '```' → logprob: -13.625092506408691
    5. ' ' → logprob: -14.062592506408691
    6. '   ' → logprob: -15.125092506408691
    7. '-' → logprob: -15.250092506408691
    8. '``' → logprob: -15.312592506408691
    9. '

' → logprob: -15.500092506408691
    10. '
' → logprob: -15.750092506408691

Token 86: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003466786816716194
    2. ' for' → logprob: -6.378466606140137
    3. 'for' → logprob: -6.378466606140137
    4. ')' → logprob: -10.253466606140137
    5. ' ]' → logprob: -11.878466606140137
    6. '```' → logprob: -12.003466606140137
    7. '],' → logprob: -12.628466606140137
    8. '	for' → logprob: -12.628466606140137
    9. ']]' → logprob: -12.628466606140137
    10. '])' → logprob: -13.628466606140137

Token 87: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.38975027203559875
    2. 'for' → logprob: -1.1397502422332764
    3. ')' → logprob: -6.5147504806518555
    4. ']' → logprob: -7.1397504806518555
    5. ',' → logprob: -8.014750480651855
    6. ' ' → logprob: -8.514750480651855
    7. '	for' → logprob: -10.014750480651855
    8. '```' → logprob: -12.639750480651855
    9. ')]' → logprob: -12.764750480651855
    10. '<|end|>' → logprob: -13.014750480651855

Token 88: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.15730562806129456
    2. ' w' → logprob: -2.5323057174682617
    3. ' warehouses' → logprob: -3.0323057174682617
    4. 'ware' → logprob: -4.032305717468262
    5. ' ware' → logprob: -9.282305717468262
    6. ' in' → logprob: -10.657305717468262
    7. 'warehouse' → logprob: -11.782305717468262
    8. 'wares' → logprob: -12.282305717468262
    9. ' warehouse' → logprob: -12.657305717468262
    10. '	w' → logprob: -12.907305717468262

Token 89: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2819283902645111
    2. 'in' → logprob: -1.4069284200668335
    3. 'w' → logprob: -8.531928062438965
    4. 'n' → logprob: -8.656928062438965
    5. ']' → logprob: -9.031928062438965
    6. ')' → logprob: -9.406928062438965
    7. '<|end|>' → logprob: -9.906928062438965
    8. ' ' → logprob: -10.281928062438965
    9. 'ware' → logprob: -10.906928062438965
    10. 's' → logprob: -11.281928062438965

Token 90: ' warehouses' (ID: 123097)
  Prédit: 'ware'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ware' → logprob: -0.006721178535372019
    2. ' warehouses' → logprob: -5.006721019744873
    3. 'warehouse' → logprob: -12.881721496582031
    4. ' ware' → logprob: -13.256721496582031
    5. 'wares' → logprob: -13.631721496582031
    6. 'w' → logprob: -17.25672149658203
    7. 'war' → logprob: -17.25672149658203
    8. ' warehouse' → logprob: -17.38172149658203
    9. 'repositories' → logprob: -17.50672149658203
    10. 'WARE' → logprob: -17.88172149658203

Token 91: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -8.065608562901616e-05
    2. ' ]' → logprob: -9.875081062316895
    3. ']
' → logprob: -10.625081062316895
    4. ']

' → logprob: -12.500081062316895
    5. ')' → logprob: -14.500081062316895
    6. ',' → logprob: -15.375081062316895
    7. ')]' → logprob: -15.875081062316895
    8. ']
' → logprob: -17.625080108642578
    9. '],' → logprob: -17.625080108642578
    10. '']' → logprob: -17.625080108642578

Token 92: 'weights' (ID: 29630)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.058832861483097076
    2. 'v' → logprob: -3.808832883834839
    3. 'boxes' → logprob: -4.05883264541626
    4. 'max' → logprob: -4.55883264541626
    5. 'values' → logprob: -6.93383264541626
    6. 'box' → logprob: -6.93383264541626
    7. 'prefix' → logprob: -7.30883264541626
    8. 'cnt' → logprob: -7.55883264541626
    9. 'cost' → logprob: -7.93383264541626
    10. 'time' → logprob: -7.93383264541626

Token 93: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0031912627164274454
    2. '=' → logprob: -5.7531914710998535
    3. ' =[' → logprob: -12.003190994262695
    4. ',' → logprob: -13.128190994262695
    5. ' ' → logprob: -13.503190994262695
    6. 's' → logprob: -13.753190994262695
    7. '[' → logprob: -14.128190994262695
    8. '<|end|>' → logprob: -14.378190994262695
    9. ' ' → logprob: -14.878190994262695
    10. '=[]' → logprob: -15.128190994262695

Token 94: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.09683326631784439
    2. '[w' → logprob: -2.4718332290649414
    3. '[' → logprob: -4.846833229064941
    4. '[int' → logprob: -13.221833229064941
    5. ' ' → logprob: -13.721833229064941
    6. '[t' → logprob: -14.221833229064941
    7. '[n' → logprob: -14.471833229064941
    8. '[v' → logprob: -14.471833229064941
    9. '[i' → logprob: -14.471833229064941
    10. '[s' → logprob: -14.721833229064941

Token 95: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.00014013137842994183
    2. ' w' → logprob: -8.875140190124512
    3. '	w' → logprob: -15.375140190124512
    4. '-w' → logprob: -18.625139236450195
    5. '```' → logprob: -19.375139236450195
    6. '   ' → logprob: -20.000139236450195
    7. '[w' → logprob: -20.000139236450195
    8. '
' → logprob: -20.500139236450195
    9. '0' → logprob: -20.500139236450195
    10. ' ' → logprob: -20.750139236450195

Token 96: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3782830137643032e-05
    2. '0' → logprob: -11.25001335144043
    3. ' [' → logprob: -15.25001335144043
    4. ' ' → logprob: -16.12501335144043
    5. '][' → logprob: -16.50001335144043
    6. '[
' → logprob: -16.50001335144043
    7. '
' → logprob: -16.75001335144043
    8. '```' → logprob: -17.00001335144043
    9. '1' → logprob: -17.87501335144043
    10. '2' → logprob: -18.12501335144043

Token 97: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00861681904643774
    2. '0' → logprob: -4.758616924285889
    3. '-' → logprob: -14.50861644744873
    4. '
' → logprob: -14.63361644744873
    5. '```' → logprob: -14.75861644744873
    6. '' → logprob: -15.13361644744873
    7. ' ' → logprob: -16.196117401123047
    8. '

' → logprob: -16.383617401123047
    9. '۲' → logprob: -16.446117401123047
    10. '２' → logprob: -16.508617401123047

Token 98: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005807686131447554
    2. 'for' → logprob: -5.630807876586914
    3. ' for' → logprob: -6.130807876586914
    4. ')' → logprob: -11.005807876586914
    5. ' ]' → logprob: -11.630807876586914
    6. '[' → logprob: -13.880807876586914
    7. '])' → logprob: -14.130807876586914
    8. ')]' → logprob: -14.255807876586914
    9. ' ' → logprob: -14.380807876586914
    10. ':]' → logprob: -14.505807876586914

Token 99: '20' (ID: 455)
  Prédit: ' w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' w' → logprob: -1.067238450050354
    2. 'w' → logprob: -1.192238450050354
    3. ' ' → logprob: -1.817238450050354
    4. '100' → logprob: -2.8172383308410645
    5. '10' → logprob: -3.1922383308410645
    6. '1' → logprob: -3.4422383308410645
    7. '2' → logprob: -4.0672383308410645
    8. '5' → logprob: -4.6922383308410645
    9. '3' → logprob: -5.6922383308410645
    10. '-' → logprob: -5.8172383308410645

Token 100: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.163483664393425
    2. 'for' → logprob: -2.2884836196899414
    3. ')' → logprob: -3.2884836196899414
    4. ']' → logprob: -5.288483619689941
    5. '0' → logprob: -5.788483619689941
    6. ' ' → logprob: -6.163483619689941
    7. '<|end|>' → logprob: -6.913483619689941
    8. ' )' → logprob: -8.413483619689941
    9. ' ]' → logprob: -8.538483619689941
    10. '<|end|>' → logprob: -9.663483619689941

Token 101: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.12692894041538239
    2. 'w' → logprob: -2.1269290447235107
    3. ' ' → logprob: -15.00192928314209
    4. '	w' → logprob: -15.00192928314209
    5. '_w' → logprob: -16.251928329467773
    6. ' ' → logprob: -16.751928329467773
    7. '_' → logprob: -17.126928329467773
    8. '<w' → logprob: -18.251928329467773
    9. ' _' → logprob: -18.501928329467773
    10. 's' → logprob: -19.251928329467773

Token 102: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023638499900698662
    2. 'in' → logprob: -3.7736384868621826
    3. 'w' → logprob: -8.023638725280762
    4. '<|end|>' → logprob: -10.523638725280762
    5. ' w' → logprob: -10.773638725280762
    6. ' ' → logprob: -11.648638725280762
    7. '_' → logprob: -13.023638725280762
    8. '<|end|>' → logprob: -13.273638725280762
    9. 'ware' → logprob: -13.648638725280762
    10. ' warehouses' → logprob: -14.398638725280762

Token 103: ' warehouses' (ID: 123097)
  Prédit: 'ware'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ware' → logprob: -0.0141762038692832
    2. ' warehouses' → logprob: -4.264176368713379
    3. 'warehouse' → logprob: -12.264176368713379
    4. ' ware' → logprob: -12.764176368713379
    5. 'wares' → logprob: -13.389176368713379
    6. 'range' → logprob: -13.389176368713379
    7. 'w' → logprob: -14.514176368713379
    8. ' range' → logprob: -14.639176368713379
    9. 'WARE' → logprob: -15.014176368713379
    10. ' ' → logprob: -16.014175415039062

Token 104: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016087865456938744
    2. ']' → logprob: -4.141088008880615
    3. ')]' → logprob: -10.891087532043457
    4. ' )' → logprob: -11.266087532043457
    5. '])' → logprob: -11.891087532043457
    6. '<|end|>' → logprob: -12.641087532043457
    7. ')
' → logprob: -12.766087532043457
    8. '#' → logprob: -12.891087532043457
    9. ' ]' → logprob: -13.641087532043457
    10. '}' → logprob: -13.766087532043457

Token 105: 'numbers' (ID: 85055)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3842075765132904
    2. 'max' → logprob: -2.0092074871063232
    3. 'capacity' → logprob: -2.0092074871063232
    4. 'weights' → logprob: -4.759207725524902
    5. 'weight' → logprob: -4.884207725524902
    6. 'def' → logprob: -5.134207725524902
    7. 'total' → logprob: -5.509207725524902
    8. 'visited' → logprob: -5.759207725524902
    9. 'memo' → logprob: -5.884207725524902
    10. '#' → logprob: -6.134207725524902

Token 106: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006736453622579575
    2. '=' → logprob: -5.0067362785339355
    3. ' =[' → logprob: -12.131736755371094
    4. 's' → logprob: -12.381736755371094
    5. ',' → logprob: -12.756736755371094
    6. '<|end|>' → logprob: -13.131736755371094
    7. ' ' → logprob: -13.631736755371094
    8. ')' → logprob: -13.631736755371094
    9. '[' → logprob: -13.881736755371094
    10. '=[]' → logprob: -14.131736755371094

Token 107: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.034570153802633286
    2. '[' → logprob: -3.7845702171325684
    3. '[w' → logprob: -4.534570217132568
    4. '[n' → logprob: -7.784570217132568
    5. '[len' → logprob: -10.03456974029541
    6. '[s' → logprob: -10.90956974029541
    7. '[number' → logprob: -11.28456974029541
    8. ' ' → logprob: -11.78456974029541
    9. '[int' → logprob: -11.78456974029541
    10. '[i' → logprob: -12.53456974029541

Token 108: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.009797291830182076
    2. ' w' → logprob: -4.634797096252441
    3. '[w' → logprob: -10.884797096252441
    4. '   ' → logprob: -11.884797096252441
    5. 'i' → logprob: -12.009797096252441
    6. '	w' → logprob: -12.634797096252441
    7. ' ' → logprob: -14.009797096252441
    8. ' i' → logprob: -14.134797096252441
    9. 'ware' → logprob: -14.259797096252441
    10. 'x' → logprob: -14.759797096252441

Token 109: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.6312321753939614e-05
    2. ' for' → logprob: -11.000036239624023
    3. ' [' → logprob: -12.000036239624023
    4. ' ' → logprob: -12.500036239624023
    5. '0' → logprob: -13.125036239624023
    6. 'for' → logprob: -13.500036239624023
    7. '1' → logprob: -13.500036239624023
    8. ' =' → logprob: -14.125036239624023
    9. '	' → logprob: -14.375036239624023
    10. '   ' → logprob: -14.625036239624023

Token 110: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.729906196298543e-06
    2. '2' → logprob: -12.125009536743164
    3. 'i' → logprob: -13.375009536743164
    4. '[' → logprob: -13.750009536743164
    5. '1' → logprob: -14.250009536743164
    6. 's' → logprob: -16.312509536743164
    7. ' ' → logprob: -16.312509536743164
    8. '```' → logprob: -16.437509536743164
    9. '۰' → logprob: -16.500009536743164
    10. '
' → logprob: -16.562509536743164

Token 111: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004130403511226177
    2. ' for' → logprob: -5.7541303634643555
    3. 'for' → logprob: -7.5041303634643555
    4. ' ]' → logprob: -8.004130363464355
    5. ')' → logprob: -10.629130363464355
    6. ')]' → logprob: -10.879130363464355
    7. '])' → logprob: -11.504130363464355
    8. ':]' → logprob: -12.879130363464355
    9. '1' → logprob: -13.254130363464355
    10. '],' → logprob: -13.379130363464355

Token 112: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.026746779680252075
    2. 'for' → logprob: -3.6517467498779297
    3. ']' → logprob: -7.77674674987793
    4. ')' → logprob: -10.90174674987793
    5. ' ]' → logprob: -13.02674674987793
    6. '	for' → logprob: -13.15174674987793
    7. ' in' → logprob: -13.40174674987793
    8. ' ' → logprob: -13.52674674987793
    9. ')]' → logprob: -14.65174674987793
    10. ',' → logprob: -14.77674674987793

Token 113: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.07934830337762833
    2. 'ware' → logprob: -2.95434832572937
    3. ' w' → logprob: -3.82934832572937
    4. ' warehouses' → logprob: -6.079348087310791
    5. ' ware' → logprob: -9.45434856414795
    6. '(w' → logprob: -10.57934856414795
    7. 'wares' → logprob: -10.70434856414795
    8. '_' → logprob: -11.82934856414795
    9. '_w' → logprob: -12.07934856414795
    10. '	w' → logprob: -12.95434856414795

Token 114: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.474977970123291
    2. ' in' → logprob: -0.974977970123291
    3. '<|end|>' → logprob: -8.099977493286133
    4. 'w' → logprob: -8.599977493286133
    5. ']' → logprob: -8.849977493286133
    6. '<|end|>' → logprob: -10.224977493286133
    7. 'ware' → logprob: -10.849977493286133
    8. 'n' → logprob: -10.974977493286133
    9. ' warehouses' → logprob: -10.974977493286133
    10. '[' → logprob: -11.099977493286133

Token 115: ' warehouses' (ID: 123097)
  Prédit: 'ware'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ware' → logprob: -0.003220372134819627
    2. ' warehouses' → logprob: -5.753220558166504
    3. ' ware' → logprob: -11.503220558166504
    4. 'warehouse' → logprob: -11.628220558166504
    5. 'wares' → logprob: -11.628220558166504
    6. 'range' → logprob: -11.628220558166504
    7. ' range' → logprob: -12.753220558166504
    8. 'w' → logprob: -14.253220558166504
    9. 'WARE' → logprob: -14.628220558166504
    10. ' warehouse' → logprob: -15.503220558166504

Token 116: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.39153510332107544
    2. ')' → logprob: -1.1415350437164307
    3. ')]' → logprob: -5.51653528213501
    4. '])' → logprob: -7.39153528213501
    5. ' ]' → logprob: -12.266534805297852
    6. '）' → logprob: -12.641534805297852
    7. ']
' → logprob: -13.141534805297852
    8. ')])' → logprob: -13.266534805297852
    9. ' )' → logprob: -13.641534805297852
    10. ')
' → logprob: -14.141534805297852

Token 117: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.029285676777362823
    2. 'max' → logprob: -4.029285907745361
    3. 'capacity' → logprob: -4.904285907745361
    4. 'def' → logprob: -6.154285907745361
    5. 'import' → logprob: -8.404285430908203
    6. 'DP' → logprob: -8.654285430908203
    7. 'visited' → logprob: -8.904285430908203
    8. 'from' → logprob: -8.904285430908203
    9. 'memo' → logprob: -9.154285430908203
    10. 'INF' → logprob: -9.154285430908203

Token 118: ' Pre' (ID: 4659)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4769456684589386
    2. ' dp' → logprob: -1.2269456386566162
    3. 'from' → logprob: -3.101945638656616
    4. ' from' → logprob: -4.226945877075195
    5. 'import' → logprob: -4.601945877075195
    6. ' max' → logprob: -5.976945877075195
    7. 'max' → logprob: -6.226945877075195
    8. '#' → logprob: -6.351945877075195
    9. 'def' → logprob: -6.476945877075195
    10. ' import' → logprob: -6.476945877075195

Token 119: 'compute' (ID: 54521)
  Prédit: 'fix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fix' → logprob: -0.3221569061279297
    2. 'sum' → logprob: -1.4471569061279297
    3. 'compute' → logprob: -4.44715690612793
    4. 'dict' → logprob: -4.82215690612793
    5. 'd' → logprob: -4.94715690612793
    6. 'pare' → logprob: -5.57215690612793
    7. 'f' → logprob: -6.44715690612793
    8. 'serve' → logprob: -6.44715690612793
    9. 'sent' → logprob: -6.57215690612793
    10. 's' → logprob: -6.69715690612793

Token 120: ' speed' (ID: 7733)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.8665191531181335
    2. 'prefix' → logprob: -0.9915191531181335
    3. 'max' → logprob: -2.9915192127227783
    4. ' dp' → logprob: -2.9915192127227783
    5. ' prefix' → logprob: -3.2415192127227783
    6. ' max' → logprob: -3.6165192127227783
    7. ' cumulative' → logprob: -4.241518974304199
    8. 'acc' → logprob: -4.616518974304199
    9. 'cost' → logprob: -5.991518974304199
    10. 'c' → logprob: -6.116518974304199

Token 121: ' function' (ID: 1114)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.49004417657852173
    2. 's' → logprob: -1.365044116973877
    3. '=' → logprob: -2.115044116973877
    4. 'speed' → logprob: -5.240044116973877
    5. ',' → logprob: -6.990044116973877
    6. 'max' → logprob: -7.615044116973877
    7. 'spe' → logprob: -7.740044116973877
    8. 'up' → logprob: -8.365044593811035
    9. 'changes' → logprob: -8.365044593811035
    10. '[' → logprob: -8.490044593811035

Token 122: ' denominator' (ID: 101279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5505082607269287
    2. ':' → logprob: -2.0505082607269287
    3. ',' → logprob: -2.8005082607269287
    4. ' =' → logprob: -3.0505082607269287
    5. '(' → logprob: -3.1755082607269287
    6. '=' → logprob: -3.5505082607269287
    7. '(s' → logprob: -4.175508499145508
    8. 's' → logprob: -4.425508499145508
    9. '<|end|>' → logprob: -4.425508499145508
    10. ' ' → logprob: -4.550508499145508

Token 123: '
' (ID: 198)
  Prédit: 'speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'speed' → logprob: -1.8313281536102295
    2. 'dp' → logprob: -1.9563281536102295
    3. '=' → logprob: -2.3313281536102295
    4. ':' → logprob: -2.3313281536102295
    5. 'def' → logprob: -2.5813281536102295
    6. 'import' → logprob: -2.7063281536102295
    7. 'dist' → logprob: -2.7063281536102295
    8. 's' → logprob: -3.0813281536102295
    9. ' =' → logprob: -3.5813281536102295
    10. 'from' → logprob: -3.7063281536102295

Token 124: 'def' (ID: 1314)
  Prédit: 'speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'speed' → logprob: -1.2199047803878784
    2. 'den' → logprob: -1.8449047803878784
    3. 'def' → logprob: -2.094904899597168
    4. 'dist' → logprob: -2.219904899597168
    5. 'import' → logprob: -2.469904899597168
    6. 'total' → logprob: -2.594904899597168
    7. 'max' → logprob: -3.594904899597168
    8. 'from' → logprob: -3.844904899597168
    9. 'sum' → logprob: -4.344904899597168
    10. 'pre' → logprob: -4.594904899597168

Token 125: ' speed' (ID: 7733)
  Prédit: ' speed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' speed' → logprob: -0.11250480264425278
    2. 'speed' → logprob: -2.487504720687866
    3. ' denominator' → logprob: -4.987504959106445
    4. ' calc' → logprob: -5.487504959106445
    5. ' denom' → logprob: -5.737504959106445
    6. ' get' → logprob: -6.487504959106445
    7. '_speed' → logprob: -6.737504959106445
    8. ' f' → logprob: -6.862504959106445
    9. ' max' → logprob: -7.112504959106445
    10. ' v' → logprob: -7.237504959106445

Token 126: '(w' (ID: 7420)
  Prédit: '(weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(weight' → logprob: -1.7591849565505981
    2. '(t' → logprob: -2.0091848373413086
    3. '(cap' → logprob: -2.0091848373413086
    4. '(x' → logprob: -2.5091848373413086
    5. '(load' → logprob: -2.6341848373413086
    6. '(w' → logprob: -2.7591848373413086
    7. '(time' → logprob: -2.7591848373413086
    8. '(speed' → logprob: -3.0091848373413086
    9. '(d' → logprob: -3.1341848373413086
    10. '(' → logprob: -3.3841848373413086

Token 127: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.43278422951698303
    2. '):
' → logprob: -1.3077841997146606
    3. 'e' → logprob: -3.18278431892395
    4. 'eight' → logprob: -3.55778431892395
    5. ',' → logprob: -4.932784080505371
    6. '):

' → logprob: -7.057784080505371
    7. ')' → logprob: -7.682784080505371
    8. '):
' → logprob: -7.932784080505371
    9. 'ight' → logprob: -7.932784080505371
    10. 'ei' → logprob: -8.307784080505371

Token 128: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08286803960800171
    2. ' return' → logprob: -2.8328680992126465
    3. 'return' → logprob: -3.9578680992126465
    4. ' if' → logprob: -7.0828680992126465
    5. '20' → logprob: -7.8328680992126465
    6. 'if' → logprob: -8.707867622375488
    7. '   ' → logprob: -10.082867622375488
    8. ':' → logprob: -10.582867622375488
    9. 'w' → logprob: -10.957867622375488
    10. ' w' → logprob: -11.582867622375488

Token 129: ' return' (ID: 622)
  Prédit: '200'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '200' → logprob: -1.4315930604934692
    2. 'return' (adapté à ' return') → logprob: -1.8065930604934692
    3. '20' → logprob: -1.9315930604934692
    4. '100' → logprob: -2.4315929412841797
    5. '   ' → logprob: -2.5565929412841797
    6. 'max' → logprob: -3.1815929412841797
    7. '110' → logprob: -3.1815929412841797
    8. ' ' → logprob: -3.4315929412841797
    9. '50' → logprob: -3.6815929412841797
    10. '900' → logprob: -3.6815929412841797

Token 130: ' ' (ID: 220)
  Prédit: '200'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '200' → logprob: -0.5244840383529663
    2. 'max' → logprob: -2.149484157562256
    3. '70' → logprob: -2.899484157562256
    4. '20' → logprob: -3.524484157562256
    5. '(' → logprob: -3.649484157562256
    6. '10' → logprob: -3.899484157562256
    7. '100' → logprob: -4.024484157562256
    8. '1' → logprob: -4.149484157562256
    9. '250' → logprob: -4.149484157562256
    10. '110' → logprob: -4.149484157562256

Token 131: '200' (ID: 1179)
  Prédit: '200'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '200' → logprob: -0.7398288249969482
    2. '70' → logprob: -0.9898288249969482
    3. 'max' → logprob: -2.8648288249969482
    4. '(' → logprob: -4.614829063415527
    5. '6' → logprob: -4.614829063415527
    6. '100' → logprob: -4.739829063415527
    7. '1' → logprob: -4.864829063415527
    8. '50' → logprob: -4.989829063415527
    9. '60' → logprob: -4.989829063415527
    10. '2' → logprob: -5.114829063415527

Token 132: '0' (ID: 15)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.515098512172699
    2. '-' → logprob: -1.0150985717773438
    3. '+' → logprob: -4.390098571777344
    4. ' /' → logprob: -5.015098571777344
    5. '0' → logprob: -5.140098571777344
    6. ' +' → logprob: -5.140098571777344
    7. '*' → logprob: -5.390098571777344
    8. '/' → logprob: -6.265098571777344
    9. ' if' → logprob: -7.515098571777344
    10. '//' → logprob: -7.515098571777344

Token 133: '/(' (ID: 27334)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2115737944841385
    2. '-' → logprob: -1.961573839187622
    3. '+' → logprob: -3.711573839187622
    4. ' +' → logprob: -3.711573839187622
    5. ' /' → logprob: -7.461573600769043
    6. '0' → logprob: -8.711573600769043
    7. '*' → logprob: -8.961573600769043
    8. ' ' → logprob: -9.586573600769043
    9. '/' → logprob: -9.711573600769043
    10. '000' → logprob: -10.461573600769043

Token 134: '70' (ID: 2789)
  Prédit: '200'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '200' → logprob: -0.10990603268146515
    2. '(' → logprob: -2.484905958175659
    3. 'max' → logprob: -4.734906196594238
    4. '20' → logprob: -4.859906196594238
    5. '(max' → logprob: -6.984906196594238
    6. '60' → logprob: -7.234906196594238
    7. '10' → logprob: -7.484906196594238
    8. '6' → logprob: -7.734906196594238
    9. '100' → logprob: -8.484906196594238
    10. '2' → logprob: -8.734906196594238

Token 135: '+w' (ID: 155687)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.09442088752985
    2. '+' → logprob: -3.219420909881592
    3. ' -' → logprob: -3.594420909881592
    4. '-w' → logprob: -4.094420909881592
    5. '+w' → logprob: -5.344420909881592
    6. ' +' → logprob: -7.344420909881592
    7. '0' → logprob: -8.469420433044434
    8. '-(' → logprob: -9.469420433044434
    9. '20' → logprob: -9.594420433044434
    10. ' ' → logprob: -10.219420433044434

Token 136: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010337610729038715
    2. '*' → logprob: -7.001033782958984
    3. '[' → logprob: -9.751033782958984
    4. '*w' → logprob: -10.876033782958984
    5. ')]' → logprob: -11.751033782958984
    6. 'weight' → logprob: -11.876033782958984
    7. 'weights' → logprob: -12.626033782958984
    8. ' )' → logprob: -12.626033782958984
    9. ']' → logprob: -12.876033782958984
    10. '//' → logprob: -13.001033782958984

Token 137: '#' (ID: 2)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0868840217590332
    2. '\n' → logprob: -1.3368840217590332
    3. '<|end|>' → logprob: -1.7118840217590332
    4. '
' → logprob: -2.211884021759033
    5. '*' → logprob: -3.336884021759033
    6. '+' → logprob: -3.961884021759033
    7. 'def' → logprob: -4.336884021759033
    8. '#' → logprob: -4.711884021759033
    9. '\' → logprob: -5.211884021759033
    10. ' ' → logprob: -5.336884021759033

Token 138: ' Pre' (ID: 4659)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.09676433354616165
    2. 'from' → logprob: -2.721764326095581
    3. 'max' → logprob: -4.47176456451416
    4. 'import' → logprob: -5.34676456451416
    5. '#' → logprob: -5.72176456451416
    6. 'memo' → logprob: -6.09676456451416
    7. 'def' → logprob: -6.59676456451416
    8. 'left' → logprob: -7.34676456451416
    9. 'total' → logprob: -7.34676456451416
    10. 'prev' → logprob: -7.84676456451416

Token 139: 'compute' (ID: 54521)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.2294414043426514
    2. 'dict' → logprob: -1.4794414043426514
    3. 'compute' → logprob: -1.6044414043426514
    4. 'sum' → logprob: -2.2294414043426514
    5. 'd' → logprob: -2.9794414043426514
    6. 'fix' → logprob: -3.1044414043426514
    7. 'f' → logprob: -3.6044414043426514
    8. 'c' → logprob: -4.1044416427612305
    9. 'v' → logprob: -4.2294416427612305
    10. 'fetch' → logprob: -5.9794416427612305

Token 140: ' distance' (ID: 9324)
  Prédit: ' prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' prefix' → logprob: -1.241309404373169
    2. 'prefix' → logprob: -1.616309404373169
    3. ' max' → logprob: -1.991309404373169
    4. 'dp' → logprob: -2.116309404373169
    5. ' dp' → logprob: -2.366309404373169
    6. 'max' → logprob: -3.241309404373169
    7. ' cumulative' → logprob: -3.366309404373169
    8. 'acc' → logprob: -3.741309404373169
    9. 'time' → logprob: -4.61630916595459
    10. 'speed' → logprob: -4.86630916595459

Token 141: ' between' (ID: 2870)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sum' → logprob: -2.0719478130340576
    2. 's' → logprob: -2.3219478130340576
    3. '_c' → logprob: -2.3219478130340576
    4. 'sum' → logprob: -2.3219478130340576
    5. '_diff' → logprob: -2.3219478130340576
    6. ' =' → logprob: -2.6969478130340576
    7. '_prefix' → logprob: -2.8219478130340576
    8. '_between' → logprob: -2.9469478130340576
    9. '_' → logprob: -3.1969478130340576
    10. '_s' → logprob: -3.5719478130340576

Token 142: ' warehouses' (ID: 123097)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.28062936663627625
    2. 'ware' → logprob: -1.9056293964385986
    3. ' warehouses' → logprob: -3.5306293964385986
    4. 'i' → logprob: -3.9056293964385986
    5. ' dist' → logprob: -4.4056291580200195
    6. 'adj' → logprob: -4.9056291580200195
    7. ' consecutive' → logprob: -5.2806291580200195
    8. 'two' → logprob: -5.9056291580200195
    9. '[i' → logprob: -5.9056291580200195
    10. ' i' → logprob: -6.1556291580200195

Token 143: ' along' (ID: 4251)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.11058955639600754
    2. 'diff' → logprob: -2.8605895042419434
    3. 'distance' → logprob: -3.8605895042419434
    4. 'd' → logprob: -3.9855895042419434
    5. 'dd' → logprob: -6.110589504241943
    6. 'dis' → logprob: -6.735589504241943
    7. 'dif' → logprob: -7.110589504241943
    8. 'between' → logprob: -7.110589504241943
    9. 'delta' → logprob: -7.610589504241943
    10. 'edges' → logprob: -8.110589981079102

Token 144: ' straight' (ID: 10230)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.8626207113265991
    2. 'dist' → logprob: -1.1126207113265991
    3. 'the' → logprob: -2.1126208305358887
    4. ' dist' → logprob: -2.2376208305358887
    5. 'range' → logprob: -5.237620830535889
    6. ' range' → logprob: -5.237620830535889
    7. ' a' → logprob: -5.612620830535889
    8. ' route' → logprob: -6.112620830535889
    9. ' line' → logprob: -6.987620830535889
    10. ' path' → logprob: -7.237620830535889

Token 145: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.17654430866241455
    2. ' line' → logprob: -1.9265443086624146
    3. 'lines' → logprob: -4.551544189453125
    4. ' lines' → logprob: -6.176544189453125
    5. '-line' → logprob: -6.426544189453125
    6. '_line' → logprob: -7.176544189453125
    7. '_' → logprob: -7.801544189453125
    8. '-' → logprob: -9.051544189453125
    9. '#' → logprob: -9.301544189453125
    10. 's' → logprob: -9.426544189453125

Token 146: '
' (ID: 198)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.1127687469124794
    2. 'd' → logprob: -3.4877686500549316
    3. 'diff' → logprob: -3.4877686500549316
    4. 'distance' → logprob: -3.9877686500549316
    5. 'between' → logprob: -4.987768650054932
    6. '
' → logprob: -5.487768650054932
    7. '#' → logprob: -5.737768650054932
    8. 'def' → logprob: -6.362768650054932
    9. 'dp' → logprob: -6.362768650054932
    10. 'delta' → logprob: -6.487768650054932

Token 147: 'def' (ID: 1314)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.3475237190723419
    2. 'distance' → logprob: -2.0975236892700195
    3. 'd' → logprob: -2.4725236892700195
    4. 'diff' → logprob: -3.0975236892700195
    5. '#' → logprob: -5.0975236892700195
    6. 'inter' → logprob: -5.3475236892700195
    7. 'edges' → logprob: -5.4725236892700195
    8. 'delta' → logprob: -5.5975236892700195
    9. 'between' → logprob: -5.8475236892700195
    10. 'from' → logprob: -5.9725236892700195

Token 148: ' dist' (ID: 3601)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.4963610768318176
    2. ' distance' → logprob: -1.2463610172271729
    3. ' dist' → logprob: -2.996361017227173
    4. 'dist' → logprob: -3.621361017227173
    5. '_distance' → logprob: -5.371361255645752
    6. 'calc' → logprob: -5.621361255645752
    7. ' calc' → logprob: -5.746361255645752
    8. 'd' → logprob: -6.121361255645752
    9. ' get' → logprob: -6.371361255645752
    10. 'get' → logprob: -6.621361255645752

Token 149: '_bw' (ID: 172602)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.2812434434890747
    2. '_between' → logprob: -1.2812434434890747
    3. '(i' → logprob: -1.5312434434890747
    4. '(' → logprob: -1.9062434434890747
    5. '(a' → logprob: -2.781243324279785
    6. '_(' → logprob: -5.781243324279785
    7. '(x' → logprob: -5.906243324279785
    8. '[i' → logprob: -6.156243324279785
    9. '(_' → logprob: -6.656243324279785
    10. 's' → logprob: -6.906243324279785

Token 150: '(i' (ID: 3649)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5487693548202515
    2. '_' → logprob: -1.5487693548202515
    3. '(w' → logprob: -2.798769474029541
    4. 'een' → logprob: -2.923769474029541
    5. 'etween' → logprob: -3.923769474029541
    6. 'ware' → logprob: -4.048769474029541
    7. '()' → logprob: -4.423769474029541
    8. '(i' → logprob: -4.548769474029541
    9. '_w' → logprob: -4.798769474029541
    10. '(a' → logprob: -5.548769474029541

Token 151: ',j' (ID: 22712)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008912005461752415
    2. ',j' → logprob: -5.133912086486816
    3. ' ,' → logprob: -5.883912086486816
    4. ',i' → logprob: -9.133912086486816
    5. '_,' → logprob: -10.383912086486816
    6. ',b' → logprob: -11.008912086486816
    7. ',d' → logprob: -11.508912086486816
    8. ',w' → logprob: -11.508912086486816
    9. ',n' → logprob: -12.633912086486816
    10. ',next' → logprob: -12.883912086486816

Token 152: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011138716712594032
    2. '):
' → logprob: -4.511138916015625
    3. ',' → logprob: -10.261138916015625
    4. ' ):' → logprob: -10.636138916015625
    5. '):
' → logprob: -11.136138916015625
    6. ')' → logprob: -11.386138916015625
    7. ':' → logprob: -13.011138916015625
    8. ',i' → logprob: -13.761138916015625
    9. '(i' → logprob: -14.261138916015625
    10. '):

' → logprob: -14.386138916015625

Token 153: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3237069547176361
    2. 'return' → logprob: -2.073706865310669
    3. 'abs' → logprob: -2.573706865310669
    4. ' return' → logprob: -2.698706865310669
    5. ' abs' → logprob: -4.948707103729248
    6. '    ' → logprob: -10.07370662689209
    7. 'dist' → logprob: -10.32370662689209
    8. '   ' → logprob: -10.57370662689209
    9. '	return' → logprob: -10.94870662689209
    10. 'if' → logprob: -11.57370662689209

Token 154: ' return' (ID: 622)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.06084414944052696
    2. 'dist' → logprob: -3.1858441829681396
    3. 'return' (adapté à ' return') → logprob: -4.0608439445495605
    4. ' abs' → logprob: -8.185844421386719
    5. '   ' → logprob: -10.060844421386719
    6. ' return' → logprob: -10.560844421386719
    7. '0' → logprob: -10.685844421386719
    8. 'max' → logprob: -10.810844421386719
    9. ' dist' → logprob: -11.060844421386719
    10. 'if' → logprob: -11.560844421386719

Token 155: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.05893727019429207
    2. 'dist' → logprob: -3.1839373111724854
    3. ' abs' → logprob: -4.183937072753906
    4. ' dist' → logprob: -7.558937072753906
    5. '   ' → logprob: -11.058937072753906
    6. '(abs' → logprob: -11.058937072753906
    7. ' ' → logprob: -12.183937072753906
    8. 'max' → logprob: -12.933937072753906
    9. '  ' → logprob: -13.996437072753906
    10. '	dist' → logprob: -13.996437072753906

Token 156: '(dist' (ID: 78981)
  Prédit: '(dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dist' → logprob: -0.004084574058651924
    2. 'dist' → logprob: -5.504084587097168
    3. '(' → logprob: -12.504084587097168
    4. ' dist' → logprob: -13.379084587097168
    5. '	dist' → logprob: -14.379084587097168
    6. '(d' → logprob: -16.37908363342285
    7. '(distance' → logprob: -16.75408363342285
    8. '(diff' → logprob: -17.50408363342285
    9. '.dist' → logprob: -17.62908363342285
    10. 'Dist' → logprob: -17.87908363342285

Token 157: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.01612997241318226
    2. '[j' → logprob: -4.141129970550537
    3. '(i' → logprob: -10.266130447387695
    4. ')' → logprob: -10.766130447387695
    5. '[' → logprob: -11.266130447387695
    6. 'i' → logprob: -11.391130447387695
    7. ')[' → logprob: -12.266130447387695
    8. ')i' → logprob: -12.516130447387695
    9. 'j' → logprob: -13.516130447387695
    10. ']' → logprob: -13.891130447387695

Token 158: ']-' (ID: 27107)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12730161845684052
    2. ']-' → logprob: -2.8773016929626465
    3. '-' → logprob: -3.1273016929626465
    4. ' -' → logprob: -4.0023016929626465
    5. ' ]' → logprob: -7.3773016929626465
    6. '-j' → logprob: -7.6273016929626465
    7. ' ' → logprob: -12.252301216125488
    8. '[' → logprob: -12.377301216125488
    9. '[j' → logprob: -12.877301216125488
    10. 'j' → logprob: -13.252301216125488

Token 159: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.9027791495318525e-05
    2. ' dist' → logprob: -10.875019073486328
    3. '	dist' → logprob: -18.625019073486328
    4. '(dist' → logprob: -20.125019073486328
    5. 'diff' → logprob: -20.500019073486328
    6. 'd' → logprob: -21.250019073486328
    7. '   ' → logprob: -21.250019073486328
    8. ' ' → logprob: -21.625019073486328
    9. '.dist' → logprob: -22.000019073486328
    10. '[' → logprob: -22.500019073486328

Token 160: '[j' (ID: 7895)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.023349599912762642
    2. '[j' → logprob: -3.7733495235443115
    3. ' j' → logprob: -9.39834976196289
    4. '[' → logprob: -11.77334976196289
    5. ':j' → logprob: -11.77334976196289
    6. ',j' → logprob: -13.39834976196289
    7. ']' → logprob: -14.14834976196289
    8. '][' → logprob: -14.39834976196289
    9. '	j' → logprob: -14.52334976196289
    10. '   ' → logprob: -14.64834976196289

Token 161: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.07908211648464203
    2. ')' → logprob: -2.5790820121765137
    3. '))' → logprob: -8.954082489013672
    4. '})' → logprob: -10.579082489013672
    5. ')])' → logprob: -10.954082489013672
    6. ''])' → logprob: -12.704082489013672
    7. ']' → logprob: -12.829082489013672
    8. ' )' → logprob: -13.204082489013672
    9. '）' → logprob: -13.329082489013672
    10. ']))' → logprob: -13.454082489013672

Token 162: 'from' (ID: 2845)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9741543531417847
    2. 'dp' → logprob: -1.3491543531417847
    3. '#' → logprob: -1.8491543531417847
    4. 'def' → logprob: -2.099154472351074
    5. '<|end|>' → logprob: -4.099154472351074
    6. '+' → logprob: -4.224154472351074
    7. '\n' → logprob: -4.224154472351074
    8. '
' → logprob: -4.849154472351074
    9. 'max' → logprob: -5.224154472351074
    10. 'import' → logprob: -5.599154472351074

Token 163: ' functools' (ID: 142636)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.8349879384040833
    2. 'collections' → logprob: -0.8349879384040833
    3. 'bis' → logprob: -2.3349878787994385
    4. 'heap' → logprob: -3.8349878787994385
    5. ' itertools' → logprob: -5.584988117218018
    6. 'sys' → logprob: -5.834988117218018
    7. ' collections' → logprob: -5.959988117218018
    8. ' math' → logprob: -6.209988117218018
    9. 'operator' → logprob: -7.084988117218018
    10. ' functools' → logprob: -7.459988117218018

Token 164: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.3134653568267822
    2. ' import' → logprob: -1.3134653568267822
    3. '_import' → logprob: -8.688465118408203
    4. '	import' → logprob: -11.313465118408203
    5. '```' → logprob: -12.063465118408203
    6. '.' → logprob: -12.313465118408203
    7. '.import' → logprob: -12.313465118408203
    8. ' .' → logprob: -13.188465118408203
    9. '_' → logprob: -13.688465118408203
    10. ''import' → logprob: -13.938465118408203

Token 165: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.004240566398948431
    2. ' l' → logprob: -5.5042405128479
    3. 'cache' → logprob: -8.754240989685059
    4. 'reduce' → logprob: -12.754240989685059
    5. '```' → logprob: -14.754240989685059
    6. 'wrap' → logprob: -14.879240989685059
    7. 'cached' → logprob: -15.129240989685059
    8. ' cache' → logprob: -15.754240989685059
    9. '	l' → logprob: -15.879240989685059
    10. 'ls' → logprob: -17.129240036010742

Token 166: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -6.630610641877865e-06
    2. 'r' → logprob: -12.000006675720215
    3. 'RU' → logprob: -15.750006675720215
    4. 'ruff' → logprob: -15.875006675720215
    5. 'ruz' → logprob: -16.3750057220459
    6. 'ruh' → logprob: -17.2500057220459
    7. 'rup' → logprob: -17.8750057220459
    8. 'fu' → logprob: -18.0000057220459
    9. ' ru' → logprob: -18.0000057220459
    10. '_ru' → logprob: -18.0000057220459

Token 167: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -0.283223032951355
    2. 'cache' → logprob: -1.408223032951355
    3. 'c' → logprob: -7.0332231521606445
    4. 'r' → logprob: -7.4082231521606445
    5. 'ct' → logprob: -7.9082231521606445
    6. 'import' → logprob: -10.158223152160645
    7. 'cached' → logprob: -10.658223152160645
    8. 'x' → logprob: -10.908223152160645
    9. '```' → logprob: -11.033223152160645
    10. 't' → logprob: -11.158223152160645

Token 168: '

' (ID: 279)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.00031520487391389906
    2. '@n' → logprob: -8.87531566619873
    3. '
' → logprob: -9.37531566619873
    4. '@login' → logprob: -10.37531566619873
    5. '@
' → logprob: -11.12531566619873
    6. '@s' → logprob: -11.12531566619873
    7. '@app' → logprob: -12.25031566619873
    8. '@click' → logprob: -12.25031566619873
    9. '@index' → logprob: -12.25031566619873
    10. '@\' → logprob: -12.75031566619873

Token 169: 'full' (ID: 15393)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -2.45848218582978e-06
    2. '@n' → logprob: -13.62500286102295
    3. '@login' → logprob: -15.25000286102295
    4. '@index' → logprob: -15.37500286102295
    5. ' @' → logprob: -15.37500286102295
    6. '@s' → logprob: -15.75000286102295
    7. '
' → logprob: -15.87500286102295
    8. 'def' → logprob: -16.375001907348633
    9. '@
' → logprob: -16.625001907348633
    10. '@app' → logprob: -17.125001907348633

Token 170: '_mask' (ID: 21732)
  Prédit: '_cache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cache' → logprob: -0.6383482813835144
    2. '_' → logprob: -0.7633482813835144
    3. '_cached' → logprob: -6.13834810256958
    4. ' _' → logprob: -6.26334810256958
    5. '_capacity' → logprob: -7.63834810256958
    6. '_c' → logprob: -8.888348579406738
    7. '_size' → logprob: -8.888348579406738
    8. '@' → logprob: -9.513348579406738
    9. '_
' → logprob: -9.638348579406738
    10. '_max' → logprob: -9.888348579406738

Token 171: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08895102888345718
    2. ' =' → logprob: -2.4639511108398438
    3. '_' → logprob: -12.588951110839844
    4. ':' → logprob: -12.963951110839844
    5. ',' → logprob: -13.463951110839844
    6. '=int' → logprob: -13.588951110839844
    7. ')' → logprob: -13.838951110839844
    8. '=
' → logprob: -15.088951110839844
    9. ' ' → logprob: -15.213951110839844
    10. ' =
' → logprob: -15.338951110839844

Token 172: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00317783304490149
    2. ' (' → logprob: -5.753177642822266
    3. '1' → logprob: -15.878177642822266
    4. '(n' → logprob: -18.253177642822266
    5. '2' → logprob: -19.003177642822266
    6. '0' → logprob: -19.128177642822266
    7. '   ' → logprob: -19.628177642822266
    8. '[' → logprob: -20.003177642822266
    9. ' ' → logprob: -20.128177642822266
    10. '((' → logprob: -20.503177642822266

Token 173: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1517960956552997e-05
    2. '(' → logprob: -11.375011444091797
    3. ' ' → logprob: -17.250011444091797
    4. '2' → logprob: -19.250011444091797
    5. '   ' → logprob: -21.625011444091797
    6. '１' → logprob: -22.125011444091797
    7. ' (' → logprob: -22.250011444091797
    8. '```' → logprob: -22.625011444091797
    9. '0' → logprob: -23.000011444091797
    10. ')' → logprob: -23.250011444091797

Token 174: '<<' (ID: 5354)
  Prédit: '<<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.06197037547826767
    2. ' <<' → logprob: -2.8119704723358154
    3. '<' → logprob: -13.186970710754395
    4. '1' → logprob: -15.311970710754395
    5. '<<(' → logprob: -15.436970710754395
    6. ' ' → logprob: -16.436969757080078
    7. '<<<' → logprob: -16.436969757080078
    8. '<n' → logprob: -16.936969757080078
    9. '```' → logprob: -17.186969757080078
    10. ')<<' → logprob: -17.686969757080078

Token 175: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0325924449716695e-05
    2. ' n' → logprob: -11.50001049041748
    3. 'len' → logprob: -16.625009536743164
    4. ')n' → logprob: -18.750009536743164
    5. '	n' → logprob: -18.875009536743164
    6. '20' → logprob: -18.875009536743164
    7. '10' → logprob: -18.875009536743164
    8. '
' → logprob: -19.125009536743164
    9. '<|end|>' → logprob: -19.375009536743164
    10. '(n' → logprob: -19.375009536743164

Token 176: ')-' (ID: 14080)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0028129592537879944
    2. ')-' → logprob: -5.87781286239624
    3. ' )' → logprob: -11.752813339233398
    4. '')' → logprob: -16.0028133392334
    5. ')-(' → logprob: -16.8778133392334
    6. '")' → logprob: -17.2528133392334
    7. ')
' → logprob: -17.3778133392334
    8. '1' → logprob: -18.3778133392334
    9. '）' → logprob: -18.3778133392334
    10. '),' → logprob: -18.5028133392334

Token 177: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.125000953674316
    3. '```' → logprob: -16.9375
    4. '0' → logprob: -17.25
    5. '
' → logprob: -18.4375
    6. '

' → logprob: -18.75
    7. '<|end|>' → logprob: -18.75
    8. '１' → logprob: -19.1875
    9. '۱' → logprob: -19.375
    10. ')' → logprob: -19.6875

Token 178: '

' (ID: 279)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.03162817284464836
    2. '
' → logprob: -3.531628131866455
    3. '

' → logprob: -6.531628131866455
    4. '@n' → logprob: -8.781628608703613
    5. '
' → logprob: -9.156628608703613
    6. '@index' → logprob: -10.656628608703613
    7. '@s' → logprob: -11.031628608703613
    8. '@return' → logprob: -11.156628608703613
    9. '\n' → logprob: -11.656628608703613
    10. '@login' → logprob: -11.656628608703613

Token 179: '@' (ID: 31)
  Prédit: '@'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -3.9292415749514475e-05
    2. 'def' → logprob: -10.875039100646973
    3. '@index' → logprob: -12.625039100646973
    4. ')' → logprob: -12.750039100646973
    5. '@login' → logprob: -13.000039100646973
    6. '@click' → logprob: -13.375039100646973
    7. '@n' → logprob: -13.375039100646973
    8. ' @' → logprob: -13.625039100646973
    9. '@return' → logprob: -13.750039100646973
    10. '@get' → logprob: -14.125039100646973

Token 180: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: 0.0
    2. ' l' → logprob: -18.0
    3. 'cache' → logprob: -20.375
    4. 'staticmethod' → logprob: -22.125
    5. '```' → logprob: -22.5
    6. 'dat' → logprob: -23.0
    7. 'lr' → logprob: -23.75
    8. '@' → logprob: -24.0
    9. 'fun' → logprob: -24.375
    10. '(l' → logprob: -24.5

Token 181: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -0.0005586316110566258
    2. 'r' → logprob: -7.500558853149414
    3. 'rl' → logprob: -12.250558853149414
    4. '@' → logprob: -14.750558853149414
    5. '```' → logprob: -15.750558853149414
    6. 'rr' → logprob: -16.875558853149414
    7. 'rc' → logprob: -17.250558853149414
    8. 'def' → logprob: -18.000558853149414
    9. 'rust' → logprob: -18.125558853149414
    10. 'rum' → logprob: -18.125558853149414

Token 182: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -7.052377623040229e-05
    2. '_cached' → logprob: -9.750070571899414
    3. 'cache' → logprob: -11.375070571899414
    4. '_' → logprob: -15.750070571899414
    5. 'cached' → logprob: -16.000070571899414
    6. '_CACHE' → logprob: -16.625070571899414
    7. '_cash' → logprob: -16.750070571899414
    8. 'Cache' → logprob: -17.000070571899414
    9. '```' → logprob: -17.000070571899414
    10. '\' → logprob: -17.250070571899414

Token 183: '(None' (ID: 65126)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.007611720357090235
    2. '(None' → logprob: -5.5076117515563965
    3. '
' → logprob: -5.7576117515563965
    4. '(def' → logprob: -8.507611274719238
    5. '(' → logprob: -9.257611274719238
    6. '(int' → logprob: -10.382611274719238
    7. '(max' → logprob: -11.257611274719238
    8. ' def' → logprob: -11.382611274719238
    9. 'None' → logprob: -12.382611274719238
    10. 'de' → logprob: -13.007611274719238

Token 184: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.16295255720615387
    2. ')' → logprob: -2.0379526615142822
    3. 'def' → logprob: -3.9129526615142822
    4. ')
' → logprob: -9.662952423095703
    5. ')`
' → logprob: -11.412952423095703
    6. '())
' → logprob: -12.787952423095703
    7. '`)
' → logprob: -13.037952423095703
    8. ' )
' → logprob: -13.162952423095703
    9. '
' → logprob: -13.287952423095703
    10. '()' → logprob: -13.912952423095703

Token 185: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -7.612634362885728e-05
    2. '
' → logprob: -9.500076293945312
    3. ' def' → logprob: -13.625076293945312
    4. '  
' → logprob: -17.875076293945312
    5. '(def' → logprob: -18.250076293945312
    6. '    
' → logprob: -19.375076293945312
    7. '<|end|>' → logprob: -19.625076293945312
    8. '0' → logprob: -19.875076293945312
    9. 'de' → logprob: -20.125076293945312
    10. '-def' → logprob: -20.125076293945312

Token 186: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.06995332986116409
    2. 'dfs' → logprob: -2.819953441619873
    3. ' dp' → logprob: -5.319953441619873
    4. ' tsp' → logprob: -6.444953441619873
    5. ' dfs' → logprob: -7.444953441619873
    6. 'solve' → logprob: -8.069952964782715
    7. 'def' → logprob: -8.444952964782715
    8. 't' → logprob: -8.819952964782715
    9. 'f' → logprob: -8.944952964782715
    10. ' solve' → logprob: -10.944952964782715

Token 187: '(mask' (ID: 80748)
  Prédit: '(mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mask' → logprob: -0.0029343178030103445
    2. '(' → logprob: -6.002934455871582
    3. ' (' → logprob: -8.127934455871582
    4. '(full' → logprob: -9.502934455871582
    5. '(state' → logprob: -9.752934455871582
    6. '(current' → logprob: -10.877934455871582
    7. '(i' → logprob: -12.502934455871582
    8. '(s' → logprob: -13.502934455871582
    9. '(m' → logprob: -13.502934455871582
    10. '(cur' → logprob: -13.627934455871582

Token 188: ',last' (ID: 184134)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0022004556376487017
    2. ',current' → logprob: -6.877200603485107
    3. ',pos' → logprob: -7.627200603485107
    4. ',last' → logprob: -8.37720012664795
    5. ' ,' → logprob: -8.62720012664795
    6. ',int' → logprob: -9.62720012664795
    7. ',state' → logprob: -9.87720012664795
    8. ',i' → logprob: -10.12720012664795
    9. ',p' → logprob: -10.25220012664795
    10. ',num' → logprob: -11.00220012664795

Token 189: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6951687335968018
    2. ',' → logprob: -0.8201687335968018
    3. '):
' → logprob: -2.8201687335968018
    4. ' ,' → logprob: -8.445168495178223
    5. ' ):' → logprob: -8.570168495178223
    6. ')' → logprob: -8.945168495178223
    7. '_mask' → logprob: -9.320168495178223
    8. '):
' → logprob: -9.445168495178223
    9. ',k' → logprob: -9.945168495178223
    10. ',int' → logprob: -10.070168495178223

Token 190: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2844027280807495
    2. '   ' → logprob: -1.7844027280807495
    3. 'if' → logprob: -2.534402847290039
    4. ' ' → logprob: -8.784402847290039
    5. '	if' → logprob: -9.909402847290039
    6. ' return' → logprob: -10.534402847290039
    7. ' res' → logprob: -10.784402847290039
    8. 'max' → logprob: -10.784402847290039
    9. ' best' → logprob: -10.909402847290039
    10. 'return' → logprob: -11.284402847290039

Token 191: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.019170233979821205
    2. ' if' → logprob: -4.14417028427124
    3. 'res' → logprob: -6.51917028427124
    4. '   ' → logprob: -6.51917028427124
    5. ' res' → logprob: -8.894169807434082
    6. 'max' → logprob: -11.144169807434082
    7. 'return' → logprob: -11.644169807434082
    8. 'best' → logprob: -12.269169807434082
    9. 'next' → logprob: -12.644169807434082
    10. '	if' → logprob: -13.144169807434082

Token 192: ' mask' (ID: 10910)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.17981094121932983
    2. ' mask' → logprob: -1.8048110008239746
    3. '(mask' → logprob: -10.054810523986816
    4. '	mask' → logprob: -11.179810523986816
    5. 'full' → logprob: -13.304810523986816
    6. '_mask' → logprob: -13.429810523986816
    7. ' full' → logprob: -13.679810523986816
    8. 'last' → logprob: -13.679810523986816
    9. ' ' → logprob: -13.804810523986816
    10. '
' → logprob: -13.804810523986816

Token 193: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0032260757870972157
    2. ' ==' → logprob: -5.753226280212402
    3. '==(' → logprob: -10.628226280212402
    4. '=' → logprob: -10.878226280212402
    5. '==
' → logprob: -12.753226280212402
    6. ')==' → logprob: -13.378226280212402
    7. '()==' → logprob: -15.003226280212402
    8. ']==' → logprob: -15.628226280212402
    9. '===' → logprob: -16.003225326538086
    10. ')' → logprob: -16.253225326538086

Token 194: ' full' (ID: 3149)
  Prédit: 'full'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'full' → logprob: -0.01372161228209734
    2. '0' → logprob: -4.388721466064453
    3. ' full' → logprob: -6.763721466064453
    4. ' ' → logprob: -10.263721466064453
    5. '(full' → logprob: -11.013721466064453
    6. '(' → logprob: -13.638721466064453
    7. '	full' → logprob: -14.388721466064453
    8. 'ful' → logprob: -14.388721466064453
    9. 'Full' → logprob: -14.638721466064453
    10. '   ' → logprob: -14.763721466064453

Token 195: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -2.1888679839321412e-05
    2. '_MASK' → logprob: -10.875021934509277
    3. ')' → logprob: -13.625021934509277
    4. '_' → logprob: -13.875021934509277
    5. '_masks' → logprob: -15.625021934509277
    6. 'mask' → logprob: -15.875021934509277
    7. ' _' → logprob: -15.875021934509277
    8. ')_' → logprob: -16.00002098083496
    9. '_bit' → logprob: -16.50002098083496
    10. '```' → logprob: -17.25002098083496

Token 196: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0036752521991729736
    2. ':
' → logprob: -5.75367546081543
    3. ':return' → logprob: -7.62867546081543
    4. '):' → logprob: -11.75367546081543
    5. ' :' → logprob: -13.12867546081543
    6. '   ' → logprob: -14.62867546081543
    7. ')' → logprob: -15.12867546081543
    8. '):
' → logprob: -15.12867546081543
    9. ':
' → logprob: -15.87867546081543
    10. 'return' → logprob: -17.62867546081543

Token 197: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06396368145942688
    2. 'return' → logprob: -3.6889636516571045
    3. ' return' → logprob: -3.8139636516571045
    4. '   ' → logprob: -4.313963890075684
    5. '
' → logprob: -7.563963890075684
    6. '0' → logprob: -7.688963890075684
    7. '	return' → logprob: -8.563963890075684
    8. ',' → logprob: -9.188963890075684
    9. ':return' → logprob: -9.813963890075684
    10. '    
' → logprob: -10.438963890075684

Token 198: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0019135229522362351
    2. '   ' → logprob: -6.626913547515869
    3. ' return' → logprob: -7.626913547515869
    4. 'if' → logprob: -9.376913070678711
    5. '
' → logprob: -12.751913070678711
    6. '    
' → logprob: -12.751913070678711
    7. 'speed' → logprob: -13.001913070678711
    8. '       ' → logprob: -13.251913070678711
    9. 'dist' → logprob: -13.376913070678711
    10. 'distance' → logprob: -14.501913070678711

Token 199: ' ' (ID: 220)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.17001527547836304
    2. 'speed' → logprob: -1.9200153350830078
    3. '0' → logprob: -5.420015335083008
    4. ' dist' → logprob: -6.295015335083008
    5. '(dist' → logprob: -7.295015335083008
    6. '(' → logprob: -7.420015335083008
    7. '(speed' → logprob: -7.420015335083008
    8. ' speed' → logprob: -7.795015335083008
    9. 'abs' → logprob: -7.920015335083008
    10. 'float' → logprob: -8.545015335083008

Token 200: '0' (ID: 15)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.4879665672779083
    2. 'speed' → logprob: -1.237966537475586
    3. '0' → logprob: -2.487966537475586
    4. 'float' → logprob: -5.737966537475586
    5. 'abs' → logprob: -5.862966537475586
    6. '(speed' → logprob: -6.112966537475586
    7. '(' → logprob: -6.237966537475586
    8. '(dist' → logprob: -6.612966537475586
    9. '200' → logprob: -7.862966537475586
    10. '-' → logprob: -8.737966537475586

Token 201: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029112599790096283
    2. '    
' → logprob: -3.6541125774383545
    3. '
' → logprob: -6.029112815856934
    4. '\n' → logprob: -8.904112815856934
    5. ')' → logprob: -10.029112815856934
    6. '  
' → logprob: -10.154112815856934
    7. ',' → logprob: -10.279112815856934
    8. '<|end|>' → logprob: -10.779112815856934
    9. '	
' → logprob: -11.029112815856934
    10. ' 
' → logprob: -11.404112815856934

Token 202: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1588701456785202
    2. '    
' → logprob: -2.158870220184326
    3. '
' → logprob: -3.783870220184326
    4. ')' → logprob: -5.408870220184326
    5. '\n' → logprob: -6.408870220184326
    6. ' 
' → logprob: -7.283870220184326
    7. ',' → logprob: -8.158869743347168
    8. '<|end|>' → logprob: -8.283869743347168
    9. '	
' → logprob: -8.408869743347168
    10. '    ' → logprob: -8.908869743347168

Token 203: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.10905401408672333
    2. 'best' → logprob: -2.6090540885925293
    3. ' res' → logprob: -3.7340540885925293
    4. 'ans' → logprob: -5.859054088592529
    5. '   ' → logprob: -6.734054088592529
    6. ' best' → logprob: -7.484054088592529
    7. 'result' → logprob: -7.984054088592529
    8. 'ret' → logprob: -8.109053611755371
    9. 'max' → logprob: -8.609053611755371
    10. 'min' → logprob: -8.859053611755371

Token 204: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740819036960602
    2. ' =' → logprob: -0.9740818738937378
    3. '   ' → logprob: -13.349081993103027
    4. '=float' → logprob: -13.974081993103027
    5. 'max' → logprob: -14.224081993103027
    6. '=max' → logprob: -14.349081993103027
    7. ',' → logprob: -15.599081993103027
    8. '  ' → logprob: -15.974081993103027
    9. '_' → logprob: -16.22408103942871
    10. ' ' → logprob: -16.22408103942871

Token 205: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.003814210882410407
    2. '-' → logprob: -6.253814220428467
    3. '10' → logprob: -6.878814220428467
    4. '-f' → logprob: -7.753814220428467
    5. ' float' → logprob: -7.878814220428467
    6. '1' → logprob: -11.128813743591309
    7. '0' → logprob: -11.628813743591309
    8. 'int' → logprob: -12.003813743591309
    9. ' -' → logprob: -12.128813743591309
    10. '-(' → logprob: -13.003813743591309

Token 206: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0028902292251586914
    2. '('-' → logprob: -5.877890110015869
    3. '("' → logprob: -9.502890586853027
    4. 'inf' → logprob: -12.127890586853027
    5. ''in' → logprob: -13.252890586853027
    6. ''-' → logprob: -13.502890586853027
    7. '("-' → logprob: -14.252890586853027
    8. ''' → logprob: -14.377890586853027
    9. '(' → logprob: -14.627890586853027
    10. '(in' → logprob: -16.00288963317871

Token 207: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.0015058133285492659
    2. '-inf' → logprob: -6.5015058517456055
    3. ''-' → logprob: -13.376505851745605
    4. ''' → logprob: -13.751505851745605
    5. ''in' → logprob: -15.001505851745605
    6. '-' → logprob: -15.126505851745605
    7. '-x' → logprob: -16.12650489807129
    8. ''+' → logprob: -17.12650489807129
    9. 'INF' → logprob: -18.12650489807129
    10. '.inf' → logprob: -18.25150489807129

Token 208: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008864041417837143
    2. ')
' → logprob: -4.758863925933838
    3. '')' → logprob: -8.883864402770996
    4. ' )' → logprob: -10.008864402770996
    5. '   ' → logprob: -10.133864402770996
    6. '')
' → logprob: -11.133864402770996
    7. ' )
' → logprob: -12.383864402770996
    8. ')
' → logprob: -12.633864402770996
    9. ')'
' → logprob: -13.633864402770996
    10. ')')
' → logprob: -13.883864402770996

Token 209: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1822189092636108
    2. ' 
' → logprob: -1.4322189092636108
    3. ' for' → logprob: -1.4322189092636108
    4. ')' → logprob: -2.8072190284729004
    5. '    
' → logprob: -3.0572190284729004
    6. ' ' → logprob: -3.5572190284729004
    7. 'for' → logprob: -4.1822190284729
    8. '	for' → logprob: -4.4322190284729
    9. '
' → logprob: -4.5572190284729
    10. '\t' → logprob: -4.5572190284729

Token 210: ' w' (ID: 286)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3489166796207428
    2. ' for' → logprob: -1.2239166498184204
    3. '   ' → logprob: -8.223917007446289
    4. 'mask' → logprob: -9.223917007446289
    5. 'current' → logprob: -10.598917007446289
    6. 'next' → logprob: -10.848917007446289
    7. ' next' → logprob: -11.348917007446289
    8. '    
' → logprob: -11.848917007446289
    9. ' current' → logprob: -11.848917007446289
    10. 'i' → logprob: -12.473917007446289

Token 211: '_sum' (ID: 29859)
  Prédit: 'eight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eight' → logprob: -0.9309422373771667
    2. ' =' → logprob: -1.4309422969818115
    3. 'e' → logprob: -1.5559422969818115
    4. '=' → logprob: -2.5559422969818115
    5. '_mask' → logprob: -3.0559422969818115
    6. 'mask' → logprob: -4.680942058563232
    7. '_sum' → logprob: -4.930942058563232
    8. 's' → logprob: -5.555942058563232
    9. 'sum' → logprob: -5.805942058563232
    10. 'for' → logprob: -6.180942058563232

Token 212: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5241248607635498
    2. ' =' → logprob: -0.8991248607635498
    3. '(mask' → logprob: -7.274125099182129
    4. ')' → logprob: -9.399125099182129
    5. '[' → logprob: -9.524125099182129
    6. '   ' → logprob: -9.899125099182129
    7. ',' → logprob: -10.649125099182129
    8. '=sum' → logprob: -11.024125099182129
    9. '(' → logprob: -11.149125099182129
    10. ')=' → logprob: -11.524125099182129

Token 213: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.35166287422180176
    2. 'sum' → logprob: -1.2266628742218018
    3. 'weights' → logprob: -5.976662635803223
    4. ' sum' → logprob: -7.851662635803223
    5. ' ' → logprob: -9.101662635803223
    6. '
' → logprob: -9.851662635803223
    7. '(sum' → logprob: -10.601662635803223
    8. 'bin' → logprob: -10.726662635803223
    9. '   ' → logprob: -10.976662635803223
    10. 'numbers' → logprob: -11.726662635803223

Token 214: '0' (ID: 15)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.5279949307441711
    2. '0' → logprob: -0.9029949307441711
    3. 'weights' → logprob: -5.4029951095581055
    4. 'bin' → logprob: -8.652995109558105
    5. ' sum' → logprob: -9.902995109558105
    6. '(sum' → logprob: -10.277995109558105
    7. 'w' → logprob: -11.027995109558105
    8. '
' → logprob: -11.277995109558105
    9. 'numbers' → logprob: -11.277995109558105
    10. 'weight' → logprob: -11.652995109558105

Token 215: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8120189309120178
    2. 'for' → logprob: -1.437018871307373
    3. '<|end|>' → logprob: -2.062018871307373
    4. '
' → logprob: -2.187018871307373
    5. '   ' → logprob: -2.937018871307373
    6. ' ' → logprob: -4.562018871307373
    7. '<|end|>' → logprob: -5.562018871307373
    8. ')' → logprob: -5.937018871307373
    9. ' 
' → logprob: -6.187018871307373
    10. '	for' → logprob: -6.437018871307373

Token 216: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.10532698780298233
    2. 'for' → logprob: -2.7303268909454346
    3. '   ' → logprob: -3.7303268909454346
    4. '
' → logprob: -5.355327129364014
    5. '<|end|>' → logprob: -5.355327129364014
    6. '	for' → logprob: -7.730327129364014
    7. ' ' → logprob: -8.105326652526855
    8. ' 
' → logprob: -8.730326652526855
    9. '<|end|>' → logprob: -8.855326652526855
    10. '  ' → logprob: -9.730326652526855

Token 217: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00678796274587512
    2. '   ' → logprob: -5.2567877769470215
    3. ' for' → logprob: -6.5067877769470215
    4. 'i' → logprob: -10.25678825378418
    5. 'mask' → logprob: -11.25678825378418
    6. 'idx' → logprob: -12.25678825378418
    7. '
' → logprob: -13.75678825378418
    8. 'temp' → logprob: -14.25678825378418
    9. 'j' → logprob: -14.63178825378418
    10. 'tmp' → logprob: -14.63178825378418

Token 218: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.08496211469173431
    2. ' i' → logprob: -3.5849621295928955
    3. ' nxt' → logprob: -3.7099621295928955
    4. 'next' → logprob: -3.8349621295928955
    5. ' next' → logprob: -5.584961891174316
    6. 'k' → logprob: -5.709961891174316
    7. 'j' → logprob: -8.459961891174316
    8. '   ' → logprob: -9.459961891174316
    9. ' k' → logprob: -9.584961891174316
    10. 'n' → logprob: -9.959961891174316

Token 219: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020575406029820442
    2. 'in' → logprob: -3.895575523376465
    3. ' ' → logprob: -10.895575523376465
    4. ',' → logprob: -11.645575523376465
    5. '  ' → logprob: -13.395575523376465
    6. '   ' → logprob: -13.770575523376465
    7. '1' → logprob: -13.770575523376465
    8. '
' → logprob: -14.395575523376465
    9. '0' → logprob: -14.895575523376465
    10. ' ,' → logprob: -15.020575523376465

Token 220: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.038062259554862976
    2. ' range' → logprob: -3.288062334060669
    3. '   ' → logprob: -12.16306209564209
    4. '(range' → logprob: -12.28806209564209
    5. '[' → logprob: -13.03806209564209
    6. '```' → logprob: -13.53806209564209
    7. ' ' → logprob: -13.78806209564209
    8. '
' → logprob: -13.78806209564209
    9. '	range' → logprob: -13.78806209564209
    10. ')' → logprob: -14.16306209564209

Token 221: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0006752623594366014
    2. '(n' → logprob: -7.375675201416016
    3. ' n' → logprob: -10.125675201416016
    4. ')n' → logprob: -12.625675201416016
    5. '   ' → logprob: -13.375675201416016
    6. ')' → logprob: -13.625675201416016
    7. '	n' → logprob: -14.125675201416016
    8. '(' → logprob: -14.375675201416016
    9. '0' → logprob: -15.000675201416016
    10. '
' → logprob: -15.000675201416016

Token 222: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.005506357178092003
    2. '):' → logprob: -5.25550651550293
    3. '       ' → logprob: -9.25550651550293
    4. '):
' → logprob: -9.38050651550293
    5. ' ):
' → logprob: -9.88050651550293
    6. '   ' → logprob: -10.50550651550293
    7. ':
' → logprob: -12.38050651550293
    8. ',' → logprob: -13.38050651550293
    9. '
' → logprob: -13.63050651550293
    10. ')' → logprob: -13.75550651550293

Token 223: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1807960271835327
    2. ' if' → logprob: -1.4307960271835327
    3. ' ' → logprob: -1.5557960271835327
    4. '<|end|>' → logprob: -1.5557960271835327
    5. '    ' → logprob: -4.680796146392822
    6. ',' → logprob: -4.805796146392822
    7. '<|end|>' → logprob: -5.680796146392822
    8. '   ' → logprob: -5.930796146392822
    9. '     ' → logprob: -6.555796146392822
    10. '        ' → logprob: -6.555796146392822

Token 224: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.15168581902980804
    2. ' if' → logprob: -2.0266857147216797
    3. '       ' → logprob: -4.77668571472168
    4. '           ' → logprob: -8.40168571472168
    5. '   ' → logprob: -8.77668571472168
    6. ' ' → logprob: -10.02668571472168
    7. '
' → logprob: -10.27668571472168
    8. ' not' → logprob: -11.15168571472168
    9. '0' → logprob: -11.65168571472168
    10. '        ' → logprob: -11.65168571472168

Token 225: ' (' (ID: 350)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.6821725368499756
    2. '(mask' → logprob: -1.0571725368499756
    3. 'not' → logprob: -2.4321725368499756
    4. ' (' → logprob: -3.0571725368499756
    5. '(not' → logprob: -4.932172775268555
    6. 'mask' → logprob: -6.057172775268555
    7. ' mask' → logprob: -6.432172775268555
    8. '((' → logprob: -7.057172775268555
    9. ' ((' → logprob: -9.682172775268555
    10. '   ' → logprob: -10.432172775268555

Token 226: 'mask' (ID: 22527)
  Prédit: 'mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.05930110439658165
    2. '(mask' → logprob: -2.9343011379241943
    3. 'not' → logprob: -5.684300899505615
    4. ' mask' → logprob: -7.309300899505615
    5. '~' → logprob: -8.934301376342773
    6. ' not' → logprob: -9.309301376342773
    7. '(not' → logprob: -10.434301376342773
    8. ')' → logprob: -10.809301376342773
    9. ' (' → logprob: -11.059301376342773
    10. '_mask' → logprob: -11.684301376342773

Token 227: '>>' (ID: 3920)
  Prédit: ' &'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.1463252753019333
    2. '>>' → logprob: -2.3963253498077393
    3. '&' → logprob: -3.5213253498077393
    4. '&(' → logprob: -4.27132511138916
    5. ' >>' → logprob: -6.89632511138916
    6. ' &(' → logprob: -8.64632511138916
    7. '&i' → logprob: -8.64632511138916
    8. '>>(' → logprob: -9.64632511138916
    9. '>>&' → logprob: -10.39632511138916
    10. ')&' → logprob: -11.02132511138916

Token 228: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -4.036524842376821e-05
    2. ' i' → logprob: -10.125040054321289
    3. ')i' → logprob: -15.250040054321289
    4. '
' → logprob: -17.00004005432129
    5. ')' → logprob: -17.25004005432129
    6. '	i' → logprob: -17.37504005432129
    7. ' ' → logprob: -18.37504005432129
    8. '(i' → logprob: -18.37504005432129
    9. '   ' → logprob: -19.12504005432129
    10. '[i' → logprob: -19.37504005432129

Token 229: ')&' (ID: 34370)
  Prédit: ')&'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')&' → logprob: -0.20218084752559662
    2. ')' → logprob: -1.7021808624267578
    3. '&' → logprob: -7.202180862426758
    4. ' )' → logprob: -11.327180862426758
    5. ' &' → logprob: -11.702180862426758
    6. '&amp' → logprob: -14.577180862426758
    7. ')==' → logprob: -14.577180862426758
    8. '   ' → logprob: -15.327180862426758
    9. '&)' → logprob: -15.577180862426758
    10. '0' → logprob: -15.827180862426758

Token 230: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1269315630197525
    2. '0' → logprob: -2.126931667327881
    3. ' ' → logprob: -13.251931190490723
    4. '
' → logprob: -14.126931190490723
    5. '   ' → logprob: -14.751931190490723
    6. 'i' → logprob: -15.251931190490723
    7. 'False' → logprob: -16.50193214416504
    8. '01' → logprob: -16.75193214416504
    9. '```' → logprob: -17.12693214416504
    10. '

' → logprob: -17.25193214416504

Token 231: ':
' (ID: 734)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.04365191236138344
    2. ' ==' → logprob: -3.293651819229126
    3. ')==' → logprob: -5.418652057647705
    4. ']==' → logprob: -7.668652057647705
    5. '0' → logprob: -7.793652057647705
    6. ')' → logprob: -8.418651580810547
    7. '==
' → logprob: -10.918651580810547
    8. '()==' → logprob: -11.293651580810547
    9. ':' → logprob: -11.793651580810547
    10. ':
' → logprob: -11.793651580810547

Token 232: '           ' (ID: 352)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2918202877044678
    2. ' ==' → logprob: -1.5418202877044678
    3. ' continue' → logprob: -3.7918202877044678
    4. '0' → logprob: -4.791820526123047
    5. ' ' → logprob: -5.666820526123047
    6. '           ' → logprob: -6.041820526123047
    7. 'continue' → logprob: -6.916820526123047
    8. ')==' → logprob: -7.541820526123047
    9. '=' → logprob: -7.791820526123047
    10. '       ' → logprob: -9.041820526123047

Token 233: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.31615519523620605
    2. 'w' (adapté à ' w') → logprob: -1.316155195236206
    3. '
' → logprob: -6.691155433654785
    4. '       ' → logprob: -6.691155433654785
    5. '           ' → logprob: -8.441155433654785
    6. '   ' → logprob: -9.941155433654785
    7. ' continue' → logprob: -10.066155433654785
    8. ' +' → logprob: -11.316155433654785
    9. 'continue' → logprob: -11.316155433654785
    10. ' 
' → logprob: -11.441155433654785

Token 234: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -5.2166411478538066e-05
    2. '+=' → logprob: -10.250052452087402
    3. 'sum' → logprob: -11.875052452087402
    4. '=' → logprob: -12.250052452087402
    5. ' +=' → logprob: -13.250052452087402
    6. '_' → logprob: -14.000052452087402
    7. '=_' → logprob: -14.875052452087402
    8. 'w' → logprob: -15.125052452087402
    9. 'i' → logprob: -15.625052452087402
    10. '_s' → logprob: -15.625052452087402

Token 235: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.00034273360506631434
    2. ' +=' → logprob: -8.00034236907959
    3. '+' → logprob: -12.25034236907959
    4. ']+=' → logprob: -13.75034236907959
    5. '=' → logprob: -14.00034236907959
    6. '   ' → logprob: -14.50034236907959
    7. '+=(' → logprob: -16.750343322753906
    8. '    ' → logprob: -17.250343322753906
    9. '```' → logprob: -17.750343322753906
    10. '           ' → logprob: -18.125343322753906

Token 236: ' weights' (ID: 28460)
  Prédit: 'weights'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weights' → logprob: -4.036524842376821e-05
    2. ' weights' → logprob: -10.125040054321289
    3. '(weights' → logprob: -16.75004005432129
    4. '20' → logprob: -16.87504005432129
    5. 'weight' → logprob: -17.00004005432129
    6. '   ' → logprob: -17.37504005432129
    7. 'numbers' → logprob: -18.12504005432129
    8. '.weights' → logprob: -18.12504005432129
    9. '0' → logprob: -18.50004005432129
    10. 'Weights' → logprob: -18.62504005432129

Token 237: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.1054253011243418e-05
    2. 'i' → logprob: -11.000020980834961
    3. '[last' → logprob: -12.875020980834961
    4. '[' → logprob: -13.750020980834961
    5. 'last' → logprob: -15.750020980834961
    6. '[j' → logprob: -15.750020980834961
    7. ' [' → logprob: -16.87502098083496
    8. '(i' → logprob: -17.12502098083496
    9. '
' → logprob: -17.50002098083496
    10. '   ' → logprob: -17.50002098083496

Token 238: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007735815830528736
    2. ')
' → logprob: -5.757735729217529
    3. ')]' → logprob: -6.507735729217529
    4. ']' → logprob: -6.632735729217529
    5. ' )' → logprob: -7.132735729217529
    6. '])' → logprob: -7.757735729217529
    7. '<|end|>' → logprob: -8.132736206054688
    8. '
' → logprob: -10.007736206054688
    9. '       ' → logprob: -10.382736206054688
    10. ')+' → logprob: -10.882736206054688

Token 239: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.054984625428915024
    2. '       ' → logprob: -3.8049845695495605
    3. ' for' → logprob: -4.4299845695495605
    4. '
' → logprob: -5.5549845695495605
    5. ' 
' → logprob: -5.6799845695495605
    6. '    
' → logprob: -6.0549845695495605
    7. '<|end|>' → logprob: -6.0549845695495605
    8. ' ' → logprob: -6.3049845695495605
    9. ')' → logprob: -6.4299845695495605
    10. '  
' → logprob: -6.5549845695495605

Token 240: ' w' (ID: 286)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6382656097412109
    2. '   ' → logprob: -1.263265609741211
    3. 'for' → logprob: -2.263265609741211
    4. '
' → logprob: -3.013265609741211
    5. ' 
' → logprob: -4.388265609741211
    6. '    
' → logprob: -4.513265609741211
    7. '  
' → logprob: -5.138265609741211
    8. ' ' → logprob: -5.638265609741211
    9. '<|end|>' → logprob: -7.138265609741211
    10. ',' → logprob: -7.638265609741211

Token 241: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.0003662020608317107
    2. '_' → logprob: -9.2503662109375
    3. 'sum' → logprob: -9.3753662109375
    4. '=' → logprob: -9.3753662109375
    5. ' =' → logprob: -9.6253662109375
    6. '_s' → logprob: -10.7503662109375
    7. '=sum' → logprob: -12.8753662109375
    8. '=_' → logprob: -13.3753662109375
    9. ' +=' → logprob: -13.6253662109375
    10. '+=' → logprob: -13.7503662109375

Token 242: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.8118893504142761
    2. '+=' → logprob: -0.8118893504142761
    3. '=' → logprob: -2.436889410018921
    4. ' =' → logprob: -4.436889171600342
    5. '+' → logprob: -4.561889171600342
    6. ' +' → logprob: -6.311889171600342
    7. '   ' → logprob: -8.9368896484375
    8. ',' → logprob: -9.4368896484375
    9. '```' → logprob: -9.9368896484375
    10. '*=' → logprob: -10.8118896484375

Token 243: ' weights' (ID: 28460)
  Prédit: 'weights'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weights' → logprob: -0.010069242678582668
    2. ' weights' → logprob: -5.385069370269775
    3. 'numbers' → logprob: -6.010069370269775
    4. '0' → logprob: -6.510069370269775
    5. '20' → logprob: -7.010069370269775
    6. 'w' → logprob: -8.135068893432617
    7. '(weights' → logprob: -9.010068893432617
    8. 'weight' → logprob: -10.510068893432617
    9. 'sum' → logprob: -10.760068893432617
    10. 'dist' → logprob: -11.010068893432617

Token 244: '[last' (ID: 126100)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.03827420249581337
    2. '[last' → logprob: -3.2882742881774902
    3. '[' → logprob: -8.413273811340332
    4. '[next' → logprob: -12.163273811340332
    5. '[j' → logprob: -12.788273811340332
    6. 'last' → logprob: -14.413273811340332
    7. '[
' → logprob: -15.038273811340332
    8. '[-' → logprob: -15.413273811340332
    9. '[new' → logprob: -15.413273811340332
    10. '[current' → logprob: -15.413273811340332

Token 245: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04687929525971413
    2. ']
' → logprob: -3.671879291534424
    3. '])' → logprob: -4.046879291534424
    4. ')' → logprob: -6.171879291534424
    5. ' ]' → logprob: -8.421879768371582
    6. ')]' → logprob: -8.796879768371582
    7. '   ' → logprob: -9.171879768371582
    8. '])
' → logprob: -9.296879768371582
    9. ')
' → logprob: -9.796879768371582
    10. ']

' → logprob: -10.421879768371582

Token 246: ' if' (ID: 538)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5457842946052551
    2. '    
' → logprob: -2.1707842350006104
    3. ' 
' → logprob: -2.5457842350006104
    4. '<|end|>' → logprob: -2.6707842350006104
    5. '  
' → logprob: -2.7957842350006104
    6. '   ' → logprob: -2.7957842350006104
    7. '<|end|>' → logprob: -4.6707844734191895
    8. '        
' → logprob: -5.1707844734191895
    9. ' for' → logprob: -5.2957844734191895
    10. '   
' → logprob: -5.5457844734191895

Token 247: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.512378454208374
    2. ' last' → logprob: -1.887378454208374
    3. 'mask' → logprob: -2.762378454208374
    4. 'not' → logprob: -2.762378454208374
    5. ' not' → logprob: -2.887378454208374
    6. '(last' → logprob: -3.637378454208374
    7. ' mask' → logprob: -4.262378692626953
    8. ' (' → logprob: -4.762378692626953
    9. '(mask' → logprob: -5.137378692626953
    10. '0' → logprob: -5.262378692626953

Token 248: '>=' (ID: 20974)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.05783958360552788
    2. ' !=' → logprob: -3.5578396320343018
    3. '==' → logprob: -4.557839393615723
    4. ' is' → logprob: -4.682839393615723
    5. '>=' → logprob: -5.682839393615723
    6. '!=-' → logprob: -5.807839393615723
    7. 'is' → logprob: -7.557839393615723
    8. '>' → logprob: -7.682839393615723
    9. 'else' → logprob: -8.682839393615723
    10. ' ==' → logprob: -9.057839393615723

Token 249: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001093841710826382
    2. ' ' → logprob: -9.125109672546387
    3. '1' → logprob: -14.625109672546387
    4. '
' → logprob: -16.75010871887207
    5. 'else' → logprob: -17.37510871887207
    6. '   ' → logprob: -17.81260871887207
    7. '۰' → logprob: -19.00010871887207
    8. '```' → logprob: -19.06260871887207
    9. 'n' → logprob: -19.31260871887207
    10. '  ' → logprob: -19.43760871887207

Token 250: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.0276779942214489
    2. 'else' → logprob: -3.6526780128479004
    3. '
' → logprob: -7.7776780128479
    4. ' ' → logprob: -8.027677536010742
    5. '<|end|>' → logprob: -8.527677536010742
    6. ' 
' → logprob: -9.152677536010742
    7. '   ' → logprob: -9.277677536010742
    8. '<|end|>' → logprob: -9.902677536010742
    9. '	else' → logprob: -10.027677536010742
    10. ')' → logprob: -10.527677536010742

Token 251: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0028060602489858866
    2. ' ' → logprob: -5.877806186676025
    3. '   ' → logprob: -14.002805709838867
    4. '20' → logprob: -16.252805709838867
    5. ' ' → logprob: -16.252805709838867
    6. '  ' → logprob: -17.252805709838867
    7. '```' → logprob: -17.502805709838867
    8. '=' → logprob: -17.815305709838867
    9. '    ' → logprob: -17.815305709838867
    10. '00' → logprob: -18.252805709838867

Token 252: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1637164789135568e-05
    2. ' ' → logprob: -11.375011444091797
    3. '   ' → logprob: -17.500011444091797
    4. '```' → logprob: -17.750011444091797
    5. '20' → logprob: -18.500011444091797
    6. '00' → logprob: -19.000011444091797
    7. ' ' → logprob: -20.250011444091797
    8. '۰' → logprob: -20.312511444091797
    9. '000' → logprob: -20.562511444091797
    10. '1' → logprob: -20.625011444091797

Token 253: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20565354824066162
    2. '   ' → logprob: -2.580653667449951
    3. '<|end|>' → logprob: -3.330653667449951
    4. '    
' → logprob: -3.455653667449951
    5. ' 
' → logprob: -3.705653667449951
    6. '  
' → logprob: -4.705653667449951
    7. '<|end|>' → logprob: -5.330653667449951
    8. ' for' → logprob: -6.455653667449951
    9. '   
' → logprob: -7.580653667449951
    10. ')' → logprob: -7.705653667449951

Token 254: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.33011361956596375
    2. '<|end|>' → logprob: -2.080113649368286
    3. ' 
' → logprob: -2.705113649368286
    4. '  
' → logprob: -3.455113649368286
    5. '   ' → logprob: -3.830113649368286
    6. '    
' → logprob: -3.955113649368286
    7. ' for' → logprob: -5.080113410949707
    8. '<|end|>' → logprob: -5.830113410949707
    9. ' ' → logprob: -6.080113410949707
    10. ')' → logprob: -6.955113410949707

Token 255: ' hold' (ID: 5060)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 256: ' last' (ID: 2174)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 257: ' warehouse' (ID: 39422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0467958450317383
    2. '+' → logprob: -1.4217958450317383
    3. ' +' → logprob: -1.5467958450317383
    4. ' if' → logprob: -2.9217958450317383
    5. ')' → logprob: -3.0467958450317383
    6. ' 
' → logprob: -3.6717958450317383
    7. '<|end|>' → logprob: -4.421795845031738
    8. ' and' → logprob: -4.546795845031738
    9. '
' → logprob: -5.046795845031738
    10. '  
' → logprob: -5.296795845031738

Token 258: ''s' (ID: 885)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6943484544754028
    2. ' 
' → logprob: -1.5693484544754028
    3. '    
' → logprob: -2.0693483352661133
    4. '   ' → logprob: -2.4443483352661133
    5. '  
' → logprob: -3.3193483352661133
    6. '        
' → logprob: -4.944348335266113
    7. '<|end|>' → logprob: -4.944348335266113
    8. ' ' → logprob: -5.194348335266113
    9. '       ' → logprob: -5.319348335266113
    10. '   
' → logprob: -5.944348335266113

Token 259: ' boxes' (ID: 21967)
  Prédit: 'weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weight' → logprob: -0.8775374889373779
    2. ' weight' → logprob: -1.002537488937378
    3. 'weights' → logprob: -1.877537488937378
    4. ' weights' → logprob: -3.002537488937378
    5. ' load' → logprob: -5.127537727355957
    6. 'load' → logprob: -6.502537727355957
    7. 'w' → logprob: -6.877537727355957
    8. ' ' → logprob: -7.377537727355957
    9. ' cargo' → logprob: -7.627537727355957
    10. ' boxes' → logprob: -7.877537727355957

Token 260: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38809454441070557
    2. '
' → logprob: -1.8880945444107056
    3. ' 
' → logprob: -2.763094425201416
    4. ' for' → logprob: -3.388094425201416
    5. '    
' → logprob: -3.388094425201416
    6. '<|end|>' → logprob: -4.388094425201416
    7. '  
' → logprob: -4.763094425201416
    8. ' if' → logprob: -5.263094425201416
    9. ')' → logprob: -5.638094425201416
    10. '<|end|>' → logprob: -6.388094425201416

Token 261: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5033571124076843
    2. ' for' → logprob: -1.378357172012329
    3. ' 
' → logprob: -3.003357172012329
    4. '<|end|>' → logprob: -3.003357172012329
    5. '    
' → logprob: -4.00335693359375
    6. '
' → logprob: -5.25335693359375
    7. 'for' → logprob: -5.50335693359375
    8. '  
' → logprob: -5.50335693359375
    9. ' ' → logprob: -5.75335693359375
    10. ')' → logprob: -6.25335693359375

Token 262: ' curr' (ID: 10495)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.19793318212032318
    2. 'for' → logprob: -2.3229331970214844
    3. '   ' → logprob: -2.5729331970214844
    4. ' 
' → logprob: -6.322933197021484
    5. '    
' → logprob: -6.947933197021484
    6. ' ' → logprob: -7.572933197021484
    7. ' if' → logprob: -7.697933197021484
    8. '
' → logprob: -8.197933197021484
    9. ')' → logprob: -8.197933197021484
    10. '  
' → logprob: -8.322933197021484

Token 263: '_weight' (ID: 34711)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.6255650520324707
    2. '_speed' → logprob: -1.0005650520324707
    3. '_dist' → logprob: -3.1255650520324707
    4. '_' → logprob: -3.3755650520324707
    5. ' =' → logprob: -5.125565052032471
    6. '=' → logprob: -5.625565052032471
    7. '_distance' → logprob: -5.750565052032471
    8. '_mask' → logprob: -6.250565052032471
    9. '_res' → logprob: -7.250565052032471
    10. 'time' → logprob: -7.625565052032471

Token 264: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.42891985177993774
    2. '=' → logprob: -1.053919792175293
    3. ',' → logprob: -9.178919792175293
    4. ')' → logprob: -10.053919792175293
    5. '/' → logprob: -10.928919792175293
    6. ' /' → logprob: -11.178919792175293
    7. '   ' → logprob: -11.178919792175293
    8. ' +=' → logprob: -12.303919792175293
    9. '+' → logprob: -12.553919792175293
    10. '_' → logprob: -13.178919792175293

Token 265: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.08534485101699829
    2. ' w' → logprob: -3.0853447914123535
    3. 'weights' → logprob: -3.8353447914123535
    4. 'max' → logprob: -5.7103447914123535
    5. ' max' → logprob: -5.9603447914123535
    6. '0' → logprob: -6.0853447914123535
    7. ' weights' → logprob: -6.4603447914123535
    8. '200' → logprob: -6.4603447914123535
    9. ' ' → logprob: -6.9603447914123535
    10. '   ' → logprob: -7.5853447914123535

Token 266: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.00010688089241739362
    2. '_' → logprob: -9.750106811523438
    3. 'sum' → logprob: -10.250106811523438
    4. ' _' → logprob: -12.500106811523438
    5. '_s' → logprob: -12.875106811523438
    6. '+' → logprob: -14.250106811523438
    7. '=' → logprob: -14.250106811523438
    8. '_mask' → logprob: -14.625106811523438
    9. '_SUM' → logprob: -14.750106811523438
    10. '\' → logprob: -14.750106811523438

Token 267: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7810928225517273
    2. ' +' → logprob: -1.156092882156372
    3. '   ' → logprob: -1.781092882156372
    4. '
' → logprob: -4.156092643737793
    5. ')' → logprob: -4.406092643737793
    6. ' if' → logprob: -4.656092643737793
    7. '-' → logprob: -5.656092643737793
    8. '    
' → logprob: -5.656092643737793
    9. ' -' → logprob: -6.031092643737793
    10. ' /' → logprob: -6.781092643737793

Token 268: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.050002746284008026
    2. ' for' → logprob: -3.6750028133392334
    3. '<|end|>' → logprob: -4.675002574920654
    4. '    
' → logprob: -5.800002574920654
    5. '
' → logprob: -5.800002574920654
    6. ')' → logprob: -6.050002574920654
    7. '<|end|>' → logprob: -6.175002574920654
    8. ' 
' → logprob: -6.425002574920654
    9. 'for' → logprob: -7.550002574920654
    10. ',' → logprob: -7.925002574920654

Token 269: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.14468108117580414
    2. 'for' → logprob: -2.644680976867676
    3. '   ' → logprob: -2.769680976867676
    4. '<|end|>' → logprob: -7.894680976867676
    5. ')' → logprob: -9.019680976867676
    6. '    
' → logprob: -9.269680976867676
    7. ' ' → logprob: -9.644680976867676
    8. '	for' → logprob: -9.769680976867676
    9. ' 
' → logprob: -9.894680976867676
    10. '
' → logprob: -9.894680976867676

Token 270: ' If' (ID: 1843)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.25335532426834106
    2. 'for' → logprob: -1.5033552646636963
    3. '   ' → logprob: -7.253355503082275
    4. ' if' → logprob: -7.503355503082275
    5. 'if' → logprob: -9.128355026245117
    6. ')' → logprob: -10.878355026245117
    7. ' next' → logprob: -11.003355026245117
    8. 'next' → logprob: -12.503355026245117
    9. 'from' → logprob: -13.128355026245117
    10. ' ' → logprob: -13.878355026245117

Token 271: ' last' (ID: 2174)
  Prédit: ' last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' last' → logprob: -0.5300028920173645
    2. 'last' → logprob: -0.9050028920173645
    3. 'curr' → logprob: -5.655003070831299
    4. ' curr' → logprob: -5.905003070831299
    5. ' mask' → logprob: -8.15500259399414
    6. 'mask' → logprob: -8.53000259399414
    7. '(last' → logprob: -10.15500259399414
    8. ' not' → logprob: -10.28000259399414
    9. 'not' → logprob: -11.59250259399414
    10. 'w' → logprob: -11.71750259399414

Token 272: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.43586575984954834
    2. ' <' → logprob: -2.185865879058838
    3. '<' → logprob: -2.435865879058838
    4. '==' → logprob: -2.560865879058838
    5. '>=' → logprob: -3.185865879058838
    6. ' >=' → logprob: -3.810865879058838
    7. '==-' → logprob: -4.685865879058838
    8. ' !=' → logprob: -6.685865879058838
    9. ')' → logprob: -7.310865879058838
    10. ' ' → logprob: -7.560865879058838

Token 273: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0009117019944824278
    2. ' -' → logprob: -7.000911712646484
    3. '   ' → logprob: -15.750911712646484
    4. ' ' → logprob: -16.125911712646484
    5. '=' → logprob: -18.125911712646484
    6. '
' → logprob: -18.250911712646484
    7. '-
' → logprob: -18.375911712646484
    8. '  ' → logprob: -19.000911712646484
    9. '```' → logprob: -19.750911712646484
    10. '=-' → logprob: -19.875911712646484

Token 274: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00033760786755010486
    2. ' ' → logprob: -8.000337600708008
    3. '   ' → logprob: -14.500337600708008
    4. ',' → logprob: -14.500337600708008
    5. '
' → logprob: -15.625337600708008
    6. '```' → logprob: -16.250337600708008
    7. '=' → logprob: -16.375337600708008
    8. ')' → logprob: -16.375337600708008
    9. ' ' → logprob: -16.437837600708008
    10. ' -' → logprob: -16.437837600708008

Token 275: ' means' (ID: 4748)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016720391809940338
    2. ':
' → logprob: -4.516720294952393
    3. ',' → logprob: -5.641720294952393
    4. '   ' → logprob: -7.391720294952393
    5. ' and' → logprob: -7.641720294952393
    6. ':return' → logprob: -7.766720294952393
    7. ' :' → logprob: -8.01672077178955
    8. ' or' → logprob: -8.76672077178955
    9. '):' → logprob: -10.64172077178955
    10. ' :
' → logprob: -11.39172077178955

Token 276: ' starting' (ID: 8601)
  Prédit: ' no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' no' → logprob: -0.6748269200325012
    2. ' we' → logprob: -1.5498268604278564
    3. 'we' → logprob: -2.5498268604278564
    4. ' True' → logprob: -3.0498268604278564
    5. ' starting' → logprob: -3.1748268604278564
    6. 'no' → logprob: -3.6748268604278564
    7. ' not' → logprob: -3.7998268604278564
    8. 'starting' → logprob: -4.1748270988464355
    9. ' start' → logprob: -4.5498270988464355
    10. 'not' → logprob: -4.6748270988464355

Token 277: ' state' (ID: 2608)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.8994224071502686
    2. 'point' → logprob: -2.0244224071502686
    3. ' point' → logprob: -2.1494224071502686
    4. ' at' → logprob: -2.2744224071502686
    5. ' from' → logprob: -2.2744224071502686
    6. ',' → logprob: -3.0244224071502686
    7. 'state' → logprob: -3.0244224071502686
    8. ' state' → logprob: -4.774422645568848
    9. ':' → logprob: -5.399422645568848
    10. 'return' → logprob: -5.774422645568848

Token 278: ' before' (ID: 2254)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30800148844718933
    2. ' for' → logprob: -1.9330015182495117
    3. '
' → logprob: -2.5580015182495117
    4. '<|end|>' → logprob: -3.9330015182495117
    5. '    
' → logprob: -5.058001518249512
    6. 'for' → logprob: -5.433001518249512
    7. ',' → logprob: -5.683001518249512
    8. '<|end|>' → logprob: -5.808001518249512
    9. ' 
' → logprob: -6.433001518249512
    10. ':' → logprob: -6.558001518249512

Token 279: ' first' (ID: 1577)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.7315316200256348
    2. ' visiting' → logprob: -1.4815316200256348
    3. 'vis' → logprob: -1.6065316200256348
    4. ' any' → logprob: -3.6065316200256348
    5. 'the' → logprob: -3.8565316200256348
    6. 'first' → logprob: -4.356531620025635
    7. 'starting' → logprob: -4.606531620025635
    8. 'delivery' → logprob: -5.731531620025635
    9. 'p' → logprob: -5.981531620025635
    10. 'making' → logprob: -6.106531620025635

Token 280: ' warehouse' (ID: 39422)
  Prédit: ' move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' move' → logprob: -1.0510737895965576
    2. 'move' → logprob: -1.6760737895965576
    3. 'warehouse' → logprob: -2.3010737895965576
    4. ')' → logprob: -2.8010737895965576
    5. ' warehouse' → logprob: -3.4260737895965576
    6. 'visit' → logprob: -3.6760737895965576
    7. '):
' → logprob: -3.6760737895965576
    8. '_' → logprob: -3.8010737895965576
    9. ',' → logprob: -3.8010737895965576
    10. '_move' → logprob: -3.9260737895965576

Token 281: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11227137595415115
    2. ':' → logprob: -2.737271308898926
    3. ',' → logprob: -4.362271308898926
    4. '
' → logprob: -4.487271308898926
    5. ' for' → logprob: -5.237271308898926
    6. ')' → logprob: -6.112271308898926
    7. '    
' → logprob: -6.362271308898926
    8. ':
' → logprob: -6.862271308898926
    9. ' :' → logprob: -7.112271308898926
    10. ',
' → logprob: -7.237271308898926

Token 282: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14519444108009338
    2. ':' → logprob: -2.3951945304870605
    3. ' for' → logprob: -3.8951945304870605
    4. 'for' → logprob: -4.8951945304870605
    5. ',' → logprob: -5.3951945304870605
    6. '    
' → logprob: -5.8951945304870605
    7. '
' → logprob: -6.0201945304870605
    8. ':
' → logprob: -7.0201945304870605
    9. ' :' → logprob: -7.3951945304870605
    10. ' 
' → logprob: -7.6451945304870605

Token 283: ' start' (ID: 1604)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.9869064092636108
    2. '   ' → logprob: -1.4869064092636108
    3. ' ' → logprob: -2.1119065284729004
    4. ' if' → logprob: -2.2369065284729004
    5. ':' → logprob: -3.3619065284729004
    6. ' for' → logprob: -3.7369065284729004
    7. 'if' → logprob: -3.7369065284729004
    8. '
' → logprob: -3.7369065284729004
    9. '    
' → logprob: -4.1119065284729
    10. 'n' → logprob: -4.7369065284729

Token 284: '_pos' (ID: 14692)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.42338085174560547
    2. '=' → logprob: -1.4233808517456055
    3. '_' → logprob: -3.4233808517456055
    4. '_state' → logprob: -4.0483808517456055
    5. 'if' → logprob: -4.5483808517456055
    6. '_mask' → logprob: -4.6733808517456055
    7. '_time' → logprob: -4.7983808517456055
    8. '_weight' → logprob: -5.4233808517456055
    9. ',' → logprob: -5.6733808517456055
    10. '_idx' → logprob: -6.0483808517456055

Token 285: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47435107827186584
    2. ' =' → logprob: -0.9743510484695435
    3. ',' → logprob: -8.599350929260254
    4. '   ' → logprob: -10.474350929260254
    5. 'if' → logprob: -10.849350929260254
    6. ')' → logprob: -11.474350929260254
    7. '=-' → logprob: -11.474350929260254
    8. ' if' → logprob: -12.599350929260254
    9. ' ==' → logprob: -12.974350929260254
    10. '_idx' → logprob: -13.099350929260254

Token 286: ' -' (ID: 533)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03500007092952728
    2. 'dist' → logprob: -3.5350000858306885
    3. ' ' → logprob: -5.659999847412109
    4. ' dist' → logprob: -6.409999847412109
    5. '-' → logprob: -10.03499984741211
    6. '(dist' → logprob: -11.40999984741211
    7. '(' → logprob: -11.47249984741211
    8. '   ' → logprob: -11.72249984741211
    9. '	dist' → logprob: -12.28499984741211
    10. ' -' → logprob: -12.40999984741211

Token 287: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008959780680015683
    2. 'dist' → logprob: -7.125895977020264
    3. '20' → logprob: -9.750896453857422
    4. '-' → logprob: -11.750896453857422
    5. 'distance' → logprob: -12.500896453857422
    6. '200' → logprob: -12.625896453857422
    7. ' ' → logprob: -12.750896453857422
    8. 'sys' → logprob: -12.750896453857422
    9. 'ware' → logprob: -13.000896453857422
    10. '(' → logprob: -13.250896453857422

Token 288: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 289: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.023246292024850845
    2. ' last' → logprob: -3.7732462882995605
    3. '(last' → logprob: -15.273246765136719
    4. 'lasti' → logprob: -15.398246765136719
    5. '	last' → logprob: -15.648246765136719
    6. 'Last' → logprob: -17.02324676513672
    7. 'len' → logprob: -17.39824676513672
    8. ' ' → logprob: -17.39824676513672
    9. 'start' → logprob: -17.52324676513672
    10. '[last' → logprob: -17.64824676513672

Token 290: '<' (ID: 27)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.46684300899505615
    2. '==' → logprob: -1.4668430089950562
    3. '==-' → logprob: -1.9668430089950562
    4. '<' → logprob: -6.216843128204346
    5. ' <' → logprob: -8.466842651367188
    6. ' ' → logprob: -9.591842651367188
    7. ')==' → logprob: -9.966842651367188
    8. ']==' → logprob: -9.966842651367188
    9. ')' → logprob: -10.216842651367188
    10. '=' → logprob: -11.091842651367188

Token 291: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.584861744660884e-05
    2. ' ' → logprob: -10.000045776367188
    3. '1' → logprob: -15.000045776367188
    4. '=' → logprob: -16.875045776367188
    5. '
' → logprob: -18.875045776367188
    6. '```' → logprob: -19.375045776367188
    7. '2' → logprob: -20.187545776367188
    8. '۰' → logprob: -20.312545776367188
    9. '  ' → logprob: -20.437545776367188
    10. ' =' → logprob: -20.437545776367188

Token 292: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.020552631467580795
    2. 'else' → logprob: -3.895552635192871
    3. '	else' → logprob: -12.145552635192871
    4. '<|end|>' → logprob: -13.395552635192871
    5. ' ' → logprob: -14.145552635192871
    6. '<|end|>' → logprob: -14.520552635192871
    7. '0' → logprob: -14.645552635192871
    8. ')' → logprob: -15.145552635192871
    9. ' ' → logprob: -15.208052635192871
    10. '_else' → logprob: -15.520552635192871

Token 293: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.1737448126077652
    2. 'dist' → logprob: -1.923744797706604
    3. ' last' → logprob: -4.7987446784973145
    4. ' dist' → logprob: -5.2987446784973145
    5. 'numbers' → logprob: -9.548745155334473
    6. 'ware' → logprob: -10.423745155334473
    7. ' ' → logprob: -10.548745155334473
    8. '   ' → logprob: -11.423745155334473
    9. 'weights' → logprob: -11.798745155334473
    10. ' warehouses' → logprob: -11.986245155334473

Token 294: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19457492232322693
    2. '<|end|>' → logprob: -2.3195748329162598
    3. ' for' → logprob: -3.3195748329162598
    4. '   ' → logprob: -4.31957483291626
    5. '<|end|>' → logprob: -4.69457483291626
    6. 'for' → logprob: -4.81957483291626
    7. ')' → logprob: -5.31957483291626
    8. ' 
' → logprob: -6.69457483291626
    9. '    
' → logprob: -6.81957483291626
    10. '  
' → logprob: -6.94457483291626

Token 295: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.122582197189331
    2. '   ' → logprob: -1.247582197189331
    3. '
' → logprob: -1.247582197189331
    4. 'for' → logprob: -3.247582197189331
    5. ' 
' → logprob: -3.872582197189331
    6. '    
' → logprob: -4.74758243560791
    7. ':' → logprob: -4.87258243560791
    8. ')' → logprob: -5.24758243560791
    9. '\n' → logprob: -5.24758243560791
    10. '  
' → logprob: -5.74758243560791

Token 296: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.47866499423980713
    2. 'for' → logprob: -1.2286649942398071
    3. '   ' → logprob: -2.4786648750305176
    4. ' 
' → logprob: -6.728664875030518
    5. ')' → logprob: -7.103664875030518
    6. '
' → logprob: -7.228664875030518
    7. '    
' → logprob: -7.353664875030518
    8. ' ' → logprob: -8.728665351867676
    9. '  
' → logprob: -9.603665351867676
    10. '	for' → logprob: -10.103665351867676

Token 297: ' If' (ID: 1843)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3870915472507477
    2. ' for' → logprob: -1.1370915174484253
    3. '   ' → logprob: -8.512091636657715
    4. 'if' → logprob: -12.012091636657715
    5. ' if' → logprob: -12.387091636657715
    6. 'i' → logprob: -13.262091636657715
    7. ' i' → logprob: -13.262091636657715
    8. 'next' → logprob: -13.637091636657715
    9. '
' → logprob: -14.137091636657715
    10. 'range' → logprob: -14.512091636657715

Token 298: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.6038123369216919
    2. ' last' → logprob: -0.9788123369216919
    3. 'start' → logprob: -3.3538122177124023
    4. ' start' → logprob: -3.4788122177124023
    5. 'curr' → logprob: -5.353812217712402
    6. ' curr' → logprob: -5.478812217712402
    7. 'mask' → logprob: -6.978812217712402
    8. ' mask' → logprob: -7.228812217712402
    9. '(last' → logprob: -8.603812217712402
    10. 'dist' → logprob: -8.853812217712402

Token 299: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4871481657028198
    2. '<' → logprob: -1.6121481657028198
    3. '==' → logprob: -1.9871481657028198
    4. ' <' → logprob: -3.3621482849121094
    5. '==-' → logprob: -4.362148284912109
    6. '>=' → logprob: -7.237148284912109
    7. ')' → logprob: -8.48714828491211
    8. ' >=' → logprob: -8.48714828491211
    9. ' !=' → logprob: -8.61214828491211
    10. '!=' → logprob: -9.61214828491211

Token 300: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.008624620735645294
    2. ' -' → logprob: -4.75862455368042
    3. 'n' → logprob: -12.133625030517578
    4. ' ' → logprob: -13.883625030517578
    5. '0' → logprob: -14.008625030517578
    6. ' n' → logprob: -14.008625030517578
    7. '1' → logprob: -14.258625030517578
    8. '   ' → logprob: -14.383625030517578
    9. '
' → logprob: -15.383625030517578
    10. '=' → logprob: -15.508625030517578

Token 301: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.023585401475429535
    2. '-' → logprob: -3.773585319519043
    3. ' -' → logprob: -8.148585319519043
    4. ' ' → logprob: -10.148585319519043
    5. '<' → logprob: -12.898585319519043
    6. '```' → logprob: -13.523585319519043
    7. '=-' → logprob: -14.023585319519043
    8. '=' → logprob: -14.148585319519043
    9. ')' → logprob: -14.523585319519043
    10. '   ' → logprob: -14.523585319519043

Token 302: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1178554967045784
    2. ':
' → logprob: -2.6178555488586426
    3. '   ' → logprob: -3.3678555488586426
    4. ':return' → logprob: -6.117855548858643
    5. '):' → logprob: -8.117855072021484
    6. '       ' → logprob: -8.117855072021484
    7. ' :' → logprob: -8.242855072021484
    8. '==' → logprob: -8.492855072021484
    9. ' and' → logprob: -8.867855072021484
    10. 'return' → logprob: -9.742855072021484

Token 303: ' we' (ID: 581)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3400401473045349
    2. ' for' → logprob: -1.3400402069091797
    3. '   ' → logprob: -3.7150402069091797
    4. ' res' → logprob: -7.59004020690918
    5. 'return' → logprob: -8.21504020690918
    6. ' next' → logprob: -8.34004020690918
    7. '#' → logprob: -8.34004020690918
    8. 'next' → logprob: -8.34004020690918
    9. ' return' → logprob: -8.71504020690918
    10. 'res' → logprob: -8.84004020690918

Token 304: ' must' (ID: 2804)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9513481855392456
    2. ' return' → logprob: -0.9513481855392456
    3. 'return' → logprob: -2.826348304748535
    4. ':' → logprob: -3.201348304748535
    5. ' for' → logprob: -3.326348304748535
    6. ' have' → logprob: -3.451348304748535
    7. 'for' → logprob: -4.076348304748535
    8. ' continue' → logprob: -4.451348304748535
    9. ' can' → logprob: -5.201348304748535
    10. ' are' → logprob: -5.576348304748535

Token 305: ' choose' (ID: 5655)
  Prédit: 'visit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visit' → logprob: -0.9042404890060425
    2. 'start' → logprob: -1.0292404890060425
    3. 'for' → logprob: -2.404240608215332
    4. 'go' → logprob: -3.154240608215332
    5. 'choose' → logprob: -3.654240608215332
    6. 'pick' → logprob: -3.779240608215332
    7. 'consider' → logprob: -4.029240608215332
    8. ' visit' → logprob: -4.779240608215332
    9. 'return' → logprob: -5.154240608215332
    10. 'move' → logprob: -5.279240608215332

Token 306: ' first' (ID: 1577)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.22532403469085693
    2. 'next' → logprob: -2.3503241539001465
    3. ' next' → logprob: -3.2253241539001465
    4. ' i' → logprob: -3.3503241539001465
    5. 'first' → logprob: -4.9753241539001465
    6. 'a' → logprob: -4.9753241539001465
    7. 'the' → logprob: -5.4753241539001465
    8. ' the' → logprob: -5.6003241539001465
    9. ' a' → logprob: -6.1003241539001465
    10. 'for' → logprob: -6.2253241539001465

Token 307: ' warehouse' (ID: 39422)
  Prédit: ' warehouse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' warehouse' → logprob: -0.8679250478744507
    2. 'warehouse' → logprob: -1.7429250478744507
    3. ':' → logprob: -2.3679251670837402
    4. ' i' → logprob: -2.7429251670837402
    5. ' next' → logprob: -2.9929251670837402
    6. 'i' → logprob: -2.9929251670837402
    7. ')' → logprob: -3.4929251670837402
    8. ' for' → logprob: -3.8679251670837402
    9. 'next' → logprob: -4.24292516708374
    10. '=' → logprob: -4.61792516708374

Token 308: ' to' (ID: 316)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0841861963272095
    2. ' for' → logprob: -1.0841861963272095
    3. '   ' → logprob: -1.3341861963272095
    4. 'for' → logprob: -4.20918607711792
    5. ':
' → logprob: -4.20918607711792
    6. ',' → logprob: -4.95918607711792
    7. '
' → logprob: -5.58418607711792
    8. ' ' → logprob: -5.95918607711792
    9. '.' → logprob: -6.08418607711792
    10. '<|end|>' → logprob: -6.08418607711792

Token 309: ' visit' (ID: 4030)
  Prédit: 'visit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visit' → logprob: -0.10081923753023148
    2. ' visit' → logprob: -2.7258193492889404
    3. 'pick' → logprob: -4.475819110870361
    4. 'go' → logprob: -5.100819110870361
    5. 'continue' → logprob: -5.475819110870361
    6. 'start' → logprob: -5.850819110870361
    7. 'deliver' → logprob: -6.600819110870361
    8. ' pick' → logprob: -7.600819110870361
    9. 'pickup' → logprob: -7.600819110870361
    10. ' go' → logprob: -7.725819110870361

Token 310: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2875116765499115
    2. '   ' → logprob: -1.7875117063522339
    3. 'for' → logprob: -2.6625115871429443
    4. ':' → logprob: -5.037511825561523
    5. '
' → logprob: -5.912511825561523
    6. ',' → logprob: -7.037511825561523
    7. ':
' → logprob: -7.787511825561523
    8. ' ' → logprob: -8.412511825561523
    9. '    
' → logprob: -8.537511825561523
    10. ' if' → logprob: -8.662511825561523

Token 311: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3892701268196106
    2. ' for' → logprob: -1.6392700672149658
    3. 'for' → logprob: -3.014270067214966
    4. ':
' → logprob: -3.639270067214966
    5. '   ' → logprob: -3.764270067214966
    6. ' 
' → logprob: -4.639270305633545
    7. '
' → logprob: -5.264270305633545
    8. ' :' → logprob: -5.764270305633545
    9. ' ' → logprob: -6.139270305633545
    10. ')' → logprob: -6.639270305633545

Token 312: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.4133012294769287
    2. 'if' → logprob: -1.6633012294769287
    3. ' for' → logprob: -2.1633012294769287
    4. ' if' → logprob: -3.5383012294769287
    5. '   ' → logprob: -5.788301467895508
    6. 'i' → logprob: -6.663301467895508
    7. ' i' → logprob: -8.288301467895508
    8. 'next' → logprob: -8.413301467895508
    9. ' next' → logprob: -9.288301467895508
    10. 'return' → logprob: -9.788301467895508

Token 313: ' nxt' (ID: 160200)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0029088929295539856
    2. ' i' → logprob: -6.377908706665039
    3. 'next' → logprob: -6.877908706665039
    4. ' next' → logprob: -9.627908706665039
    5. ' nxt' → logprob: -9.752908706665039
    6. '   ' → logprob: -10.502908706665039
    7. 'j' → logprob: -11.252908706665039
    8. '```' → logprob: -12.252908706665039
    9. 'n' → logprob: -13.502908706665039
    10. '_next' → logprob: -14.252908706665039

Token 314: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.033722586929798126
    2. 'in' → logprob: -3.4087226390838623
    3. 'i' → logprob: -10.658722877502441
    4. ' ' → logprob: -10.658722877502441
    5. ' i' → logprob: -11.283722877502441
    6. '```' → logprob: -12.283722877502441
    7. ')' → logprob: -12.783722877502441
    8. '   ' → logprob: -12.783722877502441
    9. '  ' → logprob: -13.783722877502441
    10. '	in' → logprob: -13.908722877502441

Token 315: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.08894839882850647
    2. ' range' → logprob: -2.4639484882354736
    3. '(range' → logprob: -11.838948249816895
    4. 'n' → logprob: -14.088948249816895
    5. ' ' → logprob: -15.088948249816895
    6. '   ' → logprob: -15.713948249816895
    7. '	range' → logprob: -16.21394920349121
    8. '(' → logprob: -16.58894920349121
    9. '```' → logprob: -16.71394920349121
    10. '
' → logprob: -17.08894920349121

Token 316: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0052680266089737415
    2. '(n' → logprob: -5.255268096923828
    3. 'start' → logprob: -11.380268096923828
    4. '(' → logprob: -11.630268096923828
    5. ' n' → logprob: -12.130268096923828
    6. '
' → logprob: -12.755268096923828
    7. '0' → logprob: -13.880268096923828
    8. '   ' → logprob: -14.005268096923828
    9. 'if' → logprob: -14.005268096923828
    10. ')' → logprob: -14.380268096923828

Token 317: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5761678814888
    2. '):' → logprob: -0.8261678814888
    3. '):
' → logprob: -9.201168060302734
    4. ' ):' → logprob: -9.826168060302734
    5. ' ):
' → logprob: -10.201168060302734
    6. ':' → logprob: -11.451168060302734
    7. '   ' → logprob: -11.701168060302734
    8. '):

' → logprob: -11.826168060302734
    9. ')' → logprob: -12.701168060302734
    10. '+' → logprob: -13.076168060302734

Token 318: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025186238810420036
    2. ' if' → logprob: -3.77518630027771
    3. '   ' → logprob: -7.025186061859131
    4. '<|end|>' → logprob: -7.775186061859131
    5. ',' → logprob: -8.275186538696289
    6. '    ' → logprob: -8.900186538696289
    7. '<|end|>' → logprob: -9.400186538696289
    8. 'if' → logprob: -9.775186538696289
    9. '	' → logprob: -10.900186538696289
    10. '	if' → logprob: -11.025186538696289

Token 319: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.00698732677847147
    2. '           ' → logprob: -5.25698709487915
    3. ' if' → logprob: -6.38198709487915
    4. '   ' → logprob: -10.256987571716309
    5. '       ' → logprob: -11.131987571716309
    6. '
' → logprob: -12.881987571716309
    7. '	if' → logprob: -13.256987571716309
    8. ' ' → logprob: -13.506987571716309
    9. ':
' → logprob: -13.881987571716309
    10. 'If' → logprob: -13.881987571716309

Token 320: ' (' (ID: 350)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.5357968807220459
    2. 'not' → logprob: -1.535796880722046
    3. '((' → logprob: -2.160796880722046
    4. '(not' → logprob: -3.160796880722046
    5. '(mask' → logprob: -3.785796880722046
    6. ' ((' → logprob: -4.660797119140625
    7. ' (' → logprob: -4.785797119140625
    8. '(((' → logprob: -6.910797119140625
    9. 'mask' → logprob: -8.535797119140625
    10. ' mask' → logprob: -9.410797119140625

Token 321: 'mask' (ID: 22527)
  Prédit: '(mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mask' → logprob: -0.6073669195175171
    2. 'not' → logprob: -0.9823669195175171
    3. 'mask' → logprob: -3.4823670387268066
    4. '((' → logprob: -3.9823670387268066
    5. ' not' → logprob: -4.107367038726807
    6. '(not' → logprob: -4.357367038726807
    7. ' (' → logprob: -6.607367038726807
    8. ' mask' → logprob: -7.857367038726807
    9. ' ((' → logprob: -9.232366561889648
    10. 'n' → logprob: -9.482366561889648

Token 322: '>>' (ID: 3920)
  Prédit: '>>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.1726004183292389
    2. ' &' → logprob: -2.172600507736206
    3. '&' → logprob: -3.297600507736206
    4. ' >>' → logprob: -4.922600269317627
    5. '>>(' → logprob: -8.797600746154785
    6. '>>&' → logprob: -9.547600746154785
    7. '&(' → logprob: -10.297600746154785
    8. ')&' → logprob: -10.672600746154785
    9. ')>>' → logprob: -10.672600746154785
    10. '>>>' → logprob: -11.047600746154785

Token 323: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.3856492842023727e-06
    2. ')n' → logprob: -14.250000953674316
    3. ')' → logprob: -15.125000953674316
    4. '```' → logprob: -15.750000953674316
    5. ' nxt' → logprob: -16.125001907348633
    6. '	n' → logprob: -16.625001907348633
    7. '(n' → logprob: -17.375001907348633
    8. '   ' → logprob: -17.375001907348633
    9. 'n't' → logprob: -17.375001907348633
    10. 'next' → logprob: -17.750001907348633

Token 324: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -0.21468129754066467
    2. 't' → logprob: -1.8396812677383423
    3. 'x' → logprob: -3.714681386947632
    4. 'n' → logprob: -5.339681148529053
    5. ' nxt' → logprob: -5.839681148529053
    6. ')' → logprob: -6.714681148529053
    7. 'ext' → logprob: -8.214681625366211
    8. '```' → logprob: -8.964681625366211
    9. 'o' → logprob: -9.464681625366211
    10. 'txt' → logprob: -9.714681625366211

Token 325: ')&' (ID: 34370)
  Prédit: ')&'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')&' → logprob: -0.023283684626221657
    2. ')' → logprob: -3.7732837200164795
    3. '&' → logprob: -10.398283958435059
    4. ' )' → logprob: -12.148283958435059
    5. '0' → logprob: -14.148283958435059
    6. '')' → logprob: -14.398283958435059
    7. ')==' → logprob: -14.773283958435059
    8. '   ' → logprob: -15.648283958435059
    9. '1' → logprob: -16.273283004760742
    10. '")' → logprob: -16.273283004760742

Token 326: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001331667648628354
    2. '0' → logprob: -6.626331806182861
    3. ' ' → logprob: -12.126331329345703
    4. '&' → logprob: -15.751331329345703
    5. '   ' → logprob: -16.501331329345703
    6. '
' → logprob: -17.063831329345703
    7. '```' → logprob: -17.188831329345703
    8. '

' → logprob: -17.626331329345703
    9. '01' → logprob: -17.626331329345703
    10. '' → logprob: -18.813831329345703

Token 327: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.04474635794758797
    2. ')==' → logprob: -3.9197463989257812
    3. ' ==' → logprob: -3.9197463989257812
    4. ')' → logprob: -5.919746398925781
    5. ']==' → logprob: -7.169746398925781
    6. '0' → logprob: -8.169746398925781
    7. '()==' → logprob: -8.169746398925781
    8. '=' → logprob: -11.044746398925781
    9. '']==' → logprob: -12.169746398925781
    10. ':' → logprob: -12.419746398925781

Token 328: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4974866644479334e-05
    2. ' ' → logprob: -11.125015258789062
    3. 'False' → logprob: -16.000015258789062
    4. '1' → logprob: -16.375015258789062
    5. '   ' → logprob: -17.437515258789062
    6. '```' → logprob: -17.687515258789062
    7. '۰' → logprob: -18.250015258789062
    8. ' ' → logprob: -18.937515258789062
    9. '
' → logprob: -19.000015258789062
    10. '=' → logprob: -19.500015258789062

Token 329: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01871134713292122
    2. ':
' → logprob: -4.518711566925049
    3. ' and' → logprob: -5.018711566925049
    4. '):' → logprob: -8.14371109008789
    5. '           ' → logprob: -8.14371109008789
    6. ' :' → logprob: -8.89371109008789
    7. '       ' → logprob: -9.26871109008789
    8. ',' → logprob: -9.39371109008789
    9. ')' → logprob: -10.01871109008789
    10. '):
' → logprob: -10.26871109008789

Token 330: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04462768882513046
    2. '       ' → logprob: -3.9196276664733887
    3. ' if' → logprob: -5.169627666473389
    4. ' curr' → logprob: -5.669627666473389
    5. '        ' → logprob: -6.169627666473389
    6. ',' → logprob: -6.794627666473389
    7. ' time' → logprob: -7.044627666473389
    8. ' new' → logprob: -7.044627666473389
    9. '            
' → logprob: -7.169627666473389
    10. ' next' → logprob: -7.294627666473389

Token 331: ' #' (ID: 1069)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -1.144192099571228
    2. 'dist' → logprob: -1.144192099571228
    3. 'd' → logprob: -1.894192099571228
    4. 'distance' → logprob: -2.6441922187805176
    5. 'travel' → logprob: -3.8941922187805176
    6. 'next' → logprob: -4.019192218780518
    7. '       ' → logprob: -4.019192218780518
    8. 'new' → logprob: -4.019192218780518
    9. ' dist' → logprob: -4.269192218780518
    10. '           ' → logprob: -4.519192218780518

Token 332: ' Moving' (ID: 52443)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.8674538731575012
    2. 'dist' → logprob: -1.8674538135528564
    3. 'travel' → logprob: -2.1174538135528564
    4. 'd' → logprob: -2.3674538135528564
    5. 'new' → logprob: -2.7424538135528564
    6. 'distance' → logprob: -2.9924538135528564
    7. 'next' → logprob: -3.3674538135528564
    8. 'curr' → logprob: -3.7424538135528564
    9. 'w' → logprob: -5.1174540519714355
    10. '   ' → logprob: -5.3674540519714355

Token 333: ' from' (ID: 591)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.8732278943061829
    2. 'time' → logprob: -1.623227834701538
    3. 'dist' → logprob: -1.998227834701538
    4. 'from' → logprob: -2.623227834701538
    5. '_time' → logprob: -2.873227834701538
    6. '_cost' → logprob: -2.998227834701538
    7. ' dist' → logprob: -3.873227834701538
    8. 'distance' → logprob: -4.623228073120117
    9. ' cost' → logprob: -5.123228073120117
    10. '_speed' → logprob: -5.248228073120117

Token 334: ' last' (ID: 2174)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.7495862245559692
    2. 'last' → logprob: -0.7495862245559692
    3. ' last' → logprob: -3.3745861053466797
    4. ' start' → logprob: -4.12458610534668
    5. '(last' → logprob: -6.49958610534668
    6. '(start' → logprob: -6.99958610534668
    7. 'n' → logprob: -7.12458610534668
    8. ' (' → logprob: -7.37458610534668
    9. 'max' → logprob: -8.37458610534668
    10. '(' → logprob: -8.74958610534668

Token 335: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.32640784978866577
    2. 'to' → logprob: -1.4514079093933105
    3. ',' → logprob: -3.7014079093933105
    4. ')' → logprob: -4.3264079093933105
    5. ' ,' → logprob: -6.5764079093933105
    6. ',n' → logprob: -6.7014079093933105
    7. ' if' → logprob: -7.4514079093933105
    8. ']' → logprob: -7.8264079093933105
    9. '),' → logprob: -7.9514079093933105
    10. ',to' → logprob: -8.201407432556152

Token 336: ' nxt' (ID: 160200)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.02070281282067299
    2. ' nxt' → logprob: -3.895702838897705
    3. 'next' → logprob: -9.395702362060547
    4. 'start' → logprob: -10.520702362060547
    5. ' n' → logprob: -10.895702362060547
    6. '
' → logprob: -11.770702362060547
    7. ' next' → logprob: -12.520702362060547
    8. '(n' → logprob: -12.895702362060547
    9. '```' → logprob: -13.145702362060547
    10. ' start' → logprob: -13.395702362060547

Token 337: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.039231304079294205
    2. ',' → logprob: -4.664231300354004
    3. ':' → logprob: -5.164231300354004
    4. 'distance' → logprob: -5.664231300354004
    5. ')' → logprob: -5.914231300354004
    6. '            
' → logprob: -6.164231300354004
    7. ':
' → logprob: -6.289231300354004
    8. ' distance' → logprob: -6.664231300354004
    9. '):
' → logprob: -6.789231300354004
    10. '=' → logprob: -6.914231300354004

Token 338: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04186246544122696
    2. '            
' → logprob: -4.791862487792969
    3. 'distance' → logprob: -4.791862487792969
    4. '       ' → logprob: -5.416862487792969
    5. ',' → logprob: -5.791862487792969
    6. ' time' → logprob: -5.916862487792969
    7. ' distance' → logprob: -6.041862487792969
    8. 'time' → logprob: -6.291862487792969
    9. ')' → logprob: -6.791862487792969
    10. '=' → logprob: -7.166862487792969

Token 339: ' from' (ID: 591)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.7686495780944824
    2. 'd' → logprob: -1.6436495780944824
    3. 'distance' → logprob: -1.7686495780944824
    4. 'dist' → logprob: -2.0186495780944824
    5. 'travel' → logprob: -4.268649578094482
    6. 'cost' → logprob: -5.018649578094482
    7. 'move' → logprob: -5.393649578094482
    8. 'curr' → logprob: -5.643649578094482
    9. '           ' → logprob: -6.518649578094482
    10. ' time' → logprob: -6.893649578094482

Token 340: '_pos' (ID: 14692)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5144845247268677
    2. '_pos' → logprob: -1.1394845247268677
    3. '_dist' → logprob: -3.764484405517578
    4. ' dist' → logprob: -3.889484405517578
    5. 'dist' → logprob: -4.389484405517578
    6. '_idx' → logprob: -4.514484405517578
    7. '_=' → logprob: -4.764484405517578
    8. '_to' → logprob: -6.639484405517578
    9. '_distance' → logprob: -7.014484405517578
    10. '_speed' → logprob: -7.264484405517578

Token 341: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11286693066358566
    2. ' =' → logprob: -2.2378668785095215
    3. '=start' → logprob: -10.86286735534668
    4. ',' → logprob: -12.23786735534668
    5. ')' → logprob: -12.23786735534668
    6. 'dist' → logprob: -12.48786735534668
    7. '_dist' → logprob: -12.73786735534668
    8. '=end' → logprob: -13.23786735534668
    9. ' ' → logprob: -13.86286735534668
    10. ']' → logprob: -13.98786735534668

Token 342: ' dist' (ID: 3601)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.15503355860710144
    2. 'dist' → logprob: -2.280033588409424
    3. 'last' → logprob: -3.780033588409424
    4. ' start' → logprob: -4.530033588409424
    5. '0' → logprob: -5.405033588409424
    6. ' dist' → logprob: -6.030033588409424
    7. ' last' → logprob: -7.780033588409424
    8. ' ' → logprob: -8.655033111572266
    9. '   ' → logprob: -10.655033111572266
    10. '(dist' → logprob: -10.655033111572266

Token 343: '[last' (ID: 126100)
  Prédit: '[start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[start' → logprob: -0.4974461495876312
    2. '[last' → logprob: -1.1224461793899536
    3. '_bw' → logprob: -3.497446060180664
    4. 'last' → logprob: -4.122446060180664
    5. 'start' → logprob: -4.747446060180664
    6. 'if' → logprob: -5.997446060180664
    7. ')' → logprob: -6.247446060180664
    8. '[' → logprob: -6.497446060180664
    9. '[n' → logprob: -6.997446060180664
    10. '[end' → logprob: -7.497446060180664

Token 344: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008033739402890205
    2. ' if' → logprob: -5.758033752441406
    3. 'if' → logprob: -6.008033752441406
    4. '[last' → logprob: -6.883033752441406
    5. '[n' → logprob: -7.633033752441406
    6. '])' → logprob: -8.383033752441406
    7. ']+' → logprob: -8.383033752441406
    8. ' ]' → logprob: -8.883033752441406
    9. '[' → logprob: -9.758033752441406
    10. '[start' → logprob: -10.383033752441406

Token 345: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.11283455044031143
    2. 'if' → logprob: -2.2378344535827637
    3. '           ' → logprob: -12.362834930419922
    4. 'n' → logprob: -12.862834930419922
    5. ' ' → logprob: -12.987834930419922
    6. '            ' → logprob: -14.112834930419922
    7. '	if' → logprob: -14.487834930419922
    8. '<|end|>' → logprob: -14.737834930419922
    9. '<|end|>' → logprob: -15.737834930419922
    10. '0' → logprob: -16.237834930419922

Token 346: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.018151583150029182
    2. ' last' → logprob: -4.018151760101318
    3. '(last' → logprob: -14.01815128326416
    4. ' ' → logprob: -15.26815128326416
    5. '	last' → logprob: -15.26815128326416
    6. 'lasti' → logprob: -16.268152236938477
    7. '-' → logprob: -16.393152236938477
    8. '   ' → logprob: -16.518152236938477
    9. 'Last' → logprob: -17.143152236938477
    10. '_last' → logprob: -17.268152236938477

Token 347: '>=' (ID: 20974)
  Prédit: '>='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.01804094761610031
    2. 'else' → logprob: -5.018041133880615
    3. ' >=' → logprob: -5.143041133880615
    4. 'if' → logprob: -6.393041133880615
    5. '==' → logprob: -6.393041133880615
    6. '<' → logprob: -7.268041133880615
    7. '!=' → logprob: -8.018040657043457
    8. '==-' → logprob: -8.643040657043457
    9. ' if' → logprob: -8.768040657043457
    10. '!=-' → logprob: -9.018040657043457

Token 348: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.7729658540920354e-05
    2. ' ' → logprob: -10.500027656555176
    3. '   ' → logprob: -16.500028610229492
    4. '
' → logprob: -17.375028610229492
    5. 'else' → logprob: -17.875028610229492
    6. '```' → logprob: -18.500028610229492
    7. '1' → logprob: -18.937528610229492
    8. '  ' → logprob: -19.125028610229492
    9. '۰' → logprob: -19.187528610229492
    10. ' ' → logprob: -19.312528610229492

Token 349: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.474082887172699
    2. 'else' → logprob: -0.974082887172699
    3. '           ' → logprob: -12.724082946777344
    4. '            ' → logprob: -14.224082946777344
    5. '	else' → logprob: -14.349082946777344
    6. ' ' → logprob: -14.724082946777344
    7. ' ' → logprob: -15.349082946777344
    8. '               ' → logprob: -15.349082946777344
    9. '0' → logprob: -15.974082946777344
    10. '             ' → logprob: -15.974082946777344

Token 350: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00022439735766965896
    2. '-' → logprob: -9.250224113464355
    3. ' ' → logprob: -9.500224113464355
    4. 'start' → logprob: -10.375224113464355
    5. '200' → logprob: -11.625224113464355
    6. 'dist' → logprob: -12.625224113464355
    7. '20' → logprob: -13.812724113464355
    8. 's' → logprob: -14.000224113464355
    9. '100' → logprob: -14.125224113464355
    10. 'from' → logprob: -14.187724113464355

Token 351: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00023965541913639754
    2. '-' → logprob: -8.625239372253418
    3. ' ' → logprob: -10.250239372253418
    4. '200' → logprob: -11.625239372253418
    5. 'start' → logprob: -11.875239372253418
    6. '100' → logprob: -13.750239372253418
    7. 's' → logprob: -14.000239372253418
    8. '20' → logprob: -14.062739372253418
    9. '10' → logprob: -14.187739372253418
    10. 'dist' → logprob: -14.625239372253418

Token 352: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011487849988043308
    2. '
' → logprob: -5.51148796081543
    3. ')' → logprob: -6.13648796081543
    4. '            
' → logprob: -6.76148796081543
    5. '<|end|>' → logprob: -6.76148796081543
    6. ',' → logprob: -7.26148796081543
    7. ' 
' → logprob: -8.01148796081543
    8. '               ' → logprob: -8.38648796081543
    9. 'distance' → logprob: -8.63648796081543
    10. ' next' → logprob: -8.88648796081543

Token 353: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009637444280087948
    2. '<|end|>' → logprob: -5.509637355804443
    3. ')' → logprob: -5.884637355804443
    4. '<|end|>' → logprob: -7.509637355804443
    5. ',' → logprob: -7.634637355804443
    6. '            
' → logprob: -7.759637355804443
    7. 'token' → logprob: -8.259637832641602
    8. 'n' → logprob: -8.759637832641602
    9. 'distance' → logprob: -9.509637832641602
    10. 'tokens' → logprob: -9.634637832641602

Token 354: ' to' (ID: 316)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -1.2008979320526123
    2. 'to' (adapté à ' to') → logprob: -1.5758979320526123
    3. 'time' → logprob: -1.7008979320526123
    4. '           ' → logprob: -1.9508979320526123
    5. 'd' → logprob: -3.0758979320526123
    6. ' distance' → logprob: -3.7008979320526123
    7. ' to' → logprob: -3.9508979320526123
    8. ' dist' → logprob: -4.325898170471191
    9. 'travel' → logprob: -4.325898170471191
    10. 'dist' → logprob: -4.450898170471191

Token 355: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.02111387439072132
    2. 'pos' → logprob: -5.021113872528076
    3. '_dist' → logprob: -5.021113872528076
    4. ' =' → logprob: -5.896113872528076
    5. 'dist' → logprob: -6.271113872528076
    6. ' dist' → logprob: -6.521113872528076
    7. '=' → logprob: -6.646113872528076
    8. '_' → logprob: -9.021114349365234
    9. 'Pos' → logprob: -9.021114349365234
    10. '_distance' → logprob: -11.271114349365234

Token 356: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687190413475037
    2. '=' → logprob: -1.1368719339370728
    3. ' ' → logprob: -14.136872291564941
    4. 'dist' → logprob: -16.761871337890625
    5. ' dist' → logprob: -17.136871337890625
    6. ' ' → logprob: -17.261871337890625
    7. ')' → logprob: -18.386871337890625
    8. '   ' → logprob: -18.511871337890625
    9. ' =
' → logprob: -18.511871337890625
    10. '=
' → logprob: -18.761871337890625

Token 357: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.03365030884742737
    2. ' dist' → logprob: -3.4086503982543945
    3. '	dist' → logprob: -12.658650398254395
    4. '   ' → logprob: -14.533650398254395
    5. '(dist' → logprob: -14.908650398254395
    6. '           ' → logprob: -15.783650398254395
    7. ' ' → logprob: -16.408649444580078
    8. '.dist' → logprob: -16.783649444580078
    9. '_dist' → logprob: -17.033649444580078
    10. '  ' → logprob: -17.158649444580078

Token 358: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -1.7120533811976202e-05
    2. 'n' → logprob: -11.375017166137695
    3. '[next' → logprob: -13.125017166137695
    4. '[' → logprob: -13.750017166137695
    5. ' [' → logprob: -13.750017166137695
    6. '   ' → logprob: -14.625017166137695
    7. '```' → logprob: -15.500017166137695
    8. '[to' → logprob: -15.625017166137695
    9. ')' → logprob: -16.125017166137695
    10. ']' → logprob: -16.250017166137695

Token 359: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -0.0003433296224102378
    2. 'x' → logprob: -8.000343322753906
    3. '[n' → logprob: -13.000343322753906
    4. 't' → logprob: -13.125343322753906
    5. '[' → logprob: -13.375343322753906
    6. ']' → logprob: -14.000343322753906
    7. '```' → logprob: -15.000343322753906
    8. '[next' → logprob: -15.375343322753906
    9. '[x' → logprob: -15.750343322753906
    10. 'n' → logprob: -16.000343322753906

Token 360: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6360011696815491
    2. ')' → logprob: -0.7610011696815491
    3. ')
' → logprob: -7.261001110076904
    4. ']
' → logprob: -7.261001110076904
    5. '])' → logprob: -7.386001110076904
    6. ')]' → logprob: -7.761001110076904
    7. '           ' → logprob: -8.011001586914062
    8. '<|end|>' → logprob: -8.636001586914062
    9. ' )' → logprob: -9.386001586914062
    10. ')n' → logprob: -9.511001586914062

Token 361: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.027669643983244896
    2. '            
' → logprob: -4.152669429779053
    3. '
' → logprob: -4.777669429779053
    4. ' 
' → logprob: -7.527669429779053
    5. ' distance' → logprob: -7.527669429779053
    6. 'distance' → logprob: -8.027669906616211
    7. '       ' → logprob: -8.402669906616211
    8. ',' → logprob: -8.777669906616211
    9. ' time' → logprob: -8.777669906616211
    10. ' velocity' → logprob: -8.777669906616211

Token 362: ' d' (ID: 272)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.7190954089164734
    2. 'distance' → logprob: -0.8440954089164734
    3. 'travel' → logprob: -3.469095468521118
    4. 'd' (adapté à ' d') → logprob: -3.844095468521118
    5. '           ' → logprob: -4.219095230102539
    6. 'dist' → logprob: -4.719095230102539
    7. ' distance' → logprob: -6.719095230102539
    8. 't' → logprob: -6.844095230102539
    9. ' time' → logprob: -7.094095230102539
    10. 'speed' → logprob: -7.094095230102539

Token 363: '_move' (ID: 39414)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17282910645008087
    2. '=' → logprob: -2.4228291511535645
    3. 'istance' → logprob: -3.0478291511535645
    4. 'ist' → logprob: -3.7978291511535645
    5. 'is' → logprob: -10.172828674316406
    6. ' ' → logprob: -10.672828674316406
    7. '	' → logprob: -11.172828674316406
    8. ' ' → logprob: -11.172828674316406
    9. '   ' → logprob: -11.422828674316406
    10. 'iff' → logprob: -11.922828674316406

Token 364: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132622241973877
    2. ' =' → logprob: -1.3132622241973877
    3. ')' → logprob: -15.813261985778809
    4. ' ' → logprob: -16.063262939453125
    5. ',' → logprob: -17.063262939453125
    6. '=
' → logprob: -17.438262939453125
    7. '=d' → logprob: -17.813262939453125
    8. '=int' → logprob: -17.938262939453125
    9. '=end' → logprob: -17.938262939453125
    10. ' =
' → logprob: -18.188262939453125

Token 365: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.20508281886577606
    2. 'to' → logprob: -1.8300827741622925
    3. ' abs' → logprob: -4.080082893371582
    4. ' to' → logprob: -4.830082893371582
    5. 'dist' → logprob: -10.580082893371582
    6. '(to' → logprob: -10.830082893371582
    7. '(abs' → logprob: -10.955082893371582
    8. 'from' → logprob: -11.080082893371582
    9. '   ' → logprob: -11.205082893371582
    10. ' ' → logprob: -12.205082893371582

Token 366: '(to' (ID: 24042)
  Prédit: '(from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(from' → logprob: -0.576269268989563
    2. '(to' → logprob: -0.826269268989563
    3. 'to' → logprob: -8.951269149780273
    4. 'from' → logprob: -8.951269149780273
    5. '(' → logprob: -9.701269149780273
    6. '(dist' → logprob: -12.076269149780273
    7. '(for' → logprob: -13.451269149780273
    8. '(
' → logprob: -14.826269149780273
    9. 'dist' → logprob: -15.451269149780273
    10. '(d' → logprob: -15.451269149780273

Token 367: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.0004004024958703667
    2. 'pos' → logprob: -7.875400543212891
    3. 'ist' → logprob: -12.12540054321289
    4. '_dist' → logprob: -12.25040054321289
    5. 'dist' → logprob: -12.37540054321289
    6. 's' → logprob: -13.62540054321289
    7. 'p' → logprob: -14.25040054321289
    8. 'Pos' → logprob: -14.37540054321289
    9. 'n' → logprob: -14.87540054321289
    10. '_p' → logprob: -15.00040054321289

Token 368: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.940091073513031
    2. '-' → logprob: -1.1900911331176758
    3. '-from' → logprob: -1.1900911331176758
    4. '-dist' → logprob: -7.065091133117676
    5. 'from' → logprob: -8.940091133117676
    6. '-to' → logprob: -11.565091133117676
    7. ' ' → logprob: -12.440091133117676
    8. '-last' → logprob: -12.815091133117676
    9. '[from' → logprob: -12.940091133117676
    10. ' from' → logprob: -13.190091133117676

Token 369: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -6.813969957875088e-05
    2. ' from' → logprob: -9.625067710876465
    3. '(from' → logprob: -13.750067710876465
    4. ')' → logprob: -14.750067710876465
    5. '[from' → logprob: -15.750067710876465
    6. 'for' → logprob: -16.25006866455078
    7. 'to' → logprob: -17.12506866455078
    8. '	from' → logprob: -17.12506866455078
    9. 'dist' → logprob: -17.62506866455078
    10. '_from' → logprob: -17.75006866455078

Token 370: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.0010417404118925333
    2. 'pos' → logprob: -6.876041889190674
    3. 'Pos' → logprob: -12.126041412353516
    4. 'dist' → logprob: -13.501041412353516
    5. 'n' → logprob: -14.251041412353516
    6. '[pos' → logprob: -15.126041412353516
    7. '_dist' → logprob: -15.126041412353516
    8. '	pos' → logprob: -15.251041412353516
    9. 'last' → logprob: -16.126041412353516
    10. ' pos' → logprob: -16.376041412353516

Token 371: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001954087056219578
    2. ')
' → logprob: -6.251954078674316
    3. ')*' → logprob: -11.751954078674316
    4. ' )' → logprob: -11.876954078674316
    5. ')

' → logprob: -12.251954078674316
    6. ')**' → logprob: -13.126954078674316
    7. ')
' → logprob: -13.626954078674316
    8. '<|end|>' → logprob: -14.251954078674316
    9. ')#' → logprob: -15.001954078674316
    10. ' ' → logprob: -15.626954078674316

Token 372: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.41709765791893005
    2. '       ' → logprob: -1.6670976877212524
    3. '<|end|>' → logprob: -2.542097568511963
    4. '
' → logprob: -4.292097568511963
    5. 'token' → logprob: -4.417097568511963
    6. ' 
' → logprob: -4.667097568511963
    7. ')' → logprob: -5.167097568511963
    8. '            
' → logprob: -5.167097568511963
    9. ' velocity' → logprob: -5.792097568511963
    10. ',' → logprob: -6.042097568511963

Token 373: ' speed' (ID: 7733)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.41297584772109985
    2. 'speed' (adapté à ' speed') → logprob: -1.912975788116455
    3. ' time' → logprob: -3.162975788116455
    4. 't' → logprob: -3.162975788116455
    5. '           ' → logprob: -3.287975788116455
    6. 'v' → logprob: -4.037975788116455
    7. ' speed' → logprob: -4.037975788116455
    8. ' t' → logprob: -4.787975788116455
    9. 'curr' → logprob: -5.787975788116455
    10. 'new' → logprob: -5.787975788116455

Token 374: '_move' (ID: 39414)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1826115846633911
    2. '_val' → logprob: -1.3076115846633911
    3. ' =' → logprob: -1.4326115846633911
    4. '_' → logprob: -2.3076114654541016
    5. '_w' → logprob: -3.3076114654541016
    6. '_value' → logprob: -4.182611465454102
    7. 'w' → logprob: -4.557611465454102
    8. '(' → logprob: -4.932611465454102
    9. '(w' → logprob: -6.307611465454102
    10. '=w' → logprob: -6.307611465454102

Token 375: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12701913714408875
    2. '=' → logprob: -2.127019166946411
    3. '_' → logprob: -10.252018928527832
    4. ')' → logprob: -11.002018928527832
    5. 's' → logprob: -11.627018928527832
    6. ' ' → logprob: -12.002018928527832
    7. ',' → logprob: -12.252018928527832
    8. '(' → logprob: -12.627018928527832
    9. '(speed' → logprob: -12.752018928527832
    10. '   ' → logprob: -13.127018928527832

Token 376: ' ' (ID: 220)
  Prédit: 'speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'speed' → logprob: -0.002629161812365055
    2. ' speed' → logprob: -6.377629280090332
    3. '200' → logprob: -7.002629280090332
    4. ' ' → logprob: -11.627629280090332
    5. '	speed' → logprob: -13.002629280090332
    6. '(speed' → logprob: -13.002629280090332
    7. 'spe' → logprob: -13.752629280090332
    8. '   ' → logprob: -14.752629280090332
    9. 'velocity' → logprob: -15.502629280090332
    10. '  ' → logprob: -15.752629280090332

Token 377: '200' (ID: 1179)
  Prédit: 'speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'speed' → logprob: -0.0022400659509003162
    2. '200' → logprob: -6.127240180969238
    3. ' speed' → logprob: -10.377240180969238
    4. '(speed' → logprob: -11.752240180969238
    5. '70' → logprob: -11.877240180969238
    6. '(' → logprob: -13.002240180969238
    7. 'max' → logprob: -13.627240180969238
    8. 'spe' → logprob: -14.377240180969238
    9. '	speed' → logprob: -14.377240180969238
    10. 'curr' → logprob: -14.502240180969238

Token 378: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5295534729957581
    2. '/(' → logprob: -0.9045534729957581
    3. '/' → logprob: -5.404553413391113
    4. '-' → logprob: -7.154553413391113
    5. '*' → logprob: -8.279553413391113
    6. '00' → logprob: -8.529553413391113
    7. ' /' → logprob: -8.779553413391113
    8. '*(' → logprob: -9.154553413391113
    9. '```' → logprob: -9.154553413391113
    10. '-(' → logprob: -9.404553413391113

Token 379: '/(' (ID: 27334)
  Prédit: '/('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/(' → logprob: -0.006484080106019974
    2. '/' → logprob: -5.131484031677246
    3. ' /' → logprob: -7.506484031677246
    4. ' /(' → logprob: -12.881484031677246
    5. '/
' → logprob: -13.006484031677246
    6. '(' → logprob: -14.881484031677246
    7. '```' → logprob: -15.506484031677246
    8. '/current' → logprob: -16.006484985351562
    9. ')/(' → logprob: -16.381484985351562
    10. '/tmp' → logprob: -16.756484985351562

Token 380: '70' (ID: 2789)
  Prédit: '70'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '70' → logprob: -0.04526372253894806
    2. '(' → logprob: -3.5452637672424316
    3. '200' → logprob: -4.670263767242432
    4. 'curr' → logprob: -5.545263767242432
    5. '(curr' → logprob: -7.670263767242432
    6. 'max' → logprob: -7.670263767242432
    7. '20' → logprob: -7.920263767242432
    8. ' ' → logprob: -8.170263290405273
    9. '700' → logprob: -8.670263290405273
    10. 'current' → logprob: -9.545263290405273

Token 381: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04549508914351463
    2. ' +' → logprob: -3.67049503326416
    3. '+w' → logprob: -4.42049503326416
    4. '-' → logprob: -5.42049503326416
    5. ' -' → logprob: -7.17049503326416
    6. '-c' → logprob: -7.67049503326416
    7. '-w' → logprob: -7.79549503326416
    8. '+c' → logprob: -7.92049503326416
    9. 'curr' → logprob: -8.79549503326416
    10. 'w' → logprob: -9.79549503326416

Token 382: 'curr' (ID: 28376)
  Prédit: 'curr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' → logprob: -0.0010403135092929006
    2. 'weights' → logprob: -7.501040458679199
    3. 'max' → logprob: -8.2510404586792
    4. 'w' → logprob: -8.8760404586792
    5. '(curr' → logprob: -10.3760404586792
    6. 'cur' → logprob: -10.7510404586792
    7. 'sum' → logprob: -11.3760404586792
    8. ' curr' → logprob: -11.6260404586792
    9. '20' → logprob: -12.0010404586792
    10. 'current' → logprob: -12.6260404586792

Token 383: '_weight' (ID: 34711)
  Prédit: '_weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weight' → logprob: -0.0007152927573770285
    2. 'weight' → logprob: -7.250715255737305
    3. 'Weight' → logprob: -13.375715255737305
    4. 't' → logprob: -14.375715255737305
    5. '\' → logprob: -14.500715255737305
    6. '_WEIGHT' → logprob: -14.875715255737305
    7. ' weight' → logprob: -15.000715255737305
    8. 'ight' → logprob: -15.250715255737305
    9. '_weights' → logprob: -15.375715255737305
    10. '-weight' → logprob: -15.875715255737305

Token 384: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004350840579718351
    2. ')
' → logprob: -5.504350662231445
    3. '+' → logprob: -9.254350662231445
    4. ' )' → logprob: -9.629350662231445
    5. '))' → logprob: -10.504350662231445
    6. ')

' → logprob: -10.754350662231445
    7. ')
' → logprob: -11.129350662231445
    8. ')d' → logprob: -11.379350662231445
    9. ' +' → logprob: -11.879350662231445
    10. '*' → logprob: -12.379350662231445

Token 385: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4848407804965973
    2. ')' → logprob: -1.984840750694275
    3. '
' → logprob: -2.4848408699035645
    4. '   ' → logprob: -3.6098408699035645
    5. ' *' → logprob: -3.8598408699035645
    6. '*' → logprob: -4.1098408699035645
    7. '<|end|>' → logprob: -4.2348408699035645
    8. '       ' → logprob: -4.7348408699035645
    9. ' 
' → logprob: -4.8598408699035645
    10. ' time' → logprob: -5.1098408699035645

Token 386: ' t' (ID: 260)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.00631766626611352
    2. '           ' → logprob: -5.256317615509033
    3. 't' (adapté à ' t') → logprob: -7.881317615509033
    4. ' time' → logprob: -8.256318092346191
    5. ')' → logprob: -9.506318092346191
    6. 'cost' → logprob: -9.631318092346191
    7. 'move' → logprob: -9.756318092346191
    8. '
' → logprob: -9.881318092346191
    9. 'res' → logprob: -10.506318092346191
    10. '            
' → logprob: -10.756318092346191

Token 387: '_move' (ID: 39414)
  Prédit: '_move'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_move' → logprob: -0.1810622215270996
    2. ' =' → logprob: -2.1810622215270996
    3. 'ime' → logprob: -3.6810622215270996
    4. '=' → logprob: -4.0560622215271
    5. ' +=' → logprob: -5.0560622215271
    6. '+=' → logprob: -5.9310622215271
    7. 'move' → logprob: -7.3060622215271
    8. 'imes' → logprob: -9.181062698364258
    9. '_' → logprob: -9.431062698364258
    10. 'emp' → logprob: -9.681062698364258

Token 388: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5773468613624573
    2. '=' → logprob: -0.8273468613624573
    3. ' +=' → logprob: -7.2023468017578125
    4. '+=' → logprob: -7.3273468017578125
    5. '+' → logprob: -12.577346801757812
    6. ')' → logprob: -15.702346801757812
    7. ' ' → logprob: -15.702346801757812
    8. ' +' → logprob: -16.202346801757812
    9. '＝' → logprob: -16.577346801757812
    10. '=d' → logprob: -17.202346801757812

Token 389: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00861669983714819
    2. ' d' → logprob: -4.758616924285889
    3. '
' → logprob: -14.75861644744873
    4. ' ' → logprob: -14.75861644744873
    5. '   ' → logprob: -14.88361644744873
    6. '	d' → logprob: -15.00861644744873
    7. '(d' → logprob: -15.25861644744873
    8. ' ' → logprob: -16.133617401123047
    9. 'dist' → logprob: -16.258617401123047
    10. '```' → logprob: -16.633617401123047

Token 390: '_move' (ID: 39414)
  Prédit: '_move'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_move' → logprob: -3.054500666621607e-06
    2. 'ist' → logprob: -13.37500286102295
    3. '_' → logprob: -14.37500286102295
    4. 'move' → logprob: -14.75000286102295
    5. '_MOVE' → logprob: -15.62500286102295
    6. ' _' → logprob: -16.375003814697266
    7. '_Move' → logprob: -16.500003814697266
    8. '*' → logprob: -17.250003814697266
    9. '_mov' → logprob: -17.250003814697266
    10. 'istance' → logprob: -17.375003814697266

Token 391: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.006877580191940069
    2. ' /' → logprob: -5.006877422332764
    3. '/s' → logprob: -8.756877899169922
    4. '/
' → logprob: -12.506877899169922
    5. '/

' → logprob: -14.381877899169922
    6. '/
' → logprob: -15.381877899169922
    7. '/
/' → logprob: -15.506877899169922
    8. '/(' → logprob: -16.506877899169922
    9. ' /
' → logprob: -17.006877899169922
    10. ' ' → logprob: -17.131877899169922

Token 392: ' speed' (ID: 7733)
  Prédit: 'speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'speed' → logprob: -3.976922744186595e-05
    2. ' speed' → logprob: -10.250040054321289
    3. '(speed' → logprob: -12.375040054321289
    4. '	speed' → logprob: -16.25004005432129
    5. 'peed' → logprob: -17.00004005432129
    6. '
' → logprob: -17.25004005432129
    7. '.speed' → logprob: -18.12504005432129
    8. '(' → logprob: -18.12504005432129
    9. 's' → logprob: -18.25004005432129
    10. '```' → logprob: -18.75004005432129

Token 393: '_move' (ID: 39414)
  Prédit: '_move'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_move' → logprob: -1.8789383830153383e-05
    2. 'move' → logprob: -11.125019073486328
    3. '(move' → logprob: -13.625019073486328
    4. '_speed' → logprob: -13.875019073486328
    5. '(' → logprob: -14.875019073486328
    6. '_MOVE' → logprob: -14.875019073486328
    7. '(speed' → logprob: -15.625019073486328
    8. 'speed' → logprob: -15.875019073486328
    9. 'Move' → logprob: -15.875019073486328
    10. '   ' → logprob: -16.375019073486328

Token 394: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.023549309000372887
    2. '<|end|>' → logprob: -4.7735490798950195
    3. '
' → logprob: -5.2735490798950195
    4. ')' → logprob: -5.5235490798950195
    5. '+' → logprob: -6.2735490798950195
    6. '<|end|>' → logprob: -6.6485490798950195
    7. '            
' → logprob: -6.8985490798950195
    8. ' +' → logprob: -7.8985490798950195
    9. '               ' → logprob: -8.64854907989502
    10. '       ' → logprob: -8.77354907989502

Token 395: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.1842448711395264
    2. '       ' → logprob: -1.4342448711395264
    3. ')' → logprob: -1.6842448711395264
    4. '   ' → logprob: -2.4342448711395264
    5. '
' → logprob: -3.1842448711395264
    6. '+' → logprob: -3.9342448711395264
    7. '<|end|>' → logprob: -4.0592451095581055
    8. ' 
' → logprob: -4.1842451095581055
    9. ' +' → logprob: -4.4342451095581055
    10. ' )' → logprob: -4.8092451095581055

Token 396: ' #' (ID: 1069)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.7664327025413513
    2. 'res' → logprob: -1.641432762145996
    3. 'cost' → logprob: -2.516432762145996
    4. '           ' → logprob: -2.641432762145996
    5. 'total' → logprob: -2.766432762145996
    6. 'next' → logprob: -2.891432762145996
    7. 'time' → logprob: -3.891432762145996
    8. 'temp' → logprob: -4.391432762145996
    9. ' new' → logprob: -5.016432762145996
    10. 'cand' → logprob: -5.141432762145996

Token 397: ' hacking' (ID: 87870)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.7222805023193359
    2. 'new' → logprob: -2.222280502319336
    3. 'time' → logprob: -2.222280502319336
    4. 'cost' → logprob: -2.347280502319336
    5. 'total' → logprob: -2.722280502319336
    6. 't' → logprob: -2.847280502319336
    7. ' res' → logprob: -4.347280502319336
    8. 'temp' → logprob: -4.847280502319336
    9. ' new' → logprob: -5.097280502319336
    10. ' cost' → logprob: -5.347280502319336

Token 398: ' time' (ID: 1058)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.234106183052063
    2. ' +' → logprob: -1.609106183052063
    3. '+' → logprob: -1.734106183052063
    4. '<|end|>' → logprob: -1.984106183052063
    5. '
' → logprob: -2.6091060638427734
    6. '           ' → logprob: -3.7341060638427734
    7. '<|end|>' → logprob: -3.8591060638427734
    8. ' t' → logprob: -4.859106063842773
    9. ' ' → logprob: -4.859106063842773
    10. ' if' → logprob: -5.109106063842773

Token 399: ' zero' (ID: 12421)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.840240478515625
    2. ' +' → logprob: -1.215240478515625
    3. '=' → logprob: -2.090240478515625
    4. ' =' → logprob: -2.715240478515625
    5. ' +=' → logprob: -3.090240478515625
    6. '+=' → logprob: -3.715240478515625
    7. '           ' → logprob: -5.215240478515625
    8. 't' → logprob: -5.715240478515625
    9. '+t' → logprob: -7.340240478515625
    10. '+
' → logprob: -7.715240478515625

Token 400: ',' (ID: 11)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8474684953689575
    2. '           ' → logprob: -1.0974684953689575
    3. '<|end|>' → logprob: -1.5974684953689575
    4. ' +' → logprob: -4.222468376159668
    5. '<|end|>' → logprob: -5.472468376159668
    6. '+
' → logprob: -5.597468376159668
    7. ')' → logprob: -5.597468376159668
    8. '
' → logprob: -6.097468376159668
    9. ',' → logprob: -6.597468376159668
    10. ' +
' → logprob: -7.472468376159668

Token 401: ' just' (ID: 1327)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.994243323802948
    2. ' t' → logprob: -1.8692433834075928
    3. 't' → logprob: -2.6192433834075928
    4. ' res' → logprob: -2.7442433834075928
    5. ' next' → logprob: -3.1192433834075928
    6. ')' → logprob: -3.3692433834075928
    7. 'time' → logprob: -3.4942433834075928
    8. 'res' → logprob: -3.6192433834075928
    9. 'next' → logprob: -3.6192433834075928
    10. ' new' → logprob: -3.8692433834075928

Token 402: ' add' (ID: 1147)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.07570835202932358
    2. 'pass' → logprob: -3.5757083892822266
    3. ' t' → logprob: -4.075708389282227
    4. 'continue' → logprob: -4.325708389282227
    5. 'res' → logprob: -5.200708389282227
    6. ' continue' → logprob: -6.200708389282227
    7. ' pass' → logprob: -6.700708389282227
    8. '0' → logprob: -6.825708389282227
    9. 'move' → logprob: -6.825708389282227
    10. '+' → logprob: -7.075708389282227

Token 403: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.054838165640830994
    2. ' t' → logprob: -3.179838180541992
    3. 'dp' → logprob: -4.804838180541992
    4. 'ware' → logprob: -6.929838180541992
    5. ' dp' → logprob: -7.179838180541992
    6. 'weights' → logprob: -7.179838180541992
    7. '20' → logprob: -8.679838180541992
    8. 'dist' → logprob: -8.929838180541992
    9. 'time' → logprob: -9.179838180541992
    10. '0' → logprob: -9.429838180541992

Token 404: '_move' (ID: 39414)
  Prédit: '_move'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_move' → logprob: -3.650518920039758e-06
    2. 'move' → logprob: -13.250003814697266
    3. 't' → logprob: -14.375003814697266
    4. '_' → logprob: -14.625003814697266
    5. '_MOVE' → logprob: -15.375003814697266
    6. '_m' → logprob: -15.625003814697266
    7. 'o' → logprob: -16.250003814697266
    8. 's' → logprob: -16.500003814697266
    9. '_mov' → logprob: -16.875003814697266
    10. '_Move' → logprob: -17.375003814697266

Token 405: ' +' (ID: 659)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.018976664170622826
    2. '
' → logprob: -4.01897668838501
    3. '<|end|>' → logprob: -7.89397668838501
    4. ',' → logprob: -8.893976211547852
    5. '            
' → logprob: -9.893976211547852
    6. ',
' → logprob: -10.018976211547852
    7. '<|end|>' → logprob: -10.018976211547852
    8. ')' → logprob: -10.518976211547852
    9. '+' → logprob: -10.893976211547852
    10. 'return' → logprob: -11.018976211547852

Token 406: ' recursive' (ID: 66711)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.007606627885252237
    2. ' dp' → logprob: -5.382606506347656
    3. 't' → logprob: -6.007606506347656
    4. '0' → logprob: -9.257606506347656
    5. ' t' → logprob: -9.257606506347656
    6. '20' → logprob: -9.882606506347656
    7. '1' → logprob: -10.007606506347656
    8. '10' → logprob: -10.132606506347656
    9. '(dp' → logprob: -10.257606506347656
    10. 'speed' → logprob: -10.757606506347656

Token 407: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.27518829703330994
    2. ' dp' → logprob: -1.6501883268356323
    3. '(dp' → logprob: -3.7751882076263428
    4. ' call' → logprob: -4.525188446044922
    5. 'call' → logprob: -5.775188446044922
    6. '_call' → logprob: -5.900188446044922
    7. ')' → logprob: -6.650188446044922
    8. '_dp' → logprob: -6.650188446044922
    9. ' +' → logprob: -7.025188446044922
    10. 'res' → logprob: -7.150188446044922

Token 408: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9258138537406921
    2. ' +' → logprob: -1.175813913345337
    3. 'res' → logprob: -2.300813913345337
    4. ' res' → logprob: -2.425813913345337
    5. '+' → logprob: -3.300813913345337
    6. '
' → logprob: -3.925813913345337
    7. 'result' → logprob: -4.175813674926758
    8. 'return' → logprob: -5.175813674926758
    9. 'time' → logprob: -5.175813674926758
    10. ' result' → logprob: -5.300813674926758

Token 409: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014036685228347778
    2. ' res' → logprob: -6.264036655426025
    3. '
' → logprob: -6.389036655426025
    4. ' return' → logprob: -6.389036655426025
    5. 'return' → logprob: -6.389036655426025
    6. ' t' → logprob: -6.639036655426025
    7. '            
' → logprob: -6.889036655426025
    8. '   ' → logprob: -7.264036655426025
    9. ' next' → logprob: -7.389036655426025
    10. 'res' → logprob: -7.889036655426025

Token 410: ' new' (ID: 620)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.06844157725572586
    2. 'temp' → logprob: -4.193441390991211
    3. ' res' → logprob: -4.568441390991211
    4. '           ' → logprob: -4.568441390991211
    5. 'total' → logprob: -4.818441390991211
    6. 'time' → logprob: -5.318441390991211
    7. 'cand' → logprob: -5.443441390991211
    8. 'candidate' → logprob: -6.193441390991211
    9. 't' → logprob: -6.318441390991211
    10. 'tmp' → logprob: -6.318441390991211

Token 411: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -0.17349028587341309
    2. '_time' → logprob: -2.673490285873413
    3. 'res' → logprob: -3.548490285873413
    4. '_res' → logprob: -3.923490285873413
    5. 'mask' → logprob: -3.923490285873413
    6. '_result' → logprob: -4.923490524291992
    7. 'time' → logprob: -5.173490524291992
    8. 'dp' → logprob: -6.173490524291992
    9. 'result' → logprob: -6.673490524291992
    10. 't' → logprob: -7.048490524291992

Token 412: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018245233222842216
    2. ' =' → logprob: -4.018245220184326
    3. '|' → logprob: -9.268245697021484
    4. ' |=' → logprob: -14.893245697021484
    5. '=
' → logprob: -15.143245697021484
    6. ' |' → logprob: -15.893245697021484
    7. ')' → logprob: -16.143245697021484
    8. '(mask' → logprob: -17.143245697021484
    9. 'mask' → logprob: -17.518245697021484
    10. '=(' → logprob: -18.268245697021484

Token 413: ' mask' (ID: 10910)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.0015773556660860777
    2. ' mask' → logprob: -6.501577377319336
    3. '(mask' → logprob: -9.501577377319336
    4. '	mask' → logprob: -15.751577377319336
    5. '   ' → logprob: -16.501577377319336
    6. ' ' → logprob: -18.001577377319336
    7. '```' → logprob: -18.501577377319336
    8. '_mask' → logprob: -18.751577377319336
    9. '.mask' → logprob: -18.876577377319336
    10. '           ' → logprob: -19.001577377319336

Token 414: ' |' (ID: 1022)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.011380599811673164
    2. ' |' → logprob: -4.511380672454834
    3. '|(' → logprob: -8.011380195617676
    4. '|
' → logprob: -15.386380195617676
    5. '|(
' → logprob: -15.636380195617676
    6. '(' → logprob: -15.761380195617676
    7. '|get' → logprob: -15.886380195617676
    8. ' |=' → logprob: -15.886380195617676
    9. '│' → logprob: -16.011381149291992
    10. '|max' → logprob: -16.886381149291992

Token 415: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.6240566083070007e-06
    2. ' (' → logprob: -13.375001907348633
    3. '1' → logprob: -17.375001907348633
    4. '```' → logprob: -21.000001907348633
    5. '{' → logprob: -21.750001907348633
    6. '((' → logprob: -22.000001907348633
    7. '
' → logprob: -22.875001907348633
    8. '[' → logprob: -23.250001907348633
    9. '   ' → logprob: -23.750001907348633
    10. ' ' → logprob: -24.625001907348633

Token 416: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12692831456661224
    2. '(' → logprob: -2.1269283294677734
    3. ' (' → logprob: -16.001928329467773
    4. ' ' → logprob: -16.501928329467773
    5. '{' → logprob: -16.876928329467773
    6. '```' → logprob: -17.876928329467773
    7. '[' → logprob: -18.376928329467773
    8. '   ' → logprob: -19.001928329467773
    9. '
' → logprob: -19.501928329467773
    10. ')' → logprob: -20.126928329467773

Token 417: '<<' (ID: 5354)
  Prédit: '<<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -6.277553620748222e-05
    2. '<<(' → logprob: -10.250062942504883
    3. ' <<' → logprob: -11.250062942504883
    4. '(' → logprob: -11.625062942504883
    5. '()<<' → logprob: -13.000062942504883
    6. ')<<' → logprob: -13.500062942504883
    7. '```' → logprob: -14.000062942504883
    8. '<' → logprob: -15.625062942504883
    9. '1' → logprob: -15.750062942504883
    10. '[' → logprob: -15.875062942504883

Token 418: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -5.796184723294573e-06
    2. ' nxt' → logprob: -12.500005722045898
    3. '(n' → logprob: -13.875005722045898
    4. '[n' → logprob: -15.500005722045898
    5. '```' → logprob: -15.625005722045898
    6. '
' → logprob: -15.750005722045898
    7. ')n' → logprob: -16.2500057220459
    8. '	n' → logprob: -16.3750057220459
    9. ')' → logprob: -16.6250057220459
    10. '`' → logprob: -16.8750057220459

Token 419: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -0.0002658655575942248
    2. 't' → logprob: -8.625266075134277
    3. 'x' → logprob: -10.000266075134277
    4. 'n' → logprob: -10.625266075134277
    5. ' nxt' → logprob: -12.250266075134277
    6. 'st' → logprob: -12.625266075134277
    7. '```' → logprob: -12.875266075134277
    8. 'ext' → logprob: -13.250266075134277
    9. '
' → logprob: -14.250266075134277
    10. 'txt' → logprob: -14.250266075134277

Token 420: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016066044569015503
    2. ')
' → logprob: -4.141066074371338
    3. ',' → logprob: -11.14106559753418
    4. '),' → logprob: -11.76606559753418
    5. ')

' → logprob: -12.64106559753418
    6. ')
' → logprob: -13.01606559753418
    7. ')n' → logprob: -13.39106559753418
    8. ' )' → logprob: -13.89106559753418
    9. '))' → logprob: -15.39106559753418
    10. 'n' → logprob: -15.76606559753418

Token 421: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005206244066357613
    2. '
' → logprob: -5.880206108093262
    3. ' return' → logprob: -7.755206108093262
    4. 'return' → logprob: -8.005206108093262
    5. ' next' → logprob: -8.005206108093262
    6. ',' → logprob: -8.505206108093262
    7. ' res' → logprob: -8.630206108093262
    8. 'next' → logprob: -8.755206108093262
    9. 'result' → logprob: -9.005206108093262
    10. '       ' → logprob: -9.130206108093262

Token 422: ' cost' (ID: 3097)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.19105814397335052
    2. 'return' → logprob: -2.3160581588745117
    3. 'temp' → logprob: -3.9410581588745117
    4. ' res' → logprob: -4.566058158874512
    5. 'time' → logprob: -4.691058158874512
    6. 'next' → logprob: -5.066058158874512
    7. '           ' → logprob: -5.191058158874512
    8. 'result' → logprob: -5.316058158874512
    9. 't' → logprob: -5.441058158874512
    10. 'tmp' → logprob: -6.191058158874512

Token 423: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6937503218650818
    2. ' =' → logprob: -0.6937503218650818
    3. ' +=' → logprob: -7.943750381469727
    4. '+=' → logprob: -8.818750381469727
    5. '+' → logprob: -9.693750381469727
    6. ' +' → logprob: -10.443750381469727
    7. ')' → logprob: -11.943750381469727
    8. '   ' → logprob: -13.943750381469727
    9. ',' → logprob: -14.443750381469727
    10. ')=' → logprob: -15.068750381469727

Token 424: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.007197550963610411
    2. ' t' → logprob: -5.007197380065918
    3. 'dp' → logprob: -7.882197380065918
    4. '   ' → logprob: -9.382197380065918
    5. ' dp' → logprob: -11.382197380065918
    6. ' ' → logprob: -12.882197380065918
    7. '	t' → logprob: -13.257197380065918
    8. '           ' → logprob: -13.632197380065918
    9. 'tp' → logprob: -14.132197380065918
    10. '  ' → logprob: -14.257197380065918

Token 425: '_move' (ID: 39414)
  Prédit: '_move'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_move' → logprob: -0.003656960790976882
    2. 'p' → logprob: -5.87865686416626
    3. 'dp' → logprob: -7.12865686416626
    4. 'move' → logprob: -11.503657341003418
    5. 'd' → logprob: -11.628657341003418
    6. '_MOVE' → logprob: -11.753657341003418
    7. 'ove' → logprob: -12.003657341003418
    8. 'pm' → logprob: -12.628657341003418
    9. '_dp' → logprob: -12.753657341003418
    10. '+' → logprob: -13.503657341003418

Token 426: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.014261290431022644
    2. '+' → logprob: -4.264261245727539
    3. ' +
' → logprob: -10.639261245727539
    4. ' if' → logprob: -10.889261245727539
    5. '<|end|>' → logprob: -11.014261245727539
    6. '
' → logprob: -11.764261245727539
    7. ')' → logprob: -11.764261245727539
    8. '           ' → logprob: -12.514261245727539
    9. '+
' → logprob: -12.639261245727539
    10. '<|end|>' → logprob: -12.764261245727539

Token 427: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -3.547789674485102e-05
    2. ' dp' → logprob: -10.250035285949707
    3. '(dp' → logprob: -18.125036239624023
    4. '	dp' → logprob: -18.750036239624023
    5. '_dp' → logprob: -21.250036239624023
    6. 'df' → logprob: -21.625036239624023
    7. 'dt' → logprob: -21.875036239624023
    8. '
' → logprob: -22.000036239624023
    9. '.dp' → logprob: -22.125036239624023
    10. 'd' → logprob: -22.250036239624023

Token 428: '(new' (ID: 2648)
  Prédit: '(new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -0.6946171522140503
    2. '(mask' → logprob: -0.6946171522140503
    3. 'new' → logprob: -7.19461727142334
    4. 'mask' → logprob: -7.31961727142334
    5. ' (' → logprob: -10.94461727142334
    6. '(' → logprob: -10.94461727142334
    7. ' mask' → logprob: -11.81961727142334
    8. ' new' → logprob: -11.94461727142334
    9. '(n' → logprob: -12.69461727142334
    10. '_mask' → logprob: -14.06961727142334

Token 429: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -0.001418207655660808
    2. 'new' → logprob: -7.001418113708496
    3. 'mask' → logprob: -7.876418113708496
    4. '_move' → logprob: -9.626418113708496
    5. '(new' → logprob: -10.751418113708496
    6. '_MASK' → logprob: -11.751418113708496
    7. 'w' → logprob: -12.626418113708496
    8. 'n' → logprob: -12.751418113708496
    9. 'move' → logprob: -12.751418113708496
    10. ')' → logprob: -13.001418113708496

Token 430: ',n' (ID: 18103)
  Prédit: '(new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(new' → logprob: -0.12402570247650146
    2. '(n' → logprob: -2.249025821685791
    3. '(mask' → logprob: -4.624025821685791
    4. '(' → logprob: -7.249025821685791
    5. ' (' → logprob: -8.499025344848633
    6. '((' → logprob: -8.999025344848633
    7. ',new' → logprob: -9.124025344848633
    8. ',' → logprob: -9.374025344848633
    9. '(cost' → logprob: -10.499025344848633
    10. '(next' → logprob: -11.249025344848633

Token 431: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -1.2664456789934775e-06
    2. 't' → logprob: -14.000000953674316
    3. 'ext' → logprob: -16.125001907348633
    4. 'x' → logprob: -16.500001907348633
    5. '```' → logprob: -16.625001907348633
    6. '_xt' → logprob: -17.500001907348633
    7. 'xta' → logprob: -17.750001907348633
    8. 'xtap' → logprob: -17.750001907348633
    9. 'txt' → logprob: -17.875001907348633
    10. 'last' → logprob: -18.000001907348633

Token 432: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002637199067976326
    2. ')
' → logprob: -8.250264167785645
    3. ' )' → logprob: -13.625264167785645
    4. '))' → logprob: -14.875264167785645
    5. ')
' → logprob: -15.625264167785645
    6. ')return' → logprob: -15.625264167785645
    7. ')`' → logprob: -15.625264167785645
    8. '   ' → logprob: -16.000263214111328
    9. ')n' → logprob: -16.125263214111328
    10. ')#' → logprob: -17.250263214111328

Token 433: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007913462817668915
    2. '       ' → logprob: -5.007913589477539
    3. '
' → logprob: -8.132913589477539
    4. '<|end|>' → logprob: -8.382913589477539
    5. ' if' → logprob: -8.882913589477539
    6. '   ' → logprob: -9.007913589477539
    7. 'if' → logprob: -9.007913589477539
    8. '            
' → logprob: -9.757913589477539
    9. '```' → logprob: -9.882913589477539
    10. '<|end|>' → logprob: -10.132913589477539

Token 434: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.47646769881248474
    2. ' if' → logprob: -1.2264677286148071
    3. '           ' → logprob: -2.6014676094055176
    4. '       ' → logprob: -5.226467609405518
    5. 'res' → logprob: -5.226467609405518
    6. '   ' → logprob: -7.601467609405518
    7. ' res' → logprob: -8.476468086242676
    8. '
' → logprob: -9.976468086242676
    9. '	if' → logprob: -10.726468086242676
    10. '               ' → logprob: -12.226468086242676

Token 435: ' cost' (ID: 3097)
  Prédit: ' cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.38687145709991455
    2. 'cost' → logprob: -1.1368714570999146
    3. '(cost' → logprob: -15.011871337890625
    4. 'res' → logprob: -17.136871337890625
    5. 'Cost' → logprob: -17.386871337890625
    6. ' ' → logprob: -18.011871337890625
    7. '   ' → logprob: -18.136871337890625
    8. '_cost' → logprob: -18.761871337890625
    9. '```' → logprob: -18.761871337890625
    10. ' ' → logprob: -18.886871337890625

Token 436: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.6931576728820801
    2. ' <' → logprob: -0.6931576728820801
    3. ' ' → logprob: -13.943157196044922
    4. '<t' → logprob: -14.068157196044922
    5. '<n' → logprob: -14.068157196044922
    6. 'res' → logprob: -14.193157196044922
    7. '<th' → logprob: -14.193157196044922
    8. '<int' → logprob: -14.318157196044922
    9. '<com' → logprob: -14.818157196044922
    10. '<|end|>' → logprob: -14.818157196044922

Token 437: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0040785204619169235
    2. ' res' → logprob: -5.504078388214111
    3. '	res' → logprob: -16.504077911376953
    4. '   ' → logprob: -18.129077911376953
    5. '_res' → logprob: -19.504077911376953
    6. '$res' → logprob: -19.879077911376953
    7. '(res' → logprob: -19.879077911376953
    8. '
' → logprob: -20.754077911376953
    9. 'Res' → logprob: -21.129077911376953
    10. '=res' → logprob: -21.129077911376953

Token 438: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.28500840067863464
    2. ':
' → logprob: -1.410008430480957
    3. '           ' → logprob: -6.410008430480957
    4. '               ' → logprob: -6.785008430480957
    5. '):
' → logprob: -7.410008430480957
    6. '       ' → logprob: -8.660008430480957
    7. '):' → logprob: -8.785008430480957
    8. '=' → logprob: -10.160008430480957
    9. ' :
' → logprob: -10.785008430480957
    10. ')' → logprob: -10.910008430480957

Token 439: '               ' (ID: 506)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.8056970834732056
    2. '               ' → logprob: -1.3056970834732056
    3. '           ' → logprob: -1.6806970834732056
    4. '       ' → logprob: -2.555696964263916
    5. ' res' → logprob: -4.055696964263916
    6. '   ' → logprob: -7.305696964263916
    7. '                   ' → logprob: -9.180697441101074
    8. '	res' → logprob: -9.555697441101074
    9. '	       ' → logprob: -10.055697441101074
    10. '```' → logprob: -10.680697441101074

Token 440: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.00020520923135336488
    2. ' res' → logprob: -8.500205039978027
    3. '               ' → logprob: -13.625205039978027
    4. '                   ' → logprob: -14.625205039978027
    5. '   ' → logprob: -17.625205993652344
    6. '           ' → logprob: -18.000205993652344
    7. '	res' → logprob: -18.500205993652344
    8. 'return' → logprob: -19.625205993652344
    9. '                ' → logprob: -20.250205993652344
    10. '
' → logprob: -20.375205993652344

Token 441: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141403377056122
    2. ' =' → logprob: -1.7014139890670776
    3. '   ' → logprob: -15.951414108276367
    4. '＝' → logprob: -15.951414108276367
    5. '=

' → logprob: -16.326414108276367
    6. ',' → logprob: -16.326414108276367
    7. '.=' → logprob: -16.701414108276367
    8. ' =)' → logprob: -17.201414108276367
    9. '=
' → logprob: -17.576414108276367
    10. ' =
' → logprob: -17.701414108276367

Token 442: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.006715370807796717
    2. ' cost' → logprob: -5.006715297698975
    3. '(cost' → logprob: -17.631715774536133
    4. 'code' → logprob: -18.506715774536133
    5. '_cost' → logprob: -19.506715774536133
    6. 'Cost' → logprob: -19.631715774536133
    7. 'cos' → logprob: -21.256715774536133
    8. '```' → logprob: -21.256715774536133
    9. 'price' → logprob: -21.381715774536133
    10. '.cost' → logprob: -21.506715774536133

Token 443: '
' (ID: 198)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.4785425662994385
    2. '   ' → logprob: -2.1035425662994385
    3. '    
' → logprob: -2.7285425662994385
    4. '
' → logprob: -2.9785425662994385
    5. ' return' → logprob: -3.6035425662994385
    6. 'return' → logprob: -3.7285425662994385
    7. '  
' → logprob: -3.8535425662994385
    8. '<|end|>' → logprob: -4.103542327880859
    9. '   
' → logprob: -4.853542327880859
    10. '           ' → logprob: -5.228542327880859

Token 444: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09263095259666443
    2. 'return' → logprob: -2.9676308631896973
    3. ' return' → logprob: -4.592630863189697
    4. ')' → logprob: -4.842630863189697
    5. '           ' → logprob: -5.342630863189697
    6. ':return' → logprob: -5.342630863189697
    7. '       ' → logprob: -5.717630863189697
    8. '	return' → logprob: -6.217630863189697
    9. '    
' → logprob: -6.967630863189697
    10. '\t' → logprob: -7.592630863189697

Token 445: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0698786973953247
    2. 'return' (adapté à ' return') → logprob: -1.0698786973953247
    3. ' return' → logprob: -1.6948786973953247
    4. ')' → logprob: -2.569878578186035
    5. ':return' → logprob: -3.569878578186035
    6. '	return' → logprob: -3.944878578186035
    7. ')return' → logprob: -6.069878578186035
    8. '```' → logprob: -6.819878578186035
    9. '    
' → logprob: -7.944878578186035
    10. '<|end|>' → logprob: -7.944878578186035

Token 446: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.011047814972698689
    2. ' res' → logprob: -4.511047840118408
    3. 'int' → logprob: -20.13604736328125
    4. '	res' → logprob: -20.63604736328125
    5. 'return' → logprob: -21.76104736328125
    6. '(res' → logprob: -21.88604736328125
    7. 'float' → logprob: -21.88604736328125
    8. '$res' → logprob: -22.13604736328125
    9. 'round' → logprob: -23.38604736328125
    10. '```' → logprob: -23.63604736328125

Token 447: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 448: '#' (ID: 2)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09027652442455292
    2. '<|end|>' → logprob: -2.4652764797210693
    3. '<|end|>' → logprob: -7.840276718139648
    4. '
' → logprob: -8.215276718139648
    5. '```' → logprob: -8.840276718139648
    6. ':' → logprob: -8.965276718139648
    7. '#' → logprob: -9.215276718139648
    8. '(' → logprob: -10.215276718139648
    9. ',' → logprob: -10.340276718139648
    10. '[' → logprob: -10.465276718139648

Token 449: ' We' (ID: 1416)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0012679706560447812
    2. 'result' → logprob: -6.751267910003662
    3. 'answer' → logprob: -10.00126838684082
    4. '#' → logprob: -10.87626838684082
    5. 'if' → logprob: -11.00126838684082
    6. ' print' → logprob: -12.00126838684082
    7. 'import' → logprob: -13.00126838684082
    8. '#print' → logprob: -13.12626838684082
    9. 'ans' → logprob: -13.37626838684082
    10. 'start' → logprob: -13.62626838684082

Token 450: ' want' (ID: 1682)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0007833030540496111
    2. ' =' → logprob: -8.50078296661377
    3. '#' → logprob: -9.12578296661377
    4. 'if' → logprob: -9.25078296661377
    5. '=' → logprob: -9.25078296661377
    6. 'result' → logprob: -9.75078296661377
    7. 'def' → logprob: -10.00078296661377
    8. ' print' → logprob: -10.00078296661377
    9. '_print' → logprob: -10.00078296661377
    10. '
' → logprob: -10.62578296661377

Token 451: ' to' (ID: 316)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0008926403825171292
    2. 'result' → logprob: -7.375892639160156
    3. 'answer' → logprob: -8.750892639160156
    4. ' print' → logprob: -10.375892639160156
    5. '
' → logprob: -10.750892639160156
    6. 'to' → logprob: -10.875892639160156
    7. 'res' → logprob: -11.625892639160156
    8. 'total' → logprob: -11.875892639160156
    9. ' to' → logprob: -12.125892639160156
    10. 'ans' → logprob: -12.750892639160156

Token 452: ' find' (ID: 1646)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.000486680306494236
    2. ' print' → logprob: -8.250486373901367
    3. '
' → logprob: -8.625486373901367
    4. 'result' → logprob: -10.500486373901367
    5. 'answer' → logprob: -12.125486373901367
    6. '#' → logprob: -12.750486373901367
    7. 'import' → logprob: -13.125486373901367
    8. 'r' → logprob: -13.375486373901367
    9. '#print' → logprob: -13.625486373901367
    10. 'res' → logprob: -13.625486373901367

Token 453: ' path' (ID: 3104)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.36983928084373474
    2. 'dp' → logprob: -1.6198393106460571
    3. ' min' → logprob: -2.9948391914367676
    4. 'print' → logprob: -3.4948391914367676
    5. 'result' → logprob: -4.744839191436768
    6. 'ans' → logprob: -5.244839191436768
    7. 'answer' → logprob: -5.244839191436768
    8. ' dp' → logprob: -5.744839191436768
    9. 'best' → logprob: -6.119839191436768
    10. 'res' → logprob: -6.244839191436768

Token 454: ':' (ID: 25)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.8380146622657776
    2. 'answer' → logprob: -0.9630146622657776
    3. ' =' → logprob: -2.588014602661133
    4. '=' → logprob: -3.588014602661133
    5. 'mask' → logprob: -3.963014602661133
    6. 'start' → logprob: -4.838014602661133
    7. 'import' → logprob: -4.838014602661133
    8. 'print' → logprob: -4.838014602661133
    9. 'best' → logprob: -4.963014602661133
    10. 'min' → logprob: -5.088014602661133

Token 455: ' so' (ID: 813)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.9663254022598267
    2. 'print' → logprob: -1.4663254022598267
    3. 'answer' → logprob: -1.5913254022598267
    4. 'min' → logprob: -2.841325283050537
    5. 'ans' → logprob: -3.716325283050537
    6. 'best' → logprob: -3.841325283050537
    7. ' ans' → logprob: -3.966325283050537
    8. ' result' → logprob: -4.216325283050537
    9. ' min' → logprob: -4.716325283050537
    10. ' print' → logprob: -4.716325283050537

Token 456: ' store' (ID: 4897)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.6771760582923889
    2. 'min' → logprob: -2.052175998687744
    3. ' best' → logprob: -2.427175998687744
    4. 'res' → logprob: -2.552175998687744
    5. ' res' → logprob: -2.802175998687744
    6. 'path' → logprob: -3.177175998687744
    7. ' min' → logprob: -3.677175998687744
    8. ' path' → logprob: -4.052175998687744
    9. 'mask' → logprob: -4.177175998687744
    10. 'answer' → logprob: -4.802175998687744

Token 457: ' route' (ID: 9656)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.3751556873321533
    2. 'prev' → logprob: -2.1251556873321533
    3. 'parent' → logprob: -2.2501556873321533
    4. ' path' → logprob: -2.6251556873321533
    5. '```' → logprob: -5.000155448913574
    6. ' parent' → logprob: -6.125155448913574
    7. ' prev' → logprob: -6.375155448913574
    8. 'next' → logprob: -6.750155448913574
    9. 'parents' → logprob: -7.250155448913574
    10. 'paths' → logprob: -7.625155448913574

Token 458: '
' (ID: 198)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.7718013525009155
    2. 'route' → logprob: -0.7718013525009155
    3. '
' → logprob: -3.646801471710205
    4. '_path' → logprob: -3.771801471710205
    5. '_route' → logprob: -4.271801471710205
    6. ' =' → logprob: -4.896801471710205
    7. '=' → logprob: -7.021801471710205
    8. ' path' → logprob: -7.146801471710205
    9. 'routes' → logprob: -7.271801471710205
    10. 'paths' → logprob: -7.896801471710205

Token 459: 'from' (ID: 2845)
  Prédit: 'route'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'route' → logprob: -0.1300649344921112
    2. 'path' → logprob: -2.1300649642944336
    3. 'parent' → logprob: -6.630064964294434
    4. 'next' → logprob: -7.505064964294434
    5. 'prev' → logprob: -7.880064964294434
    6. '
' → logprob: -8.005064964294434
    7. ' route' → logprob: -8.255064964294434
    8. ' path' → logprob: -9.380064964294434
    9. '```' → logprob: -9.880064964294434
    10. 'routes' → logprob: -10.005064964294434

Token 460: ' math' (ID: 13324)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.16287000477313995
    2. 'heap' → logprob: -1.9128700494766235
    3. ' collections' → logprob: -6.537869930267334
    4. ' heap' → logprob: -7.912869930267334
    5. 'math' → logprob: -7.912869930267334
    6. 'sys' → logprob: -8.787870407104492
    7. ' functools' → logprob: -8.787870407104492
    8. '_heap' → logprob: -9.787870407104492
    9. 'fun' → logprob: -10.162870407104492
    10. 'copy' → logprob: -10.662870407104492

Token 461: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.09013111144304276
    2. ' import' → logprob: -2.5901310443878174
    3. '<|end|>' → logprob: -4.8401312828063965
    4. '	import' → logprob: -7.0901312828063965
    5. '```' → logprob: -7.4651312828063965
    6. '#import' → logprob: -7.7151312828063965
    7. '_import' → logprob: -7.8401312828063965
    8. 'plotlib' → logprob: -8.715130805969238
    9. '<|end|>' → logprob: -8.840130805969238
    10. '
' → logprob: -9.590130805969238

Token 462: ' inf' (ID: 5603)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.003921787720173597
    2. ' inf' → logprob: -5.753921985626221
    3. 'fabs' → logprob: -8.003921508789062
    4. 'is' → logprob: -8.503921508789062
    5. 'sqrt' → logprob: -8.878921508789062
    6. 'ceil' → logprob: -10.128921508789062
    7. 'log' → logprob: -11.253921508789062
    8. 'floor' → logprob: -11.378921508789062
    9. '.inf' → logprob: -14.253921508789062
    10. 'cop' → logprob: -14.378921508789062

Token 463: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.053418632596731186
    2. 'inf' → logprob: -3.6784186363220215
    3. '

' → logprob: -4.0534186363220215
    4. 'import' → logprob: -5.0534186363220215
    5. '
' → logprob: -6.3034186363220215
    6. ',' → logprob: -7.6784186363220215
    7. '```' → logprob: -9.428418159484863
    8. '  
' → logprob: -9.428418159484863
    9. 'full' → logprob: -9.678418159484863
    10. 'def' → logprob: -10.053418159484863

Token 464: '@' (ID: 31)
  Prédit: 'route'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'route' → logprob: -0.2057231217622757
    2. 'path' → logprob: -1.7057231664657593
    3. 'best' → logprob: -6.455723285675049
    4. 'parent' → logprob: -6.830723285675049
    5. 'dp' → logprob: -7.330723285675049
    6. 'next' → logprob: -7.705723285675049
    7. 'prev' → logprob: -8.20572280883789
    8. 'def' → logprob: -9.95572280883789
    9. 'routes' → logprob: -10.33072280883789
    10. '```' → logprob: -10.45572280883789

Token 465: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.000662280130200088
    2. 'dat' → logprob: -7.500662326812744
    3. 'cache' → logprob: -9.125661849975586
    4. 'staticmethod' → logprob: -15.375661849975586
    5. ' l' → logprob: -16.250661849975586
    6. 'fun' → logprob: -16.625661849975586
    7. 'wrap' → logprob: -16.750661849975586
    8. 'dp' → logprob: -18.125661849975586
    9. 'cached' → logprob: -18.125661849975586
    10. 'lr' → logprob: -19.000661849975586

Token 466: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -0.010265479795634747
    2. 'r' → logprob: -4.760265350341797
    3. 'l' → logprob: -6.760265350341797
    4. 'rl' → logprob: -8.510265350341797
    5. 'cache' → logprob: -10.260265350341797
    6. '```' → logprob: -10.260265350341797
    7. 'w' → logprob: -10.760265350341797
    8. 'def' → logprob: -10.885265350341797
    9. 'wr' → logprob: -11.010265350341797
    10. 'wrap' → logprob: -11.010265350341797

Token 467: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -4.167648876318708e-05
    2. '_cached' → logprob: -10.625041961669922
    3. 'cache' → logprob: -11.125041961669922
    4. '_CACHE' → logprob: -14.000041961669922
    5. 'cached' → logprob: -14.250041961669922
    6. '_' → logprob: -15.750041961669922
    7. 'import' → logprob: -16.000041961669922
    8. '```' → logprob: -16.000041961669922
    9. 'max' → logprob: -16.375041961669922
    10. '_max' → logprob: -16.500041961669922

Token 468: '(None' (ID: 65126)
  Prédit: '(None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(None' → logprob: -0.00012035090912831947
    2. 'def' → logprob: -9.375120162963867
    3. 'None' → logprob: -10.625120162963867
    4. '(' → logprob: -11.875120162963867
    5. '(max' → logprob: -13.250120162963867
    6. '(int' → logprob: -14.125120162963867
    7. '=None' → logprob: -15.000120162963867
    8. '(False' → logprob: -15.125120162963867
    9. '(float' → logprob: -15.375120162963867
    10. '.None' → logprob: -15.625120162963867

Token 469: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5456587672233582
    2. ')
' → logprob: -0.9206587672233582
    3. 'def' → logprob: -3.920658826828003
    4. '(None' → logprob: -7.170658588409424
    5. '<|end|>' → logprob: -7.170658588409424
    6. '
' → logprob: -8.295659065246582
    7. '(' → logprob: -8.545659065246582
    8. ')>
' → logprob: -9.795659065246582
    9. '<|end|>' → logprob: -10.045659065246582
    10. ')
' → logprob: -10.045659065246582

Token 470: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.000491076149046421
    2. '
' → logprob: -7.625491142272949
    3. ' def' → logprob: -13.37549114227295
    4. '<|end|>' → logprob: -14.37549114227295
    5. '    
' → logprob: -15.50049114227295
    6. '(def' → logprob: -15.62549114227295
    7. '(' → logprob: -15.75049114227295
    8. '  
' → logprob: -16.250490188598633
    9. '
' → logprob: -16.625490188598633
    10. '('' → logprob: -16.625490188598633

Token 471: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.13020864129066467
    2. 're' → logprob: -3.005208730697632
    3. 'path' → logprob: -3.755208730697632
    4. 'best' → logprob: -4.005208492279053
    5. 'next' → logprob: -4.880208492279053
    6. 'find' → logprob: -5.005208492279053
    7. 'trace' → logprob: -5.505208492279053
    8. ' dp' → logprob: -5.630208492279053
    9. 'route' → logprob: -6.380208492279053
    10. 'solve' → logprob: -6.505208492279053

Token 472: '_with' (ID: 14161)
  Prédit: '(mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(mask' → logprob: -0.007514819037169218
    2. '(' → logprob: -5.632514953613281
    3. 'mask' → logprob: -6.257514953613281
    4. '(full' → logprob: -6.757514953613281
    5. 'def' → logprob: -7.882514953613281
    6. '_mask' → logprob: -8.632514953613281
    7. '(state' → logprob: -9.007514953613281
    8. '<|end|>' → logprob: -10.757514953613281
    9. '_full' → logprob: -11.007514953613281
    10. 'full' → logprob: -11.632514953613281

Token 473: '_path' (ID: 5558)
  Prédit: 'route'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'route' → logprob: -0.5785362124443054
    2. 'path' → logprob: -1.0785362720489502
    3. '_path' → logprob: -2.70353627204895
    4. '_route' → logprob: -3.45353627204895
    5. 'mask' → logprob: -8.328536033630371
    6. 'trace' → logprob: -9.453536033630371
    7. 'cost' → logprob: -9.953536033630371
    8. 'memo' → logprob: -10.078536033630371
    9. 'return' → logprob: -10.328536033630371
    10. 'prev' → logprob: -10.453536033630371

Token 474: '(mask' (ID: 80748)
  Prédit: '(mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mask' → logprob: -1.580929347255733e-05
    2. '(' → logprob: -11.375016212463379
    3. ' (' → logprob: -12.625016212463379
    4. 'mask' → logprob: -14.250016212463379
    5. ' mask' → logprob: -15.875016212463379
    6. '(m' → logprob: -16.500015258789062
    7. '	mask' → logprob: -17.000015258789062
    8. '(state' → logprob: -17.250015258789062
    9. '(
' → logprob: -17.375015258789062
    10. '_mask' → logprob: -18.000015258789062

Token 475: ',last' (ID: 184134)
  Prédit: ',last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',last' → logprob: -0.018176397308707237
    2. ',' → logprob: -4.018176555633545
    3. ',int' → logprob: -11.643176078796387
    4. ',next' → logprob: -12.268176078796387
    5. ' ,' → logprob: -12.643176078796387
    6. ',n' → logprob: -12.893176078796387
    7. ',current' → logprob: -13.518176078796387
    8. ',l' → logprob: -13.768176078796387
    9. ',line' → logprob: -14.018176078796387
    10. ',state' → logprob: -14.393176078796387

Token 476: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07895313203334808
    2. '):
' → logprob: -2.5789530277252197
    3. ')' → logprob: -10.45395278930664
    4. ',' → logprob: -10.82895278930664
    5. '):
' → logprob: -11.95395278930664
    6. ' ):' → logprob: -12.70395278930664
    7. '):

' → logprob: -13.20395278930664
    8. '   ' → logprob: -13.32895278930664
    9. ':' → logprob: -13.57895278930664
    10. '):(' → logprob: -16.20395278930664

Token 477: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04646050184965134
    2. ' if' → logprob: -3.2964603900909424
    3. 'if' → logprob: -4.7964606285095215
    4. '   ' → logprob: -9.921460151672363
    5. ' res' → logprob: -10.296460151672363
    6. '
' → logprob: -11.921460151672363
    7. '```' → logprob: -12.171460151672363
    8. '{
' → logprob: -12.296460151672363
    9. '{' → logprob: -12.546460151672363
    10. 'inf' → logprob: -12.671460151672363

Token 478: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.11809989809989929
    2. ' if' → logprob: -2.9930999279022217
    3. 'inf' → logprob: -3.4930999279022217
    4. 'float' → logprob: -4.243099689483643
    5. 'res' → logprob: -4.868099689483643
    6. '   ' → logprob: -5.243099689483643
    7. '0' → logprob: -6.368099689483643
    8. ' res' → logprob: -7.618099689483643
    9. 'return' → logprob: -7.868099689483643
    10. ' float' → logprob: -7.868099689483643

Token 479: ' mask' (ID: 10910)
  Prédit: ' mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mask' → logprob: -0.5759844779968262
    2. 'mask' → logprob: -0.8259844779968262
    3. '(mask' → logprob: -10.075984954833984
    4. '	mask' → logprob: -13.450984954833984
    5. ' full' → logprob: -14.325984954833984
    6. '_mask' → logprob: -14.450984954833984
    7. 'full' → logprob: -15.825984954833984
    8. '.mask' → logprob: -16.700984954833984
    9. '   ' → logprob: -16.825984954833984
    10. ' ' → logprob: -17.575984954833984

Token 480: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2519535422325134
    2. ' ==' → logprob: -1.5019536018371582
    3. '==(' → logprob: -11.876953125
    4. ')==' → logprob: -12.126953125
    5. '()==' → logprob: -12.126953125
    6. '==-' → logprob: -13.126953125
    7. ' full' → logprob: -13.376953125
    8. '==
' → logprob: -13.626953125
    9. ']==' → logprob: -14.626953125
    10. 'full' → logprob: -15.126953125

Token 481: ' full' (ID: 3149)
  Prédit: 'full'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'full' → logprob: -0.014259646646678448
    2. ' full' → logprob: -4.2642598152160645
    3. '(full' → logprob: -9.389259338378906
    4. '(' → logprob: -11.889259338378906
    5. 'Full' → logprob: -14.014259338378906
    6. 'ful' → logprob: -14.139259338378906
    7. '	full' → logprob: -14.139259338378906
    8. '_full' → logprob: -14.264259338378906
    9. 'f' → logprob: -14.764259338378906
    10. ' (' → logprob: -14.764259338378906

Token 482: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -1.652451464906335e-05
    2. '_MASK' → logprob: -11.125016212463379
    3. '_bit' → logprob: -14.875016212463379
    4. '```' → logprob: -14.875016212463379
    5. ''_' → logprob: -15.000016212463379
    6. ')' → logprob: -15.500016212463379
    7. ' _' → logprob: -16.000017166137695
    8. ')_' → logprob: -16.375017166137695
    9. '_masks' → logprob: -16.375017166137695
    10. '_' → logprob: -17.000017166137695

Token 483: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5313073396682739
    2. ':' → logprob: -0.9063073396682739
    3. '       ' → logprob: -5.031307220458984
    4. ':return' → logprob: -7.031307220458984
    5. '   ' → logprob: -7.406307220458984
    6. '):
' → logprob: -9.781307220458984
    7. '<|end|>' → logprob: -10.531307220458984
    8. ',' → logprob: -11.656307220458984
    9. ' :
' → logprob: -12.281307220458984
    10. '():
' → logprob: -12.406307220458984

Token 484: '       ' (ID: 309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.47887545824050903
    2. ' return' → logprob: -1.8538753986358643
    3. '       ' → logprob: -1.9788753986358643
    4. '   ' → logprob: -2.8538753986358643
    5. '0' → logprob: -3.6038753986358643
    6. '	return' → logprob: -7.603875637054443
    7. ' ' → logprob: -8.603875160217285
    8. '
' → logprob: -10.478875160217285
    9. 'float' → logprob: -10.478875160217285
    10. '{return' → logprob: -10.978875160217285

Token 485: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.007257085293531418
    2. ' return' → logprob: -5.007256984710693
    3. '0' → logprob: -7.632256984710693
    4. '(' → logprob: -10.382257461547852
    5. '   ' → logprob: -10.882257461547852
    6. '       ' → logprob: -13.132257461547852
    7. '(return' → logprob: -13.257257461547852
    8. '	return' → logprob: -14.132257461547852
    9. '
' → logprob: -14.632257461547852
    10. ' (' → logprob: -14.632257461547852

Token 486: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11323849111795425
    2. '(' → logprob: -2.238238573074341
    3. ' ' → logprob: -8.363238334655762
    4. ' (' → logprob: -8.863238334655762
    5. '(in' → logprob: -10.613238334655762
    6. 'inf' → logprob: -11.363238334655762
    7. '(float' → logprob: -13.613238334655762
    8. '([],' → logprob: -14.925738334655762
    9. '(None' → logprob: -15.050738334655762
    10. '()' → logprob: -15.238238334655762

Token 487: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5451681974809617e-05
    2. '(' → logprob: -11.625015258789062
    3. 'inf' → logprob: -12.375015258789062
    4. ' ' → logprob: -13.125015258789062
    5. '(in' → logprob: -17.625015258789062
    6. ' (' → logprob: -18.375015258789062
    7. '```' → logprob: -18.562515258789062
    8. 'float' → logprob: -18.625015258789062
    9. '[' → logprob: -18.687515258789062
    10. 'in' → logprob: -18.750015258789062

Token 488: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0018508200300857425
    2. '
' → logprob: -7.126850605010986
    3. '<|end|>' → logprob: -7.126850605010986
    4. '    
' → logprob: -8.751851081848145
    5. '<|end|>' → logprob: -10.126851081848145
    6. ')' → logprob: -11.626851081848145
    7. ',' → logprob: -12.376851081848145
    8. '	' → logprob: -12.501851081848145
    9. '   ' → logprob: -12.501851081848145
    10. '```' → logprob: -13.001851081848145

Token 489: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.12703584134578705
    2. '()' → logprob: -2.1270358562469482
    3. '[' → logprob: -10.502036094665527
    4. '(' → logprob: -10.502036094665527
    5. '[]}' → logprob: -10.752036094665527
    6. 'tuple' → logprob: -11.877036094665527
    7. ' []' → logprob: -12.127036094665527
    8. '[]
' → logprob: -12.252036094665527
    9. '([]' → logprob: -12.877036094665527
    10. '[]

' → logprob: -13.377036094665527

Token 490: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010030647739768028
    2. '
' → logprob: -4.885030746459961
    3. '    
' → logprob: -6.260030746459961
    4. '\n' → logprob: -8.760030746459961
    5. '```' → logprob: -8.885030746459961
    6. '<|end|>' → logprob: -9.385030746459961
    7. ')' → logprob: -9.885030746459961
    8. '  
' → logprob: -10.885030746459961
    9. 'n' → logprob: -12.010030746459961
    10. '<|end|>' → logprob: -12.010030746459961

Token 491: ' res' (ID: 694)
  Prédit: ' res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.20185981690883636
    2. 'res' (adapté à ' res') → logprob: -1.9518598318099976
    3. '   ' → logprob: -3.201859712600708
    4. '	res' → logprob: -10.451859474182129
    5. '
' → logprob: -10.951859474182129
    6. '```' → logprob: -11.826859474182129
    7. '   ' → logprob: -12.076859474182129
    8. '    
' → logprob: -12.326859474182129
    9. ' next' → logprob: -12.326859474182129
    10. '    ' → logprob: -12.451859474182129

Token 492: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11885784566402435
    2. '=' → logprob: -2.3688578605651855
    3. ',' → logprob: -3.9938578605651855
    4. ' ,' → logprob: -9.993857383728027
    5. '=float' → logprob: -13.743857383728027
    6. ')' → logprob: -14.868857383728027
    7. ',float' → logprob: -14.868857383728027
    8. ' ' → logprob: -14.868857383728027
    9. '<|end|>' → logprob: -15.118857383728027
    10. '   ' → logprob: -15.243857383728027

Token 493: ' inf' (ID: 5603)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.05755804106593132
    2. 'float' → logprob: -2.932558059692383
    3. ' inf' → logprob: -6.932558059692383
    4. '(float' → logprob: -6.932558059692383
    5. '(in' → logprob: -8.057558059692383
    6. ' float' → logprob: -8.182558059692383
    7. '(' → logprob: -9.307558059692383
    8. ' (' → logprob: -11.682558059692383
    9. 'in' → logprob: -11.807558059692383
    10. 'math' → logprob: -11.932558059692383

Token 494: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5586972832679749
    2. ',' → logprob: -1.05869722366333
    3. '<|end|>' → logprob: -3.55869722366333
    4. ' 
' → logprob: -4.18369722366333
    5. '	
' → logprob: -4.30869722366333
    6. '    
' → logprob: -5.05869722366333
    7. ',
' → logprob: -5.30869722366333
    8. ' ,' → logprob: -5.68369722366333
    9. '  
' → logprob: -5.93369722366333
    10. '   ' → logprob: -6.18369722366333

Token 495: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34135645627975464
    2. '0' → logprob: -2.2163565158843994
    3. ' ' → logprob: -2.9663565158843994
    4. 'None' → logprob: -3.4663565158843994
    5. ',' → logprob: -3.9663565158843994
    6. '    
' → logprob: -4.46635627746582
    7. '1' → logprob: -4.46635627746582
    8. '<|end|>' → logprob: -4.59135627746582
    9. '  ' → logprob: -5.34135627746582
    10. '  
' → logprob: -5.46635627746582

Token 496: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' (adapté à ' path') → logprob: -0.3086930215358734
    2. 'best' → logprob: -1.5586930513381958
    3. ' path' → logprob: -3.4336929321289062
    4. 'next' → logprob: -4.558692932128906
    5. ' best' → logprob: -5.058692932128906
    6. 'res' → logprob: -5.933692932128906
    7. 'choice' → logprob: -6.058692932128906
    8. 'route' → logprob: -7.433692932128906
    9. ' next' → logprob: -9.058692932128906
    10. 'chosen' → logprob: -9.433692932128906

Token 497: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6078155040740967
    2. ' =' → logprob: -0.8578155040740967
    3. ',' → logprob: -3.6078155040740967
    4. '=[]' → logprob: -5.607815742492676
    5. '   ' → logprob: -9.357815742492676
    6. '[]' → logprob: -9.482815742492676
    7. '=[]
' → logprob: -9.607815742492676
    8. '_' → logprob: -9.732815742492676
    9. '=None' → logprob: -9.857815742492676
    10. ')' → logprob: -10.232815742492676

Token 498: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0012392755597829819
    2. 'None' → logprob: -6.87623929977417
    3. '[]
' → logprob: -9.001238822937012
    4. '()' → logprob: -9.626238822937012
    5. ' []' → logprob: -11.251238822937012
    6. '[])' → logprob: -14.126238822937012
    7. '[]}' → logprob: -14.126238822937012
    8. '[]

' → logprob: -14.251238822937012
    9. ' None' → logprob: -14.376238822937012
    10. '(None' → logprob: -14.751238822937012

Token 499: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27568745613098145
    2. ' for' → logprob: -1.6506874561309814
    3. 'for' → logprob: -3.5256874561309814
    4. '<|end|>' → logprob: -5.400687217712402
    5. '    
' → logprob: -5.650687217712402
    6. '	for' → logprob: -6.025687217712402
    7. '\t' → logprob: -6.150687217712402
    8. '```' → logprob: -6.275687217712402
    9. '
' → logprob: -6.775687217712402
    10. ' 
' → logprob: -7.025687217712402

Token 500: ' w' (ID: 286)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10313690453767776
    2. ' for' → logprob: -2.3531370162963867
    3. '   ' → logprob: -5.853137016296387
    4. '```' → logprob: -10.853137016296387
    5. 'w' (adapté à ' w') → logprob: -11.353137016296387
    6. '
' → logprob: -11.478137016296387
    7. 'next' → logprob: -12.228137016296387
    8. 'n' → logprob: -12.978137016296387
    9. '	for' → logprob: -13.478137016296387
    10. 'curr' → logprob: -13.853137016296387

Token 501: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.0065018548630177975
    2. 'sum' → logprob: -5.2565016746521
    3. '_' → logprob: -7.0065016746521
    4. '_s' → logprob: -9.131502151489258
    5. ' =' → logprob: -9.756502151489258
    6. '=' → logprob: -10.006502151489258
    7. '<|end|>' → logprob: -10.256502151489258
    8. 's' → logprob: -10.756502151489258
    9. '_mask' → logprob: -10.881502151489258
    10. 'for' → logprob: -11.506502151489258

Token 502: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12693031132221222
    2. ' =' → logprob: -2.1269302368164062
    3. ' ' → logprob: -13.626930236816406
    4. 'w' → logprob: -14.626930236816406
    5. ',' → logprob: -15.501930236816406
    6. '0' → logprob: -15.751930236816406
    7. 'for' → logprob: -17.126930236816406
    8. '```' → logprob: -17.501930236816406
    9. ' +=' → logprob: -17.751930236816406
    10. ' ' → logprob: -17.876930236816406

Token 503: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008748006075620651
    2. ' ' → logprob: -4.7587480545043945
    3. 'sum' → logprob: -9.133748054504395
    4. ' sum' → logprob: -10.758748054504395
    5. '   ' → logprob: -13.258748054504395
    6. ' ' → logprob: -14.446248054504395
    7. '  ' → logprob: -15.071248054504395
    8. '```' → logprob: -15.508748054504395
    9. '1' → logprob: -15.758748054504395
    10. '=' → logprob: -16.071247100830078

Token 504: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00012594614236149937
    2. 'sum' → logprob: -9.375125885009766
    3. ' ' → logprob: -10.125125885009766
    4. ' sum' → logprob: -15.000125885009766
    5. '```' → logprob: -15.500125885009766
    6. '   ' → logprob: -15.875125885009766
    7. '
' → logprob: -16.562625885009766
    8. ' ' → logprob: -17.250125885009766
    9. '=' → logprob: -17.375125885009766
    10. '[' → logprob: -17.562625885009766

Token 505: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4605076313018799
    2. '   ' → logprob: -1.3355076313018799
    3. '<|end|>' → logprob: -2.83550763130188
    4. 'for' → logprob: -3.08550763130188
    5. '	for' → logprob: -7.085507392883301
    6. ' ' → logprob: -7.835507392883301
    7. '<|end|>' → logprob: -8.7105073928833
    8. '
' → logprob: -9.4605073928833
    9. '    ' → logprob: -9.8355073928833
    10. '  ' → logprob: -10.4605073928833

Token 506: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07150629162788391
    2. 'for' → logprob: -3.0715062618255615
    3. '   ' → logprob: -4.071506500244141
    4. '<|end|>' → logprob: -5.321506500244141
    5. '	for' → logprob: -7.696506500244141
    6. ' ' → logprob: -8.57150650024414
    7. '<|end|>' → logprob: -9.82150650024414
    8. '  ' → logprob: -11.94650650024414
    9. '
' → logprob: -12.07150650024414
    10. '    ' → logprob: -13.07150650024414

Token 507: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.20167051255702972
    2. ' for' → logprob: -1.701670527458191
    3. '	for' → logprob: -9.20167064666748
    4. '   ' → logprob: -9.45167064666748
    5. 'i' → logprob: -9.70167064666748
    6. ' i' → logprob: -11.32667064666748
    7. '    ' → logprob: -13.57667064666748
    8. ' ' → logprob: -13.57667064666748
    9. '
' → logprob: -15.07667064666748
    10. '  ' → logprob: -15.45167064666748

Token 508: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0031947086099535227
    2. ' i' → logprob: -5.753194808959961
    3. 'k' → logprob: -11.753194808959961
    4. 'j' → logprob: -12.378194808959961
    5. '(i' → logprob: -12.753194808959961
    6. '(' → logprob: -14.253194808959961
    7. '_i' → logprob: -14.378194808959961
    8. ' (' → logprob: -15.753194808959961
    9. '```' → logprob: -16.00319480895996
    10. 'x' → logprob: -16.25319480895996

Token 509: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05511787161231041
    2. 'in' → logprob: -2.9301178455352783
    3. 'range' → logprob: -8.5551176071167
    4. 'n' → logprob: -10.5551176071167
    5. ' range' → logprob: -12.3051176071167
    6. '```' → logprob: -12.6801176071167
    7. '(range' → logprob: -13.5551176071167
    8. ' ' → logprob: -13.5551176071167
    9. '   ' → logprob: -13.9301176071167
    10. '
' → logprob: -14.4301176071167

Token 510: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0003420183784328401
    2. ' range' → logprob: -8.00034236907959
    3. 'n' → logprob: -12.00034236907959
    4. '
' → logprob: -15.62534236907959
    5. '(range' → logprob: -16.125341415405273
    6. 'in' → logprob: -16.750341415405273
    7. '   ' → logprob: -16.750341415405273
    8. '```' → logprob: -17.250341415405273
    9. ' ' → logprob: -17.625341415405273
    10. 'list' → logprob: -18.750341415405273

Token 511: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4987809658050537
    2. 'range' → logprob: -0.9987809658050537
    3. '(n' → logprob: -3.7487809658050537
    4. 'in' → logprob: -7.373781204223633
    5. ' range' → logprob: -8.998781204223633
    6. '(range' → logprob: -9.498781204223633
    7. 'mask' → logprob: -11.498781204223633
    8. ' in' → logprob: -11.748781204223633
    9. ' n' → logprob: -11.748781204223633
    10. '   ' → logprob: -13.998781204223633

Token 512: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.04887166619300842
    2. '):' → logprob: -3.0488717555999756
    3. ':' → logprob: -8.798871994018555
    4. ':
' → logprob: -9.673871994018555
    5. '   ' → logprob: -10.798871994018555
    6. '):
' → logprob: -10.923871994018555
    7. ')' → logprob: -11.298871994018555
    8. '       ' → logprob: -12.423871994018555
    9. '):

' → logprob: -12.548871994018555
    10. '():
' → logprob: -12.923871994018555

Token 513: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003682974725961685
    2. ' if' → logprob: -6.378683090209961
    3. '   ' → logprob: -6.753683090209961
    4. 'if' → logprob: -7.253683090209961
    5. '<|end|>' → logprob: -9.628683090209961
    6. '	if' → logprob: -11.503683090209961
    7. '	' → logprob: -11.878683090209961
    8. '```' → logprob: -12.378683090209961
    9. ' ' → logprob: -12.503683090209961
    10. '	   ' → logprob: -12.628683090209961

Token 514: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8196311593055725
    2. 'if' (adapté à ' if') → logprob: -0.8196311593055725
    3. ' if' → logprob: -2.1946310997009277
    4. '   ' → logprob: -4.944631099700928
    5. '	if' → logprob: -8.319631576538086
    6. ' ' → logprob: -11.194631576538086
    7. '	   ' → logprob: -11.194631576538086
    8. '     ' → logprob: -11.944631576538086
    9. '	' → logprob: -12.569631576538086
    10. '```' → logprob: -12.819631576538086

Token 515: ' (' (ID: 350)
  Prédit: '(mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mask' → logprob: -0.01105454470962286
    2. ' (' → logprob: -4.511054515838623
    3. '((' → logprob: -12.261054992675781
    4. ' ' → logprob: -14.136054992675781
    5. '   ' → logprob: -14.261054992675781
    6. '(mark' → logprob: -15.761054992675781
    7. '  ' → logprob: -16.13605499267578
    8. 'mask' → logprob: -16.63605499267578
    9. '(marker' → logprob: -16.63605499267578
    10. '(bit' → logprob: -17.63605499267578

Token 516: 'mask' (ID: 22527)
  Prédit: '(mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mask' → logprob: -0.0019317318219691515
    2. 'mask' → logprob: -6.251931667327881
    3. ' (' → logprob: -13.126932144165039
    4. '((' → logprob: -14.626932144165039
    5. ' mask' → logprob: -15.001932144165039
    6. '(' → logprob: -16.25193214416504
    7. '	mask' → logprob: -16.50193214416504
    8. '(marker' → logprob: -17.25193214416504
    9. 'not' → logprob: -17.37693214416504
    10. '(mark' → logprob: -17.87693214416504

Token 517: '>>' (ID: 3920)
  Prédit: '>>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -4.127333340875339e-06
    2. ')>>' → logprob: -12.750003814697266
    3. '>>(' → logprob: -15.000003814697266
    4. ' >>' → logprob: -15.250003814697266
    5. '```' → logprob: -15.625003814697266
    6. '>' → logprob: -16.125003814697266
    7. '>>
' → logprob: -16.250003814697266
    8. '>>&' → logprob: -16.625003814697266
    9. '
' → logprob: -16.750003814697266
    10. '[' → logprob: -17.375003814697266

Token 518: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -4.4849443838757e-06
    2. ' i' → logprob: -12.375004768371582
    3. 'user' → logprob: -17.250003814697266
    4. ')i' → logprob: -17.500003814697266
    5. '	i' → logprob: -17.750003814697266
    6. '(i' → logprob: -17.875003814697266
    7. 'n' → logprob: -18.000003814697266
    8. ')' → logprob: -18.000003814697266
    9. '<|end|>' → logprob: -18.000003814697266
    10. ' ' → logprob: -18.125003814697266

Token 519: ')&' (ID: 34370)
  Prédit: ')&'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')&' → logprob: -1.7835754988482222e-05
    2. ')' → logprob: -11.125018119812012
    3. '&' → logprob: -12.750018119812012
    4. ')>>' → logprob: -17.625017166137695
    5. ' )' → logprob: -18.000017166137695
    6. '   ' → logprob: -18.625017166137695
    7. ')
' → logprob: -18.625017166137695
    8. '
' → logprob: -18.750017166137695
    9. '}&' → logprob: -19.000017166137695
    10. ')&&' → logprob: -19.000017166137695

Token 520: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. 'i' → logprob: -18.625
    4. '   ' → logprob: -20.0
    5. '
' → logprob: -20.125
    6. '```' → logprob: -20.25
    7. '&' → logprob: -20.625
    8. '0' → logprob: -20.625
    9. '(i' → logprob: -21.625
    10. '１' → logprob: -22.3125

Token 521: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5999875068664551
    2. '1' → logprob: -1.224987506866455
    3. ':
' → logprob: -2.099987506866455
    4. '           ' → logprob: -4.099987506866455
    5. '==' → logprob: -4.224987506866455
    6. '&' → logprob: -6.724987506866455
    7. '=' → logprob: -6.849987506866455
    8. ' ' → logprob: -7.974987506866455
    9. ' ==' → logprob: -8.099987030029297
    10. '       ' → logprob: -8.224987030029297

Token 522: '           ' (ID: 352)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.6973706483840942
    2. '           ' → logprob: -0.9473706483840942
    3. '       ' → logprob: -2.4473705291748047
    4. '1' → logprob: -3.8223705291748047
    5. '0' → logprob: -5.697370529174805
    6. ' w' → logprob: -6.322370529174805
    7. '   ' → logprob: -7.697370529174805
    8. '               ' → logprob: -9.322370529174805
    9. '```' → logprob: -9.572370529174805
    10. '	w' → logprob: -10.322370529174805

Token 523: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.1443100869655609
    2. 'w' (adapté à ' w') → logprob: -2.0193099975585938
    3. ' weights' → logprob: -6.519309997558594
    4. 'weights' → logprob: -9.269309997558594
    5. '   ' → logprob: -10.394309997558594
    6. '	w' → logprob: -11.519309997558594
    7. '       ' → logprob: -11.519309997558594
    8. ' ' → logprob: -12.644309997558594
    9. '```' → logprob: -12.894309997558594
    10. '           ' → logprob: -13.019309997558594

Token 524: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -4.906711546937004e-05
    2. '+=' → logprob: -10.000048637390137
    3. 'sum' → logprob: -13.000048637390137
    4. '_s' → logprob: -14.250048637390137
    5. '_SUM' → logprob: -15.375048637390137
    6. ' +=' → logprob: -15.625048637390137
    7. '=' → logprob: -16.625049591064453
    8. '_add' → logprob: -17.000049591064453
    9. '   ' → logprob: -17.125049591064453
    10. '+' → logprob: -17.375049591064453

Token 525: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.1602395623922348
    2. ' +=' → logprob: -1.910239577293396
    3. '+' → logprob: -11.910239219665527
    4. ']+=' → logprob: -12.160239219665527
    5. '    ' → logprob: -13.285239219665527
    6. '   ' → logprob: -14.535239219665527
    7. ' ' → logprob: -15.410239219665527
    8. '            ' → logprob: -15.660239219665527
    9. '```' → logprob: -15.660239219665527
    10. '=' → logprob: -15.785239219665527

Token 526: ' weights' (ID: 28460)
  Prédit: 'weights'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weights' → logprob: -0.0067154900170862675
    2. ' weights' → logprob: -5.006715297698975
    3. '(weights' → logprob: -16.381715774536133
    4. 'weight' → logprob: -18.256715774536133
    5. '_weights' → logprob: -18.381715774536133
    6. '.weights' → logprob: -18.381715774536133
    7. '20' → logprob: -19.006715774536133
    8. '   ' → logprob: -19.006715774536133
    9. 'Weights' → logprob: -19.506715774536133
    10. ' ' → logprob: -20.631715774536133

Token 527: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.875
    3. 'i' → logprob: -17.0
    4. '```' → logprob: -17.5
    5. '   ' → logprob: -17.875
    6. ' [' → logprob: -18.375
    7. '[
' → logprob: -18.5
    8. '[I' → logprob: -19.125
    9. '(i' → logprob: -19.375
    10. '`' → logprob: -19.75

Token 528: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.009442733600735664
    2. ']:
' → logprob: -5.2594428062438965
    3. '       ' → logprob: -6.7594428062438965
    4. ']
' → logprob: -7.2594428062438965
    5. ']+' → logprob: -7.5094428062438965
    6. ']:' → logprob: -8.134442329406738
    7. ']+=' → logprob: -8.134442329406738
    8. '<|end|>' → logprob: -8.134442329406738
    9. '[i' → logprob: -8.634442329406738
    10. ']>' → logprob: -8.884442329406738

Token 529: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00307551771402359
    2. 'for' → logprob: -6.37807559967041
    3. 'if' → logprob: -7.37807559967041
    4. '```' → logprob: -8.00307559967041
    5. '
' → logprob: -8.50307559967041
    6. ')' → logprob: -10.00307559967041
    7. '       ' → logprob: -10.25307559967041
    8. ' for' → logprob: -10.37807559967041
    9. ' if' → logprob: -10.50307559967041
    10. 'weights' → logprob: -10.50307559967041

Token 530: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' (adapté à ' w') → logprob: -0.0035569469910115004
    2. '   ' → logprob: -5.878556728363037
    3. 'if' → logprob: -7.878556728363037
    4. ' w' → logprob: -8.128557205200195
    5. 'for' → logprob: -9.753557205200195
    6. ' if' → logprob: -12.003557205200195
    7. '
' → logprob: -12.003557205200195
    8. '```' → logprob: -12.503557205200195
    9. ' for' → logprob: -13.753557205200195
    10. '           ' → logprob: -14.378557205200195

Token 531: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.0004738063144031912
    2. '+=' → logprob: -8.625473976135254
    3. 'sum' → logprob: -8.625473976135254
    4. ' +=' → logprob: -9.250473976135254
    5. '_SUM' → logprob: -12.500473976135254
    6. 'if' → logprob: -12.625473976135254
    7. '_' → logprob: -13.125473976135254
    8. 'w' → logprob: -13.500473976135254
    9. '=' → logprob: -13.500473976135254
    10. 'for' → logprob: -13.750473976135254

Token 532: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5761184692382812
    2. ' +=' → logprob: -0.8261184692382812
    3. '+' → logprob: -9.076118469238281
    4. '=' → logprob: -10.576118469238281
    5. '   ' → logprob: -10.951118469238281
    6. ' +' → logprob: -12.076118469238281
    7. ' =' → logprob: -12.576118469238281
    8. ']+=' → logprob: -12.576118469238281
    9. 'import' → logprob: -13.326118469238281
    10. ' ' → logprob: -13.826118469238281

Token 533: ' weights' (ID: 28460)
  Prédit: 'weights'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weights' → logprob: -0.014209930785000324
    2. ' weights' → logprob: -4.264209747314453
    3. '(weights' → logprob: -10.014209747314453
    4. '0' → logprob: -14.764209747314453
    5. '(' → logprob: -14.889209747314453
    6. 'weight' → logprob: -15.389209747314453
    7. ' (' → logprob: -15.514209747314453
    8. '.weights' → logprob: -16.014209747314453
    9. 'weig' → logprob: -16.389209747314453
    10. ' ' → logprob: -16.514209747314453

Token 534: '[last' (ID: 126100)
  Prédit: '[last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[last' → logprob: -1.676292231422849e-05
    2. 'last' → logprob: -11.000017166137695
    3. '(last' → logprob: -18.000017166137695
    4. '[' → logprob: -20.000017166137695
    5. '[
' → logprob: -20.250017166137695
    6. '[-' → logprob: -20.250017166137695
    7. 'if' → logprob: -20.750017166137695
    8. ' last' → logprob: -20.750017166137695
    9. ':last' → logprob: -21.000017166137695
    10. '[left' → logprob: -21.375017166137695

Token 535: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -7.465036105713807e-06
    2. 'if' → logprob: -12.500007629394531
    3. ' if' → logprob: -12.875007629394531
    4. ' ]' → logprob: -14.000007629394531
    5. '[' → logprob: -16.62500762939453
    6. ')' → logprob: -17.00000762939453
    7. ']*' → logprob: -17.50000762939453
    8. '```' → logprob: -17.62500762939453
    9. '   ' → logprob: -17.75000762939453
    10. '[i' → logprob: -18.25000762939453

Token 536: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.25198179483413696
    2. 'if' → logprob: -1.5019817352294922
    3. ']' → logprob: -10.251981735229492
    4. ')' → logprob: -12.376981735229492
    5. '[' → logprob: -12.501981735229492
    6. '   ' → logprob: -12.626981735229492
    7. ' ' → logprob: -13.001981735229492
    8. '```' → logprob: -13.376981735229492
    9. '	if' → logprob: -13.876981735229492
    10. ' ' → logprob: -14.376981735229492

Token 537: ' last' (ID: 2174)
  Prédit: ' last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' last' → logprob: -0.31327441334724426
    2. 'last' → logprob: -1.3132743835449219
    3. '(last' → logprob: -11.313274383544922
    4. ' (' → logprob: -15.063274383544922
    5. '0' → logprob: -16.938274383544922
    6. 'Last' → logprob: -16.938274383544922
    7. '	last' → logprob: -17.188274383544922
    8. ' ' → logprob: -17.688274383544922
    9. '[last' → logprob: -17.813274383544922
    10. '(' → logprob: -17.938274383544922

Token 538: '>=' (ID: 20974)
  Prédit: '>='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.0007295898394659162
    2. ' >=' → logprob: -7.250729560852051
    3. ']>=' → logprob: -11.50072956085205
    4. '>' → logprob: -11.75072956085205
    5. '0' → logprob: -14.50072956085205
    6. ')>=' → logprob: -14.75072956085205
    7. '[' → logprob: -15.00072956085205
    8. '≥' → logprob: -15.50072956085205
    9. ' ' → logprob: -17.375730514526367
    10. '   ' → logprob: -17.500730514526367

Token 539: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.578184497309849e-05
    2. ' ' → logprob: -9.375085830688477
    3. '-' → logprob: -14.125085830688477
    4. '   ' → logprob: -17.000085830688477
    5. '
' → logprob: -17.625085830688477
    6. '```' → logprob: -17.875085830688477
    7. ' ' → logprob: -18.375085830688477
    8. '  ' → logprob: -18.812585830688477
    9. ' -' → logprob: -18.875085830688477
    10. '>=' → logprob: -19.187585830688477

Token 540: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.6327663064002991
    2. 'else' → logprob: -0.7577663064002991
    3. ')' → logprob: -10.132766723632812
    4. ' ' → logprob: -10.257766723632812
    5. ':' → logprob: -10.632766723632812
    6. '   ' → logprob: -11.132766723632812
    7. '```' → logprob: -12.257766723632812
    8. '[' → logprob: -12.382766723632812
    9. ' if' → logprob: -12.382766723632812
    10. '+' → logprob: -12.382766723632812

Token 541: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.142802894115448
    2. ' ' → logprob: -2.0178029537200928
    3. '20' → logprob: -9.017803192138672
    4. ' weights' → logprob: -12.767803192138672
    5. 'weights' → logprob: -12.892803192138672
    6. ' ' → logprob: -14.392803192138672
    7. '   ' → logprob: -15.517803192138672
    8. '10' → logprob: -16.642803192138672
    9. '  ' → logprob: -16.642803192138672
    10. '1' → logprob: -17.017803192138672

Token 542: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0028188975993543863
    2. ' ' → logprob: -5.877819061279297
    3. 'weights' → logprob: -11.752819061279297
    4. '20' → logprob: -12.377819061279297
    5. ' weights' → logprob: -13.752819061279297
    6. '   ' → logprob: -15.127819061279297
    7. 'w' → logprob: -15.252819061279297
    8. ' ' → logprob: -16.252819061279297
    9. '  ' → logprob: -16.627819061279297
    10. 'last' → logprob: -16.627819061279297

Token 543: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35351553559303284
    2. '
' → logprob: -1.9785155057907104
    3. '<|end|>' → logprob: -2.353515625
    4. '    
' → logprob: -3.728515625
    5. ' ' → logprob: -4.478515625
    6. ')' → logprob: -4.978515625
    7. '<|end|>' → logprob: -5.478515625
    8. ' if' → logprob: -5.478515625
    9. '  
' → logprob: -5.978515625
    10. ' 
' → logprob: -5.978515625

Token 544: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7222393155097961
    2. '<|end|>' → logprob: -0.8472393155097961
    3. '   ' → logprob: -2.7222392559051514
    4. '<|end|>' → logprob: -4.8472394943237305
    5. '    
' → logprob: -5.4722394943237305
    6. '  
' → logprob: -6.2222394943237305
    7. ' 
' → logprob: -6.2222394943237305
    8. '

' → logprob: -6.4722394943237305
    9. ' ' → logprob: -7.3472394943237305
    10. '[' → logprob: -7.7222394943237305

Token 545: ' curr' (ID: 10495)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5126417875289917
    2. '
' → logprob: -1.1376417875289917
    3. '    
' → logprob: -2.8876419067382812
    4. ' 
' → logprob: -4.637641906738281
    5. '<|end|>' → logprob: -5.637641906738281
    6. '  
' → logprob: -6.137641906738281
    7. '\' → logprob: -6.637641906738281
    8. '	
' → logprob: -6.887641906738281
    9. '#' → logprob: -6.887641906738281
    10. '\n' → logprob: -7.387641906738281

Token 546: '_weight' (ID: 34711)
  Prédit: '_weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weight' → logprob: -0.05051233246922493
    2. '_' → logprob: -3.0505123138427734
    3. '_weights' → logprob: -6.550512313842773
    4. ' _' → logprob: -8.550512313842773
    5. '_w' → logprob: -9.175512313842773
    6. '_mask' → logprob: -10.550512313842773
    7. '_token' → logprob: -10.675512313842773
    8. '_sum' → logprob: -10.800512313842773
    9. 'Weight' → logprob: -11.050512313842773
    10. '_score' → logprob: -11.175512313842773

Token 547: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326520442962646
    2. ' =' → logprob: -1.3132652044296265
    3. '   ' → logprob: -13.688264846801758
    4. ')' → logprob: -14.438264846801758
    5. ' +=' → logprob: -14.438264846801758
    6. '+=' → logprob: -14.938264846801758
    7. '=
' → logprob: -15.563264846801758
    8. ',' → logprob: -15.688264846801758
    9. '```' → logprob: -15.813264846801758
    10. ' =
' → logprob: -16.563264846801758

Token 548: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.005233763717114925
    2. ' w' → logprob: -5.2552337646484375
    3. '	w' → logprob: -18.630233764648438
    4. 'curr' → logprob: -19.880233764648438
    5. ' ' → logprob: -20.130233764648438
    6. '_w' → logprob: -20.505233764648438
    7. '0' → logprob: -20.880233764648438
    8. '(w' → logprob: -20.880233764648438
    9. '=w' → logprob: -20.880233764648438
    10. '   ' → logprob: -21.380233764648438

Token 549: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -3.5716304410016164e-05
    2. 'sum' → logprob: -10.250035285949707
    3. 'w' → logprob: -15.750035285949707
    4. 's' → logprob: -17.000036239624023
    5. '_SUM' → logprob: -17.250036239624023
    6. 'um' → logprob: -17.375036239624023
    7. 'Sum' → logprob: -17.375036239624023
    8. '_' → logprob: -17.750036239624023
    9. '_s' → logprob: -17.875036239624023
    10. '=' → logprob: -18.625036239624023

Token 550: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5107622742652893
    2. '
' → logprob: -1.0107622146606445
    3. '<|end|>' → logprob: -3.8857622146606445
    4. '    
' → logprob: -4.3857622146606445
    5. '  
' → logprob: -6.8857622146606445
    6. '<|end|>' → logprob: -7.0107622146606445
    7. '#' → logprob: -8.135762214660645
    8. ' 
' → logprob: -8.635762214660645
    9. ')' → logprob: -8.635762214660645
    10. '   
' → logprob: -9.510762214660645

Token 551: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06243659555912018
    2. '
' → logprob: -3.812436580657959
    3. '    
' → logprob: -4.062436580657959
    4. '<|end|>' → logprob: -4.562436580657959
    5. '#' → logprob: -5.937436580657959
    6. '[' → logprob: -6.562436580657959
    7. '```' → logprob: -6.812436580657959
    8. '  
' → logprob: -7.062436580657959
    9. '\' → logprob: -7.062436580657959
    10. ' 
' → logprob: -7.187436580657959

Token 552: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.4211275279521942
    2. '   ' → logprob: -1.7961275577545166
    3. ' for' → logprob: -2.0461275577545166
    4. '#' → logprob: -3.0461275577545166
    5. '
' → logprob: -7.5461273193359375
    6. ' #' → logprob: -8.421127319335938
    7. '    
' → logprob: -9.671127319335938
    8. '```' → logprob: -9.921127319335938
    9. '	for' → logprob: -10.296127319335938
    10. 'start' → logprob: -10.546127319335938

Token 553: ' nxt' (ID: 160200)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1151600331068039
    2. 'i' → logprob: -2.3651599884033203
    3. ' nxt' → logprob: -4.24015998840332
    4. ' i' → logprob: -7.99015998840332
    5. 'next' → logprob: -9.74015998840332
    6. ' n' → logprob: -11.11515998840332
    7. '```' → logprob: -12.49015998840332
    8. '   ' → logprob: -12.74015998840332
    9. ' next' → logprob: -12.99015998840332
    10. '`' → logprob: -13.24015998840332

Token 554: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.029752571135759354
    2. 'in' → logprob: -3.529752492904663
    3. ' ' → logprob: -13.779752731323242
    4. '   ' → logprob: -15.029752731323242
    5. 'range' → logprob: -15.404752731323242
    6. 'import' → logprob: -16.029752731323242
    7. 'n' → logprob: -16.154752731323242
    8. '```' → logprob: -16.279752731323242
    9. 'In' → logprob: -16.654752731323242
    10. '	in' → logprob: -17.529752731323242

Token 555: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0015024791937321424
    2. ' range' → logprob: -6.501502513885498
    3. '(range' → logprob: -16.126502990722656
    4. 'in' → logprob: -18.376502990722656
    5. 'n' → logprob: -19.626502990722656
    6. '	range' → logprob: -21.626502990722656
    7. ' in' → logprob: -22.126502990722656
    8. '```' → logprob: -22.876502990722656
    9. ' ' → logprob: -23.001502990722656
    10. '
' → logprob: -23.751502990722656

Token 556: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.5760807991027832
    2. 'n' → logprob: -0.8260807991027832
    3. ' n' → logprob: -9.201080322265625
    4. '(' → logprob: -10.701080322265625
    5. ' (' → logprob: -11.701080322265625
    6. ',n' → logprob: -12.576080322265625
    7. 'range' → logprob: -13.451080322265625
    8. ',' → logprob: -13.576080322265625
    9. '   ' → logprob: -13.951080322265625
    10. '<n' → logprob: -14.451080322265625

Token 557: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.04105342552065849
    2. '):' → logprob: -3.291053533554077
    3. 'n' → logprob: -5.916053295135498
    4. '(n' → logprob: -8.791053771972656
    5. ',n' → logprob: -9.666053771972656
    6. '   ' → logprob: -9.791053771972656
    7. ':' → logprob: -11.666053771972656
    8. ':
' → logprob: -11.666053771972656
    9. '       ' → logprob: -12.416053771972656
    10. '):
' → logprob: -12.416053771972656

Token 558: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005166754592210054
    2. '   ' → logprob: -6.255166530609131
    3. ' if' → logprob: -6.505166530609131
    4. '<|end|>' → logprob: -6.630166530609131
    5. '	' → logprob: -9.005167007446289
    6. ':' → logprob: -10.255167007446289
    7. ' ' → logprob: -10.380167007446289
    8. '	if' → logprob: -10.380167007446289
    9. '    ' → logprob: -10.505167007446289
    10. '<|end|>' → logprob: -10.630167007446289

Token 559: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.3975065052509308
    2. '       ' → logprob: -1.3975064754486084
    3. ' if' → logprob: -2.5225064754486084
    4. '           ' → logprob: -8.522506713867188
    5. 'If' → logprob: -9.522506713867188
    6. '   ' → logprob: -9.522506713867188
    7. '	if' → logprob: -9.772506713867188
    8. '@if' → logprob: -9.897506713867188
    9. '```' → logprob: -10.772506713867188
    10. '#' → logprob: -10.897506713867188

Token 560: ' (' (ID: 350)
  Prédit: '(mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mask' → logprob: -0.029895467683672905
    2. ' (' → logprob: -3.529895544052124
    3. '(not' → logprob: -8.904895782470703
    4. '((' → logprob: -11.904895782470703
    5. ' not' → logprob: -14.404895782470703
    6. ' ' → logprob: -14.654895782470703
    7. '(n' → logprob: -14.904895782470703
    8. 'not' → logprob: -15.154895782470703
    9. '(mark' → logprob: -15.279895782470703
    10. '(m' → logprob: -15.529895782470703

Token 561: 'mask' (ID: 22527)
  Prédit: '(mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mask' → logprob: -0.005941716954112053
    2. 'mask' → logprob: -5.130941867828369
    3. ' (' → logprob: -12.255941390991211
    4. ' mask' → logprob: -12.880941390991211
    5. 'not' → logprob: -13.005941390991211
    6. '((' → logprob: -13.380941390991211
    7. '(not' → logprob: -14.255941390991211
    8. '(m' → logprob: -14.505941390991211
    9. '(' → logprob: -15.130941390991211
    10. '	mask' → logprob: -15.505941390991211

Token 562: '>>' (ID: 3920)
  Prédit: '>>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -5.741137283621356e-05
    2. '>>(' → logprob: -10.500057220458984
    3. '&' → logprob: -10.875057220458984
    4. '[n' → logprob: -12.750057220458984
    5. '>>&' → logprob: -13.125057220458984
    6. ' >>' → logprob: -13.250057220458984
    7. '&gt' → logprob: -13.375057220458984
    8. ' &' → logprob: -14.500057220458984
    9. '(n' → logprob: -14.625057220458984
    10. '>>
' → logprob: -15.000057220458984

Token 563: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -4.723352049040841e-06
    2. ' nxt' → logprob: -12.875004768371582
    3. 'n't' → logprob: -15.000004768371582
    4. '   ' → logprob: -15.125004768371582
    5. ' ' → logprob: -15.375004768371582
    6. '	n' → logprob: -15.625004768371582
    7. 'i' → logprob: -15.937504768371582
    8. '```' → logprob: -16.062503814697266
    9. '(n' → logprob: -16.125003814697266
    10. ''n' → logprob: -16.375003814697266

Token 564: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -0.00075769261457026
    2. 'n' → logprob: -7.250757694244385
    3. 't' → logprob: -10.250757217407227
    4. 'x' → logprob: -12.750757217407227
    5. 'ext' → logprob: -13.000757217407227
    6. '(n' → logprob: -13.375757217407227
    7. '[n' → logprob: -13.875757217407227
    8. ' nxt' → logprob: -13.875757217407227
    9. '```' → logprob: -14.375757217407227
    10. '_n' → logprob: -14.375757217407227

Token 565: ')&' (ID: 34370)
  Prédit: ')&'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')&' → logprob: -0.02982511930167675
    2. '&' → logprob: -3.529825210571289
    3. ')' → logprob: -9.529825210571289
    4. '"&' → logprob: -14.154825210571289
    5. '1' → logprob: -14.654825210571289
    6. '&i' → logprob: -15.654825210571289
    7. ' &' → logprob: -16.02982521057129
    8. '0' → logprob: -16.15482521057129
    9. '[' → logprob: -16.27982521057129
    10. ']&' → logprob: -16.65482521057129

Token 566: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.506661833962426e-05
    2. '0' → logprob: -9.37508487701416
    3. ' ' → logprob: -16.500085830688477
    4. '
' → logprob: -17.750085830688477
    5. 'n' → logprob: -18.000085830688477
    6. '```' → logprob: -18.125085830688477
    7. '   ' → logprob: -19.312585830688477
    8. '
' → logprob: -19.625085830688477
    9. '

' → logprob: -19.812585830688477
    10. 'i' → logprob: -19.812585830688477

Token 567: '==' (ID: 560)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.018822025507688522
    2. '==' → logprob: -4.018822193145752
    3. '[' → logprob: -8.393821716308594
    4. '1' → logprob: -8.518821716308594
    5. '0' → logprob: -9.268821716308594
    6. ')==' → logprob: -10.143821716308594
    7. ' ==' → logprob: -10.518821716308594
    8. '```' → logprob: -10.768821716308594
    9. '=' → logprob: -11.018821716308594
    10. ')&' → logprob: -11.268821716308594

Token 568: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '1' → logprob: -16.875
    4. '=' → logprob: -18.125
    5. '۰' → logprob: -18.6875
    6. '```' → logprob: -18.875
    7. '000' → logprob: -19.375
    8. 'False' → logprob: -19.9375
    9. '==' → logprob: -20.375
    10. '   ' → logprob: -20.5625

Token 569: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004636368714272976
    2. ':
' → logprob: -6.129636287689209
    3. '           ' → logprob: -6.879636287689209
    4. ',' → logprob: -7.879636287689209
    5. '):' → logprob: -7.879636287689209
    6. '       ' → logprob: -8.504636764526367
    7. '<|end|>' → logprob: -8.629636764526367
    8. '{' → logprob: -9.379636764526367
    9. ' :' → logprob: -9.879636764526367
    10. '):
' → logprob: -10.879636764526367

Token 570: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06495451182126999
    2. '       ' → logprob: -3.8149545192718506
    3. ' ' → logprob: -4.1899542808532715
    4. '#' → logprob: -4.8149542808532715
    5. '		' → logprob: -5.6899542808532715
    6. '            
' → logprob: -6.1899542808532715
    7. '   ' → logprob: -6.6899542808532715
    8. '	' → logprob: -6.8149542808532715
    9. ' #' → logprob: -6.8149542808532715
    10. '(' → logprob: -6.8149542808532715

Token 571: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' (adapté à ' from') → logprob: -0.22197093069553375
    2. '#' → logprob: -2.346971035003662
    3. '           ' → logprob: -2.346971035003662
    4. ' from' → logprob: -5.596971035003662
    5. '               ' → logprob: -6.096971035003662
    6. ' #' → logprob: -6.471971035003662
    7. '       ' → logprob: -9.346970558166504
    8. '```' → logprob: -10.096970558166504
    9. '   ' → logprob: -10.346970558166504
    10. '
' → logprob: -10.971970558166504

Token 572: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.000241801084484905
    2. 'pos' → logprob: -8.375242233276367
    3. '_dist' → logprob: -12.250242233276367
    4. '_' → logprob: -12.250242233276367
    5. '_position' → logprob: -14.000242233276367
    6. '```' → logprob: -16.000242233276367
    7. '_positions' → logprob: -16.125242233276367
    8. 'dist' → logprob: -16.500242233276367
    9. 'Pos' → logprob: -16.500242233276367
    10. 'last' → logprob: -16.625242233276367

Token 573: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06196959316730499
    2. ' =' → logprob: -2.811969518661499
    3. 'dist' → logprob: -13.936969757080078
    4. '_dist' → logprob: -14.936969757080078
    5. ' dist' → logprob: -15.436969757080078
    6. '=
' → logprob: -15.811969757080078
    7. ',' → logprob: -16.061969757080078
    8. ' ' → logprob: -16.811969757080078
    9. '```' → logprob: -16.936969757080078
    10. 'from' → logprob: -17.061969757080078

Token 574: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.06219387799501419
    2. ' dist' → logprob: -2.8121938705444336
    3. '0' → logprob: -8.812193870544434
    4. '(dist' → logprob: -9.562193870544434
    5. ' ' → logprob: -12.687193870544434
    6. '	dist' → logprob: -13.562193870544434
    7. '   ' → logprob: -14.687193870544434
    8. '_dist' → logprob: -15.312193870544434
    9. 'Dist' → logprob: -15.312193870544434
    10. '(' → logprob: -15.312193870544434

Token 575: '[last' (ID: 126100)
  Prédit: '[last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[last' → logprob: -0.00043448375072330236
    2. 'last' → logprob: -7.750434398651123
    3. '[n' → logprob: -13.000434875488281
    4. '(last' → logprob: -14.750434875488281
    5. '[' → logprob: -14.875434875488281
    6. '[
' → logprob: -15.125434875488281
    7. ' last' → logprob: -15.125434875488281
    8. 'n' → logprob: -16.00043487548828
    9. 'if' → logprob: -16.87543487548828
    10. '[-' → logprob: -17.37543487548828

Token 576: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00011105302110081539
    2. 'if' → logprob: -9.500110626220703
    3. ' if' → logprob: -10.625110626220703
    4. ']
' → logprob: -12.000110626220703
    5. ' ]' → logprob: -12.375110626220703
    6. 'n' → logprob: -15.250110626220703
    7. '```' → logprob: -15.500110626220703
    8. ']+' → logprob: -15.750110626220703
    9. ']

' → logprob: -15.750110626220703
    10. ')' → logprob: -16.125110626220703

Token 577: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.28695496916770935
    2. 'if' → logprob: -1.4119549989700317
    3. ']' → logprob: -5.286954879760742
    4. ')' → logprob: -7.411954879760742
    5. '```' → logprob: -9.411954879760742
    6. ' ' → logprob: -11.661954879760742
    7. '
' → logprob: -11.786954879760742
    8. '<|end|>' → logprob: -12.411954879760742
    9. 'If' → logprob: -12.911954879760742
    10. ' to' → logprob: -13.036954879760742

Token 578: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.5759472250938416
    2. ' last' → logprob: -0.8259472250938416
    3. '(last' → logprob: -11.825946807861328
    4. '[last' → logprob: -15.075946807861328
    5. 'n' → logprob: -17.075946807861328
    6. 'Last' → logprob: -17.200946807861328
    7. ',last' → logprob: -17.450946807861328
    8. '	last' → logprob: -17.575946807861328
    9. ':last' → logprob: -18.325946807861328
    10. '_last' → logprob: -18.450946807861328

Token 579: '>=' (ID: 20974)
  Prédit: '>='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.014833788387477398
    2. ' >=' → logprob: -4.514833927154541
    3. '<' → logprob: -5.639833927154541
    4. ']>=' → logprob: -9.264833450317383
    5. '>' → logprob: -9.514833450317383
    6. ' <' → logprob: -11.389833450317383
    7. ')>=' → logprob: -11.389833450317383
    8. 'else' → logprob: -11.639833450317383
    9. '0' → logprob: -11.639833450317383
    10. '+' → logprob: -12.389833450317383

Token 580: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9266199160483666e-05
    2. ' ' → logprob: -10.875019073486328
    3. '-' → logprob: -15.250019073486328
    4. '>=' → logprob: -18.500019073486328
    5. '
' → logprob: -18.750019073486328
    6. '   ' → logprob: -19.375019073486328
    7. 'last' → logprob: -19.375019073486328
    8. '...' → logprob: -19.625019073486328
    9. '=' → logprob: -19.750019073486328
    10. '```' → logprob: -20.125019073486328

Token 581: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.5759462714195251
    2. 'else' → logprob: -0.8259462714195251
    3. ' ' → logprob: -12.825945854187012
    4. '```' → logprob: -13.075945854187012
    5. ' ' → logprob: -13.950945854187012
    6. '           ' → logprob: -14.700945854187012
    7. '	else' → logprob: -15.950945854187012
    8. ':' → logprob: -16.450946807861328
    9. '         ' → logprob: -16.575946807861328
    10. '0' → logprob: -16.825946807861328

Token 582: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00038014890742488205
    2. ' ' → logprob: -7.875380039215088
    3. '   ' → logprob: -18.18787956237793
    4. '۰' → logprob: -18.50037956237793
    5. '  ' → logprob: -19.18787956237793
    6. ' ' → logprob: -19.18787956237793
    7. '```' → logprob: -19.50037956237793
    8. '    ' → logprob: -20.12537956237793
    9. '０' → logprob: -20.18787956237793
    10. '`' → logprob: -20.56287956237793

Token 583: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '۰' → logprob: -20.1875
    4. '   ' → logprob: -20.625
    5. '1' → logprob: -21.0625
    6. '```' → logprob: -21.125
    7. '000' → logprob: -21.375
    8. '00' → logprob: -21.5
    9. '200' → logprob: -21.5
    10. '０' → logprob: -21.6875

Token 584: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011056192219257355
    2. 'to' → logprob: -5.011056423187256
    3. '<|end|>' → logprob: -6.011056423187256
    4. ' to' → logprob: -7.261056423187256
    5. '            
' → logprob: -7.511056423187256
    6. '		' → logprob: -8.886055946350098
    7. '            ' → logprob: -9.011055946350098
    8. ' ' → logprob: -9.886055946350098
    9. '
' → logprob: -9.886055946350098
    10. '          ' → logprob: -10.136055946350098

Token 585: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06126962974667549
    2. 'to' → logprob: -3.061269521713257
    3. ' to' → logprob: -5.686269760131836
    4. '            
' → logprob: -5.936269760131836
    5. '```' → logprob: -6.186269760131836
    6. '            ' → logprob: -6.436269760131836
    7. '		' → logprob: -7.311269760131836
    8. '<|end|>' → logprob: -7.561269760131836
    9. ' 
' → logprob: -7.811269760131836
    10. '          ' → logprob: -8.311269760131836

Token 586: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' (adapté à ' to') → logprob: -0.08957149088382721
    2. ' to' → logprob: -2.464571475982666
    3. '           ' → logprob: -7.464571475982666
    4. '            ' → logprob: -10.964571952819824
    5. '               ' → logprob: -11.464571952819824
    6. '```' → logprob: -11.464571952819824
    7. '            
' → logprob: -12.214571952819824
    8. '	to' → logprob: -12.714571952819824
    9. ' 
' → logprob: -12.839571952819824
    10. ' ' → logprob: -13.214571952819824

Token 587: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.0002585978072602302
    2. 'pos' → logprob: -8.500258445739746
    3. '_dist' → logprob: -10.375258445739746
    4. 'dist' → logprob: -11.000258445739746
    5. '[pos' → logprob: -12.500258445739746
    6. '[' → logprob: -13.875258445739746
    7. 'Pos' → logprob: -14.000258445739746
    8. '```' → logprob: -14.750258445739746
    9. '=' → logprob: -14.875258445739746
    10. 'n' → logprob: -15.375258445739746

Token 588: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020678490400314
    2. ' =' → logprob: -2.3502068519592285
    3. 'dist' → logprob: -16.85020637512207
    4. '[' → logprob: -17.97520637512207
    5. '=
' → logprob: -17.97520637512207
    6. ' ' → logprob: -18.35020637512207
    7. ' dist' → logprob: -18.47520637512207
    8. '   ' → logprob: -19.10020637512207
    9. '```' → logprob: -19.72520637512207
    10. '=

' → logprob: -20.47520637512207

Token 589: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0067154900170862675
    2. ' dist' → logprob: -5.006715297698975
    3. '	dist' → logprob: -16.506715774536133
    4. '(dist' → logprob: -17.381715774536133
    5. '.dist' → logprob: -18.631715774536133
    6. 'Dist' → logprob: -19.381715774536133
    7. '_dist' → logprob: -19.631715774536133
    8. 'd' → logprob: -20.006715774536133
    9. '           ' → logprob: -20.131715774536133
    10. '```' → logprob: -20.756715774536133

Token 590: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -1.6166903151315637e-05
    2. 'n' → logprob: -11.125016212463379
    3. '[next' → logprob: -13.625016212463379
    4. '```' → logprob: -16.375015258789062
    5. '[' → logprob: -16.750015258789062
    6. '[
' → logprob: -17.125015258789062
    7. '<n' → logprob: -17.875015258789062
    8. '(n' → logprob: -17.875015258789062
    9. '   ' → logprob: -18.500015258789062
    10. '``' → logprob: -19.250015258789062

Token 591: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -7.226628895296017e-06
    2. '[n' → logprob: -12.125007629394531
    3. 'st' → logprob: -13.875007629394531
    4. 't' → logprob: -15.250007629394531
    5. '[' → logprob: -15.500007629394531
    6. 'x' → logprob: -16.25000762939453
    7. 'ext' → logprob: -16.37500762939453
    8. '```' → logprob: -16.75000762939453
    9. '[next' → logprob: -17.25000762939453
    10. '#' → logprob: -18.12500762939453

Token 592: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1336800754070282
    2. ']
' → logprob: -2.1336801052093506
    3. ')' → logprob: -5.3836798667907715
    4. '           ' → logprob: -7.0086798667907715
    5. ')
' → logprob: -7.1336798667907715
    6. '```' → logprob: -9.00868034362793
    7. ']
' → logprob: -9.75868034362793
    8. '<|end|>' → logprob: -10.25868034362793
    9. '       ' → logprob: -10.38368034362793
    10. '
' → logprob: -10.38368034362793

Token 593: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007012902293354273
    2. '
' → logprob: -5.757012844085693
    3. '```' → logprob: -6.757012844085693
    4. 'd' → logprob: -7.632012844085693
    5. '            
' → logprob: -7.757012844085693
    6. '		' → logprob: -7.757012844085693
    7. ' 
' → logprob: -8.132013320922852
    8. ' ' → logprob: -8.257013320922852
    9. '            ' → logprob: -8.757013320922852
    10. ' d' → logprob: -9.132013320922852

Token 594: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.3289003074169159
    2. 'd' (adapté à ' d') → logprob: -1.4539003372192383
    3. '           ' → logprob: -3.2039003372192383
    4. '	d' → logprob: -5.703900337219238
    5. ' ' → logprob: -6.703900337219238
    6. ' 
' → logprob: -8.078900337219238
    7. '		' → logprob: -8.078900337219238
    8. ' ' → logprob: -8.703900337219238
    9. '```' → logprob: -8.953900337219238
    10. '            ' → logprob: -8.953900337219238

Token 595: '_move' (ID: 39414)
  Prédit: '_move'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_move' → logprob: -6.134509021649137e-05
    2. 'ist' → logprob: -9.87506103515625
    3. '_' → logprob: -12.75006103515625
    4. 'istance' → logprob: -12.87506103515625
    5. 'move' → logprob: -13.25006103515625
    6. '_MOVE' → logprob: -14.75006103515625
    7. '_Move' → logprob: -15.00006103515625
    8. '_m' → logprob: -15.12506103515625
    9. 'n' → logprob: -15.62506103515625
    10. '_to' → logprob: -16.12506103515625

Token 596: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22541594505310059
    2. '=' → logprob: -1.6004159450531006
    3. ')' → logprob: -13.22541618347168
    4. '_' → logprob: -14.35041618347168
    5. ' ' → logprob: -15.72541618347168
    6. ' ' → logprob: -16.10041618347168
    7. '```' → logprob: -16.10041618347168
    8. '_move' → logprob: -16.35041618347168
    9. ' *' → logprob: -16.60041618347168
    10. '>' → logprob: -17.10041618347168

Token 597: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.0019291093340143561
    2. ' abs' → logprob: -6.25192928314209
    3. '(abs' → logprob: -15.12692928314209
    4. 'to' → logprob: -15.87692928314209
    5. 'dist' → logprob: -17.126928329467773
    6. '```' → logprob: -18.126928329467773
    7. ' ' → logprob: -18.376928329467773
    8. '.abs' → logprob: -18.501928329467773
    9. ' dist' → logprob: -18.876928329467773
    10. ' to' → logprob: -19.126928329467773

Token 598: '(to' (ID: 24042)
  Prédit: '(to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(to' → logprob: -0.01416350994259119
    2. 'to' → logprob: -4.264163494110107
    3. ' to' → logprob: -17.264163970947266
    4. '[to' → logprob: -17.389163970947266
    5. '(' → logprob: -18.639163970947266
    6. '	to' → logprob: -19.514163970947266
    7. 'To' → logprob: -20.139163970947266
    8. 'from' → logprob: -20.139163970947266
    9. '(from' → logprob: -20.264163970947266
    10. 'dist' → logprob: -20.764163970947266

Token 599: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.0012257046764716506
    2. 'to' → logprob: -7.001225471496582
    3. 'pos' → logprob: -8.251225471496582
    4. 'os' → logprob: -10.876225471496582
    5. 'dist' → logprob: -11.001225471496582
    6. 'from' → logprob: -11.751225471496582
    7. '_dist' → logprob: -12.501225471496582
    8. '(to' → logprob: -13.376225471496582
    9. '[to' → logprob: -14.001225471496582
    10. 'n' → logprob: -14.001225471496582

Token 600: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.009756559506058693
    2. '-' → logprob: -4.634756565093994
    3. ' ' → logprob: -15.509756088256836
    4. '-n' → logprob: -15.759756088256836
    5. ' ' → logprob: -16.259756088256836
    6. 'to' → logprob: -17.509756088256836
    7. '-to' → logprob: -17.634756088256836
    8. 'n' → logprob: -18.009756088256836
    9. '-t' → logprob: -18.134756088256836
    10. '-d' → logprob: -18.384756088256836

Token 601: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.005257833749055862
    2. ' from' → logprob: -5.255257606506348
    3. 'to' → logprob: -10.880257606506348
    4. ' to' → logprob: -12.755257606506348
    5. '(from' → logprob: -14.255257606506348
    6. '[from' → logprob: -14.255257606506348
    7. ' ' → logprob: -15.255257606506348
    8. '```' → logprob: -15.255257606506348
    9. '	from' → logprob: -15.380257606506348
    10. ' ' → logprob: -16.380258560180664

Token 602: '_pos' (ID: 14692)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0206772368401289
    2. '[n' → logprob: -4.270677089691162
    3. '_pos' → logprob: -5.520677089691162
    4. 'pos' → logprob: -6.645677089691162
    5. '_n' → logprob: -7.145677089691162
    6. 'idx' → logprob: -9.27067756652832
    7. 'dist' → logprob: -10.14567756652832
    8. '```' → logprob: -10.14567756652832
    9. '(n' → logprob: -10.27067756652832
    10. 'nth' → logprob: -10.52067756652832

Token 603: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16027358174324036
    2. ')
' → logprob: -1.910273551940918
    3. '           ' → logprob: -10.285273551940918
    4. ')
' → logprob: -11.410273551940918
    5. ' )' → logprob: -13.660273551940918
    6. ')

' → logprob: -14.035273551940918
    7. ' )
' → logprob: -14.160273551940918
    8. '```' → logprob: -14.410273551940918
    9. ')`
' → logprob: -15.910273551940918
    10. '   ' → logprob: -16.035274505615234

Token 604: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3307870030403137
    2. ' 
' → logprob: -2.580786943435669
    3. '```' → logprob: -2.705786943435669
    4. '            
' → logprob: -3.455786943435669
    5. ' ' → logprob: -3.705786943435669
    6. '[' → logprob: -3.705786943435669
    7. 'speed' → logprob: -4.580787181854248
    8. '            ' → logprob: -4.580787181854248
    9. '\' → logprob: -4.830787181854248
    10. '
' → logprob: -5.080787181854248

Token 605: ' speed' (ID: 7733)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.04077249765396118
    2. 'speed' (adapté à ' speed') → logprob: -5.040772438049316
    3. ' ' → logprob: -5.165772438049316
    4. '\t' → logprob: -5.540772438049316
    5. '\n' → logprob: -5.540772438049316
    6. ' ' → logprob: -5.665772438049316
    7. '
' → logprob: -5.665772438049316
    8. '\' → logprob: -5.665772438049316
    9. ' \' → logprob: -6.540772438049316
    10. '[' → logprob: -6.540772438049316

Token 606: '_move' (ID: 39414)
  Prédit: '_move'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_move' → logprob: -0.00019483851792756468
    2. '_' → logprob: -9.000194549560547
    3. '_bw' → logprob: -10.875194549560547
    4. '=' → logprob: -11.125194549560547
    5. '_speed' → logprob: -11.250194549560547
    6. '_w' → logprob: -12.000194549560547
    7. '_=' → logprob: -12.875194549560547
    8. '_n' → logprob: -13.000194549560547
    9. ' =' → logprob: -13.125194549560547
    10. 'move' → logprob: -13.250194549560547

Token 607: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519311308860779
    2. ' =' → logprob: -1.5019311904907227
    3. '200' → logprob: -14.001931190490723
    4. ')' → logprob: -15.251931190490723
    5. ' ' → logprob: -15.376931190490723
    6. ',' → logprob: -15.501931190490723
    7. '   ' → logprob: -16.001930236816406
    8. '=
' → logprob: -16.251930236816406
    9. '=}' → logprob: -16.751930236816406
    10. ' =
' → logprob: -17.001930236816406

Token 608: ' ' (ID: 220)
  Prédit: '200'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '200' → logprob: -0.007609108928591013
    2. ' ' → logprob: -4.882608890533447
    3. '(' → logprob: -13.507609367370605
    4. '2' → logprob: -14.132609367370605
    5. '20' → logprob: -15.257609367370605
    6. '   ' → logprob: -15.757609367370605
    7. 'speed' → logprob: -15.882609367370605
    8. ' (' → logprob: -16.50760841369629
    9. '`' → logprob: -16.63260841369629
    10. ' ' → logprob: -16.88260841369629

Token 609: '200' (ID: 1179)
  Prédit: '200'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '200' → logprob: -0.00023083435371518135
    2. ' ' → logprob: -8.37523078918457
    3. '(' → logprob: -16.25023078918457
    4. '20' → logprob: -16.50023078918457
    5. '2' → logprob: -16.75023078918457
    6. '   ' → logprob: -18.37523078918457
    7. '201' → logprob: -18.62523078918457
    8. 'speed' → logprob: -19.00023078918457
    9. '250' → logprob: -19.12523078918457
    10. '0' → logprob: -19.37523078918457

Token 610: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00015038289711810648
    2. '*' → logprob: -8.875150680541992
    3. '*(' → logprob: -12.750150680541992
    4. '/' → logprob: -13.000150680541992
    5. '*/' → logprob: -13.250150680541992
    6. '```' → logprob: -13.375150680541992
    7. '(' → logprob: -14.500150680541992
    8. '/(' → logprob: -15.375150680541992
    9. ' ' → logprob: -15.625150680541992
    10. '[' → logprob: -15.875150680541992

Token 611: '/(' (ID: 27334)
  Prédit: '/('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/(' → logprob: -1.0325924449716695e-05
    2. '/' → logprob: -11.62501049041748
    3. ' /' → logprob: -13.75001049041748
    4. '```' → logprob: -15.75001049041748
    5. ' /(' → logprob: -16.000009536743164
    6. ')/(' → logprob: -17.125009536743164
    7. '/
' → logprob: -17.875009536743164
    8. '(' → logprob: -18.250009536743164
    9. '   ' → logprob: -19.875009536743164
    10. '/[' → logprob: -20.000009536743164

Token 612: '70' (ID: 2789)
  Prédit: '70'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '70' → logprob: -0.018176162615418434
    2. '(' → logprob: -4.018176078796387
    3. 'curr' → logprob: -11.268176078796387
    4. '(curr' → logprob: -11.893176078796387
    5. ' ' → logprob: -12.518176078796387
    6. ' (' → logprob: -13.893176078796387
    7. '```' → logprob: -14.143176078796387
    8. '[' → logprob: -14.893176078796387
    9. '`' → logprob: -15.518176078796387
    10. '
' → logprob: -15.643176078796387

Token 613: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -9.491498531133402e-06
    2. ' +' → logprob: -11.750009536743164
    3. '+c' → logprob: -14.375009536743164
    4. '+
' → logprob: -14.625009536743164
    5. '[curr' → logprob: -16.000009536743164
    6. '+[' → logprob: -16.500009536743164
    7. '+w' → logprob: -16.625009536743164
    8. '+xml' → logprob: -16.750009536743164
    9. '+(' → logprob: -17.625009536743164
    10. '+C' → logprob: -17.625009536743164

Token 614: 'curr' (ID: 28376)
  Prédit: 'curr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'curr' → logprob: -6.034592388459714e-06
    2. ' curr' → logprob: -12.125005722045898
    3. '(curr' → logprob: -14.875005722045898
    4. 'cur' → logprob: -16.8750057220459
    5. '[curr' → logprob: -16.8750057220459
    6. '	curr' → logprob: -17.5000057220459
    7. 'weights' → logprob: -17.6250057220459
    8. 'current' → logprob: -17.6250057220459
    9. '```' → logprob: -19.7500057220459
    10. '_curr' → logprob: -20.3750057220459

Token 615: '_weight' (ID: 34711)
  Prédit: '_weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weight' → logprob: -3.5716304410016164e-05
    2. 'weight' → logprob: -10.375035285949707
    3. 'w' → logprob: -13.000035285949707
    4. '_weights' → logprob: -14.250035285949707
    5. '```' → logprob: -14.875035285949707
    6. '_w' → logprob: -15.125035285949707
    7. '_sum' → logprob: -15.375035285949707
    8. 'curr' → logprob: -15.750035285949707
    9. '\' → logprob: -16.500036239624023
    10. 'Weight' → logprob: -16.625036239624023

Token 616: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014170682057738304
    2. ')
' → logprob: -4.2641706466674805
    3. ')
' → logprob: -12.51417064666748
    4. ')

' → logprob: -13.76417064666748
    5. ')n' → logprob: -14.01417064666748
    6. ' )' → logprob: -15.13917064666748
    7. '   ' → logprob: -15.38917064666748
    8. ')\' → logprob: -15.38917064666748
    9. ')#' → logprob: -15.63917064666748
    10. '+' → logprob: -16.264171600341797

Token 617: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03454241529107094
    2. '		' → logprob: -4.284542560577393
    3. 't' → logprob: -4.534542560577393
    4. '	t' → logprob: -5.784542560577393
    5. ' t' → logprob: -6.534542560577393
    6. '	       ' → logprob: -7.034542560577393
    7. '   ' → logprob: -7.284542560577393
    8. ')' → logprob: -7.784542560577393
    9. '```' → logprob: -7.784542560577393
    10. '       ' → logprob: -7.909542560577393

Token 618: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -0.3455212116241455
    2. '	t' → logprob: -1.8455212116241455
    3. '\t' → logprob: -2.8455212116241455
    4. ' t' → logprob: -3.5955212116241455
    5. '	' → logprob: -3.9705212116241455
    6. '		' → logprob: -4.345520973205566
    7. ' ' → logprob: -5.970520973205566
    8. ' \' → logprob: -6.095520973205566
    9. '           ' → logprob: -6.345520973205566
    10. '	s' → logprob: -6.845520973205566

Token 619: '_move' (ID: 39414)
  Prédit: '_move'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_move' → logprob: -4.008129963040119e-06
    2. '_' → logprob: -13.250003814697266
    3. 'move' → logprob: -13.875003814697266
    4. '_MOVE' → logprob: -14.500003814697266
    5. '_Move' → logprob: -15.625003814697266
    6. ' _' → logprob: -16.250003814697266
    7. '```' → logprob: -16.375003814697266
    8. '_m' → logprob: -16.750003814697266
    9. ''_' → logprob: -16.875003814697266
    10. ')_' → logprob: -17.625003814697266

Token 620: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31330475211143494
    2. '=' → logprob: -1.3133047819137573
    3. ' *' → logprob: -10.813304901123047
    4. ')' → logprob: -11.813304901123047
    5. '*' → logprob: -11.813304901123047
    6. ' ' → logprob: -12.563304901123047
    7. ' +=' → logprob: -13.813304901123047
    8. ',' → logprob: -14.063304901123047
    9. ' *=' → logprob: -14.188304901123047
    10. ' ' → logprob: -14.563304901123047

Token 621: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.31326186656951904
    2. 'd' → logprob: -1.313261866569519
    3. ' ' → logprob: -16.313261032104492
    4. '	d' → logprob: -17.313261032104492
    5. '(d' → logprob: -18.563261032104492
    6. ' ' → logprob: -19.438261032104492
    7. 't' → logprob: -20.313261032104492
    8. '   ' → logprob: -20.938261032104492
    9. '```' → logprob: -21.188261032104492
    10. '_d' → logprob: -21.563261032104492

Token 622: '_move' (ID: 39414)
  Prédit: '_move'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_move' → logprob: -1.1041145626222715e-05
    2. 'move' → logprob: -11.500011444091797
    3. '_MOVE' → logprob: -14.750011444091797
    4. '_' → logprob: -16.000011444091797
    5. 'Move' → logprob: -16.250011444091797
    6. 'ove' → logprob: -16.250011444091797
    7. 'd' → logprob: -16.250011444091797
    8. '_Move' → logprob: -16.875011444091797
    9. 'ist' → logprob: -17.250011444091797
    10. 'MOVE' → logprob: -17.750011444091797

Token 623: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.12693965435028076
    2. '/' → logprob: -2.1269397735595703
    3. ' ' → logprob: -12.75193977355957
    4. ')' → logprob: -13.12693977355957
    5. '           ' → logprob: -13.50193977355957
    6. ' /
' → logprob: -13.62693977355957
    7. '/code' → logprob: -14.12693977355957
    8. ' ' → logprob: -14.25193977355957
    9. '```' → logprob: -14.62693977355957
    10. '            ' → logprob: -15.12693977355957

Token 624: ' speed' (ID: 7733)
  Prédit: 'speed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'speed' → logprob: -0.0005539863486774266
    2. ' speed' → logprob: -7.500554084777832
    3. '(speed' → logprob: -14.125554084777832
    4. '	speed' → logprob: -15.750554084777832
    5. '```' → logprob: -16.625553131103516
    6. 'float' → logprob: -17.500553131103516
    7. '.speed' → logprob: -18.125553131103516
    8. 'spe' → logprob: -18.375553131103516
    9. 'Speed' → logprob: -18.500553131103516
    10. '(' → logprob: -18.500553131103516

Token 625: '_move' (ID: 39414)
  Prédit: '_move'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_move' → logprob: -0.005803416948765516
    2. '_speed' → logprob: -5.38080358505249
    3. 'speed' → logprob: -6.75580358505249
    4. 'move' → logprob: -11.255803108215332
    5. '_' → logprob: -13.630803108215332
    6. 'Move' → logprob: -14.505803108215332
    7. '```' → logprob: -14.630803108215332
    8. 'peed' → logprob: -14.755803108215332
    9. '_step' → logprob: -15.005803108215332
    10. ' _' → logprob: -15.130803108215332

Token 626: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.006769961211830378
    2. '           ' → logprob: -5.381770133972168
    3. '
' → logprob: -7.006770133972168
    4. 'new' → logprob: -7.881770133972168
    5. '            
' → logprob: -8.631770133972168
    6. '

' → logprob: -8.756770133972168
    7. ' 
' → logprob: -9.256770133972168
    8. '  
' → logprob: -9.381770133972168
    9. '\n' → logprob: -9.506770133972168
    10. '```' → logprob: -9.756770133972168

Token 627: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04474920779466629
    2. '           ' → logprob: -3.2947492599487305
    3. 'new' → logprob: -5.5447492599487305
    4. '
' → logprob: -7.0447492599487305
    5. ' new' → logprob: -7.5447492599487305
    6. '```' → logprob: -7.6697492599487305
    7. '            
' → logprob: -8.16974925994873
    8. '

' → logprob: -9.16974925994873
    9. '\n' → logprob: -9.29474925994873
    10. ' 
' → logprob: -9.41974925994873

Token 628: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.03304107487201691
    2. ' new' → logprob: -3.658041000366211
    3. '           ' → logprob: -5.158041000366211
    4. '
' → logprob: -7.033041000366211
    5. '```' → logprob: -10.408041000366211
    6. '
' → logprob: -10.533041000366211
    7. 'newline' → logprob: -12.158041000366211
    8. '               ' → logprob: -12.658041000366211
    9. '            
' → logprob: -13.283041000366211
    10. '       ' → logprob: -13.283041000366211

Token 629: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -5.512236498361744e-07
    2. 'mask' → logprob: -15.125000953674316
    3. '_MASK' → logprob: -16.5
    4. '```' → logprob: -17.0
    5. '_masks' → logprob: -17.25
    6. '_' → logprob: -18.0
    7. '_cache' → logprob: -18.875
    8. ' _' → logprob: -19.0
    9. '_token' → logprob: -19.0
    10. '_cost' → logprob: -19.125

Token 630: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931495666503906
    2. ' =' → logprob: -0.6931495666503906
    3. '|' → logprob: -13.94314956665039
    4. ' |=' → logprob: -14.06814956665039
    5. ' |' → logprob: -15.19314956665039
    6. ')' → logprob: -15.69314956665039
    7. ' =
' → logprob: -17.31814956665039
    8. '=
' → logprob: -17.31814956665039
    9. '```' → logprob: -17.44314956665039
    10. 'new' → logprob: -17.44314956665039

Token 631: ' mask' (ID: 10910)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.029800597578287125
    2. ' mask' → logprob: -3.5298006534576416
    3. '(mask' → logprob: -9.904800415039062
    4. '	mask' → logprob: -16.154800415039062
    5. ' (' → logprob: -19.154800415039062
    6. '_mask' → logprob: -19.279800415039062
    7. '   ' → logprob: -19.529800415039062
    8. '(' → logprob: -19.529800415039062
    9. '.mask' → logprob: -19.654800415039062
    10. '```' → logprob: -19.904800415039062

Token 632: ' |' (ID: 1022)
  Prédit: ' |'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' |' → logprob: -0.029775485396385193
    2. '|' → logprob: -3.529775381088257
    3. '(mask' → logprob: -11.279775619506836
    4. ' mask' → logprob: -12.279775619506836
    5. 'mask' → logprob: -13.154775619506836
    6. '|(' → logprob: -13.279775619506836
    7. ' ' → logprob: -13.529775619506836
    8. '
' → logprob: -13.904775619506836
    9. '│' → logprob: -14.779775619506836
    10. '```' → logprob: -15.029775619506836

Token 633: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.5048530030981055e-06
    2. ' (' → logprob: -13.500001907348633
    3. '(mask' → logprob: -16.375001907348633
    4. '(new' → logprob: -17.000001907348633
    5. '1' → logprob: -17.875001907348633
    6. '(n' → logprob: -18.750001907348633
    7. '((' → logprob: -19.625001907348633
    8. '```' → logprob: -20.250001907348633
    9. 'mask' → logprob: -20.375001907348633
    10. 'new' → logprob: -20.750001907348633

Token 634: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001502717612311244
    2. '1' → logprob: -6.501502513885498
    3. '```' → logprob: -15.501502990722656
    4. ' (' → logprob: -15.751502990722656
    5. '(n' → logprob: -16.626502990722656
    6. 'n' → logprob: -17.626502990722656
    7. '``' → logprob: -18.626502990722656
    8. '
' → logprob: -18.876502990722656
    9. '{' → logprob: -19.251502990722656
    10. '(
' → logprob: -19.876502990722656

Token 635: '<<' (ID: 5354)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1473984718322754
    2. '(n' → logprob: -2.3973984718322754
    3. '<<' → logprob: -3.1473984718322754
    4. '<n' → logprob: -5.897398471832275
    5. 'n' → logprob: -8.647397994995117
    6. ' (' → logprob: -9.147397994995117
    7. '1' → logprob: -9.647397994995117
    8. '()<<' → logprob: -11.647397994995117
    9. '```' → logprob: -11.772397994995117
    10. '(next' → logprob: -12.397397994995117

Token 636: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0280383548888494e-06
    2. ' nxt' → logprob: -14.875000953674316
    3. '(n' → logprob: -15.125000953674316
    4. '```' → logprob: -16.000001907348633
    5. 'next' → logprob: -16.500001907348633
    6. '
' → logprob: -16.875001907348633
    7. '[' → logprob: -17.750001907348633
    8. '[n' → logprob: -18.000001907348633
    9. '``' → logprob: -18.000001907348633
    10. '`' → logprob: -18.125001907348633

Token 637: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -0.18785317242145538
    2. 'n' → logprob: -1.812853217124939
    3. 't' → logprob: -4.9378533363342285
    4. 'x' → logprob: -7.8128533363342285
    5. ' nxt' → logprob: -8.31285285949707
    6. 'txt' → logprob: -9.18785285949707
    7. '[n' → logprob: -9.81285285949707
    8. '```' → logprob: -10.81285285949707
    9. '(n' → logprob: -11.06285285949707
    10. 'xta' → logprob: -12.18785285949707

Token 638: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.049822885543107986
    2. ')
' → logprob: -3.1748228073120117
    3. ',n' → logprob: -5.924822807312012
    4. ')n' → logprob: -6.049822807312012
    5. '),' → logprob: -6.674822807312012
    6. '(n' → logprob: -8.424822807312012
    7. ',' → logprob: -8.924822807312012
    8. 'n' → logprob: -9.174822807312012
    9. '[n' → logprob: -10.799822807312012
    10. '<n' → logprob: -11.549822807312012

Token 639: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0077951829880476
    2. 'cost' → logprob: -5.757795333862305
    3. ' cost' → logprob: -5.757795333862305
    4. '
' → logprob: -7.007795333862305
    5. '            
' → logprob: -8.132795333862305
    6. '```' → logprob: -9.132795333862305
    7. '       ' → logprob: -10.007795333862305
    8. '          ' → logprob: -11.257795333862305
    9. '               ' → logprob: -11.257795333862305
    10. '            ' → logprob: -11.382795333862305

Token 640: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' (adapté à ' cost') → logprob: -0.00032759839086793363
    2. 'next' → logprob: -9.000328063964844
    3. 'new' → logprob: -9.500328063964844
    4. ' cost' → logprob: -10.375328063964844
    5. '           ' → logprob: -10.875328063964844
    6. 'c' → logprob: -11.000328063964844
    7. 'total' → logprob: -11.125328063964844
    8. 'time' → logprob: -11.125328063964844
    9. 'sub' → logprob: -11.500328063964844
    10. 'res' → logprob: -11.875328063964844

Token 641: '_next' (ID: 25436)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.022157272323966026
    2. ' =' → logprob: -4.522157192230225
    3. '=' → logprob: -5.147157192230225
    4. ' ,' → logprob: -5.397157192230225
    5. ',t' → logprob: -8.147157669067383
    6. ' +' → logprob: -8.772157669067383
    7. '_,' → logprob: -9.022157669067383
    8. '+' → logprob: -9.897157669067383
    9. ',n' → logprob: -11.397157669067383
    10. ',_' → logprob: -11.397157669067383

Token 642: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009505256894044578
    2. ' ,' → logprob: -8.625950813293457
    3. ',t' → logprob: -8.625950813293457
    4. ',n' → logprob: -8.875950813293457
    5. ',new' → logprob: -9.125950813293457
    6. ' =' → logprob: -9.375950813293457
    7. ',c' → logprob: -9.500950813293457
    8. '=' → logprob: -9.500950813293457
    9. ',next' → logprob: -10.500950813293457
    10. ',path' → logprob: -11.375950813293457

Token 643: ' path' (ID: 3104)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.2381716966629028
    2. 'path' → logprob: -1.2381716966629028
    3. ' nxt' → logprob: -1.8631716966629028
    4. ' path' → logprob: -1.9881716966629028
    5. 'next' → logprob: -2.4881715774536133
    6. ' p' → logprob: -4.363171577453613
    7. ' next' → logprob: -4.488171577453613
    8. 'route' → logprob: -4.738171577453613
    9. 'n' → logprob: -5.488171577453613
    10. 'sub' → logprob: -6.238171577453613

Token 644: '_next' (ID: 25436)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0015041481237858534
    2. ' =' → logprob: -6.501503944396973
    3. '_next' → logprob: -14.126503944396973
    4. '_new' → logprob: -15.001503944396973
    5. '_=' → logprob: -15.001503944396973
    6. 'new' → logprob: -15.501503944396973
    7. '_' → logprob: -16.12650489807129
    8. ')' → logprob: -17.25150489807129
    9. '```' → logprob: -17.37650489807129
    10. 'next' → logprob: -17.50150489807129

Token 645: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023245595395565033
    2. ' =' → logprob: -3.7732455730438232
    3. '   ' → logprob: -15.898245811462402
    4. ')' → logprob: -17.273244857788086
    5. ' ' → logprob: -17.773244857788086
    6. ')=' → logprob: -18.148244857788086
    7. '=
' → logprob: -19.398244857788086
    8. ',' → logprob: -20.148244857788086
    9. '	' → logprob: -20.273244857788086
    10. '[' → logprob: -20.398244857788086

Token 646: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0009117019944824278
    2. ' dp' → logprob: -7.000911712646484
    3. '(dp' → logprob: -16.375911712646484
    4. '	dp' → logprob: -16.500911712646484
    5. '_dp' → logprob: -18.250911712646484
    6. '   ' → logprob: -19.125911712646484
    7. 'dt' → logprob: -19.500911712646484
    8. '
' → logprob: -20.125911712646484
    9. 'd' → logprob: -20.500911712646484
    10. '.dp' → logprob: -20.625911712646484

Token 647: '_with' (ID: 14161)
  Prédit: '_with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_with' → logprob: -4.739826181321405e-05
    2. 'with' → logprob: -10.00004768371582
    3. 'With' → logprob: -14.62504768371582
    4. '(n' → logprob: -14.87504768371582
    5. '(_' → logprob: -15.37504768371582
    6. '_WITH' → logprob: -15.87504768371582
    7. '_mask' → logprob: -16.00004768371582
    8. '(with' → logprob: -16.25004768371582
    9. '```' → logprob: -16.25004768371582
    10. ' with' → logprob: -16.75004768371582

Token 648: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.00911001581698656
    2. 'path' → logprob: -4.759109973907471
    3. 'mask' → logprob: -8.259110450744629
    4. 'new' → logprob: -9.634110450744629
    5. '_with' → logprob: -10.134110450744629
    6. 'with' → logprob: -10.259110450744629
    7. '_mask' → logprob: -10.634110450744629
    8. '(mask' → logprob: -10.759110450744629
    9. '(path' → logprob: -10.884110450744629
    10. 'n' → logprob: -12.009110450744629

Token 649: '(new' (ID: 2648)
  Prédit: '(new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -5.512236498361744e-07
    2. 'new' → logprob: -14.625000953674316
    3. '(' → logprob: -18.125
    4. '[new' → logprob: -19.0
    5. ' (' → logprob: -19.375
    6. '```' → logprob: -20.0
    7. ' new' → logprob: -20.25
    8. '(n' → logprob: -20.5
    9. ')new' → logprob: -20.5
    10. '=new' → logprob: -20.75

Token 650: '_mask' (ID: 21732)
  Prédit: '_mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mask' → logprob: -0.00988806877285242
    2. 'mask' → logprob: -4.634888172149658
    3. 'new' → logprob: -9.3848876953125
    4. '(mask' → logprob: -10.7598876953125
    5. '(new' → logprob: -11.7598876953125
    6. 'n' → logprob: -12.3848876953125
    7. 'emask' → logprob: -13.2598876953125
    8. '_MASK' → logprob: -13.2598876953125
    9. '_move' → logprob: -13.6348876953125
    10. 'm' → logprob: -13.7598876953125

Token 651: ',' (ID: 11)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00339480210095644
    2. ',n' → logprob: -5.753394603729248
    3. ',' → logprob: -8.878395080566406
    4. 'n' → logprob: -9.628395080566406
    5. '(new' → logprob: -12.503395080566406
    6. '(' → logprob: -13.503395080566406
    7. ')' → logprob: -13.503395080566406
    8. '```' → logprob: -13.878395080566406
    9. ',new' → logprob: -13.878395080566406
    10. '[n' → logprob: -14.128395080566406

Token 652: ' nxt' (ID: 160200)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -3.173704271830502e-06
    2. ' nxt' → logprob: -13.00000286102295
    3. '(n' → logprob: -14.25000286102295
    4. '
' → logprob: -16.500003814697266
    5. '[n' → logprob: -17.125003814697266
    6. 'n't' → logprob: -17.500003814697266
    7. 'next' → logprob: -18.000003814697266
    8. ')n' → logprob: -18.125003814697266
    9. '```' → logprob: -18.125003814697266
    10. '<n' → logprob: -18.875003814697266

Token 653: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.10023502260446548
    2. ')' → logprob: -2.3502349853515625
    3. ')
' → logprob: -11.475234985351562
    4. '   ' → logprob: -11.850234985351562
    5. '())
' → logprob: -12.350234985351562
    6. ')`
' → logprob: -12.850234985351562
    7. '()' → logprob: -13.475234985351562
    8. '()
' → logprob: -13.600234985351562
    9. ' )
' → logprob: -14.725234985351562
    10. '           ' → logprob: -15.600234985351562

Token 654: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22850804030895233
    2. '```' → logprob: -1.9785079956054688
    3. ' cost' → logprob: -3.3535079956054688
    4. '
' → logprob: -4.103507995605469
    5. 'cost' → logprob: -5.478507995605469
    6. '``' → logprob: -5.978507995605469
    7. '            
' → logprob: -6.228507995605469
    8. '       ' → logprob: -6.353507995605469
    9. '+' → logprob: -7.603507995605469
    10. '   ' → logprob: -7.728507995605469

Token 655: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' (adapté à ' cost') → logprob: -0.08814705163240433
    2. ' cost' → logprob: -2.5881471633911133
    3. '           ' → logprob: -4.713147163391113
    4. '```' → logprob: -9.088147163391113
    5. '
' → logprob: -9.338147163391113
    6. 'if' → logprob: -12.338147163391113
    7. '``' → logprob: -12.463147163391113
    8. '               ' → logprob: -12.588147163391113
    9. 't' → logprob: -12.588147163391113
    10. '       ' → logprob: -12.713147163391113

Token 656: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47408443689346313
    2. ' =' → logprob: -0.9740844368934631
    3. '   ' → logprob: -13.224084854125977
    4. '+' → logprob: -13.224084854125977
    5. '_move' → logprob: -13.849084854125977
    6. '```' → logprob: -14.599084854125977
    7. ')' → logprob: -14.974084854125977
    8. 't' → logprob: -14.974084854125977
    9. '=t' → logprob: -14.974084854125977
    10. ' ' → logprob: -15.224084854125977

Token 657: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.10020806640386581
    2. ' t' → logprob: -2.350208044052124
    3. '	t' → logprob: -14.725208282470703
    4. ' ' → logprob: -14.850208282470703
    5. '           ' → logprob: -15.225208282470703
    6. '`t' → logprob: -15.725208282470703
    7. '   ' → logprob: -15.850208282470703
    8. ' ' → logprob: -16.975208282470703
    9. '(t' → logprob: -17.100208282470703
    10. 'cost' → logprob: -17.725208282470703

Token 658: '_move' (ID: 39414)
  Prédit: '_move'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_move' → logprob: -9.088346359931165e-07
    2. 'move' → logprob: -15.000000953674316
    3. '_cost' → logprob: -15.000000953674316
    4. '_MOVE' → logprob: -16.625
    5. '+' → logprob: -17.5
    6. '_' → logprob: -17.5
    7. 't' → logprob: -17.625
    8. ' _' → logprob: -17.875
    9. '_m' → logprob: -18.75
    10. 'ove' → logprob: -18.875

Token 659: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.10020699352025986
    2. '+' → logprob: -2.3502070903778076
    3. ' ' → logprob: -15.725207328796387
    4. ' +
' → logprob: -17.47520637512207
    5. '＋' → logprob: -17.60020637512207
    6. ' ' → logprob: -17.72520637512207
    7. '+c' → logprob: -17.72520637512207
    8. ' plus' → logprob: -18.22520637512207
    9. ' +
' → logprob: -18.35020637512207
    10. '+
' → logprob: -18.85020637512207

Token 660: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.0007099286303855479
    2. ' cost' → logprob: -7.2507100105285645
    3. '(cost' → logprob: -19.250709533691406
    4. '_cost' → logprob: -21.750709533691406
    5. '.cost' → logprob: -23.250709533691406
    6. 'Cost' → logprob: -23.750709533691406
    7. '-cost' → logprob: -24.250709533691406
    8. 'code' → logprob: -24.500709533691406
    9. ' ' → logprob: -25.875709533691406
    10. '```' → logprob: -26.125709533691406

Token 661: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: 0.0
    2. 'next' → logprob: -17.75
    3. '[next' → logprob: -19.75
    4. ' next' → logprob: -20.125
    5. '_cost' → logprob: -20.5
    6. 'Next' → logprob: -20.625
    7. '_NEXT' → logprob: -21.25
    8. '_n' → logprob: -21.375
    9. '_' → logprob: -21.5
    10. '_new' → logprob: -22.375

Token 662: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0010482928482815623
    2. '<|end|>' → logprob: -7.8760480880737305
    3. '
' → logprob: -8.62604808807373
    4. '       ' → logprob: -8.75104808807373
    5. '   ' → logprob: -9.00104808807373
    6. ' if' → logprob: -10.25104808807373
    7. '<|end|>' → logprob: -10.25104808807373
    8. '               ' → logprob: -10.50104808807373
    9. '          ' → logprob: -10.62604808807373
    10. '```' → logprob: -10.75104808807373

Token 663: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009755142964422703
    2. '   ' → logprob: -5.6347551345825195
    3. '       ' → logprob: -6.2597551345825195
    4. '```' → logprob: -6.3847551345825195
    5. '<|end|>' → logprob: -7.1347551345825195
    6. 'if' → logprob: -7.3847551345825195
    7. '
' → logprob: -7.7597551345825195
    8. ' if' → logprob: -8.13475513458252
    9. '<|end|>' → logprob: -8.75975513458252
    10. '               ' → logprob: -9.50975513458252

Token 664: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.26341894268989563
    2. 'if' (adapté à ' if') → logprob: -1.5134189128875732
    3. ' if' → logprob: -4.513419151306152
    4. '       ' → logprob: -8.138419151306152
    5. '   ' → logprob: -8.888419151306152
    6. '	if' → logprob: -10.888419151306152
    7. '               ' → logprob: -12.513419151306152
    8. '```' → logprob: -12.888419151306152
    9. '		' → logprob: -13.013419151306152
    10. '          ' → logprob: -13.263419151306152

Token 665: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.16022463142871857
    2. ' cost' → logprob: -1.9102246761322021
    3. '(cost' → logprob: -14.910224914550781
    4. 'Cost' → logprob: -18.16022491455078
    5. '_cost' → logprob: -19.28522491455078
    6. ' ' → logprob: -19.28522491455078
    7. '```' → logprob: -19.41022491455078
    8. '   ' → logprob: -19.66022491455078
    9. 'code' → logprob: -19.91022491455078
    10. 'c' → logprob: -20.03522491455078

Token 666: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.31326842308044434
    2. '<' → logprob: -1.3132684230804443
    3. '<n' → logprob: -13.063268661499023
    4. '<size' → logprob: -14.688268661499023
    5. '<num' → logprob: -14.688268661499023
    6. '<|end|>' → logprob: -14.813268661499023
    7. '<int' → logprob: -14.938268661499023
    8. '[' → logprob: -14.938268661499023
    9. '<float' → logprob: -15.438268661499023
    10. '<th' → logprob: -15.563268661499023

Token 667: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.01416350994259119
    2. ' res' → logprob: -4.264163494110107
    3. '```' → logprob: -17.264163970947266
    4. '   ' → logprob: -18.639163970947266
    5. '	res' → logprob: -18.639163970947266
    6. '(res' → logprob: -19.389163970947266
    7. '
' → logprob: -19.764163970947266
    8. '_res' → logprob: -20.014163970947266
    9. '$res' → logprob: -20.139163970947266
    10. 'inf' → logprob: -20.264163970947266

Token 668: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03177899122238159
    2. ':
' → logprob: -3.9067790508270264
    3. '               ' → logprob: -4.531778812408447
    4. '           ' → logprob: -8.156779289245605
    5. '       ' → logprob: -9.906779289245605
    6. '                       ' → logprob: -11.281779289245605
    7. '):' → logprob: -11.531779289245605
    8. '):
' → logprob: -11.656779289245605
    9. ' :' → logprob: -11.656779289245605
    10. '```' → logprob: -12.031779289245605

Token 669: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007999918423593044
    2. 'res' → logprob: -5.757999897003174
    3. '       ' → logprob: -6.007999897003174
    4. '           ' → logprob: -7.257999897003174
    5. ' res' → logprob: -7.257999897003174
    6. '```' → logprob: -7.257999897003174
    7. '{
' → logprob: -9.258000373840332
    8. '   ' → logprob: -10.008000373840332
    9. ':
' → logprob: -10.758000373840332
    10. '[' → logprob: -10.758000373840332

Token 670: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.0003396343090571463
    2. ' res' → logprob: -8.00033950805664
    3. '                   ' → logprob: -12.62533950805664
    4. '               ' → logprob: -14.00033950805664
    5. '```' → logprob: -17.75033950805664
    6. '(res' → logprob: -18.62533950805664
    7. '_res' → logprob: -19.00033950805664
    8. '	res' → logprob: -19.50033950805664
    9. 'cost' → logprob: -19.62533950805664
    10. '           ' → logprob: -19.87533950805664

Token 671: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20149607956409454
    2. ' =' → logprob: -1.7014961242675781
    3. ',' → logprob: -9.451496124267578
    4. '   ' → logprob: -13.326496124267578
    5. '=res' → logprob: -13.451496124267578
    6. '               ' → logprob: -14.951496124267578
    7. '                   ' → logprob: -15.076496124267578
    8. '```' → logprob: -16.076496124267578
    9. ',res' → logprob: -16.326496124267578
    10. ' ,' → logprob: -16.701496124267578

Token 672: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.00861468818038702
    2. ' cost' → logprob: -4.758614540100098
    3. '(cost' → logprob: -16.758615493774414
    4. 'code' → logprob: -19.133615493774414
    5. '_cost' → logprob: -19.383615493774414
    6. '   ' → logprob: -20.383615493774414
    7. '```' → logprob: -20.383615493774414
    8. 'Cost' → logprob: -20.508615493774414
    9. 'cos' → logprob: -20.633615493774414
    10. '.cost' → logprob: -21.258615493774414

Token 673: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.38479554653167725
    2. ' path' → logprob: -1.7597955465316772
    3. 'path' → logprob: -2.009795665740967
    4. ',' → logprob: -5.009795665740967
    5. '
' → logprob: -5.759795665740967
    6. ',path' → logprob: -7.009795665740967
    7. ',
' → logprob: -7.384795665740967
    8. '                
' → logprob: -7.634795665740967
    9. '           ' → logprob: -8.009795188903809
    10. '_path' → logprob: -8.259795188903809

Token 674: '               ' (ID: 506)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.007479787338525057
    2. ' path' → logprob: -5.382479667663574
    3. '               ' → logprob: -5.882479667663574
    4. '[path' → logprob: -10.882479667663574
    5. '           ' → logprob: -11.007479667663574
    6. '```' → logprob: -11.507479667663574
    7. '                   ' → logprob: -11.757479667663574
    8. '_path' → logprob: -13.007479667663574
    9. '"path' → logprob: -13.257479667663574
    10. ',path' → logprob: -13.382479667663574

Token 675: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' (adapté à ' path') → logprob: -4.56102097814437e-05
    2. ' path' → logprob: -10.000045776367188
    3. '               ' → logprob: -17.125045776367188
    4. '           ' → logprob: -17.250045776367188
    5. '   ' → logprob: -18.500045776367188
    6. '[path' → logprob: -19.750045776367188
    7. '_path' → logprob: -19.875045776367188
    8. '.path' → logprob: -19.875045776367188
    9. '                   ' → logprob: -19.875045776367188
    10. '[' → logprob: -20.125045776367188

Token 676: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -2.522638169466518e-05
    2. ' =' → logprob: -10.750024795532227
    3. '[path' → logprob: -12.875024795532227
    4. 'path' → logprob: -15.125024795532227
    5. '[' → logprob: -15.375024795532227
    6. ',path' → logprob: -15.500024795532227
    7. '=[' → logprob: -16.125024795532227
    8. '_path' → logprob: -16.500024795532227
    9. '=n' → logprob: -16.875024795532227
    10. '/path' → logprob: -17.500024795532227

Token 677: ' [' (ID: 723)
  Prédit: '[path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[path' → logprob: -0.15161360800266266
    2. 'path' → logprob: -2.526613712310791
    3. '[n' → logprob: -2.901613712310791
    4. '[' → logprob: -5.276613712310791
    5. ' [' → logprob: -8.151613235473633
    6. '[(' → logprob: -8.401613235473633
    7. '(path' → logprob: -9.651613235473633
    8. '[N' → logprob: -10.776613235473633
    9. ' path' → logprob: -10.901613235473633
    10. '[next' → logprob: -11.401613235473633

Token 678: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0006364276050589979
    2. 'numbers' → logprob: -7.375636577606201
    3. ' nxt' → logprob: -12.250636100769043
    4. 'nums' → logprob: -13.750636100769043
    5. '
' → logprob: -14.375636100769043
    6. '   ' → logprob: -14.500636100769043
    7. ' numbers' → logprob: -14.500636100769043
    8. 'next' → logprob: -14.625636100769043
    9. '	n' → logprob: -15.125636100769043
    10. '<n' → logprob: -15.500636100769043

Token 679: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -1.6240566083070007e-06
    2. 't' → logprob: -14.250001907348633
    3. 'ext' → logprob: -14.375001907348633
    4. '```' → logprob: -15.500001907348633
    5. 'x' → logprob: -17.000001907348633
    6. ''t' → logprob: -17.375001907348633
    7. 'txt' → logprob: -18.000001907348633
    8. ']' → logprob: -18.125001907348633
    9. '
' → logprob: -18.250001907348633
    10. '[' → logprob: -18.250001907348633

Token 680: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0013282144209370017
    2. ']+' → logprob: -6.626327991485596
    3. ' ]' → logprob: -13.126328468322754
    4. ']+=' → logprob: -16.251327514648438
    5. ']
' → logprob: -16.751327514648438
    6. '']' → logprob: -17.876327514648438
    7. '`]' → logprob: -17.876327514648438
    8. '"]' → logprob: -18.126327514648438
    9. ']+\' → logprob: -18.626327514648438
    10. '```' → logprob: -18.751327514648438

Token 681: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03814442455768585
    2. ' +' → logprob: -3.28814435005188
    3. ']+' → logprob: -9.4131441116333
    4. ']' → logprob: -11.0381441116333
    5. '+p' → logprob: -13.2881441116333
    6. '```' → logprob: -14.7881441116333
    7. '+n' → logprob: -14.9131441116333
    8. '+k' → logprob: -14.9131441116333
    9. ')+' → logprob: -15.0381441116333
    10. ',path' → logprob: -15.2881441116333

Token 682: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.0004306692280806601
    2. ' path' → logprob: -7.750430583953857
    3. '   ' → logprob: -18.250431060791016
    4. ' ' → logprob: -19.625431060791016
    5. '[path' → logprob: -20.125431060791016
    6. '(path' → logprob: -20.375431060791016
    7. '       ' → logprob: -21.250431060791016
    8. '           ' → logprob: -21.500431060791016
    9. '	path' → logprob: -22.000431060791016
    10. '  ' → logprob: -22.625431060791016

Token 683: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -0.008240550756454468
    2. 'next' → logprob: -5.383240699768066
    3. 'return' → logprob: -5.758240699768066
    4. '[next' → logprob: -8.133240699768066
    5. '
' → logprob: -10.008240699768066
    6. '_return' → logprob: -10.133240699768066
    7. '```' → logprob: -10.508240699768066
    8. '(next' → logprob: -11.383240699768066
    9. 'Next' → logprob: -11.633240699768066
    10. '_path' → logprob: -12.258240699768066

Token 684: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0024868345353752375
    2. 'return' → logprob: -6.127486705780029
    3. '
' → logprob: -8.252487182617188
    4. ' return' → logprob: -10.252487182617188
    5. '	return' → logprob: -12.627487182617188
    6. '       ' → logprob: -13.877487182617188
    7. '    
' → logprob: -14.377487182617188
    8. '```' → logprob: -14.877487182617188
    9. ':return' → logprob: -15.502487182617188
    10. '           ' → logprob: -16.002487182617188

Token 685: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014320284128189087
    2. 'return' → logprob: -4.264320373535156
    3. '
' → logprob: -9.139320373535156
    4. ' return' → logprob: -10.264320373535156
    5. '	return' → logprob: -11.889320373535156
    6. '```' → logprob: -12.389320373535156
    7. '       ' → logprob: -13.389320373535156
    8. '    
' → logprob: -13.639320373535156
    9. ':return' → logprob: -15.389320373535156
    10. '           ' → logprob: -15.639320373535156

Token 686: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6933174133300781
    2. 'return' (adapté à ' return') → logprob: -0.6933174133300781
    3. ' return' → logprob: -8.693317413330078
    4. '	return' → logprob: -14.068317413330078
    5. '
' → logprob: -14.318317413330078
    6. '       ' → logprob: -14.693317413330078
    7. '```' → logprob: -15.693317413330078
    8. '           ' → logprob: -16.068317413330078
    9. '{return' → logprob: -16.318317413330078
    10. ':return' → logprob: -16.693317413330078

Token 687: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -2.975612187583465e-05
    2. '(res' → logprob: -11.000029563903809
    3. ' res' → logprob: -11.250029563903809
    4. ' (' → logprob: -20.250030517578125
    5. '(' → logprob: -20.375030517578125
    6. '   ' → logprob: -23.125030517578125
    7. '	res' → logprob: -23.250030517578125
    8. '$res' → logprob: -24.125030517578125
    9. ',res' → logprob: -25.625030517578125
    10. ' ' → logprob: -26.125030517578125

Token 688: ',' (ID: 11)
  Prédit: ',path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',path' → logprob: -0.5822325944900513
    2. ',' → logprob: -0.8322325944900513
    3. 'path' → logprob: -5.082232475280762
    4. '[path' → logprob: -10.582232475280762
    5. ' path' → logprob: -10.957232475280762
    6. '(path' → logprob: -11.832232475280762
    7. ',p' → logprob: -12.082232475280762
    8. '@Path' → logprob: -12.582232475280762
    9. ' ,' → logprob: -12.832232475280762
    10. '"path' → logprob: -13.207232475280762

Token 689: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -2.7610454708337784e-05
    2. ' path' → logprob: -10.500027656555176
    3. '[path' → logprob: -18.50002670288086
    4. '(path' → logprob: -20.75002670288086
    5. '/path' → logprob: -22.62502670288086
    6. '_path' → logprob: -23.50002670288086
    7. '"path' → logprob: -24.37502670288086
    8. '	path' → logprob: -24.62502670288086
    9. '<|end|>' → logprob: -24.75002670288086
    10. '.path' → logprob: -24.87502670288086

Token 690: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.17922300100326538
    2. 'result' → logprob: -2.42922306060791
    3. 'res' → logprob: -2.67922306060791
    4. '#' → logprob: -5.80422306060791
    5. '
' → logprob: -6.67922306060791
    6. 'if' → logprob: -6.67922306060791
    7. 'answer' → logprob: -7.55422306060791
    8. '```' → logprob: -8.30422306060791
    9. '#print' → logprob: -8.42922306060791
    10. 'time' → logprob: -8.55422306060791

Token 691: '_,' (ID: 14152)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.39756447076797485
    2. 'res' → logprob: -1.39756441116333
    3. 'print' → logprob: -2.77256441116333
    4. 'time' → logprob: -4.89756441116333
    5. 'if' → logprob: -5.14756441116333
    6. '#' → logprob: -6.52256441116333
    7. 'start' → logprob: -6.89756441116333
    8. 'answer' → logprob: -7.52256441116333
    9. '
' → logprob: -7.64756441116333
    10. 'cost' → logprob: -7.64756441116333

Token 692: ' best' (ID: 1636)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.009119579568505287
    2. 'route' → logprob: -5.134119510650635
    3. '[]' → logprob: -6.884119510650635
    4. '_path' → logprob: -7.509119510650635
    5. '[' → logprob: -7.759119510650635
    6. '[path' → logprob: -8.009119987487793
    7. 'best' → logprob: -8.384119987487793
    8. ' path' → logprob: -9.134119987487793
    9. 'answer' → logprob: -9.384119987487793
    10. 'result' → logprob: -10.009119987487793

Token 693: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.07049461454153061
    2. 'path' → logprob: -2.6954946517944336
    3. '<|end|>' → logprob: -8.320494651794434
    4. '_route' → logprob: -8.695494651794434
    5. ' =' → logprob: -10.320494651794434
    6. '=' → logprob: -10.445494651794434
    7. ' path' → logprob: -10.820494651794434
    8. '_' → logprob: -10.945494651794434
    9. '_paths' → logprob: -11.070494651794434
    10. ',' → logprob: -11.695494651794434

Token 694: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018150296062231064
    2. ' =' → logprob: -4.018150329589844
    3. '=sys' → logprob: -15.643150329589844
    4. '_=' → logprob: -16.768150329589844
    5. '=_' → logprob: -17.018150329589844
    6. ')' → logprob: -17.143150329589844
    7. '＝' → logprob: -18.393150329589844
    8. ',' → logprob: -18.393150329589844
    9. '=list' → logprob: -18.518150329589844
    10. ')=' → logprob: -18.643150329589844

Token 695: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -8.494741632603109e-05
    2. ' dp' → logprob: -9.37508487701416
    3. '(dp' → logprob: -19.000085830688477
    4. '	dp' → logprob: -20.250085830688477
    5. '```' → logprob: -20.500085830688477
    6. 'df' → logprob: -20.625085830688477
    7. 'd' → logprob: -20.750085830688477
    8. '_dp' → logprob: -21.125085830688477
    9. 'db' → logprob: -21.375085830688477
    10. '0' → logprob: -22.000085830688477

Token 696: '_with' (ID: 14161)
  Prédit: '_with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_with' → logprob: -0.0005723327049054205
    2. 'with' → logprob: -7.500572204589844
    3. '(_' → logprob: -11.500572204589844
    4. '_mask' → logprob: -12.750572204589844
    5. '(' → logprob: -13.125572204589844
    6. 'With' → logprob: -14.000572204589844
    7. '_full' → logprob: -14.125572204589844
    8. '_' → logprob: -14.500572204589844
    9. '(mask' → logprob: -14.500572204589844
    10. '```' → logprob: -14.875572204589844

Token 697: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.12697471678256989
    2. 'path' → logprob: -2.1269748210906982
    3. 'pat' → logprob: -11.376975059509277
    4. 'mask' → logprob: -11.501975059509277
    5. '_mask' → logprob: -11.876975059509277
    6. '(path' → logprob: -12.376975059509277
    7. 'ath' → logprob: -13.001975059509277
    8. 'Path' → logprob: -13.501975059509277
    9. '_pat' → logprob: -13.501975059509277
    10. '```' → logprob: -13.626975059509277

Token 698: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.018200984224677086
    2. '0' → logprob: -4.018200874328613
    3. '(full' → logprob: -10.143200874328613
    4. 'full' → logprob: -12.518200874328613
    5. '```' → logprob: -12.518200874328613
    6. ' (' → logprob: -13.018200874328613
    7. '
' → logprob: -13.393200874328613
    8. '((' → logprob: -15.393200874328613
    9. ' ' → logprob: -15.768200874328613
    10. '`' → logprob: -16.89320182800293

Token 699: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. '(' → logprob: -15.125
    3. ' ' → logprob: -17.5
    4. ')' → logprob: -18.375
    5. 'full' → logprob: -19.5
    6. '
' → logprob: -20.125
    7. '```' → logprob: -20.5
    8. '00' → logprob: -21.0
    9. '000' → logprob: -21.5
    10. '(full' → logprob: -21.5

Token 700: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2014191895723343
    2. ',-' → logprob: -1.7014192342758179
    3. ',
' → logprob: -12.82641887664795
    4. ',None' → logprob: -13.32641887664795
    5. ' ,' → logprob: -14.70141887664795
    6. ',-
' → logprob: -15.07641887664795
    7. ' ,-' → logprob: -15.82641887664795
    8. ')' → logprob: -16.201419830322266
    9. ',-

' → logprob: -16.326419830322266
    10. ',<' → logprob: -16.451419830322266

Token 701: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.5048530030981055e-06
    2. ' -' → logprob: -13.500001907348633
    3. '-s' → logprob: -21.000001907348633
    4. '-n' → logprob: -22.000001907348633
    5. '-python' → logprob: -22.000001907348633
    6. '-ħ' → logprob: -22.125001907348633
    7. '   ' → logprob: -22.250001907348633
    8. '-t' → logprob: -22.375001907348633
    9. ' ' → logprob: -22.500001907348633
    10. '‌' → logprob: -23.000001907348633

Token 702: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.125
    3. '<|end|>' → logprob: -18.25
    4. '۱' → logprob: -19.0
    5. '```' → logprob: -19.3125
    6. '१' → logprob: -19.75
    7. '১' → logprob: -19.8125
    8. '１' → logprob: -21.375
    9. '<|end|>' → logprob: -21.625
    10. '' → logprob: -21.6875

Token 703: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ')
' → logprob: -15.0
    3. ' )' → logprob: -16.75
    4. ')`' → logprob: -18.5
    5. '))' → logprob: -18.625
    6. ')}}' → logprob: -18.875
    7. ')}' → logprob: -19.125
    8. ')#' → logprob: -19.5
    9. ')

' → logprob: -19.625
    10. '),' → logprob: -19.875

Token 704: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0011883260449394584
    2. 'for' → logprob: -6.876188278198242
    3. '<|end|>' → logprob: -9.626188278198242
    4. 'best' → logprob: -10.126188278198242
    5. '```' → logprob: -10.251188278198242
    6. '#' → logprob: -12.251188278198242
    7. '#print' → logprob: -12.751188278198242
    8. ')' → logprob: -13.251188278198242
    9. ' print' → logprob: -13.501188278198242
    10. 'total' → logprob: -13.751188278198242

Token 705: '('' (ID: 706)
  Prédit: '(best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(best' → logprob: -0.4112713038921356
    2. '([' → logprob: -1.536271333694458
    3. '(numbers' → logprob: -2.661271333694458
    4. '(*' → logprob: -3.661271333694458
    5. '('' → logprob: -3.911271333694458
    6. '(' → logprob: -5.536271095275879
    7. '("' → logprob: -7.286271095275879
    8. '(sum' → logprob: -7.536271095275879
    9. '(tuple' → logprob: -8.411271095275879
    10. '(len' → logprob: -8.661271095275879

Token 706: ' '.' (ID: 12662)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9724401235580444
    2. 'best' → logprob: -1.2224401235580444
    3. 'numbers' → logprob: -2.222440242767334
    4. ')' → logprob: -2.472440242767334
    5. ''' → logprob: -2.722440242767334
    6. 'sum' → logprob: -4.722440242767334
    7. 'dist' → logprob: -4.847440242767334
    8. 'round' → logprob: -4.847440242767334
    9. '(best' → logprob: -5.097440242767334
    10. '[' → logprob: -5.347440242767334

Token 707: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -5.200166469876422e-06
    2. 'print' → logprob: -12.250004768371582
    3. ' join' → logprob: -16.0000057220459
    4. '.' → logprob: -16.7500057220459
    5. 'sep' → logprob: -16.8750057220459
    6. 'end' → logprob: -17.2500057220459
    7. ''.' → logprob: -17.6250057220459
    8. '.join' → logprob: -18.6250057220459
    9. 'j' → logprob: -19.8750057220459
    10. 'strip' → logprob: -19.8750057220459

Token 708: '(str' (ID: 7946)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.448338121175766
    2. '(str' → logprob: -1.6983381509780884
    3. 'map' → logprob: -2.198338031768799
    4. 'str' → logprob: -2.698338031768799
    5. '[str' → logprob: -10.948338508605957
    6. ' map' → logprob: -13.698338508605957
    7. ' str' → logprob: -15.823338508605957
    8. ',map' → logprob: -16.19833755493164
    9. '	map' → logprob: -16.44833755493164
    10. '.map' → logprob: -17.32333755493164

Token 709: '(numbers' (ID: 98592)
  Prédit: '(numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(numbers' → logprob: -0.00028183520771563053
    2. 'numbers' → logprob: -8.250282287597656
    3. '(x' → logprob: -11.500282287597656
    4. '(num' → logprob: -12.250282287597656
    5. '(n' → logprob: -12.625282287597656
    6. '(' → logprob: -13.500282287597656
    7. '(i' → logprob: -14.875282287597656
    8. '(number' → logprob: -15.125282287597656
    9. 'x' → logprob: -16.500282287597656
    10. '(nums' → logprob: -16.875282287597656

Token 710: '[i' (ID: 1768)
  Prédit: '(best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(best' → logprob: -1.193263053894043
    2. '[n' → logprob: -1.693263053894043
    3. '[i' → logprob: -1.943263053894043
    4. '[' → logprob: -2.568263053894043
    5. '[num' → logprob: -2.568263053894043
    6. '(numbers' → logprob: -2.568263053894043
    7. '[x' → logprob: -3.193263053894043
    8. '(i' → logprob: -3.818263053894043
    9. '(num' → logprob: -3.818263053894043
    10. '(x' → logprob: -3.943263053894043

Token 711: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25308558344841003
    2. '])' → logprob: -1.5030856132507324
    3. '[i' → logprob: -7.003085613250732
    4. '(best' → logprob: -9.753085136413574
    5. 'best' → logprob: -10.128085136413574
    6. '[' → logprob: -10.128085136413574
    7. ']' → logprob: -10.253085136413574
    8. ')])' → logprob: -10.753085136413574
    9. ' )' → logprob: -11.128085136413574
    10. '))' → logprob: -12.003085136413574

Token 712: ' for' (ID: 395)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.5782727599143982
    2. 'for' → logprob: -1.203272819519043
    3. '(best' → logprob: -2.203272819519043
    4. ' for' → logprob: -4.328272819519043
    5. ')' → logprob: -5.078272819519043
    6. '[i' → logprob: -5.203272819519043
    7. '(p' → logprob: -6.953272819519043
    8. '(x' → logprob: -6.953272819519043
    9. '(n' → logprob: -7.203272819519043
    10. '(' → logprob: -8.578272819519043

Token 713: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0019286326132714748
    2. ' i' → logprob: -6.251928806304932
    3. '	i' → logprob: -18.876928329467773
    4. ' ' → logprob: -19.376928329467773
    5. ' ' → logprob: -19.501928329467773
    6. ' in' → logprob: -19.876928329467773
    7. ')' → logprob: -19.876928329467773
    8. ')i' → logprob: -20.376928329467773
    9. 'x' → logprob: -20.501928329467773
    10. '  ' → logprob: -20.876928329467773

Token 714: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5759530067443848
    2. ' in' → logprob: -0.8259530067443848
    3. 'i' → logprob: -11.825952529907227
    4. 'best' → logprob: -12.575952529907227
    5. ' ' → logprob: -14.200952529907227
    6. ')' → logprob: -14.200952529907227
    7. 'n' → logprob: -15.325952529907227
    8. ' i' → logprob: -15.825952529907227
    9. 'In' → logprob: -15.825952529907227
    10. '
' → logprob: -15.950952529907227

Token 715: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.00033558503491804004
    2. ' best' → logprob: -8.000335693359375
    3. '(best' → logprob: -16.250335693359375
    4. '	best' → logprob: -16.750335693359375
    5. '[' → logprob: -18.000335693359375
    6. '_best' → logprob: -20.625335693359375
    7. '.best' → logprob: -20.750335693359375
    8. ')' → logprob: -21.500335693359375
    9. ' ' → logprob: -21.500335693359375
    10. '   ' → logprob: -22.000335693359375

Token 716: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -5.872261317563243e-05
    2. 'path' → logprob: -9.750059127807617
    3. '_' → logprob: -15.625059127807617
    4. ')' → logprob: -16.625059127807617
    5. 'Path' → logprob: -16.625059127807617
    6. '_PATH' → logprob: -18.250059127807617
    7. '[i' → logprob: -18.500059127807617
    8. 'best' → logprob: -18.625059127807617
    9. '"path' → logprob: -19.250059127807617
    10. '   ' → logprob: -19.375059127807617

Token 717: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -2.6656825866666622e-05
    2. ')' → logprob: -10.62502670288086
    3. ')))' → logprob: -13.87502670288086
    4. '))
' → logprob: -14.37502670288086
    5. ' ))' → logprob: -14.75002670288086
    6. '[' → logprob: -15.12502670288086
    7. '()))' → logprob: -16.25002670288086
    8. '])' → logprob: -17.25002670288086
    9. ' ' → logprob: -17.75002670288086
    10. '[]' → logprob: -18.25002670288086


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 715
Tokens correctement prédits (1ère position, stricte): 286
Tokens correctement prédits (1ère position, avec adaptation): 310
Tokens correctement prédits (top 10): 584
Précision stricte (1ère position): 40.00%
Précision adaptée (1ère position): 43.36%
Précision (top 10): 81.68%
================================================================================
