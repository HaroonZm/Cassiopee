================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:15:54
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def decrypt_swap_cipher():
    import sys

    # Fonction pour reculer un caractère c de 'diff' positions dans l'alphabet circulaire
    def shift_back(c, diff):
        # Convertir le caractère en son rang alphabétique (0 pour 'a', 25 pour 'z')
        pos = ord(c) - ord('a')
        # Reculer de diff positions avec wrap-around modulo 26
        new_pos = (pos - diff) % 26
        return chr(new_pos + ord('a'))

    input_lines = sys.stdin.read().strip().split('\n')
    idx = 0
    while True:
        if idx >= len(input_lines):
            break
        N_line = input_lines[idx].strip()
        idx += 1
        if N_line == '0':
            # Fin des données
            break

        N = int(N_line)
        # Message chiffré
        message = list(input_lines[idx].strip())
        idx += 1

        # Lire les opérations de swap
        swaps = []
        for _ in range(N):
            a_str, b_str = input_lines[idx].split()
            idx += 1
            a = int(a_str)
            b = int(b_str)
            swaps.append((a, b))

        # Pour déchiffrer, il faut appliquer l'inverse des opérations dans l'ordre inverse
        # Puisqu'en chiffrement on swap et ensuite on recule les lettres du diff,
        # pour déchiffrer on avance les lettres du diff (le « inverse » du recul), puis swap à nouveau.

        # Ici, on va appliquer le déchiffrement en partant du dernier swap vers le premier.
        # Le déchiffrement:
        # 1. Avancer les lettres aux positions a_i, b_i du diff (pour annuler le recul)
        # 2. Swap ces deux lettres

        # Cependant, dans l'énoncé, "アルファベット順で、'a'の前は'z'とする。" pour le recul, donc inverse: avancer correspond au recul négatif avec wrap.

        for a, b in reversed(swaps):
            diff = b - a
            # Les indices dans la liste sont a-1, b-1
            a_idx = a - 1
            b_idx = b - 1

            # Avancer les deux lettres du diff (car en chiffrement on a reculé, donc inverse est avancer)
            # Avancer : c → c+diff modulo, mais comme on a fait reculer dans le chiffrement,
            # ici on fait avancer.
            # Mais dans l'exemple, recul est "戻す" qui signifie revenir en arrière, donc inverse est avancer
            # Avancer le caractère
            def shift_forward(c, diff):
                pos = ord(c) - ord('a')
                new_pos = (pos + diff) % 26
                return chr(new_pos + ord('a'))

            message[a_idx] = shift_forward(message[a_idx], diff)
            message[b_idx] = shift_forward(message[b_idx], diff)

            # Ensuite swap à nouveau
            message[a_idx], message[b_idx] = message[b_idx], message[a_idx]

        # Afficher le message déchiffré
        print(''.join(message))


if __name__ == "__main__":
    decrypt_swap_cipher()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' decrypt' (ID: 81444)
  → Token d'amorce (pas de prédiction)

Token 2: '_swap' (ID: 103784)
  → Token d'amorce (pas de prédiction)

Token 3: '_cipher' (ID: 185360)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.059756092727184296
    2. '_' → logprob: -2.93475604057312
    3. '(_' → logprob: -6.309756278991699
    4. '(_:' → logprob: -6.934756278991699
    5. '_:' → logprob: -7.059756278991699
    6. '(:' → logprob: -7.184756278991699
    7. '():' → logprob: -9.5597562789917
    8. '_(' → logprob: -9.6847562789917
    9. '(s' → logprob: -9.9347562789917
    10. '```' → logprob: -10.1847562789917

Token 4: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006940563675016165
    2. '_' → logprob: -5.3819403648376465
    3. '(:' → logprob: -6.7569403648376465
    4. '(_:' → logprob: -8.006940841674805
    5. '():' → logprob: -8.131940841674805
    6. '_:' → logprob: -8.381940841674805
    7. ':' → logprob: -8.631940841674805
    8. '```' → logprob: -10.381940841674805
    9. '(_' → logprob: -10.881940841674805
    10. ' (' → logprob: -11.256940841674805

Token 5: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18758808076381683
    2. '```' → logprob: -2.6875879764556885
    3. '\' → logprob: -3.1875879764556885
    4. ':' → logprob: -3.8125879764556885
    5. '\n' → logprob: -4.312588214874268
    6. '(' → logprob: -4.312588214874268
    7. '    ' → logprob: -5.687588214874268
    8. '    
' → logprob: -6.187588214874268
    9. '():' → logprob: -6.562588214874268
    10. 'newline' → logprob: -7.062588214874268

Token 6: ' import' (ID: 1588)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0049747228622437
    2. '```' → logprob: -1.7549747228622437
    3. '\' → logprob: -2.004974842071533
    4. 'a' → logprob: -2.504974842071533
    5. 'n' → logprob: -2.754974842071533
    6. '    ' → logprob: -3.504974842071533
    7. '\n' → logprob: -3.629974842071533
    8. ' ' → logprob: -3.879974842071533
    9. '_' → logprob: -4.254974842071533
    10. 'x' → logprob: -4.379974842071533

Token 7: ' sys' (ID: 12228)
  Prédit: ' base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' base' → logprob: -0.9446465969085693
    2. ' random' → logprob: -1.0696465969085693
    3. ' string' → logprob: -1.5696465969085693
    4. ' hashlib' → logprob: -3.4446465969085693
    5. ' os' → logprob: -4.444646835327148
    6. 'string' → logprob: -4.694646835327148
    7. ' sys' → logprob: -6.444646835327148
    8. 'random' → logprob: -6.569646835327148
    9. 'base' → logprob: -6.819646835327148
    10. ' math' → logprob: -7.069646835327148

Token 8: '

' (ID: 279)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -1.7429893016815186
    2. '[' → logprob: -1.8679893016815186
    3. '    ' → logprob: -1.8679893016815186
    4. '.' → logprob: -2.1179893016815186
    5. '   ' → logprob: -2.1179893016815186
    6. ' ' → logprob: -2.7429893016815186
    7. '     
' → logprob: -3.2429893016815186
    8. '_' → logprob: -3.3679893016815186
    9. 'newline' → logprob: -3.6179893016815186
    10. '```' → logprob: -3.6179893016815186

Token 9: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.048152126371860504
    2. '```' → logprob: -3.423152208328247
    3. 'input' → logprob: -5.048151969909668
    4. 'data' → logprob: -5.798151969909668
    5. '    ' → logprob: -6.923151969909668
    6. ' ' → logprob: -6.923151969909668
    7. 'text' → logprob: -7.548151969909668
    8. '    
' → logprob: -7.673151969909668
    9. 'user' → logprob: -7.798151969909668
    10. ' input' → logprob: -8.048151969909668

Token 10: ' #' (ID: 1069)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'text' → logprob: -0.5449833869934082
    2. 'key' → logprob: -1.5449833869934082
    3. 'input' → logprob: -2.294983386993408
    4. 'data' → logprob: -2.919983386993408
    5. '   ' → logprob: -3.294983386993408
    6. 'message' → logprob: -5.544983386993408
    7. 'cipher' → logprob: -6.669983386993408
    8. 'line' → logprob: -6.794983386993408
    9. 'user' → logprob: -6.794983386993408
    10. 's' → logprob: -6.919983386993408

Token 11: ' Fonction' (ID: 189149)
  Prédit: ' key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' key' → logprob: -0.9490776658058167
    2. ' input' → logprob: -1.4490776062011719
    3. 'input' → logprob: -2.199077606201172
    4. 'data' → logprob: -2.824077606201172
    5. ' message' → logprob: -3.324077606201172
    6. ' data' → logprob: -3.324077606201172
    7. 'key' → logprob: -3.324077606201172
    8. 'text' → logprob: -3.449077606201172
    9. 'message' → logprob: -4.199077606201172
    10. ' text' → logprob: -4.449077606201172

Token 12: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5508103370666504
    2. ' de' → logprob: -1.1758103370666504
    3. ' ' → logprob: -3.0508103370666504
    4. 'def' → logprob: -4.67581033706665
    5. '    ' → logprob: -5.17581033706665
    6. ' def' → logprob: -5.17581033706665
    7. '  ' → logprob: -5.17581033706665
    8. '_' → logprob: -5.42581033706665
    9. 'nal' → logprob: -5.42581033706665
    10. 'al' → logprob: -5.55081033706665

Token 13: ' rec' (ID: 1369)
  Prédit: ' lire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lire' → logprob: -0.5095704197883606
    2. ' récupérer' → logprob: -2.884570360183716
    3. ' afficher' → logprob: -3.009570360183716
    4. 'l' → logprob: -3.384570360183716
    5. ' remplacer' → logprob: -3.634570360183716
    6. 'r' → logprob: -3.634570360183716
    7. '   ' → logprob: -3.884570360183716
    8. ' decrypt' → logprob: -4.134570598602295
    9. ' obtenir' → logprob: -4.259570598602295
    10. ' déc' → logprob: -4.384570598602295

Token 14: 'uler' (ID: 11802)
  Prédit: 'up'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'up' → logprob: -0.008987982757389545
    2. 'e' → logprob: -5.883987903594971
    3. 'upr' → logprob: -6.133987903594971
    4. 'u' → logprob: -6.383987903594971
    5. 'uper' → logprob: -6.633987903594971
    6. 'over' → logprob: -8.383988380432129
    7. '```' → logprob: -8.633988380432129
    8. 'ouvrir' → logprob: -8.883988380432129
    9. 'é' → logprob: -9.258988380432129
    10. 'on' → logprob: -10.008988380432129

Token 15: ' un' (ID: 537)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.03416241332888603
    2. 'd' → logprob: -4.034162521362305
    3. 'le' → logprob: -5.284162521362305
    4. ' le' → logprob: -5.784162521362305
    5. 'def' → logprob: -6.034162521362305
    6. ' ' → logprob: -6.159162521362305
    7. ' de' → logprob: -6.784162521362305
    8. 's' → logprob: -7.409162521362305
    9. ' la' → logprob: -7.909162521362305
    10. ' un' → logprob: -8.034162521362305

Token 16: ' caractère' (ID: 80509)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.16703420877456665
    2. 'car' → logprob: -3.042034149169922
    3. ' caract' → logprob: -3.792034149169922
    4. 'c' → logprob: -3.792034149169922
    5. ' caractère' → logprob: -3.792034149169922
    6. ' e' → logprob: -4.167034149169922
    7. ' ' → logprob: -4.667034149169922
    8. ' car' → logprob: -5.542034149169922
    9. ' lettre' → logprob: -5.792034149169922
    10. '```' → logprob: -6.792034149169922

Token 17: ' c' (ID: 274)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.9533944129943848
    2. 's' → logprob: -1.3283944129943848
    3. 'def' → logprob: -2.0783944129943848
    4. ' d' → logprob: -2.2033944129943848
    5. ' ' → logprob: -2.8283944129943848
    6. ' def' → logprob: -3.8283944129943848
    7. '<|end|>' → logprob: -4.578394412994385
    8. ' of' → logprob: -5.578394412994385
    9. ' s' → logprob: -5.953394412994385
    10. ' (' → logprob: -6.203394412994385

Token 18: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6425468325614929
    2. ' d' → logprob: -0.8925468325614929
    3. 'd' → logprob: -4.392546653747559
    4. 'def' → logprob: -4.392546653747559
    5. '   ' → logprob: -4.642546653747559
    6. ' ' → logprob: -5.392546653747559
    7. '```' → logprob: -5.517546653747559
    8. ' def' → logprob: -5.767546653747559
    9. ''' → logprob: -5.892546653747559
    10. ' of' → logprob: -5.892546653747559

Token 19: ' '' (ID: 461)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2768525183200836
    2. ' ' → logprob: -1.6518524885177612
    3. 'une' → logprob: -3.526852607727051
    4. 'n' → logprob: -5.276852607727051
    5. 's' → logprob: -5.776852607727051
    6. ' n' → logprob: -5.901852607727051
    7. ' une' → logprob: -6.526852607727051
    8. ' one' → logprob: -6.651852607727051
    9. '```' → logprob: -6.776852607727051
    10. 'un' → logprob: -7.151852607727051

Token 20: 'diff' (ID: 31460)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14761829376220703
    2. 'a' → logprob: -2.522618293762207
    3. ''a' → logprob: -4.522618293762207
    4. ''un' → logprob: -4.647618293762207
    5. ' ' → logprob: -4.772618293762207
    6. ''une' → logprob: -5.272618293762207
    7. ')' → logprob: -5.522618293762207
    8. '')' → logprob: -5.647618293762207
    9. 'l' → logprob: -5.647618293762207
    10. ''' → logprob: -6.022618293762207

Token 21: ''' (ID: 6)
  Prédit: 'érence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érence' → logprob: -0.4950690269470215
    2. ''' → logprob: -2.2450690269470215
    3. 'er' → logprob: -2.7450690269470215
    4. 'érance' → logprob: -3.6200690269470215
    5. 'é' → logprob: -3.7450690269470215
    6. 'ér' → logprob: -3.8700690269470215
    7. 'i' → logprob: -3.9950690269470215
    8. ' '' → logprob: -4.1200690269470215
    9. 'a' → logprob: -4.1200690269470215
    10. 'e' → logprob: -4.1200690269470215

Token 22: ' positions' (ID: 15897)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6438113451004028
    2. ' ' → logprob: -1.3938113451004028
    3. 's' → logprob: -2.7688112258911133
    4. ' dans' → logprob: -3.0188112258911133
    5. ' en' → logprob: -3.5188112258911133
    6. '<|end|>' → logprob: -4.143811225891113
    7. ' ,' → logprob: -4.393811225891113
    8. ' d' → logprob: -4.643811225891113
    9. ',' → logprob: -4.768811225891113
    10. ' s' → logprob: -5.768811225891113

Token 23: ' dans' (ID: 2671)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8467265963554382
    2. '<|end|>' → logprob: -1.096726655960083
    3. '   ' → logprob: -2.971726655960083
    4. 's' → logprob: -2.971726655960083
    5. ' ,' → logprob: -3.346726655960083
    6. '<|end|>' → logprob: -3.971726655960083
    7. ',' → logprob: -4.221726417541504
    8. 'def' → logprob: -4.221726417541504
    9. '    ' → logprob: -4.471726417541504
    10. ' dans' → logprob: -5.096726417541504

Token 24: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.38852864503860474
    2. ' l' → logprob: -1.13852858543396
    3. '   ' → logprob: -8.263528823852539
    4. 'alphabet' → logprob: -8.388528823852539
    5. ' ' → logprob: -8.638528823852539
    6. 'a' → logprob: -8.638528823852539
    7. '	l' → logprob: -8.763528823852539
    8. '```' → logprob: -9.638528823852539
    9. 'la' → logprob: -10.013528823852539
    10. 's' → logprob: -10.013528823852539

Token 25: ''al' (ID: 47062)
  Prédit: ''al'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''al' → logprob: -0.7154354453086853
    2. 'alphabet' → logprob: -1.59043550491333
    3. 'a' → logprob: -1.71543550491333
    4. ''ordre' → logprob: -2.84043550491333
    5. ''' → logprob: -3.46543550491333
    6. 'e' → logprob: -4.59043550491333
    7. 'alph' → logprob: -5.46543550491333
    8. '```' → logprob: -5.59043550491333
    9. '   ' → logprob: -6.21543550491333
    10. ''a' → logprob: -6.34043550491333

Token 26: 'phabet' (ID: 29466)
  Prédit: 'phabet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'phabet' → logprob: -0.03312030807137489
    2. 'pha' → logprob: -3.9081203937530518
    3. 'ph' → logprob: -4.658120155334473
    4. 'phase' → logprob: -6.283120155334473
    5. 'fab' → logprob: -8.283120155334473
    6. 'p' → logprob: -8.408120155334473
    7. 'aph' → logprob: -8.908120155334473
    8. 'phan' → logprob: -9.033120155334473
    9. 'a' → logprob: -9.283120155334473
    10. 'f' → logprob: -9.408120155334473

Token 27: ' circul' (ID: 20568)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05525143817067146
    2. 'def' → logprob: -3.555251359939575
    3. '\' → logprob: -5.555251598358154
    4. ',' → logprob: -5.555251598358154
    5. 'a' → logprob: -5.930251598358154
    6. ':' → logprob: -6.180251598358154
    7. '    ' → logprob: -6.305251598358154
    8. 's' → logprob: -6.430251598358154
    9. '```' → logprob: -6.555251598358154
    10. ' :' → logprob: -6.930251598358154

Token 28: 'aire' (ID: 8189)
  Prédit: 'aire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aire' → logprob: -0.001038287067785859
    2. 'a' → logprob: -7.376038074493408
    3. '```' → logprob: -8.376038551330566
    4. 'air' → logprob: -8.876038551330566
    5. '#' → logprob: -11.876038551330566
    6. 'aires' → logprob: -12.376038551330566
    7. '%' → logprob: -12.626038551330566
    8. '`' → logprob: -12.751038551330566
    9. 'e' → logprob: -13.126038551330566
    10. '{' → logprob: -13.251038551330566

Token 29: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17595849931240082
    2. '    ' → logprob: -2.5509583950042725
    3. ',' → logprob: -3.8009583950042725
    4. ' ' → logprob: -3.9259583950042725
    5. 'def' → logprob: -4.300958633422852
    6. 's' → logprob: -5.675958633422852
    7. ' ,' → logprob: -5.675958633422852
    8. ' def' → logprob: -6.300958633422852
    9. ' (' → logprob: -6.300958633422852
    10. 'a' → logprob: -6.550958633422852

Token 30: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015761349350214005
    2. '    ' → logprob: -4.390761375427246
    3. 'def' → logprob: -7.640761375427246
    4. '       ' → logprob: -7.765761375427246
    5. ' ' → logprob: -7.890761375427246
    6. 'a' → logprob: -8.015761375427246
    7. ')' → logprob: -8.515761375427246
    8. ',' → logprob: -8.765761375427246
    9. '    
' → logprob: -8.890761375427246
    10. '  ' → logprob: -8.890761375427246

Token 31: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2228696346282959
    2. '    ' → logprob: -1.847869634628296
    3. ' ' → logprob: -4.347869873046875
    4. 'a' → logprob: -4.972869873046875
    5. 'n' → logprob: -5.097869873046875
    6. 'def' (adapté à ' def') → logprob: -5.722869873046875
    7. 'c' → logprob: -6.097869873046875
    8. 'newline' → logprob: -6.972869873046875
    9. '     
' → logprob: -6.972869873046875
    10. '\' → logprob: -7.097869873046875

Token 32: ' shift' (ID: 12847)
  Prédit: ' shift'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' shift' → logprob: -0.005784923676401377
    2. 'shift' → logprob: -6.00578498840332
    3. ' decrypt' → logprob: -6.50578498840332
    4. ' shifted' → logprob: -7.13078498840332
    5. ' ca' → logprob: -7.63078498840332
    6. ' decrement' → logprob: -9.00578498840332
    7. ' recul' → logprob: -9.13078498840332
    8. ' ' → logprob: -9.75578498840332
    9. ' dec' → logprob: -9.88078498840332
    10. ' prev' → logprob: -10.88078498840332

Token 33: '_back' (ID: 8715)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.11152748018503189
    2. '_char' → logprob: -2.611527442932129
    3. '_character' → logprob: -4.361527442932129
    4. '_c' → logprob: -5.236527442932129
    5. '(' → logprob: -5.236527442932129
    6. ' (' → logprob: -5.611527442932129
    7. '_token' → logprob: -6.486527442932129
    8. ' ' → logprob: -6.861527442932129
    9. '(c' → logprob: -7.486527442932129
    10. ' _' → logprob: -7.736527442932129

Token 34: '(c' (ID: 2410)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4307817816734314
    2. '(c' → logprob: -1.4307818412780762
    3. '(char' → logprob: -2.305781841278076
    4. ' (' → logprob: -5.305781841278076
    5. '(character' → logprob: -5.805781841278076
    6. '(token' → logprob: -6.805781841278076
    7. '_' → logprob: -7.930781841278076
    8. '(s' → logprob: -8.055781364440918
    9. '_char' → logprob: -8.305781364440918
    10. '(ch' → logprob: -8.680781364440918

Token 35: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006563199567608535
    2. ' ,' → logprob: -7.3756561279296875
    3. '):' → logprob: -10.750656127929688
    4. ',char' → logprob: -12.500656127929688
    5. ':' → logprob: -14.000656127929688
    6. ',c' → logprob: -14.125656127929688
    7. '‌,' → logprob: -14.250656127929688
    8. ',int' → logprob: -14.375656127929688
    9. ',index' → logprob: -15.625656127929688
    10. ',i' → logprob: -15.750656127929688

Token 36: ' diff' (ID: 8868)
  Prédit: ' diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' diff' → logprob: -0.22664739191532135
    2. 'diff' → logprob: -1.6016473770141602
    3. '	diff' → logprob: -7.10164737701416
    4. ' shift' → logprob: -9.10164737701416
    5. ' ' → logprob: -9.22664737701416
    6. '   ' → logprob: -9.97664737701416
    7. 'shift' → logprob: -10.35164737701416
    8. 'd' → logprob: -10.72664737701416
    9. ' d' → logprob: -10.72664737701416
    10. ')' → logprob: -10.72664737701416

Token 37: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0004279275599401444
    2. ')' → logprob: -8.125428199768066
    3. ' ):' → logprob: -9.250428199768066
    4. '):
' → logprob: -10.500428199768066
    5. '=' → logprob: -12.625428199768066
    6. ',' → logprob: -14.250428199768066
    7. '_' → logprob: -14.250428199768066
    8. ':' → logprob: -14.375428199768066
    9. '   ' → logprob: -14.875428199768066
    10. '):

' → logprob: -14.875428199768066

Token 38: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.047395698726177216
    2. ':' → logprob: -3.297395706176758
    3. '):' → logprob: -4.922395706176758
    4. '   ' → logprob: -7.422395706176758
    5. '<|end|>' → logprob: -7.422395706176758
    6. ')' → logprob: -8.172395706176758
    7. ' :' → logprob: -8.172395706176758
    8. '):
' → logprob: -9.297395706176758
    9. ':
' → logprob: -10.297395706176758
    10. '      ' → logprob: -10.672395706176758

Token 39: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2381809502840042
    2. ' if' → logprob: -2.6131808757781982
    3. '   ' → logprob: -2.8631808757781982
    4. 'if' → logprob: -3.4881808757781982
    5. ':' → logprob: -4.113181114196777
    6. '    ' → logprob: -4.238181114196777
    7. '<|end|>' → logprob: -4.613181114196777
    8. ')' → logprob: -6.113181114196777
    9. '        ' → logprob: -6.613181114196777
    10. ' :' → logprob: -6.863181114196777

Token 40: ' Convert' (ID: 15629)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.584547221660614
    2. 'if' → logprob: -0.834547221660614
    3. '   ' → logprob: -5.45954704284668
    4. 'ascii' → logprob: -6.45954704284668
    5. ' ascii' → logprob: -7.20954704284668
    6. '    ' → logprob: -7.33454704284668
    7. '       ' → logprob: -8.20954704284668
    8. 'shift' → logprob: -9.08454704284668
    9. 'alphabet' → logprob: -9.08454704284668
    10. ' alphabet' → logprob: -9.33454704284668

Token 41: 'ir' (ID: 380)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7514680624008179
    2. ' ord' → logprob: -1.0014680624008179
    3. 'ord' → logprob: -2.8764681816101074
    4. '(ord' → logprob: -3.6264681816101074
    5. 'ed' → logprob: -3.7514681816101074
    6. ' return' → logprob: -4.001468181610107
    7. '_ord' → logprob: -5.126468181610107
    8. '_char' → logprob: -5.126468181610107
    9. ' char' → logprob: -5.626468181610107
    10. '       ' → logprob: -5.751468181610107

Token 42: ' le' (ID: 505)
  Prédit: ' ord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ord' → logprob: -0.25848546624183655
    2. '   ' → logprob: -3.1334855556488037
    3. 'ord' → logprob: -3.6334855556488037
    4. ' le' → logprob: -3.7584855556488037
    5. ' char' → logprob: -3.8834855556488037
    6. '(ord' → logprob: -3.8834855556488037
    7. ' caract' → logprob: -4.133485317230225
    8. 'char' → logprob: -4.258485317230225
    9. ' caractère' → logprob: -4.508485317230225
    10. ' c' → logprob: -4.633485317230225

Token 43: ' caractère' (ID: 80509)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.36976829171180725
    2. ' caractère' → logprob: -1.9947682619094849
    3. 'char' → logprob: -2.2447683811187744
    4. 'c' → logprob: -3.8697683811187744
    5. ' caract' → logprob: -3.9947683811187744
    6. ' c' → logprob: -5.244768142700195
    7. 'ord' → logprob: -5.369768142700195
    8. ' car' → logprob: -5.494768142700195
    9. ' char' → logprob: -5.494768142700195
    10. ' code' → logprob: -5.744768142700195

Token 44: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.009949803352355957
    2. 'en' → logprob: -5.384949684143066
    3. '   ' → logprob: -5.759949684143066
    4. ' to' → logprob: -7.384949684143066
    5. ' c' → logprob: -8.259949684143066
    6. ' ' → logprob: -8.384949684143066
    7. ' à' → logprob: -8.509949684143066
    8. ' into' → logprob: -8.509949684143066
    9. ' in' → logprob: -8.509949684143066
    10. ' ord' → logprob: -9.009949684143066

Token 45: ' son' (ID: 2391)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' code' → logprob: -0.8182048797607422
    2. ' son' → logprob: -1.4432048797607422
    3. ' ' → logprob: -2.443204879760742
    4. 'son' → logprob: -2.693204879760742
    5. ' sa' → logprob: -3.318204879760742
    6. ' unicode' → logprob: -3.568204879760742
    7. ' ord' → logprob: -4.443204879760742
    8. 'ord' → logprob: -4.568204879760742
    9. '   ' → logprob: -4.568204879760742
    10. ' valeur' → logprob: -4.818204879760742

Token 46: ' rang' (ID: 32287)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' code' → logprob: -0.008398259989917278
    2. ' ' → logprob: -5.383398056030273
    3. 'code' → logprob: -6.383398056030273
    4. '   ' → logprob: -7.133398056030273
    5. ' entier' → logprob: -8.258398056030273
    6. ' point' → logprob: -8.383398056030273
    7. '_code' → logprob: -8.633398056030273
    8. ' équ' → logprob: -9.133398056030273
    9. ' numéro' → logprob: -9.508398056030273
    10. ' unicode' → logprob: -10.008398056030273

Token 47: ' alph' (ID: 133679)
  Prédit: ' ord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ord' → logprob: -0.6088913679122925
    2. '(ord' → logprob: -1.2338913679122925
    3. 'ord' → logprob: -2.483891487121582
    4. '   ' → logprob: -3.858891487121582
    5. ' dans' → logprob: -4.233891487121582
    6. '    ' → logprob: -4.983891487121582
    7. '       ' → logprob: -5.108891487121582
    8. ' ' → logprob: -5.108891487121582
    9. ' ascii' → logprob: -5.358891487121582
    10. ' =' → logprob: -5.733891487121582

Token 48: 'ab' (ID: 378)
  Prédit: 'ab'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' → logprob: -0.5879414081573486
    2. 'abet' → logprob: -0.8379414081573486
    3. 'a' → logprob: -5.4629411697387695
    4. '```' → logprob: -5.7129411697387695
    5. 'étique' → logprob: -6.4629411697387695
    6. '   ' → logprob: -7.3379411697387695
    7. 'abetic' → logprob: -8.46294116973877
    8. 'et' → logprob: -8.58794116973877
    9. 'abe' → logprob: -8.71294116973877
    10. '_' → logprob: -8.83794116973877

Token 49: 'étique' (ID: 41132)
  Prédit: 'étique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'étique' → logprob: -0.028207534924149513
    2. 'et' → logprob: -3.653207540512085
    3. 'é' → logprob: -7.278207302093506
    4. 'étiques' → logprob: -7.903207302093506
    5. 'ético' → logprob: -8.778207778930664
    6. '%' → logprob: -8.778207778930664
    7. '#' → logprob: -9.153207778930664
    8. '```' → logprob: -9.528207778930664
    9. '%C' → logprob: -10.028207778930664
    10. 't' → logprob: -10.028207778930664

Token 50: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1368346214294434
    2. '   ' → logprob: -1.3868346214294434
    3. '    ' → logprob: -1.6368346214294434
    4. '        ' → logprob: -3.1368346214294434
    5. ',' → logprob: -3.2618346214294434
    6. ' (' → logprob: -3.5118346214294434
    7. ' ' → logprob: -3.8868346214294434
    8. ' :' → logprob: -4.511834621429443
    9. 'a' → logprob: -4.886834621429443
    10. ' if' → logprob: -4.886834621429443

Token 51: '0' (ID: 15)
  Prédit: 'ord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ord' → logprob: -0.22783717513084412
    2. ' ord' → logprob: -1.6028372049331665
    3. '(ord' → logprob: -6.352837085723877
    4. '65' → logprob: -7.977837085723877
    5. '97' → logprob: -9.352837562561035
    6. '   ' → logprob: -9.477837562561035
    7. 'a' → logprob: -10.727837562561035
    8. '```' → logprob: -10.852837562561035
    9. 'e' → logprob: -11.102837562561035
    10. 'c' → logprob: -11.352837562561035

Token 52: ' pour' (ID: 1930)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09153938293457031
    2. '-' → logprob: -3.9665393829345703
    3. ' à' → logprob: -3.9665393829345703
    4. ' if' → logprob: -4.09153938293457
    5. ',' → logprob: -5.09153938293457
    6. '   ' → logprob: -5.71653938293457
    7. 'a' → logprob: -5.71653938293457
    8. ' ' → logprob: -5.84153938293457
    9. ' )' → logprob: -5.96653938293457
    10. ' <=' → logprob: -6.21653938293457

Token 53: ' '' (ID: 461)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1809617578983307
    2. ''a' → logprob: -2.305961847305298
    3. ' a' → logprob: -3.805961847305298
    4. 'A' → logprob: -3.805961847305298
    5. ''A' → logprob: -4.680961608886719
    6. ' A' → logprob: -5.055961608886719
    7. ' '' → logprob: -5.430961608886719
    8. ''' → logprob: -6.805961608886719
    9. ' ' → logprob: -9.055961608886719
    10. '`' → logprob: -10.055961608886719

Token 54: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.000839642365463078
    2. 'A' → logprob: -7.125839710235596
    3. ''a' → logprob: -10.625839233398438
    4. 'z' → logprob: -12.125839233398438
    5. ''' → logprob: -13.125839233398438
    6. ' a' → logprob: -13.875839233398438
    7. ''A' → logprob: -14.000839233398438
    8. ' ' → logprob: -15.000839233398438
    9. 'а' → logprob: -15.000839233398438
    10. '`' → logprob: -15.125839233398438

Token 55: '',' (ID: 787)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20564840734004974
    2. ')' → logprob: -1.830648422241211
    3. '')' → logprob: -4.330648422241211
    4. 'a' → logprob: -5.955648422241211
    5. '',' → logprob: -5.955648422241211
    6. ''' → logprob: -6.580648422241211
    7. '-' → logprob: -6.955648422241211
    8. '),' → logprob: -7.080648422241211
    9. ' ,' → logprob: -7.455648422241211
    10. ''à' → logprob: -7.580648422241211

Token 56: ' ' (ID: 220)
  Prédit: ' ord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ord' → logprob: -0.8990346789360046
    2. '1' → logprob: -1.2740347385406494
    3. ' ' → logprob: -1.3990347385406494
    4. '   ' → logprob: -3.7740347385406494
    5. ' puis' → logprob: -4.52403450012207
    6. ')' → logprob: -5.27403450012207
    7. 'A' → logprob: -5.27403450012207
    8. '0' → logprob: -5.77403450012207
    9. '```' → logprob: -6.02403450012207
    10. ' A' → logprob: -6.14903450012207

Token 57: '25' (ID: 1161)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.23438428342342377
    2. 'z' → logprob: -1.984384298324585
    3. ''z' → logprob: -4.109384059906006
    4. 'b' → logprob: -4.359384059906006
    5. ' ' → logprob: -4.609384059906006
    6. '97' → logprob: -4.984384059906006
    7. 'a' → logprob: -5.234384059906006
    8. '...' → logprob: -5.984384059906006
    9. 'A' → logprob: -5.984384059906006
    10. ''a' → logprob: -6.109384059906006

Token 58: ' pour' (ID: 1930)
  Prédit: ' pour'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pour' → logprob: -1.2704178094863892
    2. ')' → logprob: -1.3954178094863892
    3. 'pour' → logprob: -1.6454178094863892
    4. ' à' → logprob: -1.7704178094863892
    5. 'à' → logprob: -3.6454176902770996
    6. ' for' → logprob: -4.0204176902771
    7. ''à' → logprob: -4.0204176902771
    8. '=' → logprob: -4.8954176902771
    9. ' ' → logprob: -4.8954176902771
    10. '-' → logprob: -5.0204176902771

Token 59: ' '' (ID: 461)
  Prédit: ''z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''z' → logprob: -0.43945664167404175
    2. 'z' → logprob: -1.0644567012786865
    3. ' z' → logprob: -5.189456462860107
    4. ' '' → logprob: -5.939456462860107
    5. ''a' → logprob: -6.439456462860107
    6. '‘z' → logprob: -7.939456462860107
    7. ' ' → logprob: -8.314456939697266
    8. 'a' → logprob: -8.939456939697266
    9. 'b' → logprob: -10.564456939697266
    10. ''b' → logprob: -10.814456939697266

Token 60: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -3.881560041918419e-05
    2. ''z' → logprob: -10.250039100646973
    3. ' z' → logprob: -12.625039100646973
    4. 'y' → logprob: -17.000038146972656
    5. '	z' → logprob: -18.125038146972656
    6. ''' → logprob: -18.125038146972656
    7. '_z' → logprob: -18.875038146972656
    8. '-z' → logprob: -19.000038146972656
    9. 'b' → logprob: -20.000038146972656
    10. '‘z' → logprob: -20.125038146972656

Token 61: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005064633209258318
    2. '')' → logprob: -5.380064487457275
    3. '):' → logprob: -7.880064487457275
    4. ' )' → logprob: -11.380064964294434
    5. ''):' → logprob: -11.380064964294434
    6. ').' → logprob: -12.005064964294434
    7. '),' → logprob: -12.130064964294434
    8. 'a' → logprob: -12.255064964294434
    9. ')
' → logprob: -12.380064964294434
    10. '`)' → logprob: -12.505064964294434

Token 62: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5884154438972473
    2. '):' → logprob: -1.7134153842926025
    3. '   ' → logprob: -1.9634153842926025
    4. ')' → logprob: -2.9634153842926025
    5. ':' → logprob: -3.5884153842926025
    6. '):
' → logprob: -3.8384153842926025
    7. ' :' → logprob: -5.213415622711182
    8. '```' → logprob: -5.838415622711182
    9. 'a' → logprob: -6.213415622711182
    10. ':
' → logprob: -6.588415622711182

Token 63: ' pos' (ID: 1253)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026920167729258537
    2. '   ' → logprob: -5.526920318603516
    3. 'a' → logprob: -6.026920318603516
    4. '           ' → logprob: -6.151920318603516
    5. '```' → logprob: -6.151920318603516
    6. 'return' → logprob: -6.401920318603516
    7. '        ' → logprob: -6.776920318603516
    8. ' if' → logprob: -6.776920318603516
    9. '
' → logprob: -6.776920318603516
    10. 'if' → logprob: -6.901920318603516

Token 64: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012555561028420925
    2. '=' → logprob: -4.3875555992126465
    3. ' -' → logprob: -11.387555122375488
    4. ' ' → logprob: -11.387555122375488
    5. ')' → logprob: -11.512555122375488
    6. '-' → logprob: -12.387555122375488
    7. ' -=' → logprob: -12.887555122375488
    8. '   ' → logprob: -13.387555122375488
    9. ',' → logprob: -13.762555122375488
    10. ' ==' → logprob: -14.137555122375488

Token 65: ' ord' (ID: 6608)
  Prédit: ' ord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ord' → logprob: -0.005418377462774515
    2. '(ord' → logprob: -5.880418300628662
    3. 'ord' → logprob: -6.130418300628662
    4. ' (' → logprob: -7.755418300628662
    5. '(' → logprob: -13.00541877746582
    6. 'abcdefghijklmnopqrstuvwxyz' → logprob: -13.38041877746582
    7. ' alphabet' → logprob: -14.38041877746582
    8. ' alph' → logprob: -14.50541877746582
    9. ' abc' → logprob: -15.13041877746582
    10. ' ' → logprob: -15.75541877746582

Token 66: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.004086708649992943
    2. '(' → logprob: -5.504086494445801
    3. '('' → logprob: -12.2540864944458
    4. ' (' → logprob: -13.5040864944458
    5. 'c' → logprob: -13.8790864944458
    6. '(s' → logprob: -14.6290864944458
    7. ')c' → logprob: -15.8790864944458
    8. '((' → logprob: -16.504087448120117
    9. '(a' → logprob: -16.629087448120117
    10. '(char' → logprob: -16.629087448120117

Token 67: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.73446003627032e-05
    2. ' )' → logprob: -9.250097274780273
    3. ' ' → logprob: -14.375097274780273
    4. ')-' → logprob: -15.375097274780273
    5. '   ' → logprob: -15.500097274780273
    6. '')' → logprob: -16.500097274780273
    7. '-)' → logprob: -17.000097274780273
    8. 'a' → logprob: -17.250097274780273
    9. ' -' → logprob: -17.875097274780273
    10. '```' → logprob: -17.875097274780273

Token 68: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.005773788783699274
    2. '-' → logprob: -5.380774021148682
    3. ')' → logprob: -7.005774021148682
    4. ' ' → logprob: -8.630773544311523
    5. ' )' → logprob: -9.880773544311523
    6. '(' → logprob: -12.005773544311523
    7. '   ' → logprob: -13.505773544311523
    8. '```' → logprob: -13.755773544311523
    9. ' if' → logprob: -13.880773544311523
    10. ' ' → logprob: -14.255773544311523

Token 69: ' ord' (ID: 6608)
  Prédit: ' ord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ord' → logprob: -0.45795977115631104
    2. '97' → logprob: -1.082959771156311
    3. 'ord' → logprob: -3.9579596519470215
    4. ' ' → logprob: -4.8329596519470215
    5. ''a' → logprob: -7.3329596519470215
    6. 'a' → logprob: -7.5829596519470215
    7. '96' → logprob: -8.83296012878418
    8. ' a' → logprob: -9.20796012878418
    9. ''' → logprob: -9.33296012878418
    10. '(ord' → logprob: -9.45796012878418

Token 70: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0001860174525063485
    2. '(' → logprob: -8.6251859664917
    3. 'a' → logprob: -12.6251859664917
    4. ''a' → logprob: -12.7501859664917
    5. '(a' → logprob: -15.8751859664917
    6. ''' → logprob: -15.8751859664917
    7. '("' → logprob: -17.000186920166016
    8. ' ('' → logprob: -17.875186920166016
    9. ''s' → logprob: -18.250186920166016
    10. '()' → logprob: -18.375186920166016

Token 71: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -9.088346359931165e-07
    2. ''a' → logprob: -14.000000953674316
    3. 'abcdefghijklmnopqrstuvwxyz' → logprob: -18.625
    4. 'а' → logprob: -18.875
    5. '```' → logprob: -19.125
    6. '`' → logprob: -19.75
    7. ''' → logprob: -21.0
    8. ' a' → logprob: -21.5
    9. 'z' → logprob: -21.75
    10. '')' → logprob: -22.625

Token 72: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07890443503856659
    2. '')' → logprob: -2.578904390335083
    3. '")' → logprob: -12.328904151916504
    4. ' )' → logprob: -12.953904151916504
    5. '   ' → logprob: -13.078904151916504
    6. ')
' → logprob: -13.328904151916504
    7. '')
' → logprob: -13.703904151916504
    8. '`)' → logprob: -14.328904151916504
    9. '       ' → logprob: -14.578904151916504
    10. ''' → logprob: -14.703904151916504

Token 73: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0926387757062912
    2. '
' → logprob: -3.3426387310028076
    3. '<|end|>' → logprob: -3.8426387310028076
    4. ')' → logprob: -3.9676387310028076
    5. '   ' → logprob: -4.717638969421387
    6. '    ' → logprob: -7.217638969421387
    7. '<|end|>' → logprob: -7.467638969421387
    8. '        ' → logprob: -7.467638969421387
    9. ' return' → logprob: -8.217638969421387
    10. '        
' → logprob: -8.342638969421387

Token 74: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.969782292842865
    2. ' new' → logprob: -1.2197823524475098
    3. ')' → logprob: -2.3447823524475098
    4. '   ' → logprob: -2.7197823524475098
    5. ' pos' → logprob: -2.8447823524475098
    6. ' return' → logprob: -3.4697823524475098
    7. ' diff' → logprob: -4.09478235244751
    8. '    ' → logprob: -4.34478235244751
    9. '
' → logprob: -4.71978235244751
    10. 'new' → logprob: -4.96978235244751

Token 75: ' Re' (ID: 907)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.2539820075035095
    2. 'new' → logprob: -2.2539820671081543
    3. ' pos' → logprob: -3.3789820671081543
    4. ' return' → logprob: -3.6289820671081543
    5. 'shift' → logprob: -3.7539820671081543
    6. ' shifted' → logprob: -4.128982067108154
    7. 'return' → logprob: -4.753982067108154
    8. 'pos' → logprob: -5.128982067108154
    9. '   ' → logprob: -6.503982067108154
    10. ' shift' → logprob: -6.628982067108154

Token 76: 'cul' (ID: 2885)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'turn' → logprob: -0.37470743060112
    2. 't' → logprob: -1.7497074604034424
    3. 'tour' → logprob: -3.2497074604034424
    4. 'turned' → logprob: -3.3747074604034424
    5. 'c' → logprob: -3.7497074604034424
    6. 'cul' → logprob: -4.624707221984863
    7. 'new' → logprob: -4.624707221984863
    8. 's' → logprob: -4.749707221984863
    9. 'v' → logprob: -5.499707221984863
    10. 'tur' → logprob: -5.999707221984863

Token 77: 'er' (ID: 259)
  Prédit: 'uler'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uler' → logprob: -0.35031723976135254
    2. 'er' → logprob: -1.2253172397613525
    3. 'ler' → logprob: -7.725317001342773
    4. 'e' → logprob: -7.975317001342773
    5. 'ar' → logprob: -8.725317001342773
    6. 'cer' → logprob: -8.850317001342773
    7. 'uer' → logprob: -9.225317001342773
    8. 'ul' → logprob: -9.350317001342773
    9. '   ' → logprob: -9.475317001342773
    10. 'l' → logprob: -9.600317001342773

Token 78: ' de' (ID: 334)
  Prédit: ' pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.46549102663993835
    2. 'pos' → logprob: -1.2154910564422607
    3. 'diff' → logprob: -2.8404910564422607
    4. ' diff' → logprob: -5.465490818023682
    5. '<|end|>' → logprob: -5.590490818023682
    6. '       ' → logprob: -5.965490818023682
    7. '<|end|>' → logprob: -6.215490818023682
    8. ' (' → logprob: -6.465490818023682
    9. '   ' → logprob: -7.340490818023682
    10. '	pos' → logprob: -7.965490818023682

Token 79: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.2519460618495941
    2. ' diff' → logprob: -1.5019460916519165
    3. '	diff' → logprob: -11.626946449279785
    4. '(diff' → logprob: -11.751946449279785
    5. '_diff' → logprob: -16.75194549560547
    6. ' diffusion' → logprob: -17.50194549560547
    7. ' dif' → logprob: -17.87694549560547
    8. '.diff' → logprob: -18.00194549560547
    9. ' ' → logprob: -18.00194549560547
    10. ' ' → logprob: -18.75194549560547

Token 80: ' positions' (ID: 15897)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6640715003013611
    2. '<|end|>' → logprob: -0.7890715003013611
    3. '<|end|>' → logprob: -3.789071559906006
    4. ' )' → logprob: -5.539071559906006
    5. ',' → logprob: -6.789071559906006
    6. 'diff' → logprob: -7.414071559906006
    7. ' ,' → logprob: -7.539071559906006
    8. ' ' → logprob: -8.289071083068848
    9. ' +' → logprob: -8.289071083068848
    10. '),' → logprob: -8.414071083068848

Token 81: ' avec' (ID: 3937)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5095943212509155
    2. ',' → logprob: -2.259594440460205
    3. ')' → logprob: -2.634594440460205
    4. '   ' → logprob: -2.759594440460205
    5. '
' → logprob: -3.134594440460205
    6. ' pos' → logprob: -3.134594440460205
    7. 'pos' → logprob: -3.634594440460205
    8. 'return' → logprob: -5.134594440460205
    9. ' (' → logprob: -5.134594440460205
    10. ' return' → logprob: -5.259594440460205

Token 82: ' wrap' (ID: 20404)
  Prédit: ' modulo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' modulo' → logprob: -0.045821454375982285
    2. 'diff' → logprob: -3.79582142829895
    3. ' (' → logprob: -5.295821666717529
    4. '%' → logprob: -5.545821666717529
    5. ' modulus' → logprob: -5.795821666717529
    6. ' diff' → logprob: -5.920821666717529
    7. ' %' → logprob: -6.295821666717529
    8. ' mod' → logprob: -6.420821666717529
    9. 'mod' → logprob: -6.670821666717529
    10. ' modular' → logprob: -6.795821666717529

Token 83: '-around' (ID: 74344)
  Prédit: 'around'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'around' → logprob: -0.041812047362327576
    2. '_' → logprob: -3.666811943054199
    3. '-around' → logprob: -4.541811943054199
    4. ' around' → logprob: -6.291811943054199
    5. 'ar' → logprob: -7.041811943054199
    6. ')' → logprob: -7.416811943054199
    7. '   ' → logprob: -7.666811943054199
    8. ' ' → logprob: -7.791811943054199
    9. '(' → logprob: -9.1668119430542
    10. '	' → logprob: -9.4168119430542

Token 84: ' modulo' (ID: 112372)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2731185257434845
    2. ' pos' → logprob: -2.273118495941162
    3. 'pos' → logprob: -2.398118495941162
    4. '   ' → logprob: -4.273118495941162
    5. ' return' → logprob: -4.898118495941162
    6. ',' → logprob: -5.023118495941162
    7. '
' → logprob: -5.398118495941162
    8. 'return' → logprob: -5.898118495941162
    9. ')' → logprob: -6.148118495941162
    10. ' (' → logprob: -6.773118495941162

Token 85: ' ' (ID: 220)
  Prédit: '26'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -0.03806937485933304
    2. ' ' → logprob: -3.288069486618042
    3. '27' → logprob: -11.038069725036621
    4. '25' → logprob: -12.413069725036621
    5. ' (' → logprob: -13.163069725036621
    6. ')' → logprob: -13.163069725036621
    7. '(' → logprob: -14.038069725036621
    8. '```' → logprob: -14.163069725036621
    9. '24' → logprob: -14.413069725036621
    10. '   ' → logprob: -15.038069725036621

Token 86: '26' (ID: 2109)
  Prédit: '26'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -6.511406809295295e-06
    2. ' ' → logprob: -12.000006675720215
    3. '2' → logprob: -15.125006675720215
    4. '27' → logprob: -18.8750057220459
    5. '25' → logprob: -19.1250057220459
    6. '   ' → logprob: -19.3750057220459
    7. '```' → logprob: -19.3750057220459
    8. '`' → logprob: -20.1250057220459
    9. '(' → logprob: -20.5000057220459
    10. 'abcdefghijklmnopqrstuvwxyz' → logprob: -21.1250057220459

Token 87: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01598123461008072
    2. '
' → logprob: -5.390981197357178
    3. '   ' → logprob: -5.640981197357178
    4. ')' → logprob: -6.015981197357178
    5. ' return' → logprob: -6.015981197357178
    6. ',' → logprob: -7.265981197357178
    7. 'return' → logprob: -7.265981197357178
    8. '        ' → logprob: -8.640981674194336
    9. '        
' → logprob: -8.890981674194336
    10. '```' → logprob: -8.890981674194336

Token 88: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011899753473699093
    2. ')' → logprob: -5.386899948120117
    3. '   ' → logprob: -6.261899948120117
    4. '        ' → logprob: -6.511899948120117
    5. ' return' → logprob: -6.761899948120117
    6. '
' → logprob: -7.261899948120117
    7. '    ' → logprob: -7.636899948120117
    8. ',' → logprob: -8.511899948120117
    9. 'return' → logprob: -8.511899948120117
    10. ' 
' → logprob: -8.636899948120117

Token 89: ' new' (ID: 620)
  Prédit: ' pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pos' → logprob: -0.7030290961265564
    2. '       ' → logprob: -2.078029155731201
    3. 'pos' → logprob: -2.078029155731201
    4. ' return' → logprob: -2.203029155731201
    5. ' (' → logprob: -2.828029155731201
    6. ' new' → logprob: -3.078029155731201
    7. 'return' → logprob: -3.703029155731201
    8. 'new' (adapté à ' new') → logprob: -5.203029155731201
    9. '   ' → logprob: -5.453029155731201
    10. '(pos' → logprob: -6.328029155731201

Token 90: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.0012959542218595743
    2. 'Pos' → logprob: -7.251296043395996
    3. '_' → logprob: -7.501296043395996
    4. '_position' → logprob: -10.626296043395996
    5. 'pos' → logprob: -12.251296043395996
    6. '_p' → logprob: -12.626296043395996
    7. '_val' → logprob: -15.001296043395996
    8. 'Position' → logprob: -15.501296043395996
    9. '	pos' → logprob: -15.626296043395996
    10. '_Pos' → logprob: -16.62629508972168

Token 91: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018150178715586662
    2. '=' → logprob: -4.018150329589844
    3. ' ' → logprob: -15.768150329589844
    4. ' =(' → logprob: -16.518150329589844
    5. ')' → logprob: -17.268150329589844
    6. ' =
' → logprob: -18.393150329589844
    7. ' ' → logprob: -18.518150329589844
    8. ',' → logprob: -18.643150329589844
    9. '.' → logprob: -19.143150329589844
    10. 's' → logprob: -19.143150329589844

Token 92: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.4740929901599884
    2. '(pos' → logprob: -0.974092960357666
    3. '(position' → logprob: -11.724093437194824
    4. '(' → logprob: -12.724093437194824
    5. '(Pos' → logprob: -12.724093437194824
    6. '(prev' → logprob: -14.974093437194824
    7. '(p' → logprob: -14.974093437194824
    8. ' ' → logprob: -15.474093437194824
    9. '(post' → logprob: -15.474093437194824
    10. '[pos' → logprob: -15.724093437194824

Token 93: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.004081367049366236
    2. ' pos' → logprob: -5.5040812492370605
    3. '(pos' → logprob: -12.754081726074219
    4. '	pos' → logprob: -17.12908172607422
    5. '26' → logprob: -18.00408172607422
    6. '_pos' → logprob: -18.37908172607422
    7. '25' → logprob: -18.50408172607422
    8. '   ' → logprob: -18.62908172607422
    9. ' (' → logprob: -19.25408172607422
    10. '27' → logprob: -19.37908172607422

Token 94: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0017317025922238827
    2. '-' → logprob: -6.376731872558594
    3. ' ' → logprob: -10.626731872558594
    4. ')' → logprob: -12.501731872558594
    5. ' )' → logprob: -14.626731872558594
    6. '<|end|>' → logprob: -14.626731872558594
    7. ' ' → logprob: -14.751731872558594
    8. '  ' → logprob: -17.501731872558594
    9. ' +' → logprob: -17.751731872558594
    10. '   ' → logprob: -17.751731872558594

Token 95: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.1269388198852539
    2. ' diff' → logprob: -2.126938819885254
    3. '	diff' → logprob: -11.501938819885254
    4. '(diff' → logprob: -14.626938819885254
    5. '_diff' → logprob: -17.501937866210938
    6. ' dif' → logprob: -17.751937866210938
    7. '.diff' → logprob: -18.001937866210938
    8. ' diffusion' → logprob: -18.751937866210938
    9. ' ' → logprob: -19.001937866210938
    10. '   ' → logprob: -19.876937866210938

Token 96: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.3319124011322856e-05
    2. ' )' → logprob: -10.750022888183594
    3. ')%' → logprob: -13.250022888183594
    4. '   ' → logprob: -18.000022888183594
    5. ' ' → logprob: -19.125022888183594
    6. '%' → logprob: -19.375022888183594
    7. ')
' → logprob: -19.500022888183594
    8. ']' → logprob: -19.625022888183594
    9. '）' → logprob: -19.750022888183594
    10. '+' → logprob: -19.750022888183594

Token 97: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.037886545062065125
    2. '%' → logprob: -3.537886619567871
    3. ')' → logprob: -4.912886619567871
    4. ' ' → logprob: -7.412886619567871
    5. ')%' → logprob: -9.162886619567871
    6. ' )' → logprob: -10.412886619567871
    7. ' ' → logprob: -11.912886619567871
    8. '<|end|>' → logprob: -12.912886619567871
    9. ' %)' → logprob: -13.912886619567871
    10. '
' → logprob: -13.912886619567871

Token 98: ' ' (ID: 220)
  Prédit: '26'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -0.004078401252627373
    2. ' ' → logprob: -5.504078388214111
    3. '   ' → logprob: -19.254077911376953
    4. '```' → logprob: -19.254077911376953
    5. '  ' → logprob: -20.254077911376953
    6. '27' → logprob: -20.379077911376953
    7. '2' → logprob: -21.379077911376953
    8. '25' → logprob: -21.379077911376953
    9. '24' → logprob: -21.441577911376953
    10. '`' → logprob: -21.504077911376953

Token 99: '26' (ID: 2109)
  Prédit: '26'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: 0.0
    2. ' ' → logprob: -17.125
    3. '```' → logprob: -21.375
    4. '2' → logprob: -21.5
    5. '   ' → logprob: -23.0
    6. '27' → logprob: -23.375
    7. '`' → logprob: -23.375
    8. 'abcdefghijklmnopqrstuvwxyz' → logprob: -23.75
    9. '২৬' → logprob: -24.125
    10. '25' → logprob: -24.375

Token 100: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007590038585476577
    2. ' return' → logprob: -7.625759124755859
    3. 'return' → logprob: -9.37575912475586
    4. '<|end|>' → logprob: -9.62575912475586
    5. '   ' → logprob: -10.25075912475586
    6. ')' → logprob: -10.37575912475586
    7. '
' → logprob: -11.25075912475586
    8. '        
' → logprob: -11.37575912475586
    9. ',' → logprob: -11.75075912475586
    10. '           ' → logprob: -12.25075912475586

Token 101: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00045545989996753633
    2. ' return' → logprob: -8.375455856323242
    3. '<|end|>' → logprob: -9.500455856323242
    4. '   ' → logprob: -10.000455856323242
    5. 'return' → logprob: -10.250455856323242
    6. '
' → logprob: -10.250455856323242
    7. '        
' → logprob: -11.250455856323242
    8. ')' → logprob: -12.250455856323242
    9. '    
' → logprob: -12.750455856323242
    10. '<|end|>' → logprob: -12.750455856323242

Token 102: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03424075245857239
    2. ' return' → logprob: -3.78424072265625
    3. 'return' (adapté à ' return') → logprob: -4.53424072265625
    4. '   ' → logprob: -9.40924072265625
    5. '        
' → logprob: -10.28424072265625
    6. ' new' → logprob: -10.40924072265625
    7. 'new' → logprob: -11.28424072265625
    8. '      ' → logprob: -11.78424072265625
    9. '	return' → logprob: -12.40924072265625
    10. '           ' → logprob: -12.65924072265625

Token 103: ' chr' (ID: 42767)
  Prédit: 'chr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chr' → logprob: -0.10020893067121506
    2. ' chr' → logprob: -2.3502089977264404
    3. '(chr' → logprob: -12.97520923614502
    4. '_chr' → logprob: -16.975208282470703
    5. 'Chr' → logprob: -19.600208282470703
    6. ' Chr' → logprob: -20.100208282470703
    7. ' ' → logprob: -20.975208282470703
    8. ' ' → logprob: -20.975208282470703
    9. 'chrom' → logprob: -21.475208282470703
    10. 'ch' → logprob: -21.850208282470703

Token 104: '(new' (ID: 2648)
  Prédit: '(new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -0.16436003148555756
    2. '(ord' → logprob: -1.9143600463867188
    3. '(' → logprob: -5.539360046386719
    4. 'new' → logprob: -8.789360046386719
    5. ' (' → logprob: -10.914360046386719
    6. '((' → logprob: -11.164360046386719
    7. '('' → logprob: -12.414360046386719
    8. ' new' → logprob: -12.789360046386719
    9. 'ord' → logprob: -13.539360046386719
    10. '(org' → logprob: -13.914360046386719

Token 105: '_pos' (ID: 14692)
  Prédit: 'ew'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ew' → logprob: -0.21700544655323029
    2. 'w' → logprob: -1.7170054912567139
    3. 'new' → logprob: -5.467005252838135
    4. 'c' → logprob: -5.592005252838135
    5. '(new' → logprob: -5.592005252838135
    6. '(c' → logprob: -6.592005252838135
    7. '_pos' → logprob: -7.467005252838135
    8. '_new' → logprob: -7.592005252838135
    9. '_w' → logprob: -7.967005252838135
    10. '_c' → logprob: -8.092005729675293

Token 106: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3133254945278168
    2. ' +' → logprob: -1.3133255243301392
    3. ')' → logprob: -9.813325881958008
    4. ' ' → logprob: -12.813325881958008
    5. '(ord' → logprob: -12.813325881958008
    6. '   ' → logprob: -13.438325881958008
    7. ')+' → logprob: -14.063325881958008
    8. 'ord' → logprob: -15.063325881958008
    9. '  ' → logprob: -15.563325881958008
    10. '(' → logprob: -15.563325881958008

Token 107: ' ord' (ID: 6608)
  Prédit: ' ord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ord' → logprob: -0.07889308780431747
    2. 'ord' → logprob: -2.5788931846618652
    3. '(ord' → logprob: -12.703892707824707
    4. '97' → logprob: -15.328892707824707
    5. '   ' → logprob: -17.078893661499023
    6. '_ord' → logprob: -17.578893661499023
    7. ' ' → logprob: -17.828893661499023
    8. 'ords' → logprob: -18.578893661499023
    9. ' ordinal' → logprob: -18.953893661499023
    10. '65' → logprob: -19.453893661499023

Token 108: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.00043102685594931245
    2. '(' → logprob: -7.750431060791016
    3. '("' → logprob: -16.625431060791016
    4. ' ('' → logprob: -17.125431060791016
    5. '(('' → logprob: -17.250431060791016
    6. ''a' → logprob: -17.500431060791016
    7. ''' → logprob: -17.500431060791016
    8. '(\'' → logprob: -17.875431060791016
    9. '(
' → logprob: -18.000431060791016
    10. 'a' → logprob: -18.000431060791016

Token 109: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -6.988221684878226e-06
    2. ''a' → logprob: -11.875006675720215
    3. '97' → logprob: -19.50000762939453
    4. 'а' → logprob: -20.37500762939453
    5. '```' → logprob: -20.37500762939453
    6. ' a' → logprob: -20.62500762939453
    7. 'abcdefghijklmnopqrstuvwxyz' → logprob: -20.87500762939453
    8. ''' → logprob: -21.00000762939453
    9. '')' → logprob: -21.87500762939453
    10. ')' → logprob: -22.25000762939453

Token 110: ''))

' (ID: 58153)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0044151670299470425
    2. '))' → logprob: -5.879415035247803
    3. '')' → logprob: -6.504415035247803
    4. ''))' → logprob: -9.129415512084961
    5. ' )' → logprob: -12.879415512084961
    6. ')))' → logprob: -14.504415512084961
    7. '")' → logprob: -15.629415512084961
    8. ')")' → logprob: -15.754415512084961
    9. '`)' → logprob: -16.37941551208496
    10. ''' → logprob: -16.75441551208496

Token 111: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.26775383949279785
    2. '   ' → logprob: -1.6427538394927979
    3. '    
' → logprob: -4.017753601074219
    4. '<|end|>' → logprob: -4.517753601074219
    5. '\n' → logprob: -5.267753601074219
    6. ' 
' → logprob: -6.142753601074219
    7. '\' → logprob: -7.017753601074219
    8. ')' → logprob: -7.267753601074219
    9. '  
' → logprob: -7.392753601074219
    10. '```' → logprob: -7.642753601074219

Token 112: ' input' (ID: 3422)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0314626544713974
    2. '
' → logprob: -4.656462669372559
    3. 'text' → logprob: -4.781462669372559
    4. '    
' → logprob: -5.406462669372559
    5. 'plaintext' → logprob: -6.031462669372559
    6. 'input' (adapté à ' input') → logprob: -6.281462669372559
    7. 'cipher' → logprob: -6.656462669372559
    8. 'message' → logprob: -7.281462669372559
    9. 'def' → logprob: -7.406462669372559
    10. 'n' → logprob: -8.156462669372559

Token 113: '_lines' (ID: 42980)
  Prédit: '_text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_text' → logprob: -0.7265304327011108
    2. '_' → logprob: -1.2265304327011108
    3. '_line' → logprob: -1.9765304327011108
    4. '_data' → logprob: -3.2265305519104004
    5. '_str' → logprob: -3.9765305519104004
    6. '_string' → logprob: -4.3515305519104
    7. '()' → logprob: -5.1015305519104
    8. ' =' → logprob: -5.8515305519104
    9. '_txt' → logprob: -6.8515305519104
    10. '_chars' → logprob: -6.9765305519104

Token 114: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05019618570804596
    2. '=' → logprob: -3.0501961708068848
    3. '()' → logprob: -6.800196170806885
    4. '[:]' → logprob: -8.800196647644043
    5. '(' → logprob: -9.050196647644043
    6. '[' → logprob: -9.675196647644043
    7. ' ' → logprob: -9.925196647644043
    8. '_' → logprob: -10.425196647644043
    9. '   ' → logprob: -10.675196647644043
    10. '.' → logprob: -11.050196647644043

Token 115: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.10077041387557983
    2. 'sys' → logprob: -2.3507704734802246
    3. ' []' → logprob: -8.475769996643066
    4. ' [' → logprob: -8.600769996643066
    5. '[]' → logprob: -9.100769996643066
    6. '[' → logprob: -10.475769996643066
    7. '(sys' → logprob: -11.850769996643066
    8. '   ' → logprob: -11.975769996643066
    9. ' list' → logprob: -11.975769996643066
    10. '=sys' → logprob: -12.350769996643066

Token 116: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.062201835215091705
    2. '.' → logprob: -2.812201738357544
    3. '.argv' → logprob: -8.562201499938965
    4. '.stdout' → logprob: -10.812201499938965
    5. '.readline' → logprob: -12.062201499938965
    6. '.std' → logprob: -12.437201499938965
    7. '.input' → logprob: -12.687201499938965
    8. '.st' → logprob: -12.812201499938965
    9. ' .' → logprob: -13.437201499938965
    10. 'stdin' → logprob: -13.562201499938965

Token 117: '.read' (ID: 7211)
  Prédit: '.readlines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readlines' → logprob: -0.6093182563781738
    2. '.readline' → logprob: -0.8593182563781738
    3. '.read' → logprob: -3.734318256378174
    4. '.' → logprob: -4.734318256378174
    5. ' .' → logprob: -10.109317779541016
    6. 'read' → logprob: -10.484317779541016
    7. '_lines' → logprob: -10.484317779541016
    8. '_read' → logprob: -10.609317779541016
    9. ')' → logprob: -11.984317779541016
    10. '_reader' → logprob: -12.859317779541016

Token 118: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.003108311677351594
    2. '().' → logprob: -5.878108501434326
    3. '(' → logprob: -8.253108024597168
    4. ' ()' → logprob: -11.503108024597168
    5. '())' → logprob: -11.753108024597168
    6. '_lines' → logprob: -12.503108024597168
    7. 'lines' → logprob: -12.753108024597168
    8. '_line' → logprob: -12.753108024597168
    9. '()]' → logprob: -13.003108024597168
    10. '()

' → logprob: -13.503108024597168

Token 119: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.31327101588249207
    2. 'split' → logprob: -1.3132710456848145
    3. 'rstrip' → logprob: -11.813270568847656
    4. 'decode' → logprob: -13.313270568847656
    5. 'lower' → logprob: -16.313270568847656
    6. ' split' → logprob: -16.313270568847656
    7. 'replace' → logprob: -17.188270568847656
    8. ' strip' → logprob: -17.188270568847656
    9. 'read' → logprob: -18.063270568847656
    10. '(split' → logprob: -18.688270568847656

Token 120: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.18762482702732086
    2. '().' → logprob: -1.9376248121261597
    3. '('' → logprob: -3.687624931335449
    4. '(' → logprob: -6.562624931335449
    5. '("' → logprob: -8.56262493133545
    6. ''' → logprob: -9.06262493133545
    7. '("("' → logprob: -9.18762493133545
    8. 'split' → logprob: -9.43762493133545
    9. ' ()' → logprob: -11.06262493133545
    10. '('\' → logprob: -11.56262493133545

Token 121: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: 0.0
    2. ' split' → logprob: -16.875
    3. '(split' → logprob: -19.25
    4. 'decode' → logprob: -19.375
    5. 'strip' → logprob: -19.75
    6. 'rstrip' → logprob: -20.75
    7. 'replace' → logprob: -21.375
    8. 'spl' → logprob: -21.75
    9. 'plit' → logprob: -22.0
    10. '```' → logprob: -22.25

Token 122: '('\' (ID: 24345)
  Prédit: '('\'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('\' → logprob: -0.5956254005432129
    2. '()' → logprob: -1.595625400543213
    3. '('' → logprob: -1.595625400543213
    4. 'lines' → logprob: -3.470625400543213
    5. '(' → logprob: -4.470625400543213
    6. '("\' → logprob: -7.470625400543213
    7. '("("' → logprob: -9.845624923706055
    8. '("' → logprob: -11.345624923706055
    9. '(',' → logprob: -11.595624923706055
    10. '('.')' → logprob: -11.720624923706055

Token 123: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -4.320199877838604e-07
    2. '\n' → logprob: -15.25
    3. '
' → logprob: -15.875
    4. ' n' → logprob: -17.25
    5. 'newline' → logprob: -17.75
    6. '```' → logprob: -19.0
    7. 'ndef' → logprob: -19.375
    8. ')' → logprob: -19.625
    9. '	n' → logprob: -19.875
    10. 'b' → logprob: -20.875

Token 124: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0029954127967357635
    2. '')' → logprob: -5.877995491027832
    3. ']' → logprob: -9.627995491027832
    4. '   ' → logprob: -9.877995491027832
    5. ')
' → logprob: -10.002995491027832
    6. ' )' → logprob: -11.377995491027832
    7. '[' → logprob: -11.502995491027832
    8. '")' → logprob: -12.877995491027832
    9. '')
' → logprob: -14.127995491027832
    10. '']' → logprob: -14.377995491027832

Token 125: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028446704149246216
    2. 'output' → logprob: -5.153446674346924
    3. 'for' → logprob: -5.653446674346924
    4. ' for' → logprob: -5.653446674346924
    5. ' decrypted' → logprob: -5.653446674346924
    6. 'plaintext' → logprob: -5.778446674346924
    7. 'result' → logprob: -6.278446674346924
    8. ' output' → logprob: -6.653446674346924
    9. '    
' → logprob: -7.028446674346924
    10. 'de' → logprob: -7.153446674346924

Token 126: ' idx' (ID: 14016)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.1493728160858154
    2. '   ' → logprob: -1.6493728160858154
    3. 'output' → logprob: -2.2743728160858154
    4. 'for' → logprob: -2.2743728160858154
    5. 'plaintext' → logprob: -3.0243728160858154
    6. 'de' → logprob: -3.1493728160858154
    7. ' decrypted' → logprob: -3.3993728160858154
    8. ' for' → logprob: -3.7743728160858154
    9. 'decoded' → logprob: -3.8993728160858154
    10. ' output' → logprob: -4.2743730545043945

Token 127: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008902903646230698
    2. '=' → logprob: -4.7589030265808105
    3. ' +=' → logprob: -8.258902549743652
    4. ')' → logprob: -11.258902549743652
    5. ' ' → logprob: -11.883902549743652
    6. '_' → logprob: -12.508902549743652
    7. '+=' → logprob: -13.258902549743652
    8. ' ' → logprob: -13.883902549743652
    9. '+' → logprob: -14.258902549743652
    10. ' =)' → logprob: -14.508902549743652

Token 128: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009271837188862264
    2. ' ' → logprob: -7.000926971435547
    3. '1' → logprob: -11.125926971435547
    4. '2' → logprob: -15.125926971435547
    5. 'int' → logprob: -15.625926971435547
    6. '```' → logprob: -16.813426971435547
    7. '۰' → logprob: -17.313426971435547
    8. '[' → logprob: -17.438426971435547
    9. '3' → logprob: -17.688426971435547
    10. '<|end|>' → logprob: -17.688426971435547

Token 129: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.5107177862082608e-05
    2. '1' → logprob: -11.000024795532227
    3. ' ' → logprob: -11.750024795532227
    4. '2' → logprob: -15.375024795532227
    5. 'int' → logprob: -16.812524795532227
    6. '-' → logprob: -17.187524795532227
    7. '   ' → logprob: -17.875024795532227
    8. '3' → logprob: -17.937524795532227
    9. 'len' → logprob: -17.937524795532227
    10. '```' → logprob: -18.187524795532227

Token 130: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4902506172657013
    2. 'while' → logprob: -1.990250587463379
    3. ' while' → logprob: -2.115250587463379
    4. '
' → logprob: -2.615250587463379
    5. ' 
' → logprob: -4.365250587463379
    6. ' ' → logprob: -4.365250587463379
    7. '    
' → logprob: -4.740250587463379
    8. '<|end|>' → logprob: -5.365250587463379
    9. '  
' → logprob: -5.615250587463379
    10. ',' → logprob: -5.740250587463379

Token 131: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12800030410289764
    2. 'while' → logprob: -2.628000259399414
    3. ' while' → logprob: -3.628000259399414
    4. '    
' → logprob: -5.003000259399414
    5. 'n' → logprob: -5.503000259399414
    6. '
' → logprob: -5.753000259399414
    7. ' 
' → logprob: -6.378000259399414
    8. ' ' → logprob: -6.753000259399414
    9. 'w' → logprob: -7.003000259399414
    10. ',' → logprob: -7.003000259399414

Token 132: ' while' (ID: 2049)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0108612775802612
    2. ' n' → logprob: -1.3858612775802612
    3. ' t' → logprob: -2.385861396789551
    4. '   ' → logprob: -2.510861396789551
    5. 't' → logprob: -2.510861396789551
    6. ' while' → logprob: -3.010861396789551
    7. 'num' → logprob: -3.510861396789551
    8. ' T' → logprob: -3.760861396789551
    9. ' num' → logprob: -4.260861396789551
    10. 'while' (adapté à ' while') → logprob: -4.635861396789551

Token 133: ' True' (ID: 6432)
  Prédit: ' idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.000667640648316592
    2. 'idx' → logprob: -7.375667572021484
    3. ' True' → logprob: -10.375667572021484
    4. '	idx' → logprob: -12.000667572021484
    5. 'True' → logprob: -13.500667572021484
    6. ' ' → logprob: -13.750667572021484
    7. '(idx' → logprob: -14.625667572021484
    8. '_idx' → logprob: -14.750667572021484
    9. '[idx' → logprob: -16.625667572021484
    10. ' ' → logprob: -16.750667572021484

Token 134: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00043007321073673666
    2. ':
' → logprob: -7.875430107116699
    3. '):' → logprob: -11.1254301071167
    4. '   ' → logprob: -11.8754301071167
    5. ' :' → logprob: -11.8754301071167
    6. ',' → logprob: -12.1254301071167
    7. '<|end|>' → logprob: -12.2504301071167
    8. '       ' → logprob: -12.3754301071167
    9. '():' → logprob: -12.6254301071167
    10. ':**' → logprob: -13.7504301071167

Token 135: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15119637548923492
    2. '   ' → logprob: -2.1511964797973633
    3. ' ' → logprob: -4.276196479797363
    4. '    ' → logprob: -4.776196479797363
    5. '     ' → logprob: -7.651196479797363
    6. '  ' → logprob: -8.526196479797363
    7. '<|end|>' → logprob: -8.526196479797363
    8. ' if' → logprob: -8.651196479797363
    9. '      ' → logprob: -8.651196479797363
    10. '    
' → logprob: -9.526196479797363

Token 136: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06457874923944473
    2. '   ' → logprob: -3.3145787715911865
    3. ' if' → logprob: -4.314578533172607
    4. '    ' → logprob: -4.814578533172607
    5. '       ' → logprob: -6.314578533172607
    6. '  ' → logprob: -6.439578533172607
    7. 'if' (adapté à ' if') → logprob: -8.064579010009766
    8. ' 
' → logprob: -8.564579010009766
    9. 'i' → logprob: -8.689579010009766
    10. ' i' → logprob: -8.939579010009766

Token 137: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.25195473432540894
    2. 'idx' → logprob: -1.5019547939300537
    3. '	idx' → logprob: -10.626955032348633
    4. '(idx' → logprob: -14.126955032348633
    5. '_idx' → logprob: -15.251955032348633
    6. '[idx' → logprob: -16.126955032348633
    7. ' ' → logprob: -16.626955032348633
    8. 'index' → logprob: -16.751955032348633
    9. '.idx' → logprob: -17.001955032348633
    10. '   ' → logprob: -17.001955032348633

Token 138: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.08914130926132202
    2. '>=' → logprob: -2.464141368865967
    3. ' ==' → logprob: -9.214140892028809
    4. '==' → logprob: -10.089140892028809
    5. ' ' → logprob: -10.464140892028809
    6. ']>=' → logprob: -11.214140892028809
    7. ' <' → logprob: -11.714140892028809
    8. ')>=' → logprob: -11.964140892028809
    9. '=' → logprob: -13.839140892028809
    10. '   ' → logprob: -14.089140892028809

Token 139: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0019286326132714748
    2. ' len' → logprob: -6.251928806304932
    3. '(len' → logprob: -18.001928329467773
    4. '=len' → logprob: -18.626928329467773
    5. '	len' → logprob: -19.376928329467773
    6. 'length' → logprob: -19.501928329467773
    7. '<len' → logprob: -19.751928329467773
    8. '   ' → logprob: -19.876928329467773
    9. '[len' → logprob: -20.251928329467773
    10. 'input' → logprob: -20.501928329467773

Token 140: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -2.2603901015827432e-05
    2. 'input' → logprob: -11.000022888183594
    3. '(' → logprob: -12.125022888183594
    4. ' input' → logprob: -15.500022888183594
    5. ' (' → logprob: -15.750022888183594
    6. '=input' → logprob: -17.250022888183594
    7. '(output' → logprob: -17.750022888183594
    8. ',input' → logprob: -17.750022888183594
    9. '(
' → logprob: -18.125022888183594
    10. '_input' → logprob: -18.250022888183594

Token 141: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -5.512236498361744e-07
    2. ')_' → logprob: -15.500000953674316
    3. '_' → logprob: -15.750000953674316
    4. '_line' → logprob: -16.875
    5. ')' → logprob: -17.5
    6. '```' → logprob: -18.375
    7. 'lines' → logprob: -18.5
    8. '_LINES' → logprob: -18.875
    9. '_strings' → logprob: -19.5
    10. '_words' → logprob: -19.75

Token 142: '):
' (ID: 1883)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4496139585971832
    2. '):' → logprob: -1.4496139287948608
    3. ' or' → logprob: -2.1996140480041504
    4. ':
' → logprob: -4.82461404800415
    5. '):
' → logprob: -5.32461404800415
    6. ')' → logprob: -5.82461404800415
    7. '   ' → logprob: -7.82461404800415
    8. '       ' → logprob: -9.074613571166992
    9. ' :' → logprob: -9.699613571166992
    10. ' and' → logprob: -9.949613571166992

Token 143: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0552872009575367
    2. '       ' → logprob: -2.9302871227264404
    3. '   ' → logprob: -8.80528736114502
    4. ' break' → logprob: -9.18028736114502
    5. ':' → logprob: -9.55528736114502
    6. 'break' → logprob: -10.68028736114502
    7. ':
' → logprob: -11.43028736114502
    8. '<|end|>' → logprob: -12.18028736114502
    9. '          ' → logprob: -12.30528736114502
    10. ',' → logprob: -12.55528736114502

Token 144: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.5227457284927368
    2. '           ' → logprob: -1.0227457284927368
    3. ' break' → logprob: -3.6477456092834473
    4. '       ' → logprob: -3.8977456092834473
    5. 'return' → logprob: -7.022745609283447
    6. '	break' → logprob: -8.897746086120605
    7. '   ' → logprob: -9.647746086120605
    8. '               ' → logprob: -10.147746086120605
    9. ' return' → logprob: -11.772746086120605
    10. 'b' → logprob: -12.147746086120605

Token 145: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.371227890253067
    2. '
' → logprob: -1.8712278604507446
    3. '        
' → logprob: -1.9962278604507446
    4. '    
' → logprob: -4.996227741241455
    5. ' 
' → logprob: -5.621227741241455
    6. '  
' → logprob: -5.746227741241455
    7. '\n' → logprob: -5.996227741241455
    8. ',' → logprob: -7.371227741241455
    9. '            
' → logprob: -7.746227741241455
    10. '       
' → logprob: -7.871227741241455

Token 146: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3938346207141876
    2. '
' → logprob: -1.6438345909118652
    3. '        
' → logprob: -2.7688345909118652
    4. '    
' → logprob: -3.5188345909118652
    5. ' 
' → logprob: -3.6438345909118652
    6. '  
' → logprob: -5.393834590911865
    7. '   ' → logprob: -5.768834590911865
    8. '\n' → logprob: -6.268834590911865
    9. '   
' → logprob: -7.393834590911865
    10. ',' → logprob: -7.518834590911865

Token 147: ' N' (ID: 478)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.31223341822624207
    2. 'n' → logprob: -2.4372334480285645
    3. '       ' → logprob: -2.6872334480285645
    4. ' line' → logprob: -2.6872334480285645
    5. '   ' → logprob: -4.3122334480285645
    6. ' length' → logprob: -4.5622334480285645
    7. 'line' → logprob: -5.3122334480285645
    8. ' N' → logprob: -6.3122334480285645
    9. ' num' → logprob: -6.3122334480285645
    10. ' t' → logprob: -6.5622334480285645

Token 148: '_line' (ID: 14418)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0747784823179245
    2. '=' → logprob: -2.9497785568237305
    3. ',' → logprob: -3.9497785568237305
    4. ' ,' → logprob: -7.8247785568237305
    5. '=int' → logprob: -10.69977855682373
    6. ' ' → logprob: -12.69977855682373
    7. '_line' → logprob: -12.69977855682373
    8. ')' → logprob: -12.82477855682373
    9. '=line' → logprob: -13.57477855682373
    10. ' =
' → logprob: -13.69977855682373

Token 149: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25193020701408386
    2. '=' → logprob: -1.5019302368164062
    3. ' ' → logprob: -14.626930236816406
    4. ',' → logprob: -15.626930236816406
    5. '=N' → logprob: -16.376930236816406
    6. 's' → logprob: -16.626930236816406
    7. '   ' → logprob: -16.751930236816406
    8. ')' → logprob: -16.751930236816406
    9. ' ' → logprob: -16.876930236816406
    10. '_' → logprob: -17.001930236816406

Token 150: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.47407862544059753
    2. 'input' → logprob: -0.9740786552429199
    3. 'int' → logprob: -13.724078178405762
    4. ' ' → logprob: -14.724078178405762
    5. ' int' → logprob: -16.849079132080078
    6. '   ' → logprob: -17.224079132080078
    7. '	input' → logprob: -17.599079132080078
    8. '(input' → logprob: -17.849079132080078
    9. '=input' → logprob: -18.474079132080078
    10. '<input' → logprob: -18.974079132080078

Token 151: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -2.7729658540920354e-05
    2. '_tokens' → logprob: -11.375027656555176
    3. '_line' → logprob: -11.625027656555176
    4. 'Lines' → logprob: -13.000027656555176
    5. 'lines' → logprob: -13.750027656555176
    6. '[_' → logprob: -13.875027656555176
    7. '_' → logprob: -14.625027656555176
    8. '```' → logprob: -14.750027656555176
    9. ')_' → logprob: -15.000027656555176
    10. '[' → logprob: -15.250027656555176

Token 152: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -3.3213025744771585e-05
    2. '[' → logprob: -10.375033378601074
    3. '[N' → logprob: -14.125033378601074
    4. ' [' → logprob: -14.375033378601074
    5. 'idx' → logprob: -15.625033378601074
    6. '```' → logprob: -15.750033378601074
    7. '   ' → logprob: -16.000032424926758
    8. ' idx' → logprob: -17.125032424926758
    9. '[
' → logprob: -17.500032424926758
    10. '       ' → logprob: -17.500032424926758

Token 153: '].' (ID: 1651)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3074028491973877
    2. '].' → logprob: -1.5574028491973877
    3. '.strip' → logprob: -2.9324028491973877
    4. ']
' → logprob: -8.182402610778809
    5. ')' → logprob: -8.682402610778809
    6. ').' → logprob: -10.057402610778809
    7. ' ]' → logprob: -10.307402610778809
    8. '.' → logprob: -10.307402610778809
    9. ' ].' → logprob: -10.557402610778809
    10. '.rstrip' → logprob: -10.557402610778809

Token 154: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -6.704273118884885e-07
    2. 'rstrip' → logprob: -14.250000953674316
    3. 'split' → logprob: -18.0
    4. '.strip' → logprob: -19.875
    5. 'str' → logprob: -20.0
    6. ' strip' → logprob: -20.125
    7. '_strip' → logprob: -20.875
    8. '```' → logprob: -21.0
    9. '(strip' → logprob: -21.25
    10. 'isdigit' → logprob: -22.375

Token 155: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.018154388293623924
    2. '()
' → logprob: -4.018154621124268
    3. '()

' → logprob: -13.39315414428711
    4. ')' → logprob: -14.26815414428711
    5. '(' → logprob: -14.76815414428711
    6. '()
' → logprob: -14.89315414428711
    7. '()\' → logprob: -15.26815414428711
    8. '=' → logprob: -15.51815414428711
    9. 'def' → logprob: -15.51815414428711
    10. ' ()' → logprob: -15.64315414428711

Token 156: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20153097808361053
    2. 'if' → logprob: -2.826530933380127
    3. ' if' → logprob: -2.951530933380127
    4. '<|end|>' → logprob: -3.701530933380127
    5. '
' → logprob: -4.201530933380127
    6. '   ' → logprob: -4.951530933380127
    7. '<|end|>' → logprob: -5.451530933380127
    8. '        
' → logprob: -5.576530933380127
    9. '\n' → logprob: -5.701530933380127
    10. ':' → logprob: -5.951530933380127

Token 157: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.4754311740398407
    2. 'if' → logprob: -0.9754312038421631
    3. ' if' → logprob: -7.475430965423584
    4. 'i' → logprob: -7.600430965423584
    5. ' idx' → logprob: -8.975431442260742
    6. '       ' → logprob: -8.975431442260742
    7. '   ' → logprob: -11.225431442260742
    8. 'n' → logprob: -11.975431442260742
    9. 'N' → logprob: -12.975431442260742
    10. '	idx' → logprob: -13.225431442260742

Token 158: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.030542682856321335
    2. ' +=' → logprob: -3.5305426120758057
    3. '+' → logprob: -7.155542850494385
    4. '=' → logprob: -11.655542373657227
    5. '++' → logprob: -13.405542373657227
    6. ']+=' → logprob: -14.655542373657227
    7. '```' → logprob: -15.530542373657227
    8. '+="' → logprob: -15.655542373657227
    9. '+='' → logprob: -16.155542373657227
    10. ')' → logprob: -16.280542373657227

Token 159: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '0' → logprob: -19.2500057220459
    4. '```' → logprob: -20.5000057220459
    5. '   ' → logprob: -21.2500057220459
    6. '１' → logprob: -21.6250057220459
    7. '
' → logprob: -21.8750057220459
    8. ' ' → logprob: -22.1875057220459
    9. '۱' → logprob: -22.3125057220459
    10. '`' → logprob: -22.3125057220459

Token 160: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '0' → logprob: -18.000003814697266
    4. '```' → logprob: -18.500003814697266
    5. '
' → logprob: -19.750003814697266
    6. '   ' → logprob: -20.125003814697266
    7. '`' → logprob: -20.375003814697266
    8. '１' → logprob: -20.375003814697266
    9. '۱' → logprob: -21.125003814697266
    10. '

' → logprob: -21.125003814697266

Token 161: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.035850826650857925
    2. ' if' → logprob: -3.535850763320923
    3. 'if' → logprob: -5.410851001739502
    4. '        
' → logprob: -7.785851001739502
    5. '<|end|>' → logprob: -7.910851001739502
    6. ' ' → logprob: -8.160850524902344
    7. '   ' → logprob: -8.535850524902344
    8. '      ' → logprob: -9.660850524902344
    9. '  
' → logprob: -9.910850524902344
    10. '        ' → logprob: -9.910850524902344

Token 162: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5561708211898804
    2. ' if' → logprob: -0.9311708211898804
    3. 'if' → logprob: -3.43117094039917
    4. '   ' → logprob: -9.806170463562012
    5. 'n' → logprob: -10.431170463562012
    6. '        
' → logprob: -10.806170463562012
    7. ' ' → logprob: -11.181170463562012
    8. 'try' → logprob: -12.056170463562012
    9. '        ' → logprob: -12.431170463562012
    10. '      ' → logprob: -12.681170463562012

Token 163: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.005606291815638542
    2. 'N' → logprob: -5.255606174468994
    3. ' if' → logprob: -8.255606651306152
    4. 'n' → logprob: -9.380606651306152
    5. 'try' → logprob: -11.130606651306152
    6. '       ' → logprob: -12.505606651306152
    7. '   ' → logprob: -12.755606651306152
    8. '#' → logprob: -12.755606651306152
    9. '
' → logprob: -13.880606651306152
    10. 'i' → logprob: -14.005606651306152

Token 164: ' N' (ID: 478)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.4270256757736206
    2. 'N' → logprob: -1.5520256757736206
    3. ' N' → logprob: -2.17702579498291
    4. 'not' → logprob: -3.80202579498291
    5. ' ' → logprob: -10.67702579498291
    6. 'len' → logprob: -13.55202579498291
    7. ' ' → logprob: -13.61452579498291
    8. ' len' → logprob: -13.61452579498291
    9. '   ' → logprob: -14.42702579498291
    10. 'n' → logprob: -14.61452579498291

Token 165: '_line' (ID: 14418)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.05490078777074814
    2. '==' → logprob: -2.929900884628296
    3. '=' → logprob: -12.054901123046875
    4. ' ' → logprob: -12.679901123046875
    5. ' =' → logprob: -12.929901123046875
    6. '_line' → logprob: -13.054901123046875
    7. '_' → logprob: -13.679901123046875
    8. ' <=' → logprob: -13.804901123046875
    9. '```' → logprob: -13.804901123046875
    10. ' <' → logprob: -15.554901123046875

Token 166: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3132798373699188
    2. '==' → logprob: -1.3132798671722412
    3. '=' → logprob: -11.31328010559082
    4. ' =' → logprob: -13.18828010559082
    5. '===' → logprob: -13.68828010559082
    6. '()==' → logprob: -13.93828010559082
    7. ']==' → logprob: -14.56328010559082
    8. ')==' → logprob: -14.93828010559082
    9. '==
' → logprob: -15.06328010559082
    10. ' ' → logprob: -15.31328010559082

Token 167: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.31811001896858215
    2. '''' → logprob: -1.3181099891662598
    3. '"' → logprob: -5.44310998916626
    4. '""' → logprob: -7.69310998916626
    5. ''end' → logprob: -10.943110466003418
    6. ''q' → logprob: -11.193110466003418
    7. ' '' → logprob: -11.943110466003418
    8. '0' → logprob: -12.318110466003418
    9. ''O' → logprob: -13.068110466003418
    10. ''#' → logprob: -13.068110466003418

Token 168: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00021951000962872058
    2. ''' → logprob: -8.750219345092773
    3. '':' → logprob: -9.750219345092773
    4. ' ' → logprob: -13.625219345092773
    5. '"' → logprob: -14.000219345092773
    6. '''' → logprob: -15.250219345092773
    7. '':
' → logprob: -16.250219345092773
    8. '":' → logprob: -16.625219345092773
    9. '```' → logprob: -16.625219345092773
    10. ' '' → logprob: -16.875219345092773

Token 169: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.006270512938499451
    2. '':
' → logprob: -5.506270408630371
    3. ''' → logprob: -6.131270408630371
    4. '':
' → logprob: -11.756270408630371
    5. '":' → logprob: -12.881270408630371
    6. ':' → logprob: -12.881270408630371
    7. ''):' → logprob: -14.006270408630371
    8. '':'' → logprob: -14.631270408630371
    9. ''):
' → logprob: -15.006270408630371
    10. '':

' → logprob: -15.381270408630371

Token 170: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00034702493576332927
    2. '       ' → logprob: -8.125347137451172
    3. ':' → logprob: -10.500347137451172
    4. '          ' → logprob: -11.500347137451172
    5. ':
' → logprob: -12.750347137451172
    6. ' break' → logprob: -13.000347137451172
    7. '               ' → logprob: -13.125347137451172
    8. '		' → logprob: -13.750347137451172
    9. '	       ' → logprob: -13.750347137451172
    10. ',' → logprob: -14.125347137451172

Token 171: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6895540952682495
    2. ' break' → logprob: -0.9395540952682495
    3. 'break' → logprob: -2.939554214477539
    4. '       ' → logprob: -2.939554214477539
    5. '               ' → logprob: -7.314554214477539
    6. '	break' → logprob: -8.064554214477539
    7. '\n' → logprob: -8.314554214477539
    8. '
' → logprob: -8.314554214477539
    9. '   ' → logprob: -9.939554214477539
    10. 'return' → logprob: -10.189554214477539

Token 172: ' Fin' (ID: 7772)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.01428479328751564
    2. ' break' → logprob: -4.264284610748291
    3. 'return' → logprob: -9.51428508758545
    4. '       ' → logprob: -10.01428508758545
    5. '	break' → logprob: -13.51428508758545
    6. '           ' → logprob: -13.76428508758545
    7. 'b' → logprob: -15.76428508758545
    8. ' return' → logprob: -16.264284133911133
    9. 'Break' → logprob: -16.889284133911133
    10. '   ' → logprob: -16.889284133911133

Token 173: ' des' (ID: 731)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.60965496301651
    2. '       ' → logprob: -0.85965496301651
    3. '<|end|>' → logprob: -3.7346549034118652
    4. '        ' → logprob: -6.234654903411865
    5. '\n' → logprob: -6.609654903411865
    6. '               ' → logprob: -7.109654903411865
    7. '   ' → logprob: -7.109654903411865
    8. '    ' → logprob: -7.234654903411865
    9. '        
' → logprob: -7.359654903411865
    10. '            ' → logprob: -7.609654903411865

Token 174: ' données' (ID: 30580)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.2458560466766357
    2. 'trait' → logprob: -1.4958560466766357
    3. 'entr' → logprob: -1.8708560466766357
    4. ' entr' → logprob: -1.9958560466766357
    5. 'tests' → logprob: -2.9958560466766357
    6. ' données' → logprob: -3.1208560466766357
    7. ' traitements' → logprob: -3.2458560466766357
    8. ' tests' → logprob: -3.9958560466766357
    9. 'program' → logprob: -4.120856285095215
    10. ' programmes' → logprob: -5.245856285095215

Token 175: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16143499314785004
    2. '           ' → logprob: -1.9114350080490112
    3. '\n' → logprob: -7.411435127258301
    4. '<|end|>' → logprob: -8.7864351272583
    5. '               ' → logprob: -9.4114351272583
    6. '
' → logprob: -9.4114351272583
    7. '        ' → logprob: -9.4114351272583
    8. '      ' → logprob: -10.1614351272583
    9. '   ' → logprob: -10.2864351272583
    10. '          ' → logprob: -10.6614351272583

Token 176: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.201473668217659
    2. '       ' → logprob: -1.7014737129211426
    3. '          ' → logprob: -10.701473236083984
    4. '        ' → logprob: -11.201473236083984
    5. '               ' → logprob: -11.576473236083984
    6. '         ' → logprob: -12.826473236083984
    7. '      ' → logprob: -12.951473236083984
    8. ',' → logprob: -12.951473236083984
    9. '		' → logprob: -13.201473236083984
    10. ' break' → logprob: -13.701473236083984

Token 177: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.240792378783226
    2. '           ' → logprob: -1.7407923936843872
    3. ' break' → logprob: -3.7407922744750977
    4. '       ' → logprob: -4.240792274475098
    5. 'return' → logprob: -7.865792274475098
    6. '	break' → logprob: -9.615792274475098
    7. '               ' → logprob: -10.865792274475098
    8. '   ' → logprob: -12.365792274475098
    9. '```' → logprob: -12.865792274475098
    10. '		' → logprob: -13.240792274475098

Token 178: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013752338709309697
    2. '
' → logprob: -6.876375198364258
    3. '        
' → logprob: -8.126375198364258
    4. '<|end|>' → logprob: -11.501375198364258
    5. '  
' → logprob: -11.626375198364258
    6. '    
' → logprob: -12.501375198364258
    7. '       
' → logprob: -12.626375198364258
    8. '   ' → logprob: -12.626375198364258
    9. '```' → logprob: -12.626375198364258
    10. ',' → logprob: -13.001375198364258

Token 179: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0038634969387203455
    2. ' N' → logprob: -6.378863334655762
    3. 'N' → logprob: -6.753863334655762
    4. 'n' → logprob: -7.378863334655762
    5. '
' → logprob: -9.003863334655762
    6. '   ' → logprob: -9.628863334655762
    7. '        
' → logprob: -9.628863334655762
    8. '```' → logprob: -10.753863334655762
    9. ' n' → logprob: -11.378863334655762
    10. '\n' → logprob: -11.878863334655762

Token 180: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.013988959603011608
    2. ' N' → logprob: -4.388988971710205
    3. '       ' → logprob: -6.763988971710205
    4. 'n' → logprob: -8.388988494873047
    5. '   ' → logprob: -9.388988494873047
    6. ' n' → logprob: -11.763988494873047
    7. 'try' → logprob: -14.138988494873047
    8. ' ' → logprob: -14.138988494873047
    9. '        ' → logprob: -14.513988494873047
    10. '    ' → logprob: -14.513988494873047

Token 181: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06995021551847458
    2. '=' → logprob: -2.6949501037597656
    3. ',' → logprob: -11.444950103759766
    4. '=int' → logprob: -12.944950103759766
    5. ')' → logprob: -14.944950103759766
    6. ' ' → logprob: -15.194950103759766
    7. 's' → logprob: -16.819950103759766
    8. '_' → logprob: -16.944950103759766
    9. ' ,' → logprob: -17.194950103759766
    10. '    ' → logprob: -17.444950103759766

Token 182: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0009114635176956654
    2. ' int' → logprob: -7.000911235809326
    3. '(int' → logprob: -22.000911712646484
    4. '[int' → logprob: -22.375911712646484
    5. '=int' → logprob: -23.750911712646484
    6. ' ' → logprob: -24.250911712646484
    7. '   ' → logprob: -24.500911712646484
    8. '	int' → logprob: -24.750911712646484
    9. '<int' → logprob: -24.875911712646484
    10. '  ' → logprob: -24.875911712646484

Token 183: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0005532711511477828
    2. '(' → logprob: -7.500553131103516
    3. ' (' → logprob: -16.125553131103516
    4. '(
' → logprob: -16.750553131103516
    5. 'N' → logprob: -17.375553131103516
    6. '('' → logprob: -18.750553131103516
    7. ')' → logprob: -18.750553131103516
    8. '((' → logprob: -19.125553131103516
    9. '(S' → logprob: -19.250553131103516
    10. '(n' → logprob: -19.500553131103516

Token 184: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -5.676981345459353e-06
    2. ')' → logprob: -12.375005722045898
    3. 'Line' → logprob: -14.625005722045898
    4. '_LINE' → logprob: -15.000005722045898
    5. 'line' → logprob: -15.375005722045898
    6. '(N' → logprob: -15.625005722045898
    7. ' )' → logprob: -17.0000057220459
    8. '(line' → logprob: -17.3750057220459
    9. ')_' → logprob: -17.6250057220459
    10. '_Line' → logprob: -17.6250057220459

Token 185: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011355629976605996
    2. ')
' → logprob: -9.125113487243652
    3. '       ' → logprob: -12.500113487243652
    4. ' )' → logprob: -14.625113487243652
    5. '   ' → logprob: -16.37511444091797
    6. '))' → logprob: -17.00011444091797
    7. ')`' → logprob: -17.00011444091797
    8. '<|end|>' → logprob: -17.62511444091797
    9. ')

' → logprob: -17.75011444091797
    10. ')#' → logprob: -17.75011444091797

Token 186: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011551049537956715
    2. '        
' → logprob: -7.876154899597168
    3. 's' → logprob: -8.876154899597168
    4. 'mapping' → logprob: -9.001154899597168
    5. 'cipher' → logprob: -9.126154899597168
    6. '
' → logprob: -9.751154899597168
    7. ' mapping' → logprob: -10.126154899597168
    8. '   ' → logprob: -10.251154899597168
    9. ' key' → logprob: -10.751154899597168
    10. 'key' → logprob: -10.751154899597168

Token 187: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7116615772247314
    2. ' key' → logprob: -2.2116615772247314
    3. 'key' → logprob: -3.0866615772247314
    4. 'mapping' → logprob: -3.2116615772247314
    5. 'swap' → logprob: -3.3366615772247314
    6. 'text' → logprob: -3.4616615772247314
    7. 'cipher' → logprob: -3.5866615772247314
    8. 'message' → logprob: -4.086661338806152
    9. ' keys' → logprob: -4.086661338806152
    10. ' swap' → logprob: -4.086661338806152

Token 188: ' Message' (ID: 9178)
  Prédit: 'swap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'swap' → logprob: -1.4711545705795288
    2. 'key' → logprob: -2.3461546897888184
    3. 'message' → logprob: -2.5961546897888184
    4. 'cipher' → logprob: -2.5961546897888184
    5. 'encrypted' → logprob: -2.8461546897888184
    6. 'sw' → logprob: -2.9711546897888184
    7. 'mapping' → logprob: -2.9711546897888184
    8. 'encoded' → logprob: -3.2211546897888184
    9. 'pairs' → logprob: -3.3461546897888184
    10. 'word' → logprob: -3.7211546897888184

Token 189: ' ch' (ID: 549)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07591675221920013
    2. '=' → logprob: -2.7009167671203613
    3. '_cipher' → logprob: -5.950916767120361
    4. '_line' → logprob: -7.200916767120361
    5. '_enc' → logprob: -7.325916767120361
    6. 's' → logprob: -7.700916767120361
    7. '_encoded' → logprob: -7.950916767120361
    8. '_en' → logprob: -8.450916290283203
    9. '   ' → logprob: -8.700916290283203
    10. '_lines' → logprob: -8.950916290283203

Token 190: 'if' (ID: 366)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34360021352767944
    2. '   ' → logprob: -1.8436002731323242
    3. '=' → logprob: -2.218600273132324
    4. ' ' → logprob: -4.968600273132324
    5. '       ' → logprob: -5.468600273132324
    6. '    ' → logprob: -6.343600273132324
    7. 'iff' → logprob: -6.468600273132324
    8. '  ' → logprob: -6.718600273132324
    9. 'e' → logprob: -6.718600273132324
    10. '        ' → logprob: -7.468600273132324

Token 191: 'fr' (ID: 1739)
  Prédit: 'fr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fr' → logprob: -0.3361290395259857
    2. 'f' → logprob: -2.0861289501190186
    3. 'r' → logprob: -2.9611289501190186
    4. 'ment' → logprob: -3.0861289501190186
    5. '=' → logprob: -4.336129188537598
    6. 'ré' → logprob: -4.461129188537598
    7. 'fér' → logprob: -4.836129188537598
    8. 'fé' → logprob: -4.836129188537598
    9. 'fre' → logprob: -5.086129188537598
    10. 'rement' → logprob: -5.336129188537598

Token 192: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.04161607101559639
    2. 'ré' → logprob: -3.4166159629821777
    3. '   ' → logprob: -6.041615962982178
    4. 'er' → logprob: -6.416615962982178
    5. 'e' → logprob: -7.041615962982178
    6. 'r' → logprob: -7.416615962982178
    7. '       ' → logprob: -7.541615962982178
    8. '```' → logprob: -7.666615962982178
    9. 'ed' → logprob: -8.291616439819336
    10. 're' → logprob: -9.041616439819336

Token 193: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5655738711357117
    2. '=' → logprob: -0.9405738711357117
    3. '       ' → logprob: -3.1905739307403564
    4. 's' → logprob: -9.565573692321777
    5. ' encrypted' → logprob: -9.690573692321777
    6. ',' → logprob: -9.815573692321777
    7. 'encrypted' → logprob: -9.940573692321777
    8. '   ' → logprob: -10.065573692321777
    9. '_cipher' → logprob: -10.940573692321777
    10. 'cipher' → logprob: -11.190573692321777

Token 194: '       ' (ID: 309)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14770127832889557
    2. '=' → logprob: -2.3977012634277344
    3. '       ' → logprob: -3.1477012634277344
    4. ' encrypted' → logprob: -7.147701263427734
    5. 'cipher' → logprob: -7.522701263427734
    6. 'encrypted' → logprob: -7.647701263427734
    7. '_cipher' → logprob: -7.772701263427734
    8. '   ' → logprob: -8.022701263427734
    9. 's' → logprob: -8.397701263427734
    10. 'message' → logprob: -9.147701263427734

Token 195: ' message' (ID: 3176)
  Prédit: 'cipher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cipher' → logprob: -1.2262345552444458
    2. 'message' (adapté à ' message') → logprob: -1.4762345552444458
    3. ' encrypted' → logprob: -1.9762345552444458
    4. ' message' → logprob: -2.1012344360351562
    5. 'encrypted' → logprob: -2.2262344360351562
    6. 'msg' → logprob: -3.1012344360351562
    7. ' cipher' → logprob: -3.3512344360351562
    8. '       ' → logprob: -5.351234436035156
    9. 'encoded' → logprob: -5.476234436035156
    10. 's' → logprob: -5.601234436035156

Token 196: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25193271040916443
    2. '=' → logprob: -1.5019327402114868
    3. '   ' → logprob: -13.126933097839355
    4. ',' → logprob: -14.251933097839355
    5. ' ' → logprob: -15.001933097839355
    6. '       ' → logprob: -15.626933097839355
    7. ' ' → logprob: -16.37693214416504
    8. '=line' → logprob: -16.50193214416504
    9. 's' → logprob: -16.75193214416504
    10. '_' → logprob: -16.75193214416504

Token 197: ' list' (ID: 1562)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.10020817816257477
    2. ' input' → logprob: -2.350208282470703
    3. '   ' → logprob: -13.975208282470703
    4. '(input' → logprob: -15.350208282470703
    5. '	input' → logprob: -16.100208282470703
    6. '=input' → logprob: -16.600208282470703
    7. ' ' → logprob: -16.725208282470703
    8. '<input' → logprob: -16.725208282470703
    9. '[input' → logprob: -17.850208282470703
    10. 'list' → logprob: -17.975208282470703

Token 198: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -1.2352385965641588e-05
    2. '(' → logprob: -11.750012397766113
    3. 'input' → logprob: -12.750012397766113
    4. ' (' → logprob: -13.500012397766113
    5. '=input' → logprob: -17.625011444091797
    6. ',input' → logprob: -17.750011444091797
    7. '[input' → logprob: -17.750011444091797
    8. ' input' → logprob: -18.000011444091797
    9. '(
' → logprob: -18.375011444091797
    10. '<input' → logprob: -18.500011444091797

Token 199: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -3.214019307051785e-05
    2. '_' → logprob: -11.375032424926758
    3. 'Lines' → logprob: -12.125032424926758
    4. '(' → logprob: -12.750032424926758
    5. 'lines' → logprob: -13.000032424926758
    6. '_(' → logprob: -13.125032424926758
    7. '(lines' → logprob: -13.375032424926758
    8. ')' → logprob: -13.875032424926758
    9. '_strings' → logprob: -13.875032424926758
    10. '(_' → logprob: -14.125032424926758

Token 200: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -6.988221684878226e-06
    2. ')[' → logprob: -12.250006675720215
    3. '(idx' → logprob: -13.625006675720215
    4. '[index' → logprob: -15.375006675720215
    5. '[id' → logprob: -15.375006675720215
    6. '[' → logprob: -15.500006675720215
    7. '[input' → logprob: -15.875006675720215
    8. '   ' → logprob: -16.62500762939453
    9. '[ind' → logprob: -16.87500762939453
    10. ')' → logprob: -17.25000762939453

Token 201: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.006900074891746044
    2. '])' → logprob: -5.006900310516357
    3. '[idx' → logprob: -9.2568998336792
    4. '][' → logprob: -9.7568998336792
    5. ']' → logprob: -10.7568998336792
    6. ' ].' → logprob: -12.5068998336792
    7. '])
' → logprob: -13.0068998336792
    8. ']);' → logprob: -14.1318998336792
    9. ']
' → logprob: -14.2568998336792
    10. '()].' → logprob: -14.6318998336792

Token 202: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -1.0280383548888494e-06
    2. ' strip' → logprob: -14.625000953674316
    3. 'rstrip' → logprob: -15.125000953674316
    4. '.strip' → logprob: -16.125001907348633
    5. 'split' → logprob: -16.125001907348633
    6. '(strip' → logprob: -20.250001907348633
    7. '_strip' → logprob: -21.125001907348633
    8. '   ' → logprob: -21.625001907348633
    9. '```' → logprob: -22.625001907348633
    10. '
' → logprob: -22.625001907348633

Token 203: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0027321206871420145
    2. '()' → logprob: -6.002732276916504
    3. '())
' → logprob: -8.502732276916504
    4. ')' → logprob: -10.002732276916504
    5. '()
' → logprob: -13.127732276916504
    6. ' ())' → logprob: -13.127732276916504
    7. '()))' → logprob: -13.502732276916504
    8. '()]' → logprob: -13.627732276916504
    9. '())

' → logprob: -14.752732276916504
    10. '();)' → logprob: -15.127732276916504

Token 204: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1503637731075287
    2. '<|end|>' → logprob: -2.4003636837005615
    3. 'idx' → logprob: -3.5253636837005615
    4. '[idx' → logprob: -5.025363922119141
    5. '	idx' → logprob: -5.400363922119141
    6. ' idx' → logprob: -5.525363922119141
    7. '<|end|>' → logprob: -5.900363922119141
    8. '   ' → logprob: -7.025363922119141
    9. '
' → logprob: -8.52536392211914
    10. '	   ' → logprob: -9.15036392211914

Token 205: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.04848913103342056
    2. ' idx' → logprob: -3.4234890937805176
    3. '	idx' → logprob: -5.173489093780518
    4. '       ' → logprob: -5.548489093780518
    5. '[idx' → logprob: -5.923489093780518
    6. '   ' → logprob: -6.298489093780518
    7. '<|end|>' → logprob: -8.423489570617676
    8. '(idx' → logprob: -8.673489570617676
    9. '_idx' → logprob: -9.298489570617676
    10. '<|end|>' → logprob: -9.923489570617676

Token 206: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0010725847678259015
    2. ' +=' → logprob: -7.001072406768799
    3. '+' → logprob: -8.751072883605957
    4. '++' → logprob: -13.501072883605957
    5. ']+=' → logprob: -14.126072883605957
    6. '=' → logprob: -15.251072883605957
    7. '+++' → logprob: -16.00107192993164
    8. '```' → logprob: -16.25107192993164
    9. '+='' → logprob: -16.25107192993164
    10. '+="' → logprob: -16.50107192993164

Token 207: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00029947367147542536
    2. ' ' → logprob: -8.125299453735352
    3. 'N' → logprob: -12.875299453735352
    4. ' N' → logprob: -15.000299453735352
    5. '0' → logprob: -15.375299453735352
    6. '2' → logprob: -16.50029945373535
    7. '   ' → logprob: -16.68779945373535
    8. '```' → logprob: -16.87529945373535
    9. '１' → logprob: -18.25029945373535
    10. '3' → logprob: -18.43779945373535

Token 208: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.750003814697266
    3. '0' → logprob: -16.125003814697266
    4. '2' → logprob: -16.250003814697266
    5. 'N' → logprob: -16.500003814697266
    6. '```' → logprob: -16.625003814697266
    7. '   ' → logprob: -18.125003814697266
    8. '`' → logprob: -18.250003814697266
    9. '
' → logprob: -18.562503814697266
    10. '+' → logprob: -19.187503814697266

Token 209: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007702575996518135
    2. '
' → logprob: -5.882702350616455
    3. '        
' → logprob: -6.257702350616455
    4. '<|end|>' → logprob: -6.382702350616455
    5. 'diff' → logprob: -7.757702350616455
    6. '   ' → logprob: -9.132702827453613
    7. '    
' → logprob: -9.382702827453613
    8. 's' → logprob: -9.632702827453613
    9. '<|end|>' → logprob: -9.882702827453613
    10. '        ' → logprob: -10.007702827453613

Token 210: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03032182715833187
    2. 'diff' → logprob: -4.1553215980529785
    3. 'key' → logprob: -5.4053215980529785
    4. 'shift' → logprob: -5.5303215980529785
    5. 'swap' → logprob: -5.9053215980529785
    6. ' key' → logprob: -7.7803215980529785
    7. 'decoded' → logprob: -7.9053215980529785
    8. 'd' → logprob: -8.030322074890137
    9. 'keys' → logprob: -8.780322074890137
    10. 'k' → logprob: -8.780322074890137

Token 211: ' #' (ID: 1069)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.8110005855560303
    2. 'diff' → logprob: -1.1860005855560303
    3. 'swap' → logprob: -1.9360005855560303
    4. 'sw' → logprob: -3.8110005855560303
    5. 'mapping' → logprob: -3.9360005855560303
    6. '#' (adapté à ' #') → logprob: -4.811000823974609
    7. 'keys' → logprob: -4.811000823974609
    8. 'decoded' → logprob: -5.061000823974609
    9. 'shift' → logprob: -5.186000823974609
    10. 'd' → logprob: -5.561000823974609

Token 212: ' Lire' (ID: 57624)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'key' → logprob: -1.1196448802947998
    2. 'swap' → logprob: -1.2446448802947998
    3. 'mapping' → logprob: -1.9946448802947998
    4. 'diff' → logprob: -3.2446448802948
    5. '#' → logprob: -3.4946448802948
    6. 'perm' → logprob: -3.6196448802948
    7. 'pairs' → logprob: -3.9946448802948
    8. 'sw' → logprob: -4.119645118713379
    9. 'per' → logprob: -4.494645118713379
    10. 'cipher' → logprob: -4.619645118713379

Token 213: ' les' (ID: 1341)
  Prédit: 'swap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'swap' → logprob: -0.6287180185317993
    2. 'les' → logprob: -1.8787180185317993
    3. 'diff' → logprob: -2.7537178993225098
    4. 'keys' → logprob: -3.1287178993225098
    5. 'le' → logprob: -3.1287178993225098
    6. 'per' → logprob: -4.12871789932251
    7. 'sw' → logprob: -4.37871789932251
    8. 'perm' → logprob: -4.50371789932251
    9. 'pairs' → logprob: -4.50371789932251
    10. 'the' → logprob: -4.62871789932251

Token 214: ' opérations' (ID: 102793)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.9741578102111816
    2. 'per' → logprob: -1.9741578102111816
    3. 'de' → logprob: -1.9741578102111816
    4. 'sw' → logprob: -2.7241578102111816
    5. 'indices' → logprob: -2.7241578102111816
    6. 'swap' → logprob: -3.2241578102111816
    7. 'keys' → logprob: -3.5991578102111816
    8. 'perm' → logprob: -3.8491578102111816
    9. 'N' → logprob: -3.9741578102111816
    10. 'positions' → logprob: -4.474157810211182

Token 215: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0026689961086958647
    2. 'operations' → logprob: -6.252668857574463
    3. ' =' → logprob: -8.252669334411621
    4. ' operations' → logprob: -9.252669334411621
    5. 's' → logprob: -9.627669334411621
    6. ',' → logprob: -10.502669334411621
    7. 'operation' → logprob: -10.627669334411621
    8. '   ' → logprob: -10.752669334411621
    9. 'for' → logprob: -10.752669334411621
    10. '=' → logprob: -10.877669334411621

Token 216: ' swap' (ID: 25489)
  Prédit: 'swap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'swap' → logprob: -0.022163808345794678
    2. 'sw' → logprob: -5.1471638679504395
    3. 'per' → logprob: -5.3971638679504395
    4. 'd' → logprob: -5.6471638679504395
    5. 'de' → logprob: -6.0221638679504395
    6. 'dé' → logprob: -6.5221638679504395
    7. 'trans' → logprob: -6.6471638679504395
    8. ' swap' → logprob: -7.5221638679504395
    9. 'decrypt' → logprob: -7.8971638679504395
    10. 'shift' → logprob: -8.147163391113281

Token 217: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1330704241991043
    2. 'operations' → logprob: -2.758070468902588
    3. 'swap' → logprob: -3.258070468902588
    4. 'ops' → logprob: -5.133070468902588
    5. ' swaps' → logprob: -5.758070468902588
    6. 'for' → logprob: -6.008070468902588
    7. 's' → logprob: -6.133070468902588
    8. 'sw' → logprob: -6.133070468902588
    9. ' operations' → logprob: -6.383070468902588
    10. ' swap' → logprob: -7.133070468902588

Token 218: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04776057228446007
    2. 'operations' → logprob: -3.797760486602783
    3. 'swap' → logprob: -4.047760486602783
    4. 'ops' → logprob: -6.297760486602783
    5. ' operations' → logprob: -6.797760486602783
    6. ' swaps' → logprob: -7.172760486602783
    7. 's' → logprob: -7.547760486602783
    8. ' swap' → logprob: -7.672760486602783
    9. 'sw' → logprob: -7.922760486602783
    10. 'for' → logprob: -8.047760963439941

Token 219: ' swaps' (ID: 150699)
  Prédit: 'operations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'operations' → logprob: -0.8328496813774109
    2. 'sw' → logprob: -1.2078497409820557
    3. 'swap' → logprob: -2.4578497409820557
    4. 'ops' → logprob: -2.7078497409820557
    5. '       ' → logprob: -3.4578497409820557
    6. ' operations' → logprob: -3.4578497409820557
    7. ' swaps' → logprob: -3.9578497409820557
    8. 'for' → logprob: -4.207849502563477
    9. '   ' → logprob: -5.582849502563477
    10. ' swap' → logprob: -5.832849502563477

Token 220: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132912516593933
    2. ' =' → logprob: -1.313291311264038
    3. '=[]' → logprob: -10.563291549682617
    4. '   ' → logprob: -13.063291549682617
    5. '=[]
' → logprob: -13.938291549682617
    6. ' ' → logprob: -15.563291549682617
    7. '    ' → logprob: -15.938291549682617
    8. ',' → logprob: -16.688291549682617
    9. '           ' → logprob: -16.813291549682617
    10. '       ' → logprob: -16.938291549682617

Token 221: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.01412566564977169
    2. '[]
' → logprob: -5.014125823974609
    3. '[input' → logprob: -5.014125823974609
    4. '[' → logprob: -7.889125823974609
    5. ' []' → logprob: -8.76412582397461
    6. '[list' → logprob: -9.38912582397461
    7. '[]

' → logprob: -10.01412582397461
    8. '[int' → logprob: -10.01412582397461
    9. '[n' → logprob: -11.88912582397461
    10. 'list' → logprob: -11.88912582397461

Token 222: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011428380385041237
    2. 'while' → logprob: -7.251142978668213
    3. 'for' → logprob: -9.126142501831055
    4. '<|end|>' → logprob: -9.251142501831055
    5. ' for' → logprob: -9.626142501831055
    6. '	' → logprob: -9.751142501831055
    7. ' while' → logprob: -10.001142501831055
    8. '	while' → logprob: -11.126142501831055
    9. '	   ' → logprob: -11.126142501831055
    10. '   ' → logprob: -11.251142501831055

Token 223: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.004705068655312061
    2. ' for' → logprob: -5.50470495223999
    3. '       ' → logprob: -7.37970495223999
    4. '	for' → logprob: -13.754705429077148
    5. 'range' → logprob: -14.629705429077148
    6. 'swap' → logprob: -14.754705429077148
    7. 'while' → logprob: -15.004705429077148
    8. 'i' → logprob: -16.25470542907715
    9. '   ' → logprob: -16.25470542907715
    10. '_for' → logprob: -16.37970542907715

Token 224: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0002783783129416406
    2. ' _' → logprob: -8.62527847290039
    3. '_i' → logprob: -10.00027847290039
    4. ' i' → logprob: -10.12527847290039
    5. 'i' → logprob: -11.25027847290039
    6. '_swap' → logprob: -15.50027847290039
    7. '_range' → logprob: -16.12527847290039
    8. '_in' → logprob: -17.25027847290039
    9. '_=' → logprob: -17.25027847290039
    10. ' ' → logprob: -17.62527847290039

Token 225: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.031843774020671844
    2. 'in' → logprob: -3.656843662261963
    3. 'i' → logprob: -5.531843662261963
    4. ' i' → logprob: -7.406843662261963
    5. ' _' → logprob: -8.031844139099121
    6. 'range' → logprob: -8.031844139099121
    7. '_' → logprob: -8.906844139099121
    8. ' ' → logprob: -9.031844139099121
    9. ' range' → logprob: -9.906844139099121
    10. 's' → logprob: -13.031844139099121

Token 226: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.001332263695076108
    2. ' range' → logprob: -6.6263322830200195
    3. 'ange' → logprob: -12.87633228302002
    4. '(range' → logprob: -13.62633228302002
    5. '	range' → logprob: -14.50133228302002
    6. ' ' → logprob: -14.50133228302002
    7. ')' → logprob: -14.87633228302002
    8. '```' → logprob: -15.37633228302002
    9. 'rang' → logprob: -15.62633228302002
    10. '   ' → logprob: -15.62633228302002

Token 227: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.00015264409012161195
    2. '(' → logprob: -9.625152587890625
    3. 'N' → logprob: -9.625152587890625
    4. ' (' → logprob: -11.125152587890625
    5. ' N' → logprob: -12.125152587890625
    6. ' ' → logprob: -16.375152587890625
    7. '   ' → logprob: -16.750152587890625
    8. '(n' → logprob: -17.250152587890625
    9. 's' → logprob: -17.250152587890625
    10. '(int' → logprob: -17.750152587890625

Token 228: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.12708663940429688
    2. '):' → logprob: -2.127086639404297
    3. '       ' → logprob: -9.877086639404297
    4. '):
' → logprob: -10.002086639404297
    5. '   ' → logprob: -11.002086639404297
    6. '():
' → logprob: -11.502086639404297
    7. ' ):
' → logprob: -11.502086639404297
    8. ':
' → logprob: -12.002086639404297
    9. ':' → logprob: -12.252086639404297
    10. ')' → logprob: -12.877086639404297

Token 229: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4938148260116577
    2. '   ' → logprob: -1.1188148260116577
    3. '       ' → logprob: -3.3688149452209473
    4. '<|end|>' → logprob: -3.8688149452209473
    5. '<|end|>' → logprob: -6.118814945220947
    6. '	   ' → logprob: -6.743814945220947
    7. '	       ' → logprob: -7.743814945220947
    8. '    
' → logprob: -7.743814945220947
    9. '    ' → logprob: -7.743814945220947
    10. ',' → logprob: -7.868814945220947

Token 230: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.5848177671432495
    2. 'swap' → logprob: -1.8348177671432495
    3. '           ' → logprob: -2.459817886352539
    4. 'op' → logprob: -3.209817886352539
    5. 'x' → logprob: -3.334817886352539
    6. 'l' → logprob: -3.834817886352539
    7. ' swap' → logprob: -3.834817886352539
    8. 'i' → logprob: -4.084817886352539
    9. 'parts' → logprob: -4.084817886352539
    10. 'line' → logprob: -4.709817886352539

Token 231: '_str' (ID: 6182)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01999494433403015
    2. ',b' → logprob: -4.144994735717773
    3. 'b' → logprob: -5.894994735717773
    4. ' ,' → logprob: -6.894994735717773
    5. '_str' → logprob: -9.894994735717773
    6. 's' → logprob: -10.144994735717773
    7. '_,' → logprob: -10.644994735717773
    8. ',s' → logprob: -10.644994735717773
    9. 'a' → logprob: -11.519994735717773
    10. '_b' → logprob: -12.269994735717773

Token 232: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005246769287623465
    2. ',b' → logprob: -7.875524520874023
    3. '=' → logprob: -9.875524520874023
    4. 'b' → logprob: -10.125524520874023
    5. ' ,' → logprob: -10.375524520874023
    6. ' =' → logprob: -11.500524520874023
    7. 'a' → logprob: -13.125524520874023
    8. ',s' → logprob: -13.250524520874023
    9. ',a' → logprob: -13.250524520874023
    10. 's' → logprob: -13.500524520874023

Token 233: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.005234356038272381
    2. ' b' → logprob: -5.255234241485596
    3. ' ' → logprob: -16.005233764648438
    4. '_b' → logprob: -16.255233764648438
    5. '	b' → logprob: -16.380233764648438
    6. ' 
' → logprob: -17.255233764648438
    7. '>b' → logprob: -17.380233764648438
    8. '  
' → logprob: -17.505233764648438
    9. '<|end|>' → logprob: -17.505233764648438
    10. ')b' → logprob: -17.505233764648438

Token 234: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.006008548196405172
    2. '_' → logprob: -5.381008625030518
    3. ' =' → logprob: -7.131008625030518
    4. '=' → logprob: -7.506008625030518
    5. 'str' → logprob: -11.38100814819336
    6. '_line' → logprob: -12.25600814819336
    7. '=_' → logprob: -12.38100814819336
    8. '_=' → logprob: -12.38100814819336
    9. ',' → logprob: -12.88100814819336
    10. '_s' → logprob: -13.25600814819336

Token 235: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12693126499652863
    2. ' =' → logprob: -2.1269311904907227
    3. '=line' → logprob: -13.876931190490723
    4. ',' → logprob: -14.251931190490723
    5. '=input' → logprob: -14.501931190490723
    6. ')' → logprob: -15.001931190490723
    7. ' ' → logprob: -15.751931190490723
    8. 'a' → logprob: -16.37693214416504
    9. '<|end|>' → logprob: -16.50193214416504
    10. '_=' → logprob: -16.50193214416504

Token 236: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.4740789234638214
    2. 'input' → logprob: -0.974078893661499
    3. '    ' → logprob: -14.224079132080078
    4. '=input' → logprob: -14.599079132080078
    5. 'map' → logprob: -15.224079132080078
    6. '_input' → logprob: -15.849079132080078
    7. ' ' → logprob: -16.099079132080078
    8. '(input' → logprob: -16.599079132080078
    9. ' map' → logprob: -16.724079132080078
    10. '   ' → logprob: -16.974079132080078

Token 237: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.22715114057064056
    2. '_line' → logprob: -1.8521511554718018
    3. '_' → logprob: -4.227150917053223
    4. '()' → logprob: -4.352150917053223
    5. '_str' → logprob: -4.602150917053223
    6. '_tokens' → logprob: -6.352150917053223
    7. 'str' → logprob: -6.727150917053223
    8. 'split' → logprob: -7.102150917053223
    9. '```' → logprob: -7.352150917053223
    10. '().' → logprob: -7.477150917053223

Token 238: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -2.534558552724775e-05
    2. 'idx' → logprob: -10.875025749206543
    3. '[' → logprob: -13.125025749206543
    4. '```' → logprob: -13.375025749206543
    5. '	idx' → logprob: -14.250025749206543
    6. ' idx' → logprob: -14.375025749206543
    7. '   ' → logprob: -14.500025749206543
    8. '(idx' → logprob: -15.125025749206543
    9. '[
' → logprob: -15.125025749206543
    10. ' [' → logprob: -15.750025749206543

Token 239: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.00563841313123703
    2. '.strip' → logprob: -5.880638599395752
    3. '[idx' → logprob: -6.005638599395752
    4. '.split' → logprob: -9.130638122558594
    5. '().' → logprob: -10.005638122558594
    6. ']' → logprob: -10.130638122558594
    7. '           ' → logprob: -10.130638122558594
    8. ''].' → logprob: -10.380638122558594
    9. ').' → logprob: -10.505638122558594
    10. '()].' → logprob: -10.755638122558594

Token 240: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.0015028368216007948
    2. 'split' → logprob: -6.501502990722656
    3. ' strip' → logprob: -14.876502990722656
    4. '.strip' → logprob: -16.126502990722656
    5. 'rstrip' → logprob: -16.876502990722656
    6. 'idx' → logprob: -19.126502990722656
    7. '_strip' → logprob: -19.126502990722656
    8. '(strip' → logprob: -19.501502990722656
    9. 'str' → logprob: -20.251502990722656
    10. 'trim' → logprob: -20.376502990722656

Token 241: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04880344495177269
    2. '()
' → logprob: -3.0488033294677734
    3. '('' → logprob: -8.673803329467773
    4. '()

' → logprob: -11.298803329467773
    5. '())' → logprob: -12.298803329467773
    6. '()='' → logprob: -12.798803329467773
    7. '<|end|>' → logprob: -12.923803329467773
    8. '()[' → logprob: -12.923803329467773
    9. ')' → logprob: -13.048803329467773
    10. '<|end|>' → logprob: -13.173803329467773

Token 242: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3869931399822235
    2. '<|end|>' → logprob: -1.636993169784546
    3. '[idx' → logprob: -3.136993169784546
    4. '<|end|>' → logprob: -3.761993169784546
    5. '   ' → logprob: -4.636992931365967
    6. ',' → logprob: -4.761992931365967
    7. 'idx' → logprob: -4.886992931365967
    8. '           ' → logprob: -4.886992931365967
    9. '        
' → logprob: -5.886992931365967
    10. '
' → logprob: -6.011992931365967

Token 243: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.7914393544197083
    2. 'idx' (adapté à ' idx') → logprob: -1.0414392948150635
    3. '           ' → logprob: -2.5414392948150635
    4. '   ' → logprob: -2.7914392948150635
    5. '       ' → logprob: -3.1664392948150635
    6. '	idx' → logprob: -5.291439533233643
    7. '	   ' → logprob: -5.791439533233643
    8. '[idx' → logprob: -6.916439533233643
    9. '    ' → logprob: -8.166439056396484
    10. 'a' → logprob: -8.166439056396484

Token 244: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.57612544298172
    2. ' +=' → logprob: -0.82612544298172
    3. ']+=' → logprob: -9.576125144958496
    4. '           ' → logprob: -9.951125144958496
    5. '+' → logprob: -10.201125144958496
    6. ')' → logprob: -12.076125144958496
    7. '=' → logprob: -12.451125144958496
    8. '.append' → logprob: -12.701125144958496
    9. '   ' → logprob: -12.826125144958496
    10. '    ' → logprob: -12.826125144958496

Token 245: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00015860427811276168
    2. ' ' → logprob: -8.750158309936523
    3. '```' → logprob: -16.750158309936523
    4. '   ' → logprob: -17.000158309936523
    5. '１' → logprob: -18.812658309936523
    6. '۱' → logprob: -19.500158309936523
    7. '  ' → logprob: -19.750158309936523
    8. '`' → logprob: -19.937658309936523
    9. '
' → logprob: -20.250158309936523
    10. '2' → logprob: -20.500158309936523

Token 246: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '2' → logprob: -18.875003814697266
    4. '１' → logprob: -19.000003814697266
    5. '```' → logprob: -19.000003814697266
    6. '۱' → logprob: -19.687503814697266
    7. '   ' → logprob: -20.125003814697266
    8. '0' → logprob: -20.687503814697266
    9. '' → logprob: -21.125003814697266
    10. '१' → logprob: -21.187503814697266

Token 247: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.37910857796669006
    2. '       ' → logprob: -1.7541085481643677
    3. ',' → logprob: -3.1291086673736572
    4. '   ' → logprob: -3.1291086673736572
    5. '<|end|>' → logprob: -4.129108428955078
    6. 'a' → logprob: -4.504108428955078
    7. '        
' → logprob: -4.879108428955078
    8. '    
' → logprob: -5.379108428955078
    9. '            
' → logprob: -5.879108428955078
    10. '
' → logprob: -6.254108428955078

Token 248: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27903616428375244
    2. '   ' → logprob: -2.154036045074463
    3. '           ' → logprob: -2.779036045074463
    4. ',' → logprob: -3.404036045074463
    5. 'a' → logprob: -4.779036045074463
    6. '<|end|>' → logprob: -5.529036045074463
    7. '        
' → logprob: -5.904036045074463
    8. '    
' → logprob: -6.154036045074463
    9. 's' → logprob: -6.279036045074463
    10. ' ,' → logprob: -6.279036045074463

Token 249: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.229207381606102
    2. '           ' → logprob: -2.1042072772979736
    3. '   ' → logprob: -3.2292072772979736
    4. '       ' → logprob: -3.8542072772979736
    5. ' a' → logprob: -4.104207515716553
    6. ' swaps' → logprob: -5.729207515716553
    7. 'sw' → logprob: -6.229207515716553
    8. ' sw' → logprob: -8.604207038879395
    9. 'swap' → logprob: -9.104207038879395
    10. '	a' → logprob: -10.604207038879395

Token 250: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.37218281626701355
    2. ' =' → logprob: -1.372182846069336
    3. '=' → logprob: -2.872182846069336
    4. ' ,' → logprob: -8.122182846069336
    5. ',a' → logprob: -8.997182846069336
    6. 'a' → logprob: -9.122182846069336
    7. '=int' → logprob: -9.497182846069336
    8. ',b' → logprob: -11.872182846069336
    9. '=a' → logprob: -11.997182846069336
    10. ' ' → logprob: -12.372182846069336

Token 251: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.02417728677392006
    2. 'ord' → logprob: -4.024177074432373
    3. 'a' → logprob: -5.149177074432373
    4. 'chr' → logprob: -8.774177551269531
    5. ' int' → logprob: -10.649177551269531
    6. ' ord' → logprob: -11.024177551269531
    7. 'b' → logprob: -12.399177551269531
    8. 'char' → logprob: -13.524177551269531
    9. '(ord' → logprob: -13.524177551269531
    10. '[int' → logprob: -14.774177551269531

Token 252: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -1.0087516784551553e-05
    2. 'a' → logprob: -11.75001049041748
    3. '(' → logprob: -13.12501049041748
    4. ')a' → logprob: -17.000009536743164
    5. ')' → logprob: -17.125009536743164
    6. '(b' → logprob: -18.500009536743164
    7. '(
' → logprob: -18.500009536743164
    8. ' (' → logprob: -18.625009536743164
    9. '(ai' → logprob: -18.625009536743164
    10. '[a' → logprob: -19.000009536743164

Token 253: '_str' (ID: 6182)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7783547043800354
    2. '(a' → logprob: -0.9033547043800354
    3. ')' → logprob: -2.0283546447753906
    4. ')a' → logprob: -6.278354644775391
    5. '_a' → logprob: -7.778354644775391
    6. '[a' → logprob: -8.15335464477539
    7. 'b' → logprob: -8.65335464477539
    8. '_str' → logprob: -8.65335464477539
    9. '(' → logprob: -8.65335464477539
    10. ',' → logprob: -8.90335464477539

Token 254: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.034479640424251556
    2. ',' → logprob: -4.15947961807251
    3. ')
' → logprob: -4.53447961807251
    4. '-' → logprob: -5.15947961807251
    5. ' -' → logprob: -7.28447961807251
    6. '           ' → logprob: -7.90947961807251
    7. ' )' → logprob: -8.784480094909668
    8. ')-' → logprob: -9.034480094909668
    9. '),' → logprob: -9.034480094909668
    10. ' ,' → logprob: -9.159480094909668

Token 255: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07293093949556351
    2. 'b' → logprob: -3.0729310512542725
    3. ' b' → logprob: -4.197930812835693
    4. ',' → logprob: -5.322930812835693
    5. '		' → logprob: -6.697930812835693
    6. ',b' → logprob: -6.822930812835693
    7. '	       ' → logprob: -7.572930812835693
    8. '       ' → logprob: -7.822930812835693
    9. '	   ' → logprob: -8.322931289672852
    10. '   ' → logprob: -8.947931289672852

Token 256: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.10022673010826111
    2. ' b' → logprob: -2.350226640701294
    3. '           ' → logprob: -10.975226402282715
    4. ' ' → logprob: -14.975226402282715
    5. '            ' → logprob: -15.225226402282715
    6. '   ' → logprob: -15.225226402282715
    7. ',' → logprob: -15.600226402282715
    8. '    ' → logprob: -15.600226402282715
    9. '	b' → logprob: -15.725226402282715
    10. '7' → logprob: -15.975226402282715

Token 257: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5021259188652039
    2. ' =' → logprob: -1.0021259784698486
    3. ')' → logprob: -3.6271259784698486
    4. '-' → logprob: -7.7521257400512695
    5. '<|end|>' → logprob: -8.25212574005127
    6. ')=' → logprob: -9.50212574005127
    7. ' ' → logprob: -9.62712574005127
    8. '<|end|>' → logprob: -9.75212574005127
    9. ',' → logprob: -10.50212574005127
    10. ' -=' → logprob: -10.87712574005127

Token 258: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.011050650849938393
    2. ' int' → logprob: -4.511050701141357
    3. 'a' → logprob: -13.2610502243042
    4. 'b' → logprob: -14.2610502243042
    5. '(int' → logprob: -16.136051177978516
    6. ' ' → logprob: -16.511051177978516
    7. ' b' → logprob: -16.761051177978516
    8. '<int' → logprob: -17.136051177978516
    9. '   ' → logprob: -17.261051177978516
    10. '	int' → logprob: -17.511051177978516

Token 259: '(b' (ID: 3229)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.7045648694038391
    2. 'int' → logprob: -0.8295648694038391
    3. ')' → logprob: -3.7045648097991943
    4. ' b' → logprob: -4.079565048217773
    5. '(b' → logprob: -4.329565048217773
    6. 'a' → logprob: -4.579565048217773
    7. ' int' → logprob: -6.579565048217773
    8. '(a' → logprob: -6.954565048217773
    9. '(int' → logprob: -7.079565048217773
    10. ')b' → logprob: -7.329565048217773

Token 260: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.023341795429587364
    2. ')' → logprob: -3.7733418941497803
    3. 'str' → logprob: -9.89834213256836
    4. '_' → logprob: -10.27334213256836
    5. '_)' → logprob: -12.39834213256836
    6. '-' → logprob: -13.39834213256836
    7. '_STR' → logprob: -13.89834213256836
    8. 'Str' → logprob: -13.89834213256836
    9. ')_' → logprob: -13.89834213256836
    10. ')
' → logprob: -14.27334213256836

Token 261: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0020025114063173532
    2. ')
' → logprob: -6.627002716064453
    3. '           ' → logprob: -7.502002716064453
    4. '       ' → logprob: -9.127002716064453
    5. '<|end|>' → logprob: -12.502002716064453
    6. ',' → logprob: -13.127002716064453
    7. '               ' → logprob: -13.252002716064453
    8. '   ' → logprob: -13.627002716064453
    9. ' )' → logprob: -13.752002716064453
    10. ']' → logprob: -13.877002716064453

Token 262: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03096974827349186
    2. '       ' → logprob: -3.5309698581695557
    3. '
' → logprob: -8.030969619750977
    4. ')' → logprob: -8.655969619750977
    5. '<|end|>' → logprob: -8.655969619750977
    6. '   ' → logprob: -9.155969619750977
    7. '        
' → logprob: -9.405969619750977
    8. ',' → logprob: -9.405969619750977
    9. '<|end|>' → logprob: -9.405969619750977
    10. '            
' → logprob: -10.405969619750977

Token 263: ' swaps' (ID: 150699)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2437993437051773
    2. '           ' → logprob: -1.6187993288040161
    3. ' swaps' → logprob: -4.118799209594727
    4. 'swap' → logprob: -7.243799209594727
    5. 'sw' → logprob: -8.368799209594727
    6. ')' → logprob: -8.618799209594727
    7. '
' → logprob: -8.618799209594727
    8. ' swap' → logprob: -8.993799209594727
    9. ',' → logprob: -9.368799209594727
    10. '   ' → logprob: -9.368799209594727

Token 264: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.004095377866178751
    2. '.' → logprob: -5.504095554351807
    3. '.reverse' → logprob: -11.629095077514648
    4. '.app' → logprob: -13.129095077514648
    5. ' .' → logprob: -13.129095077514648
    6. '.ap' → logprob: -13.254095077514648
    7. '.extend' → logprob: -13.879095077514648
    8. '.setdefault' → logprob: -14.879095077514648
    9. '.insert' → logprob: -15.754095077514648
    10. ').' → logprob: -15.879095077514648

Token 265: '((' (ID: 2054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5549831390380859
    2. '(a' → logprob: -1.054983139038086
    3. '((' → logprob: -2.554983139038086
    4. '(b' → logprob: -11.429983139038086
    5. ' (' → logprob: -12.304983139038086
    6. '(
' → logprob: -12.429983139038086
    7. '(an' → logprob: -13.554983139038086
    8. '(ans' → logprob: -14.054983139038086
    9. '(ab' → logprob: -14.054983139038086
    10. '(ai' → logprob: -14.179983139038086

Token 266: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -3.173704271830502e-06
    2. 'b' → logprob: -12.87500286102295
    3. ' a' → logprob: -14.37500286102295
    4. ')a' → logprob: -17.750003814697266
    5. '   ' → logprob: -18.000003814697266
    6. ')' → logprob: -19.500003814697266
    7. '	a' → logprob: -19.625003814697266
    8. '#a' → logprob: -20.500003814697266
    9. ',a' → logprob: -20.875003814697266
    10. ''a' → logprob: -21.375003814697266

Token 267: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009008529596030712
    2. ',b' → logprob: -5.384008407592773
    3. '-' → logprob: -5.634008407592773
    4. ' ,' → logprob: -7.259008407592773
    5. ' -' → logprob: -9.634008407592773
    6. ',
' → logprob: -11.259008407592773
    7. 'b' → logprob: -12.259008407592773
    8. '-,' → logprob: -12.634008407592773
    9. ',

' → logprob: -12.759008407592773
    10. ')' → logprob: -12.759008407592773

Token 268: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.01815052703022957
    2. ' b' → logprob: -4.018150329589844
    3. ')b' → logprob: -14.268150329589844
    4. ')' → logprob: -17.518150329589844
    5. '	b' → logprob: -19.018150329589844
    6. ' ' → logprob: -19.018150329589844
    7. '<|end|>' → logprob: -19.768150329589844
    8. ' 
' → logprob: -20.018150329589844
    9. '    ' → logprob: -20.018150329589844
    10. ',b' → logprob: -20.018150329589844

Token 269: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.018228493630886078
    2. ')' → logprob: -4.018228530883789
    3. '))
' → logprob: -9.518228530883789
    4. ')
' → logprob: -13.268228530883789
    5. '),' → logprob: -13.268228530883789
    6. ')))' → logprob: -14.768228530883789
    7. '))

' → logprob: -15.268228530883789
    8. ' ))' → logprob: -15.518228530883789
    9. '       ' → logprob: -15.893228530883789
    10. '   ' → logprob: -16.01822853088379

Token 270: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3681197166442871
    2. '
' → logprob: -1.243119716644287
    3. '   ' → logprob: -5.118119716644287
    4. '        
' → logprob: -5.493119716644287
    5. 'message' → logprob: -5.868119716644287
    6. '#' → logprob: -5.993119716644287
    7. 'decoded' → logprob: -6.993119716644287
    8. '    
' → logprob: -7.243119716644287
    9. '```' → logprob: -7.743119716644287
    10. 's' → logprob: -7.993119716644287

Token 271: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.2804984152317047
    2. '       ' → logprob: -1.5304983854293823
    3. 'for' → logprob: -4.530498504638672
    4. 'decoded' → logprob: -5.030498504638672
    5. 'message' → logprob: -5.780498504638672
    6. 'diff' → logprob: -6.280498504638672
    7. '   ' → logprob: -6.780498504638672
    8. 'result' → logprob: -6.905498504638672
    9. '
' → logprob: -7.155498504638672
    10. '```' → logprob: -8.155498504638672

Token 272: ' Pour' (ID: 13931)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.0203490499407053
    2. 'for' → logprob: -4.020349025726318
    3. 'message' → logprob: -7.020349025726318
    4. '
' → logprob: -7.895349025726318
    5. '       ' → logprob: -8.520349502563477
    6. 're' → logprob: -9.645349502563477
    7. 'decoded' → logprob: -9.645349502563477
    8. '   ' → logprob: -9.770349502563477
    9. 'reverse' → logprob: -9.770349502563477
    10. 'original' → logprob: -9.770349502563477

Token 273: ' dé' (ID: 2393)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5403940677642822
    2. 'i' → logprob: -0.9153940677642822
    3. ' pos' → logprob: -5.165393829345703
    4. 'pos' → logprob: -6.665393829345703
    5. ' invers' → logprob: -6.665393829345703
    6. ' _' → logprob: -6.915393829345703
    7. ' appliquer' → logprob: -6.915393829345703
    8. 're' → logprob: -7.040393829345703
    9. '_' → logprob: -7.165393829345703
    10. '#' → logprob: -7.415393829345703

Token 274: 'ch' (ID: 332)
  Prédit: 'coder'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coder' → logprob: -0.4642915427684784
    2. 'ch' → logprob: -1.8392915725708008
    3. '#' → logprob: -2.839291572570801
    4. 'cr' → logprob: -2.964291572570801
    5. 'crypt' → logprob: -2.964291572570801
    6. 'caler' → logprob: -4.339291572570801
    7. '   ' → logprob: -4.589291572570801
    8. 'for' → logprob: -5.214291572570801
    9. 'cipher' → logprob: -5.464291572570801
    10. 'placer' → logprob: -5.589291572570801

Token 275: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.19075144827365875
    2. 'iffer' → logprob: -2.440751552581787
    3. '   ' → logprob: -2.815751552581787
    4. '```' → logprob: -4.190751552581787
    5. '       ' → logprob: -6.565751552581787
    6. 'i' → logprob: -6.815751552581787
    7. 'ifer' → logprob: -7.065751552581787
    8. '#' → logprob: -7.190751552581787
    9. 'ifter' → logprob: -7.315751552581787
    10. '_' → logprob: -7.440751552581787

Token 276: 'fr' (ID: 1739)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02201058156788349
    2. '```' → logprob: -5.522010803222656
    3. 'fr' → logprob: -6.022010803222656
    4. 'a' → logprob: -6.272010803222656
    5. '   ' → logprob: -6.272010803222656
    6. 'r' → logprob: -6.397010803222656
    7. 'errer' → logprob: -6.397010803222656
    8. '"' → logprob: -6.647010803222656
    9. 'e' → logprob: -7.147010803222656
    10. '
' → logprob: -7.397010803222656

Token 277: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.13244368135929108
    2. 'rer' → logprob: -2.13244366645813
    3. 'fr' → logprob: -6.257443904876709
    4. 'irer' → logprob: -6.882443904876709
    5. 'fer' → logprob: -7.132443904876709
    6. 'errer' → logprob: -8.00744342803955
    7. 'r' → logprob: -8.50744342803955
    8. '   ' → logprob: -8.50744342803955
    9. 'ir' → logprob: -8.50744342803955
    10. 'ter' → logprob: -8.50744342803955

Token 278: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29845577478408813
    2. ',' → logprob: -1.4234557151794434
    3. '#' → logprob: -4.423455715179443
    4. '   ' → logprob: -6.673455715179443
    5. 'inverse' → logprob: -7.173455715179443
    6. 'reverse' → logprob: -7.298455715179443
    7. ':' → logprob: -8.048456192016602
    8. 'for' → logprob: -8.298456192016602
    9. '        
' → logprob: -8.298456192016602
    10. ')' → logprob: -8.298456192016602

Token 279: ' il' (ID: 1793)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.30075088143348694
    2. '       ' → logprob: -1.4257508516311646
    3. 'for' → logprob: -5.425750732421875
    4. 'on' → logprob: -5.550750732421875
    5. ' on' → logprob: -5.800750732421875
    6. ' #' → logprob: -5.925750732421875
    7. 'we' → logprob: -6.050750732421875
    8. 'swap' → logprob: -7.425750732421875
    9. 'reverse' → logprob: -7.550750732421875
    10. ' for' → logprob: -7.550750732421875

Token 280: ' faut' (ID: 17821)
  Prédit: ' faut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' faut' → logprob: -0.33086714148521423
    2. 'f' → logprob: -1.3308671712875366
    3. ' faudra' → logprob: -4.330867290496826
    4. ' faudrait' → logprob: -6.205867290496826
    5. 'fa' → logprob: -6.455867290496826
    6. 's' → logprob: -7.830867290496826
    7. '#' → logprob: -8.705866813659668
    8. '   ' → logprob: -10.080866813659668
    9. ' f' → logprob: -10.455866813659668
    10. ' convient' → logprob: -11.080866813659668

Token 281: ' appliquer' (ID: 172872)
  Prédit: ' invers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' invers' → logprob: -0.8815537095069885
    2. 'ap' → logprob: -2.3815536499023438
    3. 're' → logprob: -2.5065536499023438
    4. ' appliquer' → logprob: -2.5065536499023438
    5. 'inverse' → logprob: -2.5065536499023438
    6. 'faire' → logprob: -2.6315536499023438
    7. 'reverse' → logprob: -2.7565536499023438
    8. 'in' → logprob: -3.6315536499023438
    9. ' refaire' → logprob: -4.506553649902344
    10. 'invert' → logprob: -4.506553649902344

Token 282: ' l' (ID: 305)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.22935743629932404
    2. ' les' → logprob: -1.6043574810028076
    3. '#' → logprob: -6.3543572425842285
    4. 'the' → logprob: -6.7293572425842285
    5. ' the' → logprob: -7.4793572425842285
    6. ' swaps' → logprob: -9.604357719421387
    7. '   ' → logprob: -9.979357719421387
    8. 'le' → logprob: -10.479357719421387
    9. 'swap' → logprob: -10.479357719421387
    10. ' ' → logprob: -10.479357719421387

Token 283: ''in' (ID: 17942)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.32069286704063416
    2. 'e' → logprob: -1.4456928968429565
    3. 'a' → logprob: -3.445692777633667
    4. ' swaps' → logprob: -6.070693016052246
    5. ' inverse' → logprob: -6.820693016052246
    6. 'inverse' → logprob: -7.070693016052246
    7. 'les' → logprob: -7.320693016052246
    8. 's' → logprob: -7.320693016052246
    9. ' es' → logprob: -8.070693016052246
    10. ' les' → logprob: -8.195693016052246

Token 284: 'verse' (ID: 7093)
  Prédit: 'verse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'verse' → logprob: -0.005562432575970888
    2. 'versed' → logprob: -5.8805623054504395
    3. 'vers' → logprob: -6.1305623054504395
    4. 'verted' → logprob: -8.130562782287598
    5. 'reverse' → logprob: -9.255562782287598
    6. '#' → logprob: -10.505562782287598
    7. 're' → logprob: -10.505562782287598
    8. 'versions' → logprob: -11.130562782287598
    9. 'range' → logprob: -11.130562782287598
    10. '[::-' → logprob: -11.130562782287598

Token 285: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.038602620363235474
    2. 'des' → logprob: -3.788602590560913
    3. ' swaps' → logprob: -5.413602828979492
    4. '   ' → logprob: -5.538602828979492
    5. '       ' → logprob: -5.788602828979492
    6. '#' → logprob: -6.538602828979492
    7. 'sw' → logprob: -7.413602828979492
    8. ' de' → logprob: -7.663602828979492
    9. ' for' → logprob: -8.413602828979492
    10. ' #' → logprob: -8.538602828979492

Token 286: ' opérations' (ID: 102793)
  Prédit: 'sw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sw' → logprob: -0.0005603004829026759
    2. ' swaps' → logprob: -8.000560760498047
    3. 're' → logprob: -9.125560760498047
    4. 'swap' → logprob: -9.250560760498047
    5. ' sw' → logprob: -12.250560760498047
    6. '   ' → logprob: -13.000560760498047
    7. '	sw' → logprob: -13.000560760498047
    8. '(sw' → logprob: -13.125560760498047
    9. '[::-' → logprob: -13.500560760498047
    10. 'range' → logprob: -13.750560760498047

Token 287: ' dans' (ID: 2671)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06145079806447029
    2. ' de' → logprob: -3.561450719833374
    3. ' dans' → logprob: -4.686450958251953
    4. ' for' → logprob: -5.436450958251953
    5. ' swaps' → logprob: -5.811450958251953
    6. ',' → logprob: -6.061450958251953
    7. 'for' → logprob: -6.061450958251953
    8. 'de' → logprob: -6.186450958251953
    9. ' pour' → logprob: -6.311450958251953
    10. 'swap' → logprob: -6.811450958251953

Token 288: ' l' (ID: 305)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 're' → logprob: -0.07385054975748062
    2. 'reverse' → logprob: -2.823850631713867
    3. ' reversed' → logprob: -4.698850631713867
    4. ' reverse' → logprob: -6.073850631713867
    5. 'sw' → logprob: -8.698850631713867
    6. 'ré' → logprob: -9.448850631713867
    7. '[::-' → logprob: -9.823850631713867
    8. 'rev' → logprob: -10.073850631713867
    9. '   ' → logprob: -11.198850631713867
    10. '.reverse' → logprob: -11.573850631713867

Token 289: ''ordre' (ID: 124753)
  Prédit: ''ordre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ordre' → logprob: -0.042029473930597305
    2. 'ordre' → logprob: -4.29202938079834
    3. 'reverse' → logprob: -4.66702938079834
    4. '[::-' → logprob: -5.29202938079834
    5. '’ordre' → logprob: -5.91702938079834
    6. 'a' → logprob: -5.91702938079834
    7. '_reverse' → logprob: -5.91702938079834
    8. 'e' → logprob: -6.29202938079834
    9. ' reverse' → logprob: -6.41702938079834
    10. '(reverse' → logprob: -8.91702938079834

Token 290: ' inverse' (ID: 53743)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.542549729347229
    2. ' inverse' → logprob: -1.292549729347229
    3. 'inverse' → logprob: -3.1675496101379395
    4. ' reverse' → logprob: -3.9175496101379395
    5. '[::-' → logprob: -4.0425496101379395
    6. ' invers' → logprob: -4.5425496101379395
    7. ' des' → logprob: -4.6675496101379395
    8. 'reverse' → logprob: -4.6675496101379395
    9. ' for' → logprob: -4.7925496101379395
    10. 're' → logprob: -4.7925496101379395

Token 291: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0019581327214837074
    2. ' for' → logprob: -7.37695837020874
    3. '.' → logprob: -7.75195837020874
    4. ',' → logprob: -7.75195837020874
    5. 'for' → logprob: -8.876957893371582
    6. '
' → logprob: -9.126957893371582
    7. '        
' → logprob: -9.501957893371582
    8. ':' → logprob: -10.751957893371582
    9. '   ' → logprob: -11.001957893371582
    10. ' (' → logprob: -11.001957893371582

Token 292: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010269022546708584
    2. ' for' → logprob: -4.7602691650390625
    3. 'for' → logprob: -6.7602691650390625
    4. '
' → logprob: -8.510269165039062
    5. '   ' → logprob: -8.760269165039062
    6. '        
' → logprob: -10.385269165039062
    7. ',' → logprob: -10.760269165039062
    8. '<|end|>' → logprob: -11.135269165039062
    9. ' swaps' → logprob: -11.135269165039062
    10. '[::-' → logprob: -11.635269165039062

Token 293: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2868382930755615
    2. '       ' → logprob: -1.9118382930755615
    3. 'sw' → logprob: -2.6618382930755615
    4. ' for' → logprob: -3.7868382930755615
    5. ' swaps' → logprob: -5.536838531494141
    6. 'swap' → logprob: -6.036838531494141
    7. '   ' → logprob: -6.286838531494141
    8. '
' → logprob: -8.16183853149414
    9. '	sw' → logprob: -9.41183853149414
    10. '        
' → logprob: -9.66183853149414

Token 294: ' Puis' (ID: 87717)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.294956773519516
    2. '       ' → logprob: -1.6699568033218384
    3. 'sw' → logprob: -3.044956684112549
    4. ' for' → logprob: -4.169956684112549
    5. '   ' → logprob: -6.544956684112549
    6. ' swaps' → logprob: -6.794956684112549
    7. 'swap' → logprob: -7.294956684112549
    8. 'reverse' → logprob: -8.294957160949707
    9. 're' → logprob: -8.294957160949707
    10. 'rev' → logprob: -9.169957160949707

Token 295: 'qu' (ID: 351)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04258676618337631
    2. '   ' → logprob: -4.542586803436279
    3. 'for' → logprob: -4.542586803436279
    4. 'reverse' → logprob: -4.667586803436279
    5. ' for' → logprob: -5.417586803436279
    6. ' reverse' → logprob: -6.292586803436279
    7. 're' → logprob: -6.917586803436279
    8. 'inverse' → logprob: -7.292586803436279
    9. '#' → logprob: -7.667586803436279
    10. ',' → logprob: -7.792586803436279

Token 296: ''en' (ID: 16740)
  Prédit: ''on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''on' → logprob: -0.9654371738433838
    2. 'que' → logprob: -1.0904371738433838
    3. ''il' → logprob: -2.215437173843384
    4. 'on' → logprob: -3.090437173843384
    5. ''elles' → logprob: -3.215437173843384
    6. 'qu' → logprob: -3.840437173843384
    7. 'les' → logprob: -3.965437173843384
    8. ' on' → logprob: -4.090436935424805
    9. ' les' → logprob: -5.215436935424805
    10. 'il' → logprob: -5.840436935424805

Token 297: ' chiff' (ID: 54892)
  Prédit: 'fait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fait' → logprob: -0.9419546127319336
    2. 'crypt' → logprob: -1.8169546127319336
    3. 'python' → logprob: -2.0669546127319336
    4. 'faite' → logprob: -2.3169546127319336
    5. 'suite' → logprob: -2.5669546127319336
    6. 'code' → logprob: -4.441954612731934
    7. 'dé' → logprob: -4.441954612731934
    8. 'fin' → logprob: -4.941954612731934
    9. 'Python' → logprob: -4.941954612731934
    10. 'nature' → logprob: -5.191954612731934

Token 298: 'rement' (ID: 66132)
  Prédit: 'érant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'érant' → logprob: -0.8935521841049194
    2. 'ant' → logprob: -1.1435521841049194
    3. 'ère' → logprob: -2.268552303314209
    4. 'er' → logprob: -3.143552303314209
    5. 'èrent' → logprob: -3.268552303314209
    6. 'érent' → logprob: -3.893552303314209
    7. 'é' → logprob: -4.518552303314209
    8. 'rant' → logprob: -4.518552303314209
    9. 'èrement' → logprob: -4.893552303314209
    10. 'èr' → logprob: -4.893552303314209

Token 299: ' on' (ID: 402)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.36716222763061523
    2. ' les' → logprob: -1.7421622276306152
    3. 'les' → logprob: -2.3671622276306152
    4. 'le' → logprob: -4.492162227630615
    5. ' on' → logprob: -4.617162227630615
    6. ' le' → logprob: -5.117162227630615
    7. 'on' → logprob: -5.992162227630615
    8. ' the' → logprob: -6.492162227630615
    9. ' chaque' → logprob: -6.492162227630615
    10. 'l' → logprob: -6.617162227630615

Token 300: ' swap' (ID: 25489)
  Prédit: 'swap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'swap' → logprob: -0.7524665594100952
    2. 'a' → logprob: -2.1274666786193848
    3. 'ap' → logprob: -2.1274666786193848
    4. 'sw' → logprob: -2.5024666786193848
    5. 'avait' → logprob: -2.8774666786193848
    6. 'inverse' → logprob: -2.8774666786193848
    7. ' swap' → logprob: -4.127466678619385
    8. 'éch' → logprob: -4.752466678619385
    9. ' applique' → logprob: -4.752466678619385
    10. ' échange' → logprob: -4.877466678619385

Token 301: ' et' (ID: 859)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.723816156387329
    2. 's' → logprob: -1.848816156387329
    3. ',' → logprob: -2.598816156387329
    4. '()' → logprob: -2.598816156387329
    5. 'ped' → logprob: -2.598816156387329
    6. '(a' → logprob: -3.348816156387329
    7. '   ' → logprob: -3.723816156387329
    8. 'des' → logprob: -3.723816156387329
    9. 'a' → logprob: -3.848816156387329
    10. 'ait' → logprob: -3.973816156387329

Token 302: ' ensuite' (ID: 39713)
  Prédit: 'swap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'swap' → logprob: -0.8601610064506531
    2. ' ensuite' → logprob: -2.610161066055298
    3. 'def' → logprob: -2.985161066055298
    4. 'ens' → logprob: -3.110161066055298
    5. 'reverse' → logprob: -3.110161066055298
    6. 'inverse' → logprob: -3.735161066055298
    7. ' swap' → logprob: -3.860161066055298
    8. 'on' → logprob: -3.860161066055298
    9. ' on' → logprob: -3.985161066055298
    10. ' then' → logprob: -4.110160827636719

Token 303: ' on' (ID: 402)
  Prédit: 'shift'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shift' → logprob: -0.3079089820384979
    2. 'on' → logprob: -2.3079090118408203
    3. ' on' → logprob: -2.4329090118408203
    4. ' shift' → logprob: -2.8079090118408203
    5. 'qu' → logprob: -5.80790901184082
    6. 'de' → logprob: -6.05790901184082
    7. 'd' → logprob: -6.18290901184082
    8. '   ' → logprob: -6.55790901184082
    9. 'apply' → logprob: -6.68290901184082
    10. 'dé' → logprob: -7.43290901184082

Token 304: ' rec' (ID: 1369)
  Prédit: 'shift'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'shift' → logprob: -0.09993595629930496
    2. ' shift' → logprob: -3.474936008453369
    3. 'swap' → logprob: -3.599936008453369
    4. 'apply' → logprob: -4.474936008453369
    5. 'reverse' → logprob: -5.974936008453369
    6. 'ap' → logprob: -5.974936008453369
    7. 'de' → logprob: -6.349936008453369
    8. 'ch' → logprob: -6.349936008453369
    9. 'increment' → logprob: -6.349936008453369
    10. 'sh' → logprob: -6.599936008453369

Token 305: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.5759307742118835
    2. 'uler' → logprob: -1.0759308338165283
    3. 'ul' → logprob: -2.4509308338165283
    4. 'ula' → logprob: -5.575930595397949
    5. 'ular' → logprob: -7.263430595397949
    6. 'ulen' → logprob: -7.450930595397949
    7. 'ulent' → logprob: -7.700930595397949
    8. 'ulo' → logprob: -7.888430595397949
    9. 'ulé' → logprob: -7.888430595397949
    10. 'ulers' → logprob: -8.07593059539795

Token 306: ' les' (ID: 1341)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5150343775749207
    2. ',' → logprob: -1.7650344371795654
    3. ' de' → logprob: -2.0150344371795654
    4. 'diff' → logprob: -4.015034198760986
    5. '   ' → logprob: -4.140034198760986
    6. ' ,' → logprob: -4.390034198760986
    7. '<|end|>' → logprob: -4.890034198760986
    8. ' les' → logprob: -5.390034198760986
    9. '	' → logprob: -5.515034198760986
    10. 'de' → logprob: -5.765034198760986

Token 307: ' lettres' (ID: 101234)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.07507743686437607
    2. ' lettres' → logprob: -3.700077533721924
    3. ' caractères' → logprob: -4.075077533721924
    4. 'lett' → logprob: -4.200077533721924
    5. 'letters' → logprob: -4.700077533721924
    6. ' letters' → logprob: -6.075077533721924
    7. 'chars' → logprob: -7.075077533721924
    8. ' caract' → logprob: -7.325077533721924
    9. ' car' → logprob: -7.450077533721924
    10. 'diff' → logprob: -7.575077533721924

Token 308: ' du' (ID: 1462)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011922130361199379
    2. ',' → logprob: -4.511922359466553
    3. '        
' → logprob: -8.386921882629395
    4. '
' → logprob: -8.761921882629395
    5. '   ' → logprob: -9.011921882629395
    6. ' for' → logprob: -9.136921882629395
    7. 'for' → logprob: -9.511921882629395
    8. ',
' → logprob: -9.886921882629395
    9. '<|end|>' → logprob: -10.511921882629395
    10. ' ,' → logprob: -11.136921882629395

Token 309: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.33159711956977844
    2. '1' → logprob: -1.706597089767456
    3. 'message' → logprob: -2.581597089767456
    4. ' message' → logprob: -4.331597328186035
    5. 'alphabet' → logprob: -5.706597328186035
    6. ' diff' → logprob: -6.081597328186035
    7. ' ' → logprob: -6.956597328186035
    8. 'swap' → logprob: -7.706597328186035
    9. '2' → logprob: -7.831597328186035
    10. 'alph' → logprob: -8.081597328186035

Token 310: ',
' (ID: 412)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5998252630233765
    2. ',' → logprob: -0.9748252630233765
    3. ' ,' → logprob: -4.099825382232666
    4. '   ' → logprob: -4.349825382232666
    5. 's' → logprob: -4.849825382232666
    6. '=' → logprob: -5.099825382232666
    7. '<|end|>' → logprob: -5.349825382232666
    8. ' =' → logprob: -5.599825382232666
    9. '<|end|>' → logprob: -5.849825382232666
    10. ',
' → logprob: -5.974825382232666

Token 311: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10076717287302017
    2. '#' → logprob: -2.350767135620117
    3. '   ' → logprob: -7.975767135620117
    4. ' #' → logprob: -9.725767135620117
    5. 'diff' → logprob: -9.850767135620117
    6. '```' → logprob: -10.850767135620117
    7. '        
' → logprob: -11.350767135620117
    8. '	' → logprob: -11.475767135620117
    9. '<|end|>' → logprob: -11.600767135620117
    10. '           ' → logprob: -11.725767135620117

Token 312: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02103099226951599
    2. '#' (adapté à ' #') → logprob: -3.896030902862549
    3. '   ' → logprob: -8.646031379699707
    4. ' on' → logprob: -8.771031379699707
    5. ' #' → logprob: -9.021031379699707
    6. '	' → logprob: -11.521031379699707
    7. 'on' → logprob: -12.021031379699707
    8. '           ' → logprob: -12.146031379699707
    9. ' ' → logprob: -12.896031379699707
    10. '	   ' → logprob: -13.271031379699707

Token 313: ' pour' (ID: 1930)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3729684054851532
    2. '       ' → logprob: -1.6229684352874756
    3. ' #' → logprob: -2.2479684352874756
    4. 'diff' → logprob: -5.6229681968688965
    5. ' on' → logprob: -6.4979681968688965
    6. ' for' → logprob: -6.9979681968688965
    7. ' diff' → logprob: -7.9979681968688965
    8. '   ' → logprob: -8.122968673706055
    9. 'inverse' → logprob: -8.122968673706055
    10. 'reverse' → logprob: -8.247968673706055

Token 314: ' dé' (ID: 2393)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.9893507957458496
    2. 'd' → logprob: -1.2393507957458496
    3. 'i' → logprob: -1.8643507957458496
    4. ' dé' → logprob: -2.2393507957458496
    5. ' d' → logprob: -4.36435079574585
    6. 'dé' → logprob: -4.48935079574585
    7. 'decrypt' → logprob: -4.61435079574585
    8. ' dech' → logprob: -4.86435079574585
    9. '_d' → logprob: -5.36435079574585
    10. ' _' → logprob: -5.36435079574585

Token 315: 'ch' (ID: 332)
  Prédit: 'ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.0039037384558469057
    2. '   ' → logprob: -6.503903865814209
    3. '```' → logprob: -6.628903865814209
    4. 'chir' → logprob: -9.00390338897705
    5. '	ch' → logprob: -9.37890338897705
    6. 'cr' → logprob: -9.37890338897705
    7. '``' → logprob: -9.50390338897705
    8. 'crypt' → logprob: -9.62890338897705
    9. '  ' → logprob: -10.12890338897705
    10. '    ' → logprob: -10.12890338897705

Token 316: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.004813034553080797
    2. 'iffer' → logprob: -6.254813194274902
    3. 'ifre' → logprob: -7.629813194274902
    4. 'ifer' → logprob: -7.629813194274902
    5. 'irer' → logprob: -7.629813194274902
    6. 'ic' → logprob: -8.504813194274902
    7. 'icher' → logprob: -8.629813194274902
    8. 'f' → logprob: -8.754813194274902
    9. ' if' → logprob: -8.879813194274902
    10. 'ifr' → logprob: -8.879813194274902

Token 317: 'fr' (ID: 1739)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.014416875317692757
    2. 'fr' → logprob: -5.639416694641113
    3. 'ifr' → logprob: -5.764416694641113
    4. 'r' → logprob: -6.639416694641113
    5. 'er' → logprob: -6.764416694641113
    6. '```' → logprob: -7.014416694641113
    7. 'errer' → logprob: -7.139416694641113
    8. 'f' → logprob: -7.514416694641113
    9. 'cr' → logprob: -7.764416694641113
    10. 'iffer' → logprob: -8.014416694641113

Token 318: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.014225799590349197
    2. 'rer' → logprob: -4.389225959777832
    3. 'r' → logprob: -7.639225959777832
    4. 'cer' → logprob: -8.389225959777832
    5. 'cr' → logprob: -8.639225959777832
    6. '```' → logprob: -9.014225959777832
    7. 'uer' → logprob: -9.264225959777832
    8. 'e' → logprob: -9.514225959777832
    9. 'erer' → logprob: -9.514225959777832
    10. 'ver' → logprob: -10.139225959777832

Token 319: ' on' (ID: 402)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.058193132281303406
    2. ' on' → logprob: -3.3081932067871094
    3. ' ,' → logprob: -4.433193206787109
    4. '       ' → logprob: -6.058193206787109
    5. ' for' → logprob: -6.433193206787109
    6. 'on' → logprob: -7.183193206787109
    7. '   ' → logprob: -7.933193206787109
    8. ' reverse' → logprob: -8.30819320678711
    9. ' il' → logprob: -8.43319320678711
    10. ' we' → logprob: -8.43319320678711

Token 320: ' avance' (ID: 81376)
  Prédit: ' doit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' doit' → logprob: -0.6316223740577698
    2. 'do' → logprob: -1.381622314453125
    3. ' devra' → logprob: -2.506622314453125
    4. 'apply' → logprob: -3.631622314453125
    5. 'reverse' → logprob: -3.881622314453125
    6. 'for' → logprob: -4.256622314453125
    7. 'should' → logprob: -4.256622314453125
    8. 'ap' → logprob: -4.631622314453125
    9. ' reverse' → logprob: -4.756622314453125
    10. ' must' → logprob: -5.381622314453125

Token 321: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.4960067570209503
    2. '       ' → logprob: -1.371006727218628
    3. ' de' → logprob: -2.371006727218628
    4. ' le' → logprob: -4.746006965637207
    5. 'les' → logprob: -4.746006965637207
    6. '        ' → logprob: -5.496006965637207
    7. ' d' → logprob: -5.496006965637207
    8. ' chaque' → logprob: -5.871006965637207
    9. '           ' → logprob: -6.121006965637207
    10. '   ' → logprob: -6.371006965637207

Token 322: ' lettres' (ID: 101234)
  Prédit: ' lettres'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lettres' → logprob: -0.8329249620437622
    2. 'car' → logprob: -1.2079249620437622
    3. 'lett' → logprob: -1.4579249620437622
    4. ' caractères' → logprob: -4.082924842834473
    5. 'letters' → logprob: -4.832924842834473
    6. ' letters' → logprob: -5.707924842834473
    7. 'l' → logprob: -5.957924842834473
    8. 'diff' → logprob: -6.707924842834473
    9. ' car' → logprob: -7.832924842834473
    10. ' caracteres' → logprob: -8.332924842834473

Token 323: ' du' (ID: 1462)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023626042529940605
    2. ' de' → logprob: -4.52362585067749
    3. '   ' → logprob: -5.77362585067749
    4. ',' → logprob: -5.89862585067749
    5. '        ' → logprob: -6.64862585067749
    6. '<|end|>' → logprob: -7.27362585067749
    7. 'def' → logprob: -7.39862585067749
    8. '    ' → logprob: -7.52362585067749
    9. '           ' → logprob: -7.64862585067749
    10. 'de' → logprob: -7.64862585067749

Token 324: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.04069340601563454
    2. ' diff' → logprob: -3.415693521499634
    3. '26' → logprob: -5.540693283081055
    4. '(diff' → logprob: -7.290693283081055
    5. 'swap' → logprob: -7.540693283081055
    6. ' ' → logprob: -7.790693283081055
    7. 'message' → logprob: -7.915693283081055
    8. ' message' → logprob: -8.415693283081055
    9. 'sw' → logprob: -9.165693283081055
    10. '25' → logprob: -9.165693283081055

Token 325: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011729990132153034
    2. ',' → logprob: -4.761730194091797
    3. '        
' → logprob: -7.136730194091797
    4. '
' → logprob: -7.636730194091797
    5. '<|end|>' → logprob: -7.761730194091797
    6. '<|end|>' → logprob: -8.761730194091797
    7. '   ' → logprob: -8.886730194091797
    8. '.' → logprob: -8.886730194091797
    9. 'def' → logprob: -9.011730194091797
    10. '        ' → logprob: -9.386730194091797

Token 326: 'le' (ID: 282)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.28382617235183716
    2. '       ' → logprob: -2.2838261127471924
    3. ' )' → logprob: -2.4088261127471924
    4. 'def' → logprob: -4.1588263511657715
    5. '),' → logprob: -4.9088263511657715
    6. 'diff' → logprob: -5.1588263511657715
    7. '        ' → logprob: -5.7838263511657715
    8. ' ' → logprob: -5.7838263511657715
    9. ',' → logprob: -6.2838263511657715
    10. '   ' → logprob: -6.6588263511657715

Token 327: ' «' (ID: 2415)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.37035995721817017
    2. 'N' → logprob: -2.4953598976135254
    3. 'i' → logprob: -3.2453598976135254
    4. '=' → logprob: -3.3703598976135254
    5. '26' → logprob: -3.6203598976135254
    6. ')' → logprob: -3.7453598976135254
    7. ' diff' → logprob: -4.120359897613525
    8. 'swap' → logprob: -4.870359897613525
    9. ' N' → logprob: -4.995359897613525
    10. ' for' → logprob: -5.370359897613525

Token 328: ' inverse' (ID: 53743)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.1416836529970169
    2. 'swap' → logprob: -2.891683578491211
    3. 'shift' → logprob: -4.266683578491211
    4. 'inverse' → logprob: -4.391683578491211
    5. ')' → logprob: -5.516683578491211
    6. 'a' → logprob: -5.766683578491211
    7. '26' → logprob: -5.891683578491211
    8. 'pos' → logprob: -6.016683578491211
    9. 'N' → logprob: -6.016683578491211
    10. 'i' → logprob: -6.016683578491211

Token 329: ' »' (ID: 4334)
  Prédit: ' »'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' »' → logprob: -0.2958666980266571
    2. ')' → logprob: -2.4208667278289795
    3. ' )' → logprob: -3.0458667278289795
    4. '»' → logprob: -3.0458667278289795
    5. '»)' → logprob: -3.1708667278289795
    6. ' de' → logprob: -4.2958664894104
    7. 'diff' → logprob: -5.4208664894104
    8. ' ' → logprob: -6.4208664894104
    9. ' ' → logprob: -6.4208664894104
    10. ' des' → logprob: -6.5458664894104

Token 330: ' du' (ID: 1462)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3958539664745331
    2. ' )' → logprob: -1.2708539962768555
    3. ' de' → logprob: -4.1458539962768555
    4. 'diff' → logprob: -4.7708539962768555
    5. ' diff' → logprob: -5.0208539962768555
    6. '),' → logprob: -5.8958539962768555
    7. ' des' → logprob: -6.1458539962768555
    8. ' ),' → logprob: -6.3958539962768555
    9. ' ' → logprob: -6.5208539962768555
    10. 'de' → logprob: -6.6458539962768555

Token 331: ' recul' (ID: 179913)
  Prédit: ' rec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rec' → logprob: -1.0543584823608398
    2. ' recul' → logprob: -1.0543584823608398
    3. 're' → logprob: -1.6793584823608398
    4. 'shift' → logprob: -3.05435848236084
    5. 'diff' → logprob: -3.92935848236084
    6. 'rec' → logprob: -4.05435848236084
    7. ')' → logprob: -5.17935848236084
    8. 'de' → logprob: -5.30435848236084
    9. ' shift' → logprob: -5.42935848236084
    10. 'dé' → logprob: -5.67935848236084

Token 332: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.34609973430633545
    2. ' )' → logprob: -1.3460997343063354
    3. '),' → logprob: -4.096099853515625
    4. ' ),' → logprob: -4.846099853515625
    5. ' )
' → logprob: -6.971099853515625
    6. 'diff' → logprob: -7.096099853515625
    7. '   ' → logprob: -7.221099853515625
    8. ' ' → logprob: -7.221099853515625
    9. ' ' → logprob: -7.346099853515625
    10. 'e' → logprob: -7.346099853515625

Token 333: ' puis' (ID: 18766)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04264422878623009
    2. ' puis' → logprob: -3.5426442623138428
    3. ' et' → logprob: -6.042644023895264
    4. '   ' → logprob: -6.417644023895264
    5. ' then' → logprob: -6.542644023895264
    6. 'et' → logprob: -6.792644023895264
    7. '        
' → logprob: -6.792644023895264
    8. ' and' → logprob: -6.917644023895264
    9. ' for' → logprob: -7.417644023895264
    10. 'diff' → logprob: -7.792644023895264

Token 334: ' swap' (ID: 25489)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7938756942749023
    2. 'on' → logprob: -1.0438756942749023
    3. ' on' → logprob: -2.1688756942749023
    4. '#' → logprob: -2.7938756942749023
    5. 'ap' → logprob: -4.418875694274902
    6. 'for' → logprob: -6.418875694274902
    7. '   ' → logprob: -6.543875694274902
    8. '           ' → logprob: -7.418875694274902
    9. 'swap' → logprob: -7.418875694274902
    10. ' applies' → logprob: -7.543875694274902

Token 335: ' à' (ID: 1221)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28582778573036194
    2. 's' → logprob: -2.160827875137329
    3. '(' → logprob: -3.535827875137329
    4. '   ' → logprob: -3.785827875137329
    5. ' (' → logprob: -4.03582763671875
    6. 'def' → logprob: -4.41082763671875
    7. ',' → logprob: -4.53582763671875
    8. ')' → logprob: -5.16082763671875
    9. ' =' → logprob: -5.66082763671875
    10. ' for' → logprob: -5.78582763671875

Token 336: ' nouveau' (ID: 23184)
  Prédit: 'reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reverse' → logprob: -0.6335412859916687
    2. ' l' → logprob: -2.0085413455963135
    3. 'l' → logprob: -2.6335413455963135
    4. 'b' → logprob: -2.6335413455963135
    5. 're' → logprob: -3.1335413455963135
    6. ' reverse' → logprob: -3.3835413455963135
    7. ' b' → logprob: -3.7585413455963135
    8. 'inverse' → logprob: -4.383541107177734
    9. 'rev' → logprob: -4.508541107177734
    10. ' nouveau' → logprob: -4.633541107177734

Token 337: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018599137663841248
    2. '
' → logprob: -4.268599033355713
    3. '        
' → logprob: -5.643599033355713
    4. '

' → logprob: -8.268599510192871
    5. ',' → logprob: -8.268599510192871
    6. '        

' → logprob: -10.268599510192871
    7. '   ' → logprob: -10.393599510192871
    8. '
        
' → logprob: -10.518599510192871
    9. '       
' → logprob: -10.643599510192871
    10. '        ' → logprob: -10.768599510192871

Token 338: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24633650481700897
    2. '
' → logprob: -1.6213364601135254
    3. '        
' → logprob: -4.621336460113525
    4. 'diff' → logprob: -5.371336460113525
    5. 'def' → logprob: -6.996336460113525
    6. 'decrypt' → logprob: -7.246336460113525
    7. 'decoded' → logprob: -7.371336460113525
    8. 'for' → logprob: -7.746336460113525
    9. '    
' → logprob: -7.746336460113525
    10. '   ' → logprob: -7.871336460113525

Token 339: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4117482006549835
    2. 'for' → logprob: -1.5367481708526611
    3. 'diff' → logprob: -2.661748170852661
    4. 'def' → logprob: -3.661748170852661
    5. 'decoded' → logprob: -4.53674840927124
    6. 'result' → logprob: -5.78674840927124
    7. '#' (adapté à ' #') → logprob: -6.16174840927124
    8. ' for' → logprob: -6.16174840927124
    9. '
' → logprob: -6.41174840927124
    10. 'de' → logprob: -6.53674840927124

Token 340: ' Ici' (ID: 145754)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.9448186159133911
    2. 'for' → logprob: -1.1948186159133911
    3. 'de' → logprob: -2.4448184967041016
    4. '#' → logprob: -2.5698184967041016
    5. 'result' → logprob: -3.0698184967041016
    6. 'def' → logprob: -3.1948184967041016
    7. 'decoded' → logprob: -3.9448184967041016
    8. ' decrypted' → logprob: -4.819818496704102
    9. 'res' → logprob: -5.194818496704102
    10. '   ' → logprob: -5.569818496704102

Token 341: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011684155091643333
    2. '
' → logprob: -5.636683940887451
    3. 'diff' → logprob: -6.386683940887451
    4. ',' → logprob: -6.886683940887451
    5. '   ' → logprob: -7.011683940887451
    6. '        
' → logprob: -7.136683940887451
    7. '#' → logprob: -7.386683940887451
    8. ' for' → logprob: -7.636683940887451
    9. 'for' → logprob: -8.01168441772461
    10. 'def' → logprob: -8.01168441772461

Token 342: ' on' (ID: 402)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1356353759765625
    2. ' for' → logprob: -1.2606353759765625
    3. '#' → logprob: -2.0106353759765625
    4. ' decrypted' → logprob: -2.6356353759765625
    5. 'diff' → logprob: -3.2606353759765625
    6. ' #' → logprob: -3.5106353759765625
    7. 'def' → logprob: -3.8856353759765625
    8. '       ' → logprob: -3.8856353759765625
    9. 'result' → logprob: -4.3856353759765625
    10. ' diff' → logprob: -5.0106353759765625

Token 343: ' va' (ID: 3423)
  Prédit: ' va'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' va' → logprob: -0.9233666658401489
    2. 'ap' → logprob: -2.2983665466308594
    3. 'dé' → logprob: -2.2983665466308594
    4. 'inverse' → logprob: -2.5483665466308594
    5. 'va' → logprob: -2.9233665466308594
    6. 're' → logprob: -3.0483665466308594
    7. 'for' → logprob: -3.1733665466308594
    8. ' applique' → logprob: -3.4233665466308594
    9. 'def' → logprob: -3.6733665466308594
    10. '#' → logprob: -4.173366546630859

Token 344: ' appliquer' (ID: 172872)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -1.7448221445083618
    2. ' appliquer' → logprob: -1.7448221445083618
    3. 'apply' → logprob: -2.1198220252990723
    4. 'reverse' → logprob: -2.2448220252990723
    5. 'for' → logprob: -2.2448220252990723
    6. 'def' → logprob: -2.3698220252990723
    7. ' reconstru' → logprob: -3.1198220252990723
    8. ' reverse' → logprob: -3.4948220252990723
    9. 'diff' → logprob: -3.9948220252990723
    10. ' apply' → logprob: -3.9948220252990723

Token 345: ' le' (ID: 505)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0431830883026123
    2. 'sw' → logprob: -1.6681830883026123
    3. 'the' → logprob: -2.0431830883026123
    4. ' the' → logprob: -2.1681830883026123
    5. 're' → logprob: -2.4181830883026123
    6. ' for' → logprob: -2.9181830883026123
    7. ' swaps' → logprob: -3.6681830883026123
    8. '   ' → logprob: -4.793183326721191
    9. ' les' → logprob: -4.918183326721191
    10. '```' → logprob: -5.668183326721191

Token 346: ' dé' (ID: 2393)
  Prédit: 'sw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sw' → logprob: -0.5975603461265564
    2. 'for' → logprob: -1.4725604057312012
    3. 're' → logprob: -2.222560405731201
    4. 'inverse' → logprob: -3.347560405731201
    5. 'diff' → logprob: -3.972560405731201
    6. ' swaps' → logprob: -4.222560405731201
    7. ' for' → logprob: -4.722560405731201
    8. 's' → logprob: -5.222560405731201
    9. 'reverse' → logprob: -5.347560405731201
    10. ' inverse' → logprob: -5.722560405731201

Token 347: 'ch' (ID: 332)
  Prédit: 'ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.11141956597566605
    2. '   ' → logprob: -3.486419677734375
    3. 'cal' → logprob: -3.486419677734375
    4. 'crypt' → logprob: -3.611419677734375
    5. 'cipher' → logprob: -4.861419677734375
    6. '       ' → logprob: -6.861419677734375
    7. '```' → logprob: -7.111419677734375
    8. 'cr' → logprob: -7.611419677734375
    9. '    ' → logprob: -7.611419677734375
    10. 'caler' → logprob: -7.611419677734375

Token 348: 'iff' (ID: 4443)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.18285755813121796
    2. 'iff' → logprob: -1.8078575134277344
    3. ' if' → logprob: -6.932857513427734
    4. '   ' → logprob: -6.932857513427734
    5. 'ifre' → logprob: -8.182857513427734
    6. 'iffer' → logprob: -8.557857513427734
    7. ' iff' → logprob: -9.182857513427734
    8. '#' → logprob: -9.307857513427734
    9. 'иф' → logprob: -9.682857513427734
    10. 'i' → logprob: -9.932857513427734

Token 349: 'rement' (ID: 66132)
  Prédit: 'rement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rement' → logprob: -0.03371750935912132
    2. 'r' → logprob: -3.533717393875122
    3. 'rage' → logprob: -6.783717632293701
    4. 'if' → logprob: -7.158717632293701
    5. 're' → logprob: -7.783717632293701
    6. 'riff' → logprob: -8.158717155456543
    7. 'er' → logprob: -8.283717155456543
    8. '```' → logprob: -9.033717155456543
    9. 'rif' → logprob: -9.158717155456543
    10. '   ' → logprob: -9.283717155456543

Token 350: ' en' (ID: 469)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -1.3671730756759644
    2. ' for' → logprob: -1.7421730756759644
    3. 'for' → logprob: -1.7421730756759644
    4. ' en' → logprob: -1.8671730756759644
    5. ' step' → logprob: -2.617173194885254
    6. 'en' → logprob: -3.367173194885254
    7. ' dans' → logprob: -4.117173194885254
    8. ' in' → logprob: -4.367173194885254
    9. ' diff' → logprob: -4.617173194885254
    10. '.' → logprob: -4.742173194885254

Token 351: ' part' (ID: 997)
  Prédit: 'reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reverse' → logprob: -0.7472060918807983
    2. 're' → logprob: -1.8722060918807983
    3. ' reverse' → logprob: -1.9972060918807983
    4. 'for' → logprob: -2.372206211090088
    5. ' sens' → logprob: -3.247206211090088
    6. 'range' → logprob: -3.622206211090088
    7. ' reversed' → logprob: -3.997206211090088
    8. ' range' → logprob: -4.247206211090088
    9. '_reverse' → logprob: -4.622206211090088
    10. 'rev' → logprob: -4.872206211090088

Token 352: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.11019734293222427
    2. 'ie' → logprob: -2.3601973056793213
    3. 'icipant' → logprob: -5.7351975440979
    4. 'out' → logprob: -6.6101975440979
    5. 'ir' → logprob: -6.7351975440979
    6. 'def' → logprob: -7.6101975440979
    7. 'enant' → logprob: -7.8601975440979
    8. 'i' → logprob: -7.8601975440979
    9. 'for' → logprob: -7.9851975440979
    10. 'ies' → logprob: -7.9851975440979

Token 353: ' du' (ID: 1462)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -1.1868679523468018
    2. 'from' → logprob: -1.5618679523468018
    3. '   ' → logprob: -1.8118679523468018
    4. ' de' → logprob: -2.1868679523468018
    5. 'du' → logprob: -2.8118679523468018
    6. '       ' → logprob: -3.3118679523468018
    7. ' du' → logprob: -3.4368679523468018
    8. ' des' → logprob: -3.5618679523468018
    9. 'des' → logprob: -3.5618679523468018
    10. ' from' → logprob: -4.811867713928223

Token 354: ' dernier' (ID: 27982)
  Prédit: 'message'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'message' → logprob: -0.13890524208545685
    2. 'len' → logprob: -2.2639052867889404
    3. ' message' → logprob: -4.138905048370361
    4. 'dern' → logprob: -5.638905048370361
    5. ')' → logprob: -6.638905048370361
    6. 'code' → logprob: -7.138905048370361
    7. 'swap' → logprob: -7.138905048370361
    8. '```' → logprob: -7.888905048370361
    9. 'm' → logprob: -8.26390552520752
    10. '#' → logprob: -8.26390552520752

Token 355: ' swap' (ID: 25489)
  Prédit: 'swap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'swap' → logprob: -0.06168988347053528
    2. ' swap' → logprob: -3.311689853668213
    3. 'diff' → logprob: -4.186689853668213
    4. 'sw' → logprob: -6.436689853668213
    5. 's' → logprob: -7.311689853668213
    6. 'car' → logprob: -7.311689853668213
    7. ' caractère' → logprob: -7.436689853668213
    8. 'indice' → logprob: -7.436689853668213
    9. 'message' → logprob: -7.811689853668213
    10. 'index' → logprob: -7.811689853668213

Token 356: ' vers' (ID: 3640)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.720977246761322
    2. 'for' → logprob: -1.4709773063659668
    3. '   ' → logprob: -2.345977306365967
    4. 'diff' → logprob: -2.845977306365967
    5. '       ' → logprob: -3.095977306365967
    6. 's' → logprob: -3.845977306365967
    7. ',' → logprob: -4.470977306365967
    8. ')' → logprob: -4.720977306365967
    9. 'from' → logprob: -4.845977306365967
    10. ' à' → logprob: -5.345977306365967

Token 357: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.04354897513985634
    2. ' le' → logprob: -3.543549060821533
    3. 'l' → logprob: -5.293549060821533
    4. '0' → logprob: -6.293549060821533
    5. 'la' → logprob: -6.418549060821533
    6. ' la' → logprob: -6.543549060821533
    7. ' ' → logprob: -6.668549060821533
    8. 's' → logprob: -7.293549060821533
    9. ' l' → logprob: -7.918549060821533
    10. '_le' → logprob: -8.043548583984375

Token 358: ' premier' (ID: 15506)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prem' → logprob: -0.5255914330482483
    2. ' premier' → logprob: -0.9005914330482483
    3. ' début' → logprob: -6.7755913734436035
    4. 'dé' → logprob: -7.2755913734436035
    5. '0' → logprob: -8.400591850280762
    6. 'd' → logprob: -9.525591850280762
    7. 'first' → logprob: -9.775591850280762
    8. '```' → logprob: -9.900591850280762
    9. '   ' → logprob: -10.025591850280762
    10. ' first' → logprob: -10.025591850280762

Token 359: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016235295915976167
    2. ' for' → logprob: -6.876623630523682
    3. ',' → logprob: -8.001623153686523
    4. '
' → logprob: -9.501623153686523
    5. '        
' → logprob: -10.001623153686523
    6. '.' → logprob: -10.126623153686523
    7. 'for' → logprob: -10.376623153686523
    8. ':' → logprob: -10.751623153686523
    9. '   ' → logprob: -11.501623153686523
    10. '           ' → logprob: -11.876623153686523

Token 360: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0660693421959877
    2. 'for' → logprob: -3.5660693645477295
    3. ' for' → logprob: -3.5660693645477295
    4. '
' → logprob: -5.94106912612915
    5. '        
' → logprob: -6.06606912612915
    6. 'diff' → logprob: -7.19106912612915
    7. 'result' → logprob: -7.56606912612915
    8. 'message' → logprob: -7.81606912612915
    9. '    
' → logprob: -8.441069602966309
    10. '   ' → logprob: -8.816069602966309

Token 361: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7277268171310425
    2. '       ' → logprob: -0.8527268171310425
    3. 'diff' → logprob: -2.852726936340332
    4. ' for' → logprob: -4.477726936340332
    5. 'result' → logprob: -5.102726936340332
    6. 'decoded' → logprob: -5.602726936340332
    7. 'message' → logprob: -5.727726936340332
    8. '
' → logprob: -5.852726936340332
    9. '   ' → logprob: -7.227726936340332
    10. 'decrypt' → logprob: -7.352726936340332

Token 362: ' Le' (ID: 2018)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.21188904345035553
    2. '       ' → logprob: -1.8368890285491943
    3. ' for' → logprob: -4.336889266967773
    4. 'message' → logprob: -4.836889266967773
    5. 'diff' → logprob: -5.211889266967773
    6. 'result' → logprob: -6.211889266967773
    7. 'decoded' → logprob: -6.711889266967773
    8. 'current' → logprob: -7.586889266967773
    9. 'reverse' → logprob: -8.461889266967773
    10. 'rev' → logprob: -8.586889266967773

Token 363: ' dé' (ID: 2393)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8174786567687988
    2. ' diff' → logprob: -1.5674786567687988
    3. 'for' → logprob: -1.9424786567687988
    4. 'diff' → logprob: -2.192478656768799
    5. ' message' → logprob: -3.192478656768799
    6. ' code' → logprob: -4.692478656768799
    7. 'n' → logprob: -4.692478656768799
    8. 'message' → logprob: -5.067478656768799
    9. '#' → logprob: -5.317478656768799
    10. ' reverse' → logprob: -5.567478656768799

Token 364: 'ch' (ID: 332)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6888647079467773
    2. 'for' → logprob: -1.1888647079467773
    3. 'crypt' → logprob: -2.4388647079467773
    4. 'f' → logprob: -3.1888647079467773
    5. '   ' → logprob: -3.9388647079467773
    6. 'crypted' → logprob: -4.188864707946777
    7. 'cipher' → logprob: -5.188864707946777
    8. 'code' → logprob: -5.313864707946777
    9. 'cryption' → logprob: -5.688864707946777
    10. '#' → logprob: -5.688864707946777

Token 365: 'iff' (ID: 4443)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.21342164278030396
    2. 'iff' → logprob: -2.338421583175659
    3. '       ' → logprob: -2.838421583175659
    4. 'ar' → logprob: -5.588421821594238
    5. '   ' → logprob: -5.713421821594238
    6. '#' → logprob: -5.838421821594238
    7. 'f' → logprob: -5.963421821594238
    8. 'iffer' → logprob: -6.213421821594238
    9. 'fr' → logprob: -6.338421821594238
    10. 'é' → logprob: -6.463421821594238

Token 366: 'rement' (ID: 66132)
  Prédit: 'rement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rement' → logprob: -0.010197879746556282
    2. 'r' → logprob: -4.63519811630249
    3. 'rem' → logprob: -8.260197639465332
    4. '#' → logprob: -10.260197639465332
    5. 're' → logprob: -10.885197639465332
    6. 'ar' → logprob: -11.260197639465332
    7. 'èrement' → logprob: -11.385197639465332
    8. 'ret' → logprob: -11.510197639465332
    9. 'cement' → logprob: -12.010197639465332
    10. 'ment' → logprob: -12.010197639465332

Token 367: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29214024543762207
    2. 'diff' → logprob: -2.667140245437622
    3. 'for' → logprob: -2.792140245437622
    4. ' for' → logprob: -3.542140245437622
    5. '   ' → logprob: -3.542140245437622
    6. ' se' → logprob: -3.667140245437622
    7. ' consiste' → logprob: -4.542140007019043
    8. ' des' → logprob: -6.042140007019043
    9. '#' → logprob: -6.042140007019043
    10. ' est' → logprob: -6.167140007019043

Token 368: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002664361847564578
    2. ' for' → logprob: -6.002664566040039
    3. 'for' → logprob: -9.127664566040039
    4. '   ' → logprob: -10.752664566040039
    5. '        
' → logprob: -10.752664566040039
    6. '        ' → logprob: -11.502664566040039
    7. '           ' → logprob: -12.252664566040039
    8. '    ' → logprob: -12.752664566040039
    9. '	   ' → logprob: -13.252664566040039
    10. ',' → logprob: -13.377664566040039

Token 369: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.27504363656044006
    2. '       ' → logprob: -1.9000436067581177
    3. 'for' → logprob: -2.4000437259674072
    4. 'diff' → logprob: -10.525043487548828
    5. '   ' → logprob: -10.650043487548828
    6. 'message' → logprob: -11.025043487548828
    7. ' reverse' → logprob: -11.025043487548828
    8. ' message' → logprob: -11.150043487548828
    9. 'reverse' → logprob: -11.275043487548828
    10. '        
' → logprob: -11.650043487548828

Token 370: ' ' (ID: 220)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.33475175499916077
    2. '       ' → logprob: -1.8347517251968384
    3. ' for' → logprob: -2.084751844406128
    4. '   ' → logprob: -8.709752082824707
    5. '#' → logprob: -9.584752082824707
    6. '
' → logprob: -9.834752082824707
    7. '	for' → logprob: -10.084752082824707
    8. 'diff' → logprob: -10.209752082824707
    9. 'result' → logprob: -10.834752082824707
    10. 'reverse' → logprob: -11.084752082824707

Token 371: '1' (ID: 16)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.007449852768331766
    2. 'diff' → logprob: -6.257449626922607
    3. ' for' → logprob: -6.382449626922607
    4. '#' → logprob: -6.882449626922607
    5. 'result' → logprob: -6.882449626922607
    6. 'decoded' → logprob: -7.382449626922607
    7. 'current' → logprob: -8.007450103759766
    8. 'res' → logprob: -8.382450103759766
    9. 'message' → logprob: -8.632450103759766
    10. '       ' → logprob: -9.757450103759766

Token 372: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.10137572884559631
    2. ')' → logprob: -3.2263758182525635
    3. '       ' → logprob: -3.9763758182525635
    4. 'for' → logprob: -4.226375579833984
    5. '=' → logprob: -4.851375579833984
    6. '   ' → logprob: -5.101375579833984
    7. ' for' → logprob: -5.351375579833984
    8. ':' → logprob: -5.601375579833984
    9. ' =' → logprob: -8.351375579833984
    10. '#' → logprob: -8.601375579833984

Token 373: ' Av' (ID: 7541)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0438380241394043
    2. ' for' → logprob: -3.7938380241394043
    3. '#' → logprob: -5.043838024139404
    4. 'Ap' → logprob: -5.543838024139404
    5. 'Pour' → logprob: -5.918838024139404
    6. 'For' → logprob: -5.918838024139404
    7. 'Advance' → logprob: -6.293838024139404
    8. ' avancer' → logprob: -7.418838024139404
    9. ' Advance' → logprob: -8.043838500976562
    10. 'Av' → logprob: -8.168838500976562

Token 374: 'ancer' (ID: 13358)
  Prédit: 'ancer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ancer' → logprob: -0.11728090047836304
    2. 'ance' → logprob: -2.242280960083008
    3. 'er' → logprob: -6.492280960083008
    4. 'anc' → logprob: -7.367280960083008
    5. '       ' → logprob: -7.492280960083008
    6. 'anç' → logprob: -7.992280960083008
    7. '   ' → logprob: -7.992280960083008
    8. 'ancé' → logprob: -8.742280960083008
    9. '#' → logprob: -8.867280960083008
    10. 'ancement' → logprob: -9.492280960083008

Token 375: ' les' (ID: 1341)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.7497372031211853
    2. '       ' → logprob: -0.8747372031211853
    3. '        ' → logprob: -3.37473726272583
    4. ' for' → logprob: -4.74973726272583
    5. ' le' → logprob: -4.87473726272583
    6. '<|end|>' → logprob: -4.99973726272583
    7. 'for' → logprob: -5.12473726272583
    8. '(diff' → logprob: -5.24973726272583
    9. ' de' → logprob: -5.49973726272583
    10. ' les' → logprob: -5.62473726272583

Token 376: ' lettres' (ID: 101234)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.4961308538913727
    2. 'lett' → logprob: -1.4961308240890503
    3. 'letters' → logprob: -2.62113094329834
    4. ' caractères' → logprob: -3.24613094329834
    5. 'diff' → logprob: -3.74613094329834
    6. ' lettres' → logprob: -3.99613094329834
    7. ' letters' → logprob: -4.87113094329834
    8. 'l' → logprob: -6.62113094329834
    9. 'chars' → logprob: -6.87113094329834
    10. '#' → logprob: -7.37113094329834

Token 377: ' aux' (ID: 5850)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0115681886672974
    2. 'for' → logprob: -1.5115681886672974
    3. 'diff' → logprob: -1.6365681886672974
    4. ' for' → logprob: -2.761568069458008
    5. ' de' → logprob: -2.761568069458008
    6. '   ' → logprob: -3.386568069458008
    7. 'de' → logprob: -4.511568069458008
    8. ' du' → logprob: -4.511568069458008
    9. 'def' → logprob: -4.886568069458008
    10. ' of' → logprob: -5.261568069458008

Token 378: ' positions' (ID: 15897)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.1585976779460907
    2. 'positions' → logprob: -2.033597707748413
    3. ' indices' → logprob: -5.158597469329834
    4. 'a' → logprob: -6.158597469329834
    5. 'indexes' → logprob: -6.158597469329834
    6. 'ind' → logprob: -6.533597469329834
    7. 'index' → logprob: -6.908597469329834
    8. 'indice' → logprob: -7.033597469329834
    9. ' positions' → logprob: -7.283597469329834
    10. 'de' → logprob: -7.783597469329834

Token 379: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.21299022436141968
    2. ' a' → logprob: -2.2129902839660645
    3. '<|end|>' → logprob: -2.7129902839660645
    4. '[' → logprob: -5.0879902839660645
    5. '[a' → logprob: -5.9629902839660645
    6. 'swap' → logprob: -6.2129902839660645
    7. '<|end|>' → logprob: -6.4629902839660645
    8. ' swap' → logprob: -7.0879902839660645
    9. ' swapped' → logprob: -7.5879902839660645
    10. ' ' → logprob: -8.212989807128906

Token 380: '_i' (ID: 10853)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.26639965176582336
    2. ' et' → logprob: -2.391399621963501
    3. ' ,' → logprob: -3.016399621963501
    4. 'et' → logprob: -3.641399621963501
    5. ' and' → logprob: -4.39139986038208
    6. 'for' → logprob: -4.51639986038208
    7. 'and' → logprob: -4.76639986038208
    8. ' =' → logprob: -4.89139986038208
    9. '=' → logprob: -5.01639986038208
    10. 'nd' → logprob: -5.51639986038208

Token 381: ',' (ID: 11)
  Prédit: ' et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.29996657371520996
    2. 'et' → logprob: -1.67496657371521
    3. ' and' → logprob: -3.54996657371521
    4. ' ' → logprob: -4.174966812133789
    5. ',' → logprob: -4.549966812133789
    6. 'and' → logprob: -5.549966812133789
    7. '```' → logprob: -6.049966812133789
    8. '   ' → logprob: -6.299966812133789
    9. ' ,' → logprob: -6.299966812133789
    10. ')' → logprob: -6.549966812133789

Token 382: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.10167233645915985
    2. ' b' → logprob: -2.351672410964966
    3. 'a' → logprob: -7.351672172546387
    4. '2' → logprob: -8.476672172546387
    5. ' ' → logprob: -8.601672172546387
    6. ' a' → logprob: -9.476672172546387
    7. '[' → logprob: -9.726672172546387
    8. ' and' → logprob: -10.101672172546387
    9. 'and' → logprob: -10.351672172546387
    10. '<|end|>' → logprob: -10.351672172546387

Token 383: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.040808551013469696
    2. ',' → logprob: -3.7908084392547607
    3. 'i' → logprob: -4.41580867767334
    4. '[i' → logprob: -6.29080867767334
    5. ',i' → logprob: -6.79080867767334
    6. ' ,' → logprob: -7.16580867767334
    7. '   ' → logprob: -8.04080867767334
    8. '-' → logprob: -8.41580867767334
    9. ' i' → logprob: -8.91580867767334
    10. ']' → logprob: -9.16580867767334

Token 384: ' du' (ID: 1462)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0055408477783203
    2. ' de' → logprob: -1.5055408477783203
    3. ' et' → logprob: -1.7555408477783203
    4. ',' → logprob: -2.3805408477783203
    5. '   ' → logprob: -2.7555408477783203
    6. ' dans' → logprob: -4.00554084777832
    7. ' ' → logprob: -4.50554084777832
    8. ' par' → logprob: -5.13054084777832
    9. ' du' → logprob: -5.25554084777832
    10. ' of' → logprob: -5.50554084777832

Token 385: ' diff' (ID: 8868)
  Prédit: 'message'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'message' → logprob: -0.28125545382499695
    2. ' message' → logprob: -1.4062554836273193
    3. 'swap' → logprob: -11.031255722045898
    4. 'diff' → logprob: -11.156255722045898
    5. 'code' → logprob: -11.281255722045898
    6. '_message' → logprob: -11.406255722045898
    7. '	message' → logprob: -11.656255722045898
    8. 'mess' → logprob: -12.031255722045898
    9. ' swap' → logprob: -12.406255722045898
    10. ' code' → logprob: -12.406255722045898

Token 386: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15007427334785461
    2. '=' → logprob: -2.2750742435455322
    3. '       ' → logprob: -4.150074481964111
    4. 'diff' → logprob: -5.275074481964111
    5. 'for' → logprob: -5.650074481964111
    6. '   ' → logprob: -5.650074481964111
    7. '
' → logprob: -5.775074481964111
    8. ' ' → logprob: -6.650074481964111
    9. '    ' → logprob: -7.525074481964111
    10. '        ' → logprob: -7.775074481964111

Token 387: 'pour' (ID: 52723)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6523963212966919
    2. '26' → logprob: -2.0273962020874023
    3. ' ' → logprob: -2.4023962020874023
    4. 'diff' → logprob: -2.4023962020874023
    5. ' swaps' → logprob: -3.5273962020874023
    6. 'sw' → logprob: -4.277396202087402
    7. '   ' → logprob: -4.402396202087402
    8. '=' → logprob: -4.527396202087402
    9. '
' → logprob: -4.652396202087402
    10. '       ' → logprob: -4.652396202087402

Token 388: ' ann' (ID: 3041)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.11505059897899628
    2. ' i' → logprob: -2.8650505542755127
    3. 'c' → logprob: -4.365050792694092
    4. ' _' → logprob: -5.115050792694092
    5. '_' → logprob: -5.490050792694092
    6. ')' → logprob: -5.490050792694092
    7. '_swap' → logprob: -5.490050792694092
    8. 'swap' → logprob: -5.615050792694092
    9. '_i' → logprob: -5.990050792694092
    10. 'a' → logprob: -6.115050792694092

Token 389: 'uler' (ID: 11802)
  Prédit: 'uler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uler' → logprob: -0.07052628695964813
    2. 'ex' → logprob: -2.820526361465454
    3. 'er' → logprob: -6.070526123046875
    4. 'é' → logprob: -6.695526123046875
    5. '[i' → logprob: -7.070526123046875
    6. 'e' → logprob: -7.070526123046875
    7. 'éc' → logprob: -7.820526123046875
    8. 'a' → logprob: -7.945526123046875
    9. 'ule' → logprob: -8.195526123046875
    10. ')' → logprob: -8.195526123046875

Token 390: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.39473241567611694
    2. 'le' → logprob: -1.7697324752807617
    3. ')' → logprob: -2.5197324752807617
    4. ' la' → logprob: -3.5197324752807617
    5. ' l' → logprob: -4.144732475280762
    6. 'l' → logprob: -4.769732475280762
    7. ' )' → logprob: -5.269732475280762
    8. 'diff' → logprob: -6.019732475280762
    9. ' les' → logprob: -6.144732475280762
    10. 'la' → logprob: -6.269732475280762

Token 391: ' recul' (ID: 179913)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.1406114101409912
    2. ')' → logprob: -2.890611410140991
    3. 're' → logprob: -3.140611410140991
    4. ' recul' → logprob: -4.14061164855957
    5. 'swap' → logprob: -5.64061164855957
    6. ' diff' → logprob: -5.64061164855957
    7. 'shift' → logprob: -6.26561164855957
    8. ' rec' → logprob: -6.26561164855957
    9. 'rec' → logprob: -6.39061164855957
    10. 'i' → logprob: -6.89061164855957

Token 392: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.30447590351104736
    2. ' de' → logprob: -1.9294759035110474
    3. '   ' → logprob: -3.429475784301758
    4. ' )' → logprob: -4.054475784301758
    5. '       ' → logprob: -4.179475784301758
    6. ')
' → logprob: -4.429475784301758
    7. ' des' → logprob: -5.054475784301758
    8. '),' → logprob: -5.554475784301758
    9. 'de' → logprob: -5.554475784301758
    10. ' of' → logprob: -6.054475784301758

Token 393: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007619839743711054
    2. '   ' → logprob: -8.250761985778809
    3. '\n' → logprob: -9.250761985778809
    4. '        
' → logprob: -9.375761985778809
    5. '           ' → logprob: -10.000761985778809
    6. ',' → logprob: -10.125761985778809
    7. '<|end|>' → logprob: -10.250761985778809
    8. '  
' → logprob: -10.625761985778809
    9. ' ' → logprob: -11.000761985778809
    10. ' for' → logprob: -11.000761985778809

Token 394: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010668702889233828
    2. '
' → logprob: -8.376067161560059
    3. '   ' → logprob: -8.501067161560059
    4. '	' → logprob: -9.001067161560059
    5. '        
' → logprob: -9.126067161560059
    6. ' for' → logprob: -9.376067161560059
    7. '           ' → logprob: -10.001067161560059
    8. ' ' → logprob: -10.376067161560059
    9. '	   ' → logprob: -10.376067161560059
    10. '  
' → logprob: -10.376067161560059

Token 395: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0027040657587349415
    2. ' for' → logprob: -6.87770414352417
    3. '   ' → logprob: -7.50270414352417
    4. 'for' → logprob: -7.50270414352417
    5. '	' → logprob: -8.377703666687012
    6. ' ' → logprob: -9.377703666687012
    7. '           ' → logprob: -9.502703666687012
    8. '	   ' → logprob: -9.752703666687012
    9. '	for' → logprob: -10.752703666687012
    10. '        
' → logprob: -11.002703666687012

Token 396: '2' (ID: 17)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5975446105003357
    2. 'for' → logprob: -0.9725446105003357
    3. ' for' → logprob: -2.7225446701049805
    4. '   ' → logprob: -5.9725446701049805
    5. ' ' → logprob: -6.4725446701049805
    6. '#' → logprob: -7.7225446701049805
    7. '           ' → logprob: -8.22254467010498
    8. 'diff' → logprob: -8.34754467010498
    9. '
' → logprob: -8.47254467010498
    10. '        
' → logprob: -8.84754467010498

Token 397: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0030125302728265524
    2. '       ' → logprob: -5.878012657165527
    3. '   ' → logprob: -8.878012657165527
    4. ')' → logprob: -10.753012657165527
    5. ' .' → logprob: -10.753012657165527
    6. ').' → logprob: -12.503012657165527
    7. '.
' → logprob: -12.753012657165527
    8. '    ' → logprob: -13.003012657165527
    9. ',' → logprob: -13.003012657165527
    10. 'for' → logprob: -13.378012657165527

Token 398: ' Swap' (ID: 76518)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22051399946212769
    2. ' for' → logprob: -2.3455140590667725
    3. 'swap' → logprob: -2.9705140590667725
    4. ' swap' → logprob: -3.8455140590667725
    5. '       ' → logprob: -4.470513820648193
    6. '#' → logprob: -4.845513820648193
    7. 'Swap' → logprob: -6.095513820648193
    8. '   ' → logprob: -6.345513820648193
    9. 'message' → logprob: -7.470513820648193
    10. ' #' → logprob: -7.720513820648193

Token 399: ' ces' (ID: 10532)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6853834390640259
    2. 'for' → logprob: -2.1853833198547363
    3. ' for' → logprob: -2.1853833198547363
    4. '<|end|>' → logprob: -2.6853833198547363
    5. '<|end|>' → logprob: -2.9353833198547363
    6. '
' → logprob: -2.9353833198547363
    7. '   ' → logprob: -3.3103833198547363
    8. 's' → logprob: -3.6853833198547363
    9. '        
' → logprob: -5.185383319854736
    10. ')' → logprob: -5.685383319854736

Token 400: ' deux' (ID: 10301)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.7954573035240173
    2. ' lettres' → logprob: -2.170457363128662
    3. '(' → logprob: -2.420457363128662
    4. ' positions' → logprob: -2.795457363128662
    5. 'message' → logprob: -2.795457363128662
    6. 'letters' → logprob: -2.920457363128662
    7. ' caractères' → logprob: -3.420457363128662
    8. ' letters' → logprob: -3.545457363128662
    9. '(message' → logprob: -4.045457363128662
    10. ' characters' → logprob: -4.545457363128662

Token 401: ' lettres' (ID: 101234)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.23262326419353485
    2. ' positions' → logprob: -1.6076232194900513
    3. '_positions' → logprob: -5.982623100280762
    4. ')' → logprob: -7.232623100280762
    5. 'indices' → logprob: -7.357623100280762
    6. ' characters' → logprob: -7.732623100280762
    7. 'pos' → logprob: -7.982623100280762
    8. ' indices' → logprob: -7.982623100280762
    9. 'chars' → logprob: -8.232623100280762
    10. 'characters' → logprob: -8.357623100280762

Token 402: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6370996832847595
    2. '
' → logprob: -0.7620996832847595
    3. ' for' → logprob: -6.637099742889404
    4. '   ' → logprob: -7.137099742889404
    5. 'for' → logprob: -7.387099742889404
    6. '        
' → logprob: -7.637099742889404
    7. '

' → logprob: -7.637099742889404
    8. '    
' → logprob: -8.512099266052246
    9. '<|end|>' → logprob: -8.512099266052246
    10. '
' → logprob: -9.137099266052246

Token 403: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007279218174517155
    2. '
' → logprob: -5.257279396057129
    3. ' for' → logprob: -6.757279396057129
    4. '   ' → logprob: -8.007279396057129
    5. 'for' → logprob: -8.257279396057129
    6. '        
' → logprob: -8.632279396057129
    7. '    
' → logprob: -10.132279396057129
    8. '<|end|>' → logprob: -10.507279396057129
    9. '  
' → logprob: -11.257279396057129
    10. '           ' → logprob: -12.007279396057129

Token 404: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.33069220185279846
    2. '       ' → logprob: -1.330692172050476
    3. ' for' → logprob: -5.205692291259766
    4. 'result' → logprob: -5.330692291259766
    5. '
' → logprob: -5.580692291259766
    6. 'message' → logprob: -7.205692291259766
    7. 'decoded' → logprob: -7.455692291259766
    8. 'de' → logprob: -7.705692291259766
    9. '        
' → logprob: -7.830692291259766
    10. '   ' → logprob: -8.705692291259766

Token 405: ' Cependant' (ID: 74480)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01877300627529621
    2. '       ' → logprob: -4.518773078918457
    3. 'diff' → logprob: -5.268773078918457
    4. '#' → logprob: -7.268773078918457
    5. 'def' → logprob: -7.518773078918457
    6. 'decoded' → logprob: -7.768773078918457
    7. 'message' → logprob: -7.893773078918457
    8. 'result' → logprob: -8.143773078918457
    9. ' for' → logprob: -9.768773078918457
    10. '   ' → logprob: -10.143773078918457

Token 406: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3283836543560028
    2. '       ' → logprob: -1.3283836841583252
    3. ' ,' → logprob: -5.203383445739746
    4. '   ' → logprob: -6.703383445739746
    5. '        
' → logprob: -6.828383445739746
    6. ' for' → logprob: -7.078383445739746
    7. '
' → logprob: -7.203383445739746
    8. '<|end|>' → logprob: -7.203383445739746
    9. ':' → logprob: -7.453383445739746
    10. ' ind' → logprob: -7.953383445739746

Token 407: ' dans' (ID: 2671)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.1734274625778198
    2. 'for' → logprob: -1.2984274625778198
    3. '#' → logprob: -1.4234274625778198
    4. '       ' → logprob: -2.4234275817871094
    5. ' #' → logprob: -3.7984275817871094
    6. 'message' → logprob: -4.548427581787109
    7. 'diff' → logprob: -4.673427581787109
    8. '        
' → logprob: -4.923427581787109
    9. 'positions' → logprob: -5.173427581787109
    10. ' 
' → logprob: -5.923427581787109

Token 408: ' l' (ID: 305)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.8192958831787109
    2. 'le' → logprob: -1.194295883178711
    3. 'the' → logprob: -2.819295883178711
    4. '#' → logprob: -2.819295883178711
    5. 'une' → logprob: -3.319295883178711
    6. ' la' → logprob: -4.069295883178711
    7. 'l' → logprob: -4.194295883178711
    8. 'this' → logprob: -4.694295883178711
    9. 'decrypt' → logprob: -4.694295883178711
    10. 'len' → logprob: -4.819295883178711

Token 409: ''' (ID: 6)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.573291540145874
    2. 'e' → logprob: -2.823291540145874
    3. ''en' → logprob: -2.823291540145874
    4. 'en' → logprob: -3.323291540145874
    5. 'range' → logprob: -3.448291540145874
    6. ''ex' → logprob: -3.573291540145874
    7. 'elif' → logprob: -3.573291540145874
    8. 'a' → logprob: -3.698291540145874
    9. ''' → logprob: -3.698291540145874
    10. ''é' → logprob: -4.323291778564453

Token 410: 'én' (ID: 3289)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6085272431373596
    2. 'while' → logprob: -1.9835271835327148
    3. '#' → logprob: -2.108527183532715
    4. 'range' → logprob: -2.483527183532715
    5. 'code' → logprob: -4.233527183532715
    6. 'elif' → logprob: -4.483527183532715
    7. 'decrypt' → logprob: -4.608527183532715
    8. ' for' → logprob: -4.733527183532715
    9. '```' → logprob: -4.983527183532715
    10. 'if' → logprob: -5.108527183532715

Token 411: 'oncé' (ID: 59071)
  Prédit: 'oncé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oncé' → logprob: -0.018853023648262024
    2. 'once' → logprob: -4.518853187561035
    3. 'nonce' → logprob: -6.018853187561035
    4. 'non' → logprob: -6.268853187561035
    5. 'onc' → logprob: -6.643853187561035
    6. 'oncer' → logprob: -7.393853187561035
    7. 'd' → logprob: -7.768853187561035
    8. 'ig' → logprob: -8.393853187561035
    9. 'um' → logprob: -8.768853187561035
    10. 'code' → logprob: -8.893853187561035

Token 412: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05311935022473335
    2. '#' → logprob: -3.678119421005249
    3. ':' → logprob: -3.803119421005249
    4. ' ,' → logprob: -7.30311918258667
    5. '...' → logprob: -7.80311918258667
    6. 'def' → logprob: -8.303119659423828
    7. '.' → logprob: -8.303119659423828
    8. ' complet' → logprob: -8.428119659423828
    9. '   ' → logprob: -8.803119659423828
    10. ')' → logprob: -9.053119659423828

Token 413: ' "' (ID: 392)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1676805019378662
    2. 'il' → logprob: -1.4176805019378662
    3. ' il' → logprob: -1.9176805019378662
    4. ' on' → logprob: -2.167680501937866
    5. 'on' → logprob: -2.917680501937866
    6. 'le' → logprob: -3.042680501937866
    7. 'pass' → logprob: -3.167680501937866
    8. 'les' → logprob: -4.917680740356445
    9. 'la' → logprob: -5.167680740356445
    10. ' la' → logprob: -5.292680740356445

Token 414: 'アル' (ID: 99174)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -1.2493324279785156
    2. 'les' → logprob: -1.3743324279785156
    3. '"' → logprob: -1.9993324279785156
    4. 'la' → logprob: -2.1243324279785156
    5. '#' → logprob: -2.6243324279785156
    6. '...' → logprob: -3.9993324279785156
    7. '"""' → logprob: -3.9993324279785156
    8. 'il' → logprob: -4.124332427978516
    9. 'the' → logprob: -4.624332427978516
    10. ' le' → logprob: -4.749332427978516

Token 415: 'ファ' (ID: 67920)
  Prédit: 'ファ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ファ' → logprob: -0.07325790822505951
    2. '```' → logprob: -4.073257923126221
    3. 'phabet' → logprob: -4.448257923126221
    4. 'f' → logprob: -4.698257923126221
    5. 'フ' → logprob: -4.948257923126221
    6. 'ph' → logprob: -5.698257923126221
    7. 'p' → logprob: -5.823257923126221
    8. 'pha' → logprob: -5.948257923126221
    9. 'ス' → logprob: -6.323257923126221
    10. 'g' → logprob: -6.448257923126221

Token 416: 'ベ' (ID: 36389)
  Prédit: 'ベ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ベ' → logprob: -0.005269803572446108
    2. '```' → logprob: -5.755270004272461
    3. '\xeb\xb2' → logprob: -6.755270004272461
    4. 'bet' → logprob: -8.630270004272461
    5. 'べ' → logprob: -8.880270004272461
    6. '"' → logprob: -9.255270004272461
    7. '``' → logprob: -9.630270004272461
    8. '\' → logprob: -9.630270004272461
    9. 'bets' → logprob: -10.130270004272461
    10. 'b' → logprob: -10.130270004272461

Token 417: 'ット' (ID: 21477)
  Prédit: 'ット'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ット' → logprob: -0.003036774694919586
    2. '```' → logprob: -7.378036975860596
    3. 'ッド' → logprob: -7.378036975860596
    4. 't' → logprob: -7.753036975860596
    5. 'ト' → logprob: -7.878036975860596
    6. 'ート' → logprob: -9.253036499023438
    7. 'ッ' → logprob: -9.253036499023438
    8. 'et' → logprob: -9.503036499023438
    9. '\xef\xbd\xaf\xef\xbe' → logprob: -9.815536499023438
    10. '
' → logprob: -10.003036499023438

Token 418: '順' (ID: 90778)
  Prédit: 'の'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'の' → logprob: -0.14762866497039795
    2. 'を' → logprob: -3.3976287841796875
    3. 'は' → logprob: -3.5226287841796875
    4. '(' → logprob: -4.2726287841796875
    5. '（' → logprob: -4.2726287841796875
    6. 'が' → logprob: -4.6476287841796875
    7. 'で' → logprob: -5.1476287841796875
    8. ' (' → logprob: -5.7726287841796875
    9. '"' → logprob: -5.7726287841796875
    10. 'に' → logprob: -5.8976287841796875

Token 419: 'で' (ID: 4344)
  Prédit: 'で'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'で' → logprob: -0.5552862286567688
    2. 'の' → logprob: -1.305286169052124
    3. '順' → logprob: -2.930286169052124
    4. 'に' → logprob: -4.055286407470703
    5. 'が' → logprob: -4.430286407470703
    6. 'では' → logprob: -4.430286407470703
    7. 'によ' → logprob: -4.430286407470703
    8. '"' → logprob: -4.805286407470703
    9. 'を' → logprob: -5.430286407470703
    10. '(' → logprob: -5.680286407470703

Token 420: '、' (ID: 1395)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.4278970956802368
    2. 'a' → logprob: -2.8028969764709473
    3. 'les' → logprob: -4.177896976470947
    4. 'le' → logprob: -4.177896976470947
    5. 'une' → logprob: -4.302896976470947
    6. '\xe6\x98' → logprob: -4.427896976470947
    7. '"' → logprob: -4.677896976470947
    8. '一' → logprob: -4.677896976470947
    9. '進' → logprob: -4.677896976470947
    10. '逆' → logprob: -4.802896976470947

Token 421: ''' (ID: 6)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.1346125602722168
    2. 'diff' → logprob: -1.2596125602722168
    3. '\xe6\x98' → logprob: -3.384612560272217
    4. 'swap' → logprob: -3.384612560272217
    5. 'ソ' → logprob: -3.634612560272217
    6. '各' → logprob: -4.009612560272217
    7. 'す' → logprob: -4.009612560272217
    8. 'i' → logprob: -4.009612560272217
    9. '最' → logprob: -4.384612560272217
    10. 'N' → logprob: -4.384612560272217

Token 422: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3658548593521118
    2. 'diff' → logprob: -2.6158547401428223
    3. ''a' → logprob: -3.8658547401428223
    4. ''' → logprob: -4.115854740142822
    5. '各' → logprob: -4.115854740142822
    6. '最' → logprob: -4.240854740142822
    7. '一' → logprob: -4.490854740142822
    8. 'す' → logprob: -4.865854740142822
    9. '差' → logprob: -4.990854740142822
    10. '文字' → logprob: -4.990854740142822

Token 423: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.06149642542004585
    2. 'から' → logprob: -3.0614964962005615
    3. ' '' → logprob: -5.686496257781982
    4. 'a' → logprob: -6.061496257781982
    5. 'の' → logprob: -7.436496257781982
    6. 'か' → logprob: -7.561496257781982
    7. 'が' → logprob: -7.561496257781982
    8. '"' → logprob: -7.686496257781982
    9. 'と' → logprob: -7.936496257781982
    10. 'で' → logprob: -7.936496257781982

Token 424: 'の' (ID: 3385)
  Prédit: 'から'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'から' → logprob: -0.020389825105667114
    2. ' ' → logprob: -5.770390033721924
    3. 'で' → logprob: -6.145390033721924
    4. 'と' → logprob: -6.145390033721924
    5. 'が' → logprob: -6.395390033721924
    6. 'の' → logprob: -6.395390033721924
    7. 'か' → logprob: -6.770390033721924
    8. ' の' → logprob: -7.020390033721924
    9. '～' → logprob: -7.270390033721924
    10. 'より' → logprob: -7.520390033721924

Token 425: '前' (ID: 7660)
  Prédit: '位置'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '位置' → logprob: -1.5492215156555176
    2. 'diff' → logprob: -1.6742215156555176
    3. '次' → logprob: -2.2992215156555176
    4. '前' → logprob: -2.6742215156555176
    5. '差' → logprob: -2.9242215156555176
    6. 'イン' → logprob: -3.0492215156555176
    7. 'a' → logprob: -3.1742215156555176
    8. '最' → logprob: -3.2992215156555176
    9. 'i' → logprob: -3.7992215156555176
    10. '先' → logprob: -4.049221515655518

Token 426: 'は' (ID: 5205)
  Prédit: 'に'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'に' → logprob: -0.17818789184093475
    2. 'の' → logprob: -2.053187847137451
    3. 'は' → logprob: -4.553187847137451
    4. 'が' → logprob: -5.553187847137451
    5. 'と' → logprob: -5.678187847137451
    6. 'から' → logprob: -5.928187847137451
    7. 'で' → logprob: -5.928187847137451
    8. ''' → logprob: -6.053187847137451
    9. 'では' → logprob: -6.053187847137451
    10. 'まで' → logprob: -6.553187847137451

Token 427: ''z' (ID: 79168)
  Prédit: ''z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''z' → logprob: -0.0017461004899814725
    2. 'z' → logprob: -6.37674617767334
    3. '‘z' → logprob: -10.37674617767334
    4. '"' → logprob: -12.12674617767334
    5. ''' → logprob: -14.00174617767334
    6. '
' → logprob: -14.12674617767334
    7. '	z' → logprob: -14.25174617767334
    8. '’z' → logprob: -14.50174617767334
    9. ''s' → logprob: -14.62674617767334
    10. '`' → logprob: -14.62674617767334

Token 428: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.35883644223213196
    2. ''"' → logprob: -1.6088364124298096
    3. '"' → logprob: -2.6088364124298096
    4. 'です' → logprob: -4.483836650848389
    5. '')"' → logprob: -4.983836650848389
    6. '',' → logprob: -5.858836650848389
    7. ''"
' → logprob: -6.608836650848389
    8. 'で' → logprob: -6.858836650848389
    9. '',"' → logprob: -7.483836650848389
    10. '')' → logprob: -7.608836650848389

Token 429: 'と' (ID: 5330)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.8114960193634033
    2. '"' → logprob: -1.5614960193634033
    3. 'です' → logprob: -2.1864960193634033
    4. ''"' → logprob: -3.1864960193634033
    5. 'まで' → logprob: -3.3114960193634033
    6. 'で' → logprob: -3.4364960193634033
    7. '')"' → logprob: -3.9364960193634033
    8. '')' → logprob: -4.186495780944824
    9. 'が' → logprob: -4.436495780944824
    10. '',' → logprob: -4.811495780944824

Token 430: 'する' (ID: 39065)
  Prédit: 'なる'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'なる' → logprob: -0.5381678938865662
    2. 'いう' → logprob: -0.9131678938865662
    3. 'な' → logprob: -4.288167953491211
    4. 'み' → logprob: -8.288167953491211
    5. 'は' → logprob: -8.413167953491211
    6. ''' → logprob: -8.788167953491211
    7. '#' → logprob: -9.163167953491211
    8. 'も' → logprob: -9.413167953491211
    9. '思' → logprob: -9.663167953491211
    10. '言' → logprob: -10.163167953491211

Token 431: '。"' (ID: 176954)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.438063383102417
    2. ''' → logprob: -2.188063383102417
    3. ''"' → logprob: -3.563063383102417
    4. '。"' → logprob: -3.563063383102417
    5. '。' → logprob: -3.813063383102417
    6. 'ので' → logprob: -3.938063383102417
    7. '"
' → logprob: -4.313063621520996
    8. '",' → logprob: -4.438063621520996
    9. '#' → logprob: -4.688063621520996
    10. '."' → logprob: -4.938063621520996

Token 432: ' pour' (ID: 1930)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04935596138238907
    2. ' for' → logprob: -4.049355983734131
    3. 'for' → logprob: -4.299355983734131
    4. '
' → logprob: -4.799355983734131
    5. '        
' → logprob: -5.549355983734131
    6. '   ' → logprob: -6.674355983734131
    7. '<|end|>' → logprob: -7.049355983734131
    8. '<|end|>' → logprob: -8.049355506896973
    9. '\n' → logprob: -8.299355506896973
    10. '        

' → logprob: -8.549355506896973

Token 433: ' le' (ID: 505)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5705292820930481
    2. 'diff' → logprob: -1.5705292224884033
    3. ' i' → logprob: -1.9455292224884033
    4. ' chaque' → logprob: -2.6955292224884033
    5. ' diff' → logprob: -4.695529460906982
    6. ' le' → logprob: -6.820529460906982
    7. 'd' → logprob: -7.320529460906982
    8. 'l' → logprob: -7.570529460906982
    9. ' la' → logprob: -7.945529460906982
    10. 'le' → logprob: -7.945529460906982

Token 434: ' recul' (ID: 179913)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.7060378789901733
    2. 'd' → logprob: -1.4560378789901733
    3. 'dé' → logprob: -1.4560378789901733
    4. 'shift' → logprob: -4.206037998199463
    5. 'ch' → logprob: -4.706037998199463
    6. 'de' → logprob: -5.581037998199463
    7. 'decrypt' → logprob: -5.831037998199463
    8. ' dé' → logprob: -6.081037998199463
    9. '#' → logprob: -6.956037998199463
    10. ' chiff' → logprob: -7.081037998199463

Token 435: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.032865867018699646
    2. '        
' → logprob: -4.53286600112915
    3. '<|end|>' → logprob: -4.90786600112915
    4. ',' → logprob: -5.53286600112915
    5. '
' → logprob: -6.28286600112915
    6. '<|end|>' → logprob: -6.40786600112915
    7. '   ' → logprob: -6.65786600112915
    8. '.' → logprob: -7.40786600112915
    9. '        

' → logprob: -7.40786600112915
    10. ')' → logprob: -7.53286600112915

Token 436: ' donc' (ID: 14206)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09902391582727432
    2. '#' → logprob: -2.7240238189697266
    3. 'diff' → logprob: -4.349023818969727
    4. '```' → logprob: -5.724023818969727
    5. '        
' → logprob: -6.224023818969727
    6. 'continue' → logprob: -6.224023818969727
    7. '   ' → logprob: -6.474023818969727
    8. 'for' → logprob: -6.724023818969727
    9. '           ' → logprob: -6.724023818969727
    10. ' ' → logprob: -7.474023818969727

Token 437: ' inverse' (ID: 53743)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2655356526374817
    2. '       ' → logprob: -2.390535593032837
    3. '#' → logprob: -2.515535593032837
    4. ' for' → logprob: -4.265535831451416
    5. 'diff' → logprob: -4.640535831451416
    6. 'continue' → logprob: -4.765535831451416
    7. 'def' → logprob: -5.140535831451416
    8. '...' → logprob: -5.515535831451416
    9. 'contin' → logprob: -5.890535831451416
    10. '<|end|>' → logprob: -6.390535831451416

Token 438: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5027871131896973
    2. '   ' → logprob: -1.5027871131896973
    3. 'diff' → logprob: -3.1277871131896973
    4. ':' → logprob: -3.7527871131896973
    5. 'for' → logprob: -3.8777871131896973
    6. ' for' → logprob: -4.252787113189697
    7. ',' → logprob: -4.377787113189697
    8. ' =' → logprob: -4.752787113189697
    9. '    ' → logprob: -5.002787113189697
    10. '=' → logprob: -5.252787113189697

Token 439: ' avancer' (ID: 151163)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9949629902839661
    2. 'for' → logprob: -1.1199629306793213
    3. ' for' → logprob: -1.4949629306793213
    4. 'diff' → logprob: -2.8699629306793213
    5. '   ' → logprob: -4.8699631690979
    6. '        ' → logprob: -5.4949631690979
    7. 'def' → logprob: -6.2449631690979
    8. '    ' → logprob: -6.7449631690979
    9. ' diff' → logprob: -6.7449631690979
    10. '        
' → logprob: -6.9949631690979

Token 440: ' correspond' (ID: 11095)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09838041663169861
    2. 'for' → logprob: -3.2233803272247314
    3. ' for' → logprob: -3.7233803272247314
    4. '
' → logprob: -4.3483805656433105
    5. '   ' → logprob: -5.0983805656433105
    6. '        
' → logprob: -5.0983805656433105
    7. ',' → logprob: -7.0983805656433105
    8. '    
' → logprob: -7.2233805656433105
    9. '	for' → logprob: -7.7233805656433105
    10. '<|end|>' → logprob: -7.8483805656433105

Token 441: ' au' (ID: 2791)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.02129499800503254
    2. 'à' → logprob: -4.521295070648193
    3. '       ' → logprob: -5.021295070648193
    4. '   ' → logprob: -6.521295070648193
    5. ''à' → logprob: -7.396295070648193
    6. ' to' → logprob: -7.896295070648193
    7. '           ' → logprob: -8.396294593811035
    8. ' a' → logprob: -8.896294593811035
    9. '’à' → logprob: -8.896294593811035
    10. 'au' → logprob: -9.146294593811035

Token 442: ' recul' (ID: 179913)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9755787253379822
    2. 'shift' → logprob: -1.725578784942627
    3. 'dé' → logprob: -1.850578784942627
    4. 'diff' → logprob: -1.975578784942627
    5. 'lambda' → logprob: -2.850578784942627
    6. 'de' → logprob: -3.600578784942627
    7. '(lambda' → logprob: -4.475578784942627
    8. ' lambda' → logprob: -4.600578784942627
    9. '(' → logprob: -5.100578784942627
    10. ' shift' → logprob: -5.350578784942627

Token 443: ' nég' (ID: 55805)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008557835593819618
    2. '   ' → logprob: -6.5085577964782715
    3. ' for' → logprob: -6.6335577964782715
    4. '        
' → logprob: -6.6335577964782715
    5. ',' → logprob: -6.7585577964782715
    6. 'for' → logprob: -7.8835577964782715
    7. '.' → logprob: -7.8835577964782715
    8. ')' → logprob: -8.50855827331543
    9. '	' → logprob: -8.50855827331543
    10. '
' → logprob: -8.63355827331543

Token 444: 'atif' (ID: 23984)
  Prédit: 'atif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atif' → logprob: -0.645395815372467
    2. 'diff' → logprob: -0.895395815372467
    3. '       ' → logprob: -2.8953957557678223
    4. 'itif' → logprob: -5.895395755767822
    5. ')' → logprob: -6.020395755767822
    6. '           ' → logprob: -6.645395755767822
    7. '(diff' → logprob: -6.895395755767822
    8. '   ' → logprob: -7.270395755767822
    9. '	diff' → logprob: -7.395395755767822
    10. '        ' → logprob: -8.02039623260498

Token 445: ' avec' (ID: 3937)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03435859456658363
    2. 'for' → logprob: -4.034358501434326
    3. ' for' → logprob: -4.909358501434326
    4. '        
' → logprob: -5.534358501434326
    5. '
' → logprob: -5.909358501434326
    6. '   ' → logprob: -7.034358501434326
    7. 'def' → logprob: -8.284358978271484
    8. '           ' → logprob: -9.159358978271484
    9. '    
' → logprob: -9.284358978271484
    10. ',' → logprob: -9.409358978271484

Token 446: ' wrap' (ID: 20404)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.29141178727149963
    2. 'diff' → logprob: -1.6664117574691772
    3. '(-' → logprob: -3.916411876678467
    4. 'shift' → logprob: -4.416411876678467
    5. '(' → logprob: -4.916411876678467
    6. 'def' → logprob: -5.291411876678467
    7. '-d' → logprob: -5.541411876678467
    8. '26' → logprob: -6.041411876678467
    9. '(diff' → logprob: -6.166411876678467
    10. ' -' → logprob: -6.541411876678467

Token 447: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0061569008976221085
    2. '           ' → logprob: -5.506156921386719
    3. '               ' → logprob: -7.006156921386719
    4. '   ' → logprob: -7.381156921386719
    5. 'for' → logprob: -8.756156921386719
    6. '	' → logprob: -9.756156921386719
    7. '        
' → logprob: -10.006156921386719
    8. ')' → logprob: -10.506156921386719
    9. '                   ' → logprob: -10.506156921386719
    10. ',' → logprob: -10.756156921386719

Token 448: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07756957411766052
    2. ' for' → logprob: -3.2025694847106934
    3. 'for' → logprob: -3.4525694847106934
    4. '   ' → logprob: -7.077569484710693
    5. '        
' → logprob: -7.702569484710693
    6. '
' → logprob: -8.077569961547852
    7. '	for' → logprob: -8.452569961547852
    8. '           ' → logprob: -9.327569961547852
    9. '	   ' → logprob: -9.327569961547852
    10. '	' → logprob: -9.452569961547852

Token 449: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.05345943570137024
    2. ' for' → logprob: -3.553459405899048
    3. '       ' → logprob: -3.803459405899048
    4. '   ' → logprob: -7.053459644317627
    5. 'result' → logprob: -9.303459167480469
    6. '
' → logprob: -9.678459167480469
    7. 'decoded' → logprob: -10.178459167480469
    8. ' decrypted' → logprob: -11.178459167480469
    9. '	for' → logprob: -11.303459167480469
    10. 'results' → logprob: -11.803459167480469

Token 450: ' a' (ID: 261)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.7264503836631775
    2. 'i' → logprob: -0.8514503836631775
    3. 'swap' → logprob: -3.1014504432678223
    4. ' swap' → logprob: -3.3514504432678223
    5. ' (' → logprob: -5.851450443267822
    6. 'rev' → logprob: -6.226450443267822
    7. '(i' → logprob: -6.726450443267822
    8. '_i' → logprob: -7.851450443267822
    9. ' op' → logprob: -7.976450443267822
    10. 'a' → logprob: -7.976450443267822

Token 451: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001773192489054054
    2. ',b' → logprob: -8.750177383422852
    3. ' ,' → logprob: -11.250177383422852
    4. ',a' → logprob: -13.375177383422852
    5. ',_' → logprob: -14.000177383422852
    6. '，' → logprob: -14.500177383422852
    7. ' in' → logprob: -15.125177383422852
    8. ',
' → logprob: -15.125177383422852
    9. ',user' → logprob: -15.250177383422852
    10. ',v' → logprob: -15.375177383422852

Token 452: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00033546582562848926
    2. ' b' → logprob: -8.000335693359375
    3. '	b' → logprob: -18.250335693359375
    4. '   ' → logprob: -18.500335693359375
    5. ')b' → logprob: -19.750335693359375
    6. '_b' → logprob: -20.125335693359375
    7. '    ' → logprob: -21.250335693359375
    8. '       ' → logprob: -21.375335693359375
    9. ' б' → logprob: -21.375335693359375
    10. ' ' → logprob: -21.625335693359375

Token 453: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012988918460905552
    2. 'in' → logprob: -4.387989044189453
    3. ':' → logprob: -8.637989044189453
    4. ',' → logprob: -8.762989044189453
    5. '   ' → logprob: -9.887989044189453
    6. '.' → logprob: -10.762989044189453
    7. '	in' → logprob: -10.762989044189453
    8. '=' → logprob: -11.762989044189453
    9. '_in' → logprob: -12.012989044189453
    10. ' ' → logprob: -12.387989044189453

Token 454: ' reversed' (ID: 57184)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.0197509303689003
    2. 'sw' → logprob: -4.019751071929932
    3. ' reversed' → logprob: -6.519751071929932
    4. ' swaps' → logprob: -9.769750595092773
    5. '   ' → logprob: -10.269750595092773
    6. ' ' → logprob: -11.394750595092773
    7. 'sorted' → logprob: -11.519750595092773
    8. '(re' → logprob: -13.144750595092773
    9. '  ' → logprob: -13.144750595092773
    10. 'reverse' → logprob: -13.394750595092773

Token 455: '(sw' (ID: 132758)
  Prédit: '(sw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sw' → logprob: -9.877503907773644e-05
    2. 'sw' → logprob: -10.000099182128906
    3. ' (' → logprob: -10.875099182128906
    4. '(' → logprob: -11.875099182128906
    5. '(s' → logprob: -12.000099182128906
    6. '(range' → logprob: -12.125099182128906
    7. '   ' → logprob: -12.375099182128906
    8. '((' → logprob: -12.750099182128906
    9. ')(' → logprob: -13.750099182128906
    10. '       ' → logprob: -13.875099182128906

Token 456: 'aps' (ID: 3506)
  Prédit: 'aps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aps' → logprob: -9.610702363715973e-06
    2. 'ap' → logprob: -12.625009536743164
    3. 'a' → logprob: -13.625009536743164
    4. '   ' → logprob: -14.250009536743164
    5. 'ап' → logprob: -14.750009536743164
    6. '[' → logprob: -14.875009536743164
    7. '```' → logprob: -14.875009536743164
    8. '`' → logprob: -15.125009536743164
    9. '#' → logprob: -15.500009536743164
    10. 'apped' → logprob: -15.500009536743164

Token 457: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04873338341712952
    2. '):
' → logprob: -3.0487334728240967
    3. '   ' → logprob: -9.923733711242676
    4. '):
' → logprob: -9.923733711242676
    5. ':' → logprob: -10.423733711242676
    6. '       ' → logprob: -11.423733711242676
    7. ' ):' → logprob: -12.173733711242676
    8. ']:' → logprob: -13.923733711242676
    9. '):

' → logprob: -15.423733711242676
    10. '}:' → logprob: -15.548733711242676

Token 458: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004602199420332909
    2. '           ' → logprob: -5.879602432250977
    3. '        
' → logprob: -6.879602432250977
    4. '   ' → logprob: -8.254602432250977
    5. ',' → logprob: -8.754602432250977
    6. '
' → logprob: -9.254602432250977
    7. '    
' → logprob: -9.629602432250977
    8. '):
' → logprob: -10.504602432250977
    9. ')' → logprob: -11.129602432250977
    10. ':' → logprob: -11.129602432250977

Token 459: ' diff' (ID: 8868)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03867625445127487
    2. '       ' → logprob: -4.1636762619018555
    3. ' for' → logprob: -4.2886762619018555
    4. 'for' → logprob: -5.5386762619018555
    5. ' message' → logprob: -6.4136762619018555
    6. 'message' → logprob: -6.5386762619018555
    7. 'diff' (adapté à ' diff') → logprob: -7.4136762619018555
    8. '               ' → logprob: -7.7886762619018555
    9. '   ' → logprob: -8.288676261901855
    10. ' diff' → logprob: -9.413676261901855

Token 460: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026324568316340446
    2. '=' → logprob: -3.651324510574341
    3. ' ' → logprob: -11.651324272155762
    4. 'a' → logprob: -11.776324272155762
    5. ',' → logprob: -12.651324272155762
    6. '_a' → logprob: -14.026324272155762
    7. '   ' → logprob: -14.526324272155762
    8. ' a' → logprob: -14.651324272155762
    9. ' +=' → logprob: -14.651324272155762
    10. ' ,' → logprob: -15.026324272155762

Token 461: ' b' (ID: 287)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.07286975532770157
    2. 'b' → logprob: -3.3228697776794434
    3. 'max' → logprob: -3.8228697776794434
    4. 'min' → logprob: -4.822869777679443
    5. 'a' → logprob: -5.697869777679443
    6. '(abs' → logprob: -7.947869777679443
    7. ' abs' → logprob: -8.197869300842285
    8. 'message' → logprob: -8.822869300842285
    9. 'swap' → logprob: -10.197869300842285
    10. 'int' → logprob: -10.947869300842285

Token 462: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.31326669454574585
    2. '-' → logprob: -1.3132667541503906
    3. 'a' → logprob: -13.18826675415039
    4. '   ' → logprob: -13.81326675415039
    5. '+' → logprob: -13.93826675415039
    6. ' ' → logprob: -15.06326675415039
    7. '#' → logprob: -15.18826675415039
    8. '-a' → logprob: -15.68826675415039
    9. '-b' → logprob: -16.31326675415039
    10. '[' → logprob: -16.43826675415039

Token 463: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -3.4121114822482923e-06
    2. ' a' → logprob: -12.625003814697266
    3. '	a' → logprob: -17.625003814697266
    4. '1' → logprob: -20.250003814697266
    5. '   ' → logprob: -20.375003814697266
    6. '(a' → logprob: -21.375003814697266
    7. '    ' → logprob: -22.125003814697266
    8. '           ' → logprob: -22.125003814697266
    9. '10' → logprob: -22.375003814697266
    10. '=' → logprob: -22.375003814697266

Token 464: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06360143423080444
    2. '           ' → logprob: -2.813601493835449
    3. '            
' → logprob: -6.813601493835449
    4. '    
' → logprob: -8.93860149383545
    5. ' 
' → logprob: -9.18860149383545
    6. '       ' → logprob: -9.68860149383545
    7. '
' → logprob: -10.06360149383545
    8. '  
' → logprob: -10.18860149383545
    9. '   ' → logprob: -10.56360149383545
    10. '        
' → logprob: -10.68860149383545

Token 465: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.057106878608465195
    2. '       ' → logprob: -3.5571069717407227
    3. '
' → logprob: -4.432106971740723
    4. '        
' → logprob: -5.307106971740723
    5. 'for' → logprob: -5.682106971740723
    6. ' for' → logprob: -5.807106971740723
    7. '            
' → logprob: -6.432106971740723
    8. ' 
' → logprob: -7.932106971740723
    9. '    
' → logprob: -7.932106971740723
    10. '   ' → logprob: -8.182106971740723

Token 466: ' #' (ID: 1069)
  Prédit: 'message'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'message' → logprob: -0.2201426476240158
    2. 'for' → logprob: -1.7201426029205322
    3. '           ' → logprob: -4.470142841339111
    4. ' message' → logprob: -5.720142841339111
    5. ' for' → logprob: -5.720142841339111
    6. 'def' → logprob: -8.720142364501953
    7. '       ' → logprob: -8.845142364501953
    8. '   ' → logprob: -8.970142364501953
    9. '#' (adapté à ' #') → logprob: -9.845142364501953
    10. '            
' → logprob: -10.845142364501953

Token 467: ' Les' (ID: 7029)
  Prédit: 'message'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'message' → logprob: -0.07291796803474426
    2. 'for' → logprob: -2.697917938232422
    3. '           ' → logprob: -6.572917938232422
    4. ' message' → logprob: -6.697917938232422
    5. ' for' → logprob: -8.072917938232422
    6. '#' → logprob: -11.322917938232422
    7. '            
' → logprob: -11.572917938232422
    8. 'def' → logprob: -11.947917938232422
    9. 'if' → logprob: -13.572917938232422
    10. '            ' → logprob: -13.697917938232422

Token 468: ' indices' (ID: 30378)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.746419370174408
    2. 'message' → logprob: -0.746419370174408
    3. 'positions' → logprob: -3.7464194297790527
    4. 'pos' → logprob: -4.121419429779053
    5. ' for' → logprob: -5.496419429779053
    6. 'def' → logprob: -5.871419429779053
    7. ' message' → logprob: -6.121419429779053
    8. 'a' → logprob: -7.121419429779053
    9. '#' → logprob: -7.371419429779053
    10. '            
' → logprob: -8.371418952941895

Token 469: ' dans' (ID: 2671)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.19320063292980194
    2. ' a' → logprob: -2.3182005882263184
    3. ' =' → logprob: -2.8182005882263184
    4. '=' → logprob: -4.943200588226318
    5. '_a' → logprob: -5.693200588226318
    6. 'for' → logprob: -6.818200588226318
    7. ' for' → logprob: -6.943200588226318
    8. '#' → logprob: -7.193200588226318
    9. ' are' → logprob: -7.193200588226318
    10. '[a' → logprob: -7.443200588226318

Token 470: ' la' (ID: 557)
  Prédit: 'message'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'message' → logprob: -0.009848523885011673
    2. ' message' → logprob: -5.009848594665527
    3. '[' → logprob: -7.009848594665527
    4. 'le' → logprob: -7.384848594665527
    5. 'range' → logprob: -7.759848594665527
    6. ' le' → logprob: -8.009848594665527
    7. 'the' → logprob: -8.259848594665527
    8. 'python' → logprob: -8.759848594665527
    9. 'code' → logprob: -9.384848594665527
    10. ' the' → logprob: -9.759848594665527

Token 471: ' liste' (ID: 31719)
  Prédit: 'message'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'message' → logprob: -0.030331654474139214
    2. 'code' → logprob: -4.405331611633301
    3. 'range' → logprob: -4.905331611633301
    4. 'for' → logprob: -5.530331611633301
    5. ' message' → logprob: -5.655331611633301
    6. ' code' → logprob: -7.155331611633301
    7. 'python' → logprob: -7.905331611633301
    8. 'chaine' → logprob: -8.2803316116333
    9. 'string' → logprob: -8.4053316116333
    10. 'mess' → logprob: -8.9053316116333

Token 472: ' sont' (ID: 5242)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.6845897436141968
    2. 'a' → logprob: -1.0595897436141968
    3. ' a' → logprob: -2.8095898628234863
    4. ' are' → logprob: -3.6845898628234863
    5. ' =' → logprob: -4.059589862823486
    6. 'message' → logprob: -4.684589862823486
    7. '[pos' → logprob: -5.934589862823486
    8. ' à' → logprob: -6.059589862823486
    9. ' message' → logprob: -6.059589862823486
    10. '=' → logprob: -6.059589862823486

Token 473: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3413403630256653
    2. ' a' → logprob: -1.3413403034210205
    3. '[a' → logprob: -3.8413403034210205
    4. ' [' → logprob: -5.5913405418396
    5. '[' → logprob: -6.8413405418396
    6. '           ' → logprob: -7.7163405418396
    7. '   ' → logprob: -7.9663405418396
    8. '    ' → logprob: -9.091340065002441
    9. ' ' → logprob: -9.466340065002441
    10. '```' → logprob: -10.091340065002441

Token 474: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.30443522334098816
    2. ' -' → logprob: -1.4294352531433105
    3. '           ' → logprob: -5.4294352531433105
    4. '+' → logprob: -5.9294352531433105
    5. ' +' → logprob: -6.1794352531433105
    6. ']' → logprob: -6.4294352531433105
    7. 'a' → logprob: -6.4294352531433105
    8. ':' → logprob: -6.8044352531433105
    9. '[' → logprob: -6.8044352531433105
    10. ' ' → logprob: -6.9294352531433105

Token 475: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00029828163678757846
    2. ' ' → logprob: -8.125298500061035
    3. '           ' → logprob: -13.500298500061035
    4. '```' → logprob: -15.125298500061035
    5. '   ' → logprob: -15.500298500061035
    6. '2' → logprob: -16.62529754638672
    7. ',' → logprob: -16.75029754638672
    8. '                   ' → logprob: -17.62529754638672
    9. '               ' → logprob: -17.75029754638672
    10. '       ' → logprob: -17.87529754638672

Token 476: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3142719566822052
    2. ',' → logprob: -1.4392719268798828
    3. ' and' → logprob: -4.439271926879883
    4. ']' → logprob: -4.939271926879883
    5. ' ,' → logprob: -4.939271926879883
    6. '][' → logprob: -6.189271926879883
    7. '<|end|>' → logprob: -7.064271926879883
    8. '            
' → logprob: -7.314271926879883
    9. '],' → logprob: -7.564271926879883
    10. ':' → logprob: -7.814271926879883

Token 477: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6942118406295776
    2. ' b' → logprob: -0.6942118406295776
    3. 'a' → logprob: -7.194211959838867
    4. ' a' → logprob: -8.694211959838867
    5. '           ' → logprob: -9.319211959838867
    6. '    ' → logprob: -10.819211959838867
    7. '            ' → logprob: -11.069211959838867
    8. '   ' → logprob: -12.694211959838867
    9. '	b' → logprob: -13.069211959838867
    10. '        ' → logprob: -13.194211959838867

Token 478: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.043193183839321136
    2. ' -' → logprob: -3.1681931018829346
    3. '           ' → logprob: -8.793192863464355
    4. '[' → logprob: -11.668192863464355
    5. ' ' → logprob: -12.043192863464355
    6. '   ' → logprob: -12.543192863464355
    7. ',' → logprob: -12.793192863464355
    8. '<|end|>' → logprob: -12.793192863464355
    9. '1' → logprob: -12.918192863464355
    10. '       ' → logprob: -13.293192863464355

Token 479: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.652451464906335e-05
    2. ' ' → logprob: -11.375016212463379
    3. '```' → logprob: -13.000016212463379
    4. 'a' → logprob: -14.375016212463379
    5. '2' → logprob: -14.375016212463379
    6. '１' → logprob: -15.250016212463379
    7. '<|end|>' → logprob: -15.625016212463379
    8. 'b' → logprob: -15.625016212463379
    9. '<|end|>' → logprob: -15.625016212463379
    10. '   ' → logprob: -16.000017166137695

Token 480: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002933364361524582
    2. '
' → logprob: -6.377933502197266
    3. '            
' → logprob: -7.127933502197266
    4. 'message' → logprob: -8.627933502197266
    5. '       ' → logprob: -9.627933502197266
    6. '    
' → logprob: -9.877933502197266
    7. '        
' → logprob: -10.752933502197266
    8. '   ' → logprob: -10.877933502197266
    9. ',' → logprob: -10.877933502197266
    10. ' for' → logprob: -11.252933502197266

Token 481: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0010752035304903984
    2. '
' → logprob: -7.876075267791748
    3. '            
' → logprob: -7.876075267791748
    4. '       ' → logprob: -8.62607479095459
    5. 'message' → logprob: -9.50107479095459
    6. '        
' → logprob: -11.00107479095459
    7. '    
' → logprob: -11.37607479095459
    8. '   ' → logprob: -11.50107479095459
    9. ' message' → logprob: -12.37607479095459
    10. ',' → logprob: -12.62607479095459

Token 482: ' a' (ID: 261)
  Prédit: 'message'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'message' → logprob: -0.001978714717552066
    2. ' message' → logprob: -6.626978874206543
    3. '           ' → logprob: -7.501978874206543
    4. 'for' → logprob: -9.876978874206543
    5. '   ' → logprob: -10.251978874206543
    6. '       ' → logprob: -12.251978874206543
    7. '               ' → logprob: -12.751978874206543
    8. 'msg' → logprob: -13.626978874206543
    9. '	message' → logprob: -13.751978874206543
    10. 'c' → logprob: -14.251978874206543

Token 483: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.5646107196807861
    2. '_char' → logprob: -1.5646107196807861
    3. '-' → logprob: -2.064610719680786
    4. '_pos' → logprob: -2.564610719680786
    5. ',' → logprob: -4.814610481262207
    6. '_i' → logprob: -6.064610481262207
    7. '_index' → logprob: -6.439610481262207
    8. '_c' → logprob: -6.564610481262207
    9. 'pos' → logprob: -7.064610481262207
    10. 'char' → logprob: -7.064610481262207

Token 484: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47522222995758057
    2. '=' → logprob: -0.9752222299575806
    3. ',' → logprob: -6.975222110748291
    4. '=a' → logprob: -8.72522258758545
    5. '-' → logprob: -11.35022258758545
    6. ',a' → logprob: -11.85022258758545
    7. ' ,' → logprob: -11.97522258758545
    8. ' ' → logprob: -12.35022258758545
    9. ' -' → logprob: -12.60022258758545
    10. ']' → logprob: -12.85022258758545

Token 485: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0019286326132714748
    2. ' a' → logprob: -6.251928806304932
    3. '   ' → logprob: -17.751928329467773
    4. '	a' → logprob: -18.251928329467773
    5. '(a' → logprob: -20.126928329467773
    6. '[a' → logprob: -20.876928329467773
    7. '_a' → logprob: -21.501928329467773
    8. ' ' → logprob: -21.501928329467773
    9. '           ' → logprob: -21.751928329467773
    10. ''a' → logprob: -23.001928329467773

Token 486: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5759421586990356
    2. '-' → logprob: -0.8259421586990356
    3. ' ' → logprob: -13.950942039489746
    4. '   ' → logprob: -14.450942039489746
    5. '           ' → logprob: -14.700942039489746
    6. '1' → logprob: -15.575942039489746
    7. '[' → logprob: -15.950942039489746
    8. '–' → logprob: -15.950942039489746
    9. '−' → logprob: -15.950942039489746
    10. '       ' → logprob: -16.200942993164062

Token 487: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '```' → logprob: -18.125001907348633
    4. '   ' → logprob: -18.625001907348633
    5. '１' → logprob: -19.000001907348633
    6. '<|end|>' → logprob: -19.375001907348633
    7. '۱' → logprob: -20.125001907348633
    8. '=' → logprob: -20.125001907348633
    9. '१' → logprob: -20.312501907348633
    10. '`' → logprob: -21.062501907348633

Token 488: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.00000286102295
    3. '```' → logprob: -16.875001907348633
    4. '<|end|>' → logprob: -17.750001907348633
    5. '   ' → logprob: -18.125001907348633
    6. '１' → logprob: -18.437501907348633
    7. 'def' → logprob: -19.000001907348633
    8. '=' → logprob: -19.250001907348633
    9. '۱' → logprob: -19.312501907348633
    10. '१' → logprob: -19.437501907348633

Token 489: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0015768787125125527
    2. 'b' → logprob: -6.501576900482178
    3. '       ' → logprob: -10.12657642364502
    4. '   ' → logprob: -11.37657642364502
    5. ',' → logprob: -11.37657642364502
    6. ' b' → logprob: -12.00157642364502
    7. '	b' → logprob: -13.62657642364502
    8. ',b' → logprob: -13.75157642364502
    9. '		' → logprob: -14.12657642364502
    10. '          ' → logprob: -14.50157642364502

Token 490: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04901764914393425
    2. 'b' → logprob: -3.0490176677703857
    3. ' b' → logprob: -7.799017429351807
    4. '	b' → logprob: -11.549017906188965
    5. '   ' → logprob: -12.674017906188965
    6. '		' → logprob: -12.924017906188965
    7. '       ' → logprob: -13.174017906188965
    8. '	       ' → logprob: -13.924017906188965
    9. '          ' → logprob: -14.674017906188965
    10. ' ' → logprob: -14.924017906188965

Token 491: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.011055483482778072
    2. ' b' → logprob: -4.5110554695129395
    3. '   ' → logprob: -12.386055946350098
    4. '           ' → logprob: -13.011055946350098
    5. '	b' → logprob: -13.761055946350098
    6. '       ' → logprob: -15.886055946350098
    7. ' ' → logprob: -18.01105499267578
    8. '    ' → logprob: -18.76105499267578
    9. '  ' → logprob: -19.13605499267578
    10. ' ' → logprob: -19.76105499267578

Token 492: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.00019185843120794743
    2. '-' → logprob: -9.000191688537598
    3. '_' → logprob: -10.250191688537598
    4. '_IDX' → logprob: -11.250191688537598
    5. '	idx' → logprob: -12.375191688537598
    6. '_index' → logprob: -12.625191688537598
    7. 'idx' → logprob: -12.750191688537598
    8. ' -' → logprob: -13.625191688537598
    9. '_b' → logprob: -13.625191688537598
    10. '_idxs' → logprob: -13.750191688537598

Token 493: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.575939953327179
    2. ' =' → logprob: -0.825939953327179
    3. '=
' → logprob: -15.825940132141113
    4. '＝' → logprob: -16.325939178466797
    5. '=b' → logprob: -16.325939178466797
    6. ',' → logprob: -16.450939178466797
    7. ' =
' → logprob: -16.700939178466797
    8. ' ' → logprob: -16.950939178466797
    9. '   ' → logprob: -17.825939178466797
    10. 'b' → logprob: -18.575939178466797

Token 494: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.02324547804892063
    2. ' b' → logprob: -3.7732455730438232
    3. '   ' → logprob: -18.648244857788086
    4. '	b' → logprob: -18.773244857788086
    5. 'a' → logprob: -20.273244857788086
    6. ' б' → logprob: -20.273244857788086
    7. '           ' → logprob: -20.898244857788086
    8. 'B' → logprob: -20.898244857788086
    9. '(b' → logprob: -21.648244857788086
    10. '    ' → logprob: -21.773244857788086

Token 495: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.10021087527275085
    2. '-' → logprob: -2.3502109050750732
    3. 'b' → logprob: -13.100211143493652
    4. ' ' → logprob: -13.850211143493652
    5. '−' → logprob: -14.850211143493652
    6. '1' → logprob: -15.350211143493652
    7. '   ' → logprob: -15.475211143493652
    8. ' b' → logprob: -16.350210189819336
    9. 'def' → logprob: -16.725210189819336
    10. '–' → logprob: -16.725210189819336

Token 496: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.624555291840807e-05
    2. ' ' → logprob: -9.500076293945312
    3. '```' → logprob: -15.187576293945312
    4. '   ' → logprob: -16.125076293945312
    5. '11' → logprob: -16.125076293945312
    6. '۱' → logprob: -16.437576293945312
    7. '<|end|>' → logprob: -16.625076293945312
    8. '１' → logprob: -16.625076293945312
    9. '19' → logprob: -16.875076293945312
    10. '14' → logprob: -17.000076293945312

Token 497: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.125000953674316
    3. '2' → logprob: -15.812500953674316
    4. '１' → logprob: -16.3125
    5. '۱' → logprob: -16.6875
    6. '11' → logprob: -18.5625
    7. 'b' → logprob: -18.5625
    8. '१' → logprob: -18.6875
    9. '```' → logprob: -18.8125
    10. '0' → logprob: -18.8125

Token 498: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002210562350228429
    2. '
' → logprob: -6.50221061706543
    3. '            
' → logprob: -7.50221061706543
    4. '       ' → logprob: -10.00221061706543
    5. '    
' → logprob: -10.75221061706543
    6. '   ' → logprob: -10.75221061706543
    7. 'a' → logprob: -10.87721061706543
    8. '        
' → logprob: -11.00221061706543
    9. 'message' → logprob: -11.87721061706543
    10. '           
' → logprob: -12.25221061706543

Token 499: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007776394486427307
    2. 'message' → logprob: -5.507776260375977
    3. '       ' → logprob: -5.632776260375977
    4. ' message' → logprob: -9.757776260375977
    5. '   ' → logprob: -10.632776260375977
    6. '        
' → logprob: -12.007776260375977
    7. '            
' → logprob: -12.007776260375977
    8. 'for' → logprob: -12.007776260375977
    9. '
' → logprob: -13.132776260375977
    10. '```' → logprob: -13.132776260375977

Token 500: ' #' (ID: 1069)
  Prédit: 'message'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'message' → logprob: -0.018752526491880417
    2. ' message' → logprob: -4.643752574920654
    3. '           ' → logprob: -4.893752574920654
    4. '       ' → logprob: -7.268752574920654
    5. 'for' → logprob: -7.768752574920654
    6. '   ' → logprob: -8.643752098083496
    7. '#' (adapté à ' #') → logprob: -10.143752098083496
    8. 'if' → logprob: -10.268752098083496
    9. ' for' → logprob: -10.393752098083496
    10. 'c' → logprob: -11.018752098083496

Token 501: ' Av' (ID: 7541)
  Prédit: 'message'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'message' → logprob: -1.7954958821064793e-05
    2. '           ' → logprob: -11.375018119812012
    3. ' message' → logprob: -12.500018119812012
    4. 'for' → logprob: -13.125018119812012
    5. '#' → logprob: -15.250018119812012
    6. 'a' → logprob: -16.375017166137695
    7. '   ' → logprob: -16.500017166137695
    8. 'msg' → logprob: -16.625017166137695
    9. '               ' → logprob: -16.875017166137695
    10. '       ' → logprob: -17.000017166137695

Token 502: 'ancer' (ID: 13358)
  Prédit: 'ancer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ancer' → logprob: -0.025593597441911697
    2. 'ance' → logprob: -3.7755935192108154
    3. 'er' → logprob: -6.1505937576293945
    4. '       ' → logprob: -10.025593757629395
    5. 'encer' → logprob: -10.775593757629395
    6. 'anc' → logprob: -10.900593757629395
    7. '   ' → logprob: -11.275593757629395
    8. 'anç' → logprob: -11.275593757629395
    9. '           ' → logprob: -11.525593757629395
    10. 'ancement' → logprob: -11.525593757629395

Token 503: ' les' (ID: 1341)
  Prédit: 'message'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'message' → logprob: -0.23894424736499786
    2. '(message' → logprob: -1.6139442920684814
    3. ' message' → logprob: -4.613944053649902
    4. '           ' → logprob: -6.738944053649902
    5. ')' → logprob: -7.613944053649902
    6. '       ' → logprob: -7.738944053649902
    7. '   ' → logprob: -8.113944053649902
    8. 'for' → logprob: -8.113944053649902
    9. '(' → logprob: -8.863944053649902
    10. '=' → logprob: -8.988944053649902

Token 504: ' deux' (ID: 10301)
  Prédit: 'message'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'message' → logprob: -0.002068302594125271
    2. ' message' → logprob: -6.877068519592285
    3. 'car' → logprob: -7.752068519592285
    4. 'def' → logprob: -9.377068519592285
    5. 'c' → logprob: -9.627068519592285
    6. '#' → logprob: -9.877068519592285
    7. 'a' → logprob: -10.252068519592285
    8. 'letter' → logprob: -10.377068519592285
    9. 'lett' → logprob: -10.752068519592285
    10. 'msg' → logprob: -10.877068519592285

Token 505: ' lettres' (ID: 101234)
  Prédit: 'message'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'message' → logprob: -0.3447883129119873
    2. ' message' → logprob: -1.8447883129119873
    3. '(message' → logprob: -3.2197883129119873
    4. ')' → logprob: -3.9697883129119873
    5. 'letters' → logprob: -3.9697883129119873
    6. ' letters' → logprob: -4.219788551330566
    7. '           ' → logprob: -4.719788551330566
    8. ']' → logprob: -5.469788551330566
    9. 'positions' → logprob: -5.719788551330566
    10. ' lettres' → logprob: -5.969788551330566

Token 506: ' du' (ID: 1462)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09043868631124496
    2. 'message' → logprob: -2.9654386043548584
    3. '       ' → logprob: -3.5904386043548584
    4. ' message' → logprob: -5.3404388427734375
    5. '[' → logprob: -6.5904388427734375
    6. '(message' → logprob: -7.8404388427734375
    7. 'for' → logprob: -7.9654388427734375
    8. ' for' → logprob: -8.965438842773438
    9. '   ' → logprob: -9.090438842773438
    10. ' =' → logprob: -10.465438842773438

Token 507: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.29284724593162537
    2. '-' → logprob: -1.5428472757339478
    3. '1' → logprob: -3.792847156524658
    4. ' diff' → logprob: -5.667847156524658
    5. '-c' → logprob: -5.667847156524658
    6. ' -' → logprob: -6.042847156524658
    7. 'message' → logprob: -6.917847156524658
    8. '(-' → logprob: -7.042847156524658
    9. ' ' → logprob: -7.167847156524658
    10. '-d' → logprob: -7.292847156524658

Token 508: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03965039923787117
    2. 'message' → logprob: -3.6646504402160645
    3. '       ' → logprob: -4.5396504402160645
    4. ' message' → logprob: -6.2896504402160645
    5. ' for' → logprob: -8.539649963378906
    6. '
' → logprob: -8.539649963378906
    7. 'for' → logprob: -9.164649963378906
    8. '   ' → logprob: -10.039649963378906
    9. 'def' → logprob: -10.289649963378906
    10. '            
' → logprob: -10.539649963378906

Token 509: 'car' (ID: 6830)
  Prédit: 'message'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'message' → logprob: -0.01681605540215969
    2. ')' → logprob: -4.641816139221191
    3. ' message' → logprob: -5.141816139221191
    4. '           ' → logprob: -7.141816139221191
    5. 'def' → logprob: -8.391816139221191
    6. '               ' → logprob: -10.141816139221191
    7. ')
' → logprob: -10.641816139221191
    8. 'for' → logprob: -11.016816139221191
    9. '):' → logprob: -11.641816139221191
    10. '   ' → logprob: -11.641816139221191

Token 510: ' en' (ID: 469)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.08578608930110931
    2. ' on' → logprob: -4.085785865783691
    3. 'on' → logprob: -4.335785865783691
    4. ' diff' → logprob: -4.710785865783691
    5. '           ' → logprob: -5.335785865783691
    6. '-' → logprob: -5.460785865783691
    7. 'for' → logprob: -5.585785865783691
    8. 'c' → logprob: -5.710785865783691
    9. '#' → logprob: -5.835785865783691
    10. 'le' → logprob: -5.960785865783691

Token 511: ' chiff' (ID: 54892)
  Prédit: 'shift'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'shift' → logprob: -1.088926076889038
    2. 'diff' → logprob: -1.713926076889038
    3. 're' → logprob: -1.963926076889038
    4. ' recul' → logprob: -2.213926076889038
    5. 'rec' → logprob: -2.713926076889038
    6. 'decrypt' → logprob: -3.338926076889038
    7. 'dé' → logprob: -3.713926076889038
    8. 'de' → logprob: -3.963926076889038
    9. 'reverse' → logprob: -3.963926076889038
    10. '#' → logprob: -4.338926315307617

Token 512: 'rement' (ID: 66132)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.19828853011131287
    2. 'rement' → logprob: -1.8232885599136353
    3. 'r' → logprob: -5.573288440704346
    4. '           ' → logprob: -6.073288440704346
    5. 'ering' → logprob: -6.323288440704346
    6. '   ' → logprob: -6.698288440704346
    7. '       ' → logprob: -6.823288440704346
    8. 'é' → logprob: -6.948288440704346
    9. ')' → logprob: -6.948288440704346
    10. 'ment' → logprob: -7.198288440704346

Token 513: ' on' (ID: 402)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.087193250656128
    2. ',' → logprob: -1.212193250656128
    3. '           ' → logprob: -1.337193250656128
    4. ' on' → logprob: -3.712193250656128
    5. '               ' → logprob: -4.087193489074707
    6. '),' → logprob: -4.587193489074707
    7. '       ' → logprob: -4.587193489074707
    8. ' ,' → logprob: -4.837193489074707
    9. '   ' → logprob: -4.962193489074707
    10. ' )' → logprob: -5.212193489074707

Token 514: ' a' (ID: 261)
  Prédit: ' rec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rec' → logprob: -0.29913732409477234
    2. 're' → logprob: -1.7991373538970947
    3. 'rec' → logprob: -2.4241373538970947
    4. ' recul' → logprob: -6.549137115478516
    5. '   ' → logprob: -7.174137115478516
    6. 'shift' → logprob: -7.549137115478516
    7. ')' → logprob: -7.674137115478516
    8. 'a' → logprob: -8.049137115478516
    9. ' a' → logprob: -9.049137115478516
    10. '       ' → logprob: -9.049137115478516

Token 515: ' rec' (ID: 1369)
  Prédit: ' rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rec' → logprob: -0.10270413756370544
    2. 're' → logprob: -2.8527040481567383
    3. ' recul' → logprob: -4.102704048156738
    4. 'rec' → logprob: -4.352704048156738
    5. 'shift' → logprob: -5.477704048156738
    6. ' ' → logprob: -6.477704048156738
    7. '   ' → logprob: -6.602704048156738
    8. ' shift' → logprob: -6.602704048156738
    9. ')' → logprob: -7.477704048156738
    10. 'dé' → logprob: -7.977704048156738

Token 516: 'ulé' (ID: 147268)
  Prédit: 'ule'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.5150543451309204
    2. 'uler' → logprob: -1.7650543451309204
    3. 'ulé' → logprob: -2.265054225921631
    4. '       ' → logprob: -2.640054225921631
    5. '           ' → logprob: -4.140054225921631
    6. '   ' → logprob: -4.390054225921631
    7. 'ar' → logprob: -5.015054225921631
    8. 'har' → logprob: -5.640054225921631
    9. 'ed' → logprob: -5.890054225921631
    10. 'h' → logprob: -6.515054225921631

Token 517: ',' (ID: 11)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.7718714475631714
    2. ')' → logprob: -0.8968714475631714
    3. '           ' → logprob: -2.896871566772461
    4. 'de' → logprob: -4.021871566772461
    5. ' d' → logprob: -4.521871566772461
    6. ',' → logprob: -4.771871566772461
    7. ' les' → logprob: -4.771871566772461
    8. ' leurs' → logprob: -4.771871566772461
    9. ' )' → logprob: -5.021871566772461
    10. 'd' → logprob: -6.521871566772461

Token 518: ' donc' (ID: 14206)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03980094566941261
    2. ' donc' → logprob: -3.7898008823394775
    3. ')' → logprob: -5.164801120758057
    4. '#' → logprob: -6.039801120758057
    5. '       ' → logprob: -6.289801120758057
    6. '               ' → logprob: -6.664801120758057
    7. '            ' → logprob: -6.789801120758057
    8. ' so' → logprob: -8.039800643920898
    9. ' c' → logprob: -8.039800643920898
    10. 'c' → logprob: -8.289800643920898

Token 519: ' inverse' (ID: 53743)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'on' → logprob: -1.1612118482589722
    2. '           ' → logprob: -1.6612118482589722
    3. ' on' → logprob: -1.7862118482589722
    4. 'def' → logprob: -2.9112119674682617
    5. 'il' → logprob: -3.0362119674682617
    6. ' il' → logprob: -3.2862119674682617
    7. 'for' → logprob: -3.4112119674682617
    8. 'shift' → logprob: -3.7862119674682617
    9. '       ' → logprob: -4.161211967468262
    10. 'message' → logprob: -4.161211967468262

Token 520: ' est' (ID: 893)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1981978863477707
    2. ')
' → logprob: -2.448197841644287
    3. ')' → logprob: -2.573197841644287
    4. '):
' → logprob: -5.323197841644287
    5. '               ' → logprob: -5.823197841644287
    6. '       ' → logprob: -6.198197841644287
    7. 'message' → logprob: -6.198197841644287
    8. '):' → logprob: -6.323197841644287
    9. ',' → logprob: -7.573197841644287
    10. '   ' → logprob: -7.698197841644287

Token 521: ' avancer' (ID: 151163)
  Prédit: 'shift'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shift' → logprob: -0.8314291834831238
    2. 'de' → logprob: -0.9564291834831238
    3. ' shift' → logprob: -3.2064292430877686
    4. ' de' → logprob: -3.2064292430877686
    5. 'd' → logprob: -4.0814290046691895
    6. '           ' → logprob: -4.5814290046691895
    7. '   ' → logprob: -4.8314290046691895
    8. ' avancer' → logprob: -4.8314290046691895
    9. 'def' → logprob: -4.9564290046691895
    10. ' rec' → logprob: -4.9564290046691895

Token 522: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3479766845703125
    2. ')
' → logprob: -1.7229766845703125
    3. ')' → logprob: -2.2229766845703125
    4. ' )
' → logprob: -5.8479766845703125
    5. '):
' → logprob: -6.2229766845703125
    6. ' )' → logprob: -7.4729766845703125
    7. '               ' → logprob: -7.9729766845703125
    8. ',' → logprob: -8.222976684570312
    9. '):' → logprob: -8.347976684570312
    10. ' de' → logprob: -9.347976684570312

Token 523: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1731586903333664
    2. 'message' → logprob: -2.423158645629883
    3. '       ' → logprob: -2.798158645629883
    4. ' message' → logprob: -4.673158645629883
    5. '   ' → logprob: -9.548158645629883
    6. 'for' → logprob: -13.173158645629883
    7. '        
' → logprob: -13.298158645629883
    8. '               ' → logprob: -13.298158645629883
    9. ' for' → logprob: -13.423158645629883
    10. '	message' → logprob: -13.423158645629883

Token 524: ' #' (ID: 1069)
  Prédit: 'message'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'message' → logprob: -0.00432887626811862
    2. '           ' → logprob: -6.129328727722168
    3. ' message' → logprob: -6.629328727722168
    4. '       ' → logprob: -7.129328727722168
    5. '   ' → logprob: -11.004328727722168
    6. 'def' → logprob: -14.129328727722168
    7. '	message' → logprob: -14.504328727722168
    8. 'for' → logprob: -15.254328727722168
    9. '               ' → logprob: -15.254328727722168
    10. '_message' → logprob: -16.004329681396484

Token 525: ' Av' (ID: 7541)
  Prédit: 'message'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'message' → logprob: -0.025451358407735825
    2. '           ' → logprob: -4.400451183319092
    3. ' message' → logprob: -4.400451183319092
    4. '       ' → logprob: -7.525451183319092
    5. '   ' → logprob: -10.15045166015625
    6. 'for' → logprob: -12.90045166015625
    7. '	message' → logprob: -13.02545166015625
    8. 'def' → logprob: -14.77545166015625
    9. '_message' → logprob: -14.77545166015625
    10. ' for' → logprob: -14.90045166015625

Token 526: 'ancer' (ID: 13358)
  Prédit: 'ancer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ancer' → logprob: -0.0186097864061594
    2. 'ance' → logprob: -5.143610000610352
    3. 'ancé' → logprob: -5.143610000610352
    4. '           ' → logprob: -5.893610000610352
    5. 'anç' → logprob: -7.018610000610352
    6. 'er' → logprob: -7.018610000610352
    7. '       ' → logprob: -7.143610000610352
    8. 'anced' → logprob: -8.268610000610352
    9. 'anc' → logprob: -8.518610000610352
    10. 'a' → logprob: -8.893610000610352

Token 527: ' :' (ID: 712)
  Prédit: 'message'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'message' → logprob: -1.2231923341751099
    2. '(message' → logprob: -1.2231923341751099
    3. '           ' → logprob: -1.5981923341751099
    4. 'def' → logprob: -2.3481922149658203
    5. '       ' → logprob: -3.3481922149658203
    6. ' =' → logprob: -3.4731922149658203
    7. '=' → logprob: -4.09819221496582
    8. ')' → logprob: -4.84819221496582
    9. '   ' → logprob: -5.22319221496582
    10. ' message' → logprob: -5.47319221496582

Token 528: ' c' (ID: 274)
  Prédit: 'message'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'message' → logprob: -0.08983913064002991
    2. 'def' → logprob: -3.089839220046997
    3. ' message' → logprob: -3.714839220046997
    4. '           ' → logprob: -4.339838981628418
    5. 'shift' → logprob: -7.089838981628418
    6. ' def' → logprob: -7.089838981628418
    7. 'for' → logprob: -7.839838981628418
    8. '       ' → logprob: -8.714838981628418
    9. '               ' → logprob: -8.714838981628418
    10. '   ' → logprob: -8.964838981628418

Token 529: ' →' (ID: 15155)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.41678428649902344
    2. '=' → logprob: -1.4167842864990234
    3. 'def' → logprob: -2.7917842864990234
    4. 'har' → logprob: -3.6667842864990234
    5. 'ode' → logprob: -5.916784286499023
    6. '_a' → logprob: -6.166784286499023
    7. '=lambda' → logprob: -6.541784286499023
    8. 'a' → logprob: -6.666784286499023
    9. '   ' → logprob: -7.666784286499023
    10. '_pos' → logprob: -7.916784286499023

Token 530: ' c' (ID: 274)
  Prédit: 'shift'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'shift' → logprob: -0.024149242788553238
    2. 'chr' → logprob: -3.899149179458618
    3. ' shift' → logprob: -5.899149417877197
    4. 'def' → logprob: -8.149148941040039
    5. '   ' → logprob: -8.524148941040039
    6. ' chr' → logprob: -8.774148941040039
    7. '(chr' → logprob: -9.899148941040039
    8. '(' → logprob: -10.024148941040039
    9. '    ' → logprob: -10.524148941040039
    10. 'ord' → logprob: -10.899148941040039

Token 531: '+' (ID: 10)
  Prédit: 'shift'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'shift' → logprob: -1.254942774772644
    2. ')' → logprob: -1.504942774772644
    3. 'def' → logprob: -1.754942774772644
    4. ' =' → logprob: -2.1299428939819336
    5. '(chr' → logprob: -3.1299428939819336
    6. '=' → logprob: -3.3799428939819336
    7. '(ord' → logprob: -3.5049428939819336
    8. ',' → logprob: -4.379942893981934
    9. 'chr' → logprob: -4.629942893981934
    10. '   ' → logprob: -4.879942893981934

Token 532: 'diff' (ID: 31460)
  Prédit: 'diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.0007734165410511196
    2. ' diff' → logprob: -7.2507734298706055
    3. '1' → logprob: -10.250773429870605
    4. '(diff' → logprob: -11.125773429870605
    5. '	diff' → logprob: -11.375773429870605
    6. '_diff' → logprob: -14.000773429870605
    7. ' ' → logprob: -15.125773429870605
    8. '.diff' → logprob: -15.500773429870605
    9. 'dif' → logprob: -16.12577247619629
    10. '```' → logprob: -16.12577247619629

Token 533: ' modulo' (ID: 112372)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000540166103746742
    2. '
' → logprob: -7.875540256500244
    3. '       ' → logprob: -9.500539779663086
    4. 'message' → logprob: -10.250539779663086
    5. ',' → logprob: -11.125539779663086
    6. 'def' → logprob: -11.500539779663086
    7. 'a' → logprob: -12.500539779663086
    8. '               ' → logprob: -12.500539779663086
    9. '            
' → logprob: -12.500539779663086
    10. '   ' → logprob: -13.000539779663086

Token 534: ',' (ID: 11)
  Prédit: '26'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -0.01251271367073059
    2. ' ' → logprob: -4.387512683868408
    3. '```' → logprob: -14.512513160705566
    4. 'abcdefghijklmnopqrstuvwxyz' → logprob: -14.637513160705566
    5. '27' → logprob: -14.762513160705566
    6. '(' → logprob: -15.012513160705566
    7. ' alphabet' → logprob: -15.012513160705566
    8. ' (' → logprob: -15.262513160705566
    9. '('' → logprob: -15.762513160705566
    10. ',' → logprob: -15.887513160705566

Token 535: ' mais' (ID: 2899)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.1230944395065308
    2. 'def' → logprob: -1.3730944395065308
    3. 'c' → logprob: -1.9980944395065308
    4. ' c' → logprob: -2.4980945587158203
    5. '       ' → logprob: -3.2480945587158203
    6. 'chr' → logprob: -3.6230945587158203
    7. 'new' → logprob: -3.9980945587158203
    8. ')' → logprob: -3.9980945587158203
    9. '               ' → logprob: -4.12309455871582
    10. '            ' → logprob: -4.37309455871582

Token 536: ' comme' (ID: 7971)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7050641775131226
    2. 'def' → logprob: -1.2050641775131226
    3. 'diff' → logprob: -2.580064296722412
    4. ' c' → logprob: -3.580064296722412
    5. '       ' → logprob: -4.330064296722412
    6. 'c' → logprob: -4.455064296722412
    7. '#' → logprob: -4.455064296722412
    8. ' def' → logprob: -4.955064296722412
    9. 'new' → logprob: -5.705064296722412
    10. 'pass' → logprob: -5.705064296722412

Token 537: ' on' (ID: 402)
  Prédit: 'shift'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shift' → logprob: -0.5325518846511841
    2. 'diff' → logprob: -1.157551884651184
    3. 'on' → logprob: -3.4075517654418945
    4. 'le' → logprob: -3.6575517654418945
    5. 'def' → logprob: -4.0325517654418945
    6. ' shift' → logprob: -4.9075517654418945
    7. ' on' → logprob: -5.7825517654418945
    8. '#' → logprob: -6.0325517654418945
    9. 'c' → logprob: -6.4075517654418945
    10. ' le' → logprob: -6.5325517654418945

Token 538: ' a' (ID: 261)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 're' → logprob: -1.000478744506836
    2. 'a' → logprob: -1.250478744506836
    3. 'rec' → logprob: -1.875478744506836
    4. ' rec' → logprob: -3.500478744506836
    5. 'do' → logprob: -3.625478744506836
    6. '#' → logprob: -3.750478744506836
    7. 'def' → logprob: -3.750478744506836
    8. 'have' → logprob: -3.875478744506836
    9. 'n' → logprob: -4.250478744506836
    10. 'has' → logprob: -4.500478744506836

Token 539: ' fait' (ID: 7473)
  Prédit: 'shift'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'shift' → logprob: -0.2720949947834015
    2. 'def' → logprob: -3.022094964981079
    3. 'le' → logprob: -3.147094964981079
    4. 're' → logprob: -3.272094964981079
    5. 'dé' → logprob: -3.397094964981079
    6. 'rec' → logprob: -3.522094964981079
    7. ' shift' → logprob: -4.272095203399658
    8. 'util' → logprob: -5.147095203399658
    9. ' rec' → logprob: -5.647095203399658
    10. 'used' → logprob: -5.772095203399658

Token 540: ' rec' (ID: 1369)
  Prédit: 'shift'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shift' → logprob: -0.6014087796211243
    2. ' shift' → logprob: -1.2264087200164795
    3. 'le' → logprob: -3.2264087200164795
    4. 'un' → logprob: -3.8514087200164795
    5. ' rec' → logprob: -3.8514087200164795
    6. ' un' → logprob: -4.101408958435059
    7. 'def' → logprob: -4.226408958435059
    8. ' le' → logprob: -4.226408958435059
    9. ' ' → logprob: -5.351408958435059
    10. ' recul' → logprob: -5.351408958435059

Token 541: 'uler' (ID: 11802)
  Prédit: 'uler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uler' → logprob: -0.05789526551961899
    2. 'ul' → logprob: -2.9328951835632324
    3. 'ule' → logprob: -6.057895183563232
    4. 'ulé' → logprob: -8.30789566040039
    5. 'u' → logprob: -8.55789566040039
    6. '(' → logprob: -9.43289566040039
    7. '(c' → logprob: -10.18289566040039
    8. 'ur' → logprob: -11.05789566040039
    9. 'ular' → logprob: -11.30789566040039
    10. '(u' → logprob: -11.43289566040039

Token 542: ' dans' (ID: 2671)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -1.4383361339569092
    2. '           ' → logprob: -1.9383361339569092
    3. 'de' → logprob: -1.9383361339569092
    4. 'c' → logprob: -2.188336133956909
    5. ' de' → logprob: -2.188336133956909
    6. ' c' → logprob: -2.688336133956909
    7. 'le' → logprob: -3.563336133956909
    8. 'def' → logprob: -3.688336133956909
    9. ' le' → logprob: -4.188336372375488
    10. 'les' → logprob: -4.563336372375488

Token 543: ' le' (ID: 505)
  Prédit: 'shift'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shift' → logprob: -0.02900872193276882
    2. 'le' → logprob: -3.779008626937866
    3. 'la' → logprob: -6.404008865356445
    4. 'l' → logprob: -6.529008865356445
    5. ' shift' → logprob: -6.654008865356445
    6. ' le' → logprob: -8.029008865356445
    7. '#' → logprob: -8.154008865356445
    8. '   ' → logprob: -8.404008865356445
    9. 'def' → logprob: -8.904008865356445
    10. 'reverse' → logprob: -9.529008865356445

Token 544: ' chiff' (ID: 54892)
  Prédit: 'shift'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'shift' → logprob: -0.007823098450899124
    2. 'def' → logprob: -6.0078229904174805
    3. 'code' → logprob: -6.0078229904174805
    4. 'cipher' → logprob: -7.3828229904174805
    5. 'diff' → logprob: -7.6328229904174805
    6. ' shift' → logprob: -7.7578229904174805
    7. 'ch' → logprob: -8.63282299041748
    8. 'c' → logprob: -8.75782299041748
    9. 'dé' → logprob: -8.75782299041748
    10. '#' → logprob: -8.88282299041748

Token 545: 'rement' (ID: 66132)
  Prédit: 'rement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rement' → logprob: -0.15261957049369812
    2. 'er' → logprob: -2.6526196002960205
    3. 'é' → logprob: -3.5276196002960205
    4. 'et' → logprob: -4.777619361877441
    5. 'ret' → logprob: -5.527619361877441
    6. 're' → logprob: -5.652619361877441
    7. 'ar' → logprob: -5.777619361877441
    8. 'ément' → logprob: -6.027619361877441
    9. 'ier' → logprob: -6.027619361877441
    10. 'ér' → logprob: -6.277619361877441

Token 546: ',
' (ID: 412)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02807123400270939
    2. ',' → logprob: -3.653071165084839
    3. 'def' → logprob: -7.403071403503418
    4. '               ' → logprob: -8.153071403503418
    5. ' on' → logprob: -8.778071403503418
    6. ')' → logprob: -9.278071403503418
    7. '
' → logprob: -9.403071403503418
    8. ' ,' → logprob: -9.528071403503418
    9. '#' → logprob: -9.778071403503418
    10. '   ' → logprob: -9.903071403503418

Token 547: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00440483633428812
    2. '       ' → logprob: -5.7544050216674805
    3. 'message' → logprob: -7.1294050216674805
    4. ' message' → logprob: -8.50440502166748
    5. '#' → logprob: -9.75440502166748
    6. '   ' → logprob: -10.00440502166748
    7. '               ' → logprob: -10.62940502166748
    8. '            ' → logprob: -10.62940502166748
    9. 'def' → logprob: -11.25440502166748
    10. ')' → logprob: -11.62940502166748

Token 548: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02068961039185524
    2. '       ' → logprob: -4.770689487457275
    3. 'message' → logprob: -4.770689487457275
    4. 'def' → logprob: -5.895689487457275
    5. ' message' → logprob: -8.145689964294434
    6. '   ' → logprob: -8.645689964294434
    7. '               ' → logprob: -8.895689964294434
    8. 'c' → logprob: -10.020689964294434
    9. '#' (adapté à ' #') → logprob: -10.395689964294434
    10. ' def' → logprob: -11.020689964294434

Token 549: ' ici' (ID: 27994)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6726495623588562
    2. 'message' → logprob: -0.7976495623588562
    3. ' message' → logprob: -3.922649621963501
    4. '       ' → logprob: -4.672649383544922
    5. 'def' → logprob: -5.047649383544922
    6. '   ' → logprob: -5.797649383544922
    7. '#' → logprob: -8.547649383544922
    8. ' def' → logprob: -9.172649383544922
    9. 'decrypt' → logprob: -9.672649383544922
    10. '               ' → logprob: -9.797649383544922

Token 550: ' on' (ID: 402)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.020810576155781746
    2. 'message' → logprob: -5.020810604095459
    3. '       ' → logprob: -5.145810604095459
    4. ' message' → logprob: -6.145810604095459
    5. ' c' → logprob: -6.520810604095459
    6. 'def' → logprob: -6.770810604095459
    7. '               ' → logprob: -6.770810604095459
    8. ',' → logprob: -7.520810604095459
    9. ' on' → logprob: -8.0208101272583
    10. ')' → logprob: -8.1458101272583

Token 551: ' fait' (ID: 7473)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.34598663449287415
    2. '       ' → logprob: -2.5959866046905518
    3. 'do' → logprob: -3.3459866046905518
    4. '           ' → logprob: -3.3459866046905518
    5. 'util' → logprob: -3.7209866046905518
    6. 'continue' → logprob: -4.095986843109131
    7. ' va' → logprob: -4.720986843109131
    8. '#' → logprob: -4.845986843109131
    9. ' doit' → logprob: -4.845986843109131
    10. 'app' → logprob: -4.970986843109131

Token 552: ' avancer' (ID: 151163)
  Prédit: 'shift'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'shift' → logprob: -0.22562706470489502
    2. 'def' → logprob: -2.6006269454956055
    3. ' shift' → logprob: -3.1006269454956055
    4. '       ' → logprob: -3.7256269454956055
    5. '           ' → logprob: -3.8506269454956055
    6. 'c' → logprob: -4.1006269454956055
    7. 'lambda' → logprob: -5.3506269454956055
    8. ' c' → logprob: -5.6006269454956055
    9. 'return' → logprob: -5.8506269454956055
    10. '   ' → logprob: -5.8506269454956055

Token 553: '.
' (ID: 558)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22799815237522125
    2. '(message' → logprob: -2.1029982566833496
    3. '       ' → logprob: -3.6029982566833496
    4. 'message' → logprob: -3.9779982566833496
    5. 'def' → logprob: -4.85299825668335
    6. '               ' → logprob: -4.85299825668335
    7. ' (' → logprob: -4.97799825668335
    8. ')' → logprob: -6.10299825668335
    9. '(c' → logprob: -6.10299825668335
    10. ' message' → logprob: -6.60299825668335

Token 554: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -4.1080467781284824e-05
    2. '       ' → logprob: -10.500041007995605
    3. 'def' → logprob: -12.250041007995605
    4. 'message' → logprob: -12.250041007995605
    5. '               ' → logprob: -14.000041007995605
    6. '
' → logprob: -14.250041007995605
    7. '            
' → logprob: -14.250041007995605
    8. ' message' → logprob: -14.875041007995605
    9. '		' → logprob: -15.000041007995605
    10. '   ' → logprob: -15.125041007995605

Token 555: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006926835514605045
    2. 'def' → logprob: -5.131927013397217
    3. '       ' → logprob: -7.506927013397217
    4. ' def' → logprob: -8.256926536560059
    5. 'message' → logprob: -8.881926536560059
    6. ' message' → logprob: -10.381926536560059
    7. '               ' → logprob: -11.881926536560059
    8. '   ' → logprob: -12.131926536560059
    9. '```' → logprob: -14.131926536560059
    10. 'for' → logprob: -14.256926536560059

Token 556: ' Mais' (ID: 13880)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04655199497938156
    2. 'message' → logprob: -3.6715519428253174
    3. 'def' → logprob: -4.0465521812438965
    4. '       ' → logprob: -6.0465521812438965
    5. ' message' → logprob: -9.546551704406738
    6. '   ' → logprob: -9.796551704406738
    7. 'for' → logprob: -10.796551704406738
    8. ' def' → logprob: -11.171551704406738
    9. 'a' → logprob: -11.171551704406738
    10. '               ' → logprob: -11.796551704406738

Token 557: ' dans' (ID: 2671)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.15169358253479
    2. 'message' → logprob: -1.27669358253479
    3. 'def' → logprob: -1.65169358253479
    4. '       ' → logprob: -2.40169358253479
    5. ' message' → logprob: -2.77669358253479
    6. ' def' → logprob: -3.77669358253479
    7. '   ' → logprob: -4.151693344116211
    8. 'for' → logprob: -5.526693344116211
    9. ' for' → logprob: -5.776693344116211
    10. '               ' → logprob: -6.026693344116211

Token 558: ' l' (ID: 305)
  Prédit: 'shift'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'shift' → logprob: -0.13330350816249847
    2. '#' → logprob: -3.63330340385437
    3. 'def' → logprob: -3.63330340385437
    4. 'diff' → logprob: -4.008303642272949
    5. 'le' → logprob: -4.508303642272949
    6. ' shift' → logprob: -4.633303642272949
    7. 'decrypt' → logprob: -4.883303642272949
    8. 'range' → logprob: -4.883303642272949
    9. 'for' → logprob: -5.008303642272949
    10. 'len' → logprob: -6.383303642272949

Token 559: ''ex' (ID: 23472)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6695095896720886
    2. 'range' → logprob: -1.9195096492767334
    3. ' for' → logprob: -2.2945096492767334
    4. '           ' → logprob: -2.6695096492767334
    5. 'def' → logprob: -2.6695096492767334
    6. ' range' → logprob: -3.9195096492767334
    7. '       ' → logprob: -3.9195096492767334
    8. '   ' → logprob: -4.794509410858154
    9. ' code' → logprob: -4.919509410858154
    10. '               ' → logprob: -4.919509410858154

Token 560: 'emple' (ID: 55259)
  Prédit: 'cept'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cept' → logprob: -0.4173057973384857
    2. 'trait' → logprob: -1.792305827140808
    3. 'planation' → logprob: -3.4173057079315186
    4. 'p' → logprob: -3.7923057079315186
    5. 'cerpt' → logprob: -3.9173057079315186
    6. 'pression' → logprob: -4.167305946350098
    7. '#' → logprob: -4.417305946350098
    8. 'pr' → logprob: -4.417305946350098
    9. 'plic' → logprob: -4.792305946350098
    10. 'ception' → logprob: -4.917305946350098

Token 561: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17400498688220978
    2. ',' → logprob: -2.5490050315856934
    3. ':' → logprob: -3.6740050315856934
    4. 'def' → logprob: -4.174005031585693
    5. '               ' → logprob: -4.299005031585693
    6. '       ' → logprob: -5.924005031585693
    7. ' c' → logprob: -6.049005031585693
    8. ' on' → logprob: -6.299005031585693
    9. ':
' → logprob: -6.424005031585693
    10. '#' → logprob: -6.549005031585693

Token 562: ' recul' (ID: 179913)
  Prédit: 'message'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'message' → logprob: -0.059041786938905716
    2. ' message' → logprob: -2.934041738510132
    3. '           ' → logprob: -5.684041976928711
    4. 'def' → logprob: -8.059041976928711
    5. 'for' → logprob: -8.434041976928711
    6. '   ' → logprob: -9.934041976928711
    7. '               ' → logprob: -10.059041976928711
    8. ' for' → logprob: -10.059041976928711
    9. '       ' → logprob: -10.934041976928711
    10. ' def' → logprob: -11.309041976928711

Token 563: ' est' (ID: 893)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5309969782829285
    2. '_back' → logprob: -1.5309970378875732
    3. '               ' → logprob: -2.2809970378875732
    4. '       ' → logprob: -3.6559970378875732
    5. 'def' → logprob: -4.030996799468994
    6. '                   ' → logprob: -5.030996799468994
    7. '   ' → logprob: -5.030996799468994
    8. ')' → logprob: -5.155996799468994
    9. '_backward' → logprob: -5.530996799468994
    10. 'back' → logprob: -5.530996799468994

Token 564: ' "' (ID: 392)
  Prédit: 'shift'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'shift' → logprob: -0.428931325674057
    2. 'fait' → logprob: -2.30393123626709
    3. 'diff' → logprob: -3.55393123626709
    4. ' effectué' → logprob: -3.55393123626709
    5. ' shift' → logprob: -3.67893123626709
    6. ' fait' → logprob: -3.80393123626709
    7. 'implemented' → logprob: -4.17893123626709
    8. 'conf' → logprob: -4.80393123626709
    9. 'le' → logprob: -4.80393123626709
    10. 'inverse' → logprob: -4.92893123626709

Token 565: '戻' (ID: 175677)
  Prédit: 'shift'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'shift' → logprob: -0.8241412043571472
    2. ')' → logprob: -1.199141263961792
    3. '           ' → logprob: -3.449141263961792
    4. 'ord' → logprob: -3.449141263961792
    5. ' shift' → logprob: -3.574141263961792
    6. 'def' → logprob: -3.699141263961792
    7. '       ' → logprob: -4.199141025543213
    8. '(ord' → logprob: -4.574141025543213
    9. '   ' → logprob: -4.824141025543213
    10. 'chr' → logprob: -4.824141025543213

Token 566: 'す' (ID: 4868)
  Prédit: 'す'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'す' → logprob: -0.20272822678089142
    2. 'し' → logprob: -2.077728271484375
    3. 'def' → logprob: -4.452728271484375
    4. ']' → logprob: -5.077728271484375
    5. '   ' → logprob: -5.452728271484375
    6. '）' → logprob: -5.452728271484375
    7. 'り' → logprob: -5.702728271484375
    8. ')' → logprob: -5.702728271484375
    9. 'っ' → logprob: -5.952728271484375
    10. 'け' → logprob: -6.077728271484375

Token 567: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.40392425656318665
    2. 'する' → logprob: -2.7789242267608643
    3. 'def' → logprob: -3.2789242267608643
    4. '")' → logprob: -3.7789242267608643
    5. '   ' → logprob: -4.028924465179443
    6. ' "' → logprob: -4.153924465179443
    7. 'の' → logprob: -4.403924465179443
    8. 'した' → logprob: -4.528924465179443
    9. '",' → logprob: -4.653924465179443
    10. ')' → logprob: -4.653924465179443

Token 568: ' qui' (ID: 2780)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06416875869035721
    2. '
' → logprob: -4.189168930053711
    3. '       ' → logprob: -4.689168930053711
    4. ',' → logprob: -4.689168930053711
    5. ')' → logprob: -5.064168930053711
    6. 'def' → logprob: -5.814168930053711
    7. '            
' → logprob: -5.814168930053711
    8. '   ' → logprob: -5.939168930053711
    9. ' for' → logprob: -6.689168930053711
    10. '               ' → logprob: -7.064168930053711

Token 569: ' signifie' (ID: 81149)
  Prédit: ' corresponds'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' corresponds' → logprob: -1.6599154472351074
    2. ' signifie' → logprob: -1.6599154472351074
    3. ' correspond' → logprob: -1.7849154472351074
    4. 'def' → logprob: -2.0349154472351074
    5. '#' → logprob: -2.5349154472351074
    6. ')' → logprob: -3.4099154472351074
    7. ' est' → logprob: -3.5349154472351074
    8. ' def' → logprob: -3.6599154472351074
    9. ' semble' → logprob: -3.9099154472351074
    10. 'n' → logprob: -4.034915447235107

Token 570: ' revenir' (ID: 88322)
  Prédit: ' rec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' rec' → logprob: -0.7951995134353638
    2. '"' → logprob: -1.5451995134353638
    3. ' avancer' → logprob: -2.045199394226074
    4. 'dé' → logprob: -2.670199394226074
    5. 'rec' → logprob: -3.295199394226074
    6. 'qu' → logprob: -3.920199394226074
    7. ' "' → logprob: -4.170199394226074
    8. 'de' → logprob: -4.420199394226074
    9. '「' → logprob: -5.545199394226074
    10. 'd' → logprob: -5.795199394226074

Token 571: ' en' (ID: 469)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09395067393779755
    2. '       ' → logprob: -3.4689507484436035
    3. ' à' → logprob: -4.2189507484436035
    4. ')' → logprob: -4.4689507484436035
    5. '               ' → logprob: -4.7189507484436035
    6. '   ' → logprob: -5.3439507484436035
    7. ',' → logprob: -5.9689507484436035
    8. ' de' → logprob: -6.0939507484436035
    9. ' au' → logprob: -6.9689507484436035
    10. ']' → logprob: -7.1564507484436035

Token 572: ' arrière' (ID: 100451)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.016973581165075302
    2. ' arrière' → logprob: -4.266973495483398
    3. 'avant' → logprob: -6.266973495483398
    4. '   ' → logprob: -8.516973495483398
    5. '```' → logprob: -8.891973495483398
    6. 'arri' → logprob: -9.141973495483398
    7. '           ' → logprob: -9.266973495483398
    8. 'place' → logprob: -9.266973495483398
    9. 'arr' → logprob: -9.641973495483398
    10. ''ar' → logprob: -10.266973495483398

Token 573: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00043913270928896964
    2. ',' → logprob: -8.500438690185547
    3. '            
' → logprob: -9.000438690185547
    4. '
' → logprob: -9.750438690185547
    5. ',
' → logprob: -11.375438690185547
    6. '       ' → logprob: -11.375438690185547
    7. '               ' → logprob: -12.500438690185547
    8. 'def' → logprob: -12.875438690185547
    9. '           
' → logprob: -13.000438690185547
    10. ')' → logprob: -13.125438690185547

Token 574: ' donc' (ID: 14206)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008023609989322722
    2. '       ' → logprob: -7.625802516937256
    3. ')' → logprob: -9.750802040100098
    4. 'def' → logprob: -9.875802040100098
    5. '            
' → logprob: -10.250802040100098
    6. '               ' → logprob: -10.375802040100098
    7. ' def' → logprob: -10.750802040100098
    8. '   ' → logprob: -11.125802040100098
    9. '
' → logprob: -11.125802040100098
    10. '            ' → logprob: -11.250802040100098

Token 575: ' inverse' (ID: 53743)
  Prédit: 'message'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'message' → logprob: -0.0439089871942997
    2. ' message' → logprob: -3.9189090728759766
    3. 'def' → logprob: -4.043909072875977
    4. '           ' → logprob: -5.293909072875977
    5. ' def' → logprob: -8.418909072875977
    6. '   ' → logprob: -9.043909072875977
    7. 'for' → logprob: -9.793909072875977
    8. '       ' → logprob: -10.293909072875977
    9. '               ' → logprob: -10.543909072875977
    10. '```' → logprob: -10.543909072875977

Token 576: ' est' (ID: 893)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6766887903213501
    2. '       ' → logprob: -1.80168879032135
    3. '               ' → logprob: -2.5516886711120605
    4. ')' → logprob: -2.9266886711120605
    5. '   ' → logprob: -3.1766886711120605
    6. ' =' → logprob: -3.6766886711120605
    7. ':' → logprob: -3.9266886711120605
    8. '):' → logprob: -4.0516886711120605
    9. ' :' → logprob: -5.0516886711120605
    10. '    ' → logprob: -5.0516886711120605

Token 577: ' avancer' (ID: 151163)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -1.4182723760604858
    2. ' rec' → logprob: -1.4182723760604858
    3. 'shift' → logprob: -1.4182723760604858
    4. 're' → logprob: -2.4182724952697754
    5. 'rec' → logprob: -2.5432724952697754
    6. ' avancer' → logprob: -3.7932724952697754
    7. ' shift' → logprob: -4.043272495269775
    8. ' ' → logprob: -4.543272495269775
    9. ' "' → logprob: -5.168272495269775
    10. 'diff' → logprob: -5.293272495269775

Token 578: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0012810648186132312
    2. '            
' → logprob: -6.876281261444092
    3. ',' → logprob: -9.001280784606934
    4. '
' → logprob: -9.626280784606934
    5. '           
' → logprob: -11.751280784606934
    6. ')' → logprob: -12.376280784606934
    7. ' 
' → logprob: -12.376280784606934
    8. ' c' → logprob: -12.501280784606934
    9. ',
' → logprob: -12.501280784606934
    10. '       ' → logprob: -12.626280784606934

Token 579: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -8.172891830326989e-05
    2. '            
' → logprob: -10.000082015991211
    3. 'a' → logprob: -11.375082015991211
    4. ',' → logprob: -12.500082015991211
    5. ' a' → logprob: -12.750082015991211
    6. '
' → logprob: -12.750082015991211
    7. ' c' → logprob: -13.000082015991211
    8. '       ' → logprob: -13.125082015991211
    9. '            ' → logprob: -13.375082015991211
    10. ' for' → logprob: -13.375082015991211

Token 580: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012900428846478462
    2. 'message' → logprob: -4.512900352478027
    3. '       ' → logprob: -6.762900352478027
    4. ' message' → logprob: -7.637900352478027
    5. 'def' → logprob: -8.637900352478027
    6. '   ' → logprob: -11.012900352478027
    7. 'for' → logprob: -12.637900352478027
    8. ' def' → logprob: -12.637900352478027
    9. '               ' → logprob: -12.762900352478027
    10. 'a' → logprob: -12.762900352478027

Token 581: ' Av' (ID: 7541)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0315525196492672
    2. 'message' → logprob: -3.78155255317688
    3. '       ' → logprob: -5.156552314758301
    4. 'def' → logprob: -6.156552314758301
    5. ' message' → logprob: -8.2815523147583
    6. '   ' → logprob: -9.6565523147583
    7. 'for' → logprob: -10.5315523147583
    8. 'a' → logprob: -10.9065523147583
    9. ' def' → logprob: -11.5315523147583
    10. '               ' → logprob: -11.7815523147583

Token 582: 'ancer' (ID: 13358)
  Prédit: 'ancer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ancer' → logprob: -0.3636200726032257
    2. '           ' → logprob: -1.3636200428009033
    3. '       ' → logprob: -3.7386200428009033
    4. 'ance' → logprob: -4.363620281219482
    5. 'er' → logprob: -5.613620281219482
    6. '   ' → logprob: -6.363620281219482
    7. '               ' → logprob: -6.613620281219482
    8. '            ' → logprob: -7.363620281219482
    9. 'ancé' → logprob: -7.488620281219482
    10. '        ' → logprob: -7.613620281219482

Token 583: ' le' (ID: 505)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.27970871329307556
    2. 'def' → logprob: -2.6547086238861084
    3. '(c' → logprob: -2.7797086238861084
    4. ' =' → logprob: -3.4047086238861084
    5. '(message' → logprob: -3.4047086238861084
    6. 'message' → logprob: -4.5297088623046875
    7. '=' → logprob: -4.7797088623046875
    8. '       ' → logprob: -5.1547088623046875
    9. '(' → logprob: -5.5297088623046875
    10. ' def' → logprob: -6.1547088623046875

Token 584: ' caractère' (ID: 80509)
  Prédit: 'message'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'message' → logprob: -0.41303831338882446
    2. 'def' → logprob: -1.1630382537841797
    3. 'c' → logprob: -4.91303825378418
    4. 'diff' → logprob: -5.03803825378418
    5. ' message' → logprob: -5.28803825378418
    6. 'a' → logprob: -6.03803825378418
    7. ')' → logprob: -6.78803825378418
    8. 'for' → logprob: -7.16303825378418
    9. '           ' → logprob: -7.41303825378418
    10. ' def' → logprob: -7.53803825378418

Token 585: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1406009197235107
    2. 'message' → logprob: -1.2656009197235107
    3. '=' → logprob: -2.3906009197235107
    4. '           ' → logprob: -2.3906009197235107
    5. '(message' → logprob: -2.5156009197235107
    6. '[' → logprob: -3.6406009197235107
    7. 'def' → logprob: -3.6406009197235107
    8. ')' → logprob: -4.14060115814209
    9. 'a' → logprob: -4.51560115814209
    10. '       ' → logprob: -4.89060115814209

Token 586: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.016085047274827957
    2. 'message' → logprob: -4.266085147857666
    3. ' message' → logprob: -6.891085147857666
    4. '       ' → logprob: -7.391085147857666
    5. 'a' → logprob: -9.391084671020508
    6. 'def' → logprob: -10.266084671020508
    7. '(message' → logprob: -10.516084671020508
    8. ' =' → logprob: -10.766084671020508
    9. '=' → logprob: -10.766084671020508
    10. '               ' → logprob: -11.141084671020508

Token 587: ' def' (ID: 1056)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13465002179145813
    2. 'message' → logprob: -2.2596499919891357
    3. 'def' (adapté à ' def') → logprob: -4.009650230407715
    4. '       ' → logprob: -6.009650230407715
    5. ' message' → logprob: -7.634650230407715
    6. 'a' → logprob: -8.009650230407715
    7. ' def' → logprob: -10.259650230407715
    8. '   ' → logprob: -10.384650230407715
    9. '               ' → logprob: -10.509650230407715
    10. 'c' → logprob: -10.634650230407715

Token 588: ' shift' (ID: 12847)
  Prédit: ' shift'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' shift' → logprob: -0.1011941060423851
    2. 'shift' → logprob: -2.351194143295288
    3. ' advance' → logprob: -7.976193904876709
    4. 'advance' → logprob: -8.601194381713867
    5. ' lambda' → logprob: -8.726194381713867
    6. ' def' → logprob: -9.351194381713867
    7. 'lambda' → logprob: -9.726194381713867
    8. 'def' → logprob: -9.726194381713867
    9. ' forward' → logprob: -10.351194381713867
    10. ' move' → logprob: -10.726194381713867

Token 589: '_forward' (ID: 75888)
  Prédit: '_back'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_back' → logprob: -0.6790453791618347
    2. '_forward' → logprob: -0.8040453791618347
    3. '_' → logprob: -3.1790454387664795
    4. '_up' → logprob: -7.0540452003479
    5. '_adv' → logprob: -7.4290452003479
    6. '_for' → logprob: -8.054045677185059
    7. '_next' → logprob: -8.179045677185059
    8. ')' → logprob: -8.179045677185059
    9. '_down' → logprob: -8.429045677185059
    10. '_backward' → logprob: -8.429045677185059

Token 590: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -7.386147626675665e-05
    2. '(' → logprob: -9.750073432922363
    3. '       ' → logprob: -12.125073432922363
    4. ' (' → logprob: -12.125073432922363
    5. '           ' → logprob: -12.625073432922363
    6. '               ' → logprob: -14.500073432922363
    7. '   ' → logprob: -15.875073432922363
    8. '(char' → logprob: -16.12507438659668
    9. '(
' → logprob: -16.75007438659668
    10. '(s' → logprob: -16.87507438659668

Token 591: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018711933866143227
    2. ' ,' → logprob: -4.018712043762207
    3. ',c' → logprob: -7.518712043762207
    4. '   ' → logprob: -11.768712043762207
    5. '       ' → logprob: -13.018712043762207
    6. ',k' → logprob: -13.018712043762207
    7. '):' → logprob: -13.143712043762207
    8. '    ' → logprob: -13.893712043762207
    9. '  ' → logprob: -14.643712043762207
    10. '           ' → logprob: -15.143712043762207

Token 592: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.28173503279685974
    2. ' diff' → logprob: -1.4067350625991821
    3. 'd' → logprob: -8.03173542022705
    4. 'delta' → logprob: -9.40673542022705
    5. '	diff' → logprob: -9.53173542022705
    6. ' d' → logprob: -9.65673542022705
    7. ' delta' → logprob: -11.78173542022705
    8. 'offset' → logprob: -12.03173542022705
    9. '   ' → logprob: -12.15673542022705
    10. 'shift' → logprob: -12.53173542022705

Token 593: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0005919939721934497
    2. '):
' → logprob: -7.500592231750488
    3. '   ' → logprob: -11.000592231750488
    4. '       ' → logprob: -11.750592231750488
    5. '):
' → logprob: -11.875592231750488
    6. ' ):' → logprob: -12.500592231750488
    7. ')' → logprob: -13.125592231750488
    8. ':' → logprob: -14.625592231750488
    9. ')：' → logprob: -15.125592231750488
    10. '           ' → logprob: -15.500592231750488

Token 594: '               ' (ID: 506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004738063144031912
    2. '   ' → logprob: -8.375473976135254
    3. '           ' → logprob: -9.125473976135254
    4. '               ' → logprob: -10.000473976135254
    5. ' return' → logprob: -10.000473976135254
    6. '	       ' → logprob: -11.375473976135254
    7. '    ' → logprob: -11.750473976135254
    8. '        ' → logprob: -11.875473976135254
    9. '	   ' → logprob: -12.625473976135254
    10. '    
' → logprob: -12.875473976135254

Token 595: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -0.36797961592674255
    2. ' pos' → logprob: -1.367979645729065
    3. '               ' → logprob: -3.1179795265197754
    4. '       ' → logprob: -5.117979526519775
    5. '   ' → logprob: -5.992979526519775
    6. ' return' → logprob: -8.492980003356934
    7. 'return' → logprob: -8.492980003356934
    8. '	pos' → logprob: -10.367980003356934
    9. '                   ' → logprob: -10.617980003356934
    10. '           ' → logprob: -10.992980003356934

Token 596: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04858986660838127
    2. '=' → logprob: -3.0485899448394775
    3. ' ' → logprob: -13.298589706420898
    4. '   ' → logprob: -14.923589706420898
    5. '  ' → logprob: -16.0485897064209
    6. '    ' → logprob: -16.4235897064209
    7. '	' → logprob: -16.7985897064209
    8. 'return' → logprob: -16.7985897064209
    9. ')' → logprob: -17.0485897064209
    10. '<|end|>' → logprob: -17.2985897064209

Token 597: ' ord' (ID: 6608)
  Prédit: ' ord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ord' → logprob: -0.3137816786766052
    2. 'ord' → logprob: -1.31378173828125
    3. '(ord' → logprob: -7.56378173828125
    4. ' (' → logprob: -14.31378173828125
    5. '_ord' → logprob: -16.43878173828125
    6. ' ordinal' → logprob: -16.81378173828125
    7. 'ords' → logprob: -16.93878173828125
    8. '(' → logprob: -17.06378173828125
    9. '   ' → logprob: -17.31378173828125
    10. 'org' → logprob: -17.43878173828125

Token 598: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -7.159660890465602e-05
    2. 'c' → logprob: -9.75007152557373
    3. '(' → logprob: -11.25007152557373
    4. ' (' → logprob: -16.375072479248047
    5. '('' → logprob: -17.500072479248047
    6. ')c' → logprob: -17.500072479248047
    7. '(
' → logprob: -18.875072479248047
    8. '	c' → logprob: -19.000072479248047
    9. '©' → logprob: -19.125072479248047
    10. ' c' → logprob: -19.250072479248047

Token 599: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.7610454708337784e-05
    2. '')' → logprob: -11.750027656555176
    3. ' )' → logprob: -12.250027656555176
    4. '(c' → logprob: -12.375027656555176
    5. ')-' → logprob: -12.875027656555176
    6. '-' → logprob: -13.250027656555176
    7. '('' → logprob: -13.375027656555176
    8. ' -' → logprob: -13.500027656555176
    9. 'c' → logprob: -14.000027656555176
    10. ' ' → logprob: -14.250027656555176

Token 600: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1431865394115448
    2. '-' → logprob: -2.268186569213867
    3. ')' → logprob: -4.268186569213867
    4. '+' → logprob: -5.143186569213867
    5. '('' → logprob: -5.143186569213867
    6. '(c' → logprob: -5.768186569213867
    7. ' +' → logprob: -7.518186569213867
    8. ' ' → logprob: -8.268186569213867
    9. '(' → logprob: -9.893186569213867
    10. '')' → logprob: -10.018186569213867

Token 601: ' ord' (ID: 6608)
  Prédit: 'ord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ord' → logprob: -0.0045182965695858
    2. ' ord' → logprob: -5.754518508911133
    3. '97' → logprob: -6.629518508911133
    4. 'a' → logprob: -11.629518508911133
    5. '96' → logprob: -11.879518508911133
    6. '(ord' → logprob: -13.129518508911133
    7. '98' → logprob: -14.879518508911133
    8. '95' → logprob: -16.004518508911133
    9. 'orde' → logprob: -16.629518508911133
    10. '93' → logprob: -16.754518508911133

Token 602: '('' (ID: 706)
  Prédit: ''a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''a' → logprob: -0.12710238993167877
    2. '('' → logprob: -2.1271023750305176
    3. 'a' → logprob: -8.752102851867676
    4. ''' → logprob: -11.877102851867676
    5. ''z' → logprob: -12.752102851867676
    6. ''s' → logprob: -13.002102851867676
    7. ''b' → logprob: -14.002102851867676
    8. '’a' → logprob: -14.627102851867676
    9. '`' → logprob: -15.252102851867676
    10. '{'' → logprob: -15.377102851867676

Token 603: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -2.1008713702030946e-06
    2. ''a' → logprob: -13.125001907348633
    3. 'а' → logprob: -20.500001907348633
    4. 'abcdefghijklmnopqrstuvwxyz' → logprob: -20.750001907348633
    5. '```' → logprob: -22.125001907348633
    6. ''' → logprob: -22.250001907348633
    7. ' a' → logprob: -22.625001907348633
    8. '	a' → logprob: -23.000001907348633
    9. '97' → logprob: -23.125001907348633
    10. '[a' → logprob: -23.375001907348633

Token 604: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38731688261032104
    2. ')
' → logprob: -1.1373169422149658
    3. '')
' → logprob: -8.762316703796387
    4. '')' → logprob: -8.887316703796387
    5. '               ' → logprob: -9.012316703796387
    6. ')
' → logprob: -11.012316703796387
    7. '           ' → logprob: -11.637316703796387
    8. ' )
' → logprob: -14.012316703796387
    9. ' )' → logprob: -14.887316703796387
    10. '                   ' → logprob: -14.887316703796387

Token 605: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01648578979074955
    2. ' new' → logprob: -4.266485691070557
    3. 'new' → logprob: -6.391485691070557
    4. ' return' → logprob: -7.641485691070557
    5. 'return' → logprob: -8.891486167907715
    6. '   ' → logprob: -11.641486167907715
    7. '           ' → logprob: -11.766486167907715
    8. '       ' → logprob: -12.391486167907715
    9. '	new' → logprob: -13.516486167907715
    10. '```' → logprob: -13.641486167907715

Token 606: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.020080706104636192
    2. ' new' → logprob: -4.14508056640625
    3. '               ' → logprob: -5.64508056640625
    4. 'return' → logprob: -7.64508056640625
    5. ' return' → logprob: -11.64508056640625
    6. '                ' → logprob: -11.89508056640625
    7. '```' → logprob: -12.77008056640625
    8. '   ' → logprob: -13.39508056640625
    9. '	new' → logprob: -13.39508056640625
    10. '           ' → logprob: -14.02008056640625

Token 607: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -9.758300438988954e-05
    2. 'pos' → logprob: -9.250097274780273
    3. '_position' → logprob: -14.375097274780273
    4. 'Pos' → logprob: -15.000097274780273
    5. '_' → logprob: -15.375097274780273
    6. '	pos' → logprob: -16.375097274780273
    7. '_token' → logprob: -17.000097274780273
    8. ' pos' → logprob: -17.000097274780273
    9. '_positions' → logprob: -17.125097274780273
    10. '_p' → logprob: -17.500097274780273

Token 608: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25193408131599426
    2. '=' → logprob: -1.5019340515136719
    3. '               ' → logprob: -13.126934051513672
    4. ')' → logprob: -13.251934051513672
    5. ' ' → logprob: -15.126934051513672
    6. '           ' → logprob: -15.376934051513672
    7. '                ' → logprob: -16.001934051513672
    8. ' =(' → logprob: -16.126934051513672
    9. '                   ' → logprob: -16.376934051513672
    10. '=(' → logprob: -16.501934051513672

Token 609: ' (' (ID: 350)
  Prédit: '(pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.005237429868429899
    2. ' (' → logprob: -5.255237579345703
    3. '(Pos' → logprob: -13.755237579345703
    4. '               ' → logprob: -14.130237579345703
    5. '(position' → logprob: -14.630237579345703
    6. '   ' → logprob: -15.005237579345703
    7. '(' → logprob: -15.130237579345703
    8. '(post' → logprob: -15.255237579345703
    9. '(ans' → logprob: -16.005237579345703
    10. '[pos' → logprob: -16.505237579345703

Token 610: 'pos' (ID: 1103)
  Prédit: 'pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.03805606812238693
    2. '(pos' → logprob: -3.2880561351776123
    3. ' pos' → logprob: -11.163056373596191
    4. '[pos' → logprob: -15.288056373596191
    5. ' (' → logprob: -16.038055419921875
    6. '	pos' → logprob: -17.038055419921875
    7. '   ' → logprob: -17.288055419921875
    8. '_pos' → logprob: -17.538055419921875
    9. ',pos' → logprob: -17.788055419921875
    10. 'position' → logprob: -19.288055419921875

Token 611: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5759400725364685
    2. ' +' → logprob: -0.8259400725364685
    3. ' ' → logprob: -15.325940132141113
    4. '+
' → logprob: -16.450939178466797
    5. ' +
' → logprob: -16.700939178466797
    6. ' ' → logprob: -16.950939178466797
    7. ' plus' → logprob: -16.950939178466797
    8. '＋' → logprob: -16.950939178466797
    9. '               ' → logprob: -17.825939178466797
    10. '=' → logprob: -18.575939178466797

Token 612: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.0019288709154352546
    2. ' diff' → logprob: -6.251928806304932
    3. '(diff' → logprob: -15.75192928314209
    4. '	diff' → logprob: -16.501928329467773
    5. ' ' → logprob: -20.251928329467773
    6. '   ' → logprob: -20.376928329467773
    7. 'dif' → logprob: -21.251928329467773
    8. '  ' → logprob: -21.501928329467773
    9. '           ' → logprob: -21.751928329467773
    10. '.diff' → logprob: -22.126928329467773

Token 613: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.988221684878226e-06
    2. ' )' → logprob: -12.125006675720215
    3. ')%' → logprob: -13.750006675720215
    4. '               ' → logprob: -16.25000762939453
    5. '')' → logprob: -16.25000762939453
    6. '           ' → logprob: -16.50000762939453
    7. ')
' → logprob: -16.62500762939453
    8. '<|end|>' → logprob: -17.00000762939453
    9. ']' → logprob: -17.75000762939453
    10. '`)' → logprob: -18.00000762939453

Token 614: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.20182697474956512
    2. '%' → logprob: -1.7018269300460815
    3. ')' → logprob: -7.826827049255371
    4. ')%' → logprob: -11.826827049255371
    5. ' ' → logprob: -12.326827049255371
    6. ' ' → logprob: -14.201827049255371
    7. '```' → logprob: -14.326827049255371
    8. '               ' → logprob: -14.701827049255371
    9. '           ' → logprob: -15.451827049255371
    10. ' )' → logprob: -15.701827049255371

Token 615: ' ' (ID: 220)
  Prédit: '26'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '```' → logprob: -20.625011444091797
    4. '   ' → logprob: -20.750011444091797
    5. '  ' → logprob: -22.375011444091797
    6. '`' → logprob: -22.750011444091797
    7. '2' → logprob: -23.250011444091797
    8. '{' → logprob: -23.562511444091797
    9. '24' → logprob: -23.812511444091797
    10. '    ' → logprob: -23.875011444091797

Token 616: '26' (ID: 2109)
  Prédit: '26'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '```' → logprob: -19.875
    4. '   ' → logprob: -21.75
    5. '25' → logprob: -22.25
    6. '`' → logprob: -22.625
    7. '{' → logprob: -22.875
    8. '24' → logprob: -22.875
    9. '026' → logprob: -23.25
    10. 'abcdefghijklmnopqrstuvwxyz' → logprob: -23.3125

Token 617: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0011864188127219677
    2. '       ' → logprob: -7.876186370849609
    3. ' return' → logprob: -8.00118637084961
    4. 'return' → logprob: -8.12618637084961
    5. '   ' → logprob: -9.62618637084961
    6. '	return' → logprob: -10.37618637084961
    7. '           ' → logprob: -10.50118637084961
    8. '
' → logprob: -10.75118637084961
    9. ')' → logprob: -11.62618637084961
    10. '	' → logprob: -12.00118637084961

Token 618: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0045322999358177185
    2. ' return' → logprob: -5.879532337188721
    3. 'return' → logprob: -7.004532337188721
    4. '       ' → logprob: -7.254532337188721
    5. '   ' → logprob: -9.879531860351562
    6. '	return' → logprob: -10.629531860351562
    7. '           ' → logprob: -10.754531860351562
    8. '```' → logprob: -12.254531860351562
    9. '	           ' → logprob: -13.004531860351562
    10. '	       ' → logprob: -13.879531860351562

Token 619: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.1538129299879074
    2. '               ' → logprob: -2.153812885284424
    3. ' return' → logprob: -3.778812885284424
    4. '       ' → logprob: -5.778812885284424
    5. '   ' → logprob: -7.778812885284424
    6. '	return' → logprob: -9.278813362121582
    7. '           ' → logprob: -9.653813362121582
    8. ' ' → logprob: -13.028813362121582
    9. '```' → logprob: -13.153813362121582
    10. '
' → logprob: -14.153813362121582

Token 620: ' chr' (ID: 42767)
  Prédit: 'chr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chr' → logprob: -0.16022798418998718
    2. ' chr' → logprob: -1.9102280139923096
    3. '(chr' → logprob: -12.53522777557373
    4. '_chr' → logprob: -15.28522777557373
    5. 'char' → logprob: -17.410228729248047
    6. 'Chr' → logprob: -18.785228729248047
    7. 'ch' → logprob: -19.035228729248047
    8. 'c' → logprob: -19.410228729248047
    9. 'chrom' → logprob: -19.660228729248047
    10. ' ' → logprob: -20.410228729248047

Token 621: '(new' (ID: 2648)
  Prédit: '(new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -0.0006423805025406182
    2. 'new' → logprob: -7.3756422996521
    3. '(ord' → logprob: -11.250642776489258
    4. '(' → logprob: -13.750642776489258
    5. ' new' → logprob: -13.875642776489258
    6. '[new' → logprob: -14.875642776489258
    7. ')new' → logprob: -16.125642776489258
    8. ' (' → logprob: -16.250642776489258
    9. '	new' → logprob: -16.500642776489258
    10. 'ord' → logprob: -16.875642776489258

Token 622: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.0022818150464445353
    2. 'pos' → logprob: -6.252281665802002
    3. '(c' → logprob: -8.00228214263916
    4. 'Pos' → logprob: -12.12728214263916
    5. '(pos' → logprob: -12.25228214263916
    6. '_token' → logprob: -13.25228214263916
    7. 'new' → logprob: -14.37728214263916
    8. '('' → logprob: -14.50228214263916
    9. ')' → logprob: -14.62728214263916
    10. 'c' → logprob: -14.75228214263916

Token 623: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2519773542881012
    2. '+' → logprob: -1.5019773244857788
    3. '('' → logprob: -11.25197696685791
    4. '+c' → logprob: -11.50197696685791
    5. ')' → logprob: -12.25197696685791
    6. '               ' → logprob: -12.50197696685791
    7. ' ' → logprob: -12.75197696685791
    8. '[' → logprob: -12.87697696685791
    9. '()+' → logprob: -13.12697696685791
    10. '(c' → logprob: -13.62697696685791

Token 624: ' ord' (ID: 6608)
  Prédit: ' ord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ord' → logprob: -0.00862213596701622
    2. 'ord' → logprob: -4.758622169494629
    3. '(ord' → logprob: -12.008622169494629
    4. ''' → logprob: -14.133622169494629
    5. ' '' → logprob: -14.633622169494629
    6. ' ordinal' → logprob: -15.883622169494629
    7. '_ord' → logprob: -16.383621215820312
    8. 'ords' → logprob: -17.008621215820312
    9. '32' → logprob: -17.508621215820312
    10. ' ' → logprob: -17.758621215820312

Token 625: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -2.999452772201039e-05
    2. '(' → logprob: -10.500029563903809
    3. '("' → logprob: -13.750029563903809
    4. '(('' → logprob: -14.625029563903809
    5. '(
' → logprob: -15.375029563903809
    6. ' ('' → logprob: -15.625029563903809
    7. 'b' → logprob: -16.125030517578125
    8. '(ord' → logprob: -16.625030517578125
    9. '(\'' → logprob: -16.750030517578125
    10. '>('' → logprob: -17.125030517578125

Token 626: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.008615872822701931
    2. ''a' → logprob: -4.758615970611572
    3. '97' → logprob: -13.633615493774414
    4. '```' → logprob: -17.258615493774414
    5. '   ' → logprob: -17.383615493774414
    6. ''' → logprob: -17.508615493774414
    7. ')a' → logprob: -18.133615493774414
    8. 'а' → logprob: -18.133615493774414
    9. ' ' → logprob: -18.258615493774414
    10. '"a' → logprob: -18.508615493774414

Token 627: ''))

' (ID: 58153)
  Prédit: ''))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''))' → logprob: -0.06689944863319397
    2. ')' → logprob: -3.066899538040161
    3. '))' → logprob: -4.441899299621582
    4. '')' → logprob: -5.066899299621582
    5. ''' → logprob: -10.191899299621582
    6. '('' → logprob: -11.191899299621582
    7. ''))
' → logprob: -11.441899299621582
    8. '')))' → logprob: -12.566899299621582
    9. '"))' → logprob: -13.941899299621582
    10. ']' → logprob: -14.316899299621582

Token 628: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000352266215486452
    2. '            
' → logprob: -8.375351905822754
    3. '       ' → logprob: -10.000351905822754
    4. '<|end|>' → logprob: -10.250351905822754
    5. 'a' → logprob: -11.375351905822754
    6. '    
' → logprob: -12.000351905822754
    7. '        
' → logprob: -12.250351905822754
    8. '               ' → logprob: -13.125351905822754
    9. '```' → logprob: -13.250351905822754
    10. '<|end|>' → logprob: -13.250351905822754

Token 629: ' message' (ID: 3176)
  Prédit: 'message'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'message' (adapté à ' message') → logprob: -0.22816365957260132
    2. '           ' → logprob: -1.603163719177246
    3. '       ' → logprob: -6.353163719177246
    4. ' message' → logprob: -6.978163719177246
    5. '   ' → logprob: -10.478163719177246
    6. 'a' → logprob: -10.603163719177246
    7. '               ' → logprob: -11.978163719177246
    8. '            
' → logprob: -12.978163719177246
    9. '	message' → logprob: -13.478163719177246
    10. 'decrypt' → logprob: -13.478163719177246

Token 630: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -1.282920129597187e-05
    2. '[b' → logprob: -11.875012397766113
    3. 'a' → logprob: -12.500012397766113
    4. '[' → logprob: -13.500012397766113
    5. ' [' → logprob: -15.625012397766113
    6. '   ' → logprob: -16.12501335144043
    7. '=' → logprob: -16.12501335144043
    8. '```' → logprob: -16.25001335144043
    9. '[m' → logprob: -16.62501335144043
    10. '[A' → logprob: -17.62501335144043

Token 631: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -7.016616291366518e-05
    2. '[a' → logprob: -10.000070571899414
    3. '[idx' → logprob: -12.500070571899414
    4. '_a' → logprob: -12.500070571899414
    5. 'a' → logprob: -12.750070571899414
    6. 'idx' → logprob: -12.875070571899414
    7. '_IDX' → logprob: -13.250070571899414
    8. '[' → logprob: -13.250070571899414
    9. ']' → logprob: -13.375070571899414
    10. '   ' → logprob: -13.500070571899414

Token 632: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02178303524851799
    2. '],' → logprob: -4.521782875061035
    3. '])' → logprob: -4.646782875061035
    4. ' ]' → logprob: -7.396782875061035
    5. ')]' → logprob: -8.896782875061035
    6. ')' → logprob: -8.896782875061035
    7. ']=' → logprob: -9.146782875061035
    8. ' ])' → logprob: -11.146782875061035
    9. '           ' → logprob: -11.271782875061035
    10. ']
' → logprob: -11.396782875061035

Token 633: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020678490400314
    2. ' =' → logprob: -2.3502068519592285
    3. '＝' → logprob: -16.47520637512207
    4. ']' → logprob: -16.85020637512207
    5. ')' → logprob: -17.35020637512207
    6. ']=' → logprob: -17.47520637512207
    7. ' ' → logprob: -17.60020637512207
    8. ')=' → logprob: -18.47520637512207
    9. '=

' → logprob: -18.47520637512207
    10. '=
' → logprob: -18.72520637512207

Token 634: ' shift' (ID: 12847)
  Prédit: 'shift'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shift' → logprob: -0.0004306692280806601
    2. ' shift' → logprob: -7.750430583953857
    3. '   ' → logprob: -19.500431060791016
    4. ' ' → logprob: -19.625431060791016
    5. '    ' → logprob: -20.750431060791016
    6. 'sh' → logprob: -21.000431060791016
    7. '  ' → logprob: -21.750431060791016
    8. '.shift' → logprob: -22.125431060791016
    9. 'swap' → logprob: -22.250431060791016
    10. '           ' → logprob: -22.875431060791016

Token 635: '_forward' (ID: 75888)
  Prédit: '_forward'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_forward' → logprob: -1.2664456789934775e-06
    2. '_for' → logprob: -14.125000953674316
    3. '_' → logprob: -15.375000953674316
    4. '_f' → logprob: -16.250001907348633
    5. '_backward' → logprob: -16.750001907348633
    6. '"_' → logprob: -17.750001907348633
    7. 'forward' → logprob: -17.875001907348633
    8. 'a' → logprob: -18.125001907348633
    9. '```' → logprob: -18.750001907348633
    10. '_front' → logprob: -18.750001907348633

Token 636: '(message' (ID: 13343)
  Prédit: '(message'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(message' → logprob: -2.451116051815916e-05
    2. '(' → logprob: -10.625024795532227
    3. ' (' → logprob: -15.750024795532227
    4. 'message' → logprob: -17.625024795532227
    5. '(
' → logprob: -18.375024795532227
    6. ',message' → logprob: -19.250024795532227
    7. ' message' → logprob: -20.500024795532227
    8. '$message' → logprob: -20.625024795532227
    9. '(command' → logprob: -21.375024795532227
    10. '```' → logprob: -21.875024795532227

Token 637: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -5.5577775128767826e-06
    2. 'a' → logprob: -12.250005722045898
    3. '[b' → logprob: -15.125005722045898
    4. '[' → logprob: -15.500005722045898
    5. '```' → logprob: -15.875005722045898
    6. '][' → logprob: -16.3750057220459
    7. ' [' → logprob: -16.6250057220459
    8. ')[' → logprob: -16.7500057220459
    9. '   ' → logprob: -17.5000057220459
    10. '[
' → logprob: -18.1250057220459

Token 638: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.0005574395763687789
    2. 'idx' → logprob: -7.5005574226379395
    3. 'Idx' → logprob: -13.125557899475098
    4. '[idx' → logprob: -13.750557899475098
    5. 'a' → logprob: -14.125557899475098
    6. '_IDX' → logprob: -14.625557899475098
    7. ' idx' → logprob: -16.25055694580078
    8. 'b' → logprob: -17.00055694580078
    9. '	idx' → logprob: -17.25055694580078
    10. '_index' → logprob: -17.75055694580078

Token 639: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00037144700763747096
    2. ' ,' → logprob: -8.000370979309082
    3. '],' → logprob: -10.750370979309082
    4. '[' → logprob: -12.375370979309082
    5. '[a' → logprob: -13.000370979309082
    6. ',a' → logprob: -13.500370979309082
    7. ']' → logprob: -13.500370979309082
    8. ' ' → logprob: -14.000370979309082
    9. ',b' → logprob: -14.000370979309082
    10. '‌,' → logprob: -14.375370979309082

Token 640: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.001502717612311244
    2. ' diff' → logprob: -6.501502513885498
    3. '	diff' → logprob: -15.376502990722656
    4. '           ' → logprob: -15.876502990722656
    5. '            ' → logprob: -19.501502990722656
    6. '               ' → logprob: -19.626502990722656
    7. '(diff' → logprob: -20.251502990722656
    8. 'abs' → logprob: -21.626502990722656
    9. 'Diff' → logprob: -21.751502990722656
    10. 'dif' → logprob: -21.751502990722656

Token 641: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008740204386413097
    2. ')
' → logprob: -4.758740425109863
    3. '           ' → logprob: -9.008740425109863
    4. ')
' → logprob: -13.258740425109863
    5. '       ' → logprob: -13.758740425109863
    6. ')

' → logprob: -15.883740425109863
    7. ' )' → logprob: -15.883740425109863
    8. '),' → logprob: -16.008739471435547
    9. '   ' → logprob: -16.758739471435547
    10. ')\
' → logprob: -17.258739471435547

Token 642: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00010568885772954673
    2. 'message' → logprob: -9.250105857849121
    3. ' message' → logprob: -11.750105857849121
    4. '       ' → logprob: -14.500105857849121
    5. '   ' → logprob: -14.625105857849121
    6. '          ' → logprob: -15.625105857849121
    7. '```' → logprob: -15.625105857849121
    8. '            
' → logprob: -16.125104904174805
    9. '         ' → logprob: -16.875104904174805
    10. '               ' → logprob: -17.250104904174805

Token 643: ' message' (ID: 3176)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5759651064872742
    2. 'message' (adapté à ' message') → logprob: -0.8259651064872742
    3. ' message' → logprob: -10.57596492767334
    4. '          ' → logprob: -17.325965881347656
    5. '   ' → logprob: -17.825965881347656
    6. '	message' → logprob: -18.325965881347656
    7. '       ' → logprob: -18.950965881347656
    8. '		' → logprob: -19.450965881347656
    9. '```' → logprob: -19.700965881347656
    10. '               ' → logprob: -19.700965881347656

Token 644: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -7.896309739408025e-07
    2. '[' → logprob: -14.375000953674316
    3. '   ' → logprob: -17.0
    4. '[a' → logprob: -17.875
    5. ' [' → logprob: -18.25
    6. 'b' → logprob: -18.5
    7. ' ' → logprob: -19.25
    8. '       ' → logprob: -19.375
    9. '           ' → logprob: -19.625
    10. '     ' → logprob: -20.0

Token 645: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -5.080963092041202e-06
    2. '_IDX' → logprob: -13.125004768371582
    3. '[b' → logprob: -13.625004768371582
    4. 'idx' → logprob: -14.125004768371582
    5. 'Idx' → logprob: -14.500004768371582
    6. '[' → logprob: -16.0000057220459
    7. '[idx' → logprob: -16.0000057220459
    8. '_idxs' → logprob: -16.1250057220459
    9. ']' → logprob: -16.8750057220459
    10. 'b' → logprob: -16.8750057220459

Token 646: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00021366903092712164
    2. ']=' → logprob: -9.375213623046875
    3. ')' → logprob: -9.625213623046875
    4. '])' → logprob: -10.750213623046875
    5. '],' → logprob: -10.875213623046875
    6. '=' → logprob: -11.500213623046875
    7. ')]' → logprob: -11.625213623046875
    8. ' ]' → logprob: -12.875213623046875
    9. ' =' → logprob: -14.750213623046875
    10. '           ' → logprob: -15.875213623046875

Token 647: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.30065909028053284
    2. ' =' → logprob: -1.5506590604782104
    3. ']' → logprob: -3.0506591796875
    4. ']=' → logprob: -8.4256591796875
    5. ')' → logprob: -11.4256591796875
    6. ' ]' → logprob: -13.3006591796875
    7. '],' → logprob: -14.6756591796875
    8. ')]' → logprob: -15.3006591796875
    9. '   ' → logprob: -15.4256591796875
    10. ')=' → logprob: -15.4256591796875

Token 648: ' shift' (ID: 12847)
  Prédit: 'shift'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shift' → logprob: -0.12692810595035553
    2. ' shift' → logprob: -2.1269280910491943
    3. 'sh' → logprob: -18.501928329467773
    4. '.shift' → logprob: -19.001928329467773
    5. ' ' → logprob: -20.876928329467773
    6. '_shift' → logprob: -22.126928329467773
    7. 'Shift' → logprob: -22.626928329467773
    8. '   ' → logprob: -22.751928329467773
    9. 'hift' → logprob: -22.751928329467773
    10. ' ' → logprob: -23.126928329467773

Token 649: '_forward' (ID: 75888)
  Prédit: '_forward'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_forward' → logprob: -5.2524021157296374e-05
    2. 'forward' → logprob: -9.875052452087402
    3. '_for' → logprob: -14.125052452087402
    4. '_backward' → logprob: -15.625052452087402
    5. '_FORWARD' → logprob: -17.00005340576172
    6. 'Forward' → logprob: -17.37505340576172
    7. 'f' → logprob: -17.50005340576172
    8. ' forward' → logprob: -19.12505340576172
    9. 'for' → logprob: -19.25005340576172
    10. '.forward' → logprob: -19.50005340576172

Token 650: '(message' (ID: 13343)
  Prédit: '(message'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(message' → logprob: -5.88418151892256e-05
    2. '(' → logprob: -9.750059127807617
    3. ' (' → logprob: -15.000059127807617
    4. 'message' → logprob: -16.125059127807617
    5. ',message' → logprob: -17.500059127807617
    6. '(
' → logprob: -17.750059127807617
    7. '$message' → logprob: -18.750059127807617
    8. ' message' → logprob: -19.250059127807617
    9. '(messages' → logprob: -20.250059127807617
    10. ')' → logprob: -20.750059127807617

Token 651: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -15.5
    3. 'b' → logprob: -17.25
    4. ' [' → logprob: -17.75
    5. '[
' → logprob: -19.125
    6. '[a' → logprob: -19.5
    7. '[B' → logprob: -19.5
    8. '   ' → logprob: -19.75
    9. '```' → logprob: -19.875
    10. ')[' → logprob: -20.0

Token 652: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.0020886387210339308
    2. 'b' → logprob: -6.75208854675293
    3. 'idx' → logprob: -7.00208854675293
    4. 'Idx' → logprob: -12.00208854675293
    5. '[b' → logprob: -14.00208854675293
    6. '_IDX' → logprob: -14.50208854675293
    7. '_b' → logprob: -15.75208854675293
    8. '[idx' → logprob: -15.87708854675293
    9. 'IDX' → logprob: -17.37708854675293
    10. '	idx' → logprob: -17.62708854675293

Token 653: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.013274818658828735
    2. '[b' → logprob: -4.763274669647217
    3. ',' → logprob: -5.388274669647217
    4. ' ],' → logprob: -10.388275146484375
    5. ']' → logprob: -10.763275146484375
    6. '],[' → logprob: -12.013275146484375
    7. '][' → logprob: -12.263275146484375
    8. '   ' → logprob: -12.388275146484375
    9. '[a' → logprob: -12.888275146484375
    10. ' ,' → logprob: -13.013275146484375

Token 654: ' diff' (ID: 8868)
  Prédit: 'message'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'message' → logprob: -0.007633958477526903
    2. ' message' → logprob: -5.007634162902832
    3. 'diff' → logprob: -7.007634162902832
    4. ' diff' → logprob: -11.257634162902832
    5. 'b' → logprob: -15.257634162902832
    6. '(message' → logprob: -16.382633209228516
    7. '	message' → logprob: -18.007633209228516
    8. ' b' → logprob: -18.882633209228516
    9. '   ' → logprob: -19.007633209228516
    10. ' ' → logprob: -19.382633209228516

Token 655: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3159397542476654
    2. '<|end|>' → logprob: -1.3159397840499878
    3. '           ' → logprob: -6.315939903259277
    4. '<|end|>' → logprob: -7.940939903259277
    5. ')
' → logprob: -8.440939903259277
    6. '       ' → logprob: -8.940939903259277
    7. ']' → logprob: -9.940939903259277
    8. '
' → logprob: -10.315939903259277
    9. '```' → logprob: -10.940939903259277
    10. '   ' → logprob: -11.440939903259277

Token 656: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00017016702622640878
    2. 'message' → logprob: -9.75016975402832
    3. '```' → logprob: -9.75016975402832
    4. '            
' → logprob: -10.37516975402832
    5. '       ' → logprob: -10.87516975402832
    6. '   ' → logprob: -14.12516975402832
    7. '          ' → logprob: -14.37516975402832
    8. '[' → logprob: -15.12516975402832
    9. '#' → logprob: -15.12516975402832
    10. '        
' → logprob: -15.25016975402832

Token 657: ' #' (ID: 1069)
  Prédit: 'message'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'message' → logprob: -5.943783253314905e-05
    2. '           ' → logprob: -9.750059127807617
    3. ' message' → logprob: -13.875059127807617
    4. '       ' → logprob: -16.375059127807617
    5. '   ' → logprob: -17.375059127807617
    6. '#' (adapté à ' #') → logprob: -17.500059127807617
    7. '	message' → logprob: -18.375059127807617
    8. '(message' → logprob: -20.250059127807617
    9. '_message' → logprob: -20.375059127807617
    10. 'essage' → logprob: -21.500059127807617

Token 658: ' Ensuite' (ID: 113884)
  Prédit: 'message'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'message' → logprob: -3.173704271830502e-06
    2. '           ' → logprob: -12.87500286102295
    3. ' message' → logprob: -14.75000286102295
    4. 'swap' → logprob: -16.250003814697266
    5. '#' → logprob: -17.875003814697266
    6. '(message' → logprob: -19.250003814697266
    7. '```' → logprob: -20.000003814697266
    8. '	message' → logprob: -20.500003814697266
    9. '[' → logprob: -20.500003814697266
    10. '       ' → logprob: -20.750003814697266

Token 659: ' swap' (ID: 25489)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7248748540878296
    2. 'message' → logprob: -0.8498748540878296
    3. ' message' → logprob: -2.474874973297119
    4. ',' → logprob: -6.099874973297119
    5. ',message' → logprob: -7.349874973297119
    6. '   ' → logprob: -7.849874973297119
    7. '(message' → logprob: -9.349874496459961
    8. ' ,' → logprob: -9.974874496459961
    9. '#' → logprob: -9.974874496459961
    10. '       ' → logprob: -10.099874496459961

Token 660: ' à' (ID: 1221)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.35829129815101624
    2. 'message' → logprob: -1.4832912683486938
    3. '(message' → logprob: -2.7332913875579834
    4. ' message' → logprob: -4.983291149139404
    5. '   ' → logprob: -7.608291149139404
    6. '[' → logprob: -8.108291625976562
    7. ' (' → logprob: -8.358291625976562
    8. '(' → logprob: -8.483291625976562
    9. '<|end|>' → logprob: -8.608291625976562
    10. ',message' → logprob: -8.733291625976562

Token 661: ' nouveau' (ID: 23184)
  Prédit: 'message'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'message' → logprob: -0.15904250741004944
    2. '(message' → logprob: -3.1590425968170166
    3. 'l' → logprob: -3.2840425968170166
    4. 'b' → logprob: -3.4090425968170166
    5. ' nouveau' → logprob: -5.5340423583984375
    6. 'nou' → logprob: -5.5340423583984375
    7. 'é' → logprob: -5.7840423583984375
    8. 'la' → logprob: -5.9090423583984375
    9. '[' → logprob: -5.9090423583984375
    10. 'temp' → logprob: -6.1590423583984375

Token 662: '
' (ID: 198)
  Prédit: '(message'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(message' → logprob: -0.8713162541389465
    2. '           ' → logprob: -0.9963162541389465
    3. 'message' → logprob: -2.4963161945343018
    4. '[' → logprob: -2.9963161945343018
    5. ' message' → logprob: -3.9963161945343018
    6. '   ' → logprob: -3.9963161945343018
    7. '<|end|>' → logprob: -3.9963161945343018
    8. '(' → logprob: -5.121316432952881
    9. '```' → logprob: -5.621316432952881
    10. '<|end|>' → logprob: -5.621316432952881

Token 663: '           ' (ID: 352)
  Prédit: 'message'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'message' → logprob: -0.25789889693260193
    2. '           ' → logprob: -1.5078989267349243
    3. ' message' → logprob: -5.132898807525635
    4. '   ' → logprob: -10.132899284362793
    5. ',message' → logprob: -12.632899284362793
    6. '(message' → logprob: -12.757899284362793
    7. '       ' → logprob: -13.257899284362793
    8. '[' → logprob: -13.507899284362793
    9. '	message' → logprob: -13.507899284362793
    10. '```' → logprob: -14.632899284362793

Token 664: ' message' (ID: 3176)
  Prédit: 'message'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'message' (adapté à ' message') → logprob: -4.704065213445574e-05
    2. ' message' → logprob: -10.000046730041504
    3. '           ' → logprob: -13.375046730041504
    4. '	message' → logprob: -18.87504768371582
    5. ',message' → logprob: -18.87504768371582
    6. '(message' → logprob: -19.37504768371582
    7. '   ' → logprob: -19.50004768371582
    8. '_message' → logprob: -19.75004768371582
    9. 'essage' → logprob: -19.75004768371582
    10. '$message' → logprob: -20.75004768371582

Token 665: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -6.153795766294934e-06
    2. '[b' → logprob: -12.750005722045898
    3. '[' → logprob: -13.000005722045898
    4. 'a' → logprob: -14.500005722045898
    5. '   ' → logprob: -16.5000057220459
    6. ' [' → logprob: -16.5000057220459
    7. 'message' → logprob: -16.6250057220459
    8. '```' → logprob: -16.8750057220459
    9. ' a' → logprob: -17.5000057220459
    10. '[
' → logprob: -17.8750057220459

Token 666: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -4.842555426876061e-06
    2. 'idx' → logprob: -12.750004768371582
    3. '[b' → logprob: -14.000004768371582
    4. '_IDX' → logprob: -14.500004768371582
    5. '[idx' → logprob: -15.625004768371582
    6. '_idxs' → logprob: -16.5000057220459
    7. 'Idx' → logprob: -16.6250057220459
    8. '[a' → logprob: -17.3750057220459
    9. '[' → logprob: -17.7500057220459
    10. '	idx' → logprob: -17.8750057220459

Token 667: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.004098823759704828
    2. ',' → logprob: -5.504098892211914
    3. ',message' → logprob: -11.629098892211914
    4. ']' → logprob: -12.504098892211914
    5. '>,' → logprob: -12.879098892211914
    6. '],[' → logprob: -13.129098892211914
    7. '},' → logprob: -13.754098892211914
    8. '],
' → logprob: -14.004098892211914
    9. '[' → logprob: -15.129098892211914
    10. ' ],' → logprob: -15.254098892211914

Token 668: ' message' (ID: 3176)
  Prédit: 'message'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'message' → logprob: -2.935296834039036e-06
    2. ' message' → logprob: -12.75000286102295
    3. '	message' → logprob: -19.625003814697266
    4. '           ' → logprob: -22.500003814697266
    5. '$message' → logprob: -22.500003814697266
    6. '   ' → logprob: -23.875003814697266
    7. 'essage' → logprob: -24.000003814697266
    8. '_message' → logprob: -24.000003814697266
    9. '(message' → logprob: -24.000003814697266
    10. '.message' → logprob: -24.125003814697266

Token 669: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -5.796184723294573e-06
    2. 'b' → logprob: -12.875005722045898
    3. '[' → logprob: -13.000005722045898
    4. '```' → logprob: -14.500005722045898
    5. '[
' → logprob: -15.500005722045898
    6. '[a' → logprob: -16.3750057220459
    7. '][' → logprob: -17.7500057220459
    8. '=' → logprob: -17.8750057220459
    9. '   ' → logprob: -18.0000057220459
    10. ',b' → logprob: -18.5000057220459

Token 670: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.11026739329099655
    2. 'b' → logprob: -2.360267400741577
    3. 'idx' → logprob: -4.610267162322998
    4. 'Idx' → logprob: -10.610267639160156
    5. '[b' → logprob: -11.235267639160156
    6. 'index' → logprob: -11.610267639160156
    7. 's' → logprob: -13.110267639160156
    8. 'i' → logprob: -13.235267639160156
    9. 'a' → logprob: -13.485267639160156
    10. '_IDX' → logprob: -13.610267639160156

Token 671: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3225407898426056
    2. ']' → logprob: -1.3225407600402832
    3. ']=' → logprob: -4.697540760040283
    4. ' =' → logprob: -9.197541236877441
    5. ')' → logprob: -11.447541236877441
    6. ')=' → logprob: -13.072541236877441
    7. '<|end|>' → logprob: -14.072541236877441
    8. ' ]' → logprob: -14.197541236877441
    9. '']=' → logprob: -14.697541236877441
    10. '[' → logprob: -14.947541236877441

Token 672: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -4.60414821645827e-06
    2. ' =' → logprob: -12.375004768371582
    3. '=

' → logprob: -16.375003814697266
    4. '=
' → logprob: -16.875003814697266
    5. '＝' → logprob: -17.500003814697266
    6. '=}' → logprob: -17.875003814697266
    7. '<|end|>' → logprob: -18.125003814697266
    8. '.=' → logprob: -18.500003814697266
    9. ')=' → logprob: -18.750003814697266
    10. ']=' → logprob: -19.875003814697266

Token 673: ' message' (ID: 3176)
  Prédit: 'message'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'message' → logprob: -4.842555426876061e-06
    2. ' message' → logprob: -12.250004768371582
    3. '   ' → logprob: -22.0000057220459
    4. '	message' → logprob: -22.1250057220459
    5. '(message' → logprob: -24.1250057220459
    6. ' ' → logprob: -24.7500057220459
    7. '$message' → logprob: -25.0000057220459
    8. '  ' → logprob: -25.6250057220459
    9. '.message' → logprob: -26.8750057220459
    10. ',message' → logprob: -27.0000057220459

Token 674: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.00013417120499070734
    2. '[a' → logprob: -9.125134468078613
    3. 'b' → logprob: -10.625134468078613
    4. '```' → logprob: -14.500134468078613
    5. '   ' → logprob: -15.750134468078613
    6. 'a' → logprob: -16.125133514404297
    7. '[' → logprob: -16.375133514404297
    8. ' ' → logprob: -17.125133514404297
    9. '	b' → logprob: -18.000133514404297
    10. '[
' → logprob: -18.250133514404297

Token 675: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.00015395533409900963
    2. 'idx' → logprob: -8.875153541564941
    3. 'b' → logprob: -11.750153541564941
    4. 'Idx' → logprob: -12.250153541564941
    5. '_IDX' → logprob: -14.125153541564941
    6. 'x' → logprob: -15.625153541564941
    7. '```' → logprob: -16.125154495239258
    8. '[b' → logprob: -16.875154495239258
    9. 'IDX' → logprob: -17.000154495239258
    10. 'a' → logprob: -17.500154495239258

Token 676: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.2127087504486553e-05
    2. ',message' → logprob: -11.375021934509277
    3. ' ,' → logprob: -12.125021934509277
    4. ',a' → logprob: -12.750021934509277
    5. '],' → logprob: -14.125021934509277
    6. '           ' → logprob: -14.375021934509277
    7. 'a' → logprob: -14.625021934509277
    8. 'message' → logprob: -15.625021934509277
    9. '[],' → logprob: -16.875022888183594
    10. ',
' → logprob: -17.625022888183594

Token 677: ' message' (ID: 3176)
  Prédit: 'message'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'message' → logprob: -0.00033546582562848926
    2. ' message' → logprob: -8.000335693359375
    3. '	message' → logprob: -20.625335693359375
    4. '   ' → logprob: -21.000335693359375
    5. '(message' → logprob: -21.875335693359375
    6. '$message' → logprob: -22.125335693359375
    7. ' ' → logprob: -22.375335693359375
    8. '           ' → logprob: -23.375335693359375
    9. '.message' → logprob: -23.375335693359375
    10. 'essage' → logprob: -23.500335693359375

Token 678: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -1.2664456789934775e-06
    2. 'a' → logprob: -13.750000953674316
    3. '[' → logprob: -16.125001907348633
    4. 'message' → logprob: -17.500001907348633
    5. '```' → logprob: -17.500001907348633
    6. ' [' → logprob: -18.625001907348633
    7. '   ' → logprob: -19.500001907348633
    8. '[b' → logprob: -19.750001907348633
    9. ' a' → logprob: -20.000001907348633
    10. '[s' → logprob: -21.125001907348633

Token 679: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.006757170893251896
    2. 'idx' → logprob: -5.0067572593688965
    3. 'a' → logprob: -10.256756782531738
    4. 'Idx' → logprob: -12.006756782531738
    5. '_IDX' → logprob: -15.631756782531738
    6. '[idx' → logprob: -15.631756782531738
    7. '	idx' → logprob: -16.756757736206055
    8. 'index' → logprob: -17.006757736206055
    9. '```' → logprob: -17.506757736206055
    10. 'IDX' → logprob: -17.756757736206055

Token 680: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0002547832846175879
    2. '<|end|>' → logprob: -8.75025463104248
    3. ']
' → logprob: -9.62525463104248
    4. ')' → logprob: -11.75025463104248
    5. ' ]' → logprob: -12.12525463104248
    6. 'a' → logprob: -12.62525463104248
    7. '<|end|>' → logprob: -13.00025463104248
    8. '}' → logprob: -13.12525463104248
    9. '']' → logprob: -13.37525463104248
    10. '[' → logprob: -13.50025463104248

Token 681: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0181842390447855
    2. 'print' → logprob: -4.018184185028076
    3. '       ' → logprob: -11.143184661865234
    4. '```' → logprob: -11.393184661865234
    5. '    
' → logprob: -12.268184661865234
    6. ' print' → logprob: -13.018184661865234
    7. '
' → logprob: -13.768184661865234
    8. '<|end|>' → logprob: -15.143184661865234
    9. '        
' → logprob: -16.143184661865234
    10. 'return' → logprob: -16.143184661865234

Token 682: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1017918586730957
    2. '   ' → logprob: -2.3517918586730957
    3. '```' → logprob: -6.976791858673096
    4. ' print' → logprob: -7.601791858673096
    5. '       ' → logprob: -9.476791381835938
    6. 'return' → logprob: -9.726791381835938
    7. '	print' → logprob: -11.351791381835938
    8. '``' → logprob: -13.726791381835938
    9. '`' → logprob: -14.351791381835938
    10. '#print' → logprob: -14.851791381835938

Token 683: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.6240566083070007e-06
    2. ' print' → logprob: -13.875001907348633
    3. '       ' → logprob: -14.875001907348633
    4. '   ' → logprob: -16.750001907348633
    5. 'decoded' → logprob: -16.875001907348633
    6. 'result' → logprob: -17.125001907348633
    7. '#' → logprob: -17.375001907348633
    8. '```' → logprob: -17.750001907348633
    9. 'output' → logprob: -19.125001907348633
    10. '#print' → logprob: -19.125001907348633

Token 684: 'icher' (ID: 13617)
  Prédit: 'icher'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.002515254309400916
    2. 'f' → logprob: -6.6275153160095215
    3. '#' → logprob: -8.002514839172363
    4. 'ich' → logprob: -8.127514839172363
    5. 'iche' → logprob: -8.502514839172363
    6. 'ichage' → logprob: -8.752514839172363
    7. 'ic' → logprob: -9.252514839172363
    8. '   ' → logprob: -10.252514839172363
    9. 'fic' → logprob: -10.627514839172363
    10. 'ichier' → logprob: -11.127514839172363

Token 685: ' le' (ID: 505)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.11192726343870163
    2. '("' → logprob: -2.3619272708892822
    3. '"' → logprob: -5.361927032470703
    4. 'print' → logprob: -5.611927032470703
    5. '   ' → logprob: -6.236927032470703
    6. '(' → logprob: -7.236927032470703
    7. '''.' → logprob: -7.736927032470703
    8. '       ' → logprob: -9.111927032470703
    9. '```' → logprob: -10.736927032470703
    10. ' ''.' → logprob: -10.986927032470703

Token 686: ' message' (ID: 3176)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -1.0283879041671753
    2. 'print' → logprob: -1.0283879041671753
    3. '''.' → logprob: -1.9033879041671753
    4. 'decoded' → logprob: -2.528388023376465
    5. ''' → logprob: -3.903388023376465
    6. ' ''.' → logprob: -4.278388023376465
    7. 'message' → logprob: -5.153388023376465
    8. ' decoded' → logprob: -6.028388023376465
    9. 'final' → logprob: -6.153388023376465
    10. '   ' → logprob: -6.278388023376465

Token 687: ' dé' (ID: 2393)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004842962371185422
    2. 'print' → logprob: -8.125484466552734
    3. '   ' → logprob: -8.625484466552734
    4. ' print' → logprob: -12.000484466552734
    5. '        
' → logprob: -13.875484466552734
    6. '      ' → logprob: -14.875484466552734
    7. '           ' → logprob: -14.875484466552734
    8. ',' → logprob: -15.625484466552734
    9. '     ' → logprob: -16.000484466552734
    10. '```' → logprob: -16.000484466552734

Token 688: 'ch' (ID: 332)
  Prédit: 'crypt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'crypt' → logprob: -0.0038125456776469946
    2. 'ch' → logprob: -5.878812313079834
    3. 'crypted' → logprob: -7.128812313079834
    4. 'cr' → logprob: -9.128812789916992
    5. '   ' → logprob: -9.753812789916992
    6. 'cry' → logprob: -11.753812789916992
    7. 'cript' → logprob: -11.878812789916992
    8. 'print' → logprob: -12.253812789916992
    9. 'cipher' → logprob: -12.503812789916992
    10. 'code' → logprob: -13.253812789916992

Token 689: 'if' (ID: 366)
  Prédit: 'crypt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'crypt' → logprob: -0.5711840391159058
    2. 'r' → logprob: -2.3211841583251953
    3. '   ' → logprob: -2.5711841583251953
    4. '       ' → logprob: -2.8211841583251953
    5. 'print' → logprob: -3.4461841583251953
    6. 'cr' → logprob: -3.8211841583251953
    7. 'if' → logprob: -3.8211841583251953
    8. 'ras' → logprob: -4.071184158325195
    9. 'rypt' → logprob: -4.196184158325195
    10. 'fr' → logprob: -4.196184158325195

Token 690: 'fr' (ID: 1739)
  Prédit: 'fr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fr' → logprob: -0.0003285520360805094
    2. 'ré' → logprob: -9.00032901763916
    3. 'fre' → logprob: -9.75032901763916
    4. 'f' → logprob: -9.87532901763916
    5. 'tré' → logprob: -10.00032901763916
    6. 'r' → logprob: -10.50032901763916
    7. 'fram' → logprob: -12.50032901763916
    8. 'br' → logprob: -13.37532901763916
    9. '```' → logprob: -13.62532901763916
    10. 'rés' → logprob: -13.62532901763916

Token 691: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.007876917719841003
    2. 'mé' → logprob: -5.257876873016357
    3. 'e' → logprob: -6.507876873016357
    4. 'er' → logprob: -7.757876873016357
    5. 'm' → logprob: -8.507877349853516
    6. 'ché' → logprob: -8.507877349853516
    7. 'f' → logprob: -9.882877349853516
    8. '```' → logprob: -10.007877349853516
    9. 'ment' → logprob: -10.257877349853516
    10. '   ' → logprob: -10.257877349853516

Token 692: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023840710520744324
    2. 'print' → logprob: -3.7738406658172607
    3. '   ' → logprob: -8.02384090423584
    4. ' print' → logprob: -8.27384090423584
    5. '```' → logprob: -11.39884090423584
    6. '<|end|>' → logprob: -14.77384090423584
    7. '	print' → logprob: -15.02384090423584
    8. '           ' → logprob: -16.398839950561523
    9. ',' → logprob: -16.398839950561523
    10. '`' → logprob: -16.398839950561523

Token 693: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002427144441753626
    2. 'print' → logprob: -6.127427101135254
    3. ' print' → logprob: -8.502427101135254
    4. '   ' → logprob: -10.252427101135254
    5. '```' → logprob: -13.252427101135254
    6. '<|end|>' → logprob: -14.127427101135254
    7. ',' → logprob: -15.002427101135254
    8. '	   ' → logprob: -15.127427101135254
    9. '	print' → logprob: -15.877427101135254
    10. '           ' → logprob: -16.37742805480957

Token 694: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00043734462815336883
    2. ' print' → logprob: -7.750437259674072
    3. '       ' → logprob: -12.12543773651123
    4. '```' → logprob: -13.75043773651123
    5. '   ' → logprob: -15.50043773651123
    6. '	print' → logprob: -17.625436782836914
    7. '``' → logprob: -18.875436782836914
    8. '`' → logprob: -19.875436782836914
    9. '#print' → logprob: -22.125436782836914
    10. '.print' → logprob: -22.250436782836914

Token 695: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0113065792247653
    2. '("' → logprob: -4.5113067626953125
    3. '(' → logprob: -8.261306762695312
    4. '()' → logprob: -16.011306762695312
    5. '(""' → logprob: -16.261306762695312
    6. '(*' → logprob: -16.511306762695312
    7. '(('' → logprob: -16.761306762695312
    8. '(len' → logprob: -18.011306762695312
    9. '''.' → logprob: -18.011306762695312
    10. '(("' → logprob: -18.761306762695312

Token 696: ''.' (ID: 6120)
  Prédit: '''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''.' → logprob: -0.010911638848483562
    2. '"' → logprob: -4.635911464691162
    3. '('' → logprob: -7.260911464691162
    4. ' ''.' → logprob: -8.51091194152832
    5. '''' → logprob: -8.76091194152832
    6. ''' → logprob: -9.88591194152832
    7. '("' → logprob: -10.88591194152832
    8. '""' → logprob: -11.51091194152832
    9. ' "".' → logprob: -11.76091194152832
    10. ''.' → logprob: -13.01091194152832

Token 697: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -1.2664456789934775e-06
    2. 'j' → logprob: -14.000000953674316
    3. ' join' → logprob: -15.375000953674316
    4. 'jo' → logprob: -16.000001907348633
    5. '''.' → logprob: -16.875001907348633
    6. '.join' → logprob: -17.500001907348633
    7. 'print' → logprob: -17.625001907348633
    8. '```' → logprob: -17.875001907348633
    9. '(join' → logprob: -18.875001907348633
    10. '/j' → logprob: -20.250001907348633

Token 698: '(message' (ID: 13343)
  Prédit: '(message'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(message' → logprob: -9.639096970204264e-05
    2. 'message' → logprob: -9.250096321105957
    3. ')' → logprob: -16.250097274780273
    4. ',message' → logprob: -17.375097274780273
    5. '(' → logprob: -18.500097274780273
    6. '$message' → logprob: -19.375097274780273
    7. ' message' → logprob: -20.125097274780273
    8. '	message' → logprob: -20.250097274780273
    9. ' (' → logprob: -21.250097274780273
    10. '(
' → logprob: -22.375097274780273

Token 699: '))


' (ID: 49252)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11306613683700562
    2. '())' → logprob: -2.3630661964416504
    3. '))' → logprob: -4.36306619644165
    4. '()' → logprob: -10.863065719604492
    5. '()))' → logprob: -10.988065719604492
    6. ')))' → logprob: -14.238065719604492
    7. ' )' → logprob: -15.363065719604492
    8. '])' → logprob: -15.488065719604492
    9. '})' → logprob: -15.613065719604492
    10. ')`' → logprob: -15.988065719604492

Token 700: 'if' (ID: 366)
  Prédit: 'decrypt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'decrypt' → logprob: -0.0047724610194563866
    2. '```' → logprob: -6.629772663116455
    3. 'if' → logprob: -7.254772663116455
    4. '<|end|>' → logprob: -7.254772663116455
    5. 'def' → logprob: -7.504772663116455
    6. ' decrypt' → logprob: -7.629772663116455
    7. '
' → logprob: -8.004772186279297
    8. '.decrypt' → logprob: -8.629772186279297
    9. '\n' → logprob: -9.254772186279297
    10. '#' → logprob: -9.629772186279297

Token 701: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.20154352486133575
    2. ' __' → logprob: -1.7015435695648193
    3. '___' → logprob: -9.701543807983398
    4. '_' → logprob: -10.076543807983398
    5. '_name' → logprob: -11.326543807983398
    6. 'name' → logprob: -11.451543807983398
    7. ' ' → logprob: -13.826543807983398
    8. ' ' → logprob: -13.951543807983398
    9. '____' → logprob: -14.201543807983398
    10. '/__' → logprob: -14.951543807983398

Token 702: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.3004533648490906
    2. ' ==' → logprob: -2.0504534244537354
    3. '==' → logprob: -2.0504534244537354
    4. '=='' → logprob: -7.175453186035156
    5. '=="' → logprob: -7.425453186035156
    6. ' __' → logprob: -7.800453186035156
    7. 'name' → logprob: -9.425453186035156
    8. '__[' → logprob: -9.925453186035156
    9. 'if' → logprob: -10.425453186035156
    10. '[' → logprob: -10.425453186035156

Token 703: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -3.5716304410016164e-05
    2. '==' → logprob: -11.125035285949707
    3. '__.__' → logprob: -11.125035285949707
    4. '___' → logprob: -13.625035285949707
    5. '__('' → logprob: -13.625035285949707
    6. '____' → logprob: -14.250035285949707
    7. '=="' → logprob: -14.625035285949707
    8. '__["' → logprob: -14.625035285949707
    9. ' ==' → logprob: -14.875035285949707
    10. '__*/' → logprob: -15.375035285949707

Token 704: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.671454131603241
    2. '__' → logprob: -1.1714541912078857
    3. ' ==' → logprob: -1.7964541912078857
    4. '=="' → logprob: -4.421453952789307
    5. '=='' → logprob: -6.796453952789307
    6. '===' → logprob: -10.921454429626465
    7. '__.__' → logprob: -11.296454429626465
    8. '==
' → logprob: -11.296454429626465
    9. '=' → logprob: -11.421454429626465
    10. '_' → logprob: -12.046454429626465

Token 705: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.018156850710511208
    2. ''' → logprob: -4.018157005310059
    3. ' "__' → logprob: -12.018157005310059
    4. '__' → logprob: -14.393157005310059
    5. ' '__' → logprob: -15.768157005310059
    6. '"user' → logprob: -16.268156051635742
    7. '"name' → logprob: -16.893156051635742
    8. '"class' → logprob: -18.268156051635742
    9. '"log' → logprob: -18.268156051635742
    10. ''"' → logprob: -18.518156051635742

Token 706: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0018392755882814527
    2. '__' → logprob: -6.3768391609191895
    3. 'name' → logprob: -9.501839637756348
    4. '"' → logprob: -9.751839637756348
    5. ''' → logprob: -12.751839637756348
    6. '__":
' → logprob: -15.126839637756348
    7. 'built' → logprob: -15.626839637756348
    8. 'print' → logprob: -15.751839637756348
    9. '```' → logprob: -16.37683868408203
    10. 'python' → logprob: -16.50183868408203

Token 707: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.4747779667377472
    2. '__' → logprob: -0.9747779369354248
    3. '__':
' → logprob: -7.724778175354004
    4. '__:' → logprob: -8.849778175354004
    5. '__["' → logprob: -9.974778175354004
    6. '__.' → logprob: -10.224778175354004
    7. '__.__' → logprob: -10.599778175354004
    8. '__("' → logprob: -13.099778175354004
    9. '__[' → logprob: -13.474778175354004
    10. '__",' → logprob: -13.474778175354004

Token 708: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0064069777727127075
    2. 'decrypt' → logprob: -5.131406784057617
    3. ' decrypt' → logprob: -8.506406784057617
    4. '```' → logprob: -9.131406784057617
    5. '    
' → logprob: -9.881406784057617
    6. '	de' → logprob: -10.131406784057617
    7. '.decrypt' → logprob: -11.006406784057617
    8. '<|end|>' → logprob: -11.256406784057617
    9. 'def' → logprob: -12.256406784057617
    10. '    ' → logprob: -12.256406784057617

Token 709: ' decrypt' (ID: 81444)
  Prédit: 'decrypt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'decrypt' (adapté à ' decrypt') → logprob: -0.000605337496381253
    2. '   ' → logprob: -7.50060510635376
    3. ' decrypt' → logprob: -9.875605583190918
    4. 'de' → logprob: -14.375605583190918
    5. '.decrypt' → logprob: -15.000605583190918
    6. '	de' → logprob: -17.2506046295166
    7. 'Decrypt' → logprob: -17.6256046295166
    8. '  ' → logprob: -19.2506046295166
    9. 'decode' → logprob: -19.7506046295166
    10. ' ' → logprob: -20.0006046295166

Token 710: '_swap' (ID: 103784)
  Prédit: '_swap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_swap' → logprob: -9.088346359931165e-07
    2. '_' → logprob: -14.125000953674316
    3. '_SWAP' → logprob: -16.875
    4. '_sw' → logprob: -17.75
    5. '_unpack' → logprob: -18.125
    6. '_encrypt' → logprob: -18.375
    7. '_de' → logprob: -18.875
    8. '_wrap' → logprob: -19.125
    9. '```' → logprob: -19.25
    10. ' _' → logprob: -19.375

Token 711: '_cipher' (ID: 185360)
  Prédit: '_cipher'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cipher' → logprob: -7.266944157890975e-05
    2. '_swap' → logprob: -10.125072479248047
    3. '_' → logprob: -10.375072479248047
    4. '_c' → logprob: -13.750072479248047
    5. 'cipher' → logprob: -15.750072479248047
    6. '(cipher' → logprob: -17.500072479248047
    7. '_cube' → logprob: -18.250072479248047
    8. '_encrypt' → logprob: -18.375072479248047
    9. '_p' → logprob: -18.500072479248047
    10. '_coupon' → logprob: -18.500072479248047

Token 712: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.002485288307070732
    2. '(' → logprob: -6.127485275268555
    3. '()
' → logprob: -8.252485275268555
    4. '()\' → logprob: -11.627485275268555
    5. '();' → logprob: -11.877485275268555
    6. '()

' → logprob: -12.252485275268555
    7. ' ()' → logprob: -12.252485275268555
    8. '(
' → logprob: -13.002485275268555
    9. '()`' → logprob: -13.252485275268555
    10. '```' → logprob: -13.252485275268555


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 710
Tokens correctement prédits (1ère position, stricte): 254
Tokens correctement prédits (1ère position, avec adaptation): 274
Tokens correctement prédits (top 10): 501
Précision stricte (1ère position): 35.77%
Précision adaptée (1ère position): 38.59%
Précision (top 10): 70.56%
================================================================================
