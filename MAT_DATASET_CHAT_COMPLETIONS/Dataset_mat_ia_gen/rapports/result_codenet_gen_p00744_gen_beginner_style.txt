================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:02:02
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def gcd(a, b):
    while b:
        a, b = b, a % b
    return a

def can_pair(a, b):
    return gcd(a, b) > 1

def try_match(u, graph, used, match):
    for v in graph[u]:
        if not used[v]:
            used[v] = True
            if match[v] == -1 or try_match(match[v], graph, used, match):
                match[v] = u
                return True
    return False

while True:
    line = ''
    while line.strip() == '':
        line = input()
    if line == '0 0':
        break
    m, n = map(int, line.strip().split())
    blue_cards = []
    while len(blue_cards) < m:
        blue_cards += list(map(int, input().strip().split()))
    red_cards = []
    while len(red_cards) < n:
        red_cards += list(map(int, input().strip().split()))
    graph = [[] for _ in range(m)]
    for i in range(m):
        for j in range(n):
            if can_pair(blue_cards[i], red_cards[j]):
                graph[i].append(j)
    match = [-1] * n
    result = 0
    for u in range(m):
        used = [False] * n
        if try_match(u, graph, used, match):
            result += 1
    print(result)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' gcd' (ID: 106918)
  → Token d'amorce (pas de prédiction)

Token 2: '(a' (ID: 6271)
  → Token d'amorce (pas de prédiction)

Token 3: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06803382933139801
    2. ',b' → logprob: -2.8180339336395264
    3. ')' → logprob: -5.693033695220947
    4. '):' → logprob: -6.693033695220947
    5. ',a' → logprob: -6.943033695220947
    6. ',g' → logprob: -9.568034172058105
    7. '<|end|>' → logprob: -9.568034172058105
    8. ',)' → logprob: -9.818034172058105
    9. ',
' → logprob: -10.318034172058105
    10. ' ,' → logprob: -10.818034172058105

Token 4: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.2582452595233917
    2. ' b' → logprob: -1.7582452297210693
    3. ',b' → logprob: -3.5082452297210693
    4. ',' → logprob: -4.008245468139648
    5. ' ,' → logprob: -5.008245468139648
    6. ' ' → logprob: -7.883245468139648
    7. ')' → logprob: -11.383245468139648
    8. '```' → logprob: -11.383245468139648
    9. ')b' → logprob: -11.633245468139648
    10. '>b' → logprob: -11.883245468139648

Token 5: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0051169381476938725
    2. ')' → logprob: -5.505116939544678
    3. ':' → logprob: -7.505116939544678
    4. '):
' → logprob: -8.00511646270752
    5. '```' → logprob: -10.13011646270752
    6. ''):' → logprob: -10.50511646270752
    7. ',' → logprob: -11.25511646270752
    8. '   ' → logprob: -11.50511646270752
    9. '=' → logprob: -11.50511646270752
    10. '**' → logprob: -11.50511646270752

Token 6: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0863969475030899
    2. '   ' → logprob: -2.8363969326019287
    3. '```' → logprob: -4.336397171020508
    4. '":' → logprob: -6.461397171020508
    5. '':' → logprob: -6.461397171020508
    6. '():' → logprob: -6.461397171020508
    7. '`:' → logprob: -6.586397171020508
    8. '    
' → logprob: -6.586397171020508
    9. '``' → logprob: -7.586397171020508
    10. ':
' → logprob: -7.836397171020508

Token 7: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5688174366950989
    2. '```' → logprob: -1.068817377090454
    3. ' if' → logprob: -3.318817377090454
    4. 'i' → logprob: -3.818817377090454
    5. '``' → logprob: -4.318817615509033
    6. '    
' → logprob: -5.318817615509033
    7. '`' → logprob: -5.943817615509033
    8. 'if' → logprob: -6.068817615509033
    9. '    ' → logprob: -6.193817615509033
    10. ' i' → logprob: -6.318817615509033

Token 8: ' b' (ID: 287)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.1513872891664505
    2. ' b' → logprob: -2.2763872146606445
    3. 'a' → logprob: -3.7763872146606445
    4. ' ' → logprob: -4.6513872146606445
    5. ' not' → logprob: -5.9013872146606445
    6. 'b' → logprob: -6.0263872146606445
    7. ' (' → logprob: -9.026387214660645
    8. '(a' → logprob: -10.401387214660645
    9. '  ' → logprob: -10.901387214660645
    10. ' ' → logprob: -11.401387214660645

Token 9: ':
' (ID: 734)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.04948236048221588
    2. ' >' → logprob: -3.9244823455810547
    3. '>' → logprob: -4.549482345581055
    4. ':' → logprob: -5.424482345581055
    5. ' ' → logprob: -5.549482345581055
    6. '!=' → logprob: -5.549482345581055
    7. '```' → logprob: -6.424482345581055
    8. '   ' → logprob: -6.924482345581055
    9. ' ==' → logprob: -7.674482345581055
    10. '  ' → logprob: -7.924482345581055

Token 10: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026245025917887688
    2. '    ' → logprob: -4.0262451171875
    3. '   ' → logprob: -6.2762451171875
    4. '=' → logprob: -6.4012451171875
    5. '     ' → logprob: -6.7762451171875
    6. 'return' → logprob: -7.7762451171875
    7. '        ' → logprob: -7.9012451171875
    8. ' =' → logprob: -8.0262451171875
    9. ' ' → logprob: -8.1512451171875
    10. '`' → logprob: -8.1512451171875

Token 11: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.4319334924221039
    2. ' a' → logprob: -1.0569335222244263
    3. '```' → logprob: -6.556933403015137
    4. '       ' → logprob: -6.806933403015137
    5. '           ' → logprob: -8.306933403015137
    6. '   ' → logprob: -8.806933403015137
    7. '    ' → logprob: -9.306933403015137
    8. '        ' → logprob: -10.181933403015137
    9. '=a' → logprob: -10.556933403015137
    10. '``' → logprob: -10.556933403015137

Token 12: ',' (ID: 11)
  Prédit: ' %='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %=' → logprob: -0.39598411321640015
    2. ',' → logprob: -1.395984172821045
    3. '=' → logprob: -3.645984172821045
    4. ' %' → logprob: -3.895984172821045
    5. '%=' → logprob: -4.395984172821045
    6. '%' → logprob: -4.395984172821045
    7. ' ,' → logprob: -5.520984172821045
    8. ' =' → logprob: -5.645984172821045
    9. ' ^=' → logprob: -8.645983695983887
    10. ' %,' → logprob: -8.770983695983887

Token 13: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.695716142654419
    2. ' b' → logprob: -0.695716142654419
    3. '<|end|>' → logprob: -6.07071590423584
    4. ' ' → logprob: -8.44571590423584
    5. '<|end|>' → logprob: -11.07071590423584
    6. '    ' → logprob: -11.07071590423584
    7. 's' → logprob: -12.57071590423584
    8. 'space' → logprob: -13.94571590423584
    9. '```' → logprob: -14.57071590423584
    10. '%b' → logprob: -14.82071590423584

Token 14: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22586789727210999
    2. ' =' → logprob: -1.6008678674697876
    3. ',' → logprob: -7.725867748260498
    4. '<|end|>' → logprob: -11.975868225097656
    5. '   ' → logprob: -12.850868225097656
    6. '=
' → logprob: -13.600868225097656
    7. ')' → logprob: -14.225868225097656
    8. ' ,' → logprob: -14.475868225097656
    9. ' =
' → logprob: -14.600868225097656
    10. ' ' → logprob: -14.850868225097656

Token 15: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.1002088338136673
    2. 'b' → logprob: -2.3502087593078613
    3. '    ' → logprob: -14.47520923614502
    4. ' ' → logprob: -14.72520923614502
    5. '```' → logprob: -15.60020923614502
    6. ' a' → logprob: -15.72520923614502
    7. 'a' → logprob: -15.85020923614502
    8. '0' → logprob: -16.225208282470703
    9. '	b' → logprob: -16.350208282470703
    10. '   ' → logprob: -16.350208282470703

Token 16: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.029765760526061058
    2. ' ,' → logprob: -3.5297658443450928
    3. ',a' → logprob: -12.404766082763672
    4. '`,' → logprob: -12.654766082763672
    5. ' ' → logprob: -13.029766082763672
    6. ',
' → logprob: -13.529766082763672
    7. 'a' → logprob: -13.654766082763672
    8. '   ' → logprob: -14.279766082763672
    9. '',' → logprob: -14.904766082763672
    10. '‌,' → logprob: -14.904766082763672

Token 17: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5759429931640625
    2. ' a' → logprob: -0.8259429931640625
    3. ' ' → logprob: -13.700942993164062
    4. '	a' → logprob: -14.325942993164062
    5. '<|end|>' → logprob: -14.325942993164062
    6. '_a' → logprob: -15.075942993164062
    7. '```' → logprob: -15.325942993164062
    8. ' ' → logprob: -16.200942993164062
    9. '   ' → logprob: -16.200942993164062
    10. '>a' → logprob: -16.450942993164062

Token 18: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.20183077454566956
    2. ' %' → logprob: -1.7018307447433472
    3. '%b' → logprob: -7.826830863952637
    4. '%i' → logprob: -12.076830863952637
    5. '```' → logprob: -12.701830863952637
    6. ' ' → logprob: -12.701830863952637
    7. '%s' → logprob: -12.951830863952637
    8. '%c' → logprob: -13.451830863952637
    9. '%e' → logprob: -14.326830863952637
    10. '%n' → logprob: -14.701830863952637

Token 19: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0007099286303855479
    2. ' b' → logprob: -7.2507100105285645
    3. ' ' → logprob: -19.625709533691406
    4. '   ' → logprob: -21.375709533691406
    5. '	b' → logprob: -21.500709533691406
    6. '  ' → logprob: -22.500709533691406
    7. '>b' → logprob: -22.500709533691406
    8. '<|end|>' → logprob: -22.875709533691406
    9. ')b' → logprob: -23.000709533691406
    10. '>' → logprob: -23.375709533691406

Token 20: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.744974672794342
    2. '<|end|>' → logprob: -1.4949746131896973
    3. ' ' → logprob: -1.9949746131896973
    4. ' 
' → logprob: -2.8699746131896973
    5. '\' → logprob: -3.2449746131896973
    6. ' \' → logprob: -3.8699746131896973
    7. '\r' → logprob: -4.494974613189697
    8. '```' → logprob: -4.869974613189697
    9. '  
' → logprob: -4.994974613189697
    10. '   ' → logprob: -5.619974613189697

Token 21: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42426130175590515
    2. '       ' → logprob: -1.5492613315582275
    3. ' return' → logprob: -2.5492613315582275
    4. 'return' → logprob: -3.7992613315582275
    5. '```' → logprob: -4.549261093139648
    6. '    
' → logprob: -5.299261093139648
    7. ' ' → logprob: -5.924261093139648
    8. '\n' → logprob: -5.924261093139648
    9. '        
' → logprob: -6.049261093139648
    10. ' 
' → logprob: -6.299261093139648

Token 22: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3063691258430481
    2. ' return' → logprob: -1.8063690662384033
    3. '   ' → logprob: -2.3063690662384033
    4. '	return' → logprob: -12.056368827819824
    5. ':return' → logprob: -12.681368827819824
    6. '```' → logprob: -13.806368827819824
    7. '       ' → logprob: -14.181368827819824
    8. ' ' → logprob: -14.306368827819824
    9. 'Return' → logprob: -14.556368827819824
    10. '{return' → logprob: -14.681368827819824

Token 23: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.2819800078868866
    2. 'a' → logprob: -1.406980037689209
    3. ' ' → logprob: -7.406980037689209
    4. 'space' → logprob: -8.90697956085205
    5. ' ' → logprob: -9.65697956085205
    6. ' space' → logprob: -11.78197956085205
    7. 's' → logprob: -12.78197956085205
    8. '	a' → logprob: -13.28197956085205
    9. '_a' → logprob: -13.65697956085205
    10. ' `' → logprob: -13.90697956085205

Token 24: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.4061222076416016
    2. '\n' → logprob: -1.5311222076416016
    3. '(' → logprob: -1.7811222076416016
    4. '```' → logprob: -2.0311222076416016
    5. '<|end|>' → logprob: -2.2811222076416016
    6. '

' → logprob: -3.5311222076416016
    7. '#' → logprob: -3.7811222076416016
    8. ')' → logprob: -3.9061222076416016
    9. '(
' → logprob: -4.531122207641602
    10. '\' → logprob: -4.531122207641602

Token 25: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.21424753963947296
    2. '\n' → logprob: -3.089247465133667
    3. '
' → logprob: -3.214247465133667
    4. '```' → logprob: -3.214247465133667
    5. '(
' → logprob: -3.839247465133667
    6. ')' → logprob: -4.089247703552246
    7. '<|end|>' → logprob: -5.214247703552246
    8. '\' → logprob: -5.214247703552246
    9. '*' → logprob: -5.839247703552246
    10. '#' → logprob: -5.964247703552246

Token 26: ' can' (ID: 665)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.09818992018699646
    2. ' factorial' → logprob: -2.5981898307800293
    3. ' add' → logprob: -5.348189830780029
    4. ' fibonacci' → logprob: -5.473189830780029
    5. ' fib' → logprob: -5.598189830780029
    6. ' gcd' → logprob: -5.723189830780029
    7. ' f' → logprob: -6.348189830780029
    8. ' factor' → logprob: -7.848189830780029
    9. ' ' → logprob: -8.348190307617188
    10. ' prime' → logprob: -8.848190307617188

Token 27: '_pair' (ID: 34819)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7729824185371399
    2. ' _' → logprob: -1.1479823589324951
    3. ' ' → logprob: -1.5229823589324951
    4. '_div' → logprob: -6.897982597351074
    5. '_construct' → logprob: -8.772982597351074
    6. 'Make' → logprob: -9.022982597351074
    7. '_split' → logprob: -9.147982597351074
    8. '_jump' → logprob: -9.272982597351074
    9. '_take' → logprob: -9.272982597351074
    10. 'I' → logprob: -9.397982597351074

Token 28: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3040551245212555
    2. 's' → logprob: -1.554055094718933
    3. '(s' → logprob: -3.4290552139282227
    4. '(a' → logprob: -4.054055213928223
    5. ' (' → logprob: -7.429055213928223
    6. '_s' → logprob: -8.304055213928223
    7. '(x' → logprob: -10.554055213928223
    8. '_' → logprob: -10.679055213928223
    9. '(_' → logprob: -10.804055213928223
    10. '(n' → logprob: -10.929055213928223

Token 29: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00959092564880848
    2. 's' → logprob: -5.009591102600098
    3. ' ,' → logprob: -6.759591102600098
    4. ',b' → logprob: -7.384591102600098
    5. '[i' → logprob: -7.634591102600098
    6. '[' → logprob: -8.259591102600098
    7. ')' → logprob: -8.884591102600098
    8. '_list' → logprob: -9.509591102600098
    9. '1' → logprob: -10.634591102600098
    10. 'l' → logprob: -11.009591102600098

Token 30: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.34854361414909363
    2. 'b' → logprob: -1.223543643951416
    3. ' ' → logprob: -9.473543167114258
    4. ' l' → logprob: -12.223543167114258
    5. 'a' → logprob: -12.598543167114258
    6. ' n' → logprob: -13.098543167114258
    7. ' a' → logprob: -13.098543167114258
    8. 'l' → logprob: -13.098543167114258
    9. ')' → logprob: -13.723543167114258
    10. 'n' → logprob: -13.848543167114258

Token 31: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00024358915106859058
    2. ')' → logprob: -8.375243186950684
    3. ':' → logprob: -12.000243186950684
    4. '):
' → logprob: -12.125243186950684
    5. ',' → logprob: -14.500243186950684
    6. ' ):' → logprob: -15.000243186950684
    7. '   ' → logprob: -15.875243186950684
    8. '():' → logprob: -16.750244140625
    9. ')**' → logprob: -17.125244140625
    10. '):
' → logprob: -17.125244140625

Token 32: '   ' (ID: 271)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.8508425354957581
    2. ':' → logprob: -1.1008424758911133
    3. '(' → logprob: -1.4758424758911133
    4. '   ' → logprob: -4.850842475891113
    5. '():' → logprob: -6.475842475891113
    6. ' (' → logprob: -7.225842475891113
    7. ':return' → logprob: -7.600842475891113
    8. ' :' → logprob: -8.225842475891113
    9. '(
' → logprob: -8.850842475891113
    10. '(:' → logprob: -8.850842475891113

Token 33: ' return' (ID: 622)
  Prédit: ' gcd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gcd' → logprob: -0.1753941774368286
    2. ' a' → logprob: -2.050394058227539
    3. ' (' → logprob: -4.300394058227539
    4. 'g' → logprob: -5.300394058227539
    5. 'a' → logprob: -5.425394058227539
    6. ' return' → logprob: -5.550394058227539
    7. ' ' → logprob: -5.550394058227539
    8. '   ' → logprob: -7.675394058227539
    9. '(a' → logprob: -8.425394058227539
    10. 'return' (adapté à ' return') → logprob: -8.675394058227539

Token 34: ' gcd' (ID: 106918)
  Prédit: ' gcd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gcd' → logprob: -0.08084466308355331
    2. 'g' → logprob: -2.5808446407318115
    3. ' ' → logprob: -7.205844879150391
    4. ' (' → logprob: -7.830844879150391
    5. '(g' → logprob: -8.45584487915039
    6. '	g' → logprob: -8.95584487915039
    7. ' g' → logprob: -9.20584487915039
    8. 'a' → logprob: -9.33084487915039
    9. ' a' → logprob: -9.83084487915039
    10. '   ' → logprob: -9.83084487915039

Token 35: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.20149590075016022
    2. '(' → logprob: -1.701495885848999
    3. '(b' → logprob: -9.951496124267578
    4. ' (' → logprob: -11.576496124267578
    5. '((' → logprob: -12.326496124267578
    6. '(g' → logprob: -12.701496124267578
    7. '(x' → logprob: -13.076496124267578
    8. '(None' → logprob: -13.076496124267578
    9. '(abs' → logprob: -13.201496124267578
    10. '(ab' → logprob: -13.576496124267578

Token 36: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00342211639508605
    2. '(' → logprob: -6.378422260284424
    3. ' ,' → logprob: -7.003422260284424
    4. ',b' → logprob: -7.378422260284424
    5. '(b' → logprob: -9.878421783447266
    6. ' (' → logprob: -10.003421783447266
    7. '(a' → logprob: -10.753421783447266
    8. 'b' → logprob: -10.878421783447266
    9. ')' → logprob: -11.003421783447266
    10. ' ' → logprob: -11.378421783447266

Token 37: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.043083809316158295
    2. ' b' → logprob: -3.168083906173706
    3. ')' → logprob: -10.168084144592285
    4. ')b' → logprob: -10.293084144592285
    5. ' ' → logprob: -12.043084144592285
    6. '2' → logprob: -13.293084144592285
    7. '1' → logprob: -13.543084144592285
    8. 'a' → logprob: -13.793084144592285
    9. ' )' → logprob: -13.793084144592285
    10. '   ' → logprob: -15.043084144592285

Token 38: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.399378566537052e-05
    2. ')>' → logprob: -9.500083923339844
    3. ' )' → logprob: -12.375083923339844
    4. ')==' → logprob: -12.875083923339844
    5. '>' → logprob: -14.125083923339844
    6. ')!=' → logprob: -14.125083923339844
    7. '')' → logprob: -15.500083923339844
    8. '")' → logprob: -15.500083923339844
    9. ')>=' → logprob: -16.125083923339844
    10. '1' → logprob: -16.500083923339844

Token 39: ' >' (ID: 1424)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04976312071084976
    2. '>' → logprob: -3.6747632026672363
    3. '(a' → logprob: -4.049763202667236
    4. ' ' → logprob: -5.924763202667236
    5. ' >' → logprob: -6.674763202667236
    6. ')' → logprob: -7.799763202667236
    7. '%' → logprob: -8.049762725830078
    8. ' !=' → logprob: -8.174762725830078
    9. '()' → logprob: -8.924762725830078
    10. '!=' → logprob: -9.174762725830078

Token 40: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0024768433067947626
    2. ' ' → logprob: -6.002476692199707
    3. '   ' → logprob: -14.002476692199707
    4. '>' → logprob: -16.252477645874023
    5. '0' → logprob: -16.502477645874023
    6. '  ' → logprob: -16.502477645874023
    7. '```' → logprob: -16.502477645874023
    8. ' ' → logprob: -17.502477645874023
    9. '=' → logprob: -17.877477645874023
    10. '' → logprob: -18.127477645874023

Token 41: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.8889261304575484e-06
    2. ' ' → logprob: -12.500003814697266
    3. '0' → logprob: -15.750003814697266
    4. '   ' → logprob: -18.000003814697266
    5. '```' → logprob: -18.250003814697266
    6. '>' → logprob: -18.625003814697266
    7. '' → logprob: -19.000003814697266
    8. ' ' → logprob: -19.125003814697266
    9. '  ' → logprob: -19.500003814697266
    10. '
' → logprob: -19.812503814697266

Token 42: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.48547905683517456
    2. '

' → logprob: -1.2354791164398193
    3. '\n' → logprob: -2.7354791164398193
    4. 'def' → logprob: -4.48547887802124
    5. '\' → logprob: -4.61047887802124
    6. ' and' → logprob: -6.23547887802124
    7. '
' → logprob: -6.86047887802124
    8. ' 

' → logprob: -6.98547887802124
    9. '<|end|>' → logprob: -7.23547887802124
    10. 'newline' → logprob: -7.36047887802124

Token 43: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.43880894780158997
    2. '\n' → logprob: -2.0638089179992676
    3. 'def' → logprob: -2.8138089179992676
    4. '\' → logprob: -2.8138089179992676
    5. '

' → logprob: -3.5638089179992676
    6. '#' → logprob: -4.063808917999268
    7. '<|end|>' → logprob: -4.188808917999268
    8. '```' → logprob: -4.688808917999268
    9. ' 
' → logprob: -5.188808917999268
    10. '.' → logprob: -5.188808917999268

Token 44: ' try' (ID: 2075)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.011141437105834484
    2. ' find' → logprob: -5.386141300201416
    3. ' is' → logprob: -6.011141300201416
    4. ' pair' → logprob: -6.386141300201416
    5. ' has' → logprob: -7.261141300201416
    6. ' are' → logprob: -8.011141777038574
    7. ' max' → logprob: -8.136141777038574
    8. ' main' → logprob: -8.386141777038574
    9. 'can' → logprob: -8.636141777038574
    10. ' have' → logprob: -9.261141777038574

Token 45: '_match' (ID: 26039)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10432901978492737
    2. '_pair' → logprob: -2.7293291091918945
    3. 'ing' → logprob: -3.7293291091918945
    4. '_:' → logprob: -5.9793291091918945
    5. ':' → logprob: -6.2293291091918945
    6. '_pairs' → logprob: -6.8543291091918945
    7. '_except' → logprob: -6.8543291091918945
    8. '_to' → logprob: -7.1043291091918945
    9. '_p' → logprob: -7.2293291091918945
    10. '_ing' → logprob: -8.354329109191895

Token 46: '(u' (ID: 17057)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06744172424077988
    2. '(a' → logprob: -2.817441701889038
    3. '_pair' → logprob: -6.567441940307617
    4. ' (' → logprob: -6.567441940307617
    5. '(s' → logprob: -7.692441940307617
    6. '_pairs' → logprob: -8.192441940307617
    7. '_' → logprob: -8.317441940307617
    8. '_parent' → logprob: -8.442441940307617
    9. '(A' → logprob: -8.692441940307617
    10. '(pair' → logprob: -8.817441940307617

Token 47: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000285530521068722
    2. ' ,' → logprob: -8.500285148620605
    3. 's' → logprob: -10.125285148620605
    4. '):' → logprob: -10.875285148620605
    5. ',v' → logprob: -12.250285148620605
    6. ',u' → logprob: -12.500285148620605
    7. 'u' → logprob: -12.750285148620605
    8. ')' → logprob: -12.875285148620605
    9. '   ' → logprob: -13.875285148620605
    10. '  ' → logprob: -14.000285148620605

Token 48: ' graph' (ID: 7465)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -1.1840444803237915
    2. ' match' → logprob: -1.1840444803237915
    3. 'v' → logprob: -2.184044361114502
    4. ' graph' → logprob: -2.184044361114502
    5. ' matching' → logprob: -3.309044361114502
    6. 'match' → logprob: -3.434044361114502
    7. ' matches' → logprob: -3.559044361114502
    8. ' pair' → logprob: -4.059044361114502
    9. 'graph' → logprob: -4.559044361114502
    10. ' visited' → logprob: -4.809044361114502

Token 49: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.173704271830502e-06
    2. ',u' → logprob: -13.75000286102295
    3. ' ,' → logprob: -13.87500286102295
    4. '):' → logprob: -14.00000286102295
    5. '[u' → logprob: -16.750003814697266
    6. '   ' → logprob: -17.125003814697266
    7. '[],' → logprob: -17.625003814697266
    8. ',
' → logprob: -17.750003814697266
    9. '‌,' → logprob: -18.125003814697266
    10. '_,' → logprob: -18.750003814697266

Token 50: ' used' (ID: 2061)
  Prédit: ' match'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' match' → logprob: -0.7421248555183411
    2. 'match' → logprob: -0.9921248555183411
    3. ' visited' → logprob: -2.6171247959136963
    4. 'visited' → logprob: -3.1171247959136963
    5. ' matched' → logprob: -3.9921247959136963
    6. 'matched' → logprob: -4.742125034332275
    7. ' matching' → logprob: -6.492125034332275
    8. 'pair' → logprob: -6.617125034332275
    9. 'matches' → logprob: -6.617125034332275
    10. ' pair' → logprob: -6.867125034332275

Token 51: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.668304245569743e-05
    2. '):' → logprob: -10.125046730041504
    3. ' ,' → logprob: -13.125046730041504
    4. '):
' → logprob: -13.750046730041504
    5. '_,' → logprob: -14.125046730041504
    6. 'u' → logprob: -14.375046730041504
    7. 's' → logprob: -14.875046730041504
    8. ')' → logprob: -15.500046730041504
    9. ',u' → logprob: -15.500046730041504
    10. '[],' → logprob: -15.625046730041504

Token 52: ' match' (ID: 3981)
  Prédit: ' match'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' match' → logprob: -0.09269876033067703
    2. 'match' → logprob: -2.467698812484741
    3. ' matching' → logprob: -6.467698574066162
    4. ' pair' → logprob: -7.217698574066162
    5. ' ' → logprob: -7.967698574066162
    6. 'v' → logprob: -8.21769905090332
    7. 'pair' → logprob: -8.34269905090332
    8. '   ' → logprob: -8.96769905090332
    9. ' matched' → logprob: -9.21769905090332
    10. 'matching' → logprob: -9.59269905090332

Token 53: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02925071306526661
    2. ',' → logprob: -4.029250621795654
    3. '):
' → logprob: -4.654250621795654
    4. ')' → logprob: -7.654250621795654
    5. 's' → logprob: -8.029251098632812
    6. '[u' → logprob: -8.529251098632812
    7. 'u' → logprob: -9.154251098632812
    8. ' ):' → logprob: -9.404251098632812
    9. 'ed' → logprob: -9.904251098632812
    10. '[' → logprob: -10.154251098632812

Token 54: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11677772551774979
    2. '(u' → logprob: -2.8667776584625244
    3. ',' → logprob: -4.2417778968811035
    4. '(' → logprob: -4.2417778968811035
    5. ':' → logprob: -4.4917778968811035
    6. '):' → logprob: -5.3667778968811035
    7. '[' → logprob: -5.8667778968811035
    8. ')' → logprob: -6.6167778968811035
    9. ' (' → logprob: -6.8667778968811035
    10. '[u' → logprob: -7.1167778968811035

Token 55: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.597001314163208
    2. ' for' → logprob: -0.847001314163208
    3. ':' → logprob: -4.847001075744629
    4. 'for' (adapté à ' for') → logprob: -5.097001075744629
    5. ' if' → logprob: -5.972001075744629
    6. ' ' → logprob: -6.722001075744629
    7. '[' → logprob: -6.972001075744629
    8. ' :' → logprob: -7.722001075744629
    9. '  ' → logprob: -7.972001075744629
    10. '    ' → logprob: -7.972001075744629

Token 56: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.22547292709350586
    2. 'v' → logprob: -1.6004729270935059
    3. ' ' → logprob: -10.100473403930664
    4. '	v' → logprob: -11.475473403930664
    5. 'w' → logprob: -13.350473403930664
    6. ' w' → logprob: -13.475473403930664
    7. '   ' → logprob: -13.850473403930664
    8. '<v' → logprob: -13.850473403930664
    9. '  ' → logprob: -14.100473403930664
    10. '(v' → logprob: -14.850473403930664

Token 57: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.013088231906294823
    2. 'in' → logprob: -4.513088226318359
    3. ' ' → logprob: -6.388088226318359
    4. '  ' → logprob: -9.13808822631836
    5. '	in' → logprob: -9.26308822631836
    6. '<|end|>' → logprob: -9.38808822631836
    7. ' ,' → logprob: -11.13808822631836
    8. '   ' → logprob: -11.13808822631836
    9. ',' → logprob: -11.26308822631836
    10. '    ' → logprob: -12.26308822631836

Token 58: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.3487400710582733
    2. ' graph' → logprob: -1.2237401008605957
    3. ' range' → logprob: -9.098739624023438
    4. '	graph' → logprob: -9.473739624023438
    5. 'range' → logprob: -9.848739624023438
    6. '(graph' → logprob: -9.973739624023438
    7. ' ' → logprob: -12.348739624023438
    8. '   ' → logprob: -13.723739624023438
    9. '  ' → logprob: -14.348739624023438
    10. 'raph' → logprob: -14.723739624023438

Token 59: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -3.4121114822482923e-06
    2. '[' → logprob: -13.375003814697266
    3. ' [' → logprob: -14.250003814697266
    4. 'u' → logprob: -14.375003814697266
    5. '   ' → logprob: -15.250003814697266
    6. '```' → logprob: -15.625003814697266
    7. '\[' → logprob: -17.625003814697266
    8. '	u' → logprob: -17.750003814697266
    9. '
' → logprob: -18.000003814697266
    10. '[a' → logprob: -18.125003814697266

Token 60: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.00023691373644396663
    2. '):' → logprob: -9.250236511230469
    3. ']):' → logprob: -9.375236511230469
    4. ']' → logprob: -10.000236511230469
    5. ']:
' → logprob: -11.875236511230469
    6. ']:
' → logprob: -13.750236511230469
    7. '']:' → logprob: -14.750236511230469
    8. '}:' → logprob: -14.750236511230469
    9. ' ]' → logprob: -14.875236511230469
    10. ':' → logprob: -15.000236511230469

Token 61: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34679633378982544
    2. ':' → logprob: -1.5967962741851807
    3. ' if' → logprob: -2.4717962741851807
    4. '   ' → logprob: -6.09679651260376
    5. '<|end|>' → logprob: -6.09679651260376
    6. '	if' → logprob: -7.97179651260376
    7. '    ' → logprob: -8.596796035766602
    8. ':
' → logprob: -8.721796035766602
    9. 'if' → logprob: -8.846796035766602
    10. '<|end|>' → logprob: -9.096796035766602

Token 62: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.14982564747333527
    2. ' not' → logprob: -2.8998255729675293
    3. '           ' → logprob: -3.2748255729675293
    4. 'if' (adapté à ' if') → logprob: -3.7748255729675293
    5. '       ' → logprob: -4.524825572967529
    6. ' ' → logprob: -5.149825572967529
    7. '        ' → logprob: -6.274825572967529
    8. 'not' → logprob: -6.399825572967529
    9. '<|end|>' → logprob: -6.774825572967529
    10. '   ' → logprob: -7.774825572967529

Token 63: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.0016534021124243736
    2. 'not' → logprob: -6.62665319442749
    3. ' ' → logprob: -8.751653671264648
    4. ' used' → logprob: -9.126653671264648
    5. ' v' → logprob: -9.876653671264648
    6. '	not' → logprob: -12.376653671264648
    7. 'v' → logprob: -13.501653671264648
    8. 'used' → logprob: -13.501653671264648
    9. ' no' → logprob: -14.251653671264648
    10. ' ' → logprob: -14.814153671264648

Token 64: ' used' (ID: 2061)
  Prédit: ' used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' used' → logprob: -0.0017048174049705267
    2. 'used' → logprob: -6.376704692840576
    3. '   ' → logprob: -14.626705169677734
    4. ' visited' → logprob: -14.626705169677734
    5. ' v' → logprob: -15.001705169677734
    6. '.used' → logprob: -15.001705169677734
    7. 'Used' → logprob: -15.126705169677734
    8. ' ' → logprob: -15.376705169677734
    9. ' ' → logprob: -16.126705169677734
    10. '_used' → logprob: -16.126705169677734

Token 65: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.375
    3. '[u' → logprob: -16.5
    4. '	v' → logprob: -18.375
    5. 'v' → logprob: -18.875
    6. '```' → logprob: -18.875
    7. ' [' → logprob: -19.625
    8. ' v' → logprob: -19.875
    9. '[V' → logprob: -20.0
    10. '<v' → logprob: -20.125

Token 66: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.12799274921417236
    2. ']:
' → logprob: -2.127992630004883
    3. ']:
' → logprob: -7.502992630004883
    4. ']' → logprob: -8.627992630004883
    5. ']:

' → logprob: -8.877992630004883
    6. ' ]' → logprob: -8.877992630004883
    7. ':' → logprob: -10.377992630004883
    8. ']:


' → logprob: -11.502992630004883
    9. '']:' → logprob: -12.377992630004883
    10. '']:
' → logprob: -12.627992630004883

Token 67: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.021101845428347588
    2. ':' → logprob: -4.271101951599121
    3. '
' → logprob: -6.271101951599121
    4. '            
' → logprob: -6.521101951599121
    5. '       ' → logprob: -6.771101951599121
    6. ':
' → logprob: -7.146101951599121
    7. '               ' → logprob: -8.396101951599121
    8. '   ' → logprob: -8.521101951599121
    9. '```' → logprob: -8.521101951599121
    10. '\n' → logprob: -8.646101951599121

Token 68: ' used' (ID: 2061)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02313867397606373
    2. ' 
' → logprob: -5.023138523101807
    3. '           ' → logprob: -5.148138523101807
    4. ' used' → logprob: -5.898138523101807
    5. '<|end|>' → logprob: -6.273138523101807
    6. '
' → logprob: -6.523138523101807
    7. '       ' → logprob: -6.523138523101807
    8. '                
' → logprob: -7.148138523101807
    9. ' ' → logprob: -7.773138523101807
    10. '            
' → logprob: -8.273138999938965

Token 69: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.5048530030981055e-06
    2. '[' → logprob: -13.750001907348633
    3. '[u' → logprob: -16.125001907348633
    4. 'v' → logprob: -16.250001907348633
    5. '```' → logprob: -17.125001907348633
    6. '][' → logprob: -18.500001907348633
    7. '[V' → logprob: -18.625001907348633
    8. '	v' → logprob: -18.750001907348633
    9. '<v' → logprob: -19.625001907348633
    10. ']' → logprob: -20.000001907348633

Token 70: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -6.599403423024341e-05
    2. '[v' → logprob: -10.000065803527832
    3. ']=' → logprob: -11.500065803527832
    4. ' ]' → logprob: -11.750065803527832
    5. '']' → logprob: -13.750065803527832
    6. '"]' → logprob: -14.875065803527832
    7. '`]' → logprob: -15.000065803527832
    8. '[' → logprob: -15.250065803527832
    9. 'v' → logprob: -15.500065803527832
    10. ']
' → logprob: -15.875065803527832

Token 71: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22565874457359314
    2. '=' → logprob: -1.6006587743759155
    3. '[v' → logprob: -8.850658416748047
    4. ']' → logprob: -9.600658416748047
    5. '[' → logprob: -10.850658416748047
    6. ' ' → logprob: -11.975658416748047
    7. '=True' → logprob: -12.725658416748047
    8. 'v' → logprob: -13.350658416748047
    9. ']=' → logprob: -13.725658416748047
    10. '=v' → logprob: -13.725658416748047

Token 72: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.20141440629959106
    2. ' True' → logprob: -1.7014143466949463
    3. '1' → logprob: -14.326414108276367
    4. '(True' → logprob: -15.076414108276367
    5. '=True' → logprob: -16.076414108276367
    6. 'Tr' → logprob: -16.826414108276367
    7. ' ' → logprob: -17.201414108276367
    8. '   ' → logprob: -17.826414108276367
    9. 'T' → logprob: -18.576414108276367
    10. ' Tru' → logprob: -18.826414108276367

Token 73: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5488156676292419
    2. '<|end|>' → logprob: -0.9238156676292419
    3. '           ' → logprob: -4.298815727233887
    4. '       ' → logprob: -5.423815727233887
    5. '<|end|>' → logprob: -5.548815727233887
    6. '            
' → logprob: -7.548815727233887
    7. '\n' → logprob: -7.548815727233887
    8. '               ' → logprob: -7.798815727233887
    9. ',' → logprob: -7.798815727233887
    10. ')' → logprob: -8.173815727233887

Token 74: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9380844235420227
    2. '           ' → logprob: -0.9380844235420227
    3. '<|end|>' → logprob: -2.438084363937378
    4. '       ' → logprob: -2.813084363937378
    5. '            
' → logprob: -3.438084363937378
    6. '   ' → logprob: -4.813084602355957
    7. ',' → logprob: -5.063084602355957
    8. '               ' → logprob: -5.313084602355957
    9. '<|end|>' → logprob: -5.938084602355957
    10. '    
' → logprob: -6.063084602355957

Token 75: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.38880589604377747
    2. ' if' → logprob: -1.138805866241455
    3. '           ' → logprob: -6.263805866241455
    4. '               ' → logprob: -10.638806343078613
    5. '   ' → logprob: -13.263806343078613
    6. '```' → logprob: -13.638806343078613
    7. '       ' → logprob: -14.513806343078613
    8. '            
' → logprob: -14.638806343078613
    9. '
' → logprob: -14.888806343078613
    10. ')' → logprob: -15.388806343078613

Token 76: ' match' (ID: 3981)
  Prédit: ' match'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' match' → logprob: -0.08900632709264755
    2. 'match' → logprob: -2.4640064239501953
    3. ' not' → logprob: -10.089006423950195
    4. ' ' → logprob: -11.714006423950195
    5. '(match' → logprob: -12.089006423950195
    6. '	match' → logprob: -12.214006423950195
    7. 'not' → logprob: -13.589006423950195
    8. ' v' → logprob: -13.589006423950195
    9. '   ' → logprob: -13.714006423950195
    10. 'm' → logprob: -14.464006423950195

Token 77: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -4.320199877838604e-07
    2. 'v' → logprob: -15.5
    3. '[' → logprob: -16.0
    4. '[u' → logprob: -18.375
    5. ' [' → logprob: -18.625
    6. '```' → logprob: -18.875
    7. '[V' → logprob: -19.375
    8. ' v' → logprob: -19.5
    9. '<v' → logprob: -19.5
    10. '[
' → logprob: -19.625

Token 78: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.742110013961792
    2. ')' → logprob: -1.867110013961792
    3. ' is' → logprob: -1.867110013961792
    4. '==' → logprob: -2.117110013961792
    5. ']==' → logprob: -3.117110013961792
    6. ' ==' → logprob: -3.492110013961792
    7. '[' → logprob: -4.867110252380371
    8. '==-' → logprob: -5.117110252380371
    9. ')==' → logprob: -5.617110252380371
    10. 'is' → logprob: -7.617110252380371

Token 79: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1853780299425125
    2. '==' → logprob: -2.185378074645996
    3. ' is' → logprob: -3.310378074645996
    4. '==-' → logprob: -3.935378074645996
    5. 'is' → logprob: -7.685378074645996
    6. '<' → logprob: -9.310378074645996
    7. ')' → logprob: -9.560378074645996
    8. '[' → logprob: -9.810378074645996
    9. '=' → logprob: -11.185378074645996
    10. '===' → logprob: -11.310378074645996

Token 80: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0017024369444698095
    2. ' -' → logprob: -6.376702308654785
    3. 'None' → logprob: -15.501702308654785
    4. ' ' → logprob: -16.8767032623291
    5. ' None' → logprob: -17.2517032623291
    6. '   ' → logprob: -17.8767032623291
    7. '0' → logprob: -18.5017032623291
    8. '−' → logprob: -18.8767032623291
    9. '  ' → logprob: -19.7517032623291
    10. '<|end|>' → logprob: -20.3767032623291

Token 81: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.816093228830141e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -16.500001907348633
    4. '  ' → logprob: -17.625001907348633
    5. '2' → logprob: -18.500001907348633
    6. '```' → logprob: -18.750001907348633
    7. '１' → logprob: -19.125001907348633
    8. '    ' → logprob: -19.500001907348633
    9. '-' → logprob: -19.625001907348633
    10. ' -' → logprob: -19.750001907348633

Token 82: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.00015586259542033076
    2. ' ' → logprob: -9.250155448913574
    3. 'or' → logprob: -9.750155448913574
    4. '	or' → logprob: -14.125155448913574
    5. '<|end|>' → logprob: -15.250155448913574
    6. '    ' → logprob: -16.25015640258789
    7. ')' → logprob: -16.50015640258789
    8. '  ' → logprob: -16.87515640258789
    9. ' orun' → logprob: -17.00015640258789
    10. ' или' → logprob: -17.25015640258789

Token 83: ' try' (ID: 2075)
  Prédit: ' try'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' try' → logprob: -0.08894796669483185
    2. 'try' → logprob: -2.4639480113983154
    3. ' can' → logprob: -11.963948249816895
    4. '.try' → logprob: -14.463948249816895
    5. '   ' → logprob: -14.588948249816895
    6. ' ' → logprob: -14.963948249816895
    7. '	try' → logprob: -15.588948249816895
    8. '```' → logprob: -15.838948249816895
    9. 'Try' → logprob: -15.963948249816895
    10. ' ' → logprob: -16.213947296142578

Token 84: '_match' (ID: 26039)
  Prédit: '_match'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_match' → logprob: -4.246537173457909e-06
    2. '_' → logprob: -12.750003814697266
    3. ' _' → logprob: -14.250003814697266
    4. 'match' → logprob: -15.250003814697266
    5. '_matching' → logprob: -15.250003814697266
    6. '_mat' → logprob: -15.750003814697266
    7. '_m' → logprob: -17.000003814697266
    8. '```' → logprob: -17.375003814697266
    9. '_MATCH' → logprob: -17.500003814697266
    10. ' match' → logprob: -17.625003814697266

Token 85: '(match' (ID: 61646)
  Prédit: '(match'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(match' → logprob: -0.01107647456228733
    2. '(' → logprob: -4.5110764503479
    3. '(
' → logprob: -10.511076927185059
    4. '(matches' → logprob: -14.761076927185059
    5. 'match' → logprob: -15.261076927185059
    6. ' (' → logprob: -15.886076927185059
    7. '(

' → logprob: -15.886076927185059
    8. '(mask' → logprob: -16.261075973510742
    9. ' match' → logprob: -16.261075973510742
    10. '(mat' → logprob: -16.386075973510742

Token 86: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.049794189631938934
    2. '[' → logprob: -3.1747941970825195
    3. '(match' → logprob: -5.2997941970825195
    4. '(v' → logprob: -6.7997941970825195
    5. '[
' → logprob: -8.29979419708252
    6. 'match' → logprob: -8.67479419708252
    7. ' match' → logprob: -9.67479419708252
    8. ')' → logprob: -9.67479419708252
    9. ')[' → logprob: -9.79979419708252
    10. '```' → logprob: -11.29979419708252

Token 87: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.0219828002154827e-05
    2. ' ,' → logprob: -11.125020027160645
    3. ',u' → logprob: -12.875020027160645
    4. ',v' → logprob: -14.375020027160645
    5. '),' → logprob: -14.625020027160645
    6. '],' → logprob: -15.125020027160645
    7. '‌,' → logprob: -15.375020027160645
    8. '   ' → logprob: -15.750020027160645
    9. ')' → logprob: -16.00002098083496
    10. '`,' → logprob: -16.12502098083496

Token 88: ' graph' (ID: 7465)
  Prédit: ' graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.6949101686477661
    2. 'graph' → logprob: -0.6949101686477661
    3. ' match' → logprob: -6.569910049438477
    4. 'match' → logprob: -8.819910049438477
    5. '	graph' → logprob: -9.319910049438477
    6. '   ' → logprob: -9.944910049438477
    7. ' used' → logprob: -10.194910049438477
    8. 'used' → logprob: -11.944910049438477
    9. '           ' → logprob: -12.069910049438477
    10. ' ' → logprob: -12.069910049438477

Token 89: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012749579036608338
    2. ' ,' → logprob: -9.000127792358398
    3. 'used' → logprob: -13.625127792358398
    4. '   ' → logprob: -14.375127792358398
    5. ' used' → logprob: -14.375127792358398
    6. '),' → logprob: -14.625127792358398
    7. '```' → logprob: -15.500127792358398
    8. ',
' → logprob: -15.750127792358398
    9. '           ' → logprob: -16.0001277923584
    10. ' match' → logprob: -16.1251277923584

Token 90: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.25193464756011963
    2. ' used' → logprob: -1.5019346475601196
    3. '   ' → logprob: -13.001935005187988
    4. ' ' → logprob: -13.251935005187988
    5. '    ' → logprob: -15.376935005187988
    6. '_used' → logprob: -15.376935005187988
    7. '  ' → logprob: -15.501935005187988
    8. '.used' → logprob: -15.501935005187988
    9. '-used' → logprob: -15.876935005187988
    10. 'Used' → logprob: -16.251934051513672

Token 91: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001370320824207738
    2. ')' → logprob: -9.500137329101562
    3. ' ,' → logprob: -9.750137329101562
    4. ',
' → logprob: -13.750137329101562
    5. ' match' → logprob: -14.250137329101562
    6. '),' → logprob: -14.750137329101562
    7. ',

' → logprob: -15.125137329101562
    8. 'match' → logprob: -15.500137329101562
    9. ',)' → logprob: -15.625137329101562
    10. ',v' → logprob: -15.750137329101562

Token 92: ' match' (ID: 3981)
  Prédit: 'match'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'match' → logprob: -0.03810414299368858
    2. ' match' → logprob: -3.2881040573120117
    3. ' ' → logprob: -10.163104057312012
    4. '   ' → logprob: -11.038104057312012
    5. '	match' → logprob: -13.163104057312012
    6. '  ' → logprob: -13.288104057312012
    7. '```' → logprob: -13.288104057312012
    8. '    ' → logprob: -14.413104057312012
    9. ')' → logprob: -14.413104057312012
    10. 'v' → logprob: -14.413104057312012

Token 93: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12946510314941406
    2. ')' → logprob: -2.129465103149414
    3. '):
' → logprob: -6.004465103149414
    4. ' ):' → logprob: -10.254465103149414
    5. '):
' → logprob: -11.504465103149414
    6. '):

' → logprob: -11.504465103149414
    7. ':' → logprob: -12.254465103149414
    8. '   ' → logprob: -13.504465103149414
    9. ' )' → logprob: -13.629465103149414
    10. ')：' → logprob: -14.254465103149414

Token 94: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005872295005246997
    2. ' match' → logprob: -8.250587463378906
    3. '):
' → logprob: -8.625587463378906
    4. '           ' → logprob: -9.875587463378906
    5. ':
' → logprob: -10.500587463378906
    6. ')' → logprob: -10.875587463378906
    7. '                   ' → logprob: -11.625587463378906
    8. '       ' → logprob: -11.625587463378906
    9. ' :
' → logprob: -12.125587463378906
    10. '   ' → logprob: -12.375587463378906

Token 95: ' match' (ID: 3981)
  Prédit: ' match'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' match' → logprob: -0.1019449532032013
    2. 'match' (adapté à ' match') → logprob: -2.351944923400879
    3. '                   ' → logprob: -6.601944923400879
    4. '               ' → logprob: -7.976944923400879
    5. ' ' → logprob: -11.351944923400879
    6. '           ' → logprob: -11.476944923400879
    7. '   ' → logprob: -11.976944923400879
    8. '	match' → logprob: -12.351944923400879
    9. '                ' → logprob: -14.351944923400879
    10. '                       ' → logprob: -14.601944923400879

Token 96: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -3.292907877039397e-06
    2. '[' → logprob: -12.87500286102295
    3. 'v' → logprob: -14.50000286102295
    4. '[u' → logprob: -15.62500286102295
    5. '```' → logprob: -17.375003814697266
    6. '[s' → logprob: -19.000003814697266
    7. '[V' → logprob: -19.125003814697266
    8. '	v' → logprob: -19.250003814697266
    9. '\[' → logprob: -20.125003814697266
    10. '[x' → logprob: -20.125003814697266

Token 97: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006721178535372019
    2. '[u' → logprob: -5.006721019744873
    3. 'u' → logprob: -12.881721496582031
    4. ']=' → logprob: -13.006721496582031
    5. ' ]' → logprob: -14.131721496582031
    6. '[' → logprob: -15.881721496582031
    7. '   ' → logprob: -17.13172149658203
    8. '']' → logprob: -17.13172149658203
    9. '"]' → logprob: -17.13172149658203
    10. ']
' → logprob: -17.63172149658203

Token 98: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.043251290917396545
    2. '=' → logprob: -3.1682512760162354
    3. '[u' → logprob: -8.793251037597656
    4. '=u' → logprob: -10.043251037597656
    5. '[' → logprob: -10.168251037597656
    6. ')' → logprob: -11.793251037597656
    7. ']' → logprob: -12.293251037597656
    8. ' ' → logprob: -12.668251037597656
    9. '<|end|>' → logprob: -13.793251037597656
    10. 'u' → logprob: -14.793251037597656

Token 99: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.003178901970386505
    2. ' u' → logprob: -5.75317907333374
    3. '	u' → logprob: -13.628178596496582
    4. '[u' → logprob: -18.5031795501709
    5. '<|end|>' → logprob: -19.6281795501709
    6. '
' → logprob: -20.5031795501709
    7. '   ' → logprob: -20.8781795501709
    8. '*u' → logprob: -21.0031795501709
    9. '<u' → logprob: -21.1281795501709
    10. ''u' → logprob: -21.1281795501709

Token 100: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8082882761955261
    2. '
' → logprob: -1.683288335800171
    3. '<|end|>' → logprob: -2.433288335800171
    4. ' return' → logprob: -2.683288335800171
    5. '   ' → logprob: -2.933288335800171
    6. '       ' → logprob: -3.058288335800171
    7. '           ' → logprob: -3.183288335800171
    8. 'return' → logprob: -3.683288335800171
    9. '                   ' → logprob: -4.058288097381592
    10. '	return' → logprob: -4.433288097381592

Token 101: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -4.7159857786027715e-05
    2. ' return' → logprob: -11.250046730041504
    3. '       ' → logprob: -11.875046730041504
    4. '<|end|>' → logprob: -11.875046730041504
    5. '		       ' → logprob: -12.500046730041504
    6. '           ' → logprob: -12.875046730041504
    7. 'return' → logprob: -13.000046730041504
    8. '			' → logprob: -13.125046730041504
    9. '   ' → logprob: -13.375046730041504
    10. '                   ' → logprob: -13.500046730041504

Token 102: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.017320549115538597
    2. ' return' → logprob: -4.26732063293457
    3. '               ' → logprob: -5.76732063293457
    4. ':return' → logprob: -11.51732063293457
    5. '                   ' → logprob: -12.26732063293457
    6. '	return' → logprob: -12.64232063293457
    7. '   ' → logprob: -13.01732063293457
    8. '           ' → logprob: -13.89232063293457
    9. 'true' → logprob: -14.39232063293457
    10. '@return' → logprob: -14.51732063293457

Token 103: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.00861456897109747
    2. ' True' → logprob: -4.758614540100098
    3. '(True' → logprob: -19.883615493774414
    4. '1' → logprob: -21.258615493774414
    5. '=True' → logprob: -22.008615493774414
    6. '   ' → logprob: -23.383615493774414
    7. 'true' → logprob: -23.758615493774414
    8. '.True' → logprob: -24.383615493774414
    9. 'TRUE' → logprob: -24.633615493774414
    10. 'Tr' → logprob: -25.008615493774414

Token 104: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018494877964258194
    2. '
' → logprob: -4.893495082855225
    3. '       ' → logprob: -5.393495082855225
    4. '	return' → logprob: -5.893495082855225
    5. '<|end|>' → logprob: -6.018495082855225
    6. ' return' → logprob: -8.143494606018066
    7. '    
' → logprob: -8.643494606018066
    8. 'return' → logprob: -8.643494606018066
    9. '<|end|>' → logprob: -9.393494606018066
    10. '    ' → logprob: -9.393494606018066

Token 105: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00012833021173719317
    2. '       ' → logprob: -9.625128746032715
    3. 'return' → logprob: -10.250128746032715
    4. 'False' → logprob: -11.000128746032715
    5. '
' → logprob: -12.250128746032715
    6. ' return' → logprob: -13.500128746032715
    7. '	return' → logprob: -13.625128746032715
    8. '           ' → logprob: -13.875128746032715
    9. '    
' → logprob: -14.875128746032715
    10. '```' → logprob: -14.875128746032715

Token 106: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0033734154421836138
    2. '
' → logprob: -6.878373622894287
    3. 'return' (adapté à ' return') → logprob: -6.878373622894287
    4. ' return' → logprob: -7.128373622894287
    5. 'False' → logprob: -8.628373146057129
    6. '       ' → logprob: -9.003373146057129
    7. '	return' → logprob: -9.628373146057129
    8. '    
' → logprob: -10.003373146057129
    9. ':return' → logprob: -10.378373146057129
    10. ' False' → logprob: -10.878373146057129

Token 107: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.029750484973192215
    2. 'False' → logprob: -3.5297505855560303
    3. '(False' → logprob: -19.52975082397461
    4. ' True' → logprob: -21.15475082397461
    5. ' ' → logprob: -21.65475082397461
    6. ' false' → logprob: -21.65475082397461
    7. '=False' → logprob: -22.27975082397461
    8. '_false' → logprob: -22.40475082397461
    9. '.False' → logprob: -22.52975082397461
    10. '   ' → logprob: -23.15475082397461

Token 108: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.32455793023109436
    2. 'def' → logprob: -1.449557900428772
    3. '

' → logprob: -3.1995580196380615
    4. '<|end|>' → logprob: -6.949557781219482
    5. '  
' → logprob: -8.32455825805664
    6. '
' → logprob: -9.07455825805664
    7. '```' → logprob: -9.32455825805664
    8. '\n' → logprob: -9.57455825805664
    9. ' 
' → logprob: -9.57455825805664
    10. ' def' → logprob: -9.82455825805664

Token 109: 'while' (ID: 7032)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0009299254161305726
    2. '

' → logprob: -7.625929832458496
    3. '
' → logprob: -7.750929832458496
    4. 'ndef' → logprob: -13.000929832458496
    5. '<|end|>' → logprob: -13.000929832458496
    6. ' def' → logprob: -13.750929832458496
    7. '```' → logprob: -13.750929832458496
    8. '  
' → logprob: -13.750929832458496
    9. '    
' → logprob: -14.000929832458496
    10. '\' → logprob: -14.625929832458496

Token 110: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.010282357223331928
    2. 'True' → logprob: -4.635282516479492
    3. ' not' → logprob: -8.760282516479492
    4. ' T' → logprob: -8.885282516479492
    5. ' n' → logprob: -9.010282516479492
    6. ' ' → logprob: -10.510282516479492
    7. ' input' → logprob: -11.385282516479492
    8. '(True' → logprob: -11.510282516479492
    9. ' i' → logprob: -11.635282516479492
    10. '=True' → logprob: -12.010282516479492

Token 111: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007321976590901613
    2. ' :' → logprob: -7.250732421875
    3. ':
' → logprob: -11.250732421875
    4. '():' → logprob: -11.750732421875
    5. ':**' → logprob: -14.625732421875
    6. '):' → logprob: -15.750732421875
    7. ',' → logprob: -15.750732421875
    8. ':def' → logprob: -16.000732421875
    9. ' :
' → logprob: -16.375732421875
    10. ':

' → logprob: -16.500732421875

Token 112: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008705805987119675
    2. ' try' → logprob: -4.7587056159973145
    3. 'try' → logprob: -10.008706092834473
    4. ' line' → logprob: -10.633706092834473
    5. '   ' → logprob: -11.508706092834473
    6. ' input' → logprob: -12.508706092834473
    7. '    
' → logprob: -13.133706092834473
    8. ' n' → logprob: -13.133706092834473
    9. '	try' → logprob: -14.258706092834473
    10. '       ' → logprob: -14.633706092834473

Token 113: ' line' (ID: 2543)
  Prédit: ' try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' try' → logprob: -0.4067583680152893
    2. 'try' → logprob: -1.6567583084106445
    3. 'n' → logprob: -2.7817583084106445
    4. ' n' → logprob: -3.1567583084106445
    5. '   ' → logprob: -3.2817583084106445
    6. ' line' → logprob: -6.7817583084106445
    7. 't' → logprob: -9.531758308410645
    8. 'line' (adapté à ' line') → logprob: -9.656758308410645
    9. ' t' → logprob: -10.531758308410645
    10. '```' → logprob: -10.906758308410645

Token 114: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023248272016644478
    2. '=' → logprob: -3.7732481956481934
    3. 's' → logprob: -13.023248672485352
    4. '=line' → logprob: -15.398248672485352
    5. ' ' → logprob: -15.898248672485352
    6. '_' → logprob: -16.64824867248535
    7. '.strip' → logprob: -16.89824867248535
    8. '   ' → logprob: -17.14824867248535
    9. '=input' → logprob: -17.27324867248535
    10. ' =)' → logprob: -17.64824867248535

Token 115: ' ''
' (ID: 25366)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5759395360946655
    2. ' input' → logprob: -0.8259395360946655
    3. ' ' → logprob: -16.700939178466797
    4. '=input' → logprob: -16.700939178466797
    5. '	input' → logprob: -19.075939178466797
    6. '(input' → logprob: -19.200939178466797
    7. '   ' → logprob: -19.575939178466797
    8. '<input' → logprob: -19.825939178466797
    9. '_input' → logprob: -20.450939178466797
    10. '.input' → logprob: -21.700939178466797

Token 116: '   ' (ID: 271)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007775086909532547
    2. '=' → logprob: -4.88277530670166
    3. '=line' → logprob: -10.00777530670166
    4. ' ' → logprob: -10.25777530670166
    5. '   ' → logprob: -10.50777530670166
    6. 'line' → logprob: -11.13277530670166
    7. 'input' → logprob: -11.25777530670166
    8. '=input' → logprob: -11.38277530670166
    9. ' line' → logprob: -12.38277530670166
    10. '()' → logprob: -12.75777530670166

Token 117: ' while' (ID: 2049)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'try' → logprob: -0.005816452670842409
    2. 'input' → logprob: -5.380816459655762
    3. ' try' → logprob: -6.880816459655762
    4. 'line' → logprob: -9.005816459655762
    5. '
' → logprob: -11.255816459655762
    6. 'break' → logprob: -11.380816459655762
    7. ' input' → logprob: -11.755816459655762
    8. 'import' → logprob: -12.255816459655762
    9. ' line' → logprob: -13.380816459655762
    10. 'while' (adapté à ' while') → logprob: -13.380816459655762

Token 118: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.2995896637439728
    2. 'line' → logprob: -1.7995896339416504
    3. ' True' → logprob: -2.9245896339416504
    4. ' not' → logprob: -3.4245896339416504
    5. 'True' → logprob: -5.29958963394165
    6. '(line' → logprob: -6.54958963394165
    7. 'not' → logprob: -7.79958963394165
    8. '(True' → logprob: -8.174590110778809
    9. ' len' → logprob: -9.799590110778809
    10. 'len' → logprob: -10.424590110778809

Token 119: '.strip' (ID: 40613)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.25059813261032104
    2. ' ==' → logprob: -2.000598192214966
    3. '.strip' → logprob: -2.500598192214966
    4. '=' → logprob: -6.375597953796387
    5. ':=' → logprob: -6.500597953796387
    6. ' :=' → logprob: -7.500597953796387
    7. ' =' → logprob: -8.250597953796387
    8. ' !=' → logprob: -9.375597953796387
    9. '.' → logprob: -9.375597953796387
    10. 'strip' → logprob: -9.625597953796387

Token 120: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3787807524204254
    2. '()==' → logprob: -1.628780722618103
    3. '==' → logprob: -2.1287808418273926
    4. ' ==' → logprob: -8.878780364990234
    5. '=' → logprob: -11.628780364990234
    6. '===' → logprob: -13.128780364990234
    7. '```' → logprob: -14.628780364990234
    8. '()!=' → logprob: -14.753780364990234
    9. '()<' → logprob: -14.753780364990234
    10. '()=="' → logprob: -14.753780364990234

Token 121: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.001453567179851234
    2. '()==' → logprob: -7.126453399658203
    3. ' ==' → logprob: -7.376453399658203
    4. '()' → logprob: -10.876453399658203
    5. '===' → logprob: -13.251453399658203
    6. '=' → logprob: -13.626453399658203
    7. '==
' → logprob: -14.501453399658203
    8. '=='' → logprob: -15.251453399658203
    9. ']==' → logprob: -15.876453399658203
    10. ')==' → logprob: -15.876453399658203

Token 122: ' '':
' (ID: 125614)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.10020958632230759
    2. '''' → logprob: -2.3502094745635986
    3. ''''' → logprob: -14.35020923614502
    4. '"":' → logprob: -14.35020923614502
    5. '''
' → logprob: -14.35020923614502
    6. ' '':
' → logprob: -15.10020923614502
    7. ' '' → logprob: -15.47520923614502
    8. ''',' → logprob: -15.47520923614502
    9. '':' → logprob: -16.100210189819336
    10. '''.' → logprob: -16.600210189819336

Token 123: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2621020972728729
    2. '       ' → logprob: -2.2621021270751953
    3. ' line' → logprob: -2.3871021270751953
    4. ':' → logprob: -3.6371021270751953
    5. 'line' → logprob: -6.137102127075195
    6. ':
' → logprob: -6.512102127075195
    7. ' or' → logprob: -6.887102127075195
    8. '=line' → logprob: -6.887102127075195
    9. '(line' → logprob: -7.137102127075195
    10. ' and' → logprob: -7.887102127075195

Token 124: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.27560311555862427
    2. 'try' → logprob: -1.5256030559539795
    3. ' line' → logprob: -3.9006030559539795
    4. ' try' → logprob: -5.900603294372559
    5. '   ' → logprob: -7.900603294372559
    6. '
' → logprob: -10.275603294372559
    7. '	line' → logprob: -11.900603294372559
    8. 'import' → logprob: -12.650603294372559
    9. '```' → logprob: -13.275603294372559
    10. 's' → logprob: -13.650603294372559

Token 125: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5231270790100098
    2. '=' → logprob: -0.8981270790100098
    3. '=line' → logprob: -13.523126602172852
    4. ' ' → logprob: -14.023126602172852
    5. 's' → logprob: -15.273126602172852
    6. '＝' → logprob: -15.648126602172852
    7. '=input' → logprob: -15.773126602172852
    8. '+=' → logprob: -16.14812660217285
    9. '=
' → logprob: -16.71062660217285
    10. '<|end|>' → logprob: -16.83562660217285

Token 126: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.029750604182481766
    2. ' input' → logprob: -3.5297505855560303
    3. '=input' → logprob: -16.90475082397461
    4. '   ' → logprob: -18.02975082397461
    5. '(input' → logprob: -18.52975082397461
    6. ' ' → logprob: -18.90475082397461
    7. '	input' → logprob: -18.90475082397461
    8. 'sys' → logprob: -19.02975082397461
    9. '
' → logprob: -20.02975082397461
    10. '<input' → logprob: -20.40475082397461

Token 127: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -6.277553620748222e-05
    2. '(' → logprob: -10.125062942504883
    3. '().' → logprob: -11.750062942504883
    4. '('' → logprob: -11.875062942504883
    5. '()
' → logprob: -12.500062942504883
    6. '()

' → logprob: -14.000062942504883
    7. '()>' → logprob: -14.250062942504883
    8. '()`' → logprob: -14.750062942504883
    9. '();' → logprob: -15.000062942504883
    10. '())' → logprob: -15.000062942504883

Token 128: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013154702261090279
    2. ' if' → logprob: -4.38815450668335
    3. ' ' → logprob: -8.763154983520508
    4. 'if' → logprob: -9.138154983520508
    5. 'try' → logprob: -9.388154983520508
    6. ',' → logprob: -9.388154983520508
    7. ' try' → logprob: -10.138154983520508
    8. '       ' → logprob: -10.513154983520508
    9. '
' → logprob: -10.638154983520508
    10. 'n' → logprob: -10.888154983520508

Token 129: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9836174249649048
    2. ' n' → logprob: -1.3586174249649048
    3. '   ' → logprob: -1.6086174249649048
    4. 'n' → logprob: -1.8586174249649048
    5. 'if' (adapté à ' if') → logprob: -4.483617305755615
    6. ' try' → logprob: -7.608617305755615
    7. 'try' → logprob: -8.108617782592773
    8. ' nums' → logprob: -8.608617782592773
    9. ' numbers' → logprob: -8.858617782592773
    10. '
' → logprob: -9.608617782592773

Token 130: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.14271844923496246
    2. 'line' → logprob: -2.017718553543091
    3. ' not' → logprob: -10.892718315124512
    4. ' ' → logprob: -11.392718315124512
    5. '	line' → logprob: -12.392718315124512
    6. 'int' → logprob: -13.267718315124512
    7. '(line' → logprob: -13.267718315124512
    8. 'not' → logprob: -13.767718315124512
    9. '#line' → logprob: -13.892718315124512
    10. ' ' → logprob: -14.392718315124512

Token 131: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.671736478805542
    2. ' ==' → logprob: -0.796736478805542
    3. '.strip' → logprob: -3.296736478805542
    4. '.' → logprob: -6.796736717224121
    5. '.startswith' → logprob: -9.421736717224121
    6. '=' → logprob: -9.796736717224121
    7. 'strip' → logprob: -10.171736717224121
    8. '=='' → logprob: -10.796736717224121
    9. '()==' → logprob: -11.046736717224121
    10. '=="' → logprob: -11.546736717224121

Token 132: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.21773184835910797
    2. ''' → logprob: -1.7177318334579468
    3. '"' → logprob: -4.467731952667236
    4. ' "' → logprob: -5.467731952667236
    5. ' ' → logprob: -8.217731475830078
    6. '0' → logprob: -8.717731475830078
    7. ''end' → logprob: -11.342731475830078
    8. '   ' → logprob: -11.967731475830078
    9. ''t' → logprob: -12.405231475830078
    10. 'EOF' → logprob: -12.905231475830078

Token 133: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02266842871904373
    2. ''' → logprob: -3.8976683616638184
    3. '"' → logprob: -6.647668361663818
    4. 'END' → logprob: -7.522668361663818
    5. ' ' → logprob: -9.022668838500977
    6. 'EOF' → logprob: -9.897668838500977
    7. '#' → logprob: -10.647668838500977
    8. 'end' → logprob: -10.897668838500977
    9. ''end' → logprob: -11.272668838500977
    10. ''#' → logprob: -11.272668838500977

Token 134: ' ' (ID: 220)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.07129351794719696
    2. '':
' → logprob: -2.696293592453003
    3. ''' → logprob: -7.446293354034424
    4. '0' → logprob: -7.821293354034424
    5. '':
' → logprob: -8.446293830871582
    6. '\n' → logprob: -10.196293830871582
    7. ':' → logprob: -10.571293830871582
    8. ' ' → logprob: -10.571293830871582
    9. ''):
' → logprob: -10.696293830871582
    10. '":' → logprob: -11.446293830871582

Token 135: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008055794751271605
    2. ' ' → logprob: -7.125805377960205
    3. ''' → logprob: -14.625805854797363
    4. '
' → logprob: -15.250805854797363
    5. '':' → logprob: -16.500804901123047
    6. '```' → logprob: -16.750804901123047
    7. 'end' → logprob: -16.875804901123047
    8. '

' → logprob: -16.938304901123047
    9. '00' → logprob: -17.125804901123047
    10. ''):
' → logprob: -17.750804901123047

Token 136: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.28242677450180054
    2. '':' → logprob: -1.4074268341064453
    3. ''' → logprob: -7.532426834106445
    4. '':
' → logprob: -8.157426834106445
    5. '\n' → logprob: -8.282426834106445
    6. ':
' → logprob: -9.657426834106445
    7. ':' → logprob: -9.657426834106445
    8. ' break' → logprob: -10.532426834106445
    9. ''):
' → logprob: -11.157426834106445
    10. '':

' → logprob: -12.032426834106445

Token 137: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05471593514084816
    2. ':' → logprob: -3.304715871810913
    3. '   ' → logprob: -4.304716110229492
    4. ':
' → logprob: -5.804716110229492
    5. '      ' → logprob: -12.304716110229492
    6. ' :' → logprob: -13.304716110229492
    7. '     ' → logprob: -13.429716110229492
    8. '	break' → logprob: -13.429716110229492
    9. '
' → logprob: -13.679716110229492
    10. ' break' → logprob: -14.054716110229492

Token 138: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03372822701931
    2. '   ' → logprob: -4.283728122711182
    3. ' break' → logprob: -4.533728122711182
    4. '
' → logprob: -5.158728122711182
    5. 'break' (adapté à ' break') → logprob: -6.158728122711182
    6. '	break' → logprob: -7.658728122711182
    7. '           ' → logprob: -8.65872859954834
    8. '    
' → logprob: -9.90872859954834
    9. ' ' → logprob: -10.78372859954834
    10. '        
' → logprob: -11.53372859954834

Token 139: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004221570678055286
    2. '    
' → logprob: -5.754221439361572
    3. '
' → logprob: -7.879221439361572
    4. 'a' → logprob: -8.25422191619873
    5. 'n' → logprob: -8.25422191619873
    6. 'tokens' → logprob: -10.75422191619873
    7. 'u' → logprob: -11.12922191619873
    8. 's' → logprob: -11.37922191619873
    9. '```' → logprob: -11.50422191619873
    10. ' parts' → logprob: -11.50422191619873

Token 140: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011526385322213173
    2. '    
' → logprob: -5.011526584625244
    3. 'n' → logprob: -5.636526584625244
    4. '
' → logprob: -7.636526584625244
    5. 'a' → logprob: -8.261526107788086
    6. ' n' → logprob: -9.261526107788086
    7. 's' → logprob: -9.511526107788086
    8. '<|end|>' → logprob: -10.011526107788086
    9. 'tokens' → logprob: -10.386526107788086
    10. '        
' → logprob: -10.386526107788086

Token 141: ' m' (ID: 284)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.18992766737937927
    2. '   ' → logprob: -2.314927577972412
    3. ' n' → logprob: -2.939927577972412
    4. 'a' → logprob: -4.189927577972412
    5. '    
' → logprob: -6.189927577972412
    6. 'nums' → logprob: -6.689927577972412
    7. '
' → logprob: -7.314927577972412
    8. ' 
' → logprob: -7.939927577972412
    9. 'numbers' → logprob: -8.06492805480957
    10. ' a' → logprob: -8.06492805480957

Token 142: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008078085258603096
    2. '=' → logprob: -5.633078098297119
    3. ' =' → logprob: -5.633078098297119
    4. ',n' → logprob: -7.883078098297119
    5. 'arks' → logprob: -9.133077621459961
    6. ' ,' → logprob: -9.758077621459961
    7. 's' → logprob: -9.758077621459961
    8. 'a' → logprob: -9.883077621459961
    9. '_values' → logprob: -9.883077621459961
    10. 'ax' → logprob: -10.258077621459961

Token 143: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.02980858087539673
    2. ' n' → logprob: -3.529808521270752
    3. ' ' → logprob: -10.52980899810791
    4. 's' → logprob: -12.15480899810791
    5. 'm' → logprob: -12.40480899810791
    6. 'w' → logprob: -12.90480899810791
    7. '   ' → logprob: -13.02980899810791
    8. 'k' → logprob: -13.02980899810791
    9. '	n' → logprob: -13.02980899810791
    10. '  ' → logprob: -13.15480899810791

Token 144: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0889434963464737
    2. '=' → logprob: -2.4639434814453125
    3. '    ' → logprob: -13.338943481445312
    4. '   ' → logprob: -13.588943481445312
    5. ' ' → logprob: -14.213943481445312
    6. ')' → logprob: -15.463943481445312
    7. '  ' → logprob: -16.338943481445312
    8. '=int' → logprob: -16.963943481445312
    9. '	' → logprob: -17.463943481445312
    10. ',' → logprob: -17.588943481445312

Token 145: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.018150994554162025
    2. 'map' → logprob: -4.018150806427002
    3. ' ' → logprob: -14.89315128326416
    4. '   ' → logprob: -15.26815128326416
    5. '	map' → logprob: -15.64315128326416
    6. ' line' → logprob: -15.76815128326416
    7. ' list' → logprob: -17.143150329589844
    8. ' ' → logprob: -17.268150329589844
    9. ' m' → logprob: -17.393150329589844
    10. '  ' → logprob: -17.893150329589844

Token 146: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0006373812211677432
    2. '(str' → logprob: -7.750637531280518
    3. '(' → logprob: -8.50063705444336
    4. 'int' → logprob: -13.00063705444336
    5. '(lambda' → logprob: -14.37563705444336
    6. '(input' → logprob: -15.50063705444336
    7. 'str' → logprob: -16.25063705444336
    8. ' (' → logprob: -17.00063705444336
    9. '(in' → logprob: -17.12563705444336
    10. '<int' → logprob: -17.12563705444336

Token 147: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.010295453481376171
    2. ',input' → logprob: -5.510295391082764
    3. '(line' → logprob: -5.635295391082764
    4. '(' → logprob: -6.760295391082764
    5. ',' → logprob: -7.010295391082764
    6. 'input' → logprob: -8.010295867919922
    7. '(int' → logprob: -9.385295867919922
    8. ')' → logprob: -9.885295867919922
    9. '(str' → logprob: -10.010295867919922
    10. '(),' → logprob: -10.385295867919922

Token 148: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.06553815305233002
    2. ' line' → logprob: -2.815538167953491
    3. 'input' → logprob: -6.440537929534912
    4. 'str' → logprob: -6.565537929534912
    5. 'int' → logprob: -7.815537929534912
    6. ' str' → logprob: -9.69053840637207
    7. ' input' → logprob: -9.94053840637207
    8. 'lambda' → logprob: -11.06553840637207
    9. 'list' → logprob: -11.56553840637207
    10. 'map' → logprob: -11.81553840637207

Token 149: '.strip' (ID: 40613)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.023671327158808708
    2. '.split' → logprob: -3.7736713886260986
    3. 'split' → logprob: -8.64867115020752
    4. '.strip' → logprob: -9.02367115020752
    5. '()' → logprob: -9.64867115020752
    6. '.' → logprob: -9.77367115020752
    7. ' .' → logprob: -11.89867115020752
    8. ' split' → logprob: -15.02367115020752
    9. '.readline' → logprob: -15.14867115020752
    10. '(split' → logprob: -15.39867115020752

Token 150: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -8.745069499127567e-05
    2. '()' → logprob: -9.37508773803711
    3. ' ().' → logprob: -14.12508773803711
    4. '())' → logprob: -14.37508773803711
    5. '(' → logprob: -15.12508773803711
    6. ')' → logprob: -15.25008773803711
    7. 'split' → logprob: -15.50008773803711
    8. '().'' → logprob: -15.62508773803711
    9. '()
' → logprob: -15.75008773803711
    10. '('' → logprob: -16.37508773803711

Token 151: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -7.896309739408025e-07
    2. ' split' → logprob: -14.250000953674316
    3. '(split' → logprob: -16.875
    4. ')' → logprob: -17.125
    5. '.split' → logprob: -17.25
    6. '```' → logprob: -19.875
    7. 'spl' → logprob: -20.375
    8. '   ' → logprob: -20.5
    9. ').' → logprob: -21.875
    10. 'plit' → logprob: -22.125

Token 152: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.02887948416173458
    2. '()' → logprob: -3.653879404067993
    3. '('' → logprob: -6.278879642486572
    4. ')' → logprob: -7.778879642486572
    5. '())
' → logprob: -8.653879165649414
    6. '(' → logprob: -9.903879165649414
    7. '(','' → logprob: -10.528879165649414
    8. '()))' → logprob: -11.403879165649414
    9. '')' → logprob: -12.278879165649414
    10. ' ())' → logprob: -12.403879165649414

Token 153: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8924276828765869
    2. '   ' → logprob: -1.017427682876587
    3. '    
' → logprob: -2.392427682876587
    4. ' 
' → logprob: -3.267427682876587
    5. 'm' → logprob: -3.767427682876587
    6. 'a' → logprob: -4.142427444458008
    7. ' numbers' → logprob: -4.642427444458008
    8. 'numbers' → logprob: -4.767427444458008
    9. 'nums' → logprob: -4.767427444458008
    10. '   
' → logprob: -5.017427444458008

Token 154: ' blue' (ID: 9861)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8635068535804749
    2. 'boys' → logprob: -1.61350679397583
    3. 'm' → logprob: -1.86350679397583
    4. 'men' → logprob: -2.23850679397583
    5. 'nums' → logprob: -3.48850679397583
    6. 'numbers' → logprob: -3.48850679397583
    7. 'male' → logprob: -4.36350679397583
    8. 'A' → logprob: -4.73850679397583
    9. 'arr' → logprob: -5.73850679397583
    10. 'values' → logprob: -5.98850679397583

Token 155: '_cards' (ID: 101651)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1592915803194046
    2. 's' → logprob: -2.4092915058135986
    3. '=' → logprob: -3.0342915058135986
    4. '_points' → logprob: -6.159291744232178
    5. '_sh' → logprob: -6.409291744232178
    6. '_numbers' → logprob: -6.659291744232178
    7. '_s' → logprob: -6.659291744232178
    8. '_nodes' → logprob: -7.034291744232178
    9. '_f' → logprob: -7.659291744232178
    10. '_nums' → logprob: -7.784291744232178

Token 156: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03397979587316513
    2. '=' → logprob: -3.408979892730713
    3. ',' → logprob: -8.033979415893555
    4. ' ' → logprob: -12.783979415893555
    5. '=[]' → logprob: -13.408979415893555
    6. ' =
' → logprob: -13.408979415893555
    7. ' ,' → logprob: -13.533979415893555
    8. ')' → logprob: -14.533979415893555
    9. 's' → logprob: -14.658979415893555
    10. '   ' → logprob: -15.158979415893555

Token 157: ' []
' (ID: 8911)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.020606590434908867
    2. 'list' → logprob: -4.020606517791748
    3. ' [' → logprob: -6.395606517791748
    4. '[list' → logprob: -7.645606517791748
    5. '[' → logprob: -8.895606994628906
    6. ' []' → logprob: -9.270606994628906
    7. '[]' → logprob: -9.520606994628906
    8. '	list' → logprob: -14.645606994628906
    9. '[List' → logprob: -15.020606994628906
    10. '[l' → logprob: -15.145606994628906

Token 158: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5668959617614746
    2. '   ' → logprob: -1.3168959617614746
    3. ' for' → logprob: -1.8168959617614746
    4. 'red' → logprob: -6.441895961761475
    5. ' red' → logprob: -8.066896438598633
    6. 'while' → logprob: -8.691896438598633
    7. '    
' → logprob: -9.941896438598633
    8. ' while' → logprob: -10.691896438598633
    9. '
' → logprob: -10.816896438598633
    10. 'green' → logprob: -11.066896438598633

Token 159: ' while' (ID: 2049)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.25167766213417053
    2. 'while' (adapté à ' while') → logprob: -1.8766776323318481
    3. 'red' → logprob: -2.8766777515411377
    4. ' for' → logprob: -4.751677513122559
    5. ' while' → logprob: -6.001677513122559
    6. ' red' → logprob: -6.626677513122559
    7. 'count' → logprob: -8.626677513122559
    8. 'green' → logprob: -9.251677513122559
    9. 'white' → logprob: -9.251677513122559
    10. 'reds' → logprob: -9.501677513122559

Token 160: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.20142026245594025
    2. 'len' → logprob: -1.7014203071594238
    3. '(len' → logprob: -12.201419830322266
    4. ' ' → logprob: -13.826419830322266
    5. '   ' → logprob: -15.076419830322266
    6. '	len' → logprob: -15.076419830322266
    7. 'm' → logprob: -15.951419830322266
    8. '[len' → logprob: -16.701419830322266
    9. '=len' → logprob: -17.076419830322266
    10. '  ' → logprob: -17.201419830322266

Token 161: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0008114131633192301
    2. 'blue' → logprob: -7.750811576843262
    3. ' blue' → logprob: -7.875811576843262
    4. '_blue' → logprob: -15.250811576843262
    5. '.blue' → logprob: -16.250810623168945
    6. 'Blue' → logprob: -16.250810623168945
    7. ' (' → logprob: -16.375810623168945
    8. '(bl' → logprob: -16.500810623168945
    9. ' ' → logprob: -16.750810623168945
    10. '蓝' → logprob: -17.500810623168945

Token 162: 'blue' (ID: 18789)
  Prédit: 'blue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blue' → logprob: -0.011056192219257355
    2. ' blue' → logprob: -4.511056423187256
    3. '   ' → logprob: -12.761055946350098
    4. 'blu' → logprob: -13.011055946350098
    5. ' ' → logprob: -13.511055946350098
    6. 'b' → logprob: -14.511055946350098
    7. '_blue' → logprob: -14.886055946350098
    8. '.blue' → logprob: -15.136055946350098
    9. '  ' → logprob: -15.511055946350098
    10. '蓝' → logprob: -15.761055946350098

Token 163: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -4.008129963040119e-06
    2. 'cards' → logprob: -13.500003814697266
    3. '_' → logprob: -13.625003814697266
    4. '_codes' → logprob: -15.375003814697266
    5. '
' → logprob: -15.875003814697266
    6. ')' → logprob: -16.125003814697266
    7. '```' → logprob: -16.250003814697266
    8. '_lines' → logprob: -16.375003814697266
    9. 's' → logprob: -16.500003814697266
    10. ' _' → logprob: -16.625003814697266

Token 164: ')' (ID: 8)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.4793136715888977
    2. '<' → logprob: -0.9793136715888977
    3. '<m' → logprob: -5.729313850402832
    4. ')' → logprob: -6.979313850402832
    5. '<n' → logprob: -7.104313850402832
    6. ')<' → logprob: -8.979313850402832
    7. ' ' → logprob: -10.729313850402832
    8. '<len' → logprob: -11.104313850402832
    9. '<w' → logprob: -11.854313850402832
    10. '<size' → logprob: -12.104313850402832

Token 165: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.055076587945222855
    2. ' <' → logprob: -2.9300765991210938
    3. '<m' → logprob: -9.055076599121094
    4. '<n' → logprob: -9.680076599121094
    5. ' ' → logprob: -12.430076599121094
    6. '<len' → logprob: -12.680076599121094
    7. '<size' → logprob: -13.555076599121094
    8. '<class' → logprob: -13.680076599121094
    9. '<num' → logprob: -13.930076599121094
    10. '<int' → logprob: -14.305076599121094

Token 166: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.10020774602890015
    2. ' m' → logprob: -2.350207805633545
    3. 'n' → logprob: -14.475207328796387
    4. '	m' → logprob: -15.850207328796387
    5. ' ' → logprob: -15.975207328796387
    6. '   ' → logprob: -15.975207328796387
    7. ' ' → logprob: -16.475208282470703
    8. ' n' → logprob: -16.975208282470703
    9. '[m' → logprob: -17.725208282470703
    10. 'int' → logprob: -18.225208282470703

Token 167: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4291507601737976
    2. ':' → logprob: -1.0541508197784424
    3. '   ' → logprob: -8.054150581359863
    4. '):
' → logprob: -10.929150581359863
    5. '=' → logprob: -11.054150581359863
    6. ' :
' → logprob: -11.054150581359863
    7. ':
' → logprob: -11.179150581359863
    8. '():
' → logprob: -11.179150581359863
    9. ',' → logprob: -11.429150581359863
    10. 'input' → logprob: -11.804150581359863

Token 168: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03075275383889675
    2. '       ' → logprob: -3.530752658843994
    3. ' blue' → logprob: -7.280752658843994
    4. ' line' → logprob: -9.030753135681152
    5. '
' → logprob: -9.280753135681152
    6. ':
' → logprob: -10.030753135681152
    7. 'blue' → logprob: -11.280753135681152
    8. '    
' → logprob: -11.530753135681152
    9. ',' → logprob: -11.655753135681152
    10. ' lines' → logprob: -12.655753135681152

Token 169: ' blue' (ID: 9861)
  Prédit: ' blue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' blue' → logprob: -0.16611190140247345
    2. '   ' → logprob: -2.291111946105957
    3. 'blue' (adapté à ' blue') → logprob: -3.166111946105957
    4. ' line' → logprob: -5.166111946105957
    5. ' parts' → logprob: -6.166111946105957
    6. ' for' → logprob: -8.041111946105957
    7. ' numbers' → logprob: -8.166111946105957
    8. '    ' → logprob: -8.291111946105957
    9. 'line' → logprob: -8.541111946105957
    10. '       ' → logprob: -8.541111946105957

Token 170: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -0.005052898544818163
    2. '_' → logprob: -6.1300530433654785
    3. '_line' → logprob: -6.5050530433654785
    4. 'cards' → logprob: -7.3800530433654785
    5. '   ' → logprob: -8.50505256652832
    6. 'line' → logprob: -9.13005256652832
    7. '_input' → logprob: -9.13005256652832
    8. '.append' → logprob: -10.38005256652832
    9. '_card' → logprob: -10.38005256652832
    10. '_lines' → logprob: -10.88005256652832

Token 171: ' +=' (ID: 2757)
  Prédit: '.extend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.extend' → logprob: -0.029851263388991356
    2. ' +=' → logprob: -3.779851198196411
    3. '+=' → logprob: -5.02985143661499
    4. '.' → logprob: -10.779850959777832
    5. '.append' → logprob: -10.904850959777832
    6. 'extend' → logprob: -12.904850959777832
    7. '+' → logprob: -13.779850959777832
    8. '+=(' → logprob: -14.029850959777832
    9. ' .' → logprob: -14.529850959777832
    10. ']+=' → logprob: -16.90485191345215

Token 172: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.06212397292256355
    2. ' list' → logprob: -3.062124013900757
    3. 'map' → logprob: -4.312123775482178
    4. ' map' → logprob: -10.187124252319336
    5. '[list' → logprob: -13.562124252319336
    6. '[' → logprob: -14.312124252319336
    7. ' ' → logprob: -15.187124252319336
    8. '   ' → logprob: -15.562124252319336
    9. '	list' → logprob: -16.062124252319336
    10. 'm' → logprob: -16.562124252319336

Token 173: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -1.6240566083070007e-06
    2. '(' → logprob: -13.500001907348633
    3. 'map' → logprob: -15.750001907348633
    4. '(
' → logprob: -18.375001907348633
    5. '	map' → logprob: -20.750001907348633
    6. ' map' → logprob: -21.000001907348633
    7. '(int' → logprob: -21.000001907348633
    8. '.map' → logprob: -21.625001907348633
    9. ' (' → logprob: -21.750001907348633
    10. '(m' → logprob: -21.875001907348633

Token 174: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0004610551695805043
    2. 'int' → logprob: -7.750461101531982
    3. '(' → logprob: -10.500460624694824
    4. ' int' → logprob: -13.375460624694824
    5. '[int' → logprob: -15.250460624694824
    6. ',int' → logprob: -15.500460624694824
    7. '=int' → logprob: -15.500460624694824
    8. '(
' → logprob: -15.750460624694824
    9. '<int' → logprob: -15.875460624694824
    10. '(input' → logprob: -15.875460624694824

Token 175: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.08170203864574432
    2. ',input' → logprob: -2.5817019939422607
    3. ',' → logprob: -6.20670223236084
    4. 'input' → logprob: -7.20670223236084
    5. '(' → logprob: -10.08170223236084
    6. '(),' → logprob: -12.08170223236084
    7. ' input' → logprob: -13.70670223236084
    8. '=input' → logprob: -14.83170223236084
    9. '(
' → logprob: -14.83170223236084
    10. ' (' → logprob: -15.08170223236084

Token 176: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.029755467548966408
    2. ' input' → logprob: -3.5297553539276123
    3. '(input' → logprob: -13.029755592346191
    4. ' ' → logprob: -13.654755592346191
    5. ',input' → logprob: -14.154755592346191
    6. '   ' → logprob: -15.029755592346191
    7. ')' → logprob: -15.779755592346191
    8. '	input' → logprob: -16.029754638671875
    9. '
' → logprob: -16.154754638671875
    10. '=input' → logprob: -16.529754638671875

Token 177: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.7432603272027336e-06
    2. '()' → logprob: -13.375001907348633
    3. ' ().' → logprob: -16.125001907348633
    4. '(' → logprob: -17.375001907348633
    5. '   ' → logprob: -20.500001907348633
    6. '()))' → logprob: -20.625001907348633
    7. '()
' → logprob: -21.625001907348633
    8. '().'' → logprob: -21.750001907348633
    9. '.' → logprob: -21.875001907348633
    10. '()[' → logprob: -21.875001907348633

Token 178: 'strip' (ID: 23905)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.6931518912315369
    2. 'strip' → logprob: -0.6931518912315369
    3. ' strip' → logprob: -13.193151473999023
    4. ' split' → logprob: -13.318151473999023
    5. 'rstrip' → logprob: -14.193151473999023
    6. '(split' → logprob: -15.443151473999023
    7. '(strip' → logprob: -16.318151473999023
    8. '.strip' → logprob: -17.068151473999023
    9. '().' → logprob: -17.943151473999023
    10. '   ' → logprob: -18.318151473999023

Token 179: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -7.896309739408025e-07
    2. '()' → logprob: -15.250000953674316
    3. '.split' → logprob: -15.375000953674316
    4. ' ().' → logprob: -15.375000953674316
    5. '(' → logprob: -17.625
    6. '   ' → logprob: -17.75
    7. '.' → logprob: -17.75
    8. ' .' → logprob: -18.625
    9. 'split' → logprob: -20.75
    10. '()
' → logprob: -20.875

Token 180: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -6.2729995988775045e-06
    2. ' split' → logprob: -12.000006675720215
    3. '.split' → logprob: -16.7500057220459
    4. '(split' → logprob: -20.1250057220459
    5. '   ' → logprob: -21.0000057220459
    6. ' ' → logprob: -21.3750057220459
    7. 'spl' → logprob: -21.6250057220459
    8. '
' → logprob: -22.5000057220459
    9. ')' → logprob: -22.6250057220459
    10. '```' → logprob: -22.6250057220459

Token 181: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.022059673443436623
    2. '))' → logprob: -3.897059679031372
    3. '()' → logprob: -7.022059440612793
    4. '()))
' → logprob: -7.522059440612793
    5. '())' → logprob: -10.147059440612793
    6. '(' → logprob: -10.522059440612793
    7. '()));' → logprob: -12.272059440612793
    8. '()))

' → logprob: -12.397059440612793
    9. '())))' → logprob: -13.272059440612793
    10. '))
' → logprob: -13.397059440612793

Token 182: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17070595920085907
    2. 'red' → logprob: -2.295706033706665
    3. '
' → logprob: -3.295706033706665
    4. ' red' → logprob: -4.170705795288086
    5. '    
' → logprob: -6.045705795288086
    6. 'green' → logprob: -7.920705795288086
    7. 'yellow' → logprob: -8.795705795288086
    8. '  
' → logprob: -9.045705795288086
    9. ' green' → logprob: -9.045705795288086
    10. 'white' → logprob: -9.295705795288086

Token 183: ' red' (ID: 3592)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' (adapté à ' red') → logprob: -0.13991546630859375
    2. '   ' → logprob: -2.1399154663085938
    3. ' red' → logprob: -4.389915466308594
    4. '    
' → logprob: -8.389915466308594
    5. 'white' → logprob: -9.514915466308594
    6. 'green' → logprob: -9.889915466308594
    7. '
' → logprob: -10.014915466308594
    8. 'orange' → logprob: -10.514915466308594
    9. 'yellow' → logprob: -10.764915466308594
    10. '```' → logprob: -11.389915466308594

Token 184: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -9.610702363715973e-06
    2. '_' → logprob: -12.000009536743164
    3. '_tokens' → logprob: -13.875009536743164
    4. 'cards' → logprob: -14.500009536743164
    5. '```' → logprob: -14.750009536743164
    6. '_codes' → logprob: -14.750009536743164
    7. 's' → logprob: -15.750009536743164
    8. '_cells' → logprob: -16.125009536743164
    9. '_lines' → logprob: -16.375009536743164
    10. '_s' → logprob: -16.500009536743164

Token 185: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12693114578723907
    2. '=' → logprob: -2.1269311904907227
    3. '=[]' → logprob: -13.126931190490723
    4. ' +=' → logprob: -14.376931190490723
    5. '=[]
' → logprob: -15.376931190490723
    6. '+=' → logprob: -16.001930236816406
    7. ' =
' → logprob: -16.876930236816406
    8. ' ' → logprob: -17.251930236816406
    9. ')' → logprob: -17.626930236816406
    10. '   ' → logprob: -18.001930236816406

Token 186: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.3298879861831665
    2. '[]' → logprob: -1.3298879861831665
    3. ' []
' → logprob: -4.579887866973877
    4. ' []' → logprob: -5.079887866973877
    5. '[]

' → logprob: -11.454888343811035
    6. '=[]
' → logprob: -14.204888343811035
    7. '([])
' → logprob: -14.829888343811035
    8. ' []
' → logprob: -15.704888343811035
    9. '[' → logprob: -15.704888343811035
    10. ' []

' → logprob: -16.20488739013672

Token 187: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012820183765143156
    2. 'while' → logprob: -6.751282215118408
    3. ' while' → logprob: -9.12628173828125
    4. '
' → logprob: -13.37628173828125
    5. '  ' → logprob: -14.25128173828125
    6. '	while' → logprob: -15.00128173828125
    7. '    ' → logprob: -15.62628173828125
    8. '       ' → logprob: -15.62628173828125
    9. ' ' → logprob: -16.37628173828125
    10. '    
' → logprob: -16.87628173828125

Token 188: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0007379194721579552
    2. ' while' → logprob: -7.250738143920898
    3. '   ' → logprob: -10.500738143920898
    4. '	while' → logprob: -14.875738143920898
    5. '
' → logprob: -17.2507381439209
    6. 'While' → logprob: -18.5007381439209
    7. '  ' → logprob: -19.5007381439209
    8. '    ' → logprob: -20.3757381439209
    9. '[]' → logprob: -20.7507381439209
    10. ' ' → logprob: -21.0007381439209

Token 189: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.07890785485506058
    2. 'len' → logprob: -2.5789079666137695
    3. '(len' → logprob: -10.95390796661377
    4. ' ' → logprob: -15.45390796661377
    5. '[len' → logprob: -16.078907012939453
    6. '	len' → logprob: -16.078907012939453
    7. '   ' → logprob: -16.703907012939453
    8. '<len' → logprob: -17.453907012939453
    9. '    ' → logprob: -17.703907012939453
    10. '  ' → logprob: -17.828907012939453

Token 190: '(red' (ID: 83440)
  Prédit: '(red'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(red' → logprob: -0.0001584850688232109
    2. '(' → logprob: -9.375158309936523
    3. ' (' → logprob: -9.625158309936523
    4. 'red' → logprob: -12.375158309936523
    5. ' red' → logprob: -12.625158309936523
    6. '(re' → logprob: -16.750158309936523
    7. '(r' → logprob: -18.875158309936523
    8. ' ' → logprob: -19.000158309936523
    9. '(read' → logprob: -19.625158309936523
    10. '红' → logprob: -19.750158309936523

Token 191: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -1.1160349458805285e-05
    2. '(red' → logprob: -12.125011444091797
    3. 'red' → logprob: -13.375011444091797
    4. '_red' → logprob: -13.500011444091797
    5. 'cards' → logprob: -14.125011444091797
    6. '(cards' → logprob: -14.250011444091797
    7. '(' → logprob: -14.625011444091797
    8. 'Cards' → logprob: -15.000011444091797
    9. ')' → logprob: -16.125011444091797
    10. '_codes' → logprob: -16.375011444091797

Token 192: ')' (ID: 8)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.16036030650138855
    2. '<' → logprob: -1.910360336303711
    3. ')' → logprob: -9.410360336303711
    4. '<m' → logprob: -10.160360336303711
    5. '<n' → logprob: -12.285360336303711
    6. '<len' → logprob: -12.285360336303711
    7. ')<' → logprob: -13.035360336303711
    8. '<size' → logprob: -13.910360336303711
    9. ' ' → logprob: -14.535360336303711
    10. '()<' → logprob: -15.035360336303711

Token 193: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.47417154908180237
    2. '<' → logprob: -0.97417151927948
    3. '<m' → logprob: -9.34917163848877
    4. '<len' → logprob: -12.72417163848877
    5. '<n' → logprob: -12.97417163848877
    6. '<size' → logprob: -14.84917163848877
    7. '<int' → logprob: -14.84917163848877
    8. '<class' → logprob: -14.84917163848877
    9. ' ' → logprob: -15.47417163848877
    10. 'm' → logprob: -15.84917163848877

Token 194: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1602255403995514
    2. ' n' → logprob: -1.910225510597229
    3. '   ' → logprob: -14.785225868225098
    4. ' ' → logprob: -14.910225868225098
    5. '(n' → logprob: -14.910225868225098
    6. '	n' → logprob: -15.910225868225098
    7. '
' → logprob: -16.03522491455078
    8. ' ' → logprob: -16.78522491455078
    9. '[n' → logprob: -16.91022491455078
    10. 'int' → logprob: -17.53522491455078

Token 195: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.15926626324653625
    2. ':' → logprob: -2.284266233444214
    3. '   ' → logprob: -3.159266233444214
    4. ' +=' → logprob: -7.534266471862793
    5. '+=' → logprob: -7.659266471862793
    6. '{
' → logprob: -7.909266471862793
    7. '       ' → logprob: -8.034266471862793
    8. '):
' → logprob: -8.534266471862793
    9. '+' → logprob: -8.659266471862793
    10. ' ' → logprob: -9.034266471862793

Token 196: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24928408861160278
    2. '       ' → logprob: -1.624284029006958
    3. ' list' → logprob: -4.874284267425537
    4. 'list' → logprob: -5.374284267425537
    5. ':
' → logprob: -5.749284267425537
    6. '+' → logprob: -6.124284267425537
    7. '  ' → logprob: -6.499284267425537
    8. ' ' → logprob: -6.874284267425537
    9. '{
' → logprob: -7.249284267425537
    10. ' red' → logprob: -8.374283790588379

Token 197: ' red' (ID: 3592)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' (adapté à ' red') → logprob: -0.13188718259334564
    2. ' red' → logprob: -2.131887197494507
    3. 'list' → logprob: -5.631886959075928
    4. '   ' → logprob: -7.131886959075928
    5. ' list' → logprob: -7.756886959075928
    6. ' ' → logprob: -10.256887435913086
    7. '  ' → logprob: -10.381887435913086
    8. '       ' → logprob: -10.506887435913086
    9. '
' → logprob: -11.381887435913086
    10. '    ' → logprob: -12.006887435913086

Token 198: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -7.896309739408025e-07
    2. 'cards' → logprob: -15.875000953674316
    3. '_codes' → logprob: -16.125
    4. ''_' → logprob: -16.625
    5. '_' → logprob: -16.875
    6. '_card' → logprob: -17.0
    7. '```' → logprob: -17.125
    8. 'Cards' → logprob: -17.25
    9. '   ' → logprob: -17.25
    10. 's' → logprob: -17.75

Token 199: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.3132862150669098
    2. '+=' → logprob: -1.3132861852645874
    3. '+' → logprob: -11.438285827636719
    4. '   ' → logprob: -11.438285827636719
    5. ']+=' → logprob: -14.063285827636719
    6. '=' → logprob: -14.438285827636719
    7. '+=(' → logprob: -14.688285827636719
    8. ' ' → logprob: -14.938285827636719
    9. '+="' → logprob: -15.563285827636719
    10. ' +' → logprob: -15.688285827636719

Token 200: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.00861456897109747
    2. ' list' → logprob: -4.758614540100098
    3. '(list' → logprob: -17.758615493774414
    4. '	list' → logprob: -21.133615493774414
    5. '   ' → logprob: -21.258615493774414
    6. 'map' → logprob: -21.383615493774414
    7. ' ' → logprob: -21.383615493774414
    8. '[list' → logprob: -21.383615493774414
    9. '=list' → logprob: -21.633615493774414
    10. 'List' → logprob: -21.633615493774414

Token 201: '(map' (ID: 16946)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.4847683906555176
    2. '(list' → logprob: -0.9847683906555176
    3. '(map' → logprob: -5.234768390655518
    4. '(' → logprob: -5.359768390655518
    5. ' (' → logprob: -7.984768390655518
    6. 'int' → logprob: -8.60976791381836
    7. 'list' → logprob: -11.10976791381836
    8. '(
' → logprob: -11.10976791381836
    9. '(lambda' → logprob: -11.73476791381836
    10. '(in' → logprob: -11.98476791381836

Token 202: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0003843173326458782
    2. 'int' → logprob: -8.000384330749512
    3. '=int' → logprob: -10.375384330749512
    4. '<int' → logprob: -11.750384330749512
    5. ',int' → logprob: -12.375384330749512
    6. '[int' → logprob: -12.500384330749512
    7. ']int' → logprob: -14.000384330749512
    8. '```' → logprob: -14.875384330749512
    9. '(in' → logprob: -15.625384330749512
    10. ':int' → logprob: -15.875384330749512

Token 203: ',' (ID: 11)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.007500859443098307
    2. '=int' → logprob: -5.257500648498535
    3. ',int' → logprob: -6.882500648498535
    4. 'int' → logprob: -8.257500648498535
    5. '<int' → logprob: -8.382500648498535
    6. '[int' → logprob: -8.757500648498535
    7. ']int' → logprob: -8.882500648498535
    8. ')(' → logprob: -9.007500648498535
    9. '(' → logprob: -9.507500648498535
    10. ' (' → logprob: -9.757500648498535

Token 204: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.031694814562797546
    2. ' input' → logprob: -3.7816948890686035
    3. 'int' → logprob: -4.7816948890686035
    4. '(input' → logprob: -10.781694412231445
    5. ' int' → logprob: -11.906694412231445
    6. '(int' → logprob: -12.781694412231445
    7. 'str' → logprob: -14.781694412231445
    8. ',input' → logprob: -14.906694412231445
    9. '=input' → logprob: -15.156694412231445
    10. ')' → logprob: -16.031694412231445

Token 205: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.961759259458631e-06
    2. '()' → logprob: -12.375004768371582
    3. '.' → logprob: -15.250004768371582
    4. '(' → logprob: -16.0000057220459
    5. ' ().' → logprob: -16.1250057220459
    6. '()
' → logprob: -16.7500057220459
    7. '().
' → logprob: -17.7500057220459
    8. '(.' → logprob: -18.1250057220459
    9. '().'' → logprob: -18.2500057220459
    10. ' .' → logprob: -18.5000057220459

Token 206: 'strip' (ID: 23905)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.20141704380512238
    2. 'strip' → logprob: -1.701417088508606
    3. '.strip' → logprob: -13.951416969299316
    4. '.split' → logprob: -14.326416969299316
    5. 'spl' → logprob: -14.576416969299316
    6. '```' → logprob: -14.701416969299316
    7. '().' → logprob: -14.701416969299316
    8. 'str' → logprob: -14.951416969299316
    9. '(split' → logprob: -15.576416969299316
    10. ' split' → logprob: -15.701416969299316

Token 207: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.512236498361744e-07
    2. '.split' → logprob: -15.000000953674316
    3. '()' → logprob: -16.25
    4. ' ().' → logprob: -18.75
    5. '(' → logprob: -19.0
    6. '()
' → logprob: -19.5
    7. '()).' → logprob: -19.875
    8. '   ' → logprob: -20.375
    9. ').' → logprob: -20.5
    10. '
' → logprob: -20.875

Token 208: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.9153885558771435e-06
    2. ' split' → logprob: -12.250005722045898
    3. 'spl' → logprob: -14.875005722045898
    4. '
' → logprob: -15.125005722045898
    5. '.split' → logprob: -15.250005722045898
    6. '```' → logprob: -16.1250057220459
    7. ' ' → logprob: -17.5000057220459
    8. 's' → logprob: -17.8750057220459
    9. 'strip' → logprob: -18.0000057220459
    10. ')' → logprob: -18.5000057220459

Token 209: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.06950127333402634
    2. '))' → logprob: -2.9445011615753174
    3. '()' → logprob: -4.5695013999938965
    4. '()))
' → logprob: -5.5695013999938965
    5. '())' → logprob: -8.694500923156738
    6. '(' → logprob: -9.694500923156738
    7. '()))

' → logprob: -9.944500923156738
    8. '))
' → logprob: -10.444500923156738
    9. '()));' → logprob: -11.444500923156738
    10. '())).' → logprob: -12.319500923156738

Token 210: '   ' (ID: 271)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.024667879566550255
    2. '
' → logprob: -3.774667978286743
    3. '   ' → logprob: -6.774667739868164
    4. ' graph' → logprob: -8.399667739868164
    5. '    
' → logprob: -10.774667739868164
    6. '	graph' → logprob: -11.149667739868164
    7. '```' → logprob: -11.274667739868164
    8. '#' → logprob: -13.149667739868164
    9. '(graph' → logprob: -13.149667739868164
    10. '

' → logprob: -14.274667739868164

Token 211: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.00011391390580683947
    2. '
' → logprob: -9.625113487243652
    3. ' graph' → logprob: -10.000113487243652
    4. '#' → logprob: -14.000113487243652
    5. '   ' → logprob: -14.875113487243652
    6. '```' → logprob: -15.000113487243652
    7. 'g' → logprob: -15.125113487243652
    8. '	graph' → logprob: -15.625113487243652
    9. '    
' → logprob: -16.00011444091797
    10. 'blue' → logprob: -16.00011444091797

Token 212: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.033646389842033386
    2. '=' → logprob: -3.40864634513855
    3. '=[]' → logprob: -15.033646583557129
    4. '[' → logprob: -16.158645629882812
    5. ')' → logprob: -16.908645629882812
    6. ' =
' → logprob: -16.908645629882812
    7. '```' → logprob: -17.283645629882812
    8. 's' → logprob: -17.283645629882812
    9. ' ' → logprob: -17.533645629882812
    10. 'space' → logprob: -17.658645629882812

Token 213: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.16023093461990356
    2. ' [[]' → logprob: -1.9102308750152588
    3. '[]' → logprob: -12.53523063659668
    4. ' [' → logprob: -13.66023063659668
    5. '[[' → logprob: -13.91023063659668
    6. '{' → logprob: -14.66023063659668
    7. '[
' → logprob: -15.03523063659668
    8. '[]
' → logprob: -15.28523063659668
    9. '   ' → logprob: -16.78523063659668
    10. '[['' → logprob: -17.03523063659668

Token 214: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3140396475791931
    2. ' for' → logprob: -1.314039707183838
    3. ']' → logprob: -8.06403923034668
    4. '
' → logprob: -8.06403923034668
    5. ')' → logprob: -9.31403923034668
    6. '   ' → logprob: -10.68903923034668
    7. '    
' → logprob: -11.68903923034668
    8. ',' → logprob: -11.81403923034668
    9. '  
' → logprob: -12.43903923034668
    10. ']
' → logprob: -12.68903923034668

Token 215: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.48026028275489807
    2. 'range' → logprob: -1.2302602529525757
    3. ' range' → logprob: -2.8552603721618652
    4. '(range' → logprob: -3.7302603721618652
    5. '_blue' → logprob: -6.105260372161865
    6. 'blue' → logprob: -6.105260372161865
    7. '(' → logprob: -6.855260372161865
    8. '_range' → logprob: -7.230260372161865
    9. ' in' → logprob: -7.855260372161865
    10. ' blue' → logprob: -8.230259895324707

Token 216: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.007655138149857521
    2. 'in' → logprob: -5.257655143737793
    3. ' range' → logprob: -6.632655143737793
    4. 'blue' → logprob: -7.257655143737793
    5. ' in' → logprob: -8.257655143737793
    6. 'm' → logprob: -9.007655143737793
    7. '(range' → logprob: -12.007655143737793
    8. 'red' → logprob: -12.632655143737793
    9. ' blue' → logprob: -12.757655143737793
    10. ' ' → logprob: -14.382655143737793

Token 217: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0032220338471233845
    2. 'blue' → logprob: -6.3782219886779785
    3. ' range' → logprob: -6.5032219886779785
    4. '(range' → logprob: -11.003222465515137
    5. ' blue' → logprob: -13.128222465515137
    6. '   ' → logprob: -14.628222465515137
    7. '(' → logprob: -15.128222465515137
    8. 'r' → logprob: -15.253222465515137
    9. 'm' → logprob: -15.753222465515137
    10. ' ' → logprob: -16.37822151184082

Token 218: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -1.1875571544806007e-05
    2. 'm' → logprob: -11.500011444091797
    3. '(' → logprob: -13.750011444091797
    4. '(len' → logprob: -14.500011444091797
    5. '(n' → logprob: -16.500011444091797
    6. ' (' → logprob: -17.000011444091797
    7. ')m' → logprob: -18.125011444091797
    8. '[m' → logprob: -18.375011444091797
    9. '((' → logprob: -18.500011444091797
    10. '(
' → logprob: -18.500011444091797

Token 219: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.048671506345272064
    2. ')]
' → logprob: -3.0486714839935303
    3. ')]

' → logprob: -9.67367172241211
    4. ')' → logprob: -11.42367172241211
    5. ')]
' → logprob: -11.79867172241211
    6. ']' → logprob: -13.42367172241211
    7. ' )' → logprob: -13.92367172241211
    8. '+' → logprob: -15.79867172241211
    9. ')
' → logprob: -16.67367172241211
    10. ']
' → logprob: -17.04867172241211

Token 220: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7133866548538208
    2. '   ' → logprob: -1.2133866548538208
    3. ' for' → logprob: -1.5883866548538208
    4. '
' → logprob: -4.963386535644531
    5. '    
' → logprob: -6.963386535644531
    6. '  
' → logprob: -8.338386535644531
    7. ' 
' → logprob: -8.963386535644531
    8. '<|end|>' → logprob: -8.963386535644531
    9. '   
' → logprob: -10.088386535644531
    10. '  ' → logprob: -10.213386535644531

Token 221: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.011204618960618973
    2. ' for' → logprob: -4.511204719543457
    3. '   ' → logprob: -8.761204719543457
    4. '	for' → logprob: -16.38620376586914
    5. '
' → logprob: -17.13620376586914
    6. '    
' → logprob: -18.38620376586914
    7. ' ' → logprob: -18.38620376586914
    8. '```' → logprob: -18.51120376586914
    9. ' 
' → logprob: -19.51120376586914
    10. '  ' → logprob: -19.88620376586914

Token 222: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.07950389385223389
    2. 'i' → logprob: -2.5795040130615234
    3. ' u' → logprob: -7.829504013061523
    4. 'u' → logprob: -8.454504013061523
    5. '	i' → logprob: -13.454504013061523
    6. 'b' → logprob: -14.329504013061523
    7. ' b' → logprob: -15.454504013061523
    8. 'blue' → logprob: -15.579504013061523
    9. ' ' → logprob: -15.704504013061523
    10. '_i' → logprob: -16.329504013061523

Token 223: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014180317521095276
    2. 'in' → logprob: -4.2641801834106445
    3. ' ' → logprob: -11.514180183410645
    4. ',' → logprob: -12.764180183410645
    5. ' i' → logprob: -14.014180183410645
    6. '   ' → logprob: -14.514180183410645
    7. '_' → logprob: -14.639180183410645
    8. '	in' → logprob: -14.889180183410645
    9. 'n' → logprob: -15.139180183410645
    10. '0' → logprob: -15.264180183410645

Token 224: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.061967797577381134
    2. ' range' → logprob: -2.8119678497314453
    3. ' ' → logprob: -16.686967849731445
    4. '(range' → logprob: -16.936967849731445
    5. '	range' → logprob: -18.311967849731445
    6. ' xrange' → logprob: -18.436967849731445
    7. '   ' → logprob: -19.061967849731445
    8. 'r' → logprob: -19.311967849731445
    9. 'rang' → logprob: -20.061967849731445
    10. '_range' → logprob: -20.186967849731445

Token 225: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.006755155511200428
    2. 'm' → logprob: -5.006755352020264
    3. ' m' → logprob: -10.756754875183105
    4. '(' → logprob: -11.006754875183105
    5. ' (' → logprob: -14.131754875183105
    6. '   ' → logprob: -14.881754875183105
    7. '	m' → logprob: -15.506754875183105
    8. '[m' → logprob: -15.756754875183105
    9. '(
' → logprob: -15.881754875183105
    10. 'range' → logprob: -16.631755828857422

Token 226: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6931828856468201
    2. '):' → logprob: -0.6931828856468201
    3. '   ' → logprob: -11.193182945251465
    4. '):
' → logprob: -11.318182945251465
    5. ')' → logprob: -12.443182945251465
    6. ':' → logprob: -13.068182945251465
    7. '):

' → logprob: -13.693182945251465
    8. ' ):' → logprob: -13.943182945251465
    9. ' ):
' → logprob: -14.693182945251465
    10. ':
' → logprob: -14.943182945251465

Token 227: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7086715698242188
    2. '       ' → logprob: -0.7086715698242188
    3. ' for' → logprob: -4.208671569824219
    4. ' ' → logprob: -8.208671569824219
    5. '	   ' → logprob: -9.708671569824219
    6. '	for' → logprob: -10.083671569824219
    7. '    ' → logprob: -10.208671569824219
    8. 'for' → logprob: -10.458671569824219
    9. ',' → logprob: -10.458671569824219
    10. '<|end|>' → logprob: -10.583671569824219

Token 228: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.48542046546936035
    2. 'for' (adapté à ' for') → logprob: -0.9854204654693604
    3. '   ' → logprob: -4.485420227050781
    4. ' ' → logprob: -12.735420227050781
    5. '       ' → logprob: -13.110420227050781
    6. '	for' → logprob: -13.860420227050781
    7. '  ' → logprob: -14.485420227050781
    8. ' j' → logprob: -15.110420227050781
    9. ' in' → logprob: -15.485420227050781
    10. ' range' → logprob: -16.48542022705078

Token 229: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0788937583565712
    2. ' j' → logprob: -2.5788936614990234
    3. '   ' → logprob: -13.078893661499023
    4. 'range' → logprob: -14.078893661499023
    5. '_j' → logprob: -14.703893661499023
    6. '	j' → logprob: -15.328893661499023
    7. ' range' → logprob: -16.328893661499023
    8. ':j' → logprob: -16.578893661499023
    9. '<|end|>' → logprob: -16.703893661499023
    10. '```' → logprob: -16.953893661499023

Token 230: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005991012789309025
    2. 'in' → logprob: -5.130990982055664
    3. ' ' → logprob: -10.005990982055664
    4. '<|end|>' → logprob: -12.005990982055664
    5. '   ' → logprob: -12.130990982055664
    6. '    ' → logprob: -13.380990982055664
    7. '	in' → logprob: -13.380990982055664
    8. '  ' → logprob: -14.630990982055664
    9. ')' → logprob: -14.880990982055664
    10. '(' → logprob: -15.630990982055664

Token 231: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.2533104717731476
    2. 'range' → logprob: -1.5033104419708252
    3. 'n' → logprob: -6.628310680389404
    4. ' n' → logprob: -9.878310203552246
    5. '(range' → logprob: -12.128310203552246
    6. ' ' → logprob: -14.753310203552246
    7. '(n' → logprob: -15.003310203552246
    8. '   ' → logprob: -15.378310203552246
    9. '[n' → logprob: -15.628310203552246
    10. '	range' → logprob: -16.128311157226562

Token 232: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10177634656429291
    2. '(n' → logprob: -2.351776361465454
    3. ' n' → logprob: -6.476776123046875
    4. '   ' → logprob: -10.851776123046875
    5. '	n' → logprob: -12.726776123046875
    6. ' (' → logprob: -13.476776123046875
    7. ')n' → logprob: -13.476776123046875
    8. '
' → logprob: -13.726776123046875
    9. '(' → logprob: -13.976776123046875
    10. '       ' → logprob: -14.351776123046875

Token 233: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.20147065818309784
    2. '):' → logprob: -1.7014706134796143
    3. '):
' → logprob: -10.951470375061035
    4. '   ' → logprob: -11.076470375061035
    5. '):

' → logprob: -11.826470375061035
    6. ')' → logprob: -11.826470375061035
    7. ' ):
' → logprob: -12.701470375061035
    8. ':' → logprob: -12.826470375061035
    9. '       ' → logprob: -13.451470375061035
    10. '():
' → logprob: -14.076470375061035

Token 234: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008111671544611454
    2. '       ' → logprob: -6.008111476898193
    3. ' if' → logprob: -6.133111476898193
    4. ':' → logprob: -6.133111476898193
    5. '<|end|>' → logprob: -6.883111476898193
    6. ',' → logprob: -9.883111953735352
    7. '<|end|>' → logprob: -10.133111953735352
    8. '               ' → logprob: -10.383111953735352
    9. '   ' → logprob: -10.633111953735352
    10. ' and' → logprob: -11.008111953735352

Token 235: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.023404574021697044
    2. '           ' → logprob: -4.773404598236084
    3. 'if' (adapté à ' if') → logprob: -4.898404598236084
    4. '               ' → logprob: -5.023404598236084
    5. ' ' → logprob: -7.773404598236084
    6. ' 
' → logprob: -9.398404121398926
    7. '            ' → logprob: -9.648404121398926
    8. '   ' → logprob: -11.273404121398926
    9. '       ' → logprob: -11.773404121398926
    10. ',' → logprob: -12.023404121398926

Token 236: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.38687679171562195
    2. ' can' → logprob: -1.1368768215179443
    3. '	can' → logprob: -12.761877059936523
    4. '   ' → logprob: -14.011877059936523
    5. '(can' → logprob: -14.136877059936523
    6. ' ' → logprob: -14.886877059936523
    7. '.can' → logprob: -15.261877059936523
    8. ' not' → logprob: -15.261877059936523
    9. '_can' → logprob: -15.886877059936523
    10. 'c' → logprob: -16.261877059936523

Token 237: '_pair' (ID: 34819)
  Prédit: '_pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pair' → logprob: -2.069664333248511e-05
    2. 'pair' → logprob: -10.875020980834961
    3. '_' → logprob: -14.500020980834961
    4. '_p' → logprob: -14.500020980834961
    5. ' pair' → logprob: -15.250020980834961
    6. '(pair' → logprob: -15.750020980834961
    7. '_PAIR' → logprob: -16.00002098083496
    8. '_pairs' → logprob: -16.87502098083496
    9. 'Pair' → logprob: -17.00002098083496
    10. '_pa' → logprob: -17.25002098083496

Token 238: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -8.65707261255011e-06
    2. ' (' → logprob: -12.000008583068848
    3. ')' → logprob: -14.250008583068848
    4. '(
' → logprob: -14.375008583068848
    5. '((' → logprob: -14.875008583068848
    6. ')(' → logprob: -15.500008583068848
    7. '(i' → logprob: -15.500008583068848
    8. 'blue' → logprob: -15.500008583068848
    9. '(a' → logprob: -16.625009536743164
    10. '(b' → logprob: -16.875009536743164

Token 239: 'blue' (ID: 18789)
  Prédit: 'blue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blue' → logprob: -0.38716602325439453
    2. '(' → logprob: -1.1371660232543945
    3. ' blue' → logprob: -8.387166023254395
    4. ')' → logprob: -9.762166023254395
    5. ')(' → logprob: -12.637166023254395
    6. '.blue' → logprob: -13.762166023254395
    7. '_blue' → logprob: -13.762166023254395
    8. '   ' → logprob: -13.887166023254395
    9. 'b' → logprob: -14.387166023254395
    10. 'Blue' → logprob: -14.637166023254395

Token 240: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -1.259079363080673e-05
    2. 'cards' → logprob: -12.125012397766113
    3. '[i' → logprob: -12.250012397766113
    4. '[' → logprob: -14.875012397766113
    5. '```' → logprob: -15.000012397766113
    6. 's' → logprob: -15.250012397766113
    7. '
' → logprob: -15.375012397766113
    8. '[_' → logprob: -15.500012397766113
    9. '[
' → logprob: -15.750012397766113
    10. ')' → logprob: -15.875012397766113

Token 241: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.000998155795969069
    2. '[j' → logprob: -7.375998020172119
    3. '[' → logprob: -8.000998497009277
    4. '[
' → logprob: -10.750998497009277
    5. '```' → logprob: -12.125998497009277
    6. ' [' → logprob: -12.875998497009277
    7. '[u' → logprob: -13.375998497009277
    8. '[a' → logprob: -13.625998497009277
    9. '
' → logprob: -13.750998497009277
    10. '[I' → logprob: -13.875998497009277

Token 242: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006535607390105724
    2. '[j' → logprob: -5.256535530090332
    3. '],' → logprob: -7.381535530090332
    4. '[' → logprob: -8.006535530090332
    5. ' ,' → logprob: -8.381535530090332
    6. ',j' → logprob: -9.631535530090332
    7. '),' → logprob: -10.631535530090332
    8. ']' → logprob: -12.381535530090332
    9. '[n' → logprob: -12.756535530090332
    10. ',
' → logprob: -12.756535530090332

Token 243: ' red' (ID: 3592)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.1426893025636673
    2. ' red' → logprob: -2.0176892280578613
    3. '
' → logprob: -12.26768970489502
    4. '(red' → logprob: -13.64268970489502
    5. '           ' → logprob: -13.76768970489502
    6. ')' → logprob: -13.89268970489502
    7. ' 
' → logprob: -14.01768970489502
    8. '   ' → logprob: -14.39268970489502
    9. ' ' → logprob: -14.39268970489502
    10. '            
' → logprob: -14.64268970489502

Token 244: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -3.643152740551159e-05
    2. '[j' → logprob: -10.750036239624023
    3. 'cards' → logprob: -11.500036239624023
    4. '
' → logprob: -13.875036239624023
    5. 'Cards' → logprob: -14.125036239624023
    6. ' cards' → logprob: -14.500036239624023
    7. '_' → logprob: -15.000036239624023
    8. '[' → logprob: -15.125036239624023
    9. 's' → logprob: -15.375036239624023
    10. '```' → logprob: -15.500036239624023

Token 245: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -9.253090865968261e-06
    2. '[' → logprob: -12.625009536743164
    3. '[
' → logprob: -12.875009536743164
    4. '
' → logprob: -13.625009536743164
    5. 'j' → logprob: -14.625009536743164
    6. '```' → logprob: -14.750009536743164
    7. ' [' → logprob: -14.875009536743164
    8. ')' → logprob: -15.250009536743164
    9. '[i' → logprob: -15.625009536743164
    10. '   ' → logprob: -15.875009536743164

Token 246: ']):
' (ID: 51989)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.029784973710775375
    2. '):
' → logprob: -3.529784917831421
    3. ')' → logprob: -10.40478515625
    4. ' ):' → logprob: -13.27978515625
    5. '):
' → logprob: -14.02978515625
    6. '):

' → logprob: -14.15478515625
    7. ':' → logprob: -15.15478515625
    8. ''):' → logprob: -15.65478515625
    9. '[]):' → logprob: -16.02978515625
    10. '   ' → logprob: -16.15478515625

Token 247: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008322127163410187
    2. ':' → logprob: -5.008322238922119
    3. ':
' → logprob: -6.883322238922119
    4. '):
' → logprob: -8.008321762084961
    5. '):' → logprob: -9.383321762084961
    6. '           ' → logprob: -9.508321762084961
    7. ',' → logprob: -10.883321762084961
    8. ')' → logprob: -10.883321762084961
    9. '                   ' → logprob: -11.133321762084961
    10. '(graph' → logprob: -12.383321762084961

Token 248: ' graph' (ID: 7465)
  Prédit: ' graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.006101562641561031
    2. 'graph' (adapté à ' graph') → logprob: -5.131101608276367
    3. '               ' → logprob: -9.256101608276367
    4. '	graph' → logprob: -10.006101608276367
    5. '                   ' → logprob: -10.881101608276367
    6. '(graph' → logprob: -12.256101608276367
    7. '.graph' → logprob: -13.131101608276367
    8. ' 
' → logprob: -13.506101608276367
    9. '_graph' → logprob: -13.756101608276367
    10. '           ' → logprob: -13.881101608276367

Token 249: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.639096970204264e-05
    2. '[u' → logprob: -9.250096321105957
    3. '[I' → logprob: -15.875096321105957
    4. '[' → logprob: -16.250097274780273
    5. '[m' → logprob: -17.000097274780273
    6. '[j' → logprob: -17.875097274780273
    7. '[a' → logprob: -18.625097274780273
    8. '[s' → logprob: -18.750097274780273
    9. ' [' → logprob: -19.125097274780273
    10. ')[' → logprob: -19.250097274780273

Token 250: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -4.584861744660884e-05
    2. ').' → logprob: -11.000045776367188
    3. '.append' → logprob: -11.000045776367188
    4. '.' → logprob: -11.875045776367188
    5. ']' → logprob: -12.250045776367188
    6. ' ].' → logprob: -15.000045776367188
    7. '[j' → logprob: -16.000045776367188
    8. '[' → logprob: -16.500045776367188
    9. '}.' → logprob: -16.625045776367188
    10. '   ' → logprob: -16.750045776367188

Token 251: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -6.704273118884885e-07
    2. '.append' → logprob: -15.000000953674316
    3. ' append' → logprob: -15.250000953674316
    4. 'appen' → logprob: -19.5
    5. '_append' → logprob: -20.25
    6. '	append' → logprob: -20.5
    7. 'Append' → logprob: -21.125
    8. 'app' → logprob: -22.375
    9. 'push' → logprob: -24.875
    10. 'add' → logprob: -25.125

Token 252: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -2.2246291337069124e-05
    2. 'j' → logprob: -10.750021934509277
    3. '(' → logprob: -14.250021934509277
    4. '(
' → logprob: -17.125022888183594
    5. '[j' → logprob: -18.000022888183594
    6. '	j' → logprob: -19.375022888183594
    7. ' (' → logprob: -20.000022888183594
    8. '(i' → logprob: -20.375022888183594
    9. '
' → logprob: -20.875022888183594
    10. '(v' → logprob: -21.000022888183594

Token 253: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0206720617134124e-05
    2. ' )' → logprob: -12.25001049041748
    3. ')
' → logprob: -12.37501049041748
    4. '<|end|>' → logprob: -14.00001049041748
    5. ')#' → logprob: -16.750009536743164
    6. '   ' → logprob: -16.875009536743164
    7. ')}}' → logprob: -17.125009536743164
    8. ')}' → logprob: -17.250009536743164
    9. ')return' → logprob: -17.875009536743164
    10. '),' → logprob: -17.875009536743164

Token 254: '   ' (ID: 271)
  Prédit: 'match'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'match' → logprob: -0.05489762872457504
    2. 'used' → logprob: -3.0548975467681885
    3. '   ' → logprob: -6.054897785186768
    4. ' used' → logprob: -6.054897785186768
    5. ' match' → logprob: -6.679897785186768
    6. '
' → logprob: -8.80489730834961
    7. 'matches' → logprob: -9.30489730834961
    8. '```' → logprob: -10.05489730834961
    9. '    
' → logprob: -10.80489730834961
    10. 'matching' → logprob: -11.67989730834961

Token 255: ' match' (ID: 3981)
  Prédit: 'match'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'match' (adapté à ' match') → logprob: -7.910643762443215e-05
    2. 'used' → logprob: -9.625079154968262
    3. '
' → logprob: -12.125079154968262
    4. ' match' → logprob: -12.750079154968262
    5. '    
' → logprob: -13.250079154968262
    6. '   ' → logprob: -13.250079154968262
    7. 'matches' → logprob: -15.000079154968262
    8. 'matching' → logprob: -15.500079154968262
    9. 'result' → logprob: -16.000078201293945
    10. 'matched' → logprob: -16.125078201293945

Token 256: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0007136239437386394
    2. '=' → logprob: -7.25071382522583
    3. ' ' → logprob: -13.750713348388672
    4. ' =[' → logprob: -13.875713348388672
    5. '	' → logprob: -15.125713348388672
    6. 's' → logprob: -15.375713348388672
    7. '[' → logprob: -15.375713348388672
    8. '=[' → logprob: -15.625713348388672
    9. ')' → logprob: -16.000713348388672
    10. '```' → logprob: -16.250713348388672

Token 257: ' [-' (ID: 20191)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.0002036595979006961
    2. ' [-' → logprob: -8.500204086303711
    3. '   ' → logprob: -16.62520408630371
    4. ' ' → logprob: -18.37520408630371
    5. '[' → logprob: -19.37520408630371
    6. '([-' → logprob: -20.37520408630371
    7. '  ' → logprob: -21.00020408630371
    8. '[:-' → logprob: -21.87520408630371
    9. '```' → logprob: -22.62520408630371
    10. '[:]' → logprob: -22.75020408630371

Token 258: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -16.125
    3. '```' → logprob: -16.875
    4. '   ' → logprob: -18.25
    5. '۱' → logprob: -18.625
    6. '１' → logprob: -18.875
    7. '১' → logprob: -19.8125
    8. '`' → logprob: -19.8125
    9. '१' → logprob: -20.0
    10. '-' → logprob: -20.0

Token 259: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5295013785362244
    2. ' for' → logprob: -1.0295014381408691
    3. 'for' → logprob: -3.279501438140869
    4. ']*' → logprob: -4.279501438140869
    5. ' ]' → logprob: -6.154501438140869
    6. ')' → logprob: -8.529500961303711
    7. ' ' → logprob: -10.154500961303711
    8. '   ' → logprob: -10.404500961303711
    9. '	for' → logprob: -11.654500961303711
    10. '```' → logprob: -12.654500961303711

Token 260: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.849626362323761
    2. ' *' → logprob: -1.3496263027191162
    3. ' for' → logprob: -1.8496263027191162
    4. 'for' → logprob: -2.474626302719116
    5. '*n' → logprob: -2.974626302719116
    6. ')' → logprob: -4.224626541137695
    7. ']' → logprob: -6.349626541137695
    8. '[n' → logprob: -6.724626541137695
    9. '(n' → logprob: -7.224626541137695
    10. '   ' → logprob: -7.974626541137695

Token 261: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -3.7385154428193346e-05
    2. ' n' → logprob: -10.25003719329834
    3. '   ' → logprob: -13.87503719329834
    4. '(n' → logprob: -13.87503719329834
    5. '	n' → logprob: -16.625038146972656
    6. '_n' → logprob: -18.875038146972656
    7. 'nj' → logprob: -19.250038146972656
    8. '[n' → logprob: -19.625038146972656
    9. '
' → logprob: -20.625038146972656
    10. '(' → logprob: -20.750038146972656

Token 262: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02669432945549488
    2. ' for' → logprob: -4.526694297790527
    3. 'for' → logprob: -4.651694297790527
    4. '    
' → logprob: -6.401694297790527
    5. '  
' → logprob: -6.651694297790527
    6. ' 
' → logprob: -6.776694297790527
    7. '<|end|>' → logprob: -7.026694297790527
    8. '   ' → logprob: -7.151694297790527
    9. 'm' → logprob: -9.401694297790527
    10. '   
' → logprob: -10.151694297790527

Token 263: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.34647586941719055
    2. ' for' → logprob: -2.221475839614868
    3. 'for' → logprob: -2.846475839614868
    4. 'm' → logprob: -3.471475839614868
    5. '   ' → logprob: -3.471475839614868
    6. 'count' → logprob: -3.596475839614868
    7. 'result' → logprob: -4.221476078033447
    8. '<|end|>' → logprob: -4.971476078033447
    9. '    
' → logprob: -5.471476078033447
    10. ' result' → logprob: -5.846476078033447

Token 264: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.00917404517531395
    2. 'res' → logprob: -4.75917387008667
    3. '    
' → logprob: -8.634174346923828
    4. '   ' → logprob: -8.634174346923828
    5. 'count' → logprob: -9.009174346923828
    6. ' result' → logprob: -9.884174346923828
    7. '
' → logprob: -11.009174346923828
    8. 'answer' → logprob: -12.259174346923828
    9. '  
' → logprob: -12.634174346923828
    10. 'ans' → logprob: -13.134174346923828

Token 265: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00103686039801687
    2. '=' → logprob: -6.876036643981934
    3. ' ' → logprob: -12.501036643981934
    4. '_' → logprob: -15.626036643981934
    5. ',' → logprob: -16.12603759765625
    6. 's' → logprob: -17.37603759765625
    7. ' =)' → logprob: -17.62603759765625
    8. ' ' → logprob: -18.12603759765625
    9. ' =
' → logprob: -18.25103759765625
    10. '  ' → logprob: -18.25103759765625

Token 266: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02324547804892063
    2. ' ' → logprob: -3.7732455730438232
    3. 'm' → logprob: -18.148244857788086
    4. ' ' → logprob: -18.148244857788086
    5. 'sum' → logprob: -18.398244857788086
    6. '۰' → logprob: -19.273244857788086
    7. '1' → logprob: -20.023244857788086
    8. ' m' → logprob: -20.210744857788086
    9. '000' → logprob: -20.335744857788086
    10. ' sum' → logprob: -20.335744857788086

Token 267: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.318681188422488e-05
    2. ' ' → logprob: -11.25001335144043
    3. 'm' → logprob: -16.12501335144043
    4. 'sum' → logprob: -17.87501335144043
    5. '   ' → logprob: -19.12501335144043
    6. 'int' → logprob: -19.56251335144043
    7. '۰' → logprob: -19.62501335144043
    8. '  ' → logprob: -20.12501335144043
    9. 'len' → logprob: -20.25001335144043
    10. 'max' → logprob: -20.31251335144043

Token 268: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.203632652759552
    2. ' for' → logprob: -1.8286325931549072
    3. '   ' → logprob: -4.453632831573486
    4. 'for' → logprob: -5.203632831573486
    5. ' 
' → logprob: -5.203632831573486
    6. '  
' → logprob: -7.703632831573486
    7. '    
' → logprob: -7.953632831573486
    8. '<|end|>' → logprob: -9.328632354736328
    9. '
' → logprob: -10.453632354736328
    10. '   
' → logprob: -10.828632354736328

Token 269: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06459864228963852
    2. ' for' → logprob: -3.439598560333252
    3. ' 
' → logprob: -3.814598560333252
    4. '   ' → logprob: -5.439598560333252
    5. 'for' → logprob: -6.439598560333252
    6. '  
' → logprob: -6.689598560333252
    7. '    
' → logprob: -6.814598560333252
    8. '   
' → logprob: -9.93959903717041
    9. '<|end|>' → logprob: -10.81459903717041
    10. '
' → logprob: -10.93959903717041

Token 270: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.023303592577576637
    2. ' for' → logprob: -3.773303508758545
    3. '   ' → logprob: -9.773303985595703
    4. '
' → logprob: -13.898303985595703
    5. '	for' → logprob: -15.273303985595703
    6. ' 
' → logprob: -18.773303985595703
    7. '    
' → logprob: -19.148303985595703
    8. ' ' → logprob: -20.023303985595703
    9. '  ' → logprob: -20.023303985595703
    10. '  
' → logprob: -20.898303985595703

Token 271: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.6069966554641724
    2. 'i' → logprob: -1.1069966554641724
    3. ' i' → logprob: -2.606996536254883
    4. ' u' → logprob: -2.981996536254883
    5. '   ' → logprob: -11.731996536254883
    6. ' ' → logprob: -12.856996536254883
    7. '	u' → logprob: -12.981996536254883
    8. '	i' → logprob: -13.356996536254883
    9. '```' → logprob: -14.356996536254883
    10. 'v' → logprob: -14.356996536254883

Token 272: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05488668009638786
    2. 'in' → logprob: -2.92988657951355
    3. ' ' → logprob: -13.554886817932129
    4. '	in' → logprob: -13.804886817932129
    5. ' 
' → logprob: -14.554886817932129
    6. '
' → logprob: -14.929886817932129
    7. 'n' → logprob: -15.054886817932129
    8. 'import' → logprob: -15.679886817932129
    9. '  ' → logprob: -15.929886817932129
    10. 'In' → logprob: -16.179885864257812

Token 273: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.018150413408875465
    2. ' range' → logprob: -4.018150329589844
    3. '(range' → logprob: -15.393150329589844
    4. 'graph' → logprob: -15.643150329589844
    5. '	range' → logprob: -16.393150329589844
    6. '   ' → logprob: -18.143150329589844
    7. 'ran' → logprob: -19.393150329589844
    8. '0' → logprob: -19.518150329589844
    9. 'Range' → logprob: -19.768150329589844
    10. '```' → logprob: -20.018150329589844

Token 274: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.0001105762057704851
    2. 'm' → logprob: -9.125110626220703
    3. '(' → logprob: -13.875110626220703
    4. '   ' → logprob: -15.250110626220703
    5. ' m' → logprob: -15.500110626220703
    6. '(len' → logprob: -16.500110626220703
    7. ' (' → logprob: -16.625110626220703
    8. '(
' → logprob: -17.000110626220703
    9. '	m' → logprob: -17.750110626220703
    10. '[m' → logprob: -19.000110626220703

Token 275: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5760074257850647
    2. '):
' → logprob: -0.8260074257850647
    3. '):
' → logprob: -10.701007843017578
    4. ')' → logprob: -11.076007843017578
    5. '   ' → logprob: -11.326007843017578
    6. ' ):' → logprob: -11.576007843017578
    7. ' ):
' → logprob: -12.201007843017578
    8. ':' → logprob: -13.326007843017578
    9. ':
' → logprob: -13.826007843017578
    10. '):

' → logprob: -14.951007843017578

Token 276: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10023567825555801
    2. ':' → logprob: -2.6002357006073
    3. '   ' → logprob: -4.225235462188721
    4. ':
' → logprob: -5.225235462188721
    5. '<|end|>' → logprob: -7.600235462188721
    6. '[' → logprob: -9.100235939025879
    7. '):
' → logprob: -9.350235939025879
    8. '):' → logprob: -10.100235939025879
    9. '<|end|>' → logprob: -10.100235939025879
    10. ' used' → logprob: -10.100235939025879

Token 277: ' used' (ID: 2061)
  Prédit: ' used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' used' → logprob: -0.26814794540405273
    2. '       ' → logprob: -1.5181479454040527
    3. '   ' → logprob: -4.643147945404053
    4. 'used' (adapté à ' used') → logprob: -5.143147945404053
    5. '           ' → logprob: -7.893147945404053
    6. '
' → logprob: -9.768148422241211
    7. '```' → logprob: -9.893148422241211
    8. '    ' → logprob: -10.268148422241211
    9. '        
' → logprob: -10.768148422241211
    10. '        ' → logprob: -10.893148422241211

Token 278: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.160275399684906
    2. '=' → logprob: -1.9102754592895508
    3. '=[' → logprob: -10.53527545928955
    4. '[' → logprob: -10.91027545928955
    5. ' =[' → logprob: -12.16027545928955
    6. '[:]' → logprob: -14.41027545928955
    7. ' ' → logprob: -15.53527545928955
    8. ')' → logprob: -16.035274505615234
    9. '```' → logprob: -16.285274505615234
    10. '	' → logprob: -16.410274505615234

Token 279: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.008615042082965374
    2. ' [' → logprob: -4.758615016937256
    3. '[u' → logprob: -15.133615493774414
    4. '   ' → logprob: -15.258615493774414
    5. '[n' → logprob: -17.758615493774414
    6. ' ' → logprob: -18.133615493774414
    7. '[new' → logprob: -18.258615493774414
    8. '[node' → logprob: -18.633615493774414
    9. '[to' → logprob: -18.633615493774414
    10. '[len' → logprob: -19.008615493774414

Token 280: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -4.842555426876061e-06
    2. ' False' → logprob: -12.250004768371582
    3. '(False' → logprob: -19.1250057220459
    4. 'True' → logprob: -19.2500057220459
    5. '0' → logprob: -20.1250057220459
    6. '   ' → logprob: -21.3750057220459
    7. '[' → logprob: -21.3750057220459
    8. '```' → logprob: -23.3750057220459
    9. '.False' → logprob: -23.3750057220459
    10. '
' → logprob: -23.8750057220459

Token 281: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.38715437054634094
    2. ']*' → logprob: -1.1371543407440186
    3. ' for' → logprob: -8.887154579162598
    4. ' ]' → logprob: -9.137154579162598
    5. ')' → logprob: -11.137154579162598
    6. '*' → logprob: -11.762154579162598
    7. 'for' → logprob: -12.012154579162598
    8. ')*' → logprob: -12.887154579162598
    9. ' *' → logprob: -13.012154579162598
    10. ']*(' → logprob: -13.137154579162598

Token 282: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6301063299179077
    2. '```' → logprob: -2.1301064491271973
    3. '[:]' → logprob: -2.2551064491271973
    4. '<|end|>' → logprob: -2.7551064491271973
    5. ']' → logprob: -3.0051064491271973
    6. '
' → logprob: -3.6301064491271973
    7. '[' → logprob: -4.005106449127197
    8. '   ' → logprob: -4.130106449127197
    9. ' for' → logprob: -4.630106449127197
    10. '       ' → logprob: -4.630106449127197

Token 283: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -8.061054359131958e-06
    2. ' n' → logprob: -11.750007629394531
    3. '   ' → logprob: -16.12500762939453
    4. '(n' → logprob: -17.75000762939453
    5. '	n' → logprob: -19.12500762939453
    6. 'len' → logprob: -20.75000762939453
    7. ' ' → logprob: -20.75000762939453
    8. '
' → logprob: -21.12500762939453
    9. '  ' → logprob: -21.37500762939453
    10. '    ' → logprob: -21.62500762939453

Token 284: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3937157392501831
    2. '       ' → logprob: -1.268715739250183
    3. '<|end|>' → logprob: -3.3937158584594727
    4. '        
' → logprob: -5.768715858459473
    5. '  
' → logprob: -5.893715858459473
    6. ' 
' → logprob: -6.393715858459473
    7. '   ' → logprob: -6.893715858459473
    8. '    
' → logprob: -7.018715858459473
    9. '
' → logprob: -8.143715858459473
    10. ')' → logprob: -8.143715858459473

Token 285: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34389522671699524
    2. '<|end|>' → logprob: -1.9688951969146729
    3. '
' → logprob: -2.343895196914673
    4. ' if' → logprob: -3.468895196914673
    5. '   ' → logprob: -4.093895435333252
    6. '        
' → logprob: -5.968895435333252
    7. ' 
' → logprob: -6.468895435333252
    8. '    
' → logprob: -7.468895435333252
    9. '  
' → logprob: -7.468895435333252
    10. '	if' → logprob: -7.593895435333252

Token 286: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0009562437771819532
    2. ' if' → logprob: -7.000956058502197
    3. '       ' → logprob: -10.250956535339355
    4. 'try' → logprob: -12.500956535339355
    5. 'result' → logprob: -12.750956535339355
    6. '
' → logprob: -13.250956535339355
    7. '   ' → logprob: -14.000956535339355
    8. '	if' → logprob: -16.12595558166504
    9. 'If' → logprob: -16.62595558166504
    10. '        
' → logprob: -16.87595558166504

Token 287: ' try' (ID: 2075)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'try' → logprob: -0.25193166732788086
    2. ' try' → logprob: -1.5019316673278809
    3. '   ' → logprob: -13.626932144165039
    4. '.try' → logprob: -14.251932144165039
    5. '_try' → logprob: -15.626932144165039
    6. ' ' → logprob: -16.12693214416504
    7. '    ' → logprob: -16.12693214416504
    8. '	try' → logprob: -16.25193214416504
    9. '  ' → logprob: -16.25193214416504
    10. ' ' → logprob: -17.00193214416504

Token 288: '_match' (ID: 26039)
  Prédit: '_match'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_match' → logprob: -9.088346359931165e-07
    2. '_' → logprob: -14.625000953674316
    3. ' _' → logprob: -15.375000953674316
    4. '_mat' → logprob: -16.25
    5. 'match' → logprob: -17.5
    6. '_m' → logprob: -17.875
    7. '_matching' → logprob: -17.875
    8. ' match' → logprob: -19.125
    9. '_try' → logprob: -19.25
    10. '_merge' → logprob: -19.25

Token 289: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -1.981667537620524e-06
    2. '(' → logprob: -13.375001907348633
    3. '(
' → logprob: -16.250001907348633
    4. ' (' → logprob: -16.375001907348633
    5. 'u' → logprob: -16.875001907348633
    6. '[u' → logprob: -17.375001907348633
    7. '(user' → logprob: -18.000001907348633
    8. '<u' → logprob: -20.125001907348633
    9. ' u' → logprob: -20.375001907348633
    10. '
' → logprob: -20.875001907348633

Token 290: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1444292664527893
    2. '(' → logprob: -2.0194292068481445
    3. ' ,' → logprob: -6.5194292068481445
    4. ' (' → logprob: -8.519429206848145
    5. '(graph' → logprob: -10.144429206848145
    6. ',(' → logprob: -11.644429206848145
    7. ' (,' → logprob: -12.519429206848145
    8. '   ' → logprob: -12.519429206848145
    9. ')' → logprob: -12.644429206848145
    10. 'used' → logprob: -12.769429206848145

Token 291: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.033651694655418396
    2. ' graph' → logprob: -3.40865159034729
    3. '	graph' → logprob: -12.658651351928711
    4. '   ' → logprob: -13.408651351928711
    5. '(graph' → logprob: -15.158651351928711
    6. '_graph' → logprob: -15.408651351928711
    7. '
' → logprob: -15.658651351928711
    8. 'Graph' → logprob: -16.15865135192871
    9. 'graphs' → logprob: -16.15865135192871
    10. '```' → logprob: -16.53365135192871

Token 292: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00019066639652010053
    2. ' ,' → logprob: -8.625190734863281
    3. ',
' → logprob: -11.875190734863281
    4. '   ' → logprob: -13.000190734863281
    5. '```' → logprob: -14.625190734863281
    6. ' used' → logprob: -14.750190734863281
    7. 'used' → logprob: -15.000190734863281
    8. '       ' → logprob: -16.25019073486328
    9. ',

' → logprob: -16.68769073486328
    10. ' ' → logprob: -16.68769073486328

Token 293: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.011056310497224331
    2. ' used' → logprob: -4.511056423187256
    3. '   ' → logprob: -11.761055946350098
    4. '.used' → logprob: -15.261055946350098
    5. '_used' → logprob: -15.636055946350098
    6. 'Used' → logprob: -15.886055946350098
    7. ' ' → logprob: -16.386056900024414
    8. '-used' → logprob: -17.136056900024414
    9. '
' → logprob: -17.386056900024414
    10. ')' → logprob: -17.636056900024414

Token 294: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009063414763659239
    2. '):' → logprob: -7.250906467437744
    3. ' ,' → logprob: -8.750905990600586
    4. ')' → logprob: -10.750905990600586
    5. '):
' → logprob: -12.250905990600586
    6. ',
' → logprob: -12.750905990600586
    7. '   ' → logprob: -13.500905990600586
    8. ' ):' → logprob: -14.125905990600586
    9. ',m' → logprob: -14.125905990600586
    10. '[' → logprob: -14.625905990600586

Token 295: ' match' (ID: 3981)
  Prédit: 'match'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'match' → logprob: -0.001170460251159966
    2. ' match' → logprob: -6.751170635223389
    3. '   ' → logprob: -15.87617015838623
    4. ' ' → logprob: -17.126171112060547
    5. '	match' → logprob: -17.626171112060547
    6. 'm' → logprob: -18.001171112060547
    7. '
' → logprob: -18.501171112060547
    8. '(match' → logprob: -18.626171112060547
    9. ')' → logprob: -19.876171112060547
    10. '  ' → logprob: -20.001171112060547

Token 296: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2014261931180954
    2. '):' → logprob: -1.7014261484146118
    3. ')' → logprob: -11.95142650604248
    4. '):
' → logprob: -12.57642650604248
    5. ' ):
' → logprob: -13.57642650604248
    6. ' ):' → logprob: -14.32642650604248
    7. '   ' → logprob: -14.57642650604248
    8. '):

' → logprob: -15.20142650604248
    9. ':' → logprob: -15.45142650604248
    10. ':
' → logprob: -16.201425552368164

Token 297: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.45166584849357605
    2. ' result' → logprob: -1.2016658782958984
    3. 'result' → logprob: -2.9516658782958984
    4. '           ' → logprob: -4.951665878295898
    5. '   ' → logprob: -5.701665878295898
    6. '
' → logprob: -10.201665878295898
    7. '	result' → logprob: -10.576665878295898
    8. ',result' → logprob: -12.576665878295898
    9. '(result' → logprob: -13.076665878295898
    10. ' ' → logprob: -13.201665878295898

Token 298: ' result' (ID: 1534)
  Prédit: ' result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.6931518912315369
    2. 'result' (adapté à ' result') → logprob: -0.6931518912315369
    3. '   ' → logprob: -12.818151473999023
    4. '
' → logprob: -13.318151473999023
    5. ' 
' → logprob: -15.943151473999023
    6. '	result' → logprob: -16.443151473999023
    7. '    ' → logprob: -17.193151473999023
    8. '           ' → logprob: -18.693151473999023
    9. '       ' → logprob: -18.693151473999023
    10. ' ' → logprob: -18.818151473999023

Token 299: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.25196531414985657
    2. '+=' → logprob: -1.5019652843475342
    3. '+' → logprob: -10.376965522766113
    4. ']+=' → logprob: -12.751965522766113
    5. '   ' → logprob: -14.251965522766113
    6. ' ' → logprob: -14.626965522766113
    7. '+='' → logprob: -15.126965522766113
    8. '+="' → logprob: -15.751965522766113
    9. '<|end|>' → logprob: -15.751965522766113
    10. '    ' → logprob: -16.251964569091797

Token 300: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003600071184337139
    2. ' ' → logprob: -5.628600120544434
    3. '   ' → logprob: -17.628599166870117
    4. '```' → logprob: -17.753599166870117
    5. ' ' → logprob: -19.003599166870117
    6. '  ' → logprob: -19.628599166870117
    7. '<|end|>' → logprob: -19.816099166870117
    8. '１' → logprob: -20.941099166870117
    9. '۱' → logprob: -21.128599166870117
    10. '
' → logprob: -21.441099166870117

Token 301: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '```' → logprob: -17.750003814697266
    4. '   ' → logprob: -18.500003814697266
    5. '
' → logprob: -20.312503814697266
    6. '１' → logprob: -20.937503814697266
    7. '۱' → logprob: -21.125003814697266
    8. '`' → logprob: -21.250003814697266
    9. '  ' → logprob: -21.375003814697266
    10. '<|end|>' → logprob: -21.437503814697266

Token 302: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.32496267557144165
    2. 'print' → logprob: -1.3249626159667969
    3. '   ' → logprob: -4.574962615966797
    4. ' print' → logprob: -6.699962615966797
    5. '    
' → logprob: -9.574962615966797
    6. '  
' → logprob: -11.574962615966797
    7. '```' → logprob: -11.824962615966797
    8. '
' → logprob: -12.324962615966797
    9. ' 
' → logprob: -13.699962615966797
    10. '

' → logprob: -13.699962615966797

Token 303: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06548266112804413
    2. '   ' → logprob: -2.8154826164245605
    3. '
' → logprob: -5.6904826164245605
    4. ' print' → logprob: -9.065483093261719
    5. '    
' → logprob: -11.690483093261719
    6. '```' → logprob: -12.315483093261719
    7. '
' → logprob: -13.940483093261719
    8. '	print' → logprob: -14.315483093261719
    9. '  
' → logprob: -15.440483093261719
    10. '.print' → logprob: -15.565483093261719

Token 304: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -3.128163257315464e-07
    2. ' print' → logprob: -15.625
    3. '   ' → logprob: -15.875
    4. '```' → logprob: -18.875
    5. '
' → logprob: -19.0
    6. '    
' → logprob: -19.625
    7. 'printf' → logprob: -21.875
    8. '	print' → logprob: -22.125
    9. '``' → logprob: -22.625
    10. '  
' → logprob: -23.0

Token 305: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.0032724218908697367
    2. '(' → logprob: -5.753272533416748
    3. '('' → logprob: -9.50327205657959
    4. '(f' → logprob: -11.00327205657959
    5. '(res' → logprob: -13.50327205657959
    6. ' (' → logprob: -14.37827205657959
    7. '(results' → logprob: -14.50327205657959
    8. 'result' → logprob: -15.00327205657959
    9. '(resultado' → logprob: -15.37827205657959
    10. '()' → logprob: -15.75327205657959

Token 306: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. ' )' → logprob: -14.125000953674316
    3. ')`' → logprob: -16.625001907348633
    4. ')
' → logprob: -17.125001907348633
    5. '())' → logprob: -17.250001907348633
    6. '()' → logprob: -17.500001907348633
    7. '))' → logprob: -17.625001907348633
    8. '')' → logprob: -18.000001907348633
    9. '`)' → logprob: -18.125001907348633
    10. ')}' → logprob: -18.750001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 304
Tokens correctement prédits (1ère position, stricte): 154
Tokens correctement prédits (1ère position, avec adaptation): 169
Tokens correctement prédits (top 10): 284
Précision stricte (1ère position): 50.66%
Précision adaptée (1ère position): 55.59%
Précision (top 10): 93.42%
================================================================================
