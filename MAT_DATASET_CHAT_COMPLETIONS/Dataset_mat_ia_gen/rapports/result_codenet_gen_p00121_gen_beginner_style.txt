================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:10:59
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from collections import deque
import sys

goal = (0,1,2,3,4,5,6,7)

moves = {
    0: [1,4],
    1: [0,2,5],
    2: [1,3,6],
    3: [2,7],
    4: [0,5],
    5: [1,4,6],
    6: [2,5,7],
    7: [3,6]
}

def bfs(start):
    start = tuple(start)
    if start == goal:
        return 0
    visited = set([start])
    queue = deque()
    queue.append((start,0))
    while queue:
        state, dist = queue.popleft()
        zero_pos = state.index(0)
        for nxt in moves[zero_pos]:
            new_state = list(state)
            new_state[zero_pos], new_state[nxt] = new_state[nxt], new_state[zero_pos]
            new_state_t = tuple(new_state)
            if new_state_t == goal:
                return dist+1
            if new_state_t not in visited:
                visited.add(new_state_t)
                queue.append((new_state_t, dist+1))
    return -1  # should not happen as problem states solvable

for line in sys.stdin:
    line=line.strip()
    if not line:
        continue
    cards = list(map(int,line.split()))
    print(bfs(cards))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' collections' (ID: 22690)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' deque' (ID: 90347)
  Prédit: 'abc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abc' → logprob: -0.41044583916664124
    2. ' abc' → logprob: -1.9104458093643188
    3. 'deque' → logprob: -2.4104459285736084
    4. ' defaultdict' → logprob: -2.5354459285736084
    5. 'default' → logprob: -4.660445690155029
    6. ' deque' → logprob: -6.035445690155029
    7. 'Counter' → logprob: -6.160445690155029
    8. '```' → logprob: -6.160445690155029
    9. ' Counter' → logprob: -6.660445690155029
    10. ' named' → logprob: -7.035445690155029

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010959392413496971
    2. '.' → logprob: -5.385959625244141
    3. '\(' → logprob: -5.760959625244141
    4. '\' → logprob: -6.510959625244141
    5. '```' → logprob: -7.885959625244141
    6. '[' → logprob: -8.51095962524414
    7. '\[' → logprob: -8.51095962524414
    8. ',' → logprob: -8.63595962524414
    9. '\n' → logprob: -9.13595962524414
    10. 'newline' → logprob: -9.13595962524414

Token 5: 'import' (ID: 561)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2967621088027954
    2. 'd' → logprob: -2.046761989593506
    3. '\' → logprob: -3.796761989593506
    4. '\n' → logprob: -3.796761989593506
    5. 'a' → logprob: -4.296761989593506
    6. '[' → logprob: -4.546761989593506
    7. '(
' → logprob: -4.671761989593506
    8. ',' → logprob: -4.796761989593506
    9. '
' → logprob: -4.796761989593506
    10. '.' → logprob: -5.296761989593506

Token 6: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.027491630986332893
    2. ' os' → logprob: -4.027491569519043
    3. ' collections' → logprob: -5.152491569519043
    4. ' queue' → logprob: -6.027491569519043
    5. ' re' → logprob: -8.027491569519043
    6. ' itertools' → logprob: -8.402491569519043
    7. ' heap' → logprob: -9.152491569519043
    8. 'sys' → logprob: -9.277491569519043
    9. ' threading' → logprob: -9.402491569519043
    10. ' ' → logprob: -9.777491569519043

Token 7: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.19545447826385498
    2. '\' → logprob: -2.3204545974731445
    3. '
' → logprob: -3.1954545974731445
    4. '```' → logprob: -4.9454545974731445
    5. 'newline' → logprob: -5.0704545974731445
    6. 'for' → logprob: -5.0704545974731445
    7. '.' → logprob: -5.5704545974731445
    8. 'input' → logprob: -5.6954545974731445
    9. 'import' → logprob: -5.6954545974731445
    10. '.readline' → logprob: -6.3204545974731445

Token 8: 'goal' (ID: 47313)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8832588195800781
    2. 'data' → logprob: -1.6332588195800781
    3. '`' → logprob: -2.508258819580078
    4. '=' → logprob: -2.883258819580078
    5. '\' → logprob: -3.008258819580078
    6. 'for' → logprob: -3.008258819580078
    7. '```' → logprob: -3.508258819580078
    8. 'input' → logprob: -3.883258819580078
    9. '\n' → logprob: -4.133258819580078
    10. '[' → logprob: -4.383258819580078

Token 9: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09610681980848312
    2. '=' → logprob: -2.846106767654419
    3. '_' → logprob: -3.846106767654419
    4. ')' → logprob: -4.971107006072998
    5. ' ' → logprob: -6.596107006072998
    6. '_states' → logprob: -7.471107006072998
    7. '_space' → logprob: -7.596107006072998
    8. '.' → logprob: -7.596107006072998
    9. '(' → logprob: -7.846107006072998
    10. '[:]' → logprob: -8.34610652923584

Token 10: ' (' (ID: 350)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.946914792060852
    2. ' "' → logprob: -1.821914792060852
    3. ' '' → logprob: -1.946914792060852
    4. ' deque' → logprob: -2.5719146728515625
    5. ' ' → logprob: -2.8219146728515625
    6. ' []' → logprob: -3.0719146728515625
    7. ''' → logprob: -3.1969146728515625
    8. '"' → logprob: -3.5719146728515625
    9. ' [' → logprob: -4.5719146728515625
    10. ''s' → logprob: -4.8219146728515625

Token 11: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.19735383987426758
    2. ')' → logprob: -2.5723538398742676
    3. '1' → logprob: -3.3223538398742676
    4. ''' → logprob: -3.3223538398742676
    5. '3' → logprob: -4.947353839874268
    6. '9' → logprob: -5.322353839874268
    7. ' ' → logprob: -6.072353839874268
    8. '4' → logprob: -6.322353839874268
    9. '-' → logprob: -6.447353839874268
    10. '100' → logprob: -6.572353839874268

Token 12: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.547789674485102e-05
    2. ' ,' → logprob: -11.125035285949707
    3. ')' → logprob: -11.375035285949707
    4. ',)' → logprob: -11.875035285949707
    5. '0' → logprob: -13.750035285949707
    6. ',
' → logprob: -15.250035285949707
    7. '<|end|>' → logprob: -16.250036239624023
    8. '7' → logprob: -16.375036239624023
    9. ' )' → logprob: -16.500036239624023
    10. ',

' → logprob: -16.625036239624023

Token 13: '1' (ID: 16)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4301773011684418
    2. '0' → logprob: -1.0551773309707642
    3. '1' → logprob: -6.805177211761475
    4. ')' → logprob: -9.055177688598633
    5. '3' → logprob: -9.180177688598633
    6. ' -' → logprob: -10.055177688598633
    7. '-' → logprob: -10.305177688598633
    8. '4' → logprob: -11.305177688598633
    9. '5' → logprob: -11.430177688598633
    10. '9' → logprob: -11.430177688598633

Token 14: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.558399319241289e-05
    2. ',' → logprob: -11.125025749206543
    3. '),' → logprob: -12.125025749206543
    4. '0' → logprob: -13.250025749206543
    5. '}' → logprob: -14.500025749206543
    6. '))' → logprob: -14.625025749206543
    7. '')' → logprob: -15.000025749206543
    8. ')
' → logprob: -15.000025749206543
    9. ',)' → logprob: -15.125025749206543
    10. '```' → logprob: -15.250025749206543

Token 15: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.7458122372627258
    2. ' ' → logprob: -0.9958122372627258
    3. '0' → logprob: -1.870812177658081
    4. ')' → logprob: -7.37081241607666
    5. '3' → logprob: -7.49581241607666
    6. '1' → logprob: -7.74581241607666
    7. '7' → logprob: -8.24581241607666
    8. '4' → logprob: -9.37081241607666
    9. '5' → logprob: -10.18331241607666
    10. '6' → logprob: -10.62081241607666

Token 16: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009812168776988983
    2. ',' → logprob: -4.634812355041504
    3. '3' → logprob: -10.384812355041504
    4. '0' → logprob: -11.884812355041504
    5. ',)' → logprob: -12.009812355041504
    6. '7' → logprob: -13.009812355041504
    7. '),' → logprob: -13.134812355041504
    8. '[' → logprob: -13.384812355041504
    9. '9' → logprob: -14.134812355041504
    10. '```' → logprob: -14.384812355041504

Token 17: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.06197485327720642
    2. ' ' → logprob: -2.8119747638702393
    3. '0' → logprob: -12.93697452545166
    4. '7' → logprob: -14.06197452545166
    5. '4' → logprob: -14.24947452545166
    6. ' None' → logprob: -14.93697452545166
    7. '5' → logprob: -14.93697452545166
    8. 'None' → logprob: -15.06197452545166
    9. '1' → logprob: -15.12447452545166
    10. ',' → logprob: -15.18697452545166

Token 18: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22558538615703583
    2. ',' → logprob: -1.6005853414535522
    3. ',)' → logprob: -8.850584983825684
    4. '4' → logprob: -11.600584983825684
    5. '),' → logprob: -12.225584983825684
    6. '0' → logprob: -12.350584983825684
    7. ',
' → logprob: -13.100584983825684
    8. '[' → logprob: -13.850584983825684
    9. ' )' → logprob: -13.850584983825684
    10. ')
' → logprob: -14.100584983825684

Token 19: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.02636556141078472
    2. ' ' → logprob: -3.6513655185699463
    3. '7' → logprob: -9.901365280151367
    4. '5' → logprob: -11.401365280151367
    5. '6' → logprob: -14.026365280151367
    6. '8' → logprob: -14.276365280151367
    7. ',' → logprob: -14.338865280151367
    8. '```' → logprob: -15.213865280151367
    9. '' → logprob: -15.463865280151367
    10. ' ,' → logprob: -15.713865280151367

Token 20: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.42994728684425354
    2. ',' → logprob: -1.0549472570419312
    3. ',)' → logprob: -6.804947376251221
    4. '5' → logprob: -9.179946899414062
    5. '),' → logprob: -11.554946899414062
    6. ',
' → logprob: -11.929946899414062
    7. '6' → logprob: -12.429946899414062
    8. '0' → logprob: -12.679946899414062
    9. '```' → logprob: -13.304946899414062
    10. '7' → logprob: -13.554946899414062

Token 21: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.00043519894825294614
    2. ' ' → logprob: -7.7504353523254395
    3. '6' → logprob: -14.000434875488281
    4. '7' → logprob: -14.000434875488281
    5. ',' → logprob: -14.250434875488281
    6. ')' → logprob: -15.125434875488281
    7. '1' → logprob: -15.562934875488281
    8. '```' → logprob: -15.625434875488281
    9. 'None' → logprob: -15.937934875488281
    10. '8' → logprob: -16.00043487548828

Token 22: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.42903485894203186
    2. ',' → logprob: -1.0540348291397095
    3. ',)' → logprob: -8.054035186767578
    4. '6' → logprob: -12.429035186767578
    5. '7' → logprob: -12.554035186767578
    6. '),' → logprob: -13.054035186767578
    7. ' )' → logprob: -14.054035186767578
    8. '```' → logprob: -14.304035186767578
    9. ',
' → logprob: -14.554035186767578
    10. '`)' → logprob: -14.554035186767578

Token 23: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.007638686802238226
    2. ' ' → logprob: -4.882638454437256
    3. '7' → logprob: -11.507638931274414
    4. ',' → logprob: -11.507638931274414
    5. '```' → logprob: -12.257638931274414
    6. ')' → logprob: -13.632638931274414
    7. ''' → logprob: -14.320138931274414
    8. ' -' → logprob: -14.507638931274414
    9. ' (' → logprob: -14.695138931274414
    10. '0' → logprob: -14.820138931274414

Token 24: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05618252232670784
    2. ')' → logprob: -2.931182622909546
    3. '7' → logprob: -6.806182384490967
    4. ',)' → logprob: -8.681182861328125
    5. '),' → logprob: -11.681182861328125
    6. ' ' → logprob: -11.931182861328125
    7. ' ,' → logprob: -12.931182861328125
    8. '0' → logprob: -14.056182861328125
    9. '```' → logprob: -14.556182861328125
    10. '`)' → logprob: -14.681182861328125

Token 25: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0002314303710591048
    2. ' ' → logprob: -8.375231742858887
    3. ',' → logprob: -15.125231742858887
    4. ')' → logprob: -15.500231742858887
    5. '```' → logprob: -16.43773078918457
    6. '8' → logprob: -17.00023078918457
    7. '' → logprob: -17.18773078918457
    8. '  ' → logprob: -17.37523078918457
    9. ' (' → logprob: -18.18773078918457
    10. '),' → logprob: -18.56273078918457

Token 26: ')

' (ID: 1029)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20163045823574066
    2. ')' → logprob: -1.7016304731369019
    3. ',)' → logprob: -8.576630592346191
    4. '8' → logprob: -11.951630592346191
    5. '9' → logprob: -11.951630592346191
    6. '),' → logprob: -12.701630592346191
    7. '7' → logprob: -12.826630592346191
    8. ' ' → logprob: -13.326630592346191
    9. '`)' → logprob: -13.451630592346191
    10. '<|end|>' → logprob: -13.576630592346191

Token 27: 'moves' (ID: 155600)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.017649253830313683
    2. '8' → logprob: -4.392649173736572
    3. ')' → logprob: -5.392649173736572
    4. ',)' → logprob: -7.892649173736572
    5. ' ,' → logprob: -9.14264965057373
    6. ' ' → logprob: -10.39264965057373
    7. ',None' → logprob: -11.01764965057373
    8. ' )' → logprob: -11.26764965057373
    9. ',b' → logprob: -12.26764965057373
    10. ',n' → logprob: -13.26764965057373

Token 28: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020700128749012947
    2. '=' → logprob: -3.895700216293335
    3. 's' → logprob: -8.895700454711914
    4. '=[]' → logprob: -11.895700454711914
    5. ':' → logprob: -13.020700454711914
    6. ')' → logprob: -13.270700454711914
    7. '_' → logprob: -13.395700454711914
    8. '[' → logprob: -13.520700454711914
    9. '[:]' → logprob: -13.520700454711914
    10. '[]' → logprob: -13.645700454711914

Token 29: ' {
' (ID: 405)
  Prédit: ' [('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [(' → logprob: -1.0307106971740723
    2. '[' → logprob: -1.5307106971740723
    3. '[(' → logprob: -1.6557106971740723
    4. ' [' → logprob: -1.9057106971740723
    5. ' []' → logprob: -3.9057106971740723
    6. ' {' → logprob: -4.280710697174072
    7. ' [
' → logprob: -4.280710697174072
    8. '[
' → logprob: -4.905710697174072
    9. '[]' → logprob: -5.155710697174072
    10. ' {(' → logprob: -5.155710697174072

Token 30: '   ' (ID: 271)
  Prédit: ' ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.8571174144744873
    2. ''' → logprob: -1.3571174144744873
    3. '(' → logprob: -1.9821174144744873
    4. ' (' → logprob: -2.1071174144744873
    5. '   ' → logprob: -3.8571174144744873
    6. '0' → logprob: -4.107117652893066
    7. ' "' → logprob: -5.107117652893066
    8. '"' → logprob: -5.607117652893066
    9. ''s' → logprob: -5.732117652893066
    10. '1' → logprob: -6.357117652893066

Token 31: ' ' (ID: 220)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.34601446986198425
    2. '(' → logprob: -1.5960144996643066
    3. ' '' → logprob: -3.2210144996643066
    4. '0' → logprob: -3.8460144996643066
    5. ' (' → logprob: -4.721014499664307
    6. '"' → logprob: -5.096014499664307
    7. '   ' → logprob: -5.221014499664307
    8. ''U' → logprob: -5.596014499664307
    9. ' ' → logprob: -7.471014499664307
    10. '1' → logprob: -7.471014499664307

Token 32: '0' (ID: 15)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.33915600180625916
    2. ''' → logprob: -1.9641560316085815
    3. ' (' → logprob: -2.339155912399292
    4. ' '' → logprob: -3.964155912399292
    5. '0' → logprob: -4.339156150817871
    6. '   ' → logprob: -4.589156150817871
    7. '1' → logprob: -6.089156150817871
    8. '"' → logprob: -6.714156150817871
    9. '(-' → logprob: -6.714156150817871
    10. ''s' → logprob: -7.089156150817871

Token 33: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0052432413212955
    2. ':[' → logprob: -5.505243301391602
    3. ':(' → logprob: -7.255243301391602
    4. ' :' → logprob: -7.755243301391602
    5. ' :(' → logprob: -11.880243301391602
    6. ':-' → logprob: -12.130243301391602
    7. '   ' → logprob: -12.255243301391602
    8. ':[
' → logprob: -12.755243301391602
    9. ':[[' → logprob: -12.880243301391602
    10. ':['' → logprob: -13.380243301391602

Token 34: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5775758028030396
    2. '(' → logprob: -1.8275758028030396
    3. ' [' → logprob: -1.8275758028030396
    4. ' (' → logprob: -2.45257568359375
    5. '{' → logprob: -4.45257568359375
    6. '[(' → logprob: -4.57757568359375
    7. ' {' → logprob: -6.07757568359375
    8. ' ' → logprob: -6.45257568359375
    9. '[]' → logprob: -6.57757568359375
    10. '1' → logprob: -6.70257568359375

Token 35: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.019683610647916794
    2. ' ' → logprob: -4.144683837890625
    3. '4' → logprob: -6.019683837890625
    4. '3' → logprob: -7.269683837890625
    5. '7' → logprob: -8.519683837890625
    6. '(' → logprob: -8.894683837890625
    7. '[' → logprob: -9.269683837890625
    8. ' [' → logprob: -10.769683837890625
    9. '   ' → logprob: -11.019683837890625
    10. ' (' → logprob: -11.144683837890625

Token 36: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016555405454710126
    2. '],' → logprob: -7.251655578613281
    3. ']' → logprob: -7.376655578613281
    4. ' ,' → logprob: -8.626655578613281
    5. '3' → logprob: -9.876655578613281
    6. '2' → logprob: -10.501655578613281
    7. ' ' → logprob: -11.126655578613281
    8. '4' → logprob: -11.501655578613281
    9. '6' → logprob: -11.876655578613281
    10. ' ],' → logprob: -11.876655578613281

Token 37: '4' (ID: 19)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.10111341625452042
    2. ' ' → logprob: -2.9761133193969727
    3. '4' → logprob: -3.1011133193969727
    4. '   ' → logprob: -9.351113319396973
    5. '```' → logprob: -10.601113319396973
    6. '    ' → logprob: -11.351113319396973
    7. '	' → logprob: -11.601113319396973
    8. '       ' → logprob: -11.726113319396973
    9. '        ' → logprob: -11.851113319396973
    10. '  ' → logprob: -12.101113319396973

Token 38: '],
' (ID: 2274)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.494000643491745
    2. ',' → logprob: -0.9940006732940674
    3. ']' → logprob: -3.9940006732940674
    4. ' ],' → logprob: -7.119000434875488
    5. '],
' → logprob: -9.119000434875488
    6. '   ' → logprob: -9.369000434875488
    7. ']},' → logprob: -9.744000434875488
    8. ' ,' → logprob: -9.994000434875488
    9. '],

' → logprob: -10.119000434875488
    10. ' ' → logprob: -10.119000434875488

Token 39: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.042720187455415726
    2. '   ' → logprob: -4.042720317840576
    3. '2' → logprob: -4.292720317840576
    4. '    ' → logprob: -5.417720317840576
    5. '3' → logprob: -5.542720317840576
    6. '5' → logprob: -6.417720317840576
    7. '1' → logprob: -8.167719841003418
    8. '7' → logprob: -8.292719841003418
    9. '  ' → logprob: -10.417719841003418
    10. '4' → logprob: -11.167719841003418

Token 40: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01256498508155346
    2. '4' → logprob: -5.1375651359558105
    3. '   ' → logprob: -5.2625651359558105
    4. '2' → logprob: -6.8875651359558105
    5. '3' → logprob: -8.387564659118652
    6. '5' → logprob: -9.012564659118652
    7. '    ' → logprob: -10.012564659118652
    8. '1' → logprob: -11.762564659118652
    9. '  ' → logprob: -12.637564659118652
    10. '}' → logprob: -13.137564659118652

Token 41: '1' (ID: 16)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12196127325296402
    2. '5' → logprob: -2.3719613552093506
    3. '2' → logprob: -4.2469611167907715
    4. '3' → logprob: -5.4969611167907715
    5. '7' → logprob: -7.1219611167907715
    6. '0' → logprob: -7.7469611167907715
    7. '    ' → logprob: -7.7469611167907715
    8. '}' → logprob: -7.8719611167907715
    9. ' }' → logprob: -8.12196159362793
    10. ',' → logprob: -8.24696159362793

Token 42: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -2.9875325708417222e-05
    2. ' :' → logprob: -10.875029563903809
    3. ',' → logprob: -12.250029563903809
    4. ':[' → logprob: -12.250029563903809
    5. ']:' → logprob: -15.000029563903809
    6. ':[
' → logprob: -15.500029563903809
    7. ':['' → logprob: -15.750029563903809
    8. '):' → logprob: -16.000030517578125
    9. '>:' → logprob: -16.125030517578125
    10. ',:' → logprob: -16.500030517578125

Token 43: ' [' (ID: 723)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.021533619612455368
    2. '[' → logprob: -3.896533727645874
    3. ' ' → logprob: -7.146533489227295
    4. ' [' → logprob: -8.521533966064453
    5. '2' → logprob: -13.771533966064453
    6. '(' → logprob: -13.771533966064453
    7. '{' → logprob: -13.896533966064453
    8. '   ' → logprob: -14.146533966064453
    9. '"' → logprob: -15.834033966064453
    10. '	' → logprob: -16.459033966064453

Token 44: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000836312014143914
    2. ' ' → logprob: -7.125836372375488
    3. '2' → logprob: -10.375836372375488
    4. '4' → logprob: -15.500836372375488
    5. '   ' → logprob: -15.750836372375488
    6. '  ' → logprob: -17.313335418701172
    7. '"' → logprob: -17.375835418701172
    8. '     ' → logprob: -17.563335418701172
    9. '    ' → logprob: -17.563335418701172
    10. '۰' → logprob: -17.625835418701172

Token 45: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001214237418025732
    2. '2' → logprob: -9.375121116638184
    3. ' ,' → logprob: -10.250121116638184
    4. ' ' → logprob: -14.125121116638184
    5. '`,' → logprob: -15.625121116638184
    6. ',
' → logprob: -16.0001220703125
    7. ',,' → logprob: -17.0001220703125
    8. '',' → logprob: -17.2501220703125
    9. '```' → logprob: -17.2501220703125
    10. ',",' → logprob: -18.1251220703125

Token 46: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.65101717156358e-05
    2. ' ' → logprob: -9.250096321105957
    3. '```' → logprob: -16.000097274780273
    4. '   ' → logprob: -16.375097274780273
    5. '-' → logprob: -17.625097274780273
    6. '    ' → logprob: -18.125097274780273
    7. '２' → logprob: -18.125097274780273
    8. '  ' → logprob: -18.625097274780273
    9. '``' → logprob: -18.625097274780273
    10. '0' → logprob: -18.812597274780273

Token 47: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3425219549390022e-05
    2. ' ,' → logprob: -12.00001335144043
    3. '3' → logprob: -12.25001335144043
    4. '],' → logprob: -13.50001335144043
    5. ' ' → logprob: -15.00001335144043
    6. ']' → logprob: -15.25001335144043
    7. '4' → logprob: -15.62501335144043
    8. '2' → logprob: -16.75001335144043
    9. '   ' → logprob: -16.87501335144043
    10. ',

' → logprob: -17.00001335144043

Token 48: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0065483939833939075
    2. '3' → logprob: -5.7565484046936035
    3. ' ' → logprob: -5.7565484046936035
    4. '4' → logprob: -8.506547927856445
    5. '7' → logprob: -15.131547927856445
    6. '1' → logprob: -15.756547927856445
    7. '```' → logprob: -16.131547927856445
    8. '   ' → logprob: -16.381547927856445
    9. ']' → logprob: -16.631547927856445
    10. '-' → logprob: -17.006547927856445

Token 49: '],
' (ID: 2274)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.5828443169593811
    2. ',' → logprob: -0.8328443169593811
    3. '],
' → logprob: -5.082844257354736
    4. ']' → logprob: -8.207844734191895
    5. '],

' → logprob: -8.582844734191895
    6. '3' → logprob: -9.582844734191895
    7. '],
' → logprob: -9.707844734191895
    8. '4' → logprob: -10.832844734191895
    9. '   ' → logprob: -10.957844734191895
    10. ' ' → logprob: -11.207844734191895

Token 50: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6787521243095398
    2. '3' → logprob: -1.1787521839141846
    3. '2' → logprob: -1.9287521839141846
    4. '   ' → logprob: -3.3037521839141846
    5. '7' → logprob: -6.1787519454956055
    6. '    ' → logprob: -7.4287519454956055
    7. '  ' → logprob: -8.303751945495605
    8. '6' → logprob: -9.678751945495605
    9. '4' → logprob: -11.553751945495605
    10. '}' → logprob: -11.928751945495605

Token 51: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.7252698540687561
    2. ' ' → logprob: -0.7252698540687561
    3. '3' → logprob: -3.6002697944641113
    4. '4' → logprob: -5.725269794464111
    5. '   ' → logprob: -7.225269794464111
    6. '    ' → logprob: -8.47527027130127
    7. '  ' → logprob: -9.85027027130127
    8. '6' → logprob: -10.72527027130127
    9. '7' → logprob: -11.22527027130127
    10. '```' → logprob: -12.72527027130127

Token 52: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.01869824528694153
    2. ' ' → logprob: -4.018698215484619
    3. '   ' → logprob: -7.643698215484619
    4. '    ' → logprob: -10.268698692321777
    5. '  ' → logprob: -10.768698692321777
    6. '3' → logprob: -11.643698692321777
    7. '```' → logprob: -13.393698692321777
    8. '     ' → logprob: -14.393698692321777
    9. '6' → logprob: -14.518698692321777
    10. '      ' → logprob: -14.643698692321777

Token 53: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.214019307051785e-05
    2. ' :' → logprob: -10.375032424926758
    3. ',' → logprob: -15.125032424926758
    4. '>:' → logprob: -16.125032424926758
    5. ':[' → logprob: -16.250032424926758
    6. ',:' → logprob: -16.625032424926758
    7. '   ' → logprob: -16.750032424926758
    8. '):' → logprob: -17.000032424926758
    9. ':[
' → logprob: -17.250032424926758
    10. ' ' → logprob: -17.375032424926758

Token 54: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.11296414583921432
    2. ' [' → logprob: -2.237964153289795
    3. '1' → logprob: -9.237963676452637
    4. ' ' → logprob: -10.362963676452637
    5. '3' → logprob: -11.612963676452637
    6. '0' → logprob: -13.362963676452637
    7. '   ' → logprob: -14.112963676452637
    8. '{' → logprob: -15.112963676452637
    9. ' ' → logprob: -15.362963676452637
    10. '[]' → logprob: -16.237964630126953

Token 55: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2948405128554441e-05
    2. ' ' → logprob: -11.50001335144043
    3. '3' → logprob: -13.25001335144043
    4. '   ' → logprob: -14.00001335144043
    5. '```' → logprob: -16.75001335144043
    6. '  ' → logprob: -17.75001335144043
    7. '0' → logprob: -18.06251335144043
    8. '１' → logprob: -18.56251335144043
    9. '۱' → logprob: -18.75001335144043
    10. '``' → logprob: -19.00001335144043

Token 56: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003914695407729596
    2. '3' → logprob: -8.000391006469727
    3. ' ,' → logprob: -9.875391006469727
    4. ' ' → logprob: -12.375391006469727
    5. '   ' → logprob: -15.500391006469727
    6. '4' → logprob: -16.875391006469727
    7. '```' → logprob: -16.875391006469727
    8. '0' → logprob: -17.500391006469727
    9. ',...' → logprob: -17.500391006469727
    10. '`,' → logprob: -17.625391006469727

Token 57: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.004683834034949541
    2. ' ' → logprob: -5.379683971405029
    3. '6' → logprob: -9.754683494567871
    4. '5' → logprob: -12.129683494567871
    5. '   ' → logprob: -16.129684448242188
    6. '  ' → logprob: -17.129684448242188
    7. '```' → logprob: -17.754684448242188
    8. '３' → logprob: -18.004684448242188
    9. '4' → logprob: -18.192184448242188
    10. '۳' → logprob: -18.317184448242188

Token 58: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001322639436693862
    2. ' ,' → logprob: -9.12513256072998
    3. '],' → logprob: -12.25013256072998
    4. ']' → logprob: -12.25013256072998
    5. '4' → logprob: -12.37513256072998
    6. ' ' → logprob: -12.87513256072998
    7. '3' → logprob: -13.00013256072998
    8. '7' → logprob: -13.75013256072998
    9. '6' → logprob: -14.00013256072998
    10. '5' → logprob: -14.12513256072998

Token 59: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.0001427538663847372
    2. ' ' → logprob: -8.875143051147461
    3. '   ' → logprob: -13.750143051147461
    4. '```' → logprob: -14.500143051147461
    5. '``' → logprob: -15.125143051147461
    6. '  ' → logprob: -15.250143051147461
    7. '' → logprob: -15.500143051147461
    8. '۶' → logprob: -15.562643051147461
    9. '    ' → logprob: -16.56264305114746
    10. '	' → logprob: -16.68764305114746

Token 60: '],
' (ID: 2274)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.026660079136490822
    2. ',' → logprob: -3.6516599655151367
    3. ']' → logprob: -8.651659965515137
    4. ' ],' → logprob: -9.401659965515137
    5. '],
' → logprob: -10.526659965515137
    6. '   ' → logprob: -10.651659965515137
    7. '},' → logprob: -10.776659965515137
    8. ' ' → logprob: -11.901659965515137
    9. '],

' → logprob: -12.151659965515137
    10. '7' → logprob: -12.401659965515137

Token 61: '   ' (ID: 271)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.03212687373161316
    2. '   ' → logprob: -4.0321269035339355
    3. ' ' → logprob: -4.2821269035339355
    4. '  ' → logprob: -10.407126426696777
    5. '7' → logprob: -10.532126426696777
    6. '    ' → logprob: -12.032126426696777
    7. '4' → logprob: -13.657126426696777
    8. '```' → logprob: -13.782126426696777
    9. '       ' → logprob: -15.157126426696777
    10. '     ' → logprob: -15.157126426696777

Token 62: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.07108557969331741
    2. ' ' → logprob: -2.8210856914520264
    3. '5' → logprob: -4.946085453033447
    4. '7' → logprob: -6.321085453033447
    5. '4' → logprob: -9.446085929870605
    6. '   ' → logprob: -9.571085929870605
    7. '  ' → logprob: -11.571085929870605
    8. '```' → logprob: -12.571085929870605
    9. '    ' → logprob: -13.383585929870605
    10. '     ' → logprob: -14.071085929870605

Token 63: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.10077881813049316
    2. ' ' → logprob: -2.350778818130493
    3. '   ' → logprob: -7.600778579711914
    4. '  ' → logprob: -10.225778579711914
    5. '7' → logprob: -10.975778579711914
    6. '    ' → logprob: -11.350778579711914
    7. ']' → logprob: -13.600778579711914
    8. '     ' → logprob: -13.600778579711914
    9. '5' → logprob: -13.850778579711914
    10. '4' → logprob: -13.975778579711914

Token 64: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -9.610702363715973e-06
    2. ' :' → logprob: -11.875009536743164
    3. ':[' → logprob: -12.875009536743164
    4. ']:' → logprob: -18.250009536743164
    5. '   ' → logprob: -18.875009536743164
    6. ':]' → logprob: -19.000009536743164
    7. ':[
' → logprob: -19.250009536743164
    8. '[' → logprob: -19.375009536743164
    9. ':['' → logprob: -19.500009536743164
    10. ',' → logprob: -19.625009536743164

Token 65: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0002016331272898242
    2. ' [' → logprob: -8.875201225280762
    3. '7' → logprob: -10.375201225280762
    4. ' ' → logprob: -11.250201225280762
    5. '5' → logprob: -11.750201225280762
    6. '2' → logprob: -11.875201225280762
    7. '   ' → logprob: -13.875201225280762
    8. '[
' → logprob: -15.000201225280762
    9. '(' → logprob: -15.375201225280762
    10. '4' → logprob: -15.625201225280762

Token 66: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. '7' → logprob: -16.125
    3. '```' → logprob: -17.5
    4. '   ' → logprob: -17.75
    5. '``' → logprob: -18.0
    6. ' ' → logprob: -18.0
    7. '	' → logprob: -18.375
    8. '２' → logprob: -18.75
    9. '[' → logprob: -19.0
    10. '۲' → logprob: -19.0

Token 67: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.771655115589965e-05
    2. '7' → logprob: -11.375018119812012
    3. ' ,' → logprob: -12.500018119812012
    4. ',[' → logprob: -13.125018119812012
    5. ' ' → logprob: -15.625018119812012
    6. '4' → logprob: -15.750018119812012
    7. '5' → logprob: -16.000017166137695
    8. '[' → logprob: -17.750017166137695
    9. ':' → logprob: -17.875017166137695
    10. '3' → logprob: -18.250017166137695

Token 68: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.001973838312551379
    2. ' ' → logprob: -6.251973628997803
    3. '5' → logprob: -10.251974105834961
    4. '   ' → logprob: -12.376974105834961
    5. '  ' → logprob: -12.876974105834961
    6. '```' → logprob: -13.626974105834961
    7. '[' → logprob: -14.376974105834961
    8. '4' → logprob: -14.751974105834961
    9. '``' → logprob: -15.001974105834961
    10. '	' → logprob: -15.689474105834961

Token 69: '],
' (ID: 2274)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '],' → logprob: -0.6116248965263367
    2. ']' → logprob: -1.3616249561309814
    3. ',' → logprob: -1.6116249561309814
    4. '   ' → logprob: -7.486624717712402
    5. ']},' → logprob: -8.236624717712402
    6. ']}' → logprob: -8.361624717712402
    7. '},' → logprob: -8.611624717712402
    8. ' ],' → logprob: -9.111624717712402
    9. '),' → logprob: -9.111624717712402
    10. ' ]' → logprob: -9.736624717712402

Token 70: '   ' (ID: 271)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.11208648979663849
    2. '}' → logprob: -2.362086534500122
    3. ' ' → logprob: -4.737086296081543
    4. '   ' → logprob: -5.862086296081543
    5. '5' → logprob: -9.612086296081543
    6. ' }' → logprob: -9.987086296081543
    7. '7' → logprob: -10.237086296081543
    8. '  ' → logprob: -10.862086296081543
    9. '}

' → logprob: -11.362086296081543
    10. '3' → logprob: -12.112086296081543

Token 71: ' ' (ID: 220)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.024050332605838776
    2. '4' → logprob: -3.774050235748291
    3. ' }' → logprob: -8.39905071258545
    4. '}

' → logprob: -8.77405071258545
    5. '5' → logprob: -8.89905071258545
    6. '   ' → logprob: -9.02405071258545
    7. '7' → logprob: -9.39905071258545
    8. ' ' → logprob: -9.89905071258545
    9. '},' → logprob: -11.52405071258545
    10. '3' → logprob: -11.89905071258545

Token 72: '4' (ID: 19)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.16977407038211823
    2. '4' → logprob: -1.919774055480957
    3. ' ' → logprob: -5.169774055480957
    4. '   ' → logprob: -6.544774055480957
    5. '7' → logprob: -7.044774055480957
    6. '},' → logprob: -7.169774055480957
    7. ' }' → logprob: -7.669774055480957
    8. '5' → logprob: -8.544774055480957
    9. '  ' → logprob: -10.294774055480957
    10. '    ' → logprob: -10.919774055480957

Token 73: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.070975071750581e-05
    2. ':[' → logprob: -11.000030517578125
    3. ' :' → logprob: -11.500030517578125
    4. ']:' → logprob: -12.750030517578125
    5. ':]' → logprob: -14.375030517578125
    6. ']' → logprob: -15.375030517578125
    7. ':[
' → logprob: -17.000030517578125
    8. ',' → logprob: -17.375030517578125
    9. '[' → logprob: -18.000030517578125
    10. ':['' → logprob: -18.000030517578125

Token 74: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0007255369564518332
    2. ' [' → logprob: -7.250725746154785
    3. '0' → logprob: -11.250725746154785
    4. ' ' → logprob: -13.750725746154785
    5. '   ' → logprob: -13.875725746154785
    6. '	' → logprob: -16.00072479248047
    7. '1' → logprob: -16.37572479248047
    8. '8' → logprob: -16.62572479248047
    9. '7' → logprob: -16.75072479248047
    10. ' ' → logprob: -16.87572479248047

Token 75: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013458272442221642
    2. ' ' → logprob: -6.626345634460449
    3. '5' → logprob: -11.12634563446045
    4. '   ' → logprob: -12.50134563446045
    5. '1' → logprob: -14.25134563446045
    6. '  ' → logprob: -15.87634563446045
    7. ',' → logprob: -16.001346588134766
    8. '```' → logprob: -16.001346588134766
    9. '０' → logprob: -16.001346588134766
    10. '۰' → logprob: -16.251346588134766

Token 76: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.4849443838757e-06
    2. ' ,' → logprob: -13.000004768371582
    3. '5' → logprob: -14.125004768371582
    4. ',
' → logprob: -14.500004768371582
    5. '7' → logprob: -15.625004768371582
    6. ' ' → logprob: -15.625004768371582
    7. '   ' → logprob: -15.750004768371582
    8. '4' → logprob: -16.375003814697266
    9. '6' → logprob: -16.375003814697266
    10. '1' → logprob: -16.625003814697266

Token 77: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -1.9146995327901095e-05
    2. ' ' → logprob: -10.875019073486328
    3. '1' → logprob: -16.625019073486328
    4. '５' → logprob: -17.875019073486328
    5. ' five' → logprob: -19.125019073486328
    6. '۵' → logprob: -19.250019073486328
    7. '   ' → logprob: -19.875019073486328
    8. '```' → logprob: -20.000019073486328
    9. '৫' → logprob: -21.125019073486328
    10. ' cinco' → logprob: -21.250019073486328

Token 78: '],
' (ID: 2274)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -7.076218025758862e-05
    2. ']' → logprob: -9.750070571899414
    3. '],' → logprob: -12.000070571899414
    4. '   ' → logprob: -12.625070571899414
    5. ',

' → logprob: -14.125070571899414
    6. ',
' → logprob: -14.250070571899414
    7. ' ,' → logprob: -14.875070571899414
    8. ' ' → logprob: -15.125070571899414
    9. '‌,' → logprob: -15.875070571899414
    10. '4' → logprob: -16.375070571899414

Token 79: '   ' (ID: 271)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.2843776345252991
    2. '   ' → logprob: -1.4093775749206543
    3. ' ' → logprob: -5.784377574920654
    4. '  ' → logprob: -9.409378051757812
    5. '	' → logprob: -10.409378051757812
    6. '    ' → logprob: -11.159378051757812
    7. '       ' → logprob: -12.034378051757812
    8. '4' → logprob: -12.159378051757812
    9. '```' → logprob: -12.284378051757812
    10. ''' → logprob: -14.409378051757812

Token 80: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.01569751836359501
    2. '   ' → logprob: -4.390697479248047
    3. ' ' → logprob: -5.765697479248047
    4. '  ' → logprob: -10.265697479248047
    5. '4' → logprob: -12.515697479248047
    6. '	' → logprob: -12.765697479248047
    7. '    ' → logprob: -12.765697479248047
    8. '       ' → logprob: -12.890697479248047
    9. '```' → logprob: -13.765697479248047
    10. ''' → logprob: -14.890697479248047

Token 81: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.001372849685139954
    2. ' ' → logprob: -7.126372814178467
    3. '   ' → logprob: -7.501372814178467
    4. '  ' → logprob: -11.751373291015625
    5. '    ' → logprob: -13.501373291015625
    6. ')' → logprob: -13.501373291015625
    7. '       ' → logprob: -13.501373291015625
    8. '7' → logprob: -14.126373291015625
    9. '```' → logprob: -14.501373291015625
    10. '	' → logprob: -14.626373291015625

Token 82: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -9.078839502763003e-05
    2. ' :' → logprob: -9.500090599060059
    3. ':[' → logprob: -11.125090599060059
    4. '[' → logprob: -15.000090599060059
    5. ':[
' → logprob: -15.000090599060059
    6. ':['' → logprob: -16.125091552734375
    7. ':]' → logprob: -16.750091552734375
    8. '   ' → logprob: -16.750091552734375
    9. ']' → logprob: -17.000091552734375
    10. ' ' → logprob: -17.000091552734375

Token 83: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.25194355845451355
    2. ' [' → logprob: -1.501943588256836
    3. ' ' → logprob: -11.876943588256836
    4. '4' → logprob: -12.626943588256836
    5. '   ' → logprob: -14.126943588256836
    6. '	' → logprob: -14.251943588256836
    7. ' ' → logprob: -14.626943588256836
    8. '1' → logprob: -15.001943588256836
    9. '```' → logprob: -15.126943588256836
    10. '3' → logprob: -15.376943588256836

Token 84: '1' (ID: 16)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.003641407238319516
    2. '1' → logprob: -5.628641605377197
    3. ' ' → logprob: -10.128641128540039
    4. '   ' → logprob: -14.003641128540039
    5. '```' → logprob: -16.00364112854004
    6. '[' → logprob: -16.25364112854004
    7. '{' → logprob: -16.37864112854004
    8. ',' → logprob: -16.37864112854004
    9. '2' → logprob: -16.37864112854004
    10. ''' → logprob: -16.75364112854004

Token 85: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.0219828002154827e-05
    2. ' ,' → logprob: -11.125020027160645
    3. '4' → logprob: -12.625020027160645
    4. '6' → logprob: -13.250020027160645
    5. ' ' → logprob: -16.00002098083496
    6. '   ' → logprob: -16.12502098083496
    7. '2' → logprob: -16.62502098083496
    8. '`,' → logprob: -17.37502098083496
    9. '',' → logprob: -17.37502098083496
    10. '```' → logprob: -17.62502098083496

Token 86: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0008764470112510026
    2. ' ' → logprob: -7.625876426696777
    3. '6' → logprob: -7.875876426696777
    4. '2' → logprob: -11.750876426696777
    5. ''' → logprob: -15.375876426696777
    6. '   ' → logprob: -15.625876426696777
    7. ',' → logprob: -16.250877380371094
    8. ')' → logprob: -17.000877380371094
    9. '3' → logprob: -17.000877380371094
    10. '  ' → logprob: -17.125877380371094

Token 87: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.2246291337069124e-05
    2. ' ,' → logprob: -11.625021934509277
    3. '6' → logprob: -12.000021934509277
    4. '   ' → logprob: -12.875021934509277
    5. '7' → logprob: -13.125021934509277
    6. ',
' → logprob: -14.125021934509277
    7. ']' → logprob: -14.375021934509277
    8. ' ' → logprob: -14.500021934509277
    9. '3' → logprob: -15.375021934509277
    10. '2' → logprob: -16.000022888183594

Token 88: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -9.13388703338569e-06
    2. ' ' → logprob: -12.000009536743164
    3. '8' → logprob: -12.875009536743164
    4. '7' → logprob: -14.875009536743164
    5. '   ' → logprob: -17.375009536743164
    6. '６' → logprob: -18.250009536743164
    7. '۶' → logprob: -18.250009536743164
    8. '  ' → logprob: -19.250009536743164
    9. '' → logprob: -19.375009536743164
    10. ' six' → logprob: -20.000009536743164

Token 89: '],
' (ID: 2274)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00385719770565629
    2. ']' → logprob: -5.628857135772705
    3. '],' → logprob: -8.753857612609863
    4. '7' → logprob: -9.628857612609863
    5. '   ' → logprob: -10.878857612609863
    6. '}' → logprob: -12.628857612609863
    7. ' ' → logprob: -12.628857612609863
    8. '3' → logprob: -13.253857612609863
    9. '},' → logprob: -13.878857612609863
    10. '6' → logprob: -14.128857612609863

Token 90: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8365979194641113
    2. '6' → logprob: -1.2115979194641113
    3. ' ' → logprob: -1.7115979194641113
    4. '7' → logprob: -2.4615979194641113
    5. '       ' → logprob: -6.961597919464111
    6. '    ' → logprob: -6.961597919464111
    7. '```' → logprob: -7.461597919464111
    8. '  ' → logprob: -7.586597919464111
    9. ''' → logprob: -9.586597442626953
    10. '     ' → logprob: -10.086597442626953

Token 91: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.1182444840669632
    2. '7' → logprob: -2.8682444095611572
    3. ' ' → logprob: -3.4932444095611572
    4. '   ' → logprob: -3.7432444095611572
    5. '       ' → logprob: -8.493244171142578
    6. '    ' → logprob: -8.493244171142578
    7. '  ' → logprob: -9.243244171142578
    8. '     ' → logprob: -10.118244171142578
    9. '```' → logprob: -10.243244171142578
    10. ''' → logprob: -10.993244171142578

Token 92: '6' (ID: 21)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.022974062711000443
    2. '   ' → logprob: -4.522974014282227
    3. ' ' → logprob: -4.647974014282227
    4. '6' → logprob: -6.397974014282227
    5. '```' → logprob: -8.147974014282227
    6. '    ' → logprob: -8.647974014282227
    7. '       ' → logprob: -9.772974014282227
    8. '  ' → logprob: -10.147974014282227
    9. '     ' → logprob: -11.147974014282227
    10. '[' → logprob: -11.647974014282227

Token 93: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0011786778923124075
    2. ' :' → logprob: -6.751178741455078
    3. ':[' → logprob: -12.376178741455078
    4. '[' → logprob: -13.876178741455078
    5. '   ' → logprob: -14.001178741455078
    6. ' ' → logprob: -14.126178741455078
    7. ':[
' → logprob: -14.501178741455078
    8. ':['' → logprob: -15.751178741455078
    9. '6' → logprob: -16.251178741455078
    10. '>' → logprob: -16.376178741455078

Token 94: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03021959401667118
    2. ' [' → logprob: -3.530219554901123
    3. '5' → logprob: -7.905219554901123
    4. ' ' → logprob: -9.780220031738281
    5. '7' → logprob: -10.780220031738281
    6. '   ' → logprob: -11.905220031738281
    7. '6' → logprob: -12.280220031738281
    8. '3' → logprob: -12.655220031738281
    9. '2' → logprob: -13.280220031738281
    10. '{' → logprob: -13.905220031738281

Token 95: '2' (ID: 17)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.015152961947023869
    2. ' ' → logprob: -4.515152931213379
    3. '2' → logprob: -5.640152931213379
    4. '3' → logprob: -7.640152931213379
    5. '   ' → logprob: -10.265152931213379
    6. '4' → logprob: -11.140152931213379
    7. ',' → logprob: -12.390152931213379
    8. '  ' → logprob: -12.515152931213379
    9. ''' → logprob: -12.890152931213379
    10. '    ' → logprob: -13.140152931213379

Token 96: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015538577281404287
    2. ' ,' → logprob: -9.500155448913574
    3. '7' → logprob: -9.875155448913574
    4. '5' → logprob: -11.125155448913574
    5. ' ' → logprob: -12.250155448913574
    6. ',[' → logprob: -12.375155448913574
    7. '   ' → logprob: -12.875155448913574
    8. '6' → logprob: -14.000155448913574
    9. '[' → logprob: -15.000155448913574
    10. ',
' → logprob: -15.000155448913574

Token 97: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0013520221691578627
    2. ' ' → logprob: -6.751351833343506
    3. '3' → logprob: -9.251352310180664
    4. '7' → logprob: -9.376352310180664
    5. '```' → logprob: -15.501352310180664
    6. '  ' → logprob: -15.751352310180664
    7. '[' → logprob: -15.751352310180664
    8. '   ' → logprob: -16.063852310180664
    9. ' five' → logprob: -16.563852310180664
    10. '۵' → logprob: -16.626352310180664

Token 98: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.810037742368877e-05
    2. '7' → logprob: -10.250038146972656
    3. ' ,' → logprob: -13.000038146972656
    4. ' ' → logprob: -15.625038146972656
    5. ',
' → logprob: -16.375038146972656
    6. '   ' → logprob: -16.875038146972656
    7. '3' → logprob: -18.125038146972656
    8. '6' → logprob: -18.125038146972656
    9. ']' → logprob: -18.125038146972656
    10. '' → logprob: -19.250038146972656

Token 99: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.003252342576161027
    2. '3' → logprob: -6.2532525062561035
    3. ' ' → logprob: -6.6282525062561035
    4. '   ' → logprob: -15.878252029418945
    5. '  ' → logprob: -16.003252029418945
    6. '７' → logprob: -16.253252029418945
    7. '```' → logprob: -17.253252029418945
    8. '۷' → logprob: -17.378252029418945
    9. '[' → logprob: -17.565752029418945
    10. '(' → logprob: -17.753252029418945

Token 100: '],
' (ID: 2274)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.40861329436302185
    2. '],' → logprob: -1.4086133241653442
    3. ']' → logprob: -2.6586132049560547
    4. '   ' → logprob: -4.283613204956055
    5. '7' → logprob: -5.408613204956055
    6. '},' → logprob: -6.283613204956055
    7. '}' → logprob: -8.033613204956055
    8. ' ' → logprob: -8.783613204956055
    9. '],
' → logprob: -8.908613204956055
    10. '),' → logprob: -9.658613204956055

Token 101: '   ' (ID: 271)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.08687235414981842
    2. '   ' → logprob: -2.9618723392486572
    3. ' ' → logprob: -3.4618723392486572
    4. '  ' → logprob: -10.086872100830078
    5. '    ' → logprob: -10.336872100830078
    6. '	' → logprob: -10.961872100830078
    7. ' ' → logprob: -11.836872100830078
    8. '```' → logprob: -12.211872100830078
    9. '}' → logprob: -12.461872100830078
    10. '`' → logprob: -13.211872100830078

Token 102: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.04862619936466217
    2. ' ' → logprob: -3.048626184463501
    3. '   ' → logprob: -10.423625946044922
    4. '3' → logprob: -11.673625946044922
    5. '  ' → logprob: -15.048625946044922
    6. '(' → logprob: -16.298625946044922
    7. '```' → logprob: -16.673625946044922
    8. '{' → logprob: -16.798625946044922
    9. '    ' → logprob: -17.298625946044922
    10. '[' → logprob: -18.048625946044922

Token 103: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.030122090131044388
    2. ' ' → logprob: -4.15512228012085
    3. '3' → logprob: -4.28012228012085
    4. '   ' → logprob: -8.905121803283691
    5. '(' → logprob: -11.780121803283691
    6. '{' → logprob: -13.530121803283691
    7. '  ' → logprob: -13.780121803283691
    8. '```' → logprob: -14.280121803283691
    9. '[' → logprob: -14.405121803283691
    10. '    ' → logprob: -14.530121803283691

Token 104: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0087516784551553e-05
    2. ' :' → logprob: -12.00001049041748
    3. ':[' → logprob: -13.12501049041748
    4. ':]' → logprob: -14.00001049041748
    5. ']' → logprob: -14.75001049041748
    6. ']:' → logprob: -15.00001049041748
    7. '[' → logprob: -17.000009536743164
    8. ':['' → logprob: -17.000009536743164
    9. ':[
' → logprob: -17.500009536743164
    10. '   ' → logprob: -17.625009536743164

Token 105: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0005345634999684989
    2. ' [' → logprob: -8.000535011291504
    3. '3' → logprob: -9.125535011291504
    4. '{' → logprob: -9.875535011291504
    5. '   ' → logprob: -10.875535011291504
    6. '(' → logprob: -11.750535011291504
    7. ' ' → logprob: -12.000535011291504
    8. '6' → logprob: -13.250535011291504
    9. '[
' → logprob: -13.875535011291504
    10. '4' → logprob: -14.125535011291504

Token 106: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00020520923135336488
    2. ' ' → logprob: -8.500205039978027
    3. '  ' → logprob: -14.250205039978027
    4. '   ' → logprob: -14.625205039978027
    5. ')' → logprob: -15.500205039978027
    6. '6' → logprob: -15.875205039978027
    7. '３' → logprob: -16.250205993652344
    8. '۳' → logprob: -16.250205993652344
    9. '4' → logprob: -16.875205993652344
    10. '[' → logprob: -17.500205993652344

Token 107: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023359496146440506
    2. ']' → logprob: -3.773359537124634
    3. ' ]' → logprob: -10.148359298706055
    4. '],' → logprob: -10.898359298706055
    5. ']}' → logprob: -10.898359298706055
    6. '6' → logprob: -12.023359298706055
    7. ',)' → logprob: -12.023359298706055
    8. ')' → logprob: -12.148359298706055
    9. '7' → logprob: -12.273359298706055
    10. ' ,' → logprob: -12.273359298706055

Token 108: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.000627014203928411
    2. ' ' → logprob: -7.375627040863037
    3. '' → logprob: -16.000627517700195
    4. '  ' → logprob: -16.000627517700195
    5. '```' → logprob: -16.125627517700195
    6. '   ' → logprob: -16.250627517700195
    7. '5' → logprob: -17.000627517700195
    8. '<|end|>' → logprob: -17.125627517700195
    9. '۶' → logprob: -17.250627517700195
    10. '7' → logprob: -18.125627517700195

Token 109: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007063562050461769
    2. '}' → logprob: -5.007063388824463
    3. ')' → logprob: -9.007063865661621
    4. '],' → logprob: -9.132063865661621
    5. ']}' → logprob: -9.507063865661621
    6. ' ]' → logprob: -11.132063865661621
    7. ']
' → logprob: -11.632063865661621
    8. '   ' → logprob: -11.882063865661621
    9. ',' → logprob: -12.007063865661621
    10. ' }' → logprob: -13.132063865661621

Token 110: '}

' (ID: 943)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -2.1008713702030946e-06
    2. '}
' → logprob: -13.375001907348633
    3. ' }' → logprob: -15.625001907348633
    4. ',' → logprob: -15.750001907348633
    5. ')' → logprob: -15.875001907348633
    6. '}

' → logprob: -16.375001907348633
    7. ']' → logprob: -17.750001907348633
    8. '```' → logprob: -17.750001907348633
    9. '}`' → logprob: -18.875001907348633
    10. '},' → logprob: -19.375001907348633

Token 111: 'def' (ID: 1314)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.3529379367828369
    2. 'def' → logprob: -1.352937936782837
    3. 'state' → logprob: -3.852937936782837
    4. 'initial' → logprob: -4.727937698364258
    5. 'board' → logprob: -6.352937698364258
    6. 'visited' → logprob: -6.352937698364258
    7. 'path' → logprob: -6.602937698364258
    8. 'input' → logprob: -6.977937698364258
    9. '8' → logprob: -7.727937698364258
    10. ')' → logprob: -8.102937698364258

Token 112: ' bfs' (ID: 147571)
  Prédit: ' bfs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bfs' → logprob: -0.8504566550254822
    2. ' solve' → logprob: -0.9754566550254822
    3. 'b' → logprob: -1.850456714630127
    4. 'solve' → logprob: -3.350456714630127
    5. ' sliding' → logprob: -7.600456714630127
    6. ' find' → logprob: -7.725456714630127
    7. ' is' → logprob: -7.850456714630127
    8. ' valid' → logprob: -8.100456237792969
    9. ' breadth' → logprob: -8.350456237792969
    10. ' generate' → logprob: -8.725456237792969

Token 113: '(start' (ID: 20008)
  Prédit: '(state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(state' → logprob: -0.029943592846393585
    2. '(start' → logprob: -4.154943466186523
    3. '(' → logprob: -4.654943466186523
    4. '(queue' → logprob: -6.529943466186523
    5. '(board' → logprob: -6.904943466186523
    6. '(s' → logprob: -7.404943466186523
    7. '(p' → logprob: -7.779943466186523
    8. ' (' → logprob: -8.779943466186523
    9. '(path' → logprob: -8.779943466186523
    10. '(states' → logprob: -9.154943466186523

Token 114: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05304744467139244
    2. ',' → logprob: -3.4280474185943604
    3. ')' → logprob: -4.9280476570129395
    4. ',state' → logprob: -5.1780476570129395
    5. '(state' → logprob: -5.8030476570129395
    6. '):
' → logprob: -6.9280476570129395
    7. '_state' → logprob: -7.0530476570129395
    8. 'state' → logprob: -7.3030476570129395
    9. ' ):' → logprob: -8.303047180175781
    10. '_states' → logprob: -8.678047180175781

Token 115: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002860073291230947
    2. ' queue' → logprob: -8.750286102294922
    3. ' visited' → logprob: -9.875286102294922
    4. '	queue' → logprob: -10.250286102294922
    5. 'queue' → logprob: -11.625286102294922
    6. '    
' → logprob: -11.875286102294922
    7. '  ' → logprob: -12.125286102294922
    8. 'visited' → logprob: -12.250286102294922
    9. ' ' → logprob: -12.375286102294922
    10. '
' → logprob: -12.875286102294922

Token 116: ' start' (ID: 1604)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4961099624633789
    2. ' queue' → logprob: -1.246109962463379
    3. 'queue' → logprob: -2.371109962463379
    4. ' visited' → logprob: -5.246109962463379
    5. 'visited' → logprob: -5.621109962463379
    6. '    
' → logprob: -8.371109962463379
    7. '
' → logprob: -8.371109962463379
    8. ' q' → logprob: -8.496109962463379
    9. ' ' → logprob: -8.621109962463379
    10. 'q' → logprob: -8.746109962463379

Token 117: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7349599003791809
    2. '=' → logprob: -0.8599599003791809
    3. '_queue' → logprob: -2.859959840774536
    4. ')' → logprob: -4.234960079193115
    5. '_' → logprob: -4.984960079193115
    6. ':' → logprob: -5.109960079193115
    7. '_state' → logprob: -5.234960079193115
    8. '_states' → logprob: -5.984960079193115
    9. ',' → logprob: -6.359960079193115
    10. '):' → logprob: -7.734960079193115

Token 118: ' tuple' (ID: 31311)
  Prédit: ' tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tuple' → logprob: -0.6943804025650024
    2. 'tuple' → logprob: -0.6943804025650024
    3. '(tuple' → logprob: -7.194380283355713
    4. 'deque' → logprob: -8.069380760192871
    5. 'start' → logprob: -9.444380760192871
    6. '(' → logprob: -10.194380760192871
    7. ' deque' → logprob: -10.944380760192871
    8. ' (' → logprob: -11.069380760192871
    9. ' start' → logprob: -11.319380760192871
    10. '(start' → logprob: -13.569380760192871

Token 119: '(start' (ID: 20008)
  Prédit: '(start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.018471818417310715
    2. 'start' → logprob: -4.018471717834473
    3. '(' → logprob: -8.643471717834473
    4. '(map' → logprob: -9.518471717834473
    5. '(list' → logprob: -10.518471717834473
    6. '[start' → logprob: -11.268471717834473
    7. '(sorted' → logprob: -11.518471717834473
    8. '([' → logprob: -12.268471717834473
    9. 'list' → logprob: -12.768471717834473
    10. '(range' → logprob: -12.768471717834473

Token 120: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00012582694762386382
    2. ' )' → logprob: -9.000125885009766
    3. ')
' → logprob: -13.375125885009766
    4. '))' → logprob: -15.125125885009766
    5. '   ' → logprob: -16.000125885009766
    6. '),' → logprob: -16.125125885009766
    7. ')`' → logprob: -16.125125885009766
    8. '[' → logprob: -16.500125885009766
    9. ',)' → logprob: -16.625125885009766
    10. ')#' → logprob: -16.625125885009766

Token 121: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19127605855464935
    2. '
' → logprob: -1.8162760734558105
    3. 'visited' → logprob: -5.5662760734558105
    4. '    
' → logprob: -5.9412760734558105
    5. 'queue' → logprob: -6.8162760734558105
    6. ' if' → logprob: -7.0662760734558105
    7. ' visited' → logprob: -7.5662760734558105
    8. ',' → logprob: -7.9412760734558105
    9. '	queue' → logprob: -7.9412760734558105
    10. ')' → logprob: -7.9412760734558105

Token 122: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.671747088432312
    2. 'queue' → logprob: -1.046747088432312
    3. 'visited' → logprob: -2.0467472076416016
    4. ' if' → logprob: -5.546747207641602
    5. 'q' → logprob: -6.171747207641602
    6. '   ' → logprob: -6.671747207641602
    7. ' queue' → logprob: -6.921747207641602
    8. ' visited' → logprob: -8.046747207641602
    9. '    
' → logprob: -8.796747207641602
    10. '```' → logprob: -9.796747207641602

Token 123: ' start' (ID: 1604)
  Prédit: ' start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.693149983882904
    2. 'start' → logprob: -0.693149983882904
    3. '	start' → logprob: -13.69314956665039
    4. ' ' → logprob: -14.06814956665039
    5. '(start' → logprob: -15.69314956665039
    6. 'star' → logprob: -15.81814956665039
    7. '[start' → logprob: -16.06814956665039
    8. '
' → logprob: -16.56814956665039
    9. ' ' → logprob: -17.19314956665039
    10. 'goal' → logprob: -17.31814956665039

Token 124: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.11286085844039917
    2. '==' → logprob: -2.237860918045044
    3. ' ' → logprob: -10.987860679626465
    4. '=' → logprob: -12.112860679626465
    5. ' =' → logprob: -12.487860679626465
    6. ' ' → logprob: -12.862860679626465
    7. '==
' → logprob: -12.987860679626465
    8. '[' → logprob: -13.237860679626465
    9. ']==' → logprob: -13.737860679626465
    10. ')' → logprob: -13.987860679626465

Token 125: ' goal' (ID: 8583)
  Prédit: 'goal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'goal' → logprob: -0.31327024102211
    2. ' goal' → logprob: -1.3132702112197876
    3. '(goal' → logprob: -12.063270568847656
    4. 'go' → logprob: -13.063270568847656
    5. '_goal' → logprob: -15.063270568847656
    6. '.goal' → logprob: -15.688270568847656
    7. 'Goal' → logprob: -16.063270568847656
    8. ' ' → logprob: -16.188270568847656
    9. '   ' → logprob: -16.938270568847656
    10. '
' → logprob: -17.563270568847656

Token 126: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0169301088899374
    2. ':return' → logprob: -4.516930103302002
    3. ':
' → logprob: -5.141930103302002
    4. '   ' → logprob: -11.64193058013916
    5. ' :' → logprob: -11.76693058013916
    6. '):' → logprob: -14.39193058013916
    7. ' return' → logprob: -14.64193058013916
    8. ' :
' → logprob: -14.64193058013916
    9. ':
' → logprob: -16.016929626464844
    10. 'return' → logprob: -16.141929626464844

Token 127: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005661291070282459
    2. ':' → logprob: -6.130661487579346
    3. ' return' → logprob: -6.255661487579346
    4. ':return' → logprob: -7.130661487579346
    5. ':
' → logprob: -8.130661010742188
    6. 'return' → logprob: -8.505661010742188
    7. '
' → logprob: -9.255661010742188
    8. '   ' → logprob: -9.255661010742188
    9. '	return' → logprob: -11.380661010742188
    10. '	' → logprob: -11.380661010742188

Token 128: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.31578877568244934
    2. 'return' (adapté à ' return') → logprob: -1.315788745880127
    3. '   ' → logprob: -6.690788745880127
    4. ' 
' → logprob: -7.565788745880127
    5. '
' → logprob: -8.190789222717285
    6. '    
' → logprob: -8.815789222717285
    7. '0' → logprob: -8.940789222717285
    8. '	return' → logprob: -9.940789222717285
    9. ':return' → logprob: -9.940789222717285
    10. '    ' → logprob: -10.315789222717285

Token 129: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6038037538528442
    2. '[]' → logprob: -1.8538037538528442
    3. '[' → logprob: -1.9788037538528442
    4. '[start' → logprob: -2.1038036346435547
    5. ' ' → logprob: -3.9788036346435547
    6. 'start' → logprob: -4.603803634643555
    7. ' []' → logprob: -5.478803634643555
    8. ' [' → logprob: -6.228803634643555
    9. '[]
' → logprob: -6.978803634643555
    10. ' start' → logprob: -8.603803634643555

Token 130: '0' (ID: 15)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.4103950560092926
    2. '0' → logprob: -1.1603950262069702
    3. '[' → logprob: -4.03539514541626
    4. '""' → logprob: -5.41039514541626
    5. '[]
' → logprob: -8.035394668579102
    6. '''' → logprob: -8.660394668579102
    7. '[]}' → logprob: -8.785394668579102
    8. 'start' → logprob: -9.160394668579102
    9. '[]

' → logprob: -9.160394668579102
    10. '[start' → logprob: -9.910394668579102

Token 131: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09873061627149582
    2. '   ' → logprob: -3.2237305641174316
    3. '    
' → logprob: -3.3487305641174316
    4. '\n' → logprob: -4.348730564117432
    5. ' 
' → logprob: -6.723730564117432
    6. '   
' → logprob: -6.973730564117432
    7. 'newline' → logprob: -7.098730564117432
    8. '  
' → logprob: -7.348730564117432
    9. '
' → logprob: -7.598730564117432
    10. '' → logprob: -7.598730564117432

Token 132: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8560241460800171
    2. '
' → logprob: -0.9810241460800171
    3. '    
' → logprob: -1.981024146080017
    4. '\n' → logprob: -3.1060242652893066
    5. ' 
' → logprob: -4.981024265289307
    6. '   
' → logprob: -5.981024265289307
    7. 'n' → logprob: -6.356024265289307
    8. '  
' → logprob: -6.356024265289307
    9. 'newline' → logprob: -6.731024265289307
    10. ' return' → logprob: -7.481024265289307

Token 133: ' visited' (ID: 18416)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.34762299060821533
    2. 'visited' (adapté à ' visited') → logprob: -1.5976229906082153
    3. '   ' → logprob: -2.722622871398926
    4. ' queue' → logprob: -3.972622871398926
    5. ' visited' → logprob: -5.972622871398926
    6. '    
' → logprob: -5.972622871398926
    7. 'q' → logprob: -6.722622871398926
    8. '
' → logprob: -8.347622871398926
    9. '```' → logprob: -10.222622871398926
    10. ' 
' → logprob: -10.472622871398926

Token 134: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014170442707836628
    2. '=' → logprob: -4.2641706466674805
    3. '=set' → logprob: -12.26417064666748
    4. '.add' → logprob: -13.26417064666748
    5. ' ' → logprob: -15.01417064666748
    6. 'add' → logprob: -17.139169692993164
    7. ',' → logprob: -17.264169692993164
    8. ')' → logprob: -17.889169692993164
    9. ' ={' → logprob: -17.889169692993164
    10. '＝' → logprob: -18.764169692993164

Token 135: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.5188090205192566
    2. '{' → logprob: -1.0188090801239014
    3. ' set' → logprob: -3.5188090801239014
    4. ' {' → logprob: -4.268808841705322
    5. 'deque' → logprob: -9.14380931854248
    6. '	set' → logprob: -13.26880931854248
    7. '=set' → logprob: -13.26880931854248
    8. ' deque' → logprob: -14.14380931854248
    9. '(set' → logprob: -14.64380931854248
    10. '   ' → logprob: -15.01880931854248

Token 136: '([' (ID: 5194)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.015619481913745403
    2. '([' → logprob: -4.390619277954102
    3. '(start' → logprob: -6.515619277954102
    4. '()
' → logprob: -6.515619277954102
    5. '(' → logprob: -9.265619277954102
    6. '()

' → logprob: -11.140619277954102
    7. '([(' → logprob: -11.265619277954102
    8. '({' → logprob: -12.015619277954102
    9. '{' → logprob: -12.140619277954102
    10. '()
' → logprob: -12.515619277954102

Token 137: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.00029637437546625733
    2. ' start' → logprob: -8.125296592712402
    3. '(start' → logprob: -15.125296592712402
    4. '[start' → logprob: -17.250295639038086
    5. '   ' → logprob: -17.625295639038086
    6. '	start' → logprob: -18.375295639038086
    7. ')' → logprob: -18.750295639038086
    8. ' ' → logprob: -19.375295639038086
    9. 'tuple' → logprob: -19.375295639038086
    10. '=start' → logprob: -20.125295639038086

Token 138: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.00796373188495636
    2. ')' → logprob: -5.50796365737915
    3. '])
' → logprob: -5.63296365737915
    4. ' ])' → logprob: -8.882964134216309
    5. ')
' → logprob: -9.007964134216309
    6. '   ' → logprob: -11.507964134216309
    7. ',' → logprob: -11.757964134216309
    8. ')])' → logprob: -12.007964134216309
    9. ' )' → logprob: -12.132964134216309
    10. '))' → logprob: -12.632964134216309

Token 139: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.033315639942884445
    2. 'queue' → logprob: -3.783315658569336
    3. ' queue' → logprob: -4.658315658569336
    4. '
' → logprob: -7.783315658569336
    5. '```' → logprob: -10.033315658569336
    6. '	queue' → logprob: -10.283315658569336
    7. '    
' → logprob: -10.658315658569336
    8. 'q' → logprob: -12.283315658569336
    9. '    ' → logprob: -12.658315658569336
    10. '  ' → logprob: -12.908315658569336

Token 140: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -0.10236439108848572
    2. ' queue' → logprob: -2.3523643016815186
    3. 'q' → logprob: -6.852364540100098
    4. '   ' → logprob: -6.977364540100098
    5. '```' → logprob: -9.602364540100098
    6. '
' → logprob: -10.352364540100098
    7. 'deque' → logprob: -10.352364540100098
    8. ' q' → logprob: -11.227364540100098
    9. 'que' → logprob: -11.352364540100098
    10. 'dq' → logprob: -13.352364540100098

Token 141: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.062002088874578476
    2. '=' → logprob: -2.812002182006836
    3. '.append' → logprob: -10.437002182006836
    4. ')' → logprob: -13.687002182006836
    5. '<|end|>' → logprob: -13.937002182006836
    6. '.' → logprob: -14.062002182006836
    7. '.dequeue' → logprob: -14.937002182006836
    8. '(queue' → logprob: -15.062002182006836
    9. '.enqueue' → logprob: -15.437002182006836
    10. '.extend' → logprob: -15.437002182006836

Token 142: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.5759420394897461
    2. ' deque' → logprob: -0.8259420394897461
    3. 'Deque' → logprob: -13.825942039489746
    4. '   ' → logprob: -14.075942039489746
    5. 'de' → logprob: -14.700942039489746
    6. '```' → logprob: -16.075942993164062
    7. '	de' → logprob: -16.575942993164062
    8. '(de' → logprob: -16.575942993164062
    9. '[(' → logprob: -17.075942993164062
    10. ' ' → logprob: -17.075942993164062

Token 143: '()
' (ID: 1234)
  Prédit: '([('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '([(' → logprob: -0.06224394589662552
    2. '([' → logprob: -2.812243938446045
    3. '()' → logprob: -8.812244415283203
    4. '[(' → logprob: -9.562244415283203
    5. '(' → logprob: -10.187244415283203
    6. '([
' → logprob: -11.312244415283203
    7. '([{' → logprob: -13.062244415283203
    8. '([[' → logprob: -13.312244415283203
    9. '((' → logprob: -13.812244415283203
    10. '(start' → logprob: -14.312244415283203

Token 144: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6333417296409607
    2. 'queue' → logprob: -1.3833417892456055
    3. '(queue' → logprob: -2.2583417892456055
    4. ' queue' → logprob: -2.3833417892456055
    5. '(' → logprob: -4.6333417892456055
    6. ' (' → logprob: -5.3833417892456055
    7. '[(' → logprob: -5.5083417892456055
    8. '[' → logprob: -6.6333417892456055
    9. ' [(' → logprob: -7.5083417892456055
    10. '.append' → logprob: -8.258341789245605

Token 145: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -0.0382252112030983
    2. ' queue' → logprob: -3.2882251739501953
    3. '   ' → logprob: -8.913225173950195
    4. '(queue' → logprob: -10.163225173950195
    5. '(' → logprob: -11.913225173950195
    6. '	queue' → logprob: -13.538225173950195
    7. ' (' → logprob: -14.038225173950195
    8. '
' → logprob: -14.538225173950195
    9. '0' → logprob: -15.288225173950195
    10. ' ' → logprob: -15.663225173950195

Token 146: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00017195509281009436
    2. '.extend' → logprob: -9.375171661376953
    3. '.' → logprob: -9.875171661376953
    4. '.enqueue' → logprob: -10.500171661376953
    5. '.put' → logprob: -12.500171661376953
    6. '.push' → logprob: -13.625171661376953
    7. '.p' → logprob: -13.875171661376953
    8. '.add' → logprob: -14.625171661376953
    9. '.app' → logprob: -15.000171661376953
    10. ').' → logprob: -15.250171661376953

Token 147: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0026849217247217894
    2. '(' → logprob: -6.002685070037842
    3. '(start' → logprob: -8.502684593200684
    4. ' ((' → logprob: -13.002684593200684
    5. ' (' → logprob: -13.127684593200684
    6. '(((' → logprob: -13.877684593200684
    7. '[(' → logprob: -15.377684593200684
    8. '(('' → logprob: -15.627684593200684
    9. '([(' → logprob: -16.002685546875
    10. '```' → logprob: -16.377685546875

Token 148: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.00037967207026667893
    2. ' start' → logprob: -8.00037956237793
    3. '0' → logprob: -10.12537956237793
    4. '(start' → logprob: -12.87537956237793
    5. '[start' → logprob: -14.25037956237793
    6. ',start' → logprob: -14.50037956237793
    7. ' ' → logprob: -16.37537956237793
    8. '   ' → logprob: -16.75037956237793
    9. ')' → logprob: -17.00037956237793
    10. '	start' → logprob: -17.12537956237793

Token 149: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.9160102712921798e-05
    2. ' ,' → logprob: -11.125029563903809
    3. '0' → logprob: -11.250029563903809
    4. ',
' → logprob: -13.875029563903809
    5. '),' → logprob: -16.625028610229492
    6. '
' → logprob: -16.625028610229492
    7. ')' → logprob: -16.750028610229492
    8. '‌,' → logprob: -17.000028610229492
    9. '<|end|>' → logprob: -17.500028610229492
    10. ' ' → logprob: -17.625028610229492

Token 150: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010328111238777637
    2. ' ' → logprob: -6.876032829284668
    3. ')' → logprob: -17.37603187561035
    4. '   ' → logprob: -17.87603187561035
    5. '1' → logprob: -18.00103187561035
    6. ' ' → logprob: -18.50103187561035
    7. '۰' → logprob: -19.12603187561035
    8. ',' → logprob: -19.25103187561035
    9. '  ' → logprob: -19.81353187561035
    10. '  
' → logprob: -19.87603187561035

Token 151: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.002191779436543584
    2. ')' → logprob: -6.127191543579102
    3. ')))' → logprob: -12.627191543579102
    4. '))
' → logprob: -13.252191543579102
    5. ' ))' → logprob: -13.627191543579102
    6. '),' → logprob: -15.502191543579102
    7. '));' → logprob: -16.6271915435791
    8. '))

' → logprob: -16.7521915435791
    9. ',' → logprob: -16.8771915435791
    10. ')
' → logprob: -17.2521915435791

Token 152: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16321676969528198
    2. '
' → logprob: -2.6632168292999268
    3. '    
' → logprob: -3.2882168292999268
    4. ' while' → logprob: -3.7882168292999268
    5. 'while' → logprob: -5.288216590881348
    6. '	while' → logprob: -5.663216590881348
    7. '<|end|>' → logprob: -5.663216590881348
    8. ' 
' → logprob: -5.913216590881348
    9. ')' → logprob: -6.038216590881348
    10. '  
' → logprob: -6.538216590881348

Token 153: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.5876256227493286
    2. ' while' → logprob: -0.8376256227493286
    3. '   ' → logprob: -4.462625503540039
    4. '
' → logprob: -9.837625503540039
    5. '	while' → logprob: -10.712625503540039
    6. '    
' → logprob: -12.587625503540039
    7. '```' → logprob: -12.837625503540039
    8. ' 
' → logprob: -12.962625503540039
    9. ')' → logprob: -14.087625503540039
    10. 'While' → logprob: -15.087625503540039

Token 154: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.1602616012096405
    2. ' queue' → logprob: -1.910261631011963
    3. 'len' → logprob: -11.410261154174805
    4. '	queue' → logprob: -11.410261154174805
    5. '(queue' → logprob: -11.535261154174805
    6. ' len' → logprob: -13.160261154174805
    7. ' ' → logprob: -13.285261154174805
    8. 'que' → logprob: -14.285261154174805
    9. '   ' → logprob: -14.660261154174805
    10. 'True' → logprob: -15.535261154174805

Token 155: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004100723657757044
    2. ':
' → logprob: -5.504100799560547
    3. '):' → logprob: -12.254100799560547
    4. '):
' → logprob: -12.754100799560547
    5. '[' → logprob: -12.879100799560547
    6. 'opleft' → logprob: -13.504100799560547
    7. '.pop' → logprob: -13.629100799560547
    8. ',' → logprob: -13.754100799560547
    9. ')' → logprob: -13.754100799560547
    10. ':not' → logprob: -14.004100799560547

Token 156: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0019337546546012163
    2. ',' → logprob: -6.376933574676514
    3. ' (' → logprob: -9.876934051513672
    4. ' ,' → logprob: -10.501934051513672
    5. 'current' → logprob: -10.501934051513672
    6. ' current' → logprob: -11.001934051513672
    7. '(' → logprob: -11.251934051513672
    8. '        
' → logprob: -11.626934051513672
    9. '(current' → logprob: -11.751934051513672
    10. ',current' → logprob: -11.751934051513672

Token 157: ' state' (ID: 2608)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' (adapté à ' state') → logprob: -0.3898015320301056
    2. ' state' → logprob: -1.2648015022277832
    3. 'current' → logprob: -3.889801502227783
    4. ' current' → logprob: -4.139801502227783
    5. '(state' → logprob: -6.639801502227783
    6. 'cur' → logprob: -7.514801502227783
    7. '       ' → logprob: -7.639801502227783
    8. 'curr' → logprob: -7.764801502227783
    9. 'board' → logprob: -8.014801979064941
    10. 'node' → logprob: -8.014801979064941

Token 158: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004418743774294853
    2. ',state' → logprob: -7.875442028045654
    3. ' ,' → logprob: -10.375441551208496
    4. ',current' → logprob: -11.000441551208496
    5. ',next' → logprob: -12.625441551208496
    6. ',size' → logprob: -13.125441551208496
    7. ',n' → logprob: -13.625441551208496
    8. ',length' → logprob: -13.875441551208496
    9. ',s' → logprob: -14.250441551208496
    10. ',node' → logprob: -14.375441551208496

Token 159: ' dist' (ID: 3601)
  Prédit: 'depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'depth' → logprob: -0.0685502216219902
    2. 'dist' → logprob: -3.5685501098632812
    3. ' depth' → logprob: -4.318550109863281
    4. 'steps' → logprob: -4.318550109863281
    5. 'cost' → logprob: -4.568550109863281
    6. ' dist' → logprob: -7.568550109863281
    7. ' cost' → logprob: -8.193550109863281
    8. ' steps' → logprob: -9.068550109863281
    9. 'distance' → logprob: -9.818550109863281
    10. 'step' → logprob: -9.943550109863281

Token 160: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3142782151699066
    2. '=' → logprob: -1.314278244972229
    3. ')' → logprob: -6.9392781257629395
    4. ',' → logprob: -11.189278602600098
    5. ' ' → logprob: -11.564278602600098
    6. '   ' → logprob: -11.564278602600098
    7. ')=' → logprob: -11.814278602600098
    8. ' )' → logprob: -12.314278602600098
    9. '  ' → logprob: -14.064278602600098
    10. '    ' → logprob: -14.814278602600098

Token 161: ' queue' (ID: 13661)
  Prédit: ' queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.014165511354804039
    2. 'queue' → logprob: -4.26416540145874
    3. '(queue' → logprob: -14.014165878295898
    4. '	queue' → logprob: -14.014165878295898
    5. ' ' → logprob: -16.3891658782959
    6. '.queue' → logprob: -16.6391658782959
    7. ' que' → logprob: -17.0141658782959
    8. 'que' → logprob: -17.0141658782959
    9. ' deque' → logprob: -18.0141658782959
    10. '   ' → logprob: -18.2641658782959

Token 162: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.0013332172529771924
    2. '=' → logprob: -6.751333236694336
    3. '.' → logprob: -9.751333236694336
    4. ' =' → logprob: -10.126333236694336
    5. '.pop' → logprob: -10.126333236694336
    6. 'p' → logprob: -11.626333236694336
    7. '.append' → logprob: -11.876333236694336
    8. '   ' → logprob: -12.751333236694336
    9. '.=' → logprob: -13.376333236694336
    10. ' p' → logprob: -13.751333236694336

Token 163: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.002579343970865011
    2. 'op' → logprob: -6.002579212188721
    3. 'ople' → logprob: -9.377579689025879
    4. 'opl' → logprob: -10.877579689025879
    5. 'oplevel' → logprob: -16.502578735351562
    6. 'opt' → logprob: -17.002578735351562
    7. 'ple' → logprob: -17.377578735351562
    8. 'opf' → logprob: -18.377578735351562
    9. 'p' → logprob: -18.502578735351562
    10. 'o' → logprob: -18.627578735351562

Token 164: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.016000932082533836
    2. ')' → logprob: -4.641000747680664
    3. '()
' → logprob: -5.141000747680664
    4. '       ' → logprob: -8.141000747680664
    5. '(' → logprob: -10.266000747680664
    6. '()
' → logprob: -11.266000747680664
    7. '   ' → logprob: -11.516000747680664
    8. ')
' → logprob: -12.266000747680664
    9. '())' → logprob: -12.266000747680664
    10. '()`' → logprob: -13.016000747680664

Token 165: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09796750545501709
    2. '   ' → logprob: -2.8479676246643066
    3. ' for' → logprob: -4.972967624664307
    4. '
' → logprob: -5.097967624664307
    5. '        
' → logprob: -5.097967624664307
    6. '<|end|>' → logprob: -5.097967624664307
    7. ' 
' → logprob: -5.472967624664307
    8. '    
' → logprob: -6.597967624664307
    9. '  
' → logprob: -7.097967624664307
    10. 'for' → logprob: -7.222967624664307

Token 166: ' zero' (ID: 12421)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5872564911842346
    2. 'for' → logprob: -0.8372564911842346
    3. ' if' → logprob: -5.83725643157959
    4. 'empty' → logprob: -6.33725643157959
    5. 'zero' (adapté à ' zero') → logprob: -6.58725643157959
    6. ' empty' → logprob: -7.08725643157959
    7. 'if' → logprob: -7.21225643157959
    8. '
' → logprob: -7.46225643157959
    9. ' zero' → logprob: -7.46225643157959
    10. 'blank' → logprob: -7.71225643157959

Token 167: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.025972215458750725
    2. '_idx' → logprob: -4.525972366333008
    3. '_index' → logprob: -4.775972366333008
    4. ' =' → logprob: -5.400972366333008
    5. '=' → logprob: -6.900972366333008
    6. 'pos' → logprob: -7.150972366333008
    7. '_position' → logprob: -10.150972366333008
    8. '_' → logprob: -10.400972366333008
    9. 'Pos' → logprob: -12.525972366333008
    10. 'idx' → logprob: -13.275972366333008

Token 168: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931504011154175
    2. ' =' → logprob: -0.6931504011154175
    3. ' ' → logprob: -13.943150520324707
    4. ')' → logprob: -14.068150520324707
    5. ',' → logprob: -14.443150520324707
    6. '=index' → logprob: -15.568150520324707
    7. '=int' → logprob: -15.818150520324707
    8. ' =
' → logprob: -15.943150520324707
    9. '   ' → logprob: -16.06814956665039
    10. '=

' → logprob: -16.31814956665039

Token 169: ' state' (ID: 2608)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.38687291741371155
    2. ' state' → logprob: -1.1368728876113892
    3. '	state' → logprob: -14.261873245239258
    4. '0' → logprob: -15.011873245239258
    5. '   ' → logprob: -15.261873245239258
    6. ' ' → logprob: -15.761873245239258
    7. '(state' → logprob: -16.511873245239258
    8. ' next' → logprob: -16.511873245239258
    9. 's' → logprob: -16.761873245239258
    10. '_state' → logprob: -16.886873245239258

Token 170: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -0.00013727048644796014
    2. '.' → logprob: -9.000137329101562
    3. 'index' → logprob: -11.375137329101562
    4. ' .' → logprob: -13.125137329101562
    5. ' index' → logprob: -16.000137329101562
    6. '.find' → logprob: -16.375137329101562
    7. '.Index' → logprob: -16.625137329101562
    8. '.state' → logprob: -17.500137329101562
    9. '#index' → logprob: -17.500137329101562
    10. '=index' → logprob: -18.625137329101562

Token 171: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0052588991820812225
    2. '0' → logprob: -5.255259037017822
    3. '(
' → logprob: -10.630258560180664
    4. '(

' → logprob: -14.005258560180664
    5. ' (' → logprob: -15.630258560180664
    6. ' ' → logprob: -17.005258560180664
    7. '((' → logprob: -18.630258560180664
    8. '()' → logprob: -19.005258560180664
    9. '(
' → logprob: -19.005258560180664
    10. '('' → logprob: -19.880258560180664

Token 172: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.804671233519912e-05
    2. ' ' → logprob: -9.50008773803711
    3. '7' → logprob: -11.37508773803711
    4. ')' → logprob: -13.50008773803711
    5. '4' → logprob: -16.37508773803711
    6. '8' → logprob: -16.62508773803711
    7. '   ' → logprob: -17.37508773803711
    8. ' )' → logprob: -17.50008773803711
    9. ''' → logprob: -17.62508773803711
    10. '  ' → logprob: -18.00008773803711

Token 173: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0036125436890870333
    2. ')
' → logprob: -5.628612518310547
    3. ' )' → logprob: -11.878612518310547
    4. '   ' → logprob: -13.128612518310547
    5. ')
' → logprob: -13.253612518310547
    6. '       ' → logprob: -13.753612518310547
    7. ')

' → logprob: -15.253612518310547
    8. ' )
' → logprob: -16.128612518310547
    9. '))' → logprob: -16.628612518310547
    10. ')`' → logprob: -16.753612518310547

Token 174: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018336765468120575
    2. ' for' → logprob: -4.518336772918701
    3. '
' → logprob: -5.893336772918701
    4. '   ' → logprob: -6.393336772918701
    5. '<|end|>' → logprob: -6.768336772918701
    6. '        
' → logprob: -7.268336772918701
    7. 'for' → logprob: -7.643336772918701
    8. ')' → logprob: -9.018336296081543
    9. '    
' → logprob: -9.268336296081543
    10. '<|end|>' → logprob: -9.893336296081543

Token 175: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.10439613461494446
    2. ' for' → logprob: -2.354396104812622
    3. '       ' → logprob: -5.479396343231201
    4. '	for' → logprob: -12.604395866394043
    5. '        
' → logprob: -13.104395866394043
    6. '   ' → logprob: -13.104395866394043
    7. '
' → logprob: -13.979395866394043
    8. '<|end|>' → logprob: -15.354395866394043
    9. '```' → logprob: -15.854395866394043
    10. ' 
' → logprob: -16.85439682006836

Token 176: ' nxt' (ID: 160200)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' next' → logprob: -1.266127586364746
    2. 'next' → logprob: -1.391127586364746
    3. 'neighbor' → logprob: -2.016127586364746
    4. ' nxt' → logprob: -2.141127586364746
    5. 'move' → logprob: -2.391127586364746
    6. ' move' → logprob: -2.641127586364746
    7. ' neighbor' → logprob: -3.766127586364746
    8. 'new' → logprob: -4.391127586364746
    9. ' new' → logprob: -5.141127586364746
    10. 'n' → logprob: -5.266127586364746

Token 177: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.28151896595954895
    2. 'in' → logprob: -1.4065189361572266
    3. '_in' → logprob: -8.281518936157227
    4. ' ' → logprob: -10.031518936157227
    5. '	in' → logprob: -10.406518936157227
    6. '_pos' → logprob: -10.906518936157227
    7. '_' → logprob: -11.656518936157227
    8. 'n' → logprob: -12.156518936157227
    9. ')' → logprob: -12.906518936157227
    10. 'pos' → logprob: -13.156518936157227

Token 178: ' moves' (ID: 19523)
  Prédit: ' moves'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' moves' → logprob: -0.07889298349618912
    2. 'moves' → logprob: -2.578892946243286
    3. 'm' → logprob: -13.078892707824707
    4. '.moves' → logprob: -15.078892707824707
    5. '_moves' → logprob: -15.453892707824707
    6. ' move' → logprob: -15.953892707824707
    7. 'move' → logprob: -15.953892707824707
    8. '   ' → logprob: -16.078893661499023
    9. ' m' → logprob: -16.328893661499023
    10. ' ' → logprob: -16.828893661499023

Token 179: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.13388703338569e-06
    2. ' [' → logprob: -12.250009536743164
    3. '[z' → logprob: -13.250009536743164
    4. '[n' → logprob: -13.500009536743164
    5. 'zero' → logprob: -15.000009536743164
    6. '   ' → logprob: -15.125009536743164
    7. '[now' → logprob: -15.750009536743164
    8. 'n' → logprob: -16.750009536743164
    9. '```' → logprob: -16.750009536743164
    10. '	' → logprob: -16.875009536743164

Token 180: 'zero' (ID: 29221)
  Prédit: 'zero'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zero' → logprob: -0.0001801801408873871
    2. ' zero' → logprob: -8.6251802444458
    3. '0' → logprob: -14.7501802444458
    4. '   ' → logprob: -16.375179290771484
    5. 'z' → logprob: -17.625179290771484
    6. '
' → logprob: -17.750179290771484
    7. '.zero' → logprob: -18.125179290771484
    8. ' ' → logprob: -18.875179290771484
    9. '_zero' → logprob: -19.125179290771484
    10. 'zer' → logprob: -19.125179290771484

Token 181: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.0002622894535306841
    2. 'pos' → logprob: -8.250262260437012
    3. 'Pos' → logprob: -14.750262260437012
    4. '_p' → logprob: -16.375263214111328
    5. '0' → logprob: -16.500263214111328
    6. '   ' → logprob: -16.625263214111328
    7. '_' → logprob: -16.750263214111328
    8. '```' → logprob: -17.125263214111328
    9. '_POS' → logprob: -17.500263214111328
    10. ']' → logprob: -17.500263214111328

Token 182: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.00017827287956606597
    2. ']' → logprob: -8.750178337097168
    3. ']:
' → logprob: -11.000178337097168
    4. ']:
' → logprob: -13.375178337097168
    5. ' ]' → logprob: -14.250178337097168
    6. ']:

' → logprob: -14.875178337097168
    7. '   ' → logprob: -16.12517738342285
    8. '']:' → logprob: -16.12517738342285
    9. ']>' → logprob: -16.25017738342285
    10. '"]:' → logprob: -16.50017738342285

Token 183: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0036783369723707438
    2. '            ' → logprob: -7.003678321838379
    3. ',' → logprob: -7.253678321838379
    4. '            
' → logprob: -7.753678321838379
    5. '<|end|>' → logprob: -7.753678321838379
    6. '	       ' → logprob: -8.253678321838379
    7. '       ' → logprob: -8.628678321838379
    8. '          ' → logprob: -8.878678321838379
    9. '               ' → logprob: -8.878678321838379
    10. '        ' → logprob: -9.128678321838379

Token 184: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.43907588720321655
    2. ' new' → logprob: -1.0640759468078613
    3. '           ' → logprob: -4.814075946807861
    4. 'next' → logprob: -6.939075946807861
    5. '               ' → logprob: -7.314075946807861
    6. ' next' → logprob: -7.689075946807861
    7. '            ' → logprob: -10.689075469970703
    8. ' swapped' → logprob: -10.814075469970703
    9. 'state' → logprob: -11.564075469970703
    10. 'n' → logprob: -11.939075469970703

Token 185: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.0037773859221488237
    2. 'state' → logprob: -6.003777503967285
    3. '_' → logprob: -6.753777503967285
    4. ' =' → logprob: -9.378777503967285
    5. ' _' → logprob: -11.128777503967285
    6. '_pos' → logprob: -11.628777503967285
    7. '=' → logprob: -11.753777503967285
    8. '_list' → logprob: -11.878777503967285
    9. '   ' → logprob: -12.378777503967285
    10. '_s' → logprob: -13.253777503967285

Token 186: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141586661338806
    2. '=' → logprob: -1.7014158964157104
    3. ' ' → logprob: -14.076416015625
    4. ')' → logprob: -14.576416015625
    5. ' =
' → logprob: -15.201416015625
    6. '=list' → logprob: -15.326416015625
    7. ',' → logprob: -15.451416015625
    8. ' =[' → logprob: -15.576416015625
    9. '_list' → logprob: -16.326416015625
    10. '>' → logprob: -16.576416015625

Token 187: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.32177892327308655
    2. ' list' → logprob: -1.4467788934707642
    3. 'state' → logprob: -3.4467790126800537
    4. 'tuple' → logprob: -5.696778774261475
    5. ' tuple' → logprob: -5.821778774261475
    6. ' state' → logprob: -6.446778774261475
    7. '(list' → logprob: -11.071779251098633
    8. '(' → logprob: -11.321779251098633
    9. '(state' → logprob: -11.446779251098633
    10. ' (' → logprob: -11.696779251098633

Token 188: '(state' (ID: 16114)
  Prédit: '(state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(state' → logprob: -0.00026336227892898023
    2. 'state' → logprob: -8.250263214111328
    3. '(' → logprob: -13.125263214111328
    4. ' state' → logprob: -16.000263214111328
    5. '[state' → logprob: -17.375263214111328
    6. '(
' → logprob: -17.500263214111328
    7. '(stat' → logprob: -17.875263214111328
    8. ',state' → logprob: -18.125263214111328
    9. ' (' → logprob: -19.500263214111328
    10. '	state' → logprob: -19.750263214111328

Token 189: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.313447505235672
    2. ')' → logprob: -1.3134474754333496
    3. ')
' → logprob: -9.063447952270508
    4. '           ' → logprob: -9.938447952270508
    5. '       ' → logprob: -11.063447952270508
    6. ')

' → logprob: -12.813447952270508
    7. ' )
' → logprob: -14.188447952270508
    8. '   ' → logprob: -14.313447952270508
    9. '               ' → logprob: -14.813447952270508
    10. ')`
' → logprob: -15.313447952270508

Token 190: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.028513209894299507
    2. ' new' → logprob: -4.653513431549072
    3. '[new' → logprob: -4.653513431549072
    4. 'new' → logprob: -5.153513431549072
    5. '[' → logprob: -6.278513431549072
    6. '            
' → logprob: -7.653513431549072
    7. ',new' → logprob: -8.403512954711914
    8. '(new' → logprob: -8.903512954711914
    9. '               ' → logprob: -9.653512954711914
    10. '	new' → logprob: -9.653512954711914

Token 191: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.4664098620414734
    2. 'new' (adapté à ' new') → logprob: -1.2164099216461182
    3. '           ' → logprob: -2.591409921646118
    4. '[new' → logprob: -7.341409683227539
    5. '            
' → logprob: -8.466409683227539
    6. ' 
' → logprob: -8.841409683227539
    7. '               ' → logprob: -8.966409683227539
    8. '
' → logprob: -9.216409683227539
    9. '	new' → logprob: -9.341409683227539
    10. '(new' → logprob: -10.091409683227539

Token 192: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -1.759734732331708e-05
    2. 'state' → logprob: -11.750017166137695
    3. '_pos' → logprob: -12.375017166137695
    4. '_' → logprob: -12.875017166137695
    5. '_states' → logprob: -13.625017166137695
    6. ' _' → logprob: -15.000017166137695
    7. 'State' → logprob: -15.500017166137695
    8. '_STATE' → logprob: -15.500017166137695
    9. '   ' → logprob: -15.500017166137695
    10. '_code' → logprob: -15.875017166137695

Token 193: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.574251918005757e-05
    2. '[new' → logprob: -10.375055313110352
    3. '[n' → logprob: -11.000055313110352
    4. '[
' → logprob: -13.000055313110352
    5. '[z' → logprob: -13.625055313110352
    6. 'zero' → logprob: -14.125055313110352
    7. ' [' → logprob: -14.375055313110352
    8. '[now' → logprob: -14.375055313110352
    9. '.swap' → logprob: -14.750055313110352
    10. '   ' → logprob: -15.000055313110352

Token 194: 'zero' (ID: 29221)
  Prédit: 'zero'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zero' → logprob: -0.001785967731848359
    2. ' zero' → logprob: -6.876785755157471
    3. 'n' → logprob: -7.251785755157471
    4. '0' → logprob: -10.501786231994629
    5. 'z' → logprob: -12.626786231994629
    6. 'zer' → logprob: -12.626786231994629
    7. ']' → logprob: -13.251786231994629
    8. '   ' → logprob: -13.751786231994629
    9. '.zero' → logprob: -13.751786231994629
    10. 'x' → logprob: -14.001786231994629

Token 195: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.00474601099267602
    2. 'pos' → logprob: -5.754745960235596
    3. 's' → logprob: -7.754745960235596
    4. 'npos' → logprob: -8.629746437072754
    5. 'Pos' → logprob: -9.004746437072754
    6. 'n' → logprob: -9.004746437072754
    7. '   ' → logprob: -9.379746437072754
    8. '[pos' → logprob: -9.629746437072754
    9. '_p' → logprob: -9.879746437072754
    10. '[n' → logprob: -9.879746437072754

Token 196: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.003911695908755064
    2. ']' → logprob: -6.12891149520874
    3. ',' → logprob: -6.37891149520874
    4. ' ],' → logprob: -10.753911972045898
    5. ']=' → logprob: -12.378911972045898
    6. ',new' → logprob: -14.253911972045898
    7. ' ,' → logprob: -14.503911972045898
    8. '],
' → logprob: -15.253911972045898
    9. ''],' → logprob: -15.253911972045898
    10. '"],' → logprob: -15.878911972045898

Token 197: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.014167269691824913
    2. ' new' → logprob: -4.264167308807373
    3. '<|end|>' → logprob: -12.889166831970215
    4. '	new' → logprob: -14.514166831970215
    5. '_new' → logprob: -16.13916778564453
    6. ')new' → logprob: -16.13916778564453
    7. '[new' → logprob: -16.26416778564453
    8. '
' → logprob: -16.76416778564453
    9. '           ' → logprob: -16.76416778564453
    10. '$new' → logprob: -16.88916778564453

Token 198: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.007633720524609089
    2. 'state' → logprob: -4.882633686065674
    3. 'n' → logprob: -11.257634162902832
    4. '_pos' → logprob: -12.007634162902832
    5. '_' → logprob: -13.007634162902832
    6. '[' → logprob: -13.757634162902832
    7. 'new' → logprob: -14.382634162902832
    8. 's' → logprob: -14.507634162902832
    9. '[n' → logprob: -14.507634162902832
    10. '_STATE' → logprob: -14.507634162902832

Token 199: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -7.266944157890975e-05
    2. '[' → logprob: -9.875072479248047
    3. '[new' → logprob: -11.250072479248047
    4. '[
' → logprob: -13.250072479248047
    5. '[_' → logprob: -13.500072479248047
    6. '```' → logprob: -13.625072479248047
    7. '[next' → logprob: -14.000072479248047
    8. 'n' → logprob: -14.375072479248047
    9. '_' → logprob: -14.750072479248047
    10. ' [' → logprob: -14.875072479248047

Token 200: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -0.00011856284982059151
    2. 'x' → logprob: -9.125118255615234
    3. 'st' → logprob: -11.875118255615234
    4. 't' → logprob: -13.750118255615234
    5. 'ext' → logprob: -14.750118255615234
    6. '```' → logprob: -14.750118255615234
    7. '[' → logprob: -15.625118255615234
    8. 'zt' → logprob: -15.875118255615234
    9. '[n' → logprob: -16.625118255615234
    10. '   ' → logprob: -16.625118255615234

Token 201: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0009961293544620275
    2. ']=' → logprob: -7.125996112823486
    3. '=' → logprob: -8.750996589660645
    4. ' ]' → logprob: -10.500996589660645
    5. ' =' → logprob: -12.250996589660645
    6. ')' → logprob: -14.375996589660645
    7. '<|end|>' → logprob: -16.000995635986328
    8. '']' → logprob: -16.625995635986328
    9. '[' → logprob: -17.125995635986328
    10. ',' → logprob: -17.125995635986328

Token 202: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.038042064756155014
    2. ' =' → logprob: -3.2880420684814453
    3. '=
' → logprob: -15.663042068481445
    4. '=new' → logprob: -15.788042068481445
    5. '=

' → logprob: -16.038042068481445
    6. ',' → logprob: -16.413042068481445
    7. '=create' → logprob: -17.288042068481445
    8. ')=' → logprob: -17.538042068481445
    9. '<|end|>' → logprob: -17.663042068481445
    10. ']=' → logprob: -17.788042068481445

Token 203: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.06196948140859604
    2. ' new' → logprob: -2.811969518661499
    3. 'state' → logprob: -13.811969757080078
    4. '	new' → logprob: -15.311969757080078
    5. '_new' → logprob: -15.686969757080078
    6. '$new' → logprob: -16.186969757080078
    7. ' ' → logprob: -16.561969757080078
    8. ')new' → logprob: -16.811969757080078
    9. '<|end|>' → logprob: -17.436969757080078
    10. ' state' → logprob: -17.686969757080078

Token 204: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.0010361451422795653
    2. 'state' → logprob: -6.876036167144775
    3. 'State' → logprob: -13.751035690307617
    4. '_STATE' → logprob: -14.126035690307617
    5. ' state' → logprob: -14.751035690307617
    6. 'w' → logprob: -15.376035690307617
    7. '_states' → logprob: -15.876035690307617
    8. 'x' → logprob: -16.126035690307617
    9. 'new' → logprob: -16.251035690307617
    10. 'n' → logprob: -16.501035690307617

Token 205: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.0007191036129370332
    2. 'n' → logprob: -7.62571907043457
    3. '[new' → logprob: -9.25071907043457
    4. 'new' → logprob: -9.50071907043457
    5. '[' → logprob: -10.37571907043457
    6. '   ' → logprob: -12.00071907043457
    7. '_n' → logprob: -12.37571907043457
    8. '	n' → logprob: -12.75071907043457
    9. '```' → logprob: -13.00071907043457
    10. ' ' → logprob: -13.25071907043457

Token 206: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -0.008118526078760624
    2. 'x' → logprob: -5.008118629455566
    3. 't' → logprob: -6.758118629455566
    4. '[' → logprob: -9.758118629455566
    5. '[t' → logprob: -9.883118629455566
    6. 'zt' → logprob: -10.008118629455566
    7. 'z' → logprob: -10.133118629455566
    8. '```' → logprob: -11.508118629455566
    9. '[x' → logprob: -12.133118629455566
    10. '[n' → logprob: -12.508118629455566

Token 207: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02724851481616497
    2. ',new' → logprob: -3.6522486209869385
    3. ' ,' → logprob: -7.027248382568359
    4. ',
' → logprob: -10.27724838256836
    5. ' new' → logprob: -11.65224838256836
    6. '],' → logprob: -11.90224838256836
    7. 'new' → logprob: -12.77724838256836
    8. ',state' → logprob: -12.77724838256836
    9. ' ' → logprob: -13.52724838256836
    10. ',current' → logprob: -14.52724838256836

Token 208: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.05489063635468483
    2. ' new' → logprob: -2.9298906326293945
    3. '0' → logprob: -12.179890632629395
    4. ' ' → logprob: -13.304890632629395
    5. '	new' → logprob: -15.054890632629395
    6. '
' → logprob: -15.304890632629395
    7. '_new' → logprob: -15.429890632629395
    8. ' 
' → logprob: -15.679890632629395
    9. ' ' → logprob: -15.679890632629395
    10. '   ' → logprob: -15.679890632629395

Token 209: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.001961224712431431
    2. 'state' → logprob: -6.7519612312316895
    3. '[' → logprob: -7.5019612312316895
    4. '_pos' → logprob: -8.751960754394531
    5. 'zero' → logprob: -10.876960754394531
    6. '0' → logprob: -11.126960754394531
    7. 'new' → logprob: -11.376960754394531
    8. '```' → logprob: -11.751960754394531
    9. '_' → logprob: -12.376960754394531
    10. '[state' → logprob: -12.876960754394531

Token 210: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00452909991145134
    2. 'zero' → logprob: -5.629528999328613
    3. '0' → logprob: -7.254528999328613
    4. '```' → logprob: -9.504528999328613
    5. '_pos' → logprob: -9.629528999328613
    6. 'new' → logprob: -10.879528999328613
    7. '_zero' → logprob: -11.129528999328613
    8. 'pos' → logprob: -11.129528999328613
    9. '   ' → logprob: -11.629528999328613
    10. '[new' → logprob: -12.254528999328613

Token 211: 'zero' (ID: 29221)
  Prédit: 'zero'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zero' → logprob: -0.0007682943833060563
    2. ' zero' → logprob: -7.500768184661865
    3. '0' → logprob: -8.500768661499023
    4. ' ' → logprob: -11.875768661499023
    5. 'zer' → logprob: -13.375768661499023
    6. 'z' → logprob: -13.750768661499023
    7. 'pos' → logprob: -14.250768661499023
    8. '```' → logprob: -15.000768661499023
    9. ']' → logprob: -15.375768661499023
    10. '   ' → logprob: -15.625768661499023

Token 212: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.00028171599842607975
    2. 'pos' → logprob: -8.25028133392334
    3. '_' → logprob: -11.87528133392334
    4. 'Pos' → logprob: -12.37528133392334
    5. '_state' → logprob: -13.00028133392334
    6. 'npos' → logprob: -13.12528133392334
    7. 'n' → logprob: -13.75028133392334
    8. '_p' → logprob: -14.00028133392334
    9. ')' → logprob: -14.50028133392334
    10. ' _' → logprob: -15.62528133392334

Token 213: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9111112356185913
    2. ']' → logprob: -1.2861112356185913
    3. ')
' → logprob: -1.5361112356185913
    4. ']
' → logprob: -2.286111354827881
    5. '           ' → logprob: -5.411111354827881
    6. '       ' → logprob: -9.786110877990723
    7. ')
' → logprob: -10.411110877990723
    8. 'new' → logprob: -10.536110877990723
    9. '               ' → logprob: -10.911110877990723
    10. ']
' → logprob: -11.036110877990723

Token 214: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02490197867155075
    2. '
' → logprob: -4.149901866912842
    3. ' new' → logprob: -5.774901866912842
    4. '            
' → logprob: -5.774901866912842
    5. '<|end|>' → logprob: -7.274901866912842
    6. ' 
' → logprob: -7.899901866912842
    7. 'new' → logprob: -8.14990234375
    8. ')' → logprob: -9.14990234375
    9. '		' → logprob: -9.14990234375
    10. '       ' → logprob: -9.27490234375

Token 215: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.5759676098823547
    2. 'new' (adapté à ' new') → logprob: -0.8259676098823547
    3. '
' → logprob: -11.450967788696289
    4. '           ' → logprob: -11.450967788696289
    5. 'tuple' → logprob: -13.825967788696289
    6. 'n' → logprob: -13.950967788696289
    7. '            
' → logprob: -14.075967788696289
    8. '	new' → logprob: -14.450967788696289
    9. '   ' → logprob: -14.450967788696289
    10. '```' → logprob: -14.575967788696289

Token 216: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -8.97155623533763e-05
    2. 'state' → logprob: -9.625089645385742
    3. '_states' → logprob: -11.125089645385742
    4. '_' → logprob: -12.750089645385742
    5. '_s' → logprob: -12.875089645385742
    6. '_stat' → logprob: -14.000089645385742
    7. '_tuple' → logprob: -14.750089645385742
    8. '_token' → logprob: -15.125089645385742
    9. 'State' → logprob: -15.250089645385742
    10. ' state' → logprob: -15.625089645385742

Token 217: '_t' (ID: 838)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6936291456222534
    2. ' =' → logprob: -0.6936291456222534
    3. '_tuple' → logprob: -8.068629264831543
    4. 'tuple' → logprob: -8.818629264831543
    5. ')' → logprob: -11.193629264831543
    6. 's' → logprob: -13.693629264831543
    7. ')=' → logprob: -13.693629264831543
    8. ' tuple' → logprob: -14.068629264831543
    9. ']' → logprob: -14.068629264831543
    10. 't' → logprob: -14.568629264831543

Token 218: ' =' (ID: 314)
  Prédit: 'uple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uple' → logprob: -0.23306196928024292
    2. '=' → logprob: -1.7330620288848877
    3. ' =' → logprob: -3.4830620288848877
    4. 'up' → logprob: -7.858061790466309
    5. '```' → logprob: -11.483061790466309
    6. 'r' → logprob: -11.608061790466309
    7. 'ype' → logprob: -11.733061790466309
    8. 'upl' → logprob: -12.108061790466309
    9. 'oken' → logprob: -12.358061790466309
    10. 'uples' → logprob: -12.858061790466309

Token 219: ' tuple' (ID: 31311)
  Prédit: ' tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tuple' → logprob: -0.38687199354171753
    2. 'tuple' → logprob: -1.1368720531463623
    3. '(tuple' → logprob: -14.136872291564941
    4. 'tu' → logprob: -15.261872291564941
    5. ' tup' → logprob: -18.261871337890625
    6. '_tuple' → logprob: -18.386871337890625
    7. ' tu' → logprob: -18.886871337890625
    8. 't' → logprob: -18.886871337890625
    9. 'uple' → logprob: -19.136871337890625
    10. 'Tuple' → logprob: -19.636871337890625

Token 220: '(new' (ID: 2648)
  Prédit: '(new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -0.0003370118502061814
    2. 'new' → logprob: -8.000336647033691
    3. ')new' → logprob: -13.625336647033691
    4. '[new' → logprob: -15.000336647033691
    5. ' new' → logprob: -17.125337600708008
    6. ',new' → logprob: -17.875337600708008
    7. '(' → logprob: -18.125337600708008
    8. '$new' → logprob: -18.625337600708008
    9. '=new' → logprob: -19.250337600708008
    10. '	new' → logprob: -20.250337600708008

Token 221: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.0021950986701995134
    2. 'state' → logprob: -6.127194881439209
    3. 'new' → logprob: -12.252195358276367
    4. ' state' → logprob: -13.002195358276367
    5. '(state' → logprob: -14.127195358276367
    6. ')' → logprob: -14.627195358276367
    7. 'State' → logprob: -14.627195358276367
    8. '-state' → logprob: -14.752195358276367
    9. '_STATE' → logprob: -15.502195358276367
    10. '[state' → logprob: -15.627195358276367

Token 222: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001033999491482973
    2. ')
' → logprob: -6.876033782958984
    3. ')

' → logprob: -14.626033782958984
    4. ')
' → logprob: -14.751033782958984
    5. '),' → logprob: -16.001033782958984
    6. ' )' → logprob: -16.001033782958984
    7. ')`' → logprob: -16.251033782958984
    8. ',' → logprob: -17.751033782958984
    9. '))' → logprob: -17.751033782958984
    10. '<|end|>' → logprob: -18.126033782958984

Token 223: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004845192190259695
    2. '<|end|>' → logprob: -5.754845142364502
    3. '            
' → logprob: -6.629845142364502
    4. '<|end|>' → logprob: -9.00484561920166
    5. ' if' → logprob: -10.12984561920166
    6. ' 
' → logprob: -10.37984561920166
    7. '          ' → logprob: -10.50484561920166
    8. '            ' → logprob: -10.50484561920166
    9. '
' → logprob: -10.62984561920166
    10. '       ' → logprob: -10.75484561920166

Token 224: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.597505509853363
    2. 'if' (adapté à ' if') → logprob: -0.847505509853363
    3. '           ' → logprob: -3.847505569458008
    4. '            ' → logprob: -14.097505569458008
    5. '               ' → logprob: -14.847505569458008
    6. '            
' → logprob: -15.222505569458008
    7. '       ' → logprob: -15.347505569458008
    8. '          ' → logprob: -15.347505569458008
    9. 'If' → logprob: -15.847505569458008
    10. '	if' → logprob: -16.222505569458008

Token 225: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.07889419049024582
    2. 'new' → logprob: -2.5788941383361816
    3. ' not' → logprob: -12.45389461517334
    4. 'not' → logprob: -14.57889461517334
    5. '(new' → logprob: -16.953893661499023
    6. ')new' → logprob: -17.078893661499023
    7. '_new' → logprob: -17.453893661499023
    8. 'n' → logprob: -17.828893661499023
    9. '[new' → logprob: -17.953893661499023
    10. '	new' → logprob: -18.578893661499023

Token 226: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.00030078491545282304
    2. 'state' → logprob: -8.125300407409668
    3. '_' → logprob: -13.500300407409668
    4. ' state' → logprob: -14.125300407409668
    5. 't' → logprob: -14.500300407409668
    6. '_states' → logprob: -14.500300407409668
    7. '_STATE' → logprob: -14.750300407409668
    8. '_t' → logprob: -15.250300407409668
    9. 'State' → logprob: -15.250300407409668
    10. '_stat' → logprob: -16.000301361083984

Token 227: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -3.7697225252486533e-06
    2. 't' → logprob: -13.375003814697266
    3. '_' → logprob: -14.000003814697266
    4. ' _' → logprob: -14.500003814697266
    5. 'not' → logprob: -15.625003814697266
    6. '```' → logprob: -16.000003814697266
    7. '_not' → logprob: -16.125003814697266
    8. '_new' → logprob: -16.500003814697266
    9. '
' → logprob: -16.750003814697266
    10. '[' → logprob: -16.875003814697266

Token 228: ' ==' (ID: 951)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.011450372636318207
    2. 'not' → logprob: -4.511450290679932
    3. ' in' → logprob: -7.886450290679932
    4. 'in' → logprob: -11.63645076751709
    5. '<|end|>' → logprob: -11.76145076751709
    6. ')' → logprob: -12.51145076751709
    7. '	not' → logprob: -12.63645076751709
    8. ' ' → logprob: -13.26145076751709
    9. ' ==' → logprob: -14.88645076751709
    10. ' no' → logprob: -15.38645076751709

Token 229: ' goal' (ID: 8583)
  Prédit: ' goal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' goal' → logprob: -0.1002078503370285
    2. 'goal' → logprob: -2.350207805633545
    3. '(goal' → logprob: -13.725208282470703
    4. '.goal' → logprob: -16.725208282470703
    5. 'go' → logprob: -17.225208282470703
    6. '_goal' → logprob: -17.475208282470703
    7. 'Goal' → logprob: -18.600208282470703
    8. ' ' → logprob: -19.600208282470703
    9. '
' → logprob: -19.850208282470703
    10. ' ' → logprob: -20.100208282470703

Token 230: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05676116794347763
    2. ':
' → logprob: -2.9317612648010254
    3. ':return' → logprob: -6.306761264801025
    4. '               ' → logprob: -10.681760787963867
    5. '           ' → logprob: -11.306760787963867
    6. ':
' → logprob: -11.806760787963867
    7. '):
' → logprob: -12.431760787963867
    8. ':

' → logprob: -13.556760787963867
    9. 'return' → logprob: -13.681760787963867
    10. '):' → logprob: -13.806760787963867

Token 231: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005338112823665142
    2. ' return' → logprob: -5.255338191986084
    3. 'return' → logprob: -9.380337715148926
    4. '           ' → logprob: -12.880337715148926
    5. '                       ' → logprob: -12.880337715148926
    6. '                   ' → logprob: -12.880337715148926
    7. '                
' → logprob: -12.880337715148926
    8. ':return' → logprob: -13.130337715148926
    9. '<|end|>' → logprob: -13.755337715148926
    10. ')' → logprob: -13.755337715148926

Token 232: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5839133262634277
    2. 'return' (adapté à ' return') → logprob: -0.8339133262634277
    3. '                   ' → logprob: -5.083913326263428
    4. '               ' → logprob: -6.458913326263428
    5. '
' → logprob: -8.833913803100586
    6. ' 
' → logprob: -11.458913803100586
    7. '   ' → logprob: -11.958913803100586
    8. '           ' → logprob: -12.333913803100586
    9. '                    
' → logprob: -12.958913803100586
    10. '	return' → logprob: -13.083913803100586

Token 233: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.04858771339058876
    2. ' dist' → logprob: -3.0485877990722656
    3. '(dist' → logprob: -15.798587799072266
    4. 'd' → logprob: -16.173587799072266
    5. '	dist' → logprob: -16.173587799072266
    6. '_dist' → logprob: -18.423587799072266
    7. '
' → logprob: -19.173587799072266
    8. 'Dist' → logprob: -19.548587799072266
    9. 'distance' → logprob: -20.548587799072266
    10. '   ' → logprob: -20.798587799072266

Token 234: '+' (ID: 10)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.1129133552312851
    2. '+' → logprob: -2.2379133701324463
    3. ' ' → logprob: -9.862913131713867
    4. '1' → logprob: -10.487913131713867
    5. ' +
' → logprob: -12.237913131713867
    6. ' plus' → logprob: -13.237913131713867
    7. '`' → logprob: -13.987913131713867
    8. '    ' → logprob: -14.237913131713867
    9. ' ' → logprob: -14.862913131713867
    10. '+
' → logprob: -14.987913131713867

Token 235: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '<|end|>' → logprob: -17.625001907348633
    4. '
' → logprob: -18.250001907348633
    5. '```' → logprob: -18.375001907348633
    6. '   ' → logprob: -18.500001907348633
    7. '  ' → logprob: -20.125001907348633
    8. '۱' → logprob: -20.375001907348633
    9. '+' → logprob: -21.812501907348633
    10. '``' → logprob: -22.062501907348633

Token 236: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0013785678893327713
    2. '
' → logprob: -7.251378536224365
    3. '            
' → logprob: -7.376378536224365
    4. '           
' → logprob: -11.376379013061523
    5. '               ' → logprob: -11.876379013061523
    6. '          ' → logprob: -12.001379013061523
    7. '                
' → logprob: -12.251379013061523
    8. ' 
' → logprob: -12.501379013061523
    9. '```' → logprob: -12.876379013061523
    10. '		' → logprob: -13.751379013061523

Token 237: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005364707321859896
    2. '            
' → logprob: -8.250536918640137
    3. '
' → logprob: -8.375536918640137
    4. ' if' → logprob: -11.375536918640137
    5. '          ' → logprob: -12.000536918640137
    6. '               ' → logprob: -12.125536918640137
    7. ' 
' → logprob: -12.375536918640137
    8. '```' → logprob: -12.500536918640137
    9. '           
' → logprob: -12.500536918640137
    10. '    
' → logprob: -13.375536918640137

Token 238: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.07903828471899033
    2. ' if' → logprob: -2.829038381576538
    3. '           ' → logprob: -4.079038143157959
    4. '               ' → logprob: -14.204038619995117
    5. '```' → logprob: -14.829038619995117
    6. '            
' → logprob: -15.079038619995117
    7. '   ' → logprob: -15.579038619995117
    8. '          ' → logprob: -15.704038619995117
    9. '       ' → logprob: -16.079038619995117
    10. 'If' → logprob: -16.704038619995117

Token 239: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.10020893067121506
    2. 'new' → logprob: -2.3502089977264404
    3. ' not' → logprob: -13.97520923614502
    4. '(new' → logprob: -14.22520923614502
    5. ' ' → logprob: -15.35020923614502
    6. '	new' → logprob: -15.97520923614502
    7. '[new' → logprob: -16.225208282470703
    8. 'not' → logprob: -16.225208282470703
    9. '_new' → logprob: -16.475208282470703
    10. ')new' → logprob: -16.475208282470703

Token 240: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.0010669894982129335
    2. 'state' → logprob: -7.126067161560059
    3. 'new' → logprob: -8.376067161560059
    4. 'ew' → logprob: -10.626067161560059
    5. '_new' → logprob: -13.126067161560059
    6. '_' → logprob: -13.251067161560059
    7. 't' → logprob: -13.251067161560059
    8. ' new' → logprob: -14.501067161560059
    9. ' state' → logprob: -15.001067161560059
    10. 'w' → logprob: -15.126067161560059

Token 241: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -3.128163257315464e-07
    2. 't' → logprob: -15.625
    3. 'not' → logprob: -17.0
    4. ' not' → logprob: -18.0
    5. '_' → logprob: -18.125
    6. ')' → logprob: -18.625
    7. '_not' → logprob: -19.0
    8. '##_' → logprob: -19.5
    9. ' _' → logprob: -19.875
    10. '```' → logprob: -19.875

Token 242: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.008614926598966122
    2. 'not' → logprob: -4.758615016937256
    3. '	not' → logprob: -15.383614540100098
    4. ')' → logprob: -16.883615493774414
    5. '<|end|>' → logprob: -17.008615493774414
    6. ' in' → logprob: -17.008615493774414
    7. ':not' → logprob: -17.758615493774414
    8. '_not' → logprob: -18.883615493774414
    9. ' ' → logprob: -19.258615493774414
    10. 'Not' → logprob: -19.758615493774414

Token 243: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06773587316274643
    2. 'in' → logprob: -3.5677359104156494
    3. 'visited' → logprob: -3.8177359104156494
    4. ' visited' → logprob: -4.31773567199707
    5. '<|end|>' → logprob: -6.31773567199707
    6. ' ' → logprob: -9.94273567199707
    7. '   ' → logprob: -10.81773567199707
    8. ')' → logprob: -11.06773567199707
    9. '<|end|>' → logprob: -11.06773567199707
    10. ',' → logprob: -11.81773567199707

Token 244: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.12692873179912567
    2. ' visited' → logprob: -2.1269288063049316
    3. '
' → logprob: -14.751928329467773
    4. 'vis' → logprob: -16.626928329467773
    5. '   ' → logprob: -16.751928329467773
    6. 'visit' → logprob: -16.876928329467773
    7. 'Visited' → logprob: -16.876928329467773
    8. ' ' → logprob: -17.501928329467773
    9. 'visitor' → logprob: -19.126928329467773
    10. ' ' → logprob: -19.251928329467773

Token 245: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06893762946128845
    2. ':
' → logprob: -2.8189375400543213
    3. '):
' → logprob: -5.8189377784729
    4. '):' → logprob: -6.0689377784729
    5. '<|end|>' → logprob: -6.9439377784729
    6. ')' → logprob: -7.6939377784729
    7. ',' → logprob: -9.693937301635742
    8. '           ' → logprob: -10.068937301635742
    9. '<|end|>' → logprob: -10.318937301635742
    10. '               ' → logprob: -10.818937301635742

Token 246: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00531558133661747
    2. ' visited' → logprob: -5.255315780639648
    3. '                
' → logprob: -10.380315780639648
    4. 'visited' → logprob: -11.005315780639648
    5. '           ' → logprob: -11.255315780639648
    6. '```' → logprob: -12.630315780639648
    7. '<|end|>' → logprob: -12.755315780639648
    8. '                   ' → logprob: -13.130315780639648
    9. ' visitation' → logprob: -13.755315780639648
    10. ' 
' → logprob: -13.880315780639648

Token 247: ' visited' (ID: 18416)
  Prédit: ' visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' visited' → logprob: -0.03641630336642265
    2. 'visited' (adapté à ' visited') → logprob: -3.4114162921905518
    3. '               ' → logprob: -6.036416530609131
    4. '                   ' → logprob: -8.161416053771973
    5. '                ' → logprob: -9.661416053771973
    6. 'Visited' → logprob: -11.411416053771973
    7. ' ' → logprob: -12.911416053771973
    8. ' visit' → logprob: -13.161416053771973
    9. '   ' → logprob: -13.286416053771973
    10. '```' → logprob: -13.286416053771973

Token 248: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -2.9040898880339228e-05
    2. '.' → logprob: -10.500028610229492
    3. ' .' → logprob: -13.625028610229492
    4. '.update' → logprob: -16.250028610229492
    5. ')add' → logprob: -16.875028610229492
    6. ' add' → logprob: -17.000028610229492
    7. '.append' → logprob: -17.250028610229492
    8. '.Add' → logprob: -17.500028610229492
    9. 'add' → logprob: -17.500028610229492
    10. '.remove' → logprob: -18.250028610229492

Token 249: '(new' (ID: 2648)
  Prédit: '(new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -3.5716304410016164e-05
    2. '(' → logprob: -10.250035285949707
    3. ' (' → logprob: -15.125035285949707
    4. '(
' → logprob: -17.875036239624023
    5. '((' → logprob: -19.625036239624023
    6. ',new' → logprob: -19.750036239624023
    7. 'new' → logprob: -20.000036239624023
    8. ' new' → logprob: -20.125036239624023
    9. '(n' → logprob: -21.000036239624023
    10. ')new' → logprob: -21.250036239624023

Token 250: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.00302869058214128
    2. 'state' → logprob: -5.878028869628906
    3. 'new' → logprob: -8.503028869628906
    4. ' state' → logprob: -11.628028869628906
    5. '_new' → logprob: -12.378028869628906
    6. ' new' → logprob: -12.753028869628906
    7. '_' → logprob: -13.003028869628906
    8. 'State' → logprob: -14.253028869628906
    9. '_states' → logprob: -14.753028869628906
    10. ' _' → logprob: -14.878028869628906

Token 251: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -3.531315314830863e-06
    2. ')' → logprob: -12.750003814697266
    3. 't' → logprob: -15.000003814697266
    4. ',' → logprob: -16.375003814697266
    5. ')_' → logprob: -16.375003814697266
    6. '_)' → logprob: -16.875003814697266
    7. '_' → logprob: -18.375003814697266
    8. ',_' → logprob: -18.500003814697266
    9. '_
' → logprob: -18.500003814697266
    10. ')
' → logprob: -18.625003814697266

Token 252: ')
' (ID: 446)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3714693486690521
    2. ')' → logprob: -1.4964693784713745
    3. ',' → logprob: -2.746469259262085
    4. ')
' → logprob: -3.871469259262085
    5. '                
' → logprob: -7.621469497680664
    6. ',
' → logprob: -7.996469497680664
    7. '),' → logprob: -8.746469497680664
    8. '(queue' → logprob: -9.621469497680664
    9. '
' → logprob: -10.121469497680664
    10. '           ' → logprob: -10.246469497680664

Token 253: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.14525558054447174
    2. ' queue' → logprob: -2.0202555656433105
    3. 'queue' → logprob: -6.3952555656433105
    4. '```' → logprob: -7.7702555656433105
    5. '
' → logprob: -8.770256042480469
    6. '                
' → logprob: -9.270256042480469
    7. '           ' → logprob: -10.020256042480469
    8. '                   ' → logprob: -10.270256042480469
    9. '(queue' → logprob: -10.645256042480469
    10. '       ' → logprob: -10.770256042480469

Token 254: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -0.474077433347702
    2. ' queue' → logprob: -0.9740774631500244
    3. '	queue' → logprob: -15.599077224731445
    4. '       ' → logprob: -16.474077224731445
    5. '(queue' → logprob: -16.974077224731445
    6. '   ' → logprob: -17.099077224731445
    7. '
' → logprob: -17.724077224731445
    8. '.queue' → logprob: -17.724077224731445
    9. 'que' → logprob: -17.849077224731445
    10. '           ' → logprob: -18.099077224731445

Token 255: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -2.7848862373502925e-05
    2. '.' → logprob: -10.625027656555176
    3. '.enqueue' → logprob: -13.375027656555176
    4. ').' → logprob: -14.125027656555176
    5. ' .' → logprob: -15.125027656555176
    6. 'append' → logprob: -15.250027656555176
    7. '.put' → logprob: -15.500027656555176
    8. '.extend' → logprob: -15.875027656555176
    9. '.push' → logprob: -16.375028610229492
    10. '().' → logprob: -16.625028610229492

Token 256: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0028427953366190195
    2. '(' → logprob: -6.252842903137207
    3. '(new' → logprob: -7.002842903137207
    4. ' (' → logprob: -12.877842903137207
    5. '(
' → logprob: -13.752842903137207
    6. ' ((' → logprob: -14.502842903137207
    7. '(((' → logprob: -15.502842903137207
    8. '```' → logprob: -16.00284194946289
    9. ' ' → logprob: -17.87784194946289
    10. '(('' → logprob: -18.12784194946289

Token 257: 'new' (ID: 1389)
  Prédit: 'new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.00011009939044015482
    2. ' new' → logprob: -9.125109672546387
    3. '   ' → logprob: -14.250109672546387
    4. '(new' → logprob: -16.375110626220703
    5. '	new' → logprob: -16.625110626220703
    6. ')new' → logprob: -16.750110626220703
    7. 'state' → logprob: -16.875110626220703
    8. '
' → logprob: -17.125110626220703
    9. '```' → logprob: -17.125110626220703
    10. ' ' → logprob: -17.625110626220703

Token 258: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.00104614719748497
    2. 'state' → logprob: -6.876046180725098
    3. ' state' → logprob: -12.126046180725098
    4. '_' → logprob: -13.126046180725098
    5. '_s' → logprob: -13.626046180725098
    6. '_states' → logprob: -13.751046180725098
    7. ' _' → logprob: -13.751046180725098
    8. '_STATE' → logprob: -14.126046180725098
    9. 's' → logprob: -14.626046180725098
    10. 'State' → logprob: -15.001046180725098

Token 259: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -2.1008713702030946e-06
    2. 't' → logprob: -13.625001907348633
    3. ',' → logprob: -14.250001907348633
    4. ',_' → logprob: -17.250001907348633
    5. 's' → logprob: -17.375001907348633
    6. '   ' → logprob: -17.750001907348633
    7. '```' → logprob: -17.750001907348633
    8. '
' → logprob: -18.375001907348633
    9. ' ' → logprob: -18.750001907348633
    10. ' _' → logprob: -19.000001907348633

Token 260: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.670925358776003e-05
    2. ' ,' → logprob: -9.625066757202148
    3. ',d' → logprob: -14.875066757202148
    4. 'dist' → logprob: -16.75006675720215
    5. ',
' → logprob: -17.62506675720215
    6. '),' → logprob: -18.00006675720215
    7. '   ' → logprob: -18.12506675720215
    8. '`,' → logprob: -18.25006675720215
    9. ' dist' → logprob: -18.75006675720215
    10. '‌,' → logprob: -19.50006675720215

Token 261: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.01814994215965271
    2. ' dist' → logprob: -4.0181498527526855
    3. '	dist' → logprob: -17.393150329589844
    4. '(dist' → logprob: -18.268150329589844
    5. 'd' → logprob: -19.393150329589844
    6. '_dist' → logprob: -19.518150329589844
    7. '   ' → logprob: -19.518150329589844
    8. 'Dist' → logprob: -20.393150329589844
    9. '
' → logprob: -21.143150329589844
    10. '.dist' → logprob: -21.268150329589844

Token 262: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.029750604182481766
    2. ' +' → logprob: -3.5297505855560303
    3. '+
' → logprob: -16.90475082397461
    4. ' plus' → logprob: -17.40475082397461
    5. '＋' → logprob: -17.40475082397461
    6. '1' → logprob: -18.15475082397461
    7. ' ' → logprob: -18.15475082397461
    8. ' +
' → logprob: -18.15475082397461
    9. ')+' → logprob: -19.77975082397461
    10. '   ' → logprob: -19.90475082397461

Token 263: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.180258191714529e-06
    2. ' ' → logprob: -11.750008583068848
    3. '   ' → logprob: -15.875008583068848
    4. '```' → logprob: -17.00000762939453
    5. ')' → logprob: -17.50000762939453
    6. '
' → logprob: -18.12500762939453
    7. '  ' → logprob: -18.62500762939453
    8. '       ' → logprob: -19.87500762939453
    9. '           ' → logprob: -20.00000762939453
    10. '     ' → logprob: -20.25000762939453

Token 264: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00019007037917617708
    2. '))
' → logprob: -9.000189781188965
    3. ')' → logprob: -9.625189781188965
    4. ')))' → logprob: -15.000189781188965
    5. ' ))' → logprob: -16.00019073486328
    6. ')
' → logprob: -16.62519073486328
    7. '   ' → logprob: -17.62519073486328
    8. '))

' → logprob: -18.00019073486328
    9. '       ' → logprob: -18.37519073486328
    10. '));' → logprob: -18.75019073486328

Token 265: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32020488381385803
    2. 'return' → logprob: -1.3202048540115356
    3. '<|end|>' → logprob: -5.695204734802246
    4. ' return' → logprob: -6.445204734802246
    5. 'print' → logprob: -6.945204734802246
    6. '
' → logprob: -7.820204734802246
    7. '```' → logprob: -8.820204734802246
    8. ')' → logprob: -9.445204734802246
    9. '#' → logprob: -9.445204734802246
    10. 'raise' → logprob: -9.570204734802246

Token 266: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0008215418201871216
    2. '   ' → logprob: -7.500821590423584
    3. ' return' → logprob: -8.250821113586426
    4. '
' → logprob: -12.250821113586426
    5. '    
' → logprob: -13.625821113586426
    6. '	return' → logprob: -14.125821113586426
    7. '```' → logprob: -15.500821113586426
    8. '-' → logprob: -15.750821113586426
    9. 'None' → logprob: -16.375822067260742
    10. ':return' → logprob: -16.500822067260742

Token 267: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00024370834580622613
    2. ' -' → logprob: -8.500244140625
    3. 'None' → logprob: -10.125244140625
    4. ' None' → logprob: -15.875244140625
    5. '-s' → logprob: -18.000244140625
    6. 'False' → logprob: -18.125244140625
    7. '"' → logprob: -18.375244140625
    8. ' ' → logprob: -18.750244140625
    9. '-none' → logprob: -18.750244140625
    10. 'sys' → logprob: -19.875244140625

Token 268: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '-' → logprob: -19.125
    4. '   ' → logprob: -19.5
    5. '2' → logprob: -19.875
    6. ' -' → logprob: -20.0
    7. '１' → logprob: -20.25
    8. '  ' → logprob: -20.75
    9. '۱' → logprob: -21.0
    10. '```' → logprob: -21.0625

Token 269: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 270: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0616366863250732
    2. 'start' → logprob: -1.1866366863250732
    3. 'for' → logprob: -1.4366366863250732
    4. 'input' → logprob: -3.0616366863250732
    5. 'def' → logprob: -3.8116366863250732
    6. '<|end|>' → logprob: -4.436636924743652
    7. '
' → logprob: -4.561636924743652
    8. 'n' → logprob: -4.811636924743652
    9. 'data' → logprob: -5.436636924743652
    10. '  
' → logprob: -6.186636924743652

Token 271: ' should' (ID: 1757)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6474856734275818
    2. 'def' → logprob: -1.3974857330322266
    3. 'if' → logprob: -1.7724857330322266
    4. '<|end|>' → logprob: -3.7724857330322266
    5. ' if' → logprob: -4.397485733032227
    6. 'No' → logprob: -4.772485733032227
    7. ' #' → logprob: -5.897485733032227
    8. ' ' → logprob: -6.772485733032227
    9. '```' → logprob: -6.772485733032227
    10. 'The' → logprob: -6.897485733032227

Token 272: ' not' (ID: 625)
  Prédit: ' never'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' never' → logprob: -0.5497389435768127
    2. ' not' → logprob: -1.049738883972168
    3. 'never' → logprob: -3.299738883972168
    4. 'not' → logprob: -3.424738883972168
    5. 'n't' → logprob: -5.799738883972168
    6. ' rarely' → logprob: -8.799738883972168
    7. ' return' → logprob: -9.799738883972168
    8. ' be' → logprob: -10.049738883972168
    9. ' only' → logprob: -10.174738883972168
    10. '_not' → logprob: -10.549738883972168

Token 273: ' happen' (ID: 5659)
  Prédit: ' happen'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' happen' → logprob: -0.10044033080339432
    2. ' occur' → logprob: -3.100440263748169
    3. ' be' → logprob: -3.850440263748169
    4. 'occur' → logprob: -3.975440263748169
    5. 'be' → logprob: -5.600440502166748
    6. 'h' → logprob: -6.225440502166748
    7. 'return' → logprob: -6.475440502166748
    8. ' ' → logprob: -6.725440502166748
    9. ' return' → logprob: -6.975440502166748
    10. ' reach' → logprob: -8.22544002532959

Token 274: ' as' (ID: 472)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.05868527665734291
    2. 'for' → logprob: -3.058685302734375
    3. 'def' → logprob: -5.058685302734375
    4. 'input' → logprob: -6.808685302734375
    5. 'n' → logprob: -6.933685302734375
    6. ' if' → logprob: -7.058685302734375
    7. '
' → logprob: -8.183685302734375
    8. ' for' → logprob: -8.933685302734375
    9. 'start' → logprob: -8.933685302734375
    10. 'data' → logprob: -9.058685302734375

Token 275: ' problem' (ID: 4792)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.7784824967384338
    2. ' the' → logprob: -1.028482437133789
    3. ' goal' → logprob: -3.153482437133789
    4. ' per' → logprob: -3.403482437133789
    5. ' long' → logprob: -3.528482437133789
    6. 'the' → logprob: -4.028482437133789
    7. 'goal' → logprob: -4.153482437133789
    8. 'all' → logprob: -4.653482437133789
    9. ' input' → logprob: -5.028482437133789
    10. ' problem' → logprob: -5.528482437133789

Token 276: ' states' (ID: 9407)
  Prédit: ' states'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' states' → logprob: -1.0944088697433472
    2. '_description' → logprob: -2.0944089889526367
    3. 'description' → logprob: -2.0944089889526367
    4. ' is' → logprob: -2.7194089889526367
    5. ' description' → logprob: -2.8444089889526367
    6. 'states' → logprob: -2.8444089889526367
    7. 'is' → logprob: -3.4694089889526367
    8. '<|end|>' → logprob: -3.7194089889526367
    9. 'input' → logprob: -3.9694089889526367
    10. ' guarantees' → logprob: -3.9694089889526367

Token 277: ' solv' (ID: 154169)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1766880750656128
    2. 'for' → logprob: -2.5516881942749023
    3. 'def' → logprob: -3.4266881942749023
    4. 'input' → logprob: -3.5516881942749023
    5. 'start' → logprob: -4.426688194274902
    6. ' for' → logprob: -5.426688194274902
    7. ' if' → logprob: -5.551688194274902
    8. '
' → logprob: -7.301688194274902
    9. 'n' → logprob: -8.051688194274902
    10. 'while' → logprob: -8.426688194274902

Token 278: 'able' (ID: 562)
  Prédit: 'able'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'able' → logprob: -0.00013524403038900346
    2. 'e' → logprob: -9.00013542175293
    3. 'ability' → logprob: -12.50013542175293
    4. '```' → logprob: -12.87513542175293
    5. 'ble' → logprob: -13.62513542175293
    6. '
' → logprob: -13.75013542175293
    7. 'ible' → logprob: -14.37513542175293
    8. '   ' → logprob: -14.62513542175293
    9. ' able' → logprob: -15.62513542175293
    10. 'a' → logprob: -15.75013542175293

Token 279: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.41057419776916504
    2. 'def' → logprob: -1.660574197769165
    3. 'if' → logprob: -2.535574197769165
    4. 'data' → logprob: -3.785574197769165
    5. 'input' → logprob: -4.035573959350586
    6. 'start' → logprob: -4.035573959350586
    7. '<|end|>' → logprob: -5.660573959350586
    8. ' for' → logprob: -6.285573959350586
    9. 'n' → logprob: -6.535573959350586
    10. '
' → logprob: -6.785573959350586

Token 280: 'for' (ID: 1938)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1415635198354721
    2. 'for' → logprob: -2.1415634155273438
    3. 'start' → logprob: -4.891563415527344
    4. 'def' → logprob: -5.641563415527344
    5. 'input' → logprob: -6.016563415527344
    6. 'data' → logprob: -7.516563415527344
    7. '
' → logprob: -8.391563415527344
    8. 'n' → logprob: -9.266563415527344
    9. ' if' → logprob: -9.516563415527344
    10. 'line' → logprob: -10.516563415527344

Token 281: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.005636047106236219
    2. ' _' → logprob: -5.380636215209961
    3. '_' → logprob: -7.255636215209961
    4. 'line' → logprob: -8.255636215209961
    5. '_line' → logprob: -10.505636215209961
    6. ' i' → logprob: -11.005636215209961
    7. ' case' → logprob: -13.130636215209961
    8. ' lin' → logprob: -14.130636215209961
    9. ' l' → logprob: -14.380636215209961
    10. ' ' → logprob: -14.755636215209961

Token 282: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005301942583173513
    2. 'in' → logprob: -5.2553019523620605
    3. '()' → logprob: -10.005301475524902
    4. ' ' → logprob: -11.505301475524902
    5. '(' → logprob: -12.630301475524902
    6. 'line' → logprob: -13.005301475524902
    7. '_' → logprob: -13.755301475524902
    8. '():
' → logprob: -13.880301475524902
    9. 's' → logprob: -14.130301475524902
    10. '.readline' → logprob: -14.630301475524902

Token 283: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.25194013118743896
    2. ' sys' → logprob: -1.501940131187439
    3. '=sys' → logprob: -11.87693977355957
    4. '	sys' → logprob: -12.75193977355957
    5. '(sys' → logprob: -13.87693977355957
    6. 'stdin' → logprob: -16.25193977355957
    7. 'iter' → logprob: -18.00193977355957
    8. '_sys' → logprob: -18.50193977355957
    9. 's' → logprob: -18.50193977355957
    10. ' ' → logprob: -18.87693977355957

Token 284: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.002840060740709305
    2. 'stdin' → logprob: -5.877840042114258
    3. '(stdin' → logprob: -11.377840042114258
    4. '.readline' → logprob: -11.377840042114258
    5. ' stdin' → logprob: -12.252840042114258
    6. '.' → logprob: -12.627840042114258
    7. 'in' → logprob: -13.502840042114258
    8. '.readlines' → logprob: -13.752840042114258
    9. 'input' → logprob: -14.377840042114258
    10. '.argv' → logprob: -14.627840042114258

Token 285: ':
' (ID: 734)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.48253411054611206
    2. ':' → logprob: -1.1075341701507568
    3. '.strip' → logprob: -3.357534170150757
    4. '.readlines' → logprob: -4.857533931732178
    5. '.rstrip' → logprob: -5.107533931732178
    6. '.' → logprob: -6.857533931732178
    7. ':
' → logprob: -6.982533931732178
    8. '():' → logprob: -7.232533931732178
    9. ' in' → logprob: -8.482534408569336
    10. '().' → logprob: -8.607534408569336

Token 286: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08468985557556152
    2. 'start' → logprob: -3.0846898555755615
    3. ' start' → logprob: -4.209690093994141
    4. 'state' → logprob: -4.334690093994141
    5. ' initial' → logprob: -6.584690093994141
    6. ' state' → logprob: -6.834690093994141
    7. 'initial' → logprob: -6.959690093994141
    8. ' line' → logprob: -7.084690093994141
    9. ' s' → logprob: -7.459690093994141
    10. 'line' → logprob: -8.20969009399414

Token 287: ' line' (ID: 2543)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.020851679146289825
    2. ' start' → logprob: -4.5208516120910645
    3. 'state' → logprob: -5.6458516120910645
    4. '   ' → logprob: -6.3958516120910645
    5. 'line' (adapté à ' line') → logprob: -6.3958516120910645
    6. 'board' → logprob: -6.7708516120910645
    7. 'initial' → logprob: -6.8958516120910645
    8. 'arr' → logprob: -7.8958516120910645
    9. 'init' → logprob: -9.395852088928223
    10. ' line' → logprob: -9.895852088928223

Token 288: '=line' (ID: 192488)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03594571352005005
    2. '=line' → logprob: -3.7859456539154053
    3. ' =' → logprob: -4.410945892333984
    4. '.strip' → logprob: -7.910945892333984
    5. 'strip' → logprob: -11.160945892333984
    6. '_tokens' → logprob: -11.160945892333984
    7. '.rstrip' → logprob: -11.160945892333984
    8. 'rstrip' → logprob: -11.285945892333984
    9. '=
' → logprob: -11.660945892333984
    10. ')' → logprob: -11.910945892333984

Token 289: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.0027738476637750864
    2. '().' → logprob: -6.127773761749268
    3. '.rstrip' → logprob: -8.127774238586426
    4. '.' → logprob: -8.252774238586426
    5. 'strip' → logprob: -11.377774238586426
    6. '=line' → logprob: -11.377774238586426
    7. '.split' → logprob: -12.502774238586426
    8. '.replace' → logprob: -13.377774238586426
    9. '.readline' → logprob: -13.627774238586426
    10. ' .' → logprob: -14.002774238586426

Token 290: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.010127538815140724
    2. '().' → logprob: -4.635127544403076
    3. '()
' → logprob: -8.010127067565918
    4. '(' → logprob: -11.260127067565918
    5. '()

' → logprob: -12.135127067565918
    6. '()`' → logprob: -12.385127067565918
    7. '()\' → logprob: -12.760127067565918
    8. '();' → logprob: -12.885127067565918
    9. '())' → logprob: -12.885127067565918
    10. '()==' → logprob: -13.635127067565918

Token 291: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21685056388378143
    2. ' if' → logprob: -2.216850519180298
    3. 'if' → logprob: -2.466850519180298
    4. 'tokens' → logprob: -7.341850757598877
    5. '    
' → logprob: -8.466850280761719
    6. ',' → logprob: -9.841850280761719
    7. '	if' → logprob: -9.841850280761719
    8. '
' → logprob: -10.091850280761719
    9. 'state' → logprob: -10.591850280761719
    10. 'states' → logprob: -10.716850280761719

Token 292: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0028080830816179514
    2. 'start' → logprob: -6.002808094024658
    3. 'initial' → logprob: -9.5028076171875
    4. ' if' → logprob: -9.8778076171875
    5. 'arr' → logprob: -10.0028076171875
    6. 'nums' → logprob: -10.1278076171875
    7. 'tiles' → logprob: -10.1278076171875
    8. 'numbers' → logprob: -10.3778076171875
    9. 'parts' → logprob: -11.0028076171875
    10. 'p' → logprob: -12.0028076171875

Token 293: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.059395693242549896
    2. 'not' → logprob: -2.9343957901000977
    3. ' line' → logprob: -5.684395790100098
    4. 'line' → logprob: -6.809395790100098
    5. '=line' → logprob: -15.184395790100098
    6. '[line' → logprob: -15.434395790100098
    7. '	not' → logprob: -15.809395790100098
    8. ' ' → logprob: -15.809395790100098
    9. '!' → logprob: -16.05939483642578
    10. '(line' → logprob: -16.05939483642578

Token 294: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.048587825149297714
    2. ' line' → logprob: -3.0485877990722656
    3. ' ' → logprob: -16.048587799072266
    4. 'lin' → logprob: -16.173587799072266
    5. '	line' → logprob: -16.798587799072266
    6. '#line' → logprob: -17.173587799072266
    7. '
' → logprob: -17.173587799072266
    8. 'li' → logprob: -17.798587799072266
    9. '(line' → logprob: -17.923587799072266
    10. 'l' → logprob: -18.173587799072266

Token 295: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5804389715194702
    2. ':
' → logprob: -0.8304389715194702
    3. ' or' → logprob: -5.58043909072876
    4. ':return' → logprob: -8.080438613891602
    5. '.startswith' → logprob: -9.330438613891602
    6. 'or' → logprob: -9.455438613891602
    7. '=' → logprob: -10.455438613891602
    8. '():
' → logprob: -10.705438613891602
    9. '==' → logprob: -10.830438613891602
    10. '.' → logprob: -10.955438613891602

Token 296: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00013369438238441944
    2. '       ' → logprob: -9.500133514404297
    3. ' break' → logprob: -10.125133514404297
    4. '	break' → logprob: -11.875133514404297
    5. '   ' → logprob: -12.750133514404297
    6. '    ' → logprob: -13.125133514404297
    7. ',' → logprob: -13.500133514404297
    8. '    
' → logprob: -13.875133514404297
    9. ' ' → logprob: -13.875133514404297
    10. ':' → logprob: -14.000133514404297

Token 297: ' continue' (ID: 4901)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.38755542039871216
    2. ' break' → logprob: -1.1375553607940674
    3. 'continue' (adapté à ' continue') → logprob: -7.8875555992126465
    4. '   ' → logprob: -8.387555122375488
    5. ' continue' → logprob: -9.512555122375488
    6. '	break' → logprob: -11.887555122375488
    7. ' ' → logprob: -15.637555122375488
    8. '```' → logprob: -17.262556076049805
    9. '  ' → logprob: -17.637556076049805
    10. '       ' → logprob: -17.887556076049805

Token 298: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009725863113999367
    2. '    
' → logprob: -5.759726047515869
    3. ' parts' → logprob: -6.009726047515869
    4. 'state' → logprob: -7.134726047515869
    5. 'input' → logprob: -7.384726047515869
    6. '
' → logprob: -7.509726047515869
    7. 'tokens' → logprob: -8.009725570678711
    8. ' input' → logprob: -8.259725570678711
    9. 'parts' → logprob: -8.384725570678711
    10. ' state' → logprob: -8.384725570678711

Token 299: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0014565435703843832
    2. 'tokens' → logprob: -7.2514567375183105
    3. '    
' → logprob: -8.001456260681152
    4. 'input' → logprob: -8.876456260681152
    5. 'state' → logprob: -9.626456260681152
    6. ' parts' → logprob: -10.001456260681152
    7. 'parts' → logprob: -10.126456260681152
    8. ' tokens' → logprob: -10.251456260681152
    9. '
' → logprob: -11.001456260681152
    10. ' input' → logprob: -11.376456260681152

Token 300: ' cards' (ID: 10541)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.07752335071563721
    2. 'nums' → logprob: -3.5775232315063477
    3. 'p' → logprob: -4.577523231506348
    4. 'arr' → logprob: -5.077523231506348
    5. 'initial' → logprob: -5.077523231506348
    6. 'state' → logprob: -5.202523231506348
    7. 'board' → logprob: -5.327523231506348
    8. 'tiles' → logprob: -5.452523231506348
    9. 'numbers' → logprob: -5.702523231506348
    10. 'parts' → logprob: -5.827523231506348

Token 301: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.576166033744812
    2. ' =' → logprob: -0.826166033744812
    3. '=line' → logprob: -8.701166152954102
    4. '=list' → logprob: -9.826166152954102
    5. '=int' → logprob: -13.201166152954102
    6. '=input' → logprob: -13.451166152954102
    7. '=[]' → logprob: -13.701166152954102
    8. '=[' → logprob: -14.201166152954102
    9. ' =[' → logprob: -15.576166152954102
    10. '＝' → logprob: -16.0761661529541

Token 302: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.009182185865938663
    2. ' list' → logprob: -5.009181976318359
    3. 'line' → logprob: -6.509181976318359
    4. '[line' → logprob: -7.509181976318359
    5. '[list' → logprob: -7.884181976318359
    6. '[' → logprob: -10.25918197631836
    7. ' line' → logprob: -11.88418197631836
    8. ' [' → logprob: -13.00918197631836
    9. 'tuple' → logprob: -13.50918197631836
    10. '[int' → logprob: -14.13418197631836

Token 303: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -1.0325924449716695e-05
    2. 'map' → logprob: -12.00001049041748
    3. '(' → logprob: -12.50001049041748
    4. '(int' → logprob: -15.50001049041748
    5. '
' → logprob: -18.000009536743164
    6. ' map' → logprob: -18.000009536743164
    7. '	map' → logprob: -18.125009536743164
    8. '(
' → logprob: -18.875009536743164
    9. ',map' → logprob: -19.000009536743164
    10. '()' → logprob: -19.125009536743164

Token 304: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0007373234839178622
    2. 'int' → logprob: -7.250737190246582
    3. ',int' → logprob: -10.875737190246582
    4. '(' → logprob: -13.250737190246582
    5. '(str' → logprob: -13.500737190246582
    6. '=int' → logprob: -13.625737190246582
    7. ' int' → logprob: -13.750737190246582
    8. ']int' → logprob: -14.000737190246582
    9. ')' → logprob: -14.125737190246582
    10. 'str' → logprob: -14.875737190246582

Token 305: ',line' (ID: 171132)
  Prédit: ',line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',line' → logprob: -0.11369706690311432
    2. ',' → logprob: -2.863697052001953
    3. '(line' → logprob: -2.988697052001953
    4. ' ,' → logprob: -10.363697052001953
    5. '(' → logprob: -11.738697052001953
    6. '#line' → logprob: -12.113697052001953
    7. '[line' → logprob: -12.488697052001953
    8. ',(' → logprob: -12.488697052001953
    9. '=line' → logprob: -12.863697052001953
    10. '	line' → logprob: -13.363697052001953

Token 306: '.split' (ID: 10347)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.025748249143362045
    2. '.split' → logprob: -3.7757482528686523
    3. '.' → logprob: -6.275748252868652
    4. '.strip' → logprob: -7.525748252868652
    5. ' .' → logprob: -9.650748252868652
    6. '()' → logprob: -12.025748252868652
    7. 'split' → logprob: -12.150748252868652
    8. ' ().' → logprob: -13.775748252868652
    9. '.readline' → logprob: -14.400748252868652
    10. '.rstrip' → logprob: -14.650748252868652

Token 307: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.01874714531004429
    2. '()' → logprob: -4.768747329711914
    3. '))' → logprob: -5.018747329711914
    4. '()))
' → logprob: -6.518747329711914
    5. '())))' → logprob: -6.893747329711914
    6. '(' → logprob: -7.768747329711914
    7. '())' → logprob: -7.768747329711914
    8. ')))' → logprob: -9.768747329711914
    9. '('' → logprob: -11.018747329711914
    10. '())))
' → logprob: -11.143747329711914

Token 308: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5234894156455994
    2. 'print' → logprob: -0.8984894156455994
    3. ' print' → logprob: -8.148488998413086
    4. '```' → logprob: -10.523488998413086
    5. 'result' → logprob: -10.773488998413086
    6. '    
' → logprob: -10.898488998413086
    7. '
' → logprob: -13.148488998413086
    8. 'answer' → logprob: -13.523488998413086
    9. '``' → logprob: -13.523488998413086
    10. '	print' → logprob: -14.148488998413086

Token 309: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.027214184403419495
    2. ' print' → logprob: -3.652214288711548
    3. '   ' → logprob: -7.277214050292969
    4. 'result' → logprob: -8.777214050292969
    5. 'res' → logprob: -10.277214050292969
    6. ' result' → logprob: -10.902214050292969
    7. 'steps' → logprob: -11.777214050292969
    8. '    
' → logprob: -13.277214050292969
    9. 'moves' → logprob: -13.277214050292969
    10. ' res' → logprob: -13.902214050292969

Token 310: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -5.061676347395405e-05
    2. '(' → logprob: -10.37505054473877
    3. 'b' → logprob: -10.87505054473877
    4. '(len' → logprob: -15.75005054473877
    5. ' bfs' → logprob: -16.000051498413086
    6. ' (' → logprob: -16.125051498413086
    7. '(
' → logprob: -17.750051498413086
    8. ')b' → logprob: -18.375051498413086
    9. '((' → logprob: -18.500051498413086
    10. '(B' → logprob: -19.375051498413086

Token 311: 'fs' (ID: 6469)
  Prédit: 'fs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fs' → logprob: -1.0280383548888494e-06
    2. 'sf' → logprob: -14.375000953674316
    3. 'FS' → logprob: -16.125001907348633
    4. '(fs' → logprob: -16.125001907348633
    5. 's' → logprob: -16.500001907348633
    6. 'f' → logprob: -17.875001907348633
    7. '(' → logprob: -18.125001907348633
    8. ' fs' → logprob: -18.750001907348633
    9. '(f' → logprob: -19.750001907348633
    10. '(s' → logprob: -19.875001907348633

Token 312: '(cards' (ID: 161529)
  Prédit: '(cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cards' → logprob: -9.088346359931165e-07
    2. '(card' → logprob: -14.625000953674316
    3. '(' → logprob: -15.125000953674316
    4. ')' → logprob: -15.875000953674316
    5. '/cards' → logprob: -17.125
    6. ')(' → logprob: -17.375
    7. ' (' → logprob: -19.0
    8. '((' → logprob: -19.125
    9. '(cart' → logprob: -19.375
    10. 'cards' → logprob: -19.375

Token 313: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.006716317031532526
    2. ')' → logprob: -5.006716251373291
    3. ')))' → logprob: -14.25671672821045
    4. '))
' → logprob: -15.50671672821045
    5. ' ))' → logprob: -16.506715774536133
    6. '()))' → logprob: -17.256715774536133
    7. '})' → logprob: -18.256715774536133
    8. ')
' → logprob: -18.881715774536133
    9. '),' → logprob: -19.006715774536133
    10. '())' → logprob: -19.256715774536133


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 311
Tokens correctement prédits (1ère position, stricte): 175
Tokens correctement prédits (1ère position, avec adaptation): 187
Tokens correctement prédits (top 10): 289
Précision stricte (1ère position): 56.27%
Précision adaptée (1ère position): 60.13%
Précision (top 10): 92.93%
================================================================================
