================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:17:52
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class TextProcessorInterface:
    def process(self, text: str) -> str:
        raise NotImplementedError("Subclasses should implement this!")

class WordReplacer(TextProcessorInterface):
    def __init__(self, target: str, replacement: str):
        self._target = target
        self._replacement = replacement
    
    def process(self, text: str) -> str:
        # Sophisticated replacement logic anticipating future rules:
        words = text.split(' ')
        replaced_words = []
        for word in words:
            # Potential future extension for case sensitivity or partial matches
            if word == self._target:
                replaced_words.append(self._replacement)
            else:
                replaced_words.append(word)
        return ' '.join(replaced_words)

class DatasetHandler:
    def __init__(self, processor: TextProcessorInterface):
        self._processor = processor
        self._datasets = []

    def load(self, count: int, lines: list[str]):
        if count != len(lines):
            raise ValueError("Number of lines does not match count")
        self._datasets = lines

    def apply_processing(self) -> list[str]:
        results = []
        for data in self._datasets:
            processed = self._processor.process(data)
            results.append(processed)
        return results

class InputOutputController:
    def __init__(self, handler: DatasetHandler):
        self._handler = handler

    def execute(self):
        n = int(input())
        datasets = [input() for _ in range(n)]
        self._handler.load(n, datasets)
        outputs = self._handler.apply_processing()
        for line in outputs:
            print(line)

def main():
    replacer = WordReplacer("Hoshino", "Hoshina")
    handler = DatasetHandler(replacer)
    controller = InputOutputController(handler)
    controller.execute()

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Text' (ID: 4564)
  → Token d'amorce (pas de prédiction)

Token 2: 'Processor' (ID: 22334)
  → Token d'amorce (pas de prédiction)

Token 3: 'Interface' (ID: 7078)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5153019428253174
    2. '.' → logprob: -1.5153019428253174
    3. '(' → logprob: -1.8903019428253174
    4. '{' → logprob: -3.5153019428253174
    5. ' {' → logprob: -7.515301704406738
    6. '```' → logprob: -7.515301704406738
    7. '[' → logprob: -8.015301704406738
    8. ' .' → logprob: -8.390301704406738
    9. ' ' → logprob: -8.640301704406738
    10. ' :' → logprob: -9.390301704406738

Token 4: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07285601645708084
    2. '(' → logprob: -2.9478559494018555
    3. '{' → logprob: -4.0728559494018555
    4. '.' → logprob: -7.6978559494018555
    5. '(:' → logprob: -8.822855949401855
    6. ' {' → logprob: -9.572855949401855
    7. ' :' → logprob: -9.822855949401855
    8. '```' → logprob: -11.447855949401855
    9. '[' → logprob: -11.697855949401855
    10. ':
' → logprob: -11.947855949401855

Token 5: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.45961329340934753
    2. '```' → logprob: -1.70961332321167
    3. ':
' → logprob: -2.45961332321167
    4. '   ' → logprob: -2.95961332321167
    5. '(' → logprob: -3.45961332321167
    6. '.' → logprob: -4.95961332321167
    7. '(
' → logprob: -6.08461332321167
    8. '
' → logprob: -6.08461332321167
    9. '().' → logprob: -6.70961332321167
    10. '    
' → logprob: -6.70961332321167

Token 6: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31368300318717957
    2. ' pass' → logprob: -1.438683032989502
    3. '```' → logprob: -4.188683032989502
    4. 'pass' → logprob: -5.188683032989502
    5. '    ' → logprob: -6.063683032989502
    6. '\n' → logprob: -6.438683032989502
    7. ' def' → logprob: -6.438683032989502
    8. '<|end|>' → logprob: -6.813683032989502
    9. '(pass' → logprob: -7.313683032989502
    10. ' ' → logprob: -7.438683032989502

Token 7: ' process' (ID: 2273)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02756701596081257
    2. ' process' → logprob: -4.152566909790039
    3. ' ' → logprob: -5.027566909790039
    4. '<|end|>' → logprob: -6.277566909790039
    5. 'process' → logprob: -7.152566909790039
    6. ' tokenize' → logprob: -8.027566909790039
    7. ' def' → logprob: -9.027566909790039
    8. '    ' → logprob: -9.027566909790039
    9. ' a' → logprob: -9.152566909790039
    10. '  ' → logprob: -9.402566909790039

Token 8: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.41016849875450134
    2. '_' → logprob: -1.4101685285568237
    3. '(self' → logprob: -3.160168409347534
    4. '_text' → logprob: -4.035168647766113
    5. '_token' → logprob: -4.160168647766113
    6. ' (' → logprob: -4.535168647766113
    7. '<|end|>' → logprob: -5.910168647766113
    8. ' ' → logprob: -7.410168647766113
    9. '(process' → logprob: -8.410168647766113
    10. '(text' → logprob: -8.660168647766113

Token 9: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03096073493361473
    2. '):' → logprob: -3.65596079826355
    3. ')' → logprob: -5.530960559844971
    4. 'self' → logprob: -8.530961036682129
    5. '.' → logprob: -9.405961036682129
    6. ' ,' → logprob: -9.530961036682129
    7. ',text' → logprob: -9.530961036682129
    8. '   ' → logprob: -9.655961036682129
    9. '):
' → logprob: -10.030961036682129
    10. '_text' → logprob: -10.030961036682129

Token 10: ' text' (ID: 2201)
  Prédit: ' text'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' text' → logprob: -0.24336393177509308
    2. ' self' → logprob: -1.7433639764785767
    3. 'text' → logprob: -3.743363857269287
    4. 'self' → logprob: -4.243363857269287
    5. ' input' → logprob: -6.868363857269287
    6. ' data' → logprob: -6.993363857269287
    7. ' )' → logprob: -7.743363857269287
    8. ')' → logprob: -7.743363857269287
    9. 'data' → logprob: -9.243364334106445
    10. 'input' → logprob: -9.993364334106445

Token 11: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0028527823742479086
    2. ')' → logprob: -6.627852916717529
    3. ':' → logprob: -6.627852916717529
    4. ',' → logprob: -9.252852439880371
    5. '):
' → logprob: -10.002852439880371
    6. ' ):' → logprob: -10.502852439880371
    7. '   ' → logprob: -11.127852439880371
    8. 'self' → logprob: -12.252852439880371
    9. '       ' → logprob: -12.377852439880371
    10. '_text' → logprob: -14.127852439880371

Token 12: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.008738546632230282
    2. 'str' → logprob: -4.7587385177612305
    3. ')' → logprob: -9.25873851776123
    4. ' )' → logprob: -10.88373851776123
    5. ' text' → logprob: -12.63373851776123
    6. '[str' → logprob: -13.38373851776123
    7. ':str' → logprob: -13.50873851776123
    8. 'text' → logprob: -14.00873851776123
    9. '	str' → logprob: -14.50873851776123
    10. ' ' → logprob: -14.50873851776123

Token 13: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.315936429426074e-05
    2. '):' → logprob: -10.000082969665527
    3. ')->' → logprob: -10.750082969665527
    4. ' )' → logprob: -11.250082969665527
    5. '`)' → logprob: -13.625082969665527
    6. '   ' → logprob: -13.625082969665527
    7. '')' → logprob: -15.375082969665527
    8. '):
' → logprob: -15.750082969665527
    9. '")' → logprob: -16.125083923339844
    10. '->' → logprob: -16.875083923339844

Token 14: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4815818667411804
    2. ':' → logprob: -1.9815819263458252
    3. '->' → logprob: -1.9815819263458252
    4. ' ->' → logprob: -2.606581926345825
    5. ')->' → logprob: -3.731581926345825
    6. '   ' → logprob: -4.981581687927246
    7. '):' → logprob: -7.356581687927246
    8. '       ' → logprob: -7.481581687927246
    9. ' )->' → logprob: -8.981581687927246
    10. ' )' → logprob: -9.606581687927246

Token 15: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.015924684703350067
    2. 'str' → logprob: -4.515924453735352
    3. ' None' → logprob: -5.390924453735352
    4. 'None' → logprob: -8.390924453735352
    5. ' ' → logprob: -9.890924453735352
    6. ' List' → logprob: -12.140924453735352
    7. ' int' → logprob: -12.390924453735352
    8. ' Any' → logprob: -12.640924453735352
    9. '   ' → logprob: -13.140924453735352
    10. 'Any' → logprob: -13.140924453735352

Token 16: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00016063073417171836
    2. ':
' → logprob: -9.125160217285156
    3. ':return' → logprob: -10.500160217285156
    4. '<|end|>' → logprob: -11.750160217285156
    5. '   ' → logprob: -12.250160217285156
    6. '):' → logprob: -13.375160217285156
    7. '```' → logprob: -13.500160217285156
    8. '():' → logprob: -13.500160217285156
    9. ':void' → logprob: -13.625160217285156
    10. '       ' → logprob: -13.750160217285156

Token 17: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05493023991584778
    2. '\n' → logprob: -3.9299302101135254
    3. '<|end|>' → logprob: -3.9299302101135254
    4. '   ' → logprob: -5.179930210113525
    5. '
' → logprob: -5.429930210113525
    6. ' 
' → logprob: -6.929930210113525
    7. ' pass' → logprob: -6.929930210113525
    8. '        
' → logprob: -7.554930210113525
    9. '    
' → logprob: -8.304930686950684
    10. '\r' → logprob: -8.304930686950684

Token 18: ' raise' (ID: 9338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01187902595847845
    2. 'pass' → logprob: -4.886878967285156
    3. 'raise' (adapté à ' raise') → logprob: -5.636878967285156
    4. ' raise' → logprob: -8.136878967285156
    5. '...' → logprob: -8.886878967285156
    6. '           ' → logprob: -9.261878967285156
    7. '   ' → logprob: -9.761878967285156
    8. '```' → logprob: -9.886878967285156
    9. ' pass' → logprob: -10.261878967285156
    10. '#' → logprob: -11.886878967285156

Token 19: ' Not' (ID: 4037)
  Prédit: ' Not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Not' → logprob: -0.043024081736803055
    2. 'Not' → logprob: -3.1680240631103516
    3. '_Not' → logprob: -11.793024063110352
    4. '@Not' → logprob: -12.418024063110352
    5. ' not' → logprob: -13.043024063110352
    6. '_not' → logprob: -13.168024063110352
    7. '(Not' → logprob: -13.168024063110352
    8. '<|end|>' → logprob: -13.168024063110352
    9. '...' → logprob: -13.293024063110352
    10. ' ' → logprob: -13.918024063110352

Token 20: 'Implemented' (ID: 42030)
  Prédit: 'Implemented'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Implemented' → logprob: -0.0003467865171842277
    2. 'Found' → logprob: -8.375347137451172
    3. 'implemented' → logprob: -9.875347137451172
    4. 'ed' → logprob: -10.250347137451172
    5. 'ot' → logprob: -11.250347137451172
    6. 'Implement' → logprob: -12.625347137451172
    7. 'Founded' → logprob: -13.125347137451172
    8. 'ated' → logprob: -13.375347137451172
    9. 'ified' → logprob: -13.500347137451172
    10. 'Defined' → logprob: -13.500347137451172

Token 21: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -6.704273118884885e-07
    2. 'rror' → logprob: -14.500000953674316
    3. 'Erro' → logprob: -17.875
    4. 'error' → logprob: -18.0
    5. '```' → logprob: -18.375
    6. 'Er' → logprob: -18.375
    7. 'ed' → logprob: -18.75
    8. ' Error' → logprob: -19.0
    9. 'E' → logprob: -19.75
    10. 'er' → logprob: -20.0

Token 22: '("' (ID: 568)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4172651469707489
    2. '<|end|>' → logprob: -1.4172651767730713
    3. '```' → logprob: -3.7922651767730713
    4. '' → logprob: -3.9172651767730713
    5. '\n' → logprob: -4.042264938354492
    6. '.' → logprob: -4.542264938354492
    7. '

' → logprob: -4.792264938354492
    8. '<|end|>' → logprob: -5.167264938354492
    9. 'newline' → logprob: -5.917264938354492
    10. 'class' → logprob: -6.167264938354492

Token 23: 'Sub' (ID: 3638)
  Prédit: 'Process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Process' → logprob: -0.4670551121234894
    2. 'Implement' → logprob: -2.092055082321167
    3. 'process' → logprob: -2.342055082321167
    4. '")' → logprob: -2.467055082321167
    5. ')' → logprob: -3.842055082321167
    6. 'Processing' → logprob: -4.217055320739746
    7. 'Subclass' → logprob: -4.217055320739746
    8. 'This' → logprob: -5.342055320739746
    9. ' process' → logprob: -5.717055320739746
    10. 'Must' → logprob: -5.967055320739746

Token 24: 'classes' (ID: 17233)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.021666504442691803
    2. 'classes' → logprob: -3.8966665267944336
    3. '<class' → logprob: -8.146666526794434
    4. '   ' → logprob: -8.396666526794434
    5. 'c' → logprob: -8.771666526794434
    6. ' class' → logprob: -9.646666526794434
    7. 'clas' → logprob: -9.646666526794434
    8. 'lass' → logprob: -9.896666526794434
    9. '```' → logprob: -10.021666526794434
    10. 'cls' → logprob: -10.021666526794434

Token 25: ' should' (ID: 1757)
  Prédit: ' must'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' must' → logprob: -0.023544883355498314
    2. ' should' → logprob: -3.7735447883605957
    3. ' need' → logprob: -9.398545265197754
    4. ' ' → logprob: -9.773545265197754
    5. 'must' → logprob: -10.023545265197754
    6. ' are' → logprob: -10.273545265197754
    7. '<|end|>' → logprob: -11.023545265197754
    8. ' have' → logprob: -11.023545265197754
    9. '    ' → logprob: -11.523545265197754
    10. '   ' → logprob: -12.023545265197754

Token 26: ' implement' (ID: 6365)
  Prédit: ' implement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' implement' → logprob: -0.0016429269453510642
    2. 'implement' → logprob: -6.50164270401001
    3. ' override' → logprob: -9.751643180847168
    4. 'Implement' → logprob: -9.876643180847168
    5. ' provide' → logprob: -11.001643180847168
    6. 'override' → logprob: -11.751643180847168
    7. ' implementar' → logprob: -13.751643180847168
    8. '_IMPLEMENT' → logprob: -13.751643180847168
    9. ' Implement' → logprob: -14.251643180847168
    10. 'provide' → logprob: -14.251643180847168

Token 27: ' this' (ID: 495)
  Prédit: ' this'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' this' → logprob: -0.031597800552845
    2. ' process' → logprob: -3.531597852706909
    3. ' the' → logprob: -6.40659761428833
    4. 'process' → logprob: -8.906598091125488
    5. 'this' → logprob: -9.906598091125488
    6. ' ' → logprob: -12.281598091125488
    7. ' their' → logprob: -13.531598091125488
    8. ' `' → logprob: -14.031598091125488
    9. '.process' → logprob: -14.406598091125488
    10. ' method' → logprob: -14.656598091125488

Token 28: '!")

' (ID: 169327)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.06426434218883514
    2. ' method' → logprob: -2.8142642974853516
    3. '.")' → logprob: -7.064264297485352
    4. '!")' → logprob: -7.439264297485352
    5. ' ")' → logprob: -8.564264297485352
    6. 'method' → logprob: -8.939264297485352
    7. '")
' → logprob: -9.314264297485352
    8. '"' → logprob: -9.689264297485352
    9. ' class' → logprob: -9.814264297485352
    10. ')' → logprob: -9.814264297485352

Token 29: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03810655325651169
    2. 'class' → logprob: -3.6631064414978027
    3. '

' → logprob: -4.788106441497803
    4. '<|end|>' → logprob: -6.913106441497803
    5. '' → logprob: -7.413106441497803
    6. '\n' → logprob: -7.663106441497803
    7. '```' → logprob: -8.413106918334961
    8. ' 
' → logprob: -8.538106918334961
    9. '   ' → logprob: -8.913106918334961
    10. '    
' → logprob: -9.038106918334961

Token 30: ' Word' (ID: 10503)
  Prédit: ' Text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Text' → logprob: -0.1823170930147171
    2. ' ' → logprob: -2.932317018508911
    3. ' Basic' → logprob: -3.057317018508911
    4. ' Token' → logprob: -3.432317018508911
    5. ' ' → logprob: -4.55731725692749
    6. ' Space' → logprob: -5.43231725692749
    7. ' Lower' → logprob: -5.80731725692749
    8. 'Text' → logprob: -6.43231725692749
    9. ' Sent' → logprob: -6.43231725692749
    10. ' Concrete' → logprob: -6.80731725692749

Token 31: 'Re' (ID: 720)
  Prédit: 'Processor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Processor' → logprob: -0.3350973129272461
    2. 'Counter' → logprob: -1.335097312927246
    3. 'Count' → logprob: -4.210097312927246
    4. 'Filter' → logprob: -5.585097312927246
    5. 'Tokenizer' → logprob: -6.710097312927246
    6. 'Splitter' → logprob: -7.585097312927246
    7. 'Transformer' → logprob: -7.960097312927246
    8. 'Extractor' → logprob: -8.335097312927246
    9. 'Converter' → logprob: -9.085097312927246
    10. 'Normalizer' → logprob: -9.210097312927246

Token 32: 'placer' (ID: 58807)
  Prédit: 'placer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'placer' → logprob: -0.003650795202702284
    2. 'placement' → logprob: -6.378650665283203
    3. 'vers' → logprob: -6.503650665283203
    4. 'place' → logprob: -8.128650665283203
    5. 'pl' → logprob: -9.878650665283203
    6. 'f' → logprob: -10.878650665283203
    7. 'pla' → logprob: -11.128650665283203
    8. 'placing' → logprob: -11.253650665283203
    9. 's' → logprob: -11.378650665283203
    10. 'plac' → logprob: -11.628650665283203

Token 33: '(Text' (ID: 54915)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4621585011482239
    2. '(Text' → logprob: -1.587158441543579
    3. ':' → logprob: -1.837158441543579
    4. '(Target' → logprob: -6.212158679962158
    5. '(T' → logprob: -7.087158679962158
    6. '(Base' → logprob: -7.587158679962158
    7. '(Abstract' → logprob: -7.837158679962158
    8. '(Task' → logprob: -8.087158203125
    9. '```' → logprob: -8.087158203125
    10. '(Exception' → logprob: -8.462158203125

Token 34: 'Processor' (ID: 22334)
  Prédit: 'Processor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Processor' → logprob: -0.16049930453300476
    2. 'Re' → logprob: -1.9104993343353271
    3. 'Replacement' → logprob: -9.160499572753906
    4. 'Replace' → logprob: -9.660499572753906
    5. 'Replacing' → logprob: -9.910499572753906
    6. 'R' → logprob: -11.285499572753906
    7. 'Recognizer' → logprob: -11.660499572753906
    8. 'Transformer' → logprob: -12.035499572753906
    9. ' ' → logprob: -12.410499572753906
    10. '   ' → logprob: -12.785499572753906

Token 35: 'Interface' (ID: 7078)
  Prédit: 'Interface'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Interface' → logprob: -0.0008531087078154087
    2. '):' → logprob: -7.125853061676025
    3. 'er' → logprob: -11.500853538513184
    4. ' Interface' → logprob: -11.500853538513184
    5. '):
' → logprob: -11.750853538513184
    6. ')' → logprob: -11.875853538513184
    7. 'Inter' → logprob: -12.500853538513184
    8. 'interface' → logprob: -12.750853538513184
    9. '   ' → logprob: -13.000853538513184
    10. '```' → logprob: -14.250853538513184

Token 36: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00011450992315076292
    2. ')' → logprob: -9.500114440917969
    3. '):
' → logprob: -11.000114440917969
    4. ':' → logprob: -11.375114440917969
    5. ',' → logprob: -11.875114440917969
    6. ' ):' → logprob: -12.625114440917969
    7. '   ' → logprob: -14.750114440917969
    8. '):

' → logprob: -15.500114440917969
    9. '):
' → logprob: -15.625114440917969
    10. '),' → logprob: -16.75011444091797

Token 37: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11129968613386154
    2. ':' → logprob: -2.861299753189087
    3. '
' → logprob: -4.111299514770508
    4. ':
' → logprob: -4.111299514770508
    5. '    
' → logprob: -4.986299514770508
    6. '    ' → logprob: -6.111299514770508
    7. '(' → logprob: -6.361299514770508
    8. ' def' → logprob: -7.236299514770508
    9. '  
' → logprob: -7.236299514770508
    10. '<|end|>' → logprob: -7.861299514770508

Token 38: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.040337733924388885
    2. '   ' → logprob: -3.2903378009796143
    3. '    ' → logprob: -6.665337562561035
    4. 'def' (adapté à ' def') → logprob: -6.915337562561035
    5. ' ' → logprob: -11.415337562561035
    6. '```' → logprob: -12.665337562561035
    7. ' __' → logprob: -13.040337562561035
    8. '   ' → logprob: -13.415337562561035
    9. '    
' → logprob: -13.665337562561035
    10. ' indentation' → logprob: -14.040337562561035

Token 39: ' __' (ID: 2516)
  Prédit: ' process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' process' → logprob: -0.14263969659805298
    2. ' __' → logprob: -2.392639636993408
    3. ' ' → logprob: -3.267639636993408
    4. ' replace' → logprob: -6.142639636993408
    5. ' ' → logprob: -7.892639636993408
    6. 'process' → logprob: -7.892639636993408
    7. ' def' → logprob: -8.017640113830566
    8. ' _' → logprob: -9.267640113830566
    9. '__' → logprob: -10.267640113830566
    10. ' init' → logprob: -10.642640113830566

Token 40: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.6240566083070007e-06
    2. ' init' → logprob: -13.750001907348633
    3. 'ini' → logprob: -14.750001907348633
    4. 'in' → logprob: -17.750001907348633
    5. '	init' → logprob: -18.250001907348633
    6. '   ' → logprob: -18.500001907348633
    7. ' ' → logprob: -18.750001907348633
    8. '_init' → logprob: -18.750001907348633
    9. '  ' → logprob: -19.125001907348633
    10. '```' → logprob: -19.250001907348633

Token 41: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.1461167186498642
    2. '__(' → logprob: -2.1461167335510254
    3. ' (' → logprob: -4.021116733551025
    4. '(' → logprob: -7.646116733551025
    5. '<|end|>' → logprob: -8.396116256713867
    6. ' self' → logprob: -9.396116256713867
    7. ')(' → logprob: -9.771116256713867
    8. '__(
' → logprob: -9.896116256713867
    9. ' ' → logprob: -10.021116256713867
    10. 'self' → logprob: -10.146116256713867

Token 42: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.20142756402492523
    2. ' self' → logprob: -1.7014275789260864
    3. ')' → logprob: -12.326427459716797
    4. ',' → logprob: -13.076427459716797
    5. ' ' → logprob: -13.451427459716797
    6. ' )' → logprob: -13.451427459716797
    7. '       ' → logprob: -13.951427459716797
    8. '   ' → logprob: -14.201427459716797
    9. 'text' → logprob: -14.451427459716797
    10. 'replace' → logprob: -14.701427459716797

Token 43: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11226733028888702
    2. ' ,' → logprob: -2.487267255783081
    3. 'self' → logprob: -4.36226749420166
    4. ' self' → logprob: -5.11226749420166
    5. ' ' → logprob: -5.86226749420166
    6. ' )' → logprob: -7.61226749420166
    7. ')' → logprob: -7.86226749420166
    8. ',self' → logprob: -8.98726749420166
    9. '(self' → logprob: -9.61226749420166
    10. 'text' → logprob: -9.73726749420166

Token 44: ' target' (ID: 3783)
  Prédit: ' old'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' old' → logprob: -0.4444501996040344
    2. ' replacement' → logprob: -2.1944501399993896
    3. ' replacements' → logprob: -2.3194501399993896
    4. 'old' → logprob: -2.4444501399993896
    5. 'replacement' → logprob: -3.5694501399993896
    6. ' word' → logprob: -4.569450378417969
    7. ' original' → logprob: -5.069450378417969
    8. 'replace' → logprob: -5.444450378417969
    9. ' target' → logprob: -5.694450378417969
    10. ' replace' → logprob: -5.819450378417969

Token 45: ':' (ID: 25)
  Prédit: '_word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_word' → logprob: -0.20192721486091614
    2. ',' → logprob: -1.7019271850585938
    3. ' ,' → logprob: -8.076927185058594
    4. ':' → logprob: -9.576927185058594
    5. '_words' → logprob: -9.826927185058594
    6. '_text' → logprob: -11.076927185058594
    7. '_' → logprob: -11.201927185058594
    8. 'word' → logprob: -11.326927185058594
    9. '_token' → logprob: -11.451927185058594
    10. '_,' → logprob: -11.576927185058594

Token 46: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.008821733295917511
    2. 'str' → logprob: -4.758821964263916
    3. ' ' → logprob: -8.758821487426758
    4. ')' → logprob: -10.758821487426758
    5. ' )' → logprob: -10.883821487426758
    6. ':str' → logprob: -12.758821487426758
    7. '<|end|>' → logprob: -13.258821487426758
    8. '	str' → logprob: -13.508821487426758
    9. '(str' → logprob: -13.758821487426758
    10. 's' → logprob: -14.133821487426758

Token 47: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2113979209971149e-05
    2. ' ,' → logprob: -11.375012397766113
    3. '<|end|>' → logprob: -15.500012397766113
    4. '‌,' → logprob: -16.000011444091797
    5. ')' → logprob: -16.250011444091797
    6. '):' → logprob: -17.250011444091797
    7. '<|end|>' → logprob: -17.375011444091797
    8. ',
' → logprob: -18.000011444091797
    9. '   ' → logprob: -18.625011444091797
    10. '),' → logprob: -18.875011444091797

Token 48: ' replacement' (ID: 19207)
  Prédit: ' replacement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' replacement' → logprob: -0.34883391857147217
    2. 'replacement' → logprob: -1.2238339185714722
    3. 'replace' → logprob: -8.473834037780762
    4. ' ' → logprob: -9.848834037780762
    5. ' replace' → logprob: -10.098834037780762
    6. '<|end|>' → logprob: -10.223834037780762
    7. ' replacements' → logprob: -11.473834037780762
    8. 're' → logprob: -11.473834037780762
    9. ' )' → logprob: -12.223834037780762
    10. ' repl' → logprob: -12.473834037780762

Token 49: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009195066057145596
    2. '):' → logprob: -4.759194850921631
    3. ':str' → logprob: -8.134195327758789
    4. ')' → logprob: -8.259195327758789
    5. ' ):' → logprob: -11.009195327758789
    6. ' :' → logprob: -12.009195327758789
    7. '):
' → logprob: -13.134195327758789
    8. ',' → logprob: -14.134195327758789
    9. ' ' → logprob: -14.759195327758789
    10. ' )' → logprob: -14.759195327758789

Token 50: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.04878629371523857
    2. 'str' → logprob: -3.0487864017486572
    3. ' ' → logprob: -8.923786163330078
    4. ')' → logprob: -9.923786163330078
    5. ' )' → logprob: -12.048786163330078
    6. '[str' → logprob: -12.798786163330078
    7. '	str' → logprob: -13.048786163330078
    8. '=str' → logprob: -13.298786163330078
    9. ':str' → logprob: -13.423786163330078
    10. '(str' → logprob: -13.923786163330078

Token 51: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0007513784803450108
    2. ')' → logprob: -7.250751495361328
    3. '):
' → logprob: -10.500751495361328
    4. ':' → logprob: -12.000751495361328
    5. ',' → logprob: -12.875751495361328
    6. '   ' → logprob: -12.875751495361328
    7. ' ):' → logprob: -13.125751495361328
    8. '):
' → logprob: -15.125751495361328
    9. ' ' → logprob: -16.125751495361328
    10. '       ' → logprob: -16.875751495361328

Token 52: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007974773179739714
    2. '   ' → logprob: -8.000797271728516
    3. 'self' → logprob: -8.250797271728516
    4. ' self' → logprob: -9.375797271728516
    5. '<|end|>' → logprob: -10.375797271728516
    6. ')' → logprob: -10.750797271728516
    7. '    ' → logprob: -10.750797271728516
    8. '      ' → logprob: -11.750797271728516
    9. ' ' → logprob: -11.875797271728516
    10. '        ' → logprob: -12.500797271728516

Token 53: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.7617318034172058
    2. '       ' → logprob: -1.2617318630218506
    3. ' self' → logprob: -1.3867318630218506
    4. '   ' → logprob: -10.63673210144043
    5. 'super' → logprob: -10.76173210144043
    6. ' ' → logprob: -11.38673210144043
    7. ' super' → logprob: -11.63673210144043
    8. '_self' → logprob: -11.88673210144043
    9. '	self' → logprob: -12.51173210144043
    10. ' ' → logprob: -12.51173210144043

Token 54: '._' (ID: 2697)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.009062051773071289
    2. '.target' → logprob: -4.759061813354492
    3. ' .' → logprob: -7.759061813354492
    4. ' ' → logprob: -11.134061813354492
    5. 'target' → logprob: -13.509061813354492
    6. '.targets' → logprob: -13.759061813354492
    7. '.Target' → logprob: -13.884061813354492
    8. '._' → logprob: -14.759061813354492
    9. '.user' → logprob: -15.009061813354492
    10. ' target' → logprob: -15.134061813354492

Token 55: 'target' (ID: 10857)
  Prédit: 'target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -4.246537173457909e-06
    2. 't' → logprob: -13.500003814697266
    3. '_target' → logprob: -13.875003814697266
    4. '	target' → logprob: -14.375003814697266
    5. ' target' → logprob: -14.750003814697266
    6. 'tar' → logprob: -15.250003814697266
    7. 'taget' → logprob: -15.750003814697266
    8. '(target' → logprob: -15.875003814697266
    9. 'ta' → logprob: -16.250003814697266
    10. '[target' → logprob: -16.375003814697266

Token 56: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.003201004583388567
    2. '=' → logprob: -5.753201007843018
    3. ' ' → logprob: -11.00320053100586
    4. '<|end|>' → logprob: -12.62820053100586
    5. ',' → logprob: -13.25320053100586
    6. ')' → logprob: -14.37820053100586
    7. ' =
' → logprob: -14.87820053100586
    8. ' ,' → logprob: -15.87820053100586
    9. ' =)' → logprob: -16.00320053100586
    10. ' )' → logprob: -16.50320053100586

Token 57: ' target' (ID: 3783)
  Prédit: ' target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' target' → logprob: -0.25193166732788086
    2. 'target' → logprob: -1.5019316673278809
    3. '	target' → logprob: -13.626932144165039
    4. '(target' → logprob: -14.001932144165039
    5. '_target' → logprob: -15.751932144165039
    6. '[target' → logprob: -16.12693214416504
    7. ' ' → logprob: -16.25193214416504
    8. ',target' → logprob: -17.12693214416504
    9. '.target' → logprob: -17.25193214416504
    10. 'Target' → logprob: -17.62693214416504

Token 58: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 59: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2136213481426239
    2. '<|end|>' → logprob: -1.8386213779449463
    3. '
' → logprob: -3.5886213779449463
    4. 'self' → logprob: -5.838621139526367
    5. '        
' → logprob: -6.838621139526367
    6. ' 
' → logprob: -7.338621139526367
    7. ' self' → logprob: -7.963621139526367
    8. '<|end|>' → logprob: -8.588621139526367
    9. '    
' → logprob: -9.213621139526367
    10. '  
' → logprob: -9.338621139526367

Token 60: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.26060980558395386
    2. ' self' → logprob: -1.5106098651885986
    3. '       ' → logprob: -4.8856096267700195
    4. ' ' → logprob: -7.5106096267700195
    5. ' 
' → logprob: -8.88560962677002
    6. '
' → logprob: -9.13560962677002
    7. '        ' → logprob: -9.13560962677002
    8. '        
' → logprob: -9.63560962677002
    9. '<|end|>' → logprob: -11.01060962677002
    10. '    ' → logprob: -11.26060962677002

Token 61: '._' (ID: 2697)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 62: 'replacement' (ID: 193546)
  Prédit: 'replacement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'replacement' → logprob: -6.2729995988775045e-06
    2. ' replacement' → logprob: -12.000006675720215
    3. 're' → logprob: -17.1250057220459
    4. ' ' → logprob: -18.0000057220459
    5. 'replace' → logprob: -18.5000057220459
    6. 'Replacement' → logprob: -18.6250057220459
    7. '  ' → logprob: -19.7500057220459
    8. 'rep' → logprob: -20.7500057220459
    9. '   ' → logprob: -20.8750057220459
    10. '_re' → logprob: -21.5000057220459

Token 63: ' =' (ID: 314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2807631492614746
    2. '=' → logprob: -2.1557631492614746
    3. ' =' → logprob: -2.2807631492614746
    4. '<|end|>' → logprob: -4.405763149261475
    5. ')' → logprob: -4.655763149261475
    6. ' )' → logprob: -6.030763149261475
    7. '_' → logprob: -6.655763149261475
    8. '  ' → logprob: -8.155763626098633
    9. '    ' → logprob: -8.155763626098633
    10. '<|end|>' → logprob: -8.780763626098633

Token 64: ' replacement' (ID: 19207)
  Prédit: ' replacement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' replacement' → logprob: -0.048590436577796936
    2. 'replacement' → logprob: -3.0485904216766357
    3. ' ' → logprob: -12.798590660095215
    4. 'Replacement' → logprob: -16.4235897064209
    5. 're' → logprob: -16.5485897064209
    6. ' ' → logprob: -16.5485897064209
    7. '  ' → logprob: -18.5485897064209
    8. ' Replacement' → logprob: -19.5485897064209
    9. '   ' → logprob: -19.6735897064209
    10. 'replace' → logprob: -19.7985897064209

Token 65: '
    
' (ID: 15698)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.035995740443468094
    2. '<|end|>' → logprob: -3.5359957218170166
    3. '   ' → logprob: -6.410995960235596
    4. '    
' → logprob: -6.410995960235596
    5. '  
' → logprob: -6.785995960235596
    6. '<|end|>' → logprob: -6.910995960235596
    7. ' 
' → logprob: -7.785995960235596
    8. '

' → logprob: -9.035995483398438
    9. 'def' → logprob: -9.160995483398438
    10. '```' → logprob: -10.285995483398438

Token 66: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04203176125884056
    2. ' def' → logprob: -3.667031764984131
    3. '   ' → logprob: -4.167031764984131
    4. '	def' → logprob: -9.167031288146973
    5. ' ' → logprob: -13.292031288146973
    6. '       ' → logprob: -14.167031288146973
    7. '  ' → logprob: -14.167031288146973
    8. '    
' → logprob: -14.417031288146973
    9. '
' → logprob: -14.542031288146973
    10. '<|end|>' → logprob: -14.667031288146973

Token 67: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00020354038861114532
    2. ' def' → logprob: -8.500203132629395
    3. '   ' → logprob: -17.25020408630371
    4. ' ' → logprob: -20.37520408630371
    5. '	def' → logprob: -20.50020408630371
    6. 'Def' → logprob: -20.62520408630371
    7. '```' → logprob: -20.75020408630371
    8. '
' → logprob: -21.62520408630371
    9. 'super' → logprob: -21.62520408630371
    10. 'de' → logprob: -21.87520408630371

Token 68: ' process' (ID: 2273)
  Prédit: ' process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' process' → logprob: -5.371605948312208e-05
    2. 'process' → logprob: -9.875053405761719
    3. ' ' → logprob: -13.250053405761719
    4. ' proces' → logprob: -15.000053405761719
    5. '	process' → logprob: -16.12505340576172
    6. '_process' → logprob: -17.12505340576172
    7. ' replace' → logprob: -17.25005340576172
    8. ' def' → logprob: -18.00005340576172
    9. '.process' → logprob: -19.37505340576172
    10. ' ' → logprob: -19.37505340576172

Token 69: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0008089098846539855
    2. '(' → logprob: -7.1258087158203125
    3. ' (' → logprob: -12.500808715820312
    4. '   ' → logprob: -15.500808715820312
    5. 'self' → logprob: -15.625808715820312
    6. '(text' → logprob: -15.750808715820312
    7. '(
' → logprob: -15.750808715820312
    8. ' self' → logprob: -17.125808715820312
    9. '_text' → logprob: -17.125808715820312
    10. '       ' → logprob: -17.750808715820312

Token 70: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011903966515092179
    2. ' ,' → logprob: -9.12511920928955
    3. 'self' → logprob: -11.75011920928955
    4. ',text' → logprob: -13.37511920928955
    5. ',self' → logprob: -15.12511920928955
    6. 'text' → logprob: -15.75011920928955
    7. ')' → logprob: -16.750118255615234
    8. ' self' → logprob: -16.750118255615234
    9. 's' → logprob: -17.375118255615234
    10. '   ' → logprob: -17.500118255615234

Token 71: ' text' (ID: 2201)
  Prédit: ' text'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' text' → logprob: -0.029757777228951454
    2. 'text' → logprob: -3.5297577381134033
    3. ' self' → logprob: -12.279757499694824
    4. '       ' → logprob: -14.154757499694824
    5. '   ' → logprob: -14.279757499694824
    6. 'self' → logprob: -14.279757499694824
    7. '	text' → logprob: -15.904757499694824
    8. '{text' → logprob: -16.15475845336914
    9. ' ' → logprob: -16.40475845336914
    10. ' texto' → logprob: -16.65475845336914

Token 72: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00300444639287889
    2. '):' → logprob: -5.878004550933838
    3. ':str' → logprob: -8.87800407409668
    4. ' :' → logprob: -10.50300407409668
    5. ' ):' → logprob: -10.75300407409668
    6. ')' → logprob: -11.75300407409668
    7. '):
' → logprob: -12.87800407409668
    8. '   ' → logprob: -15.00300407409668
    9. '):

' → logprob: -15.75300407409668
    10. ' )' → logprob: -15.87800407409668

Token 73: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.0030071772634983063
    2. 'str' → logprob: -5.878007411956787
    3. ')' → logprob: -9.003006935119629
    4. ' ' → logprob: -9.628006935119629
    5. '"' → logprob: -12.128006935119629
    6. ' )' → logprob: -13.378006935119629
    7. ':str' → logprob: -13.753006935119629
    8. ' "' → logprob: -13.878006935119629
    9. 's' → logprob: -14.253006935119629
    10. '(str' → logprob: -14.503006935119629

Token 74: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.4894986785948277e-05
    2. ' )' → logprob: -10.125044822692871
    3. '):' → logprob: -12.500044822692871
    4. '   ' → logprob: -14.500044822692871
    5. ')->' → logprob: -15.250044822692871
    6. '`)' → logprob: -15.500044822692871
    7. ':' → logprob: -16.500045776367188
    8. '')' → logprob: -18.000045776367188
    9. '):
' → logprob: -18.000045776367188
    10. '")' → logprob: -18.375045776367188

Token 75: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010823313146829605
    2. ' ->' → logprob: -4.8858232498168945
    3. '->' → logprob: -6.3858232498168945
    4. ')' → logprob: -7.0108232498168945
    5. ')->' → logprob: -7.6358232498168945
    6. '):' → logprob: -9.510823249816895
    7. ':return' → logprob: -10.510823249816895
    8. '   ' → logprob: -10.760823249816895
    9. ':
' → logprob: -11.635823249816895
    10. '       ' → logprob: -12.385823249816895

Token 76: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.0024827925954014063
    2. 'str' → logprob: -6.002482891082764
    3. ' ' → logprob: -12.127482414245605
    4. ' ' → logprob: -14.627482414245605
    5. '	str' → logprob: -14.752482414245605
    6. '[str' → logprob: -15.502482414245605
    7. 's' → logprob: -15.752482414245605
    8. ' text' → logprob: -16.002483367919922
    9. '```' → logprob: -16.127483367919922
    10. '(str' → logprob: -16.377483367919922

Token 77: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000769009639043361
    2. '):' → logprob: -7.375769138336182
    3. ':
' → logprob: -9.125768661499023
    4. ':return' → logprob: -10.625768661499023
    5. '       ' → logprob: -12.375768661499023
    6. ' :' → logprob: -13.250768661499023
    7. '():' → logprob: -13.875768661499023
    8. ':**' → logprob: -14.250768661499023
    9. '):
' → logprob: -14.875768661499023
    10. '>:' → logprob: -14.875768661499023

Token 78: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005785869900137186
    2. ' return' → logprob: -5.255785942077637
    3. 'return' → logprob: -7.505785942077637
    4. '        
' → logprob: -14.505785942077637
    5. '{return' → logprob: -15.380785942077637
    6. '   ' → logprob: -15.505785942077637
    7. '```' → logprob: -15.505785942077637
    8. '           ' → logprob: -16.00578498840332
    9. '
' → logprob: -16.13078498840332
    10. ':return' → logprob: -16.38078498840332

Token 79: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.20570451021194458
    2. ' return' → logprob: -1.7057044506072998
    3. '       ' → logprob: -5.455704689025879
    4. 'text' → logprob: -11.830704689025879
    5. '	return' → logprob: -13.955704689025879
    6. ' text' → logprob: -14.080704689025879
    7. '```' → logprob: -14.330704689025879
    8. 'eturn' → logprob: -15.830704689025879
    9. '        
' → logprob: -16.455703735351562
    10. ':return' → logprob: -16.580703735351562

Token 80: ' Soph' (ID: 44483)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.39144423604011536
    2. ' return' → logprob: -1.141444206237793
    3. '       ' → logprob: -5.391444206237793
    4. '   ' → logprob: -12.516444206237793
    5. ' if' → logprob: -13.766444206237793
    6. '	return' → logprob: -14.266444206237793
    7. '```' → logprob: -14.641444206237793
    8. ' ' → logprob: -15.391444206237793
    9. 'if' → logprob: -15.391444206237793
    10. 'eturn' → logprob: -15.641444206237793

Token 81: 'isticated' (ID: 33986)
  Prédit: 'isticated'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isticated' → logprob: -0.16249637305736542
    2. 'ist' → logprob: -1.9124963283538818
    3. '       ' → logprob: -6.912496566772461
    4. 'istic' → logprob: -7.537496566772461
    5. '   ' → logprob: -7.912496566772461
    6. 't' → logprob: -8.912496566772461
    7. 'it' → logprob: -9.537496566772461
    8. 'st' → logprob: -10.162496566772461
    9. 'on' → logprob: -10.162496566772461
    10. '```' → logprob: -10.912496566772461

Token 82: ' replacement' (ID: 19207)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.02506115287542343
    2. 'return' → logprob: -3.9000611305236816
    3. '       ' → logprob: -6.150061130523682
    4. ' text' → logprob: -6.650061130523682
    5. ' result' → logprob: -7.525061130523682
    6. ' replacement' → logprob: -8.65006160736084
    7. '.replace' → logprob: -9.65006160736084
    8. 'result' → logprob: -10.15006160736084
    9. ' replace' → logprob: -10.27506160736084
    10. 'text' → logprob: -10.40006160736084

Token 83: ' logic' (ID: 18485)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.031421761959791183
    2. ' =' → logprob: -4.656421661376953
    3. ' return' → logprob: -4.656421661376953
    4. 'return' → logprob: -4.906421661376953
    5. '<|end|>' → logprob: -6.531421661376953
    6. '<|end|>' → logprob: -6.656421661376953
    7. ':' → logprob: -8.156421661376953
    8. '.replace' → logprob: -8.156421661376953
    9. '=' → logprob: -8.531421661376953
    10. ',' → logprob: -8.656421661376953

Token 84: ' anticipating' (ID: 136423)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028537888079881668
    2. ' return' → logprob: -4.403537750244141
    3. 'return' → logprob: -5.028537750244141
    4. '<|end|>' → logprob: -5.153537750244141
    5. '
' → logprob: -7.153537750244141
    6. '        
' → logprob: -7.153537750244141
    7. '<|end|>' → logprob: -7.278537750244141
    8. ',' → logprob: -8.02853775024414
    9. ':return' → logprob: -8.40353775024414
    10. ':' → logprob: -8.77853775024414

Token 85: ' future' (ID: 5277)
  Prédit: ' word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' word' → logprob: -1.150928258895874
    2. ' multiple' → logprob: -1.775928258895874
    3. ' edge' → logprob: -2.025928258895874
    4. ' the' → logprob: -2.525928258895874
    5. ' future' → logprob: -3.400928258895874
    6. ' potential' → logprob: -3.775928258895874
    7. ' text' → logprob: -3.775928258895874
    8. ' possible' → logprob: -3.775928258895874
    9. ' whole' → logprob: -3.900928258895874
    10. ' cases' → logprob: -4.025928497314453

Token 86: ' rules' (ID: 9607)
  Prédit: ' use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' use' → logprob: -0.985406219959259
    2. ' needs' → logprob: -1.8604061603546143
    3. ' changes' → logprob: -2.7354061603546143
    4. '   ' → logprob: -2.9854061603546143
    5. ' enhancements' → logprob: -2.9854061603546143
    6. ' uses' → logprob: -3.2354061603546143
    7. ' requirements' → logprob: -3.2354061603546143
    8. ' versions' → logprob: -3.6104061603546143
    9. ' occurrences' → logprob: -3.7354061603546143
    10. ' scenarios' → logprob: -3.8604061603546143

Token 87: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001796204480342567
    2. ' return' → logprob: -6.876796245574951
    3. 'return' → logprob: -7.376796245574951
    4. '<|end|>' → logprob: -9.751795768737793
    5. '        
' → logprob: -10.251795768737793
    6. ',' → logprob: -11.751795768737793
    7. '<|end|>' → logprob: -12.001795768737793
    8. ')' → logprob: -12.001795768737793
    9. '
' → logprob: -12.126795768737793
    10. ':return' → logprob: -12.501795768737793

Token 88: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06556728482246399
    2. ' return' → logprob: -3.1905672550201416
    3. 'return' → logprob: -3.8155672550201416
    4. '        
' → logprob: -9.690567016601562
    5. 'result' → logprob: -9.815567016601562
    6. '```' → logprob: -10.440567016601562
    7. ' tokens' → logprob: -10.565567016601562
    8. '        ' → logprob: -10.940567016601562
    9. ' if' → logprob: -11.065567016601562
    10. ' result' → logprob: -11.065567016601562

Token 89: ' words' (ID: 6391)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3668675124645233
    2. ' return' → logprob: -2.1168675422668457
    3. '       ' → logprob: -2.2418675422668457
    4. 'result' → logprob: -3.3668675422668457
    5. 'import' → logprob: -3.9918675422668457
    6. ' words' → logprob: -4.616867542266846
    7. ' result' → logprob: -5.116867542266846
    8. 'words' (adapté à ' words') → logprob: -5.116867542266846
    9. ' import' → logprob: -6.366867542266846
    10. ' tokens' → logprob: -6.616867542266846

Token 90: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0003403495065867901
    2. '=' → logprob: -8.000340461730957
    3. '_' → logprob: -13.625340461730957
    4. ' ' → logprob: -14.125340461730957
    5. ',' → logprob: -14.500340461730957
    6. '=[]' → logprob: -14.750340461730957
    7. '   ' → logprob: -15.000340461730957
    8. 's' → logprob: -15.500340461730957
    9. '[]' → logprob: -15.500340461730957
    10. '[' → logprob: -15.937840461730957

Token 91: ' text' (ID: 2201)
  Prédit: ' text'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' text' → logprob: -0.005239683669060469
    2. 'text' → logprob: -5.255239486694336
    3. '	text' → logprob: -12.380239486694336
    4. '[' → logprob: -14.880239486694336
    5. ' []' → logprob: -15.130239486694336
    6. '[text' → logprob: -15.380239486694336
    7. '[]' → logprob: -15.505239486694336
    8. '.text' → logprob: -15.880239486694336
    9. ' [' → logprob: -16.255239486694336
    10. '       ' → logprob: -16.755239486694336

Token 92: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.2467409372329712
    2. '.' → logprob: -1.6217409372329712
    3. ' .' → logprob: -3.8717408180236816
    4. '.replace' → logprob: -8.37174129486084
    5. '().' → logprob: -10.49674129486084
    6. '.strip' → logprob: -11.99674129486084
    7. '.s' → logprob: -12.24674129486084
    8. '.rstrip' → logprob: -12.87174129486084
    9. '.Split' → logprob: -13.49674129486084
    10. 'split' → logprob: -13.62174129486084

Token 93: '('' (ID: 706)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0818847119808197
    2. '('' → logprob: -2.5818846225738525
    3. '("' → logprob: -5.956884860992432
    4. '(' → logprob: -7.831884860992432
    5. ' ()' → logprob: -12.831884384155273
    6. '())' → logprob: -14.206884384155273
    7. ''' → logprob: -14.706884384155273
    8. '()
' → logprob: -14.831884384155273
    9. '()"' → logprob: -14.831884384155273
    10. '()

' → logprob: -15.581884384155273

Token 94: ' ')
' (ID: 49195)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.37440088391304016
    2. ' ')' → logprob: -1.6244008541107178
    3. '')' → logprob: -2.4994008541107178
    4. ' )' → logprob: -3.9994008541107178
    5. ' ')
' → logprob: -4.374401092529297
    6. ')
' → logprob: -7.124401092529297
    7. '')
' → logprob: -7.499401092529297
    8. ' )
' → logprob: -8.374401092529297
    9. ' ' → logprob: -8.874401092529297
    10. ''' → logprob: -8.874401092529297

Token 95: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.034708451479673386
    2. 'result' → logprob: -3.7847084999084473
    3. 'return' → logprob: -6.034708499908447
    4. '
' → logprob: -6.409708499908447
    5. '        
' → logprob: -6.409708499908447
    6. 'output' → logprob: -6.659708499908447
    7. ' new' → logprob: -7.159708499908447
    8. 'new' → logprob: -7.409708499908447
    9. ' result' → logprob: -7.534708499908447
    10. ')' → logprob: -7.659708499908447

Token 96: ' replaced' (ID: 21009)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.7239729762077332
    2. 'for' → logprob: -1.098973035812378
    3. ' for' → logprob: -2.223973035812378
    4. '       ' → logprob: -3.598973035812378
    5. 'return' → logprob: -3.973973035812378
    6. 'processed' → logprob: -4.473972797393799
    7. ' result' → logprob: -4.723972797393799
    8. 'new' → logprob: -5.598972797393799
    9. ' return' → logprob: -6.598972797393799
    10. ' new' → logprob: -6.973972797393799

Token 97: '_words' (ID: 45077)
  Prédit: '_words'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_words' → logprob: -0.006870121695101261
    2. ' =' → logprob: -5.881870269775391
    3. 'ed' → logprob: -6.131870269775391
    4. '_text' → logprob: -6.506870269775391
    5. '=' → logprob: -8.25687026977539
    6. 'words' → logprob: -10.13187026977539
    7. 'd' → logprob: -10.25687026977539
    8. '_tokens' → logprob: -11.13187026977539
    9. '_' → logprob: -11.25687026977539
    10. 's' → logprob: -11.75687026977539

Token 98: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023279372602701187
    2. '=' → logprob: -3.7732794284820557
    3. '=[]' → logprob: -10.398279190063477
    4. ' =[' → logprob: -13.523279190063477
    5. '[:]' → logprob: -14.898279190063477
    6. ' ' → logprob: -15.023279190063477
    7. '[]' → logprob: -15.023279190063477
    8. '=[' → logprob: -15.273279190063477
    9. '=[]
' → logprob: -15.273279190063477
    10. '[' → logprob: -15.398279190063477

Token 99: ' []
' (ID: 8911)
  Prédit: '[word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[word' → logprob: -0.7262114882469177
    2. '[]' → logprob: -1.2262115478515625
    3. '[' → logprob: -1.7262115478515625
    4. '[
' → logprob: -3.7262115478515625
    5. ' [' → logprob: -4.8512115478515625
    6. '[w' → logprob: -4.9762115478515625
    7. ' []' → logprob: -6.2262115478515625
    8. '[token' → logprob: -6.3512115478515625
    9. '[self' → logprob: -6.4762115478515625
    10. ' [
' → logprob: -8.601211547851562

Token 100: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27190977334976196
    2. ' for' → logprob: -1.7719097137451172
    3. '<|end|>' → logprob: -3.396909713745117
    4. 'for' → logprob: -3.896909713745117
    5. ' ' → logprob: -4.896909713745117
    6. '        ' → logprob: -5.896909713745117
    7. '   ' → logprob: -6.646909713745117
    8. '    ' → logprob: -7.271909713745117
    9. '<|end|>' → logprob: -7.896909713745117
    10. '        
' → logprob: -8.021909713745117

Token 101: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5866227149963379
    2. 'for' (adapté à ' for') → logprob: -0.8366227149963379
    3. '       ' → logprob: -4.586622714996338
    4. ' ' → logprob: -8.58662223815918
    5. '        ' → logprob: -9.33662223815918
    6. '   ' → logprob: -9.71162223815918
    7. '    ' → logprob: -10.21162223815918
    8. '        
' → logprob: -10.83662223815918
    9. ' 
' → logprob: -11.21162223815918
    10. '	for' → logprob: -11.33662223815918

Token 102: ' word' (ID: 2195)
  Prédit: ' word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' word' → logprob: -0.026997210457921028
    2. 'word' → logprob: -3.7769973278045654
    3. ' w' → logprob: -5.651997089385986
    4. 'w' → logprob: -8.526997566223145
    5. ' words' → logprob: -11.026997566223145
    6. '	word' → logprob: -11.151997566223145
    7. '[word' → logprob: -13.026997566223145
    8. 'words' → logprob: -14.151997566223145
    9. '(word' → logprob: -14.276997566223145
    10. ' i' → logprob: -14.776997566223145

Token 103: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0025741136632859707
    2. 'in' → logprob: -6.0025739669799805
    3. ' ' → logprob: -9.50257396697998
    4. ',' → logprob: -11.50257396697998
    5. '<|end|>' → logprob: -12.00257396697998
    6. '<|end|>' → logprob: -12.75257396697998
    7. '	in' → logprob: -14.00257396697998
    8. '_in' → logprob: -14.25257396697998
    9. '  ' → logprob: -14.50257396697998
    10. 's' → logprob: -14.62757396697998

Token 104: ' words' (ID: 6391)
  Prédit: 'words'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'words' → logprob: -0.16023580729961395
    2. ' words' → logprob: -1.9102357625961304
    3. '(words' → logprob: -11.535235404968262
    4. '.words' → logprob: -14.035235404968262
    5. '   ' → logprob: -14.910235404968262
    6. '_words' → logprob: -14.910235404968262
    7. '       ' → logprob: -16.035236358642578
    8. ' ' → logprob: -16.285236358642578
    9. 'word' → logprob: -16.535236358642578
    10. '    ' → logprob: -17.535236358642578

Token 105: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06250904500484467
    2. ':
' → logprob: -2.812509059906006
    3. '):
' → logprob: -8.562508583068848
    4. '<|end|>' → logprob: -8.687508583068848
    5. ',' → logprob: -9.312508583068848
    6. '<|end|>' → logprob: -9.937508583068848
    7. '):' → logprob: -11.312508583068848
    8. '       ' → logprob: -11.937508583068848
    9. ':

' → logprob: -12.312508583068848
    10. '           ' → logprob: -12.562508583068848

Token 106: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006688972003757954
    2. ' if' → logprob: -5.131689071655273
    3. 'if' → logprob: -7.631689071655273
    4. '            ' → logprob: -8.631689071655273
    5. '        ' → logprob: -10.631689071655273
    6. '       ' → logprob: -10.881689071655273
    7. '<|end|>' → logprob: -11.381689071655273
    8. '            
' → logprob: -11.631689071655273
    9. '          ' → logprob: -11.756689071655273
    10. '```' → logprob: -11.881689071655273

Token 107: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7329837083816528
    2. ' if' → logprob: -1.2329837083816528
    3. '           ' → logprob: -1.4829837083816528
    4. 're' → logprob: -7.357983589172363
    5. '            ' → logprob: -8.607983589172363
    6. '               ' → logprob: -8.607983589172363
    7. ' replaced' → logprob: -9.982983589172363
    8. '```' → logprob: -10.607983589172363
    9. '        ' → logprob: -11.232983589172363
    10. '            
' → logprob: -11.357983589172363

Token 108: ' Potential' (ID: 74397)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.043267156928777695
    2. ' if' → logprob: -3.168267250061035
    3. '           ' → logprob: -8.543267250061035
    4. 're' → logprob: -10.168267250061035
    5. '       ' → logprob: -11.043267250061035
    6. ' replaced' → logprob: -12.418267250061035
    7. 'clean' → logprob: -13.043267250061035
    8. 'If' → logprob: -13.293267250061035
    9. '```' → logprob: -13.293267250061035
    10. 'lower' → logprob: -13.418267250061035

Token 109: ' future' (ID: 5277)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6711002588272095
    2. 'ly' → logprob: -1.9211002588272095
    3. ' modifications' → logprob: -2.54610013961792
    4. ' punctuation' → logprob: -3.17110013961792
    5. ' logic' → logprob: -3.29610013961792
    6. 'if' → logprob: -3.29610013961792
    7. ' future' → logprob: -3.29610013961792
    8. ' for' → logprob: -4.67110013961792
    9. ' edge' → logprob: -4.67110013961792
    10. ' improvements' → logprob: -5.29610013961792

Token 110: ' extension' (ID: 15369)
  Prédit: ' enhancements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' enhancements' → logprob: -0.3616170883178711
    2. ' expansions' → logprob: -2.986617088317871
    3. ' improvements' → logprob: -3.361617088317871
    4. ' modifications' → logprob: -3.486617088317871
    5. ' logic' → logprob: -3.611617088317871
    6. ' conditions' → logprob: -3.736617088317871
    7. ' refin' → logprob: -3.986617088317871
    8. ' extensions' → logprob: -3.986617088317871
    9. ' rules' → logprob: -3.986617088317871
    10. ' enhancement' → logprob: -4.111617088317871

Token 111: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.027839383110404015
    2. ' if' → logprob: -4.402839183807373
    3. '<|end|>' → logprob: -4.652839183807373
    4. '<|end|>' → logprob: -6.527839183807373
    5. '       ' → logprob: -6.652839183807373
    6. ' to' → logprob: -7.152839183807373
    7. ':' → logprob: -7.402839183807373
    8. 'if' → logprob: -7.527839183807373
    9. '        ' → logprob: -8.402839660644531
    10. '            ' → logprob: -8.527839660644531

Token 112: ' case' (ID: 1890)
  Prédit: ' word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' word' → logprob: -0.23717807233333588
    2. 'word' → logprob: -1.737178087234497
    3. 'pun' → logprob: -4.862177848815918
    4. 'case' → logprob: -5.237177848815918
    5. ' case' → logprob: -5.362177848815918
    6. ' punctuation' → logprob: -5.862177848815918
    7. ' self' → logprob: -6.237177848815918
    8. ' complex' → logprob: -6.362177848815918
    9. 'self' → logprob: -6.737177848815918
    10. ' handling' → logprob: -6.862177848815918

Token 113: ' sensitivity' (ID: 41301)
  Prédit: '-ins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-ins' → logprob: -0.4939618408679962
    2. '_ins' → logprob: -1.2439618110656738
    3. '_sensitive' → logprob: -3.118961811065674
    4. ' insensitive' → logprob: -3.868961811065674
    5. 's' → logprob: -3.993961811065674
    6. 'ins' → logprob: -4.743961811065674
    7. '   ' → logprob: -6.368961811065674
    8. '-' → logprob: -6.493961811065674
    9. ' -' → logprob: -6.868961811065674
    10. '-sensitive' → logprob: -7.118961811065674

Token 114: ' or' (ID: 503)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1009058803319931
    2. '<|end|>' → logprob: -2.7259058952331543
    3. ' and' → logprob: -3.9759058952331543
    4. ' if' → logprob: -5.475905895233154
    5. '<|end|>' → logprob: -5.600905895233154
    6. '            ' → logprob: -6.850905895233154
    7. ',' → logprob: -7.100905895233154
    8. ' or' → logprob: -7.475905895233154
    9. '       ' → logprob: -7.850905895233154
    10. '        ' → logprob: -8.350905418395996

Token 115: ' partial' (ID: 13664)
  Prédit: ' other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -1.5834847688674927
    2. ' regex' → logprob: -1.7084847688674927
    3. ' whole' → logprob: -1.8334847688674927
    4. ' punctuation' → logprob: -2.083484649658203
    5. ' partial' → logprob: -2.208484649658203
    6. ' pattern' → logprob: -2.958484649658203
    7. 'regex' → logprob: -3.458484649658203
    8. 'pun' → logprob: -3.583484649658203
    9. ' exact' → logprob: -3.833484649658203
    10. ' special' → logprob: -4.083484649658203

Token 116: ' matches' (ID: 15248)
  Prédit: ' matches'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' matches' → logprob: -0.22129413485527039
    2. ' matching' → logprob: -2.4712941646575928
    3. ' replacements' → logprob: -3.3462941646575928
    4. ' replacement' → logprob: -3.8462941646575928
    5. ' match' → logprob: -3.9712941646575928
    6. 'matches' → logprob: -3.9712941646575928
    7. '_matches' → logprob: -4.846293926239014
    8. 'match' → logprob: -5.596293926239014
    9. 'replacement' → logprob: -5.596293926239014
    10. '_match' → logprob: -6.596293926239014

Token 117: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009246804984286427
    2. '<|end|>' → logprob: -7.125924587249756
    3. '<|end|>' → logprob: -10.250925064086914
    4. '            ' → logprob: -10.375925064086914
    5. ' if' → logprob: -10.750925064086914
    6. '          ' → logprob: -11.875925064086914
    7. ',' → logprob: -12.125925064086914
    8. '            
' → logprob: -12.250925064086914
    9. '        ' → logprob: -12.500925064086914
    10. '       ' → logprob: -12.750925064086914

Token 118: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003884894831571728
    2. '<|end|>' → logprob: -8.500388145446777
    3. ' if' → logprob: -9.375388145446777
    4. '<|end|>' → logprob: -10.750388145446777
    5. '            
' → logprob: -11.000388145446777
    6. '            ' → logprob: -11.125388145446777
    7. '       ' → logprob: -11.250388145446777
    8. '          ' → logprob: -11.500388145446777
    9. '        ' → logprob: -12.250388145446777
    10. ',' → logprob: -12.375388145446777

Token 119: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5950340032577515
    2. '           ' → logprob: -0.8450340032577515
    3. ' if' → logprob: -3.970034122467041
    4. 're' → logprob: -10.720033645629883
    5. '       ' → logprob: -11.470033645629883
    6. '               ' → logprob: -13.345033645629883
    7. '          ' → logprob: -13.595033645629883
    8. '            ' → logprob: -13.595033645629883
    9. ' replaced' → logprob: -13.720033645629883
    10. '```' → logprob: -14.345033645629883

Token 120: ' word' (ID: 2195)
  Prédit: ' word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' word' → logprob: -0.002813078695908189
    2. 'word' → logprob: -5.87781286239624
    3. ' self' → logprob: -12.627813339233398
    4. '	word' → logprob: -12.752813339233398
    5. '(word' → logprob: -13.752813339233398
    6. 'self' → logprob: -14.627813339233398
    7. '[word' → logprob: -15.627813339233398
    8. '.word' → logprob: -16.0028133392334
    9. '_word' → logprob: -16.1278133392334
    10. '    ' → logprob: -16.7528133392334

Token 121: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.06196869537234306
    2. '==' → logprob: -2.8119688034057617
    3. '=' → logprob: -14.936968803405762
    4. '.lower' → logprob: -15.561968803405762
    5. ' =' → logprob: -16.186967849731445
    6. ')==' → logprob: -16.311967849731445
    7. '===' → logprob: -16.436967849731445
    8. ']==' → logprob: -16.936967849731445
    9. '==
' → logprob: -17.061967849731445
    10. ' ' → logprob: -17.061967849731445

Token 122: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.20141646265983582
    2. ' self' → logprob: -1.7014164924621582
    3. '(self' → logprob: -13.826416015625
    4. '	self' → logprob: -13.826416015625
    5. '_self' → logprob: -15.201416015625
    6. '=self' → logprob: -15.701416015625
    7. '[self' → logprob: -16.076416015625
    8. ' ' → logprob: -16.326416015625
    9. 'Self' → logprob: -16.451416015625
    10. '$self' → logprob: -16.451416015625

Token 123: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -2.935296834039036e-06
    2. '.' → logprob: -13.50000286102295
    3. ')._' → logprob: -14.87500286102295
    4. ' .' → logprob: -15.12500286102295
    5. ']._' → logprob: -15.50000286102295
    6. '."_' → logprob: -15.87500286102295
    7. '->_' → logprob: -16.125003814697266
    8. ' ' → logprob: -16.375003814697266
    9. '.__' → logprob: -16.500003814697266

Token 124: 'target' (ID: 10857)
  Prédit: 'target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -1.3856492842023727e-06
    2. '_target' → logprob: -14.250000953674316
    3. ' target' → logprob: -14.750000953674316
    4. 'replacement' → logprob: -16.625001907348633
    5. '	target' → logprob: -16.750001907348633
    6. '.target' → logprob: -16.750001907348633
    7. '(target' → logprob: -17.000001907348633
    8. '[target' → logprob: -17.250001907348633
    9. 'arget' → logprob: -17.250001907348633
    10. '   ' → logprob: -17.750001907348633

Token 125: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20183926820755005
    2. ':
' → logprob: -1.7018392086029053
    3. '):
' → logprob: -8.076839447021484
    4. '):' → logprob: -9.326839447021484
    5. '<|end|>' → logprob: -11.576839447021484
    6. ':return' → logprob: -12.326839447021484
    7. ':

' → logprob: -12.701839447021484
    8. ')' → logprob: -13.326839447021484
    9. ':
' → logprob: -13.451839447021484
    10. '<|end|>' → logprob: -13.451839447021484

Token 126: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.024853486567735672
    2. 're' → logprob: -4.024853706359863
    3. ' replaced' → logprob: -5.274853706359863
    4. '           ' → logprob: -6.899853706359863
    5. '                
' → logprob: -8.649853706359863
    6. 'replacement' → logprob: -8.774853706359863
    7. '              ' → logprob: -9.899853706359863
    8. '<|end|>' → logprob: -10.649853706359863
    9. '                ' → logprob: -10.899853706359863
    10. '                   ' → logprob: -11.274853706359863

Token 127: ' replaced' (ID: 21009)
  Prédit: ' replaced'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' replaced' → logprob: -0.30017411708831787
    2. 're' → logprob: -2.0501742362976074
    3. 'self' → logprob: -2.1751742362976074
    4. ' self' → logprob: -4.175174236297607
    5. '           ' → logprob: -7.175174236297607
    6. '               ' → logprob: -7.675174236297607
    7. 'replacement' → logprob: -8.67517375946045
    8. '                   ' → logprob: -8.92517375946045
    9. '            ' → logprob: -10.55017375946045
    10. ' replacement' → logprob: -11.17517375946045

Token 128: '_words' (ID: 45077)
  Prédit: '_words'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_words' → logprob: -2.339278580620885e-06
    2. 'ed' → logprob: -13.875001907348633
    3. '_word' → logprob: -14.250001907348633
    4. '_' → logprob: -15.500001907348633
    5. '_w' → logprob: -15.875001907348633
    6. 'words' → logprob: -16.500001907348633
    7. '```' → logprob: -16.500001907348633
    8. 'd' → logprob: -16.750001907348633
    9. '"_' → logprob: -16.875001907348633
    10. '_tokens' → logprob: -17.250001907348633

Token 129: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -9.65101717156358e-05
    2. '.' → logprob: -9.250096321105957
    3. '.app' → logprob: -15.750096321105957
    4. ' .' → logprob: -16.375097274780273
    5. '.ap' → logprob: -16.750097274780273
    6. 'append' → logprob: -17.125097274780273
    7. '.Append' → logprob: -18.250097274780273
    8. '.extend' → logprob: -18.625097274780273
    9. '.push' → logprob: -19.500097274780273
    10. '_append' → logprob: -20.125097274780273

Token 130: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0001290454383706674
    2. '(' → logprob: -9.000128746032715
    3. 'self' → logprob: -12.125128746032715
    4. ' (' → logprob: -16.00012969970703
    5. ' self' → logprob: -16.50012969970703
    6. '(
' → logprob: -18.12512969970703
    7. '(f' → logprob: -20.12512969970703
    8. '(this' → logprob: -20.37512969970703
    9. '[self' → logprob: -20.50012969970703
    10. '('' → logprob: -20.87512969970703

Token 131: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -3.8889261304575484e-06
    2. '.' → logprob: -13.250003814697266
    3. ')._' → logprob: -14.375003814697266
    4. ' .' → logprob: -14.875003814697266
    5. '_' → logprob: -15.125003814697266
    6. ']._' → logprob: -15.250003814697266
    7. '_re' → logprob: -15.500003814697266
    8. '."_' → logprob: -15.500003814697266
    9. '->_' → logprob: -17.375003814697266
    10. '.re' → logprob: -17.375003814697266

Token 132: 'replacement' (ID: 193546)
  Prédit: 'replacement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'replacement' → logprob: -3.128163257315464e-07
    2. ' replacement' → logprob: -15.25
    3. 're' → logprob: -17.375
    4. 'Replacement' → logprob: -18.625
    5. 'replace' → logprob: -18.75
    6. 'placement' → logprob: -19.5
    7. '   ' → logprob: -20.125
    8. 'target' → logprob: -20.25
    9. 'restriction' → logprob: -20.375
    10. ' ' → logprob: -20.375

Token 133: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.257116436958313
    2. ')
' → logprob: -1.882116436958313
    3. ')' → logprob: -2.6321163177490234
    4. 'else' → logprob: -6.007116317749023
    5. ' else' → logprob: -10.132116317749023
    6. '               ' → logprob: -12.007116317749023
    7. ')
' → logprob: -12.132116317749023
    8. '       ' → logprob: -12.257116317749023
    9. '')
' → logprob: -12.882116317749023
    10. '```' → logprob: -13.132116317749023

Token 134: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003709338838234544
    2. 'else' → logprob: -5.628709316253662
    3. ' else' → logprob: -9.12870979309082
    4. '          ' → logprob: -15.37870979309082
    5. '```' → logprob: -16.00370979309082
    6. '		' → logprob: -16.25370979309082
    7. '               ' → logprob: -16.25370979309082
    8. '	       ' → logprob: -16.75370979309082
    9. '       ' → logprob: -17.00370979309082
    10. 'elif' → logprob: -17.12870979309082

Token 135: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.20873712003231049
    2. '           ' → logprob: -1.7087371349334717
    3. ' else' → logprob: -4.958736896514893
    4. '       ' → logprob: -8.20873737335205
    5. '               ' → logprob: -13.58373737335205
    6. '	else' → logprob: -14.08373737335205
    7. '          ' → logprob: -15.45873737335205
    8. '   ' → logprob: -15.58373737335205
    9. '         ' → logprob: -15.70873737335205
    10. '```' → logprob: -15.83373737335205

Token 136: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4954949915409088
    2. ':
' → logprob: -0.9954949617385864
    3. '               ' → logprob: -4.120494842529297
    4. '           ' → logprob: -5.745494842529297
    5. '<|end|>' → logprob: -6.870494842529297
    6. '):
' → logprob: -8.620494842529297
    7. '       ' → logprob: -8.870494842529297
    8. ',' → logprob: -9.120494842529297
    9. ')' → logprob: -9.745494842529297
    10. '          ' → logprob: -10.245494842529297

Token 137: '               ' (ID: 506)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.6215115189552307
    2. '               ' → logprob: -0.8715115189552307
    3. ' replaced' → logprob: -3.121511459350586
    4. '           ' → logprob: -7.746511459350586
    5. '```' → logprob: -11.871511459350586
    6. '   ' → logprob: -12.121511459350586
    7. '              ' → logprob: -13.246511459350586
    8. 'replace' → logprob: -13.246511459350586
    9. ',re' → logprob: -13.371511459350586
    10. '       ' → logprob: -13.371511459350586

Token 138: ' replaced' (ID: 21009)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.001514384988695383
    2. ' replaced' → logprob: -6.501514434814453
    3. '           ' → logprob: -11.876514434814453
    4. '               ' → logprob: -12.251514434814453
    5. 'replace' → logprob: -16.376514434814453
    6. '   ' → logprob: -16.501514434814453
    7. 'removed' → logprob: -16.876514434814453
    8. '       ' → logprob: -17.251514434814453
    9. '              ' → logprob: -17.251514434814453
    10. 'rew' → logprob: -17.251514434814453

Token 139: '_words' (ID: 45077)
  Prédit: '_words'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_words' → logprob: -3.2020991056924686e-05
    2. 'words' → logprob: -10.375032424926758
    3. 'word' → logprob: -14.875032424926758
    4. 'Words' → logprob: -16.500032424926758
    5. 's' → logprob: -17.000032424926758
    6. 'ed' → logprob: -17.000032424926758
    7. '_word' → logprob: -17.125032424926758
    8. '_' → logprob: -17.375032424926758
    9. ' words' → logprob: -17.500032424926758
    10. 'append' → logprob: -18.125032424926758

Token 140: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00016909420082811266
    2. '.' → logprob: -9.125168800354004
    3. 'append' → logprob: -9.750168800354004
    4. '           ' → logprob: -13.750168800354004
    5. ' .' → logprob: -14.875168800354004
    6. '.extend' → logprob: -15.875168800354004
    7. '.app' → logprob: -16.50016975402832
    8. '       ' → logprob: -17.12516975402832
    9. '_append' → logprob: -17.37516975402832
    10. '.Append' → logprob: -17.50016975402832

Token 141: '(word' (ID: 35459)
  Prédit: '(word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(word' → logprob: -8.537868779967539e-06
    2. 'word' → logprob: -12.000008583068848
    3. '(' → logprob: -13.000008583068848
    4. '[word' → logprob: -19.00000762939453
    5. ' word' → logprob: -19.37500762939453
    6. '(
' → logprob: -19.75000762939453
    7. '(w' → logprob: -21.37500762939453
    8. '	word' → logprob: -21.62500762939453
    9. ' (' → logprob: -22.00000762939453
    10. '(world' → logprob: -22.12500762939453

Token 142: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1522834300994873
    2. ')
' → logprob: -2.1522834300994873
    3. '       ' → logprob: -4.027283668518066
    4. '
' → logprob: -5.152283668518066
    5. ')return' → logprob: -7.277283668518066
    6. 'return' → logprob: -7.402283668518066
    7. '        
' → logprob: -10.152283668518066
    8. '<|end|>' → logprob: -11.152283668518066
    9. ' return' → logprob: -11.277283668518066
    10. ' )' → logprob: -11.902283668518066

Token 143: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.059217628091573715
    2. '
' → logprob: -2.934217691421509
    3. 'return' → logprob: -6.05921745300293
    4. ' return' → logprob: -6.55921745300293
    5. '        
' → logprob: -7.80921745300293
    6. '
' → logprob: -9.68421745300293
    7. '    
' → logprob: -10.30921745300293
    8. '   ' → logprob: -10.93421745300293
    9. '  
' → logprob: -11.55921745300293
    10. ' 
' → logprob: -11.80921745300293

Token 144: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.01837480627000332
    2. ' return' → logprob: -4.268374919891357
    3. '       ' → logprob: -5.518374919891357
    4. '
' → logprob: -8.6433744430542
    5. '        
' → logprob: -11.6433744430542
    6. ' 
' → logprob: -13.8933744430542
    7. 'text' → logprob: -14.0183744430542
    8. '	return' → logprob: -14.3933744430542
    9. '```' → logprob: -14.3933744430542
    10. '   ' → logprob: -14.6433744430542

Token 145: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0004909569397568703
    2. ' '' → logprob: -7.875491142272949
    3. '"' → logprob: -9.12549114227295
    4. ''s' → logprob: -14.00049114227295
    5. ' ' → logprob: -15.25049114227295
    6. ''a' → logprob: -15.75049114227295
    7. ''t' → logprob: -16.250490188598633
    8. ''re' → logprob: -16.500490188598633
    9. ''user' → logprob: -16.750490188598633
    10. ''m' → logprob: -17.250490188598633

Token 146: ' '.' (ID: 12662)
  Prédit: ' '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '.' → logprob: -0.11013734340667725
    2. ''' → logprob: -2.360137462615967
    3. ' '' → logprob: -5.235137462615967
    4. ''.' → logprob: -6.110137462615967
    5. ' ')' → logprob: -6.485137462615967
    6. ' ').' → logprob: -7.360137462615967
    7. ''s' → logprob: -9.360136985778809
    8. ' ''.' → logprob: -9.860136985778809
    9. ' ".' → logprob: -12.235136985778809
    10. ' ' → logprob: -12.235136985778809

Token 147: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -3.128163257315464e-07
    2. ' join' → logprob: -15.125
    3. '```' → logprob: -17.375
    4. 'j' → logprob: -17.5
    5. '(join' → logprob: -17.875
    6. 'jo' → logprob: -18.625
    7. '.join' → logprob: -18.875
    8. '.' → logprob: -20.0
    9. 'replace' → logprob: -20.625
    10. ''' → logprob: -20.75

Token 148: '(re' (ID: 8178)
  Prédit: '(re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(re' → logprob: -3.392824874026701e-05
    2. 're' → logprob: -10.50003433227539
    3. '(' → logprob: -12.00003433227539
    4. ' (' → logprob: -16.87503433227539
    5. '```' → logprob: -18.25003433227539
    6. '('' → logprob: -19.75003433227539
    7. '(
' → logprob: -19.87503433227539
    8. '(r' → logprob: -20.25003433227539
    9. '(Re' → logprob: -20.37503433227539
    10. '()' → logprob: -20.37503433227539

Token 149: 'placed' (ID: 40927)
  Prédit: 'placed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'placed' → logprob: -1.8624639324116288e-06
    2. 'place' → logprob: -13.750001907348633
    3. 'pl' → logprob: -15.000001907348633
    4. 're' → logprob: -15.000001907348633
    5. 'plac' → logprob: -17.625001907348633
    6. 'l' → logprob: -17.750001907348633
    7. ' placed' → logprob: -18.000001907348633
    8. 'places' → logprob: -18.125001907348633
    9. 'placement' → logprob: -18.125001907348633
    10. 'p' → logprob: -18.375001907348633

Token 150: '_words' (ID: 45077)
  Prédit: '_words'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_words' → logprob: -0.0013552368618547916
    2. 'ed' → logprob: -6.626355171203613
    3. 'words' → logprob: -10.751355171203613
    4. 'd' → logprob: -12.251355171203613
    5. 'ated' → logprob: -14.751355171203613
    6. 'ged' → logprob: -15.126355171203613
    7. 'ced' → logprob: -15.251355171203613
    8. '_word' → logprob: -15.251355171203613
    9. 'w' → logprob: -15.251355171203613
    10. 'placed' → logprob: -15.376355171203613

Token 151: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.4272752852994017e-05
    2. '<|end|>' → logprob: -10.75002384185791
    3. ')
' → logprob: -13.87502384185791
    4. ' )' → logprob: -14.12502384185791
    5. ')return' → logprob: -15.12502384185791
    6. '')' → logprob: -15.62502384185791
    7. '`)' → logprob: -15.87502384185791
    8. '<|end|>' → logprob: -16.125024795532227
    9. '```' → logprob: -16.250024795532227
    10. '")' → logprob: -16.500024795532227

Token 152: 'class' (ID: 1444)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2550344467163086
    2. 'class' → logprob: -2.2550344467163086
    3. 'w' → logprob: -3.6300344467163086
    4. 'def' → logprob: -3.7550344467163086
    5. 'text' → logprob: -3.8800344467163086
    6. 'word' → logprob: -4.380034446716309
    7. 'r' → logprob: -4.755034446716309
    8. 'processor' → logprob: -5.130034446716309
    9. '```' → logprob: -5.380034446716309
    10. 're' → logprob: -5.380034446716309

Token 153: ' Dataset' (ID: 79063)
  Prédit: ' Text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Text' → logprob: -1.1342748403549194
    2. ' Sentence' → logprob: -1.8842748403549194
    3. ' Lower' → logprob: -2.259274959564209
    4. ' Upper' → logprob: -2.509274959564209
    5. 'Upper' → logprob: -2.509274959564209
    6. ' Word' → logprob: -2.634274959564209
    7. 'Text' → logprob: -3.009274959564209
    8. 'Sentence' → logprob: -3.384274959564209
    9. 'Lower' → logprob: -3.634274959564209
    10. 'Word' → logprob: -4.009274959564209

Token 154: 'Handler' (ID: 4139)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21054528653621674
    2. 'Processor' → logprob: -2.710545301437378
    3. 'Splitter' → logprob: -3.335545301437378
    4. 'Iterator' → logprob: -4.210545063018799
    5. 'Filter' → logprob: -4.460545063018799
    6. 'Interface' → logprob: -4.460545063018799
    7. 'Loader' → logprob: -4.585545063018799
    8. '(Text' → logprob: -4.960545063018799
    9. ':
' → logprob: -5.210545063018799
    10. 'Generator' → logprob: -5.460545063018799

Token 155: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018182717263698578
    2. ':
' → logprob: -4.018182754516602
    3. ' :' → logprob: -11.143182754516602
    4. '<|end|>' → logprob: -12.393182754516602
    5. '(' → logprob: -12.768182754516602
    6. '(Text' → logprob: -13.143182754516602
    7. ':

' → logprob: -13.268182754516602
    8. ' :
' → logprob: -13.518182754516602
    9. '(Data' → logprob: -13.643182754516602
    10. '```' → logprob: -14.268182754516602

Token 156: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006379772676154971
    2. ' def' → logprob: -7.750638008117676
    3. 'def' → logprob: -8.500638008117676
    4. 'class' → logprob: -13.500638008117676
    5. ':' → logprob: -13.875638008117676
    6. '   ' → logprob: -15.125638008117676
    7. 'import' → logprob: -15.375638008117676
    8. '    
' → logprob: -15.375638008117676
    9. ',' → logprob: -15.500638008117676
    10. ')' → logprob: -15.750638008117676

Token 157: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.2276802659034729
    2. 'def' (adapté à ' def') → logprob: -1.6026802062988281
    3. '   ' → logprob: -6.102680206298828
    4. 'class' → logprob: -11.352680206298828
    5. 'import' → logprob: -11.977680206298828
    6. ' ' → logprob: -12.602680206298828
    7. '    ' → logprob: -13.477680206298828
    8. ' __' → logprob: -14.102680206298828
    9. '  ' → logprob: -14.227680206298828
    10. '	def' → logprob: -14.227680206298828

Token 158: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.2066822499036789
    2. '__' → logprob: -1.7066822052001953
    3. '_init' → logprob: -5.956682205200195
    4. 'init' → logprob: -6.081682205200195
    5. ' init' → logprob: -8.831682205200195
    6. ' def' → logprob: -8.831682205200195
    7. 'def' → logprob: -9.956682205200195
    8. ' process' → logprob: -11.081682205200195
    9. '_' → logprob: -12.206682205200195
    10. 'process' → logprob: -12.206682205200195

Token 159: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -4.320199877838604e-07
    2. ' init' → logprob: -15.875
    3. 'ini' → logprob: -16.0
    4. 'in' → logprob: -17.125
    5. '	init' → logprob: -18.125
    6. 'inite' → logprob: -18.125
    7. 'i' → logprob: -18.25
    8. '   ' → logprob: -18.5
    9. '
' → logprob: -18.625
    10. 'innit' → logprob: -18.875

Token 160: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.01539961714297533
    2. '__(' → logprob: -4.39039945602417
    3. ' (' → logprob: -6.39039945602417
    4. '(' → logprob: -6.76539945602417
    5. 'self' → logprob: -10.515399932861328
    6. ' ' → logprob: -12.015399932861328
    7. ',' → logprob: -12.640399932861328
    8. '_(' → logprob: -12.765399932861328
    9. '__(
' → logprob: -12.765399932861328
    10. ' self' → logprob: -13.015399932861328

Token 161: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0011847536079585552
    2. ' self' → logprob: -6.751184940338135
    3. ')' → logprob: -12.251184463500977
    4. '):
' → logprob: -12.626184463500977
    5. '
' → logprob: -12.876184463500977
    6. 'data' → logprob: -13.376184463500977
    7. ',' → logprob: -13.376184463500977
    8. '   ' → logprob: -14.626184463500977
    9. '(self' → logprob: -15.626184463500977
    10. 'file' → logprob: -16.876184463500977

Token 162: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002265517134219408
    2. 'self' → logprob: -6.252265453338623
    3. '):
' → logprob: -8.502265930175781
    4. '):' → logprob: -9.877265930175781
    5. ' ,' → logprob: -10.377265930175781
    6. ' self' → logprob: -11.252265930175781
    7. ')' → logprob: -11.377265930175781
    8. '(self' → logprob: -12.252265930175781
    9. ',data' → logprob: -12.377265930175781
    10. 'data' → logprob: -12.502265930175781

Token 163: ' processor' (ID: 29539)
  Prédit: 'dataset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dataset' → logprob: -1.0441728830337524
    2. 'data' → logprob: -1.6691728830337524
    3. ' dataset' → logprob: -2.169172763824463
    4. 'processor' → logprob: -2.294172763824463
    5. 'text' → logprob: -2.794172763824463
    6. ' data' → logprob: -3.044172763824463
    7. 'processors' → logprob: -3.044172763824463
    8. ' processors' → logprob: -4.044172763824463
    9. ' processor' → logprob: -4.169172763824463
    10. 'self' → logprob: -4.419172763824463

Token 164: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.027769125998020172
    2. '):' → logprob: -3.652769088745117
    3. '=None' → logprob: -6.902769088745117
    4. 's' → logprob: -8.527769088745117
    5. ')' → logprob: -9.027769088745117
    6. ' :' → logprob: -9.777769088745117
    7. '):
' → logprob: -9.777769088745117
    8. ' ):' → logprob: -10.777769088745117
    9. '   ' → logprob: -13.402769088745117
    10. '=' → logprob: -13.527769088745117

Token 165: ' Text' (ID: 4564)
  Prédit: 'Text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Text' → logprob: -0.3132671117782593
    2. ' Text' → logprob: -1.3132671117782593
    3. '	Text' → logprob: -12.93826675415039
    4. ' ' → logprob: -13.43826675415039
    5. ')' → logprob: -14.93826675415039
    6. '   ' → logprob: -14.93826675415039
    7. '  ' → logprob: -15.31326675415039
    8. '_Text' → logprob: -15.56326675415039
    9. '(Text' → logprob: -15.56326675415039
    10. '<Text' → logprob: -15.81326675415039

Token 166: 'Processor' (ID: 22334)
  Prédit: 'Processor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Processor' → logprob: -4.842555426876061e-06
    2. 'processor' → logprob: -12.375004768371582
    3. ' processor' → logprob: -15.375004768371582
    4. ' Processor' → logprob: -15.625004768371582
    5. 'Process' → logprob: -16.0000057220459
    6. ')' → logprob: -16.5000057220459
    7. '_processor' → logprob: -16.5000057220459
    8. 'Processing' → logprob: -19.2500057220459
    9. '[' → logprob: -20.6250057220459
    10. 'Provider' → logprob: -20.6250057220459

Token 167: 'Interface' (ID: 7078)
  Prédit: 'Interface'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Interface' → logprob: -1.0280383548888494e-06
    2. ')' → logprob: -14.875000953674316
    3. 'interface' → logprob: -15.375000953674316
    4. ' Interface' → logprob: -15.625000953674316
    5. '):' → logprob: -16.125001907348633
    6. 'Inter' → logprob: -17.750001907348633
    7. '   ' → logprob: -18.500001907348633
    8. '):
' → logprob: -18.500001907348633
    9. ' interface' → logprob: -18.500001907348633
    10. '
' → logprob: -18.750001907348633

Token 168: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02073678933084011
    2. '):
' → logprob: -3.8957366943359375
    3. ')' → logprob: -8.645736694335938
    4. '):
' → logprob: -11.020736694335938
    5. ' ):' → logprob: -13.520736694335938
    6. ',' → logprob: -14.645736694335938
    7. ' ' → logprob: -14.770736694335938
    8. ':' → logprob: -16.020736694335938
    9. '   ' → logprob: -16.020736694335938
    10. '):

' → logprob: -16.770736694335938

Token 169: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00031866179779171944
    2. 'self' → logprob: -8.37531852722168
    3. '   ' → logprob: -9.87531852722168
    4. ' self' → logprob: -10.25031852722168
    5. ',' → logprob: -15.12531852722168
    6. 'def' → logprob: -15.62531852722168
    7. ')' → logprob: -16.00031852722168
    8. ':' → logprob: -16.12531852722168
    9. '(self' → logprob: -16.37531852722168
    10. '      ' → logprob: -16.37531852722168

Token 170: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.627030611038208
    2. 'self' (adapté à ' self') → logprob: -0.877030611038208
    3. '       ' → logprob: -3.002030611038208
    4. '   ' → logprob: -9.252030372619629
    5. '	self' → logprob: -11.127030372619629
    6. ' ' → logprob: -11.752030372619629
    7. '(self' → logprob: -14.252030372619629
    8. '
' → logprob: -14.377030372619629
    9. '     ' → logprob: -15.252030372619629
    10. ' ' → logprob: -15.252030372619629

Token 171: '._' (ID: 2697)
  Prédit: '.processor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.processor' → logprob: -0.31451186537742615
    2. '._' → logprob: -1.3145118951797485
    3. '.' → logprob: -6.939511775970459
    4. '_processor' → logprob: -8.814512252807617
    5. 'processor' → logprob: -9.439512252807617
    6. '   ' → logprob: -10.814512252807617
    7. '.process' → logprob: -10.939512252807617
    8. ' .' → logprob: -11.814512252807617
    9. '
' → logprob: -13.314512252807617
    10. ' processor' → logprob: -13.314512252807617

Token 172: 'processor' (ID: 55600)
  Prédit: 'processor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'processor' → logprob: -5.438573680294212e-06
    2. ' processor' → logprob: -13.250005722045898
    3. '_processor' → logprob: -13.625005722045898
    4. '.processor' → logprob: -14.125005722045898
    5. 'processors' → logprob: -14.250005722045898
    6. 'process' → logprob: -14.375005722045898
    7. 'dataset' → logprob: -16.6250057220459
    8. '   ' → logprob: -16.7500057220459
    9. 'processed' → logprob: -17.0000057220459
    10. 'processing' → logprob: -17.0000057220459

Token 173: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519293427467346
    2. ' =' → logprob: -1.5019292831420898
    3. '   ' → logprob: -16.126930236816406
    4. '_processor' → logprob: -16.501930236816406
    5. 'processor' → logprob: -17.126930236816406
    6. ' ' → logprob: -17.376930236816406
    7. 's' → logprob: -18.001930236816406
    8. ')' → logprob: -18.251930236816406
    9. ' processor' → logprob: -19.251930236816406
    10. 'import' → logprob: -19.876930236816406

Token 174: ' processor' (ID: 29539)
  Prédit: 'processor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'processor' → logprob: -0.10020774602890015
    2. ' processor' → logprob: -2.350207805633545
    3. '_processor' → logprob: -14.350207328796387
    4. '.processor' → logprob: -15.225207328796387
    5. 'process' → logprob: -15.475207328796387
    6. ' ' → logprob: -17.475208282470703
    7. 'processors' → logprob: -17.725208282470703
    8. 'Processor' → logprob: -17.975208282470703
    9. '(process' → logprob: -18.350208282470703
    10. 'producer' → logprob: -18.725208282470703

Token 175: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7224719524383545
    2. '    
' → logprob: -1.0974719524383545
    3. '   ' → logprob: -1.7224719524383545
    4. 'def' → logprob: -7.347472190856934
    5. '        
' → logprob: -7.597472190856934
    6. '  
' → logprob: -7.597472190856934
    7. '<|end|>' → logprob: -8.097472190856934
    8. ' 
' → logprob: -9.722472190856934
    9. '   
' → logprob: -10.222472190856934
    10. '

' → logprob: -10.722472190856934

Token 176: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13755805790424347
    2. '
' → logprob: -2.3875579833984375
    3. 'def' → logprob: -4.0125579833984375
    4. '    
' → logprob: -4.0125579833984375
    5. '        
' → logprob: -7.8875579833984375
    6. '  
' → logprob: -10.012557983398438
    7. ' def' → logprob: -10.387557983398438
    8. '<|end|>' → logprob: -10.887557983398438
    9. ' 
' → logprob: -12.512557983398438
    10. '   
' → logprob: -12.637557983398438

Token 177: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.08949704468250275
    2. 'def' → logprob: -2.5894970893859863
    3. ' self' → logprob: -5.089497089385986
    4. '
' → logprob: -6.839497089385986
    5. '   ' → logprob: -6.839497089385986
    6. 'pass' → logprob: -7.589497089385986
    7. '       ' → logprob: -7.714497089385986
    8. '

' → logprob: -7.839497089385986
    9. '        
' → logprob: -8.839496612548828
    10. '    
' → logprob: -9.339496612548828

Token 178: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.019312672317028046
    2. '.data' → logprob: -4.644312858581543
    3. '_data' → logprob: -5.144312858581543
    4. '.' → logprob: -6.144312858581543
    5. 'data' → logprob: -7.269312858581543
    6. '_dataset' → logprob: -9.019312858581543
    7. '.process' → logprob: -9.144312858581543
    8. '_processed' → logprob: -9.394312858581543
    9. '.datasets' → logprob: -9.769312858581543
    10. '_' → logprob: -9.769312858581543

Token 179: 'datasets' (ID: 170057)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.10607313364744186
    2. 'dataset' → logprob: -2.7310731410980225
    3. 'cache' → logprob: -3.9810731410980225
    4. 'processed' → logprob: -4.356072902679443
    5. 'datasets' → logprob: -6.731072902679443
    6. 'storage' → logprob: -7.481072902679443
    7. 'cached' → logprob: -7.856072902679443
    8. 'history' → logprob: -8.356073379516602
    9. 'raw' → logprob: -8.606073379516602
    10. 'results' → logprob: -8.731073379516602

Token 180: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014199234545230865
    2. '=' → logprob: -4.264199256896973
    3. ':' → logprob: -10.764199256896973
    4. 's' → logprob: -11.764199256896973
    5. '   ' → logprob: -12.889199256896973
    6. ' ' → logprob: -13.889199256896973
    7. '=[]' → logprob: -14.139199256896973
    8. '_data' → logprob: -14.639199256896973
    9. 'data' → logprob: -14.764199256896973
    10. '={}' → logprob: -15.514199256896973

Token 181: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.530490517616272
    2. '{}' → logprob: -1.030490517616272
    3. ' []' → logprob: -3.0304903984069824
    4. ' {}' → logprob: -5.030490398406982
    5. 'dict' → logprob: -11.15549087524414
    6. '[]}' → logprob: -12.53049087524414
    7. '[]
' → logprob: -13.28049087524414
    8. ' dict' → logprob: -13.40549087524414
    9. '{}
' → logprob: -13.90549087524414
    10. ' []
' → logprob: -14.90549087524414

Token 182: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2893894910812378
    2. '
' → logprob: -1.6643894910812378
    3. '    
' → logprob: -2.7893896102905273
    4. '  
' → logprob: -8.664389610290527
    5. 'def' → logprob: -8.789389610290527
    6. '        
' → logprob: -9.664389610290527
    7. '<|end|>' → logprob: -9.664389610290527
    8. ' 
' → logprob: -10.414389610290527
    9. '   
' → logprob: -11.414389610290527
    10. '

' → logprob: -11.914389610290527

Token 183: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.6843236088752747
    2. 'def' (adapté à ' def') → logprob: -0.8093236088752747
    3. '
' → logprob: -3.43432354927063
    4. '   ' → logprob: -4.059323787689209
    5. ' 
' → logprob: -7.559323787689209
    6. '    
' → logprob: -8.18432331085205
    7. ' ' → logprob: -9.93432331085205
    8. '<|end|>' → logprob: -11.18432331085205
    9. '	def' → logprob: -11.43432331085205
    10. '        
' → logprob: -11.80932331085205

Token 184: ' load' (ID: 4700)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.3040304183959961
    2. ' add' → logprob: -1.429030418395996
    3. 'load' → logprob: -4.179030418395996
    4. ' load' → logprob: -4.929030418395996
    5. '_add' → logprob: -10.304030418395996
    6. 'def' → logprob: -11.054030418395996
    7. 'get' → logprob: -12.804030418395996
    8. '	add' → logprob: -12.929030418395996
    9. '_load' → logprob: -13.054030418395996
    10. 'append' → logprob: -13.179030418395996

Token 185: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.1486981213092804
    2. '_dataset' → logprob: -2.648698091506958
    3. '_data' → logprob: -2.898698091506958
    4. '_d' → logprob: -4.523698329925537
    5. '(' → logprob: -7.898698329925537
    6. 'self' → logprob: -8.273697853088379
    7. '_file' → logprob: -8.523697853088379
    8. '_from' → logprob: -8.648697853088379
    9. 'datasets' → logprob: -9.148697853088379
    10. '_' → logprob: -9.898697853088379

Token 186: ',' (ID: 11)
  Prédit: '_data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -0.25764769315719604
    2. '_dataset' → logprob: -2.132647752761841
    3. ',' → logprob: -2.757647752761841
    4. '_d' → logprob: -3.382647752761841
    5. '_file' → logprob: -6.007647514343262
    6. ')_' → logprob: -6.382647514343262
    7. ')' → logprob: -6.507647514343262
    8. '_datas' → logprob: -7.007647514343262
    9. '(self' → logprob: -7.132647514343262
    10. '_files' → logprob: -7.257647514343262

Token 187: ' count' (ID: 3605)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.5172109603881836
    2. ' data' → logprob: -1.8922109603881836
    3. 'dataset' → logprob: -2.0172109603881836
    4. ' dataset' → logprob: -2.8922109603881836
    5. 'datasets' → logprob: -4.267210960388184
    6. 'file' → logprob: -4.392210960388184
    7. ' datasets' → logprob: -4.517210960388184
    8. 'texts' → logprob: -5.267210960388184
    9. 'filepath' → logprob: -5.392210960388184
    10. ' file' → logprob: -5.642210960388184

Token 188: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03308086097240448
    2. '):' → logprob: -3.908080816268921
    3. ',' → logprob: -4.5330810546875
    4. ':int' → logprob: -6.7830810546875
    5. '=' → logprob: -8.1580810546875
    6. '):
' → logprob: -8.4080810546875
    7. ' :' → logprob: -10.4080810546875
    8. '   ' → logprob: -11.1580810546875
    9. ' ):' → logprob: -11.7830810546875
    10. ')' → logprob: -12.1580810546875

Token 189: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.1441728174686432
    2. ' int' → logprob: -2.0191729068756104
    3. ')' → logprob: -7.894172668457031
    4. ' ' → logprob: -8.394172668457031
    5. 'self' → logprob: -8.519172668457031
    6. 'count' → logprob: -9.019172668457031
    7. '):' → logprob: -9.019172668457031
    8. '):
' → logprob: -9.519172668457031
    9. ',' → logprob: -9.519172668457031
    10. '1' → logprob: -9.769172668457031

Token 190: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20680826902389526
    2. '):' → logprob: -2.20680832862854
    3. ')' → logprob: -3.20680832862854
    4. '):
' → logprob: -3.33180832862854
    5. '   ' → logprob: -8.581808090209961
    6. ' ,' → logprob: -8.956808090209961
    7. '):
' → logprob: -9.206808090209961
    8. '       ' → logprob: -9.456808090209961
    9. ' ):' → logprob: -10.956808090209961
    10. ')->' → logprob: -11.456808090209961

Token 191: ' lines' (ID: 8698)
  Prédit: ' data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' data' → logprob: -1.5001486539840698
    2. 'source' → logprob: -1.8751486539840698
    3. ' source' → logprob: -2.1251487731933594
    4. ' generator' → logprob: -2.1251487731933594
    5. 'data' → logprob: -2.2501487731933594
    6. 'texts' → logprob: -2.7501487731933594
    7. 'text' → logprob: -2.8751487731933594
    8. ' text' → logprob: -3.1251487731933594
    9. ' loader' → logprob: -4.000148773193359
    10. ' texts' → logprob: -4.000148773193359

Token 192: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05380324646830559
    2. '):' → logprob: -3.0538032054901123
    3. '):
' → logprob: -5.678803443908691
    4. '=' → logprob: -6.928803443908691
    5. ')' → logprob: -7.803803443908691
    6. '=None' → logprob: -8.178803443908691
    7. '   ' → logprob: -10.053803443908691
    8. ' :' → logprob: -10.678803443908691
    9. ':list' → logprob: -11.053803443908691
    10. '_per' → logprob: -11.553803443908691

Token 193: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.042440757155418396
    2. ' list' → logprob: -3.41744065284729
    3. 'iter' → logprob: -5.917440891265869
    4. ')' → logprob: -6.292440891265869
    5. '[list' → logprob: -6.292440891265869
    6. 'str' → logprob: -6.667440891265869
    7. 'List' → logprob: -7.792440891265869
    8. '[str' → logprob: -8.542440414428711
    9. '   ' → logprob: -9.167440414428711
    10. '):' → logprob: -10.042440414428711

Token 194: '[str' (ID: 33439)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6653396487236023
    2. '[str' → logprob: -1.415339708328247
    3. '):' → logprob: -1.415339708328247
    4. ')' → logprob: -9.540339469909668
    5. '):
' → logprob: -9.665339469909668
    6. '   ' → logprob: -10.540339469909668
    7. ':' → logprob: -11.415339469909668
    8. '):

' → logprob: -11.415339469909668
    9. '[' → logprob: -11.665339469909668
    10. ' ' → logprob: -12.290339469909668

Token 195: ']):
' (ID: 51989)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.7419421076774597
    2. ']):' → logprob: -0.8669421076774597
    3. ')' → logprob: -3.1169421672821045
    4. ']):
' → logprob: -3.2419421672821045
    5. ']' → logprob: -4.491941928863525
    6. '):' → logprob: -4.866941928863525
    7. '[str' → logprob: -6.866941928863525
    8. '):
' → logprob: -8.866942405700684
    9. ']:' → logprob: -9.866942405700684
    10. ')]' → logprob: -11.491942405700684

Token 196: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0026379646733403206
    2. ':' → logprob: -6.12763786315918
    3. ' for' → logprob: -8.50263786315918
    4. ':
' → logprob: -8.50263786315918
    5. '):
' → logprob: -11.25263786315918
    6. 'for' → logprob: -11.25263786315918
    7. ',' → logprob: -11.75263786315918
    8. ')' → logprob: -12.75263786315918
    9. '   ' → logprob: -13.12763786315918
    10. '):' → logprob: -13.62763786315918

Token 197: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.680588960647583
    2. 'for' → logprob: -1.180588960647583
    3. ' for' → logprob: -1.680588960647583
    4. 'self' → logprob: -8.180588722229004
    5. ' self' → logprob: -11.055588722229004
    6. '   ' → logprob: -11.305588722229004
    7. '	for' → logprob: -11.555588722229004
    8. '      ' → logprob: -14.430588722229004
    9. 'assert' → logprob: -15.305588722229004
    10. ' ' → logprob: -15.680588722229004

Token 198: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.6553373336791992
    2. 'len' → logprob: -1.0303373336791992
    3. ' len' → logprob: -2.405337333679199
    4. ' count' → logprob: -3.405337333679199
    5. ' not' → logprob: -8.4053373336792
    6. 'not' → logprob: -9.4053373336792
    7. '   ' → logprob: -9.6553373336792
    8. ' ' → logprob: -12.0303373336792
    9. 'lines' → logprob: -12.0303373336792
    10. '	len' → logprob: -12.0303373336792

Token 199: ' !=' (ID: 1666)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -1.117164134979248
    2. ' >' → logprob: -1.117164134979248
    3. ' !=' → logprob: -1.367164134979248
    4. '!=' → logprob: -2.867164134979248
    5. ' <=' → logprob: -3.867164134979248
    6. '<=' → logprob: -4.492164134979248
    7. '==' → logprob: -7.242164134979248
    8. ' <' → logprob: -8.117164611816406
    9. ' ' → logprob: -8.117164611816406
    10. ' ==' → logprob: -8.367164611816406

Token 200: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.04858759790658951
    2. ' len' → logprob: -3.0485875606536865
    3. '(len' → logprob: -15.923587799072266
    4. '	len' → logprob: -16.048587799072266
    5. '=len' → logprob: -16.923587799072266
    6. '[len' → logprob: -19.048587799072266
    7. '       ' → logprob: -19.423587799072266
    8. '0' → logprob: -19.673587799072266
    9. '   ' → logprob: -19.798587799072266
    10. ',len' → logprob: -19.798587799072266

Token 201: '(lines' (ID: 73839)
  Prédit: '(lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -3.054500666621607e-06
    2. '(' → logprob: -12.75000286102295
    3. '(line' → logprob: -16.625003814697266
    4. ' (' → logprob: -17.250003814697266
    5. ' lines' → logprob: -18.625003814697266
    6. '(count' → logprob: -19.125003814697266
    7. 'lines' → logprob: -20.125003814697266
    8. '(
' → logprob: -20.500003814697266
    9. '(rows' → logprob: -20.500003814697266
    10. '	lines' → logprob: -20.750003814697266

Token 202: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16029885411262512
    2. '):
' → logprob: -1.9102988243103027
    3. ')' → logprob: -10.660299301147461
    4. ' ):' → logprob: -11.160299301147461
    5. '):
' → logprob: -11.285299301147461
    6. '       ' → logprob: -11.285299301147461
    7. ':' → logprob: -12.410299301147461
    8. '   ' → logprob: -13.035299301147461
    9. ' or' → logprob: -13.035299301147461
    10. ' ):
' → logprob: -13.160299301147461

Token 203: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002933942887466401
    2. '       ' → logprob: -9.125293731689453
    3. ' raise' → logprob: -9.500293731689453
    4. ':
' → logprob: -9.750293731689453
    5. 'raise' → logprob: -11.250293731689453
    6. ':' → logprob: -11.625293731689453
    7. '
' → logprob: -11.750293731689453
    8. ',' → logprob: -11.875293731689453
    9. '   ' → logprob: -12.750293731689453
    10. ' or' → logprob: -13.000293731689453

Token 204: ' raise' (ID: 9338)
  Prédit: ' raise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.25933927297592163
    2. '           ' → logprob: -2.1343393325805664
    3. 'raise' (adapté à ' raise') → logprob: -2.2593393325805664
    4. '               ' → logprob: -5.384339332580566
    5. '	raise' → logprob: -7.259339332580566
    6. '
' → logprob: -8.634339332580566
    7. '   ' → logprob: -10.009339332580566
    8. ' ' → logprob: -10.009339332580566
    9. '       ' → logprob: -10.259339332580566
    10. '            ' → logprob: -10.384339332580566

Token 205: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.0002036595979006961
    2. ' Value' → logprob: -8.500204086303711
    3. '	Value' → logprob: -17.00020408630371
    4. 'Assertion' → logprob: -17.75020408630371
    5. '(Value' → logprob: -18.50020408630371
    6. 'Index' → logprob: -18.50020408630371
    7. '   ' → logprob: -18.62520408630371
    8. '```' → logprob: -18.87520408630371
    9. 'Val' → logprob: -19.00020408630371
    10. ' ' → logprob: -19.00020408630371

Token 206: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.0021616832818835974
    2. 'Value' → logprob: -6.252161502838135
    3. 'rror' → logprob: -8.627161979675293
    4. '  ' → logprob: -10.627161979675293
    5. '   ' → logprob: -11.127161979675293
    6. 'Val' → logprob: -12.877161979675293
    7. '       ' → logprob: -13.002161979675293
    8. 'alue' → logprob: -13.252161979675293
    9. 'Argument' → logprob: -13.252161979675293
    10. ' ' → logprob: -13.877161979675293

Token 207: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -4.0722858102526516e-05
    2. '(' → logprob: -10.500041007995605
    3. '(f' → logprob: -11.250041007995605
    4. '('' → logprob: -16.50004005432129
    5. '(
' → logprob: -16.87504005432129
    6. '("'' → logprob: -19.62504005432129
    7. '"' → logprob: -19.75004005432129
    8. '()' → logprob: -21.12504005432129
    9. '(

' → logprob: -21.87504005432129
    10. 'f' → logprob: -21.87504005432129

Token 208: 'Number' (ID: 3695)
  Prédit: 'Count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Count' → logprob: -0.44726452231407166
    2. 'Number' → logprob: -1.697264552116394
    3. 'The' → logprob: -2.6972644329071045
    4. ' The' → logprob: -3.5722644329071045
    5. ' count' → logprob: -4.197264671325684
    6. '"' → logprob: -4.197264671325684
    7. 'count' → logprob: -4.197264671325684
    8. ' Count' → logprob: -4.822264671325684
    9. 'Mismatch' → logprob: -4.822264671325684
    10. ' Number' → logprob: -4.947264671325684

Token 209: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.0004446124075911939
    2. 'of' → logprob: -7.750444412231445
    3. ' ' → logprob: -12.125444412231445
    4. '	of' → logprob: -12.375444412231445
    5. 's' → logprob: -13.875444412231445
    6. '
' → logprob: -14.000444412231445
    7. '  ' → logprob: -14.000444412231445
    8. '_of' → logprob: -14.000444412231445
    9. ' ' → logprob: -15.750444412231445
    10. ' count' → logprob: -15.750444412231445

Token 210: ' lines' (ID: 8698)
  Prédit: ' lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.026395047083497047
    2. 'lines' → logprob: -3.651395082473755
    3. ' provided' → logprob: -10.276394844055176
    4. '	lines' → logprob: -11.401394844055176
    5. 'count' → logprob: -11.776394844055176
    6. ' ' → logprob: -12.151394844055176
    7. '(lines' → logprob: -12.151394844055176
    8. ' count' → logprob: -12.276394844055176
    9. ' items' → logprob: -12.401394844055176
    10. '   ' → logprob: -12.526394844055176

Token 211: ' does' (ID: 2226)
  Prédit: ' does'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' does' → logprob: -0.006120640318840742
    2. 'does' → logprob: -5.256120681762695
    3. ' provided' → logprob: -7.756120681762695
    4. ' and' → logprob: -8.131120681762695
    5. ' must' → logprob: -9.756120681762695
    6. ' to' → logprob: -10.381120681762695
    7. 'provided' → logprob: -11.006120681762695
    8. 'and' → logprob: -11.131120681762695
    9. ' ' → logprob: -11.506120681762695
    10. ' do' → logprob: -11.881120681762695

Token 212: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.5759482979774475
    2. 'not' → logprob: -0.8259482979774475
    3. 'n't' → logprob: -11.700948715209961
    4. '   ' → logprob: -14.825948715209961
    5. 'n' → logprob: -16.82594871520996
    6. '    ' → logprob: -16.95094871520996
    7. '	not' → logprob: -17.20094871520996
    8. '```' → logprob: -17.70094871520996
    9. '           ' → logprob: -17.95094871520996
    10. 'nt' → logprob: -18.57594871520996

Token 213: ' match' (ID: 3981)
  Prédit: ' match'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' match' → logprob: -0.16022992134094238
    2. 'match' → logprob: -1.9102299213409424
    3. 'equal' → logprob: -13.160229682922363
    4. '_match' → logprob: -13.660229682922363
    5. ' equal' → logprob: -14.035229682922363
    6. '	match' → logprob: -14.535229682922363
    7. ')' → logprob: -15.410229682922363
    8. ' correspond' → logprob: -15.535229682922363
    9. 'matches' → logprob: -15.660229682922363
    10. '```' → logprob: -15.785229682922363

Token 214: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.11399897187948227
    2. ' the' → logprob: -2.8639988899230957
    3. 'count' → logprob: -2.9889988899230957
    4. 'the' → logprob: -9.238999366760254
    5. ' expected' → logprob: -9.363999366760254
    6. ' '' → logprob: -9.488999366760254
    7. ' provided' → logprob: -10.238999366760254
    8. ' specified' → logprob: -10.613999366760254
    9. ' requested' → logprob: -11.238999366760254
    10. 'expected' → logprob: -11.988999366760254

Token 215: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.38970911502838135
    2. '")
' → logprob: -1.1397091150283813
    3. '.")
' → logprob: -7.264708995819092
    4. '       ' → logprob: -7.764708995819092
    5. ')")' → logprob: -7.764708995819092
    6. '.")' → logprob: -7.889708995819092
    7. ')' → logprob: -8.01470947265625
    8. ')")
' → logprob: -8.13970947265625
    9. '")
' → logprob: -8.88970947265625
    10. ' provided' → logprob: -10.01470947265625

Token 216: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007103689946234226
    2. '
' → logprob: -5.25710391998291
    3. ' for' → logprob: -6.63210391998291
    4. 'for' → logprob: -7.75710391998291
    5. '        
' → logprob: -9.88210391998291
    6. '   ' → logprob: -10.50710391998291
    7. 'self' → logprob: -10.63210391998291
    8. '<|end|>' → logprob: -12.13210391998291
    9. '
' → logprob: -12.88210391998291
    10. ' self' → logprob: -13.00710391998291

Token 217: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.6863462328910828
    2. 'for' → logprob: -1.1863462924957275
    3. '       ' → logprob: -1.6863462924957275
    4. ' for' → logprob: -5.561346054077148
    5. ' self' → logprob: -6.561346054077148
    6. '   ' → logprob: -7.186346054077148
    7. '
' → logprob: -10.311346054077148
    8. '        
' → logprob: -12.686346054077148
    9. '	self' → logprob: -12.936346054077148
    10. '	for' → logprob: -13.311346054077148

Token 218: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -3.054500666621607e-06
    2. ' .' → logprob: -13.75000286102295
    3. '.load' → logprob: -14.37500286102295
    4. '.' → logprob: -14.62500286102295
    5. '   ' → logprob: -15.25000286102295
    6. ']._' → logprob: -16.125003814697266
    7. '.clear' → logprob: -16.250003814697266
    8. '_lines' → logprob: -16.250003814697266
    9. '.datasets' → logprob: -16.750003814697266
    10. '_dataset' → logprob: -16.750003814697266

Token 219: 'datasets' (ID: 170057)
  Prédit: 'datasets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'datasets' → logprob: -4.246537173457909e-06
    2. 'lines' → logprob: -13.625003814697266
    3. ' datasets' → logprob: -13.625003814697266
    4. 'dataset' → logprob: -14.250003814697266
    5. '.datasets' → logprob: -14.250003814697266
    6. 'processor' → logprob: -15.500003814697266
    7. 'processors' → logprob: -15.875003814697266
    8. 'data' → logprob: -17.000003814697266
    9. 'datas' → logprob: -17.125003814697266
    10. '   ' → logprob: -17.625003814697266

Token 220: ' =' (ID: 314)
  Prédit: '.extend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.extend' → logprob: -0.0010100651998072863
    2. '.' → logprob: -7.501009941101074
    3. '=' → logprob: -7.751009941101074
    4. ' =' → logprob: -10.751009941101074
    5. '.clear' → logprob: -13.001009941101074
    6. '+=' → logprob: -13.501009941101074
    7. 'extend' → logprob: -13.751009941101074
    8. '.=' → logprob: -15.001009941101074
    9. ' +=' → logprob: -16.12601089477539
    10. 'extends' → logprob: -16.37601089477539

Token 221: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.32744100689888
    2. '[' → logprob: -1.3274409770965576
    3. '[line' → logprob: -4.577441215515137
    4. '[list' → logprob: -6.577441215515137
    5. '[self' → logprob: -6.952441215515137
    6. ' [' → logprob: -7.452441215515137
    7. ' lines' → logprob: -7.952441215515137
    8. '(lines' → logprob: -9.202441215515137
    9. 'list' → logprob: -9.452441215515137
    10. '[text' → logprob: -9.577441215515137

Token 222: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.25346627831459045
    2. '<|end|>' → logprob: -1.753466248512268
    3. '   ' → logprob: -3.3784663677215576
    4. '

' → logprob: -4.8784661293029785
    5. 'def' → logprob: -5.5034661293029785
    6. '    
' → logprob: -5.7534661293029785
    7. '<|end|>' → logprob: -6.8784661293029785
    8. '  
' → logprob: -8.378466606140137
    9. '.copy' → logprob: -9.128466606140137
    10. '
    
' → logprob: -9.253466606140137

Token 223: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015510561875998974
    2. '<|end|>' → logprob: -4.390510559082031
    3. '    
' → logprob: -6.390510559082031
    4. '
' → logprob: -6.890510559082031
    5. 'def' → logprob: -8.640510559082031
    6. '<|end|>' → logprob: -9.640510559082031
    7. '        
' → logprob: -10.640510559082031
    8. '```' → logprob: -11.390510559082031
    9. '       ' → logprob: -11.890510559082031
    10. '  
' → logprob: -11.890510559082031

Token 224: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00014025058771949261
    2. ' def' → logprob: -9.000140190124512
    3. '   ' → logprob: -11.000140190124512
    4. '
' → logprob: -16.750141143798828
    5. '    
' → logprob: -17.875141143798828
    6. '	def' → logprob: -18.500141143798828
    7. ' ' → logprob: -19.000141143798828
    8. '```' → logprob: -19.625141143798828
    9. '        
' → logprob: -20.375141143798828
    10. '       ' → logprob: -21.125141143798828

Token 225: ' apply' (ID: 6096)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.07317692786455154
    2. ' process' → logprob: -2.698176860809326
    3. 'get' → logprob: -6.323176860809326
    4. 'apply' → logprob: -7.198176860809326
    5. ' get' → logprob: -7.948176860809326
    6. 'transform' → logprob: -9.698177337646484
    7. ' apply' → logprob: -9.698177337646484
    8. 'processed' → logprob: -9.823177337646484
    9. ' preprocess' → logprob: -10.073177337646484
    10. 'pre' → logprob: -11.073177337646484

Token 226: '_processing' (ID: 142889)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.02082458697259426
    2. '(' → logprob: -4.270824432373047
    3. '()' → logprob: -5.395824432373047
    4. '_processors' → logprob: -6.645824432373047
    5. '_processing' → logprob: -7.895824432373047
    6. '_' → logprob: -8.520824432373047
    7. '_process' → logprob: -10.020824432373047
    8. '_processor' → logprob: -10.145824432373047
    9. '(process' → logprob: -10.520824432373047
    10. 'self' → logprob: -11.020824432373047

Token 227: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.771655115589965e-05
    2. '(' → logprob: -11.250018119812012
    3. '   ' → logprob: -12.750018119812012
    4. 'self' → logprob: -14.125018119812012
    5. ' (' → logprob: -14.250018119812012
    6. '(
' → logprob: -15.750018119812012
    7. '       ' → logprob: -15.750018119812012
    8. ' ' → logprob: -16.875017166137695
    9. 'def' → logprob: -17.000017166137695
    10. '()' → logprob: -18.500017166137695

Token 228: ')' (ID: 8)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3921094834804535
    2. '):' → logprob: -1.1421095132827759
    3. 'self' → logprob: -6.017109394073486
    4. ',' → logprob: -6.267109394073486
    5. '):
' → logprob: -8.142109870910645
    6. ')' → logprob: -8.267109870910645
    7. '(self' → logprob: -8.392109870910645
    8. '   ' → logprob: -9.517109870910645
    9. '       ' → logprob: -11.642109870910645
    10. '):

' → logprob: -11.642109870910645

Token 229: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.4656579120783135e-05
    2. '(' → logprob: -10.625044822692871
    3. 'self' → logprob: -11.625044822692871
    4. '   ' → logprob: -12.375044822692871
    5. '(
' → logprob: -12.875044822692871
    6. ':' → logprob: -13.250044822692871
    7. ':
' → logprob: -14.000044822692871
    8. '       ' → logprob: -14.500044822692871
    9. ' (' → logprob: -15.125044822692871
    10. 'def' → logprob: -15.250044822692871

Token 230: ' list' (ID: 1562)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.5389991998672485
    2. '[str' → logprob: -1.5389991998672485
    3. '[' → logprob: -2.038999080657959
    4. '[list' → logprob: -3.163999080657959
    5. '[self' → logprob: -4.413999080657959
    6. '[
' → logprob: -4.538999080657959
    7. 'list' → logprob: -5.663999080657959
    8. ' list' → logprob: -6.538999080657959
    9. '[List' → logprob: -6.913999080657959
    10. '[int' → logprob: -8.538999557495117

Token 231: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -0.0011798698687925935
    2. '[self' → logprob: -6.8761796951293945
    3. '   ' → logprob: -9.876179695129395
    4. '[' → logprob: -10.376179695129395
    5. '       ' → logprob: -11.001179695129395
    6. '[list' → logprob: -11.251179695129395
    7. ':
' → logprob: -11.501179695129395
    8. '[int' → logprob: -11.626179695129395
    9. '[
' → logprob: -12.251179695129395
    10. '[List' → logprob: -12.251179695129395

Token 232: ']:
' (ID: 22152)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5635973215103149
    2. '):' → logprob: -0.9385973215103149
    3. ':
' → logprob: -4.188597202301025
    4. ':' → logprob: -4.313597202301025
    5. '       ' → logprob: -5.438597202301025
    6. '():
' → logprob: -5.688597202301025
    7. '():' → logprob: -7.063597202301025
    8. '   ' → logprob: -7.313597202301025
    9. '):
' → logprob: -7.313597202301025
    10. ']:' → logprob: -7.313597202301025

Token 233: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008685722015798092
    2. 'return' → logprob: -5.50868558883667
    3. 'result' → logprob: -5.63368558883667
    4. 'processed' → logprob: -7.50868558883667
    5. ' return' → logprob: -8.508686065673828
    6. ' processed' → logprob: -8.633686065673828
    7. ' result' → logprob: -9.508686065673828
    8. 'results' → logprob: -11.633686065673828
    9. '   ' → logprob: -12.258686065673828
    10. 'output' → logprob: -12.758686065673828

Token 234: ' results' (ID: 4376)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.15508082509040833
    2. '       ' → logprob: -2.655080795288086
    3. ' return' → logprob: -2.655080795288086
    4. 'result' → logprob: -6.405080795288086
    5. '[' → logprob: -6.780080795288086
    6. ' [' → logprob: -8.905080795288086
    7. ' result' → logprob: -9.280080795288086
    8. 'processed' → logprob: -11.280080795288086
    9. '[result' → logprob: -11.655080795288086
    10. '[
' → logprob: -11.655080795288086

Token 235: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740842878818512
    2. ' =' → logprob: -0.9740842580795288
    3. '=[]' → logprob: -11.97408390045166
    4. '=[]
' → logprob: -14.59908390045166
    5. '   ' → logprob: -15.72408390045166
    6. ' ' → logprob: -15.84908390045166
    7. '[]' → logprob: -16.099084854125977
    8. ':' → logprob: -16.724084854125977
    9. '[:]' → logprob: -17.599084854125977
    10. '_' → logprob: -18.099084854125977

Token 236: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.04429713264107704
    2. '[]' → logprob: -3.294297218322754
    3. ' []
' → logprob: -5.294297218322754
    4. ' []' → logprob: -7.044297218322754
    5. ' [' → logprob: -8.544297218322754
    6. '[' → logprob: -9.044297218322754
    7. '[self' → logprob: -10.794297218322754
    8. '[]

' → logprob: -11.794297218322754
    9. '[
' → logprob: -13.169297218322754
    10. '[i' → logprob: -15.669297218322754

Token 237: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005803893320262432
    2. ' for' → logprob: -5.755804061889648
    3. 'for' → logprob: -6.005804061889648
    4. '   ' → logprob: -8.755804061889648
    5. '	' → logprob: -14.880804061889648
    6. '	for' → logprob: -15.130804061889648
    7. '
' → logprob: -16.88080406188965
    8. '           ' → logprob: -17.38080406188965
    9. ' ' → logprob: -17.38080406188965
    10. '	   ' → logprob: -18.00580406188965

Token 238: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0009842199506238103
    2. ' for' → logprob: -7.500984191894531
    3. '       ' → logprob: -7.750984191894531
    4. '   ' → logprob: -14.125984191894531
    5. '	for' → logprob: -16.12598419189453
    6. ' ' → logprob: -19.25098419189453
    7. '```' → logprob: -19.62598419189453
    8. '
' → logprob: -20.00098419189453
    9. '  ' → logprob: -21.62598419189453
    10. '	' → logprob: -21.87598419189453

Token 239: ' data' (ID: 1238)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.14957697689533234
    2. 'data' → logprob: -3.0245769023895264
    3. ' line' → logprob: -3.0245769023895264
    4. 'dataset' → logprob: -3.7745769023895264
    5. 'text' → logprob: -4.3995771408081055
    6. ' data' → logprob: -5.7745771408081055
    7. ' dataset' → logprob: -5.8995771408081055
    8. ' text' → logprob: -7.3995771408081055
    9. '   ' → logprob: -10.149577140808105
    10. 'item' → logprob: -11.149577140808105

Token 240: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0005563704180531204
    2. 'in' → logprob: -7.500556468963623
    3. '   ' → logprob: -14.000555992126465
    4. '_' → logprob: -14.125555992126465
    5. 'line' → logprob: -14.625555992126465
    6. ' ' → logprob: -15.000555992126465
    7. '_in' → logprob: -15.500555992126465
    8. '_line' → logprob: -15.750555992126465
    9. 'ine' → logprob: -15.875555992126465
    10. 's' → logprob: -15.875555992126465

Token 241: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.11284850537776947
    2. ' self' → logprob: -2.2378485202789307
    3. '       ' → logprob: -10.862848281860352
    4. '   ' → logprob: -12.487848281860352
    5. '(self' → logprob: -14.112848281860352
    6. '_self' → logprob: -14.737848281860352
    7. ' ' → logprob: -14.862848281860352
    8. '	self' → logprob: -14.862848281860352
    9. '    ' → logprob: -14.987848281860352
    10. '           ' → logprob: -15.112848281860352

Token 242: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -1.6240566083070007e-06
    2. ' .' → logprob: -14.250001907348633
    3. '.' → logprob: -14.625001907348633
    4. '   ' → logprob: -15.875001907348633
    5. ' ' → logprob: -16.625001907348633
    6. '
' → logprob: -16.875001907348633
    7. '       ' → logprob: -17.125001907348633
    8. '_' → logprob: -17.250001907348633
    9. 'self' → logprob: -17.625001907348633
    10. '_processed' → logprob: -18.375001907348633

Token 243: 'datasets' (ID: 170057)
  Prédit: 'datasets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'datasets' → logprob: -2.4391956685576588e-05
    2. '.datasets' → logprob: -11.250024795532227
    3. ' datasets' → logprob: -12.125024795532227
    4. 'processor' → logprob: -12.875024795532227
    5. '_dataset' → logprob: -13.250024795532227
    6. 'processors' → logprob: -15.000024795532227
    7. 'dataset' → logprob: -15.000024795532227
    8. 'atasets' → logprob: -15.125024795532227
    9. '_processor' → logprob: -15.375024795532227
    10. '_d' → logprob: -15.750024795532227

Token 244: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.42890438437461853
    2. ':
' → logprob: -1.053904414176941
    3. '           ' → logprob: -8.92890453338623
    4. '):
' → logprob: -10.30390453338623
    5. '       ' → logprob: -11.17890453338623
    6. ',' → logprob: -11.80390453338623
    7. ':
' → logprob: -11.92890453338623
    8. '):' → logprob: -12.67890453338623
    9. ':

' → logprob: -12.92890453338623
    10. ' :
' → logprob: -13.55390453338623

Token 245: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002283599227666855
    2. '
' → logprob: -6.252283573150635
    3. 'results' → logprob: -8.627284049987793
    4. ' results' → logprob: -9.127284049987793
    5. '            
' → logprob: -10.002284049987793
    6. '    
' → logprob: -11.502284049987793
    7. '```' → logprob: -12.377284049987793
    8. ' 
' → logprob: -13.127284049987793
    9. '        
' → logprob: -13.502284049987793
    10. '       ' → logprob: -14.127284049987793

Token 246: ' processed' (ID: 23478)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.593197226524353
    2. ' results' → logprob: -0.843197226524353
    3. ' processed' → logprob: -4.718197345733643
    4. 'processed' (adapté à ' processed') → logprob: -4.968197345733643
    5. '           ' → logprob: -7.218197345733643
    6. 'result' → logprob: -7.843197345733643
    7. '       ' → logprob: -9.843196868896484
    8. ' result' → logprob: -10.343196868896484
    9. '	results' → logprob: -11.718196868896484
    10. '
' → logprob: -14.093196868896484

Token 247: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6163048148155212
    2. ' =' → logprob: -0.8663048148155212
    3. '_text' → logprob: -3.366304874420166
    4. '_data' → logprob: -5.616304874420166
    5. '_line' → logprob: -6.616304874420166
    6. 'text' → logprob: -10.366304397583008
    7. '_' → logprob: -11.366304397583008
    8. 'data' → logprob: -12.366304397583008
    9. '=line' → logprob: -12.491304397583008
    10. '_str' → logprob: -12.741304397583008

Token 248: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004078878089785576
    2. ' self' → logprob: -5.5040788650512695
    3. '           ' → logprob: -14.75407886505127
    4. '(self' → logprob: -16.879079818725586
    5. '       ' → logprob: -18.254079818725586
    6. '[self' → logprob: -19.629079818725586
    7. '=self' → logprob: -19.754079818725586
    8. '
' → logprob: -20.379079818725586
    9. '               ' → logprob: -20.504079818725586
    10. '	self' → logprob: -20.879079818725586

Token 249: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -1.9361264946837764e-07
    2. '.' → logprob: -17.875
    3. '   ' → logprob: -18.125
    4. '.process' → logprob: -18.25
    5. ' .' → logprob: -18.375
    6. ')._' → logprob: -18.375
    7. '       ' → logprob: -18.875
    8. 'self' → logprob: -19.25
    9. ']._' → logprob: -19.5
    10. '_' → logprob: -19.875

Token 250: 'processor' (ID: 55600)
  Prédit: 'processor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'processor' → logprob: -7.896309739408025e-07
    2. ' processor' → logprob: -15.000000953674316
    3. '_processor' → logprob: -15.250000953674316
    4. 'process' → logprob: -15.750000953674316
    5. '.processor' → logprob: -17.125
    6. 'processed' → logprob: -18.875
    7. 'processors' → logprob: -19.125
    8. 'Processor' → logprob: -20.125
    9. 'processing' → logprob: -20.25
    10. 'proc' → logprob: -21.25

Token 251: '.process' (ID: 28604)
  Prédit: '.process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.process' → logprob: -3.292907877039397e-06
    2. '.' → logprob: -13.25000286102295
    3. 'process' → logprob: -13.50000286102295
    4. ' .' → logprob: -16.500003814697266
    5. '(process' → logprob: -20.625003814697266
    6. ').' → logprob: -20.750003814697266
    7. ' process' → logprob: -22.125003814697266
    8. '	process' → logprob: -22.625003814697266
    9. '.apply' → logprob: -22.750003814697266
    10. '.perform' → logprob: -23.375003814697266

Token 252: '(data' (ID: 4819)
  Prédit: '(data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(data' → logprob: -4.842555426876061e-06
    2. '(' → logprob: -12.250004768371582
    3. 'data' → logprob: -17.5000057220459
    4. ' (' → logprob: -17.7500057220459
    5. '(process' → logprob: -18.0000057220459
    6. '(text' → logprob: -20.1250057220459
    7. '(d' → logprob: -20.5000057220459
    8. '(
' → logprob: -20.5000057220459
    9. '(dat' → logprob: -20.7500057220459
    10. ')data' → logprob: -20.7500057220459

Token 253: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.01825892925262451
    2. ')' → logprob: -4.018259048461914
    3. '           ' → logprob: -9.518259048461914
    4. ')
' → logprob: -10.268259048461914
    5. ')

' → logprob: -14.768259048461914
    6. '       ' → logprob: -15.143259048461914
    7. ' )
' → logprob: -15.643259048461914
    8. '               ' → logprob: -17.018259048461914
    9. ')`
' → logprob: -18.018259048461914
    10. '   ' → logprob: -18.393259048461914

Token 254: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -8.709308167453855e-05
    2. 'results' → logprob: -9.750086784362793
    3. '       ' → logprob: -10.875086784362793
    4. '
' → logprob: -12.500086784362793
    5. '   ' → logprob: -12.750086784362793
    6. ' results' → logprob: -13.000086784362793
    7. '               ' → logprob: -15.625086784362793
    8. '		' → logprob: -15.875086784362793
    9. '            
' → logprob: -16.00008773803711
    10. '```' → logprob: -16.00008773803711

Token 255: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.07896910607814789
    2. ' results' → logprob: -2.5789690017700195
    3. '           ' → logprob: -9.70396900177002
    4. '
' → logprob: -11.20396900177002
    5. '	results' → logprob: -12.57896900177002
    6. '.results' → logprob: -14.32896900177002
    7. '(results' → logprob: -14.82896900177002
    8. '       ' → logprob: -15.70396900177002
    9. '            
' → logprob: -16.203969955444336
    10. '_results' → logprob: -16.953969955444336

Token 256: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00026538874953985214
    2. '.' → logprob: -8.250265121459961
    3. 'append' → logprob: -12.500265121459961
    4. '.extend' → logprob: -15.125265121459961
    5. '.Append' → logprob: -16.87526512145996
    6. '.app' → logprob: -17.62526512145996
    7. '.ap' → logprob: -17.75026512145996
    8. '_append' → logprob: -18.87526512145996
    9. ' append' → logprob: -19.50026512145996
    10. '.push' → logprob: -19.75026512145996

Token 257: '(process' (ID: 39808)
  Prédit: '(process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(process' → logprob: -1.0802738870552275e-05
    2. 'processed' → logprob: -11.50001049041748
    3. '(' → logprob: -14.50001049041748
    4. ' processed' → logprob: -16.125011444091797
    5. '(
' → logprob: -19.125011444091797
    6. ' (' → logprob: -19.750011444091797
    7. '_processed' → logprob: -20.625011444091797
    8. '(parsed' → logprob: -20.750011444091797
    9. '(p' → logprob: -21.125011444091797
    10. '(pro' → logprob: -21.125011444091797

Token 258: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -5.512236498361744e-07
    2. 'processed' → logprob: -16.0
    3. ')' → logprob: -16.25
    4. 'd' → logprob: -16.375
    5. '_processed' → logprob: -16.375
    6. 'ing' → logprob: -17.5
    7. 'ized' → logprob: -18.25
    8. '(process' → logprob: -18.375
    9. '```' → logprob: -18.5
    10. 'e' → logprob: -18.875

Token 259: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.6225619316101074
    2. '       ' → logprob: -1.2475619316101074
    3. ')' → logprob: -2.3725619316101074
    4. '
' → logprob: -2.4975619316101074
    5. ')return' → logprob: -8.372562408447266
    6. 'return' → logprob: -8.497562408447266
    7. '        
' → logprob: -9.247562408447266
    8. '   ' → logprob: -10.247562408447266
    9. '
' → logprob: -10.747562408447266
    10. '<|end|>' → logprob: -10.872562408447266

Token 260: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001093903905712068
    2. 'return' → logprob: -6.876093864440918
    3. ' return' → logprob: -10.001093864440918
    4. '   ' → logprob: -11.626093864440918
    5. '
' → logprob: -12.001093864440918
    6. '	' → logprob: -15.626093864440918
    7. '	return' → logprob: -15.876093864440918
    8. '           ' → logprob: -16.376094818115234
    9. '      ' → logprob: -16.501094818115234
    10. '        
' → logprob: -16.751094818115234

Token 261: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0011852304451167583
    2. '       ' → logprob: -7.001185417175293
    3. ' return' → logprob: -8.251185417175293
    4. '   ' → logprob: -11.376185417175293
    5. '
' → logprob: -14.251185417175293
    6. '	return' → logprob: -14.501185417175293
    7. '        
' → logprob: -18.126184463500977
    8. 'eturn' → logprob: -18.501184463500977
    9. '```' → logprob: -19.001184463500977
    10. '    ' → logprob: -19.126184463500977

Token 262: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.16022422909736633
    2. ' results' → logprob: -1.910224199295044
    3. '	results' → logprob: -16.66022491455078
    4. '(results' → logprob: -17.53522491455078
    5. '.results' → logprob: -19.16022491455078
    6. 'result' → logprob: -20.28522491455078
    7. 'Results' → logprob: -20.41022491455078
    8. '_results' → logprob: -21.41022491455078
    9. ' ' → logprob: -22.28522491455078
    10. ' ' → logprob: -23.41022491455078

Token 263: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 264: 'class' (ID: 1444)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.05428696423768997
    2. 'def' → logprob: -3.3042869567871094
    3. 'class' → logprob: -4.929286956787109
    4. 'if' → logprob: -5.929286956787109
    5. 'processor' → logprob: -6.054286956787109
    6. '```' → logprob: -6.304286956787109
    7. 'word' → logprob: -7.429286956787109
    8. 'replace' → logprob: -8.17928695678711
    9. '
' → logprob: -8.42928695678711
    10. 'replacement' → logprob: -8.42928695678711

Token 265: ' Input' (ID: 10090)
  Prédit: ' Text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Text' → logprob: -0.8185329437255859
    2. ' Data' → logprob: -2.193532943725586
    3. ' Upper' → logprob: -2.443532943725586
    4. ' Dataset' → logprob: -2.443532943725586
    5. 'Text' → logprob: -2.568532943725586
    6. ' Advanced' → logprob: -3.193532943725586
    7. 'Upper' → logprob: -3.693532943725586
    8. 'Data' → logprob: -4.568532943725586
    9. ' Sentence' → logprob: -4.568532943725586
    10. 'Advanced' → logprob: -4.693532943725586

Token 266: 'Output' (ID: 6310)
  Prédit: 'Handler'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Handler' → logprob: -0.09620741009712219
    2. 'Reader' → logprob: -2.4712073802948
    3. 'Processor' → logprob: -5.596207618713379
    4. 'Data' → logprob: -6.721207618713379
    5. 'Parser' → logprob: -6.971207618713379
    6. 'Provider' → logprob: -7.471207618713379
    7. 'Manager' → logprob: -7.971207618713379
    8. 'Interface' → logprob: -8.596207618713379
    9. 'Receiver' → logprob: -9.846207618713379
    10. 'Buffer' → logprob: -10.346207618713379

Token 267: 'Controller' (ID: 2947)
  Prédit: 'Handler'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Handler' → logprob: -0.11483380943536758
    2. 'Manager' → logprob: -2.3648338317871094
    3. 'Processor' → logprob: -4.614833831787109
    4. 'Interface' → logprob: -5.614833831787109
    5. 'Helper' → logprob: -7.239833831787109
    6. 'System' → logprob: -9.23983383178711
    7. 'Controller' → logprob: -9.61483383178711
    8. 'Wrapper' → logprob: -10.23983383178711
    9. 'handler' → logprob: -11.61483383178711
    10. 'Assistant' → logprob: -11.98983383178711

Token 268: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003184244269505143
    2. ':
' → logprob: -5.7531843185424805
    3. ' :' → logprob: -13.75318431854248
    4. '<|end|>' → logprob: -13.75318431854248
    5. ':def' → logprob: -13.75318431854248
    6. '():' → logprob: -14.12818431854248
    7. ':

' → logprob: -14.25318431854248
    8. '):' → logprob: -15.12818431854248
    9. ':**' → logprob: -15.25318431854248
    10. '(QWidget' → logprob: -15.50318431854248

Token 269: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00016480287013109773
    2. ' def' → logprob: -8.875164985656738
    3. 'def' → logprob: -10.625164985656738
    4. 'class' → logprob: -15.125164985656738
    5. '```' → logprob: -16.250164031982422
    6. '   ' → logprob: -16.375164031982422
    7. '    
' → logprob: -17.000164031982422
    8. ':' → logprob: -17.125164031982422
    9. ' class' → logprob: -17.875164031982422
    10. '
' → logprob: -18.375164031982422

Token 270: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.7764664888381958
    2. 'def' (adapté à ' def') → logprob: -0.7764664888381958
    3. '   ' → logprob: -2.5264663696289062
    4. '	def' → logprob: -14.151466369628906
    5. '```' → logprob: -15.276466369628906
    6. 'class' → logprob: -16.026466369628906
    7. ':def' → logprob: -16.151466369628906
    8. 'de' → logprob: -16.276466369628906
    9. ' ' → logprob: -16.401466369628906
    10. 'import' → logprob: -16.651466369628906

Token 271: ' __' (ID: 2516)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.6875730752944946
    2. 'def' → logprob: -1.1875730752944946
    3. ' __' → logprob: -1.6875730752944946
    4. '__' → logprob: -4.937572956085205
    5. ' ' → logprob: -10.687573432922363
    6. '```' → logprob: -11.062573432922363
    7. '   ' → logprob: -11.187573432922363
    8. 'init' → logprob: -11.187573432922363
    9. '  ' → logprob: -12.062573432922363
    10. ' run' → logprob: -12.312573432922363

Token 272: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -2.5776860184123507e-06
    2. 'def' → logprob: -13.00000286102295
    3. '_init' → logprob: -16.125001907348633
    4. 'new' → logprob: -17.000001907348633
    5. '   ' → logprob: -17.125001907348633
    6. ' init' → logprob: -17.500001907348633
    7. 'in' → logprob: -18.375001907348633
    8. 'ini' → logprob: -18.375001907348633
    9. '(init' → logprob: -18.500001907348633
    10. 'call' → logprob: -19.625001907348633

Token 273: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0014984336448833346
    2. '(self' → logprob: -6.626498222351074
    3. '__' → logprob: -8.751498222351074
    4. '__(
' → logprob: -11.751498222351074
    5. '_(' → logprob: -12.501498222351074
    6. ' (' → logprob: -13.126498222351074
    7. '(' → logprob: -15.126498222351074
    8. '__((' → logprob: -15.376498222351074
    9. 'self' → logprob: -16.25149917602539
    10. '```' → logprob: -16.50149917602539

Token 274: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -6.0033853515051305e-05
    2. ' self' → logprob: -9.750060081481934
    3. ')' → logprob: -14.000060081481934
    4. '):
' → logprob: -14.750060081481934
    5. '
' → logprob: -15.250060081481934
    6. '   ' → logprob: -16.750059127807617
    7. '       ' → logprob: -16.750059127807617
    8. ')
' → logprob: -18.125059127807617
    9. ' ' → logprob: -18.625059127807617
    10. '(self' → logprob: -18.750059127807617

Token 275: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018911674851551652
    2. '):' → logprob: -9.250188827514648
    3. 'self' → logprob: -9.625188827514648
    4. '):
' → logprob: -10.625188827514648
    5. ' ,' → logprob: -14.500188827514648
    6. ')' → logprob: -14.750188827514648
    7. '(self' → logprob: -14.750188827514648
    8. '__,' → logprob: -14.750188827514648
    9. '):
' → logprob: -15.250188827514648
    10. '__' → logprob: -16.00018882751465

Token 276: ' handler' (ID: 13310)
  Prédit: 'processor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'processor' → logprob: -0.012416407465934753
    2. ' processor' → logprob: -4.887416362762451
    3. '):
' → logprob: -6.762416362762451
    4. '):' → logprob: -6.887416362762451
    5. 'input' → logprob: -7.012416362762451
    6. 'self' → logprob: -7.137416362762451
    7. 'dataset' → logprob: -8.13741683959961
    8. ')' → logprob: -8.51241683959961
    9. '   ' → logprob: -8.76241683959961
    10. 'output' → logprob: -9.88741683959961

Token 277: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.633183479309082
    2. '):' → logprob: -0.758183479309082
    3. '):
' → logprob: -8.133183479309082
    4. ' ):' → logprob: -8.883183479309082
    5. ')' → logprob: -9.633183479309082
    6. '   ' → logprob: -10.008183479309082
    7. ' :' → logprob: -11.133183479309082
    8. ',' → logprob: -11.383183479309082
    9. '}:' → logprob: -12.133183479309082
    10. '  ' → logprob: -12.758183479309082

Token 278: ' Dataset' (ID: 79063)
  Prédit: 'Dataset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dataset' → logprob: -0.6931474208831787
    2. ' Dataset' → logprob: -0.6931474208831787
    3. '   ' → logprob: -15.818147659301758
    4. ' ' → logprob: -18.068147659301758
    5. '.Dataset' → logprob: -18.068147659301758
    6. ')' → logprob: -18.068147659301758
    7. 'Data' → logprob: -18.193147659301758
    8. ' dataset' → logprob: -18.818147659301758
    9. 'Input' → logprob: -18.818147659301758
    10. '_dataset' → logprob: -18.943147659301758

Token 279: 'Handler' (ID: 4139)
  Prédit: 'Handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Handler' → logprob: -1.9361264946837764e-07
    2. 'handler' → logprob: -16.125
    3. ')' → logprob: -17.25
    4. 'Handle' → logprob: -17.375
    5. '_Handler' → logprob: -18.125
    6. ' Handler' → logprob: -18.625
    7. '_handler' → logprob: -19.0
    8. '   ' → logprob: -19.125
    9. '_HANDLER' → logprob: -19.875
    10. '
' → logprob: -20.0

Token 280: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02979503758251667
    2. '):
' → logprob: -3.529794931411743
    3. '   ' → logprob: -10.904794692993164
    4. ')' → logprob: -11.529794692993164
    5. '):
' → logprob: -11.779794692993164
    6. '       ' → logprob: -11.904794692993164
    7. ',' → logprob: -13.779794692993164
    8. ':' → logprob: -14.779794692993164
    9. ' ):' → logprob: -15.654794692993164
    10. '):

' → logprob: -15.654794692993164

Token 281: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006185544189065695
    2. 'self' → logprob: -7.5006184577941895
    3. ' self' → logprob: -10.000618934631348
    4. '   ' → logprob: -10.875618934631348
    5. '	self' → logprob: -14.125618934631348
    6. 'def' → logprob: -14.875618934631348
    7. '	' → logprob: -16.75061798095703
    8. ',' → logprob: -16.87561798095703
    9. '(self' → logprob: -17.25061798095703
    10. '           ' → logprob: -17.75061798095703

Token 282: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.04868263378739357
    2. ' self' → logprob: -3.298682689666748
    3. '       ' → logprob: -4.548682689666748
    4. '	self' → logprob: -12.67368221282959
    5. '   ' → logprob: -15.04868221282959
    6. '(self' → logprob: -16.798683166503906
    7. ' ' → logprob: -17.048683166503906
    8. '﻿' → logprob: -17.048683166503906
    9. '	' → logprob: -17.423683166503906
    10. ' ' → logprob: -17.548683166503906

Token 283: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -9.849109119386412e-06
    2. '   ' → logprob: -12.125009536743164
    3. '.' → logprob: -13.500009536743164
    4. '.handler' → logprob: -13.750009536743164
    5. '_handler' → logprob: -14.125009536743164
    6. '       ' → logprob: -14.625009536743164
    7. ' .' → logprob: -14.625009536743164
    8. '.__' → logprob: -16.250009536743164
    9. '	' → logprob: -16.375009536743164
    10. ' ' → logprob: -16.750009536743164

Token 284: 'handler' (ID: 25283)
  Prédit: 'handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'handler' → logprob: -2.1008713702030946e-06
    2. '_handler' → logprob: -13.250001907348633
    3. 'handle' → logprob: -16.125001907348633
    4. '	handler' → logprob: -17.250001907348633
    5. ' handler' → logprob: -17.375001907348633
    6. 'hand' → logprob: -17.625001907348633
    7. 'input' → logprob: -18.000001907348633
    8. 'controller' → logprob: -18.375001907348633
    9. '.handler' → logprob: -19.000001907348633
    10. '(handler' → logprob: -19.250001907348633

Token 285: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519327998161316
    2. '=' → logprob: -1.5019328594207764
    3. '   ' → logprob: -12.876933097839355
    4. '_handler' → logprob: -14.501933097839355
    5. ' ' → logprob: -15.001933097839355
    6. '=_' → logprob: -16.87693214416504
    7. '       ' → logprob: -17.25193214416504
    8. '._' → logprob: -17.50193214416504
    9. 'handler' → logprob: -17.50193214416504
    10. '    ' → logprob: -17.62693214416504

Token 286: ' handler' (ID: 13310)
  Prédit: 'handler'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'handler' → logprob: -0.023246755823493004
    2. ' handler' → logprob: -3.7732467651367188
    3. '	handler' → logprob: -13.773246765136719
    4. '(handler' → logprob: -15.398246765136719
    5. '.handler' → logprob: -17.77324676513672
    6. '_handler' → logprob: -19.02324676513672
    7. '   ' → logprob: -19.27324676513672
    8. 'Handler' → logprob: -19.52324676513672
    9. 'handle' → logprob: -19.52324676513672
    10. 'hand' → logprob: -20.27324676513672

Token 287: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02830859087407589
    2. '
' → logprob: -3.653308629989624
    3. '    
' → logprob: -6.278308391571045
    4. 'def' → logprob: -9.153308868408203
    5. '        
' → logprob: -10.778308868408203
    6. '  
' → logprob: -14.278308868408203
    7. ' def' → logprob: -14.653308868408203
    8. '```' → logprob: -14.903308868408203
    9. '

' → logprob: -15.028308868408203
    10. ' 
' → logprob: -15.153308868408203

Token 288: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008781317621469498
    2. 'def' → logprob: -4.758781433105469
    3. '
' → logprob: -9.133781433105469
    4. ' def' → logprob: -10.383781433105469
    5. '    
' → logprob: -10.508781433105469
    6. '	def' → logprob: -15.633781433105469
    7. '        
' → logprob: -15.758781433105469
    8. 'import' → logprob: -16.25878143310547
    9. '```' → logprob: -16.38378143310547
    10. '   ' → logprob: -17.63378143310547

Token 289: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -9.722539834911004e-05
    2. ' def' → logprob: -9.250097274780273
    3. '   ' → logprob: -13.750097274780273
    4. '	def' → logprob: -20.250097274780273
    5. '
' → logprob: -22.250097274780273
    6. '```' → logprob: -22.875097274780273
    7. 'async' → logprob: -23.625097274780273
    8. 'class' → logprob: -23.750097274780273
    9. '    
' → logprob: -23.750097274780273
    10. 'de' → logprob: -24.000097274780273

Token 290: ' execute' (ID: 15792)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.8085810542106628
    2. 'run' → logprob: -0.8085810542106628
    3. ' run' → logprob: -3.1835811138153076
    4. 'def' → logprob: -3.1835811138153076
    5. ' read' → logprob: -4.3085808753967285
    6. ' def' → logprob: -5.3085808753967285
    7. 'process' → logprob: -5.3085808753967285
    8. ' process' → logprob: -6.8085808753967285
    9. 'load' → logprob: -7.0585808753967285
    10. 'execute' → logprob: -7.6835808753967285

Token 291: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0003961185284424573
    2. '(' → logprob: -7.875396251678467
    3. '():' → logprob: -11.875395774841309
    4. ' (' → logprob: -12.875395774841309
    5. '():
' → logprob: -13.125395774841309
    6. 'self' → logprob: -13.375395774841309
    7. '(input' → logprob: -14.000395774841309
    8. '()' → logprob: -14.125395774841309
    9. '   ' → logprob: -14.750395774841309
    10. '_input' → logprob: -14.875395774841309

Token 292: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19570662081241608
    2. '):
' → logprob: -1.8207066059112549
    3. '):' → logprob: -4.195706844329834
    4. 'self' → logprob: -8.070706367492676
    5. ' ,' → logprob: -8.570706367492676
    6. ',input' → logprob: -9.070706367492676
    7. ')' → logprob: -10.445706367492676
    8. '):
' → logprob: -10.445706367492676
    9. '   ' → logprob: -10.570706367492676
    10. ' ):
' → logprob: -11.070706367492676

Token 293: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0034803354647010565
    2. 'count' → logprob: -6.003480434417725
    3. 'import' → logprob: -7.503480434417725
    4. ' count' → logprob: -9.003479957580566
    5. 'n' → logprob: -9.128479957580566
    6. ' import' → logprob: -9.378479957580566
    7. ' lines' → logprob: -9.503479957580566
    8. ' n' → logprob: -11.003479957580566
    9. '```' → logprob: -11.503479957580566
    10. 'lines' → logprob: -11.878479957580566

Token 294: ' n' (ID: 297)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.09953145682811737
    2. 'n' (adapté à ' n') → logprob: -2.599531412124634
    3. '       ' → logprob: -4.724531650543213
    4. 'import' → logprob: -4.849531650543213
    5. ' count' → logprob: -6.474531650543213
    6. ' n' → logprob: -6.724531650543213
    7. 'try' → logprob: -7.099531650543213
    8. ' import' → logprob: -9.724531173706055
    9. 'num' → logprob: -9.974531173706055
    10. 'input' → logprob: -10.849531173706055

Token 295: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0026101404801011086
    2. '=' → logprob: -6.127610206604004
    3. '=int' → logprob: -8.002610206604004
    4. '   ' → logprob: -9.502610206604004
    5. 'um' → logprob: -11.752610206604004
    6. '    ' → logprob: -13.002610206604004
    7. ' ' → logprob: -13.377610206604004
    8. '  ' → logprob: -13.877610206604004
    9. '     ' → logprob: -13.877610206604004
    10. '=input' → logprob: -14.627610206604004

Token 296: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0485873706638813
    2. ' int' → logprob: -3.0485873222351074
    3. '   ' → logprob: -17.298587799072266
    4. '	int' → logprob: -18.798587799072266
    5. '(int' → logprob: -18.923587799072266
    6. '[int' → logprob: -18.923587799072266
    7. 'input' → logprob: -19.423587799072266
    8. 'len' → logprob: -19.673587799072266
    9. '  ' → logprob: -19.673587799072266
    10. ' ' → logprob: -20.048587799072266

Token 297: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -2.975612187583465e-05
    2. 'input' → logprob: -11.000029563903809
    3. '(' → logprob: -11.250029563903809
    4. ' input' → logprob: -20.125030517578125
    5. ' (' → logprob: -20.250030517578125
    6. '(sys' → logprob: -20.500030517578125
    7. '(
' → logprob: -20.625030517578125
    8. '=input' → logprob: -20.875030517578125
    9. '(open' → logprob: -21.125030517578125
    10. '((' → logprob: -22.000030517578125

Token 298: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.003139451378956437
    2. '())
' → logprob: -6.253139495849609
    3. '()' → logprob: -6.753139495849609
    4. '().' → logprob: -10.75313949584961
    5. '(' → logprob: -11.87813949584961
    6. '())

' → logprob: -12.00313949584961
    7. '())
' → logprob: -12.62813949584961
    8. '()
' → logprob: -12.75313949584961
    9. ' ())' → logprob: -13.75313949584961
    10. '("' → logprob: -14.87813949584961

Token 299: '       ' (ID: 309)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.2692788541316986
    2. '       ' → logprob: -1.894278883934021
    3. ' lines' → logprob: -2.5192787647247314
    4. '	lines' → logprob: -5.8942790031433105
    5. 'for' → logprob: -6.7692790031433105
    6. 'data' → logprob: -7.6442790031433105
    7. 'results' → logprob: -8.769278526306152
    8. '(lines' → logprob: -9.144278526306152
    9. 'texts' → logprob: -9.269278526306152
    10. '	' → logprob: -9.519278526306152

Token 300: ' datasets' (ID: 57711)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.00010413920972496271
    2. 'inputs' → logprob: -10.000103950500488
    3. '       ' → logprob: -11.125103950500488
    4. 'data' → logprob: -11.125103950500488
    5. ' lines' → logprob: -11.250103950500488
    6. 'texts' → logprob: -11.750103950500488
    7. 'input' → logprob: -12.250103950500488
    8. 'datasets' (adapté à ' datasets') → logprob: -13.750103950500488
    9. 'line' → logprob: -14.250103950500488
    10. '	lines' → logprob: -14.750103950500488

Token 301: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4741378128528595
    2. ' =' → logprob: -0.9741377830505371
    3. '=[]' → logprob: -9.724138259887695
    4. '=[]
' → logprob: -14.474138259887695
    5. '=[]
' → logprob: -15.849138259887695
    6. ':' → logprob: -16.474138259887695
    7. '_lines' → logprob: -17.224138259887695
    8. '=[' → logprob: -17.474138259887695
    9. ' ' → logprob: -17.724138259887695
    10. ' ' → logprob: -17.849138259887695

Token 302: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03338136523962021
    2. '[n' → logprob: -4.033381462097168
    3. '[input' → logprob: -4.533381462097168
    4. '[int' → logprob: -7.283381462097168
    5. '[str' → logprob: -7.533381462097168
    6. '[text' → logprob: -8.033381462097168
    7. '[next' → logprob: -8.283381462097168
    8. '[new' → logprob: -8.283381462097168
    9. '[id' → logprob: -8.283381462097168
    10. '[list' → logprob: -8.533381462097168

Token 303: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0002036595979006961
    2. ' input' → logprob: -8.500204086303711
    3. '           ' → logprob: -16.37520408630371
    4. '   ' → logprob: -17.12520408630371
    5. '(input' → logprob: -18.00020408630371
    6. '               ' → logprob: -18.12520408630371
    7. '       ' → logprob: -19.00020408630371
    8. '<input' → logprob: -19.12520408630371
    9. '                   ' → logprob: -19.12520408630371
    10. '
' → logprob: -19.62520408630371

Token 304: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0031815171241760254
    2. '().' → logprob: -5.753181457519531
    3. '())' → logprob: -13.503181457519531
    4. '()]' → logprob: -14.003181457519531
    5. ' ()' → logprob: -14.128181457519531
    6. '()
' → logprob: -14.128181457519531
    7. '(' → logprob: -17.25318145751953
    8. '()`' → logprob: -17.50318145751953
    9. '（）' → logprob: -18.37818145751953
    10. '()"' → logprob: -18.50318145751953

Token 305: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.33959877490997314
    2. 'for' → logprob: -1.3395987749099731
    3. '()' → logprob: -3.7145986557006836
    4. '.strip' → logprob: -7.214598655700684
    5. '().' → logprob: -7.714598655700684
    6. '   ' → logprob: -8.589598655700684
    7. '	for' → logprob: -9.214598655700684
    8. ')' → logprob: -9.464598655700684
    9. '.rstrip' → logprob: -10.839598655700684
    10. '       ' → logprob: -11.214598655700684

Token 306: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2519526183605194
    2. ' _' → logprob: -1.5019526481628418
    3. '_range' → logprob: -11.001952171325684
    4. ' in' → logprob: -13.376952171325684
    5. ' range' → logprob: -13.501952171325684
    6. '_in' → logprob: -13.501952171325684
    7. '_i' → logprob: -13.751952171325684
    8. '_n' → logprob: -14.251952171325684
    9. ' ' → logprob: -15.126952171325684
    10. ' i' → logprob: -15.626952171325684

Token 307: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.18202905356884003
    2. ' range' → logprob: -2.1820290088653564
    3. ' in' → logprob: -2.9320290088653564
    4. 'in' → logprob: -8.057028770446777
    5. ' ' → logprob: -13.182028770446777
    6. '   ' → logprob: -13.807028770446777
    7. '  ' → logprob: -14.432028770446777
    8. 'n' → logprob: -15.307028770446777
    9. '_range' → logprob: -15.307028770446777
    10. 'ange' → logprob: -15.432028770446777

Token 308: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01815052703022957
    2. ' range' → logprob: -4.018150329589844
    3. ' ' → logprob: -15.393150329589844
    4. '   ' → logprob: -16.143150329589844
    5. '  ' → logprob: -16.393150329589844
    6. '	range' → logprob: -16.893150329589844
    7. '_' → logprob: -17.643150329589844
    8. '    ' → logprob: -18.018150329589844
    9. '(range' → logprob: -18.393150329589844
    10. '_range' → logprob: -18.393150329589844

Token 309: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0012382064014673233
    2. 'n' → logprob: -7.0012383460998535
    3. ' n' → logprob: -8.126237869262695
    4. '(' → logprob: -10.876237869262695
    5. ' (' → logprob: -11.376237869262695
    6. '	n' → logprob: -14.751237869262695
    7. ')n' → logprob: -16.251237869262695
    8. '_n' → logprob: -16.626237869262695
    9. ')' → logprob: -17.876237869262695
    10. '
' → logprob: -18.001237869262695

Token 310: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -2.176947600673884e-05
    2. ']' → logprob: -11.375021934509277
    3. ')]
' → logprob: -11.750021934509277
    4. ')' → logprob: -13.250021934509277
    5. '       ' → logprob: -15.000021934509277
    6. ' )' → logprob: -17.00002098083496
    7. '])' → logprob: -17.12502098083496
    8. '')]' → logprob: -17.25002098083496
    9. ')]
' → logprob: -17.25002098083496
    10. ']
' → logprob: -17.37502098083496

Token 311: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0036435495130717754
    2. 'self' → logprob: -5.62864351272583
    3. ' self' → logprob: -10.378643989562988
    4. '   ' → logprob: -11.878643989562988
    5. '<|end|>' → logprob: -13.003643989562988
    6. '        
' → logprob: -13.753643989562988
    7. '	self' → logprob: -14.503643989562988
    8. '
' → logprob: -14.878643989562988
    9. '           ' → logprob: -15.003643989562988
    10. '```' → logprob: -15.128643989562988

Token 312: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00011641718447208405
    2. '       ' → logprob: -9.875116348266602
    3. ' self' → logprob: -9.875116348266602
    4. 'try' → logprob: -11.250116348266602
    5. '   ' → logprob: -15.375116348266602
    6. '        
' → logprob: -17.1251163482666
    7. '	self' → logprob: -17.2501163482666
    8. '```' → logprob: -17.2501163482666
    9. '
' → logprob: -17.7501163482666
    10. '           ' → logprob: -18.0001163482666

Token 313: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -1.7432603272027336e-06
    2. ']._' → logprob: -14.125001907348633
    3. ')._' → logprob: -14.500001907348633
    4. '_' → logprob: -15.500001907348633
    5. '.' → logprob: -16.125001907348633
    6. '->_' → logprob: -16.500001907348633
    7. ' .' → logprob: -16.500001907348633
    8. '
' → logprob: -17.125001907348633
    9. '   ' → logprob: -17.875001907348633
    10. '_t' → logprob: -18.625001907348633

Token 314: 'handler' (ID: 25283)
  Prédit: 'handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'handler' → logprob: -2.339278580620885e-06
    2. 'handle' → logprob: -13.750001907348633
    3. '.handler' → logprob: -14.750001907348633
    4. '_handler' → logprob: -14.750001907348633
    5. 'andler' → logprob: -16.500001907348633
    6. '	handler' → logprob: -16.500001907348633
    7. 'hand' → logprob: -16.750001907348633
    8. ' handler' → logprob: -16.750001907348633
    9. 'controller' → logprob: -16.875001907348633
    10. 'holder' → logprob: -17.000001907348633

Token 315: '.load' (ID: 9383)
  Prédit: '.load'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.load' → logprob: -1.9361264946837764e-07
    2. '.' → logprob: -16.0
    3. 'load' → logprob: -19.75
    4. ' .' → logprob: -19.875
    5. '.loads' → logprob: -20.0
    6. '.Load' → logprob: -20.75
    7. '.import' → logprob: -20.75
    8. '.apply' → logprob: -21.375
    9. '.upload' → logprob: -21.375
    10. '.reload' → logprob: -21.5

Token 316: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -5.080963092041202e-06
    2. '(' → logprob: -12.375004768371582
    3. ' (' → logprob: -14.125004768371582
    4. '(
' → logprob: -16.3750057220459
    5. '(len' → logprob: -17.0000057220459
    6. 'n' → logprob: -20.7500057220459
    7. '```' → logprob: -20.7500057220459
    8. '(count' → logprob: -22.1250057220459
    9. '(number' → logprob: -22.2500057220459
    10. '(num' → logprob: -22.3750057220459

Token 317: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000693016336299479
    2. ',d' → logprob: -7.375692844390869
    3. ' ,' → logprob: -9.625693321228027
    4. ',
' → logprob: -15.375693321228027
    5. 'datasets' → logprob: -15.875693321228027
    6. ',n' → logprob: -16.75069236755371
    7. ')' → logprob: -17.87569236755371
    8. ' datasets' → logprob: -18.25069236755371
    9. '       ' → logprob: -18.50069236755371
    10. '   ' → logprob: -18.62569236755371

Token 318: ' datasets' (ID: 57711)
  Prédit: 'datasets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'datasets' → logprob: -0.1269325166940689
    2. ' datasets' → logprob: -2.1269326210021973
    3. '.datasets' → logprob: -13.626932144165039
    4. 'dataset' → logprob: -13.626932144165039
    5. 'dat' → logprob: -13.751932144165039
    6. 'datas' → logprob: -15.001932144165039
    7. 'd' → logprob: -15.626932144165039
    8. 'Datas' → logprob: -15.876932144165039
    9. 'atasets' → logprob: -15.876932144165039
    10. ' datas' → logprob: -16.75193214416504

Token 319: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.10629407316446304
    2. ')' → logprob: -2.3562941551208496
    3. '       ' → logprob: -5.10629415512085
    4. ')
' → logprob: -11.731293678283691
    5. '
' → logprob: -14.106293678283691
    6. ')

' → logprob: -14.356293678283691
    7. '   ' → logprob: -14.856293678283691
    8. ' )
' → logprob: -15.231293678283691
    9. '<|end|>' → logprob: -15.606293678283691
    10. ')return' → logprob: -16.606294631958008

Token 320: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6865177154541016
    2. 'results' → logprob: -1.6865177154541016
    3. ' results' → logprob: -1.6865177154541016
    4. 'processed' → logprob: -2.8115177154541016
    5. ' processed' → logprob: -2.9365177154541016
    6. 'result' → logprob: -4.936517715454102
    7. 'outputs' → logprob: -6.311517715454102
    8. ' result' → logprob: -6.311517715454102
    9. 'output' → logprob: -6.561517715454102
    10. ' output' → logprob: -7.936517715454102

Token 321: ' outputs' (ID: 32725)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.0964486300945282
    2. 'processed' → logprob: -2.5964486598968506
    3. ' results' → logprob: -4.3464484214782715
    4. 'outputs' (adapté à ' outputs') → logprob: -5.9714484214782715
    5. ' processed' → logprob: -6.8464484214782715
    6. 'result' → logprob: -7.9714484214782715
    7. 'output' → logprob: -7.9714484214782715
    8. '       ' → logprob: -9.09644889831543
    9. ' outputs' → logprob: -11.22144889831543
    10. 'for' → logprob: -11.22144889831543

Token 322: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1002068892121315
    2. '=' → logprob: -2.3502068519592285
    3. '   ' → logprob: -15.225207328796387
    4. ' ' → logprob: -17.47520637512207
    5. '_' → logprob: -18.60020637512207
    6. ' ' → logprob: -18.60020637512207
    7. '    ' → logprob: -18.97520637512207
    8. '＝' → logprob: -19.22520637512207
    9. ':' → logprob: -20.10020637512207
    10. '.' → logprob: -20.10020637512207

Token 323: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6931478381156921
    2. 'self' → logprob: -0.6931478381156921
    3. '       ' → logprob: -14.943147659301758
    4. '[self' → logprob: -15.568147659301758
    5. '(self' → logprob: -16.318147659301758
    6. '	self' → logprob: -17.318147659301758
    7. '   ' → logprob: -17.693147659301758
    8. '           ' → logprob: -18.318147659301758
    9. '        ' → logprob: -19.568147659301758
    10. '=self' → logprob: -19.818147659301758

Token 324: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -2.1888679839321412e-05
    2. '_handler' → logprob: -10.750021934509277
    3. '   ' → logprob: -16.25002098083496
    4. ' .' → logprob: -16.87502098083496
    5. '.' → logprob: -17.25002098083496
    6. '.apply' → logprob: -17.37502098083496
    7. '       ' → logprob: -17.50002098083496
    8. ')._' → logprob: -17.62502098083496
    9. '
' → logprob: -17.87502098083496
    10. ']._' → logprob: -18.00002098083496

Token 325: 'handler' (ID: 25283)
  Prédit: 'handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'handler' → logprob: -1.1472419600977446e-06
    2. '_handler' → logprob: -14.625000953674316
    3. '(handler' → logprob: -15.875000953674316
    4. '	handler' → logprob: -15.875000953674316
    5. 'handle' → logprob: -16.125001907348633
    6. '.handler' → logprob: -16.250001907348633
    7. '_' → logprob: -17.125001907348633
    8. 'hand' → logprob: -17.750001907348633
    9. ' handler' → logprob: -18.125001907348633
    10. '-handler' → logprob: -18.250001907348633

Token 326: '.apply' (ID: 23624)
  Prédit: '.apply'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.apply' → logprob: -2.2200749754119897e-06
    2. 'apply' → logprob: -14.250001907348633
    3. '.' → logprob: -14.375001907348633
    4. '._' → logprob: -14.500001907348633
    5. ' .' → logprob: -15.375001907348633
    6. '.execute' → logprob: -16.250001907348633
    7. '.perform' → logprob: -17.000001907348633
    8. '.process' → logprob: -17.250001907348633
    9. '.load' → logprob: -19.125001907348633
    10. '_.' → logprob: -19.125001907348633

Token 327: '_processing' (ID: 142889)
  Prédit: '_processing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_processing' → logprob: -3.4121114822482923e-06
    2. 'processing' → logprob: -12.625003814697266
    3. '_process' → logprob: -16.875003814697266
    4. 'Processing' → logprob: -17.625003814697266
    5. 's' → logprob: -19.125003814697266
    6. ' processing' → logprob: -19.125003814697266
    7. 'rocessing' → logprob: -19.125003814697266
    8. '.processing' → logprob: -20.125003814697266
    9. '_processed' → logprob: -20.125003814697266
    10. '-processing' → logprob: -20.625003814697266

Token 328: '()
' (ID: 1234)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2099752426147461
    2. '       ' → logprob: -1.709975242614746
    3. ' for' → logprob: -4.959975242614746
    4. '
' → logprob: -6.584975242614746
    5. '   ' → logprob: -9.334975242614746
    6. '()
' → logprob: -10.584975242614746
    7. '        
' → logprob: -12.084975242614746
    8. '```' → logprob: -12.334975242614746
    9. 'return' → logprob: -13.209975242614746
    10. '	for' → logprob: -13.709975242614746

Token 329: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01963544823229313
    2. 'for' → logprob: -4.0196356773376465
    3. ' for' → logprob: -6.5196356773376465
    4. '   ' → logprob: -11.769635200500488
    5. '```' → logprob: -13.519635200500488
    6. '	for' → logprob: -14.644635200500488
    7. '	' → logprob: -14.894635200500488
    8. '        
' → logprob: -15.769635200500488
    9. '           ' → logprob: -16.144636154174805
    10. '
' → logprob: -16.519636154174805

Token 330: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -1.981667537620524e-06
    2. ' for' → logprob: -13.500001907348633
    3. '       ' → logprob: -14.500001907348633
    4. '	for' → logprob: -20.000001907348633
    5. 'print' → logprob: -20.125001907348633
    6. '
' → logprob: -22.875001907348633
    7. '   ' → logprob: -23.250001907348633
    8. '        
' → logprob: -24.500001907348633
    9. 'return' → logprob: -24.750001907348633
    10. '```' → logprob: -24.875001907348633

Token 331: ' line' (ID: 2543)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' → logprob: -0.044917888939380646
    2. ' output' → logprob: -3.7949178218841553
    3. 'line' → logprob: -4.044918060302734
    4. ' line' → logprob: -5.794918060302734
    5. 'out' → logprob: -7.044918060302734
    6. 'o' → logprob: -11.919918060302734
    7. ' out' → logprob: -12.169918060302734
    8. '(output' → logprob: -14.044918060302734
    9. '	output' → logprob: -15.794918060302734
    10. '   ' → logprob: -15.794918060302734

Token 332: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0001584850688232109
    2. 'in' → logprob: -8.750158309936523
    3. 'output' → logprob: -18.125158309936523
    4. '	in' → logprob: -18.375158309936523
    5. ' ' → logprob: -18.875158309936523
    6. ',' → logprob: -19.250158309936523
    7. 's' → logprob: -19.250158309936523
    8. '```' → logprob: -19.375158309936523
    9. ' ' → logprob: -19.625158309936523
    10. '_' → logprob: -19.625158309936523

Token 333: ' outputs' (ID: 32725)
  Prédit: ' outputs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' outputs' → logprob: -0.16022524237632751
    2. 'outputs' → logprob: -1.91022527217865
    3. '(outputs' → logprob: -14.285224914550781
    4. 'output' → logprob: -15.035224914550781
    5. '.outputs' → logprob: -15.910224914550781
    6. ' output' → logprob: -17.53522491455078
    7. '_outputs' → logprob: -18.91022491455078
    8. 'Outputs' → logprob: -19.28522491455078
    9. '   ' → logprob: -21.16022491455078
    10. 'out' → logprob: -22.28522491455078

Token 334: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.11361896991729736
    2. ':' → logprob: -2.238618850708008
    3. '           ' → logprob: -7.363618850708008
    4. '       ' → logprob: -9.738618850708008
    5. 'print' → logprob: -10.363618850708008
    6. '   ' → logprob: -10.488618850708008
    7. ':
' → logprob: -10.738618850708008
    8. '():
' → logprob: -11.988618850708008
    9. '):
' → logprob: -12.113618850708008
    10. ' print' → logprob: -13.238618850708008

Token 335: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012539559975266457
    2. 'print' → logprob: -4.512539386749268
    3. ' print' → logprob: -6.512539386749268
    4. '   ' → logprob: -12.137539863586426
    5. '       ' → logprob: -15.137539863586426
    6. '```' → logprob: -15.387539863586426
    7. '               ' → logprob: -16.76253890991211
    8. '          ' → logprob: -17.26253890991211
    9. '	print' → logprob: -17.38753890991211
    10. '		' → logprob: -17.76253890991211

Token 336: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -4.5491004129871726e-05
    2. ' print' → logprob: -10.000045776367188
    3. '           ' → logprob: -17.750045776367188
    4. '   ' → logprob: -21.375045776367188
    5. '       ' → logprob: -21.625045776367188
    6. '	print' → logprob: -21.750045776367188
    7. '               ' → logprob: -23.250045776367188
    8. '```' → logprob: -23.750045776367188
    9. '
' → logprob: -26.625045776367188
    10. '.print' → logprob: -26.875045776367188

Token 337: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.00043138445471413434
    2. 'line' → logprob: -7.750431537628174
    3. ' line' → logprob: -14.250431060791016
    4. '(' → logprob: -17.125431060791016
    5. '=line' → logprob: -17.500431060791016
    6. '[line' → logprob: -18.250431060791016
    7. '	line' → logprob: -20.250431060791016
    8. ',line' → logprob: -20.625431060791016
    9. '#line' → logprob: -20.750431060791016
    10. 'Line' → logprob: -21.250431060791016

Token 338: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.7697225252486533e-06
    2. ')
' → logprob: -12.625003814697266
    3. ' )' → logprob: -15.375003814697266
    4. '<|end|>' → logprob: -17.000003814697266
    5. '())' → logprob: -17.500003814697266
    6. '       ' → logprob: -17.500003814697266
    7. '()' → logprob: -18.000003814697266
    8. '))' → logprob: -18.750003814697266
    9. '`)' → logprob: -19.375003814697266
    10. ')return' → logprob: -19.500003814697266

Token 339: 'def' (ID: 1314)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0021505001932382584
    2. '#' → logprob: -6.252150535583496
    3. 'def' → logprob: -9.127150535583496
    4. 'target' → logprob: -9.502150535583496
    5. '```' → logprob: -10.752150535583496
    6. ' if' → logprob: -11.377150535583496
    7. 'processor' → logprob: -13.002150535583496
    8. 'word' → logprob: -13.877150535583496
    9. 'Word' → logprob: -14.252150535583496
    10. 'replace' → logprob: -14.877150535583496

Token 340: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.20142298936843872
    2. ' main' → logprob: -1.701422929763794
    3. 'run' → logprob: -11.951422691345215
    4. ' run' → logprob: -12.701422691345215
    5. '	main' → logprob: -16.32642364501953
    6. 'create' → logprob: -16.57642364501953
    7. ' create' → logprob: -18.07642364501953
    8. '_main' → logprob: -18.32642364501953
    9. 'build' → logprob: -18.82642364501953
    10. 'process' → logprob: -18.95142364501953

Token 341: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0001137947037932463
    2. '():
' → logprob: -9.375113487243652
    3. ' ():' → logprob: -10.750113487243652
    4. '()' → logprob: -11.875113487243652
    5. '():
' → logprob: -15.375113487243652
    6. ':' → logprob: -16.12511444091797
    7. '(' → logprob: -16.37511444091797
    8. '_' → logprob: -17.50011444091797
    9. '():

' → logprob: -17.87511444091797
    10. '().' → logprob: -18.50011444091797

Token 342: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009702624753117561
    2. ' target' → logprob: -5.009702682495117
    3. 'target' → logprob: -6.634702682495117
    4. ' processor' → logprob: -6.759702682495117
    5. 'processor' → logprob: -7.759702682495117
    6. ' word' → logprob: -11.384702682495117
    7. ' text' → logprob: -11.634702682495117
    8. ' n' → logprob: -11.759702682495117
    9. 'n' → logprob: -12.134702682495117
    10. 'text' → logprob: -12.384702682495117

Token 343: ' replac' (ID: 10082)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.05725211277604103
    2. ' target' → logprob: -3.3072521686553955
    3. 'import' → logprob: -5.057251930236816
    4. 'processor' → logprob: -5.307251930236816
    5. 'replacement' → logprob: -5.432251930236816
    6. '   ' → logprob: -6.432251930236816
    7. 're' → logprob: -7.807251930236816
    8. 'replace' → logprob: -8.057251930236816
    9. ' import' → logprob: -8.057251930236816
    10. ' processor' → logprob: -8.182251930236816

Token 344: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0002655079588294029
    2. '=' → logprob: -9.000265121459961
    3. 'e' → logprob: -9.250265121459961
    4. ' =' → logprob: -10.750265121459961
    5. '   ' → logprob: -11.875265121459961
    6. 'cer' → logprob: -12.000265121459961
    7. 'eer' → logprob: -12.000265121459961
    8. 'ers' → logprob: -13.375265121459961
    9. 'ER' → logprob: -14.000265121459961
    10. 'acer' → logprob: -14.000265121459961

Token 345: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.001171652227640152
    2. '=' → logprob: -6.751171588897705
    3. '   ' → logprob: -14.001172065734863
    4. ' ' → logprob: -15.001172065734863
    5. '  ' → logprob: -15.876172065734863
    6. 'target' → logprob: -17.126171112060547
    7. ' =
' → logprob: -17.376171112060547
    8. '_target' → logprob: -18.251171112060547
    9. '1' → logprob: -18.626171112060547
    10. '_' → logprob: -18.751171112060547

Token 346: ' Word' (ID: 10503)
  Prédit: ' Word'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Word' → logprob: -0.474077433347702
    2. 'Word' → logprob: -0.9740774631500244
    3. '   ' → logprob: -15.099077224731445
    4. 'Text' → logprob: -16.349077224731445
    5. ' ' → logprob: -17.474077224731445
    6. '.Word' → logprob: -18.099077224731445
    7. 'User' → logprob: -18.224077224731445
    8. 'word' → logprob: -18.349077224731445
    9. '_word' → logprob: -18.599077224731445
    10. ' word' → logprob: -18.974077224731445

Token 347: 'Re' (ID: 720)
  Prédit: 'Re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Re' → logprob: -6.704273118884885e-07
    2. ' Re' → logprob: -14.625000953674316
    3. 'Replacement' → logprob: -16.625
    4. 'Replacing' → logprob: -17.25
    5. 're' → logprob: -17.5
    6. 'Replace' → logprob: -17.625
    7. '_re' → logprob: -18.25
    8. ' replac' → logprob: -19.25
    9. '_Re' → logprob: -19.875
    10. 'Repe' → logprob: -20.125

Token 348: 'placer' (ID: 58807)
  Prédit: 'placer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'placer' → logprob: -8.537868779967539e-06
    2. 'plac' → logprob: -11.875008583068848
    3. 'pl' → logprob: -13.875008583068848
    4. 'p' → logprob: -15.500008583068848
    5. 'place' → logprob: -16.00000762939453
    6. ' placer' → logprob: -16.12500762939453
    7. 'placement' → logprob: -17.25000762939453
    8. 'placing' → logprob: -17.50000762939453
    9. 'player' → logprob: -17.62500762939453
    10. 'pla' → logprob: -17.87500762939453

Token 349: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.09250153601169586
    2. '('' → logprob: -2.592501640319824
    3. '(' → logprob: -4.342501640319824
    4. '(
' → logprob: -7.592501640319824
    5. '("_' → logprob: -12.717501640319824
    6. '"' → logprob: -12.967501640319824
    7. ' ("' → logprob: -13.467501640319824
    8. '   ' → logprob: -14.217501640319824
    9. '(".",' → logprob: -14.717501640319824
    10. '(target' → logprob: -14.842501640319824

Token 350: 'H' (ID: 39)
  Prédit: 'hello'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'hello' → logprob: -0.4496998190879822
    2. 'foo' → logprob: -1.449699878692627
    3. 'apple' → logprob: -3.324699878692627
    4. 'Python' → logprob: -3.574699878692627
    5. 'Hello' → logprob: -4.199699878692627
    6. 'old' → logprob: -4.574699878692627
    7. 'cat' → logprob: -5.449699878692627
    8. 'error' → logprob: -5.449699878692627
    9. 'bad' → logprob: -5.449699878692627
    10. 'world' → logprob: -5.949699878692627

Token 351: 'osh' (ID: 12601)
  Prédit: 'ello'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ello' → logprob: -0.026417572051286697
    2. 'EL' → logprob: -4.0264177322387695
    3. 'e' → logprob: -5.9014177322387695
    4. 'i' → logprob: -6.2764177322387695
    5. 'I' → logprob: -6.4014177322387695
    6. 'E' → logprob: -7.5264177322387695
    7. 'el' → logprob: -7.9014177322387695
    8. 'ellow' → logprob: -9.15141773223877
    9. 'allo' → logprob: -9.40141773223877
    10. 'hello' → logprob: -9.52641773223877

Token 352: 'ino' (ID: 2081)
  Prédit: 'ig'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ig' → logprob: -0.32220613956451416
    2. 'ino' → logprob: -1.6972061395645142
    3. 'i' → logprob: -2.5722060203552246
    4. 'im' → logprob: -4.947206020355225
    5. 'imi' → logprob: -5.572206020355225
    6. 'in' → logprob: -5.947206020355225
    7. 'ina' → logprob: -7.322206020355225
    8. 'ii' → logprob: -7.947206020355225
    9. 'igi' → logprob: -8.322206497192383
    10. 'iz' → logprob: -8.572206497192383

Token 353: '",' (ID: 672)
  Prédit: '",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.03877810016274452
    2. '","' → logprob: -4.913778305053711
    3. 'M' → logprob: -5.038778305053711
    4. ' ",' → logprob: -5.413778305053711
    5. 'Ai' → logprob: -5.663778305053711
    6. '"' → logprob: -6.038778305053711
    7. '"),' → logprob: -6.288778305053711
    8. ' M' → logprob: -6.413778305053711
    9. '")' → logprob: -6.538778305053711
    10. 'Kana' → logprob: -7.163778305053711

Token 354: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.448276549577713
    2. ' "' → logprob: -1.8232765197753906
    3. '"K' → logprob: -2.0732765197753906
    4. '"H' → logprob: -3.8232765197753906
    5. '"T' → logprob: -4.198276519775391
    6. '"S' → logprob: -4.198276519775391
    7. '"A' → logprob: -5.323276519775391
    8. '"M' → logprob: -5.323276519775391
    9. '"N' → logprob: -5.823276519775391
    10. '"O' → logprob: -6.198276519775391

Token 355: 'H' (ID: 39)
  Prédit: 'Ai'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Ai' → logprob: -0.9745604991912842
    2. 'E' → logprob: -1.9745604991912842
    3. 'Ich' → logprob: -2.474560499191284
    4. 'A' → logprob: -2.849560499191284
    5. 'K' → logprob: -3.724560499191284
    6. 'Alice' → logprob: -3.724560499191284
    7. 'Sum' → logprob: -3.849560499191284
    8. 'M' → logprob: -3.974560499191284
    9. 'Aqu' → logprob: -4.224560737609863
    10. 'R' → logprob: -4.224560737609863

Token 356: 'osh' (ID: 12601)
  Prédit: 'osh'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'osh' → logprob: -0.5658812522888184
    2. 'ina' → logprob: -2.3158812522888184
    3. 'oshi' → logprob: -3.5658812522888184
    4. 'o' → logprob: -3.6908812522888184
    5. 'ino' → logprob: -3.6908812522888184
    6. 'ar' → logprob: -3.6908812522888184
    7. 'oto' → logprob: -3.6908812522888184
    8. 'im' → logprob: -3.8783812522888184
    9. 'os' → logprob: -3.9408812522888184
    10. 'in' → logprob: -4.128381252288818

Token 357: 'ina' (ID: 1522)
  Prédit: 'ino'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ino' → logprob: -0.12156643718481064
    2. 'iz' → logprob: -3.3715665340423584
    3. 'i' → logprob: -3.7465665340423584
    4. 'ig' → logprob: -3.9965665340423584
    5. 'imi' → logprob: -4.246566295623779
    6. 'iko' → logprob: -5.371566295623779
    7. 'in' → logprob: -5.871566295623779
    8. 'inom' → logprob: -5.996566295623779
    9. 'im' → logprob: -6.121566295623779
    10. 'ina' → logprob: -6.246566295623779

Token 358: '")
' (ID: 1896)
  Prédit: '")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.1609584242105484
    2. '")' → logprob: -1.9109584093093872
    3. '")
' → logprob: -7.285958290100098
    4. 'ko' → logprob: -10.785958290100098
    5. '")

' → logprob: -12.035958290100098
    6. ' ")
' → logprob: -12.035958290100098
    7. 'o' → logprob: -12.410958290100098
    8. 'n' → logprob: -12.660958290100098
    9. 'na' → logprob: -13.535958290100098
    10. '"' → logprob: -13.535958290100098

Token 359: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1702180951833725
    2. 'handler' → logprob: -2.170217990875244
    3. ' handler' → logprob: -3.170217990875244
    4. '	handler' → logprob: -8.295218467712402
    5. '
' → logprob: -9.920218467712402
    6. '    
' → logprob: -11.045218467712402
    7. 'Handler' → logprob: -11.545218467712402
    8. 'processor' → logprob: -11.795218467712402
    9. '_handler' → logprob: -11.920218467712402
    10. '(handler' → logprob: -12.045218467712402

Token 360: ' handler' (ID: 13310)
  Prédit: 'handler'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'handler' (adapté à ' handler') → logprob: -0.0797690823674202
    2. ' handler' → logprob: -2.5797691345214844
    3. '   ' → logprob: -7.204769134521484
    4. 'dataset' → logprob: -9.329769134521484
    5. 'processor' → logprob: -10.829769134521484
    6. '	handler' → logprob: -11.329769134521484
    7. ' dataset' → logprob: -11.954769134521484
    8. ' processor' → logprob: -13.704769134521484
    9. '(handler' → logprob: -13.704769134521484
    10. '    
' → logprob: -14.079769134521484

Token 361: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023246292024850845
    2. '=' → logprob: -3.7732462882995605
    3. '   ' → logprob: -14.648246765136719
    4. ' ' → logprob: -15.523246765136719
    5. ')' → logprob: -16.64824676513672
    6. '(' → logprob: -17.27324676513672
    7. '  ' → logprob: -18.14824676513672
    8. '=D' → logprob: -18.39824676513672
    9. '(D' → logprob: -19.52324676513672
    10. 'Handler' → logprob: -19.77324676513672

Token 362: ' Dataset' (ID: 79063)
  Prédit: 'Dataset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dataset' → logprob: -0.16022412478923798
    2. ' Dataset' → logprob: -1.9102240800857544
    3. '   ' → logprob: -17.28522491455078
    4. 'Datas' → logprob: -19.66022491455078
    5. 'Data' → logprob: -19.91022491455078
    6. '.Dataset' → logprob: -20.66022491455078
    7. ' ' → logprob: -21.41022491455078
    8. ' ' → logprob: -22.28522491455078
    9. '  ' → logprob: -22.91022491455078
    10. '_dataset' → logprob: -23.28522491455078

Token 363: 'Handler' (ID: 4139)
  Prédit: 'Handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Handler' → logprob: 0.0
    2. 'Handle' → logprob: -18.125
    3. 'handler' → logprob: -18.375
    4. '_Handler' → logprob: -19.75
    5. ' Handler' → logprob: -19.875
    6. '   ' → logprob: -21.125
    7. '_handler' → logprob: -22.75
    8. 'Hand' → logprob: -23.0
    9. '_HANDLER' → logprob: -23.25
    10. '.Handler' → logprob: -23.375

Token 364: '(re' (ID: 8178)
  Prédit: '(re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(re' → logprob: -0.016240457072854042
    2. 're' → logprob: -4.51624059677124
    3. '(handler' → logprob: -5.76624059677124
    4. '   ' → logprob: -7.01624059677124
    5. 'handler' → logprob: -7.51624059677124
    6. '(process' → logprob: -8.266240119934082
    7. 'processor' → logprob: -9.141240119934082
    8. '(' → logprob: -9.141240119934082
    9. 'Text' → logprob: -10.516240119934082
    10. '(Text' → logprob: -10.641240119934082

Token 365: 'placer' (ID: 58807)
  Prédit: 'placer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'placer' → logprob: -4.000763510703109e-05
    2. 'plac' → logprob: -10.250040054321289
    3. ' placer' → logprob: -13.250040054321289
    4. 'pl' → logprob: -13.875040054321289
    5. 'place' → logprob: -14.375040054321289
    6. 'placement' → logprob: -14.625040054321289
    7. 'p' → logprob: -14.875040054321289
    8. 'placing' → logprob: -15.250040054321289
    9. 'pler' → logprob: -16.25004005432129
    10. 'player' → logprob: -17.50004005432129

Token 366: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.09372980147600174
    2. ')' → logprob: -2.5937297344207764
    3. '   ' → logprob: -4.2187299728393555
    4. ')
' → logprob: -11.593729972839355
    5. ' )
' → logprob: -12.968729972839355
    6. '  ' → logprob: -14.468729972839355
    7. ' ' → logprob: -14.718729972839355
    8. '    
' → logprob: -15.968729972839355
    9. '
' → logprob: -16.21872901916504
    10. ')

' → logprob: -16.34372901916504

Token 367: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01838194951415062
    2. 'controller' → logprob: -4.7683820724487305
    3. ' controller' → logprob: -5.0183820724487305
    4. 'ioc' → logprob: -6.6433820724487305
    5. 'io' → logprob: -7.5183820724487305
    6. ' io' → logprob: -7.5183820724487305
    7. '	controller' → logprob: -8.01838207244873
    8. '
' → logprob: -9.26838207244873
    9. ' ctrl' → logprob: -9.89338207244873
    10. 'ctrl' → logprob: -10.26838207244873

Token 368: ' controller' (ID: 12220)
  Prédit: 'controller'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'controller' (adapté à ' controller') → logprob: -0.03183649852871895
    2. ' controller' → logprob: -3.78183650970459
    3. 'ioc' → logprob: -5.03183650970459
    4. '   ' → logprob: -6.65683650970459
    5. 'io' → logprob: -7.28183650970459
    6. 'ctrl' → logprob: -10.40683650970459
    7. ' io' → logprob: -10.90683650970459
    8. 'control' → logprob: -13.53183650970459
    9. 'ctl' → logprob: -13.53183650970459
    10. ' ctrl' → logprob: -14.53183650970459

Token 369: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01815052703022957
    2. '=' → logprob: -4.018150329589844
    3. '   ' → logprob: -15.143150329589844
    4. ' ' → logprob: -15.518150329589844
    5. ')' → logprob: -16.393150329589844
    6. '.' → logprob: -16.643150329589844
    7. '.execute' → logprob: -16.893150329589844
    8. '_' → logprob: -17.018150329589844
    9. '	' → logprob: -17.393150329589844
    10. '._' → logprob: -17.518150329589844

Token 370: ' Input' (ID: 10090)
  Prédit: ' Input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Input' → logprob: -0.10020667314529419
    2. 'Input' → logprob: -2.3502066135406494
    3. '	Input' → logprob: -18.22520637512207
    4. '_Input' → logprob: -18.72520637512207
    5. ' input' → logprob: -19.47520637512207
    6. '_input' → logprob: -19.97520637512207
    7. '<Input' → logprob: -20.97520637512207
    8. '\Input' → logprob: -21.72520637512207
    9. '(Input' → logprob: -22.10020637512207
    10. '.Input' → logprob: -22.47520637512207

Token 371: 'Output' (ID: 6310)
  Prédit: 'Output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Output' → logprob: 0.0
    2. 'O' → logprob: -19.125
    3. 'Input' → logprob: -19.875
    4. 'output' → logprob: -20.5
    5. 'Out' → logprob: -22.25
    6. 'Ou' → logprob: -22.5
    7. '	Output' → logprob: -22.75
    8. ' Output' → logprob: -23.125
    9. 'OUTPUT' → logprob: -23.25
    10. '-output' → logprob: -23.5

Token 372: 'Controller' (ID: 2947)
  Prédit: 'Controller'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Controller' → logprob: 0.0
    2. 'Control' → logprob: -17.625
    3. 'controller' → logprob: -18.125
    4. '@Controller' → logprob: -21.125
    5. '_Controller' → logprob: -21.5
    6. 'Cont' → logprob: -21.5
    7. '_controller' → logprob: -22.75
    8. ' Controller' → logprob: -22.875
    9. 'Handler' → logprob: -23.25
    10. '_CONTROLLER' → logprob: -23.625

Token 373: '(handler' (ID: 76448)
  Prédit: '(handler'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(handler' → logprob: -7.896309739408025e-07
    2. 'handler' → logprob: -14.375000953674316
    3. '(' → logprob: -15.625000953674316
    4. '(handle' → logprob: -18.125
    5. '(
' → logprob: -18.5
    6. '(hand' → logprob: -18.875
    7. ' handler' → logprob: -19.0
    8. '(controller' → logprob: -19.0
    9. '	handler' → logprob: -19.25
    10. ' (' → logprob: -20.0

Token 374: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11369973421096802
    2. ')
' → logprob: -2.8636996746063232
    3. '   ' → logprob: -2.9886996746063232
    4. ' ' → logprob: -11.613699913024902
    5. 'controller' → logprob: -11.613699913024902
    6. '()' → logprob: -11.738699913024902
    7. ')
' → logprob: -12.238699913024902
    8. '<|end|>' → logprob: -12.238699913024902
    9. ' )' → logprob: -12.488699913024902
    10. '  ' → logprob: -12.738699913024902

Token 375: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4941478371620178
    2. 'controller' → logprob: -0.9941478371620178
    3. '	controller' → logprob: -4.619147777557373
    4. '
' → logprob: -4.744147777557373
    5. ' controller' → logprob: -7.244147777557373
    6. '_controller' → logprob: -7.994147777557373
    7. '    
' → logprob: -8.744148254394531
    8. '(controller' → logprob: -10.494148254394531
    9. '<|end|>' → logprob: -10.869148254394531
    10. '  
' → logprob: -11.744148254394531

Token 376: ' controller' (ID: 12220)
  Prédit: 'controller'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'controller' (adapté à ' controller') → logprob: -5.204720582696609e-05
    2. '   ' → logprob: -10.000052452087402
    3. ' controller' → logprob: -12.000052452087402
    4. '	controller' → logprob: -14.750052452087402
    5. '_controller' → logprob: -18.250051498413086
    6. '.controller' → logprob: -20.000051498413086
    7. 'controllers' → logprob: -20.625051498413086
    8. '(controller' → logprob: -21.000051498413086
    9. '  ' → logprob: -21.500051498413086
    10. 'control' → logprob: -21.875051498413086

Token 377: '.execute' (ID: 13242)
  Prédit: '.execute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.execute' → logprob: -6.2729995988775045e-06
    2. '.' → logprob: -12.000006675720215
    3. '.run' → logprob: -18.3750057220459
    4. '.exec' → logprob: -18.3750057220459
    5. ' .' → logprob: -18.5000057220459
    6. '.Execute' → logprob: -19.5000057220459
    7. 'execute' → logprob: -20.0000057220459
    8. '.exe' → logprob: -20.8750057220459
    9. '.execution' → logprob: -21.5000057220459
    10. '.execut' → logprob: -21.8750057220459

Token 378: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.005248106550425291
    2. '()
' → logprob: -5.255248069763184
    3. '()

' → logprob: -11.630248069763184
    4. '()\' → logprob: -13.255248069763184
    5. '(
' → logprob: -13.630248069763184
    6. '(' → logprob: -14.005248069763184
    7. '()<' → logprob: -15.005248069763184
    8. '()
' → logprob: -15.255248069763184
    9. '()`' → logprob: -15.380248069763184
    10. '<|end|>' → logprob: -15.630248069763184

Token 379: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -2.4391956685576588e-05
    2. '
' → logprob: -11.500024795532227
    3. 'main' → logprob: -12.000024795532227
    4. ' if' → logprob: -12.500024795532227
    5. '```' → logprob: -12.750024795532227
    6. '<|end|>' → logprob: -14.375024795532227
    7. '\n' → logprob: -14.750024795532227
    8. '#' → logprob: -14.750024795532227
    9. '\' → logprob: -16.500024795532227
    10. '#if' → logprob: -18.000024795532227

Token 380: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.005236360710114241
    2. '__' → logprob: -5.2552361488342285
    3. '_name' → logprob: -13.130236625671387
    4. '_' → logprob: -15.630236625671387
    5. ' ' → logprob: -15.630236625671387
    6. 'name' → logprob: -15.880236625671387
    7. ' name' → logprob: -17.13023567199707
    8. '___' → logprob: -17.50523567199707
    9. ' ___' → logprob: -18.00523567199707
    10. ' _' → logprob: -18.00523567199707

Token 381: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.18523211777210236
    2. ' ==' → logprob: -1.935232162475586
    3. '==' → logprob: -3.935232162475586
    4. ' __' → logprob: -5.935232162475586
    5. '.__' → logprob: -6.560232162475586
    6. '__.__' → logprob: -7.310232162475586
    7. '__.' → logprob: -9.060232162475586
    8. '.name' → logprob: -9.185232162475586
    9. ' .' → logprob: -10.060232162475586
    10. '.' → logprob: -10.435232162475586

Token 382: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.0280383548888494e-06
    2. '__.__' → logprob: -14.125000953674316
    3. '__.' → logprob: -16.000001907348633
    4. '==' → logprob: -16.500001907348633
    5. '____' → logprob: -17.750001907348633
    6. '___' → logprob: -18.375001907348633
    7. '__["' → logprob: -18.625001907348633
    8. '__
' → logprob: -18.625001907348633
    9. ' ==' → logprob: -19.125001907348633
    10. '__

' → logprob: -19.750001907348633

Token 383: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.1762099266052246
    2. '==' → logprob: -2.1762099266052246
    3. ' ==' → logprob: -3.0512099266052246
    4. '=="' → logprob: -7.176209926605225
    5. '=='' → logprob: -11.801210403442383
    6. '_' → logprob: -12.676210403442383
    7. '=' → logprob: -12.926210403442383
    8. '___' → logprob: -13.426210403442383
    9. '__.__' → logprob: -13.426210403442383
    10. '"' → logprob: -13.551210403442383

Token 384: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.000742207164876163
    2. ''' → logprob: -7.250742435455322
    3. ' "__' → logprob: -10.375741958618164
    4. '__' → logprob: -13.875741958618164
    5. '"name' → logprob: -16.750741958618164
    6. ' '__' → logprob: -17.125741958618164
    7. '"user' → logprob: -17.750741958618164
    8. '("__' → logprob: -18.375741958618164
    9. '"class' → logprob: -18.875741958618164
    10. ''"' → logprob: -18.875741958618164

Token 385: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.38808244466781616
    2. '__' → logprob: -1.138082504272461
    3. '"' → logprob: -6.763082504272461
    4. 'name' → logprob: -10.513082504272461
    5. ''' → logprob: -11.763082504272461
    6. '__
' → logprob: -12.513082504272461
    7. '_main' → logprob: -12.638082504272461
    8. '__":
' → logprob: -13.013082504272461
    9. ' main' → logprob: -13.388082504272461
    10. '```' → logprob: -13.388082504272461

Token 386: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.4746975302696228
    2. '__' → logprob: -0.9746975302696228
    3. '__.__' → logprob: -8.09969711303711
    4. '__.' → logprob: -8.47469711303711
    5. '__':
' → logprob: -9.34969711303711
    6. '__["' → logprob: -11.09969711303711
    7. '__
' → logprob: -13.22469711303711
    8. '___' → logprob: -14.09969711303711
    9. '__
' → logprob: -14.09969711303711
    10. '.__' → logprob: -14.47469711303711

Token 387: '   ' (ID: 271)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.12446693331003189
    2. '__' → logprob: -2.624466896057129
    3. ''' → logprob: -3.124466896057129
    4. 'main' → logprob: -7.499466896057129
    5. '   ' → logprob: -10.624466896057129
    6. ' "__' → logprob: -11.374466896057129
    7. ' main' → logprob: -13.124466896057129
    8. ' __' → logprob: -14.249466896057129
    9. ' '__' → logprob: -14.624466896057129
    10. '___' → logprob: -14.874466896057129

Token 388: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -18.0
    3. '	main' → logprob: -23.375
    4. '.main' → logprob: -26.25
    5. '(main' → logprob: -26.75
    6. '   ' → logprob: -26.75
    7. '_main' → logprob: -27.375
    8. 'import' → logprob: -27.75
    9. 'mai' → logprob: -28.625
    10. '```' → logprob: -29.5

Token 389: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 387
Tokens correctement prédits (1ère position, stricte): 202
Tokens correctement prédits (1ère position, avec adaptation): 223
Tokens correctement prédits (top 10): 340
Précision stricte (1ère position): 52.20%
Précision adaptée (1ère position): 57.62%
Précision (top 10): 87.86%
================================================================================
