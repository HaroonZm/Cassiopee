================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:11:29
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def is_prime(num):
    if num < 2:
        return False
    if num == 2:
        return True
    if num % 2 == 0:
        return False
    for i in range(3, int(num**0.5) + 1, 2):
        if num % i == 0:
            return False
    return True

def max_twin_prime(n):
    for q in range(n, 2, -1):
        p = q - 2
        if p >= 2 and is_prime(p) and is_prime(q):
            return p, q
    return None

while True:
    n = int(input())
    if n == 0:
        break
    p, q = max_twin_prime(n)
    print(p, q)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' is' (ID: 382)
  → Token d'amorce (pas de prédiction)

Token 2: '_prime' (ID: 98616)
  → Token d'amorce (pas de prédiction)

Token 3: '(num' (ID: 15828)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.062322020530700684
    2. '_' → logprob: -2.9373221397399902
    3. '(_' → logprob: -5.81232213973999
    4. '(_:' → logprob: -6.06232213973999
    5. '```' → logprob: -7.06232213973999
    6. '_(' → logprob: -7.31232213973999
    7. '_:' → logprob: -9.312321662902832
    8. '(_)' → logprob: -9.562321662902832
    9. '("("' → logprob: -10.062321662902832
    10. ' (' → logprob: -10.062321662902832

Token 4: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04870670661330223
    2. ')' → logprob: -3.0487067699432373
    3. ':' → logprob: -9.423707008361816
    4. '):
' → logprob: -11.298707008361816
    5. '```' → logprob: -11.548707008361816
    6. '(' → logprob: -12.923707008361816
    7. '():' → logprob: -13.548707008361816
    8. ')：' → logprob: -13.548707008361816
    9. ' ):' → logprob: -13.798707008361816
    10. ''):' → logprob: -14.048707008361816

Token 5: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.030360804870724678
    2. '   ' → logprob: -3.780360698699951
    3. '```' → logprob: -5.780360698699951
    4. ':
' → logprob: -6.280360698699951
    5. '():' → logprob: -6.780360698699951
    6. '':' → logprob: -8.40536117553711
    7. '":' → logprob: -8.65536117553711
    8. '):' → logprob: -9.03036117553711
    9. '    
' → logprob: -9.40536117553711
    10. '`:' → logprob: -9.65536117553711

Token 6: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4374653398990631
    2. '```' → logprob: -1.8124653100967407
    3. ' if' → logprob: -2.6874654293060303
    4. ' 
' → logprob: -2.9374654293060303
    5. ':' → logprob: -4.187465190887451
    6. ' ' → logprob: -4.312465190887451
    7. '\' → logprob: -4.687465190887451
    8. '    
' → logprob: -4.687465190887451
    9. '    ' → logprob: -5.187465190887451
    10. '\n' → logprob: -5.937465190887451

Token 7: ' num' (ID: 2269)
  Prédit: ' num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.04124699905514717
    2. ' ' → logprob: -3.4162468910217285
    3. 'num' → logprob: -4.9162468910217285
    4. ' not' → logprob: -8.416247367858887
    5. ' ' → logprob: -11.791247367858887
    6. '  ' → logprob: -12.541247367858887
    7. '	num' → logprob: -12.666247367858887
    8. ' n' → logprob: -12.791247367858887
    9. '<num' → logprob: -13.166247367858887
    10. '   ' → logprob: -13.291247367858887

Token 8: ' <' (ID: 464)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.7451541423797607
    2. ' <' → logprob: -1.3701541423797607
    3. ' ' → logprob: -1.4951541423797607
    4. ' >' → logprob: -3.7451541423797607
    5. ' ==' → logprob: -4.62015438079834
    6. ' %' → logprob: -4.87015438079834
    7. '<' → logprob: -6.62015438079834
    8. '  ' → logprob: -7.12015438079834
    9. '   ' → logprob: -7.24515438079834
    10. ' >=' → logprob: -7.37015438079834

Token 9: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6931527853012085
    2. ' ' → logprob: -0.6931527853012085
    3. '```' → logprob: -12.94315242767334
    4. ' ' → logprob: -13.44315242767334
    5. '=' → logprob: -14.69315242767334
    6. '   ' → logprob: -14.81815242767334
    7. '_' → logprob: -15.31815242767334
    8. '3' → logprob: -15.69315242767334
    9. '(' → logprob: -15.81815242767334
    10. '    ' → logprob: -16.318153381347656

Token 10: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00026205103495158255
    2. ' ' → logprob: -8.250262260437012
    3. '```' → logprob: -14.250262260437012
    4. '   ' → logprob: -16.500261306762695
    5. '۲' → logprob: -18.125261306762695
    6. '２' → logprob: -18.250261306762695
    7. '3' → logprob: -18.250261306762695
    8. '(' → logprob: -18.250261306762695
    9. '=' → logprob: -18.625261306762695
    10. '`' → logprob: -18.750261306762695

Token 11: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02428724803030491
    2. ':
' → logprob: -3.774287223815918
    3. ':return' → logprob: -7.149287223815918
    4. ' :' → logprob: -8.899287223815918
    5. ' :
' → logprob: -9.899287223815918
    6. '   ' → logprob: -10.149287223815918
    7. '       ' → logprob: -12.149287223815918
    8. ':\' → logprob: -12.274287223815918
    9. '):' → logprob: -12.399287223815918
    10. '```' → logprob: -12.399287223815918

Token 12: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.648384690284729
    2. ' return' → logprob: -1.148384690284729
    3. 'return' → logprob: -2.8983845710754395
    4. '   ' → logprob: -3.0233845710754395
    5. ':return' → logprob: -3.7733845710754395
    6. ':' → logprob: -4.1483845710754395
    7. ':
' → logprob: -4.5233845710754395
    8. '    ' → logprob: -5.7733845710754395
    9. '\n' → logprob: -6.7733845710754395
    10. '
' → logprob: -7.3983845710754395

Token 13: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.45409563183784485
    2. 'return' (adapté à ' return') → logprob: -1.7040956020355225
    3. '   ' → logprob: -1.8290956020355225
    4. '       ' → logprob: -3.8290956020355225
    5. '    ' → logprob: -7.579095840454102
    6. ':return' → logprob: -9.204095840454102
    7. '```' → logprob: -9.579095840454102
    8. ' ' → logprob: -10.704095840454102
    9. '	return' → logprob: -11.454095840454102
    10. '
' → logprob: -11.954095840454102

Token 14: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.038064904510974884
    2. 'False' → logprob: -3.288064956665039
    3. ' True' → logprob: -10.913064956665039
    4. ' ' → logprob: -12.288064956665039
    5. ' None' → logprob: -15.163064956665039
    6. 'True' → logprob: -15.663064956665039
    7. '(False' → logprob: -16.16306495666504
    8. ' ' → logprob: -17.53806495666504
    9. 'None' → logprob: -18.53806495666504
    10. ' false' → logprob: -18.91306495666504

Token 15: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3824285566806793
    2. '
' → logprob: -1.507428526878357
    3. '\n' → logprob: -2.7574286460876465
    4. '    
' → logprob: -3.6324286460876465
    5. '```' → logprob: -6.2574286460876465
    6. '  
' → logprob: -6.3824286460876465
    7. ':
' → logprob: -6.7574286460876465
    8. '   
' → logprob: -8.132428169250488
    9. '\' → logprob: -8.257428169250488
    10. ' 
' → logprob: -8.507428169250488

Token 16: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3705374002456665
    2. '\n' → logprob: -1.7455374002456665
    3. '```' → logprob: -3.120537281036377
    4. '    
' → logprob: -3.620537281036377
    5. '
' → logprob: -3.620537281036377
    6. ':
' → logprob: -4.370537281036377
    7. ':' → logprob: -5.120537281036377
    8. '  
' → logprob: -5.120537281036377
    9. ' for' → logprob: -5.745537281036377
    10. '   
' → logprob: -6.370537281036377

Token 17: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8022288084030151
    2. '
' → logprob: -1.1772288084030151
    3. '    
' → logprob: -2.5522289276123047
    4. ' for' → logprob: -2.6772289276123047
    5. 'for' → logprob: -3.5522289276123047
    6. ' 
' → logprob: -3.9272289276123047
    7. '  
' → logprob: -4.427228927612305
    8. ':' → logprob: -4.552228927612305
    9. '   
' → logprob: -4.802228927612305
    10. ':
' → logprob: -4.802228927612305

Token 18: ' num' (ID: 2269)
  Prédit: ' num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.0022018824238330126
    2. 'num' → logprob: -6.127202033996582
    3. ' ' → logprob: -12.752202033996582
    4. ' int' → logprob: -12.877202033996582
    5. ' ' → logprob: -12.877202033996582
    6. ' any' → logprob: -13.127202033996582
    7. '(num' → logprob: -13.127202033996582
    8. '	num' → logprob: -13.252202033996582
    9. '   ' → logprob: -14.252202033996582
    10. '```' → logprob: -15.127202033996582

Token 19: ' ==' (ID: 951)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.024570059031248093
    2. '%' → logprob: -4.399569988250732
    3. ' ==' → logprob: -4.899569988250732
    4. ' ' → logprob: -5.524569988250732
    5. ' ' → logprob: -8.89957046508789
    6. '**' → logprob: -9.14957046508789
    7. '==' → logprob: -9.14957046508789
    8. ' **' → logprob: -9.27457046508789
    9. '```' → logprob: -10.14957046508789
    10. '   ' → logprob: -11.64957046508789

Token 20: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.043026819825172424
    2. '2' → logprob: -3.168026924133301
    3. '3' → logprob: -10.5430269241333
    4. '   ' → logprob: -14.9180269241333
    5. '```' → logprob: -15.0430269241333
    6. '    ' → logprob: -15.4180269241333
    7. '  ' → logprob: -15.5430269241333
    8. ' ' → logprob: -15.6680269241333
    9. '1' → logprob: -16.793025970458984
    10. '(' → logprob: -17.355525970458984

Token 21: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0013265528250485659
    2. ' ' → logprob: -6.626326560974121
    3. '3' → logprob: -14.626326560974121
    4. '   ' → logprob: -16.376325607299805
    5. '0' → logprob: -17.126325607299805
    6. '1' → logprob: -17.251325607299805
    7. '```' → logprob: -17.626325607299805
    8. '    ' → logprob: -17.876325607299805
    9. '  ' → logprob: -18.001325607299805
    10. '２' → logprob: -19.313825607299805

Token 22: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00034952821442857385
    2. ' :' → logprob: -8.000349998474121
    3. ':return' → logprob: -11.625349998474121
    4. ':**' → logprob: -12.375349998474121
    5. '):' → logprob: -14.875349998474121
    6. ' and' → logprob: -15.250349998474121
    7. ':
' → logprob: -15.625349998474121
    8. '():' → logprob: -16.875349044799805
    9. '   ' → logprob: -17.375349044799805
    10. ' ):' → logprob: -17.500349044799805

Token 23: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00015240935317706317
    2. ':return' → logprob: -8.875152587890625
    3. ':
' → logprob: -11.750152587890625
    4. ' :' → logprob: -12.750152587890625
    5. '       ' → logprob: -14.375152587890625
    6. '   ' → logprob: -14.500152587890625
    7. '):' → logprob: -15.375152587890625
    8. ':**' → logprob: -15.875152587890625
    9. '():' → logprob: -16.500152587890625
    10. ' and' → logprob: -16.500152587890625

Token 24: ' return' (ID: 622)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09876161813735962
    2. ' :' → logprob: -2.973761558532715
    3. ' :
' → logprob: -4.223761558532715
    4. ':return' → logprob: -4.473761558532715
    5. ' 
' → logprob: -4.848761558532715
    6. ':
' → logprob: -5.848761558532715
    7. ' ' → logprob: -5.973761558532715
    8. ' return' → logprob: -6.598761558532715
    9. '   ' → logprob: -6.973761558532715
    10. ' )' → logprob: -8.223761558532715

Token 25: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.00861456897109747
    2. 'True' → logprob: -4.758614540100098
    3. ' ' → logprob: -17.758615493774414
    4. '(True' → logprob: -18.258615493774414
    5. ' Tru' → logprob: -19.258615493774414
    6. '=True' → logprob: -20.133615493774414
    7. ' ' → logprob: -21.508615493774414
    8. ' true' → logprob: -21.508615493774414
    9. ' False' → logprob: -22.258615493774414
    10. 'False' → logprob: -22.758615493774414

Token 26: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14207123219966888
    2. '\n' → logprob: -2.89207124710083
    3. '   ' → logprob: -3.76707124710083
    4. '\' → logprob: -4.39207124710083
    5. '    
' → logprob: -4.39207124710083
    6. ':
' → logprob: -4.51707124710083
    7. '   
' → logprob: -5.89207124710083
    8. '
' → logprob: -6.01707124710083
    9. '```' → logprob: -6.14207124710083
    10. ' 
' → logprob: -6.26707124710083

Token 27: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9957364797592163
    2. '    
' → logprob: -1.4957364797592163
    3. '   ' → logprob: -1.7457364797592163
    4. '
' → logprob: -2.620736598968506
    5. ':
' → logprob: -3.245736598968506
    6. ' 
' → logprob: -3.245736598968506
    7. '   
' → logprob: -3.495736598968506
    8. '  
' → logprob: -3.745736598968506
    9. '\n' → logprob: -4.245736598968506
    10. '\' → logprob: -5.870736598968506

Token 28: ' if' (ID: 538)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.06517422944307327
    2. '    
' → logprob: -3.9401743412017822
    3. '  
' → logprob: -4.565174102783203
    4. '   
' → logprob: -4.565174102783203
    5. ':' → logprob: -5.065174102783203
    6. '\n' → logprob: -5.565174102783203
    7. '\' → logprob: -5.690174102783203
    8. ' ' → logprob: -6.315174102783203
    9. '   ' → logprob: -6.565174102783203
    10. '     
' → logprob: -6.690174102783203

Token 29: ' num' (ID: 2269)
  Prédit: ' num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.011238329112529755
    2. ' ' → logprob: -4.511238098144531
    3. 'num' → logprob: -8.636238098144531
    4. '	num' → logprob: -11.636238098144531
    5. ' ' → logprob: -12.886238098144531
    6. ' n' → logprob: -15.511238098144531
    7. '<num' → logprob: -15.636238098144531
    8. ' nums' → logprob: -16.01123809814453
    9. ' space' → logprob: -16.13623809814453
    10. ',num' → logprob: -16.13623809814453

Token 30: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.03809312731027603
    2. '%' → logprob: -3.288093090057373
    3. ' ' → logprob: -9.913093566894531
    4. ' ' → logprob: -14.038093566894531
    5. ' 

' → logprob: -15.163093566894531
    6. ' %

' → logprob: -15.538093566894531
    7. '	' → logprob: -15.663093566894531
    8. ' ```' → logprob: -15.788093566894531
    9. '  ' → logprob: -16.16309356689453
    10. ' <' → logprob: -16.16309356689453

Token 31: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01814994215965271
    2. '2' → logprob: -4.0181498527526855
    3. ' ' → logprob: -16.893150329589844
    4. ' ```' → logprob: -17.393150329589844
    5. '  ' → logprob: -18.268150329589844
    6. '```' → logprob: -18.518150329589844
    7. '    ' → logprob: -20.643150329589844
    8. '   ' → logprob: -20.768150329589844
    9. '<|end|>' → logprob: -20.768150329589844
    10. '>' → logprob: -21.018150329589844

Token 32: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.493430894101039e-05
    2. ' ' → logprob: -9.500075340270996
    3. '```' → logprob: -19.25007438659668
    4. '۲' → logprob: -19.87507438659668
    5. '２' → logprob: -20.00007438659668
    6. '  ' → logprob: -20.00007438659668
    7. '   ' → logprob: -20.25007438659668
    8. '²' → logprob: -21.25007438659668
    9. '٢' → logprob: -21.25007438659668
    10. '२' → logprob: -21.87507438659668

Token 33: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.07322966307401657
    2. '==' → logprob: -2.6982295513153076
    3. ' !=' → logprob: -6.073229789733887
    4. ' ' → logprob: -7.448229789733887
    5. '=' → logprob: -8.698229789733887
    6. ' ' → logprob: -9.448229789733887
    7. '0' → logprob: -9.698229789733887
    8. '!=' → logprob: -10.073229789733887
    9. '<|end|>' → logprob: -10.448229789733887
    10. ' =' → logprob: -12.198229789733887

Token 34: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1002068892121315
    2. '0' → logprob: -2.3502068519592285
    3. ' ' → logprob: -15.975207328796387
    4. '<|end|>' → logprob: -16.10020637512207
    5. '1' → logprob: -16.97520637512207
    6. '  ' → logprob: -18.60020637512207
    7. '```' → logprob: -19.28770637512207
    8. '۰' → logprob: -20.03770637512207
    9. ')' → logprob: -20.53770637512207
    10. ' ' → logprob: -21.10020637512207

Token 35: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0788901224732399
    2. ' ' → logprob: -2.578890085220337
    3. '1' → logprob: -15.453889846801758
    4. ' ' → logprob: -16.703889846801758
    5. '  ' → logprob: -17.828889846801758
    6. '```' → logprob: -18.828889846801758
    7. '۰' → logprob: -19.328889846801758
    8. '   ' → logprob: -19.828889846801758
    9. ' ' → logprob: -19.891389846801758
    10. '=' → logprob: -20.078889846801758

Token 36: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001540450262837112
    2. ' :' → logprob: -6.501540660858154
    3. ':return' → logprob: -10.251540184020996
    4. ':**' → logprob: -13.626540184020996
    5. '):' → logprob: -14.251540184020996
    6. ':
' → logprob: -14.876540184020996
    7. ' ):' → logprob: -15.126540184020996
    8. '：' → logprob: -16.751541137695312
    9. ' :
' → logprob: -16.876541137695312
    10. ' ' → logprob: -17.251541137695312

Token 37: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.34050363302230835
    2. ' ' → logprob: -1.5905036926269531
    3. '   ' → logprob: -3.715503692626953
    4. ':return' → logprob: -4.340503692626953
    5. ' 
' → logprob: -4.590503692626953
    6. ' :' → logprob: -4.840503692626953
    7. '<|end|>' → logprob: -5.215503692626953
    8. ' )' → logprob: -5.215503692626953
    9. ' :
' → logprob: -5.715503692626953
    10. ')' → logprob: -5.715503692626953

Token 38: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.16808979213237762
    2. ' False' → logprob: -2.6680898666381836
    3. ' ' → logprob: -2.9180898666381836
    4. 'return' (adapté à ' return') → logprob: -3.6680898666381836
    5. 'False' → logprob: -5.793089866638184
    6. '   ' → logprob: -6.418089866638184
    7. ' 
' → logprob: -7.918089866638184
    8. '    ' → logprob: -8.793089866638184
    9. ' r' → logprob: -8.793089866638184
    10. ' ' → logprob: -9.293089866638184

Token 39: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.011048054322600365
    2. 'False' → logprob: -4.511047840118408
    3. ' True' → logprob: -15.511048316955566
    4. ' ' → logprob: -18.01104736328125
    5. ' false' → logprob: -19.26104736328125
    6. '(False' → logprob: -19.51104736328125
    7. ' ' → logprob: -19.76104736328125
    8. ' F' → logprob: -20.13604736328125
    9. 'True' → logprob: -21.13604736328125
    10. '_false' → logprob: -21.88604736328125

Token 40: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9444278478622437
    2. ' 
' → logprob: -1.1944278478622437
    3. '    
' → logprob: -2.819427967071533
    4. '\' → logprob: -2.819427967071533
    5. '\n' → logprob: -2.819427967071533
    6. '  
' → logprob: -2.944427967071533
    7. '   ' → logprob: -3.444427967071533
    8. ':' → logprob: -4.319427967071533
    9. 'n' → logprob: -5.069427967071533
    10. '   
' → logprob: -5.069427967071533

Token 41: '   ' (ID: 271)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.6339614391326904
    2. '   ' → logprob: -1.7589614391326904
    3. ':' → logprob: -2.7589614391326904
    4. '    
' → logprob: -2.8839614391326904
    5. '\' → logprob: -3.1339614391326904
    6. 'n' → logprob: -3.3839614391326904
    7. '\n' → logprob: -3.6339614391326904
    8. '
' → logprob: -3.6339614391326904
    9. ' ' → logprob: -4.2589616775512695
    10. '   
' → logprob: -4.8839616775512695

Token 42: ' for' (ID: 395)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.050127387046814
    2. ' ' → logprob: -1.425127387046814
    3. ' for' → logprob: -1.550127387046814
    4. 'i' → logprob: -2.4251275062561035
    5. ':' → logprob: -2.9251275062561035
    6. 'for' (adapté à ' for') → logprob: -4.0501275062561035
    7. ' )' → logprob: -4.8001275062561035
    8. ' :' → logprob: -4.8001275062561035
    9. ')' → logprob: -5.4251275062561035
    10. 'n' → logprob: -5.4251275062561035

Token 43: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.31346675753593445
    2. ' ' → logprob: -1.3134667873382568
    3. 'i' → logprob: -8.938467025756836
    4. ' space' → logprob: -10.938467025756836
    5. '  ' → logprob: -11.313467025756836
    6. ' ‌' → logprob: -11.438467025756836
    7. ' ```' → logprob: -12.188467025756836
    8. ' _' → logprob: -12.313467025756836
    9. ' ▁' → logprob: -12.313467025756836
    10. ' ' → logprob: -12.438467025756836

Token 44: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10635259002447128
    2. ' ' → logprob: -2.3563525676727295
    3. '  ' → logprob: -5.731352806091309
    4. '<|end|>' → logprob: -6.481352806091309
    5. ' i' → logprob: -6.981352806091309
    6. 'in' → logprob: -9.106352806091309
    7. '<|end|>' → logprob: -9.981352806091309
    8. '   ' → logprob: -9.981352806091309
    9. ' space' → logprob: -10.606352806091309
    10. ' n' → logprob: -10.731352806091309

Token 45: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.004636484198272228
    2. 'range' → logprob: -5.379636287689209
    3. ' ' → logprob: -11.629636764526367
    4. ' xrange' → logprob: -12.504636764526367
    5. '	range' → logprob: -12.879636764526367
    6. ' ' → logprob: -15.004636764526367
    7. ' ran' → logprob: -15.254636764526367
    8. ' space' → logprob: -16.379636764526367
    9. '  ' → logprob: -16.379636764526367
    10. '(range' → logprob: -16.629636764526367

Token 46: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0010375719284638762
    2. ' (' → logprob: -6.87603759765625
    3. '<|end|>' → logprob: -12.87603759765625
    4. ' ' → logprob: -13.37603759765625
    5. '(
' → logprob: -14.87603759765625
    6. '1' → logprob: -15.87603759765625
    7. '2' → logprob: -16.25103759765625
    8. '3' → logprob: -17.25103759765625
    9. '(i' → logprob: -17.50103759765625
    10. '(space' → logprob: -17.50103759765625

Token 47: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '۳' → logprob: -19.375
    4. ')' → logprob: -19.875
    5. '   ' → logprob: -20.0
    6. '３' → logprob: -20.625
    7. '(' → logprob: -21.5
    8. '```' → logprob: -22.0
    9. '٣' → logprob: -22.25
    10. '  ' → logprob: -22.625

Token 48: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00031508569372817874
    2. ' ,' → logprob: -8.125314712524414
    3. ' ' → logprob: -12.250314712524414
    4. '<|end|>' → logprob: -12.875314712524414
    5. ',int' → logprob: -13.125314712524414
    6. ',i' → logprob: -13.125314712524414
    7. ')' → logprob: -13.750314712524414
    8. '  ' → logprob: -13.875314712524414
    9. '   ' → logprob: -14.000314712524414
    10. ',
' → logprob: -14.000314712524414

Token 49: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.10043429583311081
    2. 'int' → logprob: -2.3504343032836914
    3. ' num' → logprob: -8.600434303283691
    4. 'num' → logprob: -10.225434303283691
    5. ' ' → logprob: -12.850434303283691
    6. '	int' → logprob: -13.475434303283691
    7. '   ' → logprob: -13.850434303283691
    8. '    ' → logprob: -14.225434303283691
    9. ',int' → logprob: -14.975434303283691
    10. '(int' → logprob: -15.100434303283691

Token 50: '(num' (ID: 15828)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007949299179017544
    2. '<|end|>' → logprob: -5.382949352264404
    3. '(num' → logprob: -5.757949352264404
    4. ' (' → logprob: -9.507948875427246
    5. '(math' → logprob: -10.757948875427246
    6. ' ' → logprob: -11.007948875427246
    7. '(pow' → logprob: -11.882948875427246
    8. '(int' → logprob: -12.007948875427246
    9. '<|end|>' → logprob: -12.007948875427246
    10. '(i' → logprob: -12.257948875427246

Token 51: '**' (ID: 410)
  Prédit: ' **'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' **' → logprob: -0.28281524777412415
    2. '**' → logprob: -1.4078152179718018
    3. '.sqrt' → logprob: -7.532815456390381
    4. ' ' → logprob: -7.907815456390381
    5. ')' → logprob: -8.157814979553223
    6. ')**' → logprob: -8.907814979553223
    7. '<|end|>' → logprob: -9.032814979553223
    8. ''s' → logprob: -9.532814979553223
    9. '.' → logprob: -9.657814979553223
    10. ' **)' → logprob: -10.157814979553223

Token 52: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.692145012086257e-05
    2. ' ' → logprob: -10.000046730041504
    3. '.' → logprob: -13.500046730041504
    4. '(' → logprob: -16.62504768371582
    5. ' ' → logprob: -19.12504768371582
    6. ')' → logprob: -19.25004768371582
    7. '```' → logprob: -19.62504768371582
    8. '   ' → logprob: -20.12504768371582
    9. '  ' → logprob: -20.25004768371582
    10. '۰' → logprob: -20.37504768371582

Token 53: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -7.941850526549388e-06
    2. '0' → logprob: -12.250007629394531
    3. '5' → logprob: -14.125007629394531
    4. ' .' → logprob: -14.375007629394531
    5. '1' → logprob: -14.875007629394531
    6. '```' → logprob: -15.000007629394531
    7. '2' → logprob: -15.125007629394531
    8. ' ' → logprob: -15.500007629394531
    9. '4' → logprob: -16.00000762939453
    10. '6' → logprob: -16.50000762939453

Token 54: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -1.2113979209971149e-05
    2. '```' → logprob: -12.375012397766113
    3. '   ' → logprob: -12.625012397766113
    4. '.' → logprob: -14.000012397766113
    5. ' ' → logprob: -14.250012397766113
    6. '

' → logprob: -14.375012397766113
    7. '  ' → logprob: -15.062512397766113
    8. '``' → logprob: -15.437512397766113
    9. ')' → logprob: -15.875012397766113
    10. '    ' → logprob: -15.875012397766113

Token 55: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2479921579360962
    2. '+' → logprob: -1.8729921579360962
    3. ')+' → logprob: -2.7479920387268066
    4. ' +' → logprob: -6.372992038726807
    5. ' )' → logprob: -8.997992515563965
    6. '+)' → logprob: -10.247992515563965
    7. '```' → logprob: -11.247992515563965
    8. ' ' → logprob: -11.622992515563965
    9. '<|end|>' → logprob: -11.997992515563965
    10. '}+' → logprob: -12.747992515563965

Token 56: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04859543219208717
    2. ' +' → logprob: -3.048595428466797
    3. ' ' → logprob: -12.673595428466797
    4. '+,' → logprob: -13.298595428466797
    5. ',' → logprob: -13.673595428466797
    6. ')+' → logprob: -13.923595428466797
    7. ' ,' → logprob: -14.923595428466797
    8. '```' → logprob: -15.548595428466797
    9. '1' → logprob: -16.048595428466797
    10. ')' → logprob: -16.173595428466797

Token 57: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008629691787064075
    2. ' ' → logprob: -4.75862979888916
    3. '2' → logprob: -11.38362979888916
    4. '```' → logprob: -13.88362979888916
    5. '  ' → logprob: -14.00862979888916
    6. '   ' → logprob: -14.38362979888916
    7. ')' → logprob: -14.38362979888916
    8. '    ' → logprob: -15.25862979888916
    9. ' ' → logprob: -15.38362979888916
    10. ',' → logprob: -16.571128845214844

Token 58: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016086915275081992
    2. ' ' → logprob: -8.750161170959473
    3. '   ' → logprob: -13.875161170959473
    4. '```' → logprob: -14.875161170959473
    5. '  ' → logprob: -15.000161170959473
    6. '2' → logprob: -15.125161170959473
    7. '    ' → logprob: -15.625161170959473
    8. ')' → logprob: -16.250160217285156
    9. '(' → logprob: -17.000160217285156
    10. '۱' → logprob: -17.187660217285156

Token 59: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.165027217415627e-05
    2. ':' → logprob: -11.250021934509277
    3. ' ,' → logprob: -12.125021934509277
    4. '<|end|>' → logprob: -14.125021934509277
    5. '2' → logprob: -14.500021934509277
    6. ',
' → logprob: -14.750021934509277
    7. ')' → logprob: -15.125021934509277
    8. '   ' → logprob: -15.250021934509277
    9. ',i' → logprob: -15.875021934509277
    10. '):' → logprob: -16.00002098083496

Token 60: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.38687121868133545
    2. ' ' → logprob: -1.1368712186813354
    3. ')' → logprob: -17.011871337890625
    4. ' ' → logprob: -17.011871337890625
    5. '```' → logprob: -17.761871337890625
    6. ' )' → logprob: -18.261871337890625
    7. '۲' → logprob: -19.011871337890625
    8. '6' → logprob: -19.386871337890625
    9. '２' → logprob: -19.511871337890625
    10. '  ' → logprob: -19.636871337890625

Token 61: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.493430894101039e-05
    2. ' ' → logprob: -9.500075340270996
    3. ')' → logprob: -17.75007438659668
    4. '```' → logprob: -17.87507438659668
    5. '۲' → logprob: -18.25007438659668
    6. '  ' → logprob: -18.37507438659668
    7. '   ' → logprob: -18.75007438659668
    8. '２' → logprob: -19.25007438659668
    9. ' )' → logprob: -20.62507438659668
    10. '٢' → logprob: -20.75007438659668

Token 62: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005353293847292662
    2. ':' → logprob: -5.5053534507751465
    3. ' ):' → logprob: -7.2553534507751465
    4. ')' → logprob: -7.5053534507751465
    5. '):
' → logprob: -11.505352973937988
    6. ' )' → logprob: -13.255352973937988
    7. ':)' → logprob: -13.630352973937988
    8. ' ' → logprob: -13.630352973937988
    9. ' :' → logprob: -13.880352973937988
    10. '   ' → logprob: -13.880352973937988

Token 63: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2927646040916443
    2. ':' → logprob: -1.417764663696289
    3. '   ' → logprob: -5.792764663696289
    4. ' :' → logprob: -5.917764663696289
    5. '<|end|>' → logprob: -6.167764663696289
    6. ' ' → logprob: -7.167764663696289
    7. ':
' → logprob: -7.292764663696289
    8. 'if' → logprob: -7.542764663696289
    9. '):' → logprob: -7.667764663696289
    10. '    ' → logprob: -8.042764663696289

Token 64: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.05200977250933647
    2. ' if' → logprob: -3.0520098209381104
    3. 'i' → logprob: -6.802009582519531
    4. ':' → logprob: -6.927009582519531
    5. '   ' → logprob: -7.802009582519531
    6. '       ' → logprob: -7.927009582519531
    7. '    ' → logprob: -7.927009582519531
    8. ' i' → logprob: -9.427009582519531
    9. ' ' → logprob: -9.927009582519531
    10. ' :' → logprob: -10.677009582519531

Token 65: ' num' (ID: 2269)
  Prédit: ' num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.0004921489744447172
    2. 'num' → logprob: -7.625492095947266
    3. ' ' → logprob: -13.125492095947266
    4. ' ' → logprob: -13.875492095947266
    5. '	num' → logprob: -14.250492095947266
    6. '(num' → logprob: -15.375492095947266
    7. '<num' → logprob: -16.125492095947266
    8. ' n' → logprob: -16.375492095947266
    9. '[num' → logprob: -17.500492095947266
    10. ' (' → logprob: -17.625492095947266

Token 66: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.07002090662717819
    2. '%' → logprob: -2.695020914077759
    3. ' ' → logprob: -9.57002067565918
    4. ' ' → logprob: -11.69502067565918
    5. '%i' → logprob: -12.32002067565918
    6. '<|end|>' → logprob: -14.44502067565918
    7. '%s' → logprob: -15.57002067565918
    8. '%e' → logprob: -15.57002067565918
    9. ')' → logprob: -15.69502067565918
    10. '	' → logprob: -15.69502067565918

Token 67: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.20147180557250977
    2. 'i' → logprob: -1.7014718055725098
    3. '	i' → logprob: -10.576471328735352
    4. ' ' → logprob: -10.701471328735352
    5. '<|end|>' → logprob: -11.826471328735352
    6. ' ' → logprob: -13.451471328735352
    7. '  ' → logprob: -14.326471328735352
    8. '   ' → logprob: -14.826471328735352
    9. ' ‌' → logprob: -15.326471328735352
    10. '<|end|>' → logprob: -15.701471328735352

Token 68: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.04864334315061569
    2. '==' → logprob: -3.0486433506011963
    3. '=' → logprob: -10.048643112182617
    4. ' =' → logprob: -11.923643112182617
    5. ')==' → logprob: -12.798643112182617
    6. '<|end|>' → logprob: -13.548643112182617
    7. ')' → logprob: -14.548643112182617
    8. ' ' → logprob: -14.798643112182617
    9. '===' → logprob: -14.923643112182617
    10. ']==' → logprob: -15.423643112182617

Token 69: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.47407716512680054
    2. '0' → logprob: -0.9740771651268005
    3. ' ' → logprob: -16.349077224731445
    4. '  ' → logprob: -17.599077224731445
    5. '۰' → logprob: -18.599077224731445
    6. '<|end|>' → logprob: -18.724077224731445
    7. '```' → logprob: -18.974077224731445
    8. '=' → logprob: -18.974077224731445
    9. '	' → logprob: -19.224077224731445
    10. ' ' → logprob: -20.349077224731445

Token 70: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004879915213678032
    2. ' ' → logprob: -7.625487804412842
    3. '۰' → logprob: -19.50048828125
    4. '```' → logprob: -20.87548828125
    5. '  ' → logprob: -21.25048828125
    6. '٠' → logprob: -21.62548828125
    7. '00' → logprob: -21.75048828125
    8. '０' → logprob: -21.75048828125
    9. ' ' → logprob: -21.87548828125
    10. '=' → logprob: -22.12548828125

Token 71: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002682496269699186
    2. ':return' → logprob: -8.50026798248291
    3. ':
' → logprob: -9.75026798248291
    4. '       ' → logprob: -12.87526798248291
    5. '):' → logprob: -13.00026798248291
    6. ' :' → logprob: -14.37526798248291
    7. '<|end|>' → logprob: -14.37526798248291
    8. '           ' → logprob: -15.50026798248291
    9. ':**' → logprob: -16.500268936157227
    10. '   ' → logprob: -16.875268936157227

Token 72: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005703099304810166
    2. 'return' → logprob: -8.250570297241211
    3. ' return' → logprob: -8.500570297241211
    4. '       ' → logprob: -9.750570297241211
    5. '               ' → logprob: -11.250570297241211
    6. ' ' → logprob: -11.625570297241211
    7. ':return' → logprob: -11.625570297241211
    8. '		' → logprob: -12.750570297241211
    9. '        ' → logprob: -13.000570297241211
    10. '          ' → logprob: -13.125570297241211

Token 73: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5841332077980042
    2. ' return' → logprob: -0.8341332077980042
    3. '               ' → logprob: -5.084133148193359
    4. '           ' → logprob: -6.584133148193359
    5. '       ' → logprob: -7.584133148193359
    6. '   ' → logprob: -9.58413314819336
    7. ' ' → logprob: -12.95913314819336
    8. '	return' → logprob: -13.70913314819336
    9. ' ' → logprob: -14.20913314819336
    10. '```' → logprob: -14.33413314819336

Token 74: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.38688820600509644
    2. 'False' → logprob: -1.1368882656097412
    3. ' True' → logprob: -11.13688850402832
    4. 'True' → logprob: -12.88688850402832
    5. ' ' → logprob: -18.01188850402832
    6. ' false' → logprob: -19.76188850402832
    7. '(False' → logprob: -20.01188850402832
    8. 'F' → logprob: -20.26188850402832
    9. '_false' → logprob: -20.63688850402832
    10. ' ' → logprob: -20.76188850402832

Token 75: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06889890134334564
    2. '
' → logprob: -3.068898916244507
    3. '    
' → logprob: -4.568898677825928
    4. ' 
' → logprob: -5.818898677825928
    5. 'return' → logprob: -5.818898677825928
    6. '  
' → logprob: -6.443898677825928
    7. '   
' → logprob: -6.818898677825928
    8. ' return' → logprob: -7.068898677825928
    9. ':return' → logprob: -9.693899154663086
    10. '	return' → logprob: -10.193899154663086

Token 76: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0021301566157490015
    2. '    
' → logprob: -7.252130031585693
    3. 'return' → logprob: -7.377130031585693
    4. '
' → logprob: -7.627130031585693
    5. ' return' → logprob: -8.627130508422852
    6. ' 
' → logprob: -9.877130508422852
    7. '   
' → logprob: -10.252130508422852
    8. '  
' → logprob: -10.752130508422852
    9. '```' → logprob: -12.127130508422852
    10. '	return' → logprob: -12.252130508422852

Token 77: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.04203919321298599
    2. '   ' → logprob: -3.292039155960083
    3. ' return' → logprob: -5.542039394378662
    4. '    
' → logprob: -10.417038917541504
    5. '	return' → logprob: -10.917038917541504
    6. ' ' → logprob: -11.792038917541504
    7. '  ' → logprob: -12.667038917541504
    8. ':return' → logprob: -12.667038917541504
    9. '
' → logprob: -12.917038917541504
    10. '```' → logprob: -13.292038917541504

Token 78: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.01815006136894226
    2. 'True' → logprob: -4.0181498527526855
    3. ' Tru' → logprob: -16.768150329589844
    4. ' ' → logprob: -17.268150329589844
    5. ' ' → logprob: -18.018150329589844
    6. '(True' → logprob: -20.143150329589844
    7. '   ' → logprob: -20.268150329589844
    8. ' Tr' → logprob: -20.643150329589844
    9. 'Tr' → logprob: -21.393150329589844
    10. '=True' → logprob: -21.643150329589844

Token 79: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 80: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 81: ' max' (ID: 2999)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0072387405671179295
    2. ' space' → logprob: -5.257238864898682
    3. ' is' → logprob: -6.632238864898682
    4. '_' → logprob: -8.882238388061523
    5. ' factorial' → logprob: -9.007238388061523
    6. '_space' → logprob: -9.632238388061523
    7. ' ' → logprob: -9.757238388061523
    8. ' check' → logprob: -10.007238388061523
    9. 'space' → logprob: -10.757238388061523
    10. ' add' → logprob: -10.882238388061523

Token 82: '_t' (ID: 838)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.003016214817762375
    2. '(' → logprob: -6.128015995025635
    3. '_prime' → logprob: -8.003016471862793
    4. '_space' → logprob: -8.753016471862793
    5. '_div' → logprob: -9.628016471862793
    6. ' _' → logprob: -9.753016471862793
    7. '_factor' → logprob: -10.503016471862793
    8. '_number' → logprob: -10.878016471862793
    9. '_num' → logprob: -11.003016471862793
    10. '(_' → logprob: -11.128016471862793

Token 83: 'win' (ID: 11668)
  Prédit: 'rip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rip' → logprob: -0.3662709593772888
    2. 'r' → logprob: -1.9912710189819336
    3. 'h' → logprob: -3.1162710189819336
    4. 'wo' → logprob: -3.7412710189819336
    5. 'o' → logprob: -4.241271018981934
    6. 'riangle' → logprob: -4.366271018981934
    7. 'ri' → logprob: -4.491271018981934
    8. 'rial' → logprob: -4.616271018981934
    9. 'est' → logprob: -4.991271018981934
    10. 'ab' → logprob: -5.366271018981934

Token 84: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.06311559677124023
    2. '_pr' → logprob: -2.8131155967712402
    3. '_' → logprob: -6.93811559677124
    4. '_pe' → logprob: -9.688116073608398
    5. 'prime' → logprob: -9.813116073608398
    6. '_p' → logprob: -11.188116073608398
    7. '_peak' → logprob: -11.313116073608398
    8. '_sum' → logprob: -11.688116073608398
    9. '_pair' → logprob: -12.313116073608398
    10. '_Pr' → logprob: -12.313116073608398

Token 85: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0013917810283601284
    2. 's' → logprob: -6.751391887664795
    3. '(n' → logprob: -9.126391410827637
    4. '(num' → logprob: -10.376391410827637
    5. '(s' → logprob: -10.751391410827637
    6. '_' → logprob: -10.876391410827637
    7. '(_' → logprob: -11.751391410827637
    8. ' (' → logprob: -11.876391410827637
    9. '_(' → logprob: -12.001391410827637
    10. '_s' → logprob: -12.126391410827637

Token 86: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03814167529344559
    2. ')' → logprob: -3.2881417274475098
    3. ':' → logprob: -9.663141250610352
    4. ' ):' → logprob: -11.288141250610352
    5. '_' → logprob: -11.913141250610352
    6. '):
' → logprob: -12.663141250610352
    7. '(n' → logprob: -13.038141250610352
    8. '(' → logprob: -13.538141250610352
    9. 's' → logprob: -13.538141250610352
    10. '   ' → logprob: -13.663141250610352

Token 87: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1761578470468521
    2. '   ' → logprob: -2.4261579513549805
    3. ' ' → logprob: -3.1761579513549805
    4. ' :' → logprob: -4.3011579513549805
    5. '    ' → logprob: -5.3011579513549805
    6. ' 
' → logprob: -5.3011579513549805
    7. '_' → logprob: -6.3011579513549805
    8. '<|end|>' → logprob: -6.3011579513549805
    9. '(' → logprob: -7.1761579513549805
    10. ':
' → logprob: -7.3011579513549805

Token 88: ' for' (ID: 395)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.46572163701057434
    2. 'max' → logprob: -1.090721607208252
    3. '   ' → logprob: -4.465721607208252
    4. '    ' → logprob: -4.840721607208252
    5. ' for' → logprob: -5.465721607208252
    6. ' 
' → logprob: -5.590721607208252
    7. ' ' → logprob: -6.215721607208252
    8. ' twin' → logprob: -6.340721607208252
    9. 'for' (adapté à ' for') → logprob: -7.215721607208252
    10. ' ```' → logprob: -7.715721607208252

Token 89: ' q' (ID: 2335)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0038438981864601374
    2. ' x' → logprob: -6.003843784332275
    3. ' ' → logprob: -7.128843784332275
    4. ' r' → logprob: -8.753844261169434
    5. ' range' → logprob: -8.878844261169434
    6. ' num' → logprob: -9.253844261169434
    7. ' n' → logprob: -9.753844261169434
    8. ' p' → logprob: -10.753844261169434
    9. '   ' → logprob: -11.128844261169434
    10. ' reversed' → logprob: -11.378844261169434

Token 90: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0393616259098053
    2. ' ' → logprob: -3.9143617153167725
    3. 'in' → logprob: -4.414361476898193
    4. 'u' → logprob: -5.914361476898193
    5. '   ' → logprob: -6.664361476898193
    6. ' i' → logprob: -7.039361476898193
    7. ' =' → logprob: -7.539361476898193
    8. '  ' → logprob: -8.039361953735352
    9. 'n' → logprob: -8.539361953735352
    10. '=' → logprob: -8.664361953735352

Token 91: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2520667612552643
    2. ' range' → logprob: -1.502066731452942
    3. '   ' → logprob: -10.252066612243652
    4. 're' → logprob: -10.377066612243652
    5. ' reversed' → logprob: -10.502066612243652
    6. ' ' → logprob: -11.002066612243652
    7. 'r' → logprob: -11.627066612243652
    8. '  ' → logprob: -12.127066612243652
    9. 'rang' → logprob: -12.627066612243652
    10. '	range' → logprob: -12.627066612243652

Token 92: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.04398107901215553
    2. '(' → logprob: -3.2939810752868652
    3. ' n' → logprob: -5.168981075286865
    4. 'n' → logprob: -8.418981552124023
    5. ' (' → logprob: -12.043981552124023
    6. '	n' → logprob: -13.293981552124023
    7. ' ' → logprob: -13.418981552124023
    8. '(q' → logprob: -14.418981552124023
    9. ',' → logprob: -14.918981552124023
    10. '=n' → logprob: -14.918981552124023

Token 93: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004720018710941076
    2. '-' → logprob: -5.504720211029053
    3. ' ,' → logprob: -7.504720211029053
    4. ' -' → logprob: -9.504719734191895
    5. ' ' → logprob: -12.129719734191895
    6. '2' → logprob: -12.629719734191895
    7. ',-' → logprob: -13.129719734191895
    8. '   ' → logprob: -13.254719734191895
    9. '-,' → logprob: -13.254719734191895
    10. '  ' → logprob: -14.879719734191895

Token 94: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03286229074001312
    2. ' ' → logprob: -3.7828621864318848
    3. '2' → logprob: -4.657862186431885
    4. '   ' → logprob: -10.282862663269043
    5. '3' → logprob: -10.407862663269043
    6. '  ' → logprob: -11.282862663269043
    7. '    ' → logprob: -12.907862663269043
    8. '-' → logprob: -13.157862663269043
    9. '     ' → logprob: -14.407862663269043
    10. '	' → logprob: -14.782862663269043

Token 95: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.18001997470855713
    2. '1' → logprob: -1.8050199747085571
    3. '3' → logprob: -8.305020332336426
    4. '-' → logprob: -11.305020332336426
    5. '4' → logprob: -11.555020332336426
    6. ' ' → logprob: -13.055020332336426
    7. '  ' → logprob: -14.305020332336426
    8. '   ' → logprob: -14.305020332336426
    9. '`' → logprob: -14.555020332336426
    10. '```' → logprob: -14.555020332336426

Token 96: ',' (ID: 11)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.06900950521230698
    2. ' -' → logprob: -2.94400954246521
    3. ',' → logprob: -4.319009304046631
    4. ',-' → logprob: -7.569009304046631
    5. '1' → logprob: -9.444009780883789
    6. '   ' → logprob: -10.319009780883789
    7. ' ' → logprob: -10.569009780883789
    8. '-,' → logprob: -10.944009780883789
    9. '0' → logprob: -11.194009780883789
    10. '2' → logprob: -11.569009780883789

Token 97: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.10023600608110428
    2. ' -' → logprob: -2.350235939025879
    3. ' ' → logprob: -10.975235939025879
    4. '   ' → logprob: -12.475235939025879
    5. '1' → logprob: -12.975235939025879
    6. '  ' → logprob: -13.225235939025879
    7. '2' → logprob: -13.225235939025879
    8. '	' → logprob: -14.725235939025879
    9. ',-' → logprob: -14.725235939025879
    10. '−' → logprob: -15.350235939025879

Token 98: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.629921436891891e-05
    2. ' ' → logprob: -10.75002670288086
    3. ')' → logprob: -12.75002670288086
    4. '2' → logprob: -13.25002670288086
    5. '<|end|>' → logprob: -16.50002670288086
    6. ')>' → logprob: -17.25002670288086
    7. '):
' → logprob: -17.37502670288086
    8. '```' → logprob: -18.12502670288086
    9. '  ' → logprob: -18.62502670288086
    10. ')>
' → logprob: -18.87502670288086

Token 99: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.010321533307433128
    2. '):
' → logprob: -4.885321617126465
    3. ' ):' → logprob: -6.635321617126465
    4. ',' → logprob: -7.510321617126465
    5. '-' → logprob: -7.510321617126465
    6. ')' → logprob: -9.260321617126465
    7. ':' → logprob: -9.385321617126465
    8. '   ' → logprob: -9.635321617126465
    9. ' ):
' → logprob: -10.635321617126465
    10. '):
' → logprob: -11.385321617126465

Token 100: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2581767439842224
    2. ' :' → logprob: -1.5081768035888672
    3. '   ' → logprob: -5.883176803588867
    4. ' :
' → logprob: -6.633176803588867
    5. '       ' → logprob: -7.383176803588867
    6. ' ' → logprob: -7.508176803588867
    7. '):' → logprob: -8.258176803588867
    8. ' ):' → logprob: -8.383176803588867
    9. ':
' → logprob: -9.008176803588867
    10. '    ' → logprob: -9.383176803588867

Token 101: ' p' (ID: 275)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3397544324398041
    2. '       ' → logprob: -1.9647544622421265
    3. ' ' → logprob: -2.214754343032837
    4. ' 
' → logprob: -3.839754343032837
    5. 'if' → logprob: -4.964754581451416
    6. '   ' → logprob: -5.589754581451416
    7. '    ' → logprob: -6.089754581451416
    8. '        ' → logprob: -7.089754581451416
    9. '        
' → logprob: -7.714754581451416
    10. ':' → logprob: -7.714754581451416

Token 102: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11284498870372772
    2. '=' → logprob: -2.237844944000244
    3. ',' → logprob: -11.487845420837402
    4. ' ' → logprob: -12.237845420837402
    5. ' =
' → logprob: -12.987845420837402
    6. 'if' → logprob: -14.112845420837402
    7. ')' → logprob: -14.112845420837402
    8. 's' → logprob: -14.362845420837402
    9. '_' → logprob: -14.612845420837402
    10. 'f' → logprob: -15.112845420837402

Token 103: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0011711753904819489
    2. ' q' → logprob: -6.751171112060547
    3. '(q' → logprob: -15.001171112060547
    4. 'p' → logprob: -15.751171112060547
    5. '	q' → logprob: -15.751171112060547
    6. '[q' → logprob: -16.126171112060547
    7. ' ' → logprob: -16.501171112060547
    8. '   ' → logprob: -16.751171112060547
    9. '  ' → logprob: -17.001171112060547
    10. '2' → logprob: -17.001171112060547

Token 104: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.16023053228855133
    2. ' -' → logprob: -1.9102305173873901
    3. '       ' → logprob: -12.91023063659668
    4. '   ' → logprob: -13.41023063659668
    5. ' ' → logprob: -13.91023063659668
    6. '           ' → logprob: -14.78523063659668
    7. '−' → logprob: -15.41023063659668
    8. '–' → logprob: -16.28523063659668
    9. '```' → logprob: -16.28523063659668
    10. '  ' → logprob: -16.41023063659668

Token 105: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.125
    3. '   ' → logprob: -16.625
    4. '

' → logprob: -16.875
    5. '```' → logprob: -17.8125
    6. '  ' → logprob: -18.0
    7. '
' → logprob: -18.6875
    8. '२' → logprob: -18.6875
    9. '۲' → logprob: -18.75
    10. '	' → logprob: -19.3125

Token 106: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0280383548888494e-06
    2. '

' → logprob: -14.875000953674316
    3. '```' → logprob: -15.750000953674316
    4. '   ' → logprob: -16.250001907348633
    5. '
' → logprob: -17.125001907348633
    6. '۲' → logprob: -17.375001907348633
    7. '२' → logprob: -17.500001907348633
    8. '{' → logprob: -17.812501907348633
    9. '' → logprob: -17.875001907348633
    10. ' ' → logprob: -17.937501907348633

Token 107: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 108: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40750303864479065
    2. '<|end|>' → logprob: -1.1575030088424683
    3. ' ' → logprob: -4.782503128051758
    4. '   ' → logprob: -5.782503128051758
    5. '
' → logprob: -6.157503128051758
    6. ' 
' → logprob: -6.282503128051758
    7. '  
' → logprob: -6.282503128051758
    8. '        
' → logprob: -6.782503128051758
    9. '<|end|>' → logprob: -7.282503128051758
    10. ' if' → logprob: -7.532503128051758

Token 109: ' if' (ID: 538)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.9910882115364075
    2. ' if' → logprob: -1.8660881519317627
    3. '<|end|>' → logprob: -1.9910881519317627
    4. ' ' → logprob: -2.1160881519317627
    5. 'if' (adapté à ' if') → logprob: -2.2410881519317627
    6. '       ' → logprob: -2.7410881519317627
    7. '
' → logprob: -3.2410881519317627
    8. '  
' → logprob: -5.741088390350342
    9. '   ' → logprob: -6.616088390350342
    10. '        
' → logprob: -7.241088390350342

Token 110: ' p' (ID: 275)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.06995232403278351
    2. 'is' → logprob: -2.6949522495269775
    3. ' p' → logprob: -11.569952011108398
    4. 'p' → logprob: -13.444952011108398
    5. ' ' → logprob: -13.444952011108398
    6. ' q' → logprob: -14.194952011108398
    7. '    ' → logprob: -14.194952011108398
    8. '(is' → logprob: -14.194952011108398
    9. 'q' → logprob: -15.069952011108398
    10. ' not' → logprob: -15.194952011108398

Token 111: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.3174991011619568
    2. ' >' → logprob: -1.6924991607666016
    3. '>=' → logprob: -3.0674991607666016
    4. '>' → logprob: -4.067499160766602
    5. '<|end|>' → logprob: -4.317499160766602
    6. ' <=' → logprob: -5.192499160766602
    7. ' and' → logprob: -6.192499160766602
    8. ' ' → logprob: -6.442499160766602
    9. 'and' → logprob: -7.317499160766602
    10. '   ' → logprob: -8.192499160766602

Token 112: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.7968066206085496e-05
    2. ' ' → logprob: -10.500027656555176
    3. '   ' → logprob: -15.500027656555176
    4. '0' → logprob: -16.250028610229492
    5. '  ' → logprob: -16.875028610229492
    6. '3' → logprob: -17.875028610229492
    7. '1' → logprob: -18.000028610229492
    8. '    ' → logprob: -18.875028610229492
    9. '```' → logprob: -19.250028610229492
    10. '<' → logprob: -19.500028610229492

Token 113: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.723352049040841e-06
    2. ' ' → logprob: -12.625004768371582
    3. '3' → logprob: -14.750004768371582
    4. '0' → logprob: -15.000004768371582
    5. '   ' → logprob: -15.000004768371582
    6. '1' → logprob: -16.375003814697266
    7. '  ' → logprob: -16.875003814697266
    8. '    ' → logprob: -17.625003814697266
    9. '

' → logprob: -17.750003814697266
    10. '```' → logprob: -18.000003814697266

Token 114: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0015211685094982386
    2. 'and' → logprob: -6.501521110534668
    3. '       ' → logprob: -11.751521110534668
    4. ' ' → logprob: -12.501521110534668
    5. '<|end|>' → logprob: -12.751521110534668
    6. ':' → logprob: -12.876521110534668
    7. '        ' → logprob: -14.001521110534668
    8. '           ' → logprob: -15.001521110534668
    9. '	and' → logprob: -16.001522064208984
    10. '    ' → logprob: -16.501522064208984

Token 115: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.25193122029304504
    2. 'is' → logprob: -1.5019311904907227
    3. '   ' → logprob: -14.626931190490723
    4. '       ' → logprob: -14.751931190490723
    5. '(is' → logprob: -14.751931190490723
    6. ' ' → logprob: -14.876931190490723
    7. '           ' → logprob: -15.501931190490723
    8. '	is' → logprob: -15.876931190490723
    9. '    ' → logprob: -16.50193214416504
    10. '        ' → logprob: -17.37693214416504

Token 116: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -8.85235276655294e-05
    2. '_' → logprob: -9.500088691711426
    3. '_p' → logprob: -11.500088691711426
    4. '_pr' → logprob: -13.125088691711426
    5. ' _' → logprob: -14.125088691711426
    6. 'prime' → logprob: -14.875088691711426
    7. '_pi' → logprob: -15.500088691711426
    8. '_pal' → logprob: -17.25008773803711
    9. ''_' → logprob: -17.25008773803711
    10. '_primary' → logprob: -17.50008773803711

Token 117: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.10077483206987381
    2. '(q' → logprob: -2.3507747650146484
    3. '(' → logprob: -7.475774765014648
    4. ' (' → logprob: -14.225774765014648
    5. '(s' → logprob: -15.725774765014648
    6. 'p' → logprob: -15.975774765014648
    7. ')' → logprob: -16.47577476501465
    8. '(n' → logprob: -16.47577476501465
    9. '(
' → logprob: -16.60077476501465
    10. ' ' → logprob: -16.72577476501465

Token 118: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003812217037193477
    2. ' )' → logprob: -8.250381469726562
    3. ' and' → logprob: -9.125381469726562
    4. 'and' → logprob: -11.500381469726562
    5. '   ' → logprob: -14.625381469726562
    6. ' ' → logprob: -16.250381469726562
    7. '`)' → logprob: -16.250381469726562
    8. '    ' → logprob: -16.625381469726562
    9. '")' → logprob: -16.875381469726562
    10. '')' → logprob: -16.875381469726562

Token 119: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.001930420519784093
    2. 'and' → logprob: -6.251930236816406
    3. ' ' → logprob: -13.501930236816406
    4. '    ' → logprob: -15.501930236816406
    5. ' an' → logprob: -16.626930236816406
    6. '        ' → logprob: -16.751930236816406
    7. '<|end|>' → logprob: -16.751930236816406
    8. ' a' → logprob: -16.876930236816406
    9. '   ' → logprob: -17.126930236816406
    10. '       ' → logprob: -17.251930236816406

Token 120: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.004625937435775995
    2. 'is' → logprob: -5.3796257972717285
    3. ' ' → logprob: -13.379626274108887
    4. '<|end|>' → logprob: -13.879626274108887
    5. '    ' → logprob: -14.379626274108887
    6. ' ' → logprob: -14.504626274108887
    7. '	is' → logprob: -14.754626274108887
    8. '   ' → logprob: -15.004626274108887
    9. '```' → logprob: -15.004626274108887
    10. '  ' → logprob: -15.254626274108887

Token 121: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.0001996066712308675
    2. '_' → logprob: -8.625199317932129
    3. '_p' → logprob: -11.750199317932129
    4. 'prime' → logprob: -12.250199317932129
    5. ' _' → logprob: -13.125199317932129
    6. '_pr' → logprob: -13.250199317932129
    7. ''_' → logprob: -14.000199317932129
    8. ')_' → logprob: -14.625199317932129
    9. '_pal' → logprob: -14.750199317932129
    10. '```' → logprob: -15.125199317932129

Token 122: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -0.0009119403548538685
    2. '(' → logprob: -7.000911712646484
    3. ' (' → logprob: -15.750911712646484
    4. '(query' → logprob: -16.375911712646484
    5. '(Q' → logprob: -16.625911712646484
    6. '<|end|>' → logprob: -16.750911712646484
    7. '(s' → logprob: -17.000911712646484
    8. '(p' → logprob: -17.250911712646484
    9. '(
' → logprob: -18.000911712646484
    10. '?q' → logprob: -18.375911712646484

Token 123: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00036204091156832874
    2. ')' → logprob: -8.500362396240234
    3. ':' → logprob: -9.000362396240234
    4. '):
' → logprob: -10.875362396240234
    5. ' ):' → logprob: -11.125362396240234
    6. '   ' → logprob: -14.875362396240234
    7. '       ' → logprob: -14.875362396240234
    8. '():' → logprob: -15.250362396240234
    9. '):

' → logprob: -15.875362396240234
    10. ')):' → logprob: -16.125362396240234

Token 124: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002967320033349097
    2. '
' → logprob: -9.000296592712402
    3. ' return' → logprob: -9.000296592712402
    4. ':' → logprob: -10.875296592712402
    5. 'return' → logprob: -11.875296592712402
    6. '          ' → logprob: -12.125296592712402
    7. '            
' → logprob: -12.125296592712402
    8. ':
' → logprob: -12.375296592712402
    9. ':return' → logprob: -12.625296592712402
    10. '               ' → logprob: -13.000296592712402

Token 125: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10735595971345901
    2. 'return' (adapté à ' return') → logprob: -2.607356071472168
    3. ' return' → logprob: -3.607356071472168
    4. '               ' → logprob: -6.982356071472168
    5. '       ' → logprob: -12.357356071472168
    6. '   ' → logprob: -13.107356071472168
    7. '	return' → logprob: -13.232356071472168
    8. ':return' → logprob: -13.357356071472168
    9. '          ' → logprob: -13.482356071472168
    10. '{return' → logprob: -14.482356071472168

Token 126: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.18145334720611572
    2. 'q' → logprob: -1.8064533472061157
    3. ' p' → logprob: -6.681453227996826
    4. ' q' → logprob: -8.181453704833984
    5. '(p' → logprob: -8.931453704833984
    6. '(q' → logprob: -10.431453704833984
    7. ' (' → logprob: -11.931453704833984
    8. '(' → logprob: -12.556453704833984
    9. '   ' → logprob: -14.056453704833984
    10. ' ' → logprob: -14.931453704833984

Token 127: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.29385513067245483
    2. '<|end|>' → logprob: -1.5438551902770996
    3. ',q' → logprob: -3.2938551902770996
    4. ' ,' → logprob: -6.4188551902771
    5. ',None' → logprob: -7.1688551902771
    6. ' ' → logprob: -7.5438551902771
    7. '<|end|>' → logprob: -8.543854713439941
    8. '
' → logprob: -8.793854713439941
    9. ',
' → logprob: -8.918854713439941
    10. 'None' → logprob: -9.668854713439941

Token 128: ' q' (ID: 2335)
  Prédit: ' q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.3132820129394531
    2. 'q' → logprob: -1.3132820129394531
    3. ' ' → logprob: -11.313282012939453
    4. ' ' → logprob: -11.938282012939453
    5. '<|end|>' → logprob: -14.188282012939453
    6. '	q' → logprob: -14.438282012939453
    7. 'space' → logprob: -16.688282012939453
    8. '(q' → logprob: -17.063282012939453
    9. ' ' → logprob: -17.438282012939453
    10. ',q' → logprob: -17.563282012939453

Token 129: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 130: '   ' (ID: 271)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0030985695775598288
    2. ' None' → logprob: -6.128098487854004
    3. '   ' → logprob: -7.878098487854004
    4. '(None' → logprob: -8.253098487854004
    5. '\n' → logprob: -9.503098487854004
    6. '
' → logprob: -9.753098487854004
    7. '    
' → logprob: -9.878098487854004
    8. ' 
' → logprob: -10.503098487854004
    9. '(' → logprob: -10.628098487854004
    10. '<|end|>' → logprob: -12.003098487854004

Token 131: ' return' (ID: 622)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0003309361054562032
    2. ' None' → logprob: -8.500330924987793
    3. 'return' (adapté à ' return') → logprob: -9.250330924987793
    4. '(None' → logprob: -10.875330924987793
    5. '   ' → logprob: -11.625330924987793
    6. 'No' → logprob: -14.375330924987793
    7. 'N' → logprob: -14.500330924987793
    8. '    
' → logprob: -14.750330924987793
    9. ' return' → logprob: -14.875330924987793
    10. '```' → logprob: -15.375330924987793

Token 132: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.2519661486148834
    2. 'None' → logprob: -1.501966118812561
    3. '(None' → logprob: -10.25196647644043
    4. '_None' → logprob: -13.87696647644043
    5. ',None' → logprob: -15.25196647644043
    6. ' (' → logprob: -15.87696647644043
    7. ' ' → logprob: -16.25196647644043
    8. ' ' → logprob: -16.62696647644043
    9. '<|end|>' → logprob: -16.87696647644043
    10. '.None' → logprob: -17.00196647644043

Token 133: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 134: 'while' (ID: 7032)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.0815805196762085
    2. '<|end|>' → logprob: -3.706580638885498
    3. '(' → logprob: -3.956580638885498
    4. 'print' → logprob: -4.081580638885498
    5. 'n' → logprob: -5.081580638885498
    6. '```' → logprob: -5.706580638885498
    7. 'def' → logprob: -6.081580638885498
    8. '(n' → logprob: -6.831580638885498
    9. '\n' → logprob: -6.831580638885498
    10. ')' → logprob: -7.081580638885498

Token 135: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -1.2113979209971149e-05
    2. 'True' → logprob: -11.375012397766113
    3. ' ' → logprob: -14.375012397766113
    4. ' n' → logprob: -17.000011444091797
    5. '(True' → logprob: -17.500011444091797
    6. ' Tru' → logprob: -18.375011444091797
    7. '=True' → logprob: -19.125011444091797
    8. ' input' → logprob: -20.375011444091797
    9. '  ' → logprob: -21.125011444091797
    10. ' T' → logprob: -21.750011444091797

Token 136: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00046749215107411146
    2. '():' → logprob: -8.250467300415039
    3. ' :' → logprob: -8.750467300415039
    4. ',' → logprob: -10.500467300415039
    5. ':**' → logprob: -12.000467300415039
    6. ':
' → logprob: -12.125467300415039
    7. '(' → logprob: -12.750467300415039
    8. '):' → logprob: -13.000467300415039
    9. '(":' → logprob: -14.250467300415039
    10. ':def' → logprob: -14.625467300415039

Token 137: '   ' (ID: 271)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.40067389607429504
    2. 'n' → logprob: -1.6506738662719727
    3. '   ' → logprob: -2.4006738662719727
    4. ' input' → logprob: -3.5256738662719727
    5. ' try' → logprob: -4.900673866271973
    6. ' user' → logprob: -5.400673866271973
    7. ' ,' → logprob: -6.775673866271973
    8. 'input' → logprob: -6.775673866271973
    9. ' inp' → logprob: -7.150673866271973
    10. ' i' → logprob: -7.400673866271973

Token 138: ' n' (ID: 297)
  Prédit: ' try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' try' → logprob: -0.826505720615387
    2. 'n' (adapté à ' n') → logprob: -1.4515056610107422
    3. 'try' → logprob: -1.7015056610107422
    4. ' n' → logprob: -2.451505661010742
    5. ' user' → logprob: -3.201505661010742
    6. 'user' → logprob: -4.326505661010742
    7. ' inp' → logprob: -5.576505661010742
    8. '   ' → logprob: -7.326505661010742
    9. 'inp' → logprob: -8.076505661010742
    10. 'num' → logprob: -8.701505661010742

Token 139: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005241821985691786
    2. '=' → logprob: -5.255241870880127
    3. ' ' → logprob: -12.130241394042969
    4. '=int' → logprob: -13.505241394042969
    5. '=input' → logprob: -14.130241394042969
    6. '  ' → logprob: -15.380241394042969
    7. ' =
' → logprob: -16.13024139404297
    8. '_input' → logprob: -16.63024139404297
    9. '_' → logprob: -17.38024139404297
    10. '.' → logprob: -17.75524139404297

Token 140: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.3870800733566284
    2. 'int' → logprob: -1.1370800733566284
    3. ' input' → logprob: -8.762080192565918
    4. 'input' → logprob: -9.887080192565918
    5. ' ' → logprob: -13.887080192565918
    6. '=int' → logprob: -14.637080192565918
    7. '<int' → logprob: -16.1370792388916
    8. '	int' → logprob: -16.7620792388916
    9. '[int' → logprob: -17.0120792388916
    10. ' 
' → logprob: -17.1370792388916

Token 141: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.003178306156769395
    2. '(' → logprob: -5.753178119659424
    3. 'input' → logprob: -14.503178596496582
    4. '=input' → logprob: -17.253177642822266
    5. '(
' → logprob: -17.628177642822266
    6. ' input' → logprob: -18.003177642822266
    7. ' (' → logprob: -18.503177642822266
    8. '()' → logprob: -19.128177642822266
    9. '(

' → logprob: -19.128177642822266
    10. '(in' → logprob: -19.253177642822266

Token 142: '())
' (ID: 4574)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.10167158395051956
    2. '("' → logprob: -2.9766716957092285
    3. '())' → logprob: -3.6016716957092285
    4. '(' → logprob: -4.7266716957092285
    5. '(">' → logprob: -5.3516716957092285
    6. '('' → logprob: -6.6016716957092285
    7. '()>' → logprob: -6.7266716957092285
    8. '("("' → logprob: -6.9766716957092285
    9. '("")' → logprob: -7.3516716957092285
    10. '(""))' → logprob: -7.7266716957092285

Token 143: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.12634612619876862
    2. '   ' → logprob: -2.8763461112976074
    3. ' ' → logprob: -3.1263461112976074
    4. 'if' → logprob: -4.501346111297607
    5. '<|end|>' → logprob: -6.001346111297607
    6. ' 
' → logprob: -6.501346111297607
    7. ',' → logprob: -7.001346111297607
    8. '    ' → logprob: -7.001346111297607
    9. ')' → logprob: -8.001346588134766
    10. '    
' → logprob: -8.501346588134766

Token 144: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.16031034290790558
    2. 'if' (adapté à ' if') → logprob: -1.9103103876113892
    3. '   ' → logprob: -9.410310745239258
    4. ',' → logprob: -14.285310745239258
    5. ' ' → logprob: -14.285310745239258
    6. '<|end|>' → logprob: -14.410310745239258
    7. '	if' → logprob: -14.660310745239258
    8. '    ' → logprob: -14.910310745239258
    9. 'result' → logprob: -15.160310745239258
    10. 'If' → logprob: -15.410310745239258

Token 145: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.008690676651895046
    2. 'n' → logprob: -4.75869083404541
    3. ' not' → logprob: -9.50869083404541
    4. ' ' → logprob: -14.00869083404541
    5. '	n' → logprob: -14.38369083404541
    6. ' ' → logprob: -15.00869083404541
    7. 'not' → logprob: -15.88369083404541
    8. '   ' → logprob: -17.758689880371094
    9. '  ' → logprob: -17.883689880371094
    10. ')n' → logprob: -18.133689880371094

Token 146: ' ==' (ID: 951)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.3723418712615967
    2. '==' → logprob: -1.7473418712615967
    3. ' <=' → logprob: -2.3723418712615967
    4. ' ==' → logprob: -3.6223418712615967
    5. '<' → logprob: -4.247342109680176
    6. ' <' → logprob: -6.122342109680176
    7. '==-' → logprob: -9.372342109680176
    8. ' ' → logprob: -10.247342109680176
    9. '=' → logprob: -10.997342109680176
    10. '%' → logprob: -12.247342109680176

Token 147: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.055042508989572525
    2. ' ' → logprob: -2.9300425052642822
    3. '-' → logprob: -8.930042266845703
    4. ' -' → logprob: -10.555042266845703
    5. '  ' → logprob: -14.180042266845703
    6. '   ' → logprob: -14.680042266845703
    7. '```' → logprob: -15.617542266845703
    8. '42' → logprob: -15.930042266845703
    9. '    ' → logprob: -16.305042266845703
    10. '1' → logprob: -17.305042266845703

Token 148: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005645881756208837
    2. '-' → logprob: -7.6255645751953125
    3. ' ' → logprob: -9.625564575195312
    4. ' -' → logprob: -12.125564575195312
    5. '42' → logprob: -13.125564575195312
    6. '1' → logprob: -14.375564575195312
    7. '   ' → logprob: -14.813064575195312
    8. '```' → logprob: -14.938064575195312
    9. '_' → logprob: -15.500564575195312
    10. '00' → logprob: -15.625564575195312

Token 149: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014173151925206184
    2. ':
' → logprob: -4.2641730308532715
    3. ' :' → logprob: -11.76417350769043
    4. '   ' → logprob: -13.51417350769043
    5. ' :
' → logprob: -15.13917350769043
    6. ':
' → logprob: -16.26417350769043
    7. ':return' → logprob: -16.76417350769043
    8. ':

' → logprob: -17.13917350769043
    9. ',' → logprob: -18.51417350769043
    10. '       ' → logprob: -18.76417350769043

Token 150: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0313272587954998
    2. '   ' → logprob: -3.781327247619629
    3. ':
' → logprob: -4.906327247619629
    4. '       ' → logprob: -7.406327247619629
    5. ' :' → logprob: -10.906327247619629
    6. '    ' → logprob: -11.656327247619629
    7. ' break' → logprob: -12.406327247619629
    8. ' :
' → logprob: -12.906327247619629
    9. '	break' → logprob: -13.031327247619629
    10. '.' → logprob: -13.156327247619629

Token 151: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.004954916425049305
    2. '   ' → logprob: -6.004954814910889
    3. 'break' (adapté à ' break') → logprob: -6.129954814910889
    4. '	break' → logprob: -8.254955291748047
    5. '       ' → logprob: -10.379955291748047
    6. '    ' → logprob: -13.129955291748047
    7. ' ' → logprob: -13.254955291748047
    8. '_break' → logprob: -13.504955291748047
    9. 'b' → logprob: -14.254955291748047
    10. ' ' → logprob: -14.504955291748047

Token 152: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005101645365357399
    2. '    
' → logprob: -5.380101680755615
    3. '
' → logprob: -7.755101680755615
    4. 'print' → logprob: -11.130101203918457
    5. 'n' → logprob: -11.755101203918457
    6. '  
' → logprob: -11.755101203918457
    7. '   
' → logprob: -12.255101203918457
    8. ' 
' → logprob: -12.630101203918457
    9. '<|end|>' → logprob: -12.630101203918457
    10. ' print' → logprob: -13.380101203918457

Token 153: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004527673125267029
    2. '    
' → logprob: -5.504527568817139
    3. '
' → logprob: -8.004528045654297
    4. 'print' → logprob: -9.754528045654297
    5. 'n' → logprob: -11.379528045654297
    6. '   
' → logprob: -11.754528045654297
    7. '  
' → logprob: -11.754528045654297
    8. '```' → logprob: -12.254528045654297
    9. ' 
' → logprob: -12.504528045654297
    10. ' if' → logprob: -12.629528045654297

Token 154: ' p' (ID: 275)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.5179556012153625
    2. 'result' → logprob: -1.3929555416107178
    3. '   ' → logprob: -2.0179555416107178
    4. 'res' → logprob: -5.017955780029297
    5. ' res' → logprob: -5.142955780029297
    6. ' r' → logprob: -5.517955780029297
    7. 't' → logprob: -6.267955780029297
    8. 'r' → logprob: -6.517955780029297
    9. '    
' → logprob: -6.517955780029297
    10. ' 
' → logprob: -8.517955780029297

Token 155: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006806228775531054
    2. ',q' → logprob: -7.375680446624756
    3. ' ,' → logprob: -10.375680923461914
    4. ',p' → logprob: -11.875680923461914
    5. 'r' → logprob: -12.000680923461914
    6. ',r' → logprob: -13.125680923461914
    7. ',a' → logprob: -14.125680923461914
    8. '<|end|>' → logprob: -14.125680923461914
    9. ',n' → logprob: -14.250680923461914
    10. ',t' → logprob: -14.375680923461914

Token 156: ' q' (ID: 2335)
  Prédit: ' q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.5759453177452087
    2. 'q' → logprob: -0.8259453177452087
    3. '<|end|>' → logprob: -12.200944900512695
    4. '	q' → logprob: -14.950944900512695
    5. ' ' → logprob: -15.200944900512695
    6. ',q' → logprob: -16.575944900512695
    7. '    ' → logprob: -16.700944900512695
    8. ' ' → logprob: -17.075944900512695
    9. ' n' → logprob: -17.700944900512695
    10. 'n' → logprob: -17.700944900512695

Token 157: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06993988156318665
    2. '=' → logprob: -2.6949398517608643
    3. ',' → logprob: -13.569939613342285
    4. '<|end|>' → logprob: -13.694939613342285
    5. ')' → logprob: -14.194939613342285
    6. ' ' → logprob: -15.444939613342285
    7. ' =)' → logprob: -16.1949405670166
    8. '   ' → logprob: -17.0699405670166
    9. '    ' → logprob: -17.3199405670166
    10. ' =
' → logprob: -17.4449405670166

Token 158: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.25192973017692566
    2. 'max' → logprob: -1.501929759979248
    3. '(max' → logprob: -15.12692928314209
    4. '	max' → logprob: -16.126930236816406
    5. ' ' → logprob: -16.501930236816406
    6. '_max' → logprob: -16.876930236816406
    7. '   ' → logprob: -16.876930236816406
    8. '[max' → logprob: -17.001930236816406
    9. ' ' → logprob: -17.501930236816406
    10. ',max' → logprob: -17.751930236816406

Token 159: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.00026288547087460756
    2. '_' → logprob: -8.250263214111328
    3. ' _' → logprob: -13.625263214111328
    4. '_tw' → logprob: -16.375263214111328
    5. 't' → logprob: -16.750263214111328
    6. ')_' → logprob: -17.250263214111328
    7. '__' → logprob: -17.500263214111328
    8. '(' → logprob: -17.500263214111328
    9. ''_' → logprob: -18.125263214111328
    10. '_p' → logprob: -18.250263214111328

Token 160: 'win' (ID: 11668)
  Prédit: 'win'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'win' → logprob: -0.02124948985874653
    2. 'w' → logprob: -4.021249294281006
    3. 'in' → logprob: -6.521249294281006
    4. 'wi' → logprob: -7.521249294281006
    5. '_' → logprob: -7.646249294281006
    6. '_win' → logprob: -8.771249771118164
    7. '_w' → logprob: -8.896249771118164
    8. 'i' → logprob: -10.521249771118164
    9. 'wn' → logprob: -10.521249771118164
    10. '   ' → logprob: -11.021249771118164

Token 161: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.008741151541471481
    2. '_' → logprob: -4.75874137878418
    3. ' _' → logprob: -9.63374137878418
    4. '_p' → logprob: -10.75874137878418
    5. '_pr' → logprob: -11.00874137878418
    6. 'prime' → logprob: -11.63374137878418
    7. '_pi' → logprob: -12.38374137878418
    8. ''_' → logprob: -12.63374137878418
    9. '_t' → logprob: -13.75874137878418
    10. ' prime' → logprob: -13.88374137878418

Token 162: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.002479700604453683
    2. '(' → logprob: -6.002479553222656
    3. ' (' → logprob: -12.502479553222656
    4. '(
' → logprob: -15.627479553222656
    5. '((' → logprob: -15.627479553222656
    6. '(p' → logprob: -17.627479553222656
    7. '(q' → logprob: -17.877479553222656
    8. '(num' → logprob: -18.252479553222656
    9. '(

' → logprob: -18.252479553222656
    10. 'n' → logprob: -19.002479553222656

Token 163: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018205778673291206
    2. ')
' → logprob: -4.018205642700195
    3. ')
' → logprob: -9.893205642700195
    4. ')

' → logprob: -12.643205642700195
    5. ' )' → logprob: -14.268205642700195
    6. ')`' → logprob: -15.018205642700195
    7. '   ' → logprob: -15.143205642700195
    8. '))' → logprob: -15.268205642700195
    9. ')`
' → logprob: -16.018205642700195
    10. ')n' → logprob: -16.643205642700195

Token 164: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016913694562390447
    2. 'print' → logprob: -6.8766913414001465
    3. ' print' → logprob: -7.3766913414001465
    4. '
' → logprob: -10.751691818237305
    5. '```' → logprob: -12.376691818237305
    6. '    
' → logprob: -12.876691818237305
    7. ',' → logprob: -13.001691818237305
    8. ' if' → logprob: -14.376691818237305
    9. '	print' → logprob: -15.251691818237305
    10. ')' → logprob: -15.251691818237305

Token 165: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00027492138906382024
    2. 'if' → logprob: -8.750274658203125
    3. ' print' → logprob: -9.500274658203125
    4. '   ' → logprob: -10.125274658203125
    5. ' if' → logprob: -13.500274658203125
    6. 'printf' → logprob: -17.000274658203125
    7. '```' → logprob: -17.250274658203125
    8. '    
' → logprob: -17.500274658203125
    9. 'pr' → logprob: -18.000274658203125
    10. '	print' → logprob: -19.000274658203125

Token 166: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.2776510715484619
    2. '(f' → logprob: -1.527651071548462
    3. '(' → logprob: -3.777651071548462
    4. '((' → logprob: -6.027650833129883
    5. '(q' → logprob: -9.402650833129883
    6. '('' → logprob: -11.902650833129883
    7. '("("' → logprob: -11.902650833129883
    8. '("' → logprob: -12.402650833129883
    9. 'f' → logprob: -12.527650833129883
    10. ' (' → logprob: -13.902650833129883

Token 167: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1272919625043869
    2. ',q' → logprob: -2.1272919178009033
    3. ' ,' → logprob: -8.127291679382324
    4. ',p' → logprob: -9.752291679382324
    5. ',end' → logprob: -13.002291679382324
    6. ',n' → logprob: -13.002291679382324
    7. ',f' → logprob: -13.502291679382324
    8. ',
' → logprob: -13.752291679382324
    9. ',Q' → logprob: -14.002291679382324
    10. ',",' → logprob: -15.002291679382324

Token 168: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.011048054322600365
    2. ' q' → logprob: -4.511047840118408
    3. '    ' → logprob: -16.38604736328125
    4. '   ' → logprob: -16.63604736328125
    5. ' ' → logprob: -16.63604736328125
    6. '  ' → logprob: -18.13604736328125
    7. ''q' → logprob: -18.38604736328125
    8. '	q' → logprob: -18.51104736328125
    9. ')' → logprob: -18.88604736328125
    10. ',q' → logprob: -19.51104736328125

Token 169: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ' )' → logprob: -15.500000953674316
    3. '))' → logprob: -16.0
    4. ')
' → logprob: -16.375
    5. ')`' → logprob: -16.625
    6. ')}' → logprob: -17.625
    7. '')' → logprob: -18.25
    8. '`)' → logprob: -19.5
    9. '")' → logprob: -19.5
    10. ')**' → logprob: -19.625


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 167
Tokens correctement prédits (1ère position, stricte): 90
Tokens correctement prédits (1ère position, avec adaptation): 94
Tokens correctement prédits (top 10): 150
Précision stricte (1ère position): 53.89%
Précision adaptée (1ère position): 56.29%
Précision (top 10): 89.82%
================================================================================
