================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 16:57:25
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
total = sum(int(input()) for _ in range(10))
print(total)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'total' (ID: 9577)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' sum' (ID: 4215)
  → Token d'amorce (pas de prédiction)

Token 3: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0009707756689749658
    2. '(total' → logprob: -7.750970840454102
    3. '_' → logprob: -8.375970840454102
    4. '(
' → logprob: -9.125970840454102
    5. ')' → logprob: -10.250970840454102
    6. '_total' → logprob: -10.250970840454102
    7. '```' → logprob: -10.375970840454102
    8. ' (' → logprob: -10.625970840454102
    9. '(

' → logprob: -11.750970840454102
    10. '[' → logprob: -11.875970840454102

Token 4: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.012772619724273682
    2. '(x' → logprob: -5.512772560119629
    3. '(number' → logprob: -6.012772560119629
    4. '(s' → logprob: -6.387772560119629
    5. '(i' → logprob: -6.887772560119629
    6. '(num' → logprob: -7.012772560119629
    7. '(a' → logprob: -8.012772560119629
    8. '(item' → logprob: -8.262772560119629
    9. '(value' → logprob: -8.262772560119629
    10. ')' → logprob: -8.512772560119629

Token 5: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.8850022554397583
    2. '(' → logprob: -1.3850022554397583
    3. '()))' → logprob: -1.5100022554397583
    4. '('' → logprob: -2.5100021362304688
    5. '()' → logprob: -3.6350021362304688
    6. '))' → logprob: -6.260002136230469
    7. '(()' → logprob: -6.385002136230469
    8. ')' → logprob: -6.760002136230469
    9. '("("' → logprob: -7.260002136230469
    10. '```' → logprob: -7.385002136230469

Token 6: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006360700353980064
    2. '))' → logprob: -7.500636100769043
    3. '`)' → logprob: -10.125636100769043
    4. '[' → logprob: -11.375636100769043
    5. '')' → logprob: -11.750636100769043
    6. ' )' → logprob: -12.000636100769043
    7. '())' → logprob: -12.250636100769043
    8. ')`' → logprob: -12.625636100769043
    9. ')))' → logprob: -13.500636100769043
    10. '()' → logprob: -13.500636100769043

Token 7: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.22864007949829102
    2. '_' → logprob: -2.103640079498291
    3. ' ' → logprob: -2.853640079498291
    4. ' i' → logprob: -4.228640079498291
    5. ' range' → logprob: -4.603640079498291
    6. 'range' → logprob: -10.103639602661133
    7. ' ' → logprob: -10.603639602661133
    8. '_range' → logprob: -10.603639602661133
    9. '  ' → logprob: -10.728639602661133
    10. ' ▁' → logprob: -11.603639602661133

Token 8: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07923422753810883
    2. 'in' → logprob: -2.5792341232299805
    3. '_' → logprob: -8.57923412322998
    4. ' ' → logprob: -9.45423412322998
    5. '<|end|>' → logprob: -10.70423412322998
    6. 'range' → logprob: -11.45423412322998
    7. '	in' → logprob: -11.70423412322998
    8. 'import' → logprob: -11.70423412322998
    9. '  ' → logprob: -12.07923412322998
    10. ' _' → logprob: -12.20423412322998

Token 9: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.575944721698761
    2. ' range' → logprob: -0.825944721698761
    3. '_range' → logprob: -13.200944900512695
    4. '	range' → logprob: -13.575944900512695
    5. '_' → logprob: -14.075944900512695
    6. ' ' → logprob: -14.950944900512695
    7. ' xrange' → logprob: -14.950944900512695
    8. '(range' → logprob: -15.325944900512695
    9. 'rang' → logprob: -16.200944900512695
    10. 'ranges' → logprob: -16.700944900512695

Token 10: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004724987084046006
    2. '10' → logprob: -8.500472068786621
    3. '3' → logprob: -9.500472068786621
    4. '4' → logprob: -9.875472068786621
    5. '5' → logprob: -10.000472068786621
    6. '7' → logprob: -10.625472068786621
    7. ')' → logprob: -10.875472068786621
    8. '6' → logprob: -11.375472068786621
    9. '9' → logprob: -11.750472068786621
    10. '```' → logprob: -11.750472068786621

Token 11: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.6838917136192322
    2. '5' → logprob: -0.8088917136192322
    3. '3' → logprob: -3.058891773223877
    4. '7' → logprob: -7.058891773223877
    5. '6' → logprob: -7.433891773223877
    6. '4' → logprob: -7.683891773223877
    7. '1' → logprob: -7.933891773223877
    8. ' ' → logprob: -8.058891296386719
    9. 'int' → logprob: -8.558891296386719
    10. '100' → logprob: -9.433891296386719

Token 12: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10021217912435532
    2. '))' → logprob: -2.3502120971679688
    3. ')))' → logprob: -13.100212097167969
    4. ')
' → logprob: -13.725212097167969
    5. '),' → logprob: -14.600212097167969
    6. ' )' → logprob: -15.100212097167969
    7. '):' → logprob: -16.10021209716797
    8. ').' → logprob: -16.22521209716797
    9. '`)' → logprob: -16.22521209716797
    10. ' ' → logprob: -16.47521209716797

Token 13: 'print' (ID: 1598)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.44865190982818604
    2. ')' → logprob: -1.573651909828186
    3. '*' → logprob: -3.3236517906188965
    4. ' ' → logprob: -3.5736517906188965
    5. '%' → logprob: -3.6986517906188965
    6. '```' → logprob: -4.1986517906188965
    7. '#' → logprob: -4.3236517906188965
    8. '(' → logprob: -4.9486517906188965
    9. '
' → logprob: -5.0736517906188965
    10. '**' → logprob: -5.4486517906188965

Token 14: '(total' (ID: 39744)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002843510126695037
    2. '(total' → logprob: -5.877843379974365
    3. '("("' → logprob: -11.002843856811523
    4. '('' → logprob: -11.127843856811523
    5. '((' → logprob: -13.877843856811523
    6. '(
' → logprob: -13.877843856811523
    7. '(`' → logprob: -14.002843856811523
    8. ' (' → logprob: -14.002843856811523
    9. '()' → logprob: -14.252843856811523
    10. '(

' → logprob: -14.502843856811523

Token 15: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011722482740879059
    2. '))' → logprob: -6.751172065734863
    3. ' )' → logprob: -13.751172065734863
    4. ')))' → logprob: -14.751172065734863
    5. '`)' → logprob: -15.376172065734863
    6. ')`' → logprob: -16.00117301940918
    7. '()' → logprob: -16.75117301940918
    8. '())' → logprob: -17.12617301940918
    9. '')' → logprob: -17.25117301940918
    10. ')}' → logprob: -17.75117301940918


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 13
Tokens correctement prédits (1ère position, stricte): 6
Tokens correctement prédits (1ère position, avec adaptation): 6
Tokens correctement prédits (top 10): 8
Précision stricte (1ère position): 46.15%
Précision adaptée (1ère position): 46.15%
Précision (top 10): 61.54%
================================================================================
