================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:02:51
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from typing import List, Tuple, Set, Optional

class Stone:
    def __init__(self, digit: int):
        self.digit = digit
        self.disappeared = False

    def __repr__(self):
        return f"{self.digit if not self.disappeared else '.'}"

class Board:
    WIDTH = 5

    def __init__(self, rows: List[List[int]]):
        # board as H rows x WIDTH cols, top row is rows[0]
        self.height = len(rows)
        self.grid: List[List[Optional[Stone]]] = [
            [Stone(d) for d in row] for row in rows
        ]
        self.score = 0

    def _find_chains_to_disappear(self) -> Set[Tuple[int,int]]:
        to_disappear = set()
        for r in range(self.height):
            c = 0
            while c < Board.WIDTH:
                cur_stone = self.grid[r][c]
                if cur_stone is None or cur_stone.disappeared:
                    c += 1
                    continue
                digit = cur_stone.digit
                start = c
                while c < Board.WIDTH and self.grid[r][c] is not None and not self.grid[r][c].disappeared and self.grid[r][c].digit == digit:
                    c += 1
                length = c - start
                if length >= 3:
                    for cc in range(start, c):
                        to_disappear.add((r, cc))
                # If length < 3, we already moved c forward, so continue without incrementing c again.
        return to_disappear

    def _disappear_stones(self, positions: Set[Tuple[int,int]]) -> int:
        disappeared_score = 0
        for r,c in positions:
            stone = self.grid[r][c]
            if stone is not None and not stone.disappeared:
                stone.disappeared = True
                disappeared_score += stone.digit
        return disappeared_score

    def _drop_stones(self):
        # For each column, simulate gravity: stones fall down to fill disappeared stones
        for c in range(Board.WIDTH):
            stack = []
            # Collect stones that have not disappeared
            for r in range(self.height-1, -1, -1):
                stone = self.grid[r][c]
                if stone is not None and not stone.disappeared:
                    stack.append(stone)
            # Fill from bottom up with stones in stack, fill remainder with None
            for r in range(self.height-1, -1, -1):
                if stack:
                    self.grid[r][c] = stack.pop(0)
                else:
                    self.grid[r][c] = None

    def step(self) -> bool:
        """
        Perform one full step:
        - find all horizontal chains of 3+ same digit stones
        - disappear them simultaneously
        - drop stones above disappeared stones
        Return True if any stones disappeared, False otherwise.
        """
        chains = self._find_chains_to_disappear()
        if not chains:
            return False
        gained = self._disappear_stones(chains)
        self.score += gained
        self._drop_stones()
        return True

    def solve(self) -> int:
        """
        Solve the puzzle by repeating steps until no more disappearances occur.
        Return the total score of disappeared stones.
        """
        while self.step():
            pass
        return self.score

class PuzzleParser:
    def __init__(self):
        self.datasets = []

    def parse_input(self, lines: List[str]):
        idx = 0
        while idx < len(lines):
            h_line = lines[idx].strip()
            idx += 1
            if h_line == "0":
                break
            h = int(h_line)
            rows = []
            for _ in range(h):
                row_str = lines[idx].strip()
                idx += 1
                nums = list(map(int, row_str.split()))
                rows.append(nums)
            self.datasets.append(rows)

class PuzzleSolver:
    def __init__(self, datasets: List[List[List[int]]]):
        self.datasets = datasets

    def run(self) -> List[int]:
        results = []
        for data in self.datasets:
            board = Board(data)
            score = board.solve()
            results.append(score)
        return results

def main():
    import sys
    input_lines = sys.stdin.read().strip().split('\n')
    parser = PuzzleParser()
    parser.parse_input(input_lines)
    solver = PuzzleSolver(parser.datasets)
    results = solver.run()
    for res in results:
        print(res)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' typing' (ID: 34152)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' List' (ID: 2655)
  Prédit: ' List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.01398320309817791
    2. ' Any' → logprob: -5.013983249664307
    3. 'List' → logprob: -5.388983249664307
    4. ' Optional' → logprob: -6.513983249664307
    5. ' Union' → logprob: -7.638983249664307
    6. 'Any' → logprob: -7.763983249664307
    7. ' Generator' → logprob: -8.763982772827148
    8. 'Optional' → logprob: -10.388982772827148
    9. ' Iterable' → logprob: -10.513982772827148
    10. ' ' → logprob: -10.888982772827148

Token 4: ',' (ID: 11)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.12612517178058624
    2. 'def' → logprob: -2.8761250972747803
    3. '<|end|>' → logprob: -4.626125335693359
    4. '[' → logprob: -4.751125335693359
    5. '\n' → logprob: -5.126125335693359
    6. '
' → logprob: -5.251125335693359
    7. '\' → logprob: -5.376125335693359
    8. '`' → logprob: -5.501125335693359
    9. ',' → logprob: -5.626125335693359
    10. 'import' → logprob: -5.751125335693359

Token 5: ' Tuple' (ID: 50841)
  Prédit: ' Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Optional' → logprob: -0.40772536396980286
    2. 'Optional' → logprob: -1.1577253341674805
    3. ' Dict' → logprob: -4.7827253341674805
    4. 'Dict' → logprob: -4.9077253341674805
    5. 'Tuple' → logprob: -5.7827253341674805
    6. ' Tuple' → logprob: -7.0327253341674805
    7. ' Union' → logprob: -7.4077253341674805
    8. 'Union' → logprob: -9.28272533416748
    9. 'Iterable' → logprob: -10.03272533416748
    10. 'Any' → logprob: -10.53272533416748

Token 6: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.245615616440773
    2. '```' → logprob: -2.1206157207489014
    3. 'import' → logprob: -3.8706157207489014
    4. ',' → logprob: -3.8706157207489014
    5. '\n' → logprob: -3.9956157207489014
    6. '\' → logprob: -4.995615482330322
    7. '
' → logprob: -5.245615482330322
    8. '

' → logprob: -5.245615482330322
    9. '[' → logprob: -5.745615482330322
    10. ':' → logprob: -5.870615482330322

Token 7: ' Set' (ID: 3957)
  Prédit: ' Dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Dict' → logprob: -0.2937392294406891
    2. 'Dict' → logprob: -1.6687391996383667
    3. ' Union' → logprob: -3.6687393188476562
    4. ' Optional' → logprob: -4.043739318847656
    5. 'Optional' → logprob: -4.793739318847656
    6. 'Union' → logprob: -5.418739318847656
    7. ' Callable' → logprob: -5.668739318847656
    8. 'Iterable' → logprob: -6.418739318847656
    9. 'Set' → logprob: -7.043739318847656
    10. 'Any' → logprob: -7.168739318847656

Token 8: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8942596316337585
    2. '```' → logprob: -1.3942596912384033
    3. 'def' → logprob: -2.1442596912384033
    4. '[' → logprob: -2.3942596912384033
    5. ':' → logprob: -3.1442596912384033
    6. '(' → logprob: -3.6442596912384033
    7. '\n' → logprob: -3.8942596912384033
    8. 'import' → logprob: -4.269259452819824
    9. '\' → logprob: -4.394259452819824
    10. '.' → logprob: -5.394259452819824

Token 9: ' Optional' (ID: 19351)
  Prédit: ' Dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Dict' → logprob: -0.42935711145401
    2. 'Dict' → logprob: -1.0543570518493652
    3. ' defaultdict' → logprob: -8.929357528686523
    4. 'Optional' → logprob: -9.429357528686523
    5. 'Iterable' → logprob: -9.804357528686523
    6. ' Optional' → logprob: -9.929357528686523
    7. 'Default' → logprob: -10.054357528686523
    8. 'dict' → logprob: -10.054357528686523
    9. '.Dict' → logprob: -10.304357528686523
    10. 'Deque' → logprob: -10.429357528686523

Token 10: '

' (ID: 279)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.167685866355896
    2. 'def' → logprob: -1.292685866355896
    3. ',' → logprob: -1.792685866355896
    4. 'import' → logprob: -2.2926859855651855
    5. '(' → logprob: -3.5426859855651855
    6. ':' → logprob: -3.6676859855651855
    7. '<|end|>' → logprob: -3.6676859855651855
    8. '[' → logprob: -3.7926859855651855
    9. '\' → logprob: -4.7926859855651855
    10. '`' → logprob: -5.0426859855651855

Token 11: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10354358702898026
    2. 'd' → logprob: -3.603543519973755
    3. '```' → logprob: -3.978543519973755
    4. 'class' → logprob: -4.103543758392334
    5. 'import' → logprob: -4.353543758392334
    6. 'from' → logprob: -4.728543758392334
    7. 'D' → logprob: -5.353543758392334
    8. 'a' → logprob: -5.853543758392334
    9. '
' → logprob: -6.728543758392334
    10. ' 
' → logprob: -7.103543758392334

Token 12: ' Stone' (ID: 22850)
  Prédit: ' My'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' My' → logprob: -0.03896557167172432
    2. ' Data' → logprob: -4.163965702056885
    3. ' ' → logprob: -4.538965702056885
    4. ' User' → logprob: -5.538965702056885
    5. ' Space' → logprob: -6.413965702056885
    6. ' Sample' → logprob: -7.038965702056885
    7. ' Parser' → logprob: -7.288965702056885
    8. ' Solution' → logprob: -7.538965702056885
    9. ' Example' → logprob: -7.538965702056885
    10. ' Vector' → logprob: -7.663965702056885

Token 13: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016194256022572517
    2. '(' → logprob: -4.1411943435668945
    3. '():' → logprob: -9.891194343566895
    4. '):' → logprob: -10.391194343566895
    5. ':
' → logprob: -11.141194343566895
    6. ':**' → logprob: -11.266194343566895
    7. '```' → logprob: -11.766194343566895
    8. 's' → logprob: -11.766194343566895
    9. ' :' → logprob: -12.141194343566895
    10. ''s' → logprob: -12.391194343566895

Token 14: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14382435381412506
    2. '   ' → logprob: -2.143824338912964
    3. '(' → logprob: -4.393824577331543
    4. '<|end|>' → logprob: -6.893824577331543
    5. '):' → logprob: -7.143824577331543
    6. '```' → logprob: -7.518824577331543
    7. '():' → logprob: -7.643824577331543
    8. ' :' → logprob: -8.268824577331543
    9. ' ' → logprob: -8.268824577331543
    10. '(object' → logprob: -8.393824577331543

Token 15: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.6130881905555725
    2. '   ' → logprob: -0.9880881905555725
    3. 'def' (adapté à ' def') → logprob: -2.9880881309509277
    4. 'class' → logprob: -3.9880881309509277
    5. '```' → logprob: -4.863088130950928
    6. ' pass' → logprob: -5.363088130950928
    7. ' ' → logprob: -7.113088130950928
    8. ' class' → logprob: -7.113088130950928
    9. ' ```' → logprob: -7.238088130950928
    10. '    ' → logprob: -7.363088130950928

Token 16: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.00297354138456285
    2. ' init' → logprob: -6.502973556518555
    3. 'itialize' → logprob: -7.002973556518555
    4. ' _' → logprob: -8.377973556518555
    5. ' def' → logprob: -9.252973556518555
    6. ' ' → logprob: -9.627973556518555
    7. '__' → logprob: -10.127973556518555
    8. ' ine' → logprob: -11.252973556518555
    9. 'ine' → logprob: -11.502973556518555
    10. ' ' → logprob: -11.752973556518555

Token 17: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. 'ini' → logprob: -17.75
    3. ' init' → logprob: -17.875
    4. '_init' → logprob: -19.375
    5. 'inite' → logprob: -19.625
    6. 'in' → logprob: -20.5
    7. '	init' → logprob: -21.0
    8. 'int' → logprob: -21.125
    9. 'new' → logprob: -22.0
    10. 'innit' → logprob: -22.0

Token 18: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.04550294950604439
    2. '__' → logprob: -3.1705029010772705
    3. '__(
' → logprob: -6.42050313949585
    4. '(' → logprob: -7.79550313949585
    5. '__((' → logprob: -8.295502662658691
    6. '__('' → logprob: -9.545502662658691
    7. '(self' → logprob: -9.920502662658691
    8. '__(*' → logprob: -10.420502662658691
    9. ' (' → logprob: -11.295502662658691
    10. '__("' → logprob: -11.420502662658691

Token 19: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.001503313542343676
    2. ' self' → logprob: -6.5015034675598145
    3. ')' → logprob: -14.751502990722656
    4. '(self' → logprob: -15.501502990722656
    5. '	self' → logprob: -16.001502990722656
    6. ' ' → logprob: -17.001502990722656
    7. '       ' → logprob: -17.251502990722656
    8. '   ' → logprob: -17.251502990722656
    9. '_self' → logprob: -17.251502990722656
    10. 's' → logprob: -17.501502990722656

Token 20: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11214691400527954
    2. 'self' → logprob: -2.7371468544006348
    3. ' ,' → logprob: -3.7371468544006348
    4. ')' → logprob: -4.487146854400635
    5. ' self' → logprob: -6.362146854400635
    6. '<|end|>' → logprob: -6.362146854400635
    7. ' )' → logprob: -6.987146854400635
    8. '(self' → logprob: -7.237146854400635
    9. '_self' → logprob: -8.237147331237793
    10. ',self' → logprob: -8.362147331237793

Token 21: ' digit' (ID: 19181)
  Prédit: ' color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' color' → logprob: -0.5000838041305542
    2. ' self' → logprob: -1.2500838041305542
    3. 'self' → logprob: -2.7500839233398438
    4. 'color' → logprob: -3.8750839233398438
    5. ' position' → logprob: -4.625083923339844
    6. ' x' → logprob: -4.750083923339844
    7. ' stone' → logprob: -6.125083923339844
    8. 'position' → logprob: -7.875083923339844
    9. ' player' → logprob: -8.125083923339844
    10. 'x' → logprob: -8.375083923339844

Token 22: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4348631799221039
    2. '):' → logprob: -1.1848632097244263
    3. '=' → logprob: -3.3098630905151367
    4. ')' → logprob: -5.184863090515137
    5. ',' → logprob: -5.684863090515137
    6. ' ):' → logprob: -7.059863090515137
    7. ' :' → logprob: -9.059863090515137
    8. 's' → logprob: -9.059863090515137
    9. '):
' → logprob: -9.934863090515137
    10. ' )' → logprob: -10.184863090515137

Token 23: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.05502130091190338
    2. 'int' → logprob: -2.930021286010742
    3. ' Optional' → logprob: -9.430021286010742
    4. ' str' → logprob: -9.930021286010742
    5. 'Optional' → logprob: -12.430021286010742
    6. ' ' → logprob: -13.055021286010742
    7. '[int' → logprob: -13.680021286010742
    8. 'str' → logprob: -14.055021286010742
    9. ')' → logprob: -14.180021286010742
    10. ' )' → logprob: -15.430021286010742

Token 24: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04652070254087448
    2. ')' → logprob: -3.296520709991455
    3. ',' → logprob: -4.796520709991455
    4. ':' → logprob: -8.796520233154297
    5. '):
' → logprob: -11.421520233154297
    6. '   ' → logprob: -12.046520233154297
    7. ' ):' → logprob: -12.546520233154297
    8. ')->' → logprob: -13.046520233154297
    9. '=' → logprob: -13.171520233154297
    10. '),' → logprob: -13.421520233154297

Token 25: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15852798521518707
    2. ')' → logprob: -2.2835280895233154
    3. ' )' → logprob: -4.033527851104736
    4. '):' → logprob: -4.658527851104736
    5. ' ' → logprob: -4.908527851104736
    6. ' ):' → logprob: -5.533527851104736
    7. '    ' → logprob: -6.408527851104736
    8. '        ' → logprob: -6.783527851104736
    9. '   ' → logprob: -6.908527851104736
    10. ':' → logprob: -7.658527851104736

Token 26: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.4762415587902069
    2. 'self' (adapté à ' self') → logprob: -0.9762415885925293
    3. '       ' → logprob: -6.226241588592529
    4. ' ' → logprob: -9.101241111755371
    5. '   ' → logprob: -10.226241111755371
    6. ' ' → logprob: -10.726241111755371
    7. 's' → logprob: -12.476241111755371
    8. '        ' → logprob: -12.601241111755371
    9. '    ' → logprob: -13.601241111755371
    10. 'd' → logprob: -13.976241111755371

Token 27: '.d' (ID: 1380)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0550880953669548
    2. '.d' → logprob: -2.9300880432128906
    3. '.value' → logprob: -9.05508804321289
    4. ' .' → logprob: -10.43008804321289
    5. '.token' → logprob: -11.30508804321289
    6. '._' → logprob: -11.55508804321289
    7. '.digital' → logprob: -12.05508804321289
    8. '.code' → logprob: -12.55508804321289
    9. 'digit' → logprob: -12.55508804321289
    10. '.number' → logprob: -13.05508804321289

Token 28: 'igit' (ID: 16673)
  Prédit: 'igit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igit' → logprob: -7.896309739408025e-07
    2. 'igits' → logprob: -14.875000953674316
    3. 'igi' → logprob: -15.375000953674316
    4. '=' → logprob: -17.125
    5. 'ig' → logprob: -17.125
    6. 'i' → logprob: -17.25
    7. 'igital' → logprob: -17.25
    8. 'digit' → logprob: -17.625
    9. 'igita' → logprob: -18.0
    10. '   ' → logprob: -18.375

Token 29: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132742643356323
    2. ' =' → logprob: -1.3132742643356323
    3. ' ' → logprob: -12.188274383544922
    4. '<|end|>' → logprob: -12.938274383544922
    5. ' =)' → logprob: -13.688274383544922
    6. ')' → logprob: -13.688274383544922
    7. '=}' → logprob: -14.438274383544922
    8. ' =
' → logprob: -14.563274383544922
    9. '.' → logprob: -15.313274383544922
    10. ':' → logprob: -15.313274383544922

Token 30: ' digit' (ID: 19181)
  Prédit: ' digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' digit' → logprob: -0.07889165729284286
    2. 'digit' → logprob: -2.5788917541503906
    3. '_digit' → logprob: -13.82889175415039
    4. '-digit' → logprob: -15.45389175415039
    5. 'd' → logprob: -15.82889175415039
    6. ' ' → logprob: -16.07889175415039
    7. ' ' → logprob: -16.20389175415039
    8. 'igit' → logprob: -16.70389175415039
    9. '0' → logprob: -17.45389175415039
    10. ' digital' → logprob: -17.70389175415039

Token 31: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 32: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2821234166622162
    2. '<|end|>' → logprob: -1.5321234464645386
    3. '   ' → logprob: -4.282123565673828
    4. '\n' → logprob: -5.407123565673828
    5. ' ' → logprob: -6.282123565673828
    6. '<|end|>' → logprob: -6.407123565673828
    7. 'def' → logprob: -6.657123565673828
    8. ',' → logprob: -6.907123565673828
    9. ':' → logprob: -6.907123565673828
    10. '    
' → logprob: -7.157123565673828

Token 33: ' self' (ID: 1051)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 34: '.dis' (ID: 8454)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.04193517565727234
    2. '.value' → logprob: -3.9169352054595947
    3. '.is' → logprob: -4.791934967041016
    4. '.color' → logprob: -6.291934967041016
    5. '.count' → logprob: -6.666934967041016
    6. '.s' → logprob: -6.666934967041016
    7. '._' → logprob: -6.666934967041016
    8. '.positions' → logprob: -7.291934967041016
    9. '.next' → logprob: -7.666934967041016
    10. '.values' → logprob: -7.666934967041016

Token 35: 'appe' (ID: 15645)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.017723271623253822
    2. 'abled' → logprob: -5.017723083496094
    3. 'tant' → logprob: -5.767723083496094
    4. 'play' → logprob: -6.267723083496094
    5. 'played' → logprob: -7.142723083496094
    6. 'count' → logprob: -7.267723083496094
    7. 'covered' → logprob: -7.392723083496094
    8. 'connected' → logprob: -7.767723083496094
    9. 'card' → logprob: -7.892723083496094
    10. 'tan' → logprob: -8.017723083496094

Token 36: 'ared' (ID: 2343)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.023805437609553337
    2. 'ared' → logprob: -4.273805618286133
    3. 'ars' → logprob: -4.773805618286133
    4. 'aring' → logprob: -6.898805618286133
    5. 'a' → logprob: -9.023805618286133
    6. 'are' → logprob: -12.148805618286133
    7. '_ar' → logprob: -13.398805618286133
    8. 'arer' → logprob: -13.523805618286133
    9. 'ares' → logprob: -13.773805618286133
    10. 'ard' → logprob: -13.773805618286133

Token 37: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006757052149623632
    2. '=' → logprob: -5.0067572593688965
    3. '_' → logprob: -10.631756782531738
    4. ' ' → logprob: -11.256756782531738
    5. ':' → logprob: -13.381756782531738
    6. '_space' → logprob: -14.006756782531738
    7. '  ' → logprob: -14.131756782531738
    8. 's' → logprob: -15.131756782531738
    9. ' :' → logprob: -15.756756782531738
    10. ' ==' → logprob: -15.881756782531738

Token 38: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.3868881165981293
    2. ' False' → logprob: -1.1368881464004517
    3. ' True' → logprob: -11.76188850402832
    4. 'True' → logprob: -12.13688850402832
    5. '0' → logprob: -13.26188850402832
    6. '[]' → logprob: -13.51188850402832
    7. '(False' → logprob: -15.01188850402832
    8. '=False' → logprob: -15.88688850402832
    9. ' []' → logprob: -16.63688850402832
    10. ' ' → logprob: -16.63688850402832

Token 39: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.45329615473747253
    2. '<|end|>' → logprob: -1.203296184539795
    3. '   ' → logprob: -3.703296184539795
    4. '

' → logprob: -3.953296184539795
    5. '\n' → logprob: -4.828296184539795
    6. '    
' → logprob: -5.203296184539795
    7. '<|end|>' → logprob: -5.703296184539795
    8. ' ' → logprob: -7.328296184539795
    9. 'n' → logprob: -7.703296184539795
    10. 'newline' → logprob: -7.828296184539795

Token 40: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.012478696182370186
    2. '   ' → logprob: -4.887478828430176
    3. '    
' → logprob: -6.637478828430176
    4. '<|end|>' → logprob: -6.762478828430176
    5. '

' → logprob: -6.887478828430176
    6. '\n' → logprob: -7.887478828430176
    7. ' 
' → logprob: -7.887478828430176
    8. '```' → logprob: -8.637478828430176
    9. '  
' → logprob: -9.762478828430176
    10. '<|end|>' → logprob: -9.762478828430176

Token 41: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.3091329336166382
    2. '   ' → logprob: -1.6841329336166382
    3. '
' → logprob: -3.4341330528259277
    4. ' def' → logprob: -4.434133052825928
    5. '    
' → logprob: -4.434133052825928
    6. '<|end|>' → logprob: -4.559133052825928
    7. '\n' → logprob: -5.059133052825928
    8. ' ' → logprob: -6.184133052825928
    9. '```' → logprob: -6.684133052825928
    10. '<|end|>' → logprob: -6.934133052825928

Token 42: ' __' (ID: 2516)
  Prédit: ' disappear'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' disappear' → logprob: -0.5876566767692566
    2. ' is' → logprob: -2.2126567363739014
    3. ' set' → logprob: -2.8376567363739014
    4. ' __' → logprob: -3.0876567363739014
    5. ' reset' → logprob: -3.5876567363739014
    6. ' ' → logprob: -3.5876567363739014
    7. ' def' → logprob: -3.5876567363739014
    8. ' get' → logprob: -3.7126567363739014
    9. ' check' → logprob: -3.7126567363739014
    10. ' space' → logprob: -3.8376567363739014

Token 43: 'repr' (ID: 67002)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.0161629356443882
    2. 'repr' → logprob: -4.391162872314453
    3. 'str' → logprob: -5.766162872314453
    4. 'init' → logprob: -8.016162872314453
    5. 'lt' → logprob: -8.891162872314453
    6. 'hash' → logprob: -10.391162872314453
    7. 'bool' → logprob: -11.766162872314453
    8. 'del' → logprob: -13.266162872314453
    9. 'ne' → logprob: -13.766162872314453
    10. 'get' → logprob: -13.766162872314453

Token 44: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.11802670359611511
    2. '__' → logprob: -2.2430267333984375
    3. '__('' → logprob: -5.6180267333984375
    4. '__(
' → logprob: -6.8680267333984375
    5. '__((' → logprob: -8.493026733398438
    6. '__("' → logprob: -8.868026733398438
    7. '(' → logprob: -9.743026733398438
    8. '_' → logprob: -9.868026733398438
    9. '__(*' → logprob: -10.618026733398438
    10. '___' → logprob: -11.118026733398438

Token 45: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00026753442944027483
    2. ')' → logprob: -8.25026798248291
    3. '<|end|>' → logprob: -12.62526798248291
    4. ' self' → logprob: -13.87526798248291
    5. ' ' → logprob: -14.00026798248291
    6. 's' → logprob: -15.37526798248291
    7. '(self' → logprob: -15.62526798248291
    8. '<|end|>' → logprob: -15.75026798248291
    9. '_self' → logprob: -15.87526798248291
    10. '),' → logprob: -16.750267028808594

Token 46: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.35059410333633423
    2. ',' → logprob: -1.3505940437316895
    3. '):' → logprob: -3.8505940437316895
    4. '<|end|>' → logprob: -5.1005940437316895
    5. 'self' → logprob: -5.2255940437316895
    6. ' ,' → logprob: -7.1005940437316895
    7. '):
' → logprob: -7.3505940437316895
    8. '<|end|>' → logprob: -7.8505940437316895
    9. '):

' → logprob: -7.9755940437316895
    10. '(' → logprob: -8.225594520568848

Token 47: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006015266408212483
    2. 'return' → logprob: -8.625601768493652
    3. ' return' → logprob: -8.875601768493652
    4. '   ' → logprob: -9.875601768493652
    5. ')' → logprob: -10.000601768493652
    6. '        ' → logprob: -10.250601768493652
    7. ' f' → logprob: -10.250601768493652
    8. '    ' → logprob: -10.500601768493652
    9. ''' → logprob: -10.625601768493652
    10. '"' → logprob: -11.250601768493652

Token 48: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.6133713722229004
    2. ' return' → logprob: -0.8633713722229004
    3. '       ' → logprob: -3.3633713722229004
    4. ' f' → logprob: -6.3633713722229
    5. 'f' → logprob: -8.113370895385742
    6. '           ' → logprob: -9.488370895385742
    7. '   ' → logprob: -11.238370895385742
    8. '```' → logprob: -12.988370895385742
    9. '{return' → logprob: -13.238370895385742
    10. '        ' → logprob: -13.238370895385742

Token 49: ' f' (ID: 285)
  Prédit: ' f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.25193601846694946
    2. 'f' → logprob: -1.5019359588623047
    3. ' ' → logprob: -13.501935958862305
    4. ''f' → logprob: -13.501935958862305
    5. '	f' → logprob: -13.876935958862305
    6. '"' → logprob: -14.126935958862305
    7. ' str' → logprob: -14.251935958862305
    8. ' repr' → logprob: -14.751935958862305
    9. 'repr' → logprob: -14.876935958862305
    10. ''' → logprob: -15.001935958862305

Token 50: '"{' (ID: 27510)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.013341511599719524
    2. ''S' → logprob: -4.388341426849365
    3. ''' → logprob: -7.638341426849365
    4. '"S' → logprob: -8.638341903686523
    5. ''"' → logprob: -9.763341903686523
    6. '"{' → logprob: -10.013341903686523
    7. 'f' → logprob: -10.513341903686523
    8. ''s' → logprob: -11.638341903686523
    9. 'Stone' → logprob: -11.763341903686523
    10. '"<' → logprob: -12.013341903686523

Token 51: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0010729423956945539
    2. 'Stone' → logprob: -7.501072883605957
    3. ''' → logprob: -8.251072883605957
    4. ''s' → logprob: -9.376072883605957
    5. 'type' → logprob: -9.501072883605957
    6. ''S' → logprob: -9.626072883605957
    7. ' self' → logprob: -11.376072883605957
    8. 'stone' → logprob: -11.501072883605957
    9. 'Self' → logprob: -13.126072883605957
    10. 'sel' → logprob: -13.626072883605957

Token 52: '.d' (ID: 1380)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5097940564155579
    2. '.st' → logprob: -1.009793996810913
    3. '.d' → logprob: -3.509793996810913
    4. '.St' → logprob: -6.509794235229492
    5. ' .' → logprob: -6.884794235229492
    6. '.S' → logprob: -7.134794235229492
    7. '.s' → logprob: -7.134794235229492
    8. '}.' → logprob: -7.509794235229492
    9. '.ST' → logprob: -8.134794235229492
    10. '.token' → logprob: -9.759794235229492

Token 53: 'igit' (ID: 16673)
  Prédit: 'igit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igit' → logprob: -0.0011705794604495168
    2. 'i' → logprob: -8.12617015838623
    3. 'igt' → logprob: -8.37617015838623
    4. 'ig' → logprob: -8.50117015838623
    5. 'digit' → logprob: -9.37617015838623
    6. 'ight' → logprob: -10.00117015838623
    7. 'igi' → logprob: -10.00117015838623
    8. 'igital' → logprob: -10.12617015838623
    9. '{' → logprob: -10.87617015838623
    10. '.' → logprob: -10.87617015838623

Token 54: ' if' (ID: 538)
  Prédit: '}"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}"' → logprob: -0.0005799580831080675
    2. '}' → logprob: -7.500579833984375
    3. '"' → logprob: -11.750579833984375
    4. '}")' → logprob: -12.250579833984375
    5. '!' → logprob: -12.500579833984375
    6. ' }' → logprob: -12.625579833984375
    7. '}"
' → logprob: -13.125579833984375
    8. '}{' → logprob: -13.625579833984375
    9. '"}' → logprob: -14.000579833984375
    10. '}}"' → logprob: -14.375579833984375

Token 55: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.6326500773429871
    2. ' not' → logprob: -0.7576500773429871
    3. 'self' → logprob: -10.132650375366211
    4. ' self' → logprob: -12.382650375366211
    5. '!' → logprob: -12.757650375366211
    6. '	not' → logprob: -13.632650375366211
    7. ' ' → logprob: -13.757650375366211
    8. '(not' → logprob: -14.507650375366211
    9. '
' → logprob: -14.757650375366211
    10. '_not' → logprob: -15.382650375366211

Token 56: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.16022513806819916
    2. ' self' → logprob: -1.9102251529693604
    3. '(self' → logprob: -14.785224914550781
    4. '	self' → logprob: -15.660224914550781
    5. ' ' → logprob: -16.28522491455078
    6. ' ' → logprob: -16.41022491455078
    7. '
' → logprob: -16.78522491455078
    8. '[self' → logprob: -16.91022491455078
    9. '`' → logprob: -17.16022491455078
    10. '   ' → logprob: -17.53522491455078

Token 57: '.dis' (ID: 8454)
  Prédit: '.dis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dis' → logprob: -0.0008084330474957824
    2. '.' → logprob: -7.125808238983154
    3. ' .' → logprob: -13.375808715820312
    4. '.disabled' → logprob: -14.375808715820312
    5. '.d' → logprob: -14.875808715820312
    6. 'dis' → logprob: -15.875808715820312
    7. '.Dis' → logprob: -15.875808715820312
    8. '	dis' → logprob: -16.250808715820312
    9. '.con' → logprob: -16.250808715820312

Token 58: 'appe' (ID: 15645)
  Prédit: 'appe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'appe' → logprob: -5.200166469876422e-06
    2. 'app' → logprob: -13.500004768371582
    3. 'appear' → logprob: -14.250004768371582
    4. 'ape' → logprob: -14.625004768371582
    5. 'apper' → logprob: -14.625004768371582
    6. 'appa' → logprob: -14.750004768371582
    7. 'appearance' → logprob: -15.000004768371582
    8. 'e' → logprob: -15.125004768371582
    9. 'aper' → logprob: -15.375004768371582
    10. ' appeared' → logprob: -15.500004768371582

Token 59: 'ared' (ID: 2343)
  Prédit: 'ared'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ared' → logprob: -6.420598219847307e-05
    2. 'aring' → logprob: -10.6250638961792
    3. 'ar' → logprob: -11.5000638961792
    4. 'are' → logprob: -11.6250638961792
    5. '```' → logprob: -13.2500638961792
    6. 'a' → logprob: -13.3750638961792
    7. '
' → logprob: -13.5000638961792
    8. 'ated' → logprob: -13.6250638961792
    9. 'ered' → logprob: -13.6250638961792
    10. 'aned' → logprob: -13.7500638961792

Token 60: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.10021423548460007
    2. 'else' → logprob: -2.3502142429351807
    3. ' ' → logprob: -12.100214004516602
    4. '"' → logprob: -14.475214004516602
    5. '_else' → logprob: -15.100214004516602
    6. '-' → logprob: -15.225214004516602
    7. ')' → logprob: -15.600214004516602
    8. '	else' → logprob: -15.600214004516602
    9. '
' → logprob: -16.2252140045166
    10. ''' → logprob: -16.4752140045166

Token 61: ' '.'' (ID: 64762)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.45560014247894287
    2. ''_' → logprob: -1.8306001424789429
    3. ''*' → logprob: -2.0806002616882324
    4. ''.' → logprob: -3.0806002616882324
    5. ''-' → logprob: -3.7056002616882324
    6. ''[' → logprob: -6.580600261688232
    7. ''#' → logprob: -6.705600261688232
    8. ''?' → logprob: -6.705600261688232
    9. ''<' → logprob: -6.830600261688232
    10. '''' → logprob: -7.080600261688232

Token 62: '}"

' (ID: 103433)
  Prédit: '}"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}"' → logprob: -0.0004170873435214162
    2. '}' → logprob: -8.25041675567627
    3. '"}' → logprob: -9.12541675567627
    4. '"' → logprob: -10.87541675567627
    5. '}")' → logprob: -11.12541675567627
    6. '}"
' → logprob: -11.75041675567627
    7. '}"

' → logprob: -14.00041675567627
    8. '.' → logprob: -14.12541675567627
    9. ''}' → logprob: -14.37541675567627
    10. ')"' → logprob: -14.62541675567627

Token 63: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 64: ' Board' (ID: 10837)
  Prédit: ' Board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Board' → logprob: -0.5183756351470947
    2. ' Go' → logprob: -1.0183756351470947
    3. 'Board' → logprob: -3.8933756351470947
    4. 'Go' → logprob: -4.643375396728516
    5. ' Stone' → logprob: -5.518375396728516
    6. ' Game' → logprob: -5.768375396728516
    7. 'Stone' → logprob: -6.518375396728516
    8. ' ' → logprob: -7.143375396728516
    9. ' Gob' → logprob: -7.268375396728516
    10. ' ' → logprob: -7.643375396728516

Token 65: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00011403311509639025
    2. '():' → logprob: -10.000114440917969
    3. '<|end|>' → logprob: -10.625114440917969
    4. '):' → logprob: -11.125114440917969
    5. '(' → logprob: -11.750114440917969
    6. ':
' → logprob: -11.875114440917969
    7. ' :' → logprob: -11.875114440917969
    8. ':**' → logprob: -13.125114440917969
    9. '>:' → logprob: -13.125114440917969
    10. '(object' → logprob: -14.125114440917969

Token 66: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03264067694544792
    2. ':' → logprob: -3.5326406955718994
    3. '(' → logprob: -6.78264045715332
    4. '<|end|>' → logprob: -7.90764045715332
    5. 'def' → logprob: -8.03264045715332
    6. '    
' → logprob: -8.03264045715332
    7. ' def' → logprob: -8.15764045715332
    8. '    ' → logprob: -9.53264045715332
    9. '(object' → logprob: -9.90764045715332
    10. ')' → logprob: -10.03264045715332

Token 67: ' WIDTH' (ID: 88792)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.14307010173797607
    2. 'def' → logprob: -2.2680702209472656
    3. '   ' → logprob: -3.5180702209472656
    4. '    ' → logprob: -9.268070220947266
    5. ' ' → logprob: -11.518070220947266
    6. '    
' → logprob: -12.018070220947266
    7. '	def' → logprob: -12.018070220947266
    8. '```' → logprob: -12.393070220947266
    9. '4' → logprob: -12.768070220947266
    10. '(' → logprob: -13.143070220947266

Token 68: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03378908336162567
    2. '=' → logprob: -3.4087891578674316
    3. ':' → logprob: -8.908788681030273
    4. '   ' → logprob: -12.658788681030273
    5. ',' → logprob: -13.408788681030273
    6. ':int' → logprob: -14.033788681030273
    7. ' ' → logprob: -14.283788681030273
    8. ' :' → logprob: -14.408788681030273
    9. '<|end|>' → logprob: -14.408788681030273
    10. '=int' → logprob: -15.158788681030273

Token 69: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8380191326141357
    2. '6' → logprob: -1.2130191326141357
    3. '5' → logprob: -1.5880191326141357
    4. '7' → logprob: -3.9630191326141357
    5. '4' → logprob: -3.9630191326141357
    6. '9' → logprob: -4.213019371032715
    7. '10' → logprob: -5.338019371032715
    8. '8' → logprob: -5.463019371032715
    9. '3' → logprob: -6.588019371032715
    10. '12' → logprob: -6.713019371032715

Token 70: '5' (ID: 20)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.5801146030426025
    2. '5' → logprob: -1.3301146030426025
    3. '9' → logprob: -2.5801146030426025
    4. '7' → logprob: -3.2051146030426025
    5. '8' → logprob: -3.4551146030426025
    6. '4' → logprob: -4.705114364624023
    7. '10' → logprob: -4.955114364624023
    8. '12' → logprob: -5.205114364624023
    9. '19' → logprob: -6.455114364624023
    10. '3' → logprob: -6.830114364624023

Token 71: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 72: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.060346901416778564
    2. '    
' → logprob: -3.435346841812134
    3. '
' → logprob: -4.185347080230713
    4. 'def' → logprob: -5.435347080230713
    5. ' def' → logprob: -5.935347080230713
    6. '<|end|>' → logprob: -6.060347080230713
    7. ' ' → logprob: -7.560347080230713
    8. '<|end|>' → logprob: -8.560346603393555
    9. '  
' → logprob: -8.935346603393555
    10. '```' → logprob: -8.935346603393555

Token 73: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.001968246651813388
    2. ' def' → logprob: -6.2519683837890625
    3. 'HEIGHT' → logprob: -11.001968383789062
    4. 'board' → logprob: -12.376968383789062
    5. 'ROWS' → logprob: -12.626968383789062
    6. '   ' → logprob: -12.751968383789062
    7. 'BOARD' → logprob: -13.126968383789062
    8. '    
' → logprob: -13.501968383789062
    9. 'STONE' → logprob: -13.501968383789062
    10. 'SIZE' → logprob: -13.751968383789062

Token 74: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.1634845733642578
    2. ' ' → logprob: -2.413484573364258
    3. ' def' → logprob: -3.538484573364258
    4. ' _' → logprob: -4.288484573364258
    5. '__' → logprob: -4.788484573364258
    6. ' ' → logprob: -5.913484573364258
    7. '_' → logprob: -6.163484573364258
    8. '<|end|>' → logprob: -6.413484573364258
    9. 'itialize' → logprob: -7.163484573364258
    10. '_init' → logprob: -7.788484573364258

Token 75: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -2.2200749754119897e-06
    2. 'ini' → logprob: -13.750001907348633
    3. '   ' → logprob: -14.875001907348633
    4. 'in' → logprob: -15.375001907348633
    5. 'int' → logprob: -15.625001907348633
    6. 'post' → logprob: -16.125001907348633
    7. ' init' → logprob: -16.500001907348633
    8. 'inite' → logprob: -16.750001907348633
    9. 'def' → logprob: -17.375001907348633
    10. 'name' → logprob: -17.500001907348633

Token 76: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.012599836103618145
    2. '__' → logprob: -4.387599945068359
    3. '__(
' → logprob: -9.63759994506836
    4. '(self' → logprob: -11.51259994506836
    5. '__((' → logprob: -11.51259994506836
    6. '__('' → logprob: -13.01259994506836
    7. '__(*' → logprob: -13.63759994506836
    8. '_(' → logprob: -14.63759994506836
    9. '__("' → logprob: -15.01259994506836
    10. '___' → logprob: -15.51259994506836

Token 77: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.023960597813129425
    2. ' self' → logprob: -3.773960590362549
    3. ')' → logprob: -7.273960590362549
    4. '(self' → logprob: -12.273961067199707
    5. ' ' → logprob: -12.398961067199707
    6. 'size' → logprob: -12.773961067199707
    7. ' )' → logprob: -13.398961067199707
    8. '):
' → logprob: -13.523961067199707
    9. '
' → logprob: -13.898961067199707
    10. '_self' → logprob: -14.023961067199707

Token 78: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05412820354104042
    2. '):' → logprob: -3.0541281700134277
    3. 'self' → logprob: -5.429128170013428
    4. ')' → logprob: -7.554128170013428
    5. ' ,' → logprob: -8.054128646850586
    6. ' ):' → logprob: -8.929128646850586
    7. '(self' → logprob: -9.929128646850586
    8. '_self' → logprob: -10.679128646850586
    9. '):
' → logprob: -11.179128646850586
    10. ' self' → logprob: -11.179128646850586

Token 79: ' rows' (ID: 13585)
  Prédit: 'stones'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stones' → logprob: -0.44267386198043823
    2. ' stones' → logprob: -1.567673921585083
    3. ' board' → logprob: -3.192673921585083
    4. ' stone' → logprob: -3.442673921585083
    5. ' self' → logprob: -3.692673921585083
    6. 'self' → logprob: -4.192673683166504
    7. ')' → logprob: -4.442673683166504
    8. 'board' → logprob: -5.192673683166504
    9. ' rows' → logprob: -6.192673683166504
    10. ' grid' → logprob: -6.192673683166504

Token 80: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -8.180258191714529e-06
    2. '):' → logprob: -11.875008583068848
    3. ' :' → logprob: -14.750008583068848
    4. '   ' → logprob: -15.625008583068848
    5. ')' → logprob: -16.12500762939453
    6. '```' → logprob: -16.12500762939453
    7. '_:' → logprob: -16.37500762939453
    8. ',' → logprob: -16.37500762939453
    9. '):
' → logprob: -16.87500762939453
    10. '：' → logprob: -17.00000762939453

Token 81: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.029828930273652077
    2. ' List' → logprob: -3.5298290252685547
    3. 'int' → logprob: -9.904829025268555
    4. '   ' → logprob: -11.029829025268555
    5. '[List' → logprob: -12.279829025268555
    6. '       ' → logprob: -13.529829025268555
    7. '	List' → logprob: -13.779829025268555
    8. ' ' → logprob: -13.904829025268555
    9. ' int' → logprob: -14.154829025268555
    10. ')' → logprob: -14.279829025268555

Token 82: '[List' (ID: 113982)
  Prédit: '[List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[List' → logprob: -5.32392441527918e-05
    2. '[' → logprob: -10.375053405761719
    3. '[str' → logprob: -11.125053405761719
    4. '[int' → logprob: -11.875053405761719
    5. 'List' → logprob: -15.750053405761719
    6. '<List' → logprob: -16.00005340576172
    7. '[
' → logprob: -17.37505340576172
    8. ')' → logprob: -17.75005340576172
    9. '   ' → logprob: -18.25005340576172
    10. '(List' → logprob: -18.37505340576172

Token 83: '[int' (ID: 40124)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2519620656967163
    2. '[int' → logprob: -1.5019620656967163
    3. '[Int' → logprob: -11.126961708068848
    4. 'int' → logprob: -11.251961708068848
    5. 'Stone' → logprob: -13.376961708068848
    6. '[
' → logprob: -13.626961708068848
    7. '[List' → logprob: -15.001961708068848
    8. 'Optional' → logprob: -15.126961708068848
    9. '   ' → logprob: -15.376961708068848
    10. '[Index' → logprob: -15.376961708068848

Token 84: ']]' (ID: 8928)
  Prédit: ']]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.005994205828756094
    2. ']])' → logprob: -5.1309943199157715
    3. ']' → logprob: -10.755993843078613
    4. ']):' → logprob: -10.880993843078613
    5. '[' → logprob: -11.755993843078613
    6. ']]]' → logprob: -12.005993843078613
    7. ' ]' → logprob: -12.505993843078613
    8. '[int' → logprob: -12.880993843078613
    9. ']]:
' → logprob: -13.880993843078613
    10. '```' → logprob: -14.255993843078613

Token 85: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0003583456273190677
    2. ')' → logprob: -8.125358581542969
    3. '):
' → logprob: -10.625358581542969
    4. ':' → logprob: -10.875358581542969
    5. ' ):' → logprob: -12.000358581542969
    6. '[' → logprob: -12.375358581542969
    7. '   ' → logprob: -12.500358581542969
    8. '       ' → logprob: -13.375358581542969
    9. '):
' → logprob: -13.750358581542969
    10. ']:' → logprob: -14.375358581542969

Token 86: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.7755875129951164e-05
    2. ',' → logprob: -11.62504768371582
    3. '<|end|>' → logprob: -11.62504768371582
    4. 'self' → logprob: -11.75004768371582
    5. ' self' → logprob: -12.00004768371582
    6. ':' → logprob: -12.00004768371582
    7. '   ' → logprob: -12.62504768371582
    8. ')' → logprob: -13.62504768371582
    9. '      ' → logprob: -13.62504768371582
    10. '        
' → logprob: -13.75004768371582

Token 87: ' #' (ID: 1069)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.7022827863693237
    2. 'self' → logprob: -0.7022827863693237
    3. '       ' → logprob: -4.702282905578613
    4. '   ' → logprob: -11.452282905578613
    5. ' ' → logprob: -12.202282905578613
    6. '	self' → logprob: -13.202282905578613
    7. ' ' → logprob: -14.327282905578613
    8. 'super' → logprob: -15.577282905578613
    9. '[self' → logprob: -15.577282905578613
    10. '```' → logprob: -15.702282905578613

Token 88: ' board' (ID: 6796)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04872192069888115
    2. ' self' → logprob: -3.0487220287323
    3. '       ' → logprob: -9.298722267150879
    4. 'rows' → logprob: -11.548722267150879
    5. '   ' → logprob: -11.673722267150879
    6. '#' → logprob: -12.048722267150879
    7. 'super' → logprob: -12.548722267150879
    8. 'Initialize' → logprob: -12.548722267150879
    9. ' ' → logprob: -13.173722267150879
    10. 'def' → logprob: -13.548722267150879

Token 89: ' as' (ID: 472)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.010111022740602493
    2. ':' → logprob: -5.135110855102539
    3. '=' → logprob: -5.635110855102539
    4. '<|end|>' → logprob: -8.135110855102539
    5. '       ' → logprob: -9.760110855102539
    6. '   ' → logprob: -10.135110855102539
    7. 'self' → logprob: -10.135110855102539
    8. ' ' → logprob: -10.510110855102539
    9. '<|end|>' → logprob: -10.635110855102539
    10. 's' → logprob: -11.135110855102539

Token 90: ' H' (ID: 487)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.9702242612838745
    2. 'List' → logprob: -1.2202242612838745
    3. ' List' → logprob: -1.3452242612838745
    4. '[[' → logprob: -3.970224380493164
    5. '[List' → logprob: -4.470224380493164
    6. 'a' → logprob: -4.595224380493164
    7. 'self' → logprob: -4.720224380493164
    8. ' ' → logprob: -5.845224380493164
    9. ' stones' → logprob: -5.970224380493164
    10. ' [[' → logprob: -6.095224380493164

Token 91: ' rows' (ID: 13585)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.6173311471939087
    2. '       ' → logprob: -1.8673311471939087
    3. '   ' → logprob: -2.117331027984619
    4. 'orizontal' → logprob: -2.617331027984619
    5. 'Stone' → logprob: -2.867331027984619
    6. 'and' → logprob: -3.242331027984619
    7. 'stones' → logprob: -3.367331027984619
    8. '[[' → logprob: -3.367331027984619
    9. ' stones' → logprob: -3.617331027984619
    10. ' stone' → logprob: -3.617331027984619

Token 92: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.9228487610816956
    2. '       ' → logprob: -1.0478487014770508
    3. ',' → logprob: -2.172848701477051
    4. ' and' → logprob: -3.047848701477051
    5. ' of' → logprob: -3.547848701477051
    6. 'and' → logprob: -4.297848701477051
    7. ' =' → logprob: -4.422848701477051
    8. '   ' → logprob: -4.547848701477051
    9. 'x' → logprob: -5.797848701477051
    10. '[' → logprob: -6.172848701477051

Token 93: ' WIDTH' (ID: 88792)
  Prédit: ' WIDTH'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' WIDTH' → logprob: -0.6219842433929443
    2. 'WIDTH' → logprob: -1.2469842433929443
    3. 'W' → logprob: -2.8719842433929443
    4. ' self' → logprob: -3.3719842433929443
    5. '   ' → logprob: -3.8719842433929443
    6. ' ' → logprob: -3.9969842433929443
    7. ' W' → logprob: -3.9969842433929443
    8. 'self' → logprob: -4.246984481811523
    9. '5' → logprob: -6.246984481811523
    10. '    ' → logprob: -6.246984481811523

Token 94: ' cols' (ID: 37134)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.627155601978302
    2. ' of' → logprob: -1.3771555423736572
    3. '       ' → logprob: -2.3771555423736572
    4. ' lines' → logprob: -4.127155780792236
    5. ' self' → logprob: -4.502155780792236
    6. '   ' → logprob: -4.627155780792236
    7. ' lists' → logprob: -4.627155780792236
    8. ' ' → logprob: -5.002155780792236
    9. ' stone' → logprob: -5.127155780792236
    10. ' List' → logprob: -5.127155780792236

Token 95: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0033754343166947365
    2. '<|end|>' → logprob: -6.25337553024292
    3. 'self' → logprob: -7.37837553024292
    4. ',' → logprob: -8.128375053405762
    5. '<|end|>' → logprob: -8.628375053405762
    6. '
' → logprob: -9.128375053405762
    7. ' self' → logprob: -10.128375053405762
    8. ' ' → logprob: -10.128375053405762
    9. ':' → logprob: -10.253375053405762
    10. '```' → logprob: -11.128375053405762

Token 96: ' top' (ID: 2344)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02621065452694893
    2. 'self' → logprob: -3.7762105464935303
    3. ' self' → logprob: -5.901210784912109
    4. '<|end|>' → logprob: -8.65121078491211
    5. ' ' → logprob: -11.40121078491211
    6. '   ' → logprob: -11.77621078491211
    7. '[self' → logprob: -12.27621078491211
    8. '<|end|>' → logprob: -12.27621078491211
    9. 'rows' → logprob: -12.65121078491211
    10. '	self' → logprob: -13.27621078491211

Token 97: ' row' (ID: 5225)
  Prédit: ' left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.7008177638053894
    2. '-left' → logprob: -2.575817823410034
    3. 'down' → logprob: -2.575817823410034
    4. ' to' → logprob: -2.700817823410034
    5. 'left' → logprob: -2.825817823410034
    6. ':' → logprob: -3.325817823410034
    7. '       ' → logprob: -3.325817823410034
    8. '   ' → logprob: -3.325817823410034
    9. ' =' → logprob: -3.700817823410034
    10. ' down' → logprob: -3.950817823410034

Token 98: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.5997486710548401
    2. ' as' → logprob: -1.5997486114501953
    3. ' to' → logprob: -2.0997486114501953
    4. ' =' → logprob: -3.3497486114501953
    5. ' first' → logprob: -3.9747486114501953
    6. '   ' → logprob: -4.099748611450195
    7. ':' → logprob: -4.224748611450195
    8. '=' → logprob: -4.349748611450195
    9. 'down' → logprob: -4.974748611450195
    10. ' at' → logprob: -5.599748611450195

Token 99: ' rows' (ID: 13585)
  Prédit: ' rows'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rows' → logprob: -0.49948248267173767
    2. 'rows' → logprob: -0.9994825124740601
    3. '0' → logprob: -4.12448263168335
    4. ' index' → logprob: -5.87448263168335
    5. ' row' → logprob: -5.99948263168335
    6. 'index' → logprob: -7.24948263168335
    7. 'row' → logprob: -7.24948263168335
    8. ' ' → logprob: -7.37448263168335
    9. '[' → logprob: -7.49948263168335
    10. ' the' → logprob: -8.124482154846191

Token 100: '[' (ID: 58)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008084236644208431
    2. '<|end|>' → logprob: -5.008084297180176
    3. ',' → logprob: -8.133084297180176
    4. '<|end|>' → logprob: -8.258084297180176
    5. ':' → logprob: -8.383084297180176
    6. 'self' → logprob: -9.133084297180176
    7. 'rows' → logprob: -9.383084297180176
    8. '
' → logprob: -9.883084297180176
    9. '```' → logprob: -9.883084297180176
    10. ' rows' → logprob: -10.383084297180176

Token 101: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.881560041918419e-05
    2. ' ' → logprob: -10.250039100646973
    3. ']' → logprob: -13.125039100646973
    4. ')' → logprob: -14.625039100646973
    5. '-' → logprob: -14.875039100646973
    6. 'index' → logprob: -16.250038146972656
    7. '   ' → logprob: -16.375038146972656
    8. '[' → logprob: -16.500038146972656
    9. '<|end|>' → logprob: -16.500038146972656
    10. '#' → logprob: -17.250038146972656

Token 102: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.014514272101223469
    2. ']
' → logprob: -5.139514446258545
    3. '],' → logprob: -6.014514446258545
    4. '       ' → logprob: -6.014514446258545
    5. ']:
' → logprob: -6.139514446258545
    6. ' ]' → logprob: -7.139514446258545
    7. ']:' → logprob: -7.889514446258545
    8. ',' → logprob: -9.389513969421387
    9. '].' → logprob: -10.139513969421387
    10. ']
' → logprob: -10.264513969421387

Token 103: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0029843561351299286
    2. 'self' → logprob: -6.002984523773193
    3. ' self' → logprob: -7.627984523773193
    4. '   ' → logprob: -11.752984046936035
    5. '<|end|>' → logprob: -12.252984046936035
    6. '```' → logprob: -12.752984046936035
    7. '      ' → logprob: -13.502984046936035
    8. ' ' → logprob: -13.627984046936035
    9. ')' → logprob: -14.627984046936035
    10. ',' → logprob: -14.752984046936035

Token 104: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.028986258432269096
    2. '       ' → logprob: -3.9039862155914307
    3. ' self' → logprob: -4.77898645401001
    4. ' ' → logprob: -14.278985977172852
    5. '	self' → logprob: -14.278985977172852
    6. '   ' → logprob: -14.403985977172852
    7. 'from' → logprob: -14.778985977172852
    8. 'import' → logprob: -14.778985977172852
    9. 'rows' → logprob: -14.778985977172852
    10. 'def' → logprob: -15.528985977172852

Token 105: '.height' (ID: 11682)
  Prédit: '.rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.rows' → logprob: -0.011788664385676384
    2. '.st' → logprob: -5.011788845062256
    3. '.board' → logprob: -5.511788845062256
    4. '.grid' → logprob: -7.136788845062256
    5. '.' → logprob: -9.261788368225098
    6. '.cells' → logprob: -9.636788368225098
    7. '.columns' → logprob: -11.136788368225098
    8. '.matrix' → logprob: -11.636788368225098
    9. '.data' → logprob: -11.761788368225098
    10. '.tiles' → logprob: -12.011788368225098

Token 106: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.061999283730983734
    2. '=' → logprob: -2.8119993209838867
    3. '=len' → logprob: -10.436999320983887
    4. ',' → logprob: -14.311999320983887
    5. ' ' → logprob: -14.311999320983887
    6. '=int' → logprob: -15.311999320983887
    7. '   ' → logprob: -15.311999320983887
    8. '<|end|>' → logprob: -15.686999320983887
    9. '    ' → logprob: -15.811999320983887
    10. '＝' → logprob: -17.06199836730957

Token 107: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.0011728443205356598
    2. 'len' → logprob: -6.75117301940918
    3. '(len' → logprob: -13.12617301940918
    4. '=len' → logprob: -15.00117301940918
    5. '[len' → logprob: -15.87617301940918
    6. '	len' → logprob: -16.50117301940918
    7. ',len' → logprob: -18.37617301940918
    8. ' ' → logprob: -20.50117301940918
    9. '<len' → logprob: -21.00117301940918
    10. '<|end|>' → logprob: -21.25117301940918

Token 108: '(rows' (ID: 69648)
  Prédit: '(rows'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rows' → logprob: -7.896309739408025e-07
    2. '(' → logprob: -14.250000953674316
    3. 'rows' → logprob: -16.0
    4. ' rows' → logprob: -19.375
    5. '	rows' → logprob: -20.25
    6. '(row' → logprob: -20.375
    7. '(
' → logprob: -20.875
    8. '(columns' → logprob: -22.125
    9. '(lines' → logprob: -22.25
    10. '(cols' → logprob: -23.25

Token 109: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009742325637489557
    2. ')
' → logprob: -7.250974178314209
    3. ' )' → logprob: -8.625974655151367
    4. '<|end|>' → logprob: -9.875974655151367
    5. '<|end|>' → logprob: -10.750974655151367
    6. '       ' → logprob: -12.750974655151367
    7. ' ' → logprob: -12.750974655151367
    8. '   ' → logprob: -12.875974655151367
    9. '
' → logprob: -14.500974655151367
    10. ' )
' → logprob: -14.500974655151367

Token 110: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015892652794718742
    2. 'self' → logprob: -4.265892505645752
    3. ' self' → logprob: -6.390892505645752
    4. '<|end|>' → logprob: -10.76589298248291
    5. '   ' → logprob: -11.01589298248291
    6. '```' → logprob: -12.64089298248291
    7. ' ' → logprob: -12.76589298248291
    8. '	self' → logprob: -13.39089298248291
    9. ',' → logprob: -13.76589298248291
    10. '[self' → logprob: -13.89089298248291

Token 111: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0004954866599291563
    2. ' self' → logprob: -8.250495910644531
    3. '       ' → logprob: -8.375495910644531
    4. 'rows' → logprob: -13.625495910644531
    5. '   ' → logprob: -14.250495910644531
    6. '#' → logprob: -14.625495910644531
    7. '
' → logprob: -15.000495910644531
    8. '[self' → logprob: -15.375495910644531
    9. '	self' → logprob: -15.750495910644531
    10. '        
' → logprob: -16.00049591064453

Token 112: '.grid' (ID: 19269)
  Prédit: '.rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.rows' → logprob: -0.006414439529180527
    2. '.board' → logprob: -5.506414413452148
    3. '.' → logprob: -7.131414413452148
    4. '.columns' → logprob: -7.756414413452148
    5. '.st' → logprob: -8.131414413452148
    6. '.cols' → logprob: -8.256414413452148
    7. '.width' → logprob: -8.256414413452148
    8. '.grid' → logprob: -9.631414413452148
    9. '.cells' → logprob: -9.756414413452148
    10. '.points' → logprob: -10.631414413452148

Token 113: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3871702551841736
    2. ' =' → logprob: -1.1371703147888184
    3. ':' → logprob: -8.13716983795166
    4. '=[' → logprob: -13.38716983795166
    5. '=[[' → logprob: -13.63716983795166
    6. '=[]' → logprob: -13.63716983795166
    7. ' =[' → logprob: -13.88716983795166
    8. '[' → logprob: -14.63716983795166
    9. ' ' → logprob: -14.76216983795166
    10. '   ' → logprob: -16.012170791625977

Token 114: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.023262368515133858
    2. ' List' → logprob: -3.7732622623443604
    3. '[List' → logprob: -11.523262023925781
    4. '   ' → logprob: -12.648262023925781
    5. ' ' → logprob: -13.273262023925781
    6. '    ' → logprob: -14.523262023925781
    7. '	List' → logprob: -14.523262023925781
    8. '  ' → logprob: -14.898262023925781
    9. 'list' → logprob: -15.523262023925781
    10. '       ' → logprob: -15.648262023925781

Token 115: '[List' (ID: 113982)
  Prédit: '[List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[List' → logprob: -0.00015872348740231246
    2. '[' → logprob: -8.750158309936523
    3. '<List' → logprob: -15.875158309936523
    4. '[
' → logprob: -17.000158309936523
    5. 'List' → logprob: -17.875158309936523
    6. ']' → logprob: -17.875158309936523
    7. '(List' → logprob: -18.250158309936523
    8. '```' → logprob: -18.625158309936523
    9. '[[' → logprob: -19.250158309936523
    10. '][' → logprob: -19.500158309936523

Token 116: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.180258191714529e-06
    2. '[
' → logprob: -12.250008583068848
    3. 'Optional' → logprob: -13.125008583068848
    4. ']' → logprob: -14.625008583068848
    5. 'Stone' → logprob: -14.625008583068848
    6. '   ' → logprob: -16.12500762939453
    7. ' [' → logprob: -16.50000762939453
    8. '[List' → logprob: -16.62500762939453
    9. '[[' → logprob: -16.87500762939453
    10. '(Optional' → logprob: -17.00000762939453

Token 117: 'Optional' (ID: 21633)
  Prédit: 'Optional'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Optional' → logprob: -0.6758359670639038
    2. 'Stone' → logprob: -0.8008359670639038
    3. ' Stone' → logprob: -3.5508360862731934
    4. ' Optional' → logprob: -4.300836086273193
    5. '(Optional' → logprob: -11.300835609436035
    6. ' stone' → logprob: -11.675835609436035
    7. 'Opt' → logprob: -12.050835609436035
    8. '	Optional' → logprob: -12.300835609436035
    9. ' ' → logprob: -12.425835609436035
    10. 'Object' → logprob: -12.675835609436035

Token 118: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.081584716506768e-05
    2. 'Stone' → logprob: -10.875020980834961
    3. '[
' → logprob: -13.625020980834961
    4. ' [' → logprob: -15.500020980834961
    5. ']]' → logprob: -16.00002098083496
    6. ' Stone' → logprob: -16.12502098083496
    7. '['' → logprob: -16.62502098083496
    8. '   ' → logprob: -17.00002098083496
    9. 'St' → logprob: -17.75002098083496
    10. '[[' → logprob: -17.87502098083496

Token 119: 'Stone' (ID: 56062)
  Prédit: 'Stone'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Stone' → logprob: -2.15310683415737e-05
    2. ' Stone' → logprob: -10.750021934509277
    3. '[' → logprob: -17.50002098083496
    4. ' stone' → logprob: -18.12502098083496
    5. 'stone' → logprob: -18.50002098083496
    6. '石' → logprob: -19.87502098083496
    7. ']' → logprob: -20.87502098083496
    8. 'St' → logprob: -21.00002098083496
    9. 'STONE' → logprob: -21.50002098083496
    10. '   ' → logprob: -21.75002098083496

Token 120: ']]]' (ID: 198030)
  Prédit: ']]]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]]' → logprob: -0.00013798571308143437
    2. ']]' → logprob: -9.000138282775879
    3. ']' → logprob: -11.250138282775879
    4. ' ]' → logprob: -14.125138282775879
    5. ']])' → logprob: -15.250138282775879
    6. '])]' → logprob: -16.000137329101562
    7. '```' → logprob: -16.000137329101562
    8. '[' → logprob: -16.375137329101562
    9. '>' → logprob: -16.375137329101562
    10. '>>>' → logprob: -16.875137329101562

Token 121: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3133106827735901
    2. '=' → logprob: -1.3133106231689453
    3. ']' → logprob: -10.563310623168945
    4. ' ' → logprob: -11.938310623168945
    5. '=[]' → logprob: -12.438310623168945
    6. ')' → logprob: -13.063310623168945
    7. ']=' → logprob: -13.313310623168945
    8. '[' → logprob: -13.313310623168945
    9. ' =[' → logprob: -13.438310623168945
    10. '<|end|>' → logprob: -13.688310623168945

Token 122: ' [
' (ID: 4240)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.14115895330905914
    2. ' [[' → logprob: -2.2661590576171875
    3. '[
' → logprob: -4.2661590576171875
    4. '[' → logprob: -4.6411590576171875
    5. ' [
' → logprob: -6.3911590576171875
    6. '[]' → logprob: -6.6411590576171875
    7. ' [' → logprob: -6.7661590576171875
    8. ' []' → logprob: -9.266159057617188
    9. '[]
' → logprob: -11.516159057617188
    10. ' [[]' → logprob: -12.266159057617188

Token 123: '           ' (ID: 352)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01515390444546938
    2. '[
' → logprob: -4.890153884887695
    3. ' [' → logprob: -5.390153884887695
    4. '           ' → logprob: -5.890153884887695
    5. '   ' → logprob: -10.015153884887695
    6. '       ' → logprob: -10.265153884887695
    7. '[List' → logprob: -10.390153884887695
    8. '               ' → logprob: -10.890153884887695
    9. ' [
' → logprob: -11.140153884887695
    10. '[self' → logprob: -11.140153884887695

Token 124: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' (adapté à ' [') → logprob: -0.007108182646334171
    2. '[
' → logprob: -5.382108211517334
    3. ' [' → logprob: -6.382108211517334
    4. '           ' → logprob: -7.257108211517334
    5. 'Stone' → logprob: -10.382107734680176
    6. '[self' → logprob: -10.882107734680176
    7. '               ' → logprob: -11.757107734680176
    8. '[List' → logprob: -12.507107734680176
    9. '[(' → logprob: -12.632107734680176
    10. '[[' → logprob: -12.757107734680176

Token 125: 'Stone' (ID: 56062)
  Prédit: 'Stone'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Stone' → logprob: -0.003514667972922325
    2. 'None' → logprob: -6.128514766693115
    3. ' Stone' → logprob: -6.628514766693115
    4. '(' → logprob: -12.878514289855957
    5. '   ' → logprob: -13.503514289855957
    6. ' None' → logprob: -14.003514289855957
    7. 'St' → logprob: -14.128514289855957
    8. '(None' → logprob: -14.753514289855957
    9. '       ' → logprob: -15.878514289855957
    10. '           ' → logprob: -16.253515243530273

Token 126: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.2873959541320801
    2. '(num' → logprob: -1.66239595413208
    3. '(cell' → logprob: -3.91239595413208
    4. '(n' → logprob: -4.03739595413208
    5. '(value' → logprob: -4.41239595413208
    6. '(val' → logprob: -5.28739595413208
    7. '(row' → logprob: -5.91239595413208
    8. '(' → logprob: -7.28739595413208
    9. '(x' → logprob: -7.41239595413208
    10. '(c' → logprob: -8.037395477294922

Token 127: ')' (ID: 8)
  Prédit: 'igit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igit' → logprob: -0.20210672914981842
    2. ')' → logprob: -1.7021067142486572
    3. 'ig' → logprob: -8.827106475830078
    4. '[i' → logprob: -9.577106475830078
    5. '   ' → logprob: -9.952106475830078
    6. ')]' → logprob: -10.077106475830078
    7. 'igt' → logprob: -10.327106475830078
    8. 'igits' → logprob: -10.452106475830078
    9. ' for' → logprob: -10.577106475830078
    10. 'ight' → logprob: -10.577106475830078

Token 128: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1932804584503174
    2. ' for' → logprob: -1.1932804584503174
    3. ' if' → logprob: -1.5682804584503174
    4. '(d' → logprob: -2.1932804584503174
    5. '(row' → logprob: -3.6932804584503174
    6. '(cell' → logprob: -4.318280220031738
    7. 'if' → logprob: -4.568280220031738
    8. '           ' → logprob: -4.943280220031738
    9. 'for' → logprob: -5.318280220031738
    10. '               ' → logprob: -5.318280220031738

Token 129: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.025368379428982735
    2. ' row' → logprob: -4.0253682136535645
    3. 'd' → logprob: -5.4003682136535645
    4. ' col' → logprob: -6.7753682136535645
    5. ' cell' → logprob: -7.2753682136535645
    6. ' digit' → logprob: -7.9003682136535645
    7. ' r' → logprob: -8.775368690490723
    8. 'row' → logprob: -9.025368690490723
    9. ' val' → logprob: -9.525368690490723
    10. 'digit' → logprob: -11.150368690490723

Token 130: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02206772193312645
    2. 'row' → logprob: -4.772067546844482
    3. 'in' → logprob: -4.897067546844482
    4. ' row' → logprob: -5.272067546844482
    5. 'd' → logprob: -7.522067546844482
    6. ' d' → logprob: -8.89706802368164
    7. ' ' → logprob: -10.39706802368164
    8. 'rows' → logprob: -11.39706802368164
    9. '       ' → logprob: -12.39706802368164
    10. ')' → logprob: -12.64706802368164

Token 131: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.11333993077278137
    2. ' row' → logprob: -2.363339900970459
    3. 'r' → logprob: -4.363339900970459
    4. ' r' → logprob: -8.113340377807617
    5. 'rows' → logprob: -12.113340377807617
    6. ' ' → logprob: -13.238340377807617
    7. '	row' → logprob: -13.863340377807617
    8. 'col' → logprob: -13.988340377807617
    9. '   ' → logprob: -14.238340377807617
    10. 'range' → logprob: -14.613340377807617

Token 132: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0014433303149417043
    2. ' ]' → logprob: -7.251443386077881
    3. ']
' → logprob: -7.376443386077881
    4. '       ' → logprob: -9.251442909240723
    5. '   ' → logprob: -12.001442909240723
    6. ']

' → logprob: -13.376442909240723
    7. ' ]
' → logprob: -13.626442909240723
    8. '           ' → logprob: -14.001442909240723
    9. ']
' → logprob: -14.376442909240723
    10. '    ' → logprob: -14.501442909240723

Token 133: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.22131314873695374
    2. '           ' → logprob: -2.096313238143921
    3. 'for' → logprob: -2.721313238143921
    4. ']' → logprob: -5.346312999725342
    5. '       ' → logprob: -6.221312999725342
    6. ' in' → logprob: -6.596312999725342
    7. ' if' → logprob: -7.096312999725342
    8. '               ' → logprob: -7.846312999725342
    9. '            ' → logprob: -8.8463134765625
    10. ' ]' → logprob: -9.4713134765625

Token 134: ' row' (ID: 5225)
  Prédit: 'rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rows' → logprob: -0.5759527087211609
    2. ' rows' → logprob: -0.8259527087211609
    3. '	rows' → logprob: -11.825952529907227
    4. '(rows' → logprob: -12.200952529907227
    5. 'row' → logprob: -14.825952529907227
    6. '_rows' → logprob: -15.075952529907227
    7. '.rows' → logprob: -16.075952529907227
    8. '
' → logprob: -16.825952529907227
    9. ' row' → logprob: -16.825952529907227
    10. '   ' → logprob: -17.825952529907227

Token 135: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004448870196938515
    2. '<|end|>' → logprob: -6.004448890686035
    3. 'in' → logprob: -6.379448890686035
    4. 'rows' → logprob: -8.629448890686035
    5. '(rows' → logprob: -10.004448890686035
    6. '<|end|>' → logprob: -10.879448890686035
    7. ' rows' → logprob: -11.254448890686035
    8. ' ' → logprob: -12.254448890686035
    9. 's' → logprob: -12.254448890686035
    10. ']' → logprob: -13.129448890686035

Token 136: ' rows' (ID: 13585)
  Prédit: 'rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rows' → logprob: -0.008619658648967743
    2. ' rows' → logprob: -4.758619785308838
    3. '(rows' → logprob: -12.63361930847168
    4. '	rows' → logprob: -13.50861930847168
    5. 'range' → logprob: -15.75861930847168
    6. '
' → logprob: -16.00861930847168
    7. '   ' → logprob: -16.38361930847168
    8. '_rows' → logprob: -17.00861930847168
    9. '.rows' → logprob: -17.25861930847168
    10. '       ' → logprob: -17.75861930847168

Token 137: '
' (ID: 198)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0014273790875449777
    2. '       ' → logprob: -6.876427173614502
    3. '
' → logprob: -8.50142765045166
    4. '   ' → logprob: -9.00142765045166
    5. ' ]' → logprob: -10.00142765045166
    6. ']
' → logprob: -11.50142765045166
    7. '<|end|>' → logprob: -12.50142765045166
    8. '           ' → logprob: -13.00142765045166
    9. '
' → logprob: -13.12642765045166
    10. ')' → logprob: -13.62642765045166

Token 138: '       ' (ID: 309)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10053282976150513
    2. '       ' → logprob: -2.3505327701568604
    3. '   ' → logprob: -8.475532531738281
    4. ' ]' → logprob: -9.600532531738281
    5. '<|end|>' → logprob: -10.350532531738281
    6. ')' → logprob: -12.225532531738281
    7. '
' → logprob: -12.725532531738281
    8. '<|end|>' → logprob: -12.975532531738281
    9. ']
' → logprob: -13.350532531738281
    10. '           ' → logprob: -13.475532531738281

Token 139: ' ]
' (ID: 10213)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0009707756689749658
    2. '       ' → logprob: -7.000970840454102
    3. '   ' → logprob: -9.875970840454102
    4. ' ]' → logprob: -11.875970840454102
    5. ']
' (adapté à ' ]
') → logprob: -14.375970840454102
    6. '           ' → logprob: -15.875970840454102
    7. ']

' → logprob: -16.1259708404541
    8. '}' → logprob: -17.3759708404541
    9. '	' → logprob: -17.6259708404541
    10. ')' → logprob: -17.7509708404541

Token 140: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 141: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.27265095710754395
    2. '<|end|>' → logprob: -2.397650957107544
    3. '       ' → logprob: -2.647650957107544
    4. '   ' → logprob: -3.522650957107544
    5. 'def' → logprob: -3.647650957107544
    6. ' self' → logprob: -4.147650718688965
    7. '
' → logprob: -6.397650718688965
    8. '```' → logprob: -6.647650718688965
    9. 'for' → logprob: -7.272650718688965
    10. '<|end|>' → logprob: -7.522650718688965

Token 142: '.score' (ID: 42441)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.1230658292770386
    2. '.score' → logprob: -1.4980658292770386
    3. '.rows' → logprob: -2.873065948486328
    4. '.dis' → logprob: -2.873065948486328
    5. '.selected' → logprob: -3.748065948486328
    6. '.columns' → logprob: -3.873065948486328
    7. '.st' → logprob: -3.873065948486328
    8. '.chain' → logprob: -3.873065948486328
    9. '.rem' → logprob: -3.998065948486328
    10. '.positions' → logprob: -4.123065948486328

Token 143: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02117665857076645
    2. '=' → logprob: -3.89617657661438
    3. ':' → logprob: -7.396176815032959
    4. 's' → logprob: -11.6461763381958
    5. ' ' → logprob: -11.8961763381958
    6. '  ' → logprob: -13.5211763381958
    7. '   ' → logprob: -13.5211763381958
    8. ':int' → logprob: -14.5211763381958
    9. '<|end|>' → logprob: -15.0211763381958
    10. ' :' → logprob: -15.0211763381958

Token 144: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004087543580681086
    2. ' ' → logprob: -5.504087448120117
    3. '[]' → logprob: -12.129087448120117
    4. '{}' → logprob: -13.629087448120117
    5. '[' → logprob: -14.004087448120117
    6. '{' → logprob: -15.004087448120117
    7. ' [' → logprob: -15.504087448120117
    8. '[]
' → logprob: -15.629087448120117
    9. ' []' → logprob: -15.941587448120117
    10. ' defaultdict' → logprob: -16.129087448120117

Token 145: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.9160102712921798e-05
    2. '[]' → logprob: -11.125029563903809
    3. ' ' → logprob: -11.750029563903809
    4. '{}' → logprob: -12.750029563903809
    5. '[' → logprob: -14.125029563903809
    6. 'set' → logprob: -14.500029563903809
    7. '{' → logprob: -14.500029563903809
    8. 'None' → logprob: -15.000029563903809
    9. '[]
' → logprob: -15.750029563903809
    10. 'default' → logprob: -16.312528610229492

Token 146: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 147: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 148: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.007858346216380596
    2. ' def' → logprob: -5.1328582763671875
    3. '   ' → logprob: -6.2578582763671875
    4. '

' → logprob: -12.257858276367188
    5. '
' → logprob: -12.757858276367188
    6. ' ' → logprob: -13.257858276367188
    7. '    
' → logprob: -14.382858276367188
    8. 'de' → logprob: -14.507858276367188
    9. 'class' → logprob: -14.882858276367188
    10. '@property' → logprob: -15.132858276367188

Token 149: ' _' (ID: 1175)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' find' → logprob: -1.0219749212265015
    2. ' remove' → logprob: -1.3969749212265015
    3. ' pop' → logprob: -2.146975040435791
    4. ' apply' → logprob: -3.021975040435791
    5. ' drop' → logprob: -3.271975040435791
    6. ' collapse' → logprob: -3.396975040435791
    7. ' place' → logprob: -3.771975040435791
    8. ' play' → logprob: -4.396975040435791
    9. ' clear' → logprob: -4.521975040435791
    10. ' get' → logprob: -4.646975040435791

Token 150: 'find' (ID: 6555)
  Prédit: 'find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -1.0784711837768555
    2. 'remove' → logprob: -2.0784711837768555
    3. 'get' → logprob: -2.5784711837768555
    4. 'apply' → logprob: -2.5784711837768555
    5. 'check' → logprob: -3.0784711837768555
    6. 'is' → logprob: -3.0784711837768555
    7. 'fall' → logprob: -3.4534711837768555
    8. 'clear' → logprob: -3.4534711837768555
    9. 'mark' → logprob: -3.5784711837768555
    10. 'can' → logprob: -3.8284711837768555

Token 151: '_ch' (ID: 8914)
  Prédit: '_matches'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_matches' → logprob: -0.7827683091163635
    2. '_groups' → logprob: -1.0327682495117188
    3. '_clusters' → logprob: -2.9077682495117188
    4. '_ch' → logprob: -3.2827682495117188
    5. '_group' → logprob: -3.6577682495117188
    6. '_connected' → logprob: -3.9077682495117188
    7. '_cluster' → logprob: -4.282768249511719
    8. '_chain' → logprob: -4.407768249511719
    9. '_matching' → logprob: -4.782768249511719
    10. '_match' → logprob: -5.032768249511719

Token 152: 'ains' (ID: 2352)
  Prédit: 'ains'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ains' → logprob: -0.03247116506099701
    2. 'ain' → logprob: -3.782471179962158
    3. 'e' → logprob: -5.282471179962158
    4. 'ained' → logprob: -6.407471179962158
    5. 'unks' → logprob: -7.282471179962158
    6. 'aining' → logprob: -7.657471179962158
    7. '_' → logprob: -8.532470703125
    8. 'a' → logprob: -8.657470703125
    9. 'aines' → logprob: -9.157470703125
    10. 'o' → logprob: -9.532470703125

Token 153: '_to' (ID: 5089)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.002057119505479932
    2. '(' → logprob: -6.252057075500488
    3. 'self' → logprob: -9.127057075500488
    4. '(
' → logprob: -11.252057075500488
    5. '   ' → logprob: -13.127057075500488
    6. ' (' → logprob: -14.002057075500488
    7. ' self' → logprob: -14.127057075500488
    8. 's' → logprob: -14.252057075500488
    9. '       ' → logprob: -15.002057075500488
    10. '<|end|>' → logprob: -15.002057075500488

Token 154: '_dis' (ID: 15018)
  Prédit: '_remove'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_remove' → logprob: -0.20699553191661835
    2. '_break' → logprob: -2.9569954872131348
    3. '_pop' → logprob: -3.2069954872131348
    4. '_clear' → logprob: -3.3319954872131348
    5. '_' → logprob: -4.081995487213135
    6. '_dis' → logprob: -4.456995487213135
    7. '_destroy' → logprob: -4.956995487213135
    8. '_el' → logprob: -5.581995487213135
    9. '_delete' → logprob: -5.706995487213135
    10. '_ex' → logprob: -5.956995487213135

Token 155: 'appear' (ID: 61410)
  Prédit: 'appear'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'appear' → logprob: -0.0014180884463712573
    2. 'ap' → logprob: -6.751418113708496
    3. 'is' → logprob: -9.376418113708496
    4. 'appe' → logprob: -9.876418113708496
    5. '```' → logprob: -10.126418113708496
    6. 'app' → logprob: -10.626418113708496
    7. 'able' → logprob: -11.126418113708496
    8. 'apper' → logprob: -11.251418113708496
    9. 'p' → logprob: -12.626418113708496
    10. 'appearance' → logprob: -13.376418113708496

Token 156: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0036014977376908064
    2. '(' → logprob: -5.753601551055908
    3. 'self' → logprob: -8.00360107421875
    4. ' (' → logprob: -9.62860107421875
    5. '(
' → logprob: -11.87860107421875
    6. '()' → logprob: -11.87860107421875
    7. '(s' → logprob: -13.12860107421875
    8. 's' → logprob: -13.50360107421875
    9. '   ' → logprob: -13.62860107421875
    10. ' self' → logprob: -13.87860107421875

Token 157: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6527875661849976
    2. 'self' → logprob: -1.4027875661849976
    3. ',' → logprob: -1.5277875661849976
    4. '):' → logprob: -4.152787685394287
    5. '):
' → logprob: -8.527787208557129
    6. ' self' → logprob: -8.652787208557129
    7. '(self' → logprob: -9.027787208557129
    8. ')->' → logprob: -9.402787208557129
    9. ' ' → logprob: -10.152787208557129
    10. ' )' → logprob: -10.152787208557129

Token 158: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0035922329407185316
    2. '(' → logprob: -6.378592014312744
    3. 'self' → logprob: -6.753592014312744
    4. ' ->' → logprob: -7.628592014312744
    5. '->' → logprob: -8.628592491149902
    6. '       ' → logprob: -11.128592491149902
    7. '(
' → logprob: -11.628592491149902
    8. ' (' → logprob: -11.628592491149902
    9. '   ' → logprob: -11.753592491149902
    10. ':' → logprob: -12.003592491149902

Token 159: ' Set' (ID: 3957)
  Prédit: 'Set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Set' → logprob: -0.317868709564209
    2. 'List' → logprob: -1.317868709564209
    3. ' Set' → logprob: -5.817868709564209
    4. ' List' → logprob: -6.442868709564209
    5. 'None' → logprob: -11.317869186401367
    6. '   ' → logprob: -11.817869186401367
    7. '	Set' → logprob: -12.192869186401367
    8. 'Optional' → logprob: -13.442869186401367
    9. '	List' → logprob: -13.692869186401367
    10. ' ' → logprob: -14.192869186401367

Token 160: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.759734732331708e-05
    2. '[
' → logprob: -12.000017166137695
    3. '[List' → logprob: -12.250017166137695
    4. '[(' → logprob: -12.500017166137695
    5. '[int' → logprob: -14.125017166137695
    6. 'Tuple' → logprob: -14.250017166137695
    7. '<Tuple' → logprob: -14.625017166137695
    8. '       ' → logprob: -15.000017166137695
    9. '```' → logprob: -15.375017166137695
    10. '[T' → logprob: -15.375017166137695

Token 161: 'Tuple' (ID: 40048)
  Prédit: 'Tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -5.44312788406387e-05
    2. ' Tuple' → logprob: -10.125054359436035
    3. 'int' → logprob: -12.125054359436035
    4. 'Stone' → logprob: -12.500054359436035
    5. 'Tu' → logprob: -13.125054359436035
    6. 'tuple' → logprob: -13.375054359436035
    7. 'Set' → logprob: -14.000054359436035
    8. 'List' → logprob: -14.875054359436035
    9. '.Tuple' → logprob: -16.75005531311035
    10. 'T' → logprob: -17.12505531311035

Token 162: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.00020520923135336488
    2. 'int' → logprob: -8.500205039978027
    3. '[' → logprob: -14.125205039978027
    4. '<int' → logprob: -14.875205039978027
    5. ',int' → logprob: -15.750205039978027
    6. '(int' → logprob: -16.000205993652344
    7. '[List' → logprob: -16.000205993652344
    8. ']int' → logprob: -16.500205993652344
    9. '[str' → logprob: -16.875205993652344
    10. ':int' → logprob: -17.000205993652344

Token 163: ',int' (ID: 20909)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0040939548052847385
    2. ',int' → logprob: -5.504094123840332
    3. ' ,' → logprob: -11.379094123840332
    4. ',bool' → logprob: -13.879094123840332
    5. '[int' → logprob: -14.004094123840332
    6. ',float' → logprob: -14.254094123840332
    7. ',List' → logprob: -14.504094123840332
    8. ',
' → logprob: -14.629094123840332
    9. ',Integer' → logprob: -15.879094123840332
    10. 'int' → logprob: -16.629093170166016

Token 164: ']]:
' (ID: 183340)
  Prédit: ']]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.023662129417061806
    2. ']]:
' → logprob: -3.7736620903015137
    3. ',' → logprob: -8.523662567138672
    4. ']' → logprob: -9.023662567138672
    5. ' ]' → logprob: -10.523662567138672
    6. ']:' → logprob: -11.273662567138672
    7. ']]]' → logprob: -11.523662567138672
    8. '>' → logprob: -12.023662567138672
    9. ']>' → logprob: -12.148662567138672
    10. '   ' → logprob: -12.148662567138672

Token 165: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07170437276363373
    2. '
' → logprob: -2.946704387664795
    3. '   ' → logprob: -5.071704387664795
    4. ':' → logprob: -5.446704387664795
    5. '        
' → logprob: -6.571704387664795
    6. '    
' → logprob: -7.196704387664795
    7. '  
' → logprob: -7.446704387664795
    8. '\n' → logprob: -7.571704387664795
    9. '<|end|>' → logprob: -7.696704387664795
    10. ' 
' → logprob: -7.821704387664795

Token 166: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05763906612992287
    2. 'positions' → logprob: -4.057639122009277
    3. 'chains' → logprob: -4.432639122009277
    4. 'found' → logprob: -4.682639122009277
    5. 'to' (adapté à ' to') → logprob: -5.182639122009277
    6. 'result' → logprob: -6.182639122009277
    7. 'coords' → logprob: -6.307639122009277
    8. 'chain' → logprob: -6.307639122009277
    9. 'ch' → logprob: -6.807639122009277
    10. 'cells' → logprob: -6.807639122009277

Token 167: '_dis' (ID: 15018)
  Prédit: '_dis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dis' → logprob: -0.11755575239658356
    2. '_remove' → logprob: -2.242555856704712
    3. '_visit' → logprob: -6.492555618286133
    4. '_check' → logprob: -6.867555618286133
    5. '_delete' → logprob: -7.617555618286133
    6. '_find' → logprob: -7.992555618286133
    7. '_' → logprob: -8.117555618286133
    8. '_return' → logprob: -8.617555618286133
    9. '_disconnect' → logprob: -9.117555618286133
    10. '_destroy' → logprob: -9.242555618286133

Token 168: 'appear' (ID: 61410)
  Prédit: 'appear'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'appear' → logprob: -5.3120038501219824e-05
    2. 'is' → logprob: -11.125053405761719
    3. 'ap' → logprob: -11.250053405761719
    4. 'app' → logprob: -11.250053405761719
    5. 'apper' → logprob: -12.000053405761719
    6. '```' → logprob: -13.500053405761719
    7. 'appe' → logprob: -13.625053405761719
    8. '=' → logprob: -13.750053405761719
    9. 'cover' → logprob: -14.250053405761719
    10. '
' → logprob: -15.625053405761719

Token 169: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014292788691818714
    2. '=' → logprob: -4.2642927169799805
    3. ':' → logprob: -9.51429271697998
    4. ' ' → logprob: -9.88929271697998
    5. '   ' → logprob: -13.63929271697998
    6. '  ' → logprob: -14.01429271697998
    7. ')' → logprob: -14.26429271697998
    8. ' :' → logprob: -14.51429271697998
    9. '_' → logprob: -15.01429271697998
    10. '    ' → logprob: -15.26429271697998

Token 170: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.0011708177626132965
    2. ' set' → logprob: -6.751170635223389
    3. '=set' → logprob: -15.251171112060547
    4. '{' → logprob: -15.501171112060547
    5. '	set' → logprob: -16.751171112060547
    6. '{}' → logprob: -16.876171112060547
    7. ' ' → logprob: -18.251171112060547
    8. '(set' → logprob: -18.501171112060547
    9. '   ' → logprob: -18.626171112060547
    10. ')set' → logprob: -19.626171112060547

Token 171: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.39127808809280396
    2. '()
' → logprob: -1.1412780284881592
    3. '       ' → logprob: -6.016278266906738
    4. '()\' → logprob: -6.766278266906738
    5. '()

' → logprob: -7.641278266906738
    6. '   ' → logprob: -8.891278266906738
    7. '
' → logprob: -9.266278266906738
    8. '()
' → logprob: -10.516278266906738
    9. '\n' → logprob: -11.641278266906738
    10. '(' → logprob: -11.891278266906738

Token 172: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1549379974603653
    2. '       ' → logprob: -2.029937982559204
    3. ' for' → logprob: -4.654938220977783
    4. 'for' → logprob: -7.029938220977783
    5. '   ' → logprob: -7.404938220977783
    6. '        
' → logprob: -7.529938220977783
    7. '<|end|>' → logprob: -8.654937744140625
    8. '
' → logprob: -8.904937744140625
    9. '    
' → logprob: -9.529937744140625
    10. '  
' → logprob: -9.654937744140625

Token 173: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.15351860225200653
    2. ' for' → logprob: -2.1535186767578125
    3. '       ' → logprob: -3.6535186767578125
    4. '#' → logprob: -8.528518676757812
    5. 'height' → logprob: -9.778518676757812
    6. ' directions' → logprob: -11.028518676757812
    7. 'dire' → logprob: -11.028518676757812
    8. 'rows' → logprob: -11.278518676757812
    9. 'visited' → logprob: -11.403518676757812
    10. 'h' → logprob: -12.403518676757812

Token 174: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.4464675188064575
    2. 'y' → logprob: -1.6964675188064575
    3. ' y' → logprob: -2.321467399597168
    4. ' r' → logprob: -2.946467399597168
    5. 'row' → logprob: -3.946467399597168
    6. ' row' → logprob: -5.696467399597168
    7. 'i' → logprob: -6.696467399597168
    8. 'x' → logprob: -6.946467399597168
    9. 'h' → logprob: -7.446467399597168
    10. '   ' → logprob: -8.196467399597168

Token 175: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002172862645238638
    2. 'in' → logprob: -6.377172946929932
    3. ',' → logprob: -7.877172946929932
    4. ' ' → logprob: -9.502172470092773
    5. ' ,' → logprob: -11.502172470092773
    6. ')' → logprob: -13.627172470092773
    7. '0' → logprob: -14.252172470092773
    8. '_' → logprob: -14.627172470092773
    9. 'n' → logprob: -15.002172470092773
    10. ',row' → logprob: -15.002172470092773

Token 176: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -5.991464786347933e-05
    2. ' range' → logprob: -9.750060081481934
    3. 'ange' → logprob: -13.500060081481934
    4. '   ' → logprob: -16.250059127807617
    5. '(range' → logprob: -18.500059127807617
    6. ' ' → logprob: -19.250059127807617
    7. '  ' → logprob: -19.750059127807617
    8. '	range' → logprob: -19.750059127807617
    9. '    ' → logprob: -19.875059127807617
    10. 'r' → logprob: -21.000059127807617

Token 177: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00523719098418951
    2. '(' → logprob: -5.255237102508545
    3. '(len' → logprob: -13.255237579345703
    4. 'self' → logprob: -14.255237579345703
    5. '1' → logprob: -14.380237579345703
    6. '(
' → logprob: -15.130237579345703
    7. '       ' → logprob: -16.755237579345703
    8. '(s' → logprob: -17.505237579345703
    9. '   ' → logprob: -19.130237579345703
    10. ' (' → logprob: -19.130237579345703

Token 178: '.height' (ID: 11682)
  Prédit: '.height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.height' → logprob: -5.264322317088954e-05
    2. 'height' → logprob: -10.250052452087402
    3. '.' → logprob: -11.250052452087402
    4. ' .' → logprob: -13.000052452087402
    5. '.width' → logprob: -13.875052452087402
    6. ').' → logprob: -14.750052452087402
    7. '.he' → logprob: -15.500052452087402
    8. '   ' → logprob: -16.00005340576172
    9. 'HEIGHT' → logprob: -16.75005340576172
    10. '	height' → logprob: -17.12505340576172

Token 179: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3873997628688812
    2. '):
' → logprob: -1.1373997926712036
    3. ' ):' → logprob: -8.387399673461914
    4. '   ' → logprob: -9.637399673461914
    5. '       ' → logprob: -9.637399673461914
    6. '):
' → logprob: -9.637399673461914
    7. ' ):
' → logprob: -9.637399673461914
    8. ')' → logprob: -10.637399673461914
    9. '):

' → logprob: -12.012399673461914
    10. ':' → logprob: -12.512399673461914

Token 180: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0292923916131258
    2. ' for' → logprob: -4.154292583465576
    3. '       ' → logprob: -4.404292583465576
    4. '   ' → logprob: -8.154292106628418
    5. 'for' → logprob: -8.279292106628418
    6. ',' → logprob: -8.654292106628418
    7. '               ' → logprob: -9.904292106628418
    8. ' ' → logprob: -10.154292106628418
    9. '	       ' → logprob: -10.654292106628418
    10. '        ' → logprob: -10.779292106628418

Token 181: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.40945708751678467
    2. 'for' → logprob: -1.1594570875167847
    3. ' for' → logprob: -4.409457206726074
    4. '           ' → logprob: -4.909457206726074
    5. '   ' → logprob: -6.659457206726074
    6. ' c' → logprob: -7.034457206726074
    7. '       ' → logprob: -7.409457206726074
    8. 'prev' → logprob: -11.784457206726074
    9. '    ' → logprob: -12.659457206726074
    10. '               ' → logprob: -12.909457206726074

Token 182: ' =' (ID: 314)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.09338489919900894
    2. 'in' → logprob: -2.4683849811553955
    3. '=' → logprob: -5.968384742736816
    4. ' =' → logprob: -6.468384742736816
    5. ' ' → logprob: -8.468384742736816
    6. ')' → logprob: -10.093384742736816
    7. '0' → logprob: -11.218384742736816
    8. '   ' → logprob: -11.468384742736816
    9. ',' → logprob: -11.843384742736816
    10. 'for' → logprob: -12.093384742736816

Token 183: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00011129142512800172
    2. ' ' → logprob: -9.12511157989502
    3. '1' → logprob: -13.37511157989502
    4. '           ' → logprob: -14.50011157989502
    5. '   ' → logprob: -16.375110626220703
    6. '       ' → logprob: -16.500110626220703
    7. '        ' → logprob: -17.125110626220703
    8. '         ' → logprob: -17.750110626220703
    9. '=' → logprob: -18.750110626220703
    10. '۰' → logprob: -18.750110626220703

Token 184: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.856408536899835e-05
    2. ' ' → logprob: -10.625028610229492
    3. '1' → logprob: -12.750028610229492
    4. '           ' → logprob: -14.125028610229492
    5. '   ' → logprob: -15.750028610229492
    6. '         ' → logprob: -15.937528610229492
    7. '       ' → logprob: -16.250028610229492
    8. 'r' → logprob: -16.875028610229492
    9. '        ' → logprob: -17.125028610229492
    10. '=' → logprob: -17.437528610229492

Token 185: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23975178599357605
    2. '
' → logprob: -2.1147518157958984
    3. '<|end|>' → logprob: -2.4897518157958984
    4. '<|end|>' → logprob: -5.364751815795898
    5. '       ' → logprob: -6.989751815795898
    6. 'while' → logprob: -6.989751815795898
    7. '            
' → logprob: -7.114751815795898
    8. ' 
' → logprob: -7.864751815795898
    9. ';' → logprob: -8.489751815795898
    10. ' while' → logprob: -8.614751815795898

Token 186: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 187: ' while' (ID: 2049)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.375754177570343
    2. 'while' (adapté à ' while') → logprob: -1.5007541179656982
    3. ' while' → logprob: -2.5007541179656982
    4. '
' → logprob: -5.750754356384277
    5. '       ' → logprob: -6.500754356384277
    6. '            ' → logprob: -7.500754356384277
    7. '<|end|>' → logprob: -7.625754356384277
    8. ',' → logprob: -7.875754356384277
    9. ';' → logprob: -8.000754356384277
    10. '          ' → logprob: -8.500754356384277

Token 188: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.2519380748271942
    2. ' c' → logprob: -1.5019381046295166
    3. 'True' → logprob: -12.376937866210938
    4. '(c' → logprob: -13.876937866210938
    5. '   ' → logprob: -14.376937866210938
    6. ' True' → logprob: -14.501937866210938
    7. ' ' → logprob: -14.501937866210938
    8. '<c' → logprob: -14.751937866210938
    9. ')c' → logprob: -15.251937866210938
    10. ' ' → logprob: -15.376937866210938

Token 189: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.018311945721507072
    2. '<' → logprob: -4.018311977386475
    3. ' ' → logprob: -9.268311500549316
    4. '<len' → logprob: -10.268311500549316
    5. '<c' → logprob: -11.518311500549316
    6. '<n' → logprob: -11.893311500549316
    7. ' <=' → logprob: -12.643311500549316
    8. '+' → logprob: -13.643311500549316
    9. ')' → logprob: -13.643311500549316
    10. 'c' → logprob: -13.768311500549316

Token 190: ' Board' (ID: 10837)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0005670914542861283
    2. ' self' → logprob: -7.5005669593811035
    3. 'Board' → logprob: -11.250567436218262
    4. '(self' → logprob: -14.750567436218262
    5. 'Self' → logprob: -15.625567436218262
    6. 'len' → logprob: -16.375566482543945
    7. '   ' → logprob: -16.500566482543945
    8. '5' → logprob: -16.625566482543945
    9. '       ' → logprob: -16.750566482543945
    10. '           ' → logprob: -16.750566482543945

Token 191: '.W' (ID: 2342)
  Prédit: '.W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.W' → logprob: -0.00229620561003685
    2. 'WIDTH' → logprob: -6.127295970916748
    3. '.' → logprob: -9.502296447753906
    4. ' .' → logprob: -10.627296447753906
    5. '_WIDTH' → logprob: -12.752296447753906
    6. '   ' → logprob: -12.877296447753906
    7. ' WIDTH' → logprob: -13.877296447753906
    8. ' ' → logprob: -13.877296447753906
    9. '._' → logprob: -14.002296447753906
    10. '
' → logprob: -14.002296447753906

Token 192: 'IDTH' (ID: 20688)
  Prédit: 'IDTH'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IDTH' → logprob: -1.7120533811976202e-05
    2. 'ID' → logprob: -11.000017166137695
    3. 'WIDTH' → logprob: -16.125017166137695
    4. 'ITH' → logprob: -16.375017166137695
    5. 'idth' → logprob: -16.875017166137695
    6. '   ' → logprob: -17.625017166137695
    7. '
' → logprob: -18.875017166137695
    8. 'D' → logprob: -19.250017166137695
    9. 'INDOW' → logprob: -20.000017166137695
    10. 'IDE' → logprob: -20.000017166137695

Token 193: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14335843920707703
    2. ':
' → logprob: -2.0183584690093994
    3. ' and' → logprob: -8.01835823059082
    4. '-' → logprob: -8.89335823059082
    5. 'and' → logprob: -9.26835823059082
    6. ' :' → logprob: -10.39335823059082
    7. '           ' → logprob: -10.64335823059082
    8. ' -' → logprob: -10.89335823059082
    9. ' :
' → logprob: -10.89335823059082
    10. '):
' → logprob: -11.01835823059082

Token 194: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008210519328713417
    2. '           ' → logprob: -5.0082106590271
    3. ':' → logprob: -8.508210182189941
    4. ':
' → logprob: -8.633210182189941
    5. ' if' → logprob: -8.758210182189941
    6. '
' → logprob: -8.758210182189941
    7. '```' → logprob: -8.883210182189941
    8. 'token' → logprob: -9.883210182189941
    9. ' and' → logprob: -10.008210182189941
    10. '                   ' → logprob: -10.133210182189941

Token 195: ' cur' (ID: 4396)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.015966568142175674
    2. 'count' → logprob: -4.765966415405273
    3. 'run' → logprob: -5.765966415405273
    4. 'length' → logprob: -6.515966415405273
    5. ' start' → logprob: -7.015966415405273
    6. '               ' → logprob: -7.515966415405273
    7. 'chain' → logprob: -7.515966415405273
    8. '                   ' → logprob: -8.265966415405273
    9. '   ' → logprob: -8.765966415405273
    10. 'end' → logprob: -9.015966415405273

Token 196: '_st' (ID: 2518)
  Prédit: '_digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digit' → logprob: -0.02576729655265808
    2. '_st' → logprob: -4.4007673263549805
    3. '_val' → logprob: -5.6507673263549805
    4. '_d' → logprob: -5.9007673263549805
    5. '               ' → logprob: -6.4007673263549805
    6. '_value' → logprob: -6.7757673263549805
    7. 'ent' → logprob: -7.0257673263549805
    8. 'digit' → logprob: -7.4007673263549805
    9. ' =' → logprob: -7.7757673263549805
    10. 'nt' → logprob: -8.02576732635498

Token 197: 'one' (ID: 690)
  Prédit: 'one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.001799173653125763
    2. 'ones' → logprob: -6.5017991065979
    3. 'r' → logprob: -9.251799583435059
    4. 'tone' → logprob: -9.376799583435059
    5. 'on' → logprob: -10.126799583435059
    6. '   ' → logprob: -11.626799583435059
    7. 'onec' → logprob: -12.126799583435059
    8. 'c' → logprob: -12.251799583435059
    9. 'stone' → logprob: -12.376799583435059
    10. 'ream' → logprob: -12.376799583435059

Token 198: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17992280423641205
    2. '=' → logprob: -1.8049228191375732
    3. ' ' → logprob: -8.929923057556152
    4. '   ' → logprob: -11.179923057556152
    5. ':' → logprob: -11.429923057556152
    6. '  ' → logprob: -12.054923057556152
    7. '    ' → logprob: -12.429923057556152
    8. '=None' → logprob: -13.304923057556152
    9. '.' → logprob: -13.554923057556152
    10. 'd' → logprob: -13.679923057556152

Token 199: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07897009700536728
    2. ' self' → logprob: -2.578970193862915
    3. '               ' → logprob: -10.578969955444336
    4. 'None' → logprob: -10.703969955444336
    5. '(self' → logprob: -11.078969955444336
    6. ' None' → logprob: -11.703969955444336
    7. '                   ' → logprob: -12.453969955444336
    8. '           ' → logprob: -13.328969955444336
    9. '
' → logprob: -14.078969955444336
    10. ' ' → logprob: -14.328969955444336

Token 200: '.grid' (ID: 19269)
  Prédit: '.grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.grid' → logprob: -0.00018911674851551652
    2. '.' → logprob: -8.625188827514648
    3. ' .' → logprob: -11.625188827514648
    4. '   ' → logprob: -15.875188827514648
    5. 'grid' → logprob: -16.50018882751465
    6. ').' → logprob: -16.50018882751465
    7. '
' → logprob: -16.75018882751465
    8. '.board' → logprob: -17.12518882751465
    9. '       ' → logprob: -17.37518882751465
    10. '.get' → logprob: -17.87518882751465

Token 201: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -1.981667537620524e-06
    2. ' [' → logprob: -14.000001907348633
    3. 'r' → logprob: -14.750001907348633
    4. '[c' → logprob: -15.000001907348633
    5. '[' → logprob: -16.250001907348633
    6. ')[' → logprob: -16.500001907348633
    7. '][' → logprob: -17.000001907348633
    8. '[
' → logprob: -17.125001907348633
    9. '   ' → logprob: -18.000001907348633
    10. '[s' → logprob: -18.000001907348633

Token 202: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0001858982432167977
    2. '[c' → logprob: -8.8751859664917
    3. ']' → logprob: -10.2501859664917
    4. ' ][' → logprob: -11.7501859664917
    5. '[' → logprob: -14.0001859664917
    6. 'c' → logprob: -14.6251859664917
    7. '"][' → logprob: -14.7501859664917
    8. '   ' → logprob: -15.7501859664917
    9. '}[' → logprob: -16.125185012817383
    10. ''][' → logprob: -16.250185012817383

Token 203: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -8.061054359131958e-06
    2. ' c' → logprob: -11.750007629394531
    3. ')c' → logprob: -17.37500762939453
    4. '               ' → logprob: -18.25000762939453
    5. '_c' → logprob: -18.75000762939453
    6. '                   ' → logprob: -18.75000762939453
    7. '   ' → logprob: -18.75000762939453
    8. '
' → logprob: -19.00000762939453
    9. '	c' → logprob: -19.12500762939453
    10. '<|end|>' → logprob: -19.87500762939453

Token 204: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6207720637321472
    2. ']
' → logprob: -1.370772123336792
    3. ')' → logprob: -2.370772123336792
    4. ')
' → logprob: -2.495772123336792
    5. '])' → logprob: -3.745772123336792
    6. '])
' → logprob: -4.995771884918213
    7. '               ' → logprob: -6.495771884918213
    8. '           ' → logprob: -8.495772361755371
    9. '                   ' → logprob: -9.120772361755371
    10. ' )
' → logprob: -9.245772361755371

Token 205: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.042158279567956924
    2. '<|end|>' → logprob: -4.417158126831055
    3. '                ' → logprob: -4.542158126831055
    4. ' if' → logprob: -4.792158126831055
    5. '                
' → logprob: -5.292158126831055
    6. '<|end|>' → logprob: -6.667158126831055
    7. '                   ' → logprob: -7.167158126831055
    8. ' ' → logprob: -7.417158126831055
    9. '           ' → logprob: -7.667158126831055
    10. ')' → logprob: -7.917158126831055

Token 206: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.8436467051506042
    2. ' if' → logprob: -0.9686467051506042
    3. '               ' → logprob: -1.718646764755249
    4. 'count' → logprob: -4.84364652633667
    5. 'start' → logprob: -6.84364652633667
    6. 'length' → logprob: -7.21864652633667
    7. ' count' → logprob: -7.46864652633667
    8. ' length' → logprob: -8.218647003173828
    9. 'chain' → logprob: -9.593647003173828
    10. ' start' → logprob: -9.593647003173828

Token 207: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.05147818475961685
    2. ' cur' → logprob: -3.051478147506714
    3. 'not' → logprob: -6.176478385925293
    4. ' not' → logprob: -7.301478385925293
    5. '   ' → logprob: -9.551478385925293
    6. '(cur' → logprob: -10.926478385925293
    7. '           ' → logprob: -11.551478385925293
    8. ' ' → logprob: -11.551478385925293
    9. '	cur' → logprob: -11.676478385925293
    10. '               ' → logprob: -12.426478385925293

Token 208: '_st' (ID: 2518)
  Prédit: '_st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -5.383526149671525e-05
    2. '_dis' → logprob: -11.000053405761719
    3. '_' → logprob: -11.250053405761719
    4. 'st' → logprob: -12.375053405761719
    5. '_is' → logprob: -12.500053405761719
    6. 'cur' → logprob: -12.750053405761719
    7. 'is' → logprob: -13.250053405761719
    8. '.st' → logprob: -13.375053405761719
    9. '_cur' → logprob: -13.625053405761719
    10. '   ' → logprob: -13.625053405761719

Token 209: 'one' (ID: 690)
  Prédit: 'one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.0007936627953313291
    2. 'stone' → logprob: -7.37579345703125
    3. '   ' → logprob: -10.00079345703125
    4. 'ones' → logprob: -10.62579345703125
    5. '               ' → logprob: -11.25079345703125
    6. ' one' → logprob: -11.62579345703125
    7. '_one' → logprob: -11.62579345703125
    8. 'ione' → logprob: -12.00079345703125
    9. '_st' → logprob: -12.12579345703125
    10. '                   ' → logprob: -12.37579345703125

Token 210: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.2660960257053375
    2. 'is' → logprob: -1.5160959959030151
    3. ' and' → logprob: -4.391096115112305
    4. 'and' → logprob: -6.391096115112305
    5. ' ' → logprob: -13.266096115112305
    6. '.is' → logprob: -14.266096115112305
    7. '	is' → logprob: -14.641096115112305
    8. 'dis' → logprob: -16.141096115112305
    9. '==' → logprob: -16.391096115112305
    10. ')' → logprob: -16.391096115112305

Token 211: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.9628206491470337
    2. ' not' → logprob: -1.2128206491470337
    3. ' None' → logprob: -1.7128206491470337
    4. 'not' → logprob: -1.9628206491470337
    5. '(None' → logprob: -12.462821006774902
    6. 'none' → logprob: -13.212821006774902
    7. '   ' → logprob: -13.712821006774902
    8. ' ' → logprob: -13.962821006774902
    9. '_None' → logprob: -14.337821006774902
    10. 'Not' → logprob: -14.337821006774902

Token 212: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.007908493280410767
    2. 'or' → logprob: -5.507908344268799
    3. ':' → logprob: -6.257908344268799
    4. '                   ' → logprob: -7.132908344268799
    5. ':
' → logprob: -7.507908344268799
    6. '               ' → logprob: -8.132908821105957
    7. ' ' → logprob: -9.007908821105957
    8. ' and' → logprob: -9.882908821105957
    9. '   ' → logprob: -10.632908821105957
    10. '                ' → logprob: -10.882908821105957

Token 213: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.004078758880496025
    2. ' cur' → logprob: -5.5040788650512695
    3. '	cur' → logprob: -16.254077911376953
    4. 'c' → logprob: -16.754077911376953
    5. '   ' → logprob: -16.879077911376953
    6. ' ' → logprob: -16.879077911376953
    7. '(cur' → logprob: -18.754077911376953
    8. '[cur' → logprob: -19.629077911376953
    9. '.cur' → logprob: -19.754077911376953
    10. '  ' → logprob: -20.629077911376953

Token 214: '_st' (ID: 2518)
  Prédit: '_st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -7.421908958349377e-05
    2. '_dis' → logprob: -11.00007438659668
    3. '_.' → logprob: -11.37507438659668
    4. '_c' → logprob: -11.75007438659668
    5. '_' → logprob: -12.12507438659668
    6. 'c' → logprob: -12.25007438659668
    7. '.' → logprob: -12.37507438659668
    8. 'st' → logprob: -12.37507438659668
    9. '.st' → logprob: -12.62507438659668
    10. 'stone' → logprob: -12.87507438659668

Token 215: 'one' (ID: 690)
  Prédit: 'one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.05102664977312088
    2. '_' → logprob: -4.676026821136475
    3. 'ones' → logprob: -4.801026821136475
    4. 'oned' → logprob: -5.176026821136475
    5. 'appe' → logprob: -5.176026821136475
    6. '_dis' → logprob: -5.426026821136475
    7. '_one' → logprob: -6.176026821136475
    8. 'stone' → logprob: -6.426026821136475
    9. ' disappeared' → logprob: -6.426026821136475
    10. '   ' → logprob: -6.551026821136475

Token 216: '.dis' (ID: 8454)
  Prédit: '.dis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dis' → logprob: -1.1994775377388578e-05
    2. ' .' → logprob: -11.875012397766113
    3. '.' → logprob: -12.750012397766113
    4. '.disabled' → logprob: -14.125012397766113
    5. '.des' → logprob: -15.625012397766113
    6. '.has' → logprob: -16.000011444091797
    7. '.dead' → logprob: -16.000011444091797
    8. '.deleted' → logprob: -16.125011444091797
    9. '	dis' → logprob: -16.375011444091797
    10. 'dis' → logprob: -16.500011444091797

Token 217: 'appe' (ID: 15645)
  Prédit: 'appe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'appe' → logprob: -4.0126840758603066e-05
    2. 'app' → logprob: -10.625040054321289
    3. 'apper' → logprob: -11.625040054321289
    4. 'ape' → logprob: -13.250040054321289
    5. 'aper' → logprob: -13.750040054321289
    6. 'is' → logprob: -14.250040054321289
    7. '```' → logprob: -14.625040054321289
    8. ' appeared' → logprob: -14.875040054321289
    9. 'appear' → logprob: -14.875040054321289
    10. 'a' → logprob: -15.000040054321289

Token 218: 'ared' (ID: 2343)
  Prédit: 'ared'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ared' → logprob: -4.60414821645827e-06
    2. 'are' → logprob: -13.000004768371582
    3. 'aring' → logprob: -13.875004768371582
    4. 'ar' → logprob: -14.125004768371582
    5. 'ard' → logprob: -16.500003814697266
    6. '"' → logprob: -16.750003814697266
    7. '
' → logprob: -16.875003814697266
    8. '`' → logprob: -16.875003814697266
    9. '[' → logprob: -17.000003814697266
    10. '=' → logprob: -17.125003814697266

Token 219: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2735803425312042
    2. ':
' → logprob: -1.6485803127288818
    3. ' or' → logprob: -3.148580312728882
    4. '                   ' → logprob: -5.773580551147461
    5. '               ' → logprob: -7.773580551147461
    6. '   ' → logprob: -8.148580551147461
    7. '           ' → logprob: -9.398580551147461
    8. 'or' → logprob: -10.023580551147461
    9. '):
' → logprob: -10.273580551147461
    10. ' ' → logprob: -10.773580551147461

Token 220: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0028666856233030558
    2. '               ' → logprob: -6.127866744995117
    3. '                    ' → logprob: -9.002866744995117
    4. ':' → logprob: -9.252866744995117
    5. '                ' → logprob: -9.252866744995117
    6. '                    
' → logprob: -9.377866744995117
    7. '                       ' → logprob: -9.502866744995117
    8. ':
' → logprob: -9.627866744995117
    9. '                           ' → logprob: -10.502866744995117
    10. '           ' → logprob: -10.877866744995117

Token 221: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.13259893655776978
    2. '                   ' → logprob: -2.132598876953125
    3. ' c' → logprob: -5.257598876953125
    4. '                       ' → logprob: -7.882598876953125
    5. '               ' → logprob: -10.132598876953125
    6. '
' → logprob: -11.132598876953125
    7. '	c' → logprob: -12.757598876953125
    8. '   ' → logprob: -12.882598876953125
    9. '           ' → logprob: -13.132598876953125
    10. '                           ' → logprob: -13.382598876953125

Token 222: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.018284441903233528
    2. ' +=' → logprob: -4.018284320831299
    3. '                   ' → logprob: -9.018284797668457
    4. '+' → logprob: -12.393284797668457
    5. '=' → logprob: -12.393284797668457
    6. '               ' → logprob: -13.143284797668457
    7. '                       ' → logprob: -13.893284797668457
    8. ']+=' → logprob: -14.268284797668457
    9. '                    ' → logprob: -15.143284797668457
    10. '                           ' → logprob: -15.143284797668457

Token 223: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.8889261304575484e-06
    2. ' ' → logprob: -12.500003814697266
    3. '   ' → logprob: -16.375003814697266
    4. '           ' → logprob: -17.875003814697266
    5. '                   ' → logprob: -17.875003814697266
    6. '               ' → logprob: -18.125003814697266
    7. '```' → logprob: -19.375003814697266
    8. '                       ' → logprob: -20.250003814697266
    9. '
' → logprob: -20.750003814697266
    10. '       ' → logprob: -20.875003814697266

Token 224: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.000000953674316
    3. '   ' → logprob: -17.125001907348633
    4. '```' → logprob: -17.375001907348633
    5. '           ' → logprob: -18.250001907348633
    6. '               ' → logprob: -19.000001907348633
    7. '                   ' → logprob: -19.250001907348633
    8. '
' → logprob: -19.875001907348633
    9. '                       ' → logprob: -20.625001907348633
    10. '       ' → logprob: -20.625001907348633

Token 225: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.000994464149698615
    2. '               ' → logprob: -7.000994682312012
    3. '           ' → logprob: -10.500994682312012
    4. '                       ' → logprob: -11.000994682312012
    5. 'continue' → logprob: -11.250994682312012
    6. '
' → logprob: -11.375994682312012
    7. '                    
' → logprob: -12.250994682312012
    8. '```' → logprob: -13.250994682312012
    9. '                  ' → logprob: -13.500994682312012
    10. '   ' → logprob: -13.750994682312012

Token 226: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0003461905289441347
    2. '               ' → logprob: -8.250346183776855
    3. 'continue' → logprob: -9.500346183776855
    4. '           ' → logprob: -12.250346183776855
    5. '                       ' → logprob: -13.625346183776855
    6. '```' → logprob: -14.000346183776855
    7. '                  ' → logprob: -14.375346183776855
    8. ' continue' → logprob: -14.875346183776855
    9. 'd' → logprob: -14.875346183776855
    10. '		           ' → logprob: -15.000346183776855

Token 227: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.31412696838378906
    2. '                   ' → logprob: -1.314126968383789
    3. ' continue' → logprob: -7.189126968383789
    4. '               ' → logprob: -9.189126968383789
    5. '           ' → logprob: -12.689126968383789
    6. '	continue' → logprob: -13.564126968383789
    7. 'continu' → logprob: -13.939126968383789
    8. '
' → logprob: -14.189126968383789
    9. 'contin' → logprob: -14.189126968383789
    10. '                       ' → logprob: -14.439126968383789

Token 228: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005799580831080675
    2. '                
' → logprob: -7.625579833984375
    3. '
' → logprob: -10.125579833984375
    4. '```' → logprob: -11.875579833984375
    5. 'token' → logprob: -12.250579833984375
    6. '                    
' → logprob: -12.250579833984375
    7. '                   ' → logprob: -12.500579833984375
    8. '           ' → logprob: -12.750579833984375
    9. 'n' → logprob: -12.750579833984375
    10. ',' → logprob: -12.875579833984375

Token 229: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.13013139367103577
    2. 'start' → logprob: -2.755131483078003
    3. 'count' → logprob: -3.630131483078003
    4. ' start' → logprob: -4.130131244659424
    5. ' count' → logprob: -5.380131244659424
    6. 'length' → logprob: -5.755131244659424
    7. ' length' → logprob: -6.130131244659424
    8. 'next' → logprob: -6.380131244659424
    9. ' next' → logprob: -7.005131244659424
    10. '                
' → logprob: -7.505131244659424

Token 230: ' digit' (ID: 19181)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.5756997466087341
    2. 'count' → logprob: -1.325699806213379
    3. 'length' → logprob: -2.075699806213379
    4. '               ' → logprob: -3.575699806213379
    5. 'run' → logprob: -4.825699806213379
    6. 'chain' → logprob: -5.075699806213379
    7. ' length' → logprob: -6.200699806213379
    8. ' count' → logprob: -7.450699806213379
    9. ' start' → logprob: -7.450699806213379
    10. 'cnt' → logprob: -8.200699806213379

Token 231: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004826323129236698
    2. '=' → logprob: -5.379826545715332
    3. '   ' → logprob: -9.004826545715332
    4. ' ' → logprob: -11.004826545715332
    5. '_count' → logprob: -11.379826545715332
    6. '    ' → logprob: -11.629826545715332
    7. '_val' → logprob: -11.629826545715332
    8. '               ' → logprob: -11.754826545715332
    9. '  ' → logprob: -12.254826545715332
    10. '       ' → logprob: -12.254826545715332

Token 232: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.04858839511871338
    2. ' cur' → logprob: -3.048588275909424
    3. '   ' → logprob: -14.548588752746582
    4. '	cur' → logprob: -15.798588752746582
    5. '               ' → logprob: -16.048587799072266
    6. '           ' → logprob: -16.298587799072266
    7. ' ' → logprob: -16.423587799072266
    8. '(cur' → logprob: -16.923587799072266
    9. '[cur' → logprob: -17.298587799072266
    10. '                   ' → logprob: -17.298587799072266

Token 233: '_st' (ID: 2518)
  Prédit: '_st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -2.45848218582978e-06
    2. 'stone' → logprob: -13.25000286102295
    3. '               ' → logprob: -15.37500286102295
    4. 'st' → logprob: -15.37500286102295
    5. ' stone' → logprob: -17.625001907348633
    6. '           ' → logprob: -17.750001907348633
    7. '   ' → logprob: -17.875001907348633
    8. '_s' → logprob: -17.875001907348633
    9. 'Stone' → logprob: -17.875001907348633
    10. '-st' → logprob: -18.250001907348633

Token 234: 'one' (ID: 690)
  Prédit: 'one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -3.190178904333152e-05
    2. '_one' → logprob: -11.125031471252441
    3. ' one' → logprob: -12.375031471252441
    4. 'stone' → logprob: -12.875031471252441
    5. 'One' → logprob: -13.000031471252441
    6. 'ones' → logprob: -13.250031471252441
    7. '   ' → logprob: -13.375031471252441
    8. 'on' → logprob: -14.125031471252441
    9. 'oned' → logprob: -14.500031471252441
    10. 'ne' → logprob: -14.875031471252441

Token 235: '.d' (ID: 1380)
  Prédit: '.d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.d' → logprob: -0.00015419373812619597
    2. '.' → logprob: -9.000154495239258
    3. ' .' → logprob: -10.500154495239258
    4. '.token' → logprob: -12.750154495239258
    5. 'digit' → logprob: -15.375154495239258
    6. '.digital' → logprob: -17.375154495239258
    7. '
' → logprob: -17.500154495239258
    8. '.c' → logprob: -18.500154495239258
    9. ' ' → logprob: -18.625154495239258
    10. '	d' → logprob: -18.750154495239258

Token 236: 'igit' (ID: 16673)
  Prédit: 'igit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igit' → logprob: -6.704273118884885e-07
    2. 'digit' → logprob: -15.125000953674316
    3. '   ' → logprob: -16.25
    4. 'igits' → logprob: -16.375
    5. 'igital' → logprob: -17.375
    6. 'igi' → logprob: -17.375
    7. 'igt' → logprob: -17.5
    8. '
' → logprob: -17.5
    9. ' digit' → logprob: -17.625
    10. 'ig' → logprob: -18.0

Token 237: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0012788071762770414
    2. 'count' → logprob: -7.126278877258301
    3. 'start' → logprob: -8.6262788772583
    4. ',' → logprob: -8.7512788772583
    5. ',count' → logprob: -10.7512788772583
    6. ' count' → logprob: -10.8762788772583
    7. '                
' → logprob: -10.8762788772583
    8. 'length' → logprob: -11.1262788772583
    9. '                   ' → logprob: -11.6262788772583
    10. '           ' → logprob: -12.0012788772583

Token 238: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.045051444321870804
    2. 'count' → logprob: -3.670051336288452
    3. 'start' → logprob: -4.670051574707031
    4. 'length' → logprob: -5.545051574707031
    5. ' length' → logprob: -6.295051574707031
    6. ' count' → logprob: -6.295051574707031
    7. 'end' → logprob: -7.170051574707031
    8. ' start' → logprob: -7.795051574707031
    9. 'next' → logprob: -9.795051574707031
    10. 'n' → logprob: -9.795051574707031

Token 239: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' (adapté à ' start') → logprob: -0.3433791995048523
    2. 'length' → logprob: -1.843379259109497
    3. 'count' → logprob: -2.468379259109497
    4. '               ' → logprob: -3.343379259109497
    5. 'end' → logprob: -4.968379020690918
    6. 'run' → logprob: -5.718379020690918
    7. 'chain' → logprob: -7.093379020690918
    8. ' length' → logprob: -7.468379020690918
    9. ' start' → logprob: -8.343379020690918
    10. 'len' → logprob: -8.843379020690918

Token 240: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22738192975521088
    2. '=' → logprob: -1.602381944656372
    3. '_c' → logprob: -6.602381706237793
    4. '_idx' → logprob: -7.852381706237793
    5. '=c' → logprob: -9.352381706237793
    6. '_col' → logprob: -9.852381706237793
    7. '_pos' → logprob: -10.477381706237793
    8. 'c' → logprob: -10.727381706237793
    9. '_index' → logprob: -11.477381706237793
    10. '```' → logprob: -12.352381706237793

Token 241: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00861456897109747
    2. ' c' → logprob: -4.758614540100098
    3. '               ' → logprob: -16.633615493774414
    4. ')c' → logprob: -18.383615493774414
    5. '_c' → logprob: -18.508615493774414
    6. '                   ' → logprob: -18.633615493774414
    7. '
' → logprob: -19.008615493774414
    8. '	c' → logprob: -19.633615493774414
    9. '```' → logprob: -20.008615493774414
    10. 'r' → logprob: -20.008615493774414

Token 242: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00603568134829402
    2. 'c' → logprob: -5.381035804748535
    3. '
' → logprob: -7.506035804748535
    4. 'while' → logprob: -7.506035804748535
    5. '                
' → logprob: -9.256035804748535
    6. ' c' → logprob: -9.756035804748535
    7. '+' → logprob: -10.131035804748535
    8. '                   ' → logprob: -10.631035804748535
    9. ',' → logprob: -10.756035804748535
    10. '           ' → logprob: -10.756035804748535

Token 243: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00042923877481371164
    2. 'c' → logprob: -8.500429153442383
    3. 'while' → logprob: -8.875429153442383
    4. ' while' → logprob: -10.750429153442383
    5. ',' → logprob: -10.875429153442383
    6. '           ' → logprob: -11.000429153442383
    7. '                
' → logprob: -11.500429153442383
    8. '                   ' → logprob: -11.875429153442383
    9. ' c' → logprob: -12.750429153442383
    10. '              ' → logprob: -12.875429153442383

Token 244: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.5183942317962646
    2. '               ' → logprob: -1.0183942317962646
    3. 'c' → logprob: -3.1433942317962646
    4. 'count' → logprob: -9.268394470214844
    5. ' while' → logprob: -9.393394470214844
    6. '           ' → logprob: -11.518394470214844
    7. 'end' → logprob: -12.018394470214844
    8. '                ' → logprob: -12.768394470214844
    9. '                
' → logprob: -12.768394470214844
    10. '   ' → logprob: -13.018394470214844

Token 245: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0017196849221363664
    2. ' c' → logprob: -6.3767194747924805
    3. '(c' → logprob: -11.12671947479248
    4. '               ' → logprob: -13.87671947479248
    5. 'cur' → logprob: -14.87671947479248
    6. '   ' → logprob: -15.12671947479248
    7. ' (' → logprob: -15.12671947479248
    8. ' ' → logprob: -15.12671947479248
    9. '(
' → logprob: -15.50171947479248
    10. '                   ' → logprob: -15.50171947479248

Token 246: ' <' (ID: 464)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3882160186767578
    2. ' +' → logprob: -1.1382160186767578
    3. ' <' → logprob: -7.138216018676758
    4. '<' → logprob: -7.513216018676758
    5. ' ' → logprob: -13.513216018676758
    6. '<len' → logprob: -14.638216018676758
    7. '   ' → logprob: -14.888216018676758
    8. '[' → logprob: -15.138216018676758
    9. '＋' → logprob: -15.263216018676758
    10. ' +=' → logprob: -15.388216018676758

Token 247: ' Board' (ID: 10837)
  Prédit: 'Board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Board' → logprob: -0.20141461491584778
    2. ' Board' → logprob: -1.7014145851135254
    3. '   ' → logprob: -14.951415061950684
    4. '(Board' → logprob: -15.326415061950684
    5. 'self' → logprob: -15.451415061950684
    6. ' ' → logprob: -15.576415061950684
    7. '
' → logprob: -16.076414108276367
    8. '_board' → logprob: -16.951414108276367
    9. '.Board' → logprob: -16.951414108276367
    10. 'BOARD' → logprob: -17.076414108276367

Token 248: '.W' (ID: 2342)
  Prédit: '.W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.W' → logprob: -0.0003163969377055764
    2. ' .' → logprob: -8.125316619873047
    3. 'WIDTH' → logprob: -11.500316619873047
    4. '   ' → logprob: -12.125316619873047
    5. '.' → logprob: -13.500316619873047
    6. '	W' → logprob: -14.250316619873047
    7. ' ' → logprob: -14.625316619873047
    8. '       ' → logprob: -14.750316619873047
    9. '           ' → logprob: -15.625316619873047
    10. '  ' → logprob: -15.625316619873047

Token 249: 'IDTH' (ID: 20688)
  Prédit: 'IDTH'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IDTH' → logprob: -5.288163083605468e-05
    2. 'ID' → logprob: -10.000052452087402
    3. 'WIDTH' → logprob: -12.000052452087402
    4. 'idth' → logprob: -14.500052452087402
    5. '   ' → logprob: -15.125052452087402
    6. 'D' → logprob: -15.625052452087402
    7. 'IGHT' → logprob: -16.62505340576172
    8. '
' → logprob: -17.12505340576172
    9. 'ITH' → logprob: -17.37505340576172
    10. 'IDE' → logprob: -17.62505340576172

Token 250: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6932157874107361
    2. 'and' → logprob: -0.6932157874107361
    3. '               ' → logprob: -10.568215370178223
    4. '-' → logprob: -11.693215370178223
    5. '           ' → logprob: -11.943215370178223
    6. '   ' → logprob: -11.943215370178223
    7. '                   ' → logprob: -11.943215370178223
    8. ' ' → logprob: -12.443215370178223
    9. '              ' → logprob: -13.193215370178223
    10. ' -' → logprob: -13.318215370178223

Token 251: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04861700162291527
    2. ' self' → logprob: -3.173616886138916
    3. '                   ' → logprob: -5.548616886138916
    4. 'not' → logprob: -7.048616886138916
    5. '               ' → logprob: -7.423616886138916
    6. ' not' → logprob: -8.548617362976074
    7. '(self' → logprob: -10.923617362976074
    8. '                       ' → logprob: -11.298617362976074
    9. '                ' → logprob: -12.423617362976074
    10. '                 ' → logprob: -12.673617362976074

Token 252: '.grid' (ID: 19269)
  Prédit: '.grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.grid' → logprob: -2.117345684382599e-05
    2. '.' → logprob: -11.500020980834961
    3. 'grid' → logprob: -11.500020980834961
    4. ' .' → logprob: -14.500020980834961
    5. '[r' → logprob: -16.50002098083496
    6. ' grid' → logprob: -16.62502098083496
    7. '	grid' → logprob: -16.62502098083496
    8. '.
' → logprob: -17.25002098083496
    9. '   ' → logprob: -17.37502098083496
    10. '.r' → logprob: -17.50002098083496

Token 253: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -4.572941179503687e-05
    2. 'r' → logprob: -10.125045776367188
    3. '[' → logprob: -12.250045776367188
    4. ' [' → logprob: -15.000045776367188
    5. '[row' → logprob: -15.875045776367188
    6. ' r' → logprob: -16.500045776367188
    7. '[
' → logprob: -16.750045776367188
    8. '[m' → logprob: -17.375045776367188
    9. '[u' → logprob: -17.625045776367188
    10. '[s' → logprob: -17.625045776367188

Token 254: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.043054576963186264
    2. '[r' → logprob: -3.1680545806884766
    3. ')[' → logprob: -11.043054580688477
    4. 'r' → logprob: -11.793054580688477
    5. ' ][' → logprob: -11.918054580688477
    6. ']' → logprob: -12.043054580688477
    7. '[' → logprob: -12.043054580688477
    8. '[c' → logprob: -12.668054580688477
    9. '"][' → logprob: -13.043054580688477
    10. '}[' → logprob: -13.168054580688477

Token 255: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.9266199160483666e-05
    2. ' c' → logprob: -11.750019073486328
    3. 'r' → logprob: -12.125019073486328
    4. '][' → logprob: -12.875019073486328
    5. 'None' → logprob: -13.750019073486328
    6. '   ' → logprob: -14.500019073486328
    7. '[' → logprob: -14.750019073486328
    8. ']' → logprob: -14.875019073486328
    9. '[c' → logprob: -14.875019073486328
    10. '
' → logprob: -15.125019073486328

Token 256: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09367325156927109
    2. ' is' → logprob: -2.5936732292175293
    3. ')' → logprob: -4.593673229217529
    4. 'is' → logprob: -6.093673229217529
    5. '].' → logprob: -6.343673229217529
    6. '}' → logprob: -7.843673229217529
    7. '           ' → logprob: -10.093673706054688
    8. ').' → logprob: -10.718673706054688
    9. '               ' → logprob: -10.968673706054688
    10. 'and' → logprob: -11.093673706054688

Token 257: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.04924328252673149
    2. 'is' → logprob: -3.049243211746216
    3. '                   ' → logprob: -8.174242973327637
    4. 'and' → logprob: -8.424242973327637
    5. ' and' → logprob: -9.674242973327637
    6. '                       ' → logprob: -10.799242973327637
    7. '           ' → logprob: -10.924242973327637
    8. '               ' → logprob: -11.299242973327637
    9. '
' → logprob: -11.924242973327637
    10. '                               ' → logprob: -11.924242973327637

Token 258: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.01816597953438759
    2. ' not' → logprob: -4.0181660652160645
    3. '           ' → logprob: -12.268165588378906
    4. '               ' → logprob: -12.268165588378906
    5. '                   ' → logprob: -12.893165588378906
    6. 'cur' → logprob: -14.018165588378906
    7. '       ' → logprob: -14.393165588378906
    8. '   ' → logprob: -15.143165588378906
    9. '                       ' → logprob: -15.268165588378906
    10. '
' → logprob: -15.268165588378906

Token 259: ' None' (ID: 4662)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.5773484110832214
    2. 'None' → logprob: -0.8273484110832214
    3. ' not' → logprob: -6.952348232269287
    4. ' None' → logprob: -8.077348709106445
    5. 'cur' → logprob: -9.827348709106445
    6. '           ' → logprob: -10.827348709106445
    7. 'none' → logprob: -10.952348709106445
    8. 'Not' → logprob: -11.452348709106445
    9. '               ' → logprob: -11.827348709106445
    10. ' ' → logprob: -11.952348709106445

Token 260: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.10021670162677765
    2. 'and' → logprob: -2.3502166271209717
    3. '               ' → logprob: -11.97521686553955
    4. '                   ' → logprob: -13.35021686553955
    5. '                ' → logprob: -14.22521686553955
    6. ' ' → logprob: -14.60021686553955
    7. '	and' → logprob: -14.85021686553955
    8. '           ' → logprob: -15.35021686553955
    9. '                    ' → logprob: -15.97521686553955
    10. '                     ' → logprob: -16.475215911865234

Token 261: ' not' (ID: 625)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.012404865585267544
    2. 'not' → logprob: -4.887404918670654
    3. ' self' → logprob: -5.887404918670654
    4. '                   ' → logprob: -6.512404918670654
    5. '               ' → logprob: -8.262404441833496
    6. ' not' → logprob: -8.887404441833496
    7. '                       ' → logprob: -10.137404441833496
    8. '                ' → logprob: -11.137404441833496
    9. '                    ' → logprob: -11.387404441833496
    10. '           ' → logprob: -11.512404441833496

Token 262: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0009139667963609099
    2. ' self' → logprob: -7.000914096832275
    3. '               ' → logprob: -13.875913619995117
    4. '                   ' → logprob: -13.875913619995117
    5. '(self' → logprob: -14.875913619995117
    6. '           ' → logprob: -15.875913619995117
    7. '
' → logprob: -16.375913619995117
    8. '[self' → logprob: -17.500913619995117
    9. '                       ' → logprob: -17.625913619995117
    10. '	self' → logprob: -18.875913619995117

Token 263: '.grid' (ID: 19269)
  Prédit: '.grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.grid' → logprob: -0.0022000980097800493
    2. 'grid' → logprob: -6.127200126647949
    3. '.' → logprob: -11.87720012664795
    4. '.dis' → logprob: -12.75220012664795
    5. ' .' → logprob: -13.12720012664795
    6. '   ' → logprob: -14.37720012664795
    7. ' ' → logprob: -14.50220012664795
    8. '	grid' → logprob: -15.00220012664795
    9. ' grid' → logprob: -15.12720012664795
    10. 'dis' → logprob: -15.37720012664795

Token 264: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -1.981667537620524e-06
    2. 'r' → logprob: -14.000001907348633
    3. '[' → logprob: -14.250001907348633
    4. '   ' → logprob: -15.625001907348633
    5. '[row' → logprob: -16.000001907348633
    6. ' [' → logprob: -16.125001907348633
    7. '[
' → logprob: -17.500001907348633
    8. '[c' → logprob: -18.000001907348633
    9. '	r' → logprob: -18.250001907348633
    10. '][' → logprob: -18.625001907348633

Token 265: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.6828160285949707
    2. '[c' → logprob: -1.1828160285949707
    3. '[r' → logprob: -1.6828160285949707
    4. '[' → logprob: -6.557816028594971
    5. 'dis' → logprob: -7.432816028594971
    6. '           ' → logprob: -8.807815551757812
    7. '[row' → logprob: -9.557815551757812
    8. '       ' → logprob: -9.682815551757812
    9. 'c' → logprob: -9.807815551757812
    10. '               ' → logprob: -10.432815551757812

Token 266: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00025978617486543953
    2. 'dis' → logprob: -9.000259399414062
    3. '[c' → logprob: -9.125259399414062
    4. '[' → logprob: -10.875259399414062
    5. ' c' → logprob: -12.875259399414062
    6. '[r' → logprob: -13.250259399414062
    7. '   ' → logprob: -13.875259399414062
    8. '```' → logprob: -14.375259399414062
    9. 'r' → logprob: -14.750259399414062
    10. ' ' → logprob: -14.875259399414062

Token 267: '].' (ID: 1651)
  Prédit: '.dis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dis' → logprob: -2.9160102712921798e-05
    2. '.' → logprob: -11.500029563903809
    3. '].' → logprob: -11.750029563903809
    4. ' .' → logprob: -12.000029563903809
    5. ').' → logprob: -13.500029563903809
    6. '}.' → logprob: -14.000029563903809
    7. '.disabled' → logprob: -14.375029563903809
    8. '   ' → logprob: -15.125029563903809
    9. '[' → logprob: -15.375029563903809
    10. '           ' → logprob: -15.500029563903809

Token 268: 'dis' (ID: 4220)
  Prédit: 'dis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dis' → logprob: -5.240481914370321e-05
    2. '.dis' → logprob: -9.875052452087402
    3. ' disappeared' → logprob: -15.125052452087402
    4. '	dis' → logprob: -15.500052452087402
    5. '.' → logprob: -15.625052452087402
    6. '_dis' → logprob: -15.625052452087402
    7. ' ' → logprob: -17.250051498413086
    8. 'd' → logprob: -17.625051498413086
    9. ' dis' → logprob: -18.000051498413086
    10. '```' → logprob: -18.000051498413086

Token 269: 'appe' (ID: 15645)
  Prédit: 'appe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'appe' → logprob: -6.392202976712724e-06
    2. 'app' → logprob: -12.750006675720215
    3. '```' → logprob: -13.500006675720215
    4. 'apper' → logprob: -14.625006675720215
    5. 'appear' → logprob: -15.250006675720215
    6. '
' → logprob: -15.625006675720215
    7. ' appeared' → logprob: -15.750006675720215
    8. 'Appe' → logprob: -16.0000057220459
    9. 'ap' → logprob: -16.2500057220459
    10. '   ' → logprob: -16.5000057220459

Token 270: 'ared' (ID: 2343)
  Prédit: 'ared'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ared' → logprob: -4.961759259458631e-06
    2. 'are' → logprob: -13.375004768371582
    3. 'ar' → logprob: -13.875004768371582
    4. '   ' → logprob: -15.125004768371582
    5. 'red' → logprob: -15.125004768371582
    6. 'ased' → logprob: -15.500004768371582
    7. 'ated' → logprob: -15.625004768371582
    8. 'aring' → logprob: -15.625004768371582
    9. '
' → logprob: -15.750004768371582
    10. 'e' → logprob: -16.1250057220459

Token 271: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.3133317828178406
    2. ' and' → logprob: -1.3133318424224854
    3. '               ' → logprob: -10.313331604003906
    4. '                   ' → logprob: -11.063331604003906
    5. '           ' → logprob: -11.438331604003906
    6. ' ' → logprob: -11.938331604003906
    7. '                ' → logprob: -14.313331604003906
    8. '   ' → logprob: -14.313331604003906
    9. '            ' → logprob: -14.688331604003906
    10. '                 ' → logprob: -14.813331604003906

Token 272: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.019696466624736786
    2. ' self' → logprob: -4.019696235656738
    3. '                   ' → logprob: -6.644696235656738
    4. '                       ' → logprob: -9.019696235656738
    5. '               ' → logprob: -9.519696235656738
    6. '                           ' → logprob: -10.769696235656738
    7. '                               ' → logprob: -11.769696235656738
    8. '           ' → logprob: -12.394696235656738
    9. '   ' → logprob: -13.144696235656738
    10. '                                   ' → logprob: -13.144696235656738

Token 273: '.grid' (ID: 19269)
  Prédit: '.grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.grid' → logprob: -0.0003063838230445981
    2. 'grid' → logprob: -8.125306129455566
    3. ' .' → logprob: -12.750306129455566
    4. '[r' → logprob: -13.375306129455566
    5. '[c' → logprob: -13.500306129455566
    6. '   ' → logprob: -13.750306129455566
    7. ' grid' → logprob: -14.125306129455566
    8. '.' → logprob: -14.250306129455566
    9. '           ' → logprob: -14.500306129455566
    10. '.c' → logprob: -14.875306129455566

Token 274: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -6.704273118884885e-07
    2. 'r' → logprob: -15.125000953674316
    3. '[' → logprob: -15.250000953674316
    4. ' [' → logprob: -16.75
    5. '   ' → logprob: -17.125
    6. '[row' → logprob: -17.75
    7. '[
' → logprob: -18.5
    8. '	r' → logprob: -18.875
    9. '[c' → logprob: -19.25
    10. '(r' → logprob: -19.5

Token 275: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.02072896808385849
    2. '[r' → logprob: -3.8957290649414062
    3. '[c' → logprob: -9.270729064941406
    4. '[' → logprob: -10.520729064941406
    5. '           ' → logprob: -11.145729064941406
    6. '               ' → logprob: -11.770729064941406
    7. ']' → logprob: -12.020729064941406
    8. '[row' → logprob: -12.145729064941406
    9. 'r' → logprob: -12.270729064941406
    10. ' ][' → logprob: -12.395729064941406

Token 276: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.14385481178760529
    2. 'r' → logprob: -2.018854856491089
    3. '][' → logprob: -7.89385461807251
    4. '[r' → logprob: -8.268855094909668
    5. '[' → logprob: -8.518855094909668
    6. '   ' → logprob: -9.268855094909668
    7. '[c' → logprob: -9.393855094909668
    8. ' c' → logprob: -9.643855094909668
    9. ']' → logprob: -10.643855094909668
    10. ' ' → logprob: -11.143855094909668

Token 277: '].' (ID: 1651)
  Prédit: '.d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.d' → logprob: -0.005973827093839645
    2. '].' → logprob: -5.505973815917969
    3. '.' → logprob: -6.755973815917969
    4. '}.' → logprob: -7.880973815917969
    5. ' .' → logprob: -8.255973815917969
    6. ').' → logprob: -10.005973815917969
    7. '           ' → logprob: -11.255973815917969
    8. '   ' → logprob: -11.505973815917969
    9. '               ' → logprob: -12.005973815917969
    10. '       ' → logprob: -13.130973815917969

Token 278: 'digit' (ID: 78327)
  Prédit: 'digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digit' → logprob: -7.896309739408025e-07
    2. ' digit' → logprob: -14.875000953674316
    3. 'd' → logprob: -16.0
    4. 'digital' → logprob: -16.5
    5. '_digit' → logprob: -16.5
    6. '.' → logprob: -17.0
    7. '.d' → logprob: -17.0
    8. 'dig' → logprob: -18.0
    9. '-digit' → logprob: -18.5
    10. '   ' → logprob: -19.25

Token 279: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4740982949733734
    2. ' ==' → logprob: -0.9740983247756958
    3. '=' → logprob: -11.349098205566406
    4. ']==' → logprob: -12.224098205566406
    5. ')==' → logprob: -13.349098205566406
    6. '```' → logprob: -13.974098205566406
    7. '==
' → logprob: -13.974098205566406
    8. ')' → logprob: -14.599098205566406
    9. '===' → logprob: -15.349098205566406
    10. ']' → logprob: -15.474098205566406

Token 280: ' digit' (ID: 19181)
  Prédit: 'digit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digit' → logprob: -0.029752103611826897
    2. ' digit' → logprob: -3.529752016067505
    3. '   ' → logprob: -14.529751777648926
    4. 'd' → logprob: -14.779751777648926
    5. '
' → logprob: -15.154751777648926
    6. ' ' → logprob: -16.154752731323242
    7. '-digit' → logprob: -16.779752731323242
    8. '	d' → logprob: -16.779752731323242
    9. '_digit' → logprob: -16.779752731323242
    10. 'digital' → logprob: -17.029752731323242

Token 281: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.20919066667556763
    2. ':' → logprob: -1.7091906070709229
    3. '                   ' → logprob: -5.334190845489502
    4. '               ' → logprob: -6.334190845489502
    5. ':c' → logprob: -7.459190845489502
    6. '):
' → logprob: -8.709190368652344
    7. '   ' → logprob: -8.834190368652344
    8. '           ' → logprob: -9.334190368652344
    9. ' and' → logprob: -9.834190368652344
    10. '                       ' → logprob: -10.709190368652344

Token 282: '                   ' (ID: 699)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.30997633934020996
    2. '                   ' → logprob: -1.80997633934021
    3. 'c' → logprob: -2.30997633934021
    4. '   ' → logprob: -6.809976577758789
    5. '
' → logprob: -6.809976577758789
    6. '               ' → logprob: -7.684976577758789
    7. ' ' → logprob: -8.059976577758789
    8. ' 
' → logprob: -8.434976577758789
    9. '                    
' → logprob: -8.934976577758789
    10. '	c' → logprob: -9.934976577758789

Token 283: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.04859123006463051
    2. ' c' → logprob: -3.048591136932373
    3. '                   ' → logprob: -12.548591613769531
    4. '	c' → logprob: -15.548591613769531
    5. '   ' → logprob: -16.04859161376953
    6. ' ' → logprob: -16.92359161376953
    7. '               ' → logprob: -17.79859161376953
    8. '
' → logprob: -18.54859161376953
    9. '                       ' → logprob: -18.54859161376953
    10. '                    
' → logprob: -19.67359161376953

Token 284: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.03806065768003464
    2. ' +=' → logprob: -3.2880606651306152
    3. '+' → logprob: -10.913060188293457
    4. ']+=' → logprob: -14.163060188293457
    5. '=' → logprob: -16.288061141967773
    6. '   ' → logprob: -17.413061141967773
    7. ' +' → logprob: -18.163061141967773
    8. '+="' → logprob: -18.288061141967773
    9. '           ' → logprob: -18.538061141967773
    10. '+='' → logprob: -18.788061141967773

Token 285: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001398929744027555
    2. ' ' → logprob: -8.875140190124512
    3. '   ' → logprob: -19.125139236450195
    4. '```' → logprob: -19.500139236450195
    5. '
' → logprob: -21.750139236450195
    6. ' ' → logprob: -22.375139236450195
    7. '  ' → logprob: -22.875139236450195
    8. '۱' → logprob: -23.250139236450195
    9. '           ' → logprob: -23.500139236450195
    10. '１' → logprob: -23.500139236450195

Token 286: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '```' → logprob: -19.375001907348633
    4. '   ' → logprob: -21.375001907348633
    5. '۱' → logprob: -21.750001907348633
    6. '
' → logprob: -22.000001907348633
    7. '１' → logprob: -22.375001907348633
    8. '-' → logprob: -22.500001907348633
    9. '<|end|>' → logprob: -23.500001907348633
    10. '१' → logprob: -23.625001907348633

Token 287: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0004511685692705214
    2. '
' → logprob: -7.75045108795166
    3. '                
' → logprob: -11.25045108795166
    4. '           ' → logprob: -13.00045108795166
    5. '```' → logprob: -13.50045108795166
    6. 'if' → logprob: -14.12545108795166
    7. '              ' → logprob: -14.62545108795166
    8. '                

' → logprob: -14.87545108795166
    9. '

' → logprob: -15.00045108795166
    10. '                ' → logprob: -15.25045108795166

Token 288: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00021474185632541776
    2. 'if' → logprob: -9.125214576721191
    3. ' if' → logprob: -9.375214576721191
    4. '```' → logprob: -11.750214576721191
    5. '           ' → logprob: -12.000214576721191
    6. 'length' → logprob: -13.125214576721191
    7. '                
' → logprob: -13.875214576721191
    8. ' length' → logprob: -14.000214576721191
    9. '
' → logprob: -14.375214576721191
    10. '                   ' → logprob: -14.875214576721191

Token 289: ' length' (ID: 5517)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6753835678100586
    2. 'if' → logprob: -0.9253835678100586
    3. 'length' (adapté à ' length') → logprob: -2.4253835678100586
    4. ' if' → logprob: -5.675383567810059
    5. 'count' → logprob: -6.550383567810059
    6. ' length' → logprob: -6.675383567810059
    7. 'size' → logprob: -10.675383567810059
    8. 'end' → logprob: -11.050383567810059
    9. 'len' → logprob: -11.675383567810059
    10. 'num' → logprob: -11.800383567810059

Token 290: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12693114578723907
    2. '=' → logprob: -2.1269311904907227
    3. '>=' → logprob: -14.001931190490723
    4. ' ' → logprob: -14.251931190490723
    5. '=len' → logprob: -14.376931190490723
    6. '=end' → logprob: -14.376931190490723
    7. ' >=' → logprob: -14.876931190490723
    8. '＝' → logprob: -17.126930236816406
    9. '=size' → logprob: -17.126930236816406
    10. '=int' → logprob: -17.626930236816406

Token 291: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.20141372084617615
    2. ' c' → logprob: -1.7014137506484985
    3. '(c' → logprob: -15.076414108276367
    4. '               ' → logprob: -16.076414108276367
    5. '   ' → logprob: -16.576414108276367
    6. ' ' → logprob: -16.951414108276367
    7. '	c' → logprob: -18.076414108276367
    8. '                   ' → logprob: -19.201414108276367
    9. '
' → logprob: -19.576414108276367
    10. ' (' → logprob: -19.576414108276367

Token 292: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.03846188262104988
    2. '-' → logprob: -3.288461923599243
    3. '-start' → logprob: -7.788461685180664
    4. '<|end|>' → logprob: -13.413461685180664
    5. '   ' → logprob: -13.788461685180664
    6. '           ' → logprob: -14.163461685180664
    7. '>' → logprob: -14.413461685180664
    8. ' ' → logprob: -14.663461685180664
    9. '[start' → logprob: -15.288461685180664
    10. '```' → logprob: -15.288461685180664

Token 293: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.00015908108616713434
    2. ' start' → logprob: -8.75015926361084
    3. '1' → logprob: -14.37515926361084
    4. ' ' → logprob: -18.250158309936523
    5. '(start' → logprob: -20.250158309936523
    6. '               ' → logprob: -21.000158309936523
    7. '   ' → logprob: -21.500158309936523
    8. '[start' → logprob: -21.625158309936523
    9. '           ' → logprob: -22.500158309936523
    10. '	start' → logprob: -22.875158309936523

Token 294: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -9.722539834911004e-05
    2. ' if' → logprob: -9.750097274780273
    3. '<|end|>' → logprob: -11.125097274780273
    4. 'if' → logprob: -12.125097274780273
    5. '           ' → logprob: -12.125097274780273
    6. '                
' → logprob: -12.875097274780273
    7. '<|end|>' → logprob: -13.250097274780273
    8. '			' → logprob: -13.375097274780273
    9. '                   ' → logprob: -14.000097274780273
    10. ' ' → logprob: -14.250097274780273

Token 295: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.3425219549390022e-05
    2. 'if' → logprob: -12.00001335144043
    3. '           ' → logprob: -12.37501335144043
    4. ' if' → logprob: -13.25001335144043
    5. '```' → logprob: -14.25001335144043
    6. '                   ' → logprob: -15.50001335144043
    7. '                
' → logprob: -15.75001335144043
    8. '       ' → logprob: -16.62501335144043
    9. '   ' → logprob: -16.62501335144043
    10. '			' → logprob: -16.87501335144043

Token 296: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5792909264564514
    2. '               ' → logprob: -0.8292909264564514
    3. ' if' → logprob: -5.704290866851807
    4. '           ' → logprob: -11.579291343688965
    5. 'If' → logprob: -13.454291343688965
    6. '   ' → logprob: -14.329291343688965
    7. '
' → logprob: -14.579291343688965
    8. '```' → logprob: -14.704291343688965
    9. '                
' → logprob: -14.829291343688965
    10. '       ' → logprob: -14.954291343688965

Token 297: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.005234832875430584
    2. ' length' → logprob: -5.255234718322754
    3. '(length' → logprob: -14.755234718322754
    4. ' ' → logprob: -16.00523567199707
    5. 'ength' → logprob: -16.00523567199707
    6. '	length' → logprob: -16.00523567199707
    7. 'leng' → logprob: -16.13023567199707
    8. '   ' → logprob: -16.63023567199707
    9. '[length' → logprob: -17.25523567199707
    10. '3' → logprob: -17.50523567199707

Token 298: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.2014351636171341
    2. '>=' → logprob: -1.7014352083206177
    3. ' ' → logprob: -11.576435089111328
    4. ')>=' → logprob: -12.076435089111328
    5. ']>=' → logprob: -12.701435089111328
    6. '≥' → logprob: -14.076435089111328
    7. '   ' → logprob: -14.451435089111328
    8. '>' → logprob: -14.451435089111328
    9. ' ' → logprob: -14.826435089111328
    10. '3' → logprob: -15.326435089111328

Token 299: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0005573204252868891
    2. '2' → logprob: -7.5005574226379395
    3. ' ' → logprob: -13.000556945800781
    4. '4' → logprob: -13.375556945800781
    5. '   ' → logprob: -15.625556945800781
    6. '5' → logprob: -15.875556945800781
    7. 'three' → logprob: -16.25055694580078
    8. '
' → logprob: -17.12555694580078
    9. '```' → logprob: -17.50055694580078
    10. '

' → logprob: -17.75055694580078

Token 300: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00136368942912668
    2. '2' → logprob: -6.626363754272461
    3. '4' → logprob: -10.251363754272461
    4. '5' → logprob: -13.501363754272461
    5. ' ' → logprob: -14.876363754272461
    6. 'three' → logprob: -14.876363754272461
    7. '   ' → logprob: -16.62636375427246
    8. '３' → logprob: -17.56386375427246
    9. '```' → logprob: -17.62636375427246
    10. '`' → logprob: -17.87636375427246

Token 301: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2018774300813675
    2. ':' → logprob: -1.701877474784851
    3. '                   ' → logprob: -8.07687759399414
    4. '               ' → logprob: -9.70187759399414
    5. '           ' → logprob: -10.07687759399414
    6. ':
' → logprob: -10.32687759399414
    7. ' :
' → logprob: -12.07687759399414
    8. '):
' → logprob: -12.20187759399414
    9. '                       ' → logprob: -12.57687759399414
    10. ' :' → logprob: -14.07687759399414

Token 302: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.01691240631043911
    2. ' to' → logprob: -4.891912460327148
    3. ' for' → logprob: -5.516912460327148
    4. 'to' → logprob: -5.641912460327148
    5. 'for' → logprob: -7.266912460327148
    6. '               ' → logprob: -7.391912460327148
    7. '
' → logprob: -8.141912460327148
    8. '           ' → logprob: -9.641912460327148
    9. '                       ' → logprob: -11.766912460327148
    10. '                    
' → logprob: -11.891912460327148

Token 303: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.25093913078308105
    2. '                   ' → logprob: -2.125939130783081
    3. 'to' → logprob: -2.375939130783081
    4. '               ' → logprob: -5.00093936920166
    5. ' for' → logprob: -6.00093936920166
    6. ' to' → logprob: -8.50093936920166
    7. '           ' → logprob: -8.87593936920166
    8. '                       ' → logprob: -9.37593936920166
    9. '   ' → logprob: -10.75093936920166
    10. '
' → logprob: -11.50093936920166

Token 304: ' cc' (ID: 22988)
  Prédit: 'col'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.2770354449748993
    2. 'cc' → logprob: -2.2770354747772217
    3. 'i' → logprob: -2.6520354747772217
    4. 'pos' → logprob: -3.1520354747772217
    5. 'x' → logprob: -4.027035236358643
    6. ' col' → logprob: -5.777035236358643
    7. 'idx' → logprob: -6.777035236358643
    8. ' cc' → logprob: -6.777035236358643
    9. 'ci' → logprob: -7.277035236358643
    10. ' i' → logprob: -7.277035236358643

Token 305: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0430079810321331
    2. 'in' → logprob: -3.1680080890655518
    3. 'n' → logprob: -12.168007850646973
    4. ' ' → logprob: -14.293007850646973
    5. 's' → logprob: -14.418007850646973
    6. '	in' → logprob: -14.793007850646973
    7. '```' → logprob: -15.043007850646973
    8. 'In' → logprob: -15.043007850646973
    9. '   ' → logprob: -15.418007850646973
    10. '_in' → logprob: -15.543007850646973

Token 306: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -9.615255839889869e-05
    2. ' range' → logprob: -9.250096321105957
    3. '(range' → logprob: -23.00009536743164
    4. '	range' → logprob: -23.50009536743164
    5. 'Range' → logprob: -23.87509536743164
    6. '   ' → logprob: -23.87509536743164
    7. '_range' → logprob: -26.12509536743164
    8. ' ' → logprob: -26.50009536743164
    9. '
' → logprob: -27.25009536743164
    10. 'set' → logprob: -28.12509536743164

Token 307: '(start' (ID: 20008)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.3869568705558777
    2. '(start' → logprob: -1.1369569301605225
    3. ' start' → logprob: -9.386957168579102
    4. '(' → logprob: -14.011957168579102
    5. '	start' → logprob: -14.761957168579102
    6. '[start' → logprob: -15.011957168579102
    7. ' (' → logprob: -15.636957168579102
    8. '   ' → logprob: -15.886957168579102
    9. '=start' → logprob: -16.0119571685791
    10. ',start' → logprob: -16.3869571685791

Token 308: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00043460296001285315
    2. ' ,' → logprob: -7.750434398651123
    3. ',c' → logprob: -12.625434875488281
    4. 'c' → logprob: -14.625434875488281
    5. 'cc' → logprob: -16.12543487548828
    6. ' c' → logprob: -16.75043487548828
    7. ',
' → logprob: -17.87543487548828
    8. ' ' → logprob: -18.50043487548828
    9. ' cc' → logprob: -19.12543487548828
    10. '(cc' → logprob: -19.12543487548828

Token 309: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0008114131633192301
    2. ' c' → logprob: -7.125811576843262
    3. 'cc' → logprob: -12.625811576843262
    4. 'start' → logprob: -13.125811576843262
    5. '   ' → logprob: -14.125811576843262
    6. '           ' → logprob: -15.125811576843262
    7. ' ' → logprob: -15.875811576843262
    8. '               ' → logprob: -15.875811576843262
    9. ' start' → logprob: -16.625810623168945
    10. '       ' → logprob: -16.625810623168945

Token 310: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4743559956550598
    2. '):
' → logprob: -0.9743559956550598
    3. '):
' → logprob: -9.349355697631836
    4. ')' → logprob: -9.474355697631836
    5. ' ):' → logprob: -9.724355697631836
    6. ' ):
' → logprob: -10.224355697631836
    7. '):

' → logprob: -11.599355697631836
    8. '                       ' → logprob: -13.099355697631836
    9. '                   ' → logprob: -13.099355697631836
    10. ':' → logprob: -13.474355697631836

Token 311: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0965016633272171
    2. ' to' → logprob: -3.096501588821411
    3. 'to' → logprob: -3.096501588821411
    4. '                   ' → logprob: -6.47150182723999
    5. '                           ' → logprob: -11.596501350402832
    6. '   ' → logprob: -11.971501350402832
    7. '               ' → logprob: -11.971501350402832
    8. '       ' → logprob: -13.471501350402832
    9. '           ' → logprob: -13.471501350402832
    10. '                      ' → logprob: -13.846501350402832

Token 312: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' (adapté à ' to') → logprob: -3.523948907968588e-05
    2. ' to' → logprob: -10.750035285949707
    3. '                       ' → logprob: -12.000035285949707
    4. '                   ' → logprob: -12.250035285949707
    5. '               ' → logprob: -13.500035285949707
    6. '                           ' → logprob: -13.750035285949707
    7. '           ' → logprob: -15.750035285949707
    8. '   ' → logprob: -16.12503433227539
    9. '                               ' → logprob: -17.75003433227539
    10. '                      ' → logprob: -18.25003433227539

Token 313: '_dis' (ID: 15018)
  Prédit: '_dis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dis' → logprob: -0.0025751865468919277
    2. 'dis' → logprob: -6.252575397491455
    3. '.dis' → logprob: -7.502575397491455
    4. 'to' → logprob: -9.627574920654297
    5. '.' → logprob: -11.002574920654297
    6. '	dis' → logprob: -12.502574920654297
    7. '.append' → logprob: -13.002574920654297
    8. '_to' → logprob: -13.502574920654297
    9. 'Dis' → logprob: -13.752574920654297
    10. '.Dis' → logprob: -13.877574920654297

Token 314: 'appear' (ID: 61410)
  Prédit: 'appear'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'appear' → logprob: -0.002081620506942272
    2. 'dis' → logprob: -6.752081394195557
    3. 'is' → logprob: -7.252081394195557
    4. 'apper' → logprob: -10.002081871032715
    5. 'ap' → logprob: -10.502081871032715
    6. 'ar' → logprob: -10.502081871032715
    7. 'app' → logprob: -10.752081871032715
    8. '_dis' → logprob: -10.752081871032715
    9. 's' → logprob: -11.002081871032715
    10. 'isper' → logprob: -11.627081871032715

Token 315: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -4.23917081207037e-05
    2. '.' → logprob: -10.125041961669922
    3. ' .' → logprob: -13.375041961669922
    4. '.append' → logprob: -15.250041961669922
    5. ').' → logprob: -15.375041961669922
    6. 'add' → logprob: -16.125041961669922
    7. '.Add' → logprob: -16.750041961669922
    8. '.setdefault' → logprob: -17.125041961669922
    9. ')add' → logprob: -17.625041961669922
    10. '   ' → logprob: -17.750041961669922

Token 316: '((' (ID: 2054)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.03922879323363304
    2. '((' → logprob: -3.289228677749634
    3. ' (' → logprob: -6.789228916168213
    4. '(' → logprob: -9.789228439331055
    5. '   ' → logprob: -12.539228439331055
    6. '(rc' → logprob: -15.289228439331055
    7. ' ' → logprob: -15.664228439331055
    8. '(rv' → logprob: -15.914228439331055
    9. '    ' → logprob: -16.289228439331055
    10. '(rr' → logprob: -16.414228439331055

Token 317: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.4617256056226324e-05
    2. ' r' → logprob: -11.250014305114746
    3. '(r' → logprob: -13.500014305114746
    4. '   ' → logprob: -16.875015258789062
    5. '_r' → logprob: -17.875015258789062
    6. '[r' → logprob: -18.375015258789062
    7. ')' → logprob: -18.500015258789062
    8. '                   ' → logprob: -18.500015258789062
    9. '	r' → logprob: -18.500015258789062
    10. '                           ' → logprob: -18.625015258789062

Token 318: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002201167168095708
    2. ' ,' → logprob: -6.127201080322266
    3. ',
' → logprob: -11.252201080322266
    4. ',

' → logprob: -14.377201080322266
    5. ' ' → logprob: -14.627201080322266
    6. 'cc' → logprob: -14.877201080322266
    7. '(cc' → logprob: -15.127201080322266
    8. '<|end|>' → logprob: -15.627201080322266
    9. '‌,' → logprob: -15.752201080322266
    10. '
' → logprob: -15.877201080322266

Token 319: ' cc' (ID: 22988)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.00020354038861114532
    2. ' cc' → logprob: -8.500203132629395
    3. '	cc' → logprob: -17.75020408630371
    4. '(cc' → logprob: -18.50020408630371
    5. 'ccc' → logprob: -20.75020408630371
    6. '_cc' → logprob: -20.87520408630371
    7. '   ' → logprob: -21.75020408630371
    8. 'Cc' → logprob: -23.12520408630371
    9. 'CC' → logprob: -23.37520408630371
    10. '       ' → logprob: -23.75020408630371

Token 320: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0005120449932292104
    2. '))
' → logprob: -7.87551212310791
    3. ')' → logprob: -9.00051212310791
    4. ' ))' → logprob: -12.00051212310791
    5. ')))' → logprob: -13.62551212310791
    6. ')
' → logprob: -14.75051212310791
    7. '))

' → logprob: -15.75051212310791
    8. '),' → logprob: -16.375511169433594
    9. '()))' → logprob: -16.375511169433594
    10. ''))' → logprob: -16.750511169433594

Token 321: '               ' (ID: 506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05700080841779709
    2. '           ' → logprob: -2.9320008754730225
    3. 'return' → logprob: -6.307000637054443
    4. '               ' → logprob: -8.432001113891602
    5. ' return' → logprob: -10.557001113891602
    6. '
' → logprob: -11.182001113891602
    7. '        
' → logprob: -11.682001113891602
    8. '```' → logprob: -11.932001113891602
    9. 'elif' → logprob: -12.307001113891602
    10. '   ' → logprob: -12.307001113891602

Token 322: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08250893652439117
    2. 'return' → logprob: -3.2075090408325195
    3. '           ' → logprob: -3.4575090408325195
    4. 'r' → logprob: -6.4575090408325195
    5. '
' → logprob: -6.4575090408325195
    6. 'else' → logprob: -7.0825090408325195
    7. '               ' → logprob: -7.3325090408325195
    8. 'for' → logprob: -7.4575090408325195
    9. ' return' → logprob: -7.5825090408325195
    10. '   ' → logprob: -7.5825090408325195

Token 323: ' If' (ID: 1843)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.7397708296775818
    2. ' c' → logprob: -2.1147708892822266
    3. '#' → logprob: -2.2397708892822266
    4. 'else' → logprob: -2.2397708892822266
    5. ' else' → logprob: -2.8647708892822266
    6. '           ' → logprob: -3.4897708892822266
    7. ' continue' → logprob: -4.114770889282227
    8. '       ' → logprob: -4.239770889282227
    9. 'continue' → logprob: -4.364770889282227
    10. ' #' → logprob: -4.614770889282227

Token 324: ' length' (ID: 5517)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -1.3580102920532227
    2. ' length' → logprob: -1.3580102920532227
    3. 'length' → logprob: -1.4830102920532227
    4. 'c' → logprob: -1.6080102920532227
    5. ' not' → logprob: -3.6080102920532227
    6. 'else' → logprob: -4.358010292053223
    7. 'cur' → logprob: -5.358010292053223
    8. 'self' → logprob: -5.608010292053223
    9. 'not' → logprob: -6.233010292053223
    10. ' self' → logprob: -6.233010292053223

Token 325: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.15350091457366943
    2. '<' → logprob: -2.403501033782959
    3. ' ==' → logprob: -3.403501033782959
    4. '==' → logprob: -4.403501033782959
    5. ' >=' → logprob: -5.403501033782959
    6. '>=' → logprob: -6.903501033782959
    7. ' <=' → logprob: -8.0285005569458
    8. '<=' → logprob: -9.1535005569458
    9. ' ' → logprob: -9.2785005569458
    10. ' >' → logprob: -9.2785005569458

Token 326: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.06812447309494019
    2. ' ' → logprob: -3.193124532699585
    3. 'c' → logprob: -4.193124294281006
    4. '1' → logprob: -5.693124294281006
    5. ' c' → logprob: -5.693124294281006
    6. '0' → logprob: -7.068124294281006
    7. '   ' → logprob: -7.443124294281006
    8. 'start' → logprob: -7.943124294281006
    9. 'the' → logprob: -8.943124771118164
    10. 'continue' → logprob: -9.068124771118164

Token 327: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.03676867112517357
    2. 'c' → logprob: -3.536768674850464
    3. '1' → logprob: -5.536768436431885
    4. ' ' → logprob: -6.911768436431885
    5. 'start' → logprob: -7.411768436431885
    6. '0' → logprob: -7.661768436431885
    7. ' c' → logprob: -8.286768913269043
    8. '   ' → logprob: -8.661768913269043
    9. 'length' → logprob: -8.786768913269043
    10. 'Board' → logprob: -9.786768913269043

Token 328: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.0537604093551636
    2. ':' → logprob: -1.8037604093551636
    3. ',' → logprob: -1.9287604093551636
    4. '                   ' → logprob: -2.053760528564453
    5. '           ' → logprob: -2.928760528564453
    6. 'else' → logprob: -3.053760528564453
    7. ' else' → logprob: -3.303760528564453
    8. '#' → logprob: -4.928760528564453
    9. ' and' → logprob: -4.928760528564453
    10. ':
' → logprob: -4.928760528564453

Token 329: ' we' (ID: 581)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.1836400181055069
    2. ' c' → logprob: -2.0586400032043457
    3. '                   ' → logprob: -4.183640003204346
    4. '               ' → logprob: -4.308640003204346
    5. ' continue' → logprob: -5.308640003204346
    6. 'continue' → logprob: -5.808640003204346
    7. '   ' → logprob: -7.183640003204346
    8. '                       ' → logprob: -7.558640003204346
    9. '#' → logprob: -7.558640003204346
    10. '           ' → logprob: -7.683640003204346

Token 330: ' already' (ID: 4279)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.2521457076072693
    2. 'c' → logprob: -2.502145767211914
    3. 'continue' → logprob: -2.502145767211914
    4. ' c' → logprob: -4.502145767211914
    5. ' ' → logprob: -4.877145767211914
    6. '   ' → logprob: -5.002145767211914
    7. '           ' → logprob: -5.252145767211914
    8. '#' → logprob: -5.752145767211914
    9. '               ' → logprob: -5.877145767211914
    10. ' have' → logprob: -5.877145767211914

Token 331: ' moved' (ID: 12183)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.26737239956855774
    2. ' continue' → logprob: -2.0173723697662354
    3. 'c' → logprob: -2.6423723697662354
    4. 'have' → logprob: -4.7673726081848145
    5. ' have' → logprob: -5.2673726081848145
    6. 'increment' → logprob: -5.2673726081848145
    7. '#' → logprob: -5.7673726081848145
    8. ' c' → logprob: -6.1423726081848145
    9. 'do' → logprob: -7.1423726081848145
    10. 'pass' → logprob: -7.2673726081848145

Token 332: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.015058208256959915
    2. 'to' → logprob: -5.2650580406188965
    3. ' c' → logprob: -5.5150580406188965
    4. ' to' → logprob: -5.8900580406188965
    5. 'on' → logprob: -6.3900580406188965
    6. ' on' → logprob: -7.5150580406188965
    7. '           ' → logprob: -8.140058517456055
    8. '               ' → logprob: -8.265058517456055
    9. 'the' → logprob: -10.640058517456055
    10. 'continue' → logprob: -10.640058517456055

Token 333: ' forward' (ID: 6687)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 334: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 335: ' so' (ID: 813)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.7512320876121521
    2. ' continue' → logprob: -1.5012321472167969
    3. ' so' → logprob: -2.251232147216797
    4. '#' → logprob: -2.501232147216797
    5. '           ' → logprob: -3.001232147216797
    6. 'so' → logprob: -3.501232147216797
    7. '               ' → logprob: -4.251232147216797
    8. '       ' → logprob: -5.376232147216797
    9. ' #' → logprob: -5.751232147216797
    10. '                   ' → logprob: -5.751232147216797

Token 336: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.10549081116914749
    2. ' continue' → logprob: -2.9804909229278564
    3. '#' → logprob: -3.7304909229278564
    4. 'c' → logprob: -4.480490684509277
    5. 'pass' → logprob: -4.980490684509277
    6. '               ' → logprob: -6.230490684509277
    7. '           ' → logprob: -6.605490684509277
    8. '                   ' → logprob: -7.105490684509277
    9. 'nothing' → logprob: -7.480490684509277
    10. ' c' → logprob: -7.605490684509277

Token 337: ' without' (ID: 2935)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.0069777965545654
    2. '<|end|>' → logprob: -1.0069777965545654
    3. '           ' → logprob: -1.3819777965545654
    4. '       ' → logprob: -4.2569780349731445
    5. '<|end|>' → logprob: -6.3819780349731445
    6. ' continue' → logprob: -6.8819780349731445
    7. 'continue' → logprob: -7.1319780349731445
    8. '                   ' → logprob: -9.006978034973145
    9. ' ' → logprob: -9.256978034973145
    10. ',' → logprob: -10.006978034973145

Token 338: ' increment' (ID: 24032)
  Prédit: 'increment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'increment' → logprob: -1.1305536031723022
    2. ' any' → logprob: -1.5055536031723022
    3. 'additional' → logprob: -1.6305536031723022
    4. ' additional' → logprob: -2.130553722381592
    5. ' increment' → logprob: -2.880553722381592
    6. 'any' → logprob: -3.630553722381592
    7. 'extra' → logprob: -4.005553722381592
    8. ' extra' → logprob: -4.755553722381592
    9. ' further' → logprob: -5.005553722381592
    10. ' adding' → logprob: -5.005553722381592

Token 339: 'ing' (ID: 289)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06214715912938118
    2. '           ' → logprob: -2.9371471405029297
    3. '       ' → logprob: -5.31214714050293
    4. '<|end|>' → logprob: -6.43714714050293
    5. ' continue' → logprob: -8.93714714050293
    6. 'continue' → logprob: -8.93714714050293
    7. '<|end|>' → logprob: -8.93714714050293
    8. '                   ' → logprob: -8.93714714050293
    9. ' ' → logprob: -10.06214714050293
    10. '   ' → logprob: -10.81214714050293

Token 340: ' c' (ID: 274)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.36480969190597534
    2. '               ' → logprob: -1.2398097515106201
    3. ' continue' → logprob: -5.114809513092041
    4. '<|end|>' → logprob: -5.239809513092041
    5. '       ' → logprob: -5.989809513092041
    6. 'continue' → logprob: -6.489809513092041
    7. '                   ' → logprob: -8.1148099899292
    8. '<|end|>' → logprob: -8.6148099899292
    9. ' ' → logprob: -9.4898099899292
    10. '   ' → logprob: -9.8648099899292

Token 341: ' again' (ID: 2418)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3044748604297638
    2. '           ' → logprob: -1.5544748306274414
    3. '<|end|>' → logprob: -3.1794748306274414
    4. '       ' → logprob: -4.804474830627441
    5. '<|end|>' → logprob: -7.554474830627441
    6. ' continue' → logprob: -8.554474830627441
    7. 'continue' → logprob: -8.679474830627441
    8. '                   ' → logprob: -9.304474830627441
    9. ',' → logprob: -9.679474830627441
    10. 'return' → logprob: -9.929474830627441

Token 342: '.
' (ID: 558)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6653278470039368
    2. '               ' → logprob: -1.290327787399292
    3. '<|end|>' → logprob: -1.665327787399292
    4. '       ' → logprob: -4.165328025817871
    5. '<|end|>' → logprob: -5.915328025817871
    6. 'continue' → logprob: -6.540328025817871
    7. ' continue' → logprob: -7.290328025817871
    8. '                   ' → logprob: -8.415328025817871
    9. ')' → logprob: -9.165328025817871
    10. 'return' → logprob: -9.165328025817871

Token 343: '       ' (ID: 309)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2399737685918808
    2. '       ' → logprob: -1.739973783493042
    3. '               ' → logprob: -3.739973783493042
    4. 'return' → logprob: -5.489973545074463
    5. '<|end|>' → logprob: -5.739973545074463
    6. 'continue' → logprob: -5.989973545074463
    7. ' continue' → logprob: -6.114973545074463
    8. ' return' → logprob: -6.864973545074463
    9. '<|end|>' → logprob: -8.489974021911621
    10. '
' → logprob: -8.489974021911621

Token 344: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05099821090698242
    2. 'return' (adapté à ' return') → logprob: -3.1759982109069824
    3. ' return' → logprob: -5.425998210906982
    4. '           ' → logprob: -5.800998210906982
    5. '   ' → logprob: -8.55099868774414
    6. '
' → logprob: -8.80099868774414
    7. '        
' → logprob: -10.17599868774414
    8. '               ' → logprob: -10.30099868774414
    9. '	return' → logprob: -10.42599868774414
    10. '<|end|>' → logprob: -10.67599868774414

Token 345: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.0024762547109276056
    2. ' to' → logprob: -6.002476215362549
    3. '   ' → logprob: -14.627476692199707
    4. '	to' → logprob: -17.00247573852539
    5. '(to' → logprob: -17.12747573852539
    6. ' ' → logprob: -17.87747573852539
    7. '       ' → logprob: -18.00247573852539
    8. '```' → logprob: -18.37747573852539
    9. '           ' → logprob: -18.87747573852539
    10. '{' → logprob: -18.87747573852539

Token 346: '_dis' (ID: 15018)
  Prédit: '_dis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dis' → logprob: -0.1272500902414322
    2. 'dis' → logprob: -2.1272501945495605
    3. 'appear' → logprob: -8.377249717712402
    4. 'is' → logprob: -10.127249717712402
    5. 'to' → logprob: -10.377249717712402
    6. 'Disappear' → logprob: -11.377249717712402
    7. ' disappear' → logprob: -12.752249717712402
    8. '	dis' → logprob: -12.877249717712402
    9. 'discard' → logprob: -13.127249717712402
    10. '_disc' → logprob: -15.502249717712402

Token 347: 'appear' (ID: 61410)
  Prédit: 'appear'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'appear' → logprob: -1.1398757123970427e-05
    2. 'is' → logprob: -11.750011444091797
    3. 'apper' → logprob: -13.500011444091797
    4. 'ap' → logprob: -13.750011444091797
    5. 'as' → logprob: -15.625011444091797
    6. 'isper' → logprob: -15.875011444091797
    7. 'app' → logprob: -16.125011444091797
    8. '_' → logprob: -16.375011444091797
    9. 'appe' → logprob: -16.375011444091797
    10. '_dis' → logprob: -16.375011444091797

Token 348: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 349: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 350: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 351: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -1.5682519674301147
    2. ' apply' → logprob: -1.5682519674301147
    3. '_dis' → logprob: -1.5682519674301147
    4. '_apply' → logprob: -2.4432520866394043
    5. ' drop' → logprob: -2.6932520866394043
    6. '_drop' → logprob: -3.1932520866394043
    7. '_' → logprob: -3.5682520866394043
    8. ' remove' → logprob: -3.6932520866394043
    9. 'apply' → logprob: -3.8182520866394043
    10. '_pop' → logprob: -3.8182520866394043

Token 352: 'dis' (ID: 4220)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.5984959602355957
    2. 'apply' → logprob: -1.3484959602355957
    3. 'drop' → logprob: -3.2234959602355957
    4. 'dis' → logprob: -3.3484959602355957
    5. 'remove' → logprob: -3.3484959602355957
    6. 'fall' → logprob: -3.3484959602355957
    7. 'mark' → logprob: -4.473495960235596
    8. 'collapse' → logprob: -4.973495960235596
    9. 'pop' → logprob: -5.473495960235596
    10. 'vertical' → logprob: -5.848495960235596

Token 353: 'appear' (ID: 61410)
  Prédit: 'appear'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'appear' → logprob: -5.431207682704553e-05
    2. 'appe' → logprob: -10.625054359436035
    3. '_' → logprob: -10.750054359436035
    4. '```' → logprob: -12.875054359436035
    5. 'apper' → logprob: -13.250054359436035
    6. 'appearance' → logprob: -13.875054359436035
    7. 'ap' → logprob: -14.375054359436035
    8. 'is' → logprob: -15.125054359436035
    9. '_dis' → logprob: -15.250054359436035
    10. '   ' → logprob: -15.375054359436035

Token 354: '_st' (ID: 2518)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0016925542149692774
    2. '_st' → logprob: -7.501692771911621
    3. '_(' → logprob: -7.876692771911621
    4. '(' → logprob: -8.126692771911621
    5. 'self' → logprob: -9.376692771911621
    6. '_tokens' → logprob: -9.501692771911621
    7. '_' → logprob: -9.751692771911621
    8. '_and' → logprob: -10.126692771911621
    9. '_all' → logprob: -10.126692771911621
    10. '_cells' → logprob: -10.751692771911621

Token 355: 'ones' (ID: 3617)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.3334830105304718
    2. 'appear' → logprob: -2.0834829807281494
    3. 'is' → logprob: -2.2084829807281494
    4. 'ones' → logprob: -3.5834829807281494
    5. 'ap' → logprob: -4.3334832191467285
    6. 'ep' → logprob: -5.4584832191467285
    7. 'appe' → logprob: -6.8334832191467285
    8. 'apper' → logprob: -7.3334832191467285
    9. 'e' → logprob: -7.4584832191467285
    10. '(self' → logprob: -7.7084832191467285

Token 356: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0004421127669047564
    2. '(' → logprob: -7.750442028045654
    3. ' (' → logprob: -11.500442504882812
    4. '(
' → logprob: -14.375442504882812
    5. 'self' → logprob: -15.250442504882812
    6. '   ' → logprob: -15.375442504882812
    7. '(s' → logprob: -16.625442504882812
    8. '(sel' → logprob: -17.125442504882812
    9. '       ' → logprob: -17.250442504882812
    10. ' ' → logprob: -18.250442504882812

Token 357: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.8125581741333008
    2. ',' → logprob: -1.3125581741333008
    3. 'self' → logprob: -1.9375581741333008
    4. '):
' → logprob: -2.437558174133301
    5. ')' → logprob: -3.187558174133301
    6. '       ' → logprob: -5.437558174133301
    7. '   ' → logprob: -5.562558174133301
    8. '(self' → logprob: -5.687558174133301
    9. ',self' → logprob: -6.687558174133301
    10. '):
' → logprob: -7.937558174133301

Token 358: ' positions' (ID: 15897)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.22343125939369202
    2. 'positions' → logprob: -2.223431348800659
    3. ' positions' → logprob: -2.973431348800659
    4. ' to' → logprob: -3.348431348800659
    5. ' stones' → logprob: -5.84843111038208
    6. 'stones' → logprob: -6.22343111038208
    7. 'coords' → logprob: -8.598431587219238
    8. 'cells' → logprob: -8.848431587219238
    9. 'points' → logprob: -9.223431587219238
    10. 'pos' → logprob: -9.473431587219238

Token 359: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.13441798090934753
    2. '):
' → logprob: -2.63441801071167
    3. ':' → logprob: -3.00941801071167
    4. ')' → logprob: -5.63441801071167
    5. '   ' → logprob: -7.50941801071167
    6. ' ):' → logprob: -8.259417533874512
    7. '):
' → logprob: -8.509417533874512
    8. '       ' → logprob: -9.509417533874512
    9. ' ):
' → logprob: -11.384417533874512
    10. '):

' → logprob: -11.509417533874512

Token 360: ' Set' (ID: 3957)
  Prédit: 'Set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Set' → logprob: -0.0002346488763578236
    2. ' Set' → logprob: -8.375234603881836
    3. ')' → logprob: -13.000234603881836
    4. 'set' → logprob: -13.625234603881836
    5. 'List' → logprob: -14.875234603881836
    6. '	Set' → logprob: -16.250234603881836
    7. '_set' → logprob: -16.875234603881836
    8. '_Set' → logprob: -17.500234603881836
    9. '   ' → logprob: -17.750234603881836
    10. '):
' → logprob: -18.250234603881836

Token 361: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0005128794582560658
    2. '[(' → logprob: -7.625513076782227
    3. '):' → logprob: -12.000513076782227
    4. '   ' → logprob: -12.000513076782227
    5. ' ' → logprob: -12.875513076782227
    6. '):
' → logprob: -13.250513076782227
    7. '       ' → logprob: -13.250513076782227
    8. '[int' → logprob: -13.375513076782227
    9. '```' → logprob: -13.875513076782227
    10. ' [' → logprob: -14.000513076782227

Token 362: 'Tuple' (ID: 40048)
  Prédit: 'Tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -3.8889261304575484e-06
    2. ' Tuple' → logprob: -12.750003814697266
    3. '[' → logprob: -14.375003814697266
    4. 'Tu' → logprob: -15.750003814697266
    5. 'int' → logprob: -15.875003814697266
    6. '[int' → logprob: -17.125003814697266
    7. '   ' → logprob: -17.375003814697266
    8. '<Tuple' → logprob: -17.500003814697266
    9. '.Tuple' → logprob: -18.000003814697266
    10. 'tuple' → logprob: -19.125003814697266

Token 363: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -2.339278580620885e-06
    2. 'int' → logprob: -13.000001907348633
    3. '(int' → logprob: -18.000001907348633
    4. ',int' → logprob: -18.375001907348633
    5. '<int' → logprob: -18.500001907348633
    6. '   ' → logprob: -18.750001907348633
    7. ']int' → logprob: -19.500001907348633
    8. '[Int' → logprob: -21.000001907348633
    9. '	int' → logprob: -21.125001907348633
    10. '```' → logprob: -21.250001907348633

Token 364: ',int' (ID: 20909)
  Prédit: ',int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',int' → logprob: -0.00044902291847392917
    2. ',' → logprob: -7.750449180603027
    3. 'int' → logprob: -11.375449180603027
    4. '[int' → logprob: -12.375449180603027
    5. ' ,' → logprob: -13.000449180603027
    6. '(int' → logprob: -16.50044822692871
    7. ']int' → logprob: -16.62544822692871
    8. ',
' → logprob: -17.00044822692871
    9. '   ' → logprob: -17.25044822692871
    10. '<int' → logprob: -17.50044822692871

Token 365: ']])' (ID: 64959)
  Prédit: ']]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.023304877802729607
    2. ']])' → logprob: -3.8983049392700195
    3. ')]' → logprob: -6.5233049392700195
    4. '])' → logprob: -8.14830493927002
    5. ']):
' → logprob: -8.14830493927002
    6. ']' → logprob: -8.27330493927002
    7. ']):' → logprob: -8.64830493927002
    8. '>' → logprob: -9.27330493927002
    9. ']]:
' → logprob: -9.52330493927002
    10. ')' → logprob: -10.39830493927002

Token 366: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005223324988037348
    2. ':
' → logprob: -5.380223274230957
    3. '):' → logprob: -7.505223274230957
    4. '):
' → logprob: -10.880223274230957
    5. '       ' → logprob: -11.380223274230957
    6. '   ' → logprob: -11.380223274230957
    7. ' :' → logprob: -13.255223274230957
    8. ':
' → logprob: -13.255223274230957
    9. ':def' → logprob: -13.255223274230957
    10. '():' → logprob: -14.005223274230957

Token 367: ' int' (ID: 677)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.01486808992922306
    2. ' None' → logprob: -4.264868259429932
    3. '   ' → logprob: -7.264868259429932
    4. 'bool' → logprob: -13.639867782592773
    5. 'int' → logprob: -13.764867782592773
    6. '  ' → logprob: -14.389867782592773
    7. '    
' → logprob: -15.014867782592773
    8. ' ' → logprob: -15.014867782592773
    9. '    ' → logprob: -15.264867782592773
    10. '       ' → logprob: -15.389867782592773

Token 368: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1662091314792633
    2. ':
' → logprob: -2.4162092208862305
    3. '       ' → logprob: -2.7912092208862305
    4. '   ' → logprob: -6.1662092208862305
    5. '):
' → logprob: -8.66620922088623
    6. '):' → logprob: -8.91620922088623
    7. ')' → logprob: -10.79120922088623
    8. ',' → logprob: -11.29120922088623
    9. ':
' → logprob: -11.29120922088623
    10. '	' → logprob: -11.66620922088623

Token 369: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4936084747314453
    2. 'count' → logprob: -1.1186084747314453
    3. 'removed' → logprob: -3.8686084747314453
    4. ' count' → logprob: -3.9936084747314453
    5. 'points' → logprob: -4.743608474731445
    6. ' points' → logprob: -5.118608474731445
    7. 'score' → logprob: -5.618608474731445
    8. ' removed' → logprob: -6.243608474731445
    9. 'num' → logprob: -7.493608474731445
    10. ' score' → logprob: -7.618608474731445

Token 370: ' disappeared' (ID: 57770)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.06727566570043564
    2. 'dis' → logprob: -3.5672757625579834
    3. ' count' → logprob: -4.317275524139404
    4. 'removed' → logprob: -4.442275524139404
    5. '       ' → logprob: -5.692275524139404
    6. 'num' → logprob: -6.067275524139404
    7. ' disappeared' → logprob: -6.817275524139404
    8. 'points' → logprob: -6.942275524139404
    9. 'n' → logprob: -6.942275524139404
    10. 'score' → logprob: -7.192275524139404

Token 371: '_score' (ID: 22555)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.0032905905973166227
    2. ' =' → logprob: -5.87829065322876
    3. '=' → logprob: -7.87829065322876
    4. 'count' → logprob: -9.378290176391602
    5. '_cnt' → logprob: -11.628290176391602
    6. 'Count' → logprob: -12.628290176391602
    7. '   ' → logprob: -12.878290176391602
    8. '_counts' → logprob: -13.753290176391602
    9. '_positions' → logprob: -13.753290176391602
    10. 's' → logprob: -14.003290176391602

Token 372: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008620958775281906
    2. '=' → logprob: -4.758620738983154
    3. ' ' → logprob: -12.133621215820312
    4. '   ' → logprob: -14.508621215820312
    5. '_increment' → logprob: -15.008621215820312
    6. '  ' → logprob: -15.758621215820312
    7. ' +=' → logprob: -16.258621215820312
    8. 's' → logprob: -17.008621215820312
    9. '    ' → logprob: -17.883621215820312
    10. '_in' → logprob: -18.383621215820312

Token 373: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007386078126728535
    2. ' ' → logprob: -5.132386207580566
    3. 'len' → logprob: -7.007386207580566
    4. ' len' → logprob: -7.507386207580566
    5. '   ' → logprob: -13.882386207580566
    6. 'sum' → logprob: -15.382386207580566
    7. ' sum' → logprob: -15.632386207580566
    8. '       ' → logprob: -16.06988525390625
    9. 'length' → logprob: -16.25738525390625
    10. ' ' → logprob: -16.25738525390625

Token 374: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.023259920999407768
    2. 'len' → logprob: -3.7732598781585693
    3. 'sum' → logprob: -11.773260116577148
    4. ' len' → logprob: -12.648260116577148
    5. ' ' → logprob: -13.023260116577148
    6. '(len' → logprob: -14.648260116577148
    7. '1' → logprob: -15.023260116577148
    8. '10' → logprob: -15.398260116577148
    9. '100' → logprob: -16.02326011657715
    10. 'length' → logprob: -17.02326011657715

Token 375: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07289613038301468
    2. '       ' → logprob: -2.6978962421417236
    3. ' for' → logprob: -6.0728960037231445
    4. '
' → logprob: -8.447896003723145
    5. 'for' → logprob: -8.822896003723145
    6. '<|end|>' → logprob: -8.947896003723145
    7. '        
' → logprob: -10.072896003723145
    8. '   ' → logprob: -10.197896003723145
    9. ' 
' → logprob: -10.822896003723145
    10. '  
' → logprob: -10.947896003723145

Token 376: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.051933154463768005
    2. ' for' → logprob: -3.5519330501556396
    3. '
' → logprob: -4.176933288574219
    4. 'for' → logprob: -5.051933288574219
    5. '   ' → logprob: -9.176933288574219
    6. '        
' → logprob: -10.051933288574219
    7. '    
' → logprob: -11.676933288574219
    8. '
' → logprob: -11.676933288574219
    9. '	' → logprob: -12.051933288574219
    10. '	for' → logprob: -12.176933288574219

Token 377: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.005940413102507591
    2. ' for' → logprob: -5.2559404373168945
    3. '       ' → logprob: -7.2559404373168945
    4. '   ' → logprob: -15.505940437316895
    5. '	for' → logprob: -15.880940437316895
    6. ' ' → logprob: -17.380939483642578
    7. 'if' → logprob: -17.505939483642578
    8. 'while' → logprob: -20.005939483642578
    9. '  ' → logprob: -20.255939483642578
    10. 'points' → logprob: -20.380939483642578

Token 378: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.38900887966156006
    2. '(r' → logprob: -1.13900887966156
    3. ' (' → logprob: -6.63900899887085
    4. ' r' → logprob: -7.26400899887085
    5. '   ' → logprob: -10.014008522033691
    6. '(row' → logprob: -10.139008522033691
    7. 'row' → logprob: -10.764008522033691
    8. 'pos' → logprob: -12.014008522033691
    9. ' ' → logprob: -12.639008522033691
    10. '(pos' → logprob: -12.889008522033691

Token 379: ',c' (ID: 22261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007802987936884165
    2. ',c' → logprob: -4.882802963256836
    3. ' ,' → logprob: -9.507802963256836
    4. ',r' → logprob: -9.757802963256836
    5. ',p' → logprob: -11.507802963256836
    6. ',n' → logprob: -11.757802963256836
    7. ',col' → logprob: -12.132802963256836
    8. ',pos' → logprob: -12.132802963256836
    9. ',s' → logprob: -12.507802963256836
    10. ',row' → logprob: -12.632802963256836

Token 380: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0789073035120964
    2. 'in' → logprob: -2.5789072513580322
    3. ',' → logprob: -11.453907012939453
    4. ' ' → logprob: -13.203907012939453
    5. '   ' → logprob: -13.578907012939453
    6. '
' → logprob: -13.703907012939453
    7. ')' → logprob: -14.328907012939453
    8. '```' → logprob: -14.703907012939453
    9. '    ' → logprob: -15.078907012939453
    10. '	in' → logprob: -15.578907012939453

Token 381: ' positions' (ID: 15897)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.02324605919420719
    2. ' positions' → logprob: -3.7732460498809814
    3. 'position' → logprob: -15.648245811462402
    4. 'sorted' → logprob: -15.773245811462402
    5. '.positions' → logprob: -16.27324676513672
    6. 'pos' → logprob: -16.64824676513672
    7. '_positions' → logprob: -17.02324676513672
    8. '   ' → logprob: -17.02324676513672
    9. ' posiciones' → logprob: -18.52324676513672
    10. ' ' → logprob: -18.52324676513672

Token 382: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06216150149703026
    2. ':
' → logprob: -2.812161445617676
    3. '):' → logprob: -9.562161445617676
    4. '):
' → logprob: -9.812161445617676
    5. ':
' → logprob: -9.812161445617676
    6. ':

' → logprob: -12.187161445617676
    7. '       ' → logprob: -12.937161445617676
    8. ' :' → logprob: -13.812161445617676
    9. '<|end|>' → logprob: -13.812161445617676
    10. '   ' → logprob: -14.312161445617676

Token 383: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006068871589377522
    2. '            
' → logprob: -8.125606536865234
    3. ' if' → logprob: -9.125606536865234
    4. '
' → logprob: -9.750606536865234
    5. ' stone' → logprob: -10.375606536865234
    6. 'self' → logprob: -10.625606536865234
    7. '```' → logprob: -11.000606536865234
    8. ' self' → logprob: -11.000606536865234
    9. '       ' → logprob: -11.750606536865234
    10. '<|end|>' → logprob: -11.875606536865234

Token 384: ' stone' (ID: 14352)
  Prédit: 'stone'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stone' (adapté à ' stone') → logprob: -0.08146987855434418
    2. ' stone' → logprob: -2.831469774246216
    3. 'if' → logprob: -4.706470012664795
    4. '           ' → logprob: -5.081470012664795
    5. ' if' → logprob: -5.956470012664795
    6. '       ' → logprob: -7.081470012664795
    7. 'st' → logprob: -8.206469535827637
    8. '   ' → logprob: -8.456469535827637
    9. 'self' → logprob: -9.706469535827637
    10. '               ' → logprob: -10.706469535827637

Token 385: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022777557373047
    2. '=' → logprob: -1.9102277755737305
    3. '.' → logprob: -13.41022777557373
    4. '   ' → logprob: -14.16022777557373
    5. ' ' → logprob: -14.91022777557373
    6. '    ' → logprob: -15.03522777557373
    7. '=self' → logprob: -15.41022777557373
    8. '           ' → logprob: -15.66022777557373
    9. '.=' → logprob: -16.410228729248047
    10. '       ' → logprob: -16.660228729248047

Token 386: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.014164801687002182
    2. ' self' → logprob: -4.264164924621582
    3. '           ' → logprob: -14.139164924621582
    4. '(self' → logprob: -14.639164924621582
    5. '       ' → logprob: -17.139163970947266
    6. '=self' → logprob: -17.264163970947266
    7. '	self' → logprob: -17.514163970947266
    8. 's' → logprob: -17.764163970947266
    9. '               ' → logprob: -17.889163970947266
    10. '[self' → logprob: -18.264163970947266

Token 387: '.grid' (ID: 19269)
  Prédit: '.grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.grid' → logprob: -4.1318875446449965e-05
    2. '.' → logprob: -10.125041007995605
    3. ' .' → logprob: -14.000041007995605
    4. 'grid' → logprob: -16.125041961669922
    5. '	grid' → logprob: -16.750041961669922
    6. '
' → logprob: -17.750041961669922
    7. '.board' → logprob: -18.000041961669922
    8. '.
' → logprob: -18.375041961669922
    9. '   ' → logprob: -18.500041961669922
    10. ':grid' → logprob: -18.750041961669922

Token 388: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -2.935296834039036e-06
    2. 'r' → logprob: -12.75000286102295
    3. '[' → logprob: -18.500003814697266
    4. '   ' → logprob: -19.500003814697266
    5. ' [' → logprob: -19.500003814697266
    6. ' r' → logprob: -19.625003814697266
    7. '	r' → logprob: -20.750003814697266
    8. '[
' → logprob: -21.375003814697266
    9. '[row' → logprob: -21.500003814697266
    10. '[s' → logprob: -22.750003814697266

Token 389: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -1.318681188422488e-05
    2. '[c' → logprob: -12.00001335144043
    3. ']' → logprob: -12.37501335144043
    4. ' ][' → logprob: -13.25001335144043
    5. '[r' → logprob: -14.87501335144043
    6. '"][' → logprob: -15.50001335144043
    7. ']][' → logprob: -16.50001335144043
    8. 'c' → logprob: -16.62501335144043
    9. ')][' → logprob: -16.75001335144043
    10. '[' → logprob: -16.87501335144043

Token 390: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.981667537620524e-06
    2. ' c' → logprob: -13.375001907348633
    3. '[c' → logprob: -15.125001907348633
    4. ')c' → logprob: -16.750001907348633
    5. '	c' → logprob: -18.625001907348633
    6. '][' → logprob: -19.250001907348633
    7. ',c' → logprob: -19.375001907348633
    8. '
' → logprob: -20.000001907348633
    9. '   ' → logprob: -20.125001907348633
    10. '```' → logprob: -20.250001907348633

Token 391: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.4742201566696167
    2. ']' → logprob: -0.9742201566696167
    3. ']
' → logprob: -9.724220275878906
    4. ' ]
' → logprob: -10.099220275878906
    5. ' ]' → logprob: -10.474220275878906
    6. ']

' → logprob: -11.224220275878906
    7. '])
' → logprob: -15.974220275878906
    8. '])' → logprob: -16.474220275878906
    9. '];' → logprob: -16.599220275878906
    10. ')
' → logprob: -16.724220275878906

Token 392: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0021183809731155634
    2. ' if' → logprob: -6.5021185874938965
    3. '       ' → logprob: -8.002118110656738
    4. 'if' → logprob: -8.252118110656738
    5. '```' → logprob: -12.002118110656738
    6. '               ' → logprob: -12.252118110656738
    7. '<|end|>' → logprob: -12.627118110656738
    8. '   ' → logprob: -13.377118110656738
    9. '
' → logprob: -13.627118110656738
    10. '	       ' → logprob: -14.002118110656738

Token 393: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.04992154985666275
    2. '           ' → logprob: -3.1749215126037598
    3. ' if' → logprob: -5.04992151260376
    4. 'stone' → logprob: -7.67492151260376
    5. ' stone' → logprob: -10.799921989440918
    6. '```' → logprob: -13.549921989440918
    7. 'stones' → logprob: -14.174921989440918
    8. '               ' → logprob: -14.549921989440918
    9. '       ' → logprob: -14.674921989440918
    10. '   ' → logprob: -15.299921989440918

Token 394: ' stone' (ID: 14352)
  Prédit: 'stone'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stone' → logprob: -0.2273055762052536
    2. ' stone' → logprob: -1.60230553150177
    3. 'not' → logprob: -6.4773054122924805
    4. ' not' → logprob: -8.47730541229248
    5. '   ' → logprob: -9.22730541229248
    6. 'ston' → logprob: -11.10230541229248
    7. 'st' → logprob: -11.47730541229248
    8. 'Stone' → logprob: -12.22730541229248
    9. '    ' → logprob: -12.60230541229248
    10. 'stones' → logprob: -12.85230541229248

Token 395: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.732422947883606
    2. 'and' → logprob: -1.482422947883606
    3. ' and' → logprob: -1.482422947883606
    4. 'is' → logprob: -2.7324228286743164
    5. ')' → logprob: -11.107422828674316
    6. ' ' → logprob: -13.357422828674316
    7. '            ' → logprob: -13.857422828674316
    8. 'not' → logprob: -14.357422828674316
    9. ':' → logprob: -14.482422828674316
    10. '   ' → logprob: -14.607422828674316

Token 396: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.6939796805381775
    2. 'not' → logprob: -0.6939796805381775
    3. 'None' → logprob: -7.193979740142822
    4. ' None' → logprob: -9.443979263305664
    5. '   ' → logprob: -14.068979263305664
    6. ' ' → logprob: -15.193979263305664
    7. 'none' → logprob: -15.568979263305664
    8. 'Not' → logprob: -15.693979263305664
    9. ' ' → logprob: -16.068979263305664
    10. '	not' → logprob: -16.068979263305664

Token 397: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -7.226628895296017e-06
    2. ' None' → logprob: -11.875007629394531
    3. '(None' → logprob: -15.375007629394531
    4. '_None' → logprob: -17.00000762939453
    5. 'none' → logprob: -17.12500762939453
    6. '_none' → logprob: -19.12500762939453
    7. '   ' → logprob: -19.25000762939453
    8. '.None' → logprob: -20.12500762939453
    9. '```' → logprob: -20.12500762939453
    10. ',None' → logprob: -20.75000762939453

Token 398: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.005960560403764248
    2. 'and' → logprob: -5.130960464477539
    3. '               ' → logprob: -11.130960464477539
    4. ':
' → logprob: -11.505960464477539
    5. '           ' → logprob: -12.380960464477539
    6. ':' → logprob: -13.130960464477539
    7. '   ' → logprob: -14.630960464477539
    8. ' ' → logprob: -15.505960464477539
    9. '	and' → logprob: -16.25596046447754
    10. '       ' → logprob: -16.75596046447754

Token 399: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.005300992634147406
    2. ' not' → logprob: -5.255300998687744
    3. '           ' → logprob: -10.005300521850586
    4. '!' → logprob: -11.505300521850586
    5. '
' → logprob: -12.255300521850586
    6. '               ' → logprob: -12.380300521850586
    7. '   ' → logprob: -13.630300521850586
    8. '```' → logprob: -14.380300521850586
    9. '	not' → logprob: -15.380300521850586
    10. 'n' → logprob: -15.505300521850586

Token 400: ' stone' (ID: 14352)
  Prédit: 'stone'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stone' → logprob: -0.014166207052767277
    2. ' stone' → logprob: -4.264166355133057
    3. '   ' → logprob: -14.014165878295898
    4. 'Stone' → logprob: -14.014165878295898
    5. 'ston' → logprob: -14.139165878295898
    6. 'stones' → logprob: -15.639165878295898
    7. '石' → logprob: -16.5141658782959
    8. 'STONE' → logprob: -16.6391658782959
    9. ' ' → logprob: -17.6391658782959
    10. '       ' → logprob: -18.1391658782959

Token 401: '.dis' (ID: 8454)
  Prédit: '.dis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dis' → logprob: -1.3425219549390022e-05
    2. '.' → logprob: -11.50001335144043
    3. ' .' → logprob: -12.75001335144043
    4. '.Dis' → logprob: -16.25001335144043
    5. '.disabled' → logprob: -16.50001335144043
    6. '.def' → logprob: -17.37501335144043
    7. '	dis' → logprob: -17.62501335144043
    8. '.st' → logprob: -17.75001335144043
    9. '.has' → logprob: -17.75001335144043
    10. 'dis' → logprob: -17.75001335144043

Token 402: 'appe' (ID: 15645)
  Prédit: 'appe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'appe' → logprob: -2.3915141355246305e-05
    2. 'app' → logprob: -11.62502384185791
    3. 'is' → logprob: -12.37502384185791
    4. 'appear' → logprob: -12.50002384185791
    5. 'apper' → logprob: -13.37502384185791
    6. 'aper' → logprob: -13.50002384185791
    7. ' appeared' → logprob: -13.75002384185791
    8. 'dis' → logprob: -14.12502384185791
    9. 'Appe' → logprob: -14.37502384185791
    10. 'ap' → logprob: -15.37502384185791

Token 403: 'ared' (ID: 2343)
  Prédit: 'ared'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ared' → logprob: -1.5048530030981055e-06
    2. 'ar' → logprob: -14.625001907348633
    3. 'aring' → logprob: -15.125001907348633
    4. 'ed' → logprob: -16.250001907348633
    5. 'ard' → logprob: -16.500001907348633
    6. 'ased' → logprob: -16.625001907348633
    7. '
' → logprob: -16.875001907348633
    8. '`' → logprob: -17.000001907348633
    9. 'ated' → logprob: -17.000001907348633
    10. 'ered' → logprob: -17.125001907348633

Token 404: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.042001012712717056
    2. ':' → logprob: -3.2920010089874268
    3. '               ' → logprob: -5.667001247406006
    4. '):
' → logprob: -8.667000770568848
    5. ' and' → logprob: -9.042000770568848
    6. '           ' → logprob: -9.167000770568848
    7. ':

' → logprob: -10.417000770568848
    8. ':
' → logprob: -10.542000770568848
    9. '                   ' → logprob: -10.667000770568848
    10. '                       ' → logprob: -12.417000770568848

Token 405: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004408516921103001
    2. '           ' → logprob: -5.754408359527588
    3. ' stone' → logprob: -7.004408359527588
    4. '```' → logprob: -9.254408836364746
    5. '<|end|>' → logprob: -9.754408836364746
    6. '                
' → logprob: -10.254408836364746
    7. ':
' → logprob: -10.629408836364746
    8. '                   ' → logprob: -10.754408836364746
    9. 'stone' → logprob: -10.754408836364746
    10. '<|end|>' → logprob: -11.629408836364746

Token 406: ' stone' (ID: 14352)
  Prédit: ' stone'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stone' → logprob: -0.7004570960998535
    2. 'stone' (adapté à ' stone') → logprob: -1.0754570960998535
    3. '               ' → logprob: -1.8254570960998535
    4. '                   ' → logprob: -7.3254570960998535
    5. '           ' → logprob: -8.075456619262695
    6. '```' → logprob: -8.325456619262695
    7. '   ' → logprob: -9.575456619262695
    8. 'ston' → logprob: -10.075456619262695
    9. '``' → logprob: -11.950456619262695
    10. '                ' → logprob: -12.575456619262695

Token 407: '.dis' (ID: 8454)
  Prédit: '.dis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dis' → logprob: -0.00029875844484195113
    2. '.' → logprob: -8.125298500061035
    3. ' .' → logprob: -13.125298500061035
    4. '	dis' → logprob: -15.750298500061035
    5. '.Dis' → logprob: -15.875298500061035
    6. '.dem' → logprob: -16.62529945373535
    7. '.di' → logprob: -17.37529945373535
    8. '.disabled' → logprob: -17.62529945373535
    9. '.discovery' → logprob: -17.62529945373535
    10. '`.' → logprob: -17.87529945373535

Token 408: 'appe' (ID: 15645)
  Prédit: 'appe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'appe' → logprob: -6.392202976712724e-06
    2. 'appear' → logprob: -12.500006675720215
    3. 'app' → logprob: -13.375006675720215
    4. 'apper' → logprob: -14.375006675720215
    5. 'is' → logprob: -15.625006675720215
    6. 'dis' → logprob: -16.0000057220459
    7. ' appeared' → logprob: -16.3750057220459
    8. 'aper' → logprob: -16.8750057220459
    9. 'ap' → logprob: -17.1250057220459
    10. '```' → logprob: -17.3750057220459

Token 409: 'ared' (ID: 2343)
  Prédit: 'ared'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ared' → logprob: -1.7432603272027336e-06
    2. 'ar' → logprob: -14.125001907348633
    3. 'are' → logprob: -14.875001907348633
    4. 'ard' → logprob: -15.625001907348633
    5. 'aring' → logprob: -16.375001907348633
    6. 'arad' → logprob: -16.375001907348633
    7. '
' → logprob: -16.500001907348633
    8. 'red' → logprob: -17.375001907348633
    9. 'ered' → logprob: -17.625001907348633
    10. 'ARED' → logprob: -17.625001907348633

Token 410: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602879911661148
    2. '=' → logprob: -1.9102879762649536
    3. '=True' → logprob: -9.660287857055664
    4. ' ' → logprob: -16.660287857055664
    5. '   ' → logprob: -16.910287857055664
    6. '                   ' → logprob: -17.035287857055664
    7. '               ' → logprob: -17.410287857055664
    8. '           ' → logprob: -17.660287857055664
    9. '=true' → logprob: -18.035287857055664
    10. '       ' → logprob: -18.160287857055664

Token 411: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -1.0206720617134124e-05
    2. ' True' → logprob: -11.50001049041748
    3. '(True' → logprob: -19.625009536743164
    4. '=True' → logprob: -20.750009536743164
    5. 'true' → logprob: -21.750009536743164
    6. 'TRUE' → logprob: -24.375009536743164
    7. '_true' → logprob: -24.750009536743164
    8. '   ' → logprob: -24.875009536743164
    9. '.True' → logprob: -24.875009536743164
    10. '
' → logprob: -26.625009536743164

Token 412: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0008542861323803663
    2. '
' → logprob: -7.1258544921875
    3. '           ' → logprob: -10.6258544921875
    4. '                   ' → logprob: -11.5008544921875
    5. '
' → logprob: -12.2508544921875
    6. '<|end|>' → logprob: -12.7508544921875
    7. '                
' → logprob: -13.0008544921875
    8. '              ' → logprob: -13.0008544921875
    9. '                ' → logprob: -14.1258544921875
    10. ',' → logprob: -14.2508544921875

Token 413: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01695588417351246
    2. '
' → logprob: -4.141955852508545
    3. 'dis' → logprob: -7.641955852508545
    4. '                
' → logprob: -8.266956329345703
    5. '           ' → logprob: -9.641956329345703
    6. '
' → logprob: -10.641956329345703
    7. ',' → logprob: -10.766956329345703
    8. '```' → logprob: -10.766956329345703
    9. '                   ' → logprob: -11.141956329345703
    10. ' disappeared' → logprob: -11.891956329345703

Token 414: ' disappeared' (ID: 57770)
  Prédit: 'dis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dis' → logprob: -7.941850526549388e-06
    2. 'self' → logprob: -12.375007629394531
    3. ' disappeared' → logprob: -12.625007629394531
    4. 'stone' → logprob: -16.12500762939453
    5. 'digit' → logprob: -16.75000762939453
    6. '           ' → logprob: -16.87500762939453
    7. '	dis' → logprob: -17.75000762939453
    8. '   ' → logprob: -18.00000762939453
    9. 'stones' → logprob: -18.50000762939453
    10. 'score' → logprob: -18.62500762939453

Token 415: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -1.9361264946837764e-07
    2. 'score' → logprob: -16.25
    3. '_s' → logprob: -18.25
    4. '_' → logprob: -18.375
    5. '_scores' → logprob: -18.625
    6. '_sc' → logprob: -19.0
    7. '_SCORE' → logprob: -20.25
    8. '_code' → logprob: -20.75
    9. 'Score' → logprob: -20.875
    10. ' _' → logprob: -21.5

Token 416: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.3132643401622772
    2. '+=' → logprob: -1.3132643699645996
    3. '+' → logprob: -13.063263893127441
    4. ']+=' → logprob: -15.063263893127441
    5. '            ' → logprob: -16.938264846801758
    6. '=' → logprob: -17.313264846801758
    7. '                ' → logprob: -17.438264846801758
    8. '+=(' → logprob: -17.813264846801758
    9. '               ' → logprob: -18.063264846801758
    10. ' +' → logprob: -18.438264846801758

Token 417: ' stone' (ID: 14352)
  Prédit: 'stone'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stone' → logprob: -0.0523090697824955
    2. '1' → logprob: -3.677309036254883
    3. ' stone' → logprob: -3.677309036254883
    4. '10' → logprob: -8.177309036254883
    5. ' ' → logprob: -10.052309036254883
    6. '100' → logprob: -11.052309036254883
    7. 'ston' → logprob: -11.427309036254883
    8. 'STONE' → logprob: -12.052309036254883
    9. 'stones' → logprob: -12.302309036254883
    10. 'int' → logprob: -13.239809036254883

Token 418: '.d' (ID: 1380)
  Prédit: '.d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.d' → logprob: -1.9743012671824545e-05
    2. '.' → logprob: -11.250020027160645
    3. ' .' → logprob: -12.125020027160645
    4. '.token' → logprob: -14.625020027160645
    5. '.score' → logprob: -15.000020027160645
    6. '.dis' → logprob: -15.875020027160645
    7. '.digest' → logprob: -16.500019073486328
    8. 'digit' → logprob: -16.625019073486328
    9. '.digital' → logprob: -16.875019073486328
    10. '.damage' → logprob: -17.125019073486328

Token 419: 'igit' (ID: 16673)
  Prédit: 'igit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igit' → logprob: -9.353008499601856e-05
    2. 'digit' → logprob: -9.625093460083008
    3. 'git' → logprob: -10.625093460083008
    4. 'igt' → logprob: -13.875093460083008
    5. 'ight' → logprob: -15.000093460083008
    6. 'ig' → logprob: -15.250093460083008
    7. 'it' → logprob: -15.500093460083008
    8. '1' → logprob: -15.500093460083008
    9. '   ' → logprob: -15.625093460083008
    10. ' digit' → logprob: -15.750093460083008

Token 420: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7413458228111267
    2. '       ' → logprob: -0.7413458228111267
    3. '<|end|>' → logprob: -3.6163458824157715
    4. '*' → logprob: -4.6163458824157715
    5. '<|end|>' → logprob: -5.3663458824157715
    6. ' *' → logprob: -6.3663458824157715
    7. '        
' → logprob: -6.8663458824157715
    8. '  
' → logprob: -7.1163458824157715
    9. '
' → logprob: -7.3663458824157715
    10. '**' → logprob: -7.9913458824157715

Token 421: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00682489387691021
    2. '
' → logprob: -5.131824970245361
    3. ' return' → logprob: -7.381824970245361
    4. 'return' → logprob: -8.381824493408203
    5. '        
' → logprob: -11.256824493408203
    6. '   ' → logprob: -11.756824493408203
    7. '<|end|>' → logprob: -12.131824493408203
    8. '	return' → logprob: -12.506824493408203
    9. '	' → logprob: -12.506824493408203
    10. '
' → logprob: -13.006824493408203

Token 422: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0428195521235466
    2. '       ' → logprob: -3.5428194999694824
    3. ' return' → logprob: -5.042819499969482
    4. 'self' → logprob: -5.042819499969482
    5. ' self' → logprob: -10.29281997680664
    6. '
' → logprob: -10.66781997680664
    7. '   ' → logprob: -11.29281997680664
    8. '	return' → logprob: -13.54281997680664
    9. ' ' → logprob: -13.66781997680664
    10. '```' → logprob: -15.04281997680664

Token 423: ' disappeared' (ID: 57770)
  Prédit: 'dis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dis' → logprob: -0.00033546582562848926
    2. ' disappeared' → logprob: -8.000335693359375
    3. '_dis' → logprob: -18.250335693359375
    4. '	dis' → logprob: -18.625335693359375
    5. ' disappe' → logprob: -20.000335693359375
    6. ' dis' → logprob: -20.500335693359375
    7. 'discard' → logprob: -20.500335693359375
    8. '(dis' → logprob: -21.125335693359375
    9. 'd' → logprob: -21.250335693359375
    10. 'Dis' → logprob: -21.375335693359375

Token 424: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -0.00035143180866725743
    2. 'score' → logprob: -8.000351905822754
    3. 'ed' → logprob: -11.375351905822754
    4. 'd' → logprob: -12.750351905822754
    5. '_scores' → logprob: -14.250351905822754
    6. 'dis' → logprob: -14.750351905822754
    7. 'sc' → logprob: -15.500351905822754
    8. '_SCORE' → logprob: -15.625351905822754
    9. 'Score' → logprob: -15.750351905822754
    10. '_sc' → logprob: -17.500350952148438

Token 425: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 426: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.046442870050668716
    2. '<|end|>' → logprob: -3.921442985534668
    3. '
' → logprob: -4.171442985534668
    4. 'def' → logprob: -4.796442985534668
    5. '    
' → logprob: -7.546442985534668
    6. '```' → logprob: -7.671442985534668
    7. '<|end|>' → logprob: -7.796442985534668
    8. ' ' → logprob: -8.546442985534668
    9. '#' → logprob: -9.421442985534668
    10. '  
' → logprob: -10.296442985534668

Token 427: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -6.392202976712724e-06
    2. ' def' → logprob: -12.250006675720215
    3. '   ' → logprob: -13.500006675720215
    4. '
' → logprob: -15.875006675720215
    5. '    
' → logprob: -21.0000057220459
    6. '	def' → logprob: -22.1250057220459
    7. '

' → logprob: -22.8750057220459
    8. '```' → logprob: -23.2500057220459
    9. '  
' → logprob: -23.7500057220459
    10. ' ' → logprob: -23.7500057220459

Token 428: ' _' (ID: 1175)
  Prédit: ' apply'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' apply' → logprob: -0.8559011816978455
    2. ' collapse' → logprob: -1.4809012413024902
    3. ' drop' → logprob: -1.6059012413024902
    4. ' def' → logprob: -3.4809012413024902
    5. 'def' → logprob: -3.7309012413024902
    6. 'apply' → logprob: -3.8559012413024902
    7. ' _' → logprob: -4.23090124130249
    8. 'drop' → logprob: -4.73090124130249
    9. ' pop' → logprob: -4.85590124130249
    10. ' fall' → logprob: -5.10590124130249

Token 429: 'drop' (ID: 12740)
  Prédit: 'apply'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apply' → logprob: -0.5812524557113647
    2. 'collapse' → logprob: -1.3312524557113647
    3. 'drop' → logprob: -2.2062525749206543
    4. 'fall' → logprob: -3.0812525749206543
    5. 'cascade' → logprob: -4.706252574920654
    6. 'gravity' → logprob: -5.456252574920654
    7. 'remove' → logprob: -6.206252574920654
    8. 'sett' → logprob: -6.456252574920654
    9. 'compress' → logprob: -6.956252574920654
    10. 'compact' → logprob: -7.081252574920654

Token 430: '_st' (ID: 2518)
  Prédit: '_st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -0.1119944155216217
    2. '(self' → logprob: -2.361994504928589
    3. '_columns' → logprob: -4.61199426651001
    4. '_remaining' → logprob: -7.86199426651001
    5. '_rows' → logprob: -7.98699426651001
    6. '_down' → logprob: -8.486994743347168
    7. '_column' → logprob: -8.736994743347168
    8. '_' → logprob: -9.236994743347168
    9. '_one' → logprob: -9.236994743347168
    10. '_cells' → logprob: -9.486994743347168

Token 431: 'ones' (ID: 3617)
  Prédit: 'ones'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ones' → logprob: -0.0015400926349684596
    2. 'one' → logprob: -6.501540184020996
    3. '_' → logprob: -11.126540184020996
    4. '```' → logprob: -13.001540184020996
    5. ' ones' → logprob: -13.001540184020996
    6. 'on' → logprob: -13.126540184020996
    7. '   ' → logprob: -13.251540184020996
    8. '_one' → logprob: -13.251540184020996
    9. '

' → logprob: -13.376540184020996
    10. 'ep' → logprob: -13.501540184020996

Token 432: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -9.849109119386412e-06
    2. '(' → logprob: -11.875009536743164
    3. '   ' → logprob: -13.375009536743164
    4. ' (' → logprob: -14.500009536743164
    5. '       ' → logprob: -14.500009536743164
    6. 'self' → logprob: -15.625009536743164
    7. '(
' → logprob: -17.500009536743164
    8. ' ' → logprob: -18.625009536743164
    9. '(sel' → logprob: -18.750009536743164
    10. '(Self' → logprob: -19.375009536743164

Token 433: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.003233440453186631
    2. 'self' → logprob: -6.003233432769775
    3. '   ' → logprob: -8.128233909606934
    4. '):
' → logprob: -8.378233909606934
    5. '       ' → logprob: -8.753233909606934
    6. ')' → logprob: -10.253233909606934
    7. '(' → logprob: -11.253233909606934
    8. ' self' → logprob: -11.878233909606934
    9. ' (' → logprob: -12.253233909606934
    10. '
' → logprob: -12.503233909606934

Token 434: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003206711495295167
    2. ' for' → logprob: -6.003206729888916
    3. 'for' → logprob: -7.503206729888916
    4. '   ' → logprob: -9.253206253051758
    5. '
' → logprob: -9.503206253051758
    6. '           ' → logprob: -12.503206253051758
    7. '```' → logprob: -12.628206253051758
    8. '	for' → logprob: -14.503206253051758
    9. '     ' → logprob: -15.128206253051758
    10. '        
' → logprob: -15.253206253051758

Token 435: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08184384554624557
    2. '       ' → logprob: -2.581843852996826
    3. ' for' → logprob: -5.831843852996826
    4. '   ' → logprob: -11.081843376159668
    5. '	for' → logprob: -13.706843376159668
    6. '           ' → logprob: -15.831843376159668
    7. '```' → logprob: -15.956843376159668
    8. '
' → logprob: -16.081844329833984
    9. '#' (adapté à ' #') → logprob: -17.456844329833984
    10. '``' → logprob: -17.706844329833984

Token 436: ' For' (ID: 2214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00034416402922943234
    2. ' for' → logprob: -8.000344276428223
    3. '       ' → logprob: -12.125344276428223
    4. 'For' → logprob: -13.000344276428223
    5. '   ' → logprob: -13.875344276428223
    6. '
' → logprob: -17.625343322753906
    7. 'def' → logprob: -17.875343322753906
    8. '#' → logprob: -17.875343322753906
    9. '	for' → logprob: -18.750343322753906
    10. 'columns' → logprob: -19.125343322753906

Token 437: ' each' (ID: 2454)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.03936013579368591
    2. ' c' → logprob: -3.2893600463867188
    3. 'col' → logprob: -6.789360046386719
    4. ' col' → logprob: -8.664360046386719
    5. ' each' → logprob: -11.164360046386719
    6. 'each' → logprob: -12.664360046386719
    7. '   ' → logprob: -13.914360046386719
    8. 'r' → logprob: -14.414360046386719
    9. '
' → logprob: -14.789360046386719
    10. '	c' → logprob: -16.53936004638672

Token 438: ' column' (ID: 6000)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5982214212417603
    2. 'col' → logprob: -1.0982214212417603
    3. ' c' → logprob: -2.4732213020324707
    4. ' col' → logprob: -3.4732213020324707
    5. 'column' → logprob: -6.973221302032471
    6. ' column' → logprob: -8.223221778869629
    7. 'r' → logprob: -8.598221778869629
    8. ' r' → logprob: -11.473221778869629
    9. ')' → logprob: -12.223221778869629
    10. '   ' → logprob: -12.348221778869629

Token 439: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29228290915489197
    2. ' in' → logprob: -1.6672829389572144
    3. ' for' → logprob: -3.292282819747925
    4. ',' → logprob: -4.167283058166504
    5. ' c' → logprob: -4.917283058166504
    6. '   ' → logprob: -6.417283058166504
    7. 'c' → logprob: -6.792283058166504
    8. '           ' → logprob: -6.917283058166504
    9. ' col' → logprob: -8.042283058166504
    10. 'for' → logprob: -9.167283058166504

Token 440: ' simulate' (ID: 66687)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6931615471839905
    2. 'for' → logprob: -0.6931615471839905
    3. '       ' → logprob: -11.568161964416504
    4. '   ' → logprob: -13.068161964416504
    5. '
' → logprob: -13.193161964416504
    6. '    ' → logprob: -15.068161964416504
    7. '        ' → logprob: -15.568161964416504
    8. '           ' → logprob: -16.068161010742188
    9. '        
' → logprob: -16.068161010742188
    10. 'r' → logprob: -16.568161010742188

Token 441: ' gravity' (ID: 44967)
  Prédit: 'gravity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gravity' → logprob: -0.07250439375638962
    2. ' gravity' → logprob: -3.6975042819976807
    3. 'for' → logprob: -3.9475042819976807
    4. 'fall' → logprob: -4.69750452041626
    5. 'stones' → logprob: -5.19750452041626
    6. '   ' → logprob: -5.19750452041626
    7. 'the' → logprob: -6.57250452041626
    8. ' for' → logprob: -6.82250452041626
    9. 'stone' → logprob: -6.94750452041626
    10. ' dropping' → logprob: -8.072504043579102

Token 442: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02105807326734066
    2. ' for' → logprob: -4.021058082580566
    3. '
' → logprob: -6.271058082580566
    4. 'for' → logprob: -7.396058082580566
    5. ',' → logprob: -9.021058082580566
    6. '   ' → logprob: -9.146058082580566
    7. '<|end|>' → logprob: -9.396058082580566
    8. '        
' → logprob: -10.646058082580566
    9. '```' → logprob: -10.771058082580566
    10. '           ' → logprob: -10.771058082580566

Token 443: ' stones' (ID: 38940)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7639926075935364
    2. '       ' → logprob: -1.0139925479888916
    3. 'for' → logprob: -1.7639925479888916
    4. '   ' → logprob: -9.888992309570312
    5. '```' → logprob: -11.513992309570312
    6. '	for' → logprob: -12.638992309570312
    7. '
' → logprob: -13.013992309570312
    8. '           ' → logprob: -13.013992309570312
    9. ' ' → logprob: -14.513992309570312
    10. 'For' → logprob: -15.763992309570312

Token 444: ' fall' (ID: 5617)
  Prédit: 'fall'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fall' → logprob: -0.08993697166442871
    2. ' fall' → logprob: -2.5899369716644287
    3. 'for' → logprob: -5.339937210083008
    4. '   ' → logprob: -5.464937210083008
    5. 'drop' → logprob: -7.339937210083008
    6. '       ' → logprob: -8.089937210083008
    7. ' for' → logprob: -8.214937210083008
    8. ' will' → logprob: -8.839937210083008
    9. 'will' → logprob: -9.089937210083008
    10. 'move' → logprob: -9.339937210083008

Token 445: ' down' (ID: 1917)
  Prédit: 'down'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'down' → logprob: -0.12786225974559784
    2. ' down' → logprob: -2.2528622150421143
    3. '       ' → logprob: -4.627862453460693
    4. 'from' → logprob: -5.877862453460693
    5. '   ' → logprob: -6.377862453460693
    6. 'to' → logprob: -8.502861976623535
    7. ' downward' → logprob: -9.002861976623535
    8. 'for' → logprob: -9.127861976623535
    9. ' from' → logprob: -9.377861976623535
    10. ' to' → logprob: -9.752861976623535

Token 446: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012306785210967064
    2. ' for' → logprob: -4.5123066902160645
    3. 'for' → logprob: -7.5123066902160645
    4. ',' → logprob: -8.262307167053223
    5. '
' → logprob: -8.512307167053223
    6. '   ' → logprob: -8.887307167053223
    7. '           ' → logprob: -10.137307167053223
    8. ' at' → logprob: -10.637307167053223
    9. ' to' → logprob: -10.887307167053223
    10. ' and' → logprob: -11.512307167053223

Token 447: ' fill' (ID: 6954)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.2937221825122833
    2. ' the' → logprob: -2.043722152709961
    3. 'fill' → logprob: -2.168722152709961
    4. 'bottom' → logprob: -5.293722152709961
    5. ' fill' → logprob: -5.668722152709961
    6. 'each' → logprob: -6.668722152709961
    7. ' bottom' → logprob: -8.418722152709961
    8. 'lowest' → logprob: -8.418722152709961
    9. ' each' → logprob: -8.543722152709961
    10. '#' → logprob: -8.918722152709961

Token 448: ' disappeared' (ID: 57770)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.9572561979293823
    2. 'empty' → logprob: -1.0822561979293823
    3. ' the' → logprob: -2.082256317138672
    4. ' empty' → logprob: -2.457256317138672
    5. '   ' → logprob: -2.957256317138672
    6. '       ' → logprob: -4.957256317138672
    7. 'positions' → logprob: -6.332256317138672
    8. 'each' → logprob: -6.457256317138672
    9. 'cells' → logprob: -7.457256317138672
    10. ' each' → logprob: -7.707256317138672

Token 449: ' stones' (ID: 38940)
  Prédit: ' spots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' spots' → logprob: -0.6032334566116333
    2. ' spaces' → logprob: -1.4782334566116333
    3. ' positions' → logprob: -3.1032333374023438
    4. 'positions' → logprob: -3.2282333374023438
    5. 'stones' → logprob: -3.3532333374023438
    6. 'spaces' → logprob: -3.6032333374023438
    7. '   ' → logprob: -4.103233337402344
    8. 'spots' → logprob: -4.228233337402344
    9. ' or' → logprob: -4.353233337402344
    10. ' cells' → logprob: -4.353233337402344

Token 450: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002655085874721408
    2. ' for' → logprob: -6.377655029296875
    3. ',' → logprob: -8.002655029296875
    4. '
' → logprob: -8.127655029296875
    5. 'for' → logprob: -9.252655029296875
    6. '.' → logprob: -9.752655029296875
    7. '   ' → logprob: -9.877655029296875
    8. '           ' → logprob: -9.877655029296875
    9. ' and' → logprob: -10.502655029296875
    10. ' at' → logprob: -11.877655029296875

Token 451: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05605122074484825
    2. '
' → logprob: -2.931051254272461
    3. '   ' → logprob: -7.431051254272461
    4. '        
' → logprob: -8.931051254272461
    5. '```' → logprob: -9.056051254272461
    6. ' for' → logprob: -9.431051254272461
    7. ',' → logprob: -9.931051254272461
    8. '           ' → logprob: -10.181051254272461
    9. '\n' → logprob: -10.556051254272461
    10. '\' → logprob: -10.806051254272461

Token 452: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.16169969737529755
    2. ' for' → logprob: -1.911699652671814
    3. '       ' → logprob: -6.5366997718811035
    4. '   ' → logprob: -10.661699295043945
    5. '
' → logprob: -13.661699295043945
    6. '	for' → logprob: -15.786699295043945
    7. '```' → logprob: -15.911699295043945
    8. ' ' → logprob: -15.911699295043945
    9. '    ' → logprob: -16.036699295043945
    10. '           ' → logprob: -16.661699295043945

Token 453: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6932633519172668
    2. ' c' → logprob: -0.6932633519172668
    3. ' col' → logprob: -9.818263053894043
    4. 'col' → logprob: -9.818263053894043
    5. 'r' → logprob: -12.193263053894043
    6. ' r' → logprob: -13.318263053894043
    7. '_c' → logprob: -15.443263053894043
    8. '	c' → logprob: -16.06826400756836
    9. ' ' → logprob: -16.94326400756836
    10. '   ' → logprob: -16.94326400756836

Token 454: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012513537891209126
    2. 'in' → logprob: -4.387513637542725
    3. ' ' → logprob: -14.012513160705566
    4. '   ' → logprob: -14.137513160705566
    5. 'import' → logprob: -14.762513160705566
    6. ')' → logprob: -15.137513160705566
    7. 'range' → logprob: -15.262513160705566
    8. ',' → logprob: -15.387513160705566
    9. 'In' → logprob: -15.387513160705566
    10. 's' → logprob: -15.512513160705566

Token 455: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.25192907452583313
    2. ' range' → logprob: -1.5019290447235107
    3. '   ' → logprob: -18.501928329467773
    4. '0' → logprob: -19.001928329467773
    5. '(range' → logprob: -19.251928329467773
    6. ' ' → logprob: -19.501928329467773
    7. '	range' → logprob: -19.751928329467773
    8. '  ' → logprob: -21.501928329467773
    9. 'Range' → logprob: -21.751928329467773
    10. '    ' → logprob: -21.876928329467773

Token 456: '(Board' (ID: 157859)
  Prédit: '(Board'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Board' → logprob: -0.0002668192028068006
    2. '(self' → logprob: -8.250267028808594
    3. 'Board' → logprob: -12.500267028808594
    4. '(' → logprob: -13.500267028808594
    5. ' Board' → logprob: -15.250267028808594
    6. 'self' → logprob: -16.250267028808594
    7. '(Book' → logprob: -18.000267028808594
    8. '(board' → logprob: -18.375267028808594
    9. '.Board' → logprob: -18.500267028808594
    10. '(B' → logprob: -18.875267028808594

Token 457: '.W' (ID: 2342)
  Prédit: '.W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.W' → logprob: -0.00014609156642109156
    2. 'WIDTH' → logprob: -9.12514591217041
    3. '.' → logprob: -10.25014591217041
    4. ' .' → logprob: -13.50014591217041
    5. '   ' → logprob: -16.250146865844727
    6. ' WIDTH' → logprob: -16.875146865844727
    7. '.Width' → logprob: -17.000146865844727
    8. '	W' → logprob: -17.250146865844727
    9. 'W' → logprob: -17.375146865844727
    10. '.WEST' → logprob: -18.375146865844727

Token 458: 'IDTH' (ID: 20688)
  Prédit: 'IDTH'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IDTH' → logprob: -0.00022237090161070228
    2. 'WIDTH' → logprob: -8.750222206115723
    3. 'ID' → logprob: -9.875222206115723
    4. 'D' → logprob: -12.125222206115723
    5. 'idth' → logprob: -12.875222206115723
    6. '5' → logprob: -13.000222206115723
    7. 'IDE' → logprob: -14.250222206115723
    8. '   ' → logprob: -14.750222206115723
    9. 'HEIGHT' → logprob: -15.250222206115723
    10. 'ITH' → logprob: -15.500222206115723

Token 459: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004711714573204517
    2. '):
' → logprob: -5.504711627960205
    3. ' ):' → logprob: -7.379711627960205
    4. '):
' → logprob: -11.879712104797363
    5. ' ):
' → logprob: -13.879712104797363
    6. ':' → logprob: -14.129712104797363
    7. '):

' → logprob: -14.879712104797363
    8. '():' → logprob: -16.254711151123047
    9. '   ' → logprob: -16.629711151123047
    10. '}:' → logprob: -16.754711151123047

Token 460: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0016231719637289643
    2. '       ' → logprob: -7.251623153686523
    3. '   ' → logprob: -7.501623153686523
    4. ' for' → logprob: -8.876623153686523
    5. '
' → logprob: -9.626623153686523
    6. 'r' → logprob: -10.376623153686523
    7. 'for' → logprob: -11.001623153686523
    8. ',' → logprob: -11.001623153686523
    9. '```' → logprob: -11.001623153686523
    10. 'rows' → logprob: -11.376623153686523

Token 461: ' stack' (ID: 10825)
  Prédit: 'write'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'write' → logprob: -0.2933681607246399
    2. 'bottom' → logprob: -1.5433681011199951
    3. 'stack' (adapté à ' stack') → logprob: -3.918368101119995
    4. 'empty' → logprob: -4.918368339538574
    5. 'stones' → logprob: -5.168368339538574
    6. 'new' → logprob: -6.418368339538574
    7. 'pointer' → logprob: -6.418368339538574
    8. '       ' → logprob: -6.918368339538574
    9. '   ' → logprob: -7.043368339538574
    10. 'r' → logprob: -7.793368339538574

Token 462: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0790155902504921
    2. '=' → logprob: -2.5790154933929443
    3. '=[]' → logprob: -9.079015731811523
    4. ':' → logprob: -11.704015731811523
    5. '=[]
' → logprob: -13.704015731811523
    6. '   ' → logprob: -14.204015731811523
    7. ']' → logprob: -14.704015731811523
    8. ')' → logprob: -15.704015731811523
    9. '           ' → logprob: -15.704015731811523
    10. '    ' → logprob: -15.829015731811523

Token 463: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.060145892202854156
    2. '[' → logprob: -3.560145854949951
    3. '[]
' → logprob: -3.560145854949951
    4. '[
' → logprob: -6.560145854949951
    5. '[]

' → logprob: -9.81014633178711
    6. ' []' → logprob: -11.81014633178711
    7. '[int' → logprob: -12.56014633178711
    8. '[i' → logprob: -12.68514633178711
    9. '[row' → logprob: -13.06014633178711
    10. '[]}' → logprob: -13.43514633178711

Token 464: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009542394429445267
    2. 'for' → logprob: -4.759542465209961
    3. ' for' → logprob: -7.009542465209961
    4. '   ' → logprob: -11.134542465209961
    5. '       ' → logprob: -11.759542465209961
    6. '               ' → logprob: -13.884542465209961
    7. '	for' → logprob: -15.884542465209961
    8. ' ' → logprob: -15.884542465209961
    9. '#' → logprob: -16.13454246520996
    10. '            
' → logprob: -16.13454246520996

Token 465: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -9.088346359931165e-07
    2. '           ' → logprob: -14.500000953674316
    3. ' for' → logprob: -15.000000953674316
    4. '#' (adapté à ' #') → logprob: -19.5
    5. '   ' → logprob: -21.375
    6. '       ' → logprob: -22.625
    7. '               ' → logprob: -23.125
    8. '	for' → logprob: -23.125
    9. '            
' → logprob: -24.125
    10. ' ' → logprob: -24.625

Token 466: ' Collect' (ID: 30483)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.251091377227567e-05
    2. '           ' → logprob: -10.125042915344238
    3. ' for' → logprob: -13.500042915344238
    4. '#' → logprob: -13.875042915344238
    5. 'r' → logprob: -17.500041961669922
    6. '   ' → logprob: -19.625041961669922
    7. 'self' → logprob: -19.875041961669922
    8. 'For' → logprob: -20.000041961669922
    9. '       ' → logprob: -20.875041961669922
    10. '               ' → logprob: -21.000041961669922

Token 467: ' stones' (ID: 38940)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.008586675859987736
    2. ' for' → logprob: -5.008586883544922
    3. 'stones' → logprob: -6.383586883544922
    4. 'r' → logprob: -9.133586883544922
    5. ' stones' → logprob: -9.633586883544922
    6. '           ' → logprob: -13.008586883544922
    7. '#' → logprob: -13.883586883544922
    8. 'all' → logprob: -14.133586883544922
    9. '
' → logprob: -14.383586883544922
    10. '   ' → logprob: -14.883586883544922

Token 468: ' that' (ID: 484)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14315927028656006
    2. ' for' → logprob: -2.3931593894958496
    3. 'for' → logprob: -3.2681593894958496
    4. ' at' → logprob: -6.51815938949585
    5. ' in' → logprob: -7.01815938949585
    6. 'from' → logprob: -7.64315938949585
    7. ' from' → logprob: -8.143158912658691
    8. 'in' → logprob: -8.768158912658691
    9. 'at' → logprob: -9.018158912658691
    10. ',' → logprob: -9.268158912658691

Token 469: ' have' (ID: 679)
  Prédit: 'are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'are' → logprob: -0.08090447634458542
    2. ' are' → logprob: -2.955904483795166
    3. 'is' → logprob: -3.705904483795166
    4. ' is' → logprob: -7.455904483795166
    5. 'not' → logprob: -8.205904006958008
    6. '
' → logprob: -9.080904006958008
    7. 'for' → logprob: -10.330904006958008
    8. 'and' → logprob: -10.830904006958008
    9. 'self' → logprob: -10.955904006958008
    10. 'import' → logprob: -11.455904006958008

Token 470: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.00018744789122138172
    2. ' not' → logprob: -8.625187873840332
    3. 'stone' → logprob: -11.875187873840332
    4. '(not' → logprob: -14.375187873840332
    5. 'is' → logprob: -16.375186920166016
    6. 'dis' → logprob: -16.500186920166016
    7. 'grid' → logprob: -16.625186920166016
    8. 'and' → logprob: -16.750186920166016
    9. ' stone' → logprob: -17.500186920166016
    10. 'a' → logprob: -17.750186920166016

Token 471: ' disappeared' (ID: 57770)
  Prédit: 'dis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dis' → logprob: -0.04884067177772522
    2. ' disappeared' → logprob: -3.0488407611846924
    3. '.dis' → logprob: -8.298840522766113
    4. 'None' → logprob: -13.673840522766113
    5. '_dis' → logprob: -13.673840522766113
    6. 'been' → logprob: -14.298840522766113
    7. '.' → logprob: -14.548840522766113
    8. ' dis' → logprob: -15.548840522766113
    9. 'self' → logprob: -15.923840522766113
    10. '	dis' → logprob: -16.04884147644043

Token 472: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20295226573944092
    2. ' for' → logprob: -1.827952265739441
    3. 'for' → logprob: -3.8279523849487305
    4. ' in' → logprob: -7.5779523849487305
    5. ' and' → logprob: -8.07795238494873
    6. ',' → logprob: -8.82795238494873
    7. 'and' → logprob: -9.20295238494873
    8. ' at' → logprob: -9.70295238494873
    9. ' or' → logprob: -11.57795238494873
    10. '
' → logprob: -11.70295238494873

Token 473: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2580285966396332
    2. ' for' → logprob: -1.5080286264419556
    3. 'for' → logprob: -5.258028507232666
    4. ' in' → logprob: -7.508028507232666
    5. '
' → logprob: -9.133028984069824
    6. ' at' → logprob: -9.508028984069824
    7. ',' → logprob: -9.508028984069824
    8. ' and' → logprob: -10.383028984069824
    9. '            
' → logprob: -11.633028984069824
    10. '       ' → logprob: -11.883028984069824

Token 474: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.007009817287325859
    2. '           ' → logprob: -5.007009983062744
    3. ' for' → logprob: -8.132009506225586
    4. '   ' → logprob: -15.007009506225586
    5. '               ' → logprob: -16.382009506225586
    6. '       ' → logprob: -16.632009506225586
    7. '
' → logprob: -18.507009506225586
    8. '	for' → logprob: -18.507009506225586
    9. '```' → logprob: -18.632009506225586
    10. ' ' → logprob: -18.632009506225586

Token 475: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -9.615255839889869e-05
    2. ' r' → logprob: -9.250096321105957
    3. '	r' → logprob: -19.00009536743164
    4. 'row' → logprob: -19.12509536743164
    5. '_r' → logprob: -20.50009536743164
    6. '(r' → logprob: -23.12509536743164
    7. 'range' → logprob: -23.37509536743164
    8. '   ' → logprob: -23.37509536743164
    9. '[r' → logprob: -24.12509536743164
    10. 'self' → logprob: -24.37509536743164

Token 476: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006716436706483364
    2. 'in' → logprob: -5.006716251373291
    3. 'self' → logprob: -15.00671672821045
    4. '   ' → logprob: -15.50671672821045
    5. 'In' → logprob: -16.631715774536133
    6. '
' → logprob: -16.756715774536133
    7. '       ' → logprob: -16.756715774536133
    8. '	in' → logprob: -16.881715774536133
    9. 'range' → logprob: -17.131715774536133
    10. '           ' → logprob: -17.131715774536133

Token 477: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -2.868328920158092e-05
    2. ' range' → logprob: -10.500028610229492
    3. 're' → logprob: -13.750028610229492
    4. '   ' → logprob: -18.000028610229492
    5. ' reversed' → logprob: -20.625028610229492
    6. 'reverse' → logprob: -21.375028610229492
    7. '(range' → logprob: -21.625028610229492
    8. '	range' → logprob: -21.875028610229492
    9. 'in' → logprob: -22.125028610229492
    10. ' ' → logprob: -22.625028610229492

Token 478: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.4855663721391466e-05
    2. 'self' → logprob: -11.125015258789062
    3. '(' → logprob: -16.625015258789062
    4. '(
' → logprob: -18.625015258789062
    5. '
' → logprob: -19.250015258789062
    6. '[self' → logprob: -19.500015258789062
    7. '   ' → logprob: -20.250015258789062
    8. '=self' → logprob: -21.000015258789062
    9. ' self' → logprob: -21.250015258789062
    10. '0' → logprob: -21.250015258789062

Token 479: '.height' (ID: 11682)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0068923779763281345
    2. '(self' → logprob: -5.006892204284668
    3. ' self' → logprob: -9.131892204284668
    4. '=self' → logprob: -11.381892204284668
    5. '           ' → logprob: -11.506892204284668
    6. '[self' → logprob: -11.506892204284668
    7. '.height' → logprob: -11.756892204284668
    8. '       ' → logprob: -11.756892204284668
    9. '
' → logprob: -12.006892204284668
    10. '   ' → logprob: -12.506892204284668

Token 480: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.47560814023017883
    2. ' -' → logprob: -0.9756081104278564
    3. '):
' → logprob: -6.7256083488464355
    4. '):' → logprob: -8.100607872009277
    5. '   ' → logprob: -11.350607872009277
    6. ' ' → logprob: -11.725607872009277
    7. '       ' → logprob: -12.975607872009277
    8. '):

' → logprob: -13.350607872009277
    9. ')' → logprob: -13.850607872009277
    10. '           ' → logprob: -13.850607872009277

Token 481: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1279553291387856e-05
    2. '-' → logprob: -11.500011444091797
    3. ' ' → logprob: -14.500011444091797
    4. ' -' → logprob: -14.500011444091797
    5. ',' → logprob: -16.875011444091797
    6. '   ' → logprob: -17.125011444091797
    7. '
' → logprob: -17.375011444091797
    8. '2' → logprob: -17.875011444091797
    9. ',-' → logprob: -18.500011444091797
    10. '```' → logprob: -19.000011444091797

Token 482: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00026777281891554594
    2. ',-' → logprob: -8.75026798248291
    3. ' ,' → logprob: -9.12526798248291
    4. ' ,-' → logprob: -15.00026798248291
    5. '-' → logprob: -16.750267028808594
    6. ' -' → logprob: -17.250267028808594
    7. ',
' → logprob: -17.500267028808594
    8. '           ' → logprob: -18.125267028808594
    9. '   ' → logprob: -18.250267028808594
    10. ',None' → logprob: -18.625267028808594

Token 483: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0002613358374219388
    2. ' -' → logprob: -8.250261306762695
    3. '   ' → logprob: -18.750261306762695
    4. ' ' → logprob: -19.750261306762695
    5. '0' → logprob: -20.250261306762695
    6. '           ' → logprob: -20.750261306762695
    7. '-
' → logprob: -22.250261306762695
    8. '       ' → logprob: -22.375261306762695
    9. '  ' → logprob: -22.375261306762695
    10. '                   ' → logprob: -22.500261306762695

Token 484: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '   ' → logprob: -17.75
    4. '
' → logprob: -17.875
    5. '```' → logprob: -18.0
    6. '

' → logprob: -19.75
    7. '１' → logprob: -19.8125
    8. '-' → logprob: -19.875
    9. '2' → logprob: -20.0625
    10. '۱' → logprob: -20.1875

Token 485: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004416347946971655
    2. '-' → logprob: -5.504416465759277
    3. ',-' → logprob: -8.004416465759277
    4. '1' → logprob: -13.504416465759277
    5. ' ,' → logprob: -13.879416465759277
    6. ' -' → logprob: -13.879416465759277
    7. '-,' → logprob: -15.254416465759277
    8. '   ' → logprob: -15.629416465759277
    9. ',
' → logprob: -16.37941551208496
    10. '```' → logprob: -17.00441551208496

Token 486: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0010332842357456684
    2. ' -' → logprob: -6.876033306121826
    3. '```' → logprob: -15.626032829284668
    4. '   ' → logprob: -16.501033782958984
    5. ')' → logprob: -16.626033782958984
    6. ' ' → logprob: -16.876033782958984
    7. ',' → logprob: -17.376033782958984
    8. '0' → logprob: -17.501033782958984
    9. '−' → logprob: -17.626033782958984
    10. '1' → logprob: -18.251033782958984

Token 487: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. ')' → logprob: -17.25
    4. '```' → logprob: -17.875
    5. '   ' → logprob: -18.5
    6. '-' → logprob: -19.375
    7. '
' → logprob: -19.625
    8. '１' → logprob: -19.75
    9. '۱' → logprob: -20.1875
    10. '):
' → logprob: -20.1875

Token 488: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.11320570856332779
    2. '):' → logprob: -2.238205671310425
    3. '):
' → logprob: -8.488205909729004
    4. ',' → logprob: -8.863205909729004
    5. ',-' → logprob: -12.363205909729004
    6. '           ' → logprob: -12.363205909729004
    7. '-' → logprob: -12.488205909729004
    8. '               ' → logprob: -12.488205909729004
    9. '):

' → logprob: -12.488205909729004
    10. ':' → logprob: -12.613205909729004

Token 489: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0031346979085355997
    2. ':' → logprob: -6.878134727478027
    3. '):' → logprob: -7.253134727478027
    4. ' stone' → logprob: -7.753134727478027
    5. '):
' → logprob: -7.878134727478027
    6. ' if' → logprob: -8.753134727478027
    7. ',' → logprob: -8.878134727478027
    8. '           ' → logprob: -9.378134727478027
    9. ')' → logprob: -10.003134727478027
    10. ':
' → logprob: -10.128134727478027

Token 490: ' stone' (ID: 14352)
  Prédit: 'stone'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stone' (adapté à ' stone') → logprob: -0.49073526263237
    2. ' stone' → logprob: -0.9907352924346924
    3. '               ' → logprob: -4.115735054016113
    4. 'ston' → logprob: -9.365735054016113
    5. '                   ' → logprob: -9.490735054016113
    6. 'row' → logprob: -10.865735054016113
    7. '   ' → logprob: -11.990735054016113
    8. 'if' → logprob: -12.240735054016113
    9. 'cell' → logprob: -12.490735054016113
    10. 'st' → logprob: -12.615735054016113

Token 491: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519291639328003
    2. ' =' → logprob: -1.5019291639328003
    3. ':=' → logprob: -16.376928329467773
    4. ' ' → logprob: -17.626928329467773
    5. '=self' → logprob: -17.876928329467773
    6. ':' → logprob: -18.501928329467773
    7. '=
' → logprob: -18.751928329467773
    8. '=

' → logprob: -18.751928329467773
    9. '＝' → logprob: -19.251928329467773
    10. '   ' → logprob: -19.251928329467773

Token 492: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.01815146580338478
    2. ' self' → logprob: -4.01815128326416
    3. '(self' → logprob: -14.14315128326416
    4. '               ' → logprob: -14.51815128326416
    5. '=self' → logprob: -16.143152236938477
    6. '[self' → logprob: -16.143152236938477
    7. '	self' → logprob: -16.643152236938477
    8. '           ' → logprob: -16.768152236938477
    9. '                   ' → logprob: -16.768152236938477
    10. ' ' → logprob: -17.768152236938477

Token 493: '.grid' (ID: 19269)
  Prédit: '.grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.grid' → logprob: -0.002083166502416134
    2. 'self' → logprob: -6.7520833015441895
    3. 'grid' → logprob: -7.0020833015441895
    4. '.' → logprob: -13.502082824707031
    5. ' grid' → logprob: -14.752082824707031
    6. '	grid' → logprob: -15.252082824707031
    7. '.self' → logprob: -15.502082824707031
    8. ' .' → logprob: -15.502082824707031
    9. ' self' → logprob: -16.12708282470703
    10. '
' → logprob: -17.25208282470703

Token 494: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -2.696889623621246e-06
    2. 'r' → logprob: -12.87500286102295
    3. '[' → logprob: -18.500001907348633
    4. ' [' → logprob: -19.750001907348633
    5. '(r' → logprob: -20.125001907348633
    6. '   ' → logprob: -21.000001907348633
    7. '[
' → logprob: -21.500001907348633
    8. '[row' → logprob: -22.000001907348633
    9. '	r' → logprob: -22.125001907348633
    10. ' r' → logprob: -22.250001907348633

Token 495: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0221900325268507
    2. '[c' → logprob: -3.8971900939941406
    3. ')[' → logprob: -6.522190093994141
    4. '[' → logprob: -9.52219009399414
    5. 'c' → logprob: -10.89719009399414
    6. ' ][' → logprob: -10.89719009399414
    7. ']' → logprob: -11.39719009399414
    8. ')' → logprob: -11.89719009399414
    9. '   ' → logprob: -12.27219009399414
    10. '           ' → logprob: -12.27219009399414

Token 496: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.4498052223643754e-05
    2. ' c' → logprob: -11.625014305114746
    3. '[c' → logprob: -12.250014305114746
    4. ')c' → logprob: -14.875014305114746
    5. '][' → logprob: -15.125014305114746
    6. '
' → logprob: -17.250015258789062
    7. '   ' → logprob: -17.250015258789062
    8. '[' → logprob: -17.375015258789062
    9. ')' → logprob: -17.625015258789062
    10. '```' → logprob: -17.875015258789062

Token 497: ']
' (ID: 1592)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.005346532445400953
    2. ')' → logprob: -5.255346298217773
    3. '               ' → logprob: -9.255346298217773
    4. ')
' → logprob: -12.005346298217773
    5. ']
' → logprob: -12.255346298217773
    6. ' )
' → logprob: -12.630346298217773
    7. '):
' → logprob: -14.255346298217773
    8. '           ' → logprob: -14.255346298217773
    9. '                   ' → logprob: -14.255346298217773
    10. '）
' → logprob: -15.630346298217773

Token 498: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00018804390856530517
    2. ' if' → logprob: -9.250187873840332
    3. '                ' → logprob: -10.500187873840332
    4. 'if' → logprob: -10.750187873840332
    5. '                
' → logprob: -11.000187873840332
    6. '	           ' → logprob: -12.000187873840332
    7. '		       ' → logprob: -12.500187873840332
    8. '<|end|>' → logprob: -12.875187873840332
    9. ' ' → logprob: -13.250187873840332
    10. '                   ' → logprob: -13.375187873840332

Token 499: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0043446677736938
    2. '               ' → logprob: -5.754344463348389
    3. ' if' → logprob: -6.754344463348389
    4. '	if' → logprob: -14.504344940185547
    5. '           ' → logprob: -17.504344940185547
    6. '			' → logprob: -18.379344940185547
    7. '                   ' → logprob: -18.504344940185547
    8. '                ' → logprob: -19.004344940185547
    9. '	           ' → logprob: -19.004344940185547
    10. '   ' → logprob: -19.379344940185547

Token 500: ' stone' (ID: 14352)
  Prédit: 'stone'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stone' → logprob: -0.00033832306507974863
    2. ' stone' → logprob: -8.000338554382324
    3. 'ston' → logprob: -13.000338554382324
    4. '   ' → logprob: -15.375338554382324
    5. 'not' → logprob: -16.625337600708008
    6. 'stones' → logprob: -16.750337600708008
    7. 'Stone' → logprob: -16.750337600708008
    8. 'STONE' → logprob: -17.500337600708008
    9. 'sten' → logprob: -18.250337600708008
    10. ' ' → logprob: -18.875337600708008

Token 501: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.048598840832710266
    2. ' is' → logprob: -3.0485987663269043
    3. 'and' → logprob: -11.423599243164062
    4. ' and' → logprob: -14.923599243164062
    5. 'not' → logprob: -16.048599243164062
    6. '
' → logprob: -18.048599243164062
    7. ')' → logprob: -18.423599243164062
    8. '	is' → logprob: -18.923599243164062
    9. '=' → logprob: -19.048599243164062
    10. '

' → logprob: -19.173599243164062

Token 502: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.029949959367513657
    2. ' not' → logprob: -3.529949903488159
    3. 'None' → logprob: -8.529950141906738
    4. 'Not' → logprob: -13.904950141906738
    5. ' None' → logprob: -14.404950141906738
    6. '   ' → logprob: -15.779950141906738
    7. 'none' → logprob: -16.279949188232422
    8. ' ' → logprob: -17.154949188232422
    9. '       ' → logprob: -17.154949188232422
    10. '
' → logprob: -17.279949188232422

Token 503: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -2.165027217415627e-05
    2. ' None' → logprob: -10.750021934509277
    3. '(None' → logprob: -16.62502098083496
    4. 'none' → logprob: -17.50002098083496
    5. 'not' → logprob: -18.00002098083496
    6. '_None' → logprob: -18.25002098083496
    7. '=None' → logprob: -19.75002098083496
    8. '_none' → logprob: -20.37502098083496
    9. ',None' → logprob: -20.62502098083496
    10. 'null' → logprob: -20.75002098083496

Token 504: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.25193095207214355
    2. 'and' → logprob: -1.5019309520721436
    3. '                   ' → logprob: -14.376931190490723
    4. '                ' → logprob: -14.876931190490723
    5. '               ' → logprob: -15.001931190490723
    6. ' ' → logprob: -15.126931190490723
    7. ' ' → logprob: -16.626930236816406
    8. '                    ' → logprob: -16.626930236816406
    9. '	and' → logprob: -17.751930236816406
    10. 'not' → logprob: -17.751930236816406

Token 505: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.00011439072113716975
    2. ' not' → logprob: -9.125114440917969
    3. '   ' → logprob: -12.250114440917969
    4. '(not' → logprob: -15.250114440917969
    5. '!' → logprob: -16.00011444091797
    6. '	not' → logprob: -16.62511444091797
    7. 'n' → logprob: -17.12511444091797
    8. '```' → logprob: -17.37511444091797
    9. '
' → logprob: -17.62511444091797
    10. 'no' → logprob: -17.62511444091797

Token 506: ' stone' (ID: 14352)
  Prédit: 'stone'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stone' → logprob: -0.00317783304490149
    2. ' stone' → logprob: -5.753177642822266
    3. 'ston' → logprob: -16.253177642822266
    4. 'Stone' → logprob: -17.378177642822266
    5. '   ' → logprob: -19.003177642822266
    6. '石' → logprob: -19.503177642822266
    7. 'stones' → logprob: -20.128177642822266
    8. 'estone' → logprob: -20.378177642822266
    9. 'STONE' → logprob: -20.378177642822266
    10. ' ' → logprob: -20.878177642822266

Token 507: '.dis' (ID: 8454)
  Prédit: '.dis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dis' → logprob: -0.005260322242975235
    2. '.st' → logprob: -5.255260467529297
    3. '.' → logprob: -11.255260467529297
    4. ' .' → logprob: -12.255260467529297
    5. 'dis' → logprob: -12.255260467529297
    6. '.des' → logprob: -14.130260467529297
    7. '.star' → logprob: -14.505260467529297
    8. '	dis' → logprob: -14.630260467529297
    9. '   ' → logprob: -14.755260467529297
    10. '.dead' → logprob: -15.005260467529297

Token 508: 'appe' (ID: 15645)
  Prédit: 'appe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'appe' → logprob: -6.349075556499884e-05
    2. 'is' → logprob: -11.0000638961792
    3. 's' → logprob: -11.5000638961792
    4. 'dis' → logprob: -12.1250638961792
    5. 'appear' → logprob: -12.1250638961792
    6. 'st' → logprob: -12.3750638961792
    7. 'app' → logprob: -12.7500638961792
    8. ' appeared' → logprob: -12.7500638961792
    9. 'se' → logprob: -12.7500638961792
    10. 'stone' → logprob: -13.0000638961792

Token 509: 'ared' (ID: 2343)
  Prédit: 'ared'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ared' → logprob: -1.2664456789934775e-06
    2. 'ased' → logprob: -14.125000953674316
    3. 'ar' → logprob: -15.750000953674316
    4. 'red' → logprob: -15.750000953674316
    5. 'are' → logprob: -16.625001907348633
    6. 'e' → logprob: -16.875001907348633
    7. 'aring' → logprob: -16.875001907348633
    8. 'ard' → logprob: -17.375001907348633
    9. 'ered' → logprob: -17.500001907348633
    10. 'ARED' → logprob: -17.625001907348633

Token 510: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.10227657109498978
    2. ':' → logprob: -2.352276563644409
    3. '):
' → logprob: -6.602276802062988
    4. '                   ' → logprob: -7.852276802062988
    5. '               ' → logprob: -8.602276802062988
    6. '):' → logprob: -10.102276802062988
    7. 'stack' → logprob: -10.477276802062988
    8. ',' → logprob: -11.227276802062988
    9. ')' → logprob: -11.227276802062988
    10. '           ' → logprob: -11.477276802062988

Token 511: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.01642071269452572
    2. ':
' → logprob: -4.391420841217041
    3. ':' → logprob: -6.141420841217041
    4. '               ' → logprob: -7.141420841217041
    5. 'stack' → logprob: -7.891420841217041
    6. ' stack' → logprob: -8.391420364379883
    7. '                       ' → logprob: -9.016420364379883
    8. '):
' → logprob: -9.391420364379883
    9. ',' → logprob: -9.516420364379883
    10. '(stack' → logprob: -10.891420364379883

Token 512: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' (adapté à ' stack') → logprob: -0.062032438814640045
    2. ' stack' → logprob: -2.812032461166382
    3. '                   ' → logprob: -9.687032699584961
    4. '	stack' → logprob: -13.562032699584961
    5. '   ' → logprob: -14.187032699584961
    6. '                       ' → logprob: -14.937032699584961
    7. '               ' → logprob: -15.312032699584961
    8. '.stack' → logprob: -16.68703269958496
    9. '       ' → logprob: -16.93703269958496
    10. '           ' → logprob: -16.93703269958496

Token 513: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00012368128227535635
    2. '.' → logprob: -9.000123977661133
    3. '.ap' → logprob: -16.875123977661133
    4. 'append' → logprob: -17.000123977661133
    5. '.app' → logprob: -17.250123977661133
    6. '.insert' → logprob: -18.000123977661133
    7. ' .' → logprob: -19.375123977661133
    8. '.Append' → logprob: -19.625123977661133
    9. '.push' → logprob: -19.750123977661133
    10. '.extend' → logprob: -20.250123977661133

Token 514: '(st' (ID: 4065)
  Prédit: '(st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(st' → logprob: -0.0003380846756044775
    2. 'stone' → logprob: -8.000338554382324
    3. '(' → logprob: -13.125338554382324
    4. ' stone' → logprob: -14.375338554382324
    5. 'Stone' → logprob: -18.000337600708008
    6. '(
' → logprob: -18.125337600708008
    7. '(s' → logprob: -18.375337600708008
    8. '((' → logprob: -18.750337600708008
    9. 'stones' → logprob: -19.625337600708008
    10. 'ston' → logprob: -19.625337600708008

Token 515: 'one' (ID: 690)
  Prédit: 'one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -2.935296834039036e-06
    2. 'stone' → logprob: -13.12500286102295
    3. '_one' → logprob: -15.50000286102295
    4. 'One' → logprob: -15.62500286102295
    5. '```' → logprob: -16.500003814697266
    6. '(one' → logprob: -16.625003814697266
    7. 'tone' → logprob: -16.750003814697266
    8. 'ones' → logprob: -17.125003814697266
    9. 'on' → logprob: -17.125003814697266
    10. '[' → logprob: -17.625003814697266

Token 516: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2094796895980835
    2. ')
' → logprob: -1.7094796895980835
    3. '           ' → logprob: -4.834479808807373
    4. '               ' → logprob: -9.584479331970215
    5. ')

' → logprob: -12.084479331970215
    6. ')
' → logprob: -12.209479331970215
    7. '       ' → logprob: -13.709479331970215
    8. '
' → logprob: -14.834479331970215
    9. '                   ' → logprob: -14.834479331970215
    10. ' )
' → logprob: -15.209479331970215

Token 517: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002248388482257724
    2. ' for' → logprob: -6.377248287200928
    3. '
' → logprob: -8.377248764038086
    4. 'for' → logprob: -8.752248764038086
    5. '       ' → logprob: -9.752248764038086
    6. '            
' → logprob: -9.752248764038086
    7. '               ' → logprob: -11.752248764038086
    8. '   ' → logprob: -11.877248764038086
    9. '    
' → logprob: -12.377248764038086
    10. '          ' → logprob: -12.877248764038086

Token 518: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9770808815956116
    2. 'r' → logprob: -1.3520808219909668
    3. 'for' → logprob: -1.7270808219909668
    4. ' for' → logprob: -2.227080821990967
    5. '#' (adapté à ' #') → logprob: -3.477080821990967
    6. 'row' → logprob: -3.727080821990967
    7. ' r' → logprob: -4.227080821990967
    8. 'idx' → logprob: -5.227080821990967
    9. ' #' → logprob: -6.102080821990967
    10. ' row' → logprob: -7.477080821990967

Token 519: ' Fill' (ID: 32680)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.7401284575462341
    2. 'for' → logprob: -0.7401284575462341
    3. '#' → logprob: -3.740128517150879
    4. 'idx' → logprob: -4.240128517150879
    5. 'row' → logprob: -5.490128517150879
    6. ' for' → logprob: -6.240128517150879
    7. ' r' → logprob: -7.990128517150879
    8. 'For' → logprob: -8.365128517150879
    9. 'index' → logprob: -8.365128517150879
    10. 'fill' → logprob: -8.990128517150879

Token 520: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.8487842082977295
    2. 'r' → logprob: -1.3487842082977295
    3. 'for' → logprob: -1.8487842082977295
    4. ' for' → logprob: -2.5987842082977295
    5. ' from' → logprob: -2.7237842082977295
    6. 'rows' → logprob: -4.848784446716309
    7. ' r' → logprob: -6.098784446716309
    8. 'self' → logprob: -6.348784446716309
    9. 'row' → logprob: -7.098784446716309
    10. ' the' → logprob: -7.223784446716309

Token 521: ' bottom' (ID: 8725)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0023706546053290367
    2. ' self' → logprob: -6.127370834350586
    3. '(self' → logprob: -9.252370834350586
    4. '0' → logprob: -10.502370834350586
    5. 'r' → logprob: -10.502370834350586
    6. 'bottom' → logprob: -11.002370834350586
    7. '
' → logprob: -12.377370834350586
    8. 'the' → logprob: -12.377370834350586
    9. ' bottom' → logprob: -12.752370834350586
    10. 'range' → logprob: -13.627370834350586

Token 522: ' up' (ID: 869)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22815901041030884
    2. ' for' → logprob: -1.603158950805664
    3. 'for' → logprob: -6.853158950805664
    4. ' row' → logprob: -7.728158950805664
    5. 'r' → logprob: -8.603158950805664
    6. '               ' → logprob: -8.603158950805664
    7. ' with' → logprob: -8.728158950805664
    8. ' up' → logprob: -8.853158950805664
    9. ' to' → logprob: -9.353158950805664
    10. '   ' → logprob: -9.478158950805664

Token 523: ' with' (ID: 483)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.031070055440068245
    2. ' for' → logprob: -3.5310699939727783
    3. 'for' → logprob: -6.906070232391357
    4. 'r' → logprob: -8.5310697555542
    5. ',' → logprob: -9.6560697555542
    6. ' r' → logprob: -10.9060697555542
    7. '               ' → logprob: -11.6560697555542
    8. '       ' → logprob: -11.7810697555542
    9. '   ' → logprob: -12.4060697555542
    10. '          ' → logprob: -13.0310697555542

Token 524: ' stones' (ID: 38940)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.6972590088844299
    2. 'stones' → logprob: -0.6972590088844299
    3. ' stones' → logprob: -5.947258949279785
    4. 'the' → logprob: -6.822258949279785
    5. ' stack' → logprob: -8.072258949279785
    6. 'stone' → logprob: -10.072258949279785
    7. ' the' → logprob: -10.947258949279785
    8. 'these' → logprob: -12.322258949279785
    9. 'available' → logprob: -12.697258949279785
    10. '(stack' → logprob: -12.822258949279785

Token 525: ' in' (ID: 306)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00022094044834375381
    2. ' for' → logprob: -8.500221252441406
    3. ',' → logprob: -11.750221252441406
    4. 'for' → logprob: -12.500221252441406
    5. '               ' → logprob: -12.875221252441406
    6. '       ' → logprob: -13.750221252441406
    7. '<|end|>' → logprob: -14.875221252441406
    8. '            
' → logprob: -15.000221252441406
    9. '                   ' → logprob: -15.250221252441406
    10. ':' → logprob: -15.375221252441406

Token 526: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.00110116065479815
    2. ' stack' → logprob: -7.251101016998291
    3. 're' → logprob: -8.62610149383545
    4. 'reverse' → logprob: -9.00110149383545
    5. 'the' → logprob: -9.50110149383545
    6. '           ' → logprob: -11.62610149383545
    7. '   ' → logprob: -13.75110149383545
    8. ' reversed' → logprob: -13.87610149383545
    9. '               ' → logprob: -14.00110149383545
    10. '`' → logprob: -14.50110149383545

Token 527: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011614530347287655
    2. ' for' → logprob: -4.7616143226623535
    3. '            
' → logprob: -6.5116143226623535
    4. 'for' → logprob: -7.7616143226623535
    5. '
' → logprob: -8.261614799499512
    6. '               ' → logprob: -8.636614799499512
    7. ',' → logprob: -8.886614799499512
    8. '<|end|>' → logprob: -8.886614799499512
    9. '  
' → logprob: -9.636614799499512
    10. '       ' → logprob: -10.011614799499512

Token 528: ' fill' (ID: 6954)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3476441502571106
    2. 'for' → logprob: -1.5976440906524658
    3. 'idx' → logprob: -3.597644090652466
    4. 'r' → logprob: -3.722644090652466
    5. ' for' → logprob: -4.347644329071045
    6. 'stone' → logprob: -5.097644329071045
    7. 'row' → logprob: -5.347644329071045
    8. ' stone' → logprob: -5.597644329071045
    9. '               ' → logprob: -5.847644329071045
    10. 'and' → logprob: -5.972644329071045

Token 529: ' remainder' (ID: 47056)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'with' → logprob: -0.7759343385696411
    2. ' with' → logprob: -1.0259343385696411
    3. 'from' → logprob: -3.0259342193603516
    4. ' from' → logprob: -3.5259342193603516
    5. 'top' → logprob: -3.7759342193603516
    6. 'remaining' → logprob: -3.7759342193603516
    7. ' remaining' → logprob: -4.025934219360352
    8. ' top' → logprob: -4.400934219360352
    9. '   ' → logprob: -4.775934219360352
    10. 'the' → logprob: -5.400934219360352

Token 530: ' with' (ID: 483)
  Prédit: ' with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.2524307072162628
    2. 'with' → logprob: -1.5024306774139404
    3. 'None' → logprob: -8.62743091583252
    4. '[' → logprob: -9.75243091583252
    5. '   ' → logprob: -9.75243091583252
    6. '           ' → logprob: -9.87743091583252
    7. ' None' → logprob: -9.87743091583252
    8. 'r' → logprob: -10.12743091583252
    9. ' of' → logprob: -11.25243091583252
    10. 'row' → logprob: -11.62743091583252

Token 531: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.009814761579036713
    2. ' None' → logprob: -4.634814739227295
    3. '[' → logprob: -10.009815216064453
    4. 'Stone' → logprob: -12.384815216064453
    5. ' [' → logprob: -13.009815216064453
    6. '`' → logprob: -13.259815216064453
    7. '   ' → logprob: -13.384815216064453
    8. '           ' → logprob: -13.634815216064453
    9. '(None' → logprob: -13.759815216064453
    10. '_None' → logprob: -15.259815216064453

Token 532: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0230664424598217
    2. ' for' → logprob: -4.523066520690918
    3. '
' → logprob: -4.648066520690918
    4. '       ' → logprob: -7.148066520690918
    5. 'for' → logprob: -7.898066520690918
    6. '            
' → logprob: -7.898066520690918
    7. '    
' → logprob: -8.523066520690918
    8. '\n' → logprob: -8.648066520690918
    9. '  
' → logprob: -9.023066520690918
    10. '   ' → logprob: -9.023066520690918

Token 533: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007028992986306548
    2. '
' → logprob: -7.375702857971191
    3. ' for' → logprob: -10.125702857971191
    4. '       ' → logprob: -11.000702857971191
    5. '            
' → logprob: -11.875702857971191
    6. 'for' → logprob: -12.750702857971191
    7. '```' → logprob: -12.875702857971191
    8. '\n' → logprob: -13.000702857971191
    9. '               ' → logprob: -13.750702857971191
    10. '   ' → logprob: -14.000702857971191

Token 534: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3178093731403351
    2. ' for' → logprob: -2.0678093433380127
    3. 'for' (adapté à ' for') → logprob: -2.4428093433380127
    4. 'r' → logprob: -2.9428093433380127
    5. ' r' → logprob: -5.317809581756592
    6. '   ' → logprob: -7.067809581756592
    7. 'row' → logprob: -8.442809104919434
    8. ' ' → logprob: -9.567809104919434
    9. ' row' → logprob: -10.567809104919434
    10. '       ' → logprob: -10.692809104919434

Token 535: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0009125363430939615
    2. ' r' → logprob: -7.000912666320801
    3. 'row' → logprob: -13.8759126663208
    4. '	r' → logprob: -17.625911712646484
    5. ' row' → logprob: -17.750911712646484
    6. '_r' → logprob: -18.125911712646484
    7. 'i' → logprob: -18.125911712646484
    8. '(r' → logprob: -18.375911712646484
    9. '   ' → logprob: -18.500911712646484
    10. 'idx' → logprob: -19.125911712646484

Token 536: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0009139667963609099
    2. 'in' → logprob: -7.000914096832275
    3. 'range' → logprob: -13.750913619995117
    4. 'self' → logprob: -14.500913619995117
    5. '   ' → logprob: -15.250913619995117
    6. '       ' → logprob: -16.000913619995117
    7. 're' → logprob: -16.375913619995117
    8. ',' → logprob: -16.500913619995117
    9. ' range' → logprob: -16.500913619995117
    10. '           ' → logprob: -16.500913619995117

Token 537: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0005653033731505275
    2. ' range' → logprob: -7.500565528869629
    3. 're' → logprob: -11.625565528869629
    4. '   ' → logprob: -13.375565528869629
    5. '(range' → logprob: -13.375565528869629
    6. ' ' → logprob: -16.375564575195312
    7. '  ' → logprob: -17.000564575195312
    8. '       ' → logprob: -17.375564575195312
    9. 'self' → logprob: -17.875564575195312
    10. '     ' → logprob: -18.375564575195312

Token 538: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -5.512236498361744e-07
    2. '(' → logprob: -14.750000953674316
    3. 'self' → logprob: -16.25
    4. ' (' → logprob: -18.125
    5. '(
' → logprob: -18.75
    6. '(len' → logprob: -19.5
    7. '   ' → logprob: -19.75
    8. '[self' → logprob: -20.375
    9. '           ' → logprob: -20.75
    10. '       ' → logprob: -20.875

Token 539: '.height' (ID: 11682)
  Prédit: '.height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.height' → logprob: -0.12697777152061462
    2. 'height' → logprob: -2.1269776821136475
    3. 'self' → logprob: -10.251977920532227
    4. ' height' → logprob: -11.626977920532227
    5. '   ' → logprob: -13.751977920532227
    6. '
' → logprob: -14.126977920532227
    7. '(height' → logprob: -14.501977920532227
    8. ' .' → logprob: -14.751977920532227
    9. '.' → logprob: -14.876977920532227
    10. ')' → logprob: -14.876977920532227

Token 540: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0046227299608290195
    2. ' -' → logprob: -5.379622936248779
    3. '       ' → logprob: -14.004622459411621
    4. '   ' → logprob: -14.254622459411621
    5. '           ' → logprob: -14.254622459411621
    6. ')' → logprob: -16.504623413085938
    7. '1' → logprob: -16.629623413085938
    8. '()-' → logprob: -16.629623413085938
    9. '):
' → logprob: -16.879623413085938
    10. ')-' → logprob: -17.254623413085938

Token 541: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8550976164988242e-05
    2. '-' → logprob: -11.750018119812012
    3. ' ' → logprob: -11.750018119812012
    4. '   ' → logprob: -13.875018119812012
    5. '
' → logprob: -14.125018119812012
    6. 'len' → logprob: -15.875018119812012
    7. '2' → logprob: -16.000019073486328
    8. ' -' → logprob: -16.062519073486328
    9. '```' → logprob: -16.562519073486328
    10. '       ' → logprob: -16.937519073486328

Token 542: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003436872211750597
    2. ' ,' → logprob: -8.000343322753906
    3. ',-' → logprob: -11.875343322753906
    4. ' -' → logprob: -15.000343322753906
    5. ',
' → logprob: -15.250343322753906
    6. '-' → logprob: -15.250343322753906
    7. '           ' → logprob: -15.500343322753906
    8. ' ,-' → logprob: -16.500343322753906
    9. '   ' → logprob: -17.000343322753906
    10. '     ' → logprob: -17.375343322753906

Token 543: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2351694107055664
    2. 'self' → logprob: -1.7351694107055664
    3. ' -' → logprob: -3.4851694107055664
    4. ' self' → logprob: -6.110169410705566
    5. '-self' → logprob: -8.360169410705566
    6. 'len' → logprob: -10.735169410705566
    7. '   ' → logprob: -11.235169410705566
    8. '
' → logprob: -11.360169410705566
    9. '           ' → logprob: -11.735169410705566
    10. 'max' → logprob: -12.110169410705566

Token 544: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1430550217628479
    2. 'len' → logprob: -2.018054962158203
    3. '-' → logprob: -8.393054962158203
    4. '(len' → logprob: -9.768054962158203
    5. ' len' → logprob: -9.768054962158203
    6. ' -' → logprob: -11.768054962158203
    7. 'self' → logprob: -12.018054962158203
    8. '```' → logprob: -12.768054962158203
    9. '
' → logprob: -12.893054962158203
    10. ' ' → logprob: -12.955554962158203

Token 545: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006699055666103959
    2. '-' → logprob: -7.625669956207275
    3. ',-' → logprob: -8.875669479370117
    4. ' ,' → logprob: -10.625669479370117
    5. '           ' → logprob: -11.750669479370117
    6. ' -' → logprob: -12.125669479370117
    7. ',
' → logprob: -13.500669479370117
    8. '               ' → logprob: -14.125669479370117
    9. '-,' → logprob: -14.750669479370117
    10. '```' → logprob: -14.875669479370117

Token 546: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0017055326607078314
    2. ' -' → logprob: -6.376705646514893
    3. '               ' → logprob: -13.501705169677734
    4. '           ' → logprob: -13.876705169677734
    5. '                   ' → logprob: -14.126705169677734
    6. '   ' → logprob: -16.376705169677734
    7. ' ' → logprob: -17.001705169677734
    8. '                ' → logprob: -17.251705169677734
    9. '       ' → logprob: -17.501705169677734
    10. '          ' → logprob: -17.626705169677734

Token 547: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. '-' → logprob: -15.500000953674316
    3. ' ' → logprob: -15.875000953674316
    4. '
' → logprob: -16.125
    5. '   ' → logprob: -16.125
    6. '```' → logprob: -16.625
    7. ')' → logprob: -17.25
    8. '           ' → logprob: -17.625
    9. '``' → logprob: -18.25
    10. '                   ' → logprob: -18.3125

Token 548: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.09405311197042465
    2. '):' → logprob: -2.469053030014038
    3. ',' → logprob: -6.094053268432617
    4. '           ' → logprob: -6.469053268432617
    5. '-' → logprob: -7.594053268432617
    6. ',-' → logprob: -8.469053268432617
    7. '               ' → logprob: -8.594053268432617
    8. '):
' → logprob: -8.844053268432617
    9. '       ' → logprob: -9.344053268432617
    10. ':' → logprob: -10.094053268432617

Token 549: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0017688281368464231
    2. ' if' → logprob: -7.251769065856934
    3. '           ' → logprob: -8.251769065856934
    4. ':' → logprob: -8.501769065856934
    5. '```' → logprob: -8.876769065856934
    6. '<|end|>' → logprob: -9.376769065856934
    7. '                ' → logprob: -9.501769065856934
    8. '       ' → logprob: -9.751769065856934
    9. ',' → logprob: -10.001769065856934
    10. '[' → logprob: -10.126769065856934

Token 550: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.10588185489177704
    2. ' if' → logprob: -2.605881929397583
    3. 'self' → logprob: -4.105881690979004
    4. '               ' → logprob: -4.605881690979004
    5. ' self' → logprob: -8.980881690979004
    6. '                   ' → logprob: -10.355881690979004
    7. '                ' → logprob: -13.605881690979004
    8. '   ' → logprob: -13.605881690979004
    9. '[self' → logprob: -14.105881690979004
    10. '	if' → logprob: -14.230881690979004

Token 551: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.2349320352077484
    2. 'r' → logprob: -1.9849320650100708
    3. 'len' → logprob: -2.7349319458007812
    4. ' stack' → logprob: -5.234931945800781
    5. ' len' → logprob: -7.359931945800781
    6. '(stack' → logprob: -7.734931945800781
    7. ' r' → logprob: -8.234931945800781
    8. '(len' → logprob: -8.484931945800781
    9. '   ' → logprob: -9.109931945800781
    10. '(r' → logprob: -10.359931945800781

Token 552: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0021017256658524275
    2. ':
' → logprob: -6.752101898193359
    3. '                   ' → logprob: -7.252101898193359
    4. '               ' → logprob: -9.00210189819336
    5. ':return' → logprob: -11.12710189819336
    6. ')' → logprob: -11.25210189819336
    7. 's' → logprob: -11.75210189819336
    8. '```' → logprob: -11.87710189819336
    9. '                ' → logprob: -12.25210189819336
    10. '):' → logprob: -12.37710189819336

Token 553: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.003503492334857583
    2. ':' → logprob: -6.628503322601318
    3. ' stone' → logprob: -7.753503322601318
    4. '[self' → logprob: -8.003503799438477
    5. '                       ' → logprob: -8.128503799438477
    6. '               ' → logprob: -8.128503799438477
    7. 'self' → logprob: -9.253503799438477
    8. ':
' → logprob: -9.253503799438477
    9. '                    
' → logprob: -9.503503799438477
    10. '           ' → logprob: -9.753503799438477

Token 554: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.07609518617391586
    2. '                   ' → logprob: -3.2010951042175293
    3. ' self' → logprob: -3.4510951042175293
    4. '                       ' → logprob: -7.451095104217529
    5. '   ' → logprob: -9.201095581054688
    6. '               ' → logprob: -9.826095581054688
    7. ' stone' → logprob: -10.576095581054688
    8. '[self' → logprob: -11.076095581054688
    9. 'stone' → logprob: -11.451095581054688
    10. '           ' → logprob: -11.451095581054688

Token 555: '.grid' (ID: 19269)
  Prédit: '.grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.grid' → logprob: -2.8921695047756657e-05
    2. 'grid' → logprob: -10.875028610229492
    3. '.' → logprob: -11.625028610229492
    4. ' .' → logprob: -15.125028610229492
    5. '	grid' → logprob: -15.125028610229492
    6. ':grid' → logprob: -16.125028610229492
    7. '
' → logprob: -16.875028610229492
    8. ' grid' → logprob: -16.875028610229492
    9. '.stack' → logprob: -17.000028610229492
    10. '.gr' → logprob: -17.375028610229492

Token 556: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -4.246537173457909e-06
    2. 'r' → logprob: -12.500003814697266
    3. '[' → logprob: -15.250003814697266
    4. ' [' → logprob: -16.250003814697266
    5. '[self' → logprob: -16.625003814697266
    6. '   ' → logprob: -17.250003814697266
    7. '       ' → logprob: -17.625003814697266
    8. '```' → logprob: -17.750003814697266
    9. '[s' → logprob: -18.375003814697266
    10. '[row' → logprob: -18.375003814697266

Token 557: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.12717536091804504
    2. '[c' → logprob: -2.1271753311157227
    3. ')[' → logprob: -9.002175331115723
    4. '[' → logprob: -10.252175331115723
    5. 'c' → logprob: -10.502175331115723
    6. ']' → logprob: -11.127175331115723
    7. '[r' → logprob: -11.502175331115723
    8. ',c' → logprob: -11.627175331115723
    9. ' ][' → logprob: -11.877175331115723
    10. '[col' → logprob: -13.127175331115723

Token 558: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0700279101729393
    2. 'stack' → logprob: -2.6950278282165527
    3. ' stack' → logprob: -10.195028305053711
    4. ' c' → logprob: -10.695028305053711
    5. '(stack' → logprob: -11.070028305053711
    6. '
' → logprob: -12.695028305053711
    7. '[c' → logprob: -12.820028305053711
    8. 'pop' → logprob: -12.945028305053711
    9. ')c' → logprob: -13.320028305053711
    10. ']' → logprob: -13.945028305053711

Token 559: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0048410347662866116
    2. '=' → logprob: -5.879840850830078
    3. ']=' → logprob: -6.504840850830078
    4. ' =' → logprob: -7.629840850830078
    5. ' ]' → logprob: -9.879840850830078
    6. ')' → logprob: -14.004840850830078
    7. 'stack' → logprob: -16.379840850830078
    8. ' stack' → logprob: -17.879840850830078
    9. ')=' → logprob: -18.129840850830078
    10. '[' → logprob: -18.629840850830078

Token 560: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06196768581867218
    2. ' =' → logprob: -2.811967611312866
    3. '=

' → logprob: -18.311967849731445
    4. '＝' → logprob: -19.311967849731445
    5. '.=' → logprob: -19.311967849731445
    6. ']=' → logprob: -19.561967849731445
    7. '=
' → logprob: -20.311967849731445
    8. ')=' → logprob: -20.686967849731445
    9. '=}' → logprob: -21.436967849731445
    10. ']' → logprob: -21.436967849731445

Token 561: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -7.493430894101039e-05
    2. ' stack' → logprob: -9.500075340270996
    3. '	stack' → logprob: -18.62507438659668
    4. '(stack' → logprob: -19.37507438659668
    5. 'st' → logprob: -19.75007438659668
    6. '   ' → logprob: -21.62507438659668
    7. 'stake' → logprob: -21.62507438659668
    8. 'sta' → logprob: -21.87507438659668
    9. '.stack' → logprob: -22.12507438659668
    10. 'stk' → logprob: -22.62507438659668

Token 562: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -6.511406809295295e-06
    2. 'pop' → logprob: -12.000006675720215
    3. '.' → logprob: -14.875006675720215
    4. '   ' → logprob: -20.1250057220459
    5. '	pop' → logprob: -20.5000057220459
    6. '```' → logprob: -20.7500057220459
    7. ' .' → logprob: -21.0000057220459
    8. '.p' → logprob: -21.0000057220459
    9. '.Pop' → logprob: -21.3750057220459
    10. 'Pop' → logprob: -21.5000057220459

Token 563: '(' (ID: 7)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -2.2007883671903983e-05
    2. '()
' → logprob: -10.750021934509277
    3. '()`' → logprob: -15.625021934509277
    4. '()

' → logprob: -15.750021934509277
    5. '(' → logprob: -16.000022888183594
    6. ' ()' → logprob: -17.625022888183594
    7. '()
' → logprob: -18.125022888183594
    8. '()\' → logprob: -18.250022888183594
    9. '()]' → logprob: -18.375022888183594
    10. '()"' → logprob: -18.375022888183594

Token 564: '0' (ID: 15)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008838512934744358
    2. '0' → logprob: -5.008838653564453
    3. '()' → logprob: -6.258838653564453
    4. '())' → logprob: -8.883838653564453
    5. ' )' → logprob: -9.883838653564453
    6. ')
' → logprob: -11.258838653564453
    7. ' ' → logprob: -13.258838653564453
    8. '(' → logprob: -13.758838653564453
    9. '()
' → logprob: -14.258838653564453
    10. '   ' → logprob: -14.758838653564453

Token 565: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00193636619951576
    2. ')
' → logprob: -6.251936435699463
    3. '               ' → logprob: -12.001935958862305
    4. ')
' → logprob: -14.251935958862305
    5. ' )' → logprob: -14.626935958862305
    6. ')

' → logprob: -15.376935958862305
    7. '                   ' → logprob: -16.126935958862305
    8. '           ' → logprob: -17.001935958862305
    9. '       ' → logprob: -17.126935958862305
    10. '<|end|>' → logprob: -17.126935958862305

Token 566: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00028982185176573694
    2. 'else' → logprob: -8.375289916992188
    3. ' else' → logprob: -9.750289916992188
    4. '			' → logprob: -15.000289916992188
    5. '              ' → logprob: -15.125289916992188
    6. '                ' → logprob: -16.250289916992188
    7. '           ' → logprob: -16.625289916992188
    8. '```' → logprob: -17.000289916992188
    9. '		       ' → logprob: -17.125289916992188
    10. '                   ' → logprob: -17.625289916992188

Token 567: ' else' (ID: 1203)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6335316300392151
    2. 'else' (adapté à ' else') → logprob: -0.8835316300392151
    3. ' else' → logprob: -2.8835315704345703
    4. '           ' → logprob: -10.63353157043457
    5. '	else' → logprob: -13.88353157043457
    6. '       ' → logprob: -14.00853157043457
    7. '```' → logprob: -14.13353157043457
    8. '			' → logprob: -14.38353157043457
    9. '             ' → logprob: -15.00853157043457
    10. '   ' → logprob: -15.13353157043457

Token 568: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1960381418466568
    2. ':' → logprob: -1.9460381269454956
    3. ':
' → logprob: -3.446038246154785
    4. '               ' → logprob: -5.946038246154785
    5. '           ' → logprob: -8.196038246154785
    6. '                    ' → logprob: -9.321038246154785
    7. '                  ' → logprob: -9.571038246154785
    8. '                       ' → logprob: -9.821038246154785
    9. 'self' → logprob: -10.196038246154785
    10. '   ' → logprob: -10.321038246154785

Token 569: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.08705277740955353
    2. 'self' → logprob: -2.587052822113037
    3. ' self' → logprob: -4.837052822113037
    4. '               ' → logprob: -9.087052345275879
    5. '   ' → logprob: -10.212052345275879
    6. '           ' → logprob: -10.462052345275879
    7. '                       ' → logprob: -11.462052345275879
    8. '                  ' → logprob: -13.212052345275879
    9. '                    ' → logprob: -13.462052345275879
    10. '	self' → logprob: -13.462052345275879

Token 570: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0013344056205824018
    2. ' self' → logprob: -6.626334190368652
    3. '                   ' → logprob: -11.751334190368652
    4. 'None' → logprob: -15.751334190368652
    5. '               ' → logprob: -15.876334190368652
    6. '	self' → logprob: -16.37633514404297
    7. '[self' → logprob: -16.50133514404297
    8. '=self' → logprob: -16.75133514404297
    9. '                       ' → logprob: -17.50133514404297
    10. ' ' → logprob: -17.87633514404297

Token 571: '.grid' (ID: 19269)
  Prédit: '.grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.grid' → logprob: -2.2723104848410003e-05
    2. '.' → logprob: -11.000022888183594
    3. 'grid' → logprob: -12.125022888183594
    4. ' .' → logprob: -15.375022888183594
    5. '	grid' → logprob: -16.000022888183594
    6. '.g' → logprob: -17.000022888183594
    7. ':grid' → logprob: -17.125022888183594
    8. '.Grid' → logprob: -17.250022888183594
    9. ' grid' → logprob: -18.000022888183594
    10. '.gr' → logprob: -18.125022888183594

Token 572: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.75
    3. 'r' → logprob: -15.75
    4. '[c' → logprob: -17.375
    5. ' [' → logprob: -17.875
    6. '[row' → logprob: -17.875
    7. '[R' → logprob: -18.0
    8. '[self' → logprob: -18.125
    9. '```' → logprob: -18.25
    10. '   ' → logprob: -19.0

Token 573: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.005686311051249504
    2. '[r' → logprob: -5.380686283111572
    3. ']' → logprob: -7.505686283111572
    4. '[c' → logprob: -8.00568675994873
    5. '[' → logprob: -10.00568675994873
    6. ')[' → logprob: -10.38068675994873
    7. '=' → logprob: -10.38068675994873
    8. 'r' → logprob: -10.88068675994873
    9. '           ' → logprob: -11.00568675994873
    10. '               ' → logprob: -11.50568675994873

Token 574: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.03809897601604462
    2. 'None' → logprob: -3.2880990505218506
    3. ' None' → logprob: -10.16309928894043
    4. '=None' → logprob: -11.66309928894043
    5. '[c' → logprob: -12.53809928894043
    6. '(None' → logprob: -13.03809928894043
    7. ')' → logprob: -13.53809928894043
    8. ')c' → logprob: -14.16309928894043
    9. ']' → logprob: -14.53809928894043
    10. '   ' → logprob: -14.66309928894043

Token 575: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006160574033856392
    2. '=' → logprob: -5.381160736083984
    3. ')' → logprob: -7.006160736083984
    4. ']=' → logprob: -7.381160736083984
    5. '=None' → logprob: -12.006160736083984
    6. ' =' → logprob: -13.506160736083984
    7. ')=' → logprob: -13.881160736083984
    8. '[' → logprob: -14.131160736083984
    9. '])' → logprob: -15.256160736083984
    10. ' ]' → logprob: -15.256160736083984

Token 576: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0067182136699557304
    2. ' =' → logprob: -5.006718158721924
    3. '=None' → logprob: -12.756718635559082
    4. 'None' → logprob: -18.256717681884766
    5. '=
' → logprob: -19.381717681884766
    6. '＝' → logprob: -19.881717681884766
    7. '=

' → logprob: -20.131717681884766
    8. ' None' → logprob: -20.631717681884766
    9. ')' → logprob: -21.006717681884766
    10. '[' → logprob: -21.506717681884766

Token 577: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -4.320199877838604e-07
    2. ' None' → logprob: -14.75
    3. 'none' → logprob: -21.125
    4. '(None' → logprob: -21.625
    5. '=None' → logprob: -22.5
    6. '_None' → logprob: -23.75
    7. '   ' → logprob: -24.125
    8. ',None' → logprob: -24.625
    9. 'null' → logprob: -25.75
    10. '```' → logprob: -26.125

Token 578: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 579: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07438638806343079
    2. '<|end|>' → logprob: -2.9493863582611084
    3. '
' → logprob: -4.1993865966796875
    4. 'def' → logprob: -6.3243865966796875
    5. '```' → logprob: -7.3243865966796875
    6. '<|end|>' → logprob: -7.4493865966796875
    7. ' ' → logprob: -7.9493865966796875
    8. '    
' → logprob: -8.199386596679688
    9. '       ' → logprob: -8.824386596679688
    10. ' def' → logprob: -8.949386596679688

Token 580: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.011326269246637821
    2. '   ' → logprob: -4.511326313018799
    3. ' def' → logprob: -8.26132583618164
    4. '
' → logprob: -11.13632583618164
    5. '       ' → logprob: -12.88632583618164
    6. '	def' → logprob: -14.13632583618164
    7. '```' → logprob: -14.26132583618164
    8. '    
' → logprob: -14.51132583618164
    9. '           ' → logprob: -14.88632583618164
    10. ' ' → logprob: -15.13632583618164

Token 581: ' step' (ID: 5983)
  Prédit: 'chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chain' → logprob: -1.763796091079712
    2. ' chain' → logprob: -2.388796091079712
    3. ' pop' → logprob: -2.513796091079712
    4. 'resolve' → logprob: -2.513796091079712
    5. 'process' → logprob: -2.638796091079712
    6. 'clear' → logprob: -2.763796091079712
    7. ' process' → logprob: -3.263796091079712
    8. ' resolve' → logprob: -3.388796091079712
    9. 'pop' → logprob: -3.388796091079712
    10. '_chain' → logprob: -3.513796091079712

Token 582: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0009143244242295623
    2. '(' → logprob: -7.000914096832275
    3. 'self' → logprob: -13.750914573669434
    4. ' (' → logprob: -13.750914573669434
    5. '():' → logprob: -15.000914573669434
    6. '   ' → logprob: -15.750914573669434
    7. '()' → logprob: -16.625913619995117
    8. '       ' → logprob: -16.750913619995117
    9. '_' → logprob: -16.875913619995117
    10. '(
' → logprob: -17.125913619995117

Token 583: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08757537603378296
    2. ')' → logprob: -2.9625754356384277
    3. 'self' → logprob: -3.9625754356384277
    4. '):
' → logprob: -4.837575435638428
    5. '   ' → logprob: -5.462575435638428
    6. '       ' → logprob: -7.212575435638428
    7. '(self' → logprob: -8.83757495880127
    8. ')->' → logprob: -10.08757495880127
    9. ',' → logprob: -10.96257495880127
    10. '):
' → logprob: -11.71257495880127

Token 584: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.006303088739514351
    2. ':' → logprob: -5.631303310394287
    3. '(' → logprob: -6.756303310394287
    4. '       ' → logprob: -7.631303310394287
    5. '->' → logprob: -7.881303310394287
    6. 'self' → logprob: -8.006302833557129
    7. '   ' → logprob: -9.006302833557129
    8. ' ->' → logprob: -9.131302833557129
    9. '):' → logprob: -10.006302833557129
    10. '():' → logprob: -10.756302833557129

Token 585: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.5005522966384888
    2. 'int' → logprob: -1.0005522966384888
    3. 'Optional' → logprob: -3.750552177429199
    4. 'None' → logprob: -6.125552177429199
    5. ' bool' → logprob: -8.3755521774292
    6. ' int' → logprob: -9.2505521774292
    7. '   ' → logprob: -9.6255521774292
    8. ' Optional' → logprob: -10.2505521774292
    9. ' ' → logprob: -13.2505521774292
    10. 'optional' → logprob: -13.2505521774292

Token 586: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4564504325389862
    2. '(self' → logprob: -1.0814504623413086
    3. '():' → logprob: -3.9564504623413086
    4. '       ' → logprob: -5.331450462341309
    5. '):' → logprob: -6.581450462341309
    6. ':
' → logprob: -6.956450462341309
    7. '(' → logprob: -7.331450462341309
    8. '   ' → logprob: -8.831450462341309
    9. '():
' → logprob: -9.581450462341309
    10. ':self' → logprob: -10.081450462341309

Token 587: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03266029432415962
    2. 'to' → logprob: -3.5326602458953857
    3. 'positions' → logprob: -6.157660484313965
    4. ' to' → logprob: -7.532660484313965
    5. '   ' → logprob: -9.032660484313965
    6. '```' → logprob: -9.657660484313965
    7. '        
' → logprob: -11.282660484313965
    8. 'while' → logprob: -11.407660484313965
    9. 'dis' → logprob: -11.407660484313965
    10. ' positions' → logprob: -11.657660484313965

Token 588: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.735565721988678
    2. 'to' → logprob: -0.735565721988678
    3. 'positions' → logprob: -3.235565662384033
    4. ' to' → logprob: -6.235565662384033
    5. ' positions' → logprob: -9.985566139221191
    6. 'dis' → logprob: -10.485566139221191
    7. 'chains' → logprob: -10.610566139221191
    8. '```' → logprob: -10.610566139221191
    9. 'ch' → logprob: -10.735566139221191
    10. 'found' → logprob: -10.860566139221191

Token 589: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26709800958633423
    2. 'to' → logprob: -1.5170979499816895
    3. 'positions' → logprob: -4.2670979499816895
    4. 'while' → logprob: -7.8920979499816895
    5. 'chains' → logprob: -8.892098426818848
    6. '   ' → logprob: -9.017098426818848
    7. 'ch' → logprob: -9.142098426818848
    8. 'found' → logprob: -9.267098426818848
    9. 'changed' → logprob: -9.642098426818848
    10. ' to' → logprob: -10.142098426818848

Token 590: ' Perform' (ID: 36780)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.015776606276631355
    2. '       ' → logprob: -5.515776634216309
    3. 'positions' → logprob: -5.515776634216309
    4. '#' → logprob: -5.765776634216309
    5. ' to' → logprob: -6.140776634216309
    6. '"""' → logprob: -6.765776634216309
    7. '"""
' → logprob: -7.765776634216309
    8. 'Find' → logprob: -7.890776634216309
    9. '   ' → logprob: -9.640776634216309
    10. 'Positions' → logprob: -9.765776634216309

Token 591: ' one' (ID: 1001)
  Prédit: ' one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' one' → logprob: -0.20213420689105988
    2. 'one' → logprob: -1.7021342515945435
    3. 'a' → logprob: -7.702134132385254
    4. ' a' → logprob: -8.327134132385254
    5. ' the' → logprob: -11.202134132385254
    6. '_one' → logprob: -12.077134132385254
    7. 'the' → logprob: -12.202134132385254
    8. '   ' → logprob: -13.577134132385254
    9. 'One' → logprob: -14.452134132385254
    10. ' an' → logprob: -15.202134132385254

Token 592: ' full' (ID: 3149)
  Prédit: 'iteration'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iteration' → logprob: -0.8191532492637634
    2. ' full' → logprob: -1.8191533088684082
    3. ' iteration' → logprob: -1.9441533088684082
    4. 'full' → logprob: -2.569153308868408
    5. 'chain' → logprob: -2.819153308868408
    6. 'step' → logprob: -3.069153308868408
    7. 'round' → logprob: -3.319153308868408
    8. 'cycle' → logprob: -4.319153308868408
    9. ' step' → logprob: -4.944153308868408
    10. ' cycle' → logprob: -5.194153308868408

Token 593: ' step' (ID: 5983)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.45169007778167725
    2. ' step' → logprob: -1.4516900777816772
    3. 'chain' → logprob: -2.576690196990967
    4. ' chain' → logprob: -3.576690196990967
    5. 'iteration' → logprob: -4.701690196990967
    6. ' iteration' → logprob: -5.326690196990967
    7. 'round' → logprob: -5.951690196990967
    8. 'cycle' → logprob: -6.076690196990967
    9. 'cleanup' → logprob: -6.826690196990967
    10. '   ' → logprob: -6.951690196990967

Token 594: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24820247292518616
    2. ':' → logprob: -1.6232024431228638
    3. '()' → logprob: -4.873202323913574
    4. ' of' → logprob: -4.998202323913574
    5. '():' → logprob: -5.998202323913574
    6. '   ' → logprob: -6.998202323913574
    7. '.' → logprob: -6.998202323913574
    8. ',' → logprob: -6.998202323913574
    9. ':
' → logprob: -7.123202323913574
    10. ' to' → logprob: -7.498202323913574

Token 595: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0028116481844335794
    2. 'to' → logprob: -6.752811431884766
    3. ' to' → logprob: -6.877811431884766
    4. '
' → logprob: -7.752811431884766
    5. '        
' → logprob: -9.377811431884766
    6. '```' → logprob: -10.252811431884766
    7. 'positions' → logprob: -11.002811431884766
    8. '"""' → logprob: -11.377811431884766
    9. '#' → logprob: -11.627811431884766
    10. '"""
' → logprob: -12.002811431884766

Token 596: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06569388508796692
    2. 'to' → logprob: -3.0656938552856445
    3. 'positions' → logprob: -4.4406938552856445
    4. ' to' → logprob: -5.9406938552856445
    5. ' positions' → logprob: -7.8156938552856445
    6. 'dis' → logprob: -7.8156938552856445
    7. '"""
' → logprob: -7.9406938552856445
    8. 'changed' → logprob: -8.190693855285645
    9. '#' → logprob: -8.565693855285645
    10. '"""' → logprob: -8.565693855285645

Token 597: ' find' (ID: 1646)
  Prédit: 'Find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Find' → logprob: -0.3718753457069397
    2. '       ' → logprob: -1.621875286102295
    3. 'while' → logprob: -3.371875286102295
    4. 'find' → logprob: -3.621875286102295
    5. 'to' → logprob: -3.996875286102295
    6. ' Find' → logprob: -5.621875286102295
    7. 'Identify' → logprob: -5.621875286102295
    8. 'found' → logprob: -5.746875286102295
    9. 'removed' → logprob: -5.746875286102295
    10. 'chains' → logprob: -5.746875286102295

Token 598: ' all' (ID: 722)
  Prédit: 'chains'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chains' → logprob: -0.3299322724342346
    2. ' chains' → logprob: -1.3299322128295898
    3. 'stones' → logprob: -4.57993221282959
    4. 'positions' → logprob: -6.07993221282959
    5. ' stones' → logprob: -6.82993221282959
    6. ' positions' → logprob: -7.57993221282959
    7. 'to' → logprob: -7.70493221282959
    8. 'ch' → logprob: -7.70493221282959
    9. ' to' → logprob: -8.45493221282959
    10. ' the' → logprob: -8.82993221282959

Token 599: ' horizontal' (ID: 25511)
  Prédit: '_ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_ch' → logprob: -0.7311218976974487
    2. 'chains' → logprob: -1.3561218976974487
    3. ' chains' → logprob: -1.3561218976974487
    4. '_' → logprob: -6.106122016906738
    5. 'stones' → logprob: -7.731122016906738
    6. ' stones' → logprob: -7.981122016906738
    7. 'ch' → logprob: -8.606122016906738
    8. '```' → logprob: -10.231122016906738
    9. '_chain' → logprob: -10.981122016906738
    10. 'chain' → logprob: -11.231122016906738

Token 600: ' chains' (ID: 42636)
  Prédit: 'chains'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chains' → logprob: -0.5762559175491333
    2. ' chains' → logprob: -0.8262559175491333
    3. '_ch' → logprob: -8.826255798339844
    4. 'chain' → logprob: -9.826255798339844
    5. 'ch' → logprob: -10.076255798339844
    6. ' sequences' → logprob: -11.576255798339844
    7. ' to' → logprob: -11.701255798339844
    8. ' chain' → logprob: -11.826255798339844
    9. '_' → logprob: -11.951255798339844
    10. 'to' → logprob: -12.326255798339844

Token 601: ' of' (ID: 328)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.678104817867279
    2. '       ' → logprob: -1.1781048774719238
    3. ' of' → logprob: -2.303104877471924
    4. 'to' → logprob: -2.553104877471924
    5. ' that' → logprob: -5.303104877471924
    6. 'of' → logprob: -6.928104877471924
    7. ',' → logprob: -7.928104877471924
    8. 'that' → logprob: -9.053104400634766
    9. '_to' → logprob: -9.428104400634766
    10. ' and' → logprob: -9.553104400634766

Token 602: ' ' (ID: 220)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.606147050857544
    2. '3' → logprob: -1.606147050857544
    3. 'stones' → logprob: -2.106147050857544
    4. 'at' → logprob: -2.606147050857544
    5. 'three' → logprob: -3.356147050857544
    6. 'dis' → logprob: -4.231146812438965
    7. ' length' → logprob: -5.481146812438965
    8. ' stones' → logprob: -5.856146812438965
    9. ' at' → logprob: -7.231146812438965
    10. ' three' → logprob: -7.606146812438965

Token 603: '3' (ID: 18)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.2519737482070923
    2. '3' → logprob: -1.7519737482070923
    3. 'stones' → logprob: -3.5019736289978027
    4. 'at' → logprob: -4.376973628997803
    5. 'three' → logprob: -5.126973628997803
    6. ' length' → logprob: -8.251974105834961
    7. 'dis' → logprob: -8.751974105834961
    8. ' stones' → logprob: -9.251974105834961
    9. 'same' → logprob: -10.501974105834961
    10. 'size' → logprob: -10.501974105834961

Token 604: '+' (ID: 10)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.34866535663604736
    2. 'or' → logprob: -1.2236653566360474
    3. '+' → logprob: -8.598665237426758
    4. 'orm' → logprob: -10.848665237426758
    5. '<|end|>' → logprob: -13.348665237426758
    6. 'tokens' → logprob: -13.473665237426758
    7. '```' → logprob: -13.473665237426758
    8. '	or' → logprob: -13.598665237426758
    9. '=' → logprob: -13.723665237426758
    10. ')' → logprob: -14.223665237426758

Token 605: ' same' (ID: 2684)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.16578885912895203
    2. 'or' → logprob: -2.2907888889312744
    3. ' stones' → logprob: -3.2907888889312744
    4. 'stones' → logprob: -4.665788650512695
    5. ' equal' → logprob: -6.415788650512695
    6. 'equal' → logprob: -7.290788650512695
    7. 'same' → logprob: -7.665788650512695
    8. ' in' → logprob: -7.915788650512695
    9. ' same' → logprob: -7.915788650512695
    10. ' identical' → logprob: -8.540788650512695

Token 606: ' digit' (ID: 19181)
  Prédit: 'digits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digits' → logprob: -0.6382521986961365
    2. ' digits' → logprob: -1.8882522583007812
    3. 'digit' → logprob: -2.0132522583007812
    4. 'tokens' → logprob: -2.8882522583007812
    5. 'token' → logprob: -3.1382522583007812
    6. ' stones' → logprob: -3.2632522583007812
    7. ' tokens' → logprob: -4.138252258300781
    8. 'stones' → logprob: -4.138252258300781
    9. ' digit' → logprob: -4.888252258300781
    10. ' token' → logprob: -5.638252258300781

Token 607: ' stones' (ID: 38940)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014050795696675777
    2. ' to' → logprob: -5.7640509605407715
    3. 's' → logprob: -6.1390509605407715
    4. '
' → logprob: -6.1390509605407715
    5. ' that' → logprob: -6.3890509605407715
    6. ',' → logprob: -7.0140509605407715
    7. ' and' → logprob: -7.2640509605407715
    8. '        
' → logprob: -7.2640509605407715
    9. ' in' → logprob: -7.3890509605407715
    10. 'to' → logprob: -8.264050483703613

Token 608: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016273651272058487
    2. '
' → logprob: -5.641273498535156
    3. '<|end|>' → logprob: -5.766273498535156
    4. ' that' → logprob: -5.891273498535156
    5. ',' → logprob: -6.016273498535156
    6. ' to' → logprob: -6.391273498535156
    7. ' in' → logprob: -7.016273498535156
    8. 'to' → logprob: -8.016273498535156
    9. '        
' → logprob: -8.391273498535156
    10. 'that' → logprob: -8.391273498535156

Token 609: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004370778799057007
    2. '
' → logprob: -5.75437068939209
    3. '        
' → logprob: -7.75437068939209
    4. '<|end|>' → logprob: -7.75437068939209
    5. ',' → logprob: -8.75437068939209
    6. '  
' → logprob: -10.00437068939209
    7. '```' → logprob: -10.25437068939209
    8. ' that' → logprob: -11.25437068939209
    9. ',
' → logprob: -11.37937068939209
    10. '#' → logprob: -11.62937068939209

Token 610: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008792542852461338
    2. '
' → logprob: -4.758792400360107
    3. '        
' → logprob: -9.633792877197266
    4. '#' → logprob: -10.383792877197266
    5. '<|end|>' → logprob: -10.758792877197266
    6. '```' → logprob: -10.883792877197266
    7. '   ' → logprob: -11.133792877197266
    8. ',' → logprob: -12.258792877197266
    9. '"""
' → logprob: -13.133792877197266
    10. '<|end|>' → logprob: -13.133792877197266

Token 611: ' disappear' (ID: 47880)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.04275582730770111
    2. ' if' → logprob: -3.7927558422088623
    3. 'dis' → logprob: -4.042755603790283
    4. 'remove' → logprob: -7.417755603790283
    5. '       ' → logprob: -7.542755603790283
    6. ' disappear' → logprob: -8.042756080627441
    7. 'score' → logprob: -9.042756080627441
    8. 'If' → logprob: -9.417756080627441
    9. '           ' → logprob: -11.167756080627441
    10. '
' → logprob: -11.167756080627441

Token 612: ' them' (ID: 1373)
  Prédit: ' them'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' them' → logprob: -0.9315271377563477
    2. '_st' → logprob: -1.5565271377563477
    3. 'them' → logprob: -2.0565271377563477
    4. 'stones' → logprob: -2.1815271377563477
    5. '_' → logprob: -2.8065271377563477
    6. ' stones' → logprob: -3.0565271377563477
    7. ' those' → logprob: -4.056527137756348
    8. ' the' → logprob: -5.056527137756348
    9. '       ' → logprob: -5.431527137756348
    10. ' all' → logprob: -5.431527137756348

Token 613: ' simultaneously' (ID: 38328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005517138633877039
    2. '
' → logprob: -5.63051700592041
    3. ',' → logprob: -7.25551700592041
    4. '<|end|>' → logprob: -7.25551700592041
    5. '        
' → logprob: -8.50551700592041
    6. '<|end|>' → logprob: -9.50551700592041
    7. ',
' → logprob: -9.75551700592041
    8. 'positions' → logprob: -10.25551700592041
    9. ' and' → logprob: -10.50551700592041
    10. '#' → logprob: -11.00551700592041

Token 614: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10127469152212143
    2. '
' → logprob: -2.3512747287750244
    3. '        
' → logprob: -7.601274490356445
    4. '<|end|>' → logprob: -8.476274490356445
    5. ',' → logprob: -9.101274490356445
    6. '```' → logprob: -9.601274490356445
    7. '
' → logprob: -9.976274490356445
    8. '  
' → logprob: -10.476274490356445
    9. '\n' → logprob: -10.601274490356445
    10. '<|end|>' → logprob: -11.101274490356445

Token 615: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0022113965824246407
    2. '
' → logprob: -6.127211570739746
    3. '        
' → logprob: -11.002211570739746
    4. '#' → logprob: -12.502211570739746
    5. '```' → logprob: -13.502211570739746
    6. ',' → logprob: -13.752211570739746
    7. '   ' → logprob: -13.877211570739746
    8. '<|end|>' → logprob: -14.377211570739746
    9. '           ' → logprob: -14.752211570739746
    10. '  
' → logprob: -15.627211570739746

Token 616: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001214879215694964
    2. '#' → logprob: -7.126214981079102
    3. '
' → logprob: -8.251214981079102
    4. '-' (adapté à ' -') → logprob: -9.501214981079102
    5. '   ' → logprob: -9.626214981079102
    6. '           ' → logprob: -13.376214981079102
    7. '      ' → logprob: -13.501214981079102
    8. '        
' → logprob: -13.501214981079102
    9. '        ' → logprob: -13.626214981079102
    10. ' -' → logprob: -14.126214981079102

Token 617: ' drop' (ID: 9440)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.153800368309021
    2. ' self' → logprob: -2.1538004875183105
    3. '       ' → logprob: -3.6538004875183105
    4. '
' → logprob: -7.6538004875183105
    5. 'return' → logprob: -9.903800010681152
    6. 'drop' → logprob: -10.528800010681152
    7. '        
' → logprob: -10.653800010681152
    8. '	self' → logprob: -11.028800010681152
    9. ' drop' → logprob: -12.403800010681152
    10. ' return' → logprob: -12.528800010681152

Token 618: ' stones' (ID: 38940)
  Prédit: 'stones'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stones' → logprob: -0.27484413981437683
    2. ' stones' → logprob: -1.6498441696166992
    3. '_st' → logprob: -3.149844169616699
    4. ' the' → logprob: -5.649844169616699
    5. '_' → logprob: -7.649844169616699
    6. 'the' → logprob: -7.774844169616699
    7. 'st' → logprob: -7.899844169616699
    8. 'self' → logprob: -8.7748441696167
    9. '       ' → logprob: -9.1498441696167
    10. '   ' → logprob: -9.2748441696167

Token 619: ' above' (ID: 5151)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02265666052699089
    2. '
' → logprob: -3.8976566791534424
    3. '()
' → logprob: -7.022656440734863
    4. '        
' → logprob: -7.147656440734863
    5. ' to' → logprob: -9.147656440734863
    6. 'to' → logprob: -9.772656440734863
    7. 'down' → logprob: -10.522656440734863
    8. ',' → logprob: -10.647656440734863
    9. ' after' → logprob: -11.147656440734863
    10. '\n' → logprob: -11.147656440734863

Token 620: ' disappeared' (ID: 57770)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0027177375741302967
    2. '
' → logprob: -6.127717971801758
    3. 'to' → logprob: -8.502717971801758
    4. '()
' → logprob: -8.877717971801758
    5. 'and' → logprob: -10.127717971801758
    6. ' to' → logprob: -10.252717971801758
    7. '        
' → logprob: -10.752717971801758
    8. ',' → logprob: -11.502717971801758
    9. '           ' → logprob: -11.627717971801758
    10. 'from' → logprob: -11.877717971801758

Token 621: ' stones' (ID: 38940)
  Prédit: 'stones'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stones' → logprob: -0.005873567890375853
    2. ' stones' → logprob: -5.255873680114746
    3. 'positions' → logprob: -7.630873680114746
    4. ' ones' → logprob: -10.130873680114746
    5. '_st' → logprob: -10.255873680114746
    6. ' positions' → logprob: -10.505873680114746
    7. 'ones' → logprob: -10.505873680114746
    8. '   ' → logprob: -12.130873680114746
    9. 'spots' → logprob: -12.255873680114746
    10. '_positions' → logprob: -12.505873680114746

Token 622: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2840333878993988
    2. '
' → logprob: -1.4090334177017212
    3. '<|end|>' → logprob: -6.409033298492432
    4. '        
' → logprob: -7.159033298492432
    5. '
' → logprob: -9.15903377532959
    6. '  
' → logprob: -9.28403377532959
    7. '<|end|>' → logprob: -9.53403377532959
    8. '```' → logprob: -10.28403377532959
    9. '

' → logprob: -10.28403377532959
    10. ',' → logprob: -10.53403377532959

Token 623: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0029366982635110617
    2. '
' → logprob: -5.877936840057373
    3. '<|end|>' → logprob: -9.877936363220215
    4. '        
' → logprob: -10.127936363220215
    5. '```' → logprob: -10.877936363220215
    6. ',' → logprob: -12.502936363220215
    7. '  
' → logprob: -12.877936363220215
    8. '   ' → logprob: -12.877936363220215
    9. '#' → logprob: -13.002936363220215
    10. ')' → logprob: -13.127936363220215

Token 624: ' Return' (ID: 6318)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04713519290089607
    2. '
' → logprob: -3.2971351146698
    3. 'to' → logprob: -5.547135353088379
    4. 'positions' → logprob: -5.672135353088379
    5. '   ' → logprob: -7.672135353088379
    6. '        
' → logprob: -7.797135353088379
    7. 'pos' → logprob: -8.422135353088379
    8. ' to' → logprob: -8.547135353088379
    9. '"""
' → logprob: -9.297135353088379
    10. ' positions' → logprob: -9.422135353088379

Token 625: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.062053948640823364
    2. 'True' → logprob: -2.812053918838501
    3. ' False' → logprob: -9.562053680419922
    4. 'False' → logprob: -11.062053680419922
    5. ' ' → logprob: -16.062053680419922
    6. ' bool' → logprob: -16.312053680419922
    7. '   ' → logprob: -16.812053680419922
    8. 'bool' → logprob: -17.562053680419922
    9. '(True' → logprob: -17.937053680419922
    10. '=True' → logprob: -18.687053680419922

Token 626: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.007418271154165268
    2. 'if' → logprob: -5.382418155670166
    3. '<|end|>' → logprob: -6.382418155670166
    4. ',' → logprob: -7.882418155670166
    5. ' for' → logprob: -8.382418632507324
    6. '
' → logprob: -9.507418632507324
    7. '```' → logprob: -9.507418632507324
    8. ' ' → logprob: -9.632418632507324
    9. 'If' → logprob: -10.132418632507324
    10. '(' → logprob: -10.507418632507324

Token 627: ' any' (ID: 1062)
  Prédit: ' any'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' any' → logprob: -0.6262722611427307
    2. 'any' → logprob: -1.251272201538086
    3. 'len' → logprob: -2.876272201538086
    4. ' True' → logprob: -3.001272201538086
    5. 'True' → logprob: -3.376272201538086
    6. ' len' → logprob: -4.501272201538086
    7. 'removed' → logprob: -4.751272201538086
    8. 'changed' → logprob: -5.001272201538086
    9. ' disappeared' → logprob: -6.376272201538086
    10. 'the' → logprob: -6.376272201538086

Token 628: ' stones' (ID: 38940)
  Prédit: 'stones'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stones' → logprob: -0.23167283833026886
    2. ' stones' → logprob: -1.8566728830337524
    3. ' disappeared' → logprob: -3.731672763824463
    4. 'dis' → logprob: -4.481672763824463
    5. 'stone' → logprob: -4.481672763824463
    6. ' disappearance' → logprob: -7.231672763824463
    7. ' disappear' → logprob: -7.481672763824463
    8. ' stone' → logprob: -7.731672763824463
    9. 'chains' → logprob: -7.731672763824463
    10. ' chains' → logprob: -7.731672763824463

Token 629: ' disappeared' (ID: 57770)
  Prédit: 'dis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dis' → logprob: -0.3178445100784302
    2. ' disappeared' → logprob: -1.3178445100784302
    3. '   ' → logprob: -5.942844390869141
    4. 'were' → logprob: -7.567844390869141
    5. ' were' → logprob: -7.817844390869141
    6. '       ' → logprob: -8.06784439086914
    7. 'have' → logprob: -8.56784439086914
    8. '_dis' → logprob: -8.69284439086914
    9. ' have' → logprob: -8.81784439086914
    10. '```' → logprob: -9.56784439086914

Token 630: ',' (ID: 11)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -1.1210227012634277
    2. ':' → logprob: -1.2460227012634277
    3. '       ' → logprob: -1.4960227012634277
    4. '():' → logprob: -2.2460227012634277
    5. '():
' → logprob: -2.9960227012634277
    6. '):
' → logprob: -5.746022701263428
    7. '
' → logprob: -6.871022701263428
    8. '):' → logprob: -6.996022701263428
    9. '   ' → logprob: -7.496022701263428
    10. '```' → logprob: -8.621023178100586

Token 631: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -1.0942699909210205
    2. 'False' → logprob: -1.0942699909210205
    3. '       ' → logprob: -1.5942699909210205
    4. ' else' → logprob: -2.4692699909210205
    5. 'else' → logprob: -3.2192699909210205
    6. ' otherwise' → logprob: -6.719269752502441
    7. 'otherwise' → logprob: -6.719269752502441
    8. '
' → logprob: -8.594269752502441
    9. '```' → logprob: -10.094269752502441
    10. '        ' → logprob: -10.594269752502441

Token 632: ' otherwise' (ID: 10275)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 633: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7851288914680481
    2. '       ' → logprob: -0.7851288914680481
    3. '):' → logprob: -3.5351288318634033
    4. ':
' → logprob: -3.5351288318634033
    5. '):
' → logprob: -4.410129070281982
    6. ')' → logprob: -4.910129070281982
    7. ',' → logprob: -5.660129070281982
    8. '<|end|>' → logprob: -5.910129070281982
    9. '```' → logprob: -6.910129070281982
    10. '   ' → logprob: -7.035129070281982

Token 634: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00014370749704539776
    2. '
' → logprob: -9.875144004821777
    3. '```' → logprob: -9.875144004821777
    4. '   ' → logprob: -11.875144004821777
    5. '<|end|>' → logprob: -11.875144004821777
    6. '        
' → logprob: -11.875144004821777
    7. 'to' → logprob: -12.750144004821777
    8. ')' → logprob: -12.875144004821777
    9. '{
' → logprob: -13.000144004821777
    10. '#' → logprob: -13.500144004821777

Token 635: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003314361674711108
    2. 'to' → logprob: -5.87831449508667
    3. '```' → logprob: -8.378314018249512
    4. 'positions' → logprob: -9.253314018249512
    5. '
' → logprob: -9.753314018249512
    6. ' to' → logprob: -9.753314018249512
    7. ')' → logprob: -11.503314018249512
    8. '        
' → logprob: -11.628314018249512
    9. '#' → logprob: -11.753314018249512
    10. '   ' → logprob: -11.878314018249512

Token 636: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05608706176280975
    2. 'to' → logprob: -2.931087017059326
    3. 'positions' → logprob: -6.931087017059326
    4. ' to' → logprob: -8.681087493896484
    5. '   ' → logprob: -10.306087493896484
    6. 'pos' → logprob: -11.806087493896484
    7. '```' → logprob: -11.931087493896484
    8. '
' → logprob: -12.806087493896484
    9. '        
' → logprob: -13.806087493896484
    10. 'found' → logprob: -14.056087493896484

Token 637: ' chains' (ID: 42636)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.018548469990491867
    2. 'positions' → logprob: -4.268548488616943
    3. '       ' → logprob: -5.518548488616943
    4. ' to' → logprob: -8.393548011779785
    5. 'while' → logprob: -9.643548011779785
    6. 'chains' (adapté à ' chains') → logprob: -10.518548011779785
    7. ' positions' → logprob: -10.893548011779785
    8. 'ch' → logprob: -11.393548011779785
    9. 'found' → logprob: -12.268548011779785
    10. 'chain' → logprob: -12.768548011779785

Token 638: ' =' (ID: 314)
  Prédit: '_to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.47888705134391785
    2. ' =' → logprob: -0.9788870811462402
    3. '=' → logprob: -5.47888708114624
    4. '_positions' → logprob: -7.47888708114624
    5. 'To' → logprob: -10.103886604309082
    6. 'to' → logprob: -11.603886604309082
    7. '   ' → logprob: -12.478886604309082
    8. '_' → logprob: -13.603886604309082
    9. ' ' → logprob: -14.103886604309082
    10. ' to' → logprob: -14.228886604309082

Token 639: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10020774602890015
    2. ' self' → logprob: -2.350207805633545
    3. '       ' → logprob: -13.975207328796387
    4. '(self' → logprob: -15.350207328796387
    5. '=self' → logprob: -17.350208282470703
    6. '	self' → logprob: -17.600208282470703
    7. '[self' → logprob: -18.725208282470703
    8. '   ' → logprob: -19.725208282470703
    9. '           ' → logprob: -19.725208282470703
    10. ' ' → logprob: -20.975208282470703

Token 640: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.0001422770437784493
    2. '_find' → logprob: -8.875142097473145
    3. ' _' → logprob: -13.250142097473145
    4. '.' → logprob: -15.125142097473145
    5. '_dis' → logprob: -15.875142097473145
    6. '.find' → logprob: -16.12514305114746
    7. '   ' → logprob: -16.75014305114746
    8. '_self' → logprob: -17.25014305114746
    9. ',_' → logprob: -17.50014305114746
    10. '_' → logprob: -17.75014305114746

Token 641: 'find' (ID: 6555)
  Prédit: 'find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -4.320199877838604e-07
    2. '_find' → logprob: -15.0
    3. ' find' → logprob: -18.875
    4. '.find' → logprob: -21.0
    5. '(find' → logprob: -21.125
    6. '=find' → logprob: -23.0
    7. '	find' → logprob: -23.125
    8. 'Find' → logprob: -23.75
    9. 'found' → logprob: -24.0
    10. '
' → logprob: -24.125

Token 642: '_ch' (ID: 8914)
  Prédit: '_ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ch' → logprob: -3.128163257315464e-07
    2. 'chains' → logprob: -15.375
    3. 'ch' → logprob: -18.25
    4. ' chains' → logprob: -19.25
    5. '```' → logprob: -20.25
    6. '_st' → logprob: -20.375
    7. '_cl' → logprob: -20.625
    8. '_chain' → logprob: -20.75
    9. '_' → logprob: -21.25
    10. '_to' → logprob: -21.5

Token 643: 'ains' (ID: 2352)
  Prédit: 'ains'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ains' → logprob: -7.3458322731312364e-06
    2. 'ain' → logprob: -12.625007629394531
    3. '_' → logprob: -13.375007629394531
    4. 'a' → logprob: -14.375007629394531
    5. '```' → logprob: -14.500007629394531
    6. '
' → logprob: -15.375007629394531
    7. 'airs' → logprob: -15.375007629394531
    8. 'chains' → logprob: -15.500007629394531
    9. '`' → logprob: -15.750007629394531
    10. '   ' → logprob: -16.37500762939453

Token 644: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -1.9361264946837764e-07
    2. 'to' → logprob: -15.625
    3. '()' → logprob: -17.5
    4. 'To' → logprob: -18.25
    5. '_t' → logprob: -18.625
    6. '```' → logprob: -19.125
    7. '()
' → logprob: -19.25
    8. 's' → logprob: -19.5
    9. '_' → logprob: -19.625
    10. '
' → logprob: -19.875

Token 645: '_dis' (ID: 15018)
  Prédit: 'dis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dis' → logprob: -0.5759972929954529
    2. '_dis' → logprob: -0.8259972929954529
    3. 'appear' → logprob: -9.950997352600098
    4. ' disappear' → logprob: -12.825997352600098
    5. 'd' → logprob: -13.075997352600098
    6. 'Disappear' → logprob: -13.575997352600098
    7. '	dis' → logprob: -13.825997352600098
    8. 'discard' → logprob: -14.450997352600098
    9. 'def' → logprob: -14.950997352600098
    10. 'continue' → logprob: -15.200997352600098

Token 646: 'appear' (ID: 61410)
  Prédit: 'appear'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'appear' → logprob: -1.747814349073451e-05
    2. 'apper' → logprob: -11.875017166137695
    3. 'ap' → logprob: -12.000017166137695
    4. 'app' → logprob: -12.625017166137695
    5. 'is' → logprob: -15.500017166137695
    6. 'appe' → logprob: -15.500017166137695
    7. 'a' → logprob: -15.750017166137695
    8. 'appen' → logprob: -15.875017166137695
    9. 'appa' → logprob: -16.750017166137695
    10. '```' → logprob: -16.750017166137695

Token 647: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003308539278805256
    2. ' if' → logprob: -6.3783087730407715
    3. '<|end|>' → logprob: -7.1283087730407715
    4. '()' → logprob: -7.7533087730407715
    5. 'if' → logprob: -8.253308296203613
    6. ')' → logprob: -9.753308296203613
    7. '()
' → logprob: -11.128308296203613
    8. '<|end|>' → logprob: -11.753308296203613
    9. '        
' → logprob: -12.628308296203613
    10. '
' → logprob: -12.878308296203613

Token 648: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15026848018169403
    2. 'if' → logprob: -2.0252685546875
    3. ' if' → logprob: -4.9002685546875
    4. 'dis' → logprob: -9.6502685546875
    5. 'self' → logprob: -10.5252685546875
    6. 'score' → logprob: -11.9002685546875
    7. '        
' → logprob: -12.4002685546875
    8. '```' → logprob: -12.5252685546875
    9. '
' → logprob: -12.6502685546875
    10. '   ' → logprob: -12.6502685546875

Token 649: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.011399347335100174
    2. '       ' → logprob: -4.761399269104004
    3. ' if' → logprob: -5.886399269104004
    4. '```' → logprob: -13.511399269104004
    5. '	if' → logprob: -13.636399269104004
    6. 'If' → logprob: -14.136399269104004
    7. 'score' → logprob: -15.636399269104004
    8. '   ' → logprob: -15.761399269104004
    9. 'self' → logprob: -16.13640022277832
    10. '        
' → logprob: -16.76140022277832

Token 650: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.3133071959018707
    2. 'not' → logprob: -1.3133071660995483
    3. 'chains' → logprob: -10.68830680847168
    4. 'len' → logprob: -11.43830680847168
    5. ' chains' → logprob: -12.06330680847168
    6. ' len' → logprob: -12.31330680847168
    7. '	not' → logprob: -13.81330680847168
    8. ' ' → logprob: -15.56330680847168
    9. '   ' → logprob: -15.68830680847168
    10. '!' → logprob: -16.43830680847168

Token 651: ' chains' (ID: 42636)
  Prédit: 'chains'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chains' → logprob: -0.00861456897109747
    2. ' chains' → logprob: -4.758614540100098
    3. 'chain' → logprob: -17.258615493774414
    4. 'Chains' → logprob: -21.133615493774414
    5. 'ch' → logprob: -22.633615493774414
    6. 'channels' → logprob: -23.508615493774414
    7. '
' → logprob: -23.508615493774414
    8. ' ' → logprob: -23.633615493774414
    9. 'self' → logprob: -23.883615493774414
    10. ' ' → logprob: -24.258615493774414

Token 652: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016128914430737495
    2. ':
' → logprob: -4.141129016876221
    3. ':return' → logprob: -9.391128540039062
    4. ':
' → logprob: -12.016128540039062
    5. '):' → logprob: -12.641128540039062
    6. '):
' → logprob: -14.391128540039062
    7. ' :' → logprob: -14.516128540039062
    8. ')' → logprob: -15.141128540039062
    9. ':

' → logprob: -15.891128540039062
    10. '       ' → logprob: -16.141128540039062

Token 653: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0010324534960091114
    2. 'return' → logprob: -7.00103235244751
    3. ' return' → logprob: -9.376032829284668
    4. '
' → logprob: -10.376032829284668
    5. '```' → logprob: -14.251032829284668
    6. ':
' → logprob: -14.376032829284668
    7. '{return' → logprob: -14.376032829284668
    8. '            
' → logprob: -14.876032829284668
    9. '		' → logprob: -14.876032829284668
    10. ':return' → logprob: -14.876032829284668

Token 654: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.024715682491660118
    2. '           ' → logprob: -3.7747156620025635
    3. ' return' → logprob: -6.524715900421143
    4. '	return' → logprob: -13.899715423583984
    5. '   ' → logprob: -14.524715423583984
    6. '{return' → logprob: -15.274715423583984
    7. ':return' → logprob: -15.649715423583984
    8. '               ' → logprob: -15.774715423583984
    9. '       ' → logprob: -15.899715423583984
    10. '```' → logprob: -16.399715423583984

Token 655: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0001234428636962548
    2. ' False' → logprob: -9.000123023986816
    3. '(False' → logprob: -20.750123977661133
    4. 'false' → logprob: -22.500123977661133
    5. '=False' → logprob: -23.875123977661133
    6. 'True' → logprob: -24.500123977661133
    7. '_false' → logprob: -25.750123977661133
    8. 'None' → logprob: -25.875123977661133
    9. '
' → logprob: -26.500123977661133
    10. '.False' → logprob: -26.750123977661133

Token 656: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03295917809009552
    2. '
' → logprob: -3.532959222793579
    3. 'dis' → logprob: -6.532958984375
    4. '        
' → logprob: -6.782958984375
    5. 'score' → logprob: -7.782958984375
    6. 'self' → logprob: -9.782958984375
    7. '    
' → logprob: -10.032958984375
    8. '   ' → logprob: -10.407958984375
    9. '```' → logprob: -10.907958984375
    10. '
' → logprob: -11.032958984375

Token 657: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022061776369810104
    2. 'score' → logprob: -4.147061824798584
    3. 'dis' → logprob: -5.897061824798584
    4. '
' → logprob: -6.522061824798584
    5. 'self' → logprob: -6.897061824798584
    6. '        
' → logprob: -7.897061824798584
    7. '```' → logprob: -8.397061347961426
    8. ' score' → logprob: -10.147061347961426
    9. ' self' → logprob: -10.522061347961426
    10. '   ' → logprob: -10.522061347961426

Token 658: ' gained' (ID: 27841)
  Prédit: 'score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'score' → logprob: -0.2907630205154419
    2. 'self' → logprob: -1.540763020515442
    3. '       ' → logprob: -3.9157629013061523
    4. 'dis' → logprob: -4.290762901306152
    5. 'sc' → logprob: -6.540762901306152
    6. 'removed' → logprob: -6.665762901306152
    7. 'points' → logprob: -7.165762901306152
    8. ' self' → logprob: -7.790762901306152
    9. 'added' → logprob: -8.290762901306152
    10. ' score' → logprob: -9.540762901306152

Token 659: ' =' (ID: 314)
  Prédit: '_score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -0.009012664668262005
    2. '_points' → logprob: -5.009012699127197
    3. '_' → logprob: -6.259012699127197
    4. ' =' → logprob: -8.009012222290039
    5. '_scores' → logprob: -10.759012222290039
    6. '=' → logprob: -10.884012222290039
    7. '=_' → logprob: -13.009012222290039
    8. '_pts' → logprob: -13.134012222290039
    9. '_amount' → logprob: -13.509012222290039
    10. 'score' → logprob: -13.759012222290039

Token 660: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06197025999426842
    2. ' self' → logprob: -2.8119702339172363
    3. '       ' → logprob: -13.061970710754395
    4. '0' → logprob: -15.061970710754395
    5. '(self' → logprob: -16.186969757080078
    6. '=self' → logprob: -17.311969757080078
    7. '	self' → logprob: -17.811969757080078
    8. '   ' → logprob: -18.436969757080078
    9. ' ' → logprob: -19.061969757080078
    10. '[self' → logprob: -19.311969757080078

Token 661: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -4.842555426876061e-06
    2. '.' → logprob: -12.625004768371582
    3. '_score' → logprob: -13.875004768371582
    4. '.score' → logprob: -15.625004768371582
    5. ' ' → logprob: -16.0000057220459
    6. '   ' → logprob: -16.7500057220459
    7. ' .' → logprob: -16.8750057220459
    8. '_' → logprob: -17.0000057220459
    9. ' _' → logprob: -17.3750057220459
    10. '_scores' → logprob: -17.6250057220459

Token 662: 'dis' (ID: 4220)
  Prédit: 'dis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dis' → logprob: -1.1472419600977446e-06
    2. '_dis' → logprob: -13.750000953674316
    3. 'Disappear' → logprob: -17.500001907348633
    4. ' disappear' → logprob: -18.000001907348633
    5. '	dis' → logprob: -21.750001907348633
    6. '-dis' → logprob: -21.750001907348633
    7. 'appear' → logprob: -21.875001907348633
    8. '(dis' → logprob: -21.875001907348633
    9. '.dis' → logprob: -22.000001907348633
    10. 'd' → logprob: -22.500001907348633

Token 663: 'appear' (ID: 61410)
  Prédit: 'appear'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'appear' → logprob: -1.27099974633893e-05
    2. 'appe' → logprob: -11.875012397766113
    3. '_' → logprob: -13.625012397766113
    4. '```' → logprob: -13.750012397766113
    5. 'ap' → logprob: -14.375012397766113
    6. '
' → logprob: -14.750012397766113
    7. 'app' → logprob: -14.750012397766113
    8. 'apper' → logprob: -14.875012397766113
    9. ' appear' → logprob: -15.250012397766113
    10. '``' → logprob: -15.375012397766113

Token 664: '_st' (ID: 2518)
  Prédit: '_st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -3.128163257315464e-07
    2. '_scores' → logprob: -16.375
    3. 'stones' → logprob: -17.125
    4. '_' → logprob: -17.75
    5. '_s' → logprob: -18.0
    6. ' _' → logprob: -18.0
    7. 'e' → logprob: -18.25
    8. 'ed' → logprob: -18.5
    9. '_se' → logprob: -18.875
    10. '_positions' → logprob: -19.0

Token 665: 'ones' (ID: 3617)
  Prédit: 'ones'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ones' → logprob: -1.3663626305060461e-05
    2. 'one' → logprob: -11.37501335144043
    3. '
' → logprob: -14.12501335144043
    4. 'stones' → logprob: -15.12501335144043
    5. ' ones' → logprob: -15.87501335144043
    6. '

' → logprob: -16.00001335144043
    7. '```' → logprob: -16.25001335144043
    8. '   ' → logprob: -16.37501335144043
    9. 'tones' → logprob: -16.50001335144043
    10. 'ONES' → logprob: -16.50001335144043

Token 666: '(ch' (ID: 15574)
  Prédit: '(ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ch' → logprob: -7.896309739408025e-07
    2. '(' → logprob: -15.125000953674316
    3. '(c' → logprob: -15.125000953674316
    4. ' (' → logprob: -15.875000953674316
    5. '(chain' → logprob: -16.125
    6. '(co' → logprob: -19.25
    7. '(cl' → logprob: -20.25
    8. '(s' → logprob: -20.375
    9. '   ' → logprob: -20.5
    10. '```' → logprob: -20.625

Token 667: 'ains' (ID: 2352)
  Prédit: 'ains'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ains' → logprob: -4.127333340875339e-06
    2. 'ain' → logprob: -13.125003814697266
    3. 'aines' → logprob: -14.250003814697266
    4. '[' → logprob: -15.125003814697266
    5. 'a' → logprob: -15.625003814697266
    6. '=' → logprob: -15.875003814697266
    7. '
' → logprob: -16.125003814697266
    8. '(' → logprob: -16.375003814697266
    9. 'e' → logprob: -16.500003814697266
    10. '   ' → logprob: -16.625003814697266

Token 668: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00873937364667654
    2. ')
' → logprob: -4.758739471435547
    3. '       ' → logprob: -9.008739471435547
    4. ')
' → logprob: -13.258739471435547
    5. ')return' → logprob: -15.633739471435547
    6. ')

' → logprob: -15.633739471435547
    7. '),' → logprob: -16.508739471435547
    8. ')set' → logprob: -16.633739471435547
    9. ')c' → logprob: -16.758739471435547
    10. ' )' → logprob: -16.883739471435547

Token 669: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06501047313213348
    2. 'self' → logprob: -2.8150105476379395
    3. ' self' → logprob: -6.4400105476379395
    4. '
' → logprob: -6.5650105476379395
    5. '        
' → logprob: -11.440010070800781
    6. '
' → logprob: -11.940010070800781
    7. '	self' → logprob: -12.190010070800781
    8. '```' → logprob: -12.940010070800781
    9. '<|end|>' → logprob: -13.690010070800781
    10. '\' → logprob: -13.690010070800781

Token 670: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.10628614574670792
    2. '       ' → logprob: -2.35628604888916
    3. ' self' → logprob: -5.10628604888916
    4. '	self' → logprob: -13.85628604888916
    5. '```' → logprob: -14.35628604888916
    6. '
' → logprob: -14.85628604888916
    7. ' ' → logprob: -15.23128604888916
    8. '`' → logprob: -16.731287002563477
    9. '        
' → logprob: -16.856287002563477
    10. '``' → logprob: -17.106287002563477

Token 671: '.score' (ID: 42441)
  Prédit: '.score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.score' → logprob: -0.00016957100888248533
    2. '.' → logprob: -9.00016975402832
    3. 'score' → logprob: -10.00016975402832
    4. '.s' → logprob: -14.50016975402832
    5. ' .' → logprob: -16.12516975402832
    6. '	score' → logprob: -17.00016975402832
    7. '.Score' → logprob: -17.62516975402832
    8. ' score' → logprob: -18.00016975402832
    9. '.code' → logprob: -18.25016975402832
    10. '.step' → logprob: -18.37516975402832

Token 672: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.16023093461990356
    2. ' +=' → logprob: -1.9102308750152588
    3. '+' → logprob: -12.03523063659668
    4. ']+=' → logprob: -14.66023063659668
    5. '+=(' → logprob: -15.78523063659668
    6. '       ' → logprob: -16.28523063659668
    7. '   ' → logprob: -16.53523063659668
    8. '+="' → logprob: -17.28523063659668
    9. '    ' → logprob: -17.53523063659668
    10. '```' → logprob: -17.91023063659668

Token 673: ' gained' (ID: 27841)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.011063620448112488
    2. ' gained' → logprob: -4.511063575744629
    3. ' g' → logprob: -11.636063575744629
    4. 'got' → logprob: -13.011063575744629
    5. 'gain' → logprob: -13.011063575744629
    6. '	g' → logprob: -13.511063575744629
    7. 'gone' → logprob: -14.761063575744629
    8. '_g' → logprob: -15.136063575744629
    9. ' ' → logprob: -16.261064529418945
    10. '(g' → logprob: -16.511064529418945

Token 674: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05253847688436508
    2. '
' → logprob: -3.0525383949279785
    3. 'self' → logprob: -5.5525383949279785
    4. ' self' → logprob: -9.802538871765137
    5. '        
' → logprob: -12.302538871765137
    6. '
' → logprob: -12.427538871765137
    7. '   ' → logprob: -14.677538871765137
    8. ' 
' → logprob: -15.177538871765137
    9. '	self' → logprob: -15.552538871765137
    10. '```' → logprob: -15.677538871765137

Token 675: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012842408381402493
    2. '
' → logprob: -5.012842178344727
    3. 'self' → logprob: -5.137842178344727
    4. ' self' → logprob: -8.387842178344727
    5. '        
' → logprob: -12.637842178344727
    6. '	self' → logprob: -13.012842178344727
    7. '
' → logprob: -13.387842178344727
    8. '   ' → logprob: -13.512842178344727
    9. '	' → logprob: -14.512842178344727
    10. '```' → logprob: -15.012842178344727

Token 676: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.18016363680362701
    2. '       ' → logprob: -1.9301636219024658
    3. ' self' → logprob: -3.930163621902466
    4. '
' → logprob: -9.430163383483887
    5. '	self' → logprob: -11.180163383483887
    6. '   ' → logprob: -13.055163383483887
    7. '        
' → logprob: -13.180163383483887
    8. '	' → logprob: -13.680163383483887
    9. '(self' → logprob: -14.555163383483887
    10. ' ' → logprob: -14.555163383483887

Token 677: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -1.7432603272027336e-06
    2. '_drop' → logprob: -14.000001907348633
    3. '.drop' → logprob: -14.750001907348633
    4. '.' → logprob: -15.125001907348633
    5. ']._' → logprob: -17.250001907348633
    6. ')._' → logprob: -17.625001907348633
    7. '
' → logprob: -18.000001907348633
    8. '```' → logprob: -18.375001907348633
    9. '.__' → logprob: -18.625001907348633
    10. ' ' → logprob: -18.625001907348633

Token 678: 'drop' (ID: 12740)
  Prédit: 'drop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'drop' → logprob: 0.0
    2. '_drop' → logprob: -18.5
    3. ' drop' → logprob: -19.875
    4. '.drop' → logprob: -22.625
    5. '(drop' → logprob: -23.375
    6. 'dro' → logprob: -24.125
    7. 'DROP' → logprob: -24.375
    8. 'Drop' → logprob: -25.0
    9. 'd' → logprob: -25.125
    10. 'down' → logprob: -25.25

Token 679: '_st' (ID: 2518)
  Prédit: '_st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: 0.0
    2. '_' → logprob: -18.375
    3. 'St' → logprob: -19.625
    4. ' _' → logprob: -20.375
    5. '_ST' → logprob: -21.125
    6. 'stones' → logprob: -21.125
    7. '```' → logprob: -21.875
    8. 'st' → logprob: -22.25
    9. '_s' → logprob: -22.375
    10. '._' → logprob: -22.625

Token 680: 'ones' (ID: 3617)
  Prédit: 'ones'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ones' → logprob: -1.306760805164231e-05
    2. 'one' → logprob: -11.87501335144043
    3. 'stones' → logprob: -12.12501335144043
    4. ' ones' → logprob: -15.75001335144043
    5. '```' → logprob: -16.62501335144043
    6. 'tones' → logprob: -16.75001335144043
    7. 'ONES' → logprob: -16.87501335144043
    8. '_' → logprob: -17.12501335144043
    9. '
' → logprob: -17.37501335144043
    10. ' stones' → logprob: -17.37501335144043

Token 681: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11433259397745132
    2. 'return' → logprob: -2.239332675933838
    3. '()
' → logprob: -7.489332675933838
    4. ' return' → logprob: -7.739332675933838
    5. '()' → logprob: -8.23933219909668
    6. '
' → logprob: -8.61433219909668
    7. '   ' → logprob: -10.36433219909668
    8. '<|end|>' → logprob: -10.98933219909668
    9. '```' → logprob: -12.73933219909668
    10. '	return' → logprob: -12.73933219909668

Token 682: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030783774331212044
    2. 'return' → logprob: -3.5307838916778564
    3. '	return' → logprob: -8.030783653259277
    4. '   ' → logprob: -8.030783653259277
    5. '	' → logprob: -8.280783653259277
    6. ' return' → logprob: -9.155783653259277
    7. '	   ' → logprob: -11.655783653259277
    8. '
' → logprob: -12.155783653259277
    9. ' ' → logprob: -12.780783653259277
    10. '	       ' → logprob: -13.405783653259277

Token 683: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00035250463406555355
    2. '       ' → logprob: -8.00035285949707
    3. ' return' → logprob: -11.00035285949707
    4. 'while' → logprob: -15.00035285949707
    5. '	return' → logprob: -17.25035285949707
    6. '   ' → logprob: -17.62535285949707
    7. '
' → logprob: -19.62535285949707
    8. '#' → logprob: -20.75035285949707
    9. '```' → logprob: -21.00035285949707
    10. 'self' → logprob: -21.12535285949707

Token 684: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.01416350994259119
    2. ' True' → logprob: -4.264163494110107
    3. '(True' → logprob: -19.514163970947266
    4. 'true' → logprob: -21.014163970947266
    5. '       ' → logprob: -21.639163970947266
    6. '   ' → logprob: -22.264163970947266
    7. '=True' → logprob: -22.514163970947266
    8. ' ' → logprob: -24.514163970947266
    9. '_true' → logprob: -24.514163970947266
    10. 'False' → logprob: -25.014163970947266

Token 685: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 686: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 687: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.4835854768753052
    2. '<|end|>' → logprob: -0.9835854768753052
    3. '#' → logprob: -5.108585357666016
    4. '<|end|>' → logprob: -6.608585357666016
    5. '
' → logprob: -7.733585357666016
    6. '   ' → logprob: -7.733585357666016
    7. '```' → logprob: -8.358585357666016
    8. 'if' → logprob: -8.483585357666016
    9. '...' → logprob: -8.483585357666016
    10. '[' → logprob: -9.108585357666016

Token 688: ' solve' (ID: 17722)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.31328949332237244
    2. ' __' → logprob: -1.3132895231246948
    3. ' print' → logprob: -11.688289642333984
    4. 'print' → logprob: -11.813289642333984
    5. '_repr' → logprob: -12.813289642333984
    6. 'repr' → logprob: -13.188289642333984
    7. ' display' → logprob: -13.563289642333984
    8. '_' → logprob: -13.563289642333984
    9. '_print' → logprob: -13.813289642333984
    10. '  ' → logprob: -14.688289642333984

Token 689: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.1756367712223437e-05
    2. '(' → logprob: -11.750011444091797
    3. 'self' → logprob: -13.125011444091797
    4. '   ' → logprob: -14.750011444091797
    5. ' (' → logprob: -14.875011444091797
    6. '_(' → logprob: -15.250011444091797
    7. '(s' → logprob: -15.500011444091797
    8. '_step' → logprob: -15.875011444091797
    9. '```' → logprob: -16.375011444091797
    10. '       ' → logprob: -16.500011444091797

Token 690: ')' (ID: 8)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.971051037311554
    2. 'self' → logprob: -1.2210509777069092
    3. '):
' → logprob: -1.3460509777069092
    4. '):' → logprob: -3.221050977706909
    5. ')' → logprob: -4.846051216125488
    6. '   ' → logprob: -4.846051216125488
    7. ',' → logprob: -5.221051216125488
    8. '       ' → logprob: -5.471051216125488
    9. ')(' → logprob: -7.846051216125488
    10. '(' → logprob: -8.971051216125488

Token 691: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0009333750349469483
    2. '(' → logprob: -7.1259331703186035
    3. '       ' → logprob: -9.875933647155762
    4. '   ' → logprob: -10.000933647155762
    5. 'self' → logprob: -10.625933647155762
    6. ' (' → logprob: -12.500933647155762
    7. '(
' → logprob: -13.375933647155762
    8. ' self' → logprob: -14.125933647155762
    9. 'def' → logprob: -14.250933647155762
    10. ':
' → logprob: -15.125933647155762

Token 692: ' int' (ID: 677)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.2059365063905716
    2. ' None' → logprob: -1.7059365510940552
    3. '   ' → logprob: -6.080936431884766
    4. 'bool' → logprob: -6.580936431884766
    5. ' bool' → logprob: -7.455936431884766
    6. 'int' → logprob: -8.455936431884766
    7. ' int' → logprob: -10.455936431884766
    8. '
' → logprob: -11.705936431884766
    9. '    
' → logprob: -12.330936431884766
    10. ' 
' → logprob: -13.705936431884766

Token 693: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.731281578540802
    2. ':
' → logprob: -1.3562815189361572
    3. ':' → logprob: -1.8562815189361572
    4. '(self' → logprob: -2.8562815189361572
    5. '   ' → logprob: -3.1062815189361572
    6. 'self' → logprob: -6.606281757354736
    7. 'def' → logprob: -8.231281280517578
    8. '():
' → logprob: -8.356281280517578
    9. '():' → logprob: -9.106281280517578
    10. '(' → logprob: -9.231281280517578

Token 694: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005952088395133615
    2. 'while' → logprob: -8.375595092773438
    3. ' while' → logprob: -8.500595092773438
    4. '```' → logprob: -8.875595092773438
    5. '   ' → logprob: -10.875595092773438
    6. '	while' → logprob: -13.875595092773438
    7. '
' → logprob: -15.000595092773438
    8. '        
' → logprob: -15.625595092773438
    9. '``' → logprob: -15.625595092773438
    10. 'While' → logprob: -16.000595092773438

Token 695: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20215728878974915
    2. 'while' → logprob: -1.9521572589874268
    3. ' while' → logprob: -3.2021572589874268
    4. '```' → logprob: -8.202157020568848
    5. '   ' → logprob: -9.577157020568848
    6. '	while' → logprob: -11.202157020568848
    7. 'result' → logprob: -11.577157020568848
    8. '
' → logprob: -11.702157020568848
    9. '    ' → logprob: -11.952157020568848
    10. '``' → logprob: -12.952157020568848

Token 696: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030573440715670586
    2. 'while' → logprob: -3.5305733680725098
    3. 'result' → logprob: -7.40557336807251
    4. ' while' → logprob: -9.530573844909668
    5. 'res' → logprob: -10.280573844909668
    6. '   ' → logprob: -10.530573844909668
    7. 'seen' → logprob: -10.780573844909668
    8. 'steps' → logprob: -10.905573844909668
    9. '```' → logprob: -11.530573844909668
    10. 'changed' → logprob: -11.655573844909668

Token 697: ' Solve' (ID: 116151)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5520723462104797
    2. 'steps' → logprob: -2.177072286605835
    3. 'result' → logprob: -2.302072286605835
    4. 'score' → logprob: -2.427072286605835
    5. 'while' → logprob: -3.052072286605835
    6. 'changed' → logprob: -3.802072286605835
    7. 'seen' → logprob: -4.677072525024414
    8. 'current' → logprob: -5.427072525024414
    9. 'res' → logprob: -5.427072525024414
    10. 'total' → logprob: -5.552072525024414

Token 698: ' the' (ID: 290)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02064746432006359
    2. '
' → logprob: -4.3956475257873535
    3. '(self' → logprob: -5.6456475257873535
    4. 'self' → logprob: -6.0206475257873535
    5. '   ' → logprob: -6.5206475257873535
    6. ' self' → logprob: -8.520647048950195
    7. 'def' → logprob: -8.770647048950195
    8. '```' → logprob: -9.145647048950195
    9. '        
' → logprob: -9.395647048950195
    10. '(' → logprob: -10.395647048950195

Token 699: ' puzzle' (ID: 37488)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5916824340820312
    2. 'board' → logprob: -1.2166824340820312
    3. ' board' → logprob: -2.5916824340820312
    4. ' game' → logprob: -3.9666824340820312
    5. 'game' → logprob: -4.091682434082031
    6. 'Board' → logprob: -4.716682434082031
    7. 'p' → logprob: -4.841682434082031
    8. '   ' → logprob: -5.091682434082031
    9. ' puzzle' → logprob: -5.216682434082031
    10. '
' → logprob: -6.091682434082031

Token 700: ' by' (ID: 656)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005184543319046497
    2. ' by' → logprob: -5.880184650421143
    3. ':
' → logprob: -7.005184650421143
    4. ':' → logprob: -7.630184650421143
    5. '(self' → logprob: -8.255184173583984
    6. '
' → logprob: -8.380184173583984
    7. '   ' → logprob: -8.630184173583984
    8. '```' → logprob: -9.505184173583984
    9. '():
' → logprob: -9.505184173583984
    10. 'self' → logprob: -10.005184173583984

Token 701: ' repeating' (ID: 74481)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.7504174709320068
    2. '       ' → logprob: -0.8754174709320068
    3. ' while' → logprob: -2.375417470932007
    4. 're' → logprob: -4.750417709350586
    5. ' repeatedly' → logprob: -5.625417709350586
    6. 'continu' → logprob: -6.125417709350586
    7. '   ' → logprob: -7.250417709350586
    8. ' continuously' → logprob: -7.750417709350586
    9. '```' → logprob: -7.875417709350586
    10. 'running' → logprob: -8.000417709350586

Token 702: ' steps' (ID: 10331)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32499822974205017
    2. ' while' → logprob: -1.6999982595443726
    3. 'while' → logprob: -3.199998140335083
    4. ' self' → logprob: -3.574998140335083
    5. ' step' → logprob: -4.324998378753662
    6. ' steps' → logprob: -5.324998378753662
    7. ' the' → logprob: -5.574998378753662
    8. 'self' → logprob: -6.199998378753662
    9. 'step' → logprob: -7.199998378753662
    10. 'steps' → logprob: -8.199997901916504

Token 703: ' until' (ID: 4609)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21729221940040588
    2. ' until' → logprob: -1.7172921895980835
    3. 'until' → logprob: -4.342292308807373
    4. 'while' → logprob: -6.467292308807373
    5. ' while' → logprob: -7.092292308807373
    6. ':' → logprob: -9.467291831970215
    7. '   ' → logprob: -9.717291831970215
    8. ' to' → logprob: -9.717291831970215
    9. ' indefinitely' → logprob: -9.967291831970215
    10. '()' → logprob: -10.342291831970215

Token 704: ' no' (ID: 860)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.5397974252700806
    2. ' no' → logprob: -1.2897974252700806
    3. 'no' → logprob: -2.289797306060791
    4. ' not' → logprob: -3.289797306060791
    5. '       ' → logprob: -6.289797306060791
    6. 'False' → logprob: -7.039797306060791
    7. 'self' → logprob: -8.16479778289795
    8. 'True' → logprob: -8.78979778289795
    9. '```' → logprob: -10.78979778289795
    10. 'there' → logprob: -11.28979778289795

Token 705: ' more' (ID: 945)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.8298758268356323
    2. ' more' → logprob: -1.2048758268356323
    3. ' stones' → logprob: -1.8298758268356323
    4. 'True' → logprob: -2.704875946044922
    5. 'stones' → logprob: -3.454875946044922
    6. 'more' → logprob: -5.454875946044922
    7. '(True' → logprob: -7.454875946044922
    8. ' further' → logprob: -9.079875946044922
    9. '=True' → logprob: -9.454875946044922
    10. '   ' → logprob: -9.704875946044922

Token 706: ' disappear' (ID: 47880)
  Prédit: 'stones'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stones' → logprob: -0.7072832584381104
    2. ' stones' → logprob: -0.9572832584381104
    3. ' True' → logprob: -2.9572832584381104
    4. 'steps' → logprob: -3.5822832584381104
    5. 'True' → logprob: -3.8322832584381104
    6. ' chains' → logprob: -4.957283020019531
    7. 'chains' → logprob: -4.957283020019531
    8. ' steps' → logprob: -5.582283020019531
    9. ' more' → logprob: -7.082283020019531
    10. '       ' → logprob: -7.457283020019531

Token 707: 'ances' (ID: 3528)
  Prédit: ' stones'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stones' → logprob: -0.557243824005127
    2. 'stones' → logprob: -1.807243824005127
    3. '_st' → logprob: -2.932243824005127
    4. '       ' → logprob: -2.932243824005127
    5. 'ances' → logprob: -2.932243824005127
    6. '()' → logprob: -3.432243824005127
    7. '=True' → logprob: -3.557243824005127
    8. 's' → logprob: -4.557243824005127
    9. '(True' → logprob: -5.057243824005127
    10. 'ance' → logprob: -5.307243824005127

Token 708: ' occur' (ID: 11416)
  Prédit: ' occur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' occur' → logprob: -0.6656070351600647
    2. '       ' → logprob: -0.7906070351600647
    3. 'occur' → logprob: -4.91560697555542
    4. ' happen' → logprob: -5.04060697555542
    5. ':' → logprob: -5.16560697555542
    6. '():
' → logprob: -5.79060697555542
    7. ' occurs' → logprob: -6.04060697555542
    8. ':
' → logprob: -6.04060697555542
    9. '():' → logprob: -6.66560697555542
    10. '.' → logprob: -7.29060697555542

Token 709: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003184363478794694
    2. ':' → logprob: -6.8781843185424805
    3. ':
' → logprob: -7.2531843185424805
    4. '():
' → logprob: -7.2531843185424805
    5. '():' → logprob: -8.25318431854248
    6. '
' → logprob: -8.87818431854248
    7. '()' → logprob: -9.00318431854248
    8. '.' → logprob: -10.00318431854248
    9. ',' → logprob: -10.25318431854248
    10. '()
' → logprob: -10.37818431854248

Token 710: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008768083527684212
    2. '
' → logprob: -4.758768081665039
    3. '   ' → logprob: -9.758768081665039
    4. '        
' → logprob: -10.133768081665039
    5. '```' → logprob: -10.133768081665039
    6. 'while' → logprob: -11.758768081665039
    7. '    
' → logprob: -13.008768081665039
    8. ' while' → logprob: -13.508768081665039
    9. '
' → logprob: -14.008768081665039
    10. '           ' → logprob: -14.383768081665039

Token 711: ' Return' (ID: 6318)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0030210837721824646
    2. 'while' → logprob: -6.003021240234375
    3. ' while' → logprob: -8.503021240234375
    4. '```' → logprob: -8.753021240234375
    5. '   ' → logprob: -8.878021240234375
    6. '
' → logprob: -11.253021240234375
    7. 'def' → logprob: -11.503021240234375
    8. 'result' → logprob: -12.003021240234375
    9. 'current' → logprob: -12.378021240234375
    10. 'r' → logprob: -13.378021240234375

Token 712: ' the' (ID: 290)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00930738728493452
    2. ' self' → logprob: -4.759307384490967
    3. '       ' → logprob: -7.384307384490967
    4. 'the' → logprob: -10.009307861328125
    5. ' the' → logprob: -10.759307861328125
    6. '
' → logprob: -12.384307861328125
    7. '(self' → logprob: -14.134307861328125
    8. 'final' → logprob: -15.384307861328125
    9. '```' → logprob: -16.759307861328125
    10. '	self' → logprob: -17.134307861328125

Token 713: ' total' (ID: 3609)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2704048156738281
    2. 'final' → logprob: -2.270404815673828
    3. 'total' → logprob: -2.395404815673828
    4. ' total' → logprob: -4.520404815673828
    5. ' final' → logprob: -4.520404815673828
    6. 'score' → logprob: -4.520404815673828
    7. ' self' → logprob: -5.395404815673828
    8. '       ' → logprob: -5.895404815673828
    9. 'current' → logprob: -6.145404815673828
    10. ' current' → logprob: -8.270404815673828

Token 714: ' score' (ID: 8429)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.7802703380584717
    2. 'score' → logprob: -0.7802703380584717
    3. ' self' → logprob: -2.7802703380584717
    4. ' score' → logprob: -4.030270576477051
    5. '       ' → logprob: -5.655270576477051
    6. 'points' → logprob: -10.65527057647705
    7. '   ' → logprob: -10.65527057647705
    8. '_score' → logprob: -10.78027057647705
    9. '```' → logprob: -10.78027057647705
    10. '
' → logprob: -11.90527057647705

Token 715: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01704777032136917
    2. '
' → logprob: -4.642047882080078
    3. '.' → logprob: -5.267047882080078
    4. '.
' → logprob: -6.892047882080078
    5. ' achieved' → logprob: -8.392047882080078
    6. '   ' → logprob: -8.642047882080078
    7. ':' → logprob: -8.767047882080078
    8. ' after' → logprob: -9.267047882080078
    9. ',' → logprob: -9.267047882080078
    10. '()' → logprob: -9.517047882080078

Token 716: ' disappeared' (ID: 57770)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.007846875116229057
    2. ' self' → logprob: -4.882846832275391
    3. 'the' → logprob: -8.63284683227539
    4. 'all' → logprob: -10.75784683227539
    5. '       ' → logprob: -10.88284683227539
    6. ' all' → logprob: -11.88284683227539
    7. ' the' → logprob: -12.00784683227539
    8. '(self' → logprob: -12.63284683227539
    9. '```' → logprob: -13.00784683227539
    10. 'removed' → logprob: -13.63284683227539

Token 717: ' stones' (ID: 38940)
  Prédit: 'stones'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stones' → logprob: -0.3133068382740021
    2. ' stones' → logprob: -1.3133068084716797
    3. 'st' → logprob: -10.68830680847168
    4. '_st' → logprob: -11.81330680847168
    5. '   ' → logprob: -11.93830680847168
    6. '```' → logprob: -13.56330680847168
    7. '       ' → logprob: -13.68830680847168
    8. 'stone' → logprob: -13.68830680847168
    9. 'self' → logprob: -13.81330680847168
    10. ' ' → logprob: -14.18830680847168

Token 718: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007288569584488869
    2. '.' → logprob: -5.257288455963135
    3. '
' → logprob: -7.132288455963135
    4. '```' → logprob: -7.882288455963135
    5. '   ' → logprob: -8.007288932800293
    6. '.
' → logprob: -8.257288932800293
    7. '        
' → logprob: -9.257288932800293
    8. ':' → logprob: -9.757288932800293
    9. ',' → logprob: -9.882288932800293
    10. ':
' → logprob: -10.382288932800293

Token 719: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0057958317920565605
    2. '
' → logprob: -5.630795955657959
    3. '   ' → logprob: -6.255795955657959
    4. 'while' → logprob: -9.5057954788208
    5. '```' → logprob: -9.6307954788208
    6. ' while' → logprob: -9.7557954788208
    7. '        
' → logprob: -10.0057954788208
    8. '    
' → logprob: -11.2557954788208
    9. '
' → logprob: -12.7557954788208
    10. '    ' → logprob: -12.7557954788208

Token 720: ' """
' (ID: 7037)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004627837799489498
    2. 'while' → logprob: -5.754627704620361
    3. 'current' → logprob: -7.629627704620361
    4. '   ' → logprob: -8.00462818145752
    5. '```' → logprob: -8.37962818145752
    6. ' while' → logprob: -8.75462818145752
    7. '
' → logprob: -9.62962818145752
    8. 'self' → logprob: -9.87962818145752
    9. 'def' → logprob: -10.12962818145752
    10. ' current' → logprob: -10.62962818145752

Token 721: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08489970117807388
    2. 'while' → logprob: -2.584899663925171
    3. ' while' → logprob: -5.58489990234375
    4. '```' → logprob: -6.33489990234375
    5. '   ' → logprob: -7.95989990234375
    6. 'def' → logprob: -10.33489990234375
    7. 'current' → logprob: -10.33489990234375
    8. '
' → logprob: -10.83489990234375
    9. '	while' → logprob: -11.33489990234375
    10. '``' → logprob: -12.08489990234375

Token 722: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.019397776573896408
    2. '       ' → logprob: -4.019397735595703
    3. 'changed' → logprob: -6.894397735595703
    4. 'result' → logprob: -8.769397735595703
    5. ' while' → logprob: -9.769397735595703
    6. 'score' → logprob: -11.894397735595703
    7. '   ' → logprob: -12.644397735595703
    8. '```' → logprob: -13.144397735595703
    9. 'updated' → logprob: -13.269397735595703
    10. 'res' → logprob: -13.394397735595703

Token 723: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00118856446351856
    2. ' self' → logprob: -6.7511887550354
    3. '       ' → logprob: -11.001188278198242
    4. 'True' → logprob: -13.876188278198242
    5. '   ' → logprob: -14.626188278198242
    6. '(self' → logprob: -15.376188278198242
    7. '           ' → logprob: -18.251188278198242
    8. '	self' → logprob: -18.626188278198242
    9. ' True' → logprob: -19.376188278198242
    10. '    ' → logprob: -20.626188278198242

Token 724: '.step' (ID: 43723)
  Prédit: '.step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.step' → logprob: -0.00011009939044015482
    2. '.' → logprob: -9.250109672546387
    3. 'step' → logprob: -12.250109672546387
    4. ' .' → logprob: -12.375109672546387
    5. '   ' → logprob: -12.875109672546387
    6. '       ' → logprob: -13.125109672546387
    7. ' step' → logprob: -15.625109672546387
    8. '           ' → logprob: -16.375110626220703
    9. '	step' → logprob: -17.000110626220703
    10. ').' → logprob: -17.500110626220703

Token 725: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0004481885116547346
    2. '():
' → logprob: -8.000448226928711
    3. '()' → logprob: -9.125448226928711
    4. ' ():' → logprob: -12.625448226928711
    5. '():
' → logprob: -15.250448226928711
    6. ':' → logprob: -15.625448226928711
    7. '(' → logprob: -17.00044822692871
    8. '()>' → logprob: -17.12544822692871
    9. ' ()' → logprob: -17.62544822692871
    10. '()==' → logprob: -17.75044822692871

Token 726: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03276838734745979
    2. '       ' → logprob: -4.032768249511719
    3. ' pass' → logprob: -4.407768249511719
    4. '
' → logprob: -6.782768249511719
    5. 'pass' → logprob: -7.032768249511719
    6. ' continue' → logprob: -8.657768249511719
    7. ' True' → logprob: -10.032768249511719
    8. 'continue' → logprob: -10.157768249511719
    9. ' None' → logprob: -11.157768249511719
    10. 'True' → logprob: -12.157768249511719

Token 727: ' pass' (ID: 1853)
  Prédit: ' pass'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.1306467056274414
    2. 'pass' (adapté à ' pass') → logprob: -2.3806467056274414
    3. '           ' → logprob: -3.6306467056274414
    4. ' continue' → logprob: -6.005646705627441
    5. 'continue' → logprob: -7.130646705627441
    6. ' None' → logprob: -8.880646705627441
    7. 'None' → logprob: -10.130646705627441
    8. '            ' → logprob: -11.130646705627441
    9. ' True' → logprob: -12.380646705627441
    10. '       ' → logprob: -12.380646705627441

Token 728: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00011546355381142348
    2. 'return' → logprob: -9.625115394592285
    3. '
' → logprob: -10.375115394592285
    4. ' return' → logprob: -11.500115394592285
    5. '<|end|>' → logprob: -12.625115394592285
    6. '```' → logprob: -13.750115394592285
    7. '   ' → logprob: -14.000115394592285
    8. '           ' → logprob: -14.375115394592285
    9. '.' → logprob: -14.625115394592285
    10. '	' → logprob: -15.125115394592285

Token 729: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003832259913906455
    2. 'return' → logprob: -5.6288323402404785
    3. ' return' → logprob: -9.37883186340332
    4. '   ' → logprob: -9.87883186340332
    5. '<|end|>' → logprob: -9.87883186340332
    6. '
' → logprob: -10.75383186340332
    7. '```' → logprob: -11.25383186340332
    8. '           ' → logprob: -13.00383186340332
    9. '	' → logprob: -13.12883186340332
    10. '	return' → logprob: -13.50383186340332

Token 730: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0006351164192892611
    2. ' return' → logprob: -7.750635147094727
    3. '       ' → logprob: -8.500635147094727
    4. '
' → logprob: -14.500635147094727
    5. '	return' → logprob: -14.500635147094727
    6. '   ' → logprob: -17.125635147094727
    7. '```' → logprob: -17.375635147094727
    8. 'eturn' → logprob: -18.125635147094727
    9. ')return' → logprob: -18.250635147094727
    10. '{return' → logprob: -18.875635147094727

Token 731: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0067161982879042625
    2. ' self' → logprob: -5.006716251373291
    3. '       ' → logprob: -14.006715774536133
    4. '(self' → logprob: -17.631715774536133
    5. '	self' → logprob: -18.256715774536133
    6. '   ' → logprob: -19.881715774536133
    7. '[self' → logprob: -20.006715774536133
    8. '```' → logprob: -20.506715774536133
    9. '0' → logprob: -20.881715774536133
    10. '
' → logprob: -21.381715774536133

Token 732: '.score' (ID: 42441)
  Prédit: '.score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.score' → logprob: -1.664371848164592e-05
    2. '.' → logprob: -11.250016212463379
    3. ' .' → logprob: -13.000016212463379
    4. 'score' → logprob: -14.125016212463379
    5. '.s' → logprob: -14.875016212463379
    6. '.code' → logprob: -15.625016212463379
    7. '.Score' → logprob: -17.375017166137695
    8. '.status' → logprob: -17.500017166137695
    9. '.price' → logprob: -18.875017166137695
    10. '.rank' → logprob: -19.125017166137695

Token 733: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 734: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 735: ' Puzzle' (ID: 90259)
  Prédit: ' Board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Board' → logprob: -0.8059487342834473
    2. ' Game' → logprob: -0.9309487342834473
    3. 'Game' → logprob: -3.4309487342834473
    4. 'Board' → logprob: -3.4309487342834473
    5. ' Player' → logprob: -3.8059487342834473
    6. ' Solver' → logprob: -3.9309487342834473
    7. ' Puzzle' → logprob: -4.055948734283447
    8. ' Solution' → logprob: -4.555948734283447
    9. 'Puzzle' → logprob: -5.305948734283447
    10. 'Solver' → logprob: -5.305948734283447

Token 736: 'Parser' (ID: 9231)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018266530707478523
    2. ':
' → logprob: -4.018266677856445
    3. 'Solver' → logprob: -10.393266677856445
    4. '):' → logprob: -10.518266677856445
    5. ':

' → logprob: -11.143266677856445
    6. '(' → logprob: -11.268266677856445
    7. '<|end|>' → logprob: -11.768266677856445
    8. '>:' → logprob: -12.518266677856445
    9. '():' → logprob: -12.643266677856445
    10. '(object' → logprob: -13.143266677856445

Token 737: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007536433404311538
    2. ':
' → logprob: -7.250753879547119
    3. '<|end|>' → logprob: -11.125753402709961
    4. '):' → logprob: -11.875753402709961
    5. ':def' → logprob: -12.250753402709961
    6. '(' → logprob: -12.375753402709961
    7. ' :' → logprob: -12.625753402709961
    8. ':

' → logprob: -12.875753402709961
    9. '():' → logprob: -13.375753402709961
    10. '```' → logprob: -13.875753402709961

Token 738: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008989581256173551
    2. ' def' → logprob: -7.750898838043213
    3. '```' → logprob: -8.250899314880371
    4. 'def' → logprob: -8.875899314880371
    5. 'class' → logprob: -10.625899314880371
    6. '    
' → logprob: -11.125899314880371
    7. '    ' → logprob: -11.625899314880371
    8. '<|end|>' → logprob: -11.875899314880371
    9. '  ' → logprob: -13.375899314880371
    10. '	def' → logprob: -13.625899314880371

Token 739: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.16665445268154144
    2. 'def' (adapté à ' def') → logprob: -1.9166544675827026
    3. '   ' → logprob: -5.291654586791992
    4. '@' → logprob: -6.916654586791992
    5. ' @' → logprob: -7.916654586791992
    6. '```' → logprob: -11.541654586791992
    7. 'class' → logprob: -11.666654586791992
    8. 'staticmethod' → logprob: -14.416654586791992
    9. '	def' → logprob: -14.416654586791992
    10. ' class' → logprob: -14.541654586791992

Token 740: ' __' (ID: 2516)
  Prédit: 'staticmethod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -0.02522447519004345
    2. ' static' → logprob: -4.400224685668945
    3. ' def' → logprob: -4.775224685668945
    4. ' __' → logprob: -5.900224685668945
    5. 'classmethod' → logprob: -7.025224685668945
    6. 'def' → logprob: -8.400224685668945
    7. ' parse' → logprob: -9.400224685668945
    8. 'init' → logprob: -9.525224685668945
    9. ' init' → logprob: -9.650224685668945
    10. 'static' → logprob: -9.900224685668945

Token 741: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. 'staticmethod' → logprob: -17.625
    3. ' init' → logprob: -18.0
    4. 'call' → logprob: -19.5
    5. '```' → logprob: -19.5
    6. '_init' → logprob: -19.625
    7. 'def' → logprob: -20.0
    8. 'int' → logprob: -20.125
    9. 'new' → logprob: -20.5
    10. 'name' → logprob: -20.75

Token 742: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.006242907140403986
    2. '(' → logprob: -5.506242752075195
    3. ' (' → logprob: -7.256242752075195
    4. 'self' → logprob: -7.506242752075195
    5. '<|end|>' → logprob: -7.881242752075195
    6. '__(' → logprob: -8.006242752075195
    7. '(
' → logprob: -9.506242752075195
    8. ')(' → logprob: -10.881242752075195
    9. '<>(' → logprob: -11.256242752075195
    10. '__(
' → logprob: -11.381242752075195

Token 743: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00025633294717408717
    2. ' self' → logprob: -8.625256538391113
    3. '   ' → logprob: -10.000256538391113
    4. '
' → logprob: -11.125256538391113
    5. ')' → logprob: -11.250256538391113
    6. '       ' → logprob: -13.250256538391113
    7. '(self' → logprob: -14.250256538391113
    8. '):
' → logprob: -14.750256538391113
    9. '	self' → logprob: -15.750256538391113
    10. 'elf' → logprob: -15.750256538391113

Token 744: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009656456299126148
    2. '):
' → logprob: -5.5096564292907715
    3. '):' → logprob: -6.0096564292907715
    4. 'self' → logprob: -6.2596564292907715
    5. ',self' → logprob: -7.7596564292907715
    6. '   ' → logprob: -8.38465690612793
    7. ',
' → logprob: -8.50965690612793
    8. ',input' → logprob: -8.75965690612793
    9. '       ' → logprob: -10.38465690612793
    10. ',p' → logprob: -10.75965690612793

Token 745: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.20256896317005157
    2. '       ' → logprob: -1.7025690078735352
    3. '   ' → logprob: -7.327569007873535
    4. ' self' → logprob: -7.952569007873535
    5. '(self' → logprob: -9.577569007873535
    6. '	self' → logprob: -10.702569007873535
    7. 'def' → logprob: -10.702569007873535
    8. '
' → logprob: -10.827569007873535
    9. '```' → logprob: -12.077569007873535
    10. ')' → logprob: -13.202569007873535

Token 746: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.6594666838645935
    2. 'pass' → logprob: -1.1594667434692383
    3. '       ' → logprob: -1.7844667434692383
    4. ' pass' → logprob: -7.034466743469238
    5. ' self' → logprob: -8.159466743469238
    6. '   ' → logprob: -9.159466743469238
    7. '	pass' → logprob: -10.909466743469238
    8. '
' → logprob: -11.659466743469238
    9. 'def' → logprob: -12.159466743469238
    10. '           ' → logprob: -12.409466743469238

Token 747: '.datasets' (ID: 136555)
  Prédit: '.rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.rows' → logprob: -0.07406453788280487
    2. '.input' → logprob: -3.1990644931793213
    3. '.board' → logprob: -5.1990647315979
    4. '.data' → logprob: -5.1990647315979
    5. '.lines' → logprob: -5.3240647315979
    6. '._' → logprob: -5.9490647315979
    7. '.buffer' → logprob: -6.0740647315979
    8. '.' → logprob: -6.1990647315979
    9. 'rows' → logprob: -7.0740647315979
    10. '.steps' → logprob: -7.3240647315979

Token 748: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.475726842880249
    2. ' =' → logprob: -0.975726842880249
    3. ':' → logprob: -6.475727081298828
    4. '=[]' → logprob: -9.225727081298828
    5. '   ' → logprob: -12.475727081298828
    6. ' ' → logprob: -13.350727081298828
    7. ' :' → logprob: -13.600727081298828
    8. '=[]
' → logprob: -13.850727081298828
    9. '  ' → logprob: -14.350727081298828
    10. '	' → logprob: -15.225727081298828

Token 749: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -5.438573680294212e-06
    2. '[]
' → logprob: -12.500005722045898
    3. ' []' → logprob: -14.000005722045898
    4. '{}' → logprob: -15.500005722045898
    5. '[]}' → logprob: -15.750005722045898
    6. '[]

' → logprob: -15.875005722045898
    7. '0' → logprob: -16.2500057220459
    8. '[' → logprob: -17.0000057220459
    9. 'list' → logprob: -17.6250057220459
    10. '[]"' → logprob: -17.8750057220459

Token 750: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021173395216464996
    2. '
' → logprob: -3.8961734771728516
    3. 'def' → logprob: -7.646173477172852
    4. '    
' → logprob: -9.396173477172852
    5. ' def' → logprob: -10.521173477172852
    6. '<|end|>' → logprob: -10.521173477172852
    7. '

' → logprob: -12.271173477172852
    8. '        
' → logprob: -12.271173477172852
    9. '<|end|>' → logprob: -12.521173477172852
    10. '       ' → logprob: -13.521173477172852

Token 751: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0007454255828633904
    2. ' def' → logprob: -7.2507452964782715
    3. '   ' → logprob: -10.25074577331543
    4. '
' → logprob: -17.25074577331543
    5. '	def' → logprob: -17.37574577331543
    6. ' ' → logprob: -18.50074577331543
    7. 'from' → logprob: -19.25074577331543
    8. 'class' → logprob: -20.00074577331543
    9. '  ' → logprob: -20.87574577331543
    10. 'import' → logprob: -21.00074577331543

Token 752: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.06114291772246361
    2. ' parse' → logprob: -2.936142921447754
    3. 'add' → logprob: -5.311142921447754
    4. ' add' → logprob: -7.186142921447754
    5. 'load' → logprob: -8.186142921447754
    6. 'append' → logprob: -8.936142921447754
    7. ' load' → logprob: -9.686142921447754
    8. 'def' → logprob: -10.561142921447754
    9. 'read' → logprob: -11.311142921447754
    10. 'process' → logprob: -12.061142921447754

Token 753: '_input' (ID: 12507)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -8.101369894575328e-05
    2. '(' → logprob: -9.500081062316895
    3. '_line' → logprob: -12.375081062316895
    4. 'self' → logprob: -13.750081062316895
    5. ' (' → logprob: -14.375081062316895
    6. '(
' → logprob: -16.375080108642578
    7. ' self' → logprob: -17.375080108642578
    8. '(s' → logprob: -17.625080108642578
    9. '(line' → logprob: -17.625080108642578
    10. 'line' → logprob: -18.125080108642578

Token 754: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0004353181866463274
    2. '(' → logprob: -7.7504353523254395
    3. 'self' → logprob: -12.875434875488281
    4. ' (' → logprob: -13.875434875488281
    5. '(line' → logprob: -14.625434875488281
    6. '_line' → logprob: -15.375434875488281
    7. '(lines' → logprob: -15.625434875488281
    8. '(
' → logprob: -15.750434875488281
    9. 'line' → logprob: -16.75043487548828
    10. '(s' → logprob: -17.75043487548828

Token 755: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007112686522305012
    2. 'self' → logprob: -5.007112503051758
    3. '):
' → logprob: -8.507112503051758
    4. '(self' → logprob: -9.507112503051758
    5. ',self' → logprob: -10.007112503051758
    6. ' ,' → logprob: -10.382112503051758
    7. '):' → logprob: -10.757112503051758
    8. '   ' → logprob: -12.257112503051758
    9. ' self' → logprob: -12.632112503051758
    10. ')' → logprob: -12.882112503051758

Token 756: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.525347113609314
    2. 'self' → logprob: -1.025347113609314
    3. ' lines' → logprob: -3.7753472328186035
    4. 'input' → logprob: -3.9003472328186035
    5. ' self' → logprob: -5.1503472328186035
    6. ' input' → logprob: -7.7753472328186035
    7. 'text' → logprob: -8.400346755981445
    8. 'data' → logprob: -8.650346755981445
    9. 'raw' → logprob: -9.025346755981445
    10. 'line' → logprob: -10.525346755981445

Token 757: ':' (ID: 25)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.08370514959096909
    2. ')' → logprob: -3.958705186843872
    3. ':' → logprob: -3.958705186843872
    4. 'self' → logprob: -4.083704948425293
    5. '       ' → logprob: -4.333704948425293
    6. '):
' → logprob: -5.083704948425293
    7. ' (' → logprob: -6.333704948425293
    8. ',' → logprob: -6.458704948425293
    9. '   ' → logprob: -6.708704948425293
    10. '):' → logprob: -7.583704948425293

Token 758: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.0002233245177194476
    2. 'self' → logprob: -8.500223159790039
    3. ' List' → logprob: -11.375223159790039
    4. ')' → logprob: -12.125223159790039
    5. 'list' → logprob: -13.125223159790039
    6. 'Iterable' → logprob: -15.250223159790039
    7. '   ' → logprob: -15.375223159790039
    8. '[List' → logprob: -15.500223159790039
    9. 'Iterator' → logprob: -16.37522315979004
    10. ' self' → logprob: -17.00022315979004

Token 759: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -6.704273118884885e-07
    2. 'str' → logprob: -14.500000953674316
    3. '[' → logprob: -16.375
    4. '```' → logprob: -17.25
    5. ')' → logprob: -17.75
    6. '
' → logprob: -18.25
    7. '   ' → logprob: -19.25
    8. '[
' → logprob: -19.5
    9. '[String' → logprob: -19.75
    10. 'Str' → logprob: -19.75

Token 760: ']):
' (ID: 51989)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016541369259357452
    2. '])' → logprob: -4.141541481018066
    3. '):
' → logprob: -7.766541481018066
    4. '   ' → logprob: -10.266541481018066
    5. ']):
' → logprob: -10.641541481018066
    6. '）' → logprob: -11.641541481018066
    7. ' )' → logprob: -12.266541481018066
    8. '`)' → logprob: -12.391541481018066
    9. '       ' → logprob: -13.516541481018066
    10. '>)' → logprob: -13.766541481018066

Token 761: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.5252596464706585e-05
    2. ' for' → logprob: -10.875044822692871
    3. 'for' → logprob: -12.000044822692871
    4. ' lines' → logprob: -12.375044822692871
    5. '```' → logprob: -12.500044822692871
    6. 'lines' → logprob: -12.750044822692871
    7. 'self' → logprob: -13.375044822692871
    8. '   ' → logprob: -13.375044822692871
    9. ',' → logprob: -13.750044822692871
    10. 'n' → logprob: -13.875044822692871

Token 762: ' idx' (ID: 14016)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29179152846336365
    2. 'i' → logprob: -1.791791558265686
    3. ' i' → logprob: -3.5417914390563965
    4. 'index' → logprob: -3.9167914390563965
    5. 'idx' (adapté à ' idx') → logprob: -4.0417914390563965
    6. ' idx' → logprob: -4.5417914390563965
    7. ' index' → logprob: -6.0417914390563965
    8. 'lines' → logprob: -6.1667914390563965
    9. '   ' → logprob: -6.6667914390563965
    10. '```' → logprob: -7.4167914390563965

Token 763: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006716555915772915
    2. '=' → logprob: -5.006716728210449
    3. ' ' → logprob: -14.25671672821045
    4. ',' → logprob: -15.50671672821045
    5. '   ' → logprob: -15.75671672821045
    6. ' +=' → logprob: -16.131715774536133
    7. '       ' → logprob: -16.381715774536133
    8. '        ' → logprob: -17.381715774536133
    9. '    ' → logprob: -17.381715774536133
    10. '  ' → logprob: -17.881715774536133

Token 764: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010350722586736083
    2. ' ' → logprob: -6.876035213470459
    3. '1' → logprob: -13.0010347366333
    4. '   ' → logprob: -17.876035690307617
    5. '       ' → logprob: -18.626035690307617
    6. '=' → logprob: -20.126035690307617
    7. '```' → logprob: -20.501035690307617
    8. '۰' → logprob: -20.626035690307617
    9. '  ' → logprob: -21.438535690307617
    10. '    ' → logprob: -21.688535690307617

Token 765: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.41866585687967e-06
    2. ' ' → logprob: -11.750008583068848
    3. '1' → logprob: -14.500008583068848
    4. '   ' → logprob: -19.00000762939453
    5. '=' → logprob: -20.12500762939453
    6. '```' → logprob: -20.25000762939453
    7. 'len' → logprob: -20.50000762939453
    8. '       ' → logprob: -21.62500762939453
    9. 'idx' → logprob: -21.62500762939453
    10. '-' → logprob: -21.62500762939453

Token 766: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8918837904930115
    2. 'while' → logprob: -0.8918837904930115
    3. ' while' → logprob: -1.7668838500976562
    4. '
' → logprob: -5.141883850097656
    5. '<|end|>' → logprob: -6.391883850097656
    6. '	while' → logprob: -7.016883850097656
    7. '```' → logprob: -7.766883850097656
    8. '        
' → logprob: -9.016883850097656
    9. '        ' → logprob: -9.016883850097656
    10. ',' → logprob: -9.516883850097656

Token 767: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7338122725486755
    2. 'while' → logprob: -0.7338122725486755
    3. ' while' → logprob: -3.2338123321533203
    4. '```' → logprob: -8.48381233215332
    5. '   ' → logprob: -9.10881233215332
    6. '	while' → logprob: -9.48381233215332
    7. '<|end|>' → logprob: -11.23381233215332
    8. 'n' → logprob: -11.60881233215332
    9. ',' → logprob: -12.10881233215332
    10. '
' → logprob: -12.10881233215332

Token 768: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.06293483078479767
    2. ' while' → logprob: -2.8129348754882812
    3. '       ' → logprob: -7.062934875488281
    4. 'n' → logprob: -9.312934875488281
    5. ' n' → logprob: -10.937934875488281
    6. 'num' → logprob: -13.312934875488281
    7. '
' → logprob: -15.437934875488281
    8. '	while' → logprob: -15.562934875488281
    9. 'lines' → logprob: -16.18793487548828
    10. '```' → logprob: -16.31293487548828

Token 769: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.01042051799595356
    2. ' idx' → logprob: -5.135420322418213
    3. 'True' → logprob: -5.510420322418213
    4. ' True' → logprob: -7.760420322418213
    5. '	idx' → logprob: -11.760420799255371
    6. '   ' → logprob: -13.135420799255371
    7. '(idx' → logprob: -15.135420799255371
    8. '       ' → logprob: -15.635420799255371
    9. 'true' → logprob: -15.760420799255371
    10. 'lines' → logprob: -15.760420799255371

Token 770: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.25476035475730896
    2. '<' → logprob: -1.5047603845596313
    3. '<len' → logprob: -5.879760265350342
    4. '<n' → logprob: -10.7547607421875
    5. '<class' → logprob: -13.3797607421875
    6. '<size' → logprob: -13.3797607421875
    7. '<s' → logprob: -13.8797607421875
    8. '<int' → logprob: -14.0047607421875
    9. '[' → logprob: -14.0047607421875
    10. '<num' → logprob: -14.1297607421875

Token 771: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -2.935296834039036e-06
    2. ' len' → logprob: -12.75000286102295
    3. 'lines' → logprob: -18.625003814697266
    4. '=len' → logprob: -19.250003814697266
    5. '<len' → logprob: -19.875003814697266
    6. '(len' → logprob: -20.250003814697266
    7. '
' → logprob: -20.375003814697266
    8. '	len' → logprob: -20.500003814697266
    9. 'length' → logprob: -20.625003814697266
    10. 'line' → logprob: -20.875003814697266

Token 772: '(lines' (ID: 73839)
  Prédit: '(lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -0.0003709701995830983
    2. 'lines' → logprob: -8.000370979309082
    3. ' lines' → logprob: -10.250370979309082
    4. '	lines' → logprob: -16.125370025634766
    5. '.lines' → logprob: -17.500370025634766
    6. '_lines' → logprob: -18.250370025634766
    7. '(line' → logprob: -19.375370025634766
    8. '(' → logprob: -19.875370025634766
    9. 'Lines' → logprob: -20.375370025634766
    10. '
' → logprob: -20.625370025634766

Token 773: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.01793288066983223
    2. ':
' → logprob: -5.017932891845703
    3. ' and' → logprob: -5.517932891845703
    4. '):' → logprob: -5.517932891845703
    5. ':' → logprob: -6.017932891845703
    6. ')' → logprob: -8.392932891845703
    7. '       ' → logprob: -8.767932891845703
    8. 'and' → logprob: -8.892932891845703
    9. ' ):
' → logprob: -8.892932891845703
    10. '           ' → logprob: -11.517932891845703

Token 774: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06290876120328903
    2. 'line' → logprob: -3.18790864944458
    3. ' line' → logprob: -4.18790864944458
    4. 'count' → logprob: -6.18790864944458
    5. 'num' → logprob: -7.18790864944458
    6. '   ' → logprob: -7.68790864944458
    7. 'n' → logprob: -7.81290864944458
    8. '```' → logprob: -8.687909126281738
    9. ',' → logprob: -8.812909126281738
    10. '	line' → logprob: -9.312909126281738

Token 775: ' h' (ID: 312)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8262251019477844
    2. 'line' → logprob: -1.0762250423431396
    3. 'count' → logprob: -1.8262250423431396
    4. 'num' → logprob: -3.3262250423431396
    5. 'N' → logprob: -5.201225280761719
    6. ' n' → logprob: -5.451225280761719
    7. '           ' → logprob: -5.576225280761719
    8. 'size' → logprob: -5.826225280761719
    9. ' line' → logprob: -5.826225280761719
    10. ' count' → logprob: -6.701225280761719

Token 776: '_line' (ID: 14418)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17988336086273193
    2. ' =' → logprob: -1.804883360862732
    3. '=int' → logprob: -9.804883003234863
    4. ',' → logprob: -10.554883003234863
    5. '           ' → logprob: -10.929883003234863
    6. '_line' → logprob: -11.304883003234863
    7. '       ' → logprob: -11.804883003234863
    8. '   ' → logprob: -11.929883003234863
    9. '=line' → logprob: -12.804883003234863
    10. ' ' → logprob: -13.429883003234863

Token 777: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2014177292585373
    2. ' =' → logprob: -1.7014176845550537
    3. '=line' → logprob: -12.951417922973633
    4. '           ' → logprob: -13.951417922973633
    5. '       ' → logprob: -14.701417922973633
    6. '=
' → logprob: -15.326417922973633
    7. '        ' → logprob: -16.201417922973633
    8. '＝' → logprob: -16.701417922973633
    9. ' ' → logprob: -16.826417922973633
    10. '=int' → logprob: -16.951417922973633

Token 778: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.011049943044781685
    2. ' lines' → logprob: -4.511049747467041
    3. 'int' → logprob: -13.8860502243042
    4. '(lines' → logprob: -14.7610502243042
    5. '	lines' → logprob: -15.0110502243042
    6. '   ' → logprob: -15.3860502243042
    7. 'line' → logprob: -15.7610502243042
    8. '           ' → logprob: -16.886049270629883
    9. '       ' → logprob: -17.761049270629883
    10. ' int' → logprob: -17.761049270629883

Token 779: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -8.280175097752362e-05
    2. '       ' → logprob: -10.250082969665527
    3. 'idx' → logprob: -10.625082969665527
    4. '           ' → logprob: -11.500082969665527
    5. '```' → logprob: -12.500082969665527
    6. '   ' → logprob: -13.375082969665527
    7. '][' → logprob: -13.375082969665527
    8. '
' → logprob: -13.875082969665527
    9. '=' → logprob: -14.125082969665527
    10. '[' → logprob: -14.375082969665527

Token 780: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.004017495550215244
    2. ']
' → logprob: -5.879017353057861
    3. ']' → logprob: -6.754017353057861
    4. '           ' → logprob: -11.00401782989502
    5. '];' → logprob: -11.87901782989502
    6. '
' → logprob: -12.00401782989502
    7. '.strip' → logprob: -12.12901782989502
    8. ' ].' → logprob: -12.87901782989502
    9. '       ' → logprob: -13.25401782989502
    10. ']
' → logprob: -13.25401782989502

Token 781: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -1.5048530030981055e-06
    2. 'rstrip' → logprob: -13.500001907348633
    3. 'split' → logprob: -18.125001907348633
    4. ' strip' → logprob: -18.250001907348633
    5. '.strip' → logprob: -19.375001907348633
    6. '
' → logprob: -20.875001907348633
    7. '_strip' → logprob: -21.250001907348633
    8. '```' → logprob: -21.875001907348633
    9. '(strip' → logprob: -21.875001907348633
    10. 'str' → logprob: -22.125001907348633

Token 782: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05820314213633537
    2. '()
' → logprob: -3.6832032203674316
    3. '()' → logprob: -3.8082032203674316
    4. 'if' → logprob: -5.058203220367432
    5. '
' → logprob: -7.683203220367432
    6. '       ' → logprob: -7.683203220367432
    7. '               ' → logprob: -7.933203220367432
    8. '=' → logprob: -8.183202743530273
    9. ',' → logprob: -8.683202743530273
    10. ')' → logprob: -8.808202743530273

Token 783: '           ' (ID: 352)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6591736674308777
    2. '           ' → logprob: -0.7841736674308777
    3. ' if' → logprob: -3.6591737270355225
    4. '       ' → logprob: -8.034173965454102
    5. '```' → logprob: -9.784173965454102
    6. 'idx' → logprob: -10.659173965454102
    7. '<|end|>' → logprob: -11.034173965454102
    8. 'If' → logprob: -11.159173965454102
    9. '               ' → logprob: -12.284173965454102
    10. '
' → logprob: -12.534173965454102

Token 784: ' idx' (ID: 14016)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00018565983918961138
    2. 'idx' (adapté à ' idx') → logprob: -9.0001859664917
    3. '           ' → logprob: -9.7501859664917
    4. ' if' → logprob: -12.8751859664917
    5. 'h' → logprob: -13.8751859664917
    6. 'height' → logprob: -15.7501859664917
    7. 'num' → logprob: -16.625185012817383
    8. 'try' → logprob: -17.250185012817383
    9. '            
' → logprob: -18.000185012817383
    10. '#' → logprob: -18.375185012817383

Token 785: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.038062259554862976
    2. ' +=' → logprob: -3.288062334060669
    3. '=' → logprob: -11.28806209564209
    4. '+' → logprob: -12.16306209564209
    5. ']+=' → logprob: -13.53806209564209
    6. '==' → logprob: -14.03806209564209
    7. '           ' → logprob: -15.78806209564209
    8. '```' → logprob: -15.91306209564209
    9. '++' → logprob: -16.163063049316406
    10. '   ' → logprob: -16.413063049316406

Token 786: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '```' → logprob: -17.875003814697266
    4. '
' → logprob: -19.125003814697266
    5. '0' → logprob: -20.875003814697266
    6. '   ' → logprob: -21.375003814697266
    7. '１' → logprob: -22.687503814697266
    8. '۱' → logprob: -22.875003814697266
    9. '``' → logprob: -22.937503814697266
    10. '-' → logprob: -23.000003814697266

Token 787: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '```' → logprob: -20.5
    4. '
' → logprob: -21.625
    5. '１' → logprob: -22.375
    6. '0' → logprob: -22.5
    7. '   ' → logprob: -23.5
    8. '۱' → logprob: -23.875
    9. '-' → logprob: -24.5
    10. '``' → logprob: -24.6875

Token 788: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5372028350830078
    2. 'if' → logprob: -0.9122028350830078
    3. ' if' → logprob: -4.287202835083008
    4. 'num' → logprob: -9.287202835083008
    5. '       ' → logprob: -9.412202835083008
    6. '
' → logprob: -11.287202835083008
    7. ',' → logprob: -11.537202835083008
    8. '   ' → logprob: -11.662202835083008
    9. '            
' → logprob: -11.787202835083008
    10. '               ' → logprob: -12.412202835083008

Token 789: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.38893091678619385
    2. 'if' → logprob: -1.1389309167861938
    3. ' if' → logprob: -6.263930797576904
    4. 'num' → logprob: -9.013931274414062
    5. '       ' → logprob: -10.513931274414062
    6. '               ' → logprob: -14.013931274414062
    7. '   ' → logprob: -14.138931274414062
    8. 'count' → logprob: -14.138931274414062
    9. 'length' → logprob: -14.388931274414062
    10. 'number' → logprob: -15.138931274414062

Token 790: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0004636776284314692
    2. 'h' → logprob: -8.125463485717773
    3. 'height' → logprob: -9.375463485717773
    4. ' if' → logprob: -9.750463485717773
    5. '           ' → logprob: -10.875463485717773
    6. 'num' → logprob: -12.375463485717773
    7. 'n' → logprob: -14.000463485717773
    8. 'try' → logprob: -15.000463485717773
    9. 'H' → logprob: -15.875463485717773
    10. 'count' → logprob: -17.250463485717773

Token 791: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.029234273359179497
    2. 'not' → logprob: -4.279234409332275
    3. ' not' → logprob: -4.404234409332275
    4. ' h' → logprob: -5.904234409332275
    5. '   ' → logprob: -13.154233932495117
    6. ' ' → logprob: -15.029233932495117
    7. '	h' → logprob: -15.154233932495117
    8. '       ' → logprob: -15.404233932495117
    9. '```' → logprob: -15.404233932495117
    10. 'empty' → logprob: -15.779233932495117

Token 792: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -1.3782830137643032e-05
    2. 'line' → logprob: -12.12501335144043
    3. 'ine' → logprob: -12.25001335144043
    4. '==' → logprob: -13.00001335144043
    5. '_LINE' → logprob: -14.75001335144043
    6. ' ==' → logprob: -15.25001335144043
    7. 'Line' → logprob: -15.75001335144043
    8. '[line' → logprob: -15.87501335144043
    9. '_lines' → logprob: -16.00001335144043
    10. '_' → logprob: -16.00001335144043

Token 793: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.20143496990203857
    2. ' ==' → logprob: -1.7014349699020386
    3. '=' → logprob: -10.951435089111328
    4. '===' → logprob: -12.826435089111328
    5. '()==' → logprob: -14.826435089111328
    6. '=="' → logprob: -14.951435089111328
    7. '=='' → logprob: -15.576435089111328
    8. '==
' → logprob: -15.576435089111328
    9. ')==' → logprob: -16.201435089111328
    10. ']==' → logprob: -16.201435089111328

Token 794: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.38729649782180786
    2. ''' → logprob: -1.137296438217163
    3. '0' → logprob: -8.387296676635742
    4. '""' → logprob: -9.262296676635742
    5. '''' → logprob: -9.262296676635742
    6. '"":' → logprob: -13.262296676635742
    7. '"#' → logprob: -14.262296676635742
    8. ''end' → logprob: -14.387296676635742
    9. ''#' → logprob: -14.512296676635742
    10. '"I' → logprob: -14.762296676635742

Token 795: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00202594674192369
    2. '":' → logprob: -7.002026081085205
    3. '":
' → logprob: -7.252026081085205
    4. '"' → logprob: -8.127025604248047
    5. '#' → logprob: -9.252025604248047
    6. '-' → logprob: -12.752025604248047
    7. ' ' → logprob: -13.002025604248047
    8. 'end' → logprob: -13.502025604248047
    9. ''' → logprob: -14.002025604248047
    10. '""' → logprob: -14.127025604248047

Token 796: '":
' (ID: 9213)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.18811246752738953
    2. '":
' → logprob: -1.813112497329712
    3. '":
' → logprob: -5.063112258911133
    4. '"' → logprob: -6.313112258911133
    5. '"):
' → logprob: -8.938112258911133
    6. '"):' → logprob: -10.438112258911133
    7. '0' → logprob: -10.813112258911133
    8. '":

' → logprob: -12.563112258911133
    9. '\n' → logprob: -12.688112258911133
    10. '"):
' → logprob: -13.438112258911133

Token 797: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00870368629693985
    2. '           ' → logprob: -4.758703708648682
    3. '	           ' → logprob: -10.508703231811523
    4. ':' → logprob: -10.758703231811523
    5. '                   ' → logprob: -11.633703231811523
    6. 'break' → logprob: -11.758703231811523
    7. '              ' → logprob: -12.258703231811523
    8. ':
' → logprob: -12.758703231811523
    9. ' break' → logprob: -12.883703231811523
    10. '   ' → logprob: -13.258703231811523

Token 798: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.030375609174370766
    2. '               ' → logprob: -3.5303757190704346
    3. ' break' → logprob: -8.030375480651855
    4. 'return' → logprob: -8.530375480651855
    5. '	break' → logprob: -10.030375480651855
    6. '                   ' → logprob: -10.030375480651855
    7. '           ' → logprob: -11.280375480651855
    8. '	           ' → logprob: -14.405375480651855
    9. '			' → logprob: -15.280375480651855
    10. '_break' → logprob: -15.530375480651855

Token 799: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -8.101369894575328e-05
    2. '
' → logprob: -9.750081062316895
    3. '            
' → logprob: -11.500081062316895
    4. '       ' → logprob: -12.625081062316895
    5. 'num' → logprob: -12.750081062316895
    6. '               ' → logprob: -13.000081062316895
    7. 'h' → logprob: -14.000081062316895
    8. '          ' → logprob: -14.000081062316895
    9. '		' → logprob: -14.375081062316895
    10. 'height' → logprob: -15.250081062316895

Token 800: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0014113049255684018
    2. 'height' → logprob: -7.376411437988281
    3. 'h' → logprob: -7.501411437988281
    4. 'num' → logprob: -8.501411437988281
    5. '       ' → logprob: -11.501411437988281
    6. '
' → logprob: -12.251411437988281
    7. 'width' → logprob: -13.001411437988281
    8. 'length' → logprob: -13.001411437988281
    9. 'count' → logprob: -13.126411437988281
    10. 'number' → logprob: -13.626411437988281

Token 801: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' (adapté à ' h') → logprob: -0.12927594780921936
    2. 'height' → logprob: -2.1292760372161865
    3. '           ' → logprob: -6.129275798797607
    4. ' height' → logprob: -9.629276275634766
    5. ' h' → logprob: -9.754276275634766
    6. 'H' → logprob: -10.254276275634766
    7. 'num' → logprob: -12.754276275634766
    8. 'rows' → logprob: -13.129276275634766
    9. 'n' → logprob: -14.629276275634766
    10. '   ' → logprob: -14.629276275634766

Token 802: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10078398138284683
    2. '=' → logprob: -2.3507840633392334
    3. 'eight' → logprob: -7.975783824920654
    4. '=int' → logprob: -8.475784301757812
    5. '           ' → logprob: -10.975784301757812
    6. 'ight' → logprob: -12.975784301757812
    7. ',' → logprob: -13.975784301757812
    8. ':' → logprob: -14.100784301757812
    9. '       ' → logprob: -14.475784301757812
    10. 'int' → logprob: -14.725784301757812

Token 803: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -3.547789674485102e-05
    2. ' int' → logprob: -10.250035285949707
    3. '           ' → logprob: -21.250036239624023
    4. '(int' → logprob: -22.875036239624023
    5. '[int' → logprob: -22.875036239624023
    6. '   ' → logprob: -23.625036239624023
    7. '               ' → logprob: -24.500036239624023
    8. '	int' → logprob: -24.875036239624023
    9. '=int' → logprob: -25.000036239624023
    10. '<int' → logprob: -25.250036239624023

Token 804: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -6.704273118884885e-07
    2. 'h' → logprob: -14.250000953674316
    3. '(' → logprob: -19.625
    4. '[h' → logprob: -21.25
    5. '(
' → logprob: -22.375
    6. ' (' → logprob: -22.875
    7. '	h' → logprob: -23.875
    8. '((' → logprob: -24.25
    9. '(H' → logprob: -24.25
    10. '(lines' → logprob: -24.875

Token 805: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.019567416980862617
    2. '_h' → logprob: -4.144567489624023
    3. '(h' → logprob: -6.394567489624023
    4. 'h' → logprob: -7.019567489624023
    5. ')' → logprob: -7.394567489624023
    6. 'line' → logprob: -8.269567489624023
    7. ')
' → logprob: -10.644567489624023
    8. '(line' → logprob: -10.894567489624023
    9. 'Line' → logprob: -11.269567489624023
    10. '_lines' → logprob: -11.269567489624023

Token 806: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20161613821983337
    2. ')
' → logprob: -1.7016161680221558
    3. '           ' → logprob: -8.701616287231445
    4. ')
' → logprob: -10.451616287231445
    5. '       ' → logprob: -12.826616287231445
    6. '               ' → logprob: -13.701616287231445
    7. ' )' → logprob: -13.951616287231445
    8. ')`
' → logprob: -13.951616287231445
    9. ')

' → logprob: -14.576616287231445
    10. ' )
' → logprob: -14.701616287231445

Token 807: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.38907068967819214
    2. 'rows' → logprob: -1.139070749282837
    3. '       ' → logprob: -6.264070510864258
    4. ' rows' → logprob: -8.264070510864258
    5. 'row' → logprob: -11.264070510864258
    6. 'grid' → logprob: -11.764070510864258
    7. '   ' → logprob: -12.139070510864258
    8. '	rows' → logprob: -12.639070510864258
    9. '_rows' → logprob: -13.264070510864258
    10. '               ' → logprob: -13.264070510864258

Token 808: ' rows' (ID: 13585)
  Prédit: 'rows'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rows' (adapté à ' rows') → logprob: -0.004143338184803724
    2. 'board' → logprob: -6.004143238067627
    3. 'grid' → logprob: -7.004143238067627
    4. '           ' → logprob: -7.254143238067627
    5. ' rows' → logprob: -11.129143714904785
    6. 'matrix' → logprob: -11.379143714904785
    7. 'data' → logprob: -11.754143714904785
    8. 'block' → logprob: -12.379143714904785
    9. 'row' → logprob: -12.754143714904785
    10. 'for' → logprob: -13.504143714904785

Token 809: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10021109133958817
    2. ' =' → logprob: -2.3502111434936523
    3. '=[]' → logprob: -12.725211143493652
    4. '=[]
' → logprob: -13.600211143493652
    5. ':' → logprob: -16.225210189819336
    6. '=[]
' → logprob: -17.725210189819336
    7. '           ' → logprob: -18.850210189819336
    8. '＝' → logprob: -18.975210189819336
    9. '   ' → logprob: -18.975210189819336
    10. 'rows' → logprob: -19.100210189819336

Token 810: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.07356274127960205
    2. '[]' → logprob: -3.0735626220703125
    3. '[' → logprob: -3.8235626220703125
    4. '[
' → logprob: -6.3235626220703125
    5. '[line' → logprob: -7.5735626220703125
    6. '[[' → logprob: -8.073562622070312
    7. '[int' → logprob: -9.573562622070312
    8. '[str' → logprob: -10.073562622070312
    9. '[array' → logprob: -10.948562622070312
    10. '[list' → logprob: -11.073562622070312

Token 811: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0029353871941566467
    2. '       ' → logprob: -6.002935409545898
    3. 'for' → logprob: -7.752935409545898
    4. '	       ' → logprob: -11.377935409545898
    5. '   ' → logprob: -11.752935409545898
    6. ' for' → logprob: -12.377935409545898
    7. '		' → logprob: -12.877935409545898
    8. '	   ' → logprob: -13.002935409545898
    9. '               ' → logprob: -14.752935409545898
    10. '<|end|>' → logprob: -14.752935409545898

Token 812: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.000776038970798254
    2. '           ' → logprob: -7.2507758140563965
    3. ' for' → logprob: -10.375776290893555
    4. 'while' → logprob: -10.750776290893555
    5. '       ' → logprob: -11.250776290893555
    6. '	for' → logprob: -15.125776290893555
    7. '   ' → logprob: -15.750776290893555
    8. '```' → logprob: -17.750776290893555
    9. '	       ' → logprob: -19.125776290893555
    10. '               ' → logprob: -19.375776290893555

Token 813: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.04908744618296623
    2. '_i' → logprob: -3.0490875244140625
    3. '_row' → logprob: -8.674087524414062
    4. '_r' → logprob: -8.924087524414062
    5. ' _' → logprob: -9.174087524414062
    6. '_h' → logprob: -10.174087524414062
    7. 'i' → logprob: -10.799087524414062
    8. '_in' → logprob: -11.549087524414062
    9. '_line' → logprob: -11.799087524414062
    10. '_j' → logprob: -11.924087524414062

Token 814: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03841037303209305
    2. 'in' → logprob: -3.2884104251861572
    3. 'range' → logprob: -7.913410186767578
    4. ' range' → logprob: -14.038410186767578
    5. ' ' → logprob: -14.163410186767578
    6. '_' → logprob: -14.288410186767578
    7. 'i' → logprob: -14.538410186767578
    8. '
' → logprob: -15.913410186767578
    9. '  ' → logprob: -16.538410186767578
    10. '   ' → logprob: -16.788410186767578

Token 815: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -4.5491004129871726e-05
    2. ' range' → logprob: -10.000045776367188
    3. '
' → logprob: -20.875045776367188
    4. '	range' → logprob: -22.375045776367188
    5. '(range' → logprob: -22.750045776367188
    6. '_range' → logprob: -23.125045776367188
    7. 'Range' → logprob: -24.000045776367188
    8. '   ' → logprob: -24.000045776367188
    9. 'lines' → logprob: -25.375045776367188
    10. '0' → logprob: -25.375045776367188

Token 816: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.0007100477814674377
    2. 'h' → logprob: -7.2507100105285645
    3. ' h' → logprob: -16.875709533691406
    4. '(' → logprob: -17.750709533691406
    5. '	h' → logprob: -18.500709533691406
    6. ' (' → logprob: -19.875709533691406
    7. '(
' → logprob: -20.125709533691406
    8. '<h' → logprob: -20.625709533691406
    9. '
' → logprob: -21.125709533691406
    10. '   ' → logprob: -21.125709533691406

Token 817: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.02379181981086731
    2. '):' → logprob: -3.773791790008545
    3. '):
' → logprob: -8.273792266845703
    4. '           ' → logprob: -9.148792266845703
    5. '               ' → logprob: -9.273792266845703
    6. ':
' → logprob: -10.648792266845703
    7. ')' → logprob: -10.773792266845703
    8. ',' → logprob: -11.148792266845703
    9. ':' → logprob: -11.398792266845703
    10. '       ' → logprob: -12.023792266845703

Token 818: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0010002978378906846
    2. '<|end|>' → logprob: -7.50100040435791
    3. '	           ' → logprob: -8.62600040435791
    4. '           ' → logprob: -10.00100040435791
    5. 'rows' → logprob: -10.12600040435791
    6. '<|end|>' → logprob: -10.62600040435791
    7. 'tokens' → logprob: -10.87600040435791
    8. ' lines' → logprob: -11.00100040435791
    9. ',' → logprob: -11.25100040435791
    10. '                
' → logprob: -11.25100040435791

Token 819: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' (adapté à ' row') → logprob: -0.17819997668266296
    2. 'rows' → logprob: -2.3032000064849854
    3. ' row' → logprob: -3.4282000064849854
    4. 'line' → logprob: -4.053199768066406
    5. 'nums' → logprob: -4.803199768066406
    6. '               ' → logprob: -6.178199768066406
    7. ' line' → logprob: -7.053199768066406
    8. ' rows' → logprob: -7.428199768066406
    9. 'numbers' → logprob: -7.678199768066406
    10. 'data' → logprob: -8.053199768066406

Token 820: '_str' (ID: 6182)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03179897367954254
    2. '=' → logprob: -3.906799077987671
    3. '_line' → logprob: -5.156798839569092
    4. '_lines' → logprob: -6.031798839569092
    5. '_tokens' → logprob: -6.906798839569092
    6. '=line' → logprob: -7.031798839569092
    7. '           ' → logprob: -7.156798839569092
    8. '.append' → logprob: -8.90679931640625
    9. '               ' → logprob: -9.90679931640625
    10. 's' → logprob: -9.90679931640625

Token 821: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0486164316534996
    2. '=' → logprob: -3.048616409301758
    3. '           ' → logprob: -11.048616409301758
    4. '=line' → logprob: -11.798616409301758
    5. '               ' → logprob: -12.673616409301758
    6. 's' → logprob: -14.298616409301758
    7. '                   ' → logprob: -14.798616409301758
    8. ',' → logprob: -15.298616409301758
    9. '		' → logprob: -15.548616409301758
    10. '_tokens' → logprob: -15.673616409301758

Token 822: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.0011706985533237457
    2. ' lines' → logprob: -6.751170635223389
    3. '           ' → logprob: -15.626171112060547
    4. '	lines' → logprob: -16.251171112060547
    5. '(lines' → logprob: -16.501171112060547
    6. '                   ' → logprob: -17.376171112060547
    7. '               ' → logprob: -17.501171112060547
    8. 'line' → logprob: -17.501171112060547
    9. '   ' → logprob: -18.251171112060547
    10. '.lines' → logprob: -19.126171112060547

Token 823: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -8.029847231227905e-05
    2. 'idx' → logprob: -9.500080108642578
    3. '               ' → logprob: -13.000080108642578
    4. '                   ' → logprob: -13.500080108642578
    5. '           ' → logprob: -13.750080108642578
    6. '       ' → logprob: -15.500080108642578
    7. ' idx' → logprob: -15.875080108642578
    8. '	idx' → logprob: -15.875080108642578
    9. '(idx' → logprob: -16.375080108642578
    10. '   ' → logprob: -17.125080108642578

Token 824: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.00025192240718752146
    2. '               ' → logprob: -9.000251770019531
    3. '           ' → logprob: -9.500251770019531
    4. ']' → logprob: -10.875251770019531
    5. '[idx' → logprob: -11.000251770019531
    6. ']
' → logprob: -11.500251770019531
    7. '.strip' → logprob: -13.125251770019531
    8. '                   ' → logprob: -13.500251770019531
    9. '"].' → logprob: -13.875251770019531
    10. ''].' → logprob: -14.250251770019531

Token 825: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -7.672236824873835e-05
    2. 'rstrip' → logprob: -9.500076293945312
    3. 'split' → logprob: -13.250076293945312
    4. ' strip' → logprob: -16.750076293945312
    5. '_strip' → logprob: -18.500076293945312
    6. 'idx' → logprob: -19.000076293945312
    7. '.strip' → logprob: -19.375076293945312
    8. '           ' → logprob: -21.375076293945312
    9. '
' → logprob: -21.625076293945312
    10. 'Strip' → logprob: -22.500076293945312

Token 826: '()
' (ID: 1234)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00552911963313818
    2. '           ' → logprob: -6.505528926849365
    3. '()' → logprob: -6.755528926849365
    4. ',' → logprob: -7.505528926849365
    5. '()
' → logprob: -7.505528926849365
    6. '
' → logprob: -7.755528926849365
    7. '<|end|>' → logprob: -8.255529403686523
    8. ')' → logprob: -8.630529403686523
    9. '<|end|>' → logprob: -8.755529403686523
    10. '	           ' → logprob: -9.005529403686523

Token 827: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00022535098833031952
    2. 'idx' → logprob: -8.750225067138672
    3. '           ' → logprob: -10.125225067138672
    4. 'tokens' → logprob: -11.000225067138672
    5. '                   ' → logprob: -13.000225067138672
    6. 'row' → logprob: -13.375225067138672
    7. 'indices' → logprob: -13.625225067138672
    8. '[idx' → logprob: -14.375225067138672
    9. '	           ' → logprob: -14.625225067138672
    10. '                
' → logprob: -14.625225067138672

Token 828: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.07319919764995575
    2. 'row' → logprob: -3.3231992721557617
    3. '               ' → logprob: -3.9481992721557617
    4. 'rows' → logprob: -4.198199272155762
    5. '           ' → logprob: -9.448199272155762
    6. 'nums' → logprob: -9.698199272155762
    7. ' idx' → logprob: -10.448199272155762
    8. 'indices' → logprob: -10.948199272155762
    9. 'lines' → logprob: -11.323199272155762
    10. '	idx' → logprob: -12.073199272155762

Token 829: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.21312028169631958
    2. ' +=' → logprob: -1.7131202220916748
    3. '           ' → logprob: -4.713120460510254
    4. '               ' → logprob: -6.213120460510254
    5. '=' → logprob: -7.838120460510254
    6. 'idx' → logprob: -9.463120460510254
    7. '```' → logprob: -10.463120460510254
    8. '       ' → logprob: -10.463120460510254
    9. '                   ' → logprob: -10.838120460510254
    10. ' =' → logprob: -10.963120460510254

Token 830: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '
' → logprob: -18.125001907348633
    4. '```' → logprob: -19.000001907348633
    5. '   ' → logprob: -19.125001907348633
    6. '0' → logprob: -20.500001907348633
    7. '           ' → logprob: -20.625001907348633
    8. '5' → logprob: -20.750001907348633
    9. ')' → logprob: -21.000001907348633
    10. '１' → logprob: -21.125001907348633

Token 831: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.226628895296017e-06
    2. ' ' → logprob: -11.875007629394531
    3. '```' → logprob: -17.00000762939453
    4. '5' → logprob: -17.25000762939453
    5. '
' → logprob: -17.37500762939453
    6. '   ' → logprob: -17.50000762939453
    7. 'Board' → logprob: -18.68750762939453
    8. '(' → logprob: -18.75000762939453
    9. '0' → logprob: -18.81250762939453
    10. ')' → logprob: -19.00000762939453

Token 832: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -5.741137283621356e-05
    2. '           ' → logprob: -10.125057220458984
    3. '                   ' → logprob: -11.750057220458984
    4. 'row' → logprob: -12.250057220458984
    5. 'tokens' → logprob: -13.375057220458984
    6. ',' → logprob: -13.875057220458984
    7. '```' → logprob: -15.000057220458984
    8. 'numbers' → logprob: -15.000057220458984
    9. '       ' → logprob: -15.125057220458984
    10. 'num' → logprob: -15.375057220458984

Token 833: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0016463837819173932
    2. '           ' → logprob: -6.501646518707275
    3. 'row' → logprob: -9.001646041870117
    4. 'rows' → logprob: -11.501646041870117
    5. '       ' → logprob: -12.001646041870117
    6. '                   ' → logprob: -13.626646041870117
    7. 'nums' → logprob: -13.751646041870117
    8. 'numbers' → logprob: -13.876646041870117
    9. 'num' → logprob: -14.501646041870117
    10. 'tokens' → logprob: -14.751646041870117

Token 834: ' nums' (ID: 18117)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.024795344099402428
    2. 'rows' → logprob: -3.7747952938079834
    3. 'nums' (adapté à ' nums') → logprob: -6.8997955322265625
    4. '               ' → logprob: -8.524795532226562
    5. 'numbers' → logprob: -8.649795532226562
    6. ' row' → logprob: -8.899795532226562
    7. 'digits' → logprob: -10.649795532226562
    8. '           ' → logprob: -13.399795532226562
    9. '   ' → logprob: -13.774795532226562
    10. 'values' → logprob: -13.899795532226562

Token 835: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07888978719711304
    2. ' =' → logprob: -2.578889846801758
    3. '＝' → logprob: -18.453889846801758
    4. '=[' → logprob: -19.203889846801758
    5. '           ' → logprob: -19.328889846801758
    6. '=int' → logprob: -19.578889846801758
    7. ' =[' → logprob: -19.703889846801758
    8. '=
' → logprob: -19.953889846801758
    9. '=line' → logprob: -20.078889846801758
    10. ' ' → logprob: -20.328889846801758

Token 836: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.00537036033347249
    2. '[list' → logprob: -5.255370140075684
    3. ' list' → logprob: -9.005370140075684
    4. '[' → logprob: -11.505370140075684
    5. '[List' → logprob: -12.755370140075684
    6. ' [' → logprob: -14.630370140075684
    7. '[line' → logprob: -15.880370140075684
    8. '[row' → logprob: -16.63037109375
    9. '[int' → logprob: -16.63037109375
    10. 'List' → logprob: -16.75537109375

Token 837: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -1.981667537620524e-06
    2. 'map' → logprob: -13.250001907348633
    3. '(int' → logprob: -16.625001907348633
    4. '(' → logprob: -17.250001907348633
    5. '[int' → logprob: -18.500001907348633
    6. '	map' → logprob: -20.375001907348633
    7. ' map' → logprob: -20.625001907348633
    8. '[' → logprob: -21.125001907348633
    9. '.map' → logprob: -21.500001907348633
    10. '_map' → logprob: -22.375001907348633

Token 838: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -2.1888679839321412e-05
    2. 'int' → logprob: -10.750021934509277
    3. '(lambda' → logprob: -15.375021934509277
    4. '(' → logprob: -16.50002098083496
    5. '[int' → logprob: -17.75002098083496
    6. ' int' → logprob: -18.25002098083496
    7. ',int' → logprob: -18.62502098083496
    8. '=int' → logprob: -18.75002098083496
    9. '	int' → logprob: -19.75002098083496
    10. '<int' → logprob: -19.87502098083496

Token 839: ',' (ID: 11)
  Prédit: '(row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.004809245932847261
    2. ',' → logprob: -5.879809379577637
    3. ',row' → logprob: -6.754809379577637
    4. 'row' → logprob: -7.129809379577637
    5. '(' → logprob: -10.629809379577637
    6. ' (' → logprob: -11.629809379577637
    7. ')' → logprob: -13.754809379577637
    8. ' ,' → logprob: -14.629809379577637
    9. '=row' → logprob: -14.629809379577637
    10. '))' → logprob: -15.254809379577637

Token 840: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -2.15310683415737e-05
    2. ' row' → logprob: -10.750021934509277
    3. '(row' → logprob: -16.62502098083496
    4. ',row' → logprob: -20.37502098083496
    5. '               ' → logprob: -20.87502098083496
    6. '
' → logprob: -21.25002098083496
    7. '   ' → logprob: -21.62502098083496
    8. '	row' → logprob: -21.62502098083496
    9. '           ' → logprob: -22.00002098083496
    10. ' ' → logprob: -22.12502098083496

Token 841: '_str' (ID: 6182)
  Prédit: ',row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',row' → logprob: -1.103047251701355
    2. 'row' → logprob: -1.353047251701355
    3. '(row' → logprob: -1.978047251701355
    4. ',' → logprob: -2.3530473709106445
    5. '(lines' → logprob: -3.3530473709106445
    6. 'rows' → logprob: -3.3530473709106445
    7. '.readline' → logprob: -3.8530473709106445
    8. 'lines' → logprob: -4.1030473709106445
    9. '(rows' → logprob: -4.3530473709106445
    10. '.readlines' → logprob: -4.3530473709106445

Token 842: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.05209294706583023
    2. '.strip' → logprob: -3.177093029022217
    3. '().' → logprob: -5.052093029022217
    4. 'split' → logprob: -6.427093029022217
    5. '(split' → logprob: -7.927093029022217
    6. '.' → logprob: -8.177092552185059
    7. ' .' → logprob: -8.802092552185059
    8. '.readline' → logprob: -10.177092552185059
    9. 'strip' → logprob: -10.177092552185059
    10. '               ' → logprob: -10.302092552185059

Token 843: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.005740713328123093
    2. '))' → logprob: -6.005740642547607
    3. '()))
' → logprob: -6.255740642547607
    4. '()' → logprob: -6.630740642547607
    5. '(' → logprob: -11.255741119384766
    6. '()))

' → logprob: -13.130741119384766
    7. '()));' → logprob: -13.130741119384766
    8. '(','' → logprob: -13.880741119384766
    9. ' ))' → logprob: -14.130741119384766
    10. '))
' → logprob: -14.380741119384766

Token 844: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.1756367712223437e-05
    2. '           ' → logprob: -11.500011444091797
    3. '                   ' → logprob: -14.000011444091797
    4. '       ' → logprob: -15.625011444091797
    5. '   ' → logprob: -16.125011444091797
    6. '              ' → logprob: -16.125011444091797
    7. ')' → logprob: -16.875011444091797
    8. '[' → logprob: -17.125011444091797
    9. '			' → logprob: -17.125011444091797
    10. 'self' → logprob: -17.125011444091797

Token 845: ' rows' (ID: 13585)
  Prédit: 'rows'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rows' (adapté à ' rows') → logprob: -0.0012538038427010179
    2. '               ' → logprob: -7.001253604888916
    3. ' rows' → logprob: -8.001254081726074
    4. '           ' → logprob: -12.126254081726074
    5. 'row' → logprob: -14.001254081726074
    6. 'assert' → logprob: -15.001254081726074
    7. '	rows' → logprob: -15.251254081726074
    8. '       ' → logprob: -15.501254081726074
    9. '(rows' → logprob: -15.876254081726074
    10. 'if' → logprob: -16.251253128051758

Token 846: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -3.643152740551159e-05
    2. '.' → logprob: -10.375036239624023
    3. 'append' → logprob: -13.000036239624023
    4. '           ' → logprob: -13.500036239624023
    5. '.extend' → logprob: -13.500036239624023
    6. ' .' → logprob: -16.750036239624023
    7. '               ' → logprob: -17.125036239624023
    8. ').' → logprob: -17.125036239624023
    9. '.Append' → logprob: -18.250036239624023
    10. '.py' → logprob: -18.750036239624023

Token 847: '(nums' (ID: 40372)
  Prédit: '(nums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nums' → logprob: -0.00012356207298580557
    2. 'nums' → logprob: -9.000123977661133
    3. '(' → logprob: -16.500123977661133
    4. '(numbers' → logprob: -17.250123977661133
    5. ' nums' → logprob: -17.875123977661133
    6. '(num' → logprob: -18.750123977661133
    7. '(
' → logprob: -19.375123977661133
    8. '(n' → logprob: -19.625123977661133
    9. '(list' → logprob: -20.000123977661133
    10. '_nums' → logprob: -20.375123977661133

Token 848: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00036834771162830293
    2. ')
' → logprob: -8.250368118286133
    3. '           ' → logprob: -9.500368118286133
    4. '       ' → logprob: -11.375368118286133
    5. '<|end|>' → logprob: -11.375368118286133
    6. '               ' → logprob: -12.125368118286133
    7. ' )' → logprob: -13.750368118286133
    8. '<|end|>' → logprob: -14.125368118286133
    9. '())' → logprob: -14.875368118286133
    10. ')return' → logprob: -14.875368118286133

Token 849: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.43396273255348206
    2. '           ' → logprob: -1.0589627027511597
    3. '
' → logprob: -5.308962821960449
    4. '```' → logprob: -8.55896282196045
    5. 'self' → logprob: -10.43396282196045
    6. '          ' → logprob: -10.80896282196045
    7. 'return' → logprob: -11.55896282196045
    8. '
' → logprob: -12.18396282196045
    9. '        
' → logprob: -12.18396282196045
    10. '   ' → logprob: -12.30896282196045

Token 850: ' self' (ID: 1051)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.07970260083675385
    2. '           ' → logprob: -3.329702615737915
    3. 'p' → logprob: -3.454702615737915
    4. 'dataset' → logprob: -6.079702377319336
    5. ' board' → logprob: -6.454702377319336
    6. 'return' → logprob: -6.704702377319336
    7. 'boards' → logprob: -7.204702377319336
    8. 'self' (adapté à ' self') → logprob: -7.329702377319336
    9. ' puzzle' → logprob: -7.579702377319336
    10. 'yield' → logprob: -7.579702377319336

Token 851: '.datasets' (ID: 136555)
  Prédit: '.datasets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.datasets' → logprob: -0.00043579499470070004
    2. 'datasets' → logprob: -7.875435829162598
    3. '.rows' → logprob: -10.375435829162598
    4. '.datas' → logprob: -11.500435829162598
    5. 'class' → logprob: -12.125435829162598
    6. '.lines' → logprob: -12.875435829162598
    7. '
' → logprob: -14.125435829162598
    8. '.parse' → logprob: -14.375435829162598
    9. '.current' → logprob: -14.375435829162598
    10. '.records' → logprob: -14.500435829162598

Token 852: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -7.24310302757658e-05
    2. '.' → logprob: -9.625072479248047
    3. 'append' → logprob: -12.875072479248047
    4. '.extend' → logprob: -12.875072479248047
    5. '.app' → logprob: -14.375072479248047
    6. ' .' → logprob: -14.750072479248047
    7. '.add' → logprob: -17.250072479248047
    8. '.py' → logprob: -17.500072479248047
    9. '_append' → logprob: -17.625072479248047
    10. '.clear' → logprob: -17.625072479248047

Token 853: '(rows' (ID: 69648)
  Prédit: '(rows'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rows' → logprob: -0.03067193552851677
    2. '(Board' → logprob: -3.5306718349456787
    3. '((' → logprob: -7.280672073364258
    4. 'rows' → logprob: -8.530672073364258
    5. '(' → logprob: -10.655672073364258
    6. '(board' → logprob: -12.155672073364258
    7. 'Board' → logprob: -13.280672073364258
    8. '(row' → logprob: -13.780672073364258
    9. '(Row' → logprob: -13.780672073364258
    10. '(
' → logprob: -15.155672073364258

Token 854: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003752615302801132
    2. '<|end|>' → logprob: -8.250374794006348
    3. '       ' → logprob: -9.625374794006348
    4. ')
' → logprob: -10.125374794006348
    5. '<|end|>' → logprob: -12.500374794006348
    6. ' )' → logprob: -13.875374794006348
    7. '   ' → logprob: -14.875374794006348
    8. '
' → logprob: -15.000374794006348
    9. '           ' → logprob: -15.125374794006348
    10. ')return' → logprob: -15.250374794006348

Token 855: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 856: ' Puzzle' (ID: 90259)
  Prédit: 'Solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Solver' → logprob: -0.731533408164978
    2. 'Puzzle' → logprob: -1.106533408164978
    3. 'Runner' → logprob: -1.981533408164978
    4. ' Solver' → logprob: -3.8565335273742676
    5. 'Solution' → logprob: -4.231533527374268
    6. ' Puzzle' → logprob: -5.356533527374268
    7. 'Tester' → logprob: -6.356533527374268
    8. ' Runner' → logprob: -6.356533527374268
    9. 'Game' → logprob: -6.481533527374268
    10. 'Main' → logprob: -6.606533527374268

Token 857: 'Solver' (ID: 70484)
  Prédit: 'Solver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Solver' → logprob: -0.5352709889411926
    2. ':' → logprob: -1.6602709293365479
    3. 'Parser' → logprob: -1.6602709293365479
    4. ':
' → logprob: -3.785270929336548
    5. '(Parser' → logprob: -4.660271167755127
    6. '(' → logprob: -7.285271167755127
    7. 'Processor' → logprob: -7.660271167755127
    8. '(S' → logprob: -8.410270690917969
    9. 'Solution' → logprob: -8.410270690917969
    10. '_solver' → logprob: -8.910270690917969

Token 858: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005627154838293791
    2. ':
' → logprob: -5.255627155303955
    3. '<|end|>' → logprob: -8.755626678466797
    4. '(P' → logprob: -10.255626678466797
    5. '```' → logprob: -10.255626678466797
    6. '>:' → logprob: -10.630626678466797
    7. ':def' → logprob: -11.005626678466797
    8. '(' → logprob: -11.255626678466797
    9. '   ' → logprob: -11.380626678466797
    10. '():' → logprob: -11.505626678466797

Token 859: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005327554885298014
    2. 'def' → logprob: -5.6303277015686035
    3. ' def' → logprob: -6.3803277015686035
    4. '```' → logprob: -10.630327224731445
    5. '	def' → logprob: -13.255327224731445
    6. '    
' → logprob: -13.380327224731445
    7. 'class' → logprob: -13.505327224731445
    8. ':' → logprob: -14.005327224731445
    9. '
' → logprob: -14.380327224731445
    10. '   ' → logprob: -15.005327224731445

Token 860: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.006837918423116207
    2. ' def' → logprob: -5.006837844848633
    3. '   ' → logprob: -9.256837844848633
    4. 'class' → logprob: -10.756837844848633
    5. '```' → logprob: -12.631837844848633
    6. 'from' → logprob: -13.506837844848633
    7. '
' → logprob: -14.631837844848633
    8. ':' → logprob: -15.381837844848633
    9. ':def' → logprob: -15.756837844848633
    10. '	def' → logprob: -16.131837844848633

Token 861: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.25329890847206116
    2. 'init' → logprob: -1.7532988786697388
    3. 'def' → logprob: -3.2532989978790283
    4. ' __' → logprob: -5.753298759460449
    5. '```' → logprob: -6.003298759460449
    6. ' def' → logprob: -6.128298759460449
    7. 'staticmethod' → logprob: -6.378298759460449
    8. '_init' → logprob: -6.878298759460449
    9. 'classmethod' → logprob: -7.378298759460449
    10. 'object' → logprob: -8.87829875946045

Token 862: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. ' init' → logprob: -16.75
    3. 'call' → logprob: -18.875
    4. 'def' → logprob: -19.25
    5. '(init' → logprob: -19.375
    6. '_init' → logprob: -20.25
    7. '.init' → logprob: -20.5
    8. 'in' → logprob: -20.75
    9. 'int' → logprob: -20.875
    10. 'new' → logprob: -21.125

Token 863: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00021331508469302207
    2. '(' → logprob: -9.500213623046875
    3. 'self' → logprob: -10.000213623046875
    4. '   ' → logprob: -10.000213623046875
    5. ' (' → logprob: -10.250213623046875
    6. 'def' → logprob: -12.875213623046875
    7. '       ' → logprob: -13.125213623046875
    8. '
' → logprob: -13.375213623046875
    9. ':' → logprob: -13.875213623046875
    10. '```' → logprob: -14.000213623046875

Token 864: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.3544423381972592e-05
    2. ')' → logprob: -12.37501335144043
    3. '):
' → logprob: -12.62501335144043
    4. '       ' → logprob: -13.12501335144043
    5. ' self' → logprob: -13.12501335144043
    6. '
' → logprob: -14.00001335144043
    7. '   ' → logprob: -14.37501335144043
    8. '(self' → logprob: -14.62501335144043
    9. '):

' → logprob: -18.25001335144043
    10. '[self' → logprob: -18.50001335144043

Token 865: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6014918088912964
    2. '):
' → logprob: -1.4764918088912964
    3. 'self' → logprob: -2.226491928100586
    4. '(self' → logprob: -2.601491928100586
    5. '):' → logprob: -3.351491928100586
    6. '   ' → logprob: -5.726491928100586
    7. '       ' → logprob: -6.226491928100586
    8. ')' → logprob: -8.101491928100586
    9. '
' → logprob: -8.476491928100586
    10. ',self' → logprob: -8.476491928100586

Token 866: ' datasets' (ID: 57711)
  Prédit: 'datasets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'datasets' → logprob: -0.01698881760239601
    2. ' datasets' → logprob: -4.141988754272461
    3. 'boards' → logprob: -7.891988754272461
    4. 'p' → logprob: -8.266988754272461
    5. 'data' → logprob: -9.266988754272461
    6. ' puzzles' → logprob: -9.891988754272461
    7. 'parser' → logprob: -9.891988754272461
    8. 'dataset' → logprob: -9.891988754272461
    9. 'rows' → logprob: -10.766988754272461
    10. ' boards' → logprob: -11.391988754272461

Token 867: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.098634272813797
    2. '):
' → logprob: -2.8486342430114746
    3. '):' → logprob: -3.3486342430114746
    4. '       ' → logprob: -7.473634243011475
    5. '   ' → logprob: -8.598634719848633
    6. '):
' → logprob: -9.973634719848633
    7. 'self' → logprob: -10.848634719848633
    8. ')' → logprob: -11.848634719848633
    9. ',' → logprob: -11.848634719848633
    10. '```' → logprob: -11.973634719848633

Token 868: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -8.180258191714529e-06
    2. ' List' → logprob: -11.750008583068848
    3. '[List' → logprob: -16.62500762939453
    4. 'list' → logprob: -16.75000762939453
    5. '   ' → logprob: -18.50000762939453
    6. '       ' → logprob: -20.62500762939453
    7. '	List' → logprob: -21.25000762939453
    8. ')' → logprob: -22.37500762939453
    9. '<List' → logprob: -23.12500762939453
    10. ' ' → logprob: -23.37500762939453

Token 869: '[List' (ID: 113982)
  Prédit: '[List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[List' → logprob: 0.0
    2. 'List' → logprob: -17.5
    3. '[' → logprob: -18.125
    4. '[[' → logprob: -18.375
    5. '[list' → logprob: -20.25
    6. '<List' → logprob: -20.375
    7. '   ' → logprob: -20.875
    8. '(List' → logprob: -21.375
    9. '```' → logprob: -21.375
    10. '):
' → logprob: -21.375

Token 870: '[List' (ID: 113982)
  Prédit: '[List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[List' → logprob: -7.896309739408025e-07
    2. '[int' → logprob: -14.875000953674316
    3. 'List' → logprob: -15.000000953674316
    4. '[' → logprob: -17.5
    5. '<List' → logprob: -19.25
    6. '	List' → logprob: -21.375
    7. '(List' → logprob: -21.375
    8. '
' → logprob: -22.25
    9. '```' → logprob: -22.5
    10. '[
' → logprob: -22.5

Token 871: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -7.493430894101039e-05
    2. 'int' → logprob: -9.500075340270996
    3. '<int' → logprob: -18.00007438659668
    4. '[' → logprob: -18.00007438659668
    5. ']int' → logprob: -18.37507438659668
    6. '```' → logprob: -20.12507438659668
    7. '=int' → logprob: -20.25007438659668
    8. '   ' → logprob: -20.50007438659668
    9. '[Int' → logprob: -20.50007438659668
    10. '	int' → logprob: -20.62507438659668

Token 872: ']]' (ID: 8928)
  Prédit: ']]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.001019590417854488
    2. ']])' → logprob: -7.001019477844238
    3. '[int' → logprob: -9.251019477844238
    4. '[' → logprob: -11.626019477844238
    5. ']]]' → logprob: -14.126019477844238
    6. 'int' → logprob: -14.501019477844238
    7. ']]:
' → logprob: -14.501019477844238
    8. '```' → logprob: -15.126019477844238
    9. '[[' → logprob: -15.376019477844238
    10. ']])
' → logprob: -15.501019477844238

Token 873: ']):
' (ID: 51989)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.07968080043792725
    2. '):' → logprob: -2.579680919647217
    3. '       ' → logprob: -7.704680919647217
    4. '   ' → logprob: -8.204680442810059
    5. '):
' → logprob: -10.454680442810059
    6. ']):
' → logprob: -10.704680442810059
    7. ')' → logprob: -11.579680442810059
    8. ']):' → logprob: -12.954680442810059
    9. '):

' → logprob: -13.704680442810059
    10. ' ' → logprob: -15.204680442810059

Token 874: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002310599898919463
    2. '   ' → logprob: -6.127310752868652
    3. 'def' → logprob: -9.627310752868652
    4. 'self' → logprob: -10.002310752868652
    5. ':' → logprob: -11.752310752868652
    6. ' self' → logprob: -12.502310752868652
    7. '):
' → logprob: -13.877310752868652
    8. ' def' → logprob: -14.752310752868652
    9. ',' → logprob: -15.002310752868652
    10. ':
' → logprob: -15.252310752868652

Token 875: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.014302648603916168
    2. '       ' → logprob: -4.264302730560303
    3. ' self' → logprob: -8.889302253723145
    4. '   ' → logprob: -14.389302253723145
    5. 'def' → logprob: -14.764302253723145
    6. '	self' → logprob: -15.389302253723145
    7. 'class' → logprob: -16.26430320739746
    8. '(self' → logprob: -16.88930320739746
    9. '[self' → logprob: -18.01430320739746
    10. 'super' → logprob: -18.51430320739746

Token 876: '.datasets' (ID: 136555)
  Prédit: '.datasets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.datasets' → logprob: -0.0001968649885384366
    2. 'datasets' → logprob: -9.00019645690918
    3. '.data' → logprob: -10.12519645690918
    4. '.datas' → logprob: -10.50019645690918
    5. '.dataset' → logprob: -12.37519645690918
    6. '.dat' → logprob: -14.87519645690918
    7. ' .' → logprob: -15.50019645690918
    8. '.results' → logprob: -15.62519645690918
    9. ' datasets' → logprob: -15.62519645690918
    10. '   ' → logprob: -15.62519645690918

Token 877: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20151372253894806
    2. ' =' → logprob: -1.7015137672424316
    3. '       ' → logprob: -9.826513290405273
    4. ':' → logprob: -10.701513290405273
    5. '   ' → logprob: -10.826513290405273
    6. '=self' → logprob: -13.951513290405273
    7. ')' → logprob: -14.576513290405273
    8. '.' → logprob: -14.701513290405273
    9. '        ' → logprob: -15.076513290405273
    10. '.append' → logprob: -15.076513290405273

Token 878: ' datasets' (ID: 57711)
  Prédit: 'datasets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'datasets' → logprob: -3.130576806142926e-05
    2. ' datasets' → logprob: -10.375031471252441
    3. '.datasets' → logprob: -17.125030517578125
    4. 'dataset' → logprob: -17.250030517578125
    5. 'dat' → logprob: -17.750030517578125
    6. 'data' → logprob: -19.000030517578125
    7. 'atasets' → logprob: -19.375030517578125
    8. '   ' → logprob: -20.000030517578125
    9. 'datas' → logprob: -20.125030517578125
    10. '[' → logprob: -20.500030517578125

Token 879: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5709341168403625
    2. 'def' → logprob: -1.0709340572357178
    3. '   ' → logprob: -2.4459340572357178
    4. ' def' → logprob: -5.320934295654297
    5. '<|end|>' → logprob: -7.445934295654297
    6. '

' → logprob: -10.070934295654297
    7. '```' → logprob: -10.445934295654297
    8. ')' → logprob: -10.445934295654297
    9. ' ' → logprob: -11.195934295654297
    10. '    
' → logprob: -11.195934295654297

Token 880: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0009883884340524673
    2. '   ' → logprob: -7.625988483428955
    3. ' def' → logprob: -7.750988483428955
    4. '
' → logprob: -10.375988006591797
    5. '<|end|>' → logprob: -10.375988006591797
    6. 'self' → logprob: -12.625988006591797
    7. '```' → logprob: -13.125988006591797
    8. '<|end|>' → logprob: -14.625988006591797
    9. '       ' → logprob: -14.875988006591797
    10. '	def' → logprob: -14.875988006591797

Token 881: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -7.896309739408025e-07
    2. ' def' → logprob: -14.125000953674316
    3. 'from' → logprob: -18.125
    4. '   ' → logprob: -18.25
    5. '```' → logprob: -20.5
    6. 'class' → logprob: -20.75
    7. '
' → logprob: -21.125
    8. 'import' → logprob: -22.5
    9. '	def' → logprob: -22.875
    10. ')' → logprob: -22.875

Token 882: ' run' (ID: 2461)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.0939120352268219
    2. ' solve' → logprob: -2.468912124633789
    3. 'def' → logprob: -5.968912124633789
    4. ' def' → logprob: -6.843912124633789
    5. 'run' → logprob: -6.843912124633789
    6. ' run' → logprob: -8.468912124633789
    7. 's' → logprob: -11.968912124633789
    8. '.solve' → logprob: -12.218912124633789
    9. ' solution' → logprob: -12.718912124633789
    10. 'sol' → logprob: -12.718912124633789

Token 883: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00039409202872775495
    2. '(' → logprob: -7.875393867492676
    3. 'self' → logprob: -11.750393867492676
    4. '(
' → logprob: -12.875393867492676
    5. '()' → logprob: -13.500393867492676
    6. '():' → logprob: -13.750393867492676
    7. '   ' → logprob: -15.000393867492676
    8. '():
' → logprob: -15.375393867492676
    9. ' (' → logprob: -15.750393867492676
    10. '       ' → logprob: -15.875393867492676

Token 884: ')' (ID: 8)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.8299028873443604
    2. '):' → logprob: -1.4549028873443604
    3. ',' → logprob: -2.0799028873443604
    4. '(self' → logprob: -2.2049028873443604
    5. 'self' → logprob: -2.7049028873443604
    6. ')' → logprob: -3.7049028873443604
    7. ')(' → logprob: -6.829902648925781
    8. '   ' → logprob: -7.079902648925781
    9. '       ' → logprob: -7.704902648925781
    10. '):
' → logprob: -8.204902648925781

Token 885: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.025268537923693657
    2. '       ' → logprob: -4.1502685546875
    3. '   ' → logprob: -5.5252685546875
    4. 'self' → logprob: -5.6502685546875
    5. ':' → logprob: -7.1502685546875
    6. ':
' → logprob: -8.0252685546875
    7. '(' → logprob: -8.6502685546875
    8. '```' → logprob: -9.0252685546875
    9. '(
' → logprob: -9.2752685546875
    10. '->' → logprob: -10.2752685546875

Token 886: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.0006490522064268589
    2. ' List' → logprob: -7.5006489753723145
    3. '[List' → logprob: -9.250649452209473
    4. '[' → logprob: -17.875648498535156
    5. '   ' → logprob: -18.125648498535156
    6. '	List' → logprob: -19.875648498535156
    7. '       ' → logprob: -20.375648498535156
    8. '[int' → logprob: -21.000648498535156
    9. '[str' → logprob: -21.375648498535156
    10. 'None' → logprob: -22.000648498535156

Token 887: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -3.292907877039397e-06
    2. 'int' → logprob: -13.12500286102295
    3. '[' → logprob: -14.62500286102295
    4. '[Int' → logprob: -15.00000286102295
    5. '[List' → logprob: -15.12500286102295
    6. '<int' → logprob: -15.87500286102295
    7. '[
' → logprob: -16.750003814697266
    8. '(int' → logprob: -17.750003814697266
    9. '   ' → logprob: -18.500003814697266
    10. '[in' → logprob: -18.875003814697266

Token 888: ']:
' (ID: 22152)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.32503312826156616
    2. '():
' → logprob: -1.700033187866211
    3. '):
' → logprob: -2.950033187866211
    4. ':' → logprob: -4.075033187866211
    5. ']:
' → logprob: -4.700033187866211
    6. '       ' → logprob: -5.200033187866211
    7. '   ' → logprob: -5.325033187866211
    8. '[' → logprob: -5.700033187866211
    9. '():' → logprob: -6.950033187866211
    10. '[
' → logprob: -7.575033187866211

Token 889: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001599844777956605
    2. '[' → logprob: -7.1265997886657715
    3. '```' → logprob: -7.3765997886657715
    4. '   ' → logprob: -10.25160026550293
    5. '[]' → logprob: -10.87660026550293
    6. ' results' → logprob: -10.87660026550293
    7. '``' → logprob: -11.25160026550293
    8. '[
' → logprob: -11.50160026550293
    9. 'results' → logprob: -11.75160026550293
    10. '
' → logprob: -11.75160026550293

Token 890: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.009564715437591076
    2. '       ' → logprob: -5.2595648765563965
    3. ' results' → logprob: -5.5095648765563965
    4. 'result' → logprob: -8.259564399719238
    5. 'scores' → logprob: -11.884564399719238
    6. 'outputs' → logprob: -12.884564399719238
    7. 'res' → logprob: -13.634564399719238
    8. '```' → logprob: -13.634564399719238
    9. '
' → logprob: -14.134564399719238
    10. '	results' → logprob: -14.509564399719238

Token 891: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.015217194333672523
    2. '=' → logprob: -4.390217304229736
    3. '.append' → logprob: -6.640217304229736
    4. '=[]' → logprob: -7.265217304229736
    5. ':' → logprob: -8.265216827392578
    6. '[]' → logprob: -8.515216827392578
    7. '   ' → logprob: -9.140216827392578
    8. '=[]
' → logprob: -9.640216827392578
    9. '[:]' → logprob: -10.140216827392578
    10. '()' → logprob: -11.640216827392578

Token 892: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.5776447653770447
    2. '[]' → logprob: -0.8276447653770447
    3. ' []
' → logprob: -6.5776448249816895
    4. ' []' → logprob: -8.077644348144531
    5. '[' → logprob: -13.577644348144531
    6. '[]

' → logprob: -13.952644348144531
    7. '   ' → logprob: -17.20264434814453
    8. '[]"' → logprob: -17.70264434814453
    9. '[])
' → logprob: -17.70264434814453
    10. '=[]
' → logprob: -17.95264434814453

Token 893: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001541046192869544
    2. ' for' → logprob: -6.6265411376953125
    3. 'for' → logprob: -8.501541137695312
    4. '   ' → logprob: -12.251541137695312
    5. '
' → logprob: -13.126541137695312
    6. '```' → logprob: -13.251541137695312
    7. '<|end|>' → logprob: -13.876541137695312
    8. ',' → logprob: -14.626541137695312
    9. '	' → logprob: -15.001541137695312
    10. ':' → logprob: -15.001541137695312

Token 894: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0006920627201907337
    2. '       ' → logprob: -7.750691890716553
    3. ' for' → logprob: -8.250692367553711
    4. '	for' → logprob: -16.12569236755371
    5. '   ' → logprob: -16.25069236755371
    6. '```' → logprob: -16.62569236755371
    7. '           ' → logprob: -19.12569236755371
    8. ' ' → logprob: -20.00069236755371
    9. 'from' → logprob: -20.62569236755371
    10. '``' → logprob: -20.62569236755371

Token 895: ' data' (ID: 1238)
  Prédit: 'rows'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rows' → logprob: -0.009814761579036713
    2. 'data' → logprob: -5.759814739227295
    3. 'board' → logprob: -5.759814739227295
    4. 'dataset' → logprob: -6.259814739227295
    5. ' rows' → logprob: -6.634814739227295
    6. ' dataset' → logprob: -9.134815216064453
    7. ' data' → logprob: -9.884815216064453
    8. 'grid' → logprob: -10.134815216064453
    9. '   ' → logprob: -10.884815216064453
    10. ' board' → logprob: -11.634815216064453

Token 896: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12726205587387085
    2. 'in' → logprob: -2.1272621154785156
    3. '           ' → logprob: -8.252262115478516
    4. ':
' → logprob: -10.877262115478516
    5. ':' → logprob: -11.377262115478516
    6. ',' → logprob: -11.377262115478516
    7. '[' → logprob: -11.627262115478516
    8. '       ' → logprob: -12.502262115478516
    9. ' =' → logprob: -12.627262115478516
    10. '_in' → logprob: -13.127262115478516

Token 897: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00012403888104017824
    2. ' self' → logprob: -9.000123977661133
    3. '[self' → logprob: -15.375123977661133
    4. '(self' → logprob: -15.625123977661133
    5. '       ' → logprob: -15.875123977661133
    6. 'data' → logprob: -17.125123977661133
    7. '   ' → logprob: -18.625123977661133
    8. '           ' → logprob: -19.500123977661133
    9. '
' → logprob: -19.625123977661133
    10. '```' → logprob: -20.000123977661133

Token 898: '.datasets' (ID: 136555)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00538197997957468
    2. 'datasets' → logprob: -5.505382061004639
    3. '.datasets' → logprob: -7.130382061004639
    4. ' self' → logprob: -7.755382061004639
    5. '[self' → logprob: -10.75538158416748
    6. ':
' → logprob: -10.88038158416748
    7. ':self' → logprob: -11.50538158416748
    8. '   ' → logprob: -12.50538158416748
    9. '(self' → logprob: -12.63038158416748
    10. 'data' → logprob: -12.75538158416748

Token 899: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.11978252977132797
    2. ':' → logprob: -2.2447824478149414
    3. '           ' → logprob: -4.994782447814941
    4. '):
' → logprob: -9.869782447814941
    5. '       ' → logprob: -9.994782447814941
    6. ',' → logprob: -10.244782447814941
    7. '():
' → logprob: -11.369782447814941
    8. ':

' → logprob: -12.619782447814941
    9. ':
' → logprob: -12.744782447814941
    10. '[' → logprob: -12.744782447814941

Token 900: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0017651435919106007
    2. 'b' → logprob: -7.251765251159668
    3. 'board' → logprob: -7.376765251159668
    4. ' board' → logprob: -7.876765251159668
    5. ' b' → logprob: -10.126765251159668
    6. '          ' → logprob: -13.001765251159668
    7. '
' → logprob: -13.126765251159668
    8. '       ' → logprob: -13.876765251159668
    9. '   ' → logprob: -13.876765251159668
    10. '	board' → logprob: -14.001765251159668

Token 901: ' board' (ID: 6796)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' (adapté à ' board') → logprob: -0.008667871356010437
    2. ' board' → logprob: -4.758667945861816
    3. '           ' → logprob: -10.008667945861816
    4. 'b' → logprob: -11.758667945861816
    5. 'solver' → logprob: -15.383667945861816
    6. '	board' → logprob: -16.1336669921875
    7. '_board' → logprob: -17.2586669921875
    8. 'Board' → logprob: -17.2586669921875
    9. '               ' → logprob: -17.2586669921875
    10. '   ' → logprob: -17.6336669921875

Token 902: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020699352025986
    2. '=' → logprob: -2.3502070903778076
    3. '   ' → logprob: -15.100207328796387
    4. '    ' → logprob: -18.10020637512207
    5. ' ' → logprob: -18.10020637512207
    6. ')' → logprob: -18.22520637512207
    7. ':' → logprob: -18.35020637512207
    8. '.' → logprob: -18.47520637512207
    9. ' =
' → logprob: -19.22520637512207
    10. '=
' → logprob: -19.22520637512207

Token 903: ' Board' (ID: 10837)
  Prédit: 'Board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Board' → logprob: -0.0019286326132714748
    2. ' Board' → logprob: -6.251928806304932
    3. '(Board' → logprob: -19.751928329467773
    4. '   ' → logprob: -21.126928329467773
    5. '.Board' → logprob: -22.876928329467773
    6. 'board' → logprob: -23.126928329467773
    7. '_board' → logprob: -23.376928329467773
    8. 'Book' → logprob: -23.626928329467773
    9. 'Boards' → logprob: -23.751928329467773
    10. 'BOARD' → logprob: -24.001928329467773

Token 904: '(data' (ID: 4819)
  Prédit: '(data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(data' → logprob: -1.0280383548888494e-06
    2. '(rows' → logprob: -14.625000953674316
    3. '(' → logprob: -14.875000953674316
    4. 'data' → logprob: -15.375000953674316
    5. '(d' → logprob: -19.625001907348633
    6. '[data' → logprob: -20.250001907348633
    7. '(row' → logprob: -20.625001907348633
    8. '=data' → logprob: -21.000001907348633
    9. '(len' → logprob: -21.250001907348633
    10. '(
' → logprob: -21.375001907348633

Token 905: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.062006447464227676
    2. ')' → logprob: -2.8120064735412598
    3. '           ' → logprob: -10.687005996704102
    4. ')
' → logprob: -11.187005996704102
    5. '       ' → logprob: -14.187005996704102
    6. ').' → logprob: -14.812005996704102
    7. ')

' → logprob: -15.187005996704102
    8. '               ' → logprob: -15.437005996704102
    9. ' )
' → logprob: -16.1870059967041
    10. '())
' → logprob: -16.1870059967041

Token 906: '           ' (ID: 352)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.3017720878124237
    2. '           ' → logprob: -1.551772117614746
    3. 'results' → logprob: -3.551772117614746
    4. '       ' → logprob: -4.051772117614746
    5. 'result' → logprob: -6.301772117614746
    6. ' while' → logprob: -7.426772117614746
    7. 'score' → logprob: -9.926772117614746
    8. '
' → logprob: -10.176772117614746
    9. ' results' → logprob: -11.801772117614746
    10. 'scores' → logprob: -12.051772117614746

Token 907: ' score' (ID: 8429)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.1807117462158203
    2. 'score' (adapté à ' score') → logprob: -2.4307117462158203
    3. 'while' → logprob: -2.9307117462158203
    4. 'result' → logprob: -3.9307117462158203
    5. '           ' → logprob: -5.55571174621582
    6. 'scores' → logprob: -8.68071174621582
    7. ' results' → logprob: -8.80571174621582
    8. 'total' → logprob: -9.43071174621582
    9. ' while' → logprob: -9.80571174621582
    10. 'res' → logprob: -11.05571174621582

Token 908: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759406089782715
    2. '=' → logprob: -0.8259406089782715
    3. 'score' → logprob: -14.95094108581543
    4. 's' → logprob: -15.82594108581543
    5. '   ' → logprob: -15.95094108581543
    6. '.append' → logprob: -15.95094108581543
    7. ' ' → logprob: -16.07594108581543
    8. '+=' → logprob: -16.20094108581543
    9. ' +=' → logprob: -16.57594108581543
    10. ':' → logprob: -17.20094108581543

Token 909: ' board' (ID: 6796)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.0024758970830589533
    2. ' board' → logprob: -6.002475738525391
    3. '           ' → logprob: -15.62747573852539
    4. '	board' → logprob: -18.37747573852539
    5. '(board' → logprob: -19.37747573852539
    6. 'boards' → logprob: -21.25247573852539
    7. '.board' → logprob: -21.37747573852539
    8. 'Board' → logprob: -21.37747573852539
    9. '         ' → logprob: -21.50247573852539
    10. 'score' → logprob: -21.62747573852539

Token 910: '.solve' (ID: 151960)
  Prédit: '.solve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.solve' → logprob: -1.7954958821064793e-05
    2. '.' → logprob: -11.000018119812012
    3. 'solve' → logprob: -13.750018119812012
    4. ' .' → logprob: -16.625017166137695
    5. '.sol' → logprob: -17.000017166137695
    6. '   ' → logprob: -20.500017166137695
    7. '.resolve' → logprob: -20.500017166137695
    8. '.save' → logprob: -21.250017166137695
    9. '.s' → logprob: -21.250017166137695
    10. '.run' → logprob: -21.875017166137695

Token 911: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.10022079944610596
    2. '()
' → logprob: -2.3502206802368164
    3. '()
' → logprob: -11.350220680236816
    4. '()

' → logprob: -13.600220680236816
    5. '())' → logprob: -14.725220680236816
    6. '()`' → logprob: -15.225220680236816
    7. '()\' → logprob: -15.475220680236816
    8. '();' → logprob: -15.975220680236816
    9. ')' → logprob: -16.600221633911133
    10. '           ' → logprob: -16.600221633911133

Token 912: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000297685619443655
    2. 'results' → logprob: -8.250297546386719
    3. '
' → logprob: -10.625297546386719
    4. '       ' → logprob: -12.500297546386719
    5. ' results' → logprob: -13.000297546386719
    6. '(results' → logprob: -13.250297546386719
    7. '   ' → logprob: -13.750297546386719
    8. '               ' → logprob: -14.250297546386719
    9. '<|end|>' → logprob: -14.250297546386719
    10. '	results' → logprob: -14.375297546386719

Token 913: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.0001238004770129919
    2. ' results' → logprob: -9.000123977661133
    3. '           ' → logprob: -15.500123977661133
    4. '	results' → logprob: -16.000123977661133
    5. '.results' → logprob: -18.375123977661133
    6. '
' → logprob: -18.875123977661133
    7. '_results' → logprob: -19.375123977661133
    8. '(results' → logprob: -19.750123977661133
    9. '       ' → logprob: -20.250123977661133
    10. '-results' → logprob: -22.750123977661133

Token 914: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00015991552209015936
    2. '.' → logprob: -8.750160217285156
    3. '.extend' → logprob: -13.625160217285156
    4. '.app' → logprob: -16.125160217285156
    5. '.push' → logprob: -17.250160217285156
    6. ' .' → logprob: -17.250160217285156
    7. 'append' → logprob: -17.375160217285156
    8. '.Append' → logprob: -18.125160217285156
    9. '.ap' → logprob: -18.250160217285156
    10. '.add' → logprob: -18.375160217285156

Token 915: '(score' (ID: 70244)
  Prédit: '(score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(score' → logprob: -3.5597102396423e-05
    2. 'score' → logprob: -10.250035285949707
    3. '(' → logprob: -16.375036239624023
    4. '(scores' → logprob: -19.125036239624023
    5. ' score' → logprob: -19.875036239624023
    6. '(
' → logprob: -20.625036239624023
    7. '	score' → logprob: -20.875036239624023
    8. '(sc' → logprob: -22.625036239624023
    9. ' (' → logprob: -23.500036239624023
    10. '_score' → logprob: -24.125036239624023

Token 916: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002772189909592271
    2. ')
' → logprob: -6.002772331237793
    3. '       ' → logprob: -8.877772331237793
    4. '
' → logprob: -9.752772331237793
    5. '<|end|>' → logprob: -10.252772331237793
    6. ')return' → logprob: -10.627772331237793
    7. '           ' → logprob: -10.752772331237793
    8. '```' → logprob: -12.502772331237793
    9. '   ' → logprob: -13.502772331237793
    10. '               ' → logprob: -13.752772331237793

Token 917: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03253913298249245
    2. 'return' → logprob: -3.657539129257202
    3. '
' → logprob: -5.782539367675781
    4. '	' → logprob: -6.782539367675781
    5. ' return' → logprob: -7.782539367675781
    6. '   ' → logprob: -7.782539367675781
    7. '	return' → logprob: -7.907539367675781
    8. '```' → logprob: -7.907539367675781
    9. '        
' → logprob: -8.657539367675781
    10. '[' → logprob: -10.157539367675781

Token 918: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.013283521868288517
    2. '       ' → logprob: -4.638283729553223
    3. '
' → logprob: -5.763283729553223
    4. ' return' → logprob: -8.888283729553223
    5. '   ' → logprob: -9.013283729553223
    6. '```' → logprob: -9.388283729553223
    7. '	return' → logprob: -11.638283729553223
    8. '        
' → logprob: -11.638283729553223
    9. 'r' → logprob: -12.638283729553223
    10. '\' → logprob: -12.888283729553223

Token 919: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.0004307884373702109
    2. ' results' → logprob: -7.750430583953857
    3. 'scores' → logprob: -17.000431060791016
    4. '(results' → logprob: -19.375431060791016
    5. '	results' → logprob: -19.500431060791016
    6. 'score' → logprob: -21.000431060791016
    7. '.results' → logprob: -22.875431060791016
    8. ' scores' → logprob: -23.250431060791016
    9. 'result' → logprob: -23.875431060791016
    10. '[' → logprob: -24.125431060791016

Token 920: '

' (ID: 279)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.741476833820343
    2. 'def' → logprob: -0.991476833820343
    3. '<|end|>' → logprob: -2.1164767742156982
    4. '#' → logprob: -3.8664767742156982
    5. '```' → logprob: -5.116477012634277
    6. 'import' → logprob: -5.616477012634277
    7. ' if' → logprob: -6.991477012634277
    8. '<|end|>' → logprob: -8.366477012634277
    9. 'from' → logprob: -8.616477012634277
    10. '...' → logprob: -10.616477012634277

Token 921: 'def' (ID: 1314)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.8262482285499573
    2. '<|end|>' → logprob: -0.9512482285499573
    3. '#' → logprob: -1.9512481689453125
    4. 'import' → logprob: -4.4512481689453125
    5. 'def' → logprob: -4.4512481689453125
    6. 'from' → logprob: -5.2012481689453125
    7. 'if' → logprob: -5.8262481689453125
    8. '<|end|>' → logprob: -6.5762481689453125
    9. 'If' → logprob: -8.826248168945312
    10. '[' → logprob: -9.326248168945312

Token 922: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.5759732127189636
    2. ' main' → logprob: -0.8259732127189636
    3. ' run' → logprob: -11.200973510742188
    4. ' read' → logprob: -11.950973510742188
    5. 'run' → logprob: -12.325973510742188
    6. 'read' → logprob: -12.450973510742188
    7. ' solve' → logprob: -13.325973510742188
    8. 'parse' → logprob: -13.450973510742188
    9. ' parse' → logprob: -13.450973510742188
    10. 'solve' → logprob: -14.325973510742188

Token 923: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -5.0259150157216936e-05
    2. '():
' → logprob: -10.00005054473877
    3. ' ():' → logprob: -12.62505054473877
    4. '()' → logprob: -13.62505054473877
    5. '():
' → logprob: -15.25005054473877
    6. '():

' → logprob: -18.375049591064453
    7. '()>' → logprob: -18.875049591064453
    8. '().' → logprob: -19.625049591064453
    9. '(' → logprob: -19.750049591064453
    10. ':' → logprob: -20.000049591064453

Token 924: '   ' (ID: 271)
  Prédit: ' import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.34251129627227783
    2. 'import' → logprob: -1.3425112962722778
    3. '   ' → logprob: -4.092511177062988
    4. ' lines' → logprob: -4.467511177062988
    5. '	import' → logprob: -7.592511177062988
    6. 'lines' → logprob: -9.342511177062988
    7. '```' → logprob: -10.467511177062988
    8. '	lines' → logprob: -11.717511177062988
    9. ' input' → logprob: -12.092511177062988
    10. '   ' → logprob: -12.342511177062988

Token 925: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' (adapté à ' import') → logprob: -0.1602344810962677
    2. ' import' → logprob: -1.9102344512939453
    3. '   ' → logprob: -11.660234451293945
    4. 'parser' → logprob: -14.160234451293945
    5. ' parser' → logprob: -14.410234451293945
    6. '	import' → logprob: -15.660234451293945
    7. ' lines' → logprob: -16.035234451293945
    8. '```' → logprob: -16.160234451293945
    9. 'lines' → logprob: -16.410234451293945
    10. 'from' → logprob: -16.660234451293945

Token 926: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -7.941850526549388e-06
    2. ' sys' → logprob: -11.750007629394531
    3. '=sys' → logprob: -18.12500762939453
    4. '(sys' → logprob: -19.75000762939453
    5. '	sys' → logprob: -20.00000762939453
    6. 'io' → logprob: -21.12500762939453
    7. '.sys' → logprob: -21.37500762939453
    8. 'stdin' → logprob: -21.75000762939453
    9. 'os' → logprob: -21.87500762939453
    10. '_sys' → logprob: -22.00000762939453

Token 927: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07290655374526978
    2. ' lines' → logprob: -2.947906494140625
    3. 'lines' → logprob: -4.072906494140625
    4. '	lines' → logprob: -7.322906494140625
    5. 'input' → logprob: -9.447906494140625
    6. '(lines' → logprob: -10.322906494140625
    7. '_lines' → logprob: -10.822906494140625
    8. ' input' → logprob: -11.572906494140625
    9. '```' → logprob: -11.822906494140625
    10. 'for' → logprob: -11.822906494140625

Token 928: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012030858546495438
    2. ' lines' → logprob: -4.637031078338623
    3. 'lines' → logprob: -6.387031078338623
    4. '	lines' → logprob: -7.512031078338623
    5. '(lines' → logprob: -11.262030601501465
    6. 'input' → logprob: -11.262030601501465
    7. '_lines' → logprob: -11.887030601501465
    8. '```' → logprob: -12.387030601501465
    9. ' input' → logprob: -12.887030601501465
    10. '   ' → logprob: -14.512030601501465

Token 929: ' input' (ID: 3422)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.046737223863601685
    2. ' lines' → logprob: -3.2967371940612793
    3. '   ' → logprob: -4.796737194061279
    4. 'input' (adapté à ' input') → logprob: -7.921737194061279
    5. ' input' → logprob: -11.296737670898438
    6. '	lines' → logprob: -11.296737670898438
    7. 'data' → logprob: -12.546737670898438
    8. 'inputs' → logprob: -12.796737670898438
    9. '_lines' → logprob: -13.046737670898438
    10. 'for' → logprob: -13.046737670898438

Token 930: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.004507020115852356
    2. '_data' → logprob: -6.254507064819336
    3. ' =' → logprob: -6.379507064819336
    4. '_' → logprob: -7.504507064819336
    5. '=' → logprob: -8.504507064819336
    6. '()' → logprob: -9.254507064819336
    7. 'lines' → logprob: -11.254507064819336
    8. '_line' → logprob: -12.004507064819336
    9. '_=' → logprob: -13.004507064819336
    10. 'data' → logprob: -13.379507064819336

Token 931: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.048604074865579605
    2. ' =' → logprob: -3.0486040115356445
    3. '=[]' → logprob: -11.673604011535645
    4. '=sys' → logprob: -12.423604011535645
    5. '()' → logprob: -12.798604011535645
    6. '＝' → logprob: -14.423604011535645
    7. '   ' → logprob: -15.423604011535645
    8. '	' → logprob: -15.798604011535645
    9. '_' → logprob: -15.923604011535645
    10. '=[]
' → logprob: -16.29860496520996

Token 932: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.029767150059342384
    2. ' sys' → logprob: -3.5297670364379883
    3. '[' → logprob: -11.029767036437988
    4. ' [' → logprob: -14.904767036437988
    5. '(sys' → logprob: -16.779767990112305
    6. '	sys' → logprob: -17.029767990112305
    7. '=sys' → logprob: -17.654767990112305
    8. 'list' → logprob: -18.279767990112305
    9. '   ' → logprob: -19.529767990112305
    10. '/sys' → logprob: -20.779767990112305

Token 933: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0001170132018160075
    2. 'stdin' → logprob: -10.000117301940918
    3. '.readlines' → logprob: -11.375117301940918
    4. 'd' → logprob: -11.625117301940918
    5. '(stdin' → logprob: -11.625117301940918
    6. 's' → logprob: -11.875117301940918
    7. '().' → logprob: -12.250117301940918
    8. 'din' → logprob: -12.250117301940918
    9. 'in' → logprob: -12.625117301940918
    10. '=' → logprob: -12.750117301940918

Token 934: '.read' (ID: 7211)
  Prédit: '.readlines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readlines' → logprob: -0.09422019124031067
    2. '.read' → logprob: -2.5942201614379883
    3. 'read' → logprob: -4.344220161437988
    4. '.readline' → logprob: -6.219220161437988
    5. '.' → logprob: -8.344220161437988
    6. '   ' → logprob: -13.844220161437988
    7. '_read' → logprob: -13.844220161437988
    8. ' .' → logprob: -14.719220161437988
    9. 'lines' → logprob: -15.469220161437988
    10. '=' → logprob: -15.719220161437988

Token 935: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.7610454708337784e-05
    2. '()' → logprob: -10.500027656555176
    3. 'lines' → logprob: -17.25002670288086
    4. '_lines' → logprob: -17.87502670288086
    5. '.split' → logprob: -18.12502670288086
    6. ' ().' → logprob: -18.37502670288086
    7. '()
' → logprob: -18.87502670288086
    8. '(' → logprob: -19.62502670288086
    9. '()

' → logprob: -20.75002670288086
    10. 'split' → logprob: -20.75002670288086

Token 936: 'strip' (ID: 23905)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.16804201900959015
    2. 'strip' → logprob: -2.418041944503784
    3. 'read' → logprob: -3.418041944503784
    4. 'decode' → logprob: -3.418041944503784
    5. 'rstrip' → logprob: -10.918042182922363
    6. 'lines' → logprob: -11.168042182922363
    7. 'replace' → logprob: -16.293041229248047
    8. ' split' → logprob: -16.918041229248047
    9. '(split' → logprob: -17.168041229248047
    10. 'text' → logprob: -17.793041229248047

Token 937: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0004309076175559312
    2. '()' → logprob: -7.750431060791016
    3. '()
' → logprob: -15.750431060791016
    4. '()\' → logprob: -17.125431060791016
    5. '('\' → logprob: -17.500431060791016
    6. ' ().' → logprob: -18.500431060791016
    7. 'split' → logprob: -18.750431060791016
    8. '(' → logprob: -19.000431060791016
    9. '()`' → logprob: -19.250431060791016
    10. '()

' → logprob: -19.250431060791016

Token 938: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.9361264946837764e-07
    2. ' split' → logprob: -16.5
    3. '(split' → logprob: -20.5
    4. 'spl' → logprob: -21.125
    5. '.split' → logprob: -23.875
    6. 'lines' → logprob: -24.5
    7. '_split' → logprob: -24.5
    8. 'strip' → logprob: -24.75
    9. 'rstrip' → logprob: -25.375
    10. 'decode' → logprob: -25.375

Token 939: '('\' (ID: 24345)
  Prédit: '('\'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('\' → logprob: -0.015846190974116325
    2. 'lines' → logprob: -4.265846252441406
    3. '("\' → logprob: -6.515846252441406
    4. '()' → logprob: -8.515846252441406
    5. ''\' → logprob: -14.265846252441406
    6. '()\' → logprob: -14.765846252441406
    7. '(' → logprob: -16.140846252441406
    8. '()
' → logprob: -16.140846252441406
    9. '('' → logprob: -16.765846252441406
    10. '"\' → logprob: -17.265846252441406

Token 940: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.5048530030981055e-06
    2. '\n' → logprob: -13.500001907348633
    3. 'lines' → logprob: -19.625001907348633
    4. ' n' → logprob: -20.750001907348633
    5. '
' → logprob: -21.125001907348633
    6. 'newline' → logprob: -21.500001907348633
    7. 'ndef' → logprob: -21.625001907348633
    8. '```' → logprob: -22.750001907348633
    9. '	n' → logprob: -23.000001907348633
    10. '\' → logprob: -23.250001907348633

Token 941: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00041243841405957937
    2. '')' → logprob: -8.125411987304688
    3. '   ' → logprob: -10.000411987304688
    4. ')
' → logprob: -10.000411987304688
    5. '")' → logprob: -10.625411987304688
    6. ' )' → logprob: -14.375411987304688
    7. '`)' → logprob: -15.750411987304688
    8. ')`' → logprob: -16.000411987304688
    9. ']' → logprob: -16.250411987304688
    10. ')
' → logprob: -16.625411987304688

Token 942: '   ' (ID: 271)
  Prédit: 'parser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parser' → logprob: -0.2097969502210617
    2. '   ' → logprob: -1.7097969055175781
    3. ' parser' → logprob: -4.834796905517578
    4. '	parser' → logprob: -8.584796905517578
    5. 'pp' → logprob: -8.834796905517578
    6. '_parser' → logprob: -10.209796905517578
    7. '```' → logprob: -11.584796905517578
    8. '.parser' → logprob: -12.459796905517578
    9. '
' → logprob: -12.584796905517578
    10. '    
' → logprob: -12.584796905517578

Token 943: ' parser' (ID: 14216)
  Prédit: 'parser'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parser' (adapté à ' parser') → logprob: -2.248469718324486e-05
    2. ' parser' → logprob: -10.750022888183594
    3. 'pp' → logprob: -14.000022888183594
    4. '   ' → logprob: -16.125022888183594
    5. '	parser' → logprob: -19.500022888183594
    6. 'parse' → logprob: -19.625022888183594
    7. 'Parser' → logprob: -20.125022888183594
    8. '_parser' → logprob: -20.500022888183594
    9. 'solver' → logprob: -20.500022888183594
    10. 'parsed' → logprob: -21.000022888183594

Token 944: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011146149598062038
    2. '=' → logprob: -4.511146068572998
    3. '=parse' → logprob: -9.636146545410156
    4. '.parse' → logprob: -10.386146545410156
    5. 'parse' → logprob: -13.761146545410156
    6. 'parser' → logprob: -14.511146545410156
    7. '_parser' → logprob: -15.761146545410156
    8. '.parser' → logprob: -16.261146545410156
    9. 'Parser' → logprob: -16.386146545410156
    10. '.Parser' → logprob: -17.511146545410156

Token 945: ' Puzzle' (ID: 90259)
  Prédit: 'Puzzle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Puzzle' → logprob: -8.061054359131958e-06
    2. ' Puzzle' → logprob: -11.750007629394531
    3. 'Parser' → logprob: -16.37500762939453
    4. 'P' → logprob: -17.62500762939453
    5. 'Pizza' → logprob: -19.37500762939453
    6. 'Potion' → logprob: -20.25000762939453
    7. 'Poker' → logprob: -21.00000762939453
    8. 'Pie' → logprob: -21.50000762939453
    9. 'Palindrome' → logprob: -22.00000762939453
    10. '	P' → logprob: -22.12500762939453

Token 946: 'Parser' (ID: 9231)
  Prédit: 'Parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parser' → logprob: -2.1008713702030946e-06
    2. 'parser' → logprob: -13.125001907348633
    3. 'Solver' → logprob: -16.625001907348633
    4. '_parser' → logprob: -18.875001907348633
    5. '.Parser' → logprob: -19.500001907348633
    6. 'Parse' → logprob: -19.750001907348633
    7. '-parser' → logprob: -20.750001907348633
    8. ' Parser' → logprob: -20.750001907348633
    9. 'Puzzle' → logprob: -21.125001907348633
    10. '(Parser' → logprob: -21.250001907348633

Token 947: '()
' (ID: 1234)
  Prédit: 'parser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parser' → logprob: -0.432639479637146
    2. '   ' → logprob: -1.057639479637146
    3. '.parser' → logprob: -6.6826395988464355
    4. ' parser' → logprob: -6.9326395988464355
    5. '(parser' → logprob: -7.6826395988464355
    6. '.parse' → logprob: -7.9326395988464355
    7. '	parser' → logprob: -8.182639122009277
    8. '
' → logprob: -8.557639122009277
    9. 'parse' → logprob: -9.182639122009277
    10. '<|end|>' → logprob: -9.182639122009277

Token 948: '   ' (ID: 271)
  Prédit: 'parser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parser' → logprob: -0.576285719871521
    2. '   ' → logprob: -0.826285719871521
    3. ' parser' → logprob: -8.576285362243652
    4. '	parser' → logprob: -8.951285362243652
    5. '(parser' → logprob: -11.326285362243652
    6. '.parser' → logprob: -11.951285362243652
    7. 'parse' → logprob: -12.701285362243652
    8. '_parser' → logprob: -12.951285362243652
    9. '  ' → logprob: -13.701285362243652
    10. '
' → logprob: -13.951285362243652

Token 949: ' parser' (ID: 14216)
  Prédit: 'parser'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parser' (adapté à ' parser') → logprob: -5.200166469876422e-06
    2. ' parser' → logprob: -12.250004768371582
    3. '   ' → logprob: -15.750004768371582
    4. 'parse' → logprob: -16.7500057220459
    5. '	parser' → logprob: -17.0000057220459
    6. '.parser' → logprob: -17.6250057220459
    7. '_parser' → logprob: -18.0000057220459
    8. '(parser' → logprob: -18.5000057220459
    9. '
' → logprob: -18.7500057220459
    10. 'Parser' → logprob: -19.1250057220459

Token 950: '.parse' (ID: 7259)
  Prédit: '.parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parse' → logprob: -2.1008713702030946e-06
    2. '.' → logprob: -13.250001907348633
    3. '=parse' → logprob: -16.000001907348633
    4. 'parse' → logprob: -17.000001907348633
    5. ' .' → logprob: -17.125001907348633
    6. '.parser' → logprob: -17.375001907348633
    7. '.Parse' → logprob: -17.750001907348633
    8. '.process' → logprob: -19.625001907348633
    9. '.p' → logprob: -20.125001907348633
    10. '.decode' → logprob: -20.125001907348633

Token 951: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -5.240481914370321e-05
    2. 'input' → logprob: -9.875052452087402
    3. '(input' → logprob: -14.000052452087402
    4. 'Input' → logprob: -17.375051498413086
    5. '```' → logprob: -17.375051498413086
    6. '_output' → logprob: -18.500051498413086
    7. '_' → logprob: -18.625051498413086
    8. '
' → logprob: -19.000051498413086
    9. 'import' → logprob: -19.875051498413086
    10. '   ' → logprob: -19.875051498413086

Token 952: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -3.128163257315464e-07
    2. '(lines' → logprob: -15.875
    3. 'input' → logprob: -16.875
    4. '(output' → logprob: -18.5
    5. ',input' → logprob: -19.125
    6. ' (' → logprob: -19.375
    7. '[input' → logprob: -19.375
    8. '(import' → logprob: -19.875
    9. '(inputs' → logprob: -20.0
    10. '=input' → logprob: -20.0

Token 953: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -6.704273118884885e-07
    2. '```' → logprob: -16.0
    3. '(lines' → logprob: -16.125
    4. ')' → logprob: -16.125
    5. '   ' → logprob: -16.375
    6. '_LINES' → logprob: -16.625
    7. 'Lines' → logprob: -17.0
    8. '_layers' → logprob: -17.125
    9. 'lines' → logprob: -17.25
    10. '_' → logprob: -17.625

Token 954: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0728798434138298
    2. '   ' → logprob: -2.9478797912597656
    3. '<|end|>' → logprob: -4.072879791259766
    4. '()' → logprob: -7.697879791259766
    5. '<|end|>' → logprob: -8.697879791259766
    6. '
' → logprob: -10.072879791259766
    7. ')
' → logprob: -10.072879791259766
    8. '())' → logprob: -11.072879791259766
    9. ',' → logprob: -11.322879791259766
    10. ' )' → logprob: -11.572879791259766

Token 955: '   ' (ID: 271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' → logprob: -0.029014864936470985
    2. '   ' → logprob: -4.029015064239502
    3. ' solver' → logprob: -4.529015064239502
    4. 'sol' → logprob: -11.529014587402344
    5. '_solver' → logprob: -12.529014587402344
    6. 's' → logprob: -14.904014587402344
    7. 'Solver' → logprob: -15.529014587402344
    8. '  ' → logprob: -16.154014587402344
    9. '    
' → logprob: -16.154014587402344
    10. '
' → logprob: -16.154014587402344

Token 956: ' solver' (ID: 63271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' (adapté à ' solver') → logprob: -1.9361264946837764e-07
    2. ' solver' → logprob: -15.75
    3. 'sol' → logprob: -19.25
    4. 'results' → logprob: -20.75
    5. '   ' → logprob: -21.625
    6. 's' → logprob: -21.625
    7. 'resolver' → logprob: -21.875
    8. '_solver' → logprob: -22.875
    9. 'solutions' → logprob: -23.0
    10. 'Solver' → logprob: -23.875

Token 957: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0040785204619169235
    2. '=' → logprob: -5.504078388214111
    3. '.run' → logprob: -17.754077911376953
    4. '＝' → logprob: -18.004077911376953
    5. '.' → logprob: -18.629077911376953
    6. '=s' → logprob: -18.879077911376953
    7. ' ' → logprob: -19.504077911376953
    8. '.=' → logprob: -20.129077911376953
    9. ' =
' → logprob: -20.129077911376953
    10. '.solve' → logprob: -20.129077911376953

Token 958: ' Puzzle' (ID: 90259)
  Prédit: 'Puzzle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Puzzle' → logprob: -0.00861456897109747
    2. ' Puzzle' → logprob: -4.758614540100098
    3. '   ' → logprob: -20.008615493774414
    4. 'P' → logprob: -20.258615493774414
    5. 'Problem' → logprob: -20.633615493774414
    6. '	P' → logprob: -20.758615493774414
    7. ' puzzle' → logprob: -21.383615493774414
    8. 'Potion' → logprob: -21.758615493774414
    9. ' ' → logprob: -21.883615493774414
    10. '```' → logprob: -21.883615493774414

Token 959: 'Solver' (ID: 70484)
  Prédit: 'Solver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Solver' → logprob: -6.630610641877865e-06
    2. 'solver' → logprob: -12.000006675720215
    3. 'olver' → logprob: -15.875006675720215
    4. '_solver' → logprob: -16.3750057220459
    5. ' Solver' → logprob: -16.7500057220459
    6. 'Puzzle' → logprob: -16.8750057220459
    7. 'Resolver' → logprob: -18.8750057220459
    8. 'Parser' → logprob: -19.1250057220459
    9. 'Solve' → logprob: -19.5000057220459
    10. 'Runner' → logprob: -19.7500057220459

Token 960: '(parser' (ID: 82535)
  Prédit: '(parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parser' → logprob: -0.004128980450332165
    2. 'parser' → logprob: -5.504128932952881
    3. '   ' → logprob: -10.629129409790039
    4. '(' → logprob: -11.254129409790039
    5. '(p' → logprob: -11.879129409790039
    6. 'solver' → logprob: -12.754129409790039
    7. ' parser' → logprob: -13.254129409790039
    8. '(Parser' → logprob: -14.129129409790039
    9. '(parsed' → logprob: -15.004129409790039
    10. '	parser' → logprob: -15.504129409790039

Token 961: '.datasets' (ID: 136555)
  Prédit: '.datasets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.datasets' → logprob: -5.080963092041202e-06
    2. 'datasets' → logprob: -12.625004768371582
    3. '.datas' → logprob: -13.625004768371582
    4. ' .' → logprob: -15.500004768371582
    5. '.' → logprob: -16.1250057220459
    6. '.dataset' → logprob: -16.2500057220459
    7. ' datasets' → logprob: -17.2500057220459
    8. '.dat' → logprob: -17.3750057220459
    9. '.data' → logprob: -17.6250057220459
    10. '.results' → logprob: -17.8750057220459

Token 962: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0483296774327755
    2. '   ' → logprob: -3.6733295917510986
    3. ')
' → logprob: -4.548329830169678
    4. '()' → logprob: -4.798329830169678
    5. '()
' → logprob: -6.423329830169678
    6. '())' → logprob: -7.298329830169678
    7. 'solver' → logprob: -8.42332935333252
    8. '<|end|>' → logprob: -9.42332935333252
    9. '())
' → logprob: -9.54832935333252
    10. '<|end|>' → logprob: -9.54832935333252

Token 963: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16106072068214417
    2. 'results' → logprob: -1.9110606908798218
    3. ' results' → logprob: -8.161060333251953
    4. 'result' → logprob: -8.411060333251953
    5. 'for' → logprob: -8.786060333251953
    6. 'print' → logprob: -9.161060333251953
    7. 'output' → logprob: -11.036060333251953
    8. 'outputs' → logprob: -11.036060333251953
    9. 'scores' → logprob: -11.411060333251953
    10. '```' → logprob: -11.536060333251953

Token 964: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.0010931886499747634
    2. 'scores' → logprob: -7.00109338760376
    3. 'outputs' → logprob: -9.501092910766602
    4. ' results' → logprob: -9.626092910766602
    5. 'result' → logprob: -11.001092910766602
    6. 'for' → logprob: -11.251092910766602
    7. 'output' → logprob: -12.001092910766602
    8. 'answers' → logprob: -13.126092910766602
    9. '   ' → logprob: -13.251092910766602
    10. 'res' → logprob: -14.251092910766602

Token 965: ' =' (ID: 314)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.5008604526519775
    2. '.extend' → logprob: -1.2508604526519775
    3. '.' → logprob: -2.3758604526519775
    4. ' =' → logprob: -4.375860214233398
    5. '=' → logprob: -6.375860214233398
    6. '=[]' → logprob: -9.500860214233398
    7. '.=' → logprob: -9.750860214233398
    8. ' +=' → logprob: -10.000860214233398
    9. '[:]' → logprob: -10.125860214233398
    10. '.clear' → logprob: -10.375860214233398

Token 966: ' solver' (ID: 63271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' → logprob: -0.00861468818038702
    2. ' solver' → logprob: -4.758614540100098
    3. 'sol' → logprob: -15.883614540100098
    4. '_solver' → logprob: -19.758615493774414
    5. 'Solver' → logprob: -21.883615493774414
    6. '   ' → logprob: -22.758615493774414
    7. 'solve' → logprob: -23.008615493774414
    8. 'resolver' → logprob: -23.008615493774414
    9. '(s' → logprob: -23.508615493774414
    10. 'solution' → logprob: -23.633615493774414

Token 967: '.run' (ID: 14795)
  Prédit: '.run'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.run' → logprob: -1.759734732331708e-05
    2. '.' → logprob: -11.000017166137695
    3. ' .' → logprob: -14.000017166137695
    4. 'run' → logprob: -17.500017166137695
    5. '   ' → logprob: -19.250017166137695
    6. '.results' → logprob: -19.375017166137695
    7. '.Run' → logprob: -19.375017166137695
    8. '`.' → logprob: -19.500017166137695
    9. '```' → logprob: -19.500017166137695
    10. '\.' → logprob: -20.250017166137695

Token 968: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005753987934440374
    2. '
' → logprob: -5.755753993988037
    3. 'for' → logprob: -6.005753993988037
    4. ' for' → logprob: -9.255753517150879
    5. '    
' → logprob: -11.380753517150879
    6. '	for' → logprob: -14.130753517150879
    7. '```' → logprob: -15.255753517150879
    8. '<|end|>' → logprob: -15.505753517150879
    9. '
' → logprob: -16.380754470825195
    10. '  
' → logprob: -17.380754470825195

Token 969: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1003446951508522
    2. 'for' → logprob: -2.350344657897949
    3. ' for' → logprob: -9.22534465789795
    4. '```' → logprob: -10.47534465789795
    5. '
' → logprob: -12.10034465789795
    6. '	for' → logprob: -12.47534465789795
    7. 'import' → logprob: -14.22534465789795
    8. '    
' → logprob: -14.35034465789795
    9. '``' → logprob: -15.60034465789795
    10. '       ' → logprob: -15.97534465789795

Token 970: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -4.596781946020201e-05
    2. '   ' → logprob: -10.250045776367188
    3. ' for' → logprob: -12.125045776367188
    4. '
' → logprob: -12.500045776367188
    5. 'print' → logprob: -14.125045776367188
    6. 'import' → logprob: -15.125045776367188
    7. '```' → logprob: -15.250045776367188
    8. '    
' → logprob: -16.625045776367188
    9. '	for' → logprob: -16.750045776367188
    10. 'from' → logprob: -18.000045776367188

Token 971: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.04492245241999626
    2. 'score' → logprob: -3.294922351837158
    3. 'result' → logprob: -5.044922351837158
    4. 'r' → logprob: -7.794922351837158
    5. ' res' → logprob: -12.544922828674316
    6. ' score' → logprob: -16.044921875
    7. ' result' → logprob: -19.544921875
    8. '(score' → logprob: -20.294921875
    9. 'ans' → logprob: -20.544921875
    10. ' r' → logprob: -20.544921875

Token 972: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.23132668435573578
    2. 'ult' → logprob: -1.606326699256897
    3. 'ults' → logprob: -5.606326580047607
    4. 'ault' → logprob: -6.731326580047607
    5. ' ' → logprob: -8.481327056884766
    6. '   ' → logprob: -8.856327056884766
    7. 'ut' → logprob: -8.981327056884766
    8. 'ul' → logprob: -9.231327056884766
    9. 'ultat' → logprob: -9.481327056884766
    10. 'alt' → logprob: -9.481327056884766

Token 973: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -9.088346359931165e-07
    2. ' results' → logprob: -14.000000953674316
    3. '(results' → logprob: -19.25
    4. '
' → logprob: -22.5
    5. '	results' → logprob: -22.75
    6. '.results' → logprob: -25.0
    7. 'result' → logprob: -25.0
    8. 'Results' → logprob: -25.375
    9. '_results' → logprob: -25.875
    10. '   ' → logprob: -25.875

Token 974: ':
' (ID: 734)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.28216636180877686
    2. ':' → logprob: -2.6571664810180664
    3. '       ' → logprob: -2.7821664810180664
    4. ':
' → logprob: -2.9071664810180664
    5. '   ' → logprob: -3.0321664810180664
    6. ' print' → logprob: -5.282166481018066
    7. ',' → logprob: -6.407166481018066
    8. '.print' → logprob: -6.532166481018066
    9. '.println' → logprob: -7.407166481018066
    10. '(print' → logprob: -7.907166481018066

Token 975: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3173450827598572
    2. 'print' → logprob: -1.317345142364502
    3. '   ' → logprob: -5.817345142364502
    4. ' print' → logprob: -6.817345142364502
    5. '```' → logprob: -12.317344665527344
    6. '	print' → logprob: -15.442344665527344
    7. '           ' → logprob: -16.567344665527344
    8. '
' → logprob: -16.567344665527344
    9. '``' → logprob: -17.192344665527344
    10. '     ' → logprob: -17.817344665527344

Token 976: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -3.128163257315464e-07
    2. ' print' → logprob: -15.5
    3. '   ' → logprob: -17.0
    4. '```' → logprob: -22.75
    5. '       ' → logprob: -25.125
    6. '	print' → logprob: -25.5
    7. '
' → logprob: -25.5
    8. 'println' → logprob: -26.125
    9. 'printf' → logprob: -27.375
    10. '``' → logprob: -27.5

Token 977: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.0005530327325686812
    2. 'res' → logprob: -7.500553131103516
    3. ' res' → logprob: -19.250553131103516
    4. '$res' → logprob: -20.625553131103516
    5. '(' → logprob: -20.875553131103516
    6. '=res' → logprob: -22.125553131103516
    7. ',res' → logprob: -22.500553131103516
    8. '	res' → logprob: -22.625553131103516
    9. '_res' → logprob: -23.250553131103516
    10. '(f' → logprob: -23.875553131103516

Token 978: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.941850526549388e-06
    2. '())' → logprob: -12.125007629394531
    3. '()' → logprob: -13.625007629394531
    4. ' )' → logprob: -14.000007629394531
    5. ')
' → logprob: -14.875007629394531
    6. ')`' → logprob: -17.00000762939453
    7. '")' → logprob: -17.87500762939453
    8. '))' → logprob: -18.00000762939453
    9. '   ' → logprob: -18.75000762939453
    10. '`)' → logprob: -18.87500762939453

Token 979: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00011236425780225545
    2. '```' → logprob: -9.875112533569336
    3. '<|end|>' → logprob: -10.250112533569336
    4. ' if' → logprob: -10.750112533569336
    5. '#' → logprob: -13.375112533569336
    6. '
' → logprob: -13.875112533569336
    7. '  
' → logprob: -14.625112533569336
    8. '    
' → logprob: -15.000112533569336
    9. 'main' → logprob: -16.125112533569336
    10. '<|end|>' → logprob: -16.500112533569336

Token 980: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.31332382559776306
    2. ' __' → logprob: -1.3133238554000854
    3. 'name' → logprob: -10.438323974609375
    4. '_name' → logprob: -11.563323974609375
    5. ' ' → logprob: -12.063323974609375
    6. '___' → logprob: -12.188323974609375
    7. '```' → logprob: -12.313323974609375
    8. ' ' → logprob: -13.063323974609375
    9. '_' → logprob: -13.438323974609375
    10. '​' → logprob: -13.813323974609375

Token 981: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.014084049500524998
    2. '==' → logprob: -5.0140838623046875
    3. ' ==' → logprob: -5.0140838623046875
    4. 'name' → logprob: -8.139083862304688
    5. ' __' → logprob: -8.264083862304688
    6. '=="' → logprob: -9.639083862304688
    7. '[' → logprob: -10.889083862304688
    8. 'main' → logprob: -11.139083862304688
    9. '=='' → logprob: -11.639083862304688
    10. 'if' → logprob: -12.014083862304688

Token 982: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.2664456789934775e-06
    2. '__.__' → logprob: -14.125000953674316
    3. '==' → logprob: -15.000000953674316
    4. '____' → logprob: -16.375001907348633
    5. '__.' → logprob: -16.500001907348633
    6. '___' → logprob: -17.125001907348633
    7. 'name' → logprob: -17.500001907348633
    8. ' ==' → logprob: -17.750001907348633
    9. '=="' → logprob: -18.875001907348633
    10. '__["' → logprob: -19.000001907348633

Token 983: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.48554539680480957
    2. '==' → logprob: -0.9855453968048096
    3. ' ==' → logprob: -5.1105451583862305
    4. '=="' → logprob: -5.2355451583862305
    5. '=='' → logprob: -10.36054515838623
    6. '===' → logprob: -12.61054515838623
    7. '___' → logprob: -13.11054515838623
    8. '=' → logprob: -13.11054515838623
    9. '["' → logprob: -13.48554515838623
    10. '_' → logprob: -13.61054515838623

Token 984: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0067170290276408195
    2. ''' → logprob: -5.006717205047607
    3. '__' → logprob: -13.50671672821045
    4. ' "__' → logprob: -15.38171672821045
    5. '"name' → logprob: -17.381717681884766
    6. '"user' → logprob: -18.631717681884766
    7. ''"' → logprob: -18.881717681884766
    8. '"class' → logprob: -19.006717681884766
    9. '   ' → logprob: -19.381717681884766
    10. '"'' → logprob: -19.506717681884766

Token 985: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.25221073627471924
    2. '__' → logprob: -1.5022107362747192
    3. 'name' → logprob: -8.50221061706543
    4. '"' → logprob: -9.62721061706543
    5. '_main' → logprob: -11.87721061706543
    6. '__":
' → logprob: -13.75221061706543
    7. ''' → logprob: -14.00221061706543
    8. ' main' → logprob: -14.62721061706543
    9. '___' → logprob: -14.62721061706543
    10. '```' → logprob: -14.75221061706543

Token 986: '__":
' (ID: 49892)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.20173987746238708
    2. '__":
' → logprob: -1.7017399072647095
    3. '__':
' → logprob: -8.951740264892578
    4. '__:' → logprob: -9.201740264892578
    5. '__.' → logprob: -9.951740264892578
    6. '__.__' → logprob: -10.326740264892578
    7. '__["' → logprob: -12.076740264892578
    8. '__
' → logprob: -12.701740264892578
    9. '__
' → logprob: -13.701740264892578
    10. '__",' → logprob: -13.701740264892578

Token 987: '   ' (ID: 271)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.35886842012405396
    2. ''' → logprob: -1.7338683605194092
    3. '__' → logprob: -2.108868360519409
    4. '   ' → logprob: -6.233868598937988
    5. 'main' → logprob: -6.608868598937988
    6. ' "__' → logprob: -9.983868598937988
    7. '('__' → logprob: -10.108868598937988
    8. '_main' → logprob: -10.608868598937988
    9. ''m' → logprob: -10.983868598937988
    10. '____' → logprob: -10.983868598937988

Token 988: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -3.128163257315464e-07
    2. ' main' → logprob: -15.75
    3. '   ' → logprob: -16.5
    4. '	main' → logprob: -19.125
    5. '_main' → logprob: -23.375
    6. '(main' → logprob: -23.875
    7. '.main' → logprob: -24.375
    8. 'import' → logprob: -24.625
    9. '  ' → logprob: -26.875
    10. '```' → logprob: -27.0

Token 989: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 987
Tokens correctement prédits (1ère position, stricte): 425
Tokens correctement prédits (1ère position, avec adaptation): 493
Tokens correctement prédits (top 10): 861
Précision stricte (1ère position): 43.06%
Précision adaptée (1ère position): 49.95%
Précision (top 10): 87.23%
================================================================================
