================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:10:20
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
input = sys.stdin.readline

while True:
    n = int(input())
    if n == 0:
        break
    grid = [input().rstrip() for _ in range(n)]

    dp = [0]*(n+1)
    max_side = 0
    for i in range(n):
        prev = 0
        for j in range(n):
            temp = dp[j+1]
            if grid[i][j] == '.':
                dp[j+1] = min(dp[j], dp[j+1], prev) + 1
                if dp[j+1] > max_side:
                    max_side = dp[j+1]
            else:
                dp[j+1] = 0
            prev = temp
    print(max_side)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'input' (ID: 2586)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.433769166469574
    2. '.' → logprob: -1.1837692260742188
    3. 'import' → logprob: -4.183769226074219
    4. '\' → logprob: -4.433769226074219
    5. 'newline' → logprob: -5.183769226074219
    6. '<|end|>' → logprob: -5.558769226074219
    7. '
' → logprob: -5.933769226074219
    8. '```' → logprob: -6.558769226074219
    9. '' → logprob: -7.058769226074219
    10. '<|end|>' → logprob: -7.308769226074219

Token 4: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.026836615055799484
    2. '.' → logprob: -3.651836633682251
    3. '(
' → logprob: -8.526836395263672
    4. ')' → logprob: -9.401836395263672
    5. '()' → logprob: -9.651836395263672
    6. ' (' → logprob: -10.401836395263672
    7. '=' → logprob: -10.401836395263672
    8. '(

' → logprob: -10.651836395263672
    9. '```' → logprob: -10.776836395263672
    10. ',' → logprob: -11.401836395263672

Token 5: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0314350426197052
    2. ' sys' → logprob: -3.531435012817383
    3. 'input' → logprob: -6.406435012817383
    4. ' input' → logprob: -10.781435012817383
    5. '	sys' → logprob: -12.406435012817383
    6. '(sys' → logprob: -12.406435012817383
    7. '=sys' → logprob: -12.781435012817383
    8. 'system' → logprob: -15.906435012817383
    9. 'lambda' → logprob: -16.406435012817383
    10. '_sys' → logprob: -16.406435012817383

Token 6: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.010973773896694183
    2. ' .' → logprob: -4.885973930358887
    3. '.stdin' → logprob: -6.010973930358887
    4. '.import' → logprob: -7.885973930358887
    5. '.readline' → logprob: -8.885973930358887
    6. '.argv' → logprob: -9.135973930358887
    7. '.input' → logprob: -9.885973930358887
    8. '.stdout' → logprob: -10.135973930358887
    9. '.
' → logprob: -10.635973930358887
    10. '.exit' → logprob: -10.760973930358887

Token 7: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.019614169374108315
    2. '.read' → logprob: -4.519614219665527
    3. '.' → logprob: -4.769614219665527
    4. '.readlines' → logprob: -10.519614219665527
    5. 'read' → logprob: -11.519614219665527
    6. '.Read' → logprob: -12.519614219665527
    7. '.buffer' → logprob: -13.769614219665527
    8. '<|end|>' → logprob: -14.019614219665527
    9. ' .' → logprob: -14.269614219665527
    10. ' readline' → logprob: -14.644614219665527

Token 8: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.12665244936943054
    2. '(' → logprob: -2.376652479171753
    3. '(
' → logprob: -4.251652240753174
    4. '()
' → logprob: -5.001652240753174
    5. '
' → logprob: -5.626652240753174
    6. '\n' → logprob: -8.126652717590332
    7. '()\' → logprob: -8.251652717590332
    8. '()

' → logprob: -8.501652717590332
    9. '().' → logprob: -8.626652717590332
    10. '(

' → logprob: -9.001652717590332

Token 9: 'while' (ID: 7032)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.34941479563713074
    2. '(' → logprob: -1.2244148254394531
    3. '().' → logprob: -7.849414825439453
    4. '(
' → logprob: -8.599414825439453
    5. '()
' → logprob: -8.724414825439453
    6. '()

' → logprob: -10.474414825439453
    7. 'a' → logprob: -10.599414825439453
    8. ')' → logprob: -10.849414825439453
    9. '.' → logprob: -10.849414825439453
    10. '#' → logprob: -11.224414825439453

Token 10: ' True' (ID: 6432)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0014905771240592003
    2. ' True' → logprob: -6.876490592956543
    3. '  ' → logprob: -7.876490592956543
    4. ' (' → logprob: -10.126490592956543
    5. ' not' → logprob: -11.751490592956543
    6. ' )' → logprob: -11.876490592956543
    7. '(' → logprob: -12.501490592956543
    8. '    ' → logprob: -12.501490592956543
    9. ' i' → logprob: -13.501490592956543
    10. 'True' → logprob: -13.501490592956543

Token 11: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0015696183545514941
    2. '():' → logprob: -6.626569747924805
    3. ' :' → logprob: -8.626569747924805
    4. '(:' → logprob: -11.251569747924805
    5. ':**' → logprob: -11.376569747924805
    6. '   ' → logprob: -11.876569747924805
    7. ':
' → logprob: -12.251569747924805
    8. ':return' → logprob: -12.376569747924805
    9. '':'' → logprob: -12.876569747924805
    10. '):' → logprob: -12.876569747924805

Token 12: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.056810617446899414
    2. '    
' → logprob: -4.05681037902832
    3. '  
' → logprob: -4.93181037902832
    4. ' ' → logprob: -4.93181037902832
    5. ' 
' → logprob: -4.93181037902832
    6. '    ' → logprob: -5.05681037902832
    7. '(' → logprob: -5.18181037902832
    8. '  ' → logprob: -7.30681037902832
    9. ':' → logprob: -7.68181037902832
    10. ' (' → logprob: -7.68181037902832

Token 13: ' n' (ID: 297)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.1521596610546112
    2. 'line' → logprob: -2.6521596908569336
    3. 'data' → logprob: -3.7771596908569336
    4. '   ' → logprob: -4.027159690856934
    5. ' user' → logprob: -4.652159690856934
    6. 'user' → logprob: -4.902159690856934
    7. '    ' → logprob: -5.152159690856934
    8. ' data' → logprob: -5.527159690856934
    9. ' ' → logprob: -6.777159690856934
    10. ' inp' → logprob: -7.902159690856934

Token 14: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3190760314464569
    2. '=' → logprob: -1.3190760612487793
    3. ' ==' → logprob: -5.569076061248779
    4. ' ' → logprob: -6.569076061248779
    5. '==' → logprob: -8.569075584411621
    6. '=int' → logprob: -8.694075584411621
    7. ' :=' → logprob: -9.069075584411621
    8. '=input' → logprob: -10.319075584411621
    9. ':=' → logprob: -11.319075584411621
    10. ' =)' → logprob: -11.569075584411621

Token 15: ' int' (ID: 677)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.16690035164356232
    2. 'input' → logprob: -2.541900396347046
    3. ' int' → logprob: -2.791900396347046
    4. 'int' → logprob: -4.291900157928467
    5. '=input' → logprob: -12.166900634765625
    6. '=int' → logprob: -12.791900634765625
    7. ' ' → logprob: -13.166900634765625
    8. '(input' → logprob: -13.791900634765625
    9. '   ' → logprob: -13.916900634765625
    10. '<int' → logprob: -14.541900634765625

Token 16: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.005301942583173513
    2. '(' → logprob: -5.2553019523620605
    3. 'input' → logprob: -9.630301475524902
    4. ' (' → logprob: -13.505301475524902
    5. '(in' → logprob: -15.380301475524902
    6. '(
' → logprob: -15.380301475524902
    7. ' input' → logprob: -15.630301475524902
    8. '()' → logprob: -15.880301475524902
    9. '=input' → logprob: -16.50530242919922
    10. ',input' → logprob: -17.00530242919922

Token 17: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.014523911289870739
    2. '()))' → logprob: -4.264523983001709
    3. '()' → logprob: -8.51452350616455
    4. ')' → logprob: -9.01452350616455
    5. '().' → logprob: -11.38952350616455
    6. '))' → logprob: -11.63952350616455
    7. ' ())' → logprob: -11.63952350616455
    8. '())
' → logprob: -12.51452350616455
    9. '(' → logprob: -13.01452350616455
    10. '()),' → logprob: -14.01452350616455

Token 18: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 19: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5090571641921997
    2. '<|end|>' → logprob: -2.00905704498291
    3. ' if' → logprob: -2.50905704498291
    4. '    ' → logprob: -2.88405704498291
    5. '   ' → logprob: -3.00905704498291
    6. '  ' → logprob: -3.88405704498291
    7. 'if' (adapté à ' if') → logprob: -4.25905704498291
    8. '\n' → logprob: -4.75905704498291
    9. ')' → logprob: -4.88405704498291
    10. ':' → logprob: -5.50905704498291

Token 20: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.006042085122317076
    2. ' not' → logprob: -5.131042003631592
    3. 'n' → logprob: -9.13104248046875
    4. ' ' → logprob: -12.75604248046875
    5. 'not' → logprob: -13.38104248046875
    6. '	n' → logprob: -14.63104248046875
    7. ' ' → logprob: -14.88104248046875
    8. ' н' → logprob: -18.13104248046875
    9. '	not' → logprob: -19.00604248046875
    10. '  ' → logprob: -19.75604248046875

Token 21: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.011170546524226665
    2. '==' → logprob: -4.511170387268066
    3. ' <=' → logprob: -9.261170387268066
    4. ' <' → logprob: -11.386170387268066
    5. ')' → logprob: -12.511170387268066
    6. '<=' → logprob: -12.636170387268066
    7. ' ' → logprob: -12.886170387268066
    8. '=' → logprob: -13.511170387268066
    9. ')==' → logprob: -13.636170387268066
    10. '<' → logprob: -13.886170387268066

Token 22: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02324605919420719
    2. '0' → logprob: -3.7732460498809814
    3. ' ' → logprob: -15.023245811462402
    4. '  ' → logprob: -16.27324676513672
    5. '   ' → logprob: -17.02324676513672
    6. '=' → logprob: -17.46074676513672
    7. ' EOF' → logprob: -17.58574676513672
    8. '    ' → logprob: -17.89824676513672
    9. '_' → logprob: -18.77324676513672
    10. 'EOF' → logprob: -18.83574676513672

Token 23: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003362966235727072
    2. ' ' → logprob: -8.000336647033691
    3. '-' → logprob: -15.250336647033691
    4. '```' → logprob: -15.875336647033691
    5. '42' → logprob: -16.250335693359375
    6. '1' → logprob: -17.187835693359375
    7. 'EOF' → logprob: -17.250335693359375
    8. '   ' → logprob: -17.312835693359375
    9. '``' → logprob: -17.625335693359375
    10. '  ' → logprob: -17.750335693359375

Token 24: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001499060745118186
    2. ':
' → logprob: -8.875149726867676
    3. '   ' → logprob: -12.125149726867676
    4. ' :' → logprob: -13.375149726867676
    5. ':return' → logprob: -13.875149726867676
    6. '	break' → logprob: -14.125149726867676
    7. ' break' → logprob: -14.500149726867676
    8. '       ' → logprob: -15.000149726867676
    9. '.' → logprob: -16.250150680541992
    10. '<|end|>' → logprob: -16.375150680541992

Token 25: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006833644583821297
    2. '   ' → logprob: -7.500683307647705
    3. ' break' → logprob: -9.500683784484863
    4. '	break' → logprob: -11.375683784484863
    5. '\n' → logprob: -11.375683784484863
    6. '    ' → logprob: -11.500683784484863
    7. '      ' → logprob: -12.375683784484863
    8. 'break' → logprob: -12.500683784484863
    9. '     ' → logprob: -12.625683784484863
    10. '<|end|>' → logprob: -13.000683784484863

Token 26: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24186408519744873
    2. ' break' → logprob: -1.6168640851974487
    3. 'break' (adapté à ' break') → logprob: -4.241864204406738
    4. '	break' → logprob: -6.866864204406738
    5. '   ' → logprob: -7.366864204406738
    6. '\n' → logprob: -8.491864204406738
    7. '           ' → logprob: -11.366864204406738
    8. '_break' → logprob: -11.366864204406738
    9. '\t' → logprob: -12.366864204406738
    10. '    ' → logprob: -12.366864204406738

Token 27: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04027166590094566
    2. '    
' → logprob: -4.040271759033203
    3. '\n' → logprob: -4.790271759033203
    4. '<|end|>' → logprob: -4.915271759033203
    5. ')' → logprob: -6.165271759033203
    6. '\' → logprob: -7.165271759033203
    7. '  ' → logprob: -7.790271759033203
    8. '
' → logprob: -7.790271759033203
    9. '```' → logprob: -7.790271759033203
    10. '    ' → logprob: -7.915271759033203

Token 28: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04152446985244751
    2. '    
' → logprob: -3.2915244102478027
    3. '    ' → logprob: -6.291524410247803
    4. '  ' → logprob: -7.916524410247803
    5. '\' → logprob: -8.416524887084961
    6. '<|end|>' → logprob: -8.541524887084961
    7. ')' → logprob: -8.791524887084961
    8. ' ' → logprob: -9.041524887084961
    9. '```' → logprob: -9.041524887084961
    10. '\n' → logprob: -9.291524887084961

Token 29: ' grid' (ID: 10586)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3753567934036255
    2. '   ' → logprob: -1.2503567934036255
    3. '    ' → logprob: -4.750356674194336
    4. '[' → logprob: -5.500356674194336
    5. ')' → logprob: -5.625356674194336
    6. 'n' → logprob: -6.250356674194336
    7. '<|end|>' → logprob: -6.250356674194336
    8. '  ' → logprob: -6.625356674194336
    9. ' 
' → logprob: -7.000356674194336
    10. '    
' → logprob: -7.250356674194336

Token 30: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02149592898786068
    2. '=' → logprob: -4.271495819091797
    3. '[' → logprob: -5.146495819091797
    4. ' ' → logprob: -6.896495819091797
    5. '[:]' → logprob: -8.396495819091797
    6. '[]' → logprob: -9.396495819091797
    7. '=[]' → logprob: -10.146495819091797
    8. ')' → logprob: -10.521495819091797
    9. ' =[' → logprob: -11.146495819091797
    10. '   ' → logprob: -11.396495819091797

Token 31: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.5015974044799805
    2. ' []' → logprob: -1.2515974044799805
    3. '[' → logprob: -2.6265974044799805
    4. ' [' → logprob: -3.3765974044799805
    5. '[n' → logprob: -7.3765974044799805
    6. '[][]' → logprob: -8.00159740447998
    7. '[[' → logprob: -8.12659740447998
    8. ' [[' → logprob: -8.62659740447998
    9. ' [[]' → logprob: -8.87659740447998
    10. '[list' → logprob: -9.12659740447998

Token 32: 'input' (ID: 2586)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.020049866288900375
    2. '[list' → logprob: -4.270050048828125
    3. ' list' → logprob: -5.270050048828125
    4. '[input' → logprob: -7.645050048828125
    5. '[' → logprob: -8.895050048828125
    6. '[]' → logprob: -9.520050048828125
    7. 'input' → logprob: -11.270050048828125
    8. ' [' → logprob: -11.520050048828125
    9. '[int' → logprob: -12.145050048828125
    10. ']' → logprob: -12.770050048828125

Token 33: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0031890016980469227
    2. '()' → logprob: -5.7531890869140625
    3. '()]' → logprob: -11.628189086914062
    4. '())' → logprob: -13.753189086914062
    5. ' ().' → logprob: -14.128189086914062
    6. '(' → logprob: -15.378189086914062
    7. '()].' → logprob: -15.628189086914062
    8. '()[' → logprob: -16.878189086914062
    9. ' ()' → logprob: -17.003189086914062
    10. '()
' → logprob: -17.753189086914062

Token 34: 'rstrip' (ID: 180429)
  Prédit: 'rstrip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -0.20216068625450134
    2. 'strip' → logprob: -1.7021607160568237
    3. 'split' → logprob: -7.202160835266113
    4. 'rs' → logprob: -13.202160835266113
    5. '.rstrip' → logprob: -15.702160835266113
    6. 'r' → logprob: -17.202159881591797
    7. 'rst' → logprob: -17.327159881591797
    8. 'str' → logprob: -17.577159881591797
    9. ' strip' → logprob: -18.327159881591797
    10. 'read' → logprob: -18.702159881591797

Token 35: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0066169616766273975
    2. '('\' → logprob: -5.506617069244385
    3. '())' → logprob: -6.756617069244385
    4. '()\' → logprob: -7.006617069244385
    5. '()]' → logprob: -8.256616592407227
    6. '().' → logprob: -8.756616592407227
    7. '()
' → logprob: -11.256616592407227
    8. ' ()' → logprob: -11.506616592407227
    9. '('' → logprob: -11.631616592407227
    10. ''\' → logprob: -12.506616592407227

Token 36: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.09911772608757019
    2. ' for' → logprob: -2.5991177558898926
    3. ')' → logprob: -4.474117755889893
    4. 'for' → logprob: -5.224117755889893
    5. '()]' → logprob: -6.099117755889893
    6. ']' → logprob: -7.224117755889893
    7. '())' → logprob: -9.349117279052734
    8. ')]' → logprob: -9.974117279052734
    9. '	for' → logprob: -10.349117279052734
    10. ' ()' → logprob: -10.474117279052734

Token 37: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.04829593747854233
    2. ' range' → logprob: -3.2982959747314453
    3. '_' → logprob: -4.673295974731445
    4. ' ' → logprob: -7.673295974731445
    5. ' i' → logprob: -8.173295974731445
    6. 'range' → logprob: -9.673295974731445
    7. '_range' → logprob: -11.048295974731445
    8. ' in' → logprob: -11.423295974731445
    9. ' xrange' → logprob: -11.673295974731445
    10. '(range' → logprob: -12.048295974731445

Token 38: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5342581868171692
    2. 'range' → logprob: -1.4092581272125244
    3. ' range' → logprob: -1.7842581272125244
    4. 'in' → logprob: -7.0342583656311035
    5. ' ' → logprob: -8.159257888793945
    6. '	range' → logprob: -8.534257888793945
    7. ' xrange' → logprob: -8.909257888793945
    8. '(range' → logprob: -10.159257888793945
    9. '  ' → logprob: -11.034257888793945
    10. '(' → logprob: -11.409257888793945

Token 39: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.029758941382169724
    2. ' range' → logprob: -3.529758930206299
    3. ' ' → logprob: -12.654759407043457
    4. '  ' → logprob: -13.404759407043457
    5. '(range' → logprob: -13.904759407043457
    6. '   ' → logprob: -14.154759407043457
    7. '	range' → logprob: -14.654759407043457
    8. '[' → logprob: -14.779759407043457
    9. 'r' → logprob: -15.154759407043457
    10. 'rang' → logprob: -15.279759407043457

Token 40: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -7.755678961984813e-05
    2. '(' → logprob: -9.500077247619629
    3. 'n' → logprob: -13.500077247619629
    4. ' (' → logprob: -13.875077247619629
    5. ' n' → logprob: -15.125077247619629
    6. '   ' → logprob: -18.375078201293945
    7. '(
' → logprob: -18.500078201293945
    8. ')' → logprob: -18.500078201293945
    9. ')n' → logprob: -18.625078201293945
    10. '	n' → logprob: -19.125078201293945

Token 41: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.002363636391237378
    2. ')' → logprob: -6.627363681793213
    3. ']' → logprob: -6.877363681793213
    4. '   ' → logprob: -14.002363204956055
    5. ')]
' → logprob: -14.002363204956055
    6. '])]' → logprob: -14.127363204956055
    7. ' )' → logprob: -14.252363204956055
    8. ')
' → logprob: -14.627363204956055
    9. '')]' → logprob: -14.752363204956055
    10. '}]' → logprob: -14.752363204956055

Token 42: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5011228919029236
    2. 'for' → logprob: -2.5011229515075684
    3. 'count' → logprob: -2.6261229515075684
    4. 'result' → logprob: -2.8761229515075684
    5. '
' → logprob: -3.3761229515075684
    6. '    
' → logprob: -3.6261229515075684
    7. '<|end|>' → logprob: -4.001122951507568
    8. '    ' → logprob: -4.501122951507568
    9. '\n' → logprob: -4.626122951507568
    10. 'grid' → logprob: -4.751122951507568

Token 43: ' dp' (ID: 21546)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.8093868494033813
    2. 'dp' (adapté à ' dp') → logprob: -1.5593868494033813
    3. 'count' → logprob: -1.8093868494033813
    4. 'result' → logprob: -3.184386730194092
    5. 'counts' → logprob: -3.434386730194092
    6. '   ' → logprob: -3.684386730194092
    7. 'for' → logprob: -3.809386730194092
    8. 'dist' → logprob: -4.309386730194092
    9. 'answer' → logprob: -5.559386730194092
    10. '    ' → logprob: -5.684386730194092

Token 44: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0005843686521984637
    2. '=' → logprob: -7.750584602355957
    3. '[' → logprob: -9.250584602355957
    4. ' ' → logprob: -10.000584602355957
    5. '[n' → logprob: -12.875584602355957
    6. '<|end|>' → logprob: -13.500584602355957
    7. '[]' → logprob: -13.625584602355957
    8. '[][]' → logprob: -13.625584602355957
    9. ' =[' → logprob: -13.750584602355957
    10. '_' → logprob: -14.125584602355957

Token 45: ' [' (ID: 723)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.12818561494350433
    2. ' [[' → logprob: -2.128185510635376
    3. '[' → logprob: -6.878185749053955
    4. ' [' → logprob: -9.003185272216797
    5. '[n' → logprob: -9.253185272216797
    6. '[]' → logprob: -13.003185272216797
    7. '[-' → logprob: -13.503185272216797
    8. '[['' → logprob: -13.503185272216797
    9. ' [[[' → logprob: -13.628185272216797
    10. '([[' → logprob: -14.128185272216797

Token 46: '0' (ID: 15)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0010536498157307506
    2. '0' → logprob: -7.501053810119629
    3. '[n' → logprob: -7.876053810119629
    4. '[-' → logprob: -9.626053810119629
    5. ' [' → logprob: -10.876053810119629
    6. '[int' → logprob: -11.126053810119629
    7. '[[' → logprob: -11.876053810119629
    8. '[i' → logprob: -12.751053810119629
    9. '[len' → logprob: -13.626053810119629
    10. '['' → logprob: -13.751053810119629

Token 47: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06892593950033188
    2. ' ]' → logprob: -3.8189258575439453
    3. ' for' → logprob: -4.068925857543945
    4. ']*' → logprob: -4.193925857543945
    5. ']*(' → logprob: -4.818925857543945
    6. 'for' → logprob: -5.818925857543945
    7. '][' → logprob: -7.818925857543945
    8. '(n' → logprob: -8.693925857543945
    9. ']+' → logprob: -8.818925857543945
    10. ' ' → logprob: -8.818925857543945

Token 48: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0002707529056351632
    2. '(n' → logprob: -9.62527084350586
    3. ' n' → logprob: -9.75027084350586
    4. '100' → logprob: -10.25027084350586
    5. '64' → logprob: -10.87527084350586
    6. '501' → logprob: -11.50027084350586
    7. '101' → logprob: -11.50027084350586
    8. 'len' → logprob: -11.75027084350586
    9. '   ' → logprob: -11.75027084350586
    10. '51' → logprob: -12.00027084350586

Token 49: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20597346127033234
    2. ')' → logprob: -1.705973505973816
    3. ' +' → logprob: -6.4559736251831055
    4. '*' → logprob: -6.7059736251831055
    5. '*n' → logprob: -6.8309736251831055
    6. ' )' → logprob: -7.5809736251831055
    7. '+n' → logprob: -9.955973625183105
    8. '**' → logprob: -10.330973625183105
    9. '+)' → logprob: -10.830973625183105
    10. '```' → logprob: -10.830973625183105

Token 50: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00044651966891251504
    2. '2' → logprob: -7.750446319580078
    3. ' ' → logprob: -11.125446319580078
    4. '   ' → logprob: -15.125446319580078
    5. '10' → logprob: -15.625446319580078
    6. '3' → logprob: -15.875446319580078
    7. '```' → logprob: -15.937946319580078
    8. '  ' → logprob: -16.375446319580078
    9. '5' → logprob: -16.750446319580078
    10. '１' → logprob: -16.937946319580078

Token 51: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.195421494543552e-05
    2. ' )' → logprob: -10.25007152557373
    3. ')
' → logprob: -10.87507152557373
    4. '<|end|>' → logprob: -12.00007152557373
    5. '```' → logprob: -13.12507152557373
    6. '+' → logprob: -13.25007152557373
    7. ']' → logprob: -13.25007152557373
    8. '   ' → logprob: -13.87507152557373
    9. '[' → logprob: -14.00007152557373
    10. ')]' → logprob: -14.50007152557373

Token 52: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.2477316856384277
    2. '<|end|>' → logprob: -1.4977316856384277
    3. '   ' → logprob: -1.8727316856384277
    4. '\n' → logprob: -2.3727316856384277
    5. ' for' → logprob: -2.3727316856384277
    6. 'for' → logprob: -3.1227316856384277
    7. '    
' → logprob: -3.6227316856384277
    8. '0' → logprob: -3.8727316856384277
    9. ' 
' → logprob: -3.9977316856384277
    10. ' ' → logprob: -4.497731685638428

Token 53: ' max' (ID: 2999)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12274321168661118
    2. ' for' → logprob: -2.6227431297302246
    3. '0' → logprob: -4.122743129730225
    4. 'dp' → logprob: -4.122743129730225
    5. '   ' → logprob: -5.247743129730225
    6. '1' → logprob: -6.372743129730225
    7. ' ' → logprob: -6.872743129730225
    8. 'max' (adapté à ' max') → logprob: -7.497743129730225
    9. '    ' → logprob: -7.622743129730225
    10. '\n' → logprob: -8.372743606567383

Token 54: '_side' (ID: 46130)
  Prédit: '_len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.9427862763404846
    2. '_' → logprob: -1.1927862167358398
    3. '_length' → logprob: -1.3177862167358398
    4. '_val' → logprob: -4.19278621673584
    5. '_width' → logprob: -4.56778621673584
    6. '_sum' → logprob: -5.19278621673584
    7. '_height' → logprob: -5.81778621673584
    8. '_size' → logprob: -6.69278621673584
    9. '_value' → logprob: -6.69278621673584
    10. '_area' → logprob: -7.19278621673584

Token 55: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.42871496081352234
    2. '=' → logprob: -1.0537149906158447
    3. ',' → logprob: -12.178714752197266
    4. ' ' → logprob: -12.428714752197266
    5. 's' → logprob: -13.928714752197266
    6. '_' → logprob: -14.178714752197266
    7. '_=' → logprob: -14.553714752197266
    8. '  ' → logprob: -14.803714752197266
    9. '<|end|>' → logprob: -15.053714752197266
    10. '=[]' → logprob: -15.303714752197266

Token 56: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.048593729734420776
    2. ' ' → logprob: -3.048593759536743
    3. '   ' → logprob: -12.173593521118164
    4. '1' → logprob: -14.673593521118164
    5. ' ' → logprob: -14.673593521118164
    6. '  ' → logprob: -16.361093521118164
    7. '```' → logprob: -16.548593521118164
    8. '    ' → logprob: -17.048593521118164
    9. '۰' → logprob: -17.798593521118164
    10. '=' → logprob: -17.861093521118164

Token 57: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.960946772480384e-05
    2. ' ' → logprob: -9.250099182128906
    3. '1' → logprob: -12.625099182128906
    4. '   ' → logprob: -16.937599182128906
    5. ' ' → logprob: -17.375099182128906
    6. 'n' → logprob: -17.437599182128906
    7. '00' → logprob: -17.687599182128906
    8. '000' → logprob: -17.750099182128906
    9. 'max' → logprob: -17.875099182128906
    10. 'int' → logprob: -18.062599182128906

Token 58: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.2975367307662964
    2. '   ' → logprob: -1.2975367307662964
    3. ' 
' → logprob: -2.297536849975586
    4. '\n' → logprob: -2.297536849975586
    5. '  
' → logprob: -2.797536849975586
    6. '    
' → logprob: -3.047536849975586
    7. ' ' → logprob: -3.172536849975586
    8. '<|end|>' → logprob: -3.172536849975586
    9. ' for' → logprob: -3.297536849975586
    10. '   
' → logprob: -4.922536849975586

Token 59: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6154751777648926
    2. '
' → logprob: -1.7404751777648926
    3. '   ' → logprob: -1.8654751777648926
    4. ' 
' → logprob: -3.1154751777648926
    5. '    
' → logprob: -3.3654751777648926
    6. '  
' → logprob: -3.7404751777648926
    7. ' for' → logprob: -4.615475177764893
    8. '' → logprob: -4.865475177764893
    9. '   
' → logprob: -5.740475177764893
    10. ' ' → logprob: -5.990475177764893

Token 60: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18076816201210022
    2. '\n' → logprob: -2.6807682514190674
    3. ' for' → logprob: -3.1807682514190674
    4. '
' → logprob: -3.3057682514190674
    5. ' 
' → logprob: -4.930768013000488
    6. '    
' → logprob: -5.180768013000488
    7. '  
' → logprob: -6.930768013000488
    8. 'for' (adapté à ' for') → logprob: -7.180768013000488
    9. '	for' → logprob: -7.305768013000488
    10. ' ' → logprob: -7.305768013000488

Token 61: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0006122402846813202
    2. 'i' → logprob: -7.500612258911133
    3. ' ' → logprob: -10.375612258911133
    4. '	i' → logprob: -11.250612258911133
    5. ' _' → logprob: -11.625612258911133
    6. ' range' → logprob: -13.125612258911133
    7. ' row' → logprob: -14.000612258911133
    8. '_i' → logprob: -14.375612258911133
    9. ' j' → logprob: -14.500612258911133
    10. '_' → logprob: -14.875612258911133

Token 62: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007691917475312948
    2. 'in' → logprob: -4.882691860198975
    3. ' ' → logprob: -9.507692337036133
    4. '	in' → logprob: -11.882692337036133
    5. '  ' → logprob: -13.507692337036133
    6. 'range' → logprob: -14.132692337036133
    7. '_' → logprob: -15.132692337036133
    8. 'In' → logprob: -15.382692337036133
    9. 'n' → logprob: -15.632692337036133
    10. ',' → logprob: -15.757692337036133

Token 63: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.47408413887023926
    2. ' range' → logprob: -0.9740841388702393
    3. ' ' → logprob: -12.47408390045166
    4. '   ' → logprob: -13.97408390045166
    5. '  ' → logprob: -14.59908390045166
    6. '1' → logprob: -14.59908390045166
    7. '	range' → logprob: -14.59908390045166
    8. '(range' → logprob: -15.34908390045166
    9. '0' → logprob: -15.84908390045166
    10. ')' → logprob: -16.349084854125977

Token 64: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0035191758070141077
    2. '(n' → logprob: -6.128519058227539
    3. '1' → logprob: -6.628519058227539
    4. ' ' → logprob: -12.253519058227539
    5. 'n' → logprob: -12.628519058227539
    6. ' (' → logprob: -13.003519058227539
    7. ' n' → logprob: -14.628519058227539
    8. '   ' → logprob: -15.253519058227539
    9. ')' → logprob: -17.25351905822754
    10. '	' → logprob: -17.75351905822754

Token 65: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3308561146259308
    2. '):
' → logprob: -1.3308560848236084
    3. ' ):' → logprob: -4.3308563232421875
    4. ' ):
' → logprob: -5.8308563232421875
    5. '1' → logprob: -7.5808563232421875
    6. '   ' → logprob: -7.5808563232421875
    7. ':' → logprob: -9.080856323242188
    8. ')' → logprob: -9.330856323242188
    9. '+' → logprob: -9.830856323242188
    10. ' ' → logprob: -10.330856323242188

Token 66: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39580807089805603
    2. '    ' → logprob: -1.5208081007003784
    3. ' ' → logprob: -2.770807981491089
    4. '       ' → logprob: -3.270807981491089
    5. '    
' → logprob: -6.520808219909668
    6. '     
' → logprob: -6.520808219909668
    7. ' 
' → logprob: -7.145808219909668
    8. ':' → logprob: -7.395808219909668
    9. '\' → logprob: -7.395808219909668
    10. '<|end|>' → logprob: -7.770808219909668

Token 67: ' prev' (ID: 10258)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8944191336631775
    2. '   ' → logprob: -1.3944191932678223
    3. 'for' → logprob: -2.0194191932678223
    4. ' new' → logprob: -2.1444191932678223
    5. 'new' → logprob: -2.5194191932678223
    6. ' ' → logprob: -5.894419193267822
    7. '    ' → logprob: -5.894419193267822
    8. 'prev' (adapté à ' prev') → logprob: -6.394419193267822
    9. '0' → logprob: -7.144419193267822
    10. 'next' → logprob: -7.144419193267822

Token 68: ' =' (ID: 314)
  Prédit: '_dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dp' → logprob: -0.45980599522590637
    2. ' =' → logprob: -1.084805965423584
    3. '=' → logprob: -4.209805965423584
    4. 'dp' → logprob: -5.334805965423584
    5. '_val' → logprob: -5.584805965423584
    6. ',' → logprob: -5.584805965423584
    7. '_row' → logprob: -6.459805965423584
    8. '_side' → logprob: -7.709805965423584
    9. '_max' → logprob: -8.084806442260742
    10. '_j' → logprob: -8.834806442260742

Token 69: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009545749635435641
    2. ' ' → logprob: -7.000954627990723
    3. '[' → logprob: -10.500954627990723
    4. 'dp' → logprob: -11.375954627990723
    5. ' [' → logprob: -13.250954627990723
    6. ' dp' → logprob: -14.125954627990723
    7. '   ' → logprob: -14.250954627990723
    8. '  ' → logprob: -15.375954627990723
    9. '[]' → logprob: -15.375954627990723
    10. '1' → logprob: -16.313453674316406

Token 70: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001298330957069993
    2. '[' → logprob: -6.876298427581787
    3. 'dp' → logprob: -8.501297950744629
    4. ' ' → logprob: -9.751297950744629
    5. ' [' → logprob: -13.251297950744629
    6. ' dp' → logprob: -14.251297950744629
    7. '1' → logprob: -14.376297950744629
    8. '   ' → logprob: -14.876297950744629
    9. '[]' → logprob: -15.501297950744629
    10. '  ' → logprob: -16.751298904418945

Token 71: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08118842542171478
    2. '<|end|>' → logprob: -2.831188440322876
    3. '
' → logprob: -5.081188201904297
    4. '    
' → logprob: -5.456188201904297
    5. ' ' → logprob: -5.956188201904297
    6. '  
' → logprob: -6.331188201904297
    7. '  ' → logprob: -6.831188201904297
    8. '   
' → logprob: -7.331188201904297
    9. '<|end|>' → logprob: -7.331188201904297
    10. ' 
' → logprob: -7.706188201904297

Token 72: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015994871500879526
    2. '<|end|>' → logprob: -7.376599311828613
    3. ' for' → logprob: -7.876599311828613
    4. ' ' → logprob: -8.501599311828613
    5. '    
' → logprob: -8.751599311828613
    6. '
' → logprob: -9.501599311828613
    7. '	for' → logprob: -10.001599311828613
    8. '\n' → logprob: -10.876599311828613
    9. ' 
' → logprob: -11.251599311828613
    10. 'for' → logprob: -11.251599311828613

Token 73: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7778278589248657
    2. ' for' → logprob: -0.9028278589248657
    3. 'for' (adapté à ' for') → logprob: -2.402827739715576
    4. '	for' → logprob: -3.402827739715576
    5. ' ' → logprob: -4.777827739715576
    6. '  ' → logprob: -6.777827739715576
    7. '<|end|>' → logprob: -7.027827739715576
    8. '1' → logprob: -7.527827739715576
    9. '0' → logprob: -8.527828216552734
    10. '    ' → logprob: -9.277828216552734

Token 74: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.02150643616914749
    2. 'j' → logprob: -4.396506309509277
    3. ' range' → logprob: -4.771506309509277
    4. 'range' → logprob: -7.771506309509277
    5. ' ' → logprob: -9.771506309509277
    6. '1' → logprob: -13.271506309509277
    7. '(range' → logprob: -13.521506309509277
    8. '	j' → logprob: -14.021506309509277
    9. '  ' → logprob: -14.146506309509277
    10. ' in' → logprob: -14.271506309509277

Token 75: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023564213886857033
    2. 'in' → logprob: -3.773564100265503
    3. ' ' → logprob: -8.523564338684082
    4. '<|end|>' → logprob: -9.523564338684082
    5. '1' → logprob: -10.523564338684082
    6. 'range' → logprob: -12.023564338684082
    7. ' range' → logprob: -13.398564338684082
    8. '	in' → logprob: -13.398564338684082
    9. '+' → logprob: -13.523564338684082
    10. '0' → logprob: -13.648564338684082

Token 76: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5764137506484985
    2. 'range' → logprob: -0.8264137506484985
    3. '1' → logprob: -7.951413631439209
    4. '(range' → logprob: -9.701414108276367
    5. ' ' → logprob: -10.076414108276367
    6. '(' → logprob: -11.326414108276367
    7. '	range' → logprob: -12.451414108276367
    8. '[' → logprob: -13.951414108276367
    9. '0' → logprob: -14.576414108276367
    10. '   ' → logprob: -14.701414108276367

Token 77: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0031806828919798136
    2. '(n' → logprob: -5.753180503845215
    3. ' (' → logprob: -13.753180503845215
    4. '1' → logprob: -13.753180503845215
    5. ' ' → logprob: -14.503180503845215
    6. '(i' → logprob: -16.00318145751953
    7. 'n' → logprob: -16.75318145751953
    8. '((' → logprob: -17.00318145751953
    9. '(
' → logprob: -17.50318145751953
    10. '(len' → logprob: -17.87818145751953

Token 78: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2635188698768616
    2. '+' → logprob: -1.6385188102722168
    3. '):
' → logprob: -3.513518810272217
    4. '1' → logprob: -5.263518810272217
    5. ')' → logprob: -6.763518810272217
    6. ':' → logprob: -7.763518810272217
    7. '   ' → logprob: -8.638519287109375
    8. ' ' → logprob: -8.763519287109375
    9. '       ' → logprob: -8.763519287109375
    10. ' +' → logprob: -9.013519287109375

Token 79: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.029718440026044846
    2. '<|end|>' → logprob: -3.7797183990478516
    3. '        ' → logprob: -6.904718399047852
    4. ' ' → logprob: -7.029718399047852
    5. '            ' → logprob: -7.279718399047852
    6. '       ' → logprob: -7.404718399047852
    7. '<|end|>' → logprob: -7.529718399047852
    8. ' if' → logprob: -7.654718399047852
    9. ',' → logprob: -7.654718399047852
    10. '#' → logprob: -8.029718399047852

Token 80: ' temp' (ID: 5484)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8226232528686523
    2. '               ' → logprob: -1.5726232528686523
    3. '           ' → logprob: -1.6976232528686523
    4. 'if' → logprob: -1.9476232528686523
    5. 'token' → logprob: -4.697623252868652
    6. ' ' → logprob: -5.197623252868652
    7. 'tmp' → logprob: -6.072623252868652
    8. '            ' → logprob: -6.197623252868652
    9. 'temp' (adapté à ' temp') → logprob: -6.947623252868652
    10. 'val' → logprob: -7.072623252868652

Token 81: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029960718005895615
    2. '=' → logprob: -3.5299606323242188
    3. ',' → logprob: -8.529960632324219
    4. '=int' → logprob: -12.154960632324219
    5. ' ' → logprob: -13.154960632324219
    6. '<|end|>' → logprob: -14.154960632324219
    7. ' ,' → logprob: -14.529960632324219
    8. ' =
' → logprob: -14.654960632324219
    9. ')' → logprob: -14.779960632324219
    10. '=input' → logprob: -14.904960632324219

Token 82: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0010662743588909507
    2. ' dp' → logprob: -7.001066207885742
    3. '0' → logprob: -8.876066207885742
    4. 'max' → logprob: -11.876066207885742
    5. '1' → logprob: -12.126066207885742
    6. '(dp' → logprob: -13.876066207885742
    7. '	dp' → logprob: -14.376066207885742
    8. 'int' → logprob: -15.251066207885742
    9. 'grid' → logprob: -15.376066207885742
    10. '```' → logprob: -15.876066207885742

Token 83: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -3.8889261304575484e-06
    2. '[' → logprob: -12.625003814697266
    3. 'j' → logprob: -15.000003814697266
    4. '```' → logprob: -15.875003814697266
    5. '[js' → logprob: -16.250003814697266
    6. '[
' → logprob: -17.625003814697266
    7. '[i' → logprob: -18.500003814697266
    8. '<|end|>' → logprob: -18.625003814697266
    9. '	j' → logprob: -18.875003814697266
    10. ' ' → logprob: -19.125003814697266

Token 84: '+' (ID: 10)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5775490999221802
    2. '+' → logprob: -0.8275490999221802
    3. '<|end|>' → logprob: -7.327548980712891
    4. ' ]' → logprob: -8.32754898071289
    5. ')' → logprob: -8.45254898071289
    6. ')]' → logprob: -8.70254898071289
    7. ' +' → logprob: -8.82754898071289
    8. '<|end|>' → logprob: -9.20254898071289
    9. '])' → logprob: -10.57754898071289
    10. '+]' → logprob: -10.70254898071289

Token 85: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.630610641877865e-06
    2. ' ' → logprob: -12.000006675720215
    3. ']' → logprob: -16.2500057220459
    4. ')' → logprob: -17.1250057220459
    5. '```' → logprob: -17.1875057220459
    6. '   ' → logprob: -17.2500057220459
    7. '2' → logprob: -17.2500057220459
    8. '0' → logprob: -17.5000057220459
    9. '۱' → logprob: -17.6875057220459
    10. '１' → logprob: -17.8125057220459

Token 86: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3976266384124756
    2. '<|end|>' → logprob: -1.2726266384124756
    3. ']' → logprob: -3.1476266384124756
    4. '<|end|>' → logprob: -5.397626876831055
    5. ')]' → logprob: -8.522626876831055
    6. ' )' → logprob: -8.772626876831055
    7. '）' → logprob: -9.897626876831055
    8. ' ]' → logprob: -10.272626876831055
    9. ' ' → logprob: -11.147626876831055
    10. '])' → logprob: -11.397626876831055

Token 87: '           ' (ID: 352)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8628513813018799
    2. '<|end|>' → logprob: -0.8628513813018799
    3. '           ' → logprob: -2.48785138130188
    4. ' 
' → logprob: -3.73785138130188
    5. '<|end|>' → logprob: -4.237851142883301
    6. ' if' → logprob: -4.487851142883301
    7. '
' → logprob: -5.237851142883301
    8. '            ' → logprob: -5.737851142883301
    9. '    ' → logprob: -5.737851142883301
    10. '        ' → logprob: -5.987851142883301

Token 88: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4389535188674927
    2. ' if' → logprob: -1.3139535188674927
    3. 'if' (adapté à ' if') → logprob: -3.063953399658203
    4. '<|end|>' → logprob: -3.438953399658203
    5. '       ' → logprob: -5.688953399658203
    6. '   ' → logprob: -6.813953399658203
    7. '    ' → logprob: -6.813953399658203
    8. '<|end|>' → logprob: -7.438953399658203
    9. ' ' → logprob: -7.563953399658203
    10. '            ' → logprob: -8.188953399658203

Token 89: ' grid' (ID: 10586)
  Prédit: ' grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grid' → logprob: -0.06996878236532211
    2. 'grid' → logprob: -2.6949687004089355
    3. '	grid' → logprob: -11.319969177246094
    4. '(grid' → logprob: -11.694969177246094
    5. '   ' → logprob: -12.319969177246094
    6. ' ' → logprob: -12.944969177246094
    7. 'n' → logprob: -13.319969177246094
    8. 'Grid' → logprob: -14.319969177246094
    9. 'i' → logprob: -14.444969177246094
    10. ' i' → logprob: -14.819969177246094

Token 90: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.003224890911951661
    2. '[j' → logprob: -5.753224849700928
    3. '[I' → logprob: -10.378225326538086
    4. '[' → logprob: -11.128225326538086
    5. '```' → logprob: -15.253225326538086
    6. '[s' → logprob: -15.753225326538086
    7. ' [' → logprob: -15.878225326538086
    8. '[
' → logprob: -16.253225326538086
    9. '[n' → logprob: -16.378225326538086
    10. '[ii' → logprob: -16.378225326538086

Token 91: '][' (ID: 2696)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.052393343299627304
    2. '][' → logprob: -3.0523934364318848
    3. '[' → logprob: -6.302393436431885
    4. '[i' → logprob: -6.677393436431885
    5. ''[' → logprob: -7.927393436431885
    6. ''][' → logprob: -9.177392959594727
    7. ' [' → logprob: -9.677392959594727
    8. ']' → logprob: -10.552392959594727
    9. ' ][' → logprob: -11.177392959594727
    10. '`' → logprob: -11.177392959594727

Token 92: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.4140441635390744e-05
    2. ' j' → logprob: -11.250014305114746
    3. ']' → logprob: -14.875014305114746
    4. '0' → logprob: -15.375014305114746
    5. '	j' → logprob: -15.625014305114746
    6. '   ' → logprob: -15.750014305114746
    7. ' ' → logprob: -15.875014305114746
    8. 'i' → logprob: -18.00001335144043
    9. '    ' → logprob: -18.00001335144043
    10. '[j' → logprob: -18.25001335144043

Token 93: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.16342848539352417
    2. '==' → logprob: -2.163428544998169
    3. ']' → logprob: -3.538428544998169
    4. ''' → logprob: -6.41342830657959
    5. '=='' → logprob: -6.41342830657959
    6. ']==' → logprob: -6.78842830657959
    7. ')' → logprob: -7.03842830657959
    8. '=' → logprob: -7.53842830657959
    9. ' '' → logprob: -8.53842830657959
    10. ' ' → logprob: -8.66342830657959

Token 94: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.07261759042739868
    2. ' ==' → logprob: -2.822617530822754
    3. '=='' → logprob: -4.572617530822754
    4. '=' → logprob: -9.197617530822754
    5. '=="' → logprob: -10.322617530822754
    6. ''' → logprob: -10.822617530822754
    7. '>' → logprob: -11.197617530822754
    8. '===' → logprob: -11.197617530822754
    9. ' =='' → logprob: -11.197617530822754
    10. ':' → logprob: -11.572617530822754

Token 95: ' '.' (ID: 12662)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.10827595740556717
    2. ' '' → logprob: -2.358275890350342
    3. ' ' → logprob: -5.858275890350342
    4. '"' → logprob: -6.108275890350342
    5. ' '#'' → logprob: -7.733275890350342
    6. ''O' → logprob: -7.858275890350342
    7. ''#' → logprob: -8.2332763671875
    8. ''*' → logprob: -8.3582763671875
    9. ''o' → logprob: -8.4832763671875
    10. ' '*'' → logprob: -8.4832763671875

Token 96: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.73414146900177
    2. ''' → logprob: -1.23414146900177
    3. '':
' → logprob: -1.48414146900177
    4. ':' → logprob: -7.1091413497924805
    5. ' '' → logprob: -7.9841413497924805
    6. ' and' → logprob: -8.35914134979248
    7. ''):
' → logprob: -8.60914134979248
    8. '':
' → logprob: -8.73414134979248
    9. '':

' → logprob: -9.10914134979248
    10. ':
' → logprob: -9.35914134979248

Token 97: '               ' (ID: 506)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.12141262739896774
    2. '               ' → logprob: -2.371412515640259
    3. 'dp' → logprob: -4.121412754058838
    4. '           ' → logprob: -5.496412754058838
    5. '	dp' → logprob: -7.621412754058838
    6. '   ' → logprob: -9.87141227722168
    7. '(dp' → logprob: -10.24641227722168
    8. '                   ' → logprob: -11.12141227722168
    9. '_dp' → logprob: -11.12141227722168
    10. ' ' → logprob: -11.49641227722168

Token 98: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.3871762454509735
    2. ' dp' → logprob: -1.137176275253296
    3. '	dp' → logprob: -8.762176513671875
    4. '               ' → logprob: -9.262176513671875
    5. ' ' → logprob: -11.012176513671875
    6. '           ' → logprob: -11.387176513671875
    7. '                   ' → logprob: -11.887176513671875
    8. '(dp' → logprob: -11.887176513671875
    9. '_dp' → logprob: -12.137176513671875
    10. '   ' → logprob: -12.762176513671875

Token 99: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -8.566264295950532e-05
    2. '[' → logprob: -9.375085830688477
    3. ' [' → logprob: -15.375085830688477
    4. 'j' → logprob: -16.125085830688477
    5. '```' → logprob: -16.125085830688477
    6. '[js' → logprob: -16.375085830688477
    7. '[i' → logprob: -16.500085830688477
    8. '[min' → logprob: -17.375085830688477
    9. '][' → logprob: -17.500085830688477
    10. '1' → logprob: -18.250085830688477

Token 100: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.007496473845094442
    2. ']' → logprob: -5.007496356964111
    3. ']+' → logprob: -8.00749683380127
    4. '+]' → logprob: -8.25749683380127
    5. '1' → logprob: -9.13249683380127
    6. ' +' → logprob: -10.38249683380127
    7. '+j' → logprob: -10.88249683380127
    8. ']+=' → logprob: -11.38249683380127
    9. '   ' → logprob: -11.88249683380127
    10. '`]' → logprob: -13.50749683380127

Token 101: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011236425780225545
    2. '0' → logprob: -9.375112533569336
    3. ' ' → logprob: -10.750112533569336
    4. '   ' → logprob: -12.625112533569336
    5. '2' → logprob: -14.125112533569336
    6. ']' → logprob: -14.875112533569336
    7. '           ' → logprob: -14.875112533569336
    8. '+' → logprob: -15.125112533569336
    9. '-' → logprob: -15.500112533569336
    10. '  ' → logprob: -15.625112533569336

Token 102: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6871281266212463
    2. ' =' → logprob: -1.3121280670166016
    3. '=' → logprob: -1.5621280670166016
    4. ']=' → logprob: -4.562128067016602
    5. ')' → logprob: -4.937128067016602
    6. ')=' → logprob: -8.437128067016602
    7. ']+=' → logprob: -9.187128067016602
    8. ' ]' → logprob: -10.062128067016602
    9. ' ' → logprob: -10.812128067016602
    10. ' )' → logprob: -11.812128067016602

Token 103: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38687264919281006
    2. ' =' → logprob: -1.13687264919281
    3. '+=' → logprob: -14.761872291564941
    4. '=min' → logprob: -14.761872291564941
    5. ' ' → logprob: -15.761872291564941
    6. ' +=' → logprob: -15.886872291564941
    7. '=int' → logprob: -16.011873245239258
    8. '=max' → logprob: -16.136873245239258
    9. '=

' → logprob: -16.761873245239258
    10. '＝' → logprob: -17.136873245239258

Token 104: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0008600078872404993
    2. ' min' → logprob: -7.250860214233398
    3. '1' → logprob: -9.250860214233398
    4. '0' → logprob: -9.875860214233398
    5. 'max' → logprob: -14.000860214233398
    6. 'prev' → logprob: -14.125860214233398
    7. '	min' → logprob: -15.000860214233398
    8. '(min' → logprob: -15.000860214233398
    9. ' ' → logprob: -15.375860214233398
    10. '   ' → logprob: -15.625860214233398

Token 105: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.07894332706928253
    2. '(prev' → logprob: -2.5789432525634766
    3. '(' → logprob: -10.078943252563477
    4. 'dp' → logprob: -12.078943252563477
    5. '((' → logprob: -13.453943252563477
    6. ' dp' → logprob: -13.578943252563477
    7. '(pre' → logprob: -13.953943252563477
    8. ' (' → logprob: -14.828943252563477
    9. '(previous' → logprob: -15.078943252563477
    10. 'prev' → logprob: -15.203943252563477

Token 106: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0013021418126299977
    2. ',' → logprob: -6.876302242279053
    3. ',j' → logprob: -9.001301765441895
    4. 'dp' → logprob: -9.626301765441895
    5. ' ,' → logprob: -10.126301765441895
    6. '[' → logprob: -11.126301765441895
    7. ' [' → logprob: -11.626301765441895
    8. ' dp' → logprob: -12.376301765441895
    9. '),' → logprob: -12.751301765441895
    10. '   ' → logprob: -12.876301765441895

Token 107: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.4092584252357483
    2. '[j' → logprob: -1.4092583656311035
    3. '+' → logprob: -2.4092583656311035
    4. ']' → logprob: -7.4092583656311035
    5. 'j' → logprob: -8.659258842468262
    6. ',j' → logprob: -8.909258842468262
    7. '],[' → logprob: -9.034258842468262
    8. ',' → logprob: -9.284258842468262
    9. ' ],' → logprob: -9.409258842468262
    10. '],
' → logprob: -9.534258842468262

Token 108: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7481602430343628
    2. ' dp' → logprob: -0.8731602430343628
    3. ' prev' → logprob: -2.7481603622436523
    4. 'prev' → logprob: -3.1231603622436523
    5. '   ' → logprob: -7.373160362243652
    6. ' ' → logprob: -8.748160362243652
    7. '  ' → logprob: -8.873160362243652
    8. '	dp' → logprob: -9.748160362243652
    9. '    ' → logprob: -10.373160362243652
    10. '	prev' → logprob: -11.123160362243652

Token 109: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.981667537620524e-06
    2. 'j' → logprob: -13.250001907348633
    3. '   ' → logprob: -16.125001907348633
    4. '[' → logprob: -17.625001907348633
    5. ' [' → logprob: -17.750001907348633
    6. ',j' → logprob: -18.750001907348633
    7. '	j' → logprob: -18.875001907348633
    8. '[i' → logprob: -19.375001907348633
    9. ' ' → logprob: -19.500001907348633
    10. '    ' → logprob: -20.000001907348633

Token 110: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00027682865038514137
    2. '1' → logprob: -8.625276565551758
    3. '],' → logprob: -9.375276565551758
    4. ' +' → logprob: -12.500276565551758
    5. '),' → logprob: -12.750276565551758
    6. '```' → logprob: -13.250276565551758
    7. '[' → logprob: -13.500276565551758
    8. '   ' → logprob: -14.000276565551758
    9. ']' → logprob: -14.875276565551758
    10. '+
' → logprob: -15.125276565551758

Token 111: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5941604690160602e-05
    2. ' ' → logprob: -10.625025749206543
    3. '0' → logprob: -14.750025749206543
    4. '[' → logprob: -14.875025749206543
    5. '   ' → logprob: -15.125025749206543
    6. '+' → logprob: -15.375025749206543
    7. ')' → logprob: -15.875025749206543
    8. '[j' → logprob: -16.81252670288086
    9. '
' → logprob: -17.06252670288086
    10. 'j' → logprob: -17.12502670288086

Token 112: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00024834630312398076
    2. ' ,' → logprob: -8.375247955322266
    3. '),' → logprob: -11.000247955322266
    4. 'prev' → logprob: -14.375247955322266
    5. ')' → logprob: -15.375247955322266
    6. ',
' → logprob: -16.625247955322266
    7. ',p' → logprob: -16.625247955322266
    8. ',d' → logprob: -16.875247955322266
    9. ',j' → logprob: -17.500247955322266
    10. '],' → logprob: -18.250247955322266

Token 113: ' prev' (ID: 10258)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.3868733048439026
    2. ' prev' → logprob: -1.1368732452392578
    3. '	prev' → logprob: -13.136873245239258
    4. '(prev' → logprob: -15.261873245239258
    5. ' ' → logprob: -17.386873245239258
    6. '   ' → logprob: -17.636873245239258
    7. '.prev' → logprob: -18.011873245239258
    8. '  ' → logprob: -18.386873245239258
    9. '_prev' → logprob: -18.511873245239258
    10. '    ' → logprob: -18.636873245239258

Token 114: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000399091251892969
    2. ')+' → logprob: -7.875399112701416
    3. ' )' → logprob: -10.875398635864258
    4. '   ' → logprob: -18.125398635864258
    5. '）' → logprob: -18.500398635864258
    6. ' ' → logprob: -18.625398635864258
    7. '+' → logprob: -18.875398635864258
    8. ']' → logprob: -19.125398635864258
    9. '`)' → logprob: -19.375398635864258
    10. ' ' → logprob: -19.625398635864258

Token 115: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1702798306941986
    2. ' +' → logprob: -1.920279860496521
    3. ')' → logprob: -4.9202799797058105
    4. ')+' → logprob: -5.9202799797058105
    5. ']+' → logprob: -12.045279502868652
    6. '   ' → logprob: -12.670279502868652
    7. ' plus' → logprob: -12.795279502868652
    8. '+)' → logprob: -13.295279502868652
    9. ' )' → logprob: -13.920279502868652
    10. ' ' → logprob: -13.920279502868652

Token 116: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005536287208087742
    2. ' ' → logprob: -7.500553607940674
    3. '   ' → logprob: -14.375554084777832
    4. '  ' → logprob: -16.875553131103516
    5. ' ' → logprob: -17.375553131103516
    6. '```' → logprob: -18.125553131103516
    7. '
' → logprob: -19.063053131103516
    8. '           ' → logprob: -19.125553131103516
    9. '１' → logprob: -19.625553131103516
    10. '۱' → logprob: -19.750553131103516

Token 117: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '   ' → logprob: -17.500001907348633
    4. '```' → logprob: -18.125001907348633
    5. ' ' → logprob: -19.437501907348633
    6. '
' → logprob: -19.500001907348633
    7. '  ' → logprob: -19.562501907348633
    8. '۱' → logprob: -19.687501907348633
    9. '

' → logprob: -20.062501907348633
    10. '１' → logprob: -20.250001907348633

Token 118: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003450745716691017
    2. '               ' → logprob: -5.753450870513916
    3. 'else' → logprob: -8.628450393676758
    4. '
' → logprob: -10.378450393676758
    5. '            
' → logprob: -11.253450393676758
    6. '       ' → logprob: -11.253450393676758
    7. ' else' → logprob: -11.753450393676758
    8. '		' → logprob: -12.128450393676758
    9. '```' → logprob: -12.253450393676758
    10. '                
' → logprob: -12.628450393676758

Token 119: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012624661438167095
    2. '               ' → logprob: -4.387624740600586
    3. 'prev' → logprob: -10.137624740600586
    4. '```' → logprob: -10.512624740600586
    5. '       ' → logprob: -11.387624740600586
    6. '	       ' → logprob: -12.012624740600586
    7. '		' → logprob: -12.137624740600586
    8. 'else' → logprob: -12.512624740600586
    9. '   ' → logprob: -12.637624740600586
    10. '<|end|>' → logprob: -12.887624740600586

Token 120: ' if' (ID: 538)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.6585816740989685
    2. 'if' (adapté à ' if') → logprob: -0.9085816740989685
    3. '               ' → logprob: -3.1585817337036133
    4. 'prev' → logprob: -3.6585817337036133
    5. ' if' → logprob: -4.658581733703613
    6. ' max' → logprob: -6.658581733703613
    7. '           ' → logprob: -8.408581733703613
    8. '                   ' → logprob: -10.033581733703613
    9. ' prev' → logprob: -10.783581733703613
    10. '
' → logprob: -12.408581733703613

Token 121: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.03818287327885628
    2. ' dp' → logprob: -3.2881829738616943
    3. 'max' → logprob: -9.038183212280273
    4. ' max' → logprob: -11.413183212280273
    5. '	dp' → logprob: -11.663183212280273
    6. '(dp' → logprob: -12.913183212280273
    7. '   ' → logprob: -15.663183212280273
    8. ' ' → logprob: -16.288183212280273
    9. '_dp' → logprob: -16.413183212280273
    10. ' ' → logprob: -16.788183212280273

Token 122: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.0445127372804563e-05
    2. 'j' → logprob: -11.50001049041748
    3. '[' → logprob: -15.25001049041748
    4. '```' → logprob: -17.375009536743164
    5. '	j' → logprob: -18.375009536743164
    6. '[i' → logprob: -18.625009536743164
    7. ',j' → logprob: -18.625009536743164
    8. '[js' → logprob: -19.250009536743164
    9. '   ' → logprob: -19.625009536743164
    10. ' [' → logprob: -20.000009536743164

Token 123: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01261290255934
    2. '[j' → logprob: -4.387612819671631
    3. 'j' → logprob: -9.762613296508789
    4. '[' → logprob: -10.387613296508789
    5. '+j' → logprob: -11.762613296508789
    6. ']+' → logprob: -13.387613296508789
    7. '```' → logprob: -13.387613296508789
    8. '][' → logprob: -13.512613296508789
    9. '>' → logprob: -14.637613296508789
    10. ']' → logprob: -14.762613296508789

Token 124: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.2994620242971e-06
    2. '+' → logprob: -12.125008583068848
    3. ' ' → logprob: -13.875008583068848
    4. '[j' → logprob: -14.750008583068848
    5. '   ' → logprob: -15.000008583068848
    6. '       ' → logprob: -15.000008583068848
    7. '           ' → logprob: -15.250008583068848
    8. '```' → logprob: -15.625008583068848
    9. '[' → logprob: -15.875008583068848
    10. '                   ' → logprob: -16.62500762939453

Token 125: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.5759703516960144
    2. ' >' → logprob: -0.8259703516960144
    3. ' ' → logprob: -10.700970649719238
    4. ')' → logprob: -12.450970649719238
    5. '">' → logprob: -13.325970649719238
    6. ')>' → logprob: -13.950970649719238
    7. ' ' → logprob: -14.700970649719238
    8. '   ' → logprob: -14.825970649719238
    9. '[' → logprob: -15.325970649719238
    10. '  ' → logprob: -15.575970649719238

Token 126: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.2519325911998749
    2. ' >' → logprob: -1.5019326210021973
    3. ' ' → logprob: -12.751932144165039
    4. '">' → logprob: -15.626932144165039
    5. ')>' → logprob: -16.25193214416504
    6. ')' → logprob: -16.62693214416504
    7. ' ' → logprob: -16.75193214416504
    8. '()>' → logprob: -17.37693214416504
    9. '  ' → logprob: -17.62693214416504
    10. '   ' → logprob: -17.62693214416504

Token 127: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.005234002135694027
    2. ' max' → logprob: -5.2552337646484375
    3. '	max' → logprob: -16.380233764648438
    4. '
' → logprob: -16.630233764648438
    5. '=max' → logprob: -17.630233764648438
    6. '_max' → logprob: -17.630233764648438
    7. 'maxlength' → logprob: -17.755233764648438
    8. '               ' → logprob: -18.005233764648438
    9. '```' → logprob: -18.130233764648438
    10. '(max' → logprob: -18.130233764648438

Token 128: '_side' (ID: 46130)
  Prédit: '_side'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_side' → logprob: -3.128163257315464e-07
    2. 'side' → logprob: -16.5
    3. '_max' → logprob: -16.625
    4. '_' → logprob: -17.625
    5. '_SIDE' → logprob: -17.875
    6. '_size' → logprob: -18.375
    7. 'max' → logprob: -18.625
    8. 'Side' → logprob: -18.625
    9. '_square' → logprob: -20.0
    10. ' side' → logprob: -20.5

Token 129: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00026634239475242794
    2. ':
' → logprob: -8.250266075134277
    3. '=' → logprob: -13.000266075134277
    4. '):' → logprob: -13.750266075134277
    5. ':

' → logprob: -14.875266075134277
    6. ':max' → logprob: -15.000266075134277
    7. ' :' → logprob: -15.125266075134277
    8. 'max' → logprob: -15.750266075134277
    9. ':
' → logprob: -16.000267028808594
    10. '   ' → logprob: -16.125267028808594

Token 130: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.004493496380746365
    2. '                       ' → logprob: -6.004493713378906
    3. '               ' → logprob: -7.004493713378906
    4. ' max' → logprob: -7.754493713378906
    5. 'max' → logprob: -8.254493713378906
    6. '           ' → logprob: -8.754493713378906
    7. '                    
' → logprob: -9.004493713378906
    8. '
' → logprob: -10.254493713378906
    9. '                           ' → logprob: -10.629493713378906
    10. '<|end|>' → logprob: -11.004493713378906

Token 131: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.11638414114713669
    2. 'max' (adapté à ' max') → logprob: -2.3663840293884277
    3. '                   ' → logprob: -4.866384029388428
    4. '                       ' → logprob: -5.116384029388428
    5. '
' → logprob: -6.116384029388428
    6. '               ' → logprob: -10.366384506225586
    7. ' 
' → logprob: -10.991384506225586
    8. '           ' → logprob: -10.991384506225586
    9. '```' → logprob: -11.366384506225586
    10. '                    
' → logprob: -11.616384506225586

Token 132: '_side' (ID: 46130)
  Prédit: '_side'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_side' → logprob: -3.128163257315464e-07
    2. 'side' → logprob: -16.125
    3. 'Side' → logprob: -16.75
    4. '_' → logprob: -17.125
    5. '_SIDE' → logprob: -17.5
    6. '_s' → logprob: -18.5
    7. '   ' → logprob: -18.5
    8. '_size' → logprob: -18.875
    9. ' side' → logprob: -19.0
    10. '```' → logprob: -19.75

Token 133: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132629096508026
    2. ' =' → logprob: -1.313262939453125
    3. '=max' → logprob: -14.563262939453125
    4. '.=' → logprob: -15.938262939453125
    5. '＝' → logprob: -16.188262939453125
    6. '+=' → logprob: -16.688262939453125
    7. '=

' → logprob: -16.813262939453125
    8. ' ' → logprob: -16.938262939453125
    9. ',' → logprob: -17.188262939453125
    10. '=int' → logprob: -17.438262939453125

Token 134: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.014163628220558167
    2. ' dp' → logprob: -4.264163494110107
    3. '	dp' → logprob: -15.639163970947266
    4. '(dp' → logprob: -18.014163970947266
    5. '_dp' → logprob: -18.514163970947266
    6. '.dp' → logprob: -19.514163970947266
    7. 'd' → logprob: -20.139163970947266
    8. 'dt' → logprob: -20.264163970947266
    9. 'df' → logprob: -20.514163970947266
    10. 'dc' → logprob: -21.639163970947266

Token 135: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -9.014684110297821e-06
    2. 'j' → logprob: -11.625008583068848
    3. '```' → logprob: -16.875009536743164
    4. '	j' → logprob: -17.750009536743164
    5. '[' → logprob: -17.750009536743164
    6. ',j' → logprob: -19.125009536743164
    7. '_j' → logprob: -19.375009536743164
    8. '[js' → logprob: -19.500009536743164
    9. '[i' → logprob: -20.375009536743164
    10. '[
' → logprob: -20.875009536743164

Token 136: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0010051815770566463
    2. '[j' → logprob: -7.126005172729492
    3. ']+' → logprob: -9.376005172729492
    4. '[' → logprob: -9.751005172729492
    5. '1' → logprob: -10.751005172729492
    6. ']' → logprob: -10.876005172729492
    7. '+]' → logprob: -11.876005172729492
    8. '+j' → logprob: -12.001005172729492
    9. '+
' → logprob: -13.751005172729492
    10. '])' → logprob: -14.126005172729492

Token 137: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018065694894175977
    2. '+' → logprob: -8.6251802444458
    3. '```' → logprob: -14.8751802444458
    4. '[' → logprob: -15.0001802444458
    5. ' ' → logprob: -16.625181198120117
    6. '   ' → logprob: -16.625181198120117
    7. '[j' → logprob: -16.625181198120117
    8. ']' → logprob: -17.500181198120117
    9. ']+' → logprob: -17.625181198120117
    10. ')' → logprob: -18.000181198120117

Token 138: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19873970746994019
    2. '           ' → logprob: -2.198739767074585
    3. '<|end|>' → logprob: -2.948739767074585
    4. '
' → logprob: -5.323739528656006
    5. ']' → logprob: -5.573739528656006
    6. '       ' → logprob: -5.823739528656006
    7. '               ' → logprob: -6.073739528656006
    8. '```' → logprob: -7.573739528656006
    9. '<|end|>' → logprob: -7.573739528656006
    10. '}' → logprob: -7.698739528656006

Token 139: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.282920129597187e-05
    2. 'else' → logprob: -12.250012397766113
    3. '               ' → logprob: -12.375012397766113
    4. 'prev' → logprob: -13.375012397766113
    5. '
' → logprob: -13.750012397766113
    6. '       ' → logprob: -15.125012397766113
    7. '          ' → logprob: -15.500012397766113
    8. '            
' → logprob: -15.750012397766113
    9. ' prev' → logprob: -16.25001335144043
    10. '```' → logprob: -16.37501335144043

Token 140: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.2576853632926941
    2. '           ' → logprob: -1.5076854228973389
    3. ' else' → logprob: -5.75768518447876
    4. 'prev' → logprob: -6.50768518447876
    5. '       ' → logprob: -6.88268518447876
    6. '               ' → logprob: -11.257685661315918
    7. '   ' → logprob: -11.507685661315918
    8. '	prev' → logprob: -11.632685661315918
    9. ' prev' → logprob: -11.757685661315918
    10. '	       ' → logprob: -12.132685661315918

Token 141: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0922127366065979
    2. ':
' → logprob: -2.717212677001953
    3. ':' → logprob: -3.842212677001953
    4. '           ' → logprob: -7.967212677001953
    5. '):
' → logprob: -9.842212677001953
    6. 'dp' → logprob: -9.967212677001953
    7. '
' → logprob: -10.342212677001953
    8. ' dp' → logprob: -10.842212677001953
    9. '   ' → logprob: -11.092212677001953
    10. '```' → logprob: -11.092212677001953

Token 142: '               ' (ID: 506)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.09582912921905518
    2. ' dp' → logprob: -2.5958290100097656
    3. '               ' → logprob: -4.095829010009766
    4. '	dp' → logprob: -8.970829010009766
    5. '           ' → logprob: -10.720829010009766
    6. '   ' → logprob: -13.095829010009766
    7. '(dp' → logprob: -13.095829010009766
    8. '_dp' → logprob: -14.095829010009766
    9. ' ' → logprob: -15.470829010009766
    10. '       ' → logprob: -15.845829010009766

Token 143: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.00317783304490149
    2. ' dp' → logprob: -5.753177642822266
    3. '	dp' → logprob: -16.503177642822266
    4. '           ' → logprob: -20.128177642822266
    5. '_dp' → logprob: -20.253177642822266
    6. '               ' → logprob: -20.503177642822266
    7. '0' → logprob: -20.628177642822266
    8. '   ' → logprob: -20.628177642822266
    9. '(dp' → logprob: -21.128177642822266
    10. ' ' → logprob: -21.503177642822266

Token 144: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -14.875
    3. 'j' → logprob: -19.125
    4. '[
' → logprob: -20.0
    5. ' [' → logprob: -20.25
    6. '[i' → logprob: -20.375
    7. '[js' → logprob: -20.75
    8. '```' → logprob: -21.375
    9. '\[' → logprob: -22.125
    10. '
' → logprob: -22.375

Token 145: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00010723850573413074
    2. ']' → logprob: -9.625106811523438
    3. '+]' → logprob: -10.250106811523438
    4. '[' → logprob: -13.250106811523438
    5. ']=' → logprob: -13.250106811523438
    6. '1' → logprob: -13.625106811523438
    7. '=' → logprob: -14.875106811523438
    8. '+
' → logprob: -15.375106811523438
    9. '+=' → logprob: -15.625106811523438
    10. ']+' → logprob: -15.875106811523438

Token 146: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02648131176829338
    2. '1' → logprob: -3.6514813899993896
    3. ' ' → logprob: -9.276481628417969
    4. '=' → logprob: -10.401481628417969
    5. ']' → logprob: -10.401481628417969
    6. '   ' → logprob: -10.776481628417969
    7. ']=' → logprob: -13.651481628417969
    8. ' =' → logprob: -14.151481628417969
    9. '  ' → logprob: -14.401481628417969
    10. '    ' → logprob: -14.526481628417969

Token 147: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0011709370883181691
    2. ' =' → logprob: -6.751171112060547
    3. ')=' → logprob: -15.126171112060547
    4. ']=' → logprob: -15.251171112060547
    5. ')' → logprob: -15.751171112060547
    6. ']' → logprob: -16.501171112060547
    7. '0' → logprob: -19.501171112060547
    8. '=

' → logprob: -20.001171112060547
    9. ' ' → logprob: -20.376171112060547
    10. '=
' → logprob: -20.876171112060547

Token 148: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.676292231422849e-05
    2. ' =' → logprob: -11.000017166137695
    3. '0' → logprob: -21.500017166137695
    4. '=

' → logprob: -22.250017166137695
    5. '=
' → logprob: -22.375017166137695
    6. '.=' → logprob: -22.875017166137695
    7. '＝' → logprob: -23.250017166137695
    8. ']=' → logprob: -23.625017166137695
    9. ')=' → logprob: -24.000017166137695
    10. '=}' → logprob: -24.375017166137695

Token 149: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '۰' → logprob: -19.12500762939453
    4. '   ' → logprob: -19.37500762939453
    5. '00' → logprob: -19.37500762939453
    6. '000' → logprob: -19.87500762939453
    7. '```' → logprob: -20.25000762939453
    8. ' ' → logprob: -20.93750762939453
    9. '０' → logprob: -21.12500762939453
    10. '  ' → logprob: -21.43750762939453

Token 150: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '۰' → logprob: -19.125001907348633
    4. '00' → logprob: -20.000001907348633
    5. '   ' → logprob: -20.375001907348633
    6. '```' → logprob: -20.500001907348633
    7. '000' → logprob: -20.625001907348633
    8. '０' → logprob: -21.062501907348633
    9. '०' → logprob: -21.437501907348633
    10. '০' → logprob: -21.750001907348633

Token 151: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.47626737493556e-05
    2. 'prev' → logprob: -10.62503433227539
    3. '       ' → logprob: -12.37503433227539
    4. '          ' → logprob: -12.62503433227539
    5. '<|end|>' → logprob: -14.37503433227539
    6. '         ' → logprob: -14.87503433227539
    7. '   ' → logprob: -15.00003433227539
    8. '            
' → logprob: -15.25003433227539
    9. '```' → logprob: -15.37503433227539
    10. '               ' → logprob: -15.37503433227539

Token 152: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -4.787507714354433e-05
    2. '       ' → logprob: -10.25004768371582
    3. 'prev' → logprob: -12.12504768371582
    4. '          ' → logprob: -13.37504768371582
    5. '<|end|>' → logprob: -13.50004768371582
    6. '   ' → logprob: -13.62504768371582
    7. '```' → logprob: -14.25004768371582
    8. '               ' → logprob: -14.37504768371582
    9. '	       ' → logprob: -14.87504768371582
    10. '0' → logprob: -15.00004768371582

Token 153: ' prev' (ID: 10258)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' (adapté à ' prev') → logprob: -0.10820170491933823
    2. '           ' → logprob: -2.358201742172241
    3. ' prev' → logprob: -4.858201503753662
    4. '       ' → logprob: -8.85820198059082
    5. '	prev' → logprob: -10.48320198059082
    6. '   ' → logprob: -11.10820198059082
    7. '(prev' → logprob: -12.10820198059082
    8. '.prev' → logprob: -12.73320198059082
    9. '_prev' → logprob: -12.85820198059082
    10. '               ' → logprob: -13.98320198059082

Token 154: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0005530327325686812
    2. ' =' → logprob: -7.500553131103516
    3. '=}' → logprob: -18.375553131103516
    4. '=

' → logprob: -18.500553131103516
    5. '＝' → logprob: -19.125553131103516
    6. '=temp' → logprob: -19.125553131103516
    7. '=
' → logprob: -19.375553131103516
    8. '=int' → logprob: -20.625553131103516
    9. ',' → logprob: -20.625553131103516
    10. '.=' → logprob: -21.250553131103516

Token 155: ' temp' (ID: 5484)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.0005537479883059859
    2. ' temp' → logprob: -7.500553607940674
    3. 'tmp' → logprob: -14.375554084777832
    4. 'dp' → logprob: -15.375554084777832
    5. 'tem' → logprob: -18.125553131103516
    6. 'tp' → logprob: -20.500553131103516
    7. 't' → logprob: -20.875553131103516
    8. '	temp' → logprob: -21.000553131103516
    9. ' dp' → logprob: -21.125553131103516
    10. ' tmp' → logprob: -22.500553131103516

Token 156: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04756075516343117
    2. '   ' → logprob: -3.547560691833496
    3. '
' → logprob: -4.047560691833496
    4. '    
' → logprob: -9.297560691833496
    5. ' print' → logprob: -10.047560691833496
    6. '```' → logprob: -10.422560691833496
    7. '<|end|>' → logprob: -11.547560691833496
    8. '  
' → logprob: -12.422560691833496
    9. '
' → logprob: -13.047560691833496
    10. '#print' → logprob: -14.047560691833496

Token 157: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03007603995501995
    2. '   ' → logprob: -3.530076026916504
    3. '
' → logprob: -8.655076026916504
    4. ' print' → logprob: -9.780076026916504
    5. '    
' → logprob: -9.905076026916504
    6. '```' → logprob: -10.780076026916504
    7. '<|end|>' → logprob: -11.155076026916504
    8. '  
' → logprob: -12.780076026916504
    9. '\n' → logprob: -13.030076026916504
    10. ')' → logprob: -14.030076026916504

Token 158: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0007393499254249036
    2. '   ' → logprob: -7.625739574432373
    3. '
' → logprob: -8.500739097595215
    4. ' print' → logprob: -10.750739097595215
    5. '```' → logprob: -11.250739097595215
    6. '    
' → logprob: -11.375739097595215
    7. '  
' → logprob: -14.500739097595215
    8. '

' → logprob: -14.750739097595215
    9. '   
' → logprob: -15.750739097595215
    10. '#print' → logprob: -16.00074005126953

Token 159: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.0009377855458296835
    2. '(' → logprob: -7.0009379386901855
    3. 'max' → logprob: -10.625937461853027
    4. ' (' → logprob: -14.125937461853027
    5. ' max' → logprob: -14.875937461853027
    6. '()' → logprob: -15.125937461853027
    7. '(m' → logprob: -15.375937461853027
    8. '((' → logprob: -15.625937461853027
    9. '(f' → logprob: -15.875937461853027
    10. '(min' → logprob: -16.375938415527344

Token 160: '_side' (ID: 46130)
  Prédit: '_side'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_side' → logprob: -4.320199877838604e-07
    2. 'side' → logprob: -15.375
    3. '_' → logprob: -16.75
    4. '_square' → logprob: -17.0
    5. ')' → logprob: -17.25
    6. ' _' → logprob: -18.375
    7. '_SIDE' → logprob: -18.75
    8. ')_' → logprob: -18.75
    9. '_space' → logprob: -18.875
    10. '_s' → logprob: -19.0

Token 161: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.632542913896032e-05
    2. '*' → logprob: -10.250046730041504
    3. ' )' → logprob: -12.000046730041504
    4. '*)' → logprob: -13.250046730041504
    5. '**' → logprob: -14.625046730041504
    6. ')
' → logprob: -14.625046730041504
    7. '+' → logprob: -14.625046730041504
    8. ')`' → logprob: -14.875046730041504
    9. '```' → logprob: -14.875046730041504
    10. '))' → logprob: -15.500046730041504


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 159
Tokens correctement prédits (1ère position, stricte): 68
Tokens correctement prédits (1ère position, avec adaptation): 73
Tokens correctement prédits (top 10): 144
Précision stricte (1ère position): 42.77%
Précision adaptée (1ère position): 45.91%
Précision (top 10): 90.57%
================================================================================
