================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:08:07
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
input=sys.stdin.readline

N=int(input())
bugs=[]
for _ in range(N):
    a,b=map(int,input().split())
    bugs.append((a,b))

bugs.sort(key=lambda x:x[1])

def can(k):
    if k==0:
        return True
    selected_bugs=bugs[:k]
    selected_bugs.sort(key=lambda x:x[0])
    total_a=sum(x[0] for x in selected_bugs)
    for i in range(k):
        if total_a>selected_bugs[i][1]*k:
            return False
    return True

left,right=0,N
while left<right:
    mid=(left+right+1)//2
    if can(mid):
        left=mid
    else:
        right=mid-1
print(left)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'input' (ID: 2586)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6975938677787781
    2. '\n' → logprob: -0.8225938677787781
    3. '<|end|>' → logprob: -3.572593927383423
    4. '\' → logprob: -4.322593688964844
    5. 'newline' → logprob: -5.072593688964844
    6. 'import' → logprob: -5.322593688964844
    7. '<|end|>' → logprob: -5.947593688964844
    8. '```' → logprob: -6.572593688964844
    9. '' → logprob: -6.697593688964844
    10. '
' → logprob: -6.947593688964844

Token 4: '=sys' (ID: 149200)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.048905275762081146
    2. '.' → logprob: -3.048905372619629
    3. ' (' → logprob: -9.298905372619629
    4. '(
' → logprob: -9.423905372619629
    5. ')' → logprob: -10.173905372619629
    6. '()' → logprob: -11.173905372619629
    7. '[' → logprob: -11.298905372619629
    8. ' ' → logprob: -11.423905372619629
    9. ''s' → logprob: -11.548905372619629
    10. '```' → logprob: -11.923905372619629

Token 5: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0011133047519251704
    2. '[' → logprob: -7.501113414764404
    3. ' .' → logprob: -8.376112937927246
    4. '.readline' → logprob: -8.501112937927246
    5. '.
' → logprob: -10.876112937927246
    6. '.[' → logprob: -11.126112937927246
    7. '.get' → logprob: -11.251112937927246
    8. '.setdefault' → logprob: -11.501112937927246
    9. ''.' → logprob: -12.126112937927246
    10. '"."' → logprob: -12.251112937927246

Token 6: '.readline' (ID: 74673)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5263932943344116
    2. '.readline' → logprob: -0.9013932943344116
    3. '.read' → logprob: -5.776393413543701
    4. 'read' → logprob: -10.276392936706543
    5. '.Read' → logprob: -10.526392936706543
    6. ' readline' → logprob: -10.776392936706543
    7. '```' → logprob: -10.901392936706543
    8. '<|end|>' → logprob: -11.401392936706543
    9. '.

' → logprob: -11.526392936706543
    10. '.readlines' → logprob: -11.651392936706543

Token 7: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.024233611300587654
    2. '(' → logprob: -3.89923357963562
    3. '().' → logprob: -6.149233818054199
    4. '()
' → logprob: -7.149233818054199
    5. '(
' → logprob: -7.899233818054199
    6. '()\' → logprob: -9.0242338180542
    7. '()

' → logprob: -9.6492338180542
    8. '(

' → logprob: -10.0242338180542
    9. ' ()' → logprob: -10.1492338180542
    10. '
' → logprob: -10.7742338180542

Token 8: 'N' (ID: 45)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25258418917655945
    2. '()' → logprob: -1.5025842189788818
    3. '().' → logprob: -8.252584457397461
    4. '(
' → logprob: -8.377584457397461
    5. '()
' → logprob: -10.002584457397461
    6. ')' → logprob: -11.252584457397461
    7. '("")' → logprob: -11.377584457397461
    8. '.' → logprob: -11.627584457397461
    9. '()

' → logprob: -11.752584457397461
    10. ',' → logprob: -11.877584457397461

Token 9: '=int' (ID: 37431)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8729655742645264
    2. ' ' → logprob: -1.2479655742645264
    3. ' =' → logprob: -1.6229655742645264
    4. ')' → logprob: -3.3729655742645264
    5. '[' → logprob: -3.8729655742645264
    6. '.' → logprob: -4.4979658126831055
    7. '+' → logprob: -4.6229658126831055
    8. '*' → logprob: -5.2479658126831055
    9. '  ' → logprob: -6.1229658126831055
    10. '>' → logprob: -6.2479658126831055

Token 10: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.020684247836470604
    2. '(input' → logprob: -3.895684242248535
    3. '('' → logprob: -10.145684242248535
    4. 'input' → logprob: -10.645684242248535
    5. '()' → logprob: -11.145684242248535
    6. '(N' → logprob: -11.145684242248535
    7. '(
' → logprob: -11.270684242248535
    8. '(sys' → logprob: -11.645684242248535
    9. '(`' → logprob: -11.645684242248535
    10. ' (' → logprob: -11.770684242248535

Token 11: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.09606090933084488
    2. '()' → logprob: -2.9710609912872314
    3. ')' → logprob: -3.2210609912872314
    4. '(' → logprob: -7.971060752868652
    5. ' ())' → logprob: -9.846060752868652
    6. '().' → logprob: -11.596060752868652
    7. '`)' → logprob: -12.846060752868652
    8. '())
' → logprob: -12.846060752868652
    9. '();)' → logprob: -12.846060752868652
    10. '()))' → logprob: -12.971060752868652

Token 12: 'bugs' (ID: 114566)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.47407492995262146
    2. ')' → logprob: -1.8490749597549438
    3. ' ' → logprob: -3.0990748405456543
    4. '\n' → logprob: -3.3490748405456543
    5. '[' → logprob: -3.8490748405456543
    6. '\' → logprob: -4.099074840545654
    7. '(' → logprob: -4.224074840545654
    8. ' for' → logprob: -4.349074840545654
    9. 'data' → logprob: -4.599074840545654
    10. ' 
' → logprob: -4.724074840545654

Token 13: '=[]
' (ID: 63466)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.030208146199584007
    2. '_count' → logprob: -4.655208110809326
    3. '[:]' → logprob: -5.280208110809326
    4. ' =' → logprob: -5.405208110809326
    5. '.' → logprob: -6.155208110809326
    6. 's' → logprob: -6.155208110809326
    7. '_' → logprob: -6.405208110809326
    8. '=' → logprob: -6.655208110809326
    9. '_counts' → logprob: -7.155208110809326
    10. ')' → logprob: -7.655208110809326

Token 14: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.025299808010458946
    2. ' for' → logprob: -3.7752997875213623
    3. '[' → logprob: -6.275300025939941
    4. '
' → logprob: -10.400300025939941
    5. '[
' → logprob: -10.775300025939941
    6. '	for' → logprob: -10.900300025939941
    7. '\' → logprob: -11.025300025939941
    8. '\n' → logprob: -11.025300025939941
    9. '<|end|>' → logprob: -11.400300025939941
    10. '[]' → logprob: -11.400300025939941

Token 15: ' _' (ID: 1175)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.014748048037290573
    2. ' i' → logprob: -4.2647480964660645
    3. ' _' → logprob: -7.5147480964660645
    4. '  ' → logprob: -11.389747619628906
    5. '_' → logprob: -11.639747619628906
    6. 'i' → logprob: -11.889747619628906
    7. ' range' → logprob: -12.389747619628906
    8. ' I' → logprob: -12.764747619628906
    9. ' ‌' → logprob: -12.889747619628906
    10. ' ' → logprob: -14.264747619628906

Token 16: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03006424941122532
    2. 'in' → logprob: -3.530064344406128
    3. ' ' → logprob: -8.405064582824707
    4. '	in' → logprob: -10.030064582824707
    5. ' i' → logprob: -11.530064582824707
    6. 'import' → logprob: -11.905064582824707
    7. ' _' → logprob: -11.905064582824707
    8. 'i' → logprob: -11.905064582824707
    9. 'n' → logprob: -12.780064582824707
    10. 'range' → logprob: -13.030064582824707

Token 17: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1128382757306099
    2. ' range' → logprob: -2.2378382682800293
    3. 'bugs' → logprob: -12.487838745117188
    4. 'N' → logprob: -13.487838745117188
    5. '(range' → logprob: -13.487838745117188
    6. ' bugs' → logprob: -13.487838745117188
    7. 'rang' → logprob: -13.737838745117188
    8. ' ' → logprob: -13.737838745117188
    9. '[' → logprob: -14.362838745117188
    10. '	range' → logprob: -14.487838745117188

Token 18: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20221680402755737
    2. ' (' → logprob: -1.7022168636322021
    3. '(N' → logprob: -7.202216625213623
    4. '(int' → logprob: -10.827217102050781
    5. '(n' → logprob: -11.327217102050781
    6. '(range' → logprob: -12.202217102050781
    7. ' )' → logprob: -12.577217102050781
    8. ' ' → logprob: -12.702217102050781
    9. ' N' → logprob: -12.702217102050781
    10. '(
' → logprob: -12.827217102050781

Token 19: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.014382093213498592
    2. ')' → logprob: -4.2643818855285645
    3. ' ):' → logprob: -9.389382362365723
    4. '):
' → logprob: -9.514382362365723
    5. ':' → logprob: -9.889382362365723
    6. ' )' → logprob: -12.264382362365723
    7. ',' → logprob: -13.514382362365723
    8. '+' → logprob: -14.139382362365723
    9. ')：' → logprob: -14.764382362365723
    10. ' ' → logprob: -14.764382362365723

Token 20: '   ' (ID: 271)
  Prédit: ' bugs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bugs' → logprob: -0.03673132508993149
    2. '   ' → logprob: -3.411731243133545
    3. 'bugs' → logprob: -6.536731243133545
    4. ' bug' → logprob: -6.786731243133545
    5. ' b' → logprob: -8.411731719970703
    6. ' input' → logprob: -9.411731719970703
    7. 'b' → logprob: -10.036731719970703
    8. ' line' → logprob: -10.786731719970703
    9. '   ' → logprob: -10.911731719970703
    10. '	b' → logprob: -11.161731719970703

Token 21: ' a' (ID: 261)
  Prédit: 'bugs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bugs' → logprob: -0.12470752000808716
    2. ' bugs' → logprob: -2.3747074604034424
    3. 'bug' → logprob: -4.4997076988220215
    4. 'b' → logprob: -4.6247076988220215
    5. ' bug' → logprob: -7.1247076988220215
    6. '   ' → logprob: -7.4997076988220215
    7. 'input' → logprob: -8.374707221984863
    8. 'x' → logprob: -8.374707221984863
    9. 'name' → logprob: -8.374707221984863
    10. 's' → logprob: -8.499707221984863

Token 22: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.34371528029441833
    2. ',b' → logprob: -1.3437153100967407
    3. ' ,' → logprob: -4.718715190887451
    4. ' =' → logprob: -4.843715190887451
    5. '=' → logprob: -6.093715190887451
    6. 'pp' → logprob: -6.218715190887451
    7. ',p' → logprob: -6.468715190887451
    8. '.append' → logprob: -6.593715190887451
    9. 'p' → logprob: -6.718715190887451
    10. 'b' → logprob: -6.968715190887451

Token 23: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004703176207840443
    2. ' =' → logprob: -5.754703044891357
    3. '=input' → logprob: -6.504703044891357
    4. '=int' → logprob: -11.504703521728516
    5. '=b' → logprob: -12.254703521728516
    6. '=a' → logprob: -12.629703521728516
    7. ',' → logprob: -13.754703521728516
    8. '=list' → logprob: -13.754703521728516
    9. '=line' → logprob: -14.004703521728516
    10. '=_' → logprob: -14.129703521728516

Token 24: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.14338508248329163
    2. ' map' → logprob: -2.018385171890259
    3. 'input' → logprob: -7.39338493347168
    4. ' input' → logprob: -9.51838493347168
    5. 'list' → logprob: -11.39338493347168
    6. ' ' → logprob: -13.01838493347168
    7. '	map' → logprob: -13.26838493347168
    8. ' list' → logprob: -13.64338493347168
    9. 'm' → logprob: -13.64338493347168
    10. ' ' → logprob: -14.01838493347168

Token 25: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.003716700244694948
    2. '(' → logprob: -5.753716468811035
    3. '(str' → logprob: -7.878716468811035
    4. '(lambda' → logprob: -9.003716468811035
    5. '(input' → logprob: -10.878716468811035
    6. '(list' → logprob: -11.878716468811035
    7. '[int' → logprob: -12.628716468811035
    8. '<int' → logprob: -13.128716468811035
    9. 'int' → logprob: -13.628716468811035
    10. '(in' → logprob: -13.753716468811035

Token 26: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.08988510817289352
    2. ',' → logprob: -2.4648849964141846
    3. '(input' → logprob: -7.214885234832764
    4. 'input' → logprob: -8.589884757995605
    5. '(' → logprob: -11.714884757995605
    6. ' ,' → logprob: -11.839884757995605
    7. ' input' → logprob: -12.089884757995605
    8. ')' → logprob: -14.464884757995605
    9. '=input' → logprob: -14.714884757995605
    10. '[input' → logprob: -14.839884757995605

Token 27: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.034592388459714e-06
    2. '()' → logprob: -12.125005722045898
    3. '())' → logprob: -15.500005722045898
    4. ' ().' → logprob: -15.875005722045898
    5. '.split' → logprob: -16.7500057220459
    6. '(' → logprob: -17.0000057220459
    7. ')' → logprob: -18.1250057220459
    8. 'split' → logprob: -18.1250057220459
    9. '.' → logprob: -18.8750057220459
    10. '.readline' → logprob: -19.0000057220459

Token 28: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0007750853546895087
    2. 'strip' → logprob: -7.25077486038208
    3. 'rstrip' → logprob: -9.750775337219238
    4. ' split' → logprob: -12.375775337219238
    5. '(split' → logprob: -13.250775337219238
    6. ')' → logprob: -14.000775337219238
    7. ' ' → logprob: -16.750774383544922
    8. '```' → logprob: -17.875774383544922
    9. 'spl' → logprob: -18.125774383544922
    10. '_split' → logprob: -18.125774383544922

Token 29: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5780462622642517
    2. '())' → logprob: -0.8280462622642517
    3. '()' → logprob: -6.3280463218688965
    4. '))' → logprob: -8.328045845031738
    5. '`)' → logprob: -10.453045845031738
    6. '()))' → logprob: -11.203045845031738
    7. '())
' → logprob: -11.328045845031738
    8. ')`' → logprob: -11.828045845031738
    9. '(' → logprob: -12.453045845031738
    10. ')")' → logprob: -12.828045845031738

Token 30: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3252730667591095
    2. 'bugs' → logprob: -1.575273036956787
    3. ' bugs' → logprob: -2.825273036956787
    4. '
' → logprob: -5.325273036956787
    5. '<|end|>' → logprob: -5.825273036956787
    6. '```' → logprob: -6.700273036956787
    7. ')' → logprob: -7.825273036956787
    8. '	b' → logprob: -7.825273036956787
    9. '    
' → logprob: -8.325273513793945
    10. ',' → logprob: -8.700273513793945

Token 31: ' bugs' (ID: 39184)
  Prédit: ' bugs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bugs' → logprob: -0.7047973871231079
    2. 'bugs' (adapté à ' bugs') → logprob: -0.7047973871231079
    3. '   ' → logprob: -4.829797267913818
    4. ' if' → logprob: -5.954797267913818
    5. 'if' → logprob: -8.079797744750977
    6. 'bug' → logprob: -8.204797744750977
    7. 'b' → logprob: -8.954797744750977
    8. '<|end|>' → logprob: -9.329797744750977
    9. '```' → logprob: -9.579797744750977
    10. ' bug' → logprob: -10.454797744750977

Token 32: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0003874166286550462
    2. '.' → logprob: -7.875387191772461
    3. '.ap' → logprob: -12.625387191772461
    4. '.add' → logprob: -13.500387191772461
    5. '.app' → logprob: -14.125387191772461
    6. '.extend' → logprob: -14.250387191772461
    7. '.setdefault' → logprob: -14.875387191772461
    8. ').' → logprob: -15.125387191772461
    9. '.push' → logprob: -15.625387191772461
    10. ' .' → logprob: -16.00038719177246

Token 33: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0026697113644331694
    2. '(' → logprob: -6.002669811248779
    3. '(a' → logprob: -8.627669334411621
    4. '([' → logprob: -11.752669334411621
    5. '(b' → logprob: -12.252669334411621
    6. '(
' → logprob: -14.252669334411621
    7. '(tuple' → logprob: -15.252669334411621
    8. '(ab' → logprob: -15.877669334411621
    9. '(('' → logprob: -16.252670288085938
    10. '(A' → logprob: -16.252670288085938

Token 34: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.0206720617134124e-05
    2. ' a' → logprob: -11.50001049041748
    3. '   ' → logprob: -17.875009536743164
    4. ' ' → logprob: -19.125009536743164
    5. '  ' → logprob: -19.875009536743164
    6. '	a' → logprob: -20.125009536743164
    7. ')a' → logprob: -20.125009536743164
    8. '(a' → logprob: -20.250009536743164
    9. '    ' → logprob: -21.500009536743164
    10. ''a' → logprob: -21.750009536743164

Token 35: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.31385335326194763
    2. ',' → logprob: -1.31385338306427
    3. ' ,' → logprob: -7.4388532638549805
    4. ' ' → logprob: -14.06385326385498
    5. 'b' → logprob: -14.81385326385498
    6. ' b' → logprob: -15.06385326385498
    7. '-' → logprob: -15.31385326385498
    8. ',
' → logprob: -15.56385326385498
    9. '`,`' → logprob: -15.81385326385498
    10. ',)' → logprob: -16.063854217529297

Token 36: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.07890807837247849
    2. ')' → logprob: -2.5789079666137695
    3. '))
' → logprob: -11.57890796661377
    4. ')))' → logprob: -12.20390796661377
    5. '),' → logprob: -13.57890796661377
    6. ' ))' → logprob: -13.57890796661377
    7. ')
' → logprob: -14.70390796661377
    8. ',' → logprob: -15.82890796661377
    9. ''))' → logprob: -15.82890796661377
    10. ' ' → logprob: -16.703908920288086

Token 37: 'bugs' (ID: 114566)
  Prédit: 'bugs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bugs' → logprob: -0.024079659953713417
    2. 'dp' → logprob: -4.3990797996521
    3. 'for' → logprob: -5.1490797996521
    4. 'from' → logprob: -7.7740797996521
    5. 'answers' → logprob: -7.8990797996521
    6. 'result' → logprob: -7.8990797996521
    7. 'visited' → logprob: -8.024079322814941
    8. 'print' → logprob: -8.149079322814941
    9. 'sorted' → logprob: -8.149079322814941
    10. '```' → logprob: -8.149079322814941

Token 38: '.sort' (ID: 19551)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 39: '(key' (ID: 8932)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.10053864866495132
    2. '(' → logprob: -2.350538730621338
    3. '(()' → logprob: -8.97553825378418
    4. '((' → logprob: -9.47553825378418
    5. '(key' → logprob: -9.47553825378418
    6. '(reverse' → logprob: -10.60053825378418
    7. '```' → logprob: -12.60053825378418
    8. 'key' → logprob: -13.35053825378418
    9. '(
' → logprob: -13.47553825378418
    10. '(keys' → logprob: -13.47553825378418

Token 40: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.011048408225178719
    2. '=' → logprob: -4.511048316955566
    3. 'lambda' → logprob: -14.761048316955566
    4. '=

' → logprob: -17.386049270629883
    5. '=len' → logprob: -17.511049270629883
    6. '=
' → logprob: -17.886049270629883
    7. '=}' → logprob: -18.136049270629883
    8. '=l' → logprob: -18.261049270629883
    9. '=item' → logprob: -18.261049270629883
    10. ' =' → logprob: -18.261049270629883

Token 41: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.47828102111816406
    2. 'x' → logprob: -0.9782810211181641
    3. ' bug' → logprob: -5.728281021118164
    4. 'bug' → logprob: -7.478281021118164
    5. ' bugs' → logprob: -8.478281021118164
    6. 'b' → logprob: -9.353281021118164
    7. ' b' → logprob: -9.853281021118164
    8. ' lambda' → logprob: -11.603281021118164
    9. ' a' → logprob: -11.728281021118164
    10. 'lambda' → logprob: -13.103281021118164

Token 42: ':x' (ID: 73587)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012696112506091595
    2. ':x' → logprob: -4.387696266174316
    3. ' :' → logprob: -8.762696266174316
    4. '[' → logprob: -11.262696266174316
    5. 'x' → logprob: -11.262696266174316
    6. ':(' → logprob: -13.887696266174316
    7. ':
' → logprob: -14.387696266174316
    8. ':`' → logprob: -14.762696266174316
    9. ':a' → logprob: -15.137696266174316
    10. ' x' → logprob: -15.762696266174316

Token 43: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.061054359131958e-06
    2. ' [' → logprob: -12.625007629394531
    3. ')' → logprob: -13.375007629394531
    4. ':' → logprob: -14.000007629394531
    5. '.' → logprob: -14.375007629394531
    6. ')[' → logprob: -15.125007629394531
    7. '[::-' → logprob: -15.250007629394531
    8. '[]' → logprob: -15.375007629394531
    9. '[
' → logprob: -15.625007629394531
    10. '[:' → logprob: -15.875007629394531

Token 44: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10026167333126068
    2. '1' → logprob: -2.350261688232422
    3. ' ' → logprob: -9.975261688232422
    4. '-' → logprob: -12.975261688232422
    5. '[' → logprob: -13.975261688232422
    6. ':' → logprob: -14.287761688232422
    7. '   ' → logprob: -14.350261688232422
    8. '::-' → logprob: -14.537761688232422
    9. '01' → logprob: -14.850261688232422
    10. '
' → logprob: -14.850261688232422

Token 45: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01423520129173994
    2. '))' → logprob: -4.264235019683838
    3. ' )' → logprob: -9.889235496520996
    4. '),' → logprob: -11.889235496520996
    5. '})' → logprob: -12.764235496520996
    6. ')
' → logprob: -13.014235496520996
    7. ',' → logprob: -13.014235496520996
    8. ')))' → logprob: -13.514235496520996
    9. '])' → logprob: -13.889235496520996
    10. ' ))' → logprob: -14.014235496520996

Token 46: 'def' (ID: 1314)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3801800608634949
    2. 'count' → logprob: -2.8801801204681396
    3. 'answer' → logprob: -2.8801801204681396
    4. 'result' → logprob: -3.0051801204681396
    5. 'max' → logprob: -3.6301801204681396
    6. 'for' → logprob: -3.8801801204681396
    7. 'ans' → logprob: -4.3801798820495605
    8. 'selected' → logprob: -4.5051798820495605
    9. 'cnt' → logprob: -4.6301798820495605
    10. 'last' → logprob: -4.7551798820495605

Token 47: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.9169931411743164
    2. ' solve' → logprob: -1.0419931411743164
    3. ' max' → logprob: -3.0419931411743164
    4. ' find' → logprob: -3.2919931411743164
    5. ' binary' → logprob: -3.2919931411743164
    6. ' is' → logprob: -3.2919931411743164
    7. ' check' → logprob: -3.6669931411743164
    8. ' solution' → logprob: -4.791993141174316
    9. ' merge' → logprob: -4.916993141174316
    10. ' fix' → logprob: -5.041993141174316

Token 48: '(k' (ID: 12125)
  Prédit: '_place'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_place' → logprob: -0.7644667029380798
    2. '_fix' → logprob: -1.6394667625427246
    3. '_finish' → logprob: -2.3894667625427246
    4. '_make' → logprob: -3.3894667625427246
    5. '_install' → logprob: -3.3894667625427246
    6. '_use' → logprob: -3.7644667625427246
    7. '_buy' → logprob: -4.014466762542725
    8. '_jump' → logprob: -4.264466762542725
    9. '_sur' → logprob: -4.264466762542725
    10. '_do' → logprob: -4.514466762542725

Token 49: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004402463324368
    2. '):
' → logprob: -5.5044026374816895
    3. '):
' → logprob: -8.629402160644531
    4. ')' → logprob: -9.129402160644531
    5. ' ):' → logprob: -11.629402160644531
    6. '=' → logprob: -11.754402160644531
    7. '):

' → logprob: -13.129402160644531
    8. '```' → logprob: -13.129402160644531
    9. ':' → logprob: -13.629402160644531
    10. ')):' → logprob: -13.879402160644531

Token 50: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23467791080474854
    2. ' current' → logprob: -2.859677791595459
    3. ' bugs' → logprob: -3.484677791595459
    4. 'current' → logprob: -3.609677791595459
    5. 'count' → logprob: -4.359677791595459
    6. '    ' → logprob: -4.609677791595459
    7. ' count' → logprob: -4.984677791595459
    8. 'bugs' → logprob: -5.484677791595459
    9. ' dp' → logprob: -5.734677791595459
    10. ' last' → logprob: -5.859677791595459

Token 51: ' if' (ID: 538)
  Prédit: ' time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' time' → logprob: -0.9273072481155396
    2. 'time' → logprob: -1.6773072481155396
    3. ' for' → logprob: -2.55230712890625
    4. ' current' → logprob: -2.80230712890625
    5. ' curr' → logprob: -3.55230712890625
    6. ' prev' → logprob: -3.67730712890625
    7. ' last' → logprob: -3.67730712890625
    8. ' max' → logprob: -3.67730712890625
    9. 'current' → logprob: -4.05230712890625
    10. ' count' → logprob: -4.30230712890625

Token 52: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.6928605437278748
    2. ' bugs' → logprob: -1.3178606033325195
    3. 'k' → logprob: -1.6928606033325195
    4. 'bugs' → logprob: -3.5678606033325195
    5. ' not' → logprob: -4.6928606033325195
    6. ' len' → logprob: -5.6928606033325195
    7. ' all' → logprob: -5.6928606033325195
    8. 'len' → logprob: -6.8178606033325195
    9. 'all' → logprob: -7.8178606033325195
    10. ' ' → logprob: -7.9428606033325195

Token 53: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.116147480905056
    2. ' ==' → logprob: -2.241147518157959
    3. '>' → logprob: -6.491147518157959
    4. '<' → logprob: -7.491147518157959
    5. '<=' → logprob: -7.491147518157959
    6. ' >' → logprob: -8.4911470413208
    7. ' ' → logprob: -9.2411470413208
    8. '=' → logprob: -9.3661470413208
    9. '*' → logprob: -9.7411470413208
    10. ' <=' → logprob: -10.1161470413208

Token 54: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01628069020807743
    2. ' ' → logprob: -4.141280651092529
    3. '1' → logprob: -8.391281127929688
    4. '-' → logprob: -12.391281127929688
    5. ' -' → logprob: -13.016281127929688
    6. '   ' → logprob: -13.141281127929688
    7. '=' → logprob: -13.328781127929688
    8. '  ' → logprob: -13.516281127929688
    9. '2' → logprob: -14.266281127929688
    10. 'k' → logprob: -14.328781127929688

Token 55: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018783647567033768
    2. ':return' → logprob: -4.5187835693359375
    3. ':
' → logprob: -4.8937835693359375
    4. ' :' → logprob: -8.518783569335938
    5. ':
' → logprob: -11.768783569335938
    6. ' :
' → logprob: -12.518783569335938
    7. ' ' → logprob: -14.268783569335938
    8. ')' → logprob: -15.393783569335938
    9. ':

' → logprob: -15.393783569335938
    10. '):' → logprob: -15.393783569335938

Token 56: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11165618151426315
    2. ' return' → logprob: -2.8616561889648438
    3. '       ' → logprob: -3.1116561889648438
    4. ':return' → logprob: -6.111656188964844
    5. 'return' → logprob: -7.611656188964844
    6. ':' → logprob: -8.111656188964844
    7. '	return' → logprob: -8.236656188964844
    8. ' ' → logprob: -8.611656188964844
    9. ' True' → logprob: -8.736656188964844
    10. '
' → logprob: -9.111656188964844

Token 57: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.03957924619317055
    2. 'return' (adapté à ' return') → logprob: -3.289579153060913
    3. '   ' → logprob: -6.789579391479492
    4. '	return' → logprob: -9.164579391479492
    5. ' True' → logprob: -9.289579391479492
    6. ' ' → logprob: -9.414579391479492
    7. '    ' → logprob: -10.039579391479492
    8. 'True' → logprob: -10.414579391479492
    9. ':return' → logprob: -10.664579391479492
    10. '       ' → logprob: -11.164579391479492

Token 58: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.16321687400341034
    2. 'True' → logprob: -1.9132168292999268
    3. ' False' → logprob: -6.163217067718506
    4. 'False' → logprob: -7.038217067718506
    5. ' ' → logprob: -12.288216590881348
    6. '   ' → logprob: -15.788216590881348
    7. '[]' → logprob: -16.038217544555664
    8. '(True' → logprob: -16.038217544555664
    9. '  ' → logprob: -16.663217544555664
    10. '0' → logprob: -16.788217544555664

Token 59: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.031884074211120605
    2. '<|end|>' → logprob: -4.28188419342041
    3. '    
' → logprob: -4.65688419342041
    4. '   ' → logprob: -5.40688419342041
    5. '\n' → logprob: -6.65688419342041
    6. '  
' → logprob: -7.40688419342041
    7. ' 
' → logprob: -7.90688419342041
    8. '   
' → logprob: -8.03188419342041
    9. ',' → logprob: -8.78188419342041
    10. '
' → logprob: -8.78188419342041

Token 60: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.35169264674186707
    2. '   ' → logprob: -1.4766926765441895
    3. '    
' → logprob: -2.7266926765441895
    4. '   
' → logprob: -7.4766926765441895
    5. '  
' → logprob: -7.6016926765441895
    6. ' for' → logprob: -8.101692199707031
    7. '\n' → logprob: -8.351692199707031
    8. ' 
' → logprob: -8.476692199707031
    9. '
' → logprob: -8.601692199707031
    10. '	
' → logprob: -8.601692199707031

Token 61: ' selected' (ID: 6386)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -1.156684160232544
    2. ' dp' → logprob: -1.406684160232544
    3. ' time' → logprob: -1.531684160232544
    4. 'dp' → logprob: -2.156684160232544
    5. ' current' → logprob: -3.781684160232544
    6. 'current' → logprob: -4.281683921813965
    7. ' max' → logprob: -4.531683921813965
    8. ' for' → logprob: -5.031683921813965
    9. ' timer' → logprob: -5.406683921813965
    10. ' total' → logprob: -5.656683921813965

Token 62: '_b' (ID: 1535)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9425790309906006
    2. ' =' → logprob: -1.0675790309906006
    3. '=[]' → logprob: -1.5675790309906006
    4. '=set' → logprob: -3.3175790309906006
    5. '=[' → logprob: -4.06757926940918
    6. '={}' → logprob: -5.94257926940918
    7. '=[]
' → logprob: -7.06757926940918
    8. ',' → logprob: -8.44257926940918
    9. '={' → logprob: -9.06757926940918
    10. '_count' → logprob: -9.19257926940918

Token 63: 'ugs' (ID: 13307)
  Prédit: 'ugs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ugs' → logprob: -0.10394414514303207
    2. '=' → logprob: -3.6039440631866455
    3. '=[]' → logprob: -3.8539440631866455
    4. 'ug' → logprob: -4.478944301605225
    5. '=set' → logprob: -4.478944301605225
    6. '=[' → logprob: -4.603944301605225
    7. ' =' → logprob: -5.228944301605225
    8. '=[]
' → logprob: -5.728944301605225
    9. '=[]
' → logprob: -6.853944301605225
    10. 's' → logprob: -6.853944301605225

Token 64: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.28208059072494507
    2. ' =' → logprob: -2.03208065032959
    3. '=[]' → logprob: -2.28208065032959
    4. '=set' → logprob: -4.65708065032959
    5. '=[' → logprob: -6.03208065032959
    6. '=[]
' → logprob: -7.65708065032959
    7. '={}' → logprob: -8.90708065032959
    8. ',' → logprob: -10.28208065032959
    9. '=k' → logprob: -11.15708065032959
    10. '=len' → logprob: -11.28208065032959

Token 65: 'bugs' (ID: 114566)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.1701066941022873
    2. 'bugs' → logprob: -2.1701066493988037
    3. '[' → logprob: -3.6701066493988037
    4. 'set' → logprob: -4.545106887817383
    5. ' []' → logprob: -6.170106887817383
    6. '0' → logprob: -7.045106887817383
    7. '[]
' → logprob: -7.420106887817383
    8. ' bugs' → logprob: -7.670106887817383
    9. '{' → logprob: -7.795106887817383
    10. '{}' → logprob: -7.920106887817383

Token 66: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.007081559859216213
    2. '[-' → logprob: -5.007081508636475
    3. '[k' → logprob: -9.007081985473633
    4. '[:-' → logprob: -9.257081985473633
    5. '[' → logprob: -9.382081985473633
    6. '[:]' → logprob: -9.882081985473633
    7. '[::-' → logprob: -12.257081985473633
    8. '.copy' → logprob: -12.382081985473633
    9. '[len' → logprob: -13.757081985473633
    10. '[N' → logprob: -14.132081985473633

Token 67: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -9.088346359931165e-07
    2. ' k' → logprob: -14.250000953674316
    3. '-k' → logprob: -15.625000953674316
    4. '   ' → logprob: -18.125
    5. ' ' → logprob: -18.25
    6. '2' → logprob: -18.375
    7. ')' → logprob: -18.625
    8. '-' → logprob: -19.125
    9. '(' → logprob: -19.375
    10. ',k' → logprob: -19.75

Token 68: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00487235002219677
    2. ']
' → logprob: -5.3798723220825195
    3. ' ]' → logprob: -9.00487232208252
    4. ']
' → logprob: -9.37987232208252
    5. ')' → logprob: -11.12987232208252
    6. ']

' → logprob: -11.12987232208252
    7. '])' → logprob: -12.50487232208252
    8. '+' → logprob: -13.12987232208252
    9. ')]' → logprob: -13.50487232208252
    10. '   ' → logprob: -13.75487232208252

Token 69: '   ' (ID: 271)
  Prédit: 'selected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'selected' → logprob: -0.4991518557071686
    2. '   ' → logprob: -1.2491518259048462
    3. 'for' → logprob: -3.8741519451141357
    4. ' selected' → logprob: -4.374151706695557
    5. 'max' → logprob: -4.499151706695557
    6. 'total' → logprob: -4.624151706695557
    7. ' for' → logprob: -4.624151706695557
    8. 'bugs' → logprob: -4.874151706695557
    9. 'current' → logprob: -5.124151706695557
    10. 'time' → logprob: -5.124151706695557

Token 70: ' selected' (ID: 6386)
  Prédit: 'selected'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'selected' (adapté à ' selected') → logprob: -0.5179122090339661
    2. 'time' → logprob: -1.5179121494293213
    3. 'current' → logprob: -2.7679121494293213
    4. 'dp' → logprob: -3.0179121494293213
    5. 'last' → logprob: -3.7679121494293213
    6. 'for' → logprob: -4.5179123878479
    7. ' selected' → logprob: -5.2679123878479
    8. 'max' → logprob: -5.2679123878479
    9. 'prev' → logprob: -5.5179123878479
    10. '   ' → logprob: -5.7679123878479

Token 71: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.005717843305319548
    2. '_time' → logprob: -6.505717754364014
    3. '_times' → logprob: -7.130717754364014
    4. '.sort' → logprob: -7.755717754364014
    5. '_' → logprob: -8.005718231201172
    6. '_sorted' → logprob: -8.005718231201172
    7. '_bug' → logprob: -8.130718231201172
    8. '=' → logprob: -8.130718231201172
    9. 'time' → logprob: -8.380718231201172
    10. 'bugs' → logprob: -8.380718231201172

Token 72: 'ugs' (ID: 13307)
  Prédit: 'ugs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ugs' → logprob: -0.0001170132018160075
    2. 'ug' → logprob: -10.000117301940918
    3. 'bugs' → logprob: -10.625117301940918
    4. '```' → logprob: -10.875117301940918
    5. 'gs' → logprob: -11.875117301940918
    6. 'u' → logprob: -12.750117301940918
    7. '[' → logprob: -12.875117301940918
    8. 'ags' → logprob: -13.750117301940918
    9. '=' → logprob: -13.812617301940918
    10. '   ' → logprob: -14.187617301940918

Token 73: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.1604936122894287
    2. '=' → logprob: -1.9104936122894287
    3. 'sort' → logprob: -8.410493850708008
    4. 'sorted' → logprob: -10.660493850708008
    5. '_sorted' → logprob: -11.035493850708008
    6. '[' → logprob: -13.160493850708008
    7. ' =' → logprob: -13.535493850708008
    8. '[-' → logprob: -13.660493850708008
    9. '.reverse' → logprob: -14.535493850708008
    10. '	sort' → logprob: -14.660493850708008

Token 74: '(key' (ID: 8932)
  Prédit: '(key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(key' → logprob: -0.008828469552099705
    2. '()' → logprob: -4.758828639984131
    3. '(' → logprob: -9.008828163146973
    4. '(reverse' → logprob: -9.383828163146973
    5. 'key' → logprob: -13.383828163146973
    6. '(lambda' → logprob: -13.633828163146973
    7. '()
' → logprob: -13.633828163146973
    8. '```' → logprob: -13.883828163146973
    9. '(
' → logprob: -14.133828163146973
    10. '()(' → logprob: -14.508828163146973

Token 75: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.00015872348740231246
    2. '=' → logprob: -8.750158309936523
    3. '=
' → logprob: -16.250158309936523
    4. ')=' → logprob: -17.625158309936523
    5. '=len' → logprob: -17.625158309936523
    6. '=(' → logprob: -17.750158309936523
    7. '=

' → logprob: -17.750158309936523
    8. '(lambda' → logprob: -18.000158309936523
    9. '='' → logprob: -18.000158309936523
    10. '=k' → logprob: -18.125158309936523

Token 76: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.2026015818119049
    2. 'x' → logprob: -1.7026015520095825
    3. '<|end|>' → logprob: -7.077601432800293
    4. ' ' → logprob: -8.452601432800293
    5. 'b' → logprob: -10.077601432800293
    6. ' lambda' → logprob: -10.577601432800293
    7. 'lambda' → logprob: -10.577601432800293
    8. '=lambda' → logprob: -11.077601432800293
    9. ' b' → logprob: -11.577601432800293
    10. ' k' → logprob: -12.577601432800293

Token 77: ':x' (ID: 73587)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5284152626991272
    2. ':x' → logprob: -0.9034152626991272
    3. ' :' → logprob: -5.278415203094482
    4. ':(' → logprob: -9.65341567993164
    5. 'x' → logprob: -10.02841567993164
    6. ' x' → logprob: -11.02841567993164
    7. ':int' → logprob: -11.52841567993164
    8. ':a' → logprob: -11.52841567993164
    9. ' :(' → logprob: -12.02841567993164
    10. ':
' → logprob: -12.65341567993164

Token 78: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00016384923947043717
    2. ' [' → logprob: -9.375164031982422
    3. ':' → logprob: -10.125164031982422
    4. '0' → logprob: -10.500164031982422
    5. '   ' → logprob: -13.000164031982422
    6. ' ' → logprob: -13.625164031982422
    7. '1' → logprob: -13.750164031982422
    8. ':[' → logprob: -13.750164031982422
    9. ')[' → logprob: -14.375164031982422
    10. ')' → logprob: -14.375164031982422

Token 79: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002702760975807905
    2. ' ' → logprob: -8.625269889831543
    3. '1' → logprob: -9.375269889831543
    4. '[' → logprob: -13.375269889831543
    5. '   ' → logprob: -13.562769889831543
    6. ')' → logprob: -14.687769889831543
    7. '  ' → logprob: -15.437769889831543
    8. '۰' → logprob: -15.750269889831543
    9. ':' → logprob: -15.937769889831543
    10. '    ' → logprob: -16.06277084350586

Token 80: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004659030120819807
    2. '])' → logprob: -5.754659175872803
    3. ')
' → logprob: -6.629659175872803
    4. ' )' → logprob: -9.879658699035645
    5. '))' → logprob: -10.254658699035645
    6. ')

' → logprob: -11.254658699035645
    7. ',' → logprob: -11.379658699035645
    8. '])
' → logprob: -11.754658699035645
    9. '})' → logprob: -12.129658699035645
    10. '>)' → logprob: -12.129658699035645

Token 81: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.025891900062561
    2. '
' → logprob: -1.650891900062561
    3. ' for' → logprob: -1.650891900062561
    4. '<|end|>' → logprob: -2.2758917808532715
    5. 'time' → logprob: -3.0258917808532715
    6. 'for' → logprob: -3.7758917808532715
    7. '    
' → logprob: -4.1508917808532715
    8. ')' → logprob: -4.2758917808532715
    9. ' time' → logprob: -4.4008917808532715
    10. 'current' → logprob: -4.5258917808532715

Token 82: ' total' (ID: 3609)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.43154317140579224
    2. 'current' → logprob: -1.8065431118011475
    3. 'for' → logprob: -2.4315431118011475
    4. 'prev' → logprob: -3.5565431118011475
    5. ' for' → logprob: -4.181543350219727
    6. 'last' → logprob: -4.306543350219727
    7. 'max' → logprob: -4.556543350219727
    8. ' time' → logprob: -5.556543350219727
    9. 'cur' → logprob: -5.556543350219727
    10. '   ' → logprob: -5.556543350219727

Token 83: '_a' (ID: 10852)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5832743644714355
    2. '_time' → logprob: -0.8332743644714355
    3. ' =' → logprob: -5.8332743644714355
    4. '=time' → logprob: -6.2082743644714355
    5. 'time' → logprob: -6.8332743644714355
    6. '=_' → logprob: -7.5832743644714355
    7. '_dead' → logprob: -7.8332743644714355
    8. 'Time' → logprob: -9.833274841308594
    9. '=-' → logprob: -10.208274841308594
    10. '=
' → logprob: -10.333274841308594

Token 84: '=sum' (ID: 174693)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.044430214911699295
    2. ' =' → logprob: -3.1694302558898926
    3. '=sum' → logprob: -7.419430255889893
    4. '+=' → logprob: -7.544430255889893
    5. ',' → logprob: -9.169429779052734
    6. ' +=' → logprob: -9.669429779052734
    7. '=time' → logprob: -10.294429779052734
    8. '_time' → logprob: -10.544429779052734
    9. ',time' → logprob: -11.294429779052734
    10. 'time' → logprob: -11.419429779052734

Token 85: '(x' (ID: 4061)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.18211542069911957
    2. '(x' → logprob: -2.182115316390991
    3. '([' → logprob: -3.432115316390991
    4. '(' → logprob: -4.18211555480957
    5. '(selected' → logprob: -5.43211555480957
    6. '(a' → logprob: -7.68211555480957
    7. '((' → logprob: -7.93211555480957
    8. '(i' → logprob: -7.93211555480957
    9. 'bug' → logprob: -9.05711555480957
    10. '(token' → logprob: -9.55711555480957

Token 86: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.0219828002154827e-05
    2. ' [' → logprob: -12.125020027160645
    3. ' for' → logprob: -12.125020027160645
    4. 'for' → logprob: -12.250020027160645
    5. 'a' → logprob: -13.250020027160645
    6. '```' → logprob: -14.250020027160645
    7. '(' → logprob: -14.750020027160645
    8. '   ' → logprob: -15.250020027160645
    9. '.' → logprob: -15.250020027160645
    10. ')' → logprob: -16.06252098083496

Token 87: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014372100122272968
    2. '[' → logprob: -4.264371871948242
    3. ' ' → logprob: -8.639371871948242
    4. ' [' → logprob: -11.264371871948242
    5. '1' → logprob: -12.389371871948242
    6. ')' → logprob: -12.764371871948242
    7. '
' → logprob: -13.389371871948242
    8. 'a' → logprob: -13.514371871948242
    9. '(' → logprob: -13.639371871948242
    10. 'for' → logprob: -13.639371871948242

Token 88: ']' (ID: 60)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4126430153846741
    2. ' for' → logprob: -1.4126429557800293
    3. ']' → logprob: -2.4126429557800293
    4. ')' → logprob: -5.412642955780029
    5. ' ' → logprob: -9.037643432617188
    6. '>' → logprob: -9.162643432617188
    7. '])' → logprob: -9.412643432617188
    8. '```' → logprob: -9.537643432617188
    9. '	for' → logprob: -9.787643432617188
    10. '}' → logprob: -10.537643432617188

Token 89: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4770713448524475
    2. 'for' → logprob: -0.9770713448524475
    3. ')' → logprob: -5.852071285247803
    4. '   ' → logprob: -10.102071762084961
    5. '	for' → logprob: -10.852071762084961
    6. '+' → logprob: -11.227071762084961
    7. ' ' → logprob: -11.352071762084961
    8. '    ' → logprob: -12.227071762084961
    9. '-' → logprob: -12.227071762084961
    10. '>' → logprob: -12.352071762084961

Token 90: ' x' (ID: 1215)
  Prédit: ' selected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' selected' → logprob: -0.061979226768016815
    2. 'selected' → logprob: -2.811979293823242
    3. '	selected' → logprob: -11.561979293823242
    4. '_selected' → logprob: -14.061979293823242
    5. '(selected' → logprob: -14.311979293823242
    6. ' ' → logprob: -15.686979293823242
    7. ':selected' → logprob: -15.686979293823242
    8. ' x' → logprob: -16.311979293823242
    9. '.selected' → logprob: -16.686979293823242
    10. '[selected' → logprob: -16.811979293823242

Token 91: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.23605455458164215
    2. 'in' → logprob: -1.611054539680481
    3. ' selected' → logprob: -4.986054420471191
    4. 'selected' → logprob: -5.611054420471191
    5. '_selected' → logprob: -10.611054420471191
    6. ' bugs' → logprob: -10.986054420471191
    7. '<|end|>' → logprob: -11.236054420471191
    8. ' ' → logprob: -11.361054420471191
    9. ':selected' → logprob: -11.861054420471191
    10. '  ' → logprob: -12.611054420471191

Token 92: ' selected' (ID: 6386)
  Prédit: 'selected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'selected' → logprob: -0.0024769625160843134
    2. ' selected' → logprob: -6.002477169036865
    3. '   ' → logprob: -14.752476692199707
    4. '(selected' → logprob: -14.877476692199707
    5. '	selected' → logprob: -15.377476692199707
    6. '[selected' → logprob: -16.002477645874023
    7. '  ' → logprob: -16.752477645874023
    8. ' ' → logprob: -17.002477645874023
    9. '.selected' → logprob: -17.627477645874023
    10. ')' → logprob: -18.002477645874023

Token 93: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -8.375538163818419e-05
    2. 'bugs' → logprob: -9.750083923339844
    3. 'selected' → logprob: -11.250083923339844
    4. 'b' → logprob: -12.125083923339844
    5. '_' → logprob: -13.250083923339844
    6. ')' → logprob: -13.875083923339844
    7. '_a' → logprob: -13.875083923339844
    8. '_selected' → logprob: -14.000083923339844
    9. '_bug' → logprob: -14.875083923339844
    10. '```' → logprob: -15.375083923339844

Token 94: 'ugs' (ID: 13307)
  Prédit: 'ugs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ugs' → logprob: -0.0011333089787513018
    2. 'gs' → logprob: -7.626133441925049
    3. 'bugs' → logprob: -8.12613296508789
    4. 'ug' → logprob: -8.62613296508789
    5. '```' → logprob: -10.25113296508789
    6. 's' → logprob: -10.75113296508789
    7. 'u' → logprob: -10.75113296508789
    8. 'ags' → logprob: -11.31363296508789
    9. ' bugs' → logprob: -11.62613296508789
    10. '   ' → logprob: -11.93863296508789

Token 95: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12837928533554077
    2. ')
' → logprob: -2.1283793449401855
    3. ')+' → logprob: -7.6283793449401855
    4. ')>' → logprob: -8.753378868103027
    5. '   ' → logprob: -8.878378868103027
    6. ' )' → logprob: -8.878378868103027
    7. ')
' → logprob: -9.253378868103027
    8. ')

' → logprob: -9.628378868103027
    9. ' )
' → logprob: -9.753378868103027
    10. '
' → logprob: -9.753378868103027

Token 96: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6691547632217407
    2. '<|end|>' → logprob: -1.5441547632217407
    3. '
' → logprob: -2.294154644012451
    4. ' 
' → logprob: -2.544154644012451
    5. ' for' → logprob: -3.294154644012451
    6. '    
' → logprob: -3.919154644012451
    7. ' if' → logprob: -4.544154644012451
    8. ' ' → logprob: -5.044154644012451
    9. '  
' → logprob: -5.669154644012451
    10. '\n' → logprob: -5.794154644012451

Token 97: ' for' (ID: 395)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -1.0405762195587158
    2. 'if' → logprob: -1.1655762195587158
    3. 'current' → logprob: -2.165576219558716
    4. 'max' → logprob: -2.165576219558716
    5. '   ' → logprob: -3.790576219558716
    6. 'deadline' → logprob: -3.790576219558716
    7. 'total' → logprob: -4.290575981140137
    8. 'for' (adapté à ' for') → logprob: -4.540575981140137
    9. 'last' → logprob: -4.665575981140137
    10. 'return' → logprob: -5.540575981140137

Token 98: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.42909613251686096
    2. ' i' → logprob: -1.0540961027145386
    3. 'idx' → logprob: -8.679096221923828
    4. ' idx' → logprob: -9.179096221923828
    5. ' ' → logprob: -9.929096221923828
    6. 'index' → logprob: -11.304096221923828
    7. 'time' → logprob: -11.554096221923828
    8. ' time' → logprob: -11.804096221923828
    9. '_i' → logprob: -12.429096221923828
    10. ' index' → logprob: -12.554096221923828

Token 99: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.25826358795166016
    2. ',' → logprob: -1.7582635879516602
    3. ' ,' → logprob: -3.00826358795166
    4. 'in' → logprob: -5.25826358795166
    5. ' ' → logprob: -7.88326358795166
    6. ',in' → logprob: -9.13326358795166
    7. '  ' → logprob: -10.13326358795166
    8. ' range' → logprob: -10.38326358795166
    9. '<|end|>' → logprob: -10.88326358795166
    10. ',b' → logprob: -11.38326358795166

Token 100: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.11284232884645462
    2. 'range' → logprob: -2.237842321395874
    3. '(range' → logprob: -11.737842559814453
    4. '   ' → logprob: -12.362842559814453
    5. '  ' → logprob: -12.737842559814453
    6. ' ' → logprob: -13.112842559814453
    7. '	range' → logprob: -13.362842559814453
    8. ' selected' → logprob: -15.487842559814453
    9. 'selected' → logprob: -15.737842559814453
    10. '    ' → logprob: -15.737842559814453

Token 101: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.015280350111424923
    2. '(' → logprob: -4.765280246734619
    3. '(len' → logprob: -5.015280246734619
    4. ' (' → logprob: -13.015280723571777
    5. 'k' → logprob: -13.140280723571777
    6. ' k' → logprob: -13.640280723571777
    7. '(n' → logprob: -14.640280723571777
    8. '1' → logprob: -15.265280723571777
    9. '(i' → logprob: -15.265280723571777
    10. 'len' → logprob: -15.265280723571777

Token 102: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08484713733196259
    2. '-' → logprob: -2.5848472118377686
    3. '):
' → logprob: -5.3348469734191895
    4. ' -' → logprob: -7.3348469734191895
    5. ' ):' → logprob: -8.084847450256348
    6. '   ' → logprob: -9.834847450256348
    7. ' ' → logprob: -9.959847450256348
    8. '+' → logprob: -11.334847450256348
    9. '  ' → logprob: -11.709847450256348
    10. ':' → logprob: -11.834847450256348

Token 103: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01899830810725689
    2. ':' → logprob: -4.268998146057129
    3. ' if' → logprob: -6.768998146057129
    4. '   ' → logprob: -6.893998146057129
    5. '<|end|>' → logprob: -7.143998146057129
    6. '        
' → logprob: -7.268998146057129
    7. ':
' → logprob: -8.143998146057129
    8. ',' → logprob: -8.518998146057129
    9. ' 
' → logprob: -9.393998146057129
    10. '  
' → logprob: -9.393998146057129

Token 104: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5931484699249268
    2. 'if' (adapté à ' if') → logprob: -0.8431484699249268
    3. '       ' → logprob: -4.093148231506348
    4. '   ' → logprob: -9.468148231506348
    5. '```' → logprob: -9.843148231506348
    6. ' ' → logprob: -10.218148231506348
    7. 'a' → logprob: -10.343148231506348
    8. '        
' → logprob: -10.343148231506348
    9. '
' → logprob: -10.718148231506348
    10. '	if' → logprob: -10.843148231506348

Token 105: ' total' (ID: 3609)
  Prédit: 'selected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'selected' → logprob: -0.24365276098251343
    2. 'total' → logprob: -1.9936528205871582
    3. ' selected' → logprob: -2.743652820587158
    4. ' total' → logprob: -4.243652820587158
    5. ' bugs' → logprob: -7.493652820587158
    6. 'bugs' → logprob: -7.618652820587158
    7. '   ' → logprob: -9.11865234375
    8. '(selected' → logprob: -9.99365234375
    9. '       ' → logprob: -10.36865234375
    10. '	selected' → logprob: -10.61865234375

Token 106: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.0004230475169606507
    2. '_b' → logprob: -8.375423431396484
    3. 'a' → logprob: -9.500423431396484
    4. '_' → logprob: -10.250423431396484
    5. '>' → logprob: -10.375423431396484
    6. ' >' → logprob: -11.500423431396484
    7. '>a' → logprob: -12.125423431396484
    8. '<' → logprob: -12.250423431396484
    9. ' <' → logprob: -12.437923431396484
    10. '<a' → logprob: -12.750423431396484

Token 107: '>' (ID: 29)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.6459383964538574
    2. '>' → logprob: -0.7709383964538574
    3. ' <=' → logprob: -4.895938396453857
    4. '<=' → logprob: -5.520938396453857
    5. '<' → logprob: -7.145938396453857
    6. ' <' → logprob: -7.270938396453857
    7. '>=' → logprob: -9.270938873291016
    8. ' >=' → logprob: -9.895938873291016
    9. ' ' → logprob: -10.645938873291016
    10. '>x' → logprob: -10.770938873291016

Token 108: 'selected' (ID: 11116)
  Prédit: 'selected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'selected' → logprob: -0.011627850122749805
    2. 'bugs' → logprob: -4.761627674102783
    3. ' selected' → logprob: -6.011627674102783
    4. '   ' → logprob: -8.386628150939941
    5. '(selected' → logprob: -8.886628150939941
    6. ' bugs' → logprob: -9.136628150939941
    7. '	selected' → logprob: -11.011628150939941
    8. 'bug' → logprob: -11.386628150939941
    9. 'b' → logprob: -11.386628150939941
    10. '  ' → logprob: -11.886628150939941

Token 109: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -6.704273118884885e-07
    2. ' _' → logprob: -14.875000953674316
    3. '_' → logprob: -16.375
    4. 'bugs' → logprob: -16.5
    5. '_bug' → logprob: -17.125
    6. '```' → logprob: -17.625
    7. '\' → logprob: -18.0
    8. '_a' → logprob: -18.0
    9. 'b' → logprob: -18.625
    10. ' ' → logprob: -18.75

Token 110: 'ugs' (ID: 13307)
  Prédit: 'ugs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ugs' → logprob: -0.01017178874462843
    2. 'bugs' → logprob: -4.635171890258789
    3. 'ug' → logprob: -8.885171890258789
    4. ' bugs' → logprob: -9.510171890258789
    5. '_b' → logprob: -9.760171890258789
    6. 'ags' → logprob: -9.885171890258789
    7. 'gs' → logprob: -10.635171890258789
    8. '```' → logprob: -10.760171890258789
    9. '[i' → logprob: -12.135171890258789
    10. '[' → logprob: -12.260171890258789

Token 111: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00013405199570115656
    2. '[' → logprob: -9.250134468078613
    3. ' [' → logprob: -11.625134468078613
    4. '```' → logprob: -12.000134468078613
    5. '[k' → logprob: -12.625134468078613
    6. '[
' → logprob: -12.625134468078613
    7. '[j' → logprob: -12.750134468078613
    8. '`' → logprob: -13.375134468078613
    9. '[s' → logprob: -13.625134468078613
    10. ' ' → logprob: -13.625134468078613

Token 112: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0008833571337163448
    2. '][' → logprob: -7.12588357925415
    3. '[i' → logprob: -10.500883102416992
    4. ' [' → logprob: -11.125883102416992
    5. '1' → logprob: -11.875883102416992
    6. '   ' → logprob: -12.125883102416992
    7. ')[' → logprob: -12.375883102416992
    8. '()[' → logprob: -12.875883102416992
    9. '```' → logprob: -12.875883102416992
    10. ']' → logprob: -13.250883102416992

Token 113: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. '0' → logprob: -12.750004768371582
    3. '
' → logprob: -14.375004768371582
    4. ' ' → logprob: -14.625004768371582
    5. '```' → logprob: -15.812504768371582
    6. '

' → logprob: -16.0625057220459
    7. '   ' → logprob: -16.1250057220459
    8. '۱' → logprob: -16.9375057220459
    9. '``' → logprob: -17.0000057220459
    10. '' → logprob: -17.3125057220459

Token 114: ']*' (ID: 18579)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.31012725830078125
    2. '):' → logprob: -1.6851272583007812
    3. '):
' → logprob: -4.060127258300781
    4. ' -' → logprob: -4.185127258300781
    5. ':
' → logprob: -4.310127258300781
    6. ' +' → logprob: -4.810127258300781
    7. ' and' → logprob: -5.310127258300781
    8. ')' → logprob: -5.310127258300781
    9. '+' → logprob: -5.560127258300781
    10. '-' → logprob: -5.560127258300781

Token 115: 'k' (ID: 74)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.02844543568789959
    2. '(' → logprob: -4.778445243835449
    3. ' (' → logprob: -4.903445243835449
    4. '(i' → logprob: -4.903445243835449
    5. 'k' → logprob: -5.403445243835449
    6. 'i' → logprob: -9.40344524383545
    7. '=' → logprob: -9.52844524383545
    8. ' k' → logprob: -10.40344524383545
    9. '(n' → logprob: -11.15344524383545
    10. '(N' → logprob: -11.40344524383545

Token 116: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19471405446529388
    2. ':
' → logprob: -1.819714069366455
    3. ':return' → logprob: -5.194714069366455
    4. '       ' → logprob: -5.319714069366455
    5. '           ' → logprob: -5.819714069366455
    6. '   ' → logprob: -7.819714069366455
    7. ' :
' → logprob: -7.944714069366455
    8. ' :' → logprob: -8.194713592529297
    9. '):' → logprob: -8.944713592529297
    10. '):
' → logprob: -9.444713592529297

Token 117: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012249445542693138
    2. 'return' → logprob: -4.76224946975708
    3. ' return' → logprob: -5.63724946975708
    4. '       ' → logprob: -10.012248992919922
    5. '               ' → logprob: -10.887248992919922
    6. '   ' → logprob: -14.012248992919922
    7. ':return' → logprob: -15.012248992919922
    8. '          ' → logprob: -15.387248992919922
    9. '            
' → logprob: -15.762248992919922
    10. '
' → logprob: -16.137248992919922

Token 118: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00022761584841646254
    2. '           ' → logprob: -8.750227928161621
    3. ' return' → logprob: -9.750227928161621
    4. '       ' → logprob: -11.750227928161621
    5. '   ' → logprob: -13.000227928161621
    6. '               ' → logprob: -14.250227928161621
    7. '	return' → logprob: -18.375226974487305
    8. '                   ' → logprob: -18.625226974487305
    9. 'continue' → logprob: -18.875226974487305
    10. '
' → logprob: -19.000226974487305

Token 119: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -2.15310683415737e-05
    2. ' False' → logprob: -10.750021934509277
    3. 'True' → logprob: -20.25002098083496
    4. '(False' → logprob: -21.37502098083496
    5. '   ' → logprob: -22.62502098083496
    6. 'None' → logprob: -23.62502098083496
    7. 'false' → logprob: -23.75002098083496
    8. '  ' → logprob: -24.37502098083496
    9. '=False' → logprob: -24.37502098083496
    10. 'F' → logprob: -24.50002098083496

Token 120: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34494757652282715
    2. 'return' → logprob: -1.7199475765228271
    3. '   ' → logprob: -2.219947576522827
    4. 'total' → logprob: -5.719947814941406
    5. ' return' → logprob: -7.344947814941406
    6. '           ' → logprob: -10.094947814941406
    7. ' total' → logprob: -10.594947814941406
    8. '     ' → logprob: -11.344947814941406
    9. '  ' → logprob: -11.594947814941406
    10. ' ' → logprob: -11.594947814941406

Token 121: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22900032997131348
    2. 'return' → logprob: -2.2290003299713135
    3. '   ' → logprob: -2.3540003299713135
    4. 'total' → logprob: -6.479000091552734
    5. ' return' → logprob: -7.979000091552734
    6. '           ' → logprob: -9.354000091552734
    7. '```' → logprob: -11.229000091552734
    8. '     ' → logprob: -11.229000091552734
    9. ' total' → logprob: -11.479000091552734
    10. '    ' → logprob: -11.604000091552734

Token 122: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.2527149021625519
    2. '   ' → logprob: -1.5027148723602295
    3. '       ' → logprob: -7.752715110778809
    4. ' return' → logprob: -8.002715110778809
    5. '	return' → logprob: -11.002715110778809
    6. '  ' → logprob: -13.502715110778809
    7. ' ' → logprob: -14.002715110778809
    8. '```' → logprob: -14.252715110778809
    9. '           ' → logprob: -14.502715110778809
    10. 'else' → logprob: -15.377715110778809

Token 123: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0001234428636962548
    2. ' True' → logprob: -9.000123023986816
    3. 'False' → logprob: -19.875123977661133
    4. '(True' → logprob: -22.875123977661133
    5. ' ' → logprob: -23.625123977661133
    6. 'true' → logprob: -24.125123977661133
    7. 'Tr' → logprob: -24.750123977661133
    8. '1' → logprob: -24.875123977661133
    9. '=True' → logprob: -25.125123977661133
    10. 'T' → logprob: -25.250123977661133

Token 124: '

' (ID: 279)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.6371595859527588
    2. 'low' → logprob: -0.8871595859527588
    3. 'l' → logprob: -2.887159585952759
    4. ' left' → logprob: -6.51215934753418
    5. 'lo' → logprob: -6.76215934753418
    6. ' low' → logprob: -7.63715934753418
    7. ' l' → logprob: -8.63715934753418
    8. 'start' → logprob: -9.38715934753418
    9. 'mid' → logprob: -9.51215934753418
    10. ' lo' → logprob: -10.13715934753418

Token 125: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.09290952980518341
    2. 'l' → logprob: -2.842909574508667
    3. 'low' → logprob: -3.592909574508667
    4. 'lo' → logprob: -5.842909336090088
    5. 'ok' → logprob: -10.967909812927246
    6. 'start' → logprob: -11.467909812927246
    7. 'lt' → logprob: -11.842909812927246
    8. 'lb' → logprob: -12.717909812927246
    9. 's' → logprob: -13.092909812927246
    10. 'L' → logprob: -13.217909812927246

Token 126: ',right' (ID: 164487)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.15263758599758148
    2. ',' → logprob: -2.652637481689453
    3. ' =' → logprob: -2.652637481689453
    4. ' ,' → logprob: -7.527637481689453
    5. ',right' → logprob: -10.277637481689453
    6. ',end' → logprob: -11.152637481689453
    7. ',k' → logprob: -11.527637481689453
    8. '=int' → logprob: -11.777637481689453
    9. '<|end|>' → logprob: -12.777637481689453
    10. ',left' → logprob: -13.027637481689453

Token 127: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10027524083852768
    2. ' =' → logprob: -2.3502752780914307
    3. '=k' → logprob: -9.975275039672852
    4. '=len' → logprob: -11.225275039672852
    5. '=N' → logprob: -12.850275039672852
    6. '=int' → logprob: -13.475275039672852
    7. '＝' → logprob: -13.600275039672852
    8. '=num' → logprob: -14.100275039672852
    9. '=n' → logprob: -14.475275039672852
    10. '=line' → logprob: -15.225275039672852

Token 128: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.7159857786027715e-05
    2. '1' → logprob: -10.125046730041504
    3. ' ' → logprob: -11.875046730041504
    4. 'N' → logprob: -16.62504768371582
    5. '(' → logprob: -19.25004768371582
    6. '```' → logprob: -19.75004768371582
    7. '[' → logprob: -20.12504768371582
    8. '۰' → logprob: -20.62504768371582
    9. '０' → logprob: -21.12504768371582
    10. ' N' → logprob: -21.75004768371582

Token 129: ',N' (ID: 49539)
  Prédit: ',N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',N' → logprob: -0.013480428606271744
    2. ',' → logprob: -4.3884806632995605
    3. ' ,' → logprob: -7.7634806632995605
    4. ',len' → logprob: -7.8884806632995605
    5. 'N' → logprob: -8.763480186462402
    6. ',k' → logprob: -12.388480186462402
    7. ',n' → logprob: -12.388480186462402
    8. ' N' → logprob: -13.138480186462402
    9. ',b' → logprob: -13.513480186462402
    10. 'len' → logprob: -14.138480186462402

Token 130: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05933525413274765
    2. '<|end|>' → logprob: -3.309335231781006
    3. '+' → logprob: -4.309335231781006
    4. '\n' → logprob: -5.309335231781006
    5. ' 
' → logprob: -6.309335231781006
    6. '  
' → logprob: -8.184335708618164
    7. '<|end|>' → logprob: -8.559335708618164
    8. '

' → logprob: -9.184335708618164
    9. '```' → logprob: -9.309335708618164
    10. '
' → logprob: -9.684335708618164

Token 131: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.04522772133350372
    2. '
' → logprob: -3.5452277660369873
    3. ' while' → logprob: -4.295227527618408
    4. ' 
' → logprob: -7.045227527618408
    5. '<|end|>' → logprob: -7.170227527618408
    6. 'mid' → logprob: -11.170228004455566
    7. '```' → logprob: -11.295228004455566
    8. 'While' → logprob: -11.545228004455566
    9. 'ans' → logprob: -11.545228004455566
    10. '    
' → logprob: -11.670228004455566

Token 132: ' left' (ID: 3561)
  Prédit: ' left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.0015029559144750237
    2. 'left' → logprob: -6.501502990722656
    3. ' right' → logprob: -15.251502990722656
    4. ' lef' → logprob: -15.626502990722656
    5. '	left' → logprob: -16.376502990722656
    6. ' not' → logprob: -16.876502990722656
    7. '(left' → logprob: -17.001502990722656
    8. ' ' → logprob: -18.126502990722656
    9. '_left' → logprob: -18.626502990722656
    10. 'right' → logprob: -18.876502990722656

Token 133: '<' (ID: 27)
  Prédit: '<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.09479156136512756
    2. ' <' → logprob: -2.4697916507720947
    3. '<=' → logprob: -5.219791412353516
    4. ' <=' → logprob: -7.844791412353516
    5. '<len' → logprob: -11.719791412353516
    6. '<int' → logprob: -11.844791412353516
    7. '+' → logprob: -12.719791412353516
    8. '<size' → logprob: -12.969791412353516
    9. '<|end|>' → logprob: -12.969791412353516
    10. ' ' → logprob: -13.219791412353516

Token 134: 'right' (ID: 2460)
  Prédit: 'right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.00861528143286705
    2. ' right' → logprob: -4.758615493774414
    3. '=' → logprob: -14.133615493774414
    4. '	right' → logprob: -18.383615493774414
    5. ',right' → logprob: -19.258615493774414
    6. ' ' → logprob: -19.633615493774414
    7. '[right' → logprob: -19.633615493774414
    8. '
' → logprob: -19.758615493774414
    9. '(right' → logprob: -20.133615493774414
    10. 'Right' → logprob: -20.258615493774414

Token 135: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4748104512691498
    2. ':' → logprob: -0.9748104810714722
    3. '   ' → logprob: -7.974810600280762
    4. '<|end|>' → logprob: -9.224810600280762
    5. '):
' → logprob: -9.474810600280762
    6. ' :
' → logprob: -9.849810600280762
    7. '=' → logprob: -9.849810600280762
    8. ' and' → logprob: -11.224810600280762
    9. '<|end|>' → logprob: -11.224810600280762
    10. ':

' → logprob: -11.224810600280762

Token 136: '   ' (ID: 271)
  Prédit: ' mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mid' → logprob: -0.0379844531416893
    2. '   ' → logprob: -3.7879843711853027
    3. 'mid' → logprob: -4.287984371185303
    4. ' 
' → logprob: -8.037984848022461
    5. '    
' → logprob: -8.412984848022461
    6. ' middle' → logprob: -8.912984848022461
    7. '_mid' → logprob: -9.412984848022461
    8. '[mid' → logprob: -10.787984848022461
    9. '  
' → logprob: -10.912984848022461
    10. '(mid' → logprob: -10.912984848022461

Token 137: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' (adapté à ' mid') → logprob: -0.47412264347076416
    2. ' mid' → logprob: -0.9741226434707642
    3. '   ' → logprob: -10.349123001098633
    4. 'middle' → logprob: -11.974123001098633
    5. ' middle' → logprob: -12.474123001098633
    6. 'm' → logprob: -13.099123001098633
    7. '_mid' → logprob: -14.474123001098633
    8. '(mid' → logprob: -14.849123001098633
    9. '```' → logprob: -15.224123001098633
    10. '[mid' → logprob: -16.224123001098633

Token 138: '=(' (ID: 9893)
  Prédit: '=('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=(' → logprob: -0.1443147212266922
    2. '=' → logprob: -2.394314765930176
    3. ' =' → logprob: -3.144314765930176
    4. ' =(' → logprob: -10.769314765930176
    5. '=int' → logprob: -11.019314765930176
    6. '=center' → logprob: -11.769314765930176
    7. '=len' → logprob: -13.394314765930176
    8. '=[' → logprob: -14.019314765930176
    9. '=\' → logprob: -14.144314765930176
    10. '＝' → logprob: -14.144314765930176

Token 139: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -1.1472419600977446e-06
    2. ' left' → logprob: -13.750000953674316
    3. 'right' → logprob: -18.750001907348633
    4. 'lef' → logprob: -20.375001907348633
    5. '[left' → logprob: -20.875001907348633
    6. '	left' → logprob: -21.000001907348633
    7. '(left' → logprob: -21.000001907348633
    8. '_left' → logprob: -22.250001907348633
    9. ' lef' → logprob: -22.625001907348633
    10. ',left' → logprob: -23.500001907348633

Token 140: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0067154900170862675
    2. ' +' → logprob: -5.006715297698975
    3. '＋' → logprob: -16.006715774536133
    4. '```' → logprob: -17.756715774536133
    5. ' right' → logprob: -18.256715774536133
    6. ' plus' → logprob: -19.006715774536133
    7. 'left' → logprob: -19.381715774536133
    8. 'right' → logprob: -19.631715774536133
    9. '[right' → logprob: -19.756715774536133
    10. ' left' → logprob: -20.131715774536133

Token 141: 'right' (ID: 2460)
  Prédit: 'right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.00012368128227535635
    2. ' right' → logprob: -9.000123977661133
    3. '1' → logprob: -16.375123977661133
    4. '(right' → logprob: -17.250123977661133
    5. '	right' → logprob: -18.625123977661133
    6. '[right' → logprob: -19.125123977661133
    7. '+' → logprob: -19.750123977661133
    8. '
' → logprob: -20.375123977661133
    9. ',right' → logprob: -21.375123977661133
    10. '.right' → logprob: -21.500123977661133

Token 142: '+' (ID: 10)
  Prédit: ')//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')//' → logprob: -0.3620067834854126
    2. ')' → logprob: -1.6120067834854126
    3. '+' → logprob: -2.362006664276123
    4. ')>>' → logprob: -4.612006664276123
    5. ' +' → logprob: -9.612007141113281
    6. ' )' → logprob: -12.737007141113281
    7. ')+' → logprob: -13.737007141113281
    8. '+)' → logprob: -13.987007141113281
    9. '//' → logprob: -15.362007141113281
    10. ')#' → logprob: -15.862007141113281

Token 143: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00029601677670143545
    2. ' ' → logprob: -8.125295639038086
    3. ')' → logprob: -18.375295639038086
    4. '```' → logprob: -18.625295639038086
    5. '   ' → logprob: -19.875295639038086
    6. '
' → logprob: -20.125295639038086
    7. '2' → logprob: -21.000295639038086
    8. '１' → logprob: -21.250295639038086
    9. '  ' → logprob: -21.375295639038086
    10. '``' → logprob: -21.625295639038086

Token 144: ')//' (ID: 60375)
  Prédit: ')//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')//' → logprob: -0.16760246455669403
    2. ')' → logprob: -1.9176024198532104
    3. ')>>' → logprob: -4.9176025390625
    4. ' )' → logprob: -10.2926025390625
    5. '//' → logprob: -15.1676025390625
    6. ')#' → logprob: -16.1676025390625
    7. '）' → logprob: -17.0426025390625
    8. ')
' → logprob: -17.1676025390625
    9. '>>' → logprob: -17.5426025390625
    10. ' //' → logprob: -18.1676025390625

Token 145: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00017958412354346365
    2. ' ' → logprob: -8.625179290771484
    3. '２' → logprob: -19.625179290771484
    4. '۲' → logprob: -20.250179290771484
    5. '```' → logprob: -20.375179290771484
    6. '  ' → logprob: -21.250179290771484
    7. '   ' → logprob: -21.375179290771484
    8. '₂' → logprob: -22.250179290771484
    9. ' ' → logprob: -22.625179290771484
    10. '
' → logprob: -22.875179290771484

Token 146: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09934614598751068
    2. '
' → logprob: -3.349346160888672
    3. ' if' → logprob: -3.599346160888672
    4. '<|end|>' → logprob: -3.974346160888672
    5. '    
' → logprob: -5.224346160888672
    6. 'if' → logprob: -5.224346160888672
    7. '  
' → logprob: -7.099346160888672
    8. '<|end|>' → logprob: -7.474346160888672
    9. ')' → logprob: -7.599346160888672
    10. ' 
' → logprob: -8.724346160888672

Token 147: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2380232959985733
    2. ' if' → logprob: -2.363023281097412
    3. 'if' → logprob: -2.613023281097412
    4. '
' → logprob: -3.863023281097412
    5. '<|end|>' → logprob: -4.363023281097412
    6. '    
' → logprob: -5.238023281097412
    7. '  
' → logprob: -5.988023281097412
    8. ' 
' → logprob: -6.988023281097412
    9. ' ' → logprob: -7.488023281097412
    10. '<|end|>' → logprob: -7.613023281097412

Token 148: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.062328074127435684
    2. ' if' → logprob: -2.8123281002044678
    3. '   ' → logprob: -7.937327861785889
    4. '
' → logprob: -12.937328338623047
    5. '	if' → logprob: -14.562328338623047
    6. '    
' → logprob: -16.062328338623047
    7. 'If' → logprob: -16.687328338623047
    8. ' ' → logprob: -18.062328338623047
    9. ' 
' → logprob: -18.187328338623047
    10. '  
' → logprob: -18.312328338623047

Token 149: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.0004306692280806601
    2. ' can' → logprob: -7.750430583953857
    3. '	can' → logprob: -20.000431060791016
    4. '(can' → logprob: -20.250431060791016
    5. '   ' → logprob: -21.500431060791016
    6. '_can' → logprob: -22.250431060791016
    7. '.can' → logprob: -23.000431060791016
    8. 'Can' → logprob: -23.250431060791016
    9. '
' → logprob: -23.375431060791016
    10. ' ' → logprob: -23.875431060791016

Token 150: '(mid' (ID: 121498)
  Prédit: '(mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mid' → logprob: -2.5776860184123507e-06
    2. '[mid' → logprob: -13.00000286102295
    3. '(m' → logprob: -16.375001907348633
    4. ' (' → logprob: -17.625001907348633
    5. '(k' → logprob: -17.875001907348633
    6. ')' → logprob: -18.000001907348633
    7. '(min' → logprob: -18.750001907348633
    8. '(' → logprob: -19.000001907348633
    9. '(mi' → logprob: -19.250001907348633
    10. '(mac' → logprob: -19.375001907348633

Token 151: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2519545555114746
    2. '):
' → logprob: -1.5019545555114746
    3. ')' → logprob: -11.251955032348633
    4. ':' → logprob: -12.001955032348633
    5. ' ):' → logprob: -12.376955032348633
    6. '):
' → logprob: -14.001955032348633
    7. ' ):
' → logprob: -14.376955032348633
    8. '):

' → logprob: -14.751955032348633
    9. ':
' → logprob: -15.751955032348633
    10. ')==' → logprob: -17.376955032348633

Token 152: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7295263409614563
    2. ' left' → logprob: -0.7295263409614563
    3. 'left' → logprob: -3.3545262813568115
    4. '   ' → logprob: -7.479526519775391
    5. ' right' → logprob: -9.10452651977539
    6. 'right' → logprob: -9.97952651977539
    7. '	left' → logprob: -10.35452651977539
    8. '[left' → logprob: -10.97952651977539
    9. '
' → logprob: -11.10452651977539
    10. '_left' → logprob: -13.10452651977539

Token 153: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' (adapté à ' left') → logprob: -0.03804241120815277
    2. ' left' → logprob: -3.2880423069000244
    3. '
' → logprob: -15.038042068481445
    4. '	left' → logprob: -15.288042068481445
    5. '   ' → logprob: -15.413042068481445
    6. '_left' → logprob: -16.413042068481445
    7. '[left' → logprob: -17.288042068481445
    8. '.left' → logprob: -18.788042068481445
    9. '左' → logprob: -18.913042068481445
    10. '       ' → logprob: -19.288042068481445

Token 154: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759426355361938
    2. ' =' → logprob: -0.8259426355361938
    3. '=line' → logprob: -14.200942993164062
    4. '=center' → logprob: -14.325942993164062
    5. '=k' → logprob: -15.075942993164062
    6. '=current' → logprob: -15.700942993164062
    7. '=end' → logprob: -15.950942993164062
    8. '=input' → logprob: -15.950942993164062
    9. ')=' → logprob: -15.950942993164062
    10. '＝' → logprob: -15.950942993164062

Token 155: 'mid' (ID: 23430)
  Prédit: 'mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -6.2729995988775045e-06
    2. ' mid' → logprob: -12.000006675720215
    3. '[mid' → logprob: -18.6250057220459
    4. '(mid' → logprob: -19.3750057220459
    5. 'middle' → logprob: -22.3750057220459
    6. '
' → logprob: -22.3750057220459
    7. '_mid' → logprob: -22.7500057220459
    8. 'midd' → logprob: -22.7500057220459
    9. '   ' → logprob: -23.3750057220459
    10. 'midt' → logprob: -23.8750057220459

Token 156: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6042455434799194
    2. 'else' → logprob: -0.8542455434799194
    3. ' else' → logprob: -3.729245662689209
    4. 'right' → logprob: -6.604245662689209
    5. '
' → logprob: -6.729245662689209
    6. '<|end|>' → logprob: -7.354245662689209
    7. '[right' → logprob: -8.72924518585205
    8. ',right' → logprob: -9.10424518585205
    9. ' right' → logprob: -9.35424518585205
    10. '	else' → logprob: -9.72924518585205

Token 157: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.5881816744804382
    2. '   ' → logprob: -0.8381816744804382
    3. ' else' → logprob: -4.463181495666504
    4. 'right' → logprob: -7.463181495666504
    5. ' right' → logprob: -10.713181495666504
    6. '	else' → logprob: -10.713181495666504
    7. '  ' → logprob: -12.213181495666504
    8. '}else' → logprob: -12.588181495666504
    9. ',right' → logprob: -12.838181495666504
    10. '<|end|>' → logprob: -12.838181495666504

Token 158: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.11021357029676437
    2. '   ' → logprob: -2.3602135181427
    3. ' else' → logprob: -4.610213756561279
    4. '	else' → logprob: -11.860213279724121
    5. '  ' → logprob: -16.235214233398438
    6. '_else' → logprob: -16.235214233398438
    7. '       ' → logprob: -16.360214233398438
    8. '```' → logprob: -16.485214233398438
    9. ' ' → logprob: -17.235214233398438
    10. '}else' → logprob: -17.610214233398438

Token 159: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03674166649580002
    2. ':
' → logprob: -3.6617417335510254
    3. ':right' → logprob: -4.911741733551025
    4. '       ' → logprob: -6.536741733551025
    5. 'right' → logprob: -7.661741733551025
    6. ',right' → logprob: -7.911741733551025
    7. '   ' → logprob: -8.161741256713867
    8. '	right' → logprob: -8.286741256713867
    9. ' right' → logprob: -9.536741256713867
    10. '[right' → logprob: -9.911741256713867

Token 160: '       ' (ID: 309)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.2121467888355255
    2. '       ' → logprob: -1.7121467590332031
    3. ' right' → logprob: -4.712146759033203
    4. '   ' → logprob: -6.462146759033203
    5. '	right' → logprob: -9.337146759033203
    6. ',right' → logprob: -10.462146759033203
    7. '
' → logprob: -12.087146759033203
    8. ':right' → logprob: -12.462146759033203
    9. '[right' → logprob: -13.962146759033203
    10. '(right' → logprob: -14.462146759033203

Token 161: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.0007001649355515838
    2. ' right' → logprob: -7.500699996948242
    3. '       ' → logprob: -9.125699996948242
    4. '	right' → logprob: -10.375699996948242
    5. '   ' → logprob: -13.000699996948242
    6. ':right' → logprob: -13.250699996948242
    7. ',right' → logprob: -13.250699996948242
    8. '[right' → logprob: -14.375699996948242
    9. '(right' → logprob: -14.875699996948242
    10. '.right' → logprob: -15.000699996948242

Token 162: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -2.696889623621246e-06
    2. ' =' → logprob: -12.87500286102295
    3. '=m' → logprob: -16.875001907348633
    4. '=
' → logprob: -17.375001907348633
    5. '＝' → logprob: -18.000001907348633
    6. '=

' → logprob: -20.500001907348633
    7. '.=' → logprob: -20.750001907348633
    8. '_=' → logprob: -21.250001907348633
    9. 'mid' → logprob: -21.625001907348633
    10. '=int' → logprob: -21.875001907348633

Token 163: 'mid' (ID: 23430)
  Prédit: 'mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -9.088346359931165e-07
    2. ' mid' → logprob: -14.000000953674316
    3. '[mid' → logprob: -20.375
    4. '(mid' → logprob: -20.875
    5. 'middle' → logprob: -22.25
    6. 'midd' → logprob: -23.375
    7. 'midt' → logprob: -24.0
    8. '_mid' → logprob: -24.75
    9. 'm' → logprob: -25.0
    10. 'mi' → logprob: -26.0

Token 164: '-' (ID: 12)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.31399479508399963
    2. '
' → logprob: -1.3139947652816772
    3. ' print' → logprob: -7.688994884490967
    4. '

' → logprob: -9.188994407653809
    5. '
' → logprob: -9.813994407653809
    6. '\n' → logprob: -10.188994407653809
    7. '```' → logprob: -10.938994407653809
    8. '-print' → logprob: -11.188994407653809
    9. '(print' → logprob: -11.188994407653809
    10. '+' → logprob: -11.938994407653809

Token 165: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.080963092041202e-06
    2. ' ' → logprob: -12.250004768371582
    3. '<|end|>' → logprob: -15.375004768371582
    4. '```' → logprob: -16.6250057220459
    5. '0' → logprob: -18.5000057220459
    6. '   ' → logprob: -19.0000057220459
    7. '>' → logprob: -20.0000057220459
    8. '
' → logprob: -20.0000057220459
    9. '`' → logprob: -20.2500057220459
    10. '.' → logprob: -21.0000057220459

Token 166: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0004375830467324704
    2. '
' → logprob: -7.7504377365112305
    3. '```' → logprob: -12.37543773651123
    4. ')
' → logprob: -13.87543773651123
    5. ' print' → logprob: -13.87543773651123
    6. ')' → logprob: -15.00043773651123
    7. '
' → logprob: -15.37543773651123
    8. '<|end|>' → logprob: -16.375436782836914
    9. '(print' → logprob: -16.750436782836914
    10. '``' → logprob: -17.250436782836914

Token 167: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.008641282096505165
    2. '
' → logprob: -4.758641242980957
    3. '```' → logprob: -11.258641242980957
    4. ')
' → logprob: -11.508641242980957
    5. '
' → logprob: -13.133641242980957
    6. ')' → logprob: -13.883641242980957
    7. ' print' → logprob: -15.008641242980957
    8. '  
' → logprob: -16.133642196655273
    9. '``' → logprob: -16.133642196655273
    10. '(print' → logprob: -16.883642196655273

Token 168: '(left' (ID: 32958)
  Prédit: '(left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(left' → logprob: -4.842555426876061e-06
    2. 'left' → logprob: -12.250004768371582
    3. ',left' → logprob: -19.6250057220459
    4. ' left' → logprob: -20.2500057220459
    5. '(' → logprob: -20.3750057220459
    6. '[left' → logprob: -20.6250057220459
    7. '(right' → logprob: -21.1250057220459
    8. '	left' → logprob: -21.7500057220459
    9. '(max' → logprob: -22.5000057220459
    10. ':left' → logprob: -22.6250057220459

Token 169: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ' )' → logprob: -16.625
    3. ')
' → logprob: -16.875
    4. '`)' → logprob: -18.5
    5. '')' → logprob: -18.625
    6. ')`' → logprob: -18.625
    7. '))' → logprob: -19.0
    8. '）' → logprob: -19.75
    9. '")' → logprob: -20.25
    10. ')#' → logprob: -20.75


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 167
Tokens correctement prédits (1ère position, stricte): 86
Tokens correctement prédits (1ère position, avec adaptation): 94
Tokens correctement prédits (top 10): 144
Précision stricte (1ère position): 51.50%
Précision adaptée (1ère position): 56.29%
Précision (top 10): 86.23%
================================================================================
