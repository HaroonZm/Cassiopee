================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:01:51
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    n,p=map(int,input().split())
    if n==0 and p==0:
        break
    bowl=p
    kept=[0]*n
    current=0
    steps=0
    while True:
        steps+=1
        if bowl>0:
            bowl-=1
            kept[current]+=1
            if bowl==0 and sum(kept)-kept[current]==0:
                print(current)
                break
        else:
            bowl=sum(kept)
            kept=[0]*n
        current=(current-1)%n
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6169739961624146
    2. '    ' → logprob: -2.241973876953125
    3. '    
' → logprob: -2.616973876953125
    4. '\' → logprob: -2.866973876953125
    5. '\n' → logprob: -2.866973876953125
    6. ' ' → logprob: -3.241973876953125
    7. '```' → logprob: -3.241973876953125
    8. ' 
' → logprob: -3.616973876953125
    9. '  
' → logprob: -4.116973876953125
    10. '     
' → logprob: -4.241973876953125

Token 4: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5014370083808899
    2. '    ' → logprob: -1.6264369487762451
    3. ' ' → logprob: -2.001436948776245
    4. '```' → logprob: -3.626436948776245
    5. '       ' → logprob: -4.751437187194824
    6. '  ' → logprob: -5.376437187194824
    7. '    
' → logprob: -5.626437187194824
    8. '        
' → logprob: -6.626437187194824
    9. 'pass' → logprob: -6.751437187194824
    10. '`' → logprob: -6.751437187194824

Token 5: ',p' (ID: 14835)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7437536716461182
    2. 'u' → logprob: -1.4937536716461182
    3. '=' → logprob: -2.243753671646118
    4. 'o' → logprob: -2.618753671646118
    5. '   ' → logprob: -2.993753671646118
    6. ' =' → logprob: -4.493753433227539
    7. 'e' → logprob: -4.743753433227539
    8. '+' → logprob: -4.868753433227539
    9. '_' → logprob: -4.993753433227539
    10. '  ' → logprob: -5.243753433227539

Token 6: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1541401743888855
    2. ' =' → logprob: -2.0291402339935303
    3. ',' → logprob: -5.279139995574951
    4. ' ' → logprob: -5.654139995574951
    5. ')' → logprob: -6.029139995574951
    6. ' ,' → logprob: -9.27914047241211
    7. '  ' → logprob: -9.52914047241211
    8. ' )' → logprob: -10.15414047241211
    9. '   ' → logprob: -10.65414047241211
    10. ' ==' → logprob: -10.77914047241211

Token 7: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.5323585867881775
    2. ' map' → logprob: -1.0323586463928223
    3. 'input' → logprob: -3.1573586463928223
    4. ' input' → logprob: -4.282358646392822
    5. 'int' → logprob: -8.907358169555664
    6. '0' → logprob: -10.282358169555664
    7. ' ' → logprob: -10.282358169555664
    8. 'list' → logprob: -10.282358169555664
    9. ' int' → logprob: -11.532358169555664
    10. ' list' → logprob: -11.782358169555664

Token 8: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.010949959047138691
    2. 'int' → logprob: -5.260950088500977
    3. '(str' → logprob: -5.885950088500977
    4. '(' → logprob: -6.385950088500977
    5. '(lambda' → logprob: -7.885950088500977
    6. '[int' → logprob: -8.135950088500977
    7. '```' → logprob: -8.760950088500977
    8. '(input' → logprob: -8.885950088500977
    9. '<int' → logprob: -9.260950088500977
    10. 'str' → logprob: -9.885950088500977

Token 9: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0511602982878685
    2. 'input' → logprob: -3.1761603355407715
    3. ')' → logprob: -5.6761603355407715
    4. ',input' → logprob: -5.8011603355407715
    5. ' input' → logprob: -6.6761603355407715
    6. '(' → logprob: -8.051159858703613
    7. '=input' → logprob: -9.676159858703613
    8. ',' → logprob: -11.051159858703613
    9. '<input' → logprob: -12.051159858703613
    10. '[input' → logprob: -13.051159858703613

Token 10: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.01694030500948429
    2. '()' → logprob: -4.516940116882324
    3. '())' → logprob: -5.141940116882324
    4. ')' → logprob: -11.641940116882324
    5. '());' → logprob: -11.891940116882324
    6. '()))' → logprob: -12.516940116882324
    7. '()
' → logprob: -13.266940116882324
    8. '()-' → logprob: -13.641940116882324
    9. '()>' → logprob: -13.891940116882324
    10. '();)' → logprob: -14.016940116882324

Token 11: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -8.363617962459102e-05
    2. 'strip' → logprob: -9.500083923339844
    3. 'rstrip' → logprob: -12.125083923339844
    4. ' split' → logprob: -13.125083923339844
    5. '(split' → logprob: -13.625083923339844
    6. ')' → logprob: -16.875083923339844
    7. 'spl' → logprob: -17.125083923339844
    8. 'startswith' → logprob: -18.000083923339844
    9. '_split' → logprob: -18.625083923339844
    10. 'plit' → logprob: -19.000083923339844

Token 12: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06482390314340591
    2. '())' → logprob: -2.939823865890503
    3. '))' → logprob: -4.814824104309082
    4. '()' → logprob: -6.564824104309082
    5. '()))' → logprob: -9.064824104309082
    6. '(' → logprob: -9.189824104309082
    7. '('' → logprob: -9.689824104309082
    8. '')' → logprob: -10.439824104309082
    9. '`)' → logprob: -10.814824104309082
    10. ')`' → logprob: -11.814824104309082

Token 13: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 14: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.33018210530281067
    2. '   ' → logprob: -1.8301820755004883
    3. 'if' (adapté à ' if') → logprob: -3.3301820755004883
    4. ' ' → logprob: -3.3301820755004883
    5. '    ' → logprob: -3.7051820755004883
    6. '<|end|>' → logprob: -4.580182075500488
    7. '       ' → logprob: -5.580182075500488
    8. ')' → logprob: -5.580182075500488
    9. '```' → logprob: -6.455182075500488
    10. '    
' → logprob: -7.080182075500488

Token 15: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3641032576560974
    2. ' p' → logprob: -1.2391033172607422
    3. ' not' → logprob: -4.364103317260742
    4. 'n' → logprob: -6.239103317260742
    5. 'p' → logprob: -7.739103317260742
    6. ' ' → logprob: -8.239103317260742
    7. 'not' → logprob: -9.114103317260742
    8. ' ' → logprob: -10.364103317260742
    9. ' (' → logprob: -12.614103317260742
    10. ')' → logprob: -12.864103317260742

Token 16: '==' (ID: 560)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.35060256719589233
    2. '==' → logprob: -1.600602626800537
    3. ' <=' → logprob: -2.975602626800537
    4. ' <' → logprob: -4.100602626800537
    5. '<' → logprob: -4.225602626800537
    6. '<=' → logprob: -4.850602626800537
    7. ' ' → logprob: -6.975602626800537
    8. '=' → logprob: -7.225602626800537
    9. ')' → logprob: -7.350602626800537
    10. '>' → logprob: -7.600602626800537

Token 17: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.055065423250198364
    2. ' ' → logprob: -2.930065393447876
    3. 'p' → logprob: -8.805065155029297
    4. ' p' → logprob: -11.055065155029297
    5. '-' → logprob: -11.680065155029297
    6. '1' → logprob: -13.055065155029297
    7. '   ' → logprob: -13.305065155029297
    8. '  ' → logprob: -13.555065155029297
    9. '```' → logprob: -14.055065155029297
    10. '    ' → logprob: -14.367565155029297

Token 18: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.4793376326560974
    2. ':' → logprob: -0.9793376326560974
    3. 'and' → logprob: -5.354337692260742
    4. '   ' → logprob: -8.729337692260742
    5. ' ' → logprob: -9.229337692260742
    6. ' or' → logprob: -9.229337692260742
    7. ' :' → logprob: -9.229337692260742
    8. ':return' → logprob: -11.104337692260742
    9. ' a' → logprob: -11.604337692260742
    10. '  ' → logprob: -11.979337692260742

Token 19: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.02324908785521984
    2. 'p' → logprob: -3.7732491493225098
    3. ' ' → logprob: -12.898248672485352
    4. '<|end|>' → logprob: -15.148248672485352
    5. '	p' → logprob: -15.523248672485352
    6. ' ' → logprob: -15.773248672485352
    7. '   ' → logprob: -16.52324867248535
    8. '<p' → logprob: -16.77324867248535
    9. '    ' → logprob: -16.89824867248535
    10. '<|end|>' → logprob: -17.33574867248535

Token 20: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.16293524205684662
    2. ' ==' → logprob: -1.9129352569580078
    3. '=' → logprob: -6.037935256958008
    4. '<|end|>' → logprob: -9.662935256958008
    5. '<=' → logprob: -9.912935256958008
    6. ' p' → logprob: -10.412935256958008
    7. ' ' → logprob: -10.537935256958008
    8. '0' → logprob: -10.662935256958008
    9. '>' → logprob: -11.037935256958008
    10. ')' → logprob: -11.162935256958008

Token 21: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008048642775975168
    2. ' ' → logprob: -7.125804901123047
    3. '  ' → logprob: -15.250804901123047
    4. '   ' → logprob: -16.500804901123047
    5. '```' → logprob: -17.000804901123047
    6. '1' → logprob: -17.375804901123047
    7. '-' → logprob: -17.375804901123047
    8. ' -' → logprob: -18.125804901123047
    9. '۰' → logprob: -18.375804901123047
    10. ' ' → logprob: -19.125804901123047

Token 22: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004676113894674927
    2. ':
' → logprob: -7.875467777252197
    3. '       ' → logprob: -9.625467300415039
    4. '   ' → logprob: -11.000467300415039
    5. ':return' → logprob: -13.500467300415039
    6. ' :' → logprob: -13.625467300415039
    7. '):' → logprob: -14.125467300415039
    8. ':\' → logprob: -15.500467300415039
    9. ',' → logprob: -15.625467300415039
    10. '    ' → logprob: -16.00046730041504

Token 23: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006191504653543234
    2. '   ' → logprob: -8.000618934631348
    3. '\n' → logprob: -9.000618934631348
    4. ':' → logprob: -9.500618934631348
    5. ' break' → logprob: -10.625618934631348
    6. '     ' → logprob: -11.625618934631348
    7. '	break' → logprob: -11.750618934631348
    8. '    ' → logprob: -12.000618934631348
    9. '<|end|>' → logprob: -12.125618934631348
    10. '\t' → logprob: -12.250618934631348

Token 24: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.16991117596626282
    2. 'break' (adapté à ' break') → logprob: -1.9199111461639404
    3. '       ' → logprob: -4.6699113845825195
    4. '   ' → logprob: -8.54491138458252
    5. '	break' → logprob: -9.91991138458252
    6. '```' → logprob: -11.16991138458252
    7. '_break' → logprob: -12.66991138458252
    8. '           ' → logprob: -13.04491138458252
    9. 'Break' → logprob: -13.79491138458252
    10. '-break' → logprob: -14.29491138458252

Token 25: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25087812542915344
    2. '\n' → logprob: -2.250878095626831
    3. ':' → logprob: -2.500878095626831
    4. ')' → logprob: -4.50087833404541
    5. '    
' → logprob: -5.37587833404541
    6. '<|end|>' → logprob: -5.75087833404541
    7. '\' → logprob: -6.12587833404541
    8. ' ' → logprob: -6.12587833404541
    9. '[' → logprob: -6.25087833404541
    10. '    ' → logprob: -6.62587833404541

Token 26: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013407502323389053
    2. '    
' → logprob: -4.6384077072143555
    3. '```' → logprob: -6.2634077072143555
    4. '
' → logprob: -7.5134077072143555
    5. '\n' → logprob: -7.6384077072143555
    6. '       ' → logprob: -8.013407707214355
    7. 'print' → logprob: -10.138407707214355
    8. '\' → logprob: -10.263407707214355
    9. '        
' → logprob: -10.263407707214355
    10. '    ' → logprob: -10.388407707214355

Token 27: ' bowl' (ID: 24429)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0329219251871109
    2. '    ' → logprob: -4.53292179107666
    3. '[' → logprob: -5.03292179107666
    4. ' ' → logprob: -5.78292179107666
    5. '    
' → logprob: -5.78292179107666
    6. '```' → logprob: -6.03292179107666
    7. '       ' → logprob: -6.78292179107666
    8. ' if' → logprob: -7.28292179107666
    9. '  ' → logprob: -7.40792179107666
    10. ':' → logprob: -8.03292179107666

Token 28: '=p' (ID: 48137)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.009665894322097301
    2. ' =' → logprob: -4.8846659660339355
    3. '[' → logprob: -6.8846659660339355
    4. '=' → logprob: -7.2596659660339355
    5. '[s' → logprob: -9.384665489196777
    6. '=[]' → logprob: -9.634665489196777
    7. ' ' → logprob: -10.384665489196777
    8. ' s' → logprob: -11.009665489196777
    9. '_s' → logprob: -11.384665489196777
    10. '[:]' → logprob: -11.384665489196777

Token 29: '
' (ID: 198)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -1.2439079284667969
    2. '[' → logprob: -1.4939079284667969
    3. '<|end|>' → logprob: -1.8689079284667969
    4. '%' → logprob: -2.993907928466797
    5. '+' → logprob: -2.993907928466797
    6. ' ' → logprob: -3.493907928466797
    7. '//' → logprob: -3.493907928466797
    8. 's' → logprob: -3.868907928466797
    9. '*' → logprob: -3.993907928466797
    10. '[]' → logprob: -4.118907928466797

Token 30: '   ' (ID: 271)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.1770541667938232
    2. '+' → logprob: -1.5520541667938232
    3. '<|end|>' → logprob: -2.0520541667938232
    4. '//' → logprob: -2.4270541667938232
    5. ' ' → logprob: -2.8020541667938232
    6. '*' → logprob: -3.0520541667938232
    7. '   ' → logprob: -3.3020541667938232
    8. '%' → logprob: -3.8020541667938232
    9. ' //' → logprob: -4.302054405212402
    10. '=' → logprob: -4.802054405212402

Token 31: ' kept' (ID: 13185)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1757398843765259
    2. '-' → logprob: -1.5507398843765259
    3. '=' → logprob: -1.9257398843765259
    4. 'while' → logprob: -2.4257397651672363
    5. '//' → logprob: -2.9257397651672363
    6. ' for' → logprob: -3.0507397651672363
    7. ',' → logprob: -3.9257397651672363
    8. '+' → logprob: -4.175739765167236
    9. ' ' → logprob: -4.425739765167236
    10. ' while' → logprob: -4.425739765167236

Token 32: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06582079827785492
    2. ' =' → logprob: -2.8158206939697266
    3. 's' → logprob: -6.940820693969727
    4. '_tokens' → logprob: -7.440820693969727
    5. '=int' → logprob: -7.565820693969727
    6. ',' → logprob: -7.690820693969727
    7. '_' → logprob: -8.690820693969727
    8. '+=' → logprob: -9.065820693969727
    9. '=[]' → logprob: -9.065820693969727
    10. ' ' → logprob: -9.190820693969727

Token 33: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.28296786546707153
    2. 'False' → logprob: -1.6579678058624268
    3. ']' → logprob: -4.032968044281006
    4. 'b' → logprob: -4.282968044281006
    5. 'True' → logprob: -4.282968044281006
    6. '1' → logprob: -6.032968044281006
    7. ' ]' → logprob: -6.407968044281006
    8. 'p' → logprob: -6.532968044281006
    9. ' False' → logprob: -6.907968044281006
    10. 'n' → logprob: -6.907968044281006

Token 34: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004573953803628683
    2. ']*' → logprob: -5.879573822021484
    3. ' ]' → logprob: -6.879573822021484
    4. ',' → logprob: -7.504573822021484
    5. ' for' → logprob: -8.879573822021484
    6. ']+' → logprob: -11.379573822021484
    7. ')' → logprob: -11.379573822021484
    8. ')]' → logprob: -11.879573822021484
    9. ']*(' → logprob: -12.379573822021484
    10. 'for' → logprob: -12.504573822021484

Token 35: 'n' (ID: 77)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.1440950185060501
    2. 'n' → logprob: -2.519094944000244
    3. '(' → logprob: -3.769094944000244
    4. '101' → logprob: -4.394094944000244
    5. '100' → logprob: -5.269094944000244
    6. '10' → logprob: -5.519094944000244
    7. '11' → logprob: -5.769094944000244
    8. '51' → logprob: -7.394094944000244
    9. '21' → logprob: -7.894094944000244
    10. ' (' → logprob: -8.019095420837402

Token 36: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 37: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4990193545818329
    2. '<|end|>' → logprob: -2.2490193843841553
    3. '   ' → logprob: -2.4990193843841553
    4. ' 
' → logprob: -2.6240193843841553
    5. '\n' → logprob: -2.6240193843841553
    6. '  
' → logprob: -4.124019145965576
    7. '    
' → logprob: -4.249019145965576
    8. '[' → logprob: -5.124019145965576
    9. '   
' → logprob: -5.124019145965576
    10. ' ' → logprob: -5.624019145965576

Token 38: ' current' (ID: 2208)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0497686862945557
    2. ' for' → logprob: -1.2997686862945557
    3. 'for' → logprob: -1.6747686862945557
    4. '<|end|>' → logprob: -2.2997686862945557
    5. '\n' → logprob: -4.049768447875977
    6. ' ' → logprob: -4.299768447875977
    7. ' while' → logprob: -4.549768447875977
    8. ')' → logprob: -4.674768447875977
    9. 'while' → logprob: -5.174768447875977
    10. ' 
' → logprob: -5.174768447875977

Token 39: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14829449355602264
    2. ' =' → logprob: -2.148294448852539
    3. '_' → logprob: -4.773294448852539
    4. '_token' → logprob: -5.648294448852539
    5. '_b' → logprob: -5.773294448852539
    6. '_index' → logprob: -6.398294448852539
    7. '<|end|>' → logprob: -7.648294448852539
    8. ' +=' → logprob: -7.898294448852539
    9. '_idx' → logprob: -8.148294448852539
    10. ',' → logprob: -8.148294448852539

Token 40: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0014739143662154675
    2. '1' → logprob: -7.001473903656006
    3. 'b' → logprob: -8.376474380493164
    4. '-' → logprob: -8.751474380493164
    5. 'n' → logprob: -9.376474380493164
    6. 'p' → logprob: -10.001474380493164
    7. ' ' → logprob: -10.376474380493164
    8. ' bowl' → logprob: -12.876474380493164
    9. '2' → logprob: -13.376474380493164
    10. ' -' → logprob: -13.438974380493164

Token 41: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 42: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 43: ' steps' (ID: 10331)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.9091816544532776
    2. '   ' → logprob: -1.4091815948486328
    3. 'while' → logprob: -1.6591815948486328
    4. ')' → logprob: -3.034181594848633
    5. ' ' → logprob: -3.409181594848633
    6. '<|end|>' → logprob: -3.784181594848633
    7. '    ' → logprob: -4.534181594848633
    8. ' for' → logprob: -4.534181594848633
    9. 'for' → logprob: -5.034181594848633
    10. ' 
' → logprob: -5.659181594848633

Token 44: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08540122210979462
    2. ' =' → logprob: -2.5854012966156006
    3. '+=' → logprob: -6.0854010581970215
    4. ' +=' → logprob: -6.0854010581970215
    5. '   ' → logprob: -7.4604010581970215
    6. '=int' → logprob: -7.8354010581970215
    7. '+' → logprob: -8.33540153503418
    8. '=len' → logprob: -8.96040153503418
    9. '=count' → logprob: -9.08540153503418
    10. ' ' → logprob: -9.46040153503418

Token 45: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2299679070711136
    2. '1' → logprob: -1.7299679517745972
    3. 'p' → logprob: -3.9799678325653076
    4. ' ' → logprob: -5.354968070983887
    5. 'b' → logprob: -6.479968070983887
    6. ' p' → logprob: -6.729968070983887
    7. 'n' → logprob: -7.104968070983887
    8. '100' → logprob: -7.729968070983887
    9. ' n' → logprob: -8.604968070983887
    10. 'int' → logprob: -8.854968070983887

Token 46: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 47: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 48: ' while' (ID: 2049)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 49: ' True' (ID: 6432)
  Prédit: ' steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' steps' → logprob: -0.4201362431049347
    2. ' bowl' → logprob: -1.5451362133026123
    3. 'steps' → logprob: -2.5451362133026123
    4. 'b' → logprob: -3.9201362133026123
    5. ' True' → logprob: -4.545136451721191
    6. ' p' → logprob: -4.545136451721191
    7. ' current' → logprob: -5.670136451721191
    8. 'p' → logprob: -6.295136451721191
    9. ' not' → logprob: -6.670136451721191
    10. 'True' → logprob: -7.045136451721191

Token 50: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21267282962799072
    2. '   ' → logprob: -2.462672710418701
    3. '<|end|>' → logprob: -2.587672710418701
    4. '       ' → logprob: -3.587672710418701
    5. ',' → logprob: -6.712672710418701
    6. '<|end|>' → logprob: -7.337672710418701
    7. '[' → logprob: -8.33767318725586
    8. ' and' → logprob: -8.71267318725586
    9. '    ' → logprob: -8.71267318725586
    10. ')' → logprob: -8.71267318725586

Token 51: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6512412428855896
    2. '       ' → logprob: -0.9012412428855896
    3. '<|end|>' → logprob: -3.6512413024902344
    4. '    ' → logprob: -4.526241302490234
    5. ' current' → logprob: -4.776241302490234
    6. ' ' → logprob: -5.401241302490234
    7. '[' → logprob: -5.526241302490234
    8. ' bowl' → logprob: -5.901241302490234
    9. '```' → logprob: -5.901241302490234
    10. ' steps' → logprob: -6.401241302490234

Token 52: ' steps' (ID: 10331)
  Prédit: 'ke'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ke' → logprob: -0.5485104322433472
    2. 'if' → logprob: -1.6735104322433472
    3. 'b' → logprob: -2.6735105514526367
    4. ' kept' → logprob: -2.9235105514526367
    5. 'steps' (adapté à ' steps') → logprob: -2.9235105514526367
    6. ' if' → logprob: -3.4235105514526367
    7. 'current' → logprob: -4.673510551452637
    8. '       ' → logprob: -5.423510551452637
    9. '   ' → logprob: -5.423510551452637
    10. ' steps' → logprob: -5.673510551452637

Token 53: '+=' (ID: 18287)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.36043238639831543
    2. '+=' → logprob: -1.6104323863983154
    3. '+' → logprob: -2.8604323863983154
    4. '%' → logprob: -3.8604323863983154
    5. '<|end|>' → logprob: -4.1104326248168945
    6. '=' → logprob: -6.1104326248168945
    7. ' %' → logprob: -7.1104326248168945
    8. ' ==' → logprob: -7.3604326248168945
    9. '==' → logprob: -7.3604326248168945
    10. ' >=' → logprob: -7.7354326248168945

Token 54: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.016886495053768158
    2. 'b' → logprob: -4.6418867111206055
    3. ' ' → logprob: -5.1418867111206055
    4. 'p' → logprob: -7.1418867111206055
    5. 'ke' → logprob: -8.766886711120605
    6. '2' → logprob: -9.391886711120605
    7. ' p' → logprob: -9.766886711120605
    8. ' bowl' → logprob: -10.141886711120605
    9. ' b' → logprob: -10.391886711120605
    10. ' kept' → logprob: -11.016886711120605

Token 55: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35065093636512756
    2. '<|end|>' → logprob: -1.4756509065628052
    3. '
' → logprob: -3.1006510257720947
    4. ' current' → logprob: -5.475650787353516
    5. '   ' → logprob: -5.600650787353516
    6. ' 
' → logprob: -6.100650787353516
    7. '        
' → logprob: -6.225650787353516
    8. 'current' → logprob: -6.225650787353516
    9. 'b' → logprob: -6.475650787353516
    10. ' ' → logprob: -6.475650787353516

Token 56: '       ' (ID: 309)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5396260619163513
    2. '       ' → logprob: -1.789626121520996
    3. '   ' → logprob: -2.664626121520996
    4. 'ke' → logprob: -3.039626121520996
    5. ' kept' → logprob: -3.289626121520996
    6. 'current' → logprob: -3.539626121520996
    7. ' if' → logprob: -3.789626121520996
    8. 'if' → logprob: -4.164626121520996
    9. ' current' → logprob: -4.289626121520996
    10. '    ' → logprob: -5.664626121520996

Token 57: ' if' (ID: 538)
  Prédit: 'ke'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ke' → logprob: -0.13474057614803314
    2. 'if' (adapté à ' if') → logprob: -2.6347405910491943
    3. 'b' → logprob: -3.1347405910491943
    4. 'current' → logprob: -4.634740352630615
    5. 'p' → logprob: -8.384740829467773
    6. 'keep' → logprob: -8.384740829467773
    7. '```' → logprob: -9.384740829467773
    8. '   ' → logprob: -9.384740829467773
    9. 'while' → logprob: -9.759740829467773
    10. 'n' → logprob: -9.884740829467773

Token 58: ' bowl' (ID: 24429)
  Prédit: ' kept'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' kept' → logprob: -0.7880430221557617
    2. 'ke' → logprob: -1.4130430221557617
    3. 'b' → logprob: -1.5380430221557617
    4. ' bowl' → logprob: -2.5380430221557617
    5. ' current' → logprob: -6.288043022155762
    6. 'p' → logprob: -6.538043022155762
    7. ' p' → logprob: -6.788043022155762
    8. 'current' → logprob: -7.038043022155762
    9. ' steps' → logprob: -7.413043022155762
    10. ' b' → logprob: -8.100543022155762

Token 59: '>' (ID: 29)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4361780285835266
    2. ' ==' → logprob: -1.6861779689788818
    3. '>' → logprob: -3.311177968978882
    4. '<=' → logprob: -3.436177968978882
    5. ' <=' → logprob: -3.811177968978882
    6. '%' → logprob: -3.811177968978882
    7. '<' → logprob: -4.186178207397461
    8. ' >' → logprob: -4.311178207397461
    9. '>=' → logprob: -4.811178207397461
    10. ' <' → logprob: -4.811178207397461

Token 60: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03520217910408974
    2. 'ke' → logprob: -4.2852020263671875
    3. 'current' → logprob: -5.0352020263671875
    4. '1' → logprob: -5.1602020263671875
    5. '=' → logprob: -5.4102020263671875
    6. 'n' → logprob: -6.1602020263671875
    7. ' ' → logprob: -6.7852020263671875
    8. 'steps' → logprob: -7.7852020263671875
    9. ' current' → logprob: -9.410202026367188
    10. '2' → logprob: -10.160202026367188

Token 61: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011692166328430176
    2. ' and' → logprob: -4.511692047119141
    3. ' :' → logprob: -8.13669204711914
    4. '):' → logprob: -9.38669204711914
    5. ':
' → logprob: -9.51169204711914
    6. 'and' → logprob: -9.76169204711914
    7. ')' → logprob: -9.76169204711914
    8. '   ' → logprob: -11.13669204711914
    9. '           ' → logprob: -11.51169204711914
    10. '       ' → logprob: -11.76169204711914

Token 62: '           ' (ID: 352)
  Prédit: ' kept'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' kept' → logprob: -0.1393643319606781
    2. ' current' → logprob: -3.014364242553711
    3. ' bowl' → logprob: -3.014364242553711
    4. '           ' → logprob: -4.514364242553711
    5. '       ' → logprob: -5.264364242553711
    6. 'b' → logprob: -5.389364242553711
    7. 'ke' → logprob: -5.889364242553711
    8. '   ' → logprob: -6.139364242553711
    9. '<|end|>' → logprob: -6.264364242553711
    10. 'current' → logprob: -6.514364242553711

Token 63: ' bowl' (ID: 24429)
  Prédit: ' kept'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' kept' → logprob: -0.654488205909729
    2. 'ke' → logprob: -1.154488205909729
    3. '           ' → logprob: -2.9044880867004395
    4. 'b' → logprob: -3.0294880867004395
    5. ' bowl' → logprob: -3.4044880867004395
    6. ' current' → logprob: -4.2794880867004395
    7. 'current' → logprob: -5.2794880867004395
    8. '   ' → logprob: -5.9044880867004395
    9. '       ' → logprob: -7.0294880867004395
    10. '          ' → logprob: -7.0294880867004395

Token 64: '-=' (ID: 77519)
  Prédit: '-='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.09445039927959442
    2. ' -=' → logprob: -2.8444504737854004
    3. '-' → logprob: -3.4694504737854004
    4. '=' → logprob: -7.9694504737854
    5. '>' → logprob: -8.719449996948242
    6. '+=' → logprob: -9.469449996948242
    7. '==' → logprob: -9.469449996948242
    8. '--' → logprob: -10.469449996948242
    9. ' -' → logprob: -10.594449996948242
    10. ')' → logprob: -10.969449996948242

Token 65: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00035906085395254195
    2. 'ke' → logprob: -8.375359535217285
    3. ' ' → logprob: -9.250359535217285
    4. 'b' → logprob: -11.000359535217285
    5. '2' → logprob: -12.750359535217285
    6. ' kept' → logprob: -12.750359535217285
    7. '0' → logprob: -12.875359535217285
    8. 'p' → logprob: -13.250359535217285
    9. 'current' → logprob: -13.750359535217285
    10. '   ' → logprob: -14.312859535217285

Token 66: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7208596467971802
    2. '
' → logprob: -0.8458596467971802
    3. ' kept' → logprob: -3.9708595275878906
    4. '<|end|>' → logprob: -3.9708595275878906
    5. 'current' → logprob: -4.220859527587891
    6. '       ' → logprob: -4.345859527587891
    7. ')' → logprob: -5.095859527587891
    8. '            
' → logprob: -5.845859527587891
    9. ',' → logprob: -6.845859527587891
    10. ' current' → logprob: -6.845859527587891

Token 67: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04108191281557083
    2. ')' → logprob: -4.54108190536499
    3. '       ' → logprob: -4.54108190536499
    4. '
' → logprob: -4.54108190536499
    5. '<|end|>' → logprob: -5.66608190536499
    6. 'current' → logprob: -6.66608190536499
    7. ',' → logprob: -7.41608190536499
    8. '               ' → logprob: -7.54108190536499
    9. ' current' → logprob: -7.79108190536499
    10. '   ' → logprob: -8.041082382202148

Token 68: ' kept' (ID: 13185)
  Prédit: 'ke'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ke' → logprob: -0.0008126051397994161
    2. ' kept' → logprob: -7.875812530517578
    3. 'current' → logprob: -8.375812530517578
    4. '           ' → logprob: -9.250812530517578
    5. '       ' → logprob: -10.375812530517578
    6. '   ' → logprob: -10.375812530517578
    7. 'b' → logprob: -11.625812530517578
    8. '```' → logprob: -11.625812530517578
    9. 'keep' → logprob: -12.750812530517578
    10. ' ke' → logprob: -12.875812530517578

Token 69: '[current' (ID: 49470)
  Prédit: '[current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -0.001960274763405323
    2. '[' → logprob: -6.251960277557373
    3. '[cur' → logprob: -11.626959800720215
    4. ' [' → logprob: -11.626959800720215
    5. '[curr' → logprob: -12.501959800720215
    6. '```' → logprob: -12.626959800720215
    7. 'current' → logprob: -13.501959800720215
    8. '[next' → logprob: -14.501959800720215
    9. '\[' → logprob: -14.501959800720215
    10. '[user' → logprob: -15.126959800720215

Token 70: ']+=' (ID: 123635)
  Prédit: ']+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+=' → logprob: -0.05500731244683266
    2. ']' → logprob: -2.930007219314575
    3. ']+' → logprob: -9.180006980895996
    4. ']=' → logprob: -10.930006980895996
    5. ' ]' → logprob: -13.555006980895996
    6. '+=' → logprob: -14.055006980895996
    7. ']]' → logprob: -14.680006980895996
    8. '```' → logprob: -15.305006980895996
    9. '']' → logprob: -15.430006980895996
    10. ']==' → logprob: -15.930006980895996

Token 71: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8908587662735954e-05
    2. ' ' → logprob: -11.250019073486328
    3. 'b' → logprob: -13.250019073486328
    4. '2' → logprob: -13.875019073486328
    5. 'p' → logprob: -13.937519073486328
    6. '10' → logprob: -14.625019073486328
    7. '   ' → logprob: -14.750019073486328
    8. '```' → logprob: -15.500019073486328
    9. '3' → logprob: -15.625019073486328
    10. '100' → logprob: -15.937519073486328

Token 72: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8670318722724915
    2. '           ' → logprob: -1.1170318126678467
    3. ' else' → logprob: -2.3670318126678467
    4. '
' → logprob: -2.4920318126678467
    5. 'else' → logprob: -3.1170318126678467
    6. '   ' → logprob: -5.117032051086426
    7. ' 
' → logprob: -5.617032051086426
    8. ' current' → logprob: -5.617032051086426
    9. '<|end|>' → logprob: -5.742032051086426
    10. 'current' → logprob: -5.992032051086426

Token 73: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0932562351226807
    2. ' else' → logprob: -1.4682562351226807
    3. '       ' → logprob: -1.8432562351226807
    4. 'else' → logprob: -2.0932562351226807
    5. ' 
' → logprob: -3.2182562351226807
    6. '<|end|>' → logprob: -3.5932562351226807
    7. '           ' → logprob: -4.093255996704102
    8. ' current' → logprob: -4.343255996704102
    9. 'current' → logprob: -4.468255996704102
    10. '   ' → logprob: -5.093255996704102

Token 74: ' if' (ID: 538)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.2979466915130615
    2. ' current' → logprob: -1.9229466915130615
    3. 'if' (adapté à ' if') → logprob: -2.5479466915130615
    4. ' if' → logprob: -3.6729466915130615
    5. '   ' → logprob: -5.422946929931641
    6. '           ' → logprob: -6.422946929931641
    7. 'b' → logprob: -7.297946929931641
    8. '       ' → logprob: -7.672946929931641
    9. 'else' → logprob: -8.42294692993164
    10. ' bowl' → logprob: -9.17294692993164

Token 75: ' bowl' (ID: 24429)
  Prédit: 'ke'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ke' → logprob: -0.3660963475704193
    2. ' kept' → logprob: -1.2410963773727417
    3. 'b' → logprob: -4.241096496582031
    4. ' bowl' → logprob: -6.491096496582031
    5. 'p' → logprob: -7.866096496582031
    6. ' ke' → logprob: -8.616096496582031
    7. 'current' → logprob: -8.741096496582031
    8. ' current' → logprob: -8.741096496582031
    9. ' steps' → logprob: -8.866096496582031
    10. ' p' → logprob: -8.991096496582031

Token 76: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.04189755395054817
    2. '>' → logprob: -3.5418975353240967
    3. ' ==' → logprob: -4.541897773742676
    4. '<=' → logprob: -7.291897773742676
    5. '<' → logprob: -8.166897773742676
    6. ' >' → logprob: -8.791897773742676
    7. '%' → logprob: -9.666897773742676
    8. '+' → logprob: -9.791897773742676
    9. '>=' → logprob: -9.791897773742676
    10. '!=' → logprob: -10.541897773742676

Token 77: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0012466588523238897
    2. ' ' → logprob: -6.751246452331543
    3. '1' → logprob: -10.376246452331543
    4. 'p' → logprob: -11.251246452331543
    5. '2' → logprob: -11.626246452331543
    6. '   ' → logprob: -12.313746452331543
    7. 'n' → logprob: -12.626246452331543
    8. '4' → logprob: -12.938746452331543
    9. '3' → logprob: -13.251246452331543
    10. 'current' → logprob: -13.501246452331543

Token 78: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04001651704311371
    2. ' and' → logprob: -3.4150164127349854
    3. ':
' → logprob: -5.6650166511535645
    4. ' or' → logprob: -6.4150166511535645
    5. '<|end|>' → logprob: -7.5400166511535645
    6. 'and' → logprob: -7.7900166511535645
    7. ',' → logprob: -9.165016174316406
    8. ':

' → logprob: -9.540016174316406
    9. '<|end|>' → logprob: -10.415016174316406
    10. ':return' → logprob: -10.540016174316406

Token 79: ' sum' (ID: 4215)
  Prédit: 'ke'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ke' → logprob: -0.2294112592935562
    2. ' kept' → logprob: -1.854411244392395
    3. 'sum' → logprob: -3.9794113636016846
    4. 'current' → logprob: -4.6044111251831055
    5. 'all' → logprob: -5.3544111251831055
    6. ' sum' → logprob: -5.6044111251831055
    7. ' current' → logprob: -5.8544111251831055
    8. '(' → logprob: -6.6044111251831055
    9. ' all' → logprob: -6.7294111251831055
    10. 'steps' → logprob: -6.9794111251831055

Token 80: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00017267030489165336
    2. 'ke' → logprob: -9.12517261505127
    3. '(
' → logprob: -10.37517261505127
    4. '(

' → logprob: -11.87517261505127
    5. ' kept' → logprob: -12.00017261505127
    6. ' (' → logprob: -12.37517261505127
    7. ')' → logprob: -13.12517261505127
    8. '(current' → logprob: -13.25017261505127
    9. '-ke' → logprob: -13.37517261505127
    10. '_ke' → logprob: -13.62517261505127

Token 81: 'ke' (ID: 1272)
  Prédit: 'ke'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ke' → logprob: -0.10080047696828842
    2. '(' → logprob: -2.3508005142211914
    3. ' kept' → logprob: -8.600800514221191
    4. 'keep' → logprob: -9.225800514221191
    5. '[' → logprob: -9.475800514221191
    6. 'k' → logprob: -9.600800514221191
    7. ')' → logprob: -10.100800514221191
    8. '(k' → logprob: -10.225800514221191
    9. '([' → logprob: -10.725800514221191
    10. '   ' → logprob: -11.850800514221191

Token 82: 'pt' (ID: 555)
  Prédit: 'pt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pt' → logprob: -3.054500666621607e-06
    2. 'p' → logprob: -14.00000286102295
    3. '[' → logprob: -14.75000286102295
    4. 'e' → logprob: -14.75000286102295
    5. '>' → logprob: -15.62500286102295
    6. 'ep' → logprob: -15.62500286102295
    7. '.pt' → logprob: -15.75000286102295
    8. 't' → logprob: -16.000003814697266
    9. '   ' → logprob: -16.375003814697266
    10. ' pt' → logprob: -16.500003814697266

Token 83: ')-' (ID: 14080)
  Prédit: ')=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')==' → logprob: -0.11046797782182693
    2. ')' → logprob: -2.7354679107666016
    3. ')!=' → logprob: -3.9854679107666016
    4. ')>=' → logprob: -4.985467910766602
    5. ')<' → logprob: -5.360467910766602
    6. ')>' → logprob: -5.360467910766602
    7. '[:' → logprob: -6.360467910766602
    8. '[' → logprob: -6.610467910766602
    9. '==' → logprob: -7.485467910766602
    10. '[i' → logprob: -7.985467910766602

Token 84: 'ke' (ID: 1272)
  Prédit: 'ke'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ke' → logprob: -0.1571771800518036
    2. 'steps' → logprob: -3.157177209854126
    3. '1' → logprob: -3.657177209854126
    4. 'sum' → logprob: -3.907177209854126
    5. 'n' → logprob: -4.032176971435547
    6. 'max' → logprob: -4.407176971435547
    7. 'p' → logprob: -4.657176971435547
    8. 'b' → logprob: -4.782176971435547
    9. ' kept' → logprob: -6.032176971435547
    10. '(' → logprob: -6.407176971435547

Token 85: 'pt' (ID: 555)
  Prédit: 'pt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pt' → logprob: -0.0002843384863808751
    2. 'p' → logprob: -8.500284194946289
    3. 'ep' → logprob: -9.625284194946289
    4. 't' → logprob: -13.375284194946289
    5. '1' → logprob: -13.500284194946289
    6. 'pts' → logprob: -13.625284194946289
    7. '```' → logprob: -13.750284194946289
    8. '[' → logprob: -14.000284194946289
    9. '-' → logprob: -14.187784194946289
    10. '   ' → logprob: -14.375284194946289

Token 86: '[current' (ID: 49470)
  Prédit: '[current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -7.195421494543552e-05
    2. '[' → logprob: -9.62507152557373
    3. 'current' → logprob: -12.87507152557373
    4. '[cur' → logprob: -13.37507152557373
    5. '[
' → logprob: -14.12507152557373
    6. '[curr' → logprob: -15.12507152557373
    7. '[user' → logprob: -15.75007152557373
    8. '<|end|>' → logprob: -15.87507152557373
    9. ' current' → logprob: -16.375072479248047
    10. '$current' → logprob: -16.750072479248047

Token 87: ']==' (ID: 34128)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3581901490688324
    2. '>' → logprob: -1.3581901788711548
    3. ' ==' → logprob: -4.483190059661865
    4. ')' → logprob: -4.483190059661865
    5. '!=' → logprob: -4.858190059661865
    6. ')==' → logprob: -5.608190059661865
    7. ' >' → logprob: -5.858190059661865
    8. '>=' → logprob: -6.483190059661865
    9. '<=' → logprob: -6.608190059661865
    10. ')>' → logprob: -7.108190059661865

Token 88: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5048538446426392
    2. 'ke' → logprob: -1.1298538446426392
    3. 'p' → logprob: -3.6298537254333496
    4. 'steps' → logprob: -4.00485372543335
    5. 'current' → logprob: -4.25485372543335
    6. 'n' → logprob: -5.00485372543335
    7. 'b' → logprob: -5.50485372543335
    8. '1' → logprob: -6.87985372543335
    9. '(' → logprob: -6.87985372543335
    10. ' ' → logprob: -8.629854202270508

Token 89: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0011105667799711227
    2. ':
' → logprob: -7.001110553741455
    3. ' and' → logprob: -8.751111030578613
    4. ':return' → logprob: -11.751111030578613
    5. ' or' → logprob: -11.876111030578613
    6. '       ' → logprob: -12.251111030578613
    7. ',' → logprob: -12.376111030578613
    8. 'and' → logprob: -12.626111030578613
    9. '           ' → logprob: -12.876111030578613
    10. ' :' → logprob: -12.876111030578613

Token 90: '               ' (ID: 506)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05929727852344513
    2. ':
' → logprob: -3.4342973232269287
    3. '           ' → logprob: -3.8092973232269287
    4. '               ' → logprob: -6.68429708480835
    5. '       ' → logprob: -7.05929708480835
    6. '\n' → logprob: -8.434297561645508
    7. '   ' → logprob: -8.684297561645508
    8. ' and' → logprob: -8.809297561645508
    9. '.' → logprob: -8.809297561645508
    10. ':return' → logprob: -9.434297561645508

Token 91: ' print' (ID: 2123)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.03042694367468357
    2. 'break' → logprob: -4.780426979064941
    3. '           ' → logprob: -4.905426979064941
    4. '               ' → logprob: -5.155426979064941
    5. ' print' → logprob: -5.530426979064941
    6. '   ' → logprob: -7.155426979064941
    7. '       ' → logprob: -7.280426979064941
    8. 'print' (adapté à ' print') → logprob: -7.405426979064941
    9. ' continue' → logprob: -7.530426979064941
    10. '                   ' → logprob: -8.280426979064941

Token 92: '(current' (ID: 15023)
  Prédit: '(current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -0.7056305408477783
    2. '(' → logprob: -0.8306305408477783
    3. '("' → logprob: -2.8306305408477783
    4. '('' → logprob: -5.330630302429199
    5. '(b' → logprob: -6.205630302429199
    6. '(f' → logprob: -6.580630302429199
    7. '(len' → logprob: -7.330630302429199
    8. '((' → logprob: -7.580630302429199
    9. '(n' → logprob: -7.830630302429199
    10. '("("' → logprob: -8.0806303024292

Token 93: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006574088241904974
    2. '+' → logprob: -5.1315741539001465
    3. ')
' → logprob: -7.6315741539001465
    4. ' )' → logprob: -10.006573677062988
    5. ',' → logprob: -10.131573677062988
    6. '*' → logprob: -11.256573677062988
    7. ' +' → logprob: -11.756573677062988
    8. ')`' → logprob: -12.006573677062988
    9. '```' → logprob: -12.131573677062988
    10. '))' → logprob: -12.131573677062988

Token 94: '               ' (ID: 506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5842851996421814
    2. '               ' → logprob: -1.8342852592468262
    3. ')' → logprob: -1.9592852592468262
    4. '           ' → logprob: -2.584285259246826
    5. '<|end|>' → logprob: -4.084285259246826
    6. '\n' → logprob: -4.709285259246826
    7. '   ' → logprob: -4.709285259246826
    8. '        ' → logprob: -5.584285259246826
    9. '        
' → logprob: -5.834285259246826
    10. ' ' → logprob: -5.834285259246826

Token 95: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8021057844161987
    2. 'break' (adapté à ' break') → logprob: -1.3021057844161987
    3. ' break' → logprob: -1.5521057844161987
    4. '	break' → logprob: -3.8021059036254883
    5. '        
' → logprob: -4.052105903625488
    6. '               ' → logprob: -4.677105903625488
    7. '   ' → logprob: -5.677105903625488
    8. ' ' → logprob: -5.677105903625488
    9. '\n' → logprob: -5.927105903625488
    10. '    
' → logprob: -6.302105903625488

Token 96: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4385226368904114
    2. ' 
' → logprob: -2.1885225772857666
    3. '<|end|>' → logprob: -2.1885225772857666
    4. '
' → logprob: -2.9385225772857666
    5. '        
' → logprob: -3.5635225772857666
    6. '   ' → logprob: -4.313522815704346
    7. '    
' → logprob: -4.563522815704346
    8. 'current' → logprob: -5.688522815704346
    9. ' ' → logprob: -5.813522815704346
    10. ' else' → logprob: -6.188522815704346

Token 97: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7876455187797546
    2. ' 
' → logprob: -1.1626455783843994
    3. ' ' → logprob: -3.1626455783843994
    4. ')' → logprob: -3.2876455783843994
    5. ' else' → logprob: -3.6626455783843994
    6. 'current' → logprob: -3.7876455783843994
    7. 'else' → logprob: -3.9126455783843994
    8. '        
' → logprob: -4.16264533996582
    9. '<|end|>' → logprob: -4.16264533996582
    10. ' current' → logprob: -4.41264533996582

Token 98: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9222761392593384
    2. ' else' → logprob: -1.5472761392593384
    3. ' current' → logprob: -1.6722761392593384
    4. 'current' → logprob: -2.547276020050049
    5. 'else' (adapté à ' else') → logprob: -2.797276020050049
    6. '   ' → logprob: -3.422276020050049
    7. ' ' → logprob: -4.422276020050049
    8. '```' → logprob: -5.797276020050049
    9. '	current' → logprob: -5.922276020050049
    10. ' 
' → logprob: -6.172276020050049

Token 99: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.21479816734790802
    2. ':' → logprob: -2.5897982120513916
    3. '   ' → logprob: -3.2147982120513916
    4. '           ' → logprob: -3.5897982120513916
    5. 'current' → logprob: -3.8397982120513916
    6. ' bowl' → logprob: -4.2147979736328125
    7. '       ' → logprob: -4.9647979736328125
    8. ' current' → logprob: -5.9647979736328125
    9. 'b' → logprob: -6.2147979736328125
    10. '```' → logprob: -6.9647979736328125

Token 100: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7690008282661438
    2. 'b' → logprob: -1.519000768661499
    3. 'current' → logprob: -1.519000768661499
    4. '           ' → logprob: -2.519000768661499
    5. ' bowl' → logprob: -5.019001007080078
    6. ' current' → logprob: -5.394001007080078
    7. '       ' → logprob: -5.394001007080078
    8. 'if' → logprob: -6.394001007080078
    9. 'break' → logprob: -9.144001007080078
    10. ' ' → logprob: -9.144001007080078

Token 101: ' bowl' (ID: 24429)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.36064234375953674
    2. 'current' → logprob: -2.110642433166504
    3. 'if' → logprob: -2.610642433166504
    4. 'ke' → logprob: -2.735642433166504
    5. '   ' → logprob: -3.985642433166504
    6. 'while' → logprob: -4.985642433166504
    7. '           ' → logprob: -5.360642433166504
    8. '       ' → logprob: -5.360642433166504
    9. 'for' → logprob: -5.860642433166504
    10. 'steps' → logprob: -6.110642433166504

Token 102: '=sum' (ID: 174693)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.3654240071773529
    2. '=' → logprob: -1.2404240369796753
    3. '=p' → logprob: -4.865424156188965
    4. '=b' → logprob: -4.865424156188965
    5. '=n' → logprob: -7.865424156188965
    6. ' +=' → logprob: -7.865424156188965
    7. '=int' → logprob: -8.990424156188965
    8. '=max' → logprob: -8.990424156188965
    9. '=len' → logprob: -9.115424156188965
    10. ' =' → logprob: -9.615424156188965

Token 103: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0564331205387134e-05
    2. 'ke' → logprob: -11.87501049041748
    3. ' (' → logprob: -14.75001049041748
    4. '(b' → logprob: -14.75001049041748
    5. '(n' → logprob: -14.87501049041748
    6. '-ke' → logprob: -14.87501049041748
    7. ' kept' → logprob: -15.00001049041748
    8. '(
' → logprob: -15.00001049041748
    9. '((' → logprob: -15.25001049041748
    10. '(te' → logprob: -15.50001049041748

Token 104: 'ke' (ID: 1272)
  Prédit: 'ke'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ke' → logprob: -0.0001468067930545658
    2. ' kept' → logprob: -9.625146865844727
    3. '[' → logprob: -10.000146865844727
    4. 'keep' → logprob: -11.125146865844727
    5. '(' → logprob: -11.500146865844727
    6. ')' → logprob: -13.000146865844727
    7. 'k' → logprob: -13.375146865844727
    8. 'kee' → logprob: -13.875146865844727
    9. 'held' → logprob: -14.125146865844727
    10. '   ' → logprob: -14.625146865844727

Token 105: 'pt' (ID: 555)
  Prédit: 'pt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pt' → logprob: -6.704273118884885e-07
    2. 'p' → logprob: -15.125000953674316
    3. '[' → logprob: -15.500000953674316
    4. 't' → logprob: -16.5
    5. 'pts' → logprob: -17.75
    6. 'lt' → logprob: -18.0
    7. 'nt' → logprob: -18.25
    8. 'PT' → logprob: -18.5
    9. 'pd' → logprob: -19.25
    10. 'ep' → logprob: -19.25

Token 106: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06208207458257675
    2. ')-' → logprob: -2.812082052230835
    3. '[' → logprob: -10.437082290649414
    4. ' )' → logprob: -10.687082290649414
    5. '   ' → logprob: -11.187082290649414
    6. ')
' → logprob: -11.812082290649414
    7. ')+' → logprob: -12.062082290649414
    8. ' ' → logprob: -12.437082290649414
    9. ')-(' → logprob: -12.812082290649414
    10. '<|end|>' → logprob: -12.937082290649414

Token 107: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13158290088176727
    2. '           ' → logprob: -3.1315829753875732
    3. '+' → logprob: -4.006582736968994
    4. ' current' → logprob: -4.131582736968994
    5. '-' → logprob: -4.756582736968994
    6. '        
' → logprob: -5.006582736968994
    7. '<|end|>' → logprob: -5.381582736968994
    8. '   ' → logprob: -5.506582736968994
    9. 'current' → logprob: -5.756582736968994
    10. '[current' → logprob: -5.881582736968994

Token 108: ' kept' (ID: 13185)
  Prédit: 'ke'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ke' → logprob: -0.01644921489059925
    2. ' kept' → logprob: -5.141449451446533
    3. '       ' → logprob: -5.641449451446533
    4. '           ' → logprob: -5.891449451446533
    5. '   ' → logprob: -6.141449451446533
    6. 'current' → logprob: -7.266449451446533
    7. 'b' → logprob: -7.641449451446533
    8. 'keep' → logprob: -8.516448974609375
    9. '          ' → logprob: -8.891448974609375
    10. 'if' → logprob: -9.141448974609375

Token 109: '=[' (ID: 13370)
  Prédit: '[current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -0.15832002460956573
    2. '=[' → logprob: -2.0333199501037598
    3. '=current' → logprob: -5.28331995010376
    4. '=' → logprob: -5.53331995010376
    5. '[:]' → logprob: -5.53331995010376
    6. '[' → logprob: -6.53331995010376
    7. '=[]' → logprob: -7.28331995010376
    8. ' =' → logprob: -8.783320426940918
    9. '.clear' → logprob: -9.408320426940918
    10. '=[
' → logprob: -10.033320426940918

Token 110: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.690834273584187e-05
    2. ' ' → logprob: -10.25003719329834
    3. '   ' → logprob: -15.00003719329834
    4. ')' → logprob: -15.93753719329834
    5. '[' → logprob: -16.000036239624023
    6. ']' → logprob: -16.062536239624023
    7. '۰' → logprob: -16.187536239624023
    8. '<|end|>' → logprob: -16.187536239624023
    9. '```' → logprob: -16.437536239624023
    10. '-' → logprob: -16.562536239624023

Token 111: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.00021927160560153425
    2. '*n' → logprob: -8.500219345092773
    3. ']' → logprob: -11.250219345092773
    4. ']*(' → logprob: -13.375219345092773
    5. ' for' → logprob: -14.250219345092773
    6. ']+' → logprob: -15.500219345092773
    7. '*' → logprob: -16.000219345092773
    8. '```' → logprob: -16.375219345092773
    9. ')*' → logprob: -16.500219345092773
    10. ' ]' → logprob: -17.500219345092773

Token 112: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -6.392202976712724e-06
    2. 'len' → logprob: -12.125006675720215
    3. ' n' → logprob: -14.375006675720215
    4. '(n' → logprob: -15.375006675720215
    5. 'current' → logprob: -16.1250057220459
    6. '(len' → logprob: -19.1250057220459
    7. '(' → logprob: -19.1250057220459
    8. '   ' → logprob: -19.7500057220459
    9. '	n' → logprob: -20.1250057220459
    10. '_n' → logprob: -21.2500057220459

Token 113: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6104785799980164
    2. ' current' → logprob: -1.9854786396026611
    3. 'current' → logprob: -2.235478639602661
    4. '<|end|>' → logprob: -2.360478639602661
    5. '
' → logprob: -3.860478639602661
    6. '[current' → logprob: -3.985478639602661
    7. ' ' → logprob: -4.110478401184082
    8. '   ' → logprob: -4.110478401184082
    9. ',current' → logprob: -4.735478401184082
    10. '        
' → logprob: -4.735478401184082

Token 114: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.596269965171814
    2. 'current' → logprob: -1.596269965171814
    3. ' current' → logprob: -1.846269965171814
    4. '   ' → logprob: -3.5962700843811035
    5. ' ' → logprob: -4.5962700843811035
    6. '[current' → logprob: -4.7212700843811035
    7. '<|end|>' → logprob: -4.8462700843811035
    8. '(current' → logprob: -5.2212700843811035
    9. '	current' → logprob: -5.3462700843811035
    10. ',current' → logprob: -5.4712700843811035

Token 115: ' current' (ID: 2208)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7852136492729187
    2. ' current' → logprob: -1.2852137088775635
    3. 'current' (adapté à ' current') → logprob: -1.4102137088775635
    4. '	current' → logprob: -5.160213470458984
    5. '        
' → logprob: -5.285213470458984
    6. '   ' → logprob: -5.410213470458984
    7. '
' → logprob: -6.535213470458984
    8. '<|end|>' → logprob: -6.785213470458984
    9. ',current' → logprob: -7.035213470458984
    10. '```' → logprob: -7.285213470458984

Token 116: '=(' (ID: 9893)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.10756794363260269
    2. '=' → logprob: -2.3575680255889893
    3. ' +=' → logprob: -5.10756778717041
    4. ' =' → logprob: -6.85756778717041
    5. '=(' → logprob: -9.10756778717041
    6. '+=(' → logprob: -9.60756778717041
    7. '+' → logprob: -10.23256778717041
    8. '%=' → logprob: -11.35756778717041
    9. '-=' → logprob: -13.48256778717041
    10. '(' → logprob: -13.60756778717041

Token 117: 'current' (ID: 5804)
  Prédit: 'current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.011657999828457832
    2. ' current' → logprob: -4.886658191680908
    3. '(current' → logprob: -5.511658191680908
    4. ' (' → logprob: -13.76165771484375
    5. '[current' → logprob: -13.88665771484375
    6. '$current' → logprob: -15.01165771484375
    7. '   ' → logprob: -15.13665771484375
    8. '=current' → logprob: -15.13665771484375
    9. ',current' → logprob: -15.13665771484375
    10. 'cur' → logprob: -15.26165771484375

Token 118: '-' (ID: 12)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.029751179739832878
    2. ' +' → logprob: -3.5297510623931885
    3. ')+' → logprob: -16.27975082397461
    4. ')' → logprob: -16.52975082397461
    5. ' plus' → logprob: -16.52975082397461
    6. '()+' → logprob: -16.52975082397461
    7. '+)' → logprob: -16.77975082397461
    8. '＋' → logprob: -16.77975082397461
    9. '+n' → logprob: -17.27975082397461
    10. ' ' → logprob: -17.27975082397461

Token 119: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0012554689310491085
    2. ' ' → logprob: -6.751255512237549
    3. '-' → logprob: -10.12625503540039
    4. '   ' → logprob: -10.25125503540039
    5. ' -' → logprob: -12.62625503540039
    6. '       ' → logprob: -13.37625503540039
    7. '  ' → logprob: -13.75125503540039
    8. '2' → logprob: -14.37625503540039
    9. ')' → logprob: -14.75125503540039
    10. '    ' → logprob: -14.87625503540039

Token 120: ')%' (ID: 57656)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.032177895307540894
    2. ' +' → logprob: -3.6571779251098633
    3. ')' → logprob: -5.157177925109863
    4. '+n' → logprob: -10.157177925109863
    5. ')%' → logprob: -10.907177925109863
    6. '+)' → logprob: -10.907177925109863
    7. ' )' → logprob: -11.532177925109863
    8. ')+' → logprob: -11.782177925109863
    9. '-' → logprob: -12.282177925109863
    10. '1' → logprob: -13.657177925109863

Token 121: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -5.848420551046729e-05
    2. ' n' → logprob: -9.7500581741333
    3. '<|end|>' → logprob: -16.375059127807617
    4. '	n' → logprob: -18.375059127807617
    5. '```' → logprob: -19.500059127807617
    6. '_n' → logprob: -19.625059127807617
    7. ')n' → logprob: -19.750059127807617
    8. '(n' → logprob: -19.875059127807617
    9. '`' → logprob: -19.875059127807617
    10. 'len' → logprob: -20.625059127807617


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 119
Tokens correctement prédits (1ère position, stricte): 51
Tokens correctement prédits (1ère position, avec adaptation): 51
Tokens correctement prédits (top 10): 95
Précision stricte (1ère position): 42.86%
Précision adaptée (1ère position): 42.86%
Précision (top 10): 79.83%
================================================================================
