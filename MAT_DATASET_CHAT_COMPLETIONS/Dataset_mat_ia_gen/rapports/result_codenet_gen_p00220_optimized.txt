================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:19:53
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def float_to_bin(num):
    if num < 0:
        return None
    integer_part = int(num)
    fractional_part = num - integer_part
    int_bin = bin(integer_part)[2:]
    if len(int_bin) > 8:
        return None
    int_bin = int_bin.zfill(8)
    frac_bin = []
    frac = fractional_part
    for _ in range(4):
        frac *= 2
        bit = int(frac)
        frac_bin.append(str(bit))
        frac -= bit
    if frac != 0:
        return None
    return int_bin + '.' + ''.join(frac_bin)

import sys
for line in sys.stdin:
    line=line.strip()
    if not line:
        continue
    try:
        n = float(line)
    except:
        continue
    if n < 0:
        break
    res = float_to_bin(n)
    print(res if res is not None else "NA")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' float' (ID: 4428)
  → Token d'amorce (pas de prédiction)

Token 2: '_to' (ID: 5089)
  → Token d'amorce (pas de prédiction)

Token 3: '_bin' (ID: 53631)
  Prédit: '_float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_float' → logprob: -0.28892114758491516
    2. '_string' → logprob: -1.7889211177825928
    3. '_' → logprob: -2.6639211177825928
    4. '_str' → logprob: -4.788921356201172
    5. ' _' → logprob: -5.913921356201172
    6. '_int' → logprob: -6.788921356201172
    7. ' float' → logprob: -7.413921356201172
    8. '_double' → logprob: -8.288921356201172
    9. ' string' → logprob: -8.538921356201172
    10. '_number' → logprob: -8.538921356201172

Token 4: '(num' (ID: 15828)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0024272636510431767
    2. '_' → logprob: -6.377427101135254
    3. '```' → logprob: -8.377427101135254
    4. '(:' → logprob: -8.877427101135254
    5. '(_:' → logprob: -9.627427101135254
    6. '_:' → logprob: -9.627427101135254
    7. '(_' → logprob: -10.127427101135254
    8. '(
' → logprob: -10.752427101135254
    9. 'def' → logprob: -11.127427101135254
    10. '**' → logprob: -11.127427101135254

Token 5: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.021536774933338165
    2. ')' → logprob: -4.146536827087402
    3. ':' → logprob: -5.271536827087402
    4. '(' → logprob: -9.271536827087402
    5. '():' → logprob: -9.521536827087402
    6. '```' → logprob: -9.521536827087402
    7. '):
' → logprob: -10.896536827087402
    8. ' ):' → logprob: -11.521536827087402
    9. '**' → logprob: -11.521536827087402
    10. 's' → logprob: -11.521536827087402

Token 6: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5394066572189331
    2. '(' → logprob: -1.789406657218933
    3. '   ' → logprob: -2.1644067764282227
    4. '```' → logprob: -2.6644067764282227
    5. '():' → logprob: -3.2894067764282227
    6. '(:' → logprob: -5.164406776428223
    7. ' :' → logprob: -5.789406776428223
    8. '(
' → logprob: -5.789406776428223
    9. ''''' → logprob: -6.164406776428223
    10. '":' → logprob: -6.289406776428223

Token 7: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.743715226650238
    2. '```' → logprob: -0.868715226650238
    3. ''' → logprob: -3.743715286254883
    4. '`' → logprob: -3.993715286254883
    5. ' ' → logprob: -4.243715286254883
    6. ''''' → logprob: -4.368715286254883
    7. ' if' → logprob: -5.118715286254883
    8. '    ' → logprob: -5.118715286254883
    9. '"' → logprob: -5.243715286254883
    10. '"""' → logprob: -5.368715286254883

Token 8: ' num' (ID: 2269)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5751755833625793
    2. ' num' → logprob: -1.3251755237579346
    3. ' not' → logprob: -1.8251755237579346
    4. 'num' → logprob: -5.575175762176514
    5. ' ' → logprob: -6.075175762176514
    6. ' isinstance' → logprob: -6.200175762176514
    7. '  ' → logprob: -7.450175762176514
    8. 'not' → logprob: -7.700175762176514
    9. ' (' → logprob: -7.825175762176514
    10. '(num' → logprob: -8.450175285339355

Token 9: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.6932988166809082
    2. ' ==' → logprob: -1.0682988166809082
    3. ' >' → logprob: -2.818298816680908
    4. ' >=' → logprob: -3.318298816680908
    5. ' ' → logprob: -4.693298816680908
    6. ' %' → logprob: -4.818298816680908
    7. '<' → logprob: -4.818298816680908
    8. '  ' → logprob: -5.068298816680908
    9. ' <=' → logprob: -5.068298816680908
    10. '==' → logprob: -5.068298816680908

Token 10: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2811754643917084
    2. '0' → logprob: -1.4061754941940308
    3. 'space' → logprob: -11.28117561340332
    4. '1' → logprob: -12.78117561340332
    5. ' ' → logprob: -12.90617561340332
    6. '32' → logprob: -12.90617561340332
    7. '=' → logprob: -13.90617561340332
    8. '"' → logprob: -14.28117561340332
    9. '  ' → logprob: -14.53117561340332
    10. ''' → logprob: -14.65617561340332

Token 11: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004137053620070219
    2. ' ' → logprob: -5.50413703918457
    3. '1' → logprob: -9.75413703918457
    4. '=' → logprob: -15.87913703918457
    5. '>' → logprob: -16.75413703918457
    6. '```' → logprob: -16.75413703918457
    7. '32' → logprob: -16.87913703918457
    8. '  ' → logprob: -16.87913703918457
    9. '2' → logprob: -17.37913703918457
    10. '`' → logprob: -17.37913703918457

Token 12: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01658030040562153
    2. ' :' → logprob: -4.141580104827881
    3. ':return' → logprob: -8.641580581665039
    4. '):' → logprob: -9.266580581665039
    5. ':
' → logprob: -9.766580581665039
    6. '   ' → logprob: -10.141580581665039
    7. '       ' → logprob: -10.391580581665039
    8. ',' → logprob: -10.641580581665039
    9. '    ' → logprob: -10.891580581665039
    10. '>:' → logprob: -11.016580581665039

Token 13: '       ' (ID: 309)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.09974531829357147
    2. ' ' → logprob: -2.849745273590088
    3. '-' → logprob: -4.724745273590088
    4. '   ' → logprob: -4.849745273590088
    5. '       ' → logprob: -4.974745273590088
    6. '```' → logprob: -5.849745273590088
    7. '     
' → logprob: -5.974745273590088
    8. '`' → logprob: -6.224745273590088
    9. '        ' → logprob: -7.099745273590088
    10. ''' → logprob: -7.224745273590088

Token 14: ' return' (ID: 622)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.4283180832862854
    2. '        ' → logprob: -2.3033180236816406
    3. ' return' → logprob: -2.6783180236816406
    4. '       ' → logprob: -2.9283180236816406
    5. '-' → logprob: -3.3033180236816406
    6. ' ' → logprob: -3.4283180236816406
    7. ' num' → logprob: -3.8033180236816406
    8. '   ' → logprob: -4.178318023681641
    9. ' n' → logprob: -5.553318023681641
    10. ''' → logprob: -6.303318023681641

Token 15: ' None' (ID: 4662)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.37040606141090393
    2. '"' → logprob: -1.3704060316085815
    3. ' '' → logprob: -3.495406150817871
    4. ' ' → logprob: -4.995406150817871
    5. ' "' → logprob: -5.495406150817871
    6. '-' → logprob: -5.745406150817871
    7. ''-' → logprob: -5.870406150817871
    8. '`' → logprob: -6.245406150817871
    9. ''s' → logprob: -6.370406150817871
    10. ' -' → logprob: -6.370406150817871

Token 16: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6872479319572449
    2. '
' → logprob: -1.3122479915618896
    3. '\n' → logprob: -1.9372479915618896
    4. '    
' → logprob: -3.4372479915618896
    5. '```' → logprob: -4.3122477531433105
    6. '\' → logprob: -4.9372477531433105
    7. '_' → logprob: -5.1872477531433105
    8. ')' → logprob: -5.4372477531433105
    9. '   
' → logprob: -5.9372477531433105
    10. '  
' → logprob: -5.9372477531433105

Token 17: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0594562366604805
    2. ':' → logprob: -3.8094563484191895
    3. '       ' → logprob: -4.6844563484191895
    4. '
' → logprob: -5.0594563484191895
    5. '```' → logprob: -5.6844563484191895
    6. '\n' → logprob: -5.9344563484191895
    7. '    
' → logprob: -6.0594563484191895
    8. '    ' → logprob: -6.1844563484191895
    9. '  ' → logprob: -6.5594563484191895
    10. 'return' → logprob: -6.9344563484191895

Token 18: ' integer' (ID: 16336)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2772793173789978
    2. ':' → logprob: -1.6522793769836426
    3. '       ' → logprob: -3.7772793769836426
    4. ' ' → logprob: -5.152279376983643
    5. '    ' → logprob: -5.152279376983643
    6. '```' → logprob: -5.777279376983643
    7. ')' → logprob: -5.902279376983643
    8. ' :' → logprob: -6.277279376983643
    9. ',' → logprob: -6.652279376983643
    10. '  ' → logprob: -6.902279376983643

Token 19: '_part' (ID: 24053)
  Prédit: '_part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_part' → logprob: -0.643158495426178
    2. '_' → logprob: -0.768158495426178
    3. '_parts' → logprob: -5.268158435821533
    4. '_value' → logprob: -6.893158435821533
    5. '_bits' → logprob: -7.393158435821533
    6. '_val' → logprob: -7.393158435821533
    7. ',' → logprob: -7.768158435821533
    8. 'part' → logprob: -8.018158912658691
    9. ' =' → logprob: -8.143158912658691
    10. ')' → logprob: -8.268158912658691

Token 20: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02556721679866314
    2. '=' → logprob: -4.275567054748535
    3. ',' → logprob: -4.775567054748535
    4. '_' → logprob: -6.650567054748535
    5. ')' → logprob: -7.650567054748535
    6. ' <<=' → logprob: -8.525567054748535
    7. '   ' → logprob: -8.650567054748535
    8. ' ,' → logprob: -8.775567054748535
    9. ' ' → logprob: -8.900567054748535
    10. '_space' → logprob: -9.275567054748535

Token 21: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.022041013464331627
    2. 'int' → logprob: -4.022040843963623
    3. ' bin' → logprob: -5.772040843963623
    4. ' num' → logprob: -8.272041320800781
    5. 'bin' → logprob: -8.272041320800781
    6. ' ' → logprob: -9.647041320800781
    7. ' str' → logprob: -9.647041320800781
    8. ' float' → logprob: -10.772041320800781
    9. '   ' → logprob: -10.897041320800781
    10. 'num' → logprob: -11.022041320800781

Token 22: '(num' (ID: 15828)
  Prédit: '(num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -0.00979681871831417
    2. '(' → logprob: -4.634796619415283
    3. 'num' → logprob: -10.634797096252441
    4. ' (' → logprob: -11.509797096252441
    5. ' num' → logprob: -13.134797096252441
    6. '(abs' → logprob: -13.509797096252441
    7. '(float' → logprob: -13.509797096252441
    8. '   ' → logprob: -14.884797096252441
    9. ' ' → logprob: -15.009797096252441
    10. '((' → logprob: -15.134797096252441

Token 23: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001242772996192798
    2. '.' → logprob: -9.875123977661133
    3. ' )' → logprob: -10.500123977661133
    4. ')
' → logprob: -11.375123977661133
    5. ').' → logprob: -11.500123977661133
    6. '))' → logprob: -12.000123977661133
    7. '.bit' → logprob: -12.500123977661133
    8. '.)' → logprob: -12.750123977661133
    9. '```' → logprob: -13.625123977661133
    10. '//' → logprob: -13.625123977661133

Token 24: '   ' (ID: 271)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.1713477522134781
    2. '   ' → logprob: -2.0463478565216064
    3. ')' → logprob: -4.546347618103027
    4. '```' → logprob: -4.921347618103027
    5. 'return' → logprob: -6.796347618103027
    6. ',' → logprob: -6.796347618103027
    7. '`' → logprob: -6.921347618103027
    8. ' ' → logprob: -7.171347618103027
    9. '    ' → logprob: -7.296347618103027
    10. '_' → logprob: -7.296347618103027

Token 25: ' fractional' (ID: 136350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.399723768234253
    2. ' fractional' → logprob: -1.524723768234253
    3. ' ' → logprob: -2.149723768234253
    4. 'fraction' → logprob: -2.524723768234253
    5. '```' → logprob: -2.524723768234253
    6. '.' → logprob: -2.649723768234253
    7. ' fraction' → logprob: -3.399723768234253
    8. ' return' → logprob: -3.774723768234253
    9. ' num' → logprob: -4.274724006652832
    10. 'decimal' → logprob: -4.399724006652832

Token 26: '_part' (ID: 24053)
  Prédit: '_part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_part' → logprob: -7.707997428951785e-05
    2. '_' → logprob: -10.375077247619629
    3. '_parts' → logprob: -10.375077247619629
    4. '_piece' → logprob: -12.250077247619629
    5. ' _' → logprob: -13.125077247619629
    6. '_bit' → logprob: -13.500077247619629
    7. '_bits' → logprob: -13.750077247619629
    8. '_value' → logprob: -13.875077247619629
    9. '_str' → logprob: -14.000077247619629
    10. '_p' → logprob: -15.500077247619629

Token 27: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00193636619951576
    2. '=' → logprob: -6.251936435699463
    3. '_' → logprob: -12.626935958862305
    4. ' ' → logprob: -12.751935958862305
    5. ')' → logprob: -15.001935958862305
    6. ' ' → logprob: -15.376935958862305
    7. ' ==' → logprob: -15.626935958862305
    8. 's' → logprob: -15.876935958862305
    9. ' =
' → logprob: -16.001935958862305
    10. ' =)' → logprob: -16.001935958862305

Token 28: ' num' (ID: 2269)
  Prédit: ' num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.020588835701346397
    2. 'num' → logprob: -3.8955888748168945
    3. '(num' → logprob: -10.895588874816895
    4. ' float' → logprob: -11.020588874816895
    5. ' ' → logprob: -12.020588874816895
    6. '	num' → logprob: -13.270588874816895
    7. ' (' → logprob: -13.895588874816895
    8. '   ' → logprob: -14.395588874816895
    9. '=num' → logprob: -14.395588874816895
    10. 'float' → logprob: -14.645588874816895

Token 29: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5235439538955688
    2. '-' → logprob: -0.8985439538955688
    3. '-int' → logprob: -7.898543834686279
    4. '-num' → logprob: -10.648544311523438
    5. '-f' → logprob: -11.648544311523438
    6. '-in' → logprob: -13.273544311523438
    7. '%' → logprob: -13.523544311523438
    8. '   ' → logprob: -13.648544311523438
    9. ' ' → logprob: -13.648544311523438
    10. '-m' → logprob: -14.148544311523438

Token 30: ' integer' (ID: 16336)
  Prédit: ' integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' integer' → logprob: -0.693219006061554
    2. 'integer' → logprob: -0.693219006061554
    3. ' ' → logprob: -10.568219184875488
    4. '   ' → logprob: -11.193219184875488
    5. 'int' → logprob: -11.318219184875488
    6. '  ' → logprob: -11.568219184875488
    7. ' ' → logprob: -12.693219184875488
    8. 'float' → logprob: -13.193219184875488
    9. '(integer' → logprob: -13.443219184875488
    10. ' float' → logprob: -13.693219184875488

Token 31: '_part' (ID: 24053)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.04301813989877701
    2. 'g' → logprob: -3.793018102645874
    3. 't' → logprob: -5.043018341064453
    4. '_t' → logprob: -5.418018341064453
    5. '_p' → logprob: -6.168018341064453
    6. 'a' → logprob: -6.168018341064453
    7. '.' → logprob: -6.793018341064453
    8. '_a' → logprob: -6.793018341064453
    9. '_part' → logprob: -7.543018341064453
    10. '._' → logprob: -7.918018341064453

Token 32: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1384926289319992
    2. '```' → logprob: -3.2634925842285156
    3. ' ' → logprob: -4.013492584228516
    4. '\' → logprob: -4.263492584228516
    5. '    
' → logprob: -4.388492584228516
    6. '\n' → logprob: -4.513492584228516
    7. '
' → logprob: -5.263492584228516
    8. '    ' → logprob: -5.388492584228516
    9. '`' → logprob: -5.513492584228516
    10. ':' → logprob: -5.888492584228516

Token 33: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.368285596370697
    2. ':' → logprob: -1.4932856559753418
    3. ' ' → logprob: -3.493285655975342
    4. '```' → logprob: -4.118285655975342
    5. '
' → logprob: -4.868285655975342
    6. 'n' → logprob: -5.243285655975342
    7. '    
' → logprob: -5.368285655975342
    8. '\n' → logprob: -5.868285655975342
    9. '\' → logprob: -6.243285655975342
    10. '    ' → logprob: -6.368285655975342

Token 34: ' int' (ID: 677)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08059954643249512
    2. ' ' → logprob: -3.080599546432495
    3. '    ' → logprob: -5.205599784851074
    4. 'b' → logprob: -5.205599784851074
    5. 'result' → logprob: -5.955599784851074
    6. '```' → logprob: -5.955599784851074
    7. 'bin' → logprob: -6.080599784851074
    8. ' bin' → logprob: -6.080599784851074
    9. 'binary' → logprob: -6.205599784851074
    10. '  ' → logprob: -6.580599784851074

Token 35: '_bin' (ID: 53631)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2900148332118988
    2. 'e' → logprob: -1.9150148630142212
    3. 'eger' → logprob: -2.2900147438049316
    4. 'eg' → logprob: -6.540014743804932
    5. '_e' → logprob: -7.665014743804932
    6. ' _' → logprob: -7.665014743804932
    7. '_part' → logprob: -8.41501522064209
    8. '_b' → logprob: -8.91501522064209
    9. '_bits' → logprob: -9.91501522064209
    10. 'i' → logprob: -10.04001522064209

Token 36: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.27951690554618835
    2. '=' → logprob: -1.5295169353485107
    3. 'ar' → logprob: -4.154516696929932
    4. '```' → logprob: -5.529516696929932
    5. 's' → logprob: -5.654516696929932
    6. ' =' → logprob: -6.154516696929932
    7. 'a' → logprob: -7.279516696929932
    8. 'aray' → logprob: -8.27951717376709
    9. '`' → logprob: -8.77951717376709
    10. 'o' → logprob: -8.77951717376709

Token 37: ' bin' (ID: 6958)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.4292929172515869
    2. ' bin' → logprob: -1.054292917251587
    3. ' format' → logprob: -8.304292678833008
    4. 'format' → logprob: -8.804292678833008
    5. '''' → logprob: -9.054292678833008
    6. ''' → logprob: -11.179292678833008
    7. '""' → logprob: -11.554292678833008
    8. ' ' → logprob: -11.679292678833008
    9. '(bin' → logprob: -11.679292678833008
    10. '```' → logprob: -11.679292678833008

Token 38: '(integer' (ID: 191023)
  Prédit: '(integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(integer' → logprob: -0.31348782777786255
    2. '(' → logprob: -1.3134877681732178
    3. 'integer' → logprob: -8.688488006591797
    4. '(int' → logprob: -10.438488006591797
    5. '(Integer' → logprob: -12.063488006591797
    6. '(in' → logprob: -12.188488006591797
    7. '(

' → logprob: -12.688488006591797
    8. '(
' → logprob: -12.938488006591797
    9. ' (' → logprob: -12.938488006591797
    10. '(i' → logprob: -13.188488006591797

Token 39: '_part' (ID: 24053)
  Prédit: '_part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_part' → logprob: -0.00032831361750140786
    2. '_par' → logprob: -8.125328063964844
    3. '_' → logprob: -11.000328063964844
    4. '_p' → logprob: -12.750328063964844
    5. '_pat' → logprob: -12.875328063964844
    6. 'er' → logprob: -13.000328063964844
    7. 'part' → logprob: -13.500328063964844
    8. '_pa' → logprob: -13.625328063964844
    9. '_parts' → logprob: -14.000328063964844
    10. 'e' → logprob: -14.500328063964844

Token 40: ')[' (ID: 13637)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8226550221443176
    2. '[' → logprob: -1.4476549625396729
    3. '()' → logprob: -1.5726549625396729
    4. '()[' → logprob: -2.697654962539673
    5. ')' → logprob: -3.822654962539673
    6. ')[' → logprob: -3.947654962539673
    7. '('' → logprob: -5.447655200958252
    8. '())[' → logprob: -5.572655200958252
    9. '([' → logprob: -8.072654724121094
    10. '('.')[' → logprob: -8.697654724121094

Token 41: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -13.62500286102295
    3. '3' → logprob: -14.87500286102295
    4. '```' → logprob: -15.37500286102295
    5. '

' → logprob: -15.50000286102295
    6. '﻿' → logprob: -16.000003814697266
    7. '>' → logprob: -16.125003814697266
    8. ':' → logprob: -16.125003814697266
    9. '２' → logprob: -16.375003814697266
    10. '۲' → logprob: -16.500003814697266

Token 42: ':]
' (ID: 61598)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00010151672904612496
    2. ':]' → logprob: -9.250101089477539
    3. ' ]' → logprob: -12.625101089477539
    4. ':' → logprob: -14.125101089477539
    5. '']' → logprob: -14.625101089477539
    6. ']()' → logprob: -15.500101089477539
    7. ']
' → logprob: -16.37510108947754
    8. '](' → logprob: -16.62510108947754
    9. ']>' → logprob: -17.00010108947754
    10. ')]' → logprob: -17.00010108947754

Token 43: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9510878324508667
    2. '.' → logprob: -1.5760878324508667
    3. '   ' → logprob: -2.3260879516601562
    4. '<|end|>' → logprob: -2.8260879516601562
    5. '    ' → logprob: -2.9510879516601562
    6. '    
' → logprob: -3.0760879516601562
    7. '  ' → logprob: -3.7010879516601562
    8. ' 
' → logprob: -4.201087951660156
    9. '```' → logprob: -4.451087951660156
    10. '\' → logprob: -4.451087951660156

Token 44: ' if' (ID: 538)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0006756199873052537
    2. ''.' → logprob: -8.000675201416016
    3. '   ' → logprob: -9.500675201416016
    4. 'result' → logprob: -9.875675201416016
    5. ''' → logprob: -10.250675201416016
    6. ' ' → logprob: -10.500675201416016
    7. 'fraction' → logprob: -10.625675201416016
    8. ',' → logprob: -11.000675201416016
    9. '_' → logprob: -11.250675201416016
    10. 'if' (adapté à ' if') → logprob: -11.500675201416016

Token 45: ' len' (ID: 4631)
  Prédit: ' fractional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fractional' → logprob: -0.0009299254161305726
    2. 'fraction' → logprob: -7.125929832458496
    3. ' fraction' → logprob: -10.000929832458496
    4. ' ' → logprob: -10.375929832458496
    5. ' not' → logprob: -11.000929832458496
    6. ' ' → logprob: -11.375929832458496
    7. ' len' → logprob: -12.000929832458496
    8. ' '' → logprob: -12.250929832458496
    9. ' factorial' → logprob: -13.375929832458496
    10. ' num' → logprob: -13.500929832458496

Token 46: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3279566168785095
    2. '(int' → logprob: -1.3279566764831543
    3. '(f' → logprob: -4.327956676483154
    4. '(integer' → logprob: -6.827956676483154
    5. '(float' → logprob: -8.952956199645996
    6. '('' → logprob: -9.952956199645996
    7. ' (' → logprob: -10.327956199645996
    8. '(in' → logprob: -10.827956199645996
    9. 'int' → logprob: -10.952956199645996
    10. '(s' → logprob: -11.577956199645996

Token 47: '_bin' (ID: 53631)
  Prédit: '_bin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bin' → logprob: -0.00015812745550647378
    2. '_' → logprob: -9.000158309936523
    3. '_b' → logprob: -10.375158309936523
    4. '_bins' → logprob: -14.000158309936523
    5. '_bit' → logprob: -14.750158309936523
    6. '(bin' → logprob: -14.875158309936523
    7. '(' → logprob: -15.000158309936523
    8. '_part' → logprob: -15.250158309936523
    9. '(_' → logprob: -15.375158309936523
    10. ')_' → logprob: -15.500158309936523

Token 48: ')' (ID: 8)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.258682519197464
    2. ' ==' → logprob: -2.5086824893951416
    3. ')' → logprob: -2.7586824893951416
    4. ' ' → logprob: -3.7586824893951416
    5. '<' → logprob: -4.008682727813721
    6. ' )' → logprob: -4.133682727813721
    7. ' >' → logprob: -4.508682727813721
    8. '==' → logprob: -4.883682727813721
    9. ' <=' → logprob: -6.008682727813721
    10. '>' → logprob: -6.758682727813721

Token 49: ' >' (ID: 1424)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5254318714141846
    2. ' <' → logprob: -1.0254318714141846
    3. '==' → logprob: -4.1504316329956055
    4. '<' → logprob: -4.2754316329956055
    5. ' >' → logprob: -4.5254316329956055
    6. ' ' → logprob: -5.0254316329956055
    7. '>' → logprob: -6.7754316329956055
    8. ' >=' → logprob: -7.6504316329956055
    9. ' <=' → logprob: -8.150431632995605
    10. '=' → logprob: -8.275431632995605

Token 50: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6028521060943604
    2. ' ' → logprob: -1.4778521060943604
    3. '1' → logprob: -1.6028521060943604
    4. '32' → logprob: -4.477851867675781
    5. '8' → logprob: -5.352851867675781
    6. '16' → logprob: -5.727851867675781
    7. '31' → logprob: -7.352851867675781
    8. '>' → logprob: -7.477851867675781
    9. '7' → logprob: -7.477851867675781
    10. '23' → logprob: -8.227851867675781

Token 51: '8' (ID: 23)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5649054050445557
    2. '23' → logprob: -2.0649054050445557
    3. '32' → logprob: -2.3149054050445557
    4. '1' → logprob: -2.6899054050445557
    5. '8' → logprob: -2.9399054050445557
    6. '53' → logprob: -2.9399054050445557
    7. '52' → logprob: -4.439905166625977
    8. '16' → logprob: -4.814905166625977
    9. '10' → logprob: -5.939905166625977
    10. '31' → logprob: -6.189905166625977

Token 52: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010459087789058685
    2. ' :' → logprob: -7.2510457038879395
    3. '):' → logprob: -8.876046180725098
    4. ':return' → logprob: -9.376046180725098
    5. ' or' → logprob: -10.126046180725098
    6. '<|end|>' → logprob: -10.876046180725098
    7. ')' → logprob: -11.126046180725098
    8. '.' → logprob: -11.876046180725098
    9. ' and' → logprob: -12.251046180725098
    10. ' ' → logprob: -12.251046180725098

Token 53: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.060677893459796906
    2. '       ' → logprob: -3.310678005218506
    3. ' :' → logprob: -4.685678005218506
    4. ' ' → logprob: -5.185678005218506
    5. '   ' → logprob: -6.435678005218506
    6. '    ' → logprob: -6.685678005218506
    7. ':return' → logprob: -6.685678005218506
    8. '.' → logprob: -6.810678005218506
    9. '<|end|>' → logprob: -7.310678005218506
    10. '_' → logprob: -8.310677528381348

Token 54: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.29294633865356445
    2. 'return' (adapté à ' return') → logprob: -1.5429463386535645
    3. '       ' → logprob: -3.2929463386535645
    4. '   ' → logprob: -6.4179463386535645
    5. '    ' → logprob: -7.6679463386535645
    6. '```' → logprob: -8.292945861816406
    7. ' ' → logprob: -8.792945861816406
    8. 'r' → logprob: -9.417945861816406
    9. ' raise' → logprob: -9.417945861816406
    10. ' ' → logprob: -9.667945861816406

Token 55: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.16069665551185608
    2. 'None' → logprob: -1.9106966257095337
    3. '"' → logprob: -8.785696983337402
    4. ''' → logprob: -9.160696983337402
    5. ' ' → logprob: -9.910696983337402
    6. ' ' → logprob: -10.160696983337402
    7. '   ' → logprob: -10.785696983337402
    8. ' '' → logprob: -10.910696983337402
    9. ' False' → logprob: -10.910696983337402
    10. 'False' → logprob: -11.035696983337402

Token 56: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5107181668281555
    2. '   ' → logprob: -1.5107181072235107
    3. '\' → logprob: -2.6357181072235107
    4. '    
' → logprob: -3.1357181072235107
    5. '_' → logprob: -3.8857181072235107
    6. '\r' → logprob: -4.13571834564209
    7. '```' → logprob: -5.63571834564209
    8. '  
' → logprob: -5.63571834564209
    9. ' ' → logprob: -6.26071834564209
    10. ' 
' → logprob: -6.26071834564209

Token 57: '   ' (ID: 271)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2277098000049591
    2. '\n' → logprob: -2.8527097702026367
    3. '<|end|>' → logprob: -3.1027097702026367
    4. '\' → logprob: -3.4777097702026367
    5. '   ' → logprob: -3.7277097702026367
    6. '    
' → logprob: -4.352709770202637
    7. '
' → logprob: -4.852709770202637
    8. '```' → logprob: -5.852709770202637
    9. '0' → logprob: -5.977709770202637
    10. 'e' → logprob: -6.227709770202637

Token 58: ' int' (ID: 677)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8976354002952576
    2. '   ' → logprob: -1.3976354598999023
    3. '.' → logprob: -2.0226354598999023
    4. '\' → logprob: -2.5226354598999023
    5. '```' → logprob: -3.7726354598999023
    6. '    
' → logprob: -4.022635459899902
    7. '\n' → logprob: -4.022635459899902
    8. ''' → logprob: -4.647635459899902
    9. ' ' → logprob: -4.772635459899902
    10. '0' → logprob: -5.397635459899902

Token 59: '_bin' (ID: 53631)
  Prédit: '_bin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bin' → logprob: -0.05968175828456879
    2. '_' → logprob: -2.9346816539764404
    3. '_part' → logprob: -5.4346818923950195
    4. '_b' → logprob: -8.93468189239502
    5. '_bit' → logprob: -9.05968189239502
    6. '_binary' → logprob: -10.18468189239502
    7. '_bits' → logprob: -10.30968189239502
    8. '_parts' → logprob: -10.68468189239502
    9. 's' → logprob: -10.93468189239502
    10. '_bins' → logprob: -11.05968189239502

Token 60: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.015698809176683426
    2. ' +' → logprob: -4.6406989097595215
    3. '<|end|>' → logprob: -5.2656989097595215
    4. '=' → logprob: -8.265698432922363
    5. ' ' → logprob: -8.640698432922363
    6. ',' → logprob: -9.515698432922363
    7. '+='' → logprob: -10.015698432922363
    8. ' +=' → logprob: -10.140698432922363
    9. '.' → logprob: -10.765698432922363
    10. '+=' → logprob: -10.890698432922363

Token 61: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.03899560868740082
    2. ''' → logprob: -3.4139955043792725
    3. ' int' → logprob: -5.413995742797852
    4. ''int' → logprob: -7.163995742797852
    5. ' '' → logprob: -9.413995742797852
    6. '"' → logprob: -11.413995742797852
    7. '(int' → logprob: -12.288995742797852
    8. ' ' → logprob: -12.788995742797852
    9. '('' → logprob: -12.913995742797852
    10. ''s' → logprob: -14.288995742797852

Token 62: '_bin' (ID: 53631)
  Prédit: '_bin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bin' → logprob: -3.762356209335849e-05
    2. 'er' → logprob: -10.50003719329834
    3. 'bin' → logprob: -13.50003719329834
    4. '_' → logprob: -13.62503719329834
    5. '```' → logprob: -13.62503719329834
    6. 'ent' → logprob: -13.87503719329834
    7. 'e' → logprob: -13.87503719329834
    8. '(bin' → logprob: -14.62503719329834
    9. '_bit' → logprob: -14.75003719329834
    10. '_binary' → logprob: -14.87503719329834

Token 63: '.z' (ID: 9161)
  Prédit: '.z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.z' → logprob: -0.0008651299867779016
    2. '.' → logprob: -7.7508649826049805
    3. '.r' → logprob: -7.7508649826049805
    4. 'z' → logprob: -12.87586498260498
    5. 'r' → logprob: -13.62586498260498
    6. ' .' → logprob: -16.250865936279297
    7. ' z' → logprob: -16.875865936279297
    8. '[::-' → logprob: -18.125865936279297
    9. ').' → logprob: -19.125865936279297
    10. '.zz' → logprob: -19.375865936279297

Token 64: 'fill' (ID: 12413)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.12709756195545197
    2. 'fill' → logprob: -2.1270976066589355
    3. 'l' → logprob: -9.252097129821777
    4. '`' → logprob: -10.877097129821777
    5. ''' → logprob: -11.002097129821777
    6. 'z' → logprob: -11.252097129821777
    7. ''f' → logprob: -11.252097129821777
    8. 'p' → logprob: -13.002097129821777
    9. '0' → logprob: -13.002097129821777
    10. 'filled' → logprob: -14.127097129821777

Token 65: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: 0.0
    2. '(
' → logprob: -17.625
    3. ' (' → logprob: -19.375
    4. '((' → logprob: -19.875
    5. '(

' → logprob: -20.0
    6. '8' → logprob: -20.375
    7. '()' → logprob: -20.875
    8. '('' → logprob: -20.875
    9. '```' → logprob: -22.375
    10. '<|end|>' → logprob: -22.875

Token 66: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.000000953674316
    3. '۸' → logprob: -17.500001907348633
    4. '८' → logprob: -18.000001907348633
    5. '８' → logprob: -18.125001907348633
    6. '٨' → logprob: -18.125001907348633
    7. '৮' → logprob: -18.187501907348633
    8. '```' → logprob: -18.875001907348633
    9. '9' → logprob: -19.375001907348633
    10. 'eight' → logprob: -19.562501907348633

Token 67: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1472419600977446e-06
    2. ' )' → logprob: -14.750000953674316
    3. ')
' → logprob: -15.000000953674316
    4. '()' → logprob: -15.875000953674316
    5. '))' → logprob: -16.375001907348633
    6. ')`' → logprob: -17.125001907348633
    7. '')' → logprob: -17.250001907348633
    8. '())' → logprob: -17.250001907348633
    9. ')

' → logprob: -18.125001907348633
    10. '),' → logprob: -18.125001907348633

Token 68: '   ' (ID: 271)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.09011552482843399
    2. '   ' → logprob: -3.090115547180176
    3. '_' → logprob: -3.965115547180176
    4. ' ' → logprob: -4.715115547180176
    5. ',' → logprob: -6.465115547180176
    6. '    ' → logprob: -6.715115547180176
    7. ' fractional' → logprob: -6.840115547180176
    8. 'f' → logprob: -7.090115547180176
    9. '```' → logprob: -7.090115547180176
    10. 'fraction' → logprob: -7.215115547180176

Token 69: ' frac' (ID: 72308)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.08992259204387665
    2. '_' → logprob: -2.5899226665496826
    3. 'f' → logprob: -5.0899224281311035
    4. 'fraction' → logprob: -6.8399224281311035
    5. 'b' → logprob: -7.2149224281311035
    6. ''' → logprob: -7.7149224281311035
    7. 'i' → logprob: -8.089922904968262
    8. ',' → logprob: -8.339922904968262
    9. '   ' → logprob: -8.339922904968262
    10. 'r' → logprob: -8.339922904968262

Token 70: '_bin' (ID: 53631)
  Prédit: '_bin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bin' → logprob: -0.01469917967915535
    2. '_' → logprob: -5.1396989822387695
    3. 'tion' → logprob: -5.1396989822387695
    4. 'itional' → logprob: -6.5146989822387695
    5. '_part' → logprob: -7.6396989822387695
    6. 't' → logprob: -8.01469898223877
    7. '_bits' → logprob: -9.26469898223877
    8. '_str' → logprob: -9.51469898223877
    9. '_binary' → logprob: -9.51469898223877
    10. '_t' → logprob: -9.76469898223877

Token 71: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.033680740743875504
    2. '=' → logprob: -3.4086806774139404
    3. '_' → logprob: -11.03368091583252
    4. ' +=' → logprob: -11.53368091583252
    5. 's' → logprob: -12.90868091583252
    6. ',' → logprob: -13.40868091583252
    7. '=""' → logprob: -13.90868091583252
    8. ' ' → logprob: -14.15868091583252
    9. ' =
' → logprob: -14.53368091583252
    10. '=''' → logprob: -14.53368091583252

Token 72: ' []
' (ID: 8911)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -0.4748856723308563
    2. '""' → logprob: -0.9748857021331787
    3. '"' → logprob: -7.9748854637146
    4. ' ''' → logprob: -8.099885940551758
    5. ' ""' → logprob: -8.849885940551758
    6. ''' → logprob: -11.224885940551758
    7. '[]' → logprob: -12.974885940551758
    8. '''''' → logprob: -14.349885940551758
    9. '''
' → logprob: -14.724885940551758
    10. ''s' → logprob: -15.599885940551758

Token 73: '   ' (ID: 271)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8121092319488525
    2. ' ' → logprob: -1.1871092319488525
    3. 'for' → logprob: -2.1871092319488525
    4. ' for' → logprob: -3.0621092319488525
    5. 'i' → logprob: -3.5621092319488525
    6. 'f' → logprob: -4.312108993530273
    7. '1' → logprob: -4.812108993530273
    8. ' while' → logprob: -5.187108993530273
    9. ',' → logprob: -5.312108993530273
    10. 'while' → logprob: -5.437108993530273

Token 74: ' frac' (ID: 72308)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7674152851104736
    2. ' ' → logprob: -1.1424152851104736
    3. ' for' → logprob: -1.7674152851104736
    4. 'f' → logprob: -4.5174150466918945
    5. '    ' → logprob: -4.7674150466918945
    6. '.' → logprob: -4.7674150466918945
    7. 'w' → logprob: -5.5174150466918945
    8. 'i' → logprob: -5.6424150466918945
    9. ' while' → logprob: -6.0174150466918945
    10. 'while' → logprob: -6.1424150466918945

Token 75: ' =' (ID: 314)
  Prédit: '_part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_part' → logprob: -0.39224138855934143
    2. '_' → logprob: -1.142241358757019
    3. 'part' → logprob: -7.017241477966309
    4. ' =' → logprob: -7.267241477966309
    5. '=' → logprob: -7.392241477966309
    6. 'tion' → logprob: -7.767241477966309
    7. 'al' → logprob: -8.017241477966309
    8. ' _' → logprob: -8.017241477966309
    9. '_parts' → logprob: -8.142241477966309
    10. 'ation' → logprob: -8.392241477966309

Token 76: ' fractional' (ID: 136350)
  Prédit: 'fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fraction' → logprob: -0.2519649565219879
    2. ' fractional' → logprob: -1.5019649267196655
    3. ' fraction' → logprob: -10.626964569091797
    4. 'f' → logprob: -12.001964569091797
    5. 'fra' → logprob: -13.001964569091797
    6. 'frac' → logprob: -14.251964569091797
    7. '_fraction' → logprob: -14.251964569091797
    8. '0' → logprob: -14.376964569091797
    9. 'Fraction' → logprob: -15.251964569091797
    10. ' ' → logprob: -15.626964569091797

Token 77: '_part' (ID: 24053)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10075068473815918
    2. '_part' → logprob: -2.350750684738159
    3. '_p' → logprob: -8.725750923156738
    4. ' _' → logprob: -9.225750923156738
    5. 'al' → logprob: -9.475750923156738
    6. 'a' → logprob: -9.475750923156738
    7. '_parts' → logprob: -10.475750923156738
    8. '_a' → logprob: -10.850750923156738
    9. 'ary' → logprob: -11.225750923156738
    10. ' ' → logprob: -11.850750923156738

Token 78: '
' (ID: 198)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.9927332997322083
    2. ' *' → logprob: -0.9927332997322083
    3. ' ' → logprob: -1.6177332401275635
    4. '.' → logprob: -3.3677332401275635
    5. '<|end|>' → logprob: -4.992733478546143
    6. ',' → logprob: -5.492733478546143
    7. ')' → logprob: -5.492733478546143
    8. '=' → logprob: -6.117733478546143
    9. '   ' → logprob: -6.742733478546143
    10. '0' → logprob: -7.117733478546143

Token 79: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0421721935272217
    2. '   ' → logprob: -1.1671721935272217
    3. ' for' → logprob: -1.2921721935272217
    4. '.' → logprob: -3.9171721935272217
    5. '    ' → logprob: -4.417172431945801
    6. 'for' → logprob: -4.667172431945801
    7. ':' → logprob: -5.292172431945801
    8. ' while' → logprob: -5.667172431945801
    9. '  ' → logprob: -5.917172431945801
    10. '    
' → logprob: -6.542172431945801

Token 80: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.23584292829036713
    2. ' ' → logprob: -2.3608429431915283
    3. '   ' → logprob: -2.7358429431915283
    4. 'for' (adapté à ' for') → logprob: -3.4858429431915283
    5. ' while' → logprob: -4.235842704772949
    6. '    ' → logprob: -5.360842704772949
    7. 'while' → logprob: -8.11084270477295
    8. ' 
' → logprob: -8.36084270477295
    9. '  ' → logprob: -8.61084270477295
    10. '	for' → logprob: -9.23584270477295

Token 81: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.027448145672678947
    2. ' i' → logprob: -4.0274481773376465
    3. ' ' → logprob: -4.7774481773376465
    4. '_' → logprob: -7.1524481773376465
    5. ' ‌' → logprob: -11.152447700500488
    6. ' ```' → logprob: -11.402447700500488
    7. ' in' → logprob: -11.652447700500488
    8. ' range' → logprob: -11.777447700500488
    9. 'i' → logprob: -12.652447700500488
    10. ' ▁' → logprob: -12.652447700500488

Token 82: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0009287334396503866
    2. 'in' → logprob: -7.00092887878418
    3. ' ' → logprob: -11.25092887878418
    4. '<|end|>' → logprob: -12.62592887878418
    5. 'range' → logprob: -15.12592887878418
    6. '	in' → logprob: -15.50092887878418
    7. '  ' → logprob: -16.62592887878418
    8. '<|end|>' → logprob: -16.87592887878418
    9. ' range' → logprob: -17.00092887878418
    10. '```' → logprob: -17.12592887878418

Token 83: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.47413304448127747
    2. 'range' → logprob: -0.9741330146789551
    3. ' ' → logprob: -10.099133491516113
    4. '	range' → logprob: -11.849133491516113
    5. '(range' → logprob: -12.849133491516113
    6. '[' → logprob: -13.474133491516113
    7. ' xrange' → logprob: -13.599133491516113
    8. '   ' → logprob: -14.349133491516113
    9. '  ' → logprob: -14.349133491516113
    10. '```' → logprob: -14.724133491516113

Token 84: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.023155452683568
    2. ' ' → logprob: -4.023155689239502
    3. ' (' → logprob: -6.023155689239502
    4. '8' → logprob: -6.148155689239502
    5. '32' → logprob: -8.023155212402344
    6. '16' → logprob: -9.273155212402344
    7. '24' → logprob: -12.523155212402344
    8. '10' → logprob: -13.023155212402344
    9. '20' → logprob: -13.398155212402344
    10. '36' → logprob: -13.898155212402344

Token 85: '4' (ID: 19)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '8' → logprob: -0.010195279493927956
    2. '23' → logprob: -4.635195255279541
    3. '10' → logprob: -8.1351957321167
    4. '16' → logprob: -9.1351957321167
    5. ' ' → logprob: -11.6351957321167
    6. '6' → logprob: -11.8851957321167
    7. '7' → logprob: -12.2601957321167
    8. '12' → logprob: -12.2601957321167
    9. '1' → logprob: -12.5101957321167
    10. '20' → logprob: -13.1351957321167

Token 86: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07171069085597992
    2. ':' → logprob: -2.8217105865478516
    3. ')' → logprob: -5.196710586547852
    4. '):
' → logprob: -5.571710586547852
    5. ' ):' → logprob: -9.196710586547852
    6. '   ' → logprob: -9.571710586547852
    7. '0' → logprob: -9.571710586547852
    8. '4' → logprob: -10.821710586547852
    9. '6' → logprob: -11.321710586547852
    10. ' :' → logprob: -11.571710586547852

Token 87: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6552614569664001
    2. '    ' → logprob: -1.030261516571045
    3. '   ' → logprob: -3.155261516571045
    4. ' ' → logprob: -3.780261516571045
    5. '        ' → logprob: -4.280261516571045
    6. 'frac' → logprob: -4.280261516571045
    7. ' frac' → logprob: -5.030261516571045
    8. '    
' → logprob: -5.155261516571045
    9. '        
' → logprob: -5.405261516571045
    10. '     
' → logprob: -6.280261516571045

Token 88: ' frac' (ID: 72308)
  Prédit: 'frac'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'frac' (adapté à ' frac') → logprob: -0.0032324944622814655
    2. ' frac' → logprob: -5.753232479095459
    3. 'fr' → logprob: -10.753232955932617
    4. 'fract' → logprob: -10.878232955932617
    5. 'fraction' → logprob: -11.878232955932617
    6. '   ' → logprob: -12.878232955932617
    7. '_frac' → logprob: -13.378232955932617
    8. 'f' → logprob: -13.878232955932617
    9. 'fra' → logprob: -14.003232955932617
    10. 'frag' → logprob: -14.003232955932617

Token 89: ' *=' (ID: 25253)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.04544999077916145
    2. ' *=' → logprob: -3.17044997215271
    3. '*' → logprob: -6.295450210571289
    4. '=' → logprob: -7.545450210571289
    5. '```' → logprob: -10.795450210571289
    6. ' ' → logprob: -11.295450210571289
    7. '	' → logprob: -11.670450210571289
    8. ' <<=' → logprob: -11.670450210571289
    9. ' =' → logprob: -11.920450210571289
    10. '\' → logprob: -12.045450210571289

Token 90: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '```' → logprob: -18.125003814697266
    4. '۲' → logprob: -19.000003814697266
    5. '२' → logprob: -19.750003814697266
    6. '２' → logprob: -19.750003814697266
    7. '٢' → logprob: -20.125003814697266
    8. '   ' → logprob: -20.562503814697266
    9. '₂' → logprob: -21.000003814697266
    10. '  ' → logprob: -21.187503814697266

Token 91: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '```' → logprob: -19.0
    4. '२' → logprob: -19.125
    5. '۲' → logprob: -19.3125
    6. '２' → logprob: -19.5625
    7. '٢' → logprob: -19.75
    8. '0' → logprob: -20.1875
    9. '২' → logprob: -20.3125
    10. '₂' → logprob: -21.0

Token 92: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0354652404785156
    2. '       ' → logprob: -1.1604652404785156
    3. ' if' → logprob: -2.1604652404785156
    4. '   ' → logprob: -2.7854652404785156
    5. '<|end|>' → logprob: -3.1604652404785156
    6. '
' → logprob: -3.2854652404785156
    7. '.' → logprob: -3.9104652404785156
    8. ',' → logprob: -4.660465240478516
    9. ' ' → logprob: -5.160465240478516
    10. '\' → logprob: -5.285465240478516

Token 93: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 94: ' bit' (ID: 3546)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.17988793551921844
    2. ' if' → logprob: -1.8048878908157349
    3. '       ' → logprob: -9.429887771606445
    4. '1' → logprob: -10.304887771606445
    5. 'digit' → logprob: -11.929887771606445
    6. 'ifr' → logprob: -12.429887771606445
    7. 'i' → logprob: -12.929887771606445
    8. ' ' → logprob: -13.054887771606445
    9. 'int' → logprob: -13.054887771606445
    10. '   ' → logprob: -13.304887771606445

Token 95: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.043088026344776154
    2. '=' → logprob: -3.168087959289551
    3. ',' → logprob: -10.04308795928955
    4. '=int' → logprob: -10.79308795928955
    5. 's' → logprob: -11.41808795928955
    6. ' ' → logprob: -11.79308795928955
    7. '<|end|>' → logprob: -13.54308795928955
    8. '_' → logprob: -13.66808795928955
    9. ' |=' → logprob: -14.54308795928955
    10. ' ' → logprob: -15.04308795928955

Token 96: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5808357000350952
    2. ' int' → logprob: -1.4558357000350952
    3. '1' → logprob: -1.5808357000350952
    4. ' ' → logprob: -6.580835819244385
    5. '0' → logprob: -9.330835342407227
    6. '   ' → logprob: -9.955835342407227
    7. 'str' → logprob: -10.705835342407227
    8. '(int' → logprob: -12.205835342407227
    9. ' str' → logprob: -12.205835342407227
    10. '	int' → logprob: -12.955835342407227

Token 97: '(fr' (ID: 62646)
  Prédit: '(fr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(fr' → logprob: -0.00029840084607712924
    2. '(' → logprob: -8.125298500061035
    3. 'frac' → logprob: -14.000298500061035
    4. '(frm' → logprob: -14.625298500061035
    5. ' (' → logprob: -14.875298500061035
    6. '(fe' → logprob: -15.500298500061035
    7. '()' → logprob: -16.00029754638672
    8. '((' → logprob: -16.25029754638672
    9. '(freq' → logprob: -16.62529754638672
    10. '(str' → logprob: -17.00029754638672

Token 98: 'ac' (ID: 359)
  Prédit: 'ac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -5.512236498361744e-07
    2. 'ag' → logprob: -16.25
    3. '```' → logprob: -16.25
    4. 'act' → logprob: -16.5
    5. 'a' → logprob: -17.25
    6. '_bin' → logprob: -17.25
    7. 'c' → logprob: -17.5
    8. ' ' → logprob: -17.875
    9. 'ац' → logprob: -17.875
    10. 'oc' → logprob: -17.875

Token 99: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019391077803447843
    2. '[' → logprob: -7.626939296722412
    3. ')>=' → logprob: -7.876939296722412
    4. ')
' → logprob: -8.001938819885254
    5. ')>' → logprob: -8.001938819885254
    6. '>=' → logprob: -9.376938819885254
    7. '>' → logprob: -9.876938819885254
    8. '.' → logprob: -10.126938819885254
    9. '<|end|>' → logprob: -10.251938819885254
    10. ' )' → logprob: -10.751938819885254

Token 100: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49440324306488037
    2. '<|end|>' → logprob: -1.3694032430648804
    3. '.' → logprob: -2.86940336227417
    4. '
' → logprob: -3.36940336227417
    5. ')' → logprob: -4.36940336227417
    6. '' → logprob: -5.24440336227417
    7. '        
' → logprob: -5.49440336227417
    8. '0' → logprob: -5.86940336227417
    9. '1' → logprob: -6.11940336227417
    10. '    ' → logprob: -6.24440336227417

Token 101: ' frac' (ID: 72308)
  Prédit: ' frac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' frac' → logprob: -0.24809959530830383
    2. '       ' → logprob: -1.9980995655059814
    3. 'frac' (adapté à ' frac') → logprob: -3.3730995655059814
    4. '0' → logprob: -3.8730995655059814
    5. ' ' → logprob: -5.2480998039245605
    6. '    ' → logprob: -5.2480998039245605
    7. ' if' → logprob: -5.3730998039245605
    8. '1' → logprob: -5.7480998039245605
    9. '   ' → logprob: -5.7480998039245605
    10. ')' → logprob: -6.6230998039245605

Token 102: '_bin' (ID: 53631)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.19374220073223114
    2. ' -=' → logprob: -2.068742275238037
    3. '=' → logprob: -3.318742275238037
    4. '-' → logprob: -4.318742275238037
    5. '_bin' → logprob: -9.318741798400879
    6. ' =' → logprob: -10.443741798400879
    7. '_' → logprob: -10.568741798400879
    8. ')' → logprob: -10.568741798400879
    9. '	' → logprob: -10.943741798400879
    10. '```' → logprob: -11.193741798400879

Token 103: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.001942322589457035
    2. '.' → logprob: -6.251942157745361
    3. '.ap' → logprob: -12.00194263458252
    4. '.app' → logprob: -12.37694263458252
    5. 'append' → logprob: -13.37694263458252
    6. ' .' → logprob: -14.25194263458252
    7. '.Append' → logprob: -14.37694263458252
    8. '.push' → logprob: -15.75194263458252
    9. '.extend' → logprob: -16.501941680908203
    10. '_append' → logprob: -17.126941680908203

Token 104: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.01273072138428688
    2. '(bit' → logprob: -4.762730598449707
    3. '(' → logprob: -5.512730598449707
    4. '('' → logprob: -10.387730598449707
    5. '(bin' → logprob: -10.762730598449707
    6. 'str' → logprob: -11.887730598449707
    7. '(f' → logprob: -12.637730598449707
    8. '((' → logprob: -12.762730598449707
    9. '(chr' → logprob: -12.887730598449707
    10. '("("' → logprob: -13.387730598449707

Token 105: '(bit' (ID: 123258)
  Prédit: '(bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(bit' → logprob: -1.9027791495318525e-05
    2. '(' → logprob: -10.875019073486328
    3. '(Bit' → logprob: -17.250019073486328
    4. '(bits' → logprob: -17.625019073486328
    5. ' bit' → logprob: -18.000019073486328
    6. '(bin' → logprob: -18.375019073486328
    7. 'bit' → logprob: -18.500019073486328
    8. ' (' → logprob: -19.000019073486328
    9. ')' → logprob: -20.625019073486328
    10. '(b' → logprob: -20.625019073486328

Token 106: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.16114838421344757
    2. ')' → logprob: -1.9111484289169312
    3. '))
' → logprob: -7.036148548126221
    4. '       ' → logprob: -11.286148071289062
    5. ')))' → logprob: -11.286148071289062
    6. ')
' → logprob: -11.411148071289062
    7. ' ))' → logprob: -12.661148071289062
    8. '))
' → logprob: -13.536148071289062
    9. '   ' → logprob: -13.661148071289062
    10. ' )' → logprob: -14.536148071289062

Token 107: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022762585431337357
    2. 'frac' → logprob: -5.147762775421143
    3. '   ' → logprob: -5.397762775421143
    4. '<|end|>' → logprob: -5.772762775421143
    5. ' ' → logprob: -6.022762775421143
    6. ' if' → logprob: -6.522762775421143
    7. '.' → logprob: -6.647762775421143
    8. '    ' → logprob: -7.397762775421143
    9. '        
' → logprob: -7.772762775421143
    10. ' 
' → logprob: -7.897762775421143

Token 108: ' frac' (ID: 72308)
  Prédit: 'frac'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'frac' (adapté à ' frac') → logprob: -0.0008545245509594679
    2. ' frac' → logprob: -7.5008544921875
    3. 'if' → logprob: -8.2508544921875
    4. 'fraction' → logprob: -11.6258544921875
    5. '```' → logprob: -11.8758544921875
    6. ' if' → logprob: -11.8758544921875
    7. '`' → logprob: -12.5008544921875
    8. '   ' → logprob: -13.0008544921875
    9. 'fract' → logprob: -13.0008544921875
    10. 'fr' → logprob: -13.1258544921875

Token 109: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.006155235227197409
    2. '=' → logprob: -5.756155014038086
    3. ' -=' → logprob: -6.256155014038086
    4. '-' → logprob: -6.881155014038086
    5. '%=' → logprob: -10.631155014038086
    6. '%' → logprob: -14.381155014038086
    7. '*=' → logprob: -14.506155014038086
    8. '_=' → logprob: -15.131155014038086
    9. ' =' → logprob: -15.506155014038086
    10. ' -' → logprob: -15.631155014038086

Token 110: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -9.615255839889869e-05
    2. ' bit' → logprob: -9.250096321105957
    3. 'float' → logprob: -17.25009536743164
    4. 'int' → logprob: -18.37509536743164
    5. '(bit' → logprob: -18.50009536743164
    6. '   ' → logprob: -20.25009536743164
    7. 'bitr' → logprob: -20.25009536743164
    8. ' ' → logprob: -20.75009536743164
    9. '```' → logprob: -20.87509536743164
    10. 'bits' → logprob: -21.00009536743164

Token 111: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7544278502464294
    2. ' return' → logprob: -1.0044279098510742
    3. 'return' → logprob: -2.379427909851074
    4. '
' → logprob: -2.879427909851074
    5. ' ' → logprob: -4.879427909851074
    6. '    
' → logprob: -6.004427909851074
    7. '	return' → logprob: -6.629427909851074
    8. ' 
' → logprob: -6.879427909851074
    9. '  
' → logprob: -7.754427909851074
    10. '  ' → logprob: -8.254427909851074

Token 112: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4924573600292206
    2. ' return' → logprob: -1.117457389831543
    3. 'return' → logprob: -3.367457389831543
    4. ' ' → logprob: -4.242457389831543
    5. '    
' → logprob: -5.992457389831543
    6. ''' → logprob: -6.367457389831543
    7. ' 
' → logprob: -6.367457389831543
    8. '    ' → logprob: -6.492457389831543
    9. '	return' → logprob: -6.742457389831543
    10. '
' → logprob: -7.367457389831543

Token 113: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.44395747780799866
    2. ' return' → logprob: -1.0689574480056763
    3. '   ' → logprob: -4.943957328796387
    4. ' ' → logprob: -5.443957328796387
    5. '.' → logprob: -6.568957328796387
    6. ''' → logprob: -6.943957328796387
    7. ')' → logprob: -8.068957328796387
    8. '    ' → logprob: -8.193957328796387
    9. '	return' → logprob: -8.318957328796387
    10. '    
' → logprob: -9.693957328796387

Token 114: ' frac' (ID: 72308)
  Prédit: ' frac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' frac' → logprob: -0.8245914578437805
    2. ' len' → logprob: -1.4495913982391357
    3. ' fractional' → logprob: -2.0745913982391357
    4. ' not' → logprob: -2.0745913982391357
    5. ' ' → logprob: -3.3245913982391357
    6. ' int' → logprob: -4.199591636657715
    7. ' integer' → logprob: -4.699591636657715
    8. ' num' → logprob: -4.949591636657715
    9. ' '' → logprob: -6.449591636657715
    10. ' ' → logprob: -6.949591636657715

Token 115: ' !=' (ID: 1666)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.2767293155193329
    2. ' >' → logprob: -2.1517293453216553
    3. '!=' → logprob: -3.1517293453216553
    4. '>=' → logprob: -3.1517293453216553
    5. '*' → logprob: -4.026729106903076
    6. '==' → logprob: -4.651729106903076
    7. ' >=' → logprob: -5.026729106903076
    8. ' !=' → logprob: -5.526729106903076
    9. ' ==' → logprob: -6.651729106903076
    10. '=' → logprob: -9.276729583740234

Token 116: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009757863357663155
    2. ' ' → logprob: -4.634757995605469
    3. '  ' → logprob: -14.759757995605469
    4. '   ' → logprob: -14.759757995605469
    5. '    ' → logprob: -15.447257995605469
    6. '>' → logprob: -16.82225799560547
    7. 'fraction' → logprob: -16.82225799560547
    8. '

' → logprob: -16.94725799560547
    9. '1' → logprob: -16.94725799560547
    10. '=' → logprob: -17.07225799560547

Token 117: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019316127290949225
    2. ' ' → logprob: -6.251931667327881
    3. '   ' → logprob: -14.751931190490723
    4. 'fraction' → logprob: -14.939431190490723
    5. '  ' → logprob: -15.251931190490723
    6. '    ' → logprob: -15.564431190490723
    7. '1' → logprob: -15.876931190490723
    8. 'Fraction' → logprob: -16.06443214416504
    9. '

' → logprob: -16.18943214416504
    10. 'float' → logprob: -16.18943214416504

Token 118: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005428931675851345
    2. ':
' → logprob: -5.380428791046143
    3. '   ' → logprob: -8.2554292678833
    4. ' :' → logprob: -8.5054292678833
    5. ':return' → logprob: -8.7554292678833
    6. '       ' → logprob: -9.1304292678833
    7. ' :
' → logprob: -11.0054292678833
    8. '    ' → logprob: -11.3804292678833
    9. '>' → logprob: -11.6304292678833
    10. ' ' → logprob: -11.6304292678833

Token 119: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22144421935081482
    2. '    ' → logprob: -2.4714441299438477
    3. ' ' → logprob: -2.9714441299438477
    4. '   ' → logprob: -3.5964441299438477
    5. ' return' → logprob: -4.721444129943848
    6. '     
' → logprob: -5.596444129943848
    7. '000' → logprob: -5.721444129943848
    8. '```' → logprob: -5.721444129943848
    9. 'return' → logprob: -6.096444129943848
    10. '        ' → logprob: -6.221444129943848

Token 120: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.13126985728740692
    2. 'return' (adapté à ' return') → logprob: -2.131269931793213
    3. ' None' → logprob: -5.631269931793213
    4. 'None' → logprob: -7.881269931793213
    5. '   ' → logprob: -8.631269454956055
    6. '    ' → logprob: -9.131269454956055
    7. ' ' → logprob: -10.506269454956055
    8. '       ' → logprob: -10.506269454956055
    9. '	return' → logprob: -12.756269454956055
    10. '  ' → logprob: -12.881269454956055

Token 121: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.12697672843933105
    2. ' None' → logprob: -2.126976728439331
    3. '"' → logprob: -11.00197696685791
    4. ''' → logprob: -11.62697696685791
    5. '   ' → logprob: -12.12697696685791
    6. '(None' → logprob: -12.37697696685791
    7. ' ' → logprob: -12.50197696685791
    8. '  ' → logprob: -13.50197696685791
    9. ',None' → logprob: -13.75197696685791
    10. '.None' → logprob: -13.87697696685791

Token 122: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09172669798135757
    2. '
' → logprob: -2.841726779937744
    3. ' ' → logprob: -4.841726779937744
    4. '    
' → logprob: -5.216726779937744
    5. ' return' → logprob: -5.841726779937744
    6. ''' → logprob: -6.091726779937744
    7. '  
' → logprob: -6.216726779937744
    8. 'return' → logprob: -6.466726779937744
    9. ' 
' → logprob: -6.716726779937744
    10. '  ' → logprob: -7.341726779937744

Token 123: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0017189696663990617
    2. '    
' → logprob: -7.376718997955322
    3. '
' → logprob: -7.876718997955322
    4. ' ' → logprob: -8.751718521118164
    5. ')' → logprob: -9.001718521118164
    6. '    ' → logprob: -9.126718521118164
    7. ' 
' → logprob: -9.751718521118164
    8. ' return' → logprob: -10.001718521118164
    9. 'return' → logprob: -10.126718521118164
    10. '       ' → logprob: -10.751718521118164

Token 124: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.12192318588495255
    2. ' return' → logprob: -2.7469232082366943
    3. '   ' → logprob: -2.9969232082366943
    4. ''' → logprob: -8.121923446655273
    5. ' ' → logprob: -8.121923446655273
    6. '	return' → logprob: -10.121923446655273
    7. '''.' → logprob: -10.121923446655273
    8. ''.' → logprob: -10.996923446655273
    9. '  ' → logprob: -12.246923446655273
    10. 'fraction' → logprob: -12.746923446655273

Token 125: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.12708936631679535
    2. ' int' → logprob: -2.127089262008667
    3. 'f' → logprob: -9.127089500427246
    4. ' f' → logprob: -10.002089500427246
    5. ' ' → logprob: -13.502089500427246
    6. ''int' → logprob: -13.502089500427246
    7. ''' → logprob: -13.627089500427246
    8. '(int' → logprob: -14.002089500427246
    9. ' ' → logprob: -14.002089500427246
    10. ' '' → logprob: -15.002089500427246

Token 126: '_bin' (ID: 53631)
  Prédit: '_bin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bin' → logprob: -5.5577775128767826e-06
    2. '_bit' → logprob: -12.875005722045898
    3. '_part' → logprob: -13.875005722045898
    4. '_' → logprob: -14.000005722045898
    5. 'bin' → logprob: -15.000005722045898
    6. '```' → logprob: -15.250005722045898
    7. '_binary' → logprob: -16.2500057220459
    8. '_bits' → logprob: -16.6250057220459
    9. '_bins' → logprob: -16.6250057220459
    10. '_BIN' → logprob: -16.6250057220459

Token 127: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2190224975347519
    2. ' +' → logprob: -2.344022512435913
    3. ''' → logprob: -3.219022512435913
    4. '''.' → logprob: -3.844022512435913
    5. '_' → logprob: -4.469022274017334
    6. '''' → logprob: -4.594022274017334
    7. '"' → logprob: -5.344022274017334
    8. '.' → logprob: -5.719022274017334
    9. ''.' → logprob: -5.969022274017334
    10. '+'.' → logprob: -6.469022274017334

Token 128: ' '.'' (ID: 64762)
  Prédit: ''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.031618814915418625
    2. '"."' → logprob: -4.156618595123291
    3. '''.' → logprob: -4.531618595123291
    4. ' '.'' → logprob: -6.281618595123291
    5. '"' → logprob: -6.781618595123291
    6. '.' → logprob: -7.656618595123291
    7. ' ''.' → logprob: -7.906618595123291
    8. '''' → logprob: -8.03161907196045
    9. '".' → logprob: -8.03161907196045
    10. ''' → logprob: -9.53161907196045

Token 129: ' +' (ID: 659)
  Prédit: '''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''.' → logprob: -0.0006361891864798963
    2. '''' → logprob: -7.750636100769043
    3. '```' → logprob: -9.500636100769043
    4. '"' → logprob: -9.625636100769043
    5. ' ''.' → logprob: -10.625636100769043
    6. 'join' → logprob: -10.875636100769043
    7. '('' → logprob: -11.250636100769043
    8. 'str' → logprob: -13.875636100769043
    9. '['' → logprob: -14.000636100769043
    10. '''
' → logprob: -14.125636100769043

Token 130: ' ''.' (ID: 105941)
  Prédit: '''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''.' → logprob: -0.00041982904076576233
    2. ' ''.' → logprob: -8.000419616699219
    3. '''' → logprob: -9.500419616699219
    4. '"' → logprob: -11.750419616699219
    5. ''' → logprob: -14.000419616699219
    6. '''
' → logprob: -14.875419616699219
    7. '('' → logprob: -16.00041961669922
    8. ''',' → logprob: -16.50041961669922
    9. '   ' → logprob: -16.75041961669922
    10. ' ' → logprob: -16.87541961669922

Token 131: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -1.0280383548888494e-06
    2. 'j' → logprob: -14.750000953674316
    3. 'jo' → logprob: -14.750000953674316
    4. ' join' → logprob: -16.500001907348633
    5. '''.' → logprob: -17.000001907348633
    6. '.' → logprob: -17.250001907348633
    7. '```' → logprob: -18.250001907348633
    8. ''.' → logprob: -19.000001907348633
    9. '.join' → logprob: -19.625001907348633
    10. '(join' → logprob: -19.625001907348633

Token 132: '(fr' (ID: 62646)
  Prédit: '(fr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(fr' → logprob: -2.1008713702030946e-06
    2. '(' → logprob: -13.375001907348633
    3. 'frac' → logprob: -15.125001907348633
    4. '(func' → logprob: -16.500001907348633
    5. '(freq' → logprob: -16.875001907348633
    6. '(fe' → logprob: -17.250001907348633
    7. '(f' → logprob: -17.500001907348633
    8. '((' → logprob: -17.750001907348633
    9. '(frm' → logprob: -18.250001907348633
    10. ' (' → logprob: -19.000001907348633

Token 133: 'ac' (ID: 359)
  Prédit: 'ac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -5.512236498361744e-07
    2. 'ag' → logprob: -14.875000953674316
    3. 'a' → logprob: -16.125
    4. 'action' → logprob: -18.0
    5. 'act' → logprob: -18.375
    6. 'acc' → logprob: -19.0
    7. 'acs' → logprob: -19.25
    8. '
' → logprob: -19.375
    9. 'ic' → logprob: -19.375
    10. 'oc' → logprob: -19.625

Token 134: '_bin' (ID: 53631)
  Prédit: '_bin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bin' → logprob: -6.885492621222511e-05
    2. 'bin' → logprob: -9.625068664550781
    3. '_bit' → logprob: -13.500068664550781
    4. '-bin' → logprob: -14.375068664550781
    5. 'in' → logprob: -15.375068664550781
    6. ')' → logprob: -15.750068664550781
    7. '(bin' → logprob: -16.37506866455078
    8. 'Bin' → logprob: -16.75006866455078
    9. ' bin' → logprob: -16.75006866455078
    10. '_BIN' → logprob: -17.12506866455078

Token 135: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2664456789934775e-06
    2. '')' → logprob: -14.375000953674316
    3. ')
' → logprob: -15.750000953674316
    4. ')`' → logprob: -15.750000953674316
    5. ' )' → logprob: -16.125001907348633
    6. '(' → logprob: -16.375001907348633
    7. '```' → logprob: -18.125001907348633
    8. '()' → logprob: -18.250001907348633
    9. '}' → logprob: -18.375001907348633
    10. '<|end|>' → logprob: -18.375001907348633

Token 136: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.7681950926780701
    2. '
' → logprob: -1.6431951522827148
    3. '(' → logprob: -2.143195152282715
    4. ')' → logprob: -2.643195152282715
    5. '#' → logprob: -3.268195152282715
    6. '<|end|>' → logprob: -3.393195152282715
    7. '\' → logprob: -3.643195152282715
    8. 'newline' → logprob: -3.893195152282715
    9. '```' → logprob: -4.518195152282715
    10. ' ' → logprob: -5.143195152282715

Token 137: ' sys' (ID: 12228)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.1270924210548401
    2. ' struct' → logprob: -2.1270923614501953
    3. ' sys' → logprob: -10.002092361450195
    4. 'math' → logprob: -10.502092361450195
    5. ' ' → logprob: -10.752092361450195
    6. ' re' → logprob: -10.877092361450195
    7. 'struct' → logprob: -11.002092361450195
    8. ' bin' → logprob: -11.252092361450195
    9. ' decimal' → logprob: -11.877092361450195
    10. ' random' → logprob: -12.252092361450195

Token 138: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.18343254923820496
    2. '
' → logprob: -2.9334325790405273
    3. '\n' → logprob: -3.1834325790405273
    4. 'if' → logprob: -3.5584325790405273
    5. 'print' → logprob: -4.183432579040527
    6. 'n' → logprob: -4.808432579040527
    7. 'for' → logprob: -5.558432579040527
    8. ' 
' → logprob: -5.683432579040527
    9. 'newline' → logprob: -5.933432579040527
    10. '\' → logprob: -6.183432579040527

Token 139: 'for' (ID: 1938)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.9573946595191956
    2. 'n' → logprob: -1.4573945999145508
    3. 'def' → logprob: -1.7073945999145508
    4. '\' → logprob: -2.707394599914551
    5. 'i' → logprob: -3.207394599914551
    6. '
' → logprob: -4.082394599914551
    7. 'd' → logprob: -4.707394599914551
    8. '.' → logprob: -4.707394599914551
    9. 'input' → logprob: -4.707394599914551
    10. 'if' → logprob: -4.832394599914551

Token 140: ' line' (ID: 2543)
  Prédit: ' num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.12774257361888885
    2. ' arg' → logprob: -2.8777425289154053
    3. ' ' → logprob: -3.1277425289154053
    4. ' number' → logprob: -4.627742767333984
    5. ' i' → logprob: -5.377742767333984
    6. ' line' → logprob: -5.627742767333984
    7. 'num' → logprob: -7.252742767333984
    8. ' n' → logprob: -8.002742767333984
    9. ' _' → logprob: -8.377742767333984
    10. ' x' → logprob: -9.127742767333984

Token 141: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009766596369445324
    2. 'in' → logprob: -4.634766578674316
    3. ' ' → logprob: -12.134766578674316
    4. 'import' → logprob: -13.384766578674316
    5. 's' → logprob: -14.134766578674316
    6. '```' → logprob: -14.509766578674316
    7. '	in' → logprob: -14.884766578674316
    8. '[' → logprob: -14.884766578674316
    9. '_' → logprob: -15.134766578674316
    10. ' ' → logprob: -15.509766578674316

Token 142: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.5759648680686951
    2. ' sys' → logprob: -0.8259648680686951
    3. '=sys' → logprob: -10.95096492767334
    4. '	sys' → logprob: -12.20096492767334
    5. '(sys' → logprob: -13.20096492767334
    6. 'stdin' → logprob: -14.82596492767334
    7. 'Sys' → logprob: -16.200963973999023
    8. 'import' → logprob: -16.325963973999023
    9. '_sys' → logprob: -16.325963973999023
    10. 's' → logprob: -16.450963973999023

Token 143: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.038395918905735016
    2. 'stdin' → logprob: -3.288395881652832
    3. ' stdin' → logprob: -8.663395881652832
    4. '(stdin' → logprob: -8.663395881652832
    5. '.stdout' → logprob: -13.163395881652832
    6. '.' → logprob: -13.163395881652832
    7. '.readline' → logprob: -13.788395881652832
    8. '.argv' → logprob: -14.163395881652832
    9. '```' → logprob: -14.288395881652832
    10. '.std' → logprob: -14.288395881652832

Token 144: ':
' (ID: 734)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.09364230930805206
    2. '.' → logprob: -2.593642234802246
    3. '.readlines' → logprob: -4.468642234802246
    4. ':' → logprob: -5.968642234802246
    5. '.rstrip' → logprob: -8.968642234802246
    6. '.strip' → logprob: -9.093642234802246
    7. '.read' → logprob: -9.468642234802246
    8. '<|end|>' → logprob: -9.718642234802246
    9. ' in' → logprob: -9.843642234802246
    10. '>' → logprob: -10.218642234802246

Token 145: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021884270012378693
    2. '    
' → logprob: -4.646884441375732
    3. ' if' → logprob: -5.521884441375732
    4. ' line' → logprob: -5.771884441375732
    5. 'num' → logprob: -7.396884441375732
    6. ' num' → logprob: -7.396884441375732
    7. ' 
' → logprob: -7.896884441375732
    8. ' readline' → logprob: -7.896884441375732
    9. ',' → logprob: -8.146883964538574
    10. '.strip' → logprob: -8.396883964538574

Token 146: ' line' (ID: 2543)
  Prédit: ' num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.30192774534225464
    2. ' line' → logprob: -2.1769278049468994
    3. 'num' → logprob: -2.4269278049468994
    4. ' number' → logprob: -3.5519278049468994
    5. ' value' → logprob: -4.42692756652832
    6. '   ' → logprob: -4.55192756652832
    7. ' n' → logprob: -5.92692756652832
    8. ' if' → logprob: -6.55192756652832
    9. 'line' (adapté à ' line') → logprob: -6.55192756652832
    10. ' val' → logprob: -7.55192756652832

Token 147: '=line' (ID: 192488)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.052861228585243225
    2. ' =' → logprob: -3.052861213684082
    3. '.strip' → logprob: -5.677861213684082
    4. 'rstrip' → logprob: -8.427861213684082
    5. '=line' → logprob: -8.552861213684082
    6. 'strip' → logprob: -8.552861213684082
    7. '.rstrip' → logprob: -8.927861213684082
    8. '_strip' → logprob: -9.427861213684082
    9. 's' → logprob: -11.677861213684082
    10. '.' → logprob: -12.177861213684082

Token 148: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.004199848044663668
    2. '.rstrip' → logprob: -6.004199981689453
    3. '.' → logprob: -6.379199981689453
    4. '().' → logprob: -11.629199981689453
    5. 'strip' → logprob: -12.129199981689453
    6. '.replace' → logprob: -12.754199981689453
    7. ' .' → logprob: -13.129199981689453
    8. '.lower' → logprob: -13.129199981689453
    9. 'rstrip' → logprob: -13.629199981689453
    10. '.trim' → logprob: -13.629199981689453

Token 149: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00029399030609056354
    2. '()
' → logprob: -8.250293731689453
    3. '()>' → logprob: -11.750293731689453
    4. '()\' → logprob: -12.125293731689453
    5. '()

' → logprob: -12.250293731689453
    6. '(' → logprob: -12.375293731689453
    7. '()==' → logprob: -13.125293731689453
    8. '();' → logprob: -13.625293731689453
    9. '()<' → logprob: -13.625293731689453
    10. '().' → logprob: -13.875293731689453

Token 150: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2816329598426819
    2. ' if' → logprob: -1.531632900238037
    3. 'if' → logprob: -3.656632900238037
    4. '<|end|>' → logprob: -6.531632900238037
    5. '    
' → logprob: -7.656632900238037
    6. '
' → logprob: -8.156633377075195
    7. ' and' → logprob: -8.281633377075195
    8. ' ' → logprob: -8.656633377075195
    9. ',' → logprob: -8.656633377075195
    10. ' 
' → logprob: -8.906633377075195

Token 151: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.030495282262563705
    2. 'try' → logprob: -3.5304951667785645
    3. ' if' → logprob: -7.6554951667785645
    4. 'num' → logprob: -8.530495643615723
    5. '   ' → logprob: -10.155495643615723
    6. ' try' → logprob: -11.155495643615723
    7. 'float' → logprob: -11.780495643615723
    8. 'result' → logprob: -12.155495643615723
    9. 'print' → logprob: -12.405495643615723
    10. '    
' → logprob: -13.405495643615723

Token 152: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.18586039543151855
    2. ' line' → logprob: -1.9358603954315186
    3. 'line' → logprob: -4.185860633850098
    4. 'not' → logprob: -4.685860633850098
    5. ' float' → logprob: -7.310860633850098
    6. ' ' → logprob: -9.310860633850098
    7. ' len' → logprob: -9.685860633850098
    8. 'float' → logprob: -10.060860633850098
    9. 'len' → logprob: -11.560860633850098
    10. ' ' → logprob: -14.435860633850098

Token 153: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.16022644937038422
    2. 'line' → logprob: -1.9102264642715454
    3. ' ' → logprob: -13.160226821899414
    4. '	line' → logprob: -15.535226821899414
    5. '(line' → logprob: -16.535226821899414
    6. '#line' → logprob: -17.410226821899414
    7. '[line' → logprob: -17.910226821899414
    8. '_line' → logprob: -18.285226821899414
    9. '<|end|>' → logprob: -18.285226821899414
    10. 'Line' → logprob: -18.910226821899414

Token 154: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18453456461429596
    2. ' or' → logprob: -1.8095345497131348
    3. ':
' → logprob: -6.434534549713135
    4. '<|end|>' → logprob: -6.559534549713135
    5. ' :' → logprob: -7.059534549713135
    6. 'or' → logprob: -7.809534549713135
    7. '.startswith' → logprob: -9.434535026550293
    8. '.' → logprob: -9.434535026550293
    9. ':return' → logprob: -9.684535026550293
    10. '<|end|>' → logprob: -9.934535026550293

Token 155: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029816336929798126
    2. '   ' → logprob: -3.5298163890838623
    3. ':' → logprob: -10.279816627502441
    4. '    ' → logprob: -12.529816627502441
    5. ':
' → logprob: -12.654816627502441
    6. '    
' → logprob: -12.654816627502441
    7. ',' → logprob: -12.779816627502441
    8. ' continue' → logprob: -12.779816627502441
    9. ' break' → logprob: -12.904816627502441
    10. '      ' → logprob: -13.279816627502441

Token 156: ' continue' (ID: 4901)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.3896574378013611
    2. 'break' → logprob: -1.1396574974060059
    3. '   ' → logprob: -6.514657497406006
    4. 'continue' (adapté à ' continue') → logprob: -7.264657497406006
    5. ' continue' → logprob: -7.639657497406006
    6. '       ' → logprob: -9.389657020568848
    7. '	break' → logprob: -10.389657020568848
    8. '```' → logprob: -12.889657020568848
    9. '
' → logprob: -13.639657020568848
    10. ' ' → logprob: -14.264657020568848

Token 157: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008446495048701763
    2. '    
' → logprob: -4.88344669342041
    3. '
' → logprob: -7.13344669342041
    4. '  
' → logprob: -11.13344669342041
    5. '        
' → logprob: -11.38344669342041
    6. '   
' → logprob: -12.25844669342041
    7. 'num' → logprob: -12.75844669342041
    8. '<|end|>' → logprob: -13.25844669342041
    9. '       ' → logprob: -13.38344669342041
    10. ' 
' → logprob: -14.00844669342041

Token 158: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0026195356622338295
    2. '    
' → logprob: -6.127619743347168
    3. '
' → logprob: -7.877619743347168
    4. 'num' → logprob: -10.377619743347168
    5. '  
' → logprob: -12.252619743347168
    6. 'try' → logprob: -12.377619743347168
    7. '        
' → logprob: -12.502619743347168
    8. '   
' → logprob: -13.127619743347168
    9. ' num' → logprob: -13.127619743347168
    10. 'print' → logprob: -13.752619743347168

Token 159: ' try' (ID: 2075)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'try' (adapté à ' try') → logprob: -0.25278064608573914
    2. 'num' → logprob: -1.5027806758880615
    3. ' try' → logprob: -7.877780437469482
    4. '   ' → logprob: -8.00278091430664
    5. ' num' → logprob: -10.25278091430664
    6. 'value' → logprob: -10.50278091430664
    7. 'number' → logprob: -10.62778091430664
    8. 'float' → logprob: -11.25278091430664
    9. 'print' → logprob: -11.50278091430664
    10. '    
' → logprob: -11.75278091430664

Token 160: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007205340662039816
    2. ':
' → logprob: -7.250720500946045
    3. '       ' → logprob: -12.125720977783203
    4. ' :' → logprob: -13.375720977783203
    5. '):' → logprob: -13.750720977783203
    6. '   ' → logprob: -14.000720977783203
    7. '{' → logprob: -14.500720977783203
    8. ':

' → logprob: -14.750720977783203
    9. '<|end|>' → logprob: -15.875720977783203
    10. '():' → logprob: -16.125720977783203

Token 161: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024330880492925644
    2. ':' → logprob: -4.024331092834473
    3. ':
' → logprob: -5.524331092834473
    4. '   ' → logprob: -7.524331092834473
    5. ' num' → logprob: -7.524331092834473
    6. 'num' → logprob: -7.649331092834473
    7. '):
' → logprob: -9.149331092834473
    8. '<|end|>' → logprob: -9.274331092834473
    9. 'int' → logprob: -9.899331092834473
    10. '
' → logprob: -10.399331092834473

Token 162: ' n' (ID: 297)
  Prédit: ' num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.16515490412712097
    2. 'num' → logprob: -2.1651549339294434
    3. '       ' → logprob: -3.4151549339294434
    4. ' n' → logprob: -6.415154933929443
    5. ' number' → logprob: -7.040154933929443
    6. ' float' → logprob: -7.790154933929443
    7. 'n' (adapté à ' n') → logprob: -7.915154933929443
    8. '   ' → logprob: -8.040154457092285
    9. ' value' → logprob: -8.040154457092285
    10. ' val' → logprob: -8.165154457092285

Token 163: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008642463013529778
    2. '=' → logprob: -4.758642673492432
    3. '=float' → logprob: -10.883642196655273
    4. '=int' → logprob: -11.883642196655273
    5. 'um' → logprob: -13.383642196655273
    6. 'umber' → logprob: -15.633642196655273
    7. '=num' → logprob: -15.758642196655273
    8. ' =
' → logprob: -15.883642196655273
    9. 'o' → logprob: -16.508642196655273
    10. 'u' → logprob: -16.883642196655273

Token 164: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.00317783304490149
    2. ' float' → logprob: -5.753177642822266
    3. '   ' → logprob: -17.378177642822266
    4. 'int' → logprob: -17.753177642822266
    5. '(float' → logprob: -18.753177642822266
    6. '=float' → logprob: -19.128177642822266
    7. '	float' → logprob: -19.378177642822266
    8. ' ' → logprob: -20.128177642822266
    9. 'flo' → logprob: -20.753177642822266
    10. ',float' → logprob: -21.628177642822266

Token 165: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -1.318681188422488e-05
    2. '(' → logprob: -11.25001335144043
    3. '(
' → logprob: -16.75001335144043
    4. '(n' → logprob: -18.25001335144043
    5. ',line' → logprob: -18.87501335144043
    6. '=line' → logprob: -19.00001335144043
    7. ' (' → logprob: -19.12501335144043
    8. '[line' → logprob: -19.25001335144043
    9. '(lines' → logprob: -19.37501335144043
    10. '#line' → logprob: -19.62501335144043

Token 166: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3306015716807451e-05
    2. ')
' → logprob: -11.25001335144043
    3. ' )' → logprob: -15.62501335144043
    4. '       ' → logprob: -16.62501335144043
    5. '))' → logprob: -17.50001335144043
    6. ')

' → logprob: -17.50001335144043
    7. ')
' → logprob: -17.75001335144043
    8. ')`' → logprob: -17.87501335144043
    9. '`)' → logprob: -18.25001335144043
    10. '）' → logprob: -18.75001335144043

Token 167: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004702583886682987
    2. '   ' → logprob: -5.629702568054199
    3. ' except' → logprob: -7.629702568054199
    4. 'except' → logprob: -8.1297025680542
    5. '<|end|>' → logprob: -8.8797025680542
    6. '
' → logprob: -9.7547025680542
    7. '        
' → logprob: -10.2547025680542
    8. ',' → logprob: -10.5047025680542
    9. ')' → logprob: -10.7547025680542
    10. '	except' → logprob: -11.6297025680542

Token 168: ' except' (ID: 6384)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.42902523279190063
    2. '   ' → logprob: -1.8040251731872559
    3. ' except' → logprob: -2.179025173187256
    4. 'except' (adapté à ' except') → logprob: -2.804025173187256
    5. '	except' → logprob: -4.679025173187256
    6. '<|end|>' → logprob: -7.804025173187256
    7. '        
' → logprob: -8.179025650024414
    8. ',' → logprob: -9.179025650024414
    9. 'Except' → logprob: -9.679025650024414
    10. '
' → logprob: -9.804025650024414

Token 169: ':
' (ID: 734)
  Prédit: ' Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Value' → logprob: -0.019733747467398643
    2. 'Value' → logprob: -4.644733905792236
    3. '	Value' → logprob: -5.019733905792236
    4. '(Value' → logprob: -5.894733905792236
    5. '_Value' → logprob: -8.519733428955078
    6. '.Value' → logprob: -8.519733428955078
    7. '<|end|>' → logprob: -9.769733428955078
    8. '<Value' → logprob: -9.894733428955078
    9. ' ' → logprob: -10.644733428955078
    10. '_value' → logprob: -10.894733428955078

Token 170: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015811925753951073
    2. ':' → logprob: -4.515811920166016
    3. ' continue' → logprob: -5.640811920166016
    4. ' ' → logprob: -7.140811920166016
    5. '    ' → logprob: -8.640811920166016
    6. '   ' → logprob: -9.265811920166016
    7. '        ' → logprob: -10.515811920166016
    8. ' :' → logprob: -11.140811920166016
    9. ' ' → logprob: -11.390811920166016
    10. '           ' → logprob: -11.390811920166016

Token 171: ' continue' (ID: 4901)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7599146962165833
    2. ' continue' → logprob: -1.0099146366119385
    3. 'continue' (adapté à ' continue') → logprob: -1.8849146366119385
    4. '   ' → logprob: -4.134914875030518
    5. '	continue' → logprob: -8.63491439819336
    6. ' ' → logprob: -11.63491439819336
    7. ' break' → logprob: -12.50991439819336
    8. 'break' → logprob: -13.13491439819336
    9. '```' → logprob: -13.63491439819336
    10. '           ' → logprob: -13.75991439819336

Token 172: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011593853123486042
    2. '    
' → logprob: -7.126159191131592
    3. '
' → logprob: -8.25115966796875
    4. '<|end|>' → logprob: -9.62615966796875
    5. '        
' → logprob: -12.12615966796875
    6. '       ' → logprob: -12.37615966796875
    7. '  
' → logprob: -12.37615966796875
    8. '<|end|>' → logprob: -12.75115966796875
    9. 'n' → logprob: -13.00115966796875
    10. '```' → logprob: -13.37615966796875

Token 173: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0014840320218354464
    2. '    
' → logprob: -6.751483917236328
    3. '<|end|>' → logprob: -9.001483917236328
    4. '
' → logprob: -9.126483917236328
    5. ' if' → logprob: -10.751483917236328
    6. ' 
' → logprob: -11.626483917236328
    7. '  
' → logprob: -11.751483917236328
    8. 'n' → logprob: -11.876483917236328
    9. 'if' → logprob: -11.876483917236328
    10. '       ' → logprob: -12.001483917236328

Token 174: ' if' (ID: 538)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.6408336758613586
    2. 'result' → logprob: -1.2658336162567139
    3. '   ' → logprob: -1.8908336162567139
    4. ' bin' → logprob: -4.765833854675293
    5. 'bin' → logprob: -4.765833854675293
    6. ' if' → logprob: -5.265833854675293
    7. ' res' → logprob: -5.390833854675293
    8. ' output' → logprob: -5.890833854675293
    9. 'print' → logprob: -6.015833854675293
    10. 'output' → logprob: -6.640833854675293

Token 175: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.4241340160369873
    2. ' float' → logprob: -1.2991340160369873
    3. 'n' → logprob: -3.2991340160369873
    4. 'float' → logprob: -4.049134254455566
    5. ' not' → logprob: -4.174134254455566
    6. ' ' → logprob: -5.924134254455566
    7. 'not' → logprob: -8.424134254455566
    8. ' len' → logprob: -9.799134254455566
    9. ' num' → logprob: -10.049134254455566
    10. '0' → logprob: -10.611634254455566

Token 176: ' <' (ID: 464)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.8811761140823364
    2. ' <' → logprob: -1.8811761140823364
    3. ' >' → logprob: -1.8811761140823364
    4. ' is' → logprob: -2.256175994873047
    5. ' <=' → logprob: -2.506175994873047
    6. '>=' → logprob: -3.131175994873047
    7. '<' → logprob: -3.881175994873047
    8. '>' → logprob: -4.256175994873047
    9. '<=' → logprob: -5.131175994873047
    10. ' ==' → logprob: -5.131175994873047

Token 177: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001326433615759015
    2. ' ' → logprob: -6.626326560974121
    3. '   ' → logprob: -16.251325607299805
    4. '-' → logprob: -16.251325607299805
    5. '1' → logprob: -16.376325607299805
    6. '  ' → logprob: -17.126325607299805
    7. '=' → logprob: -17.376325607299805
    8. '```' → logprob: -17.626325607299805
    9. '10' → logprob: -17.876325607299805
    10. '۰' → logprob: -18.001325607299805

Token 178: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.73446003627032e-05
    2. ' ' → logprob: -9.250097274780273
    3. '-' → logprob: -14.625097274780273
    4. '   ' → logprob: -15.750097274780273
    5. '```' → logprob: -16.000097274780273
    6. 'or' → logprob: -16.125097274780273
    7. '  ' → logprob: -16.625097274780273
    8. '1' → logprob: -16.750097274780273
    9. '۰' → logprob: -17.000097274780273
    10. '=' → logprob: -17.375097274780273

Token 179: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8741682171821594
    2. ' or' → logprob: -0.9991682171821594
    3. '       ' → logprob: -1.8741681575775146
    4. ':
' → logprob: -2.8741681575775146
    5. '   ' → logprob: -5.499168395996094
    6. 'or' → logprob: -8.249168395996094
    7. ' :' → logprob: -9.249168395996094
    8. ' :
' → logprob: -10.124168395996094
    9. '    ' → logprob: -10.499168395996094
    10. ':return' → logprob: -10.624168395996094

Token 180: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02904578112065792
    2. '   ' → logprob: -3.779045820236206
    3. ' continue' → logprob: -6.029045581817627
    4. 'continue' → logprob: -6.529045581817627
    5. ' None' → logprob: -6.779045581817627
    6. ' or' → logprob: -8.029046058654785
    7. 'None' → logprob: -8.654046058654785
    8. '
' → logprob: -9.529046058654785
    9. '```' → logprob: -9.654046058654785
    10. ' ' → logprob: -10.904046058654785

Token 181: ' break' (ID: 2338)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.10209321975708
    2. '       ' → logprob: -1.35209321975708
    3. '   ' → logprob: -1.60209321975708
    4. 'break' (adapté à ' break') → logprob: -1.97709321975708
    5. 'continue' → logprob: -2.85209321975708
    6. ' break' → logprob: -5.10209321975708
    7. ' print' → logprob: -5.72709321975708
    8. ' continue' → logprob: -6.35209321975708
    9. '	break' → logprob: -9.227092742919922
    10. ' ' → logprob: -9.602092742919922

Token 182: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010914006270468235
    2. '    
' → logprob: -7.001091480255127
    3. '
' → logprob: -9.001091003417969
    4. 'print' → logprob: -10.126091003417969
    5. 'n' → logprob: -12.501091003417969
    6. '        
' → logprob: -12.751091003417969
    7. '  
' → logprob: -12.876091003417969
    8. '<|end|>' → logprob: -13.376091003417969
    9. ' print' → logprob: -13.626091003417969
    10. '```' → logprob: -13.876091003417969

Token 183: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02584025450050831
    2. 'print' → logprob: -3.7758402824401855
    3. '    
' → logprob: -6.9008402824401855
    4. '
' → logprob: -7.5258402824401855
    5. ' print' → logprob: -8.150839805603027
    6. 'token' → logprob: -8.275839805603027
    7. 'result' → logprob: -8.775839805603027
    8. '```' → logprob: -9.775839805603027
    9. 'if' → logprob: -10.025839805603027
    10. 'output' → logprob: -10.400839805603027

Token 184: ' res' (ID: 694)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.4037917852401733
    2. 'result' → logprob: -1.4037917852401733
    3. 'print' → logprob: -1.4037917852401733
    4. 'bin' → logprob: -1.9037917852401733
    5. ' result' → logprob: -3.028791904449463
    6. ' print' → logprob: -4.028791904449463
    7. ' bin' → logprob: -4.528791904449463
    8. 'res' (adapté à ' res') → logprob: -4.653791904449463
    9. ' b' → logprob: -4.653791904449463
    10. ' res' → logprob: -5.278791904449463

Token 185: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31488487124443054
    2. '=' → logprob: -1.314884901046753
    3. 'ult' → logprob: -6.439884662628174
    4. 'ults' → logprob: -11.439885139465332
    5. 'ault' → logprob: -12.564885139465332
    6. 'ULT' → logprob: -13.189885139465332
    7. ' ' → logprob: -13.439885139465332
    8. 'olt' → logprob: -13.564885139465332
    9. 'ultat' → logprob: -13.564885139465332
    10. '=float' → logprob: -14.064885139465332

Token 186: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.029750604182481766
    2. ' float' → logprob: -3.5297505855560303
    3. '(float' → logprob: -17.15475082397461
    4. '	float' → logprob: -17.90475082397461
    5. ' ' → logprob: -18.15475082397461
    6. '```' → logprob: -18.15475082397461
    7. '   ' → logprob: -18.40475082397461
    8. 'Float' → logprob: -18.52975082397461
    9. '`' → logprob: -18.65475082397461
    10. 'flo' → logprob: -18.90475082397461

Token 187: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: 0.0
    2. '_float' → logprob: -19.375
    3. '_' → logprob: -19.5
    4. '##_' → logprob: -20.125
    5. '_TO' → logprob: -20.625
    6. 'to' → logprob: -20.625
    7. '_t' → logprob: -20.875
    8. ' _' → logprob: -21.0
    9. '```' → logprob: -21.0
    10. ')_' → logprob: -21.125

Token 188: '_bin' (ID: 53631)
  Prédit: '_bin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bin' → logprob: -0.0024780353996902704
    2. 'bin' → logprob: -6.002478122711182
    3. '_' → logprob: -14.252477645874023
    4. ' bin' → logprob: -14.502477645874023
    5. 'float' → logprob: -14.627477645874023
    6. '_float' → logprob: -15.127477645874023
    7. 'Bin' → logprob: -16.127477645874023
    8. '_b' → logprob: -16.252477645874023
    9. 'b' → logprob: -16.627477645874023
    10. '(bin' → logprob: -16.752477645874023

Token 189: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00015860427811276168
    2. '(' → logprob: -8.750158309936523
    3. '(num' → logprob: -16.750158309936523
    4. '(res' → logprob: -17.875158309936523
    5. ' (' → logprob: -18.375158309936523
    6. '(
' → logprob: -18.375158309936523
    7. '(nx' → logprob: -20.125158309936523
    8. '((' → logprob: -20.500158309936523
    9. '(noun' → logprob: -20.500158309936523
    10. ')(' → logprob: -21.125158309936523

Token 190: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019323242595419288
    2. ')
' → logprob: -6.251932144165039
    3. ')
' → logprob: -13.626932144165039
    4. '(n' → logprob: -13.876932144165039
    5. ' )' → logprob: -14.751932144165039
    6. '   ' → logprob: -14.876932144165039
    7. ')

' → logprob: -15.501932144165039
    8. ')n' → logprob: -16.00193214416504
    9. '))' → logprob: -16.25193214416504
    10. '(' → logprob: -16.37693214416504

Token 191: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04226856306195259
    2. 'if' → logprob: -3.6672685146331787
    3. ' if' → logprob: -4.292268753051758
    4. 'print' → logprob: -6.292268753051758
    5. '<|end|>' → logprob: -8.542268753051758
    6. '
' → logprob: -9.917268753051758
    7. ' print' → logprob: -10.417268753051758
    8. '    
' → logprob: -10.917268753051758
    9. '```' → logprob: -11.917268753051758
    10. '	if' → logprob: -12.167268753051758

Token 192: ' print' (ID: 2123)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.004558646120131016
    2. ' if' → logprob: -6.004558563232422
    3. 'print' (adapté à ' print') → logprob: -6.254558563232422
    4. '   ' → logprob: -8.754558563232422
    5. ' print' → logprob: -13.629558563232422
    6. '```' → logprob: -16.379558563232422
    7. '	if' → logprob: -17.879558563232422
    8. '
' → logprob: -18.254558563232422
    9. ' ' → logprob: -19.129558563232422
    10. '``' → logprob: -19.879558563232422

Token 193: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.0007861602935008705
    2. '(' → logprob: -7.250786304473877
    3. '('' → logprob: -9.500785827636719
    4. '("' → logprob: -14.625785827636719
    5. '()' → logprob: -14.875785827636719
    6. '(f' → logprob: -15.125785827636719
    7. 'res' → logprob: -15.250785827636719
    8. '(result' → logprob: -16.37578582763672
    9. ' (' → logprob: -17.25078582763672
    10. '(re' → logprob: -17.87578582763672

Token 194: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6240566083070007e-06
    2. '())' → logprob: -14.625001907348633
    3. ' )' → logprob: -14.875001907348633
    4. ')`' → logprob: -14.875001907348633
    5. '))' → logprob: -15.500001907348633
    6. '()' → logprob: -15.750001907348633
    7. '`)' → logprob: -17.000001907348633
    8. ')
' → logprob: -18.375001907348633
    9. '')' → logprob: -18.625001907348633
    10. ')")' → logprob: -18.750001907348633

Token 195: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.005233763717114925
    2. ' res' → logprob: -5.2552337646484375
    3. '(res' → logprob: -19.630233764648438
    4. '
' → logprob: -21.005233764648438
    5. '$res' → logprob: -21.630233764648438
    6. '   ' → logprob: -21.755233764648438
    7. '	res' → logprob: -22.005233764648438
    8. ' ' → logprob: -22.380233764648438
    9. 're' → logprob: -23.130233764648438
    10. 'r' → logprob: -23.630233764648438

Token 196: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.025338158011436462
    2. 'is' → logprob: -3.7753381729125977
    3. 'else' → logprob: -6.275338172912598
    4. ' else' → logprob: -8.525338172912598
    5. '!=' → logprob: -11.650338172912598
    6. ' ' → logprob: -14.525338172912598
    7. ' !=' → logprob: -14.650338172912598
    8. ')' → logprob: -16.65033721923828
    9. 'in' → logprob: -16.90033721923828
    10. 'if' → logprob: -17.02533721923828

Token 197: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.428893506526947
    2. ' not' → logprob: -1.0538935661315918
    3. 'None' → logprob: -10.178893089294434
    4. '
' → logprob: -10.678893089294434
    5. '!' → logprob: -10.803893089294434
    6. 'Not' → logprob: -11.053893089294434
    7. '   ' → logprob: -11.303893089294434
    8. ' ' → logprob: -11.428893089294434
    9. '``' → logprob: -11.803893089294434
    10. '	not' → logprob: -11.803893089294434

Token 198: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -8.685467764735222e-05
    2. ' None' → logprob: -9.375086784362793
    3. '   ' → logprob: -13.250086784362793
    4. 'none' → logprob: -16.12508773803711
    5. '       ' → logprob: -17.37508773803711
    6. ' ' → logprob: -17.37508773803711
    7. '  ' → logprob: -17.62508773803711
    8. '_None' → logprob: -18.25008773803711
    9. '"' → logprob: -18.62508773803711
    10. 'False' → logprob: -19.75008773803711

Token 199: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.6935076117515564
    2. 'else' → logprob: -0.6935076117515564
    3. ')' → logprob: -8.068507194519043
    4. ' )' → logprob: -10.568507194519043
    5. ' ' → logprob: -11.068507194519043
    6. '```' → logprob: -13.193507194519043
    7. '	else' → logprob: -13.568507194519043
    8. ' ' → logprob: -14.443507194519043
    9. '    ' → logprob: -14.568507194519043
    10. '   ' → logprob: -14.568507194519043

Token 200: ' "' (ID: 392)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ERROR' → logprob: -0.573053777217865
    2. 'INVALID' → logprob: -1.4480538368225098
    3. '"' → logprob: -2.5730538368225098
    4. ' INVALID' → logprob: -3.5730538368225098
    5. ' ERROR' → logprob: -3.6980538368225098
    6. ' ' → logprob: -4.44805383682251
    7. 'NONE' → logprob: -4.82305383682251
    8. 'Invalid' → logprob: -4.82305383682251
    9. 'None' → logprob: -5.32305383682251
    10. 'Error' → logprob: -5.44805383682251

Token 201: 'NA' (ID: 9555)
  Prédit: 'error'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'error' → logprob: -0.8195470571517944
    2. 'ERROR' → logprob: -0.8195470571517944
    3. 'INVALID' → logprob: -2.694547176361084
    4. 'invalid' → logprob: -3.694547176361084
    5. 'Error' → logprob: -4.444547176361084
    6. 'NA' → logprob: -5.069547176361084
    7. 'Invalid' → logprob: -5.819547176361084
    8. ' ERROR' → logprob: -6.319547176361084
    9. 'NO' → logprob: -6.944547176361084
    10. 'ERR' → logprob: -7.694547176361084

Token 202: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -5.676981345459353e-06
    2. ')")' → logprob: -12.750005722045898
    3. '")
' → logprob: -13.000005722045898
    4. ')' → logprob: -15.125005722045898
    5. '"' → logprob: -15.875005722045898
    6. '");' → logprob: -17.6250057220459
    7. '!")' → logprob: -17.8750057220459
    8. 'NA' → logprob: -18.1250057220459
    9. '")

' → logprob: -18.2500057220459
    10. '')' → logprob: -18.3750057220459


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 200
Tokens correctement prédits (1ère position, stricte): 81
Tokens correctement prédits (1ère position, avec adaptation): 86
Tokens correctement prédits (top 10): 172
Précision stricte (1ère position): 40.50%
Précision adaptée (1ère position): 43.00%
Précision (top 10): 86.00%
================================================================================
