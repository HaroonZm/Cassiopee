================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 16:55:48
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

weights = [1 << i for i in range(10)]

for line in sys.stdin:
    w = line.strip()
    if not w:
        continue
    w = int(w)
    res = []
    for i in range(10):
        if w & (1 << i):
            res.append(str(weights[i]))
    print(" ".join(res))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'weights' (ID: 29630)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.042949914932251
    2. '.' → logprob: -1.167949914932251
    3. '<|end|>' → logprob: -2.292949914932251
    4. '' → logprob: -2.542949914932251
    5. 'import' → logprob: -2.542949914932251
    6. '#' → logprob: -3.792949914932251
    7. '\' → logprob: -4.417949676513672
    8. '
' → logprob: -4.792949676513672
    9. 'print' → logprob: -5.042949676513672
    10. ';' → logprob: -5.667949676513672

Token 4: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.055276595056056976
    2. '.' → logprob: -3.05527663230896
    3. '=' → logprob: -5.055276393890381
    4. ')' → logprob: -9.430276870727539
    5. ']' → logprob: -9.430276870727539
    6. '[
' → logprob: -10.430276870727539
    7. ',' → logprob: -10.930276870727539
    8. ' =' → logprob: -11.180276870727539
    9. '\[' → logprob: -11.180276870727539
    10. '```' → logprob: -11.430276870727539

Token 5: ' [' (ID: 723)
  Prédit: ' {}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {}' → logprob: -0.6196434497833252
    2. '{}' → logprob: -1.7446434497833252
    3. ' []' → logprob: -1.8696434497833252
    4. '[' → logprob: -2.494643449783325
    5. ' [' → logprob: -3.744643449783325
    6. '[]' → logprob: -3.869643449783325
    7. ' ' → logprob: -5.494643211364746
    8. ' {' → logprob: -7.244643211364746
    9. ' defaultdict' → logprob: -7.619643211364746
    10. '{' → logprob: -7.994643211364746

Token 6: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.022175004705786705
    2. ']' → logprob: -4.147174835205078
    3. '1' → logprob: -5.147174835205078
    4. '10' → logprob: -8.772174835205078
    5. ' ' → logprob: -10.522174835205078
    6. '<|end|>' → logprob: -10.647174835205078
    7. ']int' → logprob: -10.772174835205078
    8. ')' → logprob: -10.897174835205078
    9. '100' → logprob: -11.647174835205078
    10. ',' → logprob: -12.147174835205078

Token 7: ' <<' (ID: 2256)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.23822614550590515
    2. '0' → logprob: -1.6132261753082275
    3. ']' → logprob: -5.113225936889648
    4. '2' → logprob: -5.363225936889648
    5. '.' → logprob: -6.738225936889648
    6. ' ,' → logprob: -7.863225936889648
    7. ',
' → logprob: -8.988225936889648
    8. ')' → logprob: -9.613225936889648
    9. '1' → logprob: -9.738225936889648
    10. ' ' → logprob: -9.863225936889648

Token 8: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7643166184425354
    2. '0' → logprob: -2.0143165588378906
    3. '10' → logprob: -2.1393165588378906
    4. '1' → logprob: -2.3893165588378906
    5. '20' → logprob: -2.8893165588378906
    6. '7' → logprob: -3.5143165588378906
    7. '3' → logprob: -3.6393165588378906
    8. '30' → logprob: -4.389316558837891
    9. 'i' → logprob: -4.639316558837891
    10. '32' → logprob: -4.639316558837891

Token 9: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.025754988193511963
    2. ' ' → logprob: -4.275754928588867
    3. 'for' → logprob: -4.775754928588867
    4. ')' → logprob: -5.900754928588867
    5. ']' → logprob: -8.275754928588867
    6. ' )' → logprob: -10.275754928588867
    7. ' ]' → logprob: -10.775754928588867
    8. '```' → logprob: -11.150754928588867
    9. ' i' → logprob: -12.025754928588867
    10. '  ' → logprob: -12.150754928588867

Token 10: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.004550457466393709
    2. ' ' → logprob: -5.754550457000732
    3. 'range' → logprob: -6.629550457000732
    4. ' i' → logprob: -10.12955093383789
    5. ' xrange' → logprob: -11.87955093383789
    6. ' sys' → logprob: -13.12955093383789
    7. '	range' → logprob: -13.87955093383789
    8. '  ' → logprob: -14.62955093383789
    9. '_range' → logprob: -15.50455093383789
    10. ' in' → logprob: -15.50455093383789

Token 11: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00976199097931385
    2. 'in' → logprob: -4.634761810302734
    3. ' ' → logprob: -12.634761810302734
    4. '	in' → logprob: -14.384761810302734
    5. 'import' → logprob: -14.509761810302734
    6. '<|end|>' → logprob: -14.759761810302734
    7. 'range' → logprob: -15.134761810302734
    8. '```' → logprob: -15.509761810302734
    9. ')' → logprob: -16.134761810302734
    10. 'space' → logprob: -16.322261810302734

Token 12: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.012515183538198471
    2. 'range' → logprob: -4.387515068054199
    3. ' sys' → logprob: -13.2625150680542
    4. ' ' → logprob: -13.5125150680542
    5. ' xrange' → logprob: -13.5125150680542
    6. '	range' → logprob: -14.6375150680542
    7. '```' → logprob: -15.5125150680542
    8. '(range' → logprob: -15.7625150680542
    9. 'sys' → logprob: -16.262516021728516
    10. '  ' → logprob: -16.512516021728516

Token 13: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.000977075076662004
    2. '(len' → logprob: -7.000977039337158
    3. ' (' → logprob: -9.875977516174316
    4. '10' → logprob: -12.250977516174316
    5. '(n' → logprob: -12.875977516174316
    6. '20' → logprob: -13.750977516174316
    7. '8' → logprob: -13.875977516174316
    8. '32' → logprob: -14.000977516174316
    9. '9' → logprob: -14.125977516174316
    10. '6' → logprob: -14.375977516174316

Token 14: '10' (ID: 702)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.50979083776474
    2. '10' → logprob: -1.5097908973693848
    3. '32' → logprob: -2.5097908973693848
    4. '8' → logprob: -3.2597908973693848
    5. '16' → logprob: -3.3847908973693848
    6. '20' → logprob: -5.259790897369385
    7. '9' → logprob: -5.634790897369385
    8. '64' → logprob: -5.634790897369385
    9. '11' → logprob: -6.384790897369385
    10. '100' → logprob: -6.509790897369385

Token 15: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -2.3676733690081164e-05
    2. ' )' → logprob: -11.75002384185791
    3. ')' → logprob: -11.87502384185791
    4. ')])' → logprob: -12.50002384185791
    5. ']' → logprob: -13.25002384185791
    6. '])]' → logprob: -14.00002384185791
    7. '**' → logprob: -14.37502384185791
    8. '')]' → logprob: -14.87502384185791
    9. '```' → logprob: -15.37502384185791
    10. ')],' → logprob: -15.75002384185791

Token 16: 'for' (ID: 1938)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.057816743850708
    2. ']' → logprob: -1.057816743850708
    3. 'for' → logprob: -2.682816743850708
    4. '+' → logprob: -3.307816743850708
    5. '\n' → logprob: -3.307816743850708
    6. '[' → logprob: -3.557816743850708
    7. 'print' → logprob: -4.182816505432129
    8. '\' → logprob: -4.182816505432129
    9. '*' → logprob: -4.307816505432129
    10. '
' → logprob: -4.307816505432129

Token 17: ' line' (ID: 2543)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.25371789932250977
    2. ' w' → logprob: -2.2537178993225098
    3. '_' → logprob: -2.6287178993225098
    4. ' _' → logprob: -3.7537178993225098
    5. ' ' → logprob: -4.50371789932251
    6. 'i' → logprob: -5.00371789932251
    7. ' weight' → logprob: -5.50371789932251
    8. 'w' → logprob: -7.00371789932251
    9. ' ' → logprob: -8.878717422485352
    10. ' weights' → logprob: -8.878717422485352

Token 18: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06610393524169922
    2. 'in' → logprob: -2.816103935241699
    3. ':' → logprob: -6.066103935241699
    4. ' :' → logprob: -6.691103935241699
    5. '(' → logprob: -9.0661039352417
    6. 's' → logprob: -9.3161039352417
    7. ',' → logprob: -9.6911039352417
    8. ' ' → logprob: -9.8161039352417
    9. '.' → logprob: -10.4411039352417
    10. ' =' → logprob: -10.4411039352417

Token 19: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.2812645435333252
    2. 'sys' → logprob: -1.4062645435333252
    3. '=sys' → logprob: -9.531264305114746
    4. '	sys' → logprob: -10.906264305114746
    5. '(sys' → logprob: -11.281264305114746
    6. 'stdin' → logprob: -12.906264305114746
    7. ' iter' → logprob: -13.656264305114746
    8. '_' → logprob: -13.906264305114746
    9. 's' → logprob: -14.031264305114746
    10. ' ' → logprob: -14.281264305114746

Token 20: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.004461331758648157
    2. '.argv' → logprob: -6.129461288452148
    3. '.' → logprob: -6.379461288452148
    4. ' .' → logprob: -8.254461288452148
    5. '.stdout' → logprob: -8.504461288452148
    6. '.readline' → logprob: -10.254461288452148
    7. '.std' → logprob: -10.754461288452148
    8. '.input' → logprob: -11.004461288452148
    9. '.stderr' → logprob: -11.379461288452148
    10. 'stdin' → logprob: -11.879461288452148

Token 21: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00103352265432477
    2. '.readline' → logprob: -7.376033306121826
    3. '.strip' → logprob: -9.001033782958984
    4. '.' → logprob: -9.376033782958984
    5. ' :' → logprob: -9.501033782958984
    6. ':
' → logprob: -9.876033782958984
    7. ' in' → logprob: -10.876033782958984
    8. '.rstrip' → logprob: -11.126033782958984
    9. '.split' → logprob: -11.751033782958984
    10. ':**' → logprob: -11.876033782958984

Token 22: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03044428676366806
    2. '    
' → logprob: -3.530444383621216
    3. '     
' → logprob: -8.405444145202637
    4. '    ' → logprob: -8.655444145202637
    5. ' if' → logprob: -9.405444145202637
    6. '    
    
' → logprob: -9.905444145202637
    7. '```' → logprob: -10.155444145202637
    8. ' 
' → logprob: -11.030444145202637
    9. '    

' → logprob: -11.655444145202637
    10. ':' → logprob: -11.905444145202637

Token 23: ' w' (ID: 286)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13461127877235413
    2. ' line' → logprob: -2.1346113681793213
    3. ' data' → logprob: -6.509611129760742
    4. ' if' → logprob: -6.759611129760742
    5. ' stripped' → logprob: -6.759611129760742
    6. ' tokens' → logprob: -7.509611129760742
    7. ' print' → logprob: -7.509611129760742
    8. 'line' → logprob: -7.759611129760742
    9. ' for' → logprob: -7.884611129760742
    10. ' result' → logprob: -8.134611129760742

Token 24: ' =' (ID: 314)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.2561061680316925
    2. 'eight' → logprob: -1.5061061382293701
    3. 'eig' → logprob: -6.506106376647949
    4. '=' → logprob: -7.381106376647949
    5. ' =' → logprob: -7.381106376647949
    6. 'ei' → logprob: -7.381106376647949
    7. '_e' → logprob: -7.881106376647949
    8. '=e' → logprob: -9.50610637664795
    9. ' eight' → logprob: -9.63110637664795
    10. 'eit' → logprob: -9.75610637664795

Token 25: ' line' (ID: 2543)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.2112724632024765
    2. ' int' → logprob: -1.8362724781036377
    3. 'line' → logprob: -3.8362724781036377
    4. ' line' → logprob: -4.711272239685059
    5. 'float' → logprob: -8.586272239685059
    6. '   ' → logprob: -9.586272239685059
    7. '[int' → logprob: -9.711272239685059
    8. ' float' → logprob: -9.961272239685059
    9. 'len' → logprob: -10.336272239685059
    10. 'list' → logprob: -11.211272239685059

Token 26: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.13479265570640564
    2. '.' → logprob: -2.8847925662994385
    3. '.rstrip' → logprob: -2.8847925662994385
    4. '.split' → logprob: -4.259792804718018
    5. '.startswith' → logprob: -9.38479232788086
    6. '.find' → logprob: -9.75979232788086
    7. '.replace' → logprob: -10.50979232788086
    8. '.count' → logprob: -11.25979232788086
    9. 'strip' → logprob: -11.63479232788086
    10. '.readline' → logprob: -11.88479232788086

Token 27: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.061701539903879166
    2. '().' → logprob: -2.936701536178589
    3. '(' → logprob: -5.061701774597168
    4. '()(' → logprob: -9.061701774597168
    5. ' ()' → logprob: -10.061701774597168
    6. '()`' → logprob: -10.186701774597168
    7. '()==' → logprob: -10.311701774597168
    8. '('' → logprob: -10.436701774597168
    9. '.' → logprob: -10.936701774597168
    10. '().'' → logprob: -11.186701774597168

Token 28: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.48220282793045044
    2. 'if' → logprob: -1.4822027683258057
    3. '   ' → logprob: -2.9822027683258057
    4. ' ==' → logprob: -3.6072027683258057
    5. '.' → logprob: -3.8572027683258057
    6. '==' → logprob: -4.607203006744385
    7. ')' → logprob: -4.982203006744385
    8. ' =' → logprob: -4.982203006744385
    9. '.split' → logprob: -4.982203006744385
    10. ' and' → logprob: -5.107203006744385

Token 29: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5262329578399658
    2. 'if' (adapté à ' if') → logprob: -1.4012329578399658
    3. 'split' → logprob: -2.401232957839966
    4. ' =' → logprob: -3.651232957839966
    5. ' ' → logprob: -4.026232719421387
    6. '=' → logprob: -5.401232719421387
    7. '<|end|>' → logprob: -5.526232719421387
    8. ')' → logprob: -5.776232719421387
    9. 'isdigit' → logprob: -5.901232719421387
    10. 's' → logprob: -6.401232719421387

Token 30: ' not' (ID: 625)
  Prédit: ' w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.44142046570777893
    2. ' not' → logprob: -1.0664204359054565
    3. 'w' → logprob: -5.191420555114746
    4. ' ' → logprob: -5.316420555114746
    5. 'not' → logprob: -6.566420555114746
    6. ' len' → logprob: -8.316420555114746
    7. '"' → logprob: -8.566420555114746
    8. ''' → logprob: -8.941420555114746
    9. ' '' → logprob: -9.566420555114746
    10. ' ' → logprob: -10.191420555114746

Token 31: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.003196727717295289
    2. 'w' → logprob: -5.753196716308594
    3. ' ' → logprob: -11.003196716308594
    4. ' ' → logprob: -13.878196716308594
    5. '  ' → logprob: -15.378196716308594
    6. '`' → logprob: -15.503196716308594
    7. '```' → logprob: -15.503196716308594
    8. ' isinstance' → logprob: -16.253196716308594
    9. ' weights' → logprob: -16.565696716308594
    10. ')' → logprob: -16.628196716308594

Token 32: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010061351349577308
    2. ':
' → logprob: -7.876006126403809
    3. ' or' → logprob: -8.001006126403809
    4. ' :' → logprob: -8.251006126403809
    5. ':return' → logprob: -11.251006126403809
    6. '.' → logprob: -12.376006126403809
    7. '):' → logprob: -13.376006126403809
    8. '   ' → logprob: -13.376006126403809
    9. ':

' → logprob: -13.501006126403809
    10. '.is' → logprob: -13.626006126403809

Token 33: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009101522737182677
    2. ' continue' → logprob: -7.50091028213501
    3. '   ' → logprob: -8.125909805297852
    4. ' break' → logprob: -10.625909805297852
    5. 'continue' → logprob: -10.875909805297852
    6. '    ' → logprob: -12.250909805297852
    7. ' ' → logprob: -13.000909805297852
    8. '```' → logprob: -13.250909805297852
    9. ' continues' → logprob: -13.625909805297852
    10. '	continue' → logprob: -14.000909805297852

Token 34: ' continue' (ID: 4901)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.06961280852556229
    2. 'break' → logprob: -2.819612741470337
    3. '       ' → logprob: -5.069612979888916
    4. '   ' → logprob: -6.819612979888916
    5. '	break' → logprob: -9.319612503051758
    6. ' continue' → logprob: -9.319612503051758
    7. 'continue' (adapté à ' continue') → logprob: -10.944612503051758
    8. '_break' → logprob: -11.569612503051758
    9. '           ' → logprob: -11.819612503051758
    10. '    ' → logprob: -11.819612503051758

Token 35: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022071335464715958
    2. '    
' → logprob: -4.522071361541748
    3. '       ' → logprob: -5.522071361541748
    4. '<|end|>' → logprob: -5.522071361541748
    5. ',' → logprob: -7.272071361541748
    6. ':' → logprob: -7.772071361541748
    7. '    ' → logprob: -8.14707088470459
    8. '        
' → logprob: -8.39707088470459
    9. ')' → logprob: -8.52207088470459
    10. '#' → logprob: -8.77207088470459

Token 36: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005475651938468218
    2. '    
' → logprob: -5.3804755210876465
    3. '
' → logprob: -8.380475997924805
    4. ' if' → logprob: -9.380475997924805
    5. '   
' → logprob: -9.380475997924805
    6. '  ' → logprob: -9.880475997924805
    7. '    ' → logprob: -10.255475997924805
    8. 'print' → logprob: -10.255475997924805
    9. '<|end|>' → logprob: -10.380475997924805
    10. '  
' → logprob: -10.755475997924805

Token 37: ' w' (ID: 286)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'value' → logprob: -1.309651255607605
    2. ' value' → logprob: -1.934651255607605
    3. ' val' → logprob: -2.1846513748168945
    4. '   ' → logprob: -2.8096513748168945
    5. ' n' → logprob: -3.1846513748168945
    6. 'val' → logprob: -3.5596513748168945
    7. 'num' → logprob: -3.5596513748168945
    8. ' if' → logprob: -3.6846513748168945
    9. 'weight' → logprob: -3.6846513748168945
    10. 'print' → logprob: -3.8096513748168945

Token 38: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15490543842315674
    2. '=' → logprob: -2.029905319213867
    3. '_val' → logprob: -5.904905319213867
    4. '_tokens' → logprob: -6.654905319213867
    5. '[' → logprob: -6.904905319213867
    6. '_len' → logprob: -7.279905319213867
    7. '_values' → logprob: -7.279905319213867
    8. '=int' → logprob: -7.529905319213867
    9. ' in' → logprob: -7.654905319213867
    10. 's' → logprob: -7.904905319213867

Token 39: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.24066868424415588
    2. ' int' → logprob: -1.9906686544418335
    3. 'w' → logprob: -2.990668773651123
    4. ' w' → logprob: -3.990668773651123
    5. 'list' → logprob: -5.365668773651123
    6. ' list' → logprob: -6.115668773651123
    7. 'float' → logprob: -7.740668773651123
    8. '[int' → logprob: -8.115668296813965
    9. 'len' → logprob: -8.365668296813965
    10. ' [' → logprob: -8.990668296813965

Token 40: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.0011715330183506012
    2. '(' → logprob: -6.751171588897705
    3. '(s' → logprob: -14.376171112060547
    4. '(u' → logprob: -16.001171112060547
    5. '(weights' → logprob: -16.001171112060547
    6. ' (' → logprob: -16.376171112060547
    7. 'w' → logprob: -16.876171112060547
    8. '(weight' → logprob: -17.001171112060547
    9. '(line' → logprob: -17.501171112060547
    10. '(x' → logprob: -17.626171112060547

Token 41: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00018816311785485595
    2. ' )' → logprob: -8.875187873840332
    3. '))' → logprob: -10.750187873840332
    4. ')
' → logprob: -11.250187873840332
    5. ',' → logprob: -13.000187873840332
    6. ')`' → logprob: -13.000187873840332
    7. '   ' → logprob: -13.250187873840332
    8. ')))' → logprob: -13.625187873840332
    9. ')**' → logprob: -13.875187873840332
    10. '`)' → logprob: -14.250187873840332

Token 42: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41280069947242737
    2. ' if' → logprob: -1.287800669670105
    3. 'if' → logprob: -3.7878007888793945
    4. '+' → logprob: -4.6628007888793945
    5. '<|end|>' → logprob: -5.2878007888793945
    6. ' ' → logprob: -5.4128007888793945
    7. '    
' → logprob: -5.5378007888793945
    8. '    ' → logprob: -5.7878007888793945
    9. ' for' → logprob: -5.9128007888793945
    10. '[' → logprob: -6.2878007888793945

Token 43: ' res' (ID: 694)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7449718117713928
    2. ' result' → logprob: -1.619971752166748
    3. ' total' → logprob: -2.244971752166748
    4. ' for' → logprob: -2.619971752166748
    5. ' res' → logprob: -3.494971752166748
    6. ' ans' → logprob: -3.494971752166748
    7. ' s' → logprob: -4.119971752166748
    8. ' sum' → logprob: -4.494971752166748
    9. ' answer' → logprob: -4.869971752166748
    10. ' count' → logprob: -4.869971752166748

Token 44: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18838007748126984
    2. 'ult' → logprob: -2.563380002975464
    3. ' +=' → logprob: -3.063380002975464
    4. '=' → logprob: -3.188380002975464
    5. 'ults' → logprob: -5.188380241394043
    6. '+=' → logprob: -8.313380241394043
    7. ' ' → logprob: -8.688380241394043
    8. 's' → logprob: -8.688380241394043
    9. 'ultat' → logprob: -9.063380241394043
    10. 'ault' → logprob: -9.188380241394043

Token 45: ' []
' (ID: 8911)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2558731138706207
    2. ' ' → logprob: -1.6308730840682983
    3. ' w' → logprob: -4.630873203277588
    4. ' sum' → logprob: -4.880873203277588
    5. 'sum' → logprob: -5.380873203277588
    6. '"' → logprob: -6.005873203277588
    7. '[]' → logprob: -6.755873203277588
    8. ''' → logprob: -6.755873203277588
    9. ' []' → logprob: -7.005873203277588
    10. 'w' → logprob: -7.380873203277588

Token 46: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.49960172176361084
    2. '   ' → logprob: -1.1246017217636108
    3. 'for' → logprob: -2.8746018409729004
    4. '<|end|>' → logprob: -5.3746018409729
    5. ' ' → logprob: -5.7496018409729
    6. '    ' → logprob: -6.3746018409729
    7. '    
' → logprob: -6.8746018409729
    8. ' 
' → logprob: -7.8746018409729
    9. '```' → logprob: -8.124601364135742
    10. '[' → logprob: -8.999601364135742

Token 47: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.38746920228004456
    2. 'for' (adapté à ' for') → logprob: -1.1374691724777222
    3. '   ' → logprob: -8.262469291687012
    4. ' ' → logprob: -8.512469291687012
    5. ' while' → logprob: -9.637469291687012
    6. '    ' → logprob: -10.637469291687012
    7. 'while' → logprob: -11.387469291687012
    8. ' if' → logprob: -11.637469291687012
    9. ' i' → logprob: -12.012469291687012
    10. '<|end|>' → logprob: -12.512469291687012

Token 48: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.026132499799132347
    2. 'i' → logprob: -4.026132583618164
    3. ' range' → logprob: -5.276132583618164
    4. ' weights' → logprob: -7.026132583618164
    5. ' j' → logprob: -7.526132583618164
    6. ' weight' → logprob: -7.776132583618164
    7. ' ' → logprob: -8.401132583618164
    8. ' b' → logprob: -8.651132583618164
    9. ' bit' → logprob: -8.651132583618164
    10. ' w' → logprob: -9.651132583618164

Token 49: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012718833051621914
    2. 'in' → logprob: -4.387718677520752
    3. ' ' → logprob: -8.63771915435791
    4. ',' → logprob: -11.01271915435791
    5. '<|end|>' → logprob: -11.76271915435791
    6. ' ,' → logprob: -13.01271915435791
    7. '  ' → logprob: -13.38771915435791
    8. ' range' → logprob: -13.88771915435791
    9. '	in' → logprob: -14.01271915435791
    10. 'range' → logprob: -14.13771915435791

Token 50: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3148972988128662
    2. 'range' → logprob: -1.3148972988128662
    3. ' weights' → logprob: -6.814897537231445
    4. 'weights' → logprob: -7.689897537231445
    5. '	range' → logprob: -10.939897537231445
    6. ' ' → logprob: -11.064897537231445
    7. '   ' → logprob: -11.439897537231445
    8. ' reversed' → logprob: -11.564897537231445
    9. ' xrange' → logprob: -11.939897537231445
    10. '(range' → logprob: -12.189897537231445

Token 51: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05555596947669983
    2. '10' → logprob: -2.930556058883667
    3. '(len' → logprob: -7.430555820465088
    4. ' (' → logprob: -10.180556297302246
    5. 'len' → logprob: -10.555556297302246
    6. ' ' → logprob: -11.430556297302246
    7. ' len' → logprob: -13.055556297302246
    8. ')' → logprob: -13.930556297302246
    9. '1' → logprob: -14.680556297302246
    10. '9' → logprob: -15.055556297302246

Token 52: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0008484598365612328
    2. 'len' → logprob: -7.500848293304443
    3. '1' → logprob: -8.875848770141602
    4. ' ' → logprob: -9.000848770141602
    5. ' len' → logprob: -11.625848770141602
    6. '9' → logprob: -11.750848770141602
    7. '0' → logprob: -11.875848770141602
    8. '11' → logprob: -12.750848770141602
    9. '   ' → logprob: -13.625848770141602
    10. '(' → logprob: -14.125848770141602

Token 53: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06624173372983932
    2. '):
' → logprob: -2.81624174118042
    3. '+' → logprob: -6.06624174118042
    4. ',' → logprob: -7.81624174118042
    5. ')' → logprob: -7.94124174118042
    6. ' ):' → logprob: -7.94124174118042
    7. '-' → logprob: -8.066241264343262
    8. '   ' → logprob: -8.566241264343262
    9. '):
' → logprob: -9.566241264343262
    10. ' +' → logprob: -10.066241264343262

Token 54: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2808607220649719
    2. '    ' → logprob: -2.405860662460327
    3. '   ' → logprob: -2.655860662460327
    4. ' ' → logprob: -3.280860662460327
    5. ' if' → logprob: -3.655860662460327
    6. '<|end|>' → logprob: -4.155860900878906
    7. 'if' → logprob: -6.405860900878906
    8. ':' → logprob: -7.280860900878906
    9. '<|end|>' → logprob: -7.780860900878906
    10. '        ' → logprob: -7.780860900878906

Token 55: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0706179291009903
    2. ' ' → logprob: -3.445617914199829
    3. 'if' (adapté à ' if') → logprob: -4.070618152618408
    4. '    ' → logprob: -4.195618152618408
    5. ' res' → logprob: -6.445618152618408
    6. '   ' → logprob: -6.695618152618408
    7. '       ' → logprob: -7.695618152618408
    8. ' 
' → logprob: -8.44561767578125
    9. ' ' → logprob: -8.82061767578125
    10. '<|end|>' → logprob: -8.82061767578125

Token 56: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.014871849678456783
    2. 'w' → logprob: -4.639872074127197
    3. ' (' → logprob: -5.764872074127197
    4. ' weights' → logprob: -6.639872074127197
    5. '(w' → logprob: -8.014871597290039
    6. ' ' → logprob: -8.389871597290039
    7. '(' → logprob: -10.264871597290039
    8. '(weights' → logprob: -10.389871597290039
    9. 'weights' → logprob: -10.889871597290039
    10. '	w' → logprob: -12.827371597290039

Token 57: ' &' (ID: 827)
  Prédit: ' &'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.08896258473396301
    2. '&' → logprob: -2.4639625549316406
    3. ' ' → logprob: -11.58896255493164
    4. ' ' → logprob: -12.96396255493164
    5. ' &
' → logprob: -13.21396255493164
    6. '&nbsp' → logprob: -13.58896255493164
    7. '>>' → logprob: -13.71396255493164
    8. '&r' → logprob: -13.96396255493164
    9. '&amp' → logprob: -14.08896255493164
    10. '&
' → logprob: -14.21396255493164

Token 58: ' (' (ID: 350)
  Prédit: ' weights'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' weights' → logprob: -0.018589310348033905
    2. 'weights' → logprob: -4.018589496612549
    3. '(weights' → logprob: -8.01858901977539
    4. ' (' → logprob: -9.51858901977539
    5. '_weights' → logprob: -11.26858901977539
    6. '<|end|>' → logprob: -12.01858901977539
    7. ' ' → logprob: -12.39358901977539
    8. ' weight' → logprob: -12.89358901977539
    9. '    ' → logprob: -13.64358901977539
    10. '(' → logprob: -13.64358901977539

Token 59: '1' (ID: 16)
  Prédit: 'weights'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weights' → logprob: -0.34920039772987366
    2. ' weights' → logprob: -1.2242003679275513
    3. '1' → logprob: -7.474200248718262
    4. '(weights' → logprob: -8.849200248718262
    5. ' (' → logprob: -11.224200248718262
    6. '(' → logprob: -11.349200248718262
    7. ' ' → logprob: -11.599200248718262
    8. 'weight' → logprob: -12.349200248718262
    9. '   ' → logprob: -13.224200248718262
    10. '_weights' → logprob: -13.349200248718262

Token 60: ' <<' (ID: 2256)
  Prédit: ' <<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <<' → logprob: -0.054888151586055756
    2. '<<' → logprob: -2.9298882484436035
    3. ' <' → logprob: -13.304887771606445
    4. ' ' → logprob: -13.679887771606445
    5. '<' → logprob: -14.179887771606445
    6. ')' → logprob: -14.554887771606445
    7. '   ' → logprob: -15.054887771606445
    8. '1' → logprob: -15.179887771606445
    9. '<<<' → logprob: -15.179887771606445
    10. '000' → logprob: -15.304887771606445

Token 61: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04860281944274902
    2. ' i' → logprob: -3.048602819442749
    3. '   ' → logprob: -11.923603057861328
    4. ' ' → logprob: -12.298603057861328
    5. '	i' → logprob: -13.173603057861328
    6. '    ' → logprob: -13.798603057861328
    7. ')i' → logprob: -14.923603057861328
    8. ')' → logprob: -14.923603057861328
    9. '(i' → logprob: -15.298603057861328
    10. '     ' → logprob: -16.173603057861328

Token 62: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009839429520070553
    2. '):
' → logprob: -4.7598395347595215
    3. ')' → logprob: -6.8848395347595215
    4. ' ):' → logprob: -8.884839057922363
    5. '):
' → logprob: -10.884839057922363
    6. ':' → logprob: -11.009839057922363
    7. ')!=' → logprob: -11.634839057922363
    8. ')==' → logprob: -12.009839057922363
    9. '):

' → logprob: -13.134839057922363
    10. ' ):
' → logprob: -13.509839057922363

Token 63: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07091902196407318
    2. ' res' → logprob: -3.4459190368652344
    3. 'res' → logprob: -3.8209190368652344
    4. '       ' → logprob: -4.445919036865234
    5. ':' → logprob: -7.195919036865234
    6. '               ' → logprob: -7.945919036865234
    7. ' ' → logprob: -8.320919036865234
    8. '
' → logprob: -8.320919036865234
    9. ' ' → logprob: -8.570919036865234
    10. '```' → logprob: -8.695919036865234

Token 64: ' res' (ID: 694)
  Prédit: ' res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.31440967321395874
    2. 'res' (adapté à ' res') → logprob: -1.3144097328186035
    3. ' ' → logprob: -7.8144097328186035
    4. '           ' → logprob: -8.189409255981445
    5. '       ' → logprob: -8.814409255981445
    6. ' ' → logprob: -9.189409255981445
    7. '               ' → logprob: -9.939409255981445
    8. '   ' → logprob: -10.064409255981445
    9. ' 
' → logprob: -10.564409255981445
    10. '
' → logprob: -11.189409255981445

Token 65: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.006723302416503429
    2. '.' → logprob: -5.006723403930664
    3. ' .' → logprob: -12.256723403930664
    4. '.Append' → logprob: -13.506723403930664
    5. '.app' → logprob: -14.006723403930664
    6. 'append' → logprob: -15.256723403930664
    7. '.extend' → logprob: -15.256723403930664
    8. '.add' → logprob: -15.756723403930664
    9. '.ap' → logprob: -16.631723403930664
    10. '].' → logprob: -16.881723403930664

Token 66: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.952690601348877
    2. '(weights' → logprob: -1.077690601348877
    3. '(f' → logprob: -1.452690601348877
    4. '('' → logprob: -4.077690601348877
    5. '(' → logprob: -4.327690601348877
    6. '(chr' → logprob: -5.827690601348877
    7. '(i' → logprob: -6.202690601348877
    8. '("("' → logprob: -6.577690601348877
    9. 'f' → logprob: -7.452690601348877
    10. '("' → logprob: -7.577690601348877

Token 67: '(weights' (ID: 154124)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.28581854701042175
    2. '(weights' → logprob: -1.4108185768127441
    3. '(' → logprob: -5.410818576812744
    4. '((' → logprob: -9.285818099975586
    5. 'weights' → logprob: -10.160818099975586
    6. '(w' → logprob: -11.535818099975586
    7. '   ' → logprob: -11.785818099975586
    8. '("("' → logprob: -12.160818099975586
    9. '(weight' → logprob: -12.410818099975586
    10. ')(' → logprob: -12.535818099975586

Token 68: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.726595241460018e-05
    2. '[' → logprob: -10.25003719329834
    3. ' [' → logprob: -14.62503719329834
    4. ')[' → logprob: -14.75003719329834
    5. ')' → logprob: -15.12503719329834
    6. ' ' → logprob: -15.62503719329834
    7. '   ' → logprob: -15.62503719329834
    8. ')i' → logprob: -16.625038146972656
    9. '[j' → logprob: -16.750038146972656
    10. '```' → logprob: -16.875038146972656

Token 69: ']))
' (ID: 24801)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.026963455602526665
    2. '))' → logprob: -4.151963233947754
    3. ')))' → logprob: -4.901963233947754
    4. ']' → logprob: -6.526963233947754
    5. ']))
' → logprob: -7.026963233947754
    6. '])' → logprob: -7.651963233947754
    7. ')' → logprob: -8.276963233947754
    8. '']))' → logprob: -9.526963233947754
    9. ')])' → logprob: -9.776963233947754
    10. '[' → logprob: -10.026963233947754

Token 70: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09276862442493439
    2. '    
' → logprob: -3.967768669128418
    3. ''' → logprob: -4.092768669128418
    4. '+' → logprob: -4.342768669128418
    5. '[' → logprob: -4.342768669128418
    6. ' 
' → logprob: -5.967768669128418
    7. '\n' → logprob: -6.092768669128418
    8. ')
' → logprob: -6.092768669128418
    9. '+
' → logprob: -6.092768669128418
    10. ')' → logprob: -6.217768669128418

Token 71: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04739387705922127
    2. 'print' (adapté à ' print') → logprob: -4.047393798828125
    3. '[' → logprob: -4.547393798828125
    4. ''' → logprob: -5.297393798828125
    5. '    
' → logprob: -5.672393798828125
    6. '"' → logprob: -6.172393798828125
    7. '+' → logprob: -7.297393798828125
    8. '.' → logprob: -7.297393798828125
    9. ',' → logprob: -7.297393798828125
    10. '[]' → logprob: -7.547393798828125

Token 72: '("' (ID: 568)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.06376451253890991
    2. '("' → logprob: -2.8137645721435547
    3. '(' → logprob: -6.813764572143555
    4. '("("' → logprob: -7.563764572143555
    5. '(","' → logprob: -9.313764572143555
    6. '(',' → logprob: -10.313764572143555
    7. ''' → logprob: -10.438764572143555
    8. '"' → logprob: -11.813764572143555
    9. ' ('' → logprob: -11.813764572143555
    10. ' ("' → logprob: -12.938764572143555

Token 73: ' ".' (ID: 11730)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7615933418273926
    2. '"' → logprob: -1.2615933418273926
    3. ' "' → logprob: -1.8865933418273926
    4. ' ".' → logprob: -3.6365933418273926
    5. ' +' → logprob: -4.136593341827393
    6. ' "+' → logprob: -4.761593341827393
    7. ' ","' → logprob: -4.761593341827393
    8. ' ",' → logprob: -4.886593341827393
    9. ' ")' → logprob: -5.261593341827393
    10. ',' → logprob: -5.511593341827393

Token 74: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -6.511406809295295e-06
    2. ' join' → logprob: -12.000006675720215
    3. 'jo' → logprob: -16.1250057220459
    4. 'j' → logprob: -16.6250057220459
    5. 'print' → logprob: -17.7500057220459
    6. '```' → logprob: -19.0000057220459
    7. '".' → logprob: -19.3750057220459
    8. '.join' → logprob: -19.3750057220459
    9. '"' → logprob: -19.5000057220459
    10. '(join' → logprob: -19.6250057220459

Token 75: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -1.4498052223643754e-05
    2. 'res' → logprob: -11.250014305114746
    3. '(' → logprob: -13.500014305114746
    4. ')' → logprob: -17.750015258789062
    5. ' (' → logprob: -17.750015258789062
    6. ',res' → logprob: -18.750015258789062
    7. '(re' → logprob: -19.000015258789062
    8. ' res' → logprob: -19.250015258789062
    9. '=res' → logprob: -19.625015258789062
    10. '	res' → logprob: -19.750015258789062

Token 76: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0009164590737782419
    2. ')' → logprob: -7.000916481018066
    3. ')))' → logprob: -12.875916481018066
    4. '))
' → logprob: -13.125916481018066
    5. ' ))' → logprob: -16.37591552734375
    6. '"))' → logprob: -16.50091552734375
    7. '()))' → logprob: -17.37591552734375
    8. '   ' → logprob: -17.75091552734375
    9. ')
' → logprob: -18.00091552734375
    10. '])' → logprob: -18.12591552734375


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 74
Tokens correctement prédits (1ère position, stricte): 37
Tokens correctement prédits (1ère position, avec adaptation): 37
Tokens correctement prédits (top 10): 64
Précision stricte (1ère position): 50.00%
Précision adaptée (1ère position): 50.00%
Précision (top 10): 86.49%
================================================================================
