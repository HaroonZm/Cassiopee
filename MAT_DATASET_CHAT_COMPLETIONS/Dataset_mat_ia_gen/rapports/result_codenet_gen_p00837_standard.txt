================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:03:53
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from collections import deque
import sys

def process():
    input = sys.stdin.readline
    while True:
        m,c,n = map(int,input().split())
        if m==0 and c==0 and n==0:
            break
        requests = []
        for _ in range(n):
            k = int(input())
            books = list(map(int,input().split()))
            requests.append(deque(books))
        # queue of students who still have requests
        queue = deque(i for i in range(n) if requests[i])
        # desks: list of lists, each desk holds books (IDs)
        desks = [[] for _ in range(m)]
        # shelf: holds books not in desks
        shelf = set()
        # initially no books in desks => all books are on shelf
        # get all unique books from requests
        all_books = set()
        for rq in requests:
            all_books.update(rq)
        shelf = all_books.copy()
        # For tracking which book is where: desk index 0..m-1 or shelf m
        book_pos = {}
        for b in shelf:
            book_pos[b] = m  # shelf index is m
        # For tracking usage order in D1: list of books in order of usage, most recent last
        d1_lst = []
        cost = 0
        while queue:
            i = queue.popleft()
            b = requests[i].popleft()
            # locate book b
            loc = book_pos[b]
            # librarian enters storeroom to find the book:
            # cost for finding book = access to desk or shelf once to take it
            cost += loc+1
            # remove book from its current place
            if loc == m:
                shelf.remove(b)
            else:
                desks[loc].remove(b)
            # Now check if D1 not full
            if len(desks[0]) < c:
                # put book on D1
                desks[0].append(b)
                book_pos[b] = 0
                # cost of putting book on D1
                cost += 1
                # update usage for D1 books
                # remove if exists & add to last (MRU)
                if b in d1_lst:
                    d1_lst.remove(b)
                d1_lst.append(b)
            else:
                # D1 full
                # temporarily put requested book on nearest non full desk to entrance (D1 excluded) or shelf if all full
                placed = False
                for d in range(1,m):
                    if len(desks[d]) < c:
                        desks[d].append(b)
                        book_pos[b] = d
                        cost += d+1
                        placed=True
                        break
                if not placed:
                    # put on shelf
                    shelf.add(b)
                    book_pos[b] = m
                    cost += m+1
                # find LRU book on D1
                # d1_lst stores usage order, first is LRU
                lru = d1_lst.pop(0)
                # remove LRU book from D1
                desks[0].remove(lru)
                book_pos[lru] = None
                # put lru on nearest non full desk except D1 or shelf if all full
                placed = False
                for d in range(1,m):
                    if len(desks[d]) < c:
                        desks[d].append(lru)
                        book_pos[lru] = d
                        cost += d+1
                        placed=True
                        break
                if not placed:
                    shelf.add(lru)
                    book_pos[lru] = m
                    cost += m+1
                # take requested book back from its temporary place
                loc2 = book_pos[b]
                cost += loc2+1
                if loc2 == m:
                    shelf.remove(b)
                else:
                    desks[loc2].remove(b)
                # put requested book on D1
                desks[0].append(b)
                book_pos[b] = 0
                cost += 1
                # update usage list
                d1_lst.append(b)
            # if student still has requests, add at end of queue
            if requests[i]:
                queue.append(i)
        print(cost)

if __name__=="__main__":
    process()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' collections' (ID: 22690)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -1.0052199363708496
    2. 'default' → logprob: -1.3802199363708496
    3. 'abc' → logprob: -1.7552199363708496
    4. 'Counter' → logprob: -2.1302199363708496
    5. ' defaultdict' → logprob: -2.6302199363708496
    6. ' Counter' → logprob: -5.00521993637085
    7. 'named' → logprob: -5.38021993637085
    8. ' abc' → logprob: -5.75521993637085
    9. ' deque' → logprob: -6.38021993637085
    10. '```' → logprob: -6.63021993637085

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011602983810007572
    2. '\' → logprob: -5.636602878570557
    3. '\n' → logprob: -6.511602878570557
    4. '\(' → logprob: -6.511602878570557
    5. '.' → logprob: -6.636602878570557
    6. '[' → logprob: -7.011602878570557
    7. '```' → logprob: -7.261602878570557
    8. '(
' → logprob: -7.511602878570557
    9. ' (' → logprob: -8.011603355407715
    10. '`' → logprob: -8.261603355407715

Token 5: 'import' (ID: 561)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.29625362157821655
    2. 'd' → logprob: -2.0462536811828613
    3. '\' → logprob: -3.7962536811828613
    4. '\n' → logprob: -3.7962536811828613
    5. 'a' → logprob: -4.296253681182861
    6. '[' → logprob: -4.546253681182861
    7. '(
' → logprob: -4.671253681182861
    8. ',' → logprob: -4.796253681182861
    9. '
' → logprob: -4.796253681182861
    10. '.' → logprob: -5.296253681182861

Token 6: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.17115278542041779
    2. ' os' → logprob: -2.5461528301239014
    3. ' collections' → logprob: -2.7961528301239014
    4. ' ' → logprob: -4.796152591705322
    5. ' re' → logprob: -5.546152591705322
    6. ' itertools' → logprob: -6.171152591705322
    7. ' queue' → logprob: -6.421152591705322
    8. ' heap' → logprob: -7.921152591705322
    9. ' math' → logprob: -7.921152591705322
    10. ' json' → logprob: -8.29615306854248

Token 7: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.2563204765319824
    2. '\' → logprob: -1.7563204765319824
    3. '.' → logprob: -3.7563204765319824
    4. '
' → logprob: -4.256320476531982
    5. '```' → logprob: -5.006320476531982
    6. 'newline' → logprob: -5.881320476531982
    7. 'for' → logprob: -6.381320476531982
    8. 'import' → logprob: -7.506320476531982
    9. '`' → logprob: -7.506320476531982
    10. '' → logprob: -7.506320476531982

Token 8: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7969331741333008
    2. 'data' → logprob: -2.046933174133301
    3. 'd' → logprob: -2.171933174133301
    4. 'for' → logprob: -3.046933174133301
    5. '`' → logprob: -3.171933174133301
    6. '=' → logprob: -3.421933174133301
    7. '\' → logprob: -3.546933174133301
    8. 'input' → logprob: -3.671933174133301
    9. 'def' → logprob: -3.796933174133301
    10. '_' → logprob: -3.921933174133301

Token 9: ' process' (ID: 2273)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.038085438311100006
    2. ' bfs' → logprob: -3.788085460662842
    3. ' process' → logprob: -5.163085460662842
    4. ' breadth' → logprob: -6.788085460662842
    5. ' space' → logprob: -7.038085460662842
    6. ' read' → logprob: -7.163085460662842
    7. ' de' → logprob: -7.288085460662842
    8. ' deque' → logprob: -7.413085460662842
    9. ' main' → logprob: -7.663085460662842
    10. ' dequeue' → logprob: -7.913085460662842

Token 10: '():
' (ID: 8595)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2579069137573242
    2. '(' → logprob: -1.8829069137573242
    3. '_queue' → logprob: -3.757906913757324
    4. '_data' → logprob: -3.882906913757324
    5. '_line' → logprob: -5.007906913757324
    6. '_input' → logprob: -5.382906913757324
    7. '_item' → logprob: -5.757906913757324
    8. '(data' → logprob: -6.132906913757324
    9. '_token' → logprob: -6.132906913757324
    10. '_batch' → logprob: -6.507906913757324

Token 11: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5131276249885559
    2. '    ' → logprob: -1.8881275653839111
    3. '(' → logprob: -2.013127565383911
    4. '\' → logprob: -2.888127565383911
    5. '```' → logprob: -4.26312780380249
    6. ' ' → logprob: -4.51312780380249
    7. '[' → logprob: -5.13812780380249
    8. '\n' → logprob: -5.38812780380249
    9. ' (' → logprob: -5.63812780380249
    10. ''' → logprob: -5.63812780380249

Token 12: ' input' (ID: 3422)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.8626217246055603
    2. ' input' → logprob: -1.862621784210205
    3. 'input' (adapté à ' input') → logprob: -2.362621784210205
    4. 'line' → logprob: -2.612621784210205
    5. ' queue' → logprob: -2.612621784210205
    6. ' data' → logprob: -2.737621784210205
    7. ' for' → logprob: -3.612621784210205
    8. 'data' → logprob: -3.737621784210205
    9. ' lines' → logprob: -4.487621784210205
    10. '   ' → logprob: -4.612621784210205

Token 13: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6192259192466736
    2. '()' → logprob: -1.1192259788513184
    3. '_line' → logprob: -2.4942259788513184
    4. '_data' → logprob: -3.6192259788513184
    5. '_' → logprob: -4.244225978851318
    6. '_lines' → logprob: -6.369225978851318
    7. '_text' → logprob: -6.619225978851318
    8. '().' → logprob: -6.744225978851318
    9. 's' → logprob: -6.869225978851318
    10. '```' → logprob: -7.119225978851318

Token 14: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.0009252764866687357
    2. 'sys' → logprob: -7.000925064086914
    3. '	sys' → logprob: -12.250925064086914
    4. '=sys' → logprob: -12.375925064086914
    5. ' ' → logprob: -13.000925064086914
    6. '(sys' → logprob: -13.625925064086914
    7. ' input' → logprob: -13.875925064086914
    8. 'input' → logprob: -16.125925064086914
    9. ' system' → logprob: -16.750925064086914
    10. ' deque' → logprob: -17.500925064086914

Token 15: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.09816884994506836
    2. '.stdin' → logprob: -2.5981688499450684
    3. '.readline' → logprob: -3.9731688499450684
    4. '.read' → logprob: -9.098169326782227
    5. '.stdout' → logprob: -9.348169326782227
    6. ' .' → logprob: -10.973169326782227
    7. '.argv' → logprob: -11.223169326782227
    8. '.input' → logprob: -11.848169326782227
    9. '.setdefault' → logprob: -11.848169326782227
    10. '.std' → logprob: -11.848169326782227

Token 16: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.001426067785359919
    2. '.' → logprob: -7.1264262199401855
    3. '.read' → logprob: -7.6264262199401855
    4. '.stdin' → logprob: -9.501425743103027
    5. '.readlines' → logprob: -10.001425743103027
    6. '.buffer' → logprob: -12.501425743103027
    7. '```' → logprob: -12.626425743103027
    8. 'input' → logprob: -13.251425743103027
    9. 'read' → logprob: -13.626425743103027
    10. '.input' → logprob: -14.126425743103027

Token 17: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.006604056339710951
    2. '().' → logprob: -5.506604194641113
    3. '()
' → logprob: -6.256604194641113
    4. '()\' → logprob: -8.131604194641113
    5. '(' → logprob: -9.006604194641113
    6. ' ()' → logprob: -10.006604194641113
    7. ')' → logprob: -10.256604194641113
    8. '())' → logprob: -10.381604194641113
    9. '()`' → logprob: -10.631604194641113
    10. '()

' → logprob: -10.756604194641113

Token 18: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.030909301713109016
    2. '   ' → logprob: -3.530909299850464
    3. '()
' → logprob: -7.280909538269043
    4. '(' → logprob: -8.030909538269043
    5. '()\' → logprob: -10.405909538269043
    6. '    
' → logprob: -10.655909538269043
    7. ' ()' → logprob: -10.905909538269043
    8. 'def' → logprob: -10.905909538269043
    9. '().' → logprob: -11.655909538269043
    10. '()

' → logprob: -12.155909538269043

Token 19: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2524670958518982
    2. '()' → logprob: -1.877467155456543
    3. 'data' → logprob: -3.752467155456543
    4. '(' → logprob: -4.127467155456543
    5. 'line' → logprob: -5.002467155456543
    6. 'for' → logprob: -5.002467155456543
    7. 'while' (adapté à ' while') → logprob: -5.002467155456543
    8. 'n' → logprob: -6.127467155456543
    9. ' line' → logprob: -6.627467155456543
    10. ')' → logprob: -6.752467155456543

Token 20: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.001767170149832964
    2. 'True' → logprob: -6.501767158508301
    3. '(True' → logprob: -8.6267671585083
    4. ' ' → logprob: -9.6267671585083
    5. ' not' → logprob: -11.2517671585083
    6. ' (' → logprob: -12.8767671585083
    7. '    ' → logprob: -12.8767671585083
    8. '  ' → logprob: -14.5017671585083
    9. '(' → logprob: -15.5017671585083
    10. ' input' → logprob: -15.6267671585083

Token 21: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02468649111688137
    2. '():' → logprob: -3.774686574935913
    3. '       ' → logprob: -7.524686336517334
    4. '):' → logprob: -7.649686336517334
    5. ' :' → logprob: -9.149686813354492
    6. ':**' → logprob: -9.274686813354492
    7. '   ' → logprob: -9.899686813354492
    8. ':
' → logprob: -10.024686813354492
    9. '(' → logprob: -10.024686813354492
    10. ',' → logprob: -11.024686813354492

Token 22: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018067917553707957
    2. '    ' → logprob: -7.001806735992432
    3. '        
' → logprob: -7.626806735992432
    4. '   ' → logprob: -9.12680721282959
    5. '        ' → logprob: -9.62680721282959
    6. ' ' → logprob: -9.62680721282959
    7. '      ' → logprob: -10.00180721282959
    8. '     ' → logprob: -10.75180721282959
    9. '    
' → logprob: -11.37680721282959
    10. '`' → logprob: -11.75180721282959

Token 23: ' m' (ID: 284)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.07766211777925491
    2. 'line' → logprob: -3.202662229537964
    3. '   ' → logprob: -4.577661991119385
    4. '    ' → logprob: -4.952661991119385
    5. '       ' → logprob: -5.077661991119385
    6. 'data' → logprob: -5.202661991119385
    7. ' data' → logprob: -6.202661991119385
    8. ' ' → logprob: -7.077661991119385
    9. 's' → logprob: -7.702661991119385
    10. 'n' → logprob: -8.202662467956543

Token 24: ',c' (ID: 22261)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02009250782430172
    2. '=' → logprob: -4.395092487335205
    3. 'sg' → logprob: -5.895092487335205
    4. ' ' → logprob: -5.895092487335205
    5. 'a' → logprob: -7.145092487335205
    6. 'essage' → logprob: -8.020092964172363
    7. ',' → logprob: -8.645092964172363
    8. '   ' → logprob: -8.895092964172363
    9. 'y' → logprob: -9.145092964172363
    10. 'aybe' → logprob: -9.395092964172363

Token 25: ',n' (ID: 18103)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.40591302514076233
    2. '=' → logprob: -1.28091299533844
    3. 'ount' → logprob: -4.03091287612915
    4. '==' → logprob: -4.28091287612915
    5. ' ==' → logprob: -4.28091287612915
    6. 'ounter' → logprob: -6.28091287612915
    7. ',' → logprob: -6.78091287612915
    8. '>' → logprob: -7.15591287612915
    9. ' :=' → logprob: -7.15591287612915
    10. 'h' → logprob: -7.28091287612915

Token 26: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3871029019355774
    2. '=' → logprob: -1.1371028423309326
    3. ',' → logprob: -8.887103080749512
    4. '=input' → logprob: -10.387103080749512
    5. ' ' → logprob: -11.262103080749512
    6. ')' → logprob: -11.262103080749512
    7. '  ' → logprob: -12.262103080749512
    8. '   ' → logprob: -12.387103080749512
    9. '=line' → logprob: -12.387103080749512
    10. '=int' → logprob: -12.762103080749512

Token 27: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.15231312811374664
    2. 'map' → logprob: -2.152313232421875
    3. ' input' → logprob: -3.902313232421875
    4. 'input' → logprob: -5.652313232421875
    5. ' list' → logprob: -6.777313232421875
    6. 'list' → logprob: -8.902313232421875
    7. '[' → logprob: -10.777313232421875
    8. ' [' → logprob: -11.277313232421875
    9. '(map' → logprob: -11.277313232421875
    10. ' ' → logprob: -11.402313232421875

Token 28: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4710434079170227
    2. '(int' → logprob: -1.346043348312378
    3. '(str' → logprob: -2.346043348312378
    4. '(input' → logprob: -3.971043348312378
    5. '(list' → logprob: -7.721043586730957
    6. '(lambda' → logprob: -8.471043586730957
    7. '(eval' → logprob: -10.471043586730957
    8. '(
' → logprob: -10.846043586730957
    9. ' (' → logprob: -11.471043586730957
    10. '(in' → logprob: -11.471043586730957

Token 29: ',input' (ID: 123014)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3312086760997772
    2. ',input' → logprob: -1.3312087059020996
    3. '(input' → logprob: -4.2062087059021
    4. 'input' → logprob: -6.2062087059021
    5. '(' → logprob: -7.7062087059021
    6. ')' → logprob: -8.456208229064941
    7. '(sys' → logprob: -8.956208229064941
    8. 'sys' → logprob: -11.206208229064941
    9. ' ,' → logprob: -11.581208229064941
    10. '   ' → logprob: -11.581208229064941

Token 30: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.5048530030981055e-06
    2. '()' → logprob: -13.625001907348633
    3. '())' → logprob: -15.500001907348633
    4. ' ().' → logprob: -17.375001907348633
    5. '()
' → logprob: -18.750001907348633
    6. '(' → logprob: -19.625001907348633
    7. ')' → logprob: -20.000001907348633
    8. '()))' → logprob: -20.125001907348633
    9. '().
' → logprob: -20.500001907348633
    10. '()?.' → logprob: -21.375001907348633

Token 31: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.475625216960907
    2. 'strip' → logprob: -0.975625216960907
    3. 'rstrip' → logprob: -6.475625038146973
    4. '(split' → logprob: -12.850625038146973
    5. 'read' → logprob: -13.725625038146973
    6. ')' → logprob: -13.975625038146973
    7. ' split' → logprob: -14.475625038146973
    8. 'plit' → logprob: -14.850625038146973
    9. ' strip' → logprob: -15.100625038146973
    10. '```' → logprob: -15.600625038146973

Token 32: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.07531307637691498
    2. ')' → logprob: -2.700313091278076
    3. '()' → logprob: -5.450313091278076
    4. '()))' → logprob: -7.575313091278076
    5. '))' → logprob: -7.700313091278076
    6. '())
' → logprob: -9.450312614440918
    7. '(' → logprob: -11.700312614440918
    8. ' ())' → logprob: -12.825312614440918
    9. '(),' → logprob: -13.450312614440918
    10. '())

' → logprob: -13.825312614440918

Token 33: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 34: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21028904616832733
    2. '<|end|>' → logprob: -1.8352890014648438
    3. ' if' → logprob: -4.585289001464844
    4. ' ' → logprob: -4.960289001464844
    5. '        ' → logprob: -5.710289001464844
    6. '\n' → logprob: -5.960289001464844
    7. 'if' (adapté à ' if') → logprob: -6.585289001464844
    8. '<|end|>' → logprob: -6.835289001464844
    9. '   ' → logprob: -7.210289001464844
    10. '      ' → logprob: -7.460289001464844

Token 35: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.0028188975993543863
    2. 'm' → logprob: -6.002819061279297
    3. ' not' → logprob: -8.127819061279297
    4. ' ' → logprob: -10.377819061279297
    5. ' (' → logprob: -11.252819061279297
    6. 'not' → logprob: -13.002819061279297
    7. '(m' → logprob: -14.377819061279297
    8. ' ' → logprob: -15.002819061279297
    9. '	m' → logprob: -15.002819061279297
    10. '(' → logprob: -16.377819061279297

Token 36: '==' (ID: 560)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.04604222625494003
    2. '==' → logprob: -3.1710422039031982
    3. ' <=' → logprob: -5.921042442321777
    4. '<=' → logprob: -8.671042442321777
    5. ' <' → logprob: -9.046042442321777
    6. '<' → logprob: -10.171042442321777
    7. '=' → logprob: -11.421042442321777
    8. ' ' → logprob: -12.421042442321777
    9. ')' → logprob: -12.546042442321777
    10. ' =' → logprob: -13.171042442321777

Token 37: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0021113590337336063
    2. ' ' → logprob: -6.377111434936523
    3. 'c' → logprob: -7.877111434936523
    4. '-' → logprob: -11.252111434936523
    5. ' c' → logprob: -11.627111434936523
    6. 'n' → logprob: -13.439611434936523
    7. ' -' → logprob: -13.814611434936523
    8. '   ' → logprob: -14.189611434936523
    9. '```' → logprob: -14.314611434936523
    10. '  ' → logprob: -14.377111434936523

Token 38: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.004739722236990929
    2. 'and' → logprob: -5.629739761352539
    3. ':' → logprob: -6.879739761352539
    4. ' ' → logprob: -9.879739761352539
    5. ' or' → logprob: -9.879739761352539
    6. '	and' → logprob: -12.879739761352539
    7. '   ' → logprob: -14.004739761352539
    8. ' a' → logprob: -14.129739761352539
    9. ' :' → logprob: -14.254739761352539
    10. ',' → logprob: -14.379739761352539

Token 39: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5759422183036804
    2. ' c' → logprob: -0.8259422183036804
    3. '	c' → logprob: -13.700942039489746
    4. ' ' → logprob: -14.325942039489746
    5. ' ' → logprob: -14.950942039489746
    6. ',c' → logprob: -15.825942039489746
    7. ')c' → logprob: -15.950942039489746
    8. '  ' → logprob: -16.075942993164062
    9. '   ' → logprob: -16.075942993164062
    10. '' → logprob: -17.263442993164062

Token 40: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.00010032468708232045
    2. ' ==' → logprob: -9.250100135803223
    3. '===' → logprob: -13.500100135803223
    4. '=' → logprob: -13.625100135803223
    5. '0' → logprob: -13.875100135803223
    6. '()==' → logprob: -15.625100135803223
    7. '==
' → logprob: -15.750100135803223
    8. ']==' → logprob: -15.875100135803223
    9. ')==' → logprob: -16.25010108947754
    10. '==(' → logprob: -16.75010108947754

Token 41: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.024604277219623e-05
    2. ' ' → logprob: -10.125040054321289
    3. '  ' → logprob: -17.62504005432129
    4. '   ' → logprob: -18.00004005432129
    5. '=' → logprob: -18.12504005432129
    6. '۰' → logprob: -18.37504005432129
    7. '<|end|>' → logprob: -18.62504005432129
    8. '<|end|>' → logprob: -18.68754005432129
    9. ' and' → logprob: -18.75004005432129
    10. 'and' → logprob: -19.43754005432129

Token 42: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0017616904806345701
    2. 'and' → logprob: -6.3767619132995605
    3. ':' → logprob: -10.376761436462402
    4. '	and' → logprob: -11.251761436462402
    5. '<|end|>' → logprob: -11.626761436462402
    6. ' ' → logprob: -13.376761436462402
    7. '<|end|>' → logprob: -13.376761436462402
    8. '       ' → logprob: -14.376761436462402
    9. '   ' → logprob: -14.501761436462402
    10. '0' → logprob: -14.626761436462402

Token 43: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.2811873257160187
    2. 'n' → logprob: -1.4061872959136963
    3. '0' → logprob: -10.531187057495117
    4. '	n' → logprob: -12.406187057495117
    5. ' ' → logprob: -12.656187057495117
    6. '   ' → logprob: -14.156187057495117
    7. '  ' → logprob: -14.406187057495117
    8. ' c' → logprob: -15.156187057495117
    9. '```' → logprob: -15.156187057495117
    10. 'c' → logprob: -15.281187057495117

Token 44: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.014203116297721863
    2. ' ==' → logprob: -4.264203071594238
    3. '=' → logprob: -11.264203071594238
    4. '0' → logprob: -11.764203071594238
    5. ')==' → logprob: -12.389203071594238
    6. '<|end|>' → logprob: -12.639203071594238
    7. '<|end|>' → logprob: -13.014203071594238
    8. '==
' → logprob: -13.014203071594238
    9. '===' → logprob: -13.389203071594238
    10. ']==' → logprob: -13.764203071594238

Token 45: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9146995327901095e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -17.500019073486328
    4. '۰' → logprob: -17.562519073486328
    5. '  ' → logprob: -17.875019073486328
    6. '```' → logprob: -18.687519073486328
    7. '০' → logprob: -18.750019073486328
    8. '०' → logprob: -19.062519073486328
    9. '<|end|>' → logprob: -19.187519073486328
    10. 'o' → logprob: -19.187519073486328

Token 46: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005001319805160165
    2. ':
' → logprob: -7.750500202178955
    3. ':return' → logprob: -10.000499725341797
    4. ' :' → logprob: -11.000499725341797
    5. '       ' → logprob: -12.375499725341797
    6. '   ' → logprob: -13.625499725341797
    7. '           ' → logprob: -13.875499725341797
    8. '):' → logprob: -14.875499725341797
    9. '.' → logprob: -15.250499725341797
    10. ' :
' → logprob: -16.125499725341797

Token 47: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.016175365075469017
    2. '       ' → logprob: -4.141175270080566
    3. '          ' → logprob: -10.266175270080566
    4. '   ' → logprob: -10.766175270080566
    5. ' break' → logprob: -11.016175270080566
    6. '               ' → logprob: -11.141175270080566
    7. ':' → logprob: -11.641175270080566
    8. '		' → logprob: -11.766175270080566
    9. '	       ' → logprob: -12.391175270080566
    10. '         ' → logprob: -12.516175270080566

Token 48: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.2578325867652893
    2. '           ' → logprob: -2.2578325271606445
    3. 'break' (adapté à ' break') → logprob: -2.3828325271606445
    4. '       ' → logprob: -3.6328325271606445
    5. ' return' → logprob: -6.2578325271606445
    6. 'return' → logprob: -6.3828325271606445
    7. '               ' → logprob: -8.882832527160645
    8. '   ' → logprob: -9.132832527160645
    9. '	break' → logprob: -9.507832527160645
    10. '```' → logprob: -10.882832527160645

Token 49: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2000579684972763
    2. '
' → logprob: -2.4500579833984375
    3. '<|end|>' → logprob: -2.4500579833984375
    4. '        
' → logprob: -5.7000579833984375
    5. '<|end|>' → logprob: -6.4500579833984375
    6. '```' → logprob: -7.3250579833984375
    7. '\n' → logprob: -7.7000579833984375
    8. '   ' → logprob: -8.075057983398438
    9. '        ' → logprob: -8.200057983398438
    10. ',' → logprob: -8.325057983398438

Token 50: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06456701457500458
    2. '
' → logprob: -3.1895670890808105
    3. '        
' → logprob: -4.5645670890808105
    4. '<|end|>' → logprob: -4.8145670890808105
    5. '        ' → logprob: -7.0645670890808105
    6. '   ' → logprob: -7.6895670890808105
    7. '<|end|>' → logprob: -8.189566612243652
    8. '```' → logprob: -8.314566612243652
    9. '            
' → logprob: -8.689566612243652
    10. '    ' → logprob: -8.689566612243652

Token 51: ' requests' (ID: 13782)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09709984809160233
    2. '        
' → logprob: -3.472099781036377
    3. '        ' → logprob: -4.847099781036377
    4. 's' → logprob: -5.472099781036377
    5. ' queue' → logprob: -5.472099781036377
    6. '   ' → logprob: -5.534599781036377
    7. ' ' → logprob: -5.972099781036377
    8. 'queue' → logprob: -6.034599781036377
    9. '    ' → logprob: -6.097099781036377
    10. 'd' → logprob: -6.472099781036377

Token 52: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0898507758975029
    2. '=' → logprob: -2.464850664138794
    3. '.' → logprob: -7.589850902557373
    4. '=[]' → logprob: -8.339850425720215
    5. '.append' → logprob: -9.589850425720215
    6. '[' → logprob: -11.089850425720215
    7. ',' → logprob: -11.339850425720215
    8. ')' → logprob: -11.464850425720215
    9. 'deque' → logprob: -11.839850425720215
    10. '[:]' → logprob: -12.214850425720215

Token 53: ' []
' (ID: 8911)
  Prédit: ' deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.14418676495552063
    2. 'deque' → logprob: -2.0191867351531982
    3. ' []' → logprob: -7.019186973571777
    4. ' [' → logprob: -8.144186973571777
    5. '[]' → logprob: -8.269186973571777
    6. '[' → logprob: -10.019186973571777
    7. 'Deque' → logprob: -12.769186973571777
    8. ' defaultdict' → logprob: -12.894186973571777
    9. ' list' → logprob: -12.894186973571777
    10. ' de' → logprob: -13.019186973571777

Token 54: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04064053297042847
    2. '<|end|>' → logprob: -3.7906405925750732
    3. ' for' → logprob: -4.790640354156494
    4. '	' → logprob: -5.790640354156494
    5. 'for' → logprob: -6.540640354156494
    6. '        
' → logprob: -6.665640354156494
    7. '<|end|>' → logprob: -7.415640354156494
    8. '   ' → logprob: -7.790640354156494
    9. '        ' → logprob: -7.790640354156494
    10. ' ' → logprob: -8.040640830993652

Token 55: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.11632449179887772
    2. 'for' (adapté à ' for') → logprob: -2.6163244247436523
    3. '       ' → logprob: -3.3663244247436523
    4. '	for' → logprob: -6.866324424743652
    5. '   ' → logprob: -8.366324424743652
    6. ' ' → logprob: -8.491324424743652
    7. '	' → logprob: -8.491324424743652
    8. ' ' → logprob: -8.866324424743652
    9. '\t' → logprob: -9.116324424743652
    10. '        ' → logprob: -9.366324424743652

Token 56: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.0019684815779328346
    2. '_' → logprob: -6.2519683837890625
    3. ' i' → logprob: -10.251968383789062
    4. ' ' → logprob: -12.376968383789062
    5. ' ' → logprob: -15.751968383789062
    6. '_i' → logprob: -15.876968383789062
    7. ' ‌' → logprob: -17.126968383789062
    8. 'i' → logprob: -18.626968383789062
    9. ' __' → logprob: -18.751968383789062
    10. ' _
' → logprob: -18.876968383789062

Token 57: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1271967738866806
    2. 'in' → logprob: -2.127196788787842
    3. ' ' → logprob: -9.252196311950684
    4. 'range' → logprob: -9.627196311950684
    5. '  ' → logprob: -10.627196311950684
    6. 'n' → logprob: -10.752196311950684
    7. '	in' → logprob: -11.377196311950684
    8. '   ' → logprob: -11.877196311950684
    9. 'requests' → logprob: -12.002196311950684
    10. '    ' → logprob: -12.127196311950684

Token 58: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.001951945130713284
    2. ' range' → logprob: -6.251952171325684
    3. 'requests' → logprob: -11.876952171325684
    4. 'ange' → logprob: -12.126952171325684
    5. '(range' → logprob: -12.501952171325684
    6. '	range' → logprob: -13.376952171325684
    7. '   ' → logprob: -13.876952171325684
    8. '```' → logprob: -14.126952171325684
    9. ' ' → logprob: -14.251952171325684
    10. 'rang' → logprob: -14.376952171325684

Token 59: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.003555408213287592
    2. '(' → logprob: -5.7535552978515625
    3. ' (' → logprob: -8.378555297851562
    4. ' n' → logprob: -8.878555297851562
    5. '(m' → logprob: -12.253555297851562
    6. 'n' → logprob: -12.878555297851562
    7. '(c' → logprob: -15.378555297851562
    8. '(range' → logprob: -15.378555297851562
    9. ' ' → logprob: -15.503555297851562
    10. '(s' → logprob: -16.253555297851562

Token 60: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007824399508535862
    2. '):
' → logprob: -4.882824420928955
    3. ')' → logprob: -9.132823944091797
    4. ' ):' → logprob: -9.632823944091797
    5. '   ' → logprob: -11.132823944091797
    6. '):
' → logprob: -11.507823944091797
    7. ':' → logprob: -11.507823944091797
    8. '       ' → logprob: -12.132823944091797
    9. '():' → logprob: -14.257823944091797
    10. ' ):
' → logprob: -14.882823944091797

Token 61: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03578618913888931
    2. '       ' → logprob: -3.6607861518859863
    3. '   ' → logprob: -5.410786151885986
    4. ' requests' → logprob: -6.785786151885986
    5. '```' → logprob: -7.160786151885986
    6. ':' → logprob: -7.285786151885986
    7. '<|end|>' → logprob: -7.785786151885986
    8. '<|end|>' → logprob: -7.910786151885986
    9. '	   ' → logprob: -8.160786628723145
    10. ',' → logprob: -8.410786628723145

Token 62: ' k' (ID: 372)
  Prédit: ' requests'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' requests' → logprob: -1.2537682056427002
    2. 'requests' → logprob: -2.1287682056427
    3. 'a' → logprob: -3.0037682056427
    4. ' p' → logprob: -3.0037682056427
    5. 'x' → logprob: -3.2537682056427
    6. 'r' → logprob: -3.2537682056427
    7. ' w' → logprob: -3.3787682056427
    8. ' r' → logprob: -3.3787682056427
    9. 'w' → logprob: -3.5037682056427
    10. 'p' → logprob: -3.6287682056427

Token 63: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.34144356846809387
    2. ',v' → logprob: -2.3414435386657715
    3. ' =' → logprob: -2.8414435386657715
    4. ',c' → logprob: -3.7164435386657715
    5. ',num' → logprob: -4.4664435386657715
    6. ',size' → logprob: -4.5914435386657715
    7. '=' → logprob: -4.7164435386657715
    8. ',p' → logprob: -5.0914435386657715
    9. ',a' → logprob: -5.0914435386657715
    10. ',t' → logprob: -5.0914435386657715

Token 64: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3489397168159485
    2. ' int' → logprob: -1.2239396572113037
    3. 'list' → logprob: -8.723939895629883
    4. 'input' → logprob: -8.848939895629883
    5. ' input' → logprob: -9.723939895629883
    6. ' list' → logprob: -10.348939895629883
    7. ' ' → logprob: -10.598939895629883
    8. 'deque' → logprob: -10.973939895629883
    9. '  ' → logprob: -11.848939895629883
    10. '[int' → logprob: -11.973939895629883

Token 65: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -4.263011578586884e-05
    2. 'input' → logprob: -10.375042915344238
    3. '(' → logprob: -11.750042915344238
    4. ' (' → logprob: -13.125042915344238
    5. ' input' → logprob: -14.375042915344238
    6. ',input' → logprob: -14.625042915344238
    7. '=input' → logprob: -15.125042915344238
    8. '(sys' → logprob: -16.000041961669922
    9. '	input' → logprob: -17.125041961669922
    10. '(in' → logprob: -17.125041961669922

Token 66: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00424294313415885
    2. '()' → logprob: -6.254242897033691
    3. '())
' → logprob: -6.379242897033691
    4. '().' → logprob: -7.754242897033691
    5. ')' → logprob: -9.004242897033691
    6. '())
' → logprob: -9.879242897033691
    7. '())

' → logprob: -12.129242897033691
    8. ' ())' → logprob: -12.504242897033691
    9. '(' → logprob: -13.504242897033691
    10. '()
' → logprob: -13.879242897033691

Token 67: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.44325995445251465
    2. '           ' → logprob: -1.0682599544525146
    3. 'requests' → logprob: -4.568260192871094
    4. ' requests' → logprob: -5.818260192871094
    5. '	       ' → logprob: -8.193260192871094
    6. '   ' → logprob: -8.318260192871094
    7. '<|end|>' → logprob: -9.318260192871094
    8. ',' → logprob: -9.568260192871094
    9. '        
' → logprob: -9.943260192871094
    10. '               ' → logprob: -10.318260192871094

Token 68: ' books' (ID: 7187)
  Prédit: ' requests'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' requests' → logprob: -0.7314683794975281
    2. '           ' → logprob: -1.4814684391021729
    3. 'requests' → logprob: -1.6064684391021729
    4. '       ' → logprob: -2.481468439102173
    5. ' if' → logprob: -5.231468200683594
    6. 'request' → logprob: -7.481468200683594
    7. 'if' → logprob: -7.981468200683594
    8. ' request' → logprob: -8.731468200683594
    9. '_requests' → logprob: -8.856468200683594
    10. '            
' → logprob: -9.106468200683594

Token 69: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.27103927731513977
    2. '=' → logprob: -2.0210392475128174
    3. '.append' → logprob: -2.2710392475128174
    4. '.' → logprob: -6.7710394859313965
    5. '.extend' → logprob: -8.646039009094238
    6. '_requested' → logprob: -10.021039009094238
    7. '_requests' → logprob: -10.271039009094238
    8. '=[]' → logprob: -10.396039009094238
    9. ')' → logprob: -10.646039009094238
    10. ',' → logprob: -10.771039009094238

Token 70: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.09948181360960007
    2. 'list' → logprob: -2.7244818210601807
    3. ' []' → logprob: -4.599481582641602
    4. ' deque' → logprob: -4.599481582641602
    5. 'deque' → logprob: -5.224481582641602
    6. '[]' → logprob: -6.099481582641602
    7. ' [' → logprob: -7.099481582641602
    8. ' set' → logprob: -8.349481582641602
    9. ' input' → logprob: -9.099481582641602
    10. '[' → logprob: -10.224481582641602

Token 71: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0011759399203583598
    2. '(' → logprob: -6.751175880432129
    3. '(int' → logprob: -13.001175880432129
    4. '(input' → logprob: -13.376175880432129
    5. '(range' → logprob: -13.751175880432129
    6. '()' → logprob: -14.501175880432129
    7. 'map' → logprob: -16.626176834106445
    8. '	map' → logprob: -17.251176834106445
    9. ' map' → logprob: -17.501176834106445
    10. '(filter' → logprob: -17.501176834106445

Token 72: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.002509666606783867
    2. '(' → logprob: -6.002509593963623
    3. ')' → logprob: -11.252510070800781
    4. 'int' → logprob: -11.752510070800781
    5. '=int' → logprob: -12.627510070800781
    6. ')(' → logprob: -12.877510070800781
    7. '[int' → logprob: -13.377510070800781
    8. ' (' → logprob: -13.627510070800781
    9. ',int' → logprob: -13.627510070800781
    10. '<int' → logprob: -13.877510070800781

Token 73: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.0011891605099663138
    2. ',' → logprob: -6.751189231872559
    3. '(input' → logprob: -11.501189231872559
    4. ',int' → logprob: -12.001189231872559
    5. 'input' → logprob: -13.876189231872559
    6. ' ,' → logprob: -14.126189231872559
    7. '(' → logprob: -15.376189231872559
    8. ',(' → logprob: -15.501189231872559
    9. '   ' → logprob: -16.001188278198242
    10. ',in' → logprob: -16.751188278198242

Token 74: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.2729995988775045e-06
    2. '()' → logprob: -12.750006675720215
    3. '.' → logprob: -13.000006675720215
    4. '.readline' → logprob: -15.000006675720215
    5. '.split' → logprob: -15.500006675720215
    6. '(' → logprob: -15.875006675720215
    7. ').' → logprob: -16.1250057220459
    8. ')' → logprob: -16.2500057220459
    9. ' ().' → logprob: -16.6250057220459
    10. ' .' → logprob: -18.3750057220459

Token 75: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0001863750658230856
    2. 'strip' → logprob: -8.6251859664917
    3. ' split' → logprob: -12.6251859664917
    4. 'rstrip' → logprob: -12.8751859664917
    5. '(split' → logprob: -14.5001859664917
    6. 'spl' → logprob: -15.3751859664917
    7. '().' → logprob: -16.625186920166016
    8. 's' → logprob: -16.875186920166016
    9. ' ' → logprob: -17.375186920166016
    10. ')' → logprob: -17.875186920166016

Token 76: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.03591788187623024
    2. '()' → logprob: -4.16091775894165
    3. '))' → logprob: -4.16091775894165
    4. '())' → logprob: -5.66091775894165
    5. '(' → logprob: -8.160918235778809
    6. '()))
' → logprob: -8.535918235778809
    7. '())))' → logprob: -9.910918235778809
    8. ')' → logprob: -10.535918235778809
    9. '().' → logprob: -10.660918235778809
    10. '()));' → logprob: -11.535918235778809

Token 77: '           ' (ID: 352)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0772898942232132
    2. '           ' → logprob: -3.3272898197174072
    3. '       ' → logprob: -3.4522898197174072
    4. '<|end|>' → logprob: -5.452290058135986
    5. ')
' → logprob: -6.827290058135986
    6. '<|end|>' → logprob: -7.202290058135986
    7. ' )' → logprob: -8.202289581298828
    8. '   ' → logprob: -9.702289581298828
    9. ' ' → logprob: -10.077289581298828
    10. '	       ' → logprob: -10.077289581298828

Token 78: ' requests' (ID: 13782)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9636223316192627
    2. '           ' → logprob: -1.2136223316192627
    3. ' requests' → logprob: -1.3386223316192627
    4. 'requests' (adapté à ' requests') → logprob: -3.0886223316192627
    5. ' if' → logprob: -5.338622093200684
    6. ' books' → logprob: -5.838622093200684
    7. '   ' → logprob: -6.713622093200684
    8. 'request' → logprob: -6.838622093200684
    9. 'books' → logprob: -7.088622093200684
    10. ' request' → logprob: -7.713622093200684

Token 79: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0005709059187211096
    2. '.' → logprob: -7.500570774078369
    3. '.extend' → logprob: -11.000571250915527
    4. ' .' → logprob: -14.875571250915527
    5. '.ap' → logprob: -15.375571250915527
    6. '.app' → logprob: -15.625571250915527
    7. 'append' → logprob: -16.25057029724121
    8. '.push' → logprob: -16.50057029724121
    9. ').' → logprob: -17.00057029724121
    10. '.add' → logprob: -17.00057029724121

Token 80: '(de' (ID: 20586)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '((' → logprob: -0.3868976831436157
    2. '(' → logprob: -1.1368976831436157
    3. '(book' → logprob: -11.136898040771484
    4. '(k' → logprob: -11.511898040771484
    5. '(tuple' → logprob: -14.136898040771484
    6. '([' → logprob: -14.761898040771484
    7. ' ((' → logprob: -15.761898040771484
    8. ' (' → logprob: -15.886898040771484
    9. 'books' → logprob: -16.386898040771484
    10. '(()' → logprob: -16.511898040771484

Token 81: 'que' (ID: 1126)
  Prédit: 'que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.4745979309082031
    2. 'q' → logprob: -0.9745979309082031
    3. 'queue' → logprob: -8.724597930908203
    4. 'qu' → logprob: -8.724597930908203
    5. 'qe' → logprob: -9.349597930908203
    6. 'uq' → logprob: -9.849597930908203
    7. 'ques' → logprob: -10.974597930908203
    8. '(' → logprob: -11.349597930908203
    9. 'p' → logprob: -12.224597930908203
    10. '(queue' → logprob: -12.599597930908203

Token 82: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00010962257510982454
    2. '((' → logprob: -9.500109672546387
    3. '(book' → logprob: -10.750109672546387
    4. ')(' → logprob: -11.750109672546387
    5. '(k' → logprob: -12.750109672546387
    6. ' (' → logprob: -14.125109672546387
    7. ')' → logprob: -14.625109672546387
    8. '([' → logprob: -14.875109672546387
    9. '(s' → logprob: -15.750109672546387
    10. '(b' → logprob: -15.875109672546387

Token 83: 'books' (ID: 20361)
  Prédit: 'books'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'books' → logprob: -0.0012936893617734313
    2. '(' → logprob: -6.751293659210205
    3. ' books' → logprob: -9.126294136047363
    4. 'k' → logprob: -12.126294136047363
    5. '[' → logprob: -13.001294136047363
    6. '/books' → logprob: -13.376294136047363
    7. ')' → logprob: -13.751294136047363
    8. '   ' → logprob: -14.001294136047363
    9. 'book' → logprob: -14.251294136047363
    10. 'b' → logprob: -14.376294136047363

Token 84: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0015611659036949277
    2. ')' → logprob: -6.501561164855957
    3. '))
' → logprob: -10.251561164855957
    4. ' ))' → logprob: -11.501561164855957
    5. ')))' → logprob: -11.501561164855957
    6. '))
' → logprob: -14.251561164855957
    7. '),' → logprob: -14.501561164855957
    8. '()))' → logprob: -14.626561164855957
    9. ' ' → logprob: -14.751561164855957
    10. '))

' → logprob: -14.751561164855957

Token 85: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07355786859989166
    2. '<|end|>' → logprob: -3.1985578536987305
    3. '        
' → logprob: -4.3235578536987305
    4. '
' → logprob: -4.3235578536987305
    5. '        ' → logprob: -6.6985578536987305
    6. '<|end|>' → logprob: -7.1985578536987305
    7. ')' → logprob: -8.07355785369873
    8. '```' → logprob: -8.32355785369873
    9. '   ' → logprob: -8.69855785369873
    10. ' ' → logprob: -9.19855785369873

Token 86: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.051292818039655685
    2. '        
' → logprob: -3.801292896270752
    3. '        ' → logprob: -5.676292896270752
    4. '<|end|>' → logprob: -5.801292896270752
    5. 'stack' → logprob: -5.926292896270752
    6. '   ' → logprob: -6.551292896270752
    7. 'capacity' → logprob: -6.551292896270752
    8. 'next' → logprob: -6.801292896270752
    9. 'queue' → logprob: -6.926292896270752
    10. 'current' → logprob: -6.926292896270752

Token 87: ' queue' (ID: 13661)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.7204726934432983
    2. ' for' → logprob: -1.7204726934432983
    3. '<|end|>' → logprob: -1.7204726934432983
    4. '        ' → logprob: -2.220472812652588
    5. ' #' → logprob: -2.720472812652588
    6. 'for' → logprob: -3.345472812652588
    7. 'stack' → logprob: -4.095472812652588
    8. '#' → logprob: -4.345472812652588
    9. 'current' → logprob: -4.470472812652588
    10. ' if' → logprob: -4.595472812652588

Token 88: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0059610335156321526
    2. '=' → logprob: -5.130960941314697
    3. 's' → logprob: -11.755961418151855
    4. 'queue' → logprob: -11.880961418151855
    5. 'q' → logprob: -12.755961418151855
    6. ' ' → logprob: -13.130961418151855
    7. ',' → logprob: -13.880961418151855
    8. '<|end|>' → logprob: -13.880961418151855
    9. '=[]' → logprob: -14.255961418151855
    10. '.append' → logprob: -14.255961418151855

Token 89: ' students' (ID: 4501)
  Prédit: 'requests'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'requests' → logprob: -1.5188547372817993
    2. ' requests' → logprob: -1.6438547372817993
    3. '(' → logprob: -2.3938546180725098
    4. ' (' → logprob: -2.5188546180725098
    5. ' tuples' → logprob: -2.7688546180725098
    6. '(request' → logprob: -2.8938546180725098
    7. '(de' → logprob: -3.0188546180725098
    8. ' indices' → logprob: -3.0188546180725098
    9. '(int' → logprob: -3.2688546180725098
    10. 'deque' → logprob: -3.7688546180725098

Token 90: ' who' (ID: 1218)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03146865963935852
    2. '=' → logprob: -4.281468868255615
    3. 'queue' → logprob: -4.531468868255615
    4. '       ' → logprob: -5.906468868255615
    5. ' queue' → logprob: -6.906468868255615
    6. '<|end|>' → logprob: -7.531468868255615
    7. 'students' → logprob: -7.781468868255615
    8. 's' → logprob: -7.906468868255615
    9. ',' → logprob: -8.406468391418457
    10. 'q' → logprob: -8.406468391418457

Token 91: ' still' (ID: 2928)
  Prédit: ' still'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' still' → logprob: -0.2712458670139313
    2. 'have' → logprob: -2.2712459564208984
    3. 'still' → logprob: -2.3962459564208984
    4. ' have' → logprob: -3.2712459564208984
    5. 'need' → logprob: -7.271245956420898
    6. 'are' → logprob: -7.396245956420898
    7. ' are' → logprob: -7.396245956420898
    8. 'requested' → logprob: -7.521245956420898
    9. 'currently' → logprob: -7.771245956420898
    10. ' can' → logprob: -7.771245956420898

Token 92: ' have' (ID: 679)
  Prédit: 'have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'have' → logprob: -0.17807266116142273
    2. ' have' → logprob: -2.053072690963745
    3. 'need' → logprob: -4.178072452545166
    4. 'want' → logprob: -4.303072452545166
    5. ' want' → logprob: -6.178072452545166
    6. 'w' → logprob: -6.428072452545166
    7. ' need' → logprob: -6.678072452545166
    8. 'requests' → logprob: -8.928072929382324
    9. 'has' → logprob: -8.928072929382324
    10. 'request' → logprob: -9.303072929382324

Token 93: ' requests' (ID: 13782)
  Prédit: 'requests'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'requests' → logprob: -0.5859224796295166
    2. 'books' → logprob: -1.7109224796295166
    3. ' requests' → logprob: -1.8359224796295166
    4. ' books' → logprob: -2.5859224796295166
    5. 'requested' → logprob: -4.9609222412109375
    6. ' at' → logprob: -5.4609222412109375
    7. 'pending' → logprob: -5.9609222412109375
    8. 'deque' → logprob: -6.2109222412109375
    9. 'book' → logprob: -6.4609222412109375
    10. 'remaining' → logprob: -6.7109222412109375

Token 94: '
' (ID: 198)
  Prédit: ' queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.390862375497818
    2. 'queue' → logprob: -1.5158623456954956
    3. 'q' → logprob: -3.765862464904785
    4. '       ' → logprob: -3.765862464904785
    5. 'students' → logprob: -4.140862464904785
    6. 'waiting' → logprob: -4.515862464904785
    7. 'ready' → logprob: -5.015862464904785
    8. ' students' → logprob: -5.640862464904785
    9. ' q' → logprob: -6.015862464904785
    10. ' waiting' → logprob: -6.140862464904785

Token 95: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016488485038280487
    2. ' queue' → logprob: -4.891488552093506
    3. '        
' → logprob: -5.641488552093506
    4. '<|end|>' → logprob: -6.141488552093506
    5. 'queue' → logprob: -6.641488552093506
    6. '
' → logprob: -7.891488552093506
    7. '	queue' → logprob: -8.141488075256348
    8. '      ' → logprob: -9.141488075256348
    9. '        ' → logprob: -9.141488075256348
    10. '   ' → logprob: -9.141488075256348

Token 96: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -0.31166908144950867
    2. ' queue' → logprob: -1.436669111251831
    3. 'q' → logprob: -3.811669111251831
    4. '       ' → logprob: -5.686668872833252
    5. 'students' → logprob: -6.436668872833252
    6. ' q' → logprob: -7.061668872833252
    7. '   ' → logprob: -8.06166934967041
    8. 'from' → logprob: -8.43666934967041
    9. 'student' → logprob: -8.56166934967041
    10. ' students' → logprob: -8.56166934967041

Token 97: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011049704626202583
    2. '=' → logprob: -4.511049747467041
    3. ' ' → logprob: -14.136049270629883
    4. 's' → logprob: -14.886049270629883
    5. '<|end|>' → logprob: -14.886049270629883
    6. '=[]' → logprob: -15.886049270629883
    7. '```' → logprob: -16.386049270629883
    8. '＝' → logprob: -16.761049270629883
    9. '<|end|>' → logprob: -17.323549270629883
    10. '  ' → logprob: -17.323549270629883

Token 98: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.06197015196084976
    2. ' deque' → logprob: -2.8119702339172363
    3. 'de' → logprob: -13.936969757080078
    4. ' ' → logprob: -14.311969757080078
    5. 'collections' → logprob: -14.811969757080078
    6. '	de' → logprob: -15.686969757080078
    7. '   ' → logprob: -16.061969757080078
    8. 'Deque' → logprob: -16.311969757080078
    9. '(de' → logprob: -16.311969757080078
    10. '[' → logprob: -16.311969757080078

Token 99: '(i' (ID: 3649)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '([' → logprob: -0.6079604625701904
    2. '()' → logprob: -0.8579604625701904
    3. '(request' → logprob: -3.8579604625701904
    4. '(' → logprob: -5.1079607009887695
    5. '([(' → logprob: -6.1079607009887695
    6. '([]' → logprob: -6.3579607009887695
    7. '()
' → logprob: -9.35796070098877
    8. '((' → logprob: -9.48296070098877
    9. '([...' → logprob: -9.85796070098877
    10. '([
' → logprob: -10.60796070098877

Token 100: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.012643727473914623
    2. 'for' → logprob: -4.387643814086914
    3. 'range' → logprob: -9.637643814086914
    4. ' ' → logprob: -10.262643814086914
    5. '   ' → logprob: -11.887643814086914
    6. 'x' → logprob: -12.137643814086914
    7. 'n' → logprob: -12.762643814086914
    8. ' range' → logprob: -12.762643814086914
    9. ' in' → logprob: -12.887643814086914
    10. '+' → logprob: -13.012643814086914

Token 101: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.20143720507621765
    2. 'range' → logprob: -1.70143723487854
    3. ' in' → logprob: -11.326436996459961
    4. ' i' → logprob: -12.076436996459961
    5. 'i' → logprob: -12.951436996459961
    6. 'in' → logprob: -13.576436996459961
    7. '(range' → logprob: -13.951436996459961
    8. ' xrange' → logprob: -14.576436996459961
    9. '	range' → logprob: -14.826436996459961
    10. 'requests' → logprob: -15.076436996459961

Token 102: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5850867033004761
    2. ' in' → logprob: -0.8350867033004761
    3. 'range' → logprob: -4.960086822509766
    4. ' range' → logprob: -6.335086822509766
    5. 'n' → logprob: -8.710086822509766
    6. 'requests' → logprob: -9.335086822509766
    7. '(range' → logprob: -10.210086822509766
    8. ' ' → logprob: -11.585086822509766
    9. '(queue' → logprob: -12.585086822509766
    10. 'queue' → logprob: -12.710086822509766

Token 103: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.313274085521698
    2. ' range' → logprob: -1.3132741451263428
    3. 'requests' → logprob: -11.938274383544922
    4. ' xrange' → logprob: -13.313274383544922
    5. ' ' → logprob: -13.563274383544922
    6. '	range' → logprob: -14.063274383544922
    7. '   ' → logprob: -14.313274383544922
    8. '(range' → logprob: -14.688274383544922
    9. ' requests' → logprob: -15.313274383544922
    10. '  ' → logprob: -15.438274383544922

Token 104: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.030699225142598152
    2. '(len' → logprob: -3.5306992530822754
    3. '(' → logprob: -7.030699253082275
    4. '(m' → logprob: -10.280698776245117
    5. 'len' → logprob: -10.780698776245117
    6. ' (' → logprob: -12.280698776245117
    7. 'n' → logprob: -13.155698776245117
    8. ' len' → logprob: -14.655698776245117
    9. ')' → logprob: -14.655698776245117
    10. ' n' → logprob: -15.280698776245117

Token 105: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2021978199481964
    2. '))' → logprob: -1.702197790145874
    3. ' )' → logprob: -7.952198028564453
    4. ' if' → logprob: -7.952198028564453
    5. ' ))' → logprob: -9.827198028564453
    6. 'if' → logprob: -11.452198028564453
    7. '))
' → logprob: -11.952198028564453
    8. '       ' → logprob: -12.577198028564453
    9. ')))' → logprob: -12.952198028564453
    10. '   ' → logprob: -14.452198028564453

Token 106: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001049736310960725
    2. '))' → logprob: -9.875104904174805
    3. ' )' → logprob: -10.125104904174805
    4. '       ' → logprob: -11.625104904174805
    5. ')
' → logprob: -13.500104904174805
    6. ' if' → logprob: -13.625104904174805
    7. ')}' → logprob: -14.375104904174805
    8. ')))' → logprob: -14.375104904174805
    9. '   ' → logprob: -15.750104904174805
    10. ' ' → logprob: -16.250104904174805

Token 107: ' requests' (ID: 13782)
  Prédit: 'requests'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'requests' → logprob: -0.40117233991622925
    2. 'len' → logprob: -1.151172399520874
    3. ' requests' → logprob: -4.901172161102295
    4. ' len' → logprob: -5.151172161102295
    5. 'request' → logprob: -7.026172161102295
    6. 'not' → logprob: -10.776172637939453
    7. '   ' → logprob: -11.026172637939453
    8. ' ' → logprob: -11.776172637939453
    9. '(len' → logprob: -11.901172637939453
    10. ' not' → logprob: -12.276172637939453

Token 108: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.896309739408025e-07
    2. '[' → logprob: -14.250000953674316
    3. ' [' → logprob: -17.25
    4. '[I' → logprob: -18.25
    5. 'i' → logprob: -18.5
    6. '\[' → logprob: -18.625
    7. '```' → logprob: -19.125
    8. '[j' → logprob: -19.5
    9. ')[' → logprob: -20.0
    10. '[
' → logprob: -20.125

Token 109: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.012927969917654991
    2. ')' → logprob: -4.387928009033203
    3. ']' → logprob: -8.512928009033203
    4. '>)' → logprob: -10.262928009033203
    5. ')]' → logprob: -10.262928009033203
    6. '])
' → logprob: -10.387928009033203
    7. '])]' → logprob: -10.887928009033203
    8. '))' → logprob: -11.137928009033203
    9. ')])' → logprob: -11.387928009033203
    10. ''])' → logprob: -12.012928009033203

Token 110: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015577228739857674
    2. ' while' → logprob: -5.14057731628418
    3. 'while' → logprob: -5.39057731628418
    4. '        
' → logprob: -6.01557731628418
    5. '   ' → logprob: -6.14057731628418
    6. '```' → logprob: -8.64057731628418
    7. '
' → logprob: -9.51557731628418
    8. ')' → logprob: -10.39057731628418
    9. '       
' → logprob: -11.01557731628418
    10. '      ' → logprob: -11.14057731628418

Token 111: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7058641910552979
    2. 'while' → logprob: -0.9558641910552979
    3. ' while' → logprob: -2.455864191055298
    4. '   ' → logprob: -4.705863952636719
    5. 'result' → logprob: -5.330863952636719
    6. '        
' → logprob: -5.330863952636719
    7. 'output' → logprob: -5.955863952636719
    8. 'current' → logprob: -6.330863952636719
    9. 'book' → logprob: -6.455863952636719
    10. '```' → logprob: -6.830863952636719

Token 112: ' desks' (ID: 109910)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.16098502278327942
    2. ' while' → logprob: -1.910984992980957
    3. '       ' → logprob: -7.785984992980957
    4. '   ' → logprob: -9.410984992980957
    5. '#' → logprob: -9.785984992980957
    6. 'if' → logprob: -10.285984992980957
    7. 'result' → logprob: -10.660984992980957
    8. 'for' → logprob: -10.785984992980957
    9. 'answer' → logprob: -11.285984992980957
    10. ' #' → logprob: -11.660984992980957

Token 113: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0011990397470071912
    2. '=' → logprob: -6.751199245452881
    3. 's' → logprob: -12.251198768615723
    4. '_count' → logprob: -12.626198768615723
    5. '   ' → logprob: -12.876198768615723
    6. '_available' → logprob: -13.001198768615723
    7. '_' → logprob: -13.251198768615723
    8. ' ' → logprob: -13.376198768615723
    9. '=[]' → logprob: -13.376198768615723
    10. 'occupied' → logprob: -13.376198768615723

Token 114: ' list' (ID: 1562)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.34360581636428833
    2. '[' → logprob: -1.5936057567596436
    3. '[m' → logprob: -2.5936057567596436
    4. 'deque' → logprob: -5.468605995178223
    5. '[]' → logprob: -6.093605995178223
    6. ' deque' → logprob: -6.343605995178223
    7. '[c' → logprob: -7.093605995178223
    8. ' []' → logprob: -7.218605995178223
    9. '[min' → logprob: -7.593605995178223
    10. ' m' → logprob: -7.593605995178223

Token 115: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04723116755485535
    2. ' of' → logprob: -3.6722311973571777
    3. '=' → logprob: -4.422231197357178
    4. 'of' → logprob: -5.797231197357178
    5. '[' → logprob: -6.547231197357178
    6. '[int' → logprob: -6.797231197357178
    7. '   ' → logprob: -7.172231197357178
    8. '(' → logprob: -7.672231197357178
    9. '(range' → logprob: -7.797231197357178
    10. '=[' → logprob: -7.797231197357178

Token 116: ' lists' (ID: 19471)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.5603375434875488
    2. '0' → logprob: -2.185337543487549
    3. 'c' → logprob: -2.435337543487549
    4. 'False' → logprob: -2.935337543487549
    5. '[' → logprob: -3.435337543487549
    6. '[m' → logprob: -4.060337543487549
    7. 'int' → logprob: -4.185337543487549
    8. 'length' → logprob: -4.435337543487549
    9. 'size' → logprob: -4.435337543487549
    10. '-' → logprob: -4.435337543487549

Token 117: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3969700336456299
    2. '(' → logprob: -1.5219700336456299
    3. 'des' → logprob: -3.52197003364563
    4. '   ' → logprob: -3.77197003364563
    5. ' of' → logprob: -4.146969795227051
    6. '=' → logprob: -4.396969795227051
    7. ' (' → logprob: -5.396969795227051
    8. '       ' → logprob: -5.521969795227051
    9. '```' → logprob: -5.646969795227051
    10. '[' → logprob: -5.771969795227051

Token 118: ' each' (ID: 2454)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.6899040937423706
    2. ' each' → logprob: -2.06490421295166
    3. '[' → logprob: -2.18990421295166
    4. ' [[]' → logprob: -2.68990421295166
    5. ' where' → logprob: -2.81490421295166
    6. 'each' → logprob: -2.93990421295166
    7. ' []' → logprob: -3.56490421295166
    8. ' [' → logprob: -4.43990421295166
    9. ' with' → logprob: -4.81490421295166
    10. ' desks' → logprob: -5.43990421295166

Token 119: ' desk' (ID: 20794)
  Prédit: '=[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[]' → logprob: -1.6052722930908203
    2. ' =' → logprob: -1.9802722930908203
    3. ' representing' → logprob: -1.9802722930908203
    4. ' desk' → logprob: -2.2302722930908203
    5. '=' → logprob: -2.4802722930908203
    6. '[]' → logprob: -2.8552722930908203
    7. ' containing' → logprob: -2.9802722930908203
    8. ' represents' → logprob: -3.3552722930908203
    9. 'of' → logprob: -3.4802722930908203
    10. 'represent' → logprob: -3.7302722930908203

Token 120: ' holds' (ID: 18305)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4964231252670288
    2. '=' → logprob: -1.1214231252670288
    3. ' is' → logprob: -3.9964232444763184
    4. '=[]' → logprob: -3.9964232444763184
    5. ' has' → logprob: -4.746423244476318
    6. ' can' → logprob: -5.246423244476318
    7. '[]' → logprob: -5.246423244476318
    8. ' represents' → logprob: -5.996423244476318
    9. ' contains' → logprob: -6.371423244476318
    10. '[' → logprob: -7.121423244476318

Token 121: ' books' (ID: 7187)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.008314440958201885
    2. '[' → logprob: -5.633314609527588
    3. ' []' → logprob: -6.008314609527588
    4. 'deque' → logprob: -7.383314609527588
    5. 'requests' → logprob: -7.633314609527588
    6. 'books' → logprob: -8.13331413269043
    7. 'the' → logprob: -8.38331413269043
    8. 'a' → logprob: -9.13331413269043
    9. '[])' → logprob: -9.38331413269043
    10. '[]
' → logprob: -10.13331413269043

Token 122: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20616236329078674
    2. '=' → logprob: -2.081162452697754
    3. '   ' → logprob: -4.331162452697754
    4. '[]' → logprob: -4.456162452697754
    5. '[' → logprob: -4.706162452697754
    6. '=[]' → logprob: -4.831162452697754
    7. '       ' → logprob: -5.456162452697754
    8. '(' → logprob: -5.456162452697754
    9. 'for' → logprob: -6.206162452697754
    10. '=[' → logprob: -6.581162452697754

Token 123: 'IDs' (ID: 32079)
  Prédit: '[])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[])' → logprob: -0.42375946044921875
    2. '[]' → logprob: -1.5487594604492188
    3. ')' → logprob: -2.5487594604492188
    4. 'm' → logprob: -3.7987594604492188
    5. 'max' → logprob: -4.298759460449219
    6. 'deque' → logprob: -5.423759460449219
    7. '[m' → logprob: -5.548759460449219
    8. '[max' → logprob: -6.048759460449219
    9. '[' → logprob: -6.298759460449219
    10. ' [])' → logprob: -6.298759460449219

Token 124: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010551928542554379
    2. '[])' → logprob: -6.135551929473877
    3. '[]' → logprob: -6.135551929473877
    4. ' =' → logprob: -6.260551929473877
    5. '=' → logprob: -6.385551929473877
    6. '[' → logprob: -7.010551929473877
    7. ' )' → logprob: -7.135551929473877
    8. '=[]' → logprob: -8.885551452636719
    9. '   ' → logprob: -9.385551452636719
    10. '[int' → logprob: -9.510551452636719

Token 125: '       ' (ID: 309)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.6295215487480164
    2. '       ' → logprob: -1.0045216083526611
    3. '   ' → logprob: -3.379521608352661
    4. ' desks' → logprob: -3.379521608352661
    5. ' =' → logprob: -4.379521369934082
    6. '[]' → logprob: -5.254521369934082
    7. '```' → logprob: -5.379521369934082
    8. ' des' → logprob: -6.379521369934082
    9. 'books' → logprob: -6.879521369934082
    10. '[' → logprob: -6.879521369934082

Token 126: ' desks' (ID: 109910)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.07565486431121826
    2. ' desks' → logprob: -3.450654983520508
    3. '   ' → logprob: -4.075654983520508
    4. '[]' → logprob: -4.950654983520508
    5. 'books' → logprob: -5.200654983520508
    6. '[' → logprob: -5.200654983520508
    7. '       ' → logprob: -5.950654983520508
    8. ' des' → logprob: -7.200654983520508
    9. '[
' → logprob: -7.950654983520508
    10. '[]
' → logprob: -8.200654983520508

Token 127: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1604527086019516
    2. '=' → logprob: -1.9104527235031128
    3. '=[]' → logprob: -8.410452842712402
    4. '=[' → logprob: -13.160452842712402
    5. '   ' → logprob: -13.785452842712402
    6. '=[]
' → logprob: -14.285452842712402
    7. '[' → logprob: -14.785452842712402
    8. ' =[' → logprob: -15.035452842712402
    9. '[]' → logprob: -15.285452842712402
    10. ' ' → logprob: -15.410452842712402

Token 128: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0027274901513010263
    2. ' [[]' → logprob: -6.002727508544922
    3. '[]' → logprob: -8.502727508544922
    4. '[[' → logprob: -10.502727508544922
    5. ' [' → logprob: -11.002727508544922
    6. '[list' → logprob: -13.127727508544922
    7. '[List' → logprob: -14.502727508544922
    8. '[n' → logprob: -15.377727508544922
    9. '[m' → logprob: -15.377727508544922
    10. '[max' → logprob: -15.377727508544922

Token 129: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5760110020637512
    2. 'for' → logprob: -0.8260110020637512
    3. '   ' → logprob: -10.701010704040527
    4. '           ' → logprob: -11.326010704040527
    5. ']' → logprob: -11.326010704040527
    6. '	for' → logprob: -11.826010704040527
    7. '       ' → logprob: -12.701010704040527
    8. ')' → logprob: -12.826010704040527
    9. 'm' → logprob: -13.201010704040527
    10. '               ' → logprob: -13.451010704040527

Token 130: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6425740718841553
    2. 'range' → logprob: -1.1425740718841553
    3. ' range' → logprob: -1.8925740718841553
    4. '_range' → logprob: -5.517574310302734
    5. '(range' → logprob: -8.517574310302734
    6. ' _' → logprob: -8.892574310302734
    7. ' in' → logprob: -11.392574310302734
    8. '_in' → logprob: -11.767574310302734
    9. 'in' → logprob: -12.017574310302734
    10. '_i' → logprob: -13.392574310302734

Token 131: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01417032815515995
    2. ' range' → logprob: -4.264170169830322
    3. 'in' → logprob: -12.51417064666748
    4. ' in' → logprob: -13.38917064666748
    5. '(range' → logprob: -13.51417064666748
    6. '   ' → logprob: -16.389169692993164
    7. ' ' → logprob: -16.639169692993164
    8. '  ' → logprob: -17.389169692993164
    9. '	range' → logprob: -17.514169692993164
    10. '_range' → logprob: -18.014169692993164

Token 132: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0021867838222533464
    2. ' range' → logprob: -6.1271867752075195
    3. '   ' → logprob: -14.25218677520752
    4. '(range' → logprob: -15.00218677520752
    5. 'rang' → logprob: -15.50218677520752
    6. '	range' → logprob: -15.87718677520752
    7. 'ran' → logprob: -16.252187728881836
    8. ' ' → logprob: -16.252187728881836
    9. '  ' → logprob: -17.002187728881836
    10. '```' → logprob: -17.752187728881836

Token 133: '(m' (ID: 2145)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.07730302214622498
    2. 'range' → logprob: -3.202302932739258
    3. ' range' → logprob: -3.452302932739258
    4. '(m' → logprob: -6.202302932739258
    5. '(' → logprob: -11.202302932739258
    6. ' (' → logprob: -12.327302932739258
    7. '	range' → logprob: -13.327302932739258
    8. '   ' → logprob: -13.702302932739258
    9. 'm' → logprob: -14.202302932739258
    10. 'Range' → logprob: -14.577302932739258

Token 134: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -3.531315314830863e-06
    2. ']' → logprob: -13.000003814697266
    3. ')' → logprob: -14.750003814697266
    4. ')]
' → logprob: -15.000003814697266
    5. ' )' → logprob: -16.625003814697266
    6. ')],' → logprob: -17.000003814697266
    7. '   ' → logprob: -17.000003814697266
    8. '')]' → logprob: -17.250003814697266
    9. '])]' → logprob: -17.250003814697266
    10. '}]' → logprob: -17.500003814697266

Token 135: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0033314721658825874
    2. '   ' → logprob: -6.878331661224365
    3. '        
' → logprob: -7.378331661224365
    4. ' for' → logprob: -7.503331661224365
    5. 'for' → logprob: -7.753331661224365
    6. '
' → logprob: -8.378331184387207
    7. 'while' → logprob: -8.878331184387207
    8. ' while' → logprob: -9.378331184387207
    9. '<|end|>' → logprob: -9.378331184387207
    10. '```' → logprob: -10.378331184387207

Token 136: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2557210922241211
    2. 'while' → logprob: -2.130721092224121
    3. '       ' → logprob: -3.005721092224121
    4. 'book' → logprob: -5.255721092224121
    5. 'visited' → logprob: -5.380721092224121
    6. 'count' → logprob: -5.380721092224121
    7. 'used' → logprob: -5.755721092224121
    8. 'turn' → logprob: -5.880721092224121
    9. 'done' → logprob: -6.005721092224121
    10. 'pos' → logprob: -6.130721092224121

Token 137: ' shelf' (ID: 40978)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2734926640987396
    2. 'while' → logprob: -2.3984925746917725
    3. '#' → logprob: -3.6484925746917725
    4. 'book' → logprob: -4.273492813110352
    5. 'completed' → logprob: -4.523492813110352
    6. 'current' → logprob: -4.773492813110352
    7. 'fulfilled' → logprob: -4.898492813110352
    8. 'visited' → logprob: -4.898492813110352
    9. 'used' → logprob: -5.023492813110352
    10. 'processed' → logprob: -5.023492813110352

Token 138: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2530578076839447
    2. ' =' → logprob: -1.503057837486267
    3. 's' → logprob: -6.878057956695557
    4. '=[]' → logprob: -9.503057479858398
    5. 'stack' → logprob: -12.003057479858398
    6. '_stack' → logprob: -13.128057479858398
    7. '=[]
' → logprob: -14.003057479858398
    8. 'for' → logprob: -14.128057479858398
    9. 'deque' → logprob: -14.128057479858398
    10. '_s' → logprob: -14.253057479858398

Token 139: ' holds' (ID: 18305)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.6056132316589355
    2. 'deque' → logprob: -0.8556132316589355
    3. 'set' → logprob: -4.1056132316589355
    4. ' []' → logprob: -4.7306132316589355
    5. ' deque' → logprob: -6.2306132316589355
    6. '[' → logprob: -7.1056132316589355
    7. '{}' → logprob: -7.4806132316589355
    8. '[]}' → logprob: -9.230613708496094
    9. ' set' → logprob: -9.355613708496094
    10. 'collections' → logprob: -9.480613708496094

Token 140: ' books' (ID: 7187)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.04907144606113434
    2. 'books' → logprob: -4.424071311950684
    3. 'the' → logprob: -4.424071311950684
    4. ' []' → logprob: -4.549071311950684
    5. 'all' → logprob: -5.174071311950684
    6. 'deque' → logprob: -5.424071311950684
    7. '[])' → logprob: -7.299071311950684
    8. 'book' → logprob: -7.924071311950684
    9. '()' → logprob: -8.549071311950684
    10. 'remaining' → logprob: -8.674071311950684

Token 141: ' not' (ID: 625)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03826743736863136
    2. ' =' → logprob: -3.2882673740386963
    3. '=[]' → logprob: -8.663267135620117
    4. 's' → logprob: -10.663267135620117
    5. '[]' → logprob: -11.538267135620117
    6. 'deque' → logprob: -11.663267135620117
    7. '   ' → logprob: -12.913267135620117
    8. 'from' → logprob: -12.913267135620117
    9. 'for' → logprob: -13.038267135620117
    10. '=[]
' → logprob: -14.038267135620117

Token 142: ' in' (ID: 306)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.2821696102619171
    2. 'in' → logprob: -1.7821695804595947
    3. ' on' → logprob: -3.6571695804595947
    4. 'currently' → logprob: -3.6571695804595947
    5. 'yet' → logprob: -5.032169818878174
    6. ' in' → logprob: -5.657169818878174
    7. 'assigned' → logprob: -5.782169818878174
    8. 'placed' → logprob: -5.907169818878174
    9. ' currently' → logprob: -6.407169818878174
    10. 'at' → logprob: -6.532169818878174

Token 143: ' desks' (ID: 109910)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.4155903160572052
    2. 'any' → logprob: -1.4155902862548828
    3. 'use' → logprob: -2.665590286254883
    4. ' desks' → logprob: -4.290590286254883
    5. ' any' → logprob: -4.915590286254883
    6. ' use' → logprob: -6.165590286254883
    7. 'desk' → logprob: -6.790590286254883
    8. 'the' → logprob: -6.790590286254883
    9. 'a' → logprob: -8.165590286254883
    10. 'queues' → logprob: -8.165590286254883

Token 144: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.42962050437927246
    2. '=' → logprob: -1.1796205043792725
    3. 's' → logprob: -3.9296205043792725
    4. '=[]' → logprob: -4.054620742797852
    5. 'books' → logprob: -5.804620742797852
    6. '       ' → logprob: -7.679620742797852
    7. '[]' → logprob: -7.929620742797852
    8. ',' → logprob: -8.054620742797852
    9. '=[]
' → logprob: -9.179620742797852
    10. ' shelves' → logprob: -9.554620742797852

Token 145: '       ' (ID: 309)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.10374917089939117
    2. ' shelf' → logprob: -2.9787492752075195
    3. '       ' → logprob: -3.1037492752075195
    4. 'books' → logprob: -6.7287492752075195
    5. ' s' → logprob: -8.22874927520752
    6. ' books' → logprob: -8.22874927520752
    7. ' shelves' → logprob: -8.60374927520752
    8. '   ' → logprob: -8.85374927520752
    9. '```' → logprob: -9.35374927520752
    10. ' shel' → logprob: -9.35374927520752

Token 146: ' shelf' (ID: 40978)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.028589561581611633
    2. 'set' → logprob: -3.7785894870758057
    3. '[]' → logprob: -5.653589725494385
    4. ' shelf' → logprob: -6.903589725494385
    5. 'deque' → logprob: -7.403589725494385
    6. '{}' → logprob: -8.903589248657227
    7. ' []' → logprob: -10.903589248657227
    8. 'Shelf' → logprob: -11.028589248657227
    9. ' set' → logprob: -12.278589248657227
    10. '[]}' → logprob: -12.403589248657227

Token 147: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.061990655958652496
    2. ' =' → logprob: -2.811990737915039
    3. '=[]' → logprob: -10.686990737915039
    4. '＝' → logprob: -17.06199073791504
    5. 's' → logprob: -17.18699073791504
    6. '=[]
' → logprob: -17.68699073791504
    7. '={}' → logprob: -17.68699073791504
    8. '=set' → logprob: -18.31199073791504
    9. ' ' → logprob: -18.31199073791504
    10. '[:]' → logprob: -18.56199073791504

Token 148: ' set' (ID: 920)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.9825097322463989
    2. 'deque' → logprob: -1.107509732246399
    3. 'set' → logprob: -1.232509732246399
    4. '{}' → logprob: -5.857509613037109
    5. ' []' → logprob: -8.35750961303711
    6. '[' → logprob: -8.85750961303711
    7. ' deque' → logprob: -9.10750961303711
    8. ' set' → logprob: -9.48250961303711
    9. 'de' → logprob: -9.73250961303711
    10. '[]}' → logprob: -9.98250961303711

Token 149: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -9.13388703338569e-06
    2. '([]' → logprob: -12.000009536743164
    3. '()]' → logprob: -14.000009536743164
    4. '[]' → logprob: -14.375009536743164
    5. '())' → logprob: -14.750009536743164
    6. '()
' → logprob: -15.125009536743164
    7. '(' → logprob: -15.750009536743164
    8. '(range' → logprob: -16.000009536743164
    9. '()}' → logprob: -16.250009536743164
    10. '()

' → logprob: -16.375009536743164

Token 150: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008037878200411797
    2. '<|end|>' → logprob: -5.75803804397583
    3. '        
' → logprob: -6.00803804397583
    4. '   ' → logprob: -6.63303804397583
    5. '
' → logprob: -7.50803804397583
    6. '    
' → logprob: -9.008037567138672
    7. ' for' → logprob: -9.758037567138672
    8. '<|end|>' → logprob: -10.008037567138672
    9. ' while' → logprob: -10.383037567138672
    10. '	' → logprob: -10.508037567138672

Token 151: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8276731967926025
    2. 'while' → logprob: -0.8276731967926025
    3. '       ' → logprob: -2.2026731967926025
    4. ' for' → logprob: -6.077672958374023
    5. ' while' → logprob: -6.327672958374023
    6. 'result' → logprob: -6.327672958374023
    7. '   ' → logprob: -6.702672958374023
    8. 'book' → logprob: -7.452672958374023
    9. 'done' → logprob: -7.452672958374023
    10. 'next' → logprob: -7.452672958374023

Token 152: ' initially' (ID: 25998)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.025642402470111847
    2. 'while' → logprob: -5.150642395019531
    3. 'book' → logprob: -5.650642395019531
    4. 'processed' → logprob: -6.275642395019531
    5. '#' → logprob: -6.400642395019531
    6. 'fulfilled' → logprob: -6.400642395019531
    7. 'returned' → logprob: -6.525642395019531
    8. 'done' → logprob: -6.650642395019531
    9. 'completed' → logprob: -7.025642395019531
    10. 'books' → logprob: -7.025642395019531

Token 153: ' no' (ID: 860)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.44854044914245605
    2. ' for' → logprob: -1.698540449142456
    3. ',' → logprob: -2.323540449142456
    4. 'books' → logprob: -3.698540449142456
    5. 'des' → logprob: -3.823540449142456
    6. ' desks' → logprob: -5.073540687561035
    7. 'all' → logprob: -5.323540687561035
    8. '       ' → logprob: -5.448540687561035
    9. '#' → logprob: -5.573540687561035
    10. '   ' → logprob: -5.698540687561035

Token 154: ' books' (ID: 7187)
  Prédit: 'books'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'books' → logprob: -1.0367316007614136
    2. 't' → logprob: -2.036731719970703
    3. ' desk' → logprob: -2.286731719970703
    4. ' books' → logprob: -2.411731719970703
    5. 'desk' → logprob: -2.661731719970703
    6. 'book' → logprob: -2.661731719970703
    7. 'one' → logprob: -3.411731719970703
    8. ' book' → logprob: -3.786731719970703
    9. 'assigned' → logprob: -4.161731719970703
    10. 'd' → logprob: -4.786731719970703

Token 155: ' in' (ID: 306)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.8269972205162048
    2. ' in' → logprob: -1.7019972801208496
    3. 'on' → logprob: -1.8269972801208496
    4. 'in' → logprob: -1.9519972801208496
    5. ' at' → logprob: -4.57699728012085
    6. '_in' → logprob: -4.70199728012085
    7. 's' → logprob: -4.82699728012085
    8. ' =' → logprob: -4.82699728012085
    9. '   ' → logprob: -5.20199728012085
    10. ',' → logprob: -5.57699728012085

Token 156: ' desks' (ID: 109910)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.2307756245136261
    2. 'any' → logprob: -2.3557755947113037
    3. ' desks' → logprob: -2.4807755947113037
    4. 'desk' → logprob: -4.480775833129883
    5. ' any' → logprob: -4.730775833129883
    6. 'the' → logprob: -5.480775833129883
    7. 's' → logprob: -7.230775833129883
    8. ' desk' → logprob: -7.480775833129883
    9. 'books' → logprob: -7.730775833129883
    10. 'de' → logprob: -7.730775833129883

Token 157: ' =>' (ID: 871)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7905194759368896
    2. '   ' → logprob: -1.4155194759368896
    3. '    
' → logprob: -2.1655194759368896
    4. ',' → logprob: -2.9155194759368896
    5. '<|end|>' → logprob: -3.2905194759368896
    6. '        
' → logprob: -3.4155194759368896
    7. '
' → logprob: -4.290519714355469
    8. '#' → logprob: -4.665519714355469
    9. ' for' → logprob: -4.790519714355469
    10. 'books' → logprob: -5.290519714355469

Token 158: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -1.4831547737121582
    2. 'books' → logprob: -1.8581547737121582
    3. 'for' → logprob: -2.108154773712158
    4. '#' → logprob: -2.483154773712158
    5. 'None' → logprob: -3.108154773712158
    6. 'available' → logprob: -3.108154773712158
    7. 'no' → logprob: -3.483154773712158
    8. 'next' → logprob: -3.733154773712158
    9. 'pass' → logprob: -3.733154773712158
    10. 's' → logprob: -3.858154773712158

Token 159: ' books' (ID: 7187)
  Prédit: 'books'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'books' → logprob: -0.10385163128376007
    2. ' books' → logprob: -2.603851556777954
    3. 's' → logprob: -4.853851795196533
    4. ' shelf' → logprob: -5.478851795196533
    5. 'book' → logprob: -5.728851795196533
    6. ' are' → logprob: -6.353851795196533
    7. ' in' → logprob: -6.728851795196533
    8. 'in' → logprob: -6.853851795196533
    9. ' on' → logprob: -7.103851795196533
    10. 'are' → logprob: -7.978851795196533

Token 160: ' are' (ID: 553)
  Prédit: ' are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.28410741686820984
    2. 'are' → logprob: -1.9091074466705322
    3. ' in' → logprob: -3.7841074466705322
    4. ' not' → logprob: -3.9091074466705322
    5. 'not' → logprob: -4.284107208251953
    6. ' on' → logprob: -4.284107208251953
    7. 'in' → logprob: -4.784107208251953
    8. 'on' → logprob: -5.409107208251953
    9. ' =' → logprob: -5.534107208251953
    10. ' go' → logprob: -6.034107208251953

Token 161: ' on' (ID: 402)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.7209019064903259
    2. 'in' → logprob: -0.9709019064903259
    3. 's' → logprob: -2.5959019660949707
    4. 'not' → logprob: -3.8459019660949707
    5. ' on' → logprob: -4.220901966094971
    6. ' in' → logprob: -4.970901966094971
    7. 'available' → logprob: -5.095901966094971
    8. '"s' → logprob: -6.220901966094971
    9. 'free' → logprob: -6.595901966094971
    10. 'out' → logprob: -6.720901966094971

Token 162: ' shelf' (ID: 40978)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7751123309135437
    2. ' shelf' → logprob: -0.7751123309135437
    3. 'the' → logprob: -3.0251123905181885
    4. ' the' → logprob: -3.5251123905181885
    5. ' shelves' → logprob: -8.02511215209961
    6. ' shel' → logprob: -8.90011215209961
    7. ' ' → logprob: -9.77511215209961
    8. ' s' → logprob: -10.77511215209961
    9. 'helf' → logprob: -10.90011215209961
    10. '   ' → logprob: -11.02511215209961

Token 163: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009546053595840931
    2. 'while' → logprob: -5.259546279907227
    3. '        
' → logprob: -6.634546279907227
    4. ' while' → logprob: -7.009546279907227
    5. '   ' → logprob: -7.509546279907227
    6. '<|end|>' → logprob: -8.009546279907227
    7. 'for' → logprob: -8.134546279907227
    8. '      ' → logprob: -8.884546279907227
    9. '```' → logprob: -8.884546279907227
    10. '        ' → logprob: -9.259546279907227

Token 164: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018535543931648135
    2. '<|end|>' → logprob: -7.7518534660339355
    3. '        ' → logprob: -7.8768534660339355
    4. '        
' → logprob: -8.376853942871094
    5. 'for' → logprob: -8.751853942871094
    6. '   ' → logprob: -9.251853942871094
    7. 'tokens' → logprob: -9.376853942871094
    8. ' for' → logprob: -9.376853942871094
    9. '      ' → logprob: -9.626853942871094
    10. '    ' → logprob: -9.876853942871094

Token 165: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5066721439361572
    2. '       ' → logprob: -2.1316721439361572
    3. 'continue' → logprob: -2.7566721439361572
    4. 'while' → logprob: -3.2566721439361572
    5. '#' (adapté à ' #') → logprob: -3.3816721439361572
    6. 'all' → logprob: -3.3816721439361572
    7. 'pass' → logprob: -3.5066721439361572
    8. 'books' → logprob: -3.7566721439361572
    9. 'book' → logprob: -4.131671905517578
    10. '   ' → logprob: -4.631671905517578

Token 166: ' get' (ID: 717)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.33288097381591797
    2. '#' → logprob: -2.332880973815918
    3. 'all' → logprob: -2.832880973815918
    4. 'while' → logprob: -3.457880973815918
    5. '       ' → logprob: -3.582880973815918
    6. 'books' → logprob: -3.957880973815918
    7. 's' → logprob: -4.332880973815918
    8. 'book' → logprob: -4.832880973815918
    9. 'used' → logprob: -5.207880973815918
    10. ' for' → logprob: -5.957880973815918

Token 167: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.9344781041145325
    2. 'all' → logprob: -1.4344780445098877
    3. ' =' → logprob: -2.3094780445098877
    4. 's' → logprob: -3.4344780445098877
    5. 'book' → logprob: -3.6844780445098877
    6. 'ting' → logprob: -3.8094780445098877
    7. '_books' → logprob: -3.8094780445098877
    8. '()' → logprob: -4.309478282928467
    9. 'total' → logprob: -4.309478282928467
    10. ' book' → logprob: -4.309478282928467

Token 168: ' unique' (ID: 5746)
  Prédit: 'books'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'books' → logprob: -0.03504829481244087
    2. '_books' → logprob: -4.160048484802246
    3. ' books' → logprob: -4.660048484802246
    4. 'requests' → logprob: -5.785048484802246
    5. 'requested' → logprob: -6.285048484802246
    6. 'book' → logprob: -6.285048484802246
    7. 'unique' → logprob: -7.035048484802246
    8. 'tokens' → logprob: -8.160048484802246
    9. ' unique' → logprob: -8.410048484802246
    10. '_requests' → logprob: -8.535048484802246

Token 169: ' books' (ID: 7187)
  Prédit: 'books'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'books' → logprob: -0.12011019885540009
    2. ' books' → logprob: -2.870110273361206
    3. '_books' → logprob: -2.995110273361206
    4. 'book' → logprob: -5.995110034942627
    5. 'tokens' → logprob: -6.120110034942627
    6. '_tokens' → logprob: -7.745110034942627
    7. '_book' → logprob: -8.370110511779785
    8. 'requests' → logprob: -8.495110511779785
    9. ' book' → logprob: -8.620110511779785
    10. '_ids' → logprob: -8.745110511779785

Token 170: ' from' (ID: 591)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.019296646118164062
    2. '       ' → logprob: -4.019296646118164
    3. '=' → logprob: -7.269296646118164
    4. 'books' → logprob: -9.519296646118164
    5. 'tokens' → logprob: -10.019296646118164
    6. '        ' → logprob: -10.019296646118164
    7. 's' → logprob: -10.394296646118164
    8. '_books' → logprob: -10.644296646118164
    9. ' in' → logprob: -10.769296646118164
    10. '   ' → logprob: -10.894296646118164

Token 171: ' requests' (ID: 13782)
  Prédit: 'requests'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'requests' → logprob: -0.006992892362177372
    2. ' requests' → logprob: -5.006992816925049
    3. 'books' → logprob: -8.381993293762207
    4. 'request' → logprob: -10.631993293762207
    5. ' books' → logprob: -11.881993293762207
    6. '[' → logprob: -12.381993293762207
    7. 'all' → logprob: -12.631993293762207
    8. 'book' → logprob: -13.381993293762207
    9. '   ' → logprob: -13.506993293762207
    10. '.requests' → logprob: -13.631993293762207

Token 172: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33198976516723633
    2. ' all' → logprob: -1.7069897651672363
    3. 'all' → logprob: -2.5819897651672363
    4. 'books' → logprob: -4.956989765167236
    5. ' books' → logprob: -4.956989765167236
    6. ' unique' → logprob: -6.081989765167236
    7. ' =' → logprob: -6.331989765167236
    8. '        
' → logprob: -6.831989765167236
    9. '        ' → logprob: -6.956989765167236
    10. ' for' → logprob: -7.081989765167236

Token 173: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02620113268494606
    2. 'all' → logprob: -4.026201248168945
    3. ' all' → logprob: -5.026201248168945
    4. 'books' → logprob: -6.901201248168945
    5. '        
' → logprob: -9.026201248168945
    6. 'unique' → logprob: -9.276201248168945
    7. ' books' → logprob: -9.776201248168945
    8. ' unique' → logprob: -10.526201248168945
    9. '	all' → logprob: -10.526201248168945
    10. '(all' → logprob: -10.776201248168945

Token 174: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' (adapté à ' all') → logprob: -0.08508321642875671
    2. 'books' → logprob: -2.710083246231079
    3. ' all' → logprob: -4.9600830078125
    4. 'unique' → logprob: -5.0850830078125
    5. '       ' → logprob: -6.8350830078125
    6. 'uniq' → logprob: -8.3350830078125
    7. ' books' → logprob: -8.5850830078125
    8. 'book' → logprob: -9.2100830078125
    9. ' unique' → logprob: -9.4600830078125
    10. '	all' → logprob: -10.2100830078125

Token 175: '_books' (ID: 176077)
  Prédit: '_books'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_books' → logprob: -0.019440453499555588
    2. ' =' → logprob: -4.144440650939941
    3. 'books' → logprob: -6.394440650939941
    4. '=' → logprob: -6.519440650939941
    5. 'Books' → logprob: -9.144440650939941
    6. '_requests' → logprob: -9.519440650939941
    7. '=set' → logprob: -10.269440650939941
    8. '_book' → logprob: -11.144440650939941
    9. '_' → logprob: -12.269440650939941
    10. '_requested' → logprob: -12.394440650939941

Token 176: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.030077321454882622
    2. '=' → logprob: -3.5300772190093994
    3. '=set' → logprob: -8.03007698059082
    4. ' ' → logprob: -14.40507698059082
    5. '   ' → logprob: -15.65507698059082
    6. 's' → logprob: -15.65507698059082
    7. '_set' → logprob: -15.78007698059082
    8. 'set' → logprob: -15.90507698059082
    9. '  ' → logprob: -16.53007698059082
    10. '    ' → logprob: -16.90507698059082

Token 177: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.12800639867782593
    2. ' set' → logprob: -2.1280064582824707
    3. '{' → logprob: -6.878006458282471
    4. ' {' → logprob: -10.003005981445312
    5. '   ' → logprob: -14.003005981445312
    6. '=set' → logprob: -14.753005981445312
    7. '(set' → logprob: -15.003005981445312
    8. '	set' → logprob: -15.378005981445312
    9. '{s' → logprob: -15.503005981445312
    10. ' ' → logprob: -15.628005981445312

Token 178: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.039711471647024155
    2. '()
' → logprob: -3.9147114753723145
    3. '().' → logprob: -4.5397114753723145
    4. '(b' → logprob: -5.6647114753723145
    5. '(book' → logprob: -5.7897114753723145
    6. '(sum' → logprob: -7.1647114753723145
    7. '(' → logprob: -7.4147114753723145
    8. '()

' → logprob: -9.289710998535156
    9. '([' → logprob: -9.539710998535156
    10. '(request' → logprob: -10.289710998535156

Token 179: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05683346465229988
    2. 'for' → logprob: -3.056833505630493
    3. ' for' → logprob: -4.806833267211914
    4. '<|end|>' → logprob: -11.181833267211914
    5. 'from' → logprob: -12.056833267211914
    6. '        
' → logprob: -12.181833267211914
    7. '()' → logprob: -13.181833267211914
    8. '	for' → logprob: -13.306833267211914
    9. '<|end|>' → logprob: -13.556833267211914
    10. '   ' → logprob: -13.556833267211914

Token 180: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.04098626226186752
    2. '       ' → logprob: -3.7909862995147705
    3. ' for' → logprob: -4.040986061096191
    4. '	for' → logprob: -13.040986061096191
    5. '   ' → logprob: -14.040986061096191
    6. ' ' → logprob: -14.540986061096191
    7. ' ' → logprob: -15.665986061096191
    8. '        
' → logprob: -15.790986061096191
    9. 'from' → logprob: -16.290987014770508
    10. '	' → logprob: -16.540987014770508

Token 181: ' rq' (ID: 149854)
  Prédit: 'req'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'req' → logprob: -0.21910245716571808
    2. 'r' → logprob: -2.094102382659912
    3. 'rq' → logprob: -3.094102382659912
    4. 'books' → logprob: -4.594102382659912
    5. ' req' → logprob: -4.844102382659912
    6. ' rq' → logprob: -5.969102382659912
    7. 'request' → logprob: -6.094102382659912
    8. 'student' → logprob: -6.469102382659912
    9. 'q' → logprob: -6.469102382659912
    10. 'lst' → logprob: -6.719102382659912

Token 182: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016775496304035187
    2. 'u' → logprob: -4.891775608062744
    3. 'in' → logprob: -5.016775608062744
    4. 'e' → logprob: -6.641775608062744
    5. 'uest' → logprob: -7.391775608062744
    6. 'ue' → logprob: -8.266775131225586
    7. 'requests' → logprob: -9.391775131225586
    8. 'ues' → logprob: -9.516775131225586
    9. 'uer' → logprob: -10.141775131225586
    10. 'i' → logprob: -10.141775131225586

Token 183: ' requests' (ID: 13782)
  Prédit: 'requests'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'requests' → logprob: -7.517272024415433e-05
    2. ' requests' → logprob: -9.500075340270996
    3. 'request' → logprob: -15.250075340270996
    4. '.requests' → logprob: -21.75007438659668
    5. ' ' → logprob: -22.87507438659668
    6. '   ' → logprob: -23.25007438659668
    7. 'requested' → logprob: -23.87507438659668
    8. 'books' → logprob: -24.25007438659668
    9. 'questions' → logprob: -24.75007438659668
    10. 're' → logprob: -24.87507438659668

Token 184: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3506447374820709
    2. ':
' → logprob: -1.2256447076797485
    3. '           ' → logprob: -6.350644588470459
    4. '   ' → logprob: -7.975644588470459
    5. '       ' → logprob: -10.475645065307617
    6. '.extend' → logprob: -10.975645065307617
    7. ':
' → logprob: -11.350645065307617
    8. 'for' → logprob: -11.475645065307617
    9. ' :' → logprob: -11.725645065307617
    10. ' for' → logprob: -12.225645065307617

Token 185: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0014554744120687246
    2. ' for' → logprob: -6.751455307006836
    3. '	       ' → logprob: -9.376455307006836
    4. 'for' → logprob: -10.126455307006836
    5. ':
' → logprob: -10.251455307006836
    6. ':' → logprob: -10.501455307006836
    7. '   ' → logprob: -11.251455307006836
    8. '
' → logprob: -11.501455307006836
    9. '		' → logprob: -11.501455307006836
    10. '       ' → logprob: -11.876455307006836

Token 186: ' all' (ID: 722)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.21960991621017456
    2. 'all' (adapté à ' all') → logprob: -2.0946099758148193
    3. ' for' → logprob: -3.4696099758148193
    4. '   ' → logprob: -3.8446099758148193
    5. '           ' → logprob: -4.46960973739624
    6. ' all' → logprob: -4.71960973739624
    7. '       ' → logprob: -7.71960973739624
    8. ' ' → logprob: -8.094610214233398
    9. '	all' → logprob: -8.594610214233398
    10. '	for' → logprob: -9.469610214233398

Token 187: '_books' (ID: 176077)
  Prédit: '_books'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_books' → logprob: -0.08567667752504349
    2. 'update' → logprob: -3.210676670074463
    3. '.extend' → logprob: -3.960676670074463
    4. '.update' → logprob: -4.210676670074463
    5. 'extend' → logprob: -5.585676670074463
    6. 'books' → logprob: -6.085676670074463
    7. '.' → logprob: -7.335676670074463
    8. 'for' → logprob: -7.835676670074463
    9. 'Books' → logprob: -8.085677146911621
    10. '   ' → logprob: -8.835677146911621

Token 188: '.update' (ID: 8689)
  Prédit: '.update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.update' → logprob: -0.016816994175314903
    2. '.' → logprob: -4.266817092895508
    3. '|' → logprob: -6.516817092895508
    4. 'update' → logprob: -6.766817092895508
    5. ' |=' → logprob: -11.391817092895508
    6. '.=' → logprob: -13.141817092895508
    7. '.|' → logprob: -13.141817092895508
    8. '=' → logprob: -13.391817092895508
    9. '   ' → logprob: -13.766817092895508
    10. ' .' → logprob: -14.016817092895508

Token 189: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -4.930552313453518e-05
    2. 'rq' → logprob: -10.000049591064453
    3. 'r' → logprob: -13.000049591064453
    4. '(' → logprob: -14.125049591064453
    5. ' rq' → logprob: -14.750049591064453
    6. '(list' → logprob: -15.375049591064453
    7. '(request' → logprob: -16.625049591064453
    8. 'list' → logprob: -16.750049591064453
    9. '(set' → logprob: -17.625049591064453
    10. '	r' → logprob: -17.750049591064453

Token 190: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.9361264946837764e-07
    2. 'rq' → logprob: -17.5
    3. '(q' → logprob: -17.5
    4. 'eq' → logprob: -18.375
    5. '	q' → logprob: -18.375
    6. 'qr' → logprob: -18.5
    7. 'qs' → logprob: -18.625
    8. '(' → logprob: -18.625
    9. '$q' → logprob: -18.75
    10. 'e' → logprob: -18.875

Token 191: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0032516273204237223
    2. ')
' → logprob: -5.753251552581787
    3. '())' → logprob: -10.628252029418945
    4. '       ' → logprob: -10.878252029418945
    5. ' )' → logprob: -11.378252029418945
    6. ')
' → logprob: -11.628252029418945
    7. ')

' → logprob: -11.878252029418945
    8. '))' → logprob: -13.628252029418945
    9. '()' → logprob: -14.378252029418945
    10. '())
' → logprob: -15.128252029418945

Token 192: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06389647722244263
    2. 's' → logprob: -2.938896417617798
    3. 'for' → logprob: -5.938896656036377
    4. ' for' → logprob: -6.063896656036377
    5. '        
' → logprob: -6.063896656036377
    6. '```' → logprob: -7.688896656036377
    7. '
' → logprob: -8.063896179199219
    8. '#' → logprob: -8.313896179199219
    9. 'books' → logprob: -8.938896179199219
    10. '<|end|>' → logprob: -9.813896179199219

Token 193: ' shelf' (ID: 40978)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.018016954883933067
    2. '       ' → logprob: -4.893016815185547
    3. 'for' → logprob: -5.393016815185547
    4. ' shelf' → logprob: -5.393016815185547
    5. '   ' → logprob: -7.393016815185547
    6. ' for' → logprob: -7.643016815185547
    7. '
' → logprob: -10.018016815185547
    8. '        
' → logprob: -10.643016815185547
    9. 'books' → logprob: -10.768016815185547
    10. '```' → logprob: -10.893016815185547

Token 194: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.019882293418049812
    2. ' =' → logprob: -4.5198822021484375
    3. '.update' → logprob: -4.7698822021484375
    4. '.=' → logprob: -8.519882202148438
    5. '.' → logprob: -9.269882202148438
    6. ' |=' → logprob: -11.894882202148438
    7. '|' → logprob: -12.144882202148438
    8. 'update' → logprob: -12.519882202148438
    9. '=.' → logprob: -12.894882202148438
    10. '＝' → logprob: -14.144882202148438

Token 195: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.06117970123887062
    2. 'set' → logprob: -3.0611796379089355
    3. ' all' → logprob: -4.5611796379089355
    4. ' set' → logprob: -6.1861796379089355
    5. '{' → logprob: -13.561180114746094
    6. 'copy' → logprob: -13.686180114746094
    7. '   ' → logprob: -14.186180114746094
    8. 'All' → logprob: -14.311180114746094
    9. '	all' → logprob: -14.311180114746094
    10. ' ' → logprob: -15.061180114746094

Token 196: '_books' (ID: 176077)
  Prédit: '_books'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_books' → logprob: -1.5213274309644476e-05
    2. '(' → logprob: -11.500015258789062
    3. '(_' → logprob: -13.000015258789062
    4. 'books' → logprob: -14.125015258789062
    5. '._' → logprob: -14.250015258789062
    6. 'Books' → logprob: -14.375015258789062
    7. '_book' → logprob: -15.375015258789062
    8. '.books' → logprob: -16.250015258789062
    9. 's' → logprob: -16.750015258789062
    10. '_bo' → logprob: -17.000015258789062

Token 197: '.copy' (ID: 22925)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008264562115073204
    2. '
' → logprob: -5.008264541625977
    3. '        
' → logprob: -7.008264541625977
    4. '.copy' → logprob: -7.758264541625977
    5. '
' → logprob: -9.758264541625977
    6. '<|end|>' → logprob: -10.383264541625977
    7. ' while' → logprob: -10.883264541625977
    8. 'while' → logprob: -11.008264541625977
    9. '```' → logprob: -11.508264541625977
    10. '   ' → logprob: -11.508264541625977

Token 198: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -6.825890159234405e-05
    2. '()
' → logprob: -9.625068664550781
    3. '()

' → logprob: -14.000068664550781
    4. '(' → logprob: -14.500068664550781
    5. '()]' → logprob: -15.125068664550781
    6. '()\' → logprob: -15.500068664550781
    7. '())' → logprob: -15.750068664550781
    8. '()`' → logprob: -16.37506866455078
    9. '().' → logprob: -17.25006866455078
    10. ' ()' → logprob: -17.50006866455078

Token 199: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08489280194044113
    2. 'while' → logprob: -2.584892749786377
    3. ' while' → logprob: -5.584892749786377
    4. '   ' → logprob: -6.709892749786377
    5. '        
' → logprob: -7.584892749786377
    6. 'for' → logprob: -9.084893226623535
    7. 'next' → logprob: -9.709893226623535
    8. 'current' → logprob: -9.709893226623535
    9. '      ' → logprob: -10.084893226623535
    10. '```' → logprob: -10.334893226623535

Token 200: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.21839401125907898
    2. '       ' → logprob: -1.8433940410614014
    3. ' while' → logprob: -3.9683940410614014
    4. 'for' → logprob: -5.093393802642822
    5. 'current' → logprob: -6.093393802642822
    6. '   ' → logprob: -6.093393802642822
    7. 'count' → logprob: -6.343393802642822
    8. 'result' → logprob: -7.218393802642822
    9. 'used' → logprob: -7.343393802642822
    10. 'books' → logprob: -7.468393802642822

Token 201: ' For' (ID: 2214)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.035682208836078644
    2. 'turn' → logprob: -5.160682201385498
    3. 'ans' → logprob: -5.910682201385498
    4. 'book' → logprob: -6.035682201385498
    5. 'time' → logprob: -6.035682201385498
    6. 'score' → logprob: -6.160682201385498
    7. 'for' → logprob: -6.285682201385498
    8. 'answer' → logprob: -6.410682201385498
    9. 'count' → logprob: -6.660682201385498
    10. 'result' → logprob: -6.660682201385498

Token 202: ' tracking' (ID: 20254)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8780478835105896
    2. ' _' → logprob: -1.8780479431152344
    3. '_request' → logprob: -2.7530479431152344
    4. ' desk' → logprob: -3.1280479431152344
    5. ' i' → logprob: -3.2530479431152344
    6. '_each' → logprob: -3.2530479431152344
    7. '_req' → logprob: -3.5030479431152344
    8. ' day' → logprob: -3.7530479431152344
    9. '_day' → logprob: -3.8780479431152344
    10. ' each' → logprob: -4.128047943115234

Token 203: ' which' (ID: 1118)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.6110804080963135
    2. 'which' → logprob: -1.6110804080963135
    3. 'book' → logprob: -2.2360804080963135
    4. 'books' → logprob: -2.3610804080963135
    5. 'desk' → logprob: -2.4860804080963135
    6. ' which' → logprob: -3.2360804080963135
    7. 'borrow' → logprob: -3.2360804080963135
    8. 'visited' → logprob: -3.4860804080963135
    9. 'returned' → logprob: -3.4860804080963135
    10. 'current' → logprob: -3.6110804080963135

Token 204: ' book' (ID: 2392)
  Prédit: 'books'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'books' → logprob: -0.9495646953582764
    2. 'book' → logprob: -1.1995646953582764
    3. 'desk' → logprob: -2.1995646953582764
    4. ' books' → logprob: -2.4495646953582764
    5. ' desk' → logprob: -2.8245646953582764
    6. 'student' → logprob: -4.0745649337768555
    7. ' book' → logprob: -4.0745649337768555
    8. ' student' → logprob: -4.9495649337768555
    9. 'request' → logprob: -5.9495649337768555
    10. ' students' → logprob: -6.3245649337768555

Token 205: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.02323138155043125
    2. 's' → logprob: -4.523231506347656
    3. 'is' → logprob: -5.023231506347656
    4. ' goes' → logprob: -6.648231506347656
    5. ' at' → logprob: -7.273231506347656
    6. ' was' → logprob: -7.648231506347656
    7. ' desk' → logprob: -7.648231506347656
    8. ' belongs' → logprob: -7.773231506347656
    9. ' sits' → logprob: -8.148231506347656
    10. '<|end|>' → logprob: -8.148231506347656

Token 206: ' where' (ID: 1919)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -1.7241026163101196
    2. ' where' → logprob: -1.7241026163101196
    3. ' on' → logprob: -2.09910249710083
    4. 'at' → logprob: -2.22410249710083
    5. 'currently' → logprob: -2.22410249710083
    6. 'on' → logprob: -2.34910249710083
    7. 'where' → logprob: -2.34910249710083
    8. ' currently' → logprob: -3.22410249710083
    9. 'requested' → logprob: -4.09910249710083
    10. ' requested' → logprob: -4.47410249710083

Token 207: ':' (ID: 25)
  Prédit: 'book'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'book' → logprob: -0.7624777555465698
    2. '       ' → logprob: -1.3874777555465698
    3. 'location' → logprob: -1.6374777555465698
    4. 'locations' → logprob: -3.7624778747558594
    5. ' book' → logprob: -3.8874778747558594
    6. ' location' → logprob: -4.012477874755859
    7. ' locations' → logprob: -4.262477874755859
    8. 'books' → logprob: -6.137477874755859
    9. ',' → logprob: -6.137477874755859
    10. '        
' → logprob: -6.387477874755859

Token 208: ' desk' (ID: 20794)
  Prédit: ' book'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' book' → logprob: -0.6451395750045776
    2. 'book' → logprob: -0.7701395750045776
    3. ' locations' → logprob: -5.270139694213867
    4. ' location' → logprob: -5.645139694213867
    5. 'location' → logprob: -6.395139694213867
    6. 'locations' → logprob: -7.770139694213867
    7. 'books' → logprob: -8.020139694213867
    8. ' books' → logprob: -8.895139694213867
    9. ' #' → logprob: -9.020139694213867
    10. ' where' → logprob: -9.020139694213867

Token 209: ' index' (ID: 3472)
  Prédit: '_book'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_book' → logprob: -0.5093141794204712
    2. '_location' → logprob: -1.6343141794204712
    3. ' =' → logprob: -2.3843140602111816
    4. '_of' → logprob: -3.6343140602111816
    5. '_locations' → logprob: -3.6343140602111816
    6. '_books' → logprob: -4.134314060211182
    7. '_at' → logprob: -4.509314060211182
    8. '_pos' → logprob: -4.884314060211182
    9. '_loc' → logprob: -5.009314060211182
    10. '_map' → logprob: -5.759314060211182

Token 210: ' ' (ID: 220)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2326953411102295
    2. 's' → logprob: -2.1076953411102295
    3. '_book' → logprob: -3.3576953411102295
    4. '_' → logprob: -4.482695579528809
    5. '_books' → logprob: -4.857695579528809
    6. '=' → logprob: -4.857695579528809
    7. 'book' → logprob: -5.357695579528809
    8. '_map' → logprob: -5.482695579528809
    9. '_of' → logprob: -5.607695579528809
    10. '[]' → logprob: -6.482695579528809

Token 211: '0' (ID: 15)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.27720198035240173
    2. ' =' → logprob: -1.5272020101547241
    3. 'book' → logprob: -4.277202129364014
    4. '_book' → logprob: -5.777202129364014
    5. '_' → logprob: -6.152202129364014
    6. ',' → logprob: -6.527202129364014
    7. 'of' → logprob: -7.277202129364014
    8. 's' → logprob: -7.652202129364014
    9. 'for' → logprob: -7.652202129364014
    10. 'books' → logprob: -8.152201652526855

Token 212: '..' (ID: 485)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8436266183853149
    2. ',' → logprob: -1.093626618385315
    3. ' =' → logprob: -2.8436264991760254
    4. ' ,' → logprob: -3.0936264991760254
    5. ':' → logprob: -3.5936264991760254
    6. 'for' → logprob: -3.5936264991760254
    7. '=' → logprob: -3.8436264991760254
    8. ' for' → logprob: -4.593626499176025
    9. ')' → logprob: -5.593626499176025
    10. 's' → logprob: -5.593626499176025

Token 213: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.002129087457433343
    2. ' m' → logprob: -7.127129077911377
    3. '(m' → logprob: -7.502129077911377
    4. '-' → logprob: -8.127129554748535
    5. '...' → logprob: -8.877129554748535
    6. '=' → logprob: -9.877129554748535
    7. '(' → logprob: -9.877129554748535
    8. '```' → logprob: -10.127129554748535
    9. ')' → logprob: -10.627129554748535
    10. 'n' → logprob: -10.877129554748535

Token 214: '-' (ID: 12)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.961998462677002
    2. ')' → logprob: -2.086998462677002
    3. 's' → logprob: -2.211998462677002
    4. ' =' → logprob: -2.211998462677002
    5. 'books' → logprob: -2.336998462677002
    6. ',' → logprob: -2.461998462677002
    7. '_books' → logprob: -2.461998462677002
    8. '_book' → logprob: -3.461998462677002
    9. 'book' → logprob: -3.586998462677002
    10. '#' → logprob: -3.836998462677002

Token 215: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004484269011300057
    2. '-' → logprob: -7.750448226928711
    3. 's' → logprob: -11.750448226928711
    4. '```' → logprob: -12.250448226928711
    5. 'n' → logprob: -13.750448226928711
    6. ' ' → logprob: -14.000448226928711
    7. '...' → logprob: -14.250448226928711
    8. 'c' → logprob: -14.875448226928711
    9. 'len' → logprob: -15.250448226928711
    10. ' -' → logprob: -15.250448226928711

Token 216: ' or' (ID: 503)
  Prédit: 'book'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'book' → logprob: -0.03924403339624405
    2. ',' → logprob: -3.9142439365386963
    3. ' book' → logprob: -4.789244174957275
    4. 'location' → logprob: -5.289244174957275
    5. 'books' → logprob: -6.664244174957275
    6. '
' → logprob: -7.164244174957275
    7. '#' → logprob: -7.539244174957275
    8. ' location' → logprob: -8.164243698120117
    9. 'locations' → logprob: -8.289243698120117
    10. '   ' → logprob: -8.539243698120117

Token 217: ' shelf' (ID: 40978)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.654072105884552
    2. 'None' → logprob: -1.0290720462799072
    3. ''s' → logprob: -2.4040720462799072
    4. '-' → logprob: -4.154072284698486
    5. ' shelf' → logprob: -5.279072284698486
    6. '"s' → logprob: -5.279072284698486
    7. ' None' → logprob: -5.529072284698486
    8. ''' → logprob: -7.529072284698486
    9. '`s' → logprob: -7.779072284698486
    10. 'none' → logprob: -8.154071807861328

Token 218: ' m' (ID: 284)
  Prédit: 'book'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'book' → logprob: -0.16484317183494568
    2. 'location' → logprob: -2.7898430824279785
    3. ',' → logprob: -3.4148430824279785
    4. ' book' → logprob: -4.0398430824279785
    5. '
' → logprob: -4.4148430824279785
    6. ' =' → logprob: -4.7898430824279785
    7. 'locations' → logprob: -5.2898430824279785
    8. ' location' → logprob: -5.6648430824279785
    9. '#' → logprob: -6.1648430824279785
    10. '=' → logprob: -6.9148430824279785

Token 219: '
' (ID: 198)
  Prédit: 'book'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'book' → logprob: -0.2605340778827667
    2. 'location' → logprob: -1.6355340480804443
    3. 'locations' → logprob: -4.635534286499023
    4. 'loc' → logprob: -5.635534286499023
    5. 'where' → logprob: -5.760534286499023
    6. 'def' → logprob: -5.885534286499023
    7. '#' → logprob: -6.135534286499023
    8. 'position' → logprob: -6.385534286499023
    9. 'books' → logprob: -6.385534286499023
    10. 'pos' → logprob: -6.760534286499023

Token 220: '       ' (ID: 309)
  Prédit: 'book'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'book' → logprob: -0.5785295963287354
    2. 'location' → logprob: -1.0785295963287354
    3. '   ' → logprob: -3.2035295963287354
    4. '       ' → logprob: -3.7035295963287354
    5. 'locations' → logprob: -4.453529357910156
    6. '
' → logprob: -4.828529357910156
    7. 'loc' → logprob: -5.828529357910156
    8. 'position' → logprob: -5.953529357910156
    9. 'def' → logprob: -6.203529357910156
    10. ' location' → logprob: -6.703529357910156

Token 221: ' book' (ID: 2392)
  Prédit: 'book'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'book' (adapté à ' book') → logprob: -0.06008179113268852
    2. 'location' → logprob: -3.310081720352173
    3. 'loc' → logprob: -5.185081958770752
    4. 'pos' → logprob: -5.310081958770752
    5. 'locations' → logprob: -5.810081958770752
    6. 'def' → logprob: -6.060081958770752
    7. 'where' → logprob: -6.310081958770752
    8. 'position' → logprob: -6.935081958770752
    9. 'positions' → logprob: -6.935081958770752
    10. '   ' → logprob: -7.310081958770752

Token 222: '_pos' (ID: 14692)
  Prédit: '_location'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_location' → logprob: -0.03255632519721985
    2. '_locations' → logprob: -3.5325562953948975
    3. '_loc' → logprob: -6.532556533813477
    4. '_pos' → logprob: -7.157556533813477
    5. 'location' → logprob: -9.032556533813477
    6. '_position' → logprob: -9.157556533813477
    7. '_positions' → logprob: -9.407556533813477
    8. '_to' → logprob: -9.532556533813477
    9. '_place' → logprob: -10.282556533813477
    10. '_owner' → logprob: -10.407556533813477

Token 223: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12693126499652863
    2. ' =' → logprob: -2.1269311904907227
    3. 's' → logprob: -13.626931190490723
    4. '={}' → logprob: -13.626931190490723
    5. '=[]' → logprob: -15.751931190490723
    6. '[' → logprob: -16.25193214416504
    7. ' ' → logprob: -16.62693214416504
    8. '   ' → logprob: -16.75193214416504
    9. '=
' → logprob: -16.87693214416504
    10. ')' → logprob: -17.00193214416504

Token 224: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.000938854762353003
    2. '{' → logprob: -7.500938892364502
    3. 'dict' → logprob: -9.125938415527344
    4. '[' → logprob: -9.250938415527344
    5. '[m' → logprob: -9.750938415527344
    6. '[s' → logprob: -9.875938415527344
    7. '{s' → logprob: -10.125938415527344
    8. ' {}' → logprob: -11.375938415527344
    9. '[-' → logprob: -11.375938415527344
    10. '{}
' → logprob: -12.750938415527344

Token 225: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013836956582963467
    2. ' for' → logprob: -5.263836860656738
    3. '<|end|>' → logprob: -5.388836860656738
    4. '   ' → logprob: -6.388836860656738
    5. 'for' → logprob: -6.638836860656738
    6. '        ' → logprob: -8.138836860656738
    7. '	' → logprob: -8.888836860656738
    8. ' ' → logprob: -9.013836860656738
    9. '<|end|>' → logprob: -9.263836860656738
    10. '	for' → logprob: -9.388836860656738

Token 226: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.04332846775650978
    2. ' for' → logprob: -3.1683285236358643
    3. '       ' → logprob: -8.043328285217285
    4. '   ' → logprob: -12.918328285217285
    5. '<|end|>' → logprob: -13.543328285217285
    6. '	for' → logprob: -13.918328285217285
    7. ' ' → logprob: -14.793328285217285
    8. 'next' → logprob: -14.793328285217285
    9. ')' → logprob: -15.043328285217285
    10. '        ' → logprob: -15.043328285217285

Token 227: ' b' (ID: 287)
  Prédit: 'book'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'book' → logprob: -0.41201251745224
    2. 'b' → logprob: -1.1620125770568848
    3. 'bk' → logprob: -5.037012577056885
    4. 'bid' → logprob: -5.287012577056885
    5. 'desk' → logprob: -5.662012577056885
    6. ' b' → logprob: -5.912012577056885
    7. 'i' → logprob: -6.037012577056885
    8. ' book' → logprob: -6.662012577056885
    9. 'pos' → logprob: -6.662012577056885
    10. 'rq' → logprob: -6.662012577056885

Token 228: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0028835684061050415
    2. 'in' → logprob: -5.877883434295654
    3. 'ooks' → logprob: -10.127883911132812
    4. 'ook' → logprob: -10.752883911132812
    5. 's' → logprob: -11.752883911132812
    6. '_in' → logprob: -13.252883911132812
    7. ',' → logprob: -13.752883911132812
    8. '_' → logprob: -13.877883911132812
    9. ' ' → logprob: -14.002883911132812
    10. 'i' → logprob: -14.252883911132812

Token 229: ' shelf' (ID: 40978)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.22589321434497833
    2. ' all' → logprob: -1.600893259048462
    3. 's' → logprob: -7.975893020629883
    4. ' shelf' → logprob: -9.725893020629883
    5. ' ' → logprob: -9.975893020629883
    6. '   ' → logprob: -11.600893020629883
    7. '  ' → logprob: -12.600893020629883
    8. ' range' → logprob: -12.725893020629883
    9. '	all' → logprob: -12.725893020629883
    10. '    ' → logprob: -13.475893020629883

Token 230: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12754425406455994
    2. ':
' → logprob: -2.1275441646575928
    3. '   ' → logprob: -7.752544403076172
    4. '           ' → logprob: -9.752544403076172
    5. ':
' → logprob: -10.127544403076172
    6. '       ' → logprob: -10.627544403076172
    7. '=' → logprob: -11.002544403076172
    8. ' :' → logprob: -11.377544403076172
    9. ',' → logprob: -11.627544403076172
    10. '):
' → logprob: -11.627544403076172

Token 231: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0032059962395578623
    2. '   ' → logprob: -5.7532057762146
    3. '       ' → logprob: -10.878206253051758
    4. 'book' → logprob: -12.503206253051758
    5. ' book' → logprob: -13.253206253051758
    6. '	   ' → logprob: -13.628206253051758
    7. '	       ' → logprob: -14.503206253051758
    8. '          ' → logprob: -14.628206253051758
    9. ' ' → logprob: -14.753206253051758
    10. '		' → logprob: -15.003206253051758

Token 232: ' book' (ID: 2392)
  Prédit: 'book'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'book' (adapté à ' book') → logprob: -0.0009639846975915134
    2. ' book' → logprob: -7.000964164733887
    3. '   ' → logprob: -10.000964164733887
    4. '	book' → logprob: -12.000964164733887
    5. '           ' → logprob: -14.875964164733887
    6. '       ' → logprob: -15.000964164733887
    7. ' ' → logprob: -15.375964164733887
    8. 'books' → logprob: -17.75096321105957
    9. '  ' → logprob: -17.87596321105957
    10. '.book' → logprob: -18.37596321105957

Token 233: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -6.704273118884885e-07
    2. '_' → logprob: -15.375000953674316
    3. 'pos' → logprob: -15.625000953674316
    4. '_p' → logprob: -16.75
    5. ' _' → logprob: -17.25
    6. '_s' → logprob: -17.375
    7. '```' → logprob: -17.5
    8. '[_' → logprob: -17.875
    9. '_position' → logprob: -18.0
    10. '[pos' → logprob: -18.0

Token 234: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -3.941161776310764e-05
    2. '[' → logprob: -10.375039100646973
    3. ' [' → logprob: -12.375039100646973
    4. '[m' → logprob: -13.375039100646973
    5. 'b' → logprob: -14.625039100646973
    6. '=' → logprob: -14.625039100646973
    7. ' =' → logprob: -14.875039100646973
    8. '=b' → logprob: -14.875039100646973
    9. '['' → logprob: -16.25004005432129
    10. '[B' → logprob: -16.62504005432129

Token 235: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04244166985154152
    2. '=' → logprob: -4.1674418449401855
    3. ']=' → logprob: -4.4174418449401855
    4. ' =' → logprob: -4.7924418449401855
    5. ' ]' → logprob: -5.1674418449401855
    6. ']='' → logprob: -13.792441368103027
    7. ')' → logprob: -13.917441368103027
    8. '   ' → logprob: -14.042441368103027
    9. ' ' → logprob: -14.292441368103027
    10. '}' → logprob: -15.292441368103027

Token 236: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12694354355335236
    2. ' =' → logprob: -2.126943588256836
    3. '=m' → logprob: -11.251943588256836
    4. ' ' → logprob: -14.626943588256836
    5. '=s' → logprob: -14.751943588256836
    6. ']' → logprob: -14.751943588256836
    7. ']=' → logprob: -15.001943588256836
    8. '   ' → logprob: -15.376943588256836
    9. '='' → logprob: -15.501943588256836
    10. ' ='' → logprob: -16.251943588256836

Token 237: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -5.371605948312208e-05
    2. ' m' → logprob: -9.875053405761719
    3. ''m' → logprob: -13.375053405761719
    4. '   ' → logprob: -14.625053405761719
    5. 's' → logprob: -16.12505340576172
    6. ''s' → logprob: -17.25005340576172
    7. '"' → logprob: -17.25005340576172
    8. ' ' → logprob: -17.62505340576172
    9. '	m' → logprob: -17.75005340576172
    10. '[m' → logprob: -18.00005340576172

Token 238: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13395754992961884
    2. '   ' → logprob: -2.383957624435425
    3. ' while' → logprob: -4.633957386016846
    4. '        
' → logprob: -4.883957386016846
    5. 'while' → logprob: -5.008957386016846
    6. '
' → logprob: -5.883957386016846
    7. '    
' → logprob: -6.008957386016846
    8. '	while' → logprob: -6.758957386016846
    9. '<|end|>' → logprob: -7.758957386016846
    10. '    ' → logprob: -7.883957386016846

Token 239: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.01638013869524002
    2. '       ' → logprob: -4.516380310058594
    3. '<|end|>' → logprob: -6.391380310058594
    4. '        
' → logprob: -7.141380310058594
    5. '   ' → logprob: -7.141380310058594
    6. '    
' → logprob: -7.516380310058594
    7. '
' → logprob: -8.141380310058594
    8. ' ' → logprob: -8.266380310058594
    9. '  
' → logprob: -8.391380310058594
    10. ' 
' → logprob: -8.641380310058594

Token 240: ' shelf' (ID: 40978)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.1429644078016281
    2. ' #' → logprob: -2.1429643630981445
    3. '
' → logprob: -5.2679643630981445
    4. 's' → logprob: -5.8929643630981445
    5. '       ' → logprob: -6.1429643630981445
    6. ' ' → logprob: -6.1429643630981445
    7. '<|end|>' → logprob: -6.1429643630981445
    8. '        
' → logprob: -7.8929643630981445
    9. '   ' → logprob: -7.8929643630981445
    10. '```' → logprob: -8.767964363098145

Token 241: ' index' (ID: 3472)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2540607154369354
    2. '
' → logprob: -2.004060745239258
    3. '<|end|>' → logprob: -3.254060745239258
    4. '        
' → logprob: -3.379060745239258
    5. '<|end|>' → logprob: -5.129060745239258
    6. 'while' → logprob: -6.504060745239258
    7. '   ' → logprob: -6.629060745239258
    8. '    
' → logprob: -6.629060745239258
    9. ' while' → logprob: -7.129060745239258
    10. '```' → logprob: -7.254060745239258

Token 242: ' is' (ID: 382)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.27758118510246277
    2. '       ' → logprob: -1.5275812149047852
    3. '        
' → logprob: -4.527581214904785
    4. '<|end|>' → logprob: -5.402581214904785
    5. '<|end|>' → logprob: -5.652581214904785
    6. '    
' → logprob: -6.152581214904785
    7. '   ' → logprob: -6.527581214904785
    8. 'while' → logprob: -7.527581214904785
    9. '
' → logprob: -7.652581214904785
    10. ' while' → logprob: -8.152581214904785

Token 243: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0004309076175559312
    2. ' m' → logprob: -7.750431060791016
    3. 's' → logprob: -16.125431060791016
    4. '   ' → logprob: -16.625431060791016
    5. '	m' → logprob: -17.875431060791016
    6. '=m' → logprob: -18.000431060791016
    7. '```' → logprob: -18.625431060791016
    8. '`' → logprob: -18.750431060791016
    9. '0' → logprob: -19.000431060791016
    10. '  ' → logprob: -19.000431060791016

Token 244: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14009642601013184
    2. '
' → logprob: -2.390096426010132
    3. '        
' → logprob: -3.765096426010132
    4. '   ' → logprob: -5.015096664428711
    5. '    
' → logprob: -5.890096664428711
    6. '<|end|>' → logprob: -6.390096664428711
    7. '<|end|>' → logprob: -6.890096664428711
    8. 'while' → logprob: -7.390096664428711
    9. ' while' → logprob: -7.390096664428711
    10. '		
' → logprob: -7.515096664428711

Token 245: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13790364563465118
    2. '        
' → logprob: -3.2629036903381348
    3. 'while' → logprob: -3.6379036903381348
    4. '
' → logprob: -3.7629036903381348
    5. ' while' → logprob: -4.137903690338135
    6. '   ' → logprob: -5.137903690338135
    7. '<|end|>' → logprob: -5.137903690338135
    8. '	while' → logprob: -5.762903690338135
    9. '    
' → logprob: -6.262903690338135
    10. '        ' → logprob: -6.262903690338135

Token 246: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17376774549484253
    2. 'while' → logprob: -2.0487678050994873
    3. ' while' → logprob: -3.7987678050994873
    4. '   ' → logprob: -5.298767566680908
    5. '        
' → logprob: -6.048767566680908
    6. '    
' → logprob: -8.173768043518066
    7. '	while' → logprob: -8.298768043518066
    8. 'next' → logprob: -9.673768043518066
    9. '
' → logprob: -9.798768043518066
    10. '    ' → logprob: -10.173768043518066

Token 247: ' For' (ID: 2214)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.015719464048743248
    2. 'for' → logprob: -5.015719413757324
    3. '       ' → logprob: -5.640719413757324
    4. 'def' → logprob: -5.765719413757324
    5. ' while' → logprob: -6.890719413757324
    6. 'from' → logprob: -8.140719413757324
    7. '   ' → logprob: -8.640719413757324
    8. 'result' → logprob: -8.765719413757324
    9. '#' → logprob: -9.265719413757324
    10. 'import' → logprob: -9.890719413757324

Token 248: ' tracking' (ID: 20254)
  Prédit: ' desk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' desk' → logprob: -1.53768789768219
    2. ' student' → logprob: -1.66268789768219
    3. ' i' → logprob: -2.1626877784729004
    4. ' _' → logprob: -2.4126877784729004
    5. '_' → logprob: -2.5376877784729004
    6. 'student' → logprob: -2.6626877784729004
    7. 'i' → logprob: -2.7876877784729004
    8. ' tracking' → logprob: -3.6626877784729004
    9. 'desk' → logprob: -3.6626877784729004
    10. ' book' → logprob: -4.1626877784729

Token 249: ' usage' (ID: 16622)
  Prédit: ' desk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' desk' → logprob: -0.9609342217445374
    2. ' the' → logprob: -2.4609341621398926
    3. ' which' → logprob: -2.5859341621398926
    4. 'desk' → logprob: -2.5859341621398926
    5. 'the' → logprob: -2.8359341621398926
    6. 'each' → logprob: -3.2109341621398926
    7. 'which' → logprob: -3.3359341621398926
    8. 'current' → logprob: -3.5859341621398926
    9. 'student' → logprob: -3.9609341621398926
    10. 'books' → logprob: -4.210934162139893

Token 250: ' order' (ID: 2569)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.14180706441402435
    2. 'counts' → logprob: -3.1418070793151855
    3. 'time' → logprob: -3.6418070793151855
    4. 'frequency' → logprob: -3.8918070793151855
    5. '_count' → logprob: -4.0168070793151855
    6. ' =' → logprob: -5.2668070793151855
    7. '_counts' → logprob: -5.2668070793151855
    8. 'times' → logprob: -5.8918070793151855
    9. 'order' → logprob: -6.0168070793151855
    10. 'timestamps' → logprob: -6.7668070793151855

Token 251: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5607698559761047
    2. 'queue' → logprob: -1.56076979637146
    3. 'order' → logprob: -2.81076979637146
    4. 'usage' → logprob: -3.18576979637146
    5. 'deque' → logprob: -3.56076979637146
    6. 'stack' → logprob: -4.435770034790039
    7. ',' → logprob: -4.685770034790039
    8. 'books' → logprob: -4.810770034790039
    9. 'recent' → logprob: -5.060770034790039
    10. 'book' → logprob: -5.185770034790039

Token 252: ' D' (ID: 415)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.20212028920650482
    2. 'each' → logprob: -2.702120304107666
    3. 'de' → logprob: -3.327120304107666
    4. ' desks' → logprob: -4.077120304107666
    5. 'the' → logprob: -4.327120304107666
    6. 'books' → logprob: -4.452120304107666
    7. 'deque' → logprob: -4.827120304107666
    8. 'desk' → logprob: -4.952120304107666
    9. 'collections' → logprob: -5.202120304107666
    10. 'LR' → logprob: -5.327120304107666

Token 253: '1' (ID: 16)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.6616882681846619
    2. 'e' → logprob: -0.7866882681846619
    3. 'esk' → logprob: -4.036688327789307
    4. 'queue' → logprob: -5.786688327789307
    5. 'ES' → logprob: -5.786688327789307
    6. 'E' → logprob: -5.911688327789307
    7. 'Q' → logprob: -8.286687850952148
    8. 'eq' → logprob: -8.536687850952148
    9. 'ecs' → logprob: -8.786687850952148
    10. 'deque' → logprob: -9.036687850952148

Token 254: ':' (ID: 25)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'es' → logprob: -1.5014010667800903
    2. ',' → logprob: -1.6264010667800903
    3. ' =' → logprob: -1.7514010667800903
    4. '<|end|>' → logprob: -1.8764010667800903
    5. 's' → logprob: -3.376400947570801
    6. 'queue' → logprob: -3.501400947570801
    7. 'esk' → logprob: -3.626400947570801
    8. 'e' → logprob: -3.751400947570801
    9. ' ,' → logprob: -4.126400947570801
    10. ' and' → logprob: -4.376400947570801

Token 255: ' list' (ID: 1562)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -2.099146604537964
    2. 'use' → logprob: -2.099146604537964
    3. 'usage' → logprob: -2.099146604537964
    4. 'used' → logprob: -2.224146604537964
    5. 'l' → logprob: -2.474146604537964
    6. 'from' → logprob: -2.849146604537964
    7. ' usage' → logprob: -2.849146604537964
    8. 'last' → logprob: -3.349146604537964
    9. ' l' → logprob: -3.474146604537964
    10. 'dq' → logprob: -3.474146604537964

Token 256: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11878691613674164
    2. ',' → logprob: -3.6187868118286133
    3. '[]' → logprob: -4.368786811828613
    4. ' of' → logprob: -4.618786811828613
    5. 'of' → logprob: -4.618786811828613
    6. '=[]' → logprob: -4.993786811828613
    7. '=' → logprob: -5.243786811828613
    8. 'D' → logprob: -5.243786811828613
    9. '[' → logprob: -5.368786811828613
    10. '   ' → logprob: -5.493786811828613

Token 257: ' books' (ID: 7187)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.9886595010757446
    2. '(int' → logprob: -1.8636595010757446
    3. 'book' → logprob: -2.488659381866455
    4. 'deque' → logprob: -2.488659381866455
    5. 'books' → logprob: -2.613659381866455
    6. 'desk' → logprob: -3.113659381866455
    7. 'ints' → logprob: -3.488659381866455
    8. 'inte' → logprob: -3.613659381866455
    9. 'des' → logprob: -3.738659381866455
    10. 'de' → logprob: -3.863659381866455

Token 258: ' in' (ID: 306)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17312359809875488
    2. ',' → logprob: -2.548123598098755
    3. 'deque' → logprob: -3.923123598098755
    4. 'd' → logprob: -4.173123359680176
    5. 'D' → logprob: -4.673123359680176
    6. '=' → logprob: -5.298123359680176
    7. ' in' → logprob: -5.423123359680176
    8. '[]' → logprob: -5.673123359680176
    9. '       ' → logprob: -5.923123359680176
    10. 'in' → logprob: -6.048123359680176

Token 259: ' order' (ID: 2569)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.005577606149017811
    2. 'desk' → logprob: -5.630577564239502
    3. ' desks' → logprob: -6.755577564239502
    4. 'order' → logprob: -8.38057804107666
    5. 'd' → logprob: -9.13057804107666
    6. 'de' → logprob: -9.25557804107666
    7. 'deque' → logprob: -9.50557804107666
    8. '[' → logprob: -9.88057804107666
    9. 'books' → logprob: -10.00557804107666
    10. '[]' → logprob: -10.00557804107666

Token 260: ' of' (ID: 328)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.5279151201248169
    2. 'd' → logprob: -2.1529150009155273
    3. 'D' → logprob: -2.4029150009155273
    4. 'des' → logprob: -2.9029150009155273
    5. 'desk' → logprob: -3.9029150009155273
    6. 'used' → logprob: -4.277915000915527
    7. 'queue' → logprob: -4.277915000915527
    8. 'books' → logprob: -4.277915000915527
    9. 'from' → logprob: -4.652915000915527
    10. 'last' → logprob: -4.902915000915527

Token 261: ' usage' (ID: 16622)
  Prédit: 'usage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'usage' → logprob: -1.114673376083374
    2. 'access' → logprob: -1.239673376083374
    3. 'use' → logprob: -1.614673376083374
    4. 'arrival' → logprob: -3.364673376083374
    5. 'recent' → logprob: -3.739673376083374
    6. 'requests' → logprob: -3.864673376083374
    7. 'last' → logprob: -3.989673376083374
    8. 'in' → logprob: -3.989673376083374
    9. 'addition' → logprob: -4.114673614501953
    10. 'request' → logprob: -4.489673614501953

Token 262: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6303213834762573
    2. 'd' → logprob: -1.7553213834762573
    3. 'D' → logprob: -2.380321502685547
    4. ',' → logprob: -2.630321502685547
    5. 'deque' → logprob: -2.630321502685547
    6. '_d' → logprob: -4.380321502685547
    7. '=' → logprob: -5.005321502685547
    8. '       ' → logprob: -5.255321502685547
    9. 'order' → logprob: -5.630321502685547
    10. 'queue' → logprob: -5.630321502685547

Token 263: ' most' (ID: 1645)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.8540698885917664
    2. ')' → logprob: -1.3540699481964111
    3. 'deque' → logprob: -2.229069948196411
    4. '#' → logprob: -2.979069948196411
    5. '0' → logprob: -3.479069948196411
    6. '[' → logprob: -3.979069948196411
    7. 'books' → logprob: -4.479069709777832
    8. ' desks' → logprob: -4.604069709777832
    9. ']' → logprob: -4.854069709777832
    10. ' []' → logprob: -5.104069709777832

Token 264: ' recent' (ID: 7178)
  Prédit: ' recent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' recent' → logprob: -1.0203828811645508
    2. 'recent' → logprob: -1.1453828811645508
    3. '_recent' → logprob: -1.7703828811645508
    4. ' recently' → logprob: -1.8953828811645508
    5. ' =' → logprob: -8.27038288116455
    6. ' ' → logprob: -8.52038288116455
    7. 'Recently' → logprob: -9.14538288116455
    8. ' Recently' → logprob: -9.89538288116455
    9. '   ' → logprob: -10.02038288116455
    10. 'Recent' → logprob: -10.02038288116455

Token 265: ' last' (ID: 2174)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.050363507121801376
    2. '_books' → logprob: -4.175363540649414
    3. '=' → logprob: -4.675363540649414
    4. '_d' → logprob: -5.550363540649414
    5. '_book' → logprob: -5.550363540649414
    6. 'book' → logprob: -6.300363540649414
    7. '_' → logprob: -6.550363540649414
    8. '.append' → logprob: -6.550363540649414
    9. ' at' → logprob: -6.675363540649414
    10. 'D' → logprob: -6.675363540649414

Token 266: '
' (ID: 198)
  Prédit: 'usage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'usage' → logprob: -0.7904487252235413
    2. 'd' → logprob: -1.2904486656188965
    3. 'used' → logprob: -2.2904486656188965
    4. ' usage' → logprob: -3.1654486656188965
    5. 'D' → logprob: -3.9154486656188965
    6. 'deque' → logprob: -3.9154486656188965
    7. ' d' → logprob: -4.1654486656188965
    8. ',' → logprob: -4.7904486656188965
    9. ' used' → logprob: -4.9154486656188965
    10. ' D' → logprob: -5.1654486656188965

Token 267: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38486677408218384
    2. '       ' → logprob: -1.634866714477539
    3. ' usage' → logprob: -2.884866714477539
    4. 'usage' → logprob: -3.509866714477539
    5. 'used' → logprob: -4.634866714477539
    6. ' d' → logprob: -4.759866714477539
    7. ' used' → logprob: -5.009866714477539
    8. 'd' → logprob: -5.509866714477539
    9. ' D' → logprob: -6.509866714477539
    10. 'book' → logprob: -7.384866714477539

Token 268: ' d' (ID: 272)
  Prédit: 'usage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'usage' → logprob: -0.546084463596344
    2. 'used' → logprob: -1.2960844039916992
    3. 'D' → logprob: -3.171084403991699
    4. 'd' (adapté à ' d') → logprob: -3.296084403991699
    5. 'recent' → logprob: -4.046084403991699
    6. ' usage' → logprob: -4.296084403991699
    7. 'last' → logprob: -4.546084403991699
    8. 'use' → logprob: -4.921084403991699
    9. 'order' → logprob: -5.671084403991699
    10. ' D' → logprob: -5.921084403991699

Token 269: '1' (ID: 16)
  Prédit: 'esk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'esk' → logprob: -0.8761975765228271
    2. 'es' → logprob: -1.1261975765228271
    3. 'e' → logprob: -1.8761975765228271
    4. '_' → logprob: -3.376197576522827
    5. '_usage' → logprob: -3.626197576522827
    6. '_used' → logprob: -4.126197814941406
    7. 'usage' → logprob: -4.251197814941406
    8. 'used' → logprob: -6.001197814941406
    9. 'use' → logprob: -6.626197814941406
    10. 'o' → logprob: -7.001197814941406

Token 270: '_lst' (ID: 72474)
  Prédit: '_usage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_usage' → logprob: -0.24211564660072327
    2. '_books' → logprob: -2.7421157360076904
    3. '_order' → logprob: -2.8671157360076904
    4. ' =' → logprob: -3.2421157360076904
    5. '_used' → logprob: -3.2421157360076904
    6. '_' → logprob: -5.117115497589111
    7. '_use' → logprob: -5.617115497589111
    8. '_d' → logprob: -6.492115497589111
    9. '_recent' → logprob: -6.742115497589111
    10. '_list' → logprob: -6.992115497589111

Token 271: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5773483514785767
    2. '=' → logprob: -0.8273483514785767
    3. '=[]' → logprob: -6.577348232269287
    4. '=[]
' → logprob: -12.077348709106445
    5. '=[' → logprob: -13.202348709106445
    6. '[]' → logprob: -13.327348709106445
    7. ',' → logprob: -13.327348709106445
    8. '[' → logprob: -13.827348709106445
    9. 's' → logprob: -14.202348709106445
    10. '=[]
' → logprob: -14.202348709106445

Token 272: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.04864175245165825
    2. 'deque' → logprob: -3.0486416816711426
    3. ' []' → logprob: -9.9236421585083
    4. '[]}' → logprob: -13.1736421585083
    5. ' deque' → logprob: -13.4236421585083
    6. '[]
' → logprob: -14.2986421585083
    7. '[]>' → logprob: -15.0486421585083
    8. 'de' → logprob: -15.1736421585083
    9. 'collections' → logprob: -15.2986421585083
    10. '[' → logprob: -15.4236421585083

Token 273: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022308960556983948
    2. '   ' → logprob: -4.272308826446533
    3. ' while' → logprob: -5.522308826446533
    4. 'while' → logprob: -6.147308826446533
    5. '        
' → logprob: -7.397308826446533
    6. '<|end|>' → logprob: -7.647308826446533
    7. '    
' → logprob: -9.022309303283691
    8. '           ' → logprob: -9.272309303283691
    9. '	while' → logprob: -9.397309303283691
    10. ',' → logprob: -9.772309303283691

Token 274: ' cost' (ID: 3097)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9436056017875671
    2. 'while' → logprob: -0.9436056017875671
    3. '   ' → logprob: -1.693605661392212
    4. ' while' → logprob: -3.568605661392212
    5. 'for' → logprob: -5.693605422973633
    6. 'def' → logprob: -6.693605422973633
    7. '    
' → logprob: -6.943605422973633
    8. '        
' → logprob: -7.193605422973633
    9. ' for' → logprob: -8.068605422973633
    10. 'd' → logprob: -8.193605422973633

Token 275: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009964196011424065
    2. '=' → logprob: -4.6349639892578125
    3. 's' → logprob: -9.009963989257812
    4. ' +=' → logprob: -9.634963989257812
    5. ' ' → logprob: -11.634963989257812
    6. '  ' → logprob: -12.384963989257812
    7. '_' → logprob: -12.759963989257812
    8. ',' → logprob: -14.009963989257812
    9. ')' → logprob: -14.384963989257812
    10. '   ' → logprob: -14.384963989257812

Token 276: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010092071170220152
    2. ' ' → logprob: -9.250101089477539
    3. '   ' → logprob: -14.625101089477539
    4. 'n' → logprob: -14.625101089477539
    5. '1' → logprob: -14.750101089477539
    6. 'm' → logprob: -14.937601089477539
    7. '100' → logprob: -15.000101089477539
    8. '000' → logprob: -15.500101089477539
    9. 's' → logprob: -15.687601089477539
    10. ' ' → logprob: -16.00010108947754

Token 277: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9743012671824545e-05
    2. ' ' → logprob: -11.250020027160645
    3. 'm' → logprob: -13.812520027160645
    4. 'n' → logprob: -14.250020027160645
    5. '100' → logprob: -14.562520027160645
    6. '1' → logprob: -14.750020027160645
    7. '[' → logprob: -15.437520027160645
    8. '   ' → logprob: -15.562520027160645
    9. '10' → logprob: -15.562520027160645
    10. 's' → logprob: -15.687520027160645

Token 278: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2571830749511719
    2. '
' → logprob: -2.007183074951172
    3. '        
' → logprob: -3.382183074951172
    4. '<|end|>' → logprob: -3.507183074951172
    5. '    
' → logprob: -4.882183074951172
    6. '   ' → logprob: -5.507183074951172
    7. '		
' → logprob: -5.632183074951172
    8. '  
' → logprob: -5.882183074951172
    9. '	' → logprob: -6.132183074951172
    10. '<|end|>' → logprob: -6.382183074951172

Token 279: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10847534239292145
    2. '   ' → logprob: -2.85847544670105
    3. 'while' → logprob: -4.358475208282471
    4. '
' → logprob: -4.733475208282471
    5. ' while' → logprob: -4.858475208282471
    6. '        
' → logprob: -4.983475208282471
    7. '    
' → logprob: -5.483475208282471
    8. ' 
' → logprob: -7.233475208282471
    9. '  
' → logprob: -7.233475208282471
    10. '<|end|>' → logprob: -7.358475208282471

Token 280: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.2590261399745941
    2. '       ' → logprob: -2.009026050567627
    3. ' while' → logprob: -2.634026050567627
    4. 'for' → logprob: -4.384026050567627
    5. '   ' → logprob: -4.759026050567627
    6. ' for' → logprob: -6.884026050567627
    7. '	while' → logprob: -10.009026527404785
    8. ' ' → logprob: -10.134026527404785
    9. '  ' → logprob: -10.759026527404785
    10. 'try' → logprob: -10.884026527404785

Token 281: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.16028383374214172
    2. ' queue' → logprob: -1.9102838039398193
    3. 'True' → logprob: -10.035284042358398
    4. ' True' → logprob: -12.285284042358398
    5. '(queue' → logprob: -12.660284042358398
    6. 'len' → logprob: -12.785284042358398
    7. '	queue' → logprob: -13.160284042358398
    8. 'requests' → logprob: -14.160284042358398
    9. '   ' → logprob: -14.285284042358398
    10. ' len' → logprob: -14.535284042358398

Token 282: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008662078529596329
    2. ':
' → logprob: -4.758662223815918
    3. '):' → logprob: -10.633662223815918
    4. '[' → logprob: -11.883662223815918
    5. ' and' → logprob: -12.258662223815918
    6. '>:' → logprob: -12.883662223815918
    7. '   ' → logprob: -13.883662223815918
    8. '```' → logprob: -14.008662223815918
    9. ' :' → logprob: -14.133662223815918
    10. ':not' → logprob: -14.258662223815918

Token 283: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33337873220443726
    2. '           ' → logprob: -1.583378791809082
    3. ' i' → logprob: -3.708378791809082
    4. '        
' → logprob: -4.583378791809082
    5. 'student' → logprob: -4.583378791809082
    6. ' student' → logprob: -4.958378791809082
    7. 'i' → logprob: -5.208378791809082
    8. 'current' → logprob: -5.833378791809082
    9. ' current' → logprob: -6.083378791809082
    10. '  
' → logprob: -6.208378791809082

Token 284: ' i' (ID: 575)
  Prédit: 'student'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'student' → logprob: -0.4920892119407654
    2. 'i' (adapté à ' i') → logprob: -1.7420892715454102
    3. '   ' → logprob: -3.11708927154541
    4. 'stu' → logprob: -3.11708927154541
    5. 'idx' → logprob: -3.24208927154541
    6. 'cur' → logprob: -3.24208927154541
    7. 's' → logprob: -4.11708927154541
    8. ' student' → logprob: -4.24208927154541
    9. 'curr' → logprob: -4.99208927154541
    10. ' i' → logprob: -6.11708927154541

Token 285: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029800597578287125
    2. '=' → logprob: -3.5298006534576416
    3. ' ' → logprob: -10.654800415039062
    4. ',' → logprob: -11.779800415039062
    5. '   ' → logprob: -12.279800415039062
    6. '_' → logprob: -12.404800415039062
    7. 'd' → logprob: -13.529800415039062
    8. '	' → logprob: -13.779800415039062
    9. '_queue' → logprob: -13.779800415039062
    10. '  ' → logprob: -14.029800415039062

Token 286: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.061968132853507996
    2. ' queue' → logprob: -2.8119680881500244
    3. '(queue' → logprob: -15.436967849731445
    4. '	queue' → logprob: -15.436967849731445
    5. '   ' → logprob: -16.686967849731445
    6. ' ' → logprob: -16.811967849731445
    7. 'que' → logprob: -17.186967849731445
    8. '.queue' → logprob: -18.311967849731445
    9. '  ' → logprob: -18.811967849731445
    10. 'deque' → logprob: -19.311967849731445

Token 287: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.00026526954025030136
    2. '.' → logprob: -8.625265121459961
    3. '.pop' → logprob: -9.500265121459961
    4. ' .' → logprob: -12.000265121459961
    5. 'opleft' → logprob: -13.000265121459961
    6. '       ' → logprob: -14.125265121459961
    7. '   ' → logprob: -14.750265121459961
    8. 'p' → logprob: -15.000265121459961
    9. '].' → logprob: -15.250265121459961
    10. '.dequeue' → logprob: -15.625265121459961

Token 288: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.0005924708093516529
    2. 'op' → logprob: -7.5005927085876465
    3. 'ople' → logprob: -10.250592231750488
    4. 'opl' → logprob: -12.500592231750488
    5. 'opf' → logprob: -15.625592231750488
    6. '[' → logprob: -16.125593185424805
    7. 'opup' → logprob: -16.625593185424805
    8. 'ope' → logprob: -17.625593185424805
    9. '```' → logprob: -17.750593185424805
    10. 'opped' → logprob: -17.750593185424805

Token 289: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004368290305137634
    2. '       ' → logprob: -6.379368305206299
    3. ')' → logprob: -7.129368305206299
    4. '
' → logprob: -7.879368305206299
    5. '            
' → logprob: -7.879368305206299
    6. '   ' → logprob: -8.62936782836914
    7. '<|end|>' → logprob: -8.62936782836914
    8. '               ' → logprob: -8.62936782836914
    9. '            ' → logprob: -9.25436782836914
    10. ',' → logprob: -9.50436782836914

Token 290: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.031105998903512955
    2. 'if' → logprob: -4.406105995178223
    3. ' if' → logprob: -5.406105995178223
    4. '       ' → logprob: -5.781105995178223
    5. 'b' → logprob: -6.281105995178223
    6. 'r' → logprob: -6.531105995178223
    7. 'req' → logprob: -6.531105995178223
    8. 'rq' → logprob: -6.781105995178223
    9. 'request' → logprob: -7.031105995178223
    10. 'book' → logprob: -7.406105995178223

Token 291: ' b' (ID: 287)
  Prédit: 'book'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'book' → logprob: -1.1476906538009644
    2. 'b' (adapté à ' b') → logprob: -1.2726906538009644
    3. 'req' → logprob: -2.147690773010254
    4. 'cur' → logprob: -3.022690773010254
    5. ' b' → logprob: -3.147690773010254
    6. '           ' → logprob: -3.522690773010254
    7. 'if' → logprob: -3.772690773010254
    8. 'r' → logprob: -3.772690773010254
    9. 'bk' → logprob: -3.897690773010254
    10. 'curr' → logprob: -4.147690773010254

Token 292: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3898211717605591
    2. '=' → logprob: -1.139821171760559
    3. '=request' → logprob: -6.0148210525512695
    4. 'requests' → logprob: -7.7648210525512695
    5. ' requests' → logprob: -10.76482105255127
    6. ' ' → logprob: -11.13982105255127
    7. 's' → logprob: -11.13982105255127
    8. '_requests' → logprob: -12.01482105255127
    9. '=req' → logprob: -12.13982105255127
    10. '   ' → logprob: -12.76482105255127

Token 293: ' requests' (ID: 13782)
  Prédit: 'requests'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'requests' → logprob: -0.0485982745885849
    2. ' requests' → logprob: -3.048598289489746
    3. 'request' → logprob: -11.423598289489746
    4. ' request' → logprob: -17.92359733581543
    5. '.requests' → logprob: -18.04859733581543
    6. '   ' → logprob: -18.29859733581543
    7. ' ' → logprob: -18.79859733581543
    8. '       ' → logprob: -19.42359733581543
    9. '请求' → logprob: -20.29859733581543
    10. 'int' → logprob: -20.79859733581543

Token 294: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.981667537620524e-06
    2. '[' → logprob: -13.625001907348633
    3. 'i' → logprob: -14.875001907348633
    4. '```' → logprob: -15.250001907348633
    5. ' [' → logprob: -16.625001907348633
    6. '[I' → logprob: -17.375001907348633
    7. '[
' → logprob: -18.000001907348633
    8. 's' → logprob: -18.625001907348633
    9. '[user' → logprob: -18.750001907348633
    10. '`' → logprob: -18.875001907348633

Token 295: '].' (ID: 1651)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.09940312802791595
    2. '].' → logprob: -2.474403142929077
    3. '][' → logprob: -5.349402904510498
    4. '.p' → logprob: -5.849402904510498
    5. '[' → logprob: -5.974402904510498
    6. ').' → logprob: -9.849403381347656
    7. ']' → logprob: -10.224403381347656
    8. 'i' → logprob: -10.224403381347656
    9. '.i' → logprob: -10.474403381347656
    10. '[p' → logprob: -10.724403381347656

Token 296: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -8.65707261255011e-06
    2. '.p' → logprob: -12.125008583068848
    3. '[' → logprob: -12.750008583068848
    4. ' p' → logprob: -15.500008583068848
    5. '```' → logprob: -16.875009536743164
    6. 'pop' → logprob: -17.375009536743164
    7. '   ' → logprob: -18.250009536743164
    8. '0' → logprob: -18.375009536743164
    9. '[p' → logprob: -18.625009536743164
    10. '	p' → logprob: -18.750009536743164

Token 297: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.0012783304555341601
    2. 'ople' → logprob: -7.251278400421143
    3. 'op' → logprob: -7.501278400421143
    4. 'opl' → logprob: -11.126277923583984
    5. '[' → logprob: -15.001277923583984
    6. 'opf' → logprob: -15.126277923583984
    7. 'opc' → logprob: -16.501277923583984
    8. 'opt' → logprob: -16.501277923583984
    9. 'opy' → logprob: -16.626277923583984
    10. 'oplevel' → logprob: -16.751277923583984

Token 298: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -6.511406809295295e-06
    2. '()
' → logprob: -12.125006675720215
    3. '())' → logprob: -14.375006675720215
    4. '()`' → logprob: -15.500006675720215
    5. '()]' → logprob: -16.1250057220459
    6. '()
' → logprob: -16.7500057220459
    7. '()

' → logprob: -16.8750057220459
    8. ')' → logprob: -17.1250057220459
    9. ' ()' → logprob: -17.1250057220459
    10. '(' → logprob: -17.3750057220459

Token 299: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.30447354912757874
    2. ' if' → logprob: -1.4294735193252563
    3. 'if' → logprob: -3.929473638534546
    4. '       ' → logprob: -6.554473400115967
    5. '            
' → logprob: -7.554473400115967
    6. '            ' → logprob: -7.929473400115967
    7. '```' → logprob: -8.054473876953125
    8. '<|end|>' → logprob: -8.304473876953125
    9. '
' → logprob: -8.429473876953125
    10. '   ' → logprob: -9.679473876953125

Token 300: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.009122415445744991
    2. '           ' → logprob: -4.759122371673584
    3. ' if' → logprob: -8.009122848510742
    4. '#' (adapté à ' #') → logprob: -9.759122848510742
    5. '       ' → logprob: -9.759122848510742
    6. 'cost' → logprob: -10.134122848510742
    7. '```' → logprob: -11.759122848510742
    8. 'pos' → logprob: -11.759122848510742
    9. '   ' → logprob: -13.009122848510742
    10. 'position' → logprob: -14.259122848510742

Token 301: ' locate' (ID: 29006)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.020913196727633476
    2. '#' → logprob: -4.520913124084473
    3. '           ' → logprob: -5.020913124084473
    4. 'cost' → logprob: -6.020913124084473
    5. 'pos' → logprob: -7.520913124084473
    6. ' if' → logprob: -9.020913124084473
    7. 'book' → logprob: -10.895913124084473
    8. 'If' → logprob: -10.895913124084473
    9. 'current' → logprob: -11.020913124084473
    10. 'position' → logprob: -11.270913124084473

Token 302: ' book' (ID: 2392)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.6819334626197815
    2. 'b' → logprob: -1.1819334030151367
    3. '_pos' → logprob: -2.0569334030151367
    4. 'book' → logprob: -4.306933403015137
    5. ' b' → logprob: -4.556933403015137
    6. ' =' → logprob: -4.931933403015137
    7. 'the' → logprob: -5.056933403015137
    8. '           ' → logprob: -5.181933403015137
    9. 'where' → logprob: -5.931933403015137
    10. ' the' → logprob: -6.181933403015137

Token 303: ' b' (ID: 287)
  Prédit: '_pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.15880364179611206
    2. 'pos' → logprob: -2.408803701400757
    3. '_loc' → logprob: -3.408803701400757
    4. ' =' → logprob: -4.408803462982178
    5. '           ' → logprob: -5.533803462982178
    6. '_idx' → logprob: -5.908803462982178
    7. '_location' → logprob: -6.408803462982178
    8. '=' → logprob: -6.783803462982178
    9. '_' → logprob: -7.408803462982178
    10. 'loc' → logprob: -8.158803939819336

Token 304: '
' (ID: 198)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.8795287013053894
    2. '_pos' → logprob: -1.1295287609100342
    3. ' =' → logprob: -1.7545287609100342
    4. '           ' → logprob: -3.129528760910034
    5. '=' → logprob: -4.004528522491455
    6. '_loc' → logprob: -4.629528522491455
    7. 'if' → logprob: -5.129528522491455
    8. ' pos' → logprob: -5.504528522491455
    9. ' if' → logprob: -5.504528522491455
    10. '_idx' → logprob: -7.129528522491455

Token 305: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03044949471950531
    2. ' =' → logprob: -4.280449390411377
    3. ' if' → logprob: -4.655449390411377
    4. ' in' → logprob: -6.030449390411377
    5. '<|end|>' → logprob: -7.155449390411377
    6. '   ' → logprob: -7.280449390411377
    7. 'if' → logprob: -7.530449390411377
    8. '```' → logprob: -7.655449390411377
    9. '=' → logprob: -7.905449390411377
    10. '       ' → logprob: -8.405449867248535

Token 306: ' loc' (ID: 1539)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.5813570022583008
    2. 'if' → logprob: -0.8313570022583008
    3. 'p' → logprob: -6.331357002258301
    4. 'loc' (adapté à ' loc') → logprob: -6.331357002258301
    5. ' if' → logprob: -6.831357002258301
    6. ' pos' → logprob: -8.2063570022583
    7. '           ' → logprob: -8.3313570022583
    8. 'current' → logprob: -9.7063570022583
    9. 'where' → logprob: -10.2063570022583
    10. 'book' → logprob: -10.4563570022583

Token 307: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38689807057380676
    2. '=' → logprob: -1.1368980407714844
    3. '=b' → logprob: -11.386898040771484
    4. 'ation' → logprob: -11.386898040771484
    5. '   ' → logprob: -13.261898040771484
    6. ' ' → logprob: -14.136898040771484
    7. 'ated' → logprob: -14.386898040771484
    8. 'a' → logprob: -15.511898040771484
    9. '	' → logprob: -15.761898040771484
    10. '[' → logprob: -15.886898040771484

Token 308: ' book' (ID: 2392)
  Prédit: 'book'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'book' → logprob: -0.007607220206409693
    2. ' book' → logprob: -4.8826069831848145
    3. '   ' → logprob: -14.632607460021973
    4. '	book' → logprob: -15.007607460021973
    5. ' ' → logprob: -15.382607460021973
    6. '(book' → logprob: -16.507606506347656
    7. 'b' → logprob: -17.257606506347656
    8. '  ' → logprob: -17.757606506347656
    9. 'books' → logprob: -17.882606506347656
    10. '0' → logprob: -18.132606506347656

Token 309: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -3.4881879400927573e-05
    2. 'pos' → logprob: -10.500035285949707
    3. 'Pos' → logprob: -12.500035285949707
    4. '[b' → logprob: -13.750035285949707
    5. '[i' → logprob: -14.000035285949707
    6. 's' → logprob: -14.875035285949707
    7. 'book' → logprob: -15.000035285949707
    8. '[' → logprob: -15.250035285949707
    9. '[pos' → logprob: -15.250035285949707
    10. 'i' → logprob: -16.12503433227539

Token 310: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -3.292907877039397e-06
    2. '.get' → logprob: -13.25000286102295
    3. 'b' → logprob: -13.87500286102295
    4. '[' → logprob: -15.37500286102295
    5. ' [' → logprob: -15.37500286102295
    6. '	b' → logprob: -18.250003814697266
    7. '```' → logprob: -18.375003814697266
    8. '[[' → logprob: -18.500003814697266
    9. '(b' → logprob: -18.625003814697266
    10. '   ' → logprob: -18.625003814697266

Token 311: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.018560636788606644
    2. ']
' → logprob: -4.018560409545898
    3. ' ]' → logprob: -8.143560409545898
    4. ']
' → logprob: -9.768560409545898
    5. ')' → logprob: -10.643560409545898
    6. ']

' → logprob: -11.143560409545898
    7. ' ]
' → logprob: -11.768560409545898
    8. '])' → logprob: -11.893560409545898
    9. ')]' → logprob: -12.143560409545898
    10. ')
' → logprob: -13.518560409545898

Token 312: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6804602146148682
    2. ' if' → logprob: -1.5554602146148682
    3. '<|end|>' → logprob: -2.305460214614868
    4. '           ' → logprob: -2.805460214614868
    5. ' 
' → logprob: -3.180460214614868
    6. 'if' → logprob: -3.430460214614868
    7. '            
' → logprob: -4.055459976196289
    8. '  
' → logprob: -5.055459976196289
    9. '\n' → logprob: -5.055459976196289
    10. '    
' → logprob: -5.805459976196289

Token 313: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1431097835302353
    2. 'if' → logprob: -2.1431097984313965
    3. ' if' → logprob: -4.1431097984313965
    4. '            
' → logprob: -10.018109321594238
    5. '       ' → logprob: -10.143109321594238
    6. '            ' → logprob: -10.643109321594238
    7. '```' → logprob: -10.643109321594238
    8. '   ' → logprob: -11.643109321594238
    9. '
' → logprob: -11.893109321594238
    10. '          ' → logprob: -12.143109321594238

Token 314: ' librarian' (ID: 144975)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0957055389881134
    2. ' if' → logprob: -2.595705509185791
    3. '           ' → logprob: -4.095705509185791
    4. '   ' → logprob: -11.72070598602295
    5. '       ' → logprob: -12.09570598602295
    6. '```' → logprob: -12.47070598602295
    7. 'cost' → logprob: -12.59570598602295
    8. '            ' → logprob: -12.72070598602295
    9. ' cost' → logprob: -13.59570598602295
    10. ' ' → logprob: -13.59570598602295

Token 315: ' enters' (ID: 53753)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7978208661079407
    2. ' if' → logprob: -1.922820806503296
    3. ' =' → logprob: -2.047820806503296
    4. 'if' → logprob: -2.047820806503296
    5. '=' → logprob: -3.672820806503296
    6. 'cost' → logprob: -3.922820806503296
    7. '_cost' → logprob: -4.297821044921875
    8. ' +=' → logprob: -4.797821044921875
    9. '            ' → logprob: -4.922821044921875
    10. ' cost' → logprob: -4.922821044921875

Token 316: ' stor' (ID: 21232)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7745330333709717
    2. '           ' → logprob: -0.8995330333709717
    3. ':' → logprob: -3.0245330333709717
    4. 'if' → logprob: -3.2745330333709717
    5. '               ' → logprob: -4.899533271789551
    6. ' =' → logprob: -4.899533271789551
    7. ':
' → logprob: -5.149533271789551
    8. '   ' → logprob: -5.899533271789551
    9. '            
' → logprob: -5.899533271789551
    10. ' into' → logprob: -6.274533271789551

Token 317: 'ero' (ID: 2464)
  Prédit: 'age'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'age' → logprob: -0.14518827199935913
    2. 'e' → logprob: -2.520188331604004
    3. 'm' → logprob: -3.645188331604004
    4. 'oom' → logprob: -3.895188331604004
    5. 'om' → logprob: -4.895188331604004
    6. 'ero' → logprob: -8.270188331604004
    7. 'y' → logprob: -8.645188331604004
    8. 'em' → logprob: -10.270188331604004
    9. 'room' → logprob: -10.395188331604004
    10. 'um' → logprob: -10.645188331604004

Token 318: 'om' (ID: 310)
  Prédit: 'om'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'om' → logprob: -0.049093808978796005
    2. 'm' → logprob: -3.049093723297119
    3. 'oom' → logprob: -9.799094200134277
    4. 'um' → logprob: -10.049094200134277
    5. 'o' → logprob: -10.049094200134277
    6. ' om' → logprob: -10.174094200134277
    7. 'oms' → logprob: -10.236594200134277
    8. '   ' → logprob: -10.236594200134277
    9. 'e' → logprob: -10.549094200134277
    10. 'room' → logprob: -10.861594200134277

Token 319: ' to' (ID: 316)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.018356425687670708
    2. ' if' → logprob: -4.1433563232421875
    3. ' and' → logprob: -7.6433563232421875
    4. 'if' → logprob: -8.018356323242188
    5. ',' → logprob: -8.518356323242188
    6. '            ' → logprob: -8.518356323242188
    7. '               ' → logprob: -8.643356323242188
    8. '       ' → logprob: -8.768356323242188
    9. '            
' → logprob: -9.018356323242188
    10. '<|end|>' → logprob: -9.143356323242188

Token 320: ' find' (ID: 1646)
  Prédit: ' fetch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fetch' → logprob: -1.3123656511306763
    2. ' get' → logprob: -1.4373656511306763
    3. 'get' → logprob: -1.5623656511306763
    4. ' retrieve' → logprob: -2.6873655319213867
    5. 'fetch' → logprob: -2.8123655319213867
    6. 'retrieve' → logprob: -3.0623655319213867
    7. ' pick' → logprob: -3.6873655319213867
    8. 'pick' → logprob: -4.312365531921387
    9. ' find' → logprob: -4.812365531921387
    10. ' move' → logprob: -4.812365531921387

Token 321: ' the' (ID: 290)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.16088882088661194
    2. ' b' → logprob: -2.660888910293579
    3. ' the' → logprob: -3.285888910293579
    4. 'the' → logprob: -3.910888910293579
    5. 'book' → logprob: -4.285888671875
    6. ' book' → logprob: -5.160888671875
    7. ' if' → logprob: -8.035888671875
    8. ' a' → logprob: -8.035888671875
    9. ' it' → logprob: -8.160888671875
    10. 'if' → logprob: -8.535888671875

Token 322: ' book' (ID: 2392)
  Prédit: 'book'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'book' → logprob: -0.1348404735326767
    2. ' book' → logprob: -2.134840488433838
    3. 'b' → logprob: -5.134840488433838
    4. ' b' → logprob: -6.884840488433838
    5. 'token' → logprob: -8.63484001159668
    6. ' requested' → logprob: -9.25984001159668
    7. 'requested' → logprob: -9.75984001159668
    8. 'books' → logprob: -9.94734001159668
    9. ' needed' → logprob: -10.00984001159668
    10. 'desired' → logprob: -10.19734001159668

Token 323: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.067128986120224
    2. ' if' → logprob: -2.942128896713257
    3. 'if' → logprob: -4.692129135131836
    4. '            ' → logprob: -6.567129135131836
    5. '               ' → logprob: -7.317129135131836
    6. ' and' → logprob: -8.067129135131836
    7. '       ' → logprob: -8.692129135131836
    8. '<|end|>' → logprob: -9.567129135131836
    9. '            
' → logprob: -9.692129135131836
    10. ',' → logprob: -10.067129135131836

Token 324: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23666027188301086
    2. ' if' → logprob: -1.9866602420806885
    3. '            ' → logprob: -2.7366602420806885
    4. '               ' → logprob: -6.486660480499268
    5. '            
' → logprob: -6.486660480499268
    6. ' 
' → logprob: -6.486660480499268
    7. ' ' → logprob: -7.111660480499268
    8. 'if' → logprob: -7.236660480499268
    9. '\n' → logprob: -7.736660480499268
    10. '             
' → logprob: -7.736660480499268

Token 325: ' #' (ID: 1069)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.09368421137332916
    2. 'if' → logprob: -2.468684196472168
    3. ' cost' → logprob: -5.593684196472168
    4. ' if' → logprob: -7.093684196472168
    5. '           ' → logprob: -9.468684196472168
    6. '   ' → logprob: -10.093684196472168
    7. '       ' → logprob: -10.718684196472168
    8. 'c' → logprob: -12.468684196472168
    9. '
' → logprob: -12.718684196472168
    10. 'for' → logprob: -12.718684196472168

Token 326: ' cost' (ID: 3097)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.699193000793457
    2. 'cost' → logprob: -0.699193000793457
    3. '           ' → logprob: -5.199193000793457
    4. ' if' → logprob: -8.699193000793457
    5. ' cost' → logprob: -8.699193000793457
    6. '       ' → logprob: -9.824193000793457
    7. '   ' → logprob: -10.074193000793457
    8. '#' → logprob: -11.074193000793457
    9. '               ' → logprob: -11.324193000793457
    10. 'for' → logprob: -11.574193000793457

Token 327: ' for' (ID: 395)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.4766604006290436
    2. '+=' → logprob: -0.9766603708267212
    3. '=' → logprob: -6.351660251617432
    4. ' =' → logprob: -7.351660251617432
    5. '   ' → logprob: -9.47666072845459
    6. '           ' → logprob: -9.72666072845459
    7. '+' → logprob: -11.10166072845459
    8. '               ' → logprob: -11.22666072845459
    9. '                   ' → logprob: -11.85166072845459
    10. 'if' → logprob: -12.47666072845459

Token 328: ' finding' (ID: 12129)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5564528107643127
    2. 'loc' → logprob: -1.556452751159668
    3. 'abs' → logprob: -2.306452751159668
    4. ' loc' → logprob: -3.431452751159668
    5. ' abs' → logprob: -3.556452751159668
    6. 'm' → logprob: -4.681452751159668
    7. '(loc' → logprob: -4.681452751159668
    8. ' ' → logprob: -4.931452751159668
    9. ' moving' → logprob: -5.806452751159668
    10. '0' → logprob: -5.806452751159668

Token 329: ' book' (ID: 2392)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -1.1142359972000122
    2. '+=' → logprob: -1.6142359972000122
    3. ' =' → logprob: -1.9892359972000122
    4. ' loc' → logprob: -2.2392358779907227
    5. '=' → logprob: -2.3642358779907227
    6. '1' → logprob: -3.1142358779907227
    7. '+' → logprob: -3.8642358779907227
    8. 'loc' → logprob: -3.8642358779907227
    9. ' if' → logprob: -4.364235877990723
    10. '(loc' → logprob: -4.614235877990723

Token 330: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.10263045877218246
    2. '=' → logprob: -2.727630376815796
    3. ' +=' → logprob: -3.477630376815796
    4. ' =' → logprob: -6.977630615234375
    5. '1' → logprob: -8.977630615234375
    6. 'if' → logprob: -9.102630615234375
    7. '+' → logprob: -9.727630615234375
    8. '   ' → logprob: -11.352630615234375
    9. '+=(' → logprob: -11.352630615234375
    10. ' if' → logprob: -12.352630615234375

Token 331: ' access' (ID: 3158)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.23146675527095795
    2. 'loc' → logprob: -2.731466770172119
    3. '(loc' → logprob: -3.231466770172119
    4. '0' → logprob: -3.356466770172119
    5. '2' → logprob: -4.731466770172119
    6. ' ' → logprob: -4.981466770172119
    7. 'len' → logprob: -5.106466770172119
    8. 'c' → logprob: -5.106466770172119
    9. 'abs' → logprob: -5.231466770172119
    10. 'm' → logprob: -5.481466770172119

Token 332: ' to' (ID: 316)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0692483186721802
    2. 'loc' → logprob: -1.6942483186721802
    3. '1' → logprob: -2.3192481994628906
    4. ' ' → logprob: -2.9442481994628906
    5. 'cost' → logprob: -2.9442481994628906
    6. '_time' → logprob: -3.1942481994628906
    7. ' loc' → logprob: -3.1942481994628906
    8. 'len' → logprob: -3.8192481994628906
    9. '_cost' → logprob: -3.8192481994628906
    10. '(loc' → logprob: -3.8192481994628906

Token 333: ' desk' (ID: 20794)
  Prédit: 'loc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'loc' → logprob: -0.11902475357055664
    2. 'book' → logprob: -3.3690247535705566
    3. ' loc' → logprob: -3.4940247535705566
    4. 's' → logprob: -4.494024753570557
    5. 'the' → logprob: -4.744024753570557
    6. 'b' → logprob: -5.244024753570557
    7. ' desk' → logprob: -5.744024753570557
    8. 'd' → logprob: -5.744024753570557
    9. 'desk' → logprob: -5.869024753570557
    10. ' book' → logprob: -6.119024753570557

Token 334: ' or' (ID: 503)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.27697914838790894
    2. 'loc' → logprob: -1.9019792079925537
    3. '+' → logprob: -3.4019792079925537
    4. ' +' → logprob: -3.7769792079925537
    5. '(loc' → logprob: -4.026978969573975
    6. ' loc' → logprob: -5.901978969573975
    7. '_loc' → logprob: -5.901978969573975
    8. '0' → logprob: -6.151978969573975
    9. '1' → logprob: -6.276978969573975
    10. '   ' → logprob: -6.526978969573975

Token 335: ' shelf' (ID: 40978)
  Prédit: ' shelf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' shelf' → logprob: -0.3930303454399109
    2. 's' → logprob: -1.1430304050445557
    3. 'stor' → logprob: -6.018030166625977
    4. '   ' → logprob: -7.393030166625977
    5. 'storage' → logprob: -7.643030166625977
    6. '1' → logprob: -7.768030166625977
    7. ' ' → logprob: -8.018030166625977
    8. ' shel' → logprob: -8.518030166625977
    9. ''s' → logprob: -8.768030166625977
    10. 'search' → logprob: -8.893030166625977

Token 336: ' once' (ID: 4730)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8387420773506165
    2. '           ' → logprob: -1.4637420177459717
    3. ' +' → logprob: -1.7137420177459717
    4. '+' → logprob: -2.4637420177459717
    5. 'if' → logprob: -2.9637420177459717
    6. '
' → logprob: -5.088742256164551
    7. '               ' → logprob: -6.463742256164551
    8. '*' → logprob: -6.588742256164551
    9. ' =' → logprob: -6.713742256164551
    10. '=' → logprob: -6.713742256164551

Token 337: ' to' (ID: 316)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.9295278787612915
    2. '+' → logprob: -1.3045278787612915
    3. '           ' → logprob: -1.9295278787612915
    4. ' if' → logprob: -2.679527759552002
    5. '1' → logprob: -3.054527759552002
    6. 'if' → logprob: -3.929527759552002
    7. '
' → logprob: -3.929527759552002
    8. ' +=' → logprob: -4.304527759552002
    9. '*' → logprob: -5.429527759552002
    10. '+=' → logprob: -5.804527759552002

Token 338: ' take' (ID: 2304)
  Prédit: ' retrieve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' retrieve' → logprob: -1.360674500465393
    2. ' get' → logprob: -1.485674500465393
    3. 'retrieve' → logprob: -2.3606743812561035
    4. 'get' → logprob: -2.4856743812561035
    5. ' find' → logprob: -2.9856743812561035
    6. 'pick' → logprob: -3.2356743812561035
    7. 'loc' → logprob: -3.4856743812561035
    8. ' pick' → logprob: -3.6106743812561035
    9. ' check' → logprob: -3.6106743812561035
    10. ' fetch' → logprob: -3.8606743812561035

Token 339: ' it' (ID: 480)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5072079300880432
    2. ' b' → logprob: -1.6322078704833984
    3. 'book' → logprob: -2.2572078704833984
    4. ' the' → logprob: -3.8822078704833984
    5. 'the' → logprob: -4.257207870483398
    6. ' it' → logprob: -4.257207870483398
    7. '1' → logprob: -4.382207870483398
    8. ' book' → logprob: -4.632207870483398
    9. 'out' → logprob: -5.007207870483398
    10. ' ' → logprob: -5.257207870483398

Token 340: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.095793716609478
    2. ' if' → logprob: -3.3457937240600586
    3. ' +' → logprob: -3.4707937240600586
    4. '
' → logprob: -4.220793724060059
    5. '+' → logprob: -5.720793724060059
    6. 'if' → logprob: -6.345793724060059
    7. '       ' → logprob: -6.595793724060059
    8. ' 
' → logprob: -7.345793724060059
    9. '   ' → logprob: -7.470793724060059
    10. '               ' → logprob: -7.595793724060059

Token 341: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05558944493532181
    2. ' if' → logprob: -3.430589437484741
    3. ' +' → logprob: -4.05558967590332
    4. 'if' → logprob: -6.80558967590332
    5. '+' → logprob: -6.93058967590332
    6. '            
' → logprob: -7.68058967590332
    7. '            ' → logprob: -7.68058967590332
    8. ',' → logprob: -8.05558967590332
    9. ' cost' → logprob: -8.68058967590332
    10. 'cost' → logprob: -9.18058967590332

Token 342: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' (adapté à ' cost') → logprob: -0.7024925947189331
    2. ' cost' → logprob: -0.8274925947189331
    3. ' if' → logprob: -3.0774927139282227
    4. 'if' → logprob: -3.9524927139282227
    5. '           ' → logprob: -7.202492713928223
    6. '1' → logprob: -7.327492713928223
    7. ' +' → logprob: -8.077492713928223
    8. '+' → logprob: -8.327492713928223
    9. '   ' → logprob: -9.702492713928223
    10. '            ' → logprob: -9.952492713928223

Token 343: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.1428021639585495
    2. '+=' → logprob: -2.0178022384643555
    3. '   ' → logprob: -9.267802238464355
    4. '+' → logprob: -11.267802238464355
    5. '           ' → logprob: -12.517802238464355
    6. '=' → logprob: -12.517802238464355
    7. ' =' → logprob: -12.767802238464355
    8. ']+=' → logprob: -13.142802238464355
    9. '    ' → logprob: -13.392802238464355
    10. '       ' → logprob: -13.392802238464355

Token 344: ' loc' (ID: 1539)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.017174098640680313
    2. ' ' → logprob: -4.392174243927002
    3. '(loc' → logprob: -6.267174243927002
    4. 'loc' → logprob: -6.892174243927002
    5. ' loc' → logprob: -7.267174243927002
    6. '(' → logprob: -7.767174243927002
    7. ' (' → logprob: -7.767174243927002
    8. '+' → logprob: -10.267173767089844
    9. '(m' → logprob: -10.642173767089844
    10. '2' → logprob: -10.892173767089844

Token 345: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.9158868789672852
    2. ' +' → logprob: -1.0408868789672852
    3. '
' → logprob: -1.7908868789672852
    4. '<|end|>' → logprob: -2.665886878967285
    5. ' if' → logprob: -5.790886878967285
    6. '<|end|>' → logprob: -6.040886878967285
    7. ' 
' → logprob: -6.415886878967285
    8. '   ' → logprob: -6.915886878967285
    9. '+
' → logprob: -7.790886878967285
    10. ' ' → logprob: -8.165886878967285

Token 346: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00039968726923689246
    2. ' ' → logprob: -7.875399589538574
    3. '+' → logprob: -11.125399589538574
    4. '   ' → logprob: -12.875399589538574
    5. ' +' → logprob: -14.125399589538574
    6. '2' → logprob: -14.500399589538574
    7. '  ' → logprob: -16.18790054321289
    8. '```' → logprob: -16.25040054321289
    9. '`' → logprob: -16.75040054321289
    10. '0' → logprob: -16.93790054321289

Token 347: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.35581034421920776
    2. '
' → logprob: -1.2308104038238525
    3. '<|end|>' → logprob: -6.230810165405273
    4. ' if' → logprob: -6.355810165405273
    5. '            
' → logprob: -6.355810165405273
    6. '       ' → logprob: -7.355810165405273
    7. 'if' → logprob: -8.355810165405273
    8. '
' → logprob: -8.480810165405273
    9. '\n' → logprob: -8.855810165405273
    10. '               ' → logprob: -8.980810165405273

Token 348: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06527909636497498
    2. '
' → logprob: -2.940279006958008
    3. '            
' → logprob: -5.190279006958008
    4. 'if' → logprob: -6.190279006958008
    5. ' if' → logprob: -6.690279006958008
    6. '<|end|>' → logprob: -8.065279006958008
    7. '       ' → logprob: -8.565279006958008
    8. '   ' → logprob: -8.690279006958008
    9. '    
' → logprob: -8.815279006958008
    10. '\n' → logprob: -9.190279006958008

Token 349: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09897608309984207
    2. 'if' → logprob: -2.8489761352539062
    3. ' if' → logprob: -3.3489761352539062
    4. '#' (adapté à ' #') → logprob: -7.223976135253906
    5. '            
' → logprob: -8.598976135253906
    6. '       ' → logprob: -9.348976135253906
    7. '   ' → logprob: -9.473976135253906
    8. '
' → logprob: -9.973976135253906
    9. ' #' → logprob: -10.348976135253906
    10. '```' → logprob: -10.973976135253906

Token 350: ' remove' (ID: 6234)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.01815790683031082
    2. '#' → logprob: -4.518157958984375
    3. '           ' → logprob: -5.018157958984375
    4. '       ' → logprob: -8.268157958984375
    5. ' if' → logprob: -9.643157958984375
    6. 'book' → logprob: -10.268157958984375
    7. '   ' → logprob: -10.393157958984375
    8. 'del' → logprob: -10.768157958984375
    9. 'If' → logprob: -11.393157958984375
    10. 'requests' → logprob: -11.518157958984375

Token 351: ' book' (ID: 2392)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.18987561762332916
    2. ' b' → logprob: -1.939875602722168
    3. ' if' → logprob: -4.314875602722168
    4. 'if' → logprob: -4.939875602722168
    5. 'book' → logprob: -5.189875602722168
    6. ' book' → logprob: -6.439875602722168
    7. ' the' → logprob: -7.689875602722168
    8. 'from' → logprob: -8.814875602722168
    9. ' from' → logprob: -9.439875602722168
    10. 'cost' → logprob: -9.439875602722168

Token 352: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.4376123547554016
    2. ' from' → logprob: -1.6876122951507568
    3. ' if' → logprob: -2.437612295150757
    4. 'if' → logprob: -2.812612295150757
    5. '_pos' → logprob: -4.562612533569336
    6. ' =' → logprob: -5.187612533569336
    7. '_loc' → logprob: -6.687612533569336
    8. '=' → logprob: -7.312612533569336
    9. 'pos' → logprob: -7.312612533569336
    10. '_from' → logprob: -7.562612533569336

Token 353: ' its' (ID: 1617)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4616692066192627
    2. ' shelf' → logprob: -1.5866692066192627
    3. 'loc' → logprob: -3.3366692066192627
    4. 'des' → logprob: -3.8366692066192627
    5. 'book' → logprob: -3.9616692066192627
    6. ' desks' → logprob: -3.9616692066192627
    7. 'desk' → logprob: -4.336668968200684
    8. ' desk' → logprob: -4.336668968200684
    9. 'd' → logprob: -4.586668968200684
    10. 'books' → logprob: -4.961668968200684

Token 354: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.168069526553154
    2. 'current' → logprob: -1.9180694818496704
    3. 'location' → logprob: -5.293069362640381
    4. ' location' → logprob: -6.168069362640381
    5. 's' → logprob: -9.168069839477539
    6. 'position' → logprob: -9.418069839477539
    7. '_current' → logprob: -9.668069839477539
    8. ' desk' → logprob: -9.668069839477539
    9. ' ' → logprob: -9.918069839477539
    10. ' shelf' → logprob: -9.918069839477539

Token 355: ' place' (ID: 2475)
  Prédit: 'location'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'location' → logprob: -0.3914356827735901
    2. ' location' → logprob: -1.1414356231689453
    3. ' place' → logprob: -5.891435623168945
    4. 'place' → logprob: -6.641435623168945
    5. 'position' → logprob: -8.141435623168945
    6. ' position' → logprob: -9.641435623168945
    7. 'loc' → logprob: -10.016435623168945
    8. 'pos' → logprob: -10.016435623168945
    9. '_location' → logprob: -11.266435623168945
    10. 'container' → logprob: -11.266435623168945

Token 356: '
' (ID: 198)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3933226466178894
    2. 'if' → logprob: -1.1433227062225342
    3. '           ' → logprob: -5.268322467803955
    4. '       ' → logprob: -7.643322467803955
    5. '
' → logprob: -8.518322944641113
    6. '[' → logprob: -8.518322944641113
    7. '```' → logprob: -9.143322944641113
    8. '            
' → logprob: -9.518322944641113
    9. '   ' → logprob: -9.768322944641113
    10. '               ' → logprob: -10.393322944641113

Token 357: '           ' (ID: 352)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6614307165145874
    2. '           ' → logprob: -1.1614307165145874
    3. 'if' → logprob: -1.7864307165145874
    4. '       ' → logprob: -5.911430835723877
    5. '            
' → logprob: -8.286430358886719
    6. '   ' → logprob: -9.286430358886719
    7. '```' → logprob: -9.661430358886719
    8. '
' → logprob: -9.786430358886719
    9. '[' → logprob: -10.036430358886719
    10. '        
' → logprob: -11.036430358886719

Token 358: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.252140611410141
    2. ' if' → logprob: -1.5021406412124634
    3. '           ' → logprob: -8.877140998840332
    4. '   ' → logprob: -10.502140998840332
    5. '       ' → logprob: -10.502140998840332
    6. '
' → logprob: -12.252140998840332
    7. 'book' → logprob: -12.877140998840332
    8. '[' → logprob: -13.002140998840332
    9. '```' → logprob: -13.377140998840332
    10. '            
' → logprob: -13.752140998840332

Token 359: ' loc' (ID: 1539)
  Prédit: 'loc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'loc' → logprob: -0.10023234039545059
    2. ' loc' → logprob: -2.3502323627471924
    3. '   ' → logprob: -11.600232124328613
    4. '	loc' → logprob: -12.350232124328613
    5. ' ' → logprob: -12.600232124328613
    6. 'book' → logprob: -12.850232124328613
    7. '(loc' → logprob: -13.100232124328613
    8. ' book' → logprob: -13.225232124328613
    9. '  ' → logprob: -14.100232124328613
    10. '    ' → logprob: -14.475232124328613

Token 360: ' ==' (ID: 951)
  Prédit: '<m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<m' → logprob: -0.41790997982025146
    2. ' <' → logprob: -1.5429099798202515
    3. '==' → logprob: -3.042910099029541
    4. ' ==' → logprob: -3.167910099029541
    5. '<' → logprob: -4.042910099029541
    6. ' !=' → logprob: -4.667910099029541
    7. '!=' → logprob: -4.792910099029541
    8. 'm' → logprob: -6.917910099029541
    9. '<len' → logprob: -7.542910099029541
    10. ' m' → logprob: -8.042909622192383

Token 361: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -3.5597102396423e-05
    2. ' m' → logprob: -10.250035285949707
    3. '	m' → logprob: -16.250036239624023
    4. '   ' → logprob: -16.750036239624023
    5. 's' → logprob: -18.625036239624023
    6. ' ' → logprob: -19.000036239624023
    7. '<m' → logprob: -19.625036239624023
    8. '  ' → logprob: -19.875036239624023
    9. '[m' → logprob: -20.000036239624023
    10. '#m' → logprob: -20.000036239624023

Token 362: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3138570189476013
    2. ':
' → logprob: -1.313857078552246
    3. ':s' → logprob: -8.813857078552246
    4. '):
' → logprob: -9.188857078552246
    5. '):' → logprob: -9.313857078552246
    6. ':
' → logprob: -9.938857078552246
    7. ' :' → logprob: -9.938857078552246
    8. '   ' → logprob: -10.313857078552246
    9. '       ' → logprob: -10.438857078552246
    10. '           ' → logprob: -10.688857078552246

Token 363: '               ' (ID: 506)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6559380888938904
    2. '           ' → logprob: -0.7809380888938904
    3. '               ' → logprob: -4.280938148498535
    4. ' shelf' → logprob: -5.280938148498535
    5. '   ' → logprob: -5.655938148498535
    6. '       ' → logprob: -7.905938148498535
    7. 'Shelf' → logprob: -9.780938148498535
    8. '```' → logprob: -10.155938148498535
    9. '	s' → logprob: -10.280938148498535
    10. '`s' → logprob: -10.655938148498535

Token 364: ' shelf' (ID: 40978)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.05366260185837746
    2. ' shelf' → logprob: -3.3036625385284424
    3. '           ' → logprob: -4.9286627769470215
    4. '               ' → logprob: -5.3036627769470215
    5. '   ' → logprob: -5.8036627769470215
    6. ' ' → logprob: -9.428662300109863
    7. '                   ' → logprob: -10.053662300109863
    8. '       ' → logprob: -10.053662300109863
    9. '  ' → logprob: -10.678662300109863
    10. 'Shelf' → logprob: -11.178662300109863

Token 365: '.remove' (ID: 7986)
  Prédit: '.remove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.remove' → logprob: -0.0011746286181733012
    2. '.' → logprob: -6.751174449920654
    3. '.dis' → logprob: -13.376174926757812
    4. ' .' → logprob: -13.501174926757812
    5. 'remove' → logprob: -13.501174926757812
    6. '   ' → logprob: -16.751174926757812
    7. ' remove' → logprob: -18.251174926757812
    8. '.Remove' → logprob: -18.501174926757812
    9. '	remove' → logprob: -18.751174926757812
    10. '>.' → logprob: -19.376174926757812

Token 366: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -1.8624639324116288e-06
    2. 'b' → logprob: -13.250001907348633
    3. '(' → logprob: -19.000001907348633
    4. '	b' → logprob: -20.625001907348633
    5. '(
' → logprob: -21.875001907348633
    6. ' (' → logprob: -22.125001907348633
    7. '(book' → logprob: -22.250001907348633
    8. ' b' → logprob: -22.625001907348633
    9. '[b' → logprob: -23.250001907348633
    10. '(B' → logprob: -23.625001907348633

Token 367: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38735297322273254
    2. ')
' → logprob: -1.1373529434204102
    3. ')
' → logprob: -8.38735294342041
    4. '           ' → logprob: -8.76235294342041
    5. '               ' → logprob: -9.38735294342041
    6. ')

' → logprob: -11.76235294342041
    7. '                   ' → logprob: -13.51235294342041
    8. '       ' → logprob: -13.63735294342041
    9. ' )
' → logprob: -14.26235294342041
    10. ' )' → logprob: -15.01235294342041

Token 368: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010984034277498722
    2. 'else' → logprob: -4.885983943939209
    3. ' else' → logprob: -5.885983943939209
    4. '               ' → logprob: -8.260984420776367
    5. 'elif' → logprob: -9.135984420776367
    6. '```' → logprob: -9.635984420776367
    7. '
' → logprob: -10.010984420776367
    8. ' elif' → logprob: -10.510984420776367
    9. '       ' → logprob: -10.885984420776367
    10. '            
' → logprob: -10.885984420776367

Token 369: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.39279904961586
    2. ' else' → logprob: -1.2677990198135376
    3. '           ' → logprob: -3.142799139022827
    4. 'elif' → logprob: -9.142799377441406
    5. ' elif' → logprob: -10.017799377441406
    6. '       ' → logprob: -10.392799377441406
    7. '               ' → logprob: -10.767799377441406
    8. '
' → logprob: -12.017799377441406
    9. ')' → logprob: -12.767799377441406
    10. '   ' → logprob: -13.267799377441406

Token 370: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.9291204810142517
    2. ':
' → logprob: -0.9291204810142517
    3. ':' → logprob: -2.3041205406188965
    4. ' desks' → logprob: -2.8041205406188965
    5. '           ' → logprob: -3.6791205406188965
    6. 'des' → logprob: -4.3041205406188965
    7. ' des' → logprob: -5.0541205406188965
    8. ' :
' → logprob: -7.1791205406188965
    9. '):
' → logprob: -7.3041205406188965
    10. '   ' → logprob: -7.3041205406188965

Token 371: '               ' (ID: 506)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.12626923620700836
    2. ' desks' → logprob: -2.6262693405151367
    3. ' des' → logprob: -3.6262693405151367
    4. '           ' → logprob: -4.126269340515137
    5. '               ' → logprob: -6.001269340515137
    6. '       ' → logprob: -7.751269340515137
    7. '```' → logprob: -8.251269340515137
    8. '   ' → logprob: -8.376269340515137
    9. '_des' → logprob: -10.501269340515137
    10. ' ' → logprob: -11.126269340515137

Token 372: ' desks' (ID: 109910)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.0012116642901673913
    2. ' desks' → logprob: -7.001211643218994
    3. '           ' → logprob: -9.251212120056152
    4. 'books' → logprob: -9.626212120056152
    5. '   ' → logprob: -10.001212120056152
    6. '       ' → logprob: -10.376212120056152
    7. 'desk' → logprob: -10.376212120056152
    8. ' des' → logprob: -11.001212120056152
    9. '               ' → logprob: -12.376212120056152
    10. ' desk' → logprob: -13.876212120056152

Token 373: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.320199877838604e-07
    2. ' [' → logprob: -15.25
    3. '```' → logprob: -16.0
    4. '   ' → logprob: -17.75
    5. '[
' → logprob: -19.25
    6. '           ' → logprob: -19.625
    7. '][' → logprob: -19.625
    8. '       ' → logprob: -19.75
    9. '\[' → logprob: -19.75
    10. ')[' → logprob: -20.25

Token 374: 'loc' (ID: 9453)
  Prédit: 'loc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'loc' → logprob: -2.7729658540920354e-05
    2. ' loc' → logprob: -10.500027656555176
    3. '(loc' → logprob: -16.375028610229492
    4. '	loc' → logprob: -18.250028610229492
    5. '.loc' → logprob: -19.000028610229492
    6. '_loc' → logprob: -19.250028610229492
    7. '```' → logprob: -20.500028610229492
    8. '   ' → logprob: -20.875028610229492
    9. '[' → logprob: -21.125028610229492
    10. 'Loc' → logprob: -21.500028610229492

Token 375: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.00016885579680092633
    2. '.remove' → logprob: -8.750168800354004
    3. ' ].' → logprob: -11.750168800354004
    4. ').' → logprob: -13.875168800354004
    5. ']' → logprob: -14.125168800354004
    6. '.pop' → logprob: -15.250168800354004
    7. '   ' → logprob: -15.375168800354004
    8. ''].' → logprob: -15.750168800354004
    9. '"].' → logprob: -16.25016975402832
    10. '.' → logprob: -17.12516975402832

Token 376: 'remove' (ID: 4942)
  Prédit: 'remove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remove' → logprob: -6.742448022123426e-05
    2. '.remove' → logprob: -10.000067710876465
    3. 'pop' → logprob: -10.750067710876465
    4. ' remove' → logprob: -14.625067710876465
    5. '.' → logprob: -17.75006675720215
    6. '	remove' → logprob: -18.00006675720215
    7. '   ' → logprob: -18.12506675720215
    8. '.pop' → logprob: -18.87506675720215
    9. '(remove' → logprob: -19.50006675720215
    10. 'append' → logprob: -20.75006675720215

Token 377: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: 0.0
    2. '(' → logprob: -17.125
    3. 'b' → logprob: -17.625
    4. '(book' → logprob: -20.875
    5. ' (' → logprob: -21.375
    6. '	b' → logprob: -22.125
    7. ' b' → logprob: -23.375
    8. '(B' → logprob: -23.375
    9. '(
' → logprob: -23.5
    10. '[b' → logprob: -24.125

Token 378: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.026483403518795967
    2. ')
' → logprob: -3.6514832973480225
    3. '           ' → logprob: -8.776483535766602
    4. ')
' → logprob: -11.276483535766602
    5. ')

' → logprob: -12.401483535766602
    6. '               ' → logprob: -12.901483535766602
    7. ' )' → logprob: -13.026483535766602
    8. '       ' → logprob: -13.276483535766602
    9. '<|end|>' → logprob: -13.526483535766602
    10. ' )
' → logprob: -14.526483535766602

Token 379: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15734067559242249
    2. '            
' → logprob: -3.2823407649993896
    3. '```' → logprob: -3.5323407649993896
    4. '
' → logprob: -3.9073407649993896
    5. '       ' → logprob: -4.2823405265808105
    6. ' if' → logprob: -4.5323405265808105
    7. 'd' → logprob: -4.9073405265808105
    8. 'des' → logprob: -5.0323405265808105
    9. '        
' → logprob: -5.9073405265808105
    10. 'if' → logprob: -6.0323405265808105

Token 380: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18468253314495087
    2. ' if' → logprob: -2.309682607650757
    3. 'd' → logprob: -3.934682607650757
    4. 'if' → logprob: -4.309682369232178
    5. 'des' → logprob: -4.559682369232178
    6. ' d' → logprob: -4.684682369232178
    7. '#' (adapté à ' #') → logprob: -5.184682369232178
    8. '       ' → logprob: -6.059682369232178
    9. ' desks' → logprob: -6.184682369232178
    10. ' #' → logprob: -6.559682369232178

Token 381: ' Now' (ID: 6549)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6267825961112976
    2. 'if' → logprob: -1.2517826557159424
    3. ' if' → logprob: -2.6267826557159424
    4. 'd' → logprob: -2.7517826557159424
    5. ' #' → logprob: -4.001782417297363
    6. '           ' → logprob: -4.251782417297363
    7. ' d' → logprob: -5.501782417297363
    8. 'des' → logprob: -6.126782417297363
    9. '               ' → logprob: -7.126782417297363
    10. 'cost' → logprob: -7.126782417297363

Token 382: ' check' (ID: 2371)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20539049804210663
    2. 'if' → logprob: -3.080390453338623
    3. ' if' → logprob: -3.330390453338623
    4. '#' → logprob: -3.455390453338623
    5. ' add' → logprob: -3.705390453338623
    6. ',' → logprob: -3.830390453338623
    7. 'add' → logprob: -4.705390453338623
    8. ' we' → logprob: -5.955390453338623
    9. 'd' → logprob: -6.330390453338623
    10. '   ' → logprob: -6.580390453338623

Token 383: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.020854011178016663
    2. 'if' → logprob: -3.8958539962768555
    3. ' loc' → logprob: -8.770853996276855
    4. ' len' → logprob: -9.895853996276855
    5. '   ' → logprob: -10.270853996276855
    6. 'loc' → logprob: -10.770853996276855
    7. ' for' → logprob: -11.270853996276855
    8. 'len' → logprob: -11.395853996276855
    9. '           ' → logprob: -12.020853996276855
    10. '(loc' → logprob: -12.270853996276855

Token 384: ' D' (ID: 415)
  Prédit: ' loc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' loc' → logprob: -0.5969842076301575
    2. 'loc' → logprob: -0.8469842076301575
    3. ' len' → logprob: -5.221984386444092
    4. 'len' → logprob: -5.471984386444092
    5. ' m' → logprob: -5.596984386444092
    6. 'm' → logprob: -5.846984386444092
    7. 'd' → logprob: -6.596984386444092
    8. 'b' → logprob: -6.971984386444092
    9. ' b' → logprob: -7.096984386444092
    10. ' d' → logprob: -7.846984386444092

Token 385: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.52919222577475e-05
    2. 'es' → logprob: -10.250075340270996
    3. ' ' → logprob: -10.875075340270996
    4. 'i' → logprob: -12.500075340270996
    5. '   ' → logprob: -12.875075340270996
    6. '_' → logprob: -13.000075340270996
    7. '[' → logprob: -13.375075340270996
    8. 'esk' → logprob: -13.500075340270996
    9. 'e' → logprob: -14.000075340270996
    10. 'l' → logprob: -14.187575340270996

Token 386: ' not' (ID: 625)
  Prédit: '_lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_lst' → logprob: -0.027476787567138672
    2. 'd' → logprob: -4.777476787567139
    3. 'lst' → logprob: -4.902476787567139
    4. '   ' → logprob: -5.777476787567139
    5. '==' → logprob: -6.152476787567139
    6. ' ==' → logprob: -6.527476787567139
    7. ' and' → logprob: -7.402476787567139
    8. 'Lst' → logprob: -8.027477264404297
    9. '       ' → logprob: -8.152477264404297
    10. '```' → logprob: -8.152477264404297

Token 387: ' full' (ID: 3149)
  Prédit: 'empty'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'empty' → logprob: -1.0760886669158936
    2. ' in' → logprob: -1.7010886669158936
    3. 'in' → logprob: -2.0760886669158936
    4. 'len' → logprob: -2.2010886669158936
    5. ' empty' → logprob: -2.8260886669158936
    6. '=' → logprob: -3.3260886669158936
    7. ' len' → logprob: -3.7010886669158936
    8. ' full' → logprob: -3.9510886669158936
    9. 'full' → logprob: -4.076088905334473
    10. 'm' → logprob: -4.326088905334473

Token 388: '
' (ID: 198)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.017557891085743904
    2. 'and' → logprob: -4.1425580978393555
    3. ' or' → logprob: -7.1425580978393555
    4. ':' → logprob: -8.017558097839355
    5. '(len' → logprob: -9.142558097839355
    6. '           ' → logprob: -9.517558097839355
    7. 'len' → logprob: -9.517558097839355
    8. '   ' → logprob: -9.767558097839355
    9. '       ' → logprob: -10.892558097839355
    10. ' (' → logprob: -11.142558097839355

Token 389: '           ' (ID: 352)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6259379982948303
    2. ' or' → logprob: -0.8759379982948303
    3. ':' → logprob: -3.7509379386901855
    4. '   ' → logprob: -4.2509379386901855
    5. ' if' → logprob: -5.5009379386901855
    6. 'and' → logprob: -6.0009379386901855
    7. '       ' → logprob: -6.0009379386901855
    8. 'if' → logprob: -7.2509379386901855
    9. '           ' → logprob: -7.8759379386901855
    10. ' (' → logprob: -8.250938415527344

Token 390: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.07003379613161087
    2. 'if' (adapté à ' if') → logprob: -2.6950337886810303
    3. '       ' → logprob: -10.44503402709961
    4. '           ' → logprob: -10.69503402709961
    5. '```' → logprob: -11.19503402709961
    6. ' and' → logprob: -11.44503402709961
    7. '   ' → logprob: -11.57003402709961
    8. '[' → logprob: -12.69503402709961
    9. ' or' → logprob: -12.94503402709961
    10. '	if' → logprob: -13.57003402709961

Token 391: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.42889001965522766
    2. ' len' → logprob: -1.0538899898529053
    3. '(len' → logprob: -8.928890228271484
    4. 'd' → logprob: -11.053890228271484
    5. ' not' → logprob: -11.428890228271484
    6. '   ' → logprob: -11.553890228271484
    7. '	len' → logprob: -12.428890228271484
    8. ' d' → logprob: -12.553890228271484
    9. 'not' → logprob: -12.678890228271484
    10. '[len' → logprob: -12.928890228271484

Token 392: '(des' (ID: 61239)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.12710417807102203
    2. '(des' → logprob: -2.1271042823791504
    3. ' (' → logprob: -9.502103805541992
    4. '(' → logprob: -9.502103805541992
    5. 'des' → logprob: -11.252103805541992
    6. '(ds' → logprob: -12.252103805541992
    7. '(
' → logprob: -12.752103805541992
    8. 'd' → logprob: -13.127103805541992
    9. '(de' → logprob: -13.877103805541992
    10. '(dis' → logprob: -14.002103805541992

Token 393: 'ks' (ID: 2484)
  Prédit: 'ks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ks' → logprob: -7.896309739408025e-07
    2. 'k' → logprob: -14.250000953674316
    3. ' ks' → logprob: -17.375
    4. 's' → logprob: -18.125
    5. '[' → logprob: -18.625
    6. '1' → logprob: -19.125
    7. 'KS' → logprob: -19.625
    8. 'ktops' → logprob: -19.75
    9. '```' → logprob: -20.5
    10. 'Ks' → logprob: -20.625

Token 394: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00022403974435292184
    2. '0' → logprob: -8.750224113464355
    3. ')' → logprob: -10.250224113464355
    4. '1' → logprob: -11.000224113464355
    5. '   ' → logprob: -12.875224113464355
    6. '[
' → logprob: -13.625224113464355
    7. ' [' → logprob: -13.625224113464355
    8. '```' → logprob: -13.750224113464355
    9. '
' → logprob: -14.000224113464355
    10. '(' → logprob: -14.250224113464355

Token 395: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.546478935983032e-05
    2. '[' → logprob: -11.000025749206543
    3. ' ' → logprob: -11.750025749206543
    4. '1' → logprob: -15.000025749206543
    5. '   ' → logprob: -15.125025749206543
    6. ')' → logprob: -16.500024795532227
    7. '(' → logprob: -17.125024795532227
    8. ']' → logprob: -17.250024795532227
    9. 'd' → logprob: -17.375024795532227
    10. '```' → logprob: -17.750024795532227

Token 396: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18202996253967285
    2. '])' → logprob: -1.8070299625396729
    3. ')<' → logprob: -6.307029724121094
    4. ' )' → logprob: -8.307029724121094
    5. '）' → logprob: -10.432029724121094
    6. ''])' → logprob: -10.432029724121094
    7. ' ])' → logprob: -10.807029724121094
    8. '})' → logprob: -10.807029724121094
    9. ')]' → logprob: -10.932029724121094
    10. '))' → logprob: -11.182029724121094

Token 397: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.632970929145813
    2. ' <' → logprob: -0.757970929145813
    3. '<m' → logprob: -9.132970809936523
    4. '<size' → logprob: -9.882970809936523
    5. ')' → logprob: -10.132970809936523
    6. '()<' → logprob: -10.507970809936523
    7. '<len' → logprob: -10.757970809936523
    8. '<n' → logprob: -11.007970809936523
    9. '<int' → logprob: -11.007970809936523
    10. '   ' → logprob: -11.132970809936523

Token 398: ' c' (ID: 274)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.18113422393798828
    2. 'c' → logprob: -1.9311342239379883
    3. ' m' → logprob: -4.431134223937988
    4. ' c' → logprob: -5.181134223937988
    5. 'n' → logprob: -7.056134223937988
    6. '5' → logprob: -7.181134223937988
    7. '1' → logprob: -7.931134223937988
    8. ' ' → logprob: -8.181134223937988
    9. '   ' → logprob: -8.431134223937988
    10. '3' → logprob: -8.681134223937988

Token 399: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.023739786818623543
    2. ':
' → logprob: -3.773739814758301
    3. '):' → logprob: -8.0237398147583
    4. ' and' → logprob: -9.5237398147583
    5. '):
' → logprob: -10.3987398147583
    6. ')' → logprob: -11.2737398147583
    7. ' :' → logprob: -11.3987398147583
    8. '():' → logprob: -12.0237398147583
    9. '           ' → logprob: -12.1487398147583
    10. '       ' → logprob: -12.5237398147583

Token 400: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.21948741376399994
    2. 'des' → logprob: -1.7194874286651611
    3. '           ' → logprob: -5.094487190246582
    4. ' desks' → logprob: -5.344487190246582
    5. '```' → logprob: -5.594487190246582
    6. ':' → logprob: -6.969487190246582
    7. '       ' → logprob: -7.344487190246582
    8. ' des' → logprob: -7.594487190246582
    9. ':
' → logprob: -7.719487190246582
    10. '[' → logprob: -8.469487190246582

Token 401: ' #' (ID: 1069)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.5172001123428345
    2. ' desks' → logprob: -1.0172001123428345
    3. '               ' → logprob: -3.267199993133545
    4. ' des' → logprob: -6.267199993133545
    5. '           ' → logprob: -6.392199993133545
    6. '       ' → logprob: -8.892200469970703
    7. '   ' → logprob: -9.142200469970703
    8. '```' → logprob: -9.142200469970703
    9. '                   ' → logprob: -10.517200469970703
    10. 'books' → logprob: -11.267200469970703

Token 402: ' put' (ID: 3006)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.207924947142601
    2. ' desks' → logprob: -1.7079249620437622
    3. '               ' → logprob: -5.832924842834473
    4. '#' → logprob: -6.332924842834473
    5. '           ' → logprob: -6.707924842834473
    6. 'books' → logprob: -8.707924842834473
    7. ' #' → logprob: -9.457924842834473
    8. 'desk' → logprob: -10.332924842834473
    9. ' des' → logprob: -10.457924842834473
    10. '
' → logprob: -10.582924842834473

Token 403: ' book' (ID: 2392)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.43999171257019043
    2. '(b' → logprob: -1.5649917125701904
    3. ' b' → logprob: -2.4399917125701904
    4. ' desks' → logprob: -3.6899917125701904
    5. ' (' → logprob: -4.5649919509887695
    6. 'des' → logprob: -5.0649919509887695
    7. '               ' → logprob: -5.3149919509887695
    8. ' the' → logprob: -5.5649919509887695
    9. '(' → logprob: -5.9399919509887695
    10. ' books' → logprob: -6.8149919509887695

Token 404: ' on' (ID: 402)
  Prédit: '(des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(des' → logprob: -0.5125871896743774
    2. 'des' → logprob: -1.6375871896743774
    3. '(b' → logprob: -3.137587070465088
    4. ' (' → logprob: -3.387587070465088
    5. 's' → logprob: -3.762587070465088
    6. '(' → logprob: -3.762587070465088
    7. ' into' → logprob: -3.887587070465088
    8. '               ' → logprob: -4.262587070465088
    9. ' in' → logprob: -4.387587070465088
    10. 'into' → logprob: -4.637587070465088

Token 405: ' D' (ID: 415)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.07921615988016129
    2. ' desks' → logprob: -2.579216241836548
    3. ' des' → logprob: -9.079216003417969
    4. '0' → logprob: -9.454216003417969
    5. 'desk' → logprob: -10.079216003417969
    6. '   ' → logprob: -10.579216003417969
    7. 'd' → logprob: -10.704216003417969
    8. '[' → logprob: -11.454216003417969
    9. ' ' → logprob: -12.079216003417969
    10. '1' → logprob: -12.329216003417969

Token 406: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.21557363867759705
    2. 'es' → logprob: -1.7155736684799194
    3. '[' → logprob: -4.340573787689209
    4. 'esk' → logprob: -7.465573787689209
    5. 'des' → logprob: -9.21557331085205
    6. ' ' → logprob: -9.34057331085205
    7. '(' → logprob: -9.84057331085205
    8. '```' → logprob: -9.96557331085205
    9. '0' → logprob: -10.09057331085205
    10. '   ' → logprob: -10.96557331085205

Token 407: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.530971109867096
    2. 'des' → logprob: -1.2809710502624512
    3. ' desks' → logprob: -2.280971050262451
    4. ' des' → logprob: -4.030971050262451
    5. '           ' → logprob: -4.530971050262451
    6. '(des' → logprob: -6.530971050262451
    7. '[' → logprob: -6.905971050262451
    8. '                
' → logprob: -8.78097152709961
    9. ',' → logprob: -8.90597152709961
    10. '_des' → logprob: -9.28097152709961

Token 408: '               ' (ID: 506)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.26476314663887024
    2. '[' → logprob: -1.5147631168365479
    3. '           ' → logprob: -5.389763355255127
    4. '               ' → logprob: -5.889763355255127
    5. ' desks' → logprob: -6.389763355255127
    6. '       ' → logprob: -7.014763355255127
    7. ' des' → logprob: -7.389763355255127
    8. '(' → logprob: -7.639763355255127
    9. '(des' → logprob: -7.889763355255127
    10. '   ' → logprob: -7.889763355255127

Token 409: ' desks' (ID: 109910)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.181126669049263
    2. ' desks' → logprob: -1.8061267137527466
    3. '               ' → logprob: -6.931126594543457
    4. '           ' → logprob: -8.306126594543457
    5. ' des' → logprob: -9.931126594543457
    6. 'desk' → logprob: -10.181126594543457
    7. '       ' → logprob: -11.306126594543457
    8. '```' → logprob: -11.431126594543457
    9. 'books' → logprob: -11.681126594543457
    10. '   ' → logprob: -11.806126594543457

Token 410: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.512236498361744e-07
    2. '```' → logprob: -15.625000953674316
    3. '0' → logprob: -15.875000953674316
    4. ' [' → logprob: -16.625
    5. '\[' → logprob: -17.0
    6. '   ' → logprob: -17.75
    7. '][' → logprob: -18.25
    8. '[
' → logprob: -18.375
    9. ')[' → logprob: -18.75
    10. '           ' → logprob: -19.625

Token 411: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.847109812544659e-05
    2. '[' → logprob: -10.000048637390137
    3. ' ' → logprob: -12.750048637390137
    4. '```' → logprob: -16.50004768371582
    5. '   ' → logprob: -16.87504768371582
    6. '`' → logprob: -18.56254768371582
    7. ' [' → logprob: -18.93754768371582
    8. '(' → logprob: -19.00004768371582
    9. '  ' → logprob: -19.37504768371582
    10. '           ' → logprob: -19.43754768371582

Token 412: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.004322352819144726
    2. '.append' → logprob: -5.504322528839111
    3. ').' → logprob: -8.379322052001953
    4. ']' → logprob: -12.004322052001953
    5. ' ].' → logprob: -12.254322052001953
    6. '   ' → logprob: -13.754322052001953
    7. '.' → logprob: -14.129322052001953
    8. '       ' → logprob: -14.754322052001953
    9. '           ' → logprob: -15.129322052001953
    10. ''].' → logprob: -15.379322052001953

Token 413: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -5.796184723294573e-06
    2. '.append' → logprob: -12.250005722045898
    3. ' append' → logprob: -14.000005722045898
    4. 'insert' → logprob: -16.1250057220459
    5. '_append' → logprob: -18.6250057220459
    6. 'appen' → logprob: -19.1250057220459
    7. 'app' → logprob: -19.2500057220459
    8. '	append' → logprob: -19.5000057220459
    9. 'Append' → logprob: -20.5000057220459
    10. '   ' → logprob: -21.2500057220459

Token 414: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.00011164903844473884
    2. '(' → logprob: -9.12511157989502
    3. 'b' → logprob: -12.87511157989502
    4. ' b' → logprob: -16.750112533569336
    5. ' (' → logprob: -17.375112533569336
    6. '(
' → logprob: -18.375112533569336
    7. '(book' → logprob: -18.625112533569336
    8. '	b' → logprob: -19.125112533569336
    9. '(B' → logprob: -20.000112533569336
    10. '('' → logprob: -20.375112533569336

Token 415: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.030336162075400352
    2. ')' → logprob: -3.5303361415863037
    3. '               ' → logprob: -8.030336380004883
    4. ')
' → logprob: -8.280336380004883
    5. '           ' → logprob: -12.780336380004883
    6. ')

' → logprob: -13.780336380004883
    7. ' )
' → logprob: -14.155336380004883
    8. '                   ' → logprob: -14.905336380004883
    9. '),' → logprob: -14.905336380004883
    10. '       ' → logprob: -15.405336380004883

Token 416: '               ' (ID: 506)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.298154354095459
    2. '
' → logprob: -1.298154354095459
    3. '            
' → logprob: -2.173154354095459
    4. '               ' → logprob: -2.548154354095459
    5. '           ' → logprob: -2.673154354095459
    6. ' d' → logprob: -3.048154354095459
    7. '                
' → logprob: -3.173154354095459
    8. '    
' → logprob: -3.673154354095459
    9. ' 
' → logprob: -3.923154354095459
    10. '  
' → logprob: -4.548154354095459

Token 417: ' book' (ID: 2392)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.025886841118335724
    2. 'if' → logprob: -4.6508870124816895
    3. ' d' → logprob: -5.0258870124816895
    4. '   ' → logprob: -6.1508870124816895
    5. 'book' (adapté à ' book') → logprob: -6.2758870124816895
    6. '           ' → logprob: -6.5258870124816895
    7. 'cost' → logprob: -6.5258870124816895
    8. ' if' → logprob: -7.0258870124816895
    9. '               ' → logprob: -7.2758870124816895
    10. '       ' → logprob: -7.5258870124816895

Token 418: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -3.128163257315464e-07
    2. 'pos' → logprob: -15.75
    3. 'Pos' → logprob: -17.125
    4. '_' → logprob: -17.375
    5. '_p' → logprob: -18.0
    6. '_positions' → logprob: -18.25
    7. '_POS' → logprob: -19.125
    8. '[pos' → logprob: -19.125
    9. '[' → logprob: -19.375
    10. '_position' → logprob: -19.875

Token 419: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -6.704273118884885e-07
    2. 'b' → logprob: -15.000000953674316
    3. '[' → logprob: -15.500000953674316
    4. '```' → logprob: -16.375
    5. ' [' → logprob: -17.625
    6. '	b' → logprob: -19.125
    7. '\[' → logprob: -19.125
    8. '[B' → logprob: -20.0
    9. '[
' → logprob: -20.625
    10. '
' → logprob: -20.75

Token 420: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6664559841156006
    2. ']' → logprob: -0.9164559841156006
    3. ' =' → logprob: -2.6664559841156006
    4. ']=' → logprob: -4.16645622253418
    5. '[' → logprob: -6.91645622253418
    6. ' ]' → logprob: -7.66645622253418
    7. ')' → logprob: -9.91645622253418
    8. '   ' → logprob: -11.54145622253418
    9. ' ' → logprob: -12.41645622253418
    10. ')=' → logprob: -12.41645622253418

Token 421: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01815076172351837
    2. ' =' → logprob: -4.018150806427002
    3. '[' → logprob: -14.143150329589844
    4. ' ' → logprob: -16.643150329589844
    5. '   ' → logprob: -17.893150329589844
    6. '[:]' → logprob: -18.393150329589844
    7. '=

' → logprob: -18.643150329589844
    8. ']' → logprob: -18.643150329589844
    9. '=
' → logprob: -18.643150329589844
    10. ')' → logprob: -18.768150329589844

Token 422: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '   ' → logprob: -21.375
    4. '۰' → logprob: -22.25
    5. '00' → logprob: -22.625
    6. '```' → logprob: -23.125
    7. '000' → logprob: -23.5
    8. '０' → logprob: -23.5
    9. '  ' → logprob: -24.25
    10. ' ' → logprob: -24.25

Token 423: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '   ' → logprob: -20.625
    4. '۰' → logprob: -21.5
    5. '```' → logprob: -21.625
    6. '00' → logprob: -21.875
    7. '０' → logprob: -22.25
    8. '000' → logprob: -22.5
    9. '[' → logprob: -23.0
    10. '`' → logprob: -23.125

Token 424: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10309594124555588
    2. '               ' → logprob: -2.4780960083007812
    3. '                
' → logprob: -5.853096008300781
    4. '<|end|>' → logprob: -5.853096008300781
    5. '  
' → logprob: -6.228096008300781
    6. ' 
' → logprob: -6.228096008300781
    7. '           ' → logprob: -6.603096008300781
    8. '            
' → logprob: -7.603096008300781
    9. '    
' → logprob: -7.728096008300781
    10. '[' → logprob: -7.853096008300781

Token 425: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6395596265792847
    2. '           ' → logprob: -0.8895596265792847
    3. 'else' → logprob: -3.389559745788574
    4. 'elif' → logprob: -4.764559745788574
    5. ' else' → logprob: -5.139559745788574
    6. '```' → logprob: -5.514559745788574
    7. '
' → logprob: -5.639559745788574
    8. '       ' → logprob: -6.639559745788574
    9. '                
' → logprob: -7.014559745788574
    10. '   ' → logprob: -7.639559745788574

Token 426: ' #' (ID: 1069)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.14127768576145172
    2. '               ' → logprob: -2.76627779006958
    3. '           ' → logprob: -3.51627779006958
    4. 'if' → logprob: -3.64127779006958
    5. ' d' → logprob: -5.39127779006958
    6. ' if' → logprob: -5.39127779006958
    7. '#' (adapté à ' #') → logprob: -6.39127779006958
    8. '   ' → logprob: -6.51627779006958
    9. 'for' → logprob: -8.516277313232422
    10. '                   ' → logprob: -9.391277313232422

Token 427: ' cost' (ID: 3097)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.17186196148395538
    2. 'if' → logprob: -2.0468618869781494
    3. '#' → logprob: -3.9218618869781494
    4. 'try' → logprob: -5.5468621253967285
    5. ' if' → logprob: -6.2968621253967285
    6. ' d' → logprob: -6.4218621253967285
    7. '               ' → logprob: -7.2968621253967285
    8. '           ' → logprob: -8.17186164855957
    9. '                   ' → logprob: -8.67186164855957
    10. ' #' → logprob: -8.67186164855957

Token 428: ' of' (ID: 328)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.05489131063222885
    2. '+=' → logprob: -2.929891347885132
    3. '    ' → logprob: -12.804891586303711
    4. '+' → logprob: -13.304891586303711
    5. ' ' → logprob: -14.054891586303711
    6. ']+=' → logprob: -14.054891586303711
    7. '   ' → logprob: -14.179891586303711
    8. '	' → logprob: -14.929891586303711
    9. '=' → logprob: -14.929891586303711
    10. ' +' → logprob: -15.054891586303711

Token 429: ' putting' (ID: 16019)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14833571016788483
    2. 'len' → logprob: -3.2733356952667236
    3. 'd' → logprob: -3.6483356952667236
    4. 'c' → logprob: -4.023335933685303
    5. '2' → logprob: -4.398335933685303
    6. ' ' → logprob: -4.648335933685303
    7. ' len' → logprob: -5.023335933685303
    8. ' d' → logprob: -5.023335933685303
    9. ' c' → logprob: -5.398335933685303
    10. '(' → logprob: -6.023335933685303

Token 430: ' book' (ID: 2392)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.4727601110935211
    2. ' +' → logprob: -1.9727600812911987
    3. 'b' → logprob: -2.9727602005004883
    4. ' +=' → logprob: -3.3477602005004883
    5. ' b' → logprob: -3.5977602005004883
    6. ' ' → logprob: -3.9727602005004883
    7. '(b' → logprob: -3.9727602005004883
    8. '(' → logprob: -4.097760200500488
    9. '+' → logprob: -4.222760200500488
    10. ' =' → logprob: -4.472760200500488

Token 431: ' on' (ID: 402)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.13179074227809906
    2. '+=' → logprob: -2.3817906379699707
    3. ' =' → logprob: -3.6317906379699707
    4. '=' → logprob: -6.006790637969971
    5. '+' → logprob: -6.756790637969971
    6. ' +' → logprob: -7.756790637969971
    7. ' in' → logprob: -9.256791114807129
    8. ' ' → logprob: -9.881791114807129
    9. ' on' → logprob: -9.881791114807129
    10. 'in' → logprob: -9.881791114807129

Token 432: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.15143093466758728
    2. ' D' → logprob: -2.90143084526062
    3. '0' → logprob: -3.52643084526062
    4. 'd' → logprob: -4.151431083679199
    5. ' desk' → logprob: -4.401431083679199
    6. '1' → logprob: -4.401431083679199
    7. ' ' → logprob: -4.776431083679199
    8. 'desk' → logprob: -5.401431083679199
    9. 'des' → logprob: -6.651431083679199
    10. ' d' → logprob: -7.026431083679199

Token 433: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.661626634420827e-05
    2. ' ' → logprob: -9.375086784362793
    3. 'es' → logprob: -13.500086784362793
    4. '_' → logprob: -16.125085830688477
    5. 'esk' → logprob: -16.250085830688477
    6. '[' → logprob: -17.125085830688477
    7. '   ' → logprob: -17.500085830688477
    8. '１' → logprob: -17.937585830688477
    9. '(' → logprob: -17.937585830688477
    10. '```' → logprob: -18.500085830688477

Token 434: '
' (ID: 198)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.1450118124485016
    2. '+=' → logprob: -2.0200119018554688
    3. '+' → logprob: -6.520011901855469
    4. '           ' → logprob: -7.645011901855469
    5. ' +' → logprob: -8.895011901855469
    6. '               ' → logprob: -9.270011901855469
    7. ' =' → logprob: -10.145011901855469
    8. '=' → logprob: -10.395011901855469
    9. '       ' → logprob: -11.270011901855469
    10. '                   ' → logprob: -11.520011901855469

Token 435: '               ' (ID: 506)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.3489338159561157
    2. '+=' → logprob: -1.2239338159561157
    3. '+' → logprob: -8.098934173583984
    4. '=' → logprob: -9.348934173583984
    5. ' =' → logprob: -10.098934173583984
    6. ' +' → logprob: -10.848934173583984
    7. '   ' → logprob: -10.973934173583984
    8. '```' → logprob: -12.098934173583984
    9. '           ' → logprob: -12.723934173583984
    10. ']+=' → logprob: -13.098934173583984

Token 436: ' cost' (ID: 3097)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08072447031736374
    2. 'cost' (adapté à ' cost') → logprob: -2.8307244777679443
    3. '+' → logprob: -4.830724239349365
    4. ' cost' → logprob: -5.080724239349365
    5. 'c' → logprob: -6.580724239349365
    6. ' +' → logprob: -6.955724239349365
    7. ' ' → logprob: -7.205724239349365
    8. '2' → logprob: -7.580724239349365
    9. ' +=' → logprob: -8.705724716186523
    10. '+=' → logprob: -9.080724716186523

Token 437: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.20142339169979095
    2. '+=' → logprob: -1.7014234066009521
    3. '+' → logprob: -12.201423645019531
    4. ']+=' → logprob: -12.826423645019531
    5. '+=(' → logprob: -14.576423645019531
    6. '   ' → logprob: -14.576423645019531
    7. '    ' → logprob: -15.076423645019531
    8. '+='' → logprob: -15.201423645019531
    9. '=' → logprob: -15.326423645019531
    10. ' +' → logprob: -15.326423645019531

Token 438: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.017052926123142242
    2. ' ' → logprob: -4.892053127288818
    3. '2' → logprob: -5.267053127288818
    4. 'c' → logprob: -6.142053127288818
    5. 'len' → logprob: -7.017053127288818
    6. ' c' → logprob: -8.01705265045166
    7. ' len' → logprob: -8.26705265045166
    8. '3' → logprob: -8.64205265045166
    9. '0' → logprob: -8.76705265045166
    10. '5' → logprob: -9.76705265045166

Token 439: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00810977816581726
    2. 'c' → logprob: -5.7581095695495605
    3. 'len' → logprob: -6.0081095695495605
    4. '2' → logprob: -6.5081095695495605
    5. '0' → logprob: -7.3831095695495605
    6. ' ' → logprob: -9.633110046386719
    7. '(len' → logprob: -9.758110046386719
    8. '3' → logprob: -10.133110046386719
    9. 'loc' → logprob: -10.133110046386719
    10. '(' → logprob: -10.133110046386719

Token 440: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03668443486094475
    2. '               ' → logprob: -3.411684513092041
    3. '
' → logprob: -7.411684513092041
    4. '           ' → logprob: -7.411684513092041
    5. 'd' → logprob: -7.911684513092041
    6. '                
' → logprob: -8.411684036254883
    7. '       ' → logprob: -8.536684036254883
    8. '    
' → logprob: -8.786684036254883
    9. '  
' → logprob: -9.036684036254883
    10. '\n' → logprob: -9.036684036254883

Token 441: '               ' (ID: 506)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2964068055152893
    2. '               ' → logprob: -1.5464067459106445
    3. 'd' → logprob: -3.9214067459106445
    4. '           ' → logprob: -4.6714067459106445
    5. '       ' → logprob: -5.9214067459106445
    6. '                
' → logprob: -6.5464067459106445
    7. '   ' → logprob: -6.7964067459106445
    8. '            
' → logprob: -6.9214067459106445
    9. '  
' → logprob: -6.9214067459106445
    10. '    
' → logprob: -7.0464067459106445

Token 442: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4438464045524597
    2. 'd' → logprob: -1.1938464641571045
    3. ' d' → logprob: -2.9438464641571045
    4. '           ' → logprob: -7.693846225738525
    5. '   ' → logprob: -7.818846225738525
    6. '	d' → logprob: -7.943846225738525
    7. '#' (adapté à ' #') → logprob: -8.193846702575684
    8. '                
' → logprob: -8.193846702575684
    9. '			' → logprob: -8.693846702575684
    10. '       ' → logprob: -8.818846702575684

Token 443: ' update' (ID: 4027)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.51901775598526
    2. '#' → logprob: -1.1440176963806152
    3. 'if' → logprob: -2.5190176963806152
    4. ' d' → logprob: -6.394017696380615
    5. ' #' → logprob: -6.519017696380615
    6. ' if' → logprob: -6.644017696380615
    7. '           ' → logprob: -7.519017696380615
    8. '       ' → logprob: -8.644018173217773
    9. 'try' → logprob: -8.644018173217773
    10. '               ' → logprob: -9.269018173217773

Token 444: ' usage' (ID: 16622)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.33281612396240234
    2. ' d' → logprob: -1.3328161239624023
    3. ' if' → logprob: -4.957816123962402
    4. '#' → logprob: -5.082816123962402
    5. 'if' → logprob: -5.457816123962402
    6. '   ' → logprob: -7.707816123962402
    7. ' usage' → logprob: -8.082816123962402
    8. ' #' → logprob: -8.207816123962402
    9. '       ' → logprob: -8.332816123962402
    10. '           ' → logprob: -9.332816123962402

Token 445: ' for' (ID: 395)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.012004008516669273
    2. 'order' → logprob: -4.6370038986206055
    3. '_order' → logprob: -6.8870038986206055
    4. ' d' → logprob: -7.7620038986206055
    5. '   ' → logprob: -8.512003898620605
    6. 'lst' → logprob: -8.637003898620605
    7. '_lst' → logprob: -8.762003898620605
    8. ' ' → logprob: -9.887003898620605
    9. '_d' → logprob: -10.137003898620605
    10. '_list' → logprob: -10.262003898620605

Token 446: ' D' (ID: 415)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0048040226101875305
    2. ' d' → logprob: -5.5048041343688965
    3. 'b' → logprob: -7.6298041343688965
    4. 'D' → logprob: -8.504803657531738
    5. 'book' → logprob: -11.129803657531738
    6. ' b' → logprob: -12.254803657531738
    7. 'the' → logprob: -12.379803657531738
    8. ' ' → logprob: -12.879803657531738
    9. ' D' → logprob: -13.129803657531738
    10. 'books' → logprob: -13.379803657531738

Token 447: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.45848218582978e-06
    2. '_' → logprob: -14.00000286102295
    3. ' ' → logprob: -14.50000286102295
    4. '[' → logprob: -14.50000286102295
    5. '１' → logprob: -15.37500286102295
    6. '' → logprob: -17.250001907348633
    7. '۱' → logprob: -17.375001907348633
    8. '(' → logprob: -17.375001907348633
    9. '१' → logprob: -17.562501907348633
    10. '```' → logprob: -17.562501907348633

Token 448: ' books' (ID: 7187)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1636594831943512
    2. '
' → logprob: -2.0386595726013184
    3. '           ' → logprob: -4.288659572601318
    4. 'd' → logprob: -6.288659572601318
    5. ',' → logprob: -7.038659572601318
    6. '       ' → logprob: -7.163659572601318
    7. '   ' → logprob: -7.413659572601318
    8. '                
' → logprob: -7.663659572601318
    9. '```' → logprob: -8.16365909576416
    10. '
' → logprob: -8.28865909576416

Token 449: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5595163106918335
    2. '
' → logprob: -0.9345163106918335
    3. '           ' → logprob: -3.684516429901123
    4. 'd' → logprob: -6.184516429901123
    5. ' if' → logprob: -6.684516429901123
    6. '
' → logprob: -6.684516429901123
    7. '       ' → logprob: -6.809516429901123
    8. '                
' → logprob: -7.059516429901123
    9. '                   ' → logprob: -7.309516429901123
    10. ' d' → logprob: -7.684516429901123

Token 450: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0771830826997757
    2. '
' → logprob: -3.7021830081939697
    3. '       ' → logprob: -3.8271830081939697
    4. '           ' → logprob: -4.452183246612549
    5. '  
' → logprob: -5.452183246612549
    6. '   ' → logprob: -5.577183246612549
    7. '                
' → logprob: -6.327183246612549
    8. '    
' → logprob: -7.077183246612549
    9. ' 
' → logprob: -7.077183246612549
    10. '        
' → logprob: -7.452183246612549

Token 451: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.013912548311054707
    2. 'd' → logprob: -5.263912677764893
    3. '               ' → logprob: -5.513912677764893
    4. ' if' → logprob: -6.013912677764893
    5. '           ' → logprob: -6.513912677764893
    6. 'try' → logprob: -7.763912677764893
    7. '   ' → logprob: -8.763912200927734
    8. '       ' → logprob: -9.888912200927734
    9. 'for' → logprob: -10.638912200927734
    10. ' d' → logprob: -11.263912200927734

Token 452: ' remove' (ID: 6234)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.01821889542043209
    2. 'try' → logprob: -4.518218994140625
    3. ' if' → logprob: -5.393218994140625
    4. '           ' → logprob: -6.268218994140625
    5. '   ' → logprob: -7.643218994140625
    6. '               ' → logprob: -9.518218994140625
    7. '       ' → logprob: -9.893218994140625
    8. 'for' → logprob: -10.393218994140625
    9. ' try' → logprob: -10.643218994140625
    10. 'idx' → logprob: -10.643218994140625

Token 453: ' if' (ID: 538)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.7440595030784607
    2. ' b' → logprob: -0.8690595030784607
    3. ' if' → logprob: -2.6190595626831055
    4. 'if' → logprob: -3.8690595626831055
    5. '(b' → logprob: -5.2440595626831055
    6. ' the' → logprob: -5.7440595626831055
    7. 'from' → logprob: -6.6190595626831055
    8. ' from' → logprob: -7.1190595626831055
    9. 'd' → logprob: -8.494059562683105
    10. ' try' → logprob: -8.994059562683105

Token 454: ' exists' (ID: 13031)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.04300912097096443
    2. ' b' → logprob: -3.168009042739868
    3. '(b' → logprob: -11.793008804321289
    4. '```' → logprob: -14.168008804321289
    5. '	b' → logprob: -14.668008804321289
    6. '[b' → logprob: -15.418008804321289
    7. '   ' → logprob: -15.543008804321289
    8. ' ' → logprob: -15.793008804321289
    9. 'in' → logprob: -16.04300880432129
    10. ' in' → logprob: -16.04300880432129

Token 455: ' &' (ID: 827)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.05204904451966286
    2. 'if' → logprob: -3.052049160003662
    3. ' in' → logprob: -7.052049160003662
    4. '           ' → logprob: -7.052049160003662
    5. '               ' → logprob: -7.177049160003662
    6. ',' → logprob: -8.302048683166504
    7. ' b' → logprob: -8.302048683166504
    8. ' try' → logprob: -9.302048683166504
    9. ' and' → logprob: -9.802048683166504
    10. '                   ' → logprob: -9.802048683166504

Token 456: ' add' (ID: 1147)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.8331534266471863
    2. 'd' → logprob: -1.208153486251831
    3. ' if' → logprob: -2.083153486251831
    4. 'if' → logprob: -2.333153486251831
    5. ' try' → logprob: -3.708153486251831
    6. 'try' → logprob: -4.083153247833252
    7. 'insert' → logprob: -7.583153247833252
    8. ' append' → logprob: -7.583153247833252
    9. '       ' → logprob: -7.708153247833252
    10. ' insert' → logprob: -7.833153247833252

Token 457: ' to' (ID: 316)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.0874585211277008
    2. ' b' → logprob: -2.837458610534668
    3. ' (' → logprob: -4.587458610534668
    4. 'b' → logprob: -5.337458610534668
    5. '   ' → logprob: -5.587458610534668
    6. '(' → logprob: -5.712458610534668
    7. ' if' → logprob: -7.337458610534668
    8. ' in' → logprob: -7.712458610534668
    9. ' =' → logprob: -7.962458610534668
    10. 'd' → logprob: -8.337458610534668

Token 458: ' last' (ID: 2174)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.08105476200580597
    2. ' d' → logprob: -2.5810546875
    3. ' the' → logprob: -6.3310546875
    4. 'the' → logprob: -8.5810546875
    5. 'end' → logprob: -9.3310546875
    6. ' end' → logprob: -10.3310546875
    7. '   ' → logprob: -10.7060546875
    8. '	d' → logprob: -11.4560546875
    9. ' ' → logprob: -11.5810546875
    10. '```' → logprob: -11.5810546875

Token 459: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1896982342004776
    2. ' if' → logprob: -2.0646982192993164
    3. '       ' → logprob: -3.8146982192993164
    4. 'if' → logprob: -5.064698219299316
    5. '               ' → logprob: -5.189698219299316
    6. '   ' → logprob: -5.439698219299316
    7. '
' → logprob: -5.689698219299316
    8. ',' → logprob: -7.814698219299316
    9. '	       ' → logprob: -7.939698219299316
    10. '	if' → logprob: -8.189698219299316

Token 460: 'MR' (ID: 27029)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.8806483149528503
    2. 'b' → logprob: -1.6306483745574951
    3. ' d' → logprob: -1.7556483745574951
    4. ' if' → logprob: -2.380648374557495
    5. ' b' → logprob: -2.505648374557495
    6. 'if' → logprob: -3.880648374557495
    7. ')' → logprob: -4.505648136138916
    8. ')
' → logprob: -5.255648136138916
    9. '   ' → logprob: -6.380648136138916
    10. ' for' → logprob: -7.130648136138916

Token 461: 'U' (ID: 52)
  Prédit: 'U'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'U' → logprob: -0.0010743727907538414
    2. 'u' → logprob: -7.251074314117432
    3. 'd' → logprob: -8.87607479095459
    4. 'list' → logprob: -10.25107479095459
    5. '   ' → logprob: -10.50107479095459
    6. 'e' → logprob: -10.87607479095459
    7. '```' → logprob: -11.25107479095459
    8. 'l' → logprob: -11.50107479095459
    9. 'RU' → logprob: -11.87607479095459
    10. ' U' → logprob: -11.87607479095459

Token 462: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5677987933158875
    2. ')' → logprob: -1.5677988529205322
    3. '               ' → logprob: -2.3177988529205322
    4. '           ' → logprob: -2.4427988529205322
    5. 'd' → logprob: -4.692798614501953
    6. '       ' → logprob: -4.942798614501953
    7. '                   ' → logprob: -5.067798614501953
    8. '   ' → logprob: -5.317798614501953
    9. ' if' → logprob: -6.067798614501953
    10. '(b' → logprob: -6.692798614501953

Token 463: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6604930758476257
    2. ' if' → logprob: -1.1604931354522705
    3. 'if' → logprob: -2.2854931354522705
    4. '               ' → logprob: -3.4104931354522705
    5. '       ' → logprob: -4.160492897033691
    6. 'try' → logprob: -5.035492897033691
    7. '   ' → logprob: -5.035492897033691
    8. ' try' → logprob: -5.660492897033691
    9. '
' → logprob: -5.910492897033691
    10. '            
' → logprob: -8.785492897033691

Token 464: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.029939079657197
    2. '           ' → logprob: -4.0299391746521
    3. ' if' → logprob: -4.7799391746521
    4. 'try' → logprob: -6.1549391746521
    5. '   ' → logprob: -7.0299391746521
    6. '       ' → logprob: -8.279938697814941
    7. '               ' → logprob: -9.779938697814941
    8. ' try' → logprob: -12.779938697814941
    9. 'while' → logprob: -14.154938697814941
    10. '	if' → logprob: -14.529938697814941

Token 465: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0008045066497288644
    2. ' b' → logprob: -7.125804424285889
    3. '   ' → logprob: -17.125804901123047
    4. '	b' → logprob: -18.125804901123047
    5. ' ' → logprob: -18.250804901123047
    6. '  ' → logprob: -19.875804901123047
    7. '(b' → logprob: -20.750804901123047
    8. '    ' → logprob: -20.750804901123047
    9. ' ' → logprob: -21.500804901123047
    10. ' б' → logprob: -22.000804901123047

Token 466: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5759871006011963
    2. ' in' → logprob: -0.8259871006011963
    3. 'b' → logprob: -10.700986862182617
    4. ' ' → logprob: -11.825986862182617
    5. ' b' → logprob: -11.950986862182617
    6. 'not' → logprob: -12.575986862182617
    7. '	in' → logprob: -13.200986862182617
    8. ' not' → logprob: -13.450986862182617
    9. '<|end|>' → logprob: -13.700986862182617
    10. '  ' → logprob: -14.575986862182617

Token 467: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -7.941850526549388e-06
    2. ' d' → logprob: -11.750007629394531
    3. '	d' → logprob: -18.25000762939453
    4. '_d' → logprob: -21.62500762939453
    5. ')d' → logprob: -22.00000762939453
    6. '   ' → logprob: -22.87500762939453
    7. '­d' → logprob: -23.12500762939453
    8. '
' → logprob: -23.50000762939453
    9. '>d' → logprob: -23.50000762939453
    10. '[d' → logprob: -23.87500762939453

Token 468: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. 'd' → logprob: -14.125000953674316
    3. 'l' → logprob: -15.750000953674316
    4. 'lst' → logprob: -16.750001907348633
    5. 'f' → logprob: -17.250001907348633
    6. '```' → logprob: -17.875001907348633
    7. 'i' → logprob: -18.000001907348633
    8. '_' → logprob: -18.125001907348633
    9. '[' → logprob: -18.250001907348633
    10. 'a' → logprob: -18.625001907348633

Token 469: '_lst' (ID: 72474)
  Prédit: '_lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lst' → logprob: -1.2664456789934775e-06
    2. 'lst' → logprob: -14.000000953674316
    3. '_' → logprob: -15.625000953674316
    4. '_l' → logprob: -16.125001907348633
    5. '_ls' → logprob: -17.250001907348633
    6. '_list' → logprob: -17.875001907348633
    7. '_d' → logprob: -18.375001907348633
    8. 'd' → logprob: -18.750001907348633
    9. ' _' → logprob: -19.000001907348633
    10. '_tbl' → logprob: -19.125001907348633

Token 470: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4905754029750824
    2. ':
' → logprob: -0.9905754327774048
    3. '.remove' → logprob: -4.240575313568115
    4. '):
' → logprob: -7.240575313568115
    5. 'remove' → logprob: -7.615575313568115
    6. '           ' → logprob: -8.615575790405273
    7. '               ' → logprob: -9.240575790405273
    8. ' remove' → logprob: -9.240575790405273
    9. '                   ' → logprob: -9.365575790405273
    10. '):' → logprob: -9.740575790405273

Token 471: '                   ' (ID: 699)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.09188742190599442
    2. '               ' → logprob: -3.3418874740600586
    3. 'd' → logprob: -3.7168874740600586
    4. '           ' → logprob: -4.091887474060059
    5. '                   ' → logprob: -5.091887474060059
    6. '                       ' → logprob: -5.841887474060059
    7. '       ' → logprob: -7.091887474060059
    8. '                           ' → logprob: -7.841887474060059
    9. '   ' → logprob: -8.466887474060059
    10. '	d' → logprob: -8.841887474060059

Token 472: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.04861972853541374
    2. 'd' (adapté à ' d') → logprob: -3.0486197471618652
    3. '	d' → logprob: -10.423619270324707
    4. '   ' → logprob: -13.923619270324707
    5. '       ' → logprob: -14.298619270324707
    6. '               ' → logprob: -15.298619270324707
    7. '                   ' → logprob: -15.298619270324707
    8. '           ' → logprob: -15.423619270324707
    9. '                       ' → logprob: -15.923619270324707
    10. '    ' → logprob: -17.048620223999023

Token 473: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. '_' → logprob: -15.500000953674316
    3. ' ' → logprob: -16.375
    4. 'e' → logprob: -17.3125
    5. '   ' → logprob: -17.3125
    6. 'l' → logprob: -17.5625
    7. '```' → logprob: -17.6875
    8. 'el' → logprob: -18.0625
    9. '１' → logprob: -18.1875
    10. '
' → logprob: -18.75

Token 474: '_lst' (ID: 72474)
  Prédit: '_lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lst' → logprob: -4.320199877838604e-07
    2. 'lst' → logprob: -16.5
    3. '_l' → logprob: -16.625
    4. '1' → logprob: -17.375
    5. '_' → logprob: -17.75
    6. '_list' → logprob: -18.125
    7. '```' → logprob: -19.0
    8. '   ' → logprob: -19.25
    9. '_ls' → logprob: -19.25
    10. '[_' → logprob: -19.375

Token 475: '.remove' (ID: 7986)
  Prédit: '.remove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.remove' → logprob: -3.619311974034645e-05
    2. '.' → logprob: -10.250036239624023
    3. 'remove' → logprob: -14.125036239624023
    4. '.pop' → logprob: -17.250036239624023
    5. '.Remove' → logprob: -17.875036239624023
    6. ' remove' → logprob: -18.125036239624023
    7. ' .' → logprob: -19.000036239624023
    8. '_remove' → logprob: -19.000036239624023
    9. '.del' → logprob: -19.750036239624023
    10. '	remove' → logprob: -20.000036239624023

Token 476: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.002434878144413233
    2. '(' → logprob: -6.127434730529785
    3. 'b' → logprob: -8.377434730529785
    4. ' (' → logprob: -11.252434730529785
    5. ' b' → logprob: -12.002434730529785
    6. '(
' → logprob: -14.502434730529785
    7. ')' → logprob: -17.5024356842041
    8. '[b' → logprob: -17.8774356842041
    9. '	b' → logprob: -18.0024356842041
    10. ')b' → logprob: -18.2524356842041

Token 477: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1293293684720993
    2. ')
' → logprob: -2.1293294429779053
    3. ')b' → logprob: -6.254329204559326
    4. '               ' → logprob: -8.379329681396484
    5. '                   ' → logprob: -9.379329681396484
    6. ')
' → logprob: -9.754329681396484
    7. 'b' → logprob: -10.004329681396484
    8. ',b' → logprob: -11.254329681396484
    9. ' b' → logprob: -11.629329681396484
    10. '           ' → logprob: -11.754329681396484

Token 478: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0012152367271482944
    2. '
' → logprob: -7.75121545791626
    3. '                
' → logprob: -8.626214981079102
    4. ' else' → logprob: -9.376214981079102
    5. '<|end|>' → logprob: -9.626214981079102
    6. '			' → logprob: -9.626214981079102
    7. 'd' → logprob: -9.876214981079102
    8. '           ' → logprob: -10.001214981079102
    9. '                ' → logprob: -10.126214981079102
    10. 'else' → logprob: -10.251214981079102

Token 479: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.1535075604915619
    2. ' d' → logprob: -2.2785074710845947
    3. '               ' → logprob: -3.2785074710845947
    4. '           ' → logprob: -6.903507709503174
    5. '	d' → logprob: -7.028507709503174
    6. '       ' → logprob: -9.028507232666016
    7. '                   ' → logprob: -10.153507232666016
    8. '			' → logprob: -10.278507232666016
    9. '   ' → logprob: -10.528507232666016
    10. '	' → logprob: -10.778507232666016

Token 480: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '_' → logprob: -18.125
    3. '１' → logprob: -20.625
    4. '۱' → logprob: -22.125
    5. 'l' → logprob: -22.375
    6. '```' → logprob: -22.75
    7. 'lst' → logprob: -23.0
    8. '१' → logprob: -23.375
    9. '_l' → logprob: -23.5
    10. ' ' → logprob: -23.625

Token 481: '_lst' (ID: 72474)
  Prédit: '_lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lst' → logprob: -2.2200749754119897e-06
    2. 'lst' → logprob: -13.250001907348633
    3. 'st' → logprob: -15.250001907348633
    4. '_l' → logprob: -17.250001907348633
    5. '_list' → logprob: -17.375001907348633
    6. '_' → logprob: -17.625001907348633
    7. 's' → logprob: -17.625001907348633
    8. '_rst' → logprob: -17.625001907348633
    9. '_ls' → logprob: -18.000001907348633
    10. 'Lst' → logprob: -19.000001907348633

Token 482: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.000158842682139948
    2. '.' → logprob: -8.75015926361084
    3. ' .' → logprob: -15.25015926361084
    4. 'append' → logprob: -16.625158309936523
    5. '.extend' → logprob: -17.250158309936523
    6. '.app' → logprob: -17.500158309936523
    7. '.insert' → logprob: -18.375158309936523
    8. '.Append' → logprob: -19.125158309936523
    9. '.push' → logprob: -19.250158309936523
    10. '.add' → logprob: -19.625158309936523

Token 483: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: 0.0
    2. '(' → logprob: -17.0
    3. 'b' → logprob: -18.125
    4. '(B' → logprob: -22.375
    5. '	b' → logprob: -22.375
    6. '(
' → logprob: -24.0
    7. ' (' → logprob: -24.25
    8. '```' → logprob: -24.5
    9. '(br' → logprob: -24.75
    10. '[b' → logprob: -24.875

Token 484: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002508716657757759
    2. ')
' → logprob: -6.002508640289307
    3. '           ' → logprob: -10.627509117126465
    4. '<|end|>' → logprob: -12.752509117126465
    5. '               ' → logprob: -13.127509117126465
    6. ')
' → logprob: -13.877509117126465
    7. ' )' → logprob: -14.377509117126465
    8. '       ' → logprob: -14.377509117126465
    9. '),' → logprob: -15.127509117126465
    10. '<|end|>' → logprob: -15.627509117126465

Token 485: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08675956726074219
    2. 'else' → logprob: -2.586759567260742
    3. ' else' → logprob: -5.336759567260742
    4. 'elif' → logprob: -6.086759567260742
    5. '       ' → logprob: -7.711759567260742
    6. '               ' → logprob: -9.086759567260742
    7. '		' → logprob: -9.336759567260742
    8. ' elif' → logprob: -10.461759567260742
    9. '   ' → logprob: -10.836759567260742
    10. '	       ' → logprob: -10.961759567260742

Token 486: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.49263522028923035
    2. '           ' → logprob: -0.9926352500915527
    3. ' else' → logprob: -4.492635250091553
    4. 'elif' → logprob: -4.992635250091553
    5. '       ' → logprob: -8.367634773254395
    6. ' elif' → logprob: -8.742634773254395
    7. '```' → logprob: -11.367634773254395
    8. '               ' → logprob: -13.492634773254395
    9. '   ' → logprob: -13.742634773254395
    10. '		' → logprob: -14.492634773254395

Token 487: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.9144986867904663
    2. '               ' → logprob: -1.0394986867904663
    3. ':' → logprob: -1.4144986867904663
    4. '           ' → logprob: -6.039498805999756
    5. '       ' → logprob: -9.414498329162598
    6. ' if' → logprob: -10.914498329162598
    7. ':

' → logprob: -11.039498329162598
    8. '):
' → logprob: -11.164498329162598
    9. ',' → logprob: -11.289498329162598
    10. '   ' → logprob: -11.414498329162598

Token 488: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0024321437813341618
    2. '           ' → logprob: -6.752432346343994
    3. '#' → logprob: -7.627432346343994
    4. ' #' → logprob: -8.127431869506836
    5. '```' → logprob: -8.127431869506836
    6. '                   ' → logprob: -9.627431869506836
    7. '       ' → logprob: -10.502431869506836
    8. ' if' → logprob: -10.502431869506836
    9. 'if' → logprob: -11.127431869506836
    10. '   ' → logprob: -11.252431869506836

Token 489: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.9377455115318298
    2. '               ' → logprob: -1.0627455711364746
    3. ' #' → logprob: -2.1877455711364746
    4. 'if' → logprob: -2.8127455711364746
    5. 'old' → logprob: -3.6877455711364746
    6. ' if' → logprob: -3.9377455711364746
    7. '           ' → logprob: -4.187745571136475
    8. 'd' → logprob: -4.812745571136475
    9. 'pos' → logprob: -5.312745571136475
    10. 'idx' → logprob: -5.437745571136475

Token 490: ' D' (ID: 415)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6327381134033203
    2. 'if' → logprob: -0.8827381134033203
    3. ' if' → logprob: -4.50773811340332
    4. '               ' → logprob: -4.50773811340332
    5. ' #' → logprob: -4.50773811340332
    6. 'pos' → logprob: -4.63273811340332
    7. 'd' → logprob: -5.88273811340332
    8. 'idx' → logprob: -6.38273811340332
    9. 'old' → logprob: -6.50773811340332
    10. '           ' → logprob: -6.88273811340332

Token 491: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008916903752833605
    2. 'es' → logprob: -7.12589168548584
    3. 'esk' → logprob: -11.25089168548584
    4. 'des' → logprob: -11.25089168548584
    5. '
' → logprob: -11.37589168548584
    6. '2' → logprob: -12.00089168548584
    7. '   ' → logprob: -12.12589168548584
    8. '#' → logprob: -12.25089168548584
    9. '0' → logprob: -12.25089168548584
    10. '[' → logprob: -12.37589168548584

Token 492: ' full' (ID: 3149)
  Prédit: '_books'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_books' → logprob: -0.4860050678253174
    2. '_lst' → logprob: -1.4860050678253174
    3. 'books' → logprob: -3.6110050678253174
    4. '_list' → logprob: -3.8610050678253174
    5. '_book' → logprob: -3.8610050678253174
    6. '_queue' → logprob: -4.236004829406738
    7. 'lst' → logprob: -4.986004829406738
    8. 'book' → logprob: -5.111004829406738
    9. 'd' → logprob: -5.111004829406738
    10. '_d' → logprob: -5.236004829406738

Token 493: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6364648938179016
    2. ':
' → logprob: -1.3864648342132568
    3. ':' → logprob: -1.6364648342132568
    4. ' and' → logprob: -4.761465072631836
    5. ',' → logprob: -5.511465072631836
    6. '                   ' → logprob: -5.886465072631836
    7. ' if' → logprob: -6.136465072631836
    8. '{' → logprob: -6.636465072631836
    9. '   ' → logprob: -6.636465072631836
    10. '<|end|>' → logprob: -7.011465072631836

Token 494: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05183016136288643
    2. ':
' → logprob: -4.051830291748047
    3. '                
' → logprob: -4.926830291748047
    4. ':' → logprob: -5.301830291748047
    5. '                   ' → logprob: -5.426830291748047
    6. '
' → logprob: -5.426830291748047
    7. '{' → logprob: -6.051830291748047
    8. '{
' → logprob: -6.551830291748047
    9. '#' → logprob: -6.676830291748047
    10. ',' → logprob: -6.801830291748047

Token 495: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -1.445157527923584
    2. '               ' → logprob: -1.570157527923584
    3. 'if' → logprob: -1.695157527923584
    4. 'old' → logprob: -2.195157527923584
    5. 'ev' → logprob: -2.320157527923584
    6. 'd' → logprob: -3.070157527923584
    7. ' #' → logprob: -3.820157527923584
    8. '           ' → logprob: -3.945157527923584
    9. ' ev' → logprob: -4.695157527923584
    10. 'l' → logprob: -4.820157527923584

Token 496: ' temporarily' (ID: 48722)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1581528186798096
    2. 'ev' → logprob: -1.9081528186798096
    3. ' ev' → logprob: -2.0331528186798096
    4. 'if' → logprob: -2.1581528186798096
    5. ' #' → logprob: -2.9081528186798096
    6. 'old' → logprob: -3.0331528186798096
    7. 'd' → logprob: -3.1581528186798096
    8. ' if' → logprob: -3.4081528186798096
    9. 'l' → logprob: -3.4081528186798096
    10. ' l' → logprob: -4.0331525802612305

Token 497: ' put' (ID: 3006)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.7961091995239258
    2. '               ' → logprob: -1.4211091995239258
    3. 'remove' → logprob: -2.546109199523926
    4. '#' → logprob: -3.046109199523926
    5. '                   ' → logprob: -3.171109199523926
    6. ' remove' → logprob: -3.671109199523926
    7. 'pop' → logprob: -4.171109199523926
    8. 'b' → logprob: -4.296109199523926
    9. '           ' → logprob: -4.421109199523926
    10. 'store' → logprob: -4.671109199523926

Token 498: ' requested' (ID: 17222)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6178796291351318
    2. ' b' → logprob: -1.1178796291351318
    3. ' book' → logprob: -2.992879629135132
    4. ' desks' → logprob: -3.117879629135132
    5. 'book' → logprob: -4.242879867553711
    6. ' the' → logprob: -4.617879867553711
    7. 'books' → logprob: -5.492879867553711
    8. ' books' → logprob: -5.992879867553711
    9. 'd' → logprob: -6.492879867553711
    10. 'the' → logprob: -6.617879867553711

Token 499: ' book' (ID: 2392)
  Prédit: ' book'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' book' → logprob: -0.8721686601638794
    2. 'b' → logprob: -1.4971686601638794
    3. 'book' → logprob: -1.4971686601638794
    4. ' b' → logprob: -2.37216854095459
    5. '[' → logprob: -4.37216854095459
    6. '_book' → logprob: -4.74716854095459
    7. ' ' → logprob: -5.49716854095459
    8. 'books' → logprob: -5.87216854095459
    9. ' books' → logprob: -6.12216854095459
    10. '	book' → logprob: -6.37216854095459

Token 500: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.11165627837181091
    2. 'on' → logprob: -2.8616561889648438
    3. ' in' → logprob: -3.2366561889648438
    4. 'in' → logprob: -6.111656188964844
    5. '[' → logprob: -6.861656188964844
    6. ' into' → logprob: -6.986656188964844
    7. ' at' → logprob: -6.986656188964844
    8. 's' → logprob: -7.486656188964844
    9. 'b' → logprob: -7.611656188964844
    10. ' b' → logprob: -8.111656188964844

Token 501: ' nearest' (ID: 35210)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.2171206772327423
    2. 'd' → logprob: -1.71712064743042
    3. '[]' → logprob: -5.34212064743042
    4. 's' → logprob: -5.46712064743042
    5. 'D' → logprob: -6.59212064743042
    6. 'desk' → logprob: -6.71712064743042
    7. ' desks' → logprob: -7.09212064743042
    8. '[' → logprob: -7.09212064743042
    9. ' d' → logprob: -7.59212064743042
    10. 'a' → logprob: -8.092121124267578

Token 502: ' non' (ID: 2893)
  Prédit: ' desk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' desk' → logprob: -0.18683123588562012
    2. 'desk' → logprob: -2.18683123588562
    3. ' desks' → logprob: -3.06183123588562
    4. 'des' → logprob: -5.436831474304199
    5. '0' → logprob: -6.186831474304199
    6. '[' → logprob: -6.186831474304199
    7. ' ' → logprob: -6.561831474304199
    8. '_des' → logprob: -8.0618314743042
    9. 'd' → logprob: -8.4368314743042
    10. ' des' → logprob: -8.8118314743042

Token 503: ' full' (ID: 3149)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009390175342559814
    2. '-' → logprob: -5.134390354156494
    3. 'empty' → logprob: -6.759390354156494
    4. ' ' → logprob: -7.009390354156494
    5. '[' → logprob: -8.009389877319336
    6. '-empty' → logprob: -8.134389877319336
    7. 'zero' → logprob: -8.884389877319336
    8. '[]' → logprob: -9.009389877319336
    9. '-zero' → logprob: -9.384389877319336
    10. ' -' → logprob: -9.634389877319336

Token 504: ' desk' (ID: 20794)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6292086839675903
    2. '0' → logprob: -1.5042086839675903
    3. ' desk' → logprob: -2.254208564758301
    4. ' ' → logprob: -2.629208564758301
    5. 'desk' → logprob: -2.879208564758301
    6. '[' → logprob: -5.629208564758301
    7. 'des' → logprob: -6.879208564758301
    8. '```' → logprob: -7.379208564758301
    9. '-' → logprob: -7.629208564758301
    10. 's' → logprob: -7.629208564758301

Token 505: ' to' (ID: 316)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1806148290634155
    2. '1' → logprob: -1.3056148290634155
    3. '
' → logprob: -1.5556148290634155
    4. ' =' → logprob: -2.555614948272705
    5. '0' → logprob: -3.055614948272705
    6. '               ' → logprob: -3.555614948272705
    7. ' ' → logprob: -4.555614948272705
    8. ' (' → logprob: -5.430614948272705
    9. 'idx' → logprob: -5.805614948272705
    10. '[
' → logprob: -5.805614948272705

Token 506: ' entrance' (ID: 27326)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.9035297632217407
    2. '0' → logprob: -1.9035297632217407
    3. '1' → logprob: -2.028529644012451
    4. 'des' → logprob: -2.528529644012451
    5. 'put' → logprob: -2.778529644012451
    6. ' the' → logprob: -3.028529644012451
    7. 'append' → logprob: -3.653529644012451
    8. 'place' → logprob: -4.153529644012451
    9. 'insert' → logprob: -4.403529644012451
    10. ' desks' → logprob: -4.528529644012451

Token 507: ' (' (ID: 350)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5645488500595093
    2. ' for' → logprob: -1.3145488500595093
    3. '
' → logprob: -2.689548969268799
    4. 'for' → logprob: -3.064548969268799
    5. '                
' → logprob: -4.439548969268799
    6. '0' → logprob: -5.064548969268799
    7. '           ' → logprob: -5.564548969268799
    8. '```' → logprob: -5.689548969268799
    9. ' (' → logprob: -5.814548969268799
    10. '                ' → logprob: -5.939548969268799

Token 508: 'D' (ID: 35)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3220766484737396
    2. '1' → logprob: -1.572076678276062
    3. ')' → logprob: -3.0720765590667725
    4. 'des' → logprob: -4.947076797485352
    5. ' ' → logprob: -5.072076797485352
    6. 'for' → logprob: -6.322076797485352
    7. ',' → logprob: -7.072076797485352
    8. ' )' → logprob: -7.322076797485352
    9. ' for' → logprob: -7.572076797485352
    10. 'if' → logprob: -7.697076797485352

Token 509: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003882619086652994
    2. '0' → logprob: -6.00388240814209
    3. ' ' → logprob: -7.25388240814209
    4. '[' → logprob: -7.62888240814209
    5. ')' → logprob: -9.25388240814209
    6. '2' → logprob: -10.00388240814209
    7. 'es' → logprob: -10.87888240814209
    8. '   ' → logprob: -11.37888240814209
    9. ' )' → logprob: -12.12888240814209
    10. ' [' → logprob: -12.37888240814209

Token 510: ' excluded' (ID: 52015)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7015708684921265
    2. '[' → logprob: -1.2015708684921265
    3. '0' → logprob: -2.076570987701416
    4. ',' → logprob: -3.576570987701416
    5. ' +' → logprob: -4.451570987701416
    6. ' )' → logprob: -4.701570987701416
    7. '1' → logprob: -5.076570987701416
    8. '+' → logprob: -5.201570987701416
    9. '),' → logprob: -5.701570987701416
    10. ' or' → logprob: -6.076570987701416

Token 511: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4071623384952545
    2. ')
' → logprob: -1.2821623086929321
    3. '0' → logprob: -3.7821624279022217
    4. '[' → logprob: -4.032162189483643
    5. ',' → logprob: -4.657162189483643
    6. '):' → logprob: -6.532162189483643
    7. '1' → logprob: -6.907162189483643
    8. '):
' → logprob: -7.032162189483643
    9. '               ' → logprob: -7.157162189483643
    10. '),' → logprob: -7.657162189483643

Token 512: ' or' (ID: 503)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.39239710569381714
    2. '               ' → logprob: -2.142397165298462
    3. '<|end|>' → logprob: -2.767397165298462
    4. ' for' → logprob: -3.642397165298462
    5. ' =' → logprob: -4.517396926879883
    6. ',' → logprob: -4.642396926879883
    7. ':' → logprob: -4.767396926879883
    8. '[' → logprob: -5.017396926879883
    9. ' (' → logprob: -5.017396926879883
    10. '                
' → logprob: -5.142396926879883

Token 513: ' shelf' (ID: 40978)
  Prédit: ' shelf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' shelf' → logprob: -0.05532126501202583
    2. 's' → logprob: -2.930321216583252
    3. ' None' → logprob: -9.43032169342041
    4. ' shel' → logprob: -9.43032169342041
    5. 'None' → logprob: -9.68032169342041
    6. ' shelves' → logprob: -10.55532169342041
    7. ' desk' → logprob: -10.68032169342041
    8. ' continue' → logprob: -10.80532169342041
    9. 'continue' → logprob: -11.18032169342041
    10. 'Shelf' → logprob: -11.18032169342041

Token 514: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7623739838600159
    2. '
' → logprob: -0.8873739838600159
    3. '                
' → logprob: -3.637373924255371
    4. '\n' → logprob: -3.887373924255371
    5. '                ' → logprob: -4.012373924255371
    6. '\' → logprob: -5.137373924255371
    7. '<|end|>' → logprob: -5.137373924255371
    8. ':' → logprob: -5.387373924255371
    9. '           ' → logprob: -5.762373924255371
    10. '                   ' → logprob: -5.762373924255371

Token 515: ' all' (ID: 722)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.0585613250732422
    2. 'm' → logprob: -1.3085613250732422
    3. ' len' → logprob: -2.808561325073242
    4. ' all' → logprob: -2.808561325073242
    5. ' m' → logprob: -3.058561325073242
    6. 'loc' → logprob: -3.058561325073242
    7. 'True' → logprob: -3.183561325073242
    8. 'all' → logprob: -3.558561325073242
    9. ' True' → logprob: -3.683561325073242
    10. 'None' → logprob: -4.183561325073242

Token 516: ' full' (ID: 3149)
  Prédit: 'full'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'full' → logprob: -0.4833214581012726
    2. 'des' → logprob: -1.4833214282989502
    3. ' full' → logprob: -2.23332142829895
    4. 'filled' → logprob: -4.108321666717529
    5. 'else' → logprob: -5.108321666717529
    6. 'empty' → logprob: -5.483321666717529
    7. 'd' → logprob: -5.608321666717529
    8. 'fill' → logprob: -5.858321666717529
    9. '[' → logprob: -6.108321666717529
    10. 'm' → logprob: -6.483321666717529

Token 517: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20911435782909393
    2. '               ' → logprob: -1.8341143131256104
    3. '                
' → logprob: -5.5841145515441895
    4. '           ' → logprob: -5.7091145515441895
    5. ' for' → logprob: -5.8341145515441895
    6. '  
' → logprob: -6.3341145515441895
    7. '<|end|>' → logprob: -6.5841145515441895
    8. '    
' → logprob: -6.5841145515441895
    9. ' if' → logprob: -6.7091145515441895
    10. '                   ' → logprob: -6.7091145515441895

Token 518: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.2147421836853027
    2. '
' → logprob: -1.9647421836853027
    3. ' 
' → logprob: -1.9647421836853027
    4. '[' → logprob: -2.5897421836853027
    5. '                
' → logprob: -2.9647421836853027
    6. '  
' → logprob: -3.0897421836853027
    7. '<|end|>' → logprob: -3.0897421836853027
    8. '```' → logprob: -3.7147421836853027
    9. '            
' → logprob: -3.7147421836853027
    10. '\n' → logprob: -3.8397421836853027

Token 519: ' placed' (ID: 12989)
  Prédit: ' desks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' desks' → logprob: -1.195593237876892
    2. ' if' → logprob: -2.0705933570861816
    3. ' for' → logprob: -2.1955933570861816
    4. ' desk' → logprob: -2.6955933570861816
    5. ' 
' → logprob: -2.9455933570861816
    6. ' b' → logprob: -3.1955933570861816
    7. 'for' → logprob: -3.3205933570861816
    8. ' idx' → logprob: -3.6955933570861816
    9. ' loc' → logprob: -3.8205933570861816
    10. '               ' → logprob: -3.9455933570861816

Token 520: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08175553381443024
    2. '=' → logprob: -2.7067556381225586
    3. '_idx' → logprob: -5.456755638122559
    4. '_d' → logprob: -6.831755638122559
    5. '_index' → logprob: -6.831755638122559
    6. '_on' → logprob: -7.456755638122559
    7. '_pos' → logprob: -7.456755638122559
    8. '_book' → logprob: -7.581755638122559
    9. '_token' → logprob: -7.831755638122559
    10. '_b' → logprob: -7.831755638122559

Token 521: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.004078401252627373
    2. ' False' → logprob: -5.504078388214111
    3. '   ' → logprob: -18.754077911376953
    4. '0' → logprob: -19.879077911376953
    5. 'True' → logprob: -19.879077911376953
    6. '(False' → logprob: -20.004077911376953
    7. '=False' → logprob: -20.879077911376953
    8. 'F' → logprob: -21.004077911376953
    9. 'None' → logprob: -21.254077911376953
    10. ' ' → logprob: -21.879077911376953

Token 522: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8487740755081177
    2. ' for' → logprob: -0.9737740755081177
    3. 'for' → logprob: -2.973773956298828
    4. ' 
' → logprob: -3.473773956298828
    5. '<|end|>' → logprob: -3.598773956298828
    6. '
' → logprob: -3.848773956298828
    7. '                
' → logprob: -4.223773956298828
    8. '                   ' → logprob: -4.848773956298828
    9. '                ' → logprob: -4.848773956298828
    10. '           ' → logprob: -5.348773956298828

Token 523: '               ' (ID: 506)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.48867982625961304
    2. ' 
' → logprob: -1.6136798858642578
    3. ' for' → logprob: -2.863679885864258
    4. '               ' → logprob: -2.988679885864258
    5. '\n' → logprob: -3.738679885864258
    6. 'for' → logprob: -3.988679885864258
    7. '           ' → logprob: -4.613679885864258
    8. '                
' → logprob: -4.863679885864258
    9. '            
' → logprob: -5.113679885864258
    10. '    
' → logprob: -6.113679885864258

Token 524: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2678857147693634
    2. 'for' (adapté à ' for') → logprob: -1.517885684967041
    3. ' 
' → logprob: -4.392885684967041
    4. '
' → logprob: -6.392885684967041
    5. '               ' → logprob: -7.642885684967041
    6. '\n' → logprob: -8.1428861618042
    7. '                
' → logprob: -8.2678861618042
    8. '	for' → logprob: -8.7678861618042
    9. '            
' → logprob: -9.1428861618042
    10. 'newline' → logprob: -9.7678861618042

Token 525: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.8397905826568604
    2. 'j' → logprob: -1.0897905826568604
    3. 'desk' → logprob: -1.5897905826568604
    4. 'idx' → logprob: -3.9647905826568604
    5. 'x' → logprob: -5.714790344238281
    6. 'di' → logprob: -6.464790344238281
    7. ' desk' → logprob: -6.589790344238281
    8. ' j' → logprob: -7.214790344238281
    9. 'i' → logprob: -7.714790344238281
    10. 'k' → logprob: -7.839790344238281

Token 526: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005230559967458248
    2. 'in' → logprob: -5.50523042678833
    3. 'x' → logprob: -7.25523042678833
    4. '1' → logprob: -8.630230903625488
    5. '_idx' → logprob: -10.005230903625488
    6. 'i' → logprob: -10.380230903625488
    7. 'idx' → logprob: -10.505230903625488
    8. '_' → logprob: -10.505230903625488
    9. 'ex' → logprob: -10.505230903625488
    10. 'd' → logprob: -10.755230903625488

Token 527: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0007099286303855479
    2. ' range' → logprob: -7.2507100105285645
    3. '1' → logprob: -17.750709533691406
    4. '   ' → logprob: -20.125709533691406
    5. '(range' → logprob: -20.250709533691406
    6. 'list' → logprob: -20.375709533691406
    7. '	range' → logprob: -21.000709533691406
    8. ' ' → logprob: -21.125709533691406
    9. 'Range' → logprob: -22.875709533691406
    10. 'r' → logprob: -23.000709533691406

Token 528: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. '(' → logprob: -13.750000953674316
    3. ' ' → logprob: -16.750001907348633
    4. '2' → logprob: -19.625001907348633
    5. 'm' → logprob: -19.625001907348633
    6. '[' → logprob: -19.875001907348633
    7. 'from' → logprob: -20.750001907348633
    8. '```' → logprob: -20.750001907348633
    9. '   ' → logprob: -21.250001907348633
    10. '۱' → logprob: -22.125001907348633

Token 529: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '   ' → logprob: -17.75
    4. '(' → logprob: -19.25
    5. '2' → logprob: -19.25
    6. '```' → logprob: -19.875
    7. '
' → logprob: -20.0
    8. 'm' → logprob: -20.5
    9. '0' → logprob: -20.625
    10. '۱' → logprob: -21.3125

Token 530: ',m' (ID: 26648)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.25330767035484314
    2. ',m' → logprob: -1.5033077001571655
    3. 'm' → logprob: -6.753307819366455
    4. ' ,' → logprob: -8.628307342529297
    5. ',len' → logprob: -10.753307342529297
    6. ',d' → logprob: -12.003307342529297
    7. ',c' → logprob: -13.378307342529297
    8. '1' → logprob: -14.503307342529297
    9. ',
' → logprob: -14.753307342529297
    10. ' m' → logprob: -15.628307342529297

Token 531: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.026332929730415344
    2. '):
' → logprob: -3.6513328552246094
    3. ':' → logprob: -11.40133285522461
    4. '):
' → logprob: -12.15133285522461
    5. ' ):' → logprob: -12.77633285522461
    6. ',' → logprob: -12.77633285522461
    7. '<|end|>' → logprob: -12.77633285522461
    8. '):

' → logprob: -13.27633285522461
    9. '[' → logprob: -13.77633285522461
    10. '():' → logprob: -14.02633285522461

Token 532: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.007018226198852062
    2. ' if' → logprob: -5.382018089294434
    3. '<|end|>' → logprob: -7.132018089294434
    4. '               ' → logprob: -7.882018089294434
    5. 'if' → logprob: -8.382018089294434
    6. '           ' → logprob: -8.382018089294434
    7. '		           ' → logprob: -8.507018089294434
    8. '   ' → logprob: -9.132018089294434
    9. '[' → logprob: -9.632018089294434
    10. '<|end|>' → logprob: -9.882018089294434

Token 533: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.048606324940919876
    2. ' if' → logprob: -3.0486063957214355
    3. '                   ' → logprob: -11.673605918884277
    4. '	if' → logprob: -12.923605918884277
    5. '<|end|>' → logprob: -13.173605918884277
    6. 'If' → logprob: -13.423605918884277
    7. '                       ' → logprob: -13.423605918884277
    8. '               ' → logprob: -13.798605918884277
    9. ' ' → logprob: -14.298605918884277
    10. '           ' → logprob: -15.298605918884277

Token 534: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0011705794604495168
    2. ' len' → logprob: -6.751170635223389
    3. '(len' → logprob: -14.75117015838623
    4. '	len' → logprob: -17.501171112060547
    5. '   ' → logprob: -17.626171112060547
    6. '[len' → logprob: -18.501171112060547
    7. '<len' → logprob: -19.001171112060547
    8. 'd' → logprob: -19.126171112060547
    9. ',len' → logprob: -19.126171112060547
    10. ' ' → logprob: -19.501171112060547

Token 535: '(des' (ID: 61239)
  Prédit: '(des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(des' → logprob: -0.011056192219257355
    2. 'des' → logprob: -4.511056423187256
    3. '(' → logprob: -12.261055946350098
    4. '(d' → logprob: -13.386055946350098
    5. '(
' → logprob: -14.636055946350098
    6. ' (' → logprob: -14.761055946350098
    7. '```' → logprob: -15.261055946350098
    8. 'Des' → logprob: -15.761055946350098
    9. '/des' → logprob: -15.761055946350098
    10. ' desks' → logprob: -15.886055946350098

Token 536: 'ks' (ID: 2484)
  Prédit: 'ks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ks' → logprob: -6.704273118884885e-07
    2. 's' → logprob: -14.875000953674316
    3. ' ks' → logprob: -16.0
    4. 'k' → logprob: -16.5
    5. 'cks' → logprob: -18.25
    6. 'KS' → logprob: -18.625
    7. '.ks' → logprob: -19.0
    8. '[' → logprob: -19.625
    9. 'Ks' → logprob: -20.375
    10. '```' → logprob: -20.625

Token 537: '[d' (ID: 48377)
  Prédit: '[d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -1.981667537620524e-06
    2. 'd' → logprob: -13.250001907348633
    3. '[' → logprob: -16.625001907348633
    4. ')d' → logprob: -16.875001907348633
    5. '(d' → logprob: -17.625001907348633
    6. ')[' → logprob: -18.125001907348633
    7. ')' → logprob: -18.500001907348633
    8. '[
' → logprob: -18.500001907348633
    9. '   ' → logprob: -19.500001907348633
    10. ' [' → logprob: -19.500001907348633

Token 538: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0023104806896299124
    2. ')' → logprob: -6.127310276031494
    3. ' ])' → logprob: -9.502310752868652
    4. '[d' → logprob: -11.752310752868652
    5. 'd' → logprob: -11.752310752868652
    6. ' )' → logprob: -11.877310752868652
    7. ''])' → logprob: -12.127310752868652
    8. ')<' → logprob: -12.377310752868652
    9. ']' → logprob: -12.502310752868652
    10. '[' → logprob: -12.877310752868652

Token 539: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.0905226394534111
    2. '<' → logprob: -2.465522527694702
    3. ')' → logprob: -6.840522766113281
    4. '<c' → logprob: -8.215522766113281
    5. ')<' → logprob: -9.465522766113281
    6. '<size' → logprob: -10.590522766113281
    7. '<p' → logprob: -10.590522766113281
    8. '<len' → logprob: -10.590522766113281
    9. '<n' → logprob: -10.965522766113281
    10. '<int' → logprob: -11.340522766113281

Token 540: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0002979240380227566
    2. ' c' → logprob: -8.125297546386719
    3. '   ' → logprob: -13.500297546386719
    4. '	c' → logprob: -15.125297546386719
    5. '
' → logprob: -16.50029754638672
    6. '  ' → logprob: -17.00029754638672
    7. ')c' → logprob: -17.37529754638672
    8. ' ' → logprob: -17.62529754638672
    9. '    ' → logprob: -18.87529754638672
    10. '```' → logprob: -19.00029754638672

Token 541: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6864449977874756
    2. ':
' → logprob: -0.8114449977874756
    3. '):
' → logprob: -3.1864449977874756
    4. '):' → logprob: -4.811445236206055
    5. '                       ' → logprob: -6.561445236206055
    6. '                   ' → logprob: -7.311445236206055
    7. '():
' → logprob: -7.436445236206055
    8. ' :
' → logprob: -9.811445236206055
    9. ' and' → logprob: -10.311445236206055
    10. '():' → logprob: -10.811445236206055

Token 542: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.02726881578564644
    2. 'des' → logprob: -4.277268886566162
    3. '                   ' → logprob: -4.902268886566162
    4. ' desks' → logprob: -5.777268886566162
    5. '               ' → logprob: -6.527268886566162
    6. '                           ' → logprob: -8.402268409729004
    7. '                        
' → logprob: -8.527268409729004
    8. '       ' → logprob: -8.777268409729004
    9. '                      ' → logprob: -9.027268409729004
    10. '                               ' → logprob: -9.152268409729004

Token 543: ' desks' (ID: 109910)
  Prédit: ' desks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' desks' → logprob: -0.5277959108352661
    2. 'des' → logprob: -1.0277959108352661
    3. '                       ' → logprob: -3.1527957916259766
    4. '                               ' → logprob: -5.527795791625977
    5. ' des' → logprob: -6.152795791625977
    6. '                           ' → logprob: -6.277795791625977
    7. '                   ' → logprob: -7.277795791625977
    8. '   ' → logprob: -7.902795791625977
    9. ' ' → logprob: -9.402795791625977
    10. '               ' → logprob: -9.402795791625977

Token 544: '[d' (ID: 48377)
  Prédit: '[d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -5.512236498361744e-07
    2. 'd' → logprob: -15.000000953674316
    3. '[' → logprob: -15.375000953674316
    4. '```' → logprob: -17.875
    5. '                   ' → logprob: -18.125
    6. '][' → logprob: -19.125
    7. ' [' → logprob: -19.25
    8. '(d' → logprob: -19.375
    9. ')d' → logprob: -19.625
    10. ')[' → logprob: -19.875

Token 545: '].' (ID: 1651)
  Prédit: '[d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -0.0007194612408056855
    2. '].' → logprob: -7.5007195472717285
    3. '][' → logprob: -9.00071907043457
    4. 'd' → logprob: -10.50071907043457
    5. '[' → logprob: -12.87571907043457
    6. ']' → logprob: -13.00071907043457
    7. '                   ' → logprob: -13.12571907043457
    8. '           ' → logprob: -13.37571907043457
    9. '.append' → logprob: -13.62571907043457
    10. '       ' → logprob: -13.75071907043457

Token 546: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.2664456789934775e-06
    2. '.append' → logprob: -13.750000953674316
    3. ' append' → logprob: -16.500001907348633
    4. '_append' → logprob: -20.625001907348633
    5. '	append' → logprob: -20.750001907348633
    6. 'Append' → logprob: -20.750001907348633
    7. 'app' → logprob: -21.250001907348633
    8. 'appen' → logprob: -22.000001907348633
    9. 'insert' → logprob: -22.125001907348633
    10. '```' → logprob: -22.625001907348633

Token 547: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -4.179569077678025e-05
    2. '(' → logprob: -10.250041961669922
    3. 'b' → logprob: -12.625041961669922
    4. ' (' → logprob: -12.750041961669922
    5. ' b' → logprob: -15.750041961669922
    6. '(B' → logprob: -17.625041961669922
    7. '(
' → logprob: -19.000041961669922
    8. '	b' → logprob: -19.250041961669922
    9. '(book' → logprob: -19.625041961669922
    10. '(d' → logprob: -19.875041961669922

Token 548: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.019204847514629364
    2. ')' → logprob: -4.019204616546631
    3. '                       ' → logprob: -6.894204616546631
    4. ')
' → logprob: -10.394205093383789
    5. '                           ' → logprob: -12.019205093383789
    6. ' )
' → logprob: -14.144205093383789
    7. '                   ' → logprob: -14.394205093383789
    8. '')
' → logprob: -14.769205093383789
    9. ')b' → logprob: -14.769205093383789
    10. ')

' → logprob: -14.894205093383789

Token 549: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.005215263459831476
    2. '<|end|>' → logprob: -6.380215167999268
    3. '                        
' → logprob: -6.630215167999268
    4. ')' → logprob: -7.380215167999268
    5. '                           ' → logprob: -7.380215167999268
    6. '               ' → logprob: -8.005215644836426
    7. '
' → logprob: -8.630215644836426
    8. '                        ' → logprob: -9.005215644836426
    9. '                   ' → logprob: -9.755215644836426
    10. '                               ' → logprob: -9.880215644836426

Token 550: ' book' (ID: 2392)
  Prédit: 'book'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'book' (adapté à ' book') → logprob: -0.16024717688560486
    2. ' book' → logprob: -1.9102472066879272
    3. '               ' → logprob: -11.910246849060059
    4. '                       ' → logprob: -12.660246849060059
    5. '                   ' → logprob: -13.035246849060059
    6. '                           ' → logprob: -13.160246849060059
    7. '```' → logprob: -13.160246849060059
    8. '                               ' → logprob: -13.285246849060059
    9. '	book' → logprob: -13.910246849060059
    10. 'cost' → logprob: -14.035246849060059

Token 551: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -3.128163257315464e-07
    2. 'pos' → logprob: -15.875
    3. '_' → logprob: -16.375
    4. '_positions' → logprob: -16.625
    5. '_p' → logprob: -18.375
    6. 'Pos' → logprob: -19.125
    7. ' _' → logprob: -19.25
    8. '_POS' → logprob: -19.25
    9. '_position' → logprob: -19.375
    10. '```' → logprob: -19.5

Token 552: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -1.6240566083070007e-06
    2. '[' → logprob: -14.000001907348633
    3. 'b' → logprob: -15.000001907348633
    4. '```' → logprob: -15.000001907348633
    5. ' [' → logprob: -17.125001907348633
    6. '	b' → logprob: -17.750001907348633
    7. '\[' → logprob: -19.125001907348633
    8. '[B' → logprob: -19.250001907348633
    9. '.setdefault' → logprob: -19.500001907348633
    10. '=b' → logprob: -19.875001907348633

Token 553: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.42569443583488464
    2. ']' → logprob: -1.175694465637207
    3. ' =' → logprob: -3.550694465637207
    4. ']=' → logprob: -4.675694465637207
    5. ' ]' → logprob: -11.175694465637207
    6. '[b' → logprob: -11.425694465637207
    7. '=b' → logprob: -11.550694465637207
    8. ')' → logprob: -11.800694465637207
    9. '[' → logprob: -12.300694465637207
    10. '=d' → logprob: -12.550694465637207

Token 554: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004082793369889259
    2. ' =' → logprob: -5.504082679748535
    3. '=d' → logprob: -12.504082679748535
    4. '[d' → logprob: -15.004082679748535
    5. '=b' → logprob: -15.754082679748535
    6. '[' → logprob: -15.879082679748535
    7. '=
' → logprob: -16.87908363342285
    8. '[b' → logprob: -17.25408363342285
    9. '=

' → logprob: -17.87908363342285
    10. ']=' → logprob: -18.00408363342285

Token 555: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00861456897109747
    2. ' d' → logprob: -4.758614540100098
    3. '	d' → logprob: -16.883615493774414
    4. '[d' → logprob: -19.383615493774414
    5. '                   ' → logprob: -20.133615493774414
    6. '$d' → logprob: -20.383615493774414
    7. ')d' → logprob: -20.758615493774414
    8. '                       ' → logprob: -20.883615493774414
    9. '_d' → logprob: -21.133615493774414
    10. '   ' → logprob: -21.258615493774414

Token 556: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.029710913076996803
    2. '<|end|>' → logprob: -4.15471076965332
    3. '                        
' → logprob: -4.52971076965332
    4. '
' → logprob: -6.52971076965332
    5. '               ' → logprob: -8.27971076965332
    6. '                        ' → logprob: -8.40471076965332
    7. ')' → logprob: -8.52971076965332
    8. '                           ' → logprob: -8.77971076965332
    9. ',' → logprob: -9.15471076965332
    10. '<|end|>' → logprob: -9.52971076965332

Token 557: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.20912867784500122
    2. '
' → logprob: -1.7091286182403564
    3. '                        
' → logprob: -5.0841288566589355
    4. '<|end|>' → logprob: -7.5841288566589355
    5. '                   ' → logprob: -8.584128379821777
    6. '               ' → logprob: -8.709128379821777
    7. '                               ' → logprob: -9.084128379821777
    8. '  
' → logprob: -9.584128379821777
    9. '```' → logprob: -9.584128379821777
    10. '
' → logprob: -9.709128379821777

Token 558: ' cost' (ID: 3097)
  Prédit: 'placed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'placed' → logprob: -0.7729908227920532
    2. ' placed' → logprob: -1.0229908227920532
    3. '                       ' → logprob: -2.3979907035827637
    4. ' cost' → logprob: -3.2729907035827637
    5. 'cost' (adapté à ' cost') → logprob: -3.3979907035827637
    6. '               ' → logprob: -5.272990703582764
    7. '                        
' → logprob: -5.522990703582764
    8. '
' → logprob: -5.772990703582764
    9. '                   ' → logprob: -6.522990703582764
    10. 'break' → logprob: -6.772990703582764

Token 559: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.048608023673295975
    2. '+=' → logprob: -3.0486080646514893
    3. ']+=' → logprob: -11.54860782623291
    4. '+' → logprob: -11.67360782623291
    5. ' +' → logprob: -14.04860782623291
    6. '+='' → logprob: -14.29860782623291
    7. '```' → logprob: -15.29860782623291
    8. '+="' → logprob: -15.67360782623291
    9. ')' → logprob: -15.92360782623291
    10. '<|end|>' → logprob: -16.173608779907227

Token 560: ' d' (ID: 272)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.029784047976136208
    2. 'd' → logprob: -4.029784202575684
    3. ' ' → logprob: -5.029784202575684
    4. ' d' → logprob: -5.404784202575684
    5. 'len' → logprob: -8.904784202575684
    6. '(d' → logprob: -9.029784202575684
    7. '2' → logprob: -9.279784202575684
    8. ' len' → logprob: -9.404784202575684
    9. '   ' → logprob: -9.779784202575684
    10. ' (' → logprob: -11.279784202575684

Token 561: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4743697941303253
    2. ' +' → logprob: -0.9743697643280029
    3. '<|end|>' → logprob: -8.349370002746582
    4. '+
' → logprob: -10.599370002746582
    5. ' +
' → logprob: -11.349370002746582
    6. '<|end|>' → logprob: -11.974370002746582
    7. '
' → logprob: -12.849370002746582
    8. '1' → logprob: -13.474370002746582
    9. ')' → logprob: -13.724370002746582
    10. ')+' → logprob: -14.099370002746582

Token 562: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00024870390188880265
    2. '2' → logprob: -8.750248908996582
    3. ' ' → logprob: -9.375248908996582
    4. '```' → logprob: -13.000248908996582
    5. '0' → logprob: -14.000248908996582
    6. '   ' → logprob: -14.312748908996582
    7. '``' → logprob: -15.500248908996582
    8. '3' → logprob: -15.625248908996582
    9. '+' → logprob: -16.000247955322266
    10. '=' → logprob: -16.187747955322266

Token 563: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.37998443841934204
    2. '                       ' → logprob: -1.2549843788146973
    3. '<|end|>' → logprob: -3.7549843788146973
    4. '                        
' → logprob: -5.379984378814697
    5. '                           ' → logprob: -7.379984378814697
    6. '\n' → logprob: -7.504984378814697
    7. ')' → logprob: -8.254984855651855
    8. '
' → logprob: -8.379984855651855
    9. '               ' → logprob: -8.629984855651855
    10. '                   ' → logprob: -8.629984855651855

Token 564: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.06015116721391678
    2. '
' → logprob: -3.1851511001586914
    3. '                        
' → logprob: -4.310151100158691
    4. 'newline' → logprob: -7.310151100158691
    5. '<|end|>' → logprob: -7.435151100158691
    6. '               ' → logprob: -7.560151100158691
    7. '```' → logprob: -7.685151100158691
    8. '                   ' → logprob: -7.935151100158691
    9. '                           ' → logprob: -8.685151100158691
    10. '                               ' → logprob: -8.810151100158691

Token 565: ' placed' (ID: 12989)
  Prédit: ' placed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' placed' → logprob: -0.6260188817977905
    2. 'placed' (adapté à ' placed') → logprob: -1.5010188817977905
    3. '                       ' → logprob: -1.7510188817977905
    4. 'break' → logprob: -2.87601900100708
    5. ' break' → logprob: -5.25101900100708
    6. '               ' → logprob: -5.25101900100708
    7. '                        
' → logprob: -7.00101900100708
    8. '
' → logprob: -8.126018524169922
    9. '                   ' → logprob: -8.126018524169922
    10. 'place' → logprob: -9.626018524169922

Token 566: '=True' (ID: 7827)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6944305300712585
    2. ' =' → logprob: -0.6944305300712585
    3. '=True' → logprob: -7.194430351257324
    4. '=False' → logprob: -8.069430351257324
    5. '                       ' → logprob: -9.194430351257324
    6. '                           ' → logprob: -9.569430351257324
    7. '                   ' → logprob: -11.319430351257324
    8. '                               ' → logprob: -11.819430351257324
    9. '               ' → logprob: -12.194430351257324
    10. '<|end|>' → logprob: -12.319430351257324

Token 567: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0009462343878112733
    2. '                   ' → logprob: -8.125946044921875
    3. '               ' → logprob: -8.250946044921875
    4. '
' → logprob: -9.125946044921875
    5. 'break' → logprob: -9.375946044921875
    6. '                        
' → logprob: -9.750946044921875
    7. '					' → logprob: -10.250946044921875
    8. '                           ' → logprob: -10.625946044921875
    9. '           ' → logprob: -11.125946044921875
    10. '                               ' → logprob: -11.750946044921875

Token 568: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0021432433277368546
    2. '					' → logprob: -7.252143383026123
    3. '               ' → logprob: -8.002142906188965
    4. '
' → logprob: -8.002142906188965
    5. '                   ' → logprob: -8.377142906188965
    6. '                        
' → logprob: -9.002142906188965
    7. 'break' → logprob: -9.377142906188965
    8. '                               ' → logprob: -10.002142906188965
    9. '		               ' → logprob: -10.127142906188965
    10. '                           ' → logprob: -10.377142906188965

Token 569: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.24165891110897064
    2. ' break' → logprob: -1.7416589260101318
    3. '                       ' → logprob: -3.366658926010132
    4. '               ' → logprob: -5.866658687591553
    5. '                   ' → logprob: -6.241658687591553
    6. '	break' → logprob: -9.116659164428711
    7. '                               ' → logprob: -11.241659164428711
    8. '           ' → logprob: -12.366659164428711
    9. '                           ' → logprob: -12.366659164428711
    10. '       ' → logprob: -12.741659164428711

Token 570: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06953118741512299
    2. '
' → logprob: -3.069531202316284
    3. '           ' → logprob: -4.194530963897705
    4. '                   ' → logprob: -6.444530963897705
    5. '       ' → logprob: -6.569530963897705
    6. '                
' → logprob: -7.319530963897705
    7. '```' → logprob: -7.319530963897705
    8. '   ' → logprob: -8.694531440734863
    9. 'if' → logprob: -8.819531440734863
    10. '  
' → logprob: -8.944531440734863

Token 571: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03255067020654678
    2. 'if' → logprob: -4.157550811767578
    3. ' if' → logprob: -4.407550811767578
    4. '           ' → logprob: -6.282550811767578
    5. '```' → logprob: -6.657550811767578
    6. '       ' → logprob: -7.532550811767578
    7. '   ' → logprob: -8.657550811767578
    8. '
' → logprob: -9.032550811767578
    9. '                   ' → logprob: -9.157550811767578
    10. 'If' → logprob: -10.907550811767578

Token 572: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.596077024936676
    2. ' if' → logprob: -0.971077024936676
    3. '               ' → logprob: -3.4710769653320312
    4. '       ' → logprob: -4.096076965332031
    5. '
' → logprob: -4.721076965332031
    6. '```' → logprob: -5.096076965332031
    7. '           ' → logprob: -5.596076965332031
    8. 'If' → logprob: -6.096076965332031
    9. '	if' → logprob: -7.471076965332031
    10. '   ' → logprob: -8.096076965332031

Token 573: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.2520858645439148
    2. ' not' → logprob: -1.5020859241485596
    3. 'placed' → logprob: -9.37708568572998
    4. ' placed' → logprob: -10.37708568572998
    5. '(not' → logprob: -11.25208568572998
    6. '   ' → logprob: -11.62708568572998
    7. '	not' → logprob: -12.00208568572998
    8. '!' → logprob: -12.25208568572998
    9. '
' → logprob: -13.12708568572998
    10. '#' → logprob: -13.25208568572998

Token 574: ' placed' (ID: 12989)
  Prédit: ' placed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' placed' → logprob: -0.3868737816810608
    2. 'placed' → logprob: -1.136873722076416
    3. 'Placed' → logprob: -14.261874198913574
    4. ' ' → logprob: -14.886874198913574
    5. ' ' → logprob: -14.886874198913574
    6. '   ' → logprob: -15.261874198913574
    7. 's' → logprob: -15.636874198913574
    8. '_' → logprob: -15.761874198913574
    9. 'place' → logprob: -15.886874198913574
    10. 'plac' → logprob: -16.386873245239258

Token 575: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.127041295170784
    2. ':' → logprob: -2.1270413398742676
    3. '                   ' → logprob: -9.50204086303711
    4. ':
' → logprob: -11.62704086303711
    5. '               ' → logprob: -11.62704086303711
    6. ':

' → logprob: -11.75204086303711
    7. '):
' → logprob: -12.50204086303711
    8. '                       ' → logprob: -13.25204086303711
    9. 's' → logprob: -13.62704086303711
    10. '           ' → logprob: -14.12704086303711

Token 576: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.020390404388308525
    2. '               ' → logprob: -4.145390510559082
    3. 's' → logprob: -6.020390510559082
    4. '
' → logprob: -7.270390510559082
    5. '#' → logprob: -7.770390510559082
    6. '           ' → logprob: -8.645390510559082
    7. '   ' → logprob: -8.645390510559082
    8. ' shelf' → logprob: -9.520390510559082
    9. ':
' → logprob: -9.895390510559082
    10. 'cost' → logprob: -9.895390510559082

Token 577: ' #' (ID: 1069)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.025636941194534302
    2. ' shelf' → logprob: -4.025637149810791
    3. 'cost' → logprob: -5.150637149810791
    4. '                   ' → logprob: -6.900637149810791
    5. '               ' → logprob: -8.150636672973633
    6. 'book' → logprob: -9.025636672973633
    7. '   ' → logprob: -9.650636672973633
    8. '                       ' → logprob: -10.025636672973633
    9. ' cost' → logprob: -10.275636672973633
    10. 'des' → logprob: -10.525636672973633

Token 578: ' put' (ID: 3006)
  Prédit: ' shelf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' shelf' → logprob: -0.5785975456237793
    2. 's' → logprob: -0.9535975456237793
    3. 'cost' → logprob: -3.3285975456237793
    4. ' cost' → logprob: -4.203597545623779
    5. '               ' → logprob: -6.953597545623779
    6. '   ' → logprob: -7.078597545623779
    7. '                   ' → logprob: -7.578597545623779
    8. '           ' → logprob: -8.328598022460938
    9. ' shel' → logprob: -8.703598022460938
    10. '#' → logprob: -9.203598022460938

Token 579: ' on' (ID: 402)
  Prédit: ' book'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' book' → logprob: -0.1934002786874771
    2. 'book' → logprob: -2.3184003829956055
    3. 'b' → logprob: -3.1934003829956055
    4. 's' → logprob: -4.0684003829956055
    5. ' shelf' → logprob: -4.6934003829956055
    6. ' b' → logprob: -6.0684003829956055
    7. '(book' → logprob: -6.1934003829956055
    8. '(b' → logprob: -6.3184003829956055
    9. ' the' → logprob: -6.3184003829956055
    10. 'the' → logprob: -7.0684003829956055

Token 580: ' shelf' (ID: 40978)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.69316166639328
    2. ' shelf' → logprob: -0.69316166639328
    3. '=s' → logprob: -13.068161964416504
    4. '   ' → logprob: -13.193161964416504
    5. '                   ' → logprob: -13.193161964416504
    6. '`s' → logprob: -13.568161964416504
    7. 'm' → logprob: -13.818161964416504
    8. 'Shelf' → logprob: -13.818161964416504
    9. ')s' → logprob: -14.068161964416504
    10. ' shel' → logprob: -14.193161964416504

Token 581: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3335449993610382
    2. 's' → logprob: -1.7085449695587158
    3. '               ' → logprob: -2.333544969558716
    4. '           ' → logprob: -6.083545207977295
    5. '   ' → logprob: -6.458545207977295
    6. '       ' → logprob: -7.708545207977295
    7. ',s' → logprob: -8.208544731140137
    8. '                       ' → logprob: -8.458544731140137
    9. ' shelf' → logprob: -8.958544731140137
    10. '
' → logprob: -9.208544731140137

Token 582: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.04899687319993973
    2. '
' → logprob: -4.423996925354004
    3. 's' → logprob: -4.548996925354004
    4. '               ' → logprob: -4.673996925354004
    5. '   ' → logprob: -5.548996925354004
    6. '           ' → logprob: -5.923996925354004
    7. 'cost' → logprob: -6.173996925354004
    8. '```' → logprob: -6.298996925354004
    9. ' shelf' → logprob: -6.798996925354004
    10. ' cost' → logprob: -7.173996925354004

Token 583: ' shelf' (ID: 40978)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.16871796548366547
    2. 'cost' → logprob: -2.168717861175537
    3. '                   ' → logprob: -4.043717861175537
    4. ' shelf' → logprob: -4.543717861175537
    5. '               ' → logprob: -5.418717861175537
    6. ' cost' → logprob: -5.668717861175537
    7. 'book' → logprob: -5.918717861175537
    8. '   ' → logprob: -6.918717861175537
    9. '                       ' → logprob: -7.543717861175537
    10. '           ' → logprob: -8.793718338012695

Token 584: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.00043341092532500625
    2. '.' → logprob: -7.750433444976807
    3. ' .' → logprob: -13.000432968139648
    4. '.append' → logprob: -15.500432968139648
    5. 'add' → logprob: -16.12543296813965
    6. '.remove' → logprob: -16.75043296813965
    7. '           ' → logprob: -16.87543296813965
    8. '   ' → logprob: -17.25043296813965
    9. '       ' → logprob: -18.12543296813965
    10. '                   ' → logprob: -18.25043296813965

Token 585: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -1.981667537620524e-06
    2. '(' → logprob: -13.375001907348633
    3. 'b' → logprob: -14.875001907348633
    4. ' (' → logprob: -17.875001907348633
    5. '	b' → logprob: -20.375001907348633
    6. ' b' → logprob: -20.500001907348633
    7. '(
' → logprob: -20.750001907348633
    8. '(B' → logprob: -21.125001907348633
    9. ')b' → logprob: -22.250001907348633
    10. '((' → logprob: -22.375001907348633

Token 586: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.0031207946594804525
    2. ')' → logprob: -6.0031208992004395
    3. ')
' → logprob: -7.5031208992004395
    4. '                   ' → logprob: -10.128120422363281
    5. 'b' → logprob: -10.878120422363281
    6. ')b' → logprob: -10.878120422363281
    7. '               ' → logprob: -12.128120422363281
    8. ' )
' → logprob: -12.378120422363281
    9. '           ' → logprob: -13.128120422363281
    10. ')

' → logprob: -13.378120422363281

Token 587: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.13967746496200562
    2. '
' → logprob: -2.2646775245666504
    3. '               ' → logprob: -4.63967752456665
    4. '           ' → logprob: -5.01467752456665
    5. 'cost' → logprob: -5.51467752456665
    6. ' cost' → logprob: -5.63967752456665
    7. 'book' → logprob: -6.76467752456665
    8. '                    
' → logprob: -8.264677047729492
    9. '```' → logprob: -8.264677047729492
    10. '   ' → logprob: -8.264677047729492

Token 588: ' book' (ID: 2392)
  Prédit: 'book'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'book' (adapté à ' book') → logprob: -0.03683784231543541
    2. 'cost' → logprob: -3.4118378162384033
    3. ' book' → logprob: -6.161838054656982
    4. ' cost' → logprob: -7.411838054656982
    5. '           ' → logprob: -8.411837577819824
    6. '               ' → logprob: -9.161837577819824
    7. '                   ' → logprob: -9.536837577819824
    8. '   ' → logprob: -10.161837577819824
    9. '       ' → logprob: -11.411837577819824
    10. '
' → logprob: -11.786837577819824

Token 589: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -2.165027217415627e-05
    2. 'pos' → logprob: -10.750021934509277
    3. 'Pos' → logprob: -15.875021934509277
    4. '_p' → logprob: -17.75002098083496
    5. '_' → logprob: -17.75002098083496
    6. '	pos' → logprob: -18.62502098083496
    7. '_POS' → logprob: -18.75002098083496
    8. '```' → logprob: -18.75002098083496
    9. '_positions' → logprob: -19.25002098083496
    10. '[pos' → logprob: -19.25002098083496

Token 590: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -1.5048530030981055e-06
    2. 'b' → logprob: -13.500001907348633
    3. '[' → logprob: -16.125001907348633
    4. '```' → logprob: -17.875001907348633
    5. '	b' → logprob: -20.000001907348633
    6. ' [' → logprob: -20.375001907348633
    7. '\[' → logprob: -20.500001907348633
    8. '=b' → logprob: -21.125001907348633
    9. '[B' → logprob: -21.250001907348633
    10. '[c' → logprob: -21.625001907348633

Token 591: ']' (ID: 60)
  Prédit: '[b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -4.961759259458631e-06
    2. ']' → logprob: -13.625004768371582
    3. '=b' → logprob: -13.625004768371582
    4. '[' → logprob: -13.875004768371582
    5. '=' → logprob: -14.375004768371582
    6. 'b' → logprob: -14.500004768371582
    7. ']=' → logprob: -15.375004768371582
    8. ' =' → logprob: -16.1250057220459
    9. '[B' → logprob: -17.3750057220459
    10. '```' → logprob: -17.3750057220459

Token 592: ' =' (ID: 314)
  Prédit: '[b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.12210319936275482
    2. '=' → logprob: -2.247103214263916
    3. ' =' → logprob: -4.997103214263916
    4. '=b' → logprob: -6.247103214263916
    5. 'b' → logprob: -7.872103214263916
    6. '[' → logprob: -8.872102737426758
    7. ']' → logprob: -11.872102737426758
    8. '```' → logprob: -11.997102737426758
    9. '[m' → logprob: -12.747102737426758
    10. '   ' → logprob: -13.622102737426758

Token 593: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.00317783304490149
    2. ' m' → logprob: -5.753177642822266
    3. '   ' → logprob: -16.878177642822266
    4. '	m' → logprob: -17.753177642822266
    5. ' ' → logprob: -18.253177642822266
    6. '    ' → logprob: -19.628177642822266
    7. '           ' → logprob: -20.003177642822266
    8. '[m' → logprob: -20.253177642822266
    9. '```' → logprob: -20.378177642822266
    10. '  ' → logprob: -20.503177642822266

Token 594: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6534636616706848
    2. '                   ' → logprob: -0.7784636616706848
    3. '               ' → logprob: -4.528463840484619
    4. '           ' → logprob: -5.153463840484619
    5. ')' → logprob: -7.278463840484619
    6. ')
' → logprob: -7.403463840484619
    7. ' 
' → logprob: -7.903463840484619
    8. '   ' → logprob: -8.278463363647461
    9. '
' → logprob: -8.278463363647461
    10. '<|end|>' → logprob: -8.278463363647461

Token 595: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.07941702008247375
    2. '
' → logprob: -2.9544169902801514
    3. '               ' → logprob: -4.4544172286987305
    4. '           ' → logprob: -4.5794172286987305
    5. '                    
' → logprob: -7.5794172286987305
    6. '```' → logprob: -7.8294172286987305
    7. ' cost' → logprob: -8.20441722869873
    8. '                       ' → logprob: -8.70441722869873
    9. '       ' → logprob: -8.95441722869873
    10. 'cost' → logprob: -9.07941722869873

Token 596: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' (adapté à ' cost') → logprob: -0.08896869421005249
    2. ' cost' → logprob: -2.4639687538146973
    3. '1' → logprob: -10.713968276977539
    4. '0' → logprob: -12.588968276977539
    5. 'continue' → logprob: -14.588968276977539
    6. '```' → logprob: -14.838968276977539
    7. ' ' → logprob: -15.088968276977539
    8. '(cost' → logprob: -15.088968276977539
    9. '+' → logprob: -15.213968276977539
    10. '                   ' → logprob: -15.213968276977539

Token 597: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.16024352610111237
    2. ' +=' → logprob: -1.9102435111999512
    3. '+' → logprob: -11.41024398803711
    4. ']+=' → logprob: -11.78524398803711
    5. '```' → logprob: -15.78524398803711
    6. '=' → logprob: -16.03524398803711
    7. '   ' → logprob: -16.16024398803711
    8. '+=(' → logprob: -16.16024398803711
    9. '+='' → logprob: -16.53524398803711
    10. ')' → logprob: -16.91024398803711

Token 598: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0023732734844088554
    2. '1' → logprob: -6.627373218536377
    3. ' m' → logprob: -6.877373218536377
    4. '0' → logprob: -12.002373695373535
    5. '(m' → logprob: -12.127373695373535
    6. '   ' → logprob: -13.127373695373535
    7. ' ' → logprob: -13.502373695373535
    8. '$m' → logprob: -15.877373695373535
    9. '	m' → logprob: -16.00237274169922
    10. ' (' → logprob: -16.25237274169922

Token 599: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0019288709154352546
    2. ' +' → logprob: -6.251928806304932
    3. '+
' → logprob: -16.001928329467773
    4. '()+' → logprob: -17.126928329467773
    5. '1' → logprob: -17.251928329467773
    6. '＋' → logprob: -17.751928329467773
    7. '
' → logprob: -18.501928329467773
    8. '```' → logprob: -18.501928329467773
    9. ')+' → logprob: -19.001928329467773
    10. ' +
' → logprob: -19.376928329467773

Token 600: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.875000953674316
    3. '2' → logprob: -16.625001907348633
    4. '0' → logprob: -17.375001907348633
    5. '```' → logprob: -17.500001907348633
    6. '   ' → logprob: -17.875001907348633
    7. '+' → logprob: -19.125001907348633
    8. '=' → logprob: -19.312501907348633
    9. '
' → logprob: -19.562501907348633
    10. '`' → logprob: -20.375001907348633

Token 601: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.002510974183678627
    2. '           ' → logprob: -6.252511024475098
    3. '
' → logprob: -8.252511024475098
    4. '\n' → logprob: -8.502511024475098
    5. '<|end|>' → logprob: -9.877511024475098
    6. '               ' → logprob: -11.377511024475098
    7. '            
' → logprob: -11.627511024475098
    8. '

' → logprob: -11.752511024475098
    9. '    
' → logprob: -12.002511024475098
    10. '  
' → logprob: -12.252511024475098

Token 602: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07264374941587448
    2. '
' → logprob: -2.822643756866455
    3. '               ' → logprob: -4.822643756866455
    4. 'continue' → logprob: -7.197643756866455
    5. '                   ' → logprob: -7.447643756866455
    6. ' continue' → logprob: -8.197643280029297
    7. '<|end|>' → logprob: -8.197643280029297
    8. 'else' → logprob: -9.072643280029297
    9. '```' → logprob: -9.197643280029297
    10. '       ' → logprob: -9.197643280029297

Token 603: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1265038102865219
    2. '               ' → logprob: -2.5015037059783936
    3. 'continue' → logprob: -4.251503944396973
    4. '
' → logprob: -4.501503944396973
    5. '#' (adapté à ' #') → logprob: -4.876503944396973
    6. 'else' → logprob: -6.751503944396973
    7. 'if' → logprob: -7.126503944396973
    8. ' continue' → logprob: -7.376503944396973
    9. '            
' → logprob: -7.876503944396973
    10. '       ' → logprob: -8.501503944396973

Token 604: ' find' (ID: 1646)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3037453293800354
    2. 'if' → logprob: -1.4287452697753906
    3. '           ' → logprob: -4.803745269775391
    4. '               ' → logprob: -5.428745269775391
    5. 'pos' → logprob: -5.803745269775391
    6. 'idx' → logprob: -6.178745269775391
    7. 'd' → logprob: -6.553745269775391
    8. '       ' → logprob: -7.053745269775391
    9. '   ' → logprob: -7.928745269775391
    10. 'else' → logprob: -8.05374526977539

Token 605: ' L' (ID: 451)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.14275483787059784
    2. ' least' → logprob: -2.7677547931671143
    3. ' the' → logprob: -3.7677547931671143
    4. 'l' → logprob: -4.267755031585693
    5. ' idx' → logprob: -5.267755031585693
    6. 'least' → logprob: -5.517755031585693
    7. '#' → logprob: -5.642755031585693
    8. 'idx' → logprob: -5.767755031585693
    9. 'the' → logprob: -6.267755031585693
    10. ' b' → logprob: -6.392755031585693

Token 606: 'RU' (ID: 63252)
  Prédit: 'ru'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -0.02821970358490944
    2. 'RU' → logprob: -4.028219699859619
    3. '#' → logprob: -4.903219699859619
    4. 'r' → logprob: -6.903219699859619
    5. '```' → logprob: -8.153220176696777
    6. 'ruk' → logprob: -8.403220176696777
    7. 'e' → logprob: -8.653220176696777
    8. '   ' → logprob: -8.778220176696777
    9. 'ast' → logprob: -9.278220176696777
    10. 'l' → logprob: -9.653220176696777

Token 607: ' book' (ID: 2392)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09082118421792984
    2. '                
' → logprob: -3.3408212661743164
    3. ' =' → logprob: -4.340821266174316
    4. '
' → logprob: -4.340821266174316
    5. ' if' → logprob: -5.340821266174316
    6. ' 
' → logprob: -6.215821266174316
    7. '           ' → logprob: -6.215821266174316
    8. '            
' → logprob: -6.215821266174316
    9. ' for' → logprob: -7.090821266174316
    10. '[' → logprob: -7.090821266174316

Token 608: ' on' (ID: 402)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.0620402097702026
    2. ' =' → logprob: -1.3120402097702026
    3. ' in' → logprob: -2.437040328979492
    4. ' l' → logprob: -2.687040328979492
    5. '<|end|>' → logprob: -2.687040328979492
    6. '           ' → logprob: -2.937040328979492
    7. '       ' → logprob: -3.562040328979492
    8. ',' → logprob: -4.312040328979492
    9. '<|end|>' → logprob: -4.812040328979492
    10. '=' → logprob: -5.062040328979492

Token 609: ' D' (ID: 415)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0698385015130043
    2. ' d' → logprob: -3.069838523864746
    3. 'D' → logprob: -4.069838523864746
    4. 'des' → logprob: -6.194838523864746
    5. '```' → logprob: -7.569838523864746
    6. '0' → logprob: -7.569838523864746
    7. ' D' → logprob: -7.694838523864746
    8. '[' → logprob: -9.069838523864746
    9. ' desks' → logprob: -9.694838523864746
    10. '_d' → logprob: -10.194838523864746

Token 610: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1279553291387856e-05
    2. '[' → logprob: -11.750011444091797
    3. ' ' → logprob: -13.500011444091797
    4. '_' → logprob: -14.500011444091797
    5. '(' → logprob: -14.875011444091797
    6. '```' → logprob: -15.125011444091797
    7. ']' → logprob: -16.125011444091797
    8. 'es' → logprob: -16.375011444091797
    9. '0' → logprob: -16.437511444091797
    10. '１' → logprob: -16.687511444091797

Token 611: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.237524151802063
    2. '       ' → logprob: -2.2375240325927734
    3. '[' → logprob: -2.8625240325927734
    4. '```' → logprob: -2.8625240325927734
    5. ' =' → logprob: -2.9875240325927734
    6. '               ' → logprob: -2.9875240325927734
    7. 'd' → logprob: -2.9875240325927734
    8. ' #' → logprob: -3.8625240325927734
    9. '        
' → logprob: -3.8625240325927734
    10. '  
' → logprob: -3.8625240325927734

Token 612: '               ' (ID: 506)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -1.34559166431427
    2. ' =' → logprob: -1.47059166431427
    3. '       ' → logprob: -1.59559166431427
    4. '[' → logprob: -2.7205915451049805
    5. '\t' → logprob: -3.3455915451049805
    6. 'd' → logprob: -3.7205915451049805
    7. '	l' → logprob: -3.9705915451049805
    8. '```' → logprob: -4.0955915451049805
    9. '   ' → logprob: -4.2205915451049805
    10. 'token' → logprob: -4.5955915451049805

Token 613: ' #' (ID: 1069)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6363096833229065
    2. ' l' → logprob: -0.7613096833229065
    3. 'old' → logprob: -6.136309623718262
    4. 'lr' → logprob: -7.636309623718262
    5. ' old' → logprob: -7.761309623718262
    6. 'LR' → logprob: -9.011309623718262
    7. ' lr' → logprob: -9.511309623718262
    8. '```' → logprob: -9.511309623718262
    9. '           ' → logprob: -9.886309623718262
    10. ' L' → logprob: -10.011309623718262

Token 614: ' d' (ID: 272)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.10132823139429092
    2. ' l' → logprob: -2.351328134536743
    3. 'lr' → logprob: -7.226328372955322
    4. 'old' → logprob: -9.226327896118164
    5. 'LR' → logprob: -9.226327896118164
    6. 'if' → logprob: -10.351327896118164
    7. '```' → logprob: -10.726327896118164
    8. 'ev' → logprob: -10.851327896118164
    9. ' if' → logprob: -11.101327896118164
    10. 'to' → logprob: -11.101327896118164

Token 615: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0043323040008545
    2. 'r' → logprob: -1.1293323040008545
    3. 'ru' → logprob: -1.5043323040008545
    4. 'if' → logprob: -3.6293323040008545
    5. '       ' → logprob: -3.7543323040008545
    6. '   ' → logprob: -4.129332542419434
    7. '#' → logprob: -5.254332542419434
    8. 'for' → logprob: -5.629332542419434
    9. 'f' → logprob: -6.004332542419434
    10. 'l' → logprob: -6.254332542419434

Token 616: '_lst' (ID: 72474)
  Prédit: '_lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lst' → logprob: -0.1272595226764679
    2. '_book' → logprob: -2.8772594928741455
    3. '_l' → logprob: -3.2522594928741455
    4. '_books' → logprob: -4.502259731292725
    5. '_idx' → logprob: -5.627259731292725
    6. 'book' → logprob: -6.002259731292725
    7. '_L' → logprob: -6.252259731292725
    8. '_r' → logprob: -7.127259731292725
    9. '_list' → logprob: -7.127259731292725
    10. '1' → logprob: -7.252259731292725

Token 617: ' stores' (ID: 14604)
  Prédit: '.pop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.004636961035430431
    2. '.remove' → logprob: -6.004636764526367
    3. '[' → logprob: -7.004636764526367
    4. 'pop' → logprob: -7.004636764526367
    5. ' =' → logprob: -9.129636764526367
    6. '.sort' → logprob: -9.379636764526367
    7. '_pop' → logprob: -10.129636764526367
    8. '0' → logprob: -10.504636764526367
    9. '.' → logprob: -10.879636764526367
    10. '=' → logprob: -11.254636764526367

Token 618: ' usage' (ID: 16622)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.14320193231105804
    2. 'books' → logprob: -3.2682018280029297
    3. 'the' → logprob: -3.3932018280029297
    4. '[' → logprob: -3.6432018280029297
    5. ' the' → logprob: -4.01820182800293
    6. ' d' → logprob: -4.64320182800293
    7. ' books' → logprob: -6.01820182800293
    8. '[]' → logprob: -6.64320182800293
    9. '[d' → logprob: -7.51820182800293
    10. 'b' → logprob: -8.26820182800293

Token 619: ' order' (ID: 2569)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1238312721252441
    2. '[-' → logprob: -1.1238312721252441
    3. 'order' → logprob: -1.4988312721252441
    4. ' order' → logprob: -2.373831272125244
    5. '   ' → logprob: -5.248831272125244
    6. '_order' → logprob: -5.873831272125244
    7. '.append' → logprob: -5.873831272125244
    8. ' =' → logprob: -6.373831272125244
    9. '       ' → logprob: -6.373831272125244
    10. '[:]' → logprob: -6.373831272125244

Token 620: ',' (ID: 11)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.518561601638794
    2. '[' → logprob: -1.393561601638794
    3. '[:-' → logprob: -2.018561601638794
    4. '[
' → logprob: -4.893561363220215
    5. ' =' → logprob: -5.393561363220215
    6. '[:]' → logprob: -5.893561363220215
    7. '[::-' → logprob: -6.393561363220215
    8. '           ' → logprob: -6.893561363220215
    9. ',' → logprob: -7.018561363220215
    10. '[:' → logprob: -7.268561363220215

Token 621: ' first' (ID: 1577)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.44606655836105347
    2. ' l' → logprob: -1.1960666179656982
    3. '0' → logprob: -3.8210666179656982
    4. '#' → logprob: -4.071066379547119
    5. 'old' → logprob: -4.946066379547119
    6. 'd' → logprob: -6.196066379547119
    7. ' oldest' → logprob: -6.446066379547119
    8. ' #' → logprob: -6.571066379547119
    9. 'least' → logprob: -6.571066379547119
    10. ' least' → logprob: -6.821066379547119

Token 622: ' is' (ID: 382)
  Prédit: ' element'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' element' → logprob: -0.684313178062439
    2. ' =' → logprob: -1.934313178062439
    3. 'element' → logprob: -1.934313178062439
    4. ' item' → logprob: -3.4343132972717285
    5. ' is' → logprob: -3.4343132972717285
    6. '[' → logprob: -3.5593132972717285
    7. 'index' → logprob: -3.6843132972717285
    8. '=' → logprob: -4.0593132972717285
    9. ' index' → logprob: -4.1843132972717285
    10. 'item' → logprob: -4.3093132972717285

Token 623: ' L' (ID: 451)
  Prédit: 'least'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'least' → logprob: -0.2380615472793579
    2. ' least' → logprob: -2.4880614280700684
    3. 'the' → logprob: -2.6130614280700684
    4. 'LR' → logprob: -3.6130614280700684
    5. 'old' → logprob: -3.7380614280700684
    6. 'd' → logprob: -6.113061428070068
    7. 'Least' → logprob: -6.738061428070068
    8. 'l' → logprob: -7.613061428070068
    9. ' the' → logprob: -7.738061428070068
    10. '```' → logprob: -8.988061904907227

Token 624: 'RU' (ID: 63252)
  Prédit: 'RU'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'RU' → logprob: -0.06299080699682236
    2. 'R' → logprob: -2.81299090385437
    3. 'ru' → logprob: -6.937990665435791
    4. 'r' → logprob: -11.06299114227295
    5. ' R' → logprob: -11.81299114227295
    6. '#' → logprob: -12.31299114227295
    7. '```' → logprob: -12.31299114227295
    8. 'Ru' → logprob: -12.68799114227295
    9. 'ruk' → logprob: -12.68799114227295
    10. ' RU' → logprob: -12.93799114227295

Token 625: '
' (ID: 198)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5512586832046509
    2. '[' → logprob: -1.6762586832046509
    3. 'l' → logprob: -2.9262585639953613
    4. ' =' → logprob: -2.9262585639953613
    5. ',' → logprob: -3.1762585639953613
    6. 'old' → logprob: -4.426258563995361
    7. 'if' → logprob: -4.676258563995361
    8. '.pop' → logprob: -5.176258563995361
    9. '   ' → logprob: -5.426258563995361
    10. ',l' → logprob: -5.551258563995361

Token 626: '               ' (ID: 506)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.34948256611824036
    2. 'l' → logprob: -1.349482536315918
    3. '       ' → logprob: -4.474482536315918
    4. 'old' → logprob: -4.974482536315918
    5. '	l' → logprob: -5.224482536315918
    6. 'd' → logprob: -6.224482536315918
    7. '
' → logprob: -6.349482536315918
    8. '               ' → logprob: -6.349482536315918
    9. '           ' → logprob: -6.724482536315918
    10. ' old' → logprob: -6.849482536315918

Token 627: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -0.11640121042728424
    2. ' l' → logprob: -2.241401195526123
    3. 'old' → logprob: -6.366401195526123
    4. 'lr' → logprob: -7.116401195526123
    5. ' old' → logprob: -7.616401195526123
    6. 'ev' → logprob: -8.866401672363281
    7. 'LR' → logprob: -9.241401672363281
    8. ' ev' → logprob: -9.491401672363281
    9. 'to' → logprob: -9.991401672363281
    10. 'r' → logprob: -10.491401672363281

Token 628: 'ru' (ID: 1942)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.03814614936709404
    2. 'ru' → logprob: -3.2881462574005127
    3. 'RU' → logprob: -10.788146018981934
    4. '   ' → logprob: -10.788146018981934
    5. 'ruk' → logprob: -10.913146018981934
    6. 'l' → logprob: -11.163146018981934
    7. 'ruh' → logprob: -12.413146018981934
    8. '	r' → logprob: -12.538146018981934
    9. '```' → logprob: -12.788146018981934
    10. 'rum' → logprob: -12.913146018981934

Token 629: ' =' (ID: 314)
  Prédit: '_book'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_book' → logprob: -0.1497299075126648
    2. ' =' → logprob: -2.0247299671173096
    3. '_b' → logprob: -5.1497297286987305
    4. '=' → logprob: -6.7747297286987305
    5. '=_' → logprob: -10.52472972869873
    6. 'book' → logprob: -11.02472972869873
    7. 'Book' → logprob: -11.14972972869873
    8. '_' → logprob: -12.14972972869873
    9. '_books' → logprob: -12.27472972869873
    10. '   ' → logprob: -12.64972972869873

Token 630: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3132617771625519
    2. ' d' → logprob: -1.3132617473602295
    3. '	d' → logprob: -16.813261032104492
    4. ' ' → logprob: -18.563261032104492
    5. '_d' → logprob: -19.563261032104492
    6. '(d' → logprob: -19.938261032104492
    7. ')d' → logprob: -20.063261032104492
    8. '```' → logprob: -20.063261032104492
    9. ' ' → logprob: -20.438261032104492
    10. '>d' → logprob: -20.438261032104492

Token 631: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013815441634505987
    2. '_lst' → logprob: -6.7513813972473145
    3. 'lst' → logprob: -8.501381874084473
    4. 'st' → logprob: -12.376381874084473
    5. '[' → logprob: -13.626381874084473
    6. '```' → logprob: -14.501381874084473
    7. 's' → logprob: -14.751381874084473
    8. 'x' → logprob: -15.501381874084473
    9. 'ist' → logprob: -15.501381874084473
    10. 'd' → logprob: -15.501381874084473

Token 632: '_lst' (ID: 72474)
  Prédit: '_lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lst' → logprob: -2.45848218582978e-06
    2. 'lst' → logprob: -13.12500286102295
    3. '[' → logprob: -15.50000286102295
    4. '_list' → logprob: -16.250001907348633
    5. '```' → logprob: -17.375001907348633
    6. 'Lst' → logprob: -17.625001907348633
    7. '[_' → logprob: -18.500001907348633
    8. '_lista' → logprob: -18.625001907348633
    9. '[-' → logprob: -19.250001907348633
    10. '_tbl' → logprob: -19.250001907348633

Token 633: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.12703216075897217
    2. '[' → logprob: -2.1270322799682617
    3. 'pop' → logprob: -9.252032279968262
    4. '.' → logprob: -11.877032279968262
    5. '0' → logprob: -14.752032279968262
    6. ' .' → logprob: -14.752032279968262
    7. '   ' → logprob: -15.627032279968262
    8. '```' → logprob: -16.752031326293945
    9. '	pop' → logprob: -16.752031326293945
    10. '_pop' → logprob: -17.377031326293945

Token 634: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004078997299075127
    2. '0' → logprob: -5.5040788650512695
    3. '()' → logprob: -15.00407886505127
    4. '[' → logprob: -16.254079818725586
    5. '(
' → logprob: -16.254079818725586
    6. ' (' → logprob: -17.629079818725586
    7. '```' → logprob: -17.879079818725586
    8. ' ' → logprob: -18.129079818725586
    9. '(-' → logprob: -18.254079818725586
    10. '	' → logprob: -19.129079818725586

Token 635: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. ')' → logprob: -16.75
    4. '(' → logprob: -17.625
    5. '[' → logprob: -19.125
    6. '```' → logprob: -20.125
    7. '۰' → logprob: -20.625
    8. '
' → logprob: -20.625
    9. '<|end|>' → logprob: -20.75
    10. '=' → logprob: -21.5

Token 636: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5760537385940552
    2. ')
' → logprob: -0.8260537385940552
    3. ')
' → logprob: -9.201053619384766
    4. ')

' → logprob: -11.701053619384766
    5. ')b' → logprob: -13.451053619384766
    6. ' )
' → logprob: -14.201053619384766
    7. ' )' → logprob: -14.451053619384766
    8. '           ' → logprob: -14.826053619384766
    9. ')#' → logprob: -14.951053619384766
    10. '               ' → logprob: -14.951053619384766

Token 637: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4045103192329407
    2. 'des' → logprob: -1.654510259628296
    3. '           ' → logprob: -2.154510259628296
    4. ' desks' → logprob: -4.029510498046875
    5. ' des' → logprob: -6.654510498046875
    6. 'd' → logprob: -6.779510498046875
    7. '#' → logprob: -7.154510498046875
    8. '       ' → logprob: -7.279510498046875
    9. '```' → logprob: -7.404510498046875
    10. ' if' → logprob: -7.404510498046875

Token 638: ' #' (ID: 1069)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.09188785403966904
    2. '               ' → logprob: -2.841887950897217
    3. 'book' → logprob: -4.591887950897217
    4. '#' (adapté à ' #') → logprob: -4.841887950897217
    5. '           ' → logprob: -5.091887950897217
    6. 'books' → logprob: -6.591887950897217
    7. ' desks' → logprob: -6.841887950897217
    8. 'if' → logprob: -6.966887950897217
    9. 'd' → logprob: -7.716887950897217
    10. '```' → logprob: -8.216887474060059

Token 639: ' remove' (ID: 6234)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.03706485405564308
    2. 'd' → logprob: -4.037065029144287
    3. '#' → logprob: -4.537065029144287
    4. 'book' → logprob: -5.287065029144287
    5. 'l' → logprob: -6.537065029144287
    6. 'cost' → logprob: -8.037064552307129
    7. 'desk' → logprob: -8.412064552307129
    8. 'if' → logprob: -8.787064552307129
    9. 'remove' → logprob: -8.912064552307129
    10. 'books' → logprob: -8.912064552307129

Token 640: ' L' (ID: 451)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.0013624972198158503
    2. '           ' → logprob: -7.626362323760986
    3. '               ' → logprob: -7.876362323760986
    4. 'books' → logprob: -8.626362800598145
    5. 'book' → logprob: -9.126362800598145
    6. ' desks' → logprob: -9.501362800598145
    7. 'from' → logprob: -10.001362800598145
    8. ' des' → logprob: -10.126362800598145
    9. 'desk' → logprob: -11.376362800598145
    10. 'd' → logprob: -11.751362800598145

Token 641: 'RU' (ID: 63252)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.14070037007331848
    2. 'ru' → logprob: -2.140700340270996
    3. 'RU' → logprob: -5.390700340270996
    4. 'r' → logprob: -6.140700340270996
    5. '1' → logprob: -6.390700340270996
    6. 'rus' → logprob: -6.515700340270996
    7. '   ' → logprob: -6.765700340270996
    8. '```' → logprob: -7.765700340270996
    9. 'R' → logprob: -8.390700340270996
    10. 'ruk' → logprob: -8.515700340270996

Token 642: ' book' (ID: 2392)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.6568973660469055
    2. 'from' → logprob: -0.9068973660469055
    3. ' from' → logprob: -3.0318973064422607
    4. 'book' → logprob: -4.15689754486084
    5. ' des' → logprob: -6.15689754486084
    6. '_book' → logprob: -6.28189754486084
    7. '_des' → logprob: -6.90689754486084
    8. '   ' → logprob: -6.90689754486084
    9. 'books' → logprob: -7.03189754486084
    10. ')' → logprob: -7.03189754486084

Token 643: ' from' (ID: 591)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.19225187599658966
    2. 'des' → logprob: -2.5672519207000732
    3. 'from' → logprob: -2.6922519207000732
    4. ' from' → logprob: -3.9422519207000732
    5. '           ' → logprob: -5.192251682281494
    6. ' =' → logprob: -6.442251682281494
    7. '_des' → logprob: -7.067251682281494
    8. '<|end|>' → logprob: -7.567251682281494
    9. ' des' → logprob: -7.692251682281494
    10. '       ' → logprob: -7.942251682281494

Token 644: ' D' (ID: 415)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.0013641661498695612
    2. ' desks' → logprob: -6.751364231109619
    3. 'd' → logprob: -9.126363754272461
    4. 'desk' → logprob: -9.751363754272461
    5. '0' → logprob: -11.501363754272461
    6. ' des' → logprob: -12.626363754272461
    7. 'books' → logprob: -13.126363754272461
    8. 'ds' → logprob: -13.251363754272461
    9. ' desk' → logprob: -13.251363754272461
    10. '```' → logprob: -13.376363754272461

Token 645: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.18068218231201172
    2. 'es' → logprob: -1.8056821823120117
    3. '[' → logprob: -7.680682182312012
    4. 'des' → logprob: -8.930682182312012
    5. 'esk' → logprob: -8.930682182312012
    6. '0' → logprob: -9.555682182312012
    7. 's' → logprob: -9.680682182312012
    8. 'esc' → logprob: -11.555682182312012
    9. ' ' → logprob: -11.680682182312012
    10. 'e' → logprob: -11.930682182312012

Token 646: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03212086856365204
    2. '           ' → logprob: -3.657120943069458
    3. 'des' → logprob: -5.657120704650879
    4. '<|end|>' → logprob: -7.282120704650879
    5. ' desks' → logprob: -7.532120704650879
    6. '       ' → logprob: -7.657120704650879
    7. ' des' → logprob: -8.282120704650879
    8. '   ' → logprob: -9.407120704650879
    9. ',' → logprob: -9.532120704650879
    10. '                
' → logprob: -10.157120704650879

Token 647: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7164232730865479
    2. 'des' → logprob: -0.8414232730865479
    3. '               ' → logprob: -2.716423273086548
    4. '       ' → logprob: -5.091423034667969
    5. ' desks' → logprob: -5.341423034667969
    6. ' des' → logprob: -5.841423034667969
    7. '```' → logprob: -8.841423034667969
    8. '   ' → logprob: -9.341423034667969
    9. '
' → logprob: -10.591423034667969
    10. '_des' → logprob: -10.716423034667969

Token 648: ' desks' (ID: 109910)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.0020286848302930593
    2. ' desks' → logprob: -6.252028465270996
    3. '           ' → logprob: -10.002028465270996
    4. '       ' → logprob: -11.002028465270996
    5. 'd' → logprob: -11.127028465270996
    6. 'books' → logprob: -11.877028465270996
    7. '               ' → logprob: -11.877028465270996
    8. 'desk' → logprob: -12.502028465270996
    9. ' des' → logprob: -13.002028465270996
    10. '   ' → logprob: -14.002028465270996

Token 649: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2664456789934775e-06
    2. '0' → logprob: -14.375000953674316
    3. ' [' → logprob: -15.125000953674316
    4. '```' → logprob: -15.750000953674316
    5. '   ' → logprob: -16.750001907348633
    6. '\[' → logprob: -17.250001907348633
    7. '][' → logprob: -17.875001907348633
    8. '[
' → logprob: -18.000001907348633
    9. ')[' → logprob: -19.000001907348633
    10. ' ' → logprob: -19.500001907348633

Token 650: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.5716304410016164e-05
    2. '[' → logprob: -10.250035285949707
    3. ' ' → logprob: -15.750035285949707
    4. '```' → logprob: -15.750035285949707
    5. '(' → logprob: -17.500036239624023
    6. '<|end|>' → logprob: -18.250036239624023
    7. '   ' → logprob: -18.750036239624023
    8. '`' → logprob: -18.875036239624023
    9. '=' → logprob: -19.937536239624023
    10. '۰' → logprob: -20.375036239624023

Token 651: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -1.4021237802808173e-05
    2. ']' → logprob: -11.875014305114746
    3. ' ].' → logprob: -12.500014305114746
    4. '.remove' → logprob: -13.125014305114746
    5. ').' → logprob: -15.000014305114746
    6. ''].' → logprob: -15.375014305114746
    7. '[' → logprob: -15.500014305114746
    8. '"].' → logprob: -15.625014305114746
    9. '.' → logprob: -15.625014305114746
    10. '][' → logprob: -16.25001335144043

Token 652: 'remove' (ID: 4942)
  Prédit: 'remove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remove' → logprob: -9.088346359931165e-07
    2. '.remove' → logprob: -14.000000953674316
    3. ' remove' → logprob: -17.0
    4. '(remove' → logprob: -19.875
    5. '	remove' → logprob: -20.25
    6. 'pop' → logprob: -21.0
    7. '_remove' → logprob: -21.375
    8. 'clear' → logprob: -23.625
    9. '```' → logprob: -23.875
    10. 'Remove' → logprob: -24.125

Token 653: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -1.9361264946837764e-07
    2. 'l' → logprob: -16.625
    3. '(' → logprob: -19.625
    4. '[l' → logprob: -21.0
    5. '	l' → logprob: -21.125
    6. ' l' → logprob: -21.75
    7. ' (' → logprob: -22.25
    8. '(L' → logprob: -22.375
    9. '((' → logprob: -22.375
    10. ',l' → logprob: -23.375

Token 654: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -0.0028397070709615946
    2. 'r' → logprob: -5.8778395652771
    3. 'uru' → logprob: -11.377840042114258
    4. 'ur' → logprob: -12.127840042114258
    5. 'l' → logprob: -12.627840042114258
    6. ')' → logprob: -12.877840042114258
    7. '[' → logprob: -13.002840042114258
    8. 'ру' → logprob: -13.627840042114258
    9. '(' → logprob: -13.877840042114258
    10. 'rl' → logprob: -14.002840042114258

Token 655: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006724602542817593
    2. ')
' → logprob: -5.006724834442139
    3. ')
' → logprob: -11.75672435760498
    4. ')

' → logprob: -14.63172435760498
    5. ' )' → logprob: -15.38172435760498
    6. '),' → logprob: -15.63172435760498
    7. '))' → logprob: -16.506725311279297
    8. ')b' → logprob: -16.506725311279297
    9. '   ' → logprob: -16.756725311279297
    10. ')`' → logprob: -17.006725311279297

Token 656: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06351932138204575
    2. 'des' → logprob: -3.188519239425659
    3. '```' → logprob: -4.188519477844238
    4. '                
' → logprob: -6.188519477844238
    5. '#' → logprob: -6.813519477844238
    6. '           ' → logprob: -7.813519477844238
    7. ' desks' → logprob: -8.188519477844238
    8. '``' → logprob: -8.438519477844238
    9. 'book' → logprob: -8.813519477844238
    10. ')' → logprob: -8.938519477844238

Token 657: ' book' (ID: 2392)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.41132932901382446
    2. 'des' → logprob: -1.1613292694091797
    3. '```' → logprob: -4.16132926940918
    4. '#' → logprob: -6.16132926940918
    5. '``' → logprob: -6.28632926940918
    6. '                
' → logprob: -6.78632926940918
    7. 'cost' → logprob: -7.28632926940918
    8. '           ' → logprob: -7.41132926940918
    9. 'd' → logprob: -7.78632926940918
    10. ' desks' → logprob: -7.91132926940918

Token 658: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -2.696889623621246e-06
    2. '_positions' → logprob: -13.37500286102295
    3. 's' → logprob: -14.87500286102295
    4. 'Pos' → logprob: -15.25000286102295
    5. 'pos' → logprob: -15.50000286102295
    6. '_tokens' → logprob: -16.125001907348633
    7. '_' → logprob: -16.500001907348633
    8. '_token' → logprob: -17.750001907348633
    9. '[' → logprob: -17.750001907348633
    10. '_POS' → logprob: -17.875001907348633

Token 659: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -3.531315314830863e-06
    2. '[' → logprob: -13.125003814697266
    3. '[b' → logprob: -14.500003814697266
    4. 'l' → logprob: -14.625003814697266
    5. '```' → logprob: -16.000003814697266
    6. '[L' → logprob: -16.250003814697266
    7. '\[' → logprob: -16.625003814697266
    8. '(l' → logprob: -17.375003814697266
    9. ',l' → logprob: -17.875003814697266
    10. '	l' → logprob: -17.875003814697266

Token 660: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -0.20098285377025604
    2. '[l' → logprob: -2.7009828090667725
    3. '[' → logprob: -2.8259828090667725
    4. 'r' → logprob: -2.9509828090667725
    5. 'l' → logprob: -6.825983047485352
    6. '[r' → logprob: -7.075983047485352
    7. 'rl' → logprob: -7.950983047485352
    8. '1' → logprob: -8.575983047485352
    9. '[u' → logprob: -8.575983047485352
    10. '0' → logprob: -8.700983047485352

Token 661: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.010058263316750526
    2. ']=' → logprob: -4.760058403015137
    3. '=' → logprob: -6.760058403015137
    4. '[m' → logprob: -8.885058403015137
    5. ' =' → logprob: -9.510058403015137
    6. '=m' → logprob: -10.635058403015137
    7. '[' → logprob: -10.635058403015137
    8. 'm' → logprob: -11.635058403015137
    9. ' ]' → logprob: -12.385058403015137
    10. '   ' → logprob: -13.135058403015137

Token 662: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06690345704555511
    2. ' =' → logprob: -2.8169033527374268
    3. '=m' → logprob: -5.316903591156006
    4. '[m' → logprob: -11.191903114318848
    5. '=s' → logprob: -14.316903114318848
    6. 'm' → logprob: -14.691903114318848
    7. '＝' → logprob: -15.566903114318848
    8. '[' → logprob: -15.691903114318848
    9. '   ' → logprob: -15.941903114318848
    10. ']=' → logprob: -16.566904067993164

Token 663: ' None' (ID: 4662)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.004654880613088608
    2. 'book' → logprob: -5.629654884338379
    3. 'b' → logprob: -7.629654884338379
    4. 's' → logprob: -8.129654884338379
    5. 'next' → logprob: -9.629654884338379
    6. 'placed' → logprob: -9.879654884338379
    7. ' m' → logprob: -10.504654884338379
    8. 'd' → logprob: -11.004654884338379
    9. '1' → logprob: -11.129654884338379
    10. '   ' → logprob: -11.379654884338379

Token 664: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4381794333457947
    2. '<|end|>' → logprob: -1.6881794929504395
    3. '
' → logprob: -1.8131794929504395
    4. '                
' → logprob: -5.9381794929504395
    5. '           ' → logprob: -6.5631794929504395
    6. '
' → logprob: -7.6881794929504395
    7. '```' → logprob: -7.9381794929504395
    8. '<|end|>' → logprob: -8.063179016113281
    9. '       ' → logprob: -8.313179016113281
    10. '            
' → logprob: -8.688179016113281

Token 665: '               ' (ID: 506)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07560113817453384
    2. '               ' → logprob: -3.075601100921631
    3. '                
' → logprob: -4.450601100921631
    4. '            
' → logprob: -6.075601100921631
    5. '\n' → logprob: -6.200601100921631
    6. '  
' → logprob: -6.200601100921631
    7. '```' → logprob: -6.450601100921631
    8. '    
' → logprob: -6.700601100921631
    9. '
' → logprob: -6.825601100921631
    10. '<|end|>' → logprob: -7.075601100921631

Token 666: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.061860114336013794
    2. '           ' → logprob: -3.3118600845336914
    3. '```' → logprob: -5.061860084533691
    4. '                
' → logprob: -5.311860084533691
    5. ' if' → logprob: -5.811860084533691
    6. '
' → logprob: -6.061860084533691
    7. '#' (adapté à ' #') → logprob: -6.186860084533691
    8. 'if' → logprob: -6.561860084533691
    9. '       ' → logprob: -7.311860084533691
    10. '            
' → logprob: -7.436860084533691

Token 667: ' put' (ID: 3006)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5531349778175354
    2. 'if' → logprob: -0.9281349778175354
    3. 'for' → logprob: -4.303134918212891
    4. '               ' → logprob: -4.678134918212891
    5. 's' → logprob: -6.053134918212891
    6. 'found' → logprob: -6.428134918212891
    7. '           ' → logprob: -6.553134918212891
    8. 'queue' → logprob: -8.17813491821289
    9. '       ' → logprob: -8.92813491821289
    10. 'placed' → logprob: -8.92813491821289

Token 668: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5705286264419556
    2. '(l' → logprob: -2.070528507232666
    3. 's' → logprob: -2.570528507232666
    4. '               ' → logprob: -2.820528507232666
    5. 'on' → logprob: -2.945528507232666
    6. ' l' → logprob: -3.320528507232666
    7. 'book' → logprob: -3.695528507232666
    8. 'the' → logprob: -4.070528507232666
    9. ' on' → logprob: -4.320528507232666
    10. ' the' → logprob: -4.945528507232666

Token 669: 'ru' (ID: 1942)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.3786989450454712
    2. 's' → logprob: -1.8786989450454712
    3. 'ru' → logprob: -1.8786989450454712
    4. 'des' → logprob: -2.2536988258361816
    5. 'book' → logprob: -3.0036988258361816
    6. 'books' → logprob: -3.0036988258361816
    7. '               ' → logprob: -3.1286988258361816
    8. 'on' → logprob: -3.2536988258361816
    9. 'r' → logprob: -3.7536988258361816
    10. '   ' → logprob: -4.128698825836182

Token 670: ' on' (ID: 402)
  Prédit: 'book'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'book' → logprob: -0.8145179152488708
    2. 'on' → logprob: -1.5645179748535156
    3. ' on' → logprob: -1.6895179748535156
    4. ' book' → logprob: -2.0645179748535156
    5. 's' → logprob: -4.564517974853516
    6. 'back' → logprob: -4.689517974853516
    7. '_book' → logprob: -5.064517974853516
    8. ' back' → logprob: -5.314517974853516
    9. '(book' → logprob: -6.814517974853516
    10. ' onto' → logprob: -7.189517974853516

Token 671: ' nearest' (ID: 35210)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.12291938811540604
    2. 'des' → logprob: -2.7479193210601807
    3. ' shelf' → logprob: -3.4979193210601807
    4. 'desk' → logprob: -4.49791955947876
    5. 'd' → logprob: -5.99791955947876
    6. ' shelves' → logprob: -6.49791955947876
    7. ' desks' → logprob: -6.74791955947876
    8. 'books' → logprob: -6.87291955947876
    9. ' desk' → logprob: -7.37291955947876
    10. '   ' → logprob: -7.37291955947876

Token 672: ' non' (ID: 2893)
  Prédit: 'non'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'non' → logprob: -0.01838112808763981
    2. ' non' → logprob: -4.768381118774414
    3. 'd' → logprob: -5.768381118774414
    4. 'desk' → logprob: -5.768381118774414
    5. '_non' → logprob: -7.018381118774414
    6. '1' → logprob: -7.018381118774414
    7. 'full' → logprob: -7.643381118774414
    8. 's' → logprob: -8.018381118774414
    9. ' desk' → logprob: -8.393381118774414
    10. 'available' → logprob: -9.268381118774414

Token 673: ' full' (ID: 3149)
  Prédit: 'full'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'full' → logprob: -0.0022711048368364573
    2. ' full' → logprob: -6.8772711753845215
    3. 'empty' → logprob: -7.5022711753845215
    4. '0' → logprob: -7.6272711753845215
    5. '-full' → logprob: -8.877270698547363
    6. 'zero' → logprob: -10.752270698547363
    7. '_full' → logprob: -11.002270698547363
    8. 'f' → logprob: -12.002270698547363
    9. '1' → logprob: -13.002270698547363
    10. '	full' → logprob: -13.252270698547363

Token 674: ' desk' (ID: 20794)
  Prédit: 'desk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'desk' → logprob: -0.011331567540764809
    2. ' desk' → logprob: -4.886331558227539
    3. 'd' → logprob: -5.636331558227539
    4. '```' → logprob: -9.636331558227539
    5. 'des' → logprob: -10.136331558227539
    6. 'deck' → logprob: -10.886331558227539
    7. 'for' → logprob: -11.511331558227539
    8. 'desktop' → logprob: -12.386331558227539
    9. 's' → logprob: -13.011331558227539
    10. '`' → logprob: -13.011331558227539

Token 675: ' except' (ID: 6384)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5391485095024109
    2. 'for' → logprob: -1.2891485691070557
    3. '```' → logprob: -3.2891485691070557
    4. '               ' → logprob: -3.2891485691070557
    5. ' for' → logprob: -3.6641485691070557
    6. '[' → logprob: -4.539148330688477
    7. '<|end|>' → logprob: -5.414148330688477
    8. ' or' → logprob: -5.664148330688477
    9. '0' → logprob: -5.789148330688477
    10. '           ' → logprob: -5.789148330688477

Token 676: ' D' (ID: 415)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.23321351408958435
    2. 'D' → logprob: -1.6082135438919067
    3. 'd' → logprob: -5.858213424682617
    4. ' ' → logprob: -6.608213424682617
    5. 'for' → logprob: -6.858213424682617
    6. ' D' → logprob: -7.108213424682617
    7. 's' → logprob: -7.108213424682617
    8. '[' → logprob: -7.858213424682617
    9. 'des' → logprob: -9.358213424682617
    10. 'the' → logprob: -9.733213424682617

Token 677: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02073398418724537
    2. '0' → logprob: -3.8957340717315674
    3. 'es' → logprob: -9.145733833312988
    4. '[' → logprob: -10.270733833312988
    5. '```' → logprob: -11.145733833312988
    6. '_' → logprob: -11.520733833312988
    7. 'esk' → logprob: -12.145733833312988
    8. ' ' → logprob: -12.270733833312988
    9. 's' → logprob: -12.895733833312988
    10. '(' → logprob: -13.270733833312988

Token 678: ' or' (ID: 503)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.1652706861495972
    2. 'for' → logprob: -1.1652706861495972
    3. ' for' → logprob: -2.1652708053588867
    4. '(' → logprob: -2.1652708053588867
    5. ' (' → logprob: -2.7902708053588867
    6. '[' → logprob: -3.7902708053588867
    7. ',' → logprob: -3.9152708053588867
    8. '```' → logprob: -4.165270805358887
    9. '                   ' → logprob: -4.915270805358887
    10. '   ' → logprob: -5.165270805358887

Token 679: ' shelf' (ID: 40978)
  Prédit: ' shelf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' shelf' → logprob: -0.6351377367973328
    2. 's' → logprob: -0.8851377367973328
    3. '0' → logprob: -3.2601377964019775
    4. 'm' → logprob: -5.135137557983398
    5. 'None' → logprob: -5.760137557983398
    6. ' on' → logprob: -6.635137557983398
    7. '   ' → logprob: -6.760137557983398
    8. ' ' → logprob: -7.135137557983398
    9. 'on' → logprob: -7.385137557983398
    10. ' None' → logprob: -7.510137557983398

Token 680: ' if' (ID: 538)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.0143057107925415
    2. 'for' → logprob: -1.1393057107925415
    3. '               ' → logprob: -1.5143057107925415
    4. '<|end|>' → logprob: -2.889305591583252
    5. '```' → logprob: -3.889305591583252
    6. ',' → logprob: -4.514305591583252
    7. ' (' → logprob: -6.764305591583252
    8. '<|end|>' → logprob: -6.764305591583252
    9. '(' → logprob: -6.889305591583252
    10. '
' → logprob: -7.139305591583252

Token 681: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.02020314894616604
    2. ' all' → logprob: -4.020203113555908
    3. 'True' → logprob: -6.270203113555908
    4. 'm' → logprob: -9.395203590393066
    5. ' True' → logprob: -9.645203590393066
    6. 'not' → logprob: -11.895203590393066
    7. ' m' → logprob: -13.395203590393066
    8. ' not' → logprob: -14.645203590393066
    9. 'None' → logprob: -15.020203590393066
    10. '	all' → logprob: -15.145203590393066

Token 682: ' full' (ID: 3149)
  Prédit: 'full'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'full' → logprob: -0.0009275413467548788
    2. ' full' → logprob: -7.000927448272705
    3. '```' → logprob: -11.750927925109863
    4. '_full' → logprob: -13.125927925109863
    5. 'des' → logprob: -13.750927925109863
    6. '	full' → logprob: -14.000927925109863
    7. 'd' → logprob: -14.125927925109863
    8. 'm' → logprob: -14.500927925109863
    9. 'are' → logprob: -14.500927925109863
    10. 'book' → logprob: -14.500927925109863

Token 683: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5693843960762024
    2. 'for' → logprob: -0.9443843960762024
    3. '```' → logprob: -3.5693843364715576
    4. ' for' → logprob: -4.319384574890137
    5. '                   ' → logprob: -6.819384574890137
    6. '<|end|>' → logprob: -7.319384574890137
    7. '       ' → logprob: -7.569384574890137
    8. '
' → logprob: -7.944384574890137
    9. '                
' → logprob: -8.069384574890137
    10. '           ' → logprob: -8.194384574890137

Token 684: '               ' (ID: 506)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.2820776402950287
    2. 'for' → logprob: -2.0320775508880615
    3. ' for' → logprob: -2.6570775508880615
    4. '               ' → logprob: -3.7820775508880615
    5. '
' → logprob: -4.407077789306641
    6. '``' → logprob: -5.157077789306641
    7. '                
' → logprob: -6.657077789306641
    8. '<|end|>' → logprob: -6.907077789306641
    9. '                   ' → logprob: -7.157077789306641
    10. '                    
' → logprob: -8.78207778930664

Token 685: ' placed' (ID: 12989)
  Prédit: 'placed'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'placed' (adapté à ' placed') → logprob: -0.005801282357424498
    2. 'for' → logprob: -5.880801200866699
    3. ' placed' → logprob: -6.505801200866699
    4. '               ' → logprob: -6.630801200866699
    5. 'found' → logprob: -9.5058012008667
    6. '```' → logprob: -9.7558012008667
    7. ' for' → logprob: -10.3808012008667
    8. '                
' → logprob: -13.0058012008667
    9. '                   ' → logprob: -13.2558012008667
    10. '           ' → logprob: -13.3808012008667

Token 686: ' =' (ID: 314)
  Prédit: '=False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=False' → logprob: -0.21484075486660004
    2. ' =' → logprob: -1.7148407697677612
    3. '=' → logprob: -4.339840888977051
    4. '=True' → logprob: -8.21484088897705
    5. 'False' → logprob: -10.83984088897705
    6. '   ' → logprob: -13.08984088897705
    7. '(False' → logprob: -13.33984088897705
    8. '=false' → logprob: -13.46484088897705
    9. '```' → logprob: -13.58984088897705
    10. ':' → logprob: -13.71484088897705

Token 687: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -4.5491004129871726e-05
    2. ' False' → logprob: -10.000045776367188
    3. 'True' → logprob: -18.875045776367188
    4. '(False' → logprob: -20.375045776367188
    5. '=False' → logprob: -21.000045776367188
    6. 'false' → logprob: -21.500045776367188
    7. '   ' → logprob: -22.500045776367188
    8. '_false' → logprob: -22.625045776367188
    9. 'F' → logprob: -22.750045776367188
    10. '.False' → logprob: -23.250045776367188

Token 688: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4022396206855774
    2. ' for' → logprob: -1.5272395610809326
    3. '<|end|>' → logprob: -2.7772395610809326
    4. 'for' → logprob: -3.0272395610809326
    5. '<|end|>' → logprob: -6.652239799499512
    6. '	for' → logprob: -7.027239799499512
    7. '```' → logprob: -7.652239799499512
    8. '			' → logprob: -8.652239799499512
    9. '		       ' → logprob: -9.402239799499512
    10. '	           ' → logprob: -9.527239799499512

Token 689: '               ' (ID: 506)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.10692895948886871
    2. 'for' → logprob: -2.481929063796997
    3. '	for' → logprob: -4.106928825378418
    4. '```' → logprob: -7.106928825378418
    5. '<|end|>' → logprob: -7.856928825378418
    6. '               ' → logprob: -9.606928825378418
    7. '
' → logprob: -10.481928825378418
    8. '``' → logprob: -11.231928825378418
    9. '<|end|>' → logprob: -11.606928825378418
    10. '\' → logprob: -11.731928825378418

Token 690: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0004343645414337516
    2. ' for' → logprob: -7.750434398651123
    3. '```' → logprob: -12.625433921813965
    4. '               ' → logprob: -15.250433921813965
    5. '	for' → logprob: -15.875433921813965
    6. '           ' → logprob: -18.75043487548828
    7. '``' → logprob: -19.25043487548828
    8. '
' → logprob: -19.75043487548828
    9. '<|end|>' → logprob: -19.87543487548828
    10. '                   ' → logprob: -20.50043487548828

Token 691: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.47407814860343933
    2. ' d' → logprob: -0.9740781784057617
    3. '	d' → logprob: -14.224078178405762
    4. '_d' → logprob: -15.724078178405762
    5. ' ' → logprob: -15.974078178405762
    6. '   ' → logprob: -16.224077224731445
    7. '1' → logprob: -17.724077224731445
    8. '```' → logprob: -17.974077224731445
    9. ')d' → logprob: -18.224077224731445
    10. '`' → logprob: -18.224077224731445

Token 692: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.38688212633132935
    2. 'in' → logprob: -1.1368820667266846
    3. '(' → logprob: -12.136881828308105
    4. '1' → logprob: -12.886881828308105
    5. 'range' → logprob: -13.261881828308105
    6. 'd' → logprob: -14.386881828308105
    7. ' ' → logprob: -15.136881828308105
    8. ' range' → logprob: -15.886881828308105
    9. '=' → logprob: -16.011882781982422
    10. '```' → logprob: -16.136882781982422

Token 693: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011048054322600365
    2. ' range' → logprob: -4.511047840118408
    3. '1' → logprob: -16.38604736328125
    4. '(range' → logprob: -16.51104736328125
    5. ' ' → logprob: -19.51104736328125
    6. '(' → logprob: -19.51104736328125
    7. '   ' → logprob: -20.63604736328125
    8. '	range' → logprob: -21.13604736328125
    9. '_range' → logprob: -22.01104736328125
    10. '2' → logprob: -22.26104736328125

Token 694: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0789206326007843
    2. '(' → logprob: -2.578920602798462
    3. '[' → logprob: -11.578920364379883
    4. ',' → logprob: -12.453920364379883
    5. ' ' → logprob: -12.453920364379883
    6. '=' → logprob: -12.703920364379883
    7. ' (' → logprob: -12.828920364379883
    8. '
' → logprob: -13.203920364379883
    9. '   ' → logprob: -13.453920364379883
    10. 'range' → logprob: -13.703920364379883

Token 695: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '   ' → logprob: -18.5
    4. '```' → logprob: -19.0
    5. '(' → logprob: -19.375
    6. '0' → logprob: -19.625
    7. 'm' → logprob: -19.9375
    8. '
' → logprob: -20.5
    9. 'range' → logprob: -20.5625
    10. '2' → logprob: -20.5625

Token 696: ',m' (ID: 26648)
  Prédit: ',m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',m' → logprob: -0.0005044196150265634
    2. ',' → logprob: -7.625504493713379
    3. 'm' → logprob: -11.625504493713379
    4. ',len' → logprob: -12.500504493713379
    5. ' ,' → logprob: -12.625504493713379
    6. ',d' → logprob: -14.625504493713379
    7. ',n' → logprob: -17.000503540039062
    8. '<m' → logprob: -18.000503540039062
    9. ',int' → logprob: -18.250503540039062
    10. ',c' → logprob: -18.625503540039062

Token 697: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.10402750223875046
    2. '):' → logprob: -2.354027509689331
    3. ':' → logprob: -6.104027271270752
    4. ':
' → logprob: -7.104027271270752
    5. ',' → logprob: -7.729027271270752
    6. '<|end|>' → logprob: -9.22902774810791
    7. '```' → logprob: -9.72902774810791
    8. '):
' → logprob: -9.97902774810791
    9. '   ' → logprob: -11.10402774810791
    10. '():
' → logprob: -11.10402774810791

Token 698: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0066901566460728645
    2. 'if' → logprob: -6.25669002532959
    3. ' if' → logprob: -6.25669002532959
    4. '           ' → logprob: -7.00669002532959
    5. '<|end|>' → logprob: -7.00669002532959
    6. '               ' → logprob: -7.50669002532959
    7. '   ' → logprob: -8.13169002532959
    8. '```' → logprob: -9.88169002532959
    9. '<|end|>' → logprob: -10.63169002532959
    10. '       ' → logprob: -10.75669002532959

Token 699: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.12109869718551636
    2. '                   ' → logprob: -2.871098756790161
    3. ' if' → logprob: -2.871098756790161
    4. '                       ' → logprob: -7.371098518371582
    5. '               ' → logprob: -9.371098518371582
    6. '<|end|>' → logprob: -10.996098518371582
    7. '```' → logprob: -11.246098518371582
    8. '           ' → logprob: -11.496098518371582
    9. '       ' → logprob: -12.121098518371582
    10. '   ' → logprob: -12.371098518371582

Token 700: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.25193408131599426
    2. ' len' → logprob: -1.5019340515136719
    3. '(len' → logprob: -12.251934051513672
    4. '[len' → logprob: -16.251934051513672
    5. '	len' → logprob: -16.751934051513672
    6. '<len' → logprob: -17.376934051513672
    7. ' ' → logprob: -18.126934051513672
    8. '   ' → logprob: -18.251934051513672
    9. ',len' → logprob: -18.501934051513672
    10. '    ' → logprob: -19.251934051513672

Token 701: '(des' (ID: 61239)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.12693944573402405
    2. '(des' → logprob: -2.126939535140991
    3. '[' → logprob: -12.12693977355957
    4. '(d' → logprob: -13.75193977355957
    5. 'desk' → logprob: -13.75193977355957
    6. '```' → logprob: -13.75193977355957
    7. '   ' → logprob: -14.37693977355957
    8. ' desks' → logprob: -14.62693977355957
    9. ' des' → logprob: -14.75193977355957
    10. ' (' → logprob: -15.12693977355957

Token 702: 'ks' (ID: 2484)
  Prédit: 'ks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ks' → logprob: -6.802049756515771e-05
    2. 's' → logprob: -9.750067710876465
    3. 'des' → logprob: -12.500067710876465
    4. 'eks' → logprob: -13.000067710876465
    5. 'cks' → logprob: -13.750067710876465
    6. 'kes' → logprob: -14.625067710876465
    7. 'k' → logprob: -14.625067710876465
    8. 'kses' → logprob: -14.625067710876465
    9. '(des' → logprob: -14.750067710876465
    10. 'es' → logprob: -14.750067710876465

Token 703: '[d' (ID: 48377)
  Prédit: '[d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -5.796184723294573e-06
    2. 'd' → logprob: -12.250005722045898
    3. '(d' → logprob: -14.625005722045898
    4. '[' → logprob: -15.375005722045898
    5. ')' → logprob: -15.625005722045898
    6. ')d' → logprob: -16.3750057220459
    7. ')[' → logprob: -17.8750057220459
    8. '```' → logprob: -18.5000057220459
    9. '   ' → logprob: -18.8750057220459
    10. ' [' → logprob: -18.8750057220459

Token 704: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003675133048091084
    2. ')<' → logprob: -8.125367164611816
    3. ']' → logprob: -10.125367164611816
    4. '])' → logprob: -10.875367164611816
    5. '[' → logprob: -12.500367164611816
    6. ' )' → logprob: -12.625367164611816
    7. '）' → logprob: -13.625367164611816
    8. ')]' → logprob: -13.750367164611816
    9. ']<' → logprob: -13.875367164611816
    10. '<' → logprob: -14.750367164611816

Token 705: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.2521979510784149
    2. ' <' → logprob: -1.5021979808807373
    3. ')' → logprob: -9.502198219299316
    4. '[' → logprob: -9.627198219299316
    5. '<len' → logprob: -10.502198219299316
    6. ')<' → logprob: -10.627198219299316
    7. '<n' → logprob: -11.127198219299316
    8. '<p' → logprob: -11.252198219299316
    9. '<size' → logprob: -11.627198219299316
    10. '<th' → logprob: -12.377198219299316

Token 706: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.003181994194164872
    2. ' c' → logprob: -5.7531819343566895
    3. '   ' → logprob: -12.628182411193848
    4. '	c' → logprob: -14.253182411193848
    5. '  ' → logprob: -16.37818145751953
    6. ' ' → logprob: -16.62818145751953
    7. ')c' → logprob: -17.12818145751953
    8. '    ' → logprob: -17.25318145751953
    9. '           ' → logprob: -18.75318145751953
    10. '
' → logprob: -18.75318145751953

Token 707: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5211659073829651
    2. ':
' → logprob: -1.3961658477783203
    3. '                       ' → logprob: -1.8961658477783203
    4. '):
' → logprob: -5.27116584777832
    5. '):' → logprob: -6.77116584777832
    6. '():
' → logprob: -7.27116584777832
    7. '                   ' → logprob: -8.02116584777832
    8. '```' → logprob: -8.64616584777832
    9. '<|end|>' → logprob: -8.77116584777832
    10. '                      ' → logprob: -8.77116584777832

Token 708: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.00663496321067214
    2. '                   ' → logprob: -5.8816351890563965
    3. '```' → logprob: -5.8816351890563965
    4. 'des' → logprob: -8.756634712219238
    5. '                           ' → logprob: -8.756634712219238
    6. '               ' → logprob: -8.756634712219238
    7. '       ' → logprob: -9.506634712219238
    8. '                               ' → logprob: -9.506634712219238
    9. '<|end|>' → logprob: -9.631634712219238
    10. '                      ' → logprob: -9.756634712219238

Token 709: ' desks' (ID: 109910)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.00017410075815860182
    2. ' desks' → logprob: -9.000174522399902
    3. '               ' → logprob: -10.625174522399902
    4. '                       ' → logprob: -11.375174522399902
    5. '                   ' → logprob: -12.500174522399902
    6. 'desk' → logprob: -12.875174522399902
    7. '```' → logprob: -13.000174522399902
    8. '                               ' → logprob: -13.250174522399902
    9. '   ' → logprob: -13.375174522399902
    10. ' des' → logprob: -13.500174522399902

Token 710: '[d' (ID: 48377)
  Prédit: '[d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -9.088346359931165e-07
    2. 'd' → logprob: -14.875000953674316
    3. '                   ' → logprob: -15.125000953674316
    4. '[' → logprob: -15.875000953674316
    5. '                       ' → logprob: -16.0
    6. '               ' → logprob: -18.125
    7. '(d' → logprob: -18.25
    8. '           ' → logprob: -19.25
    9. '                           ' → logprob: -20.125
    10. '       ' → logprob: -20.25

Token 711: '].' (ID: 1651)
  Prédit: '[d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -0.0018429673509672284
    2. '[' → logprob: -6.501842975616455
    3. '.append' → logprob: -8.126842498779297
    4. '].' → logprob: -10.626842498779297
    5. 'd' → logprob: -12.001842498779297
    6. '                   ' → logprob: -12.501842498779297
    7. '               ' → logprob: -13.001842498779297
    8. '                       ' → logprob: -13.001842498779297
    9. '[].' → logprob: -13.126842498779297
    10. '][' → logprob: -13.626842498779297

Token 712: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -4.127333340875339e-06
    2. '.append' → logprob: -12.500003814697266
    3. ' append' → logprob: -15.125003814697266
    4. 'appen' → logprob: -18.000003814697266
    5. '	append' → logprob: -18.000003814697266
    6. '   ' → logprob: -19.375003814697266
    7. '```' → logprob: -19.500003814697266
    8. '_append' → logprob: -20.000003814697266
    9. ' ' → logprob: -20.125003814697266
    10. 'add' → logprob: -20.625003814697266

Token 713: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -3.8889261304575484e-06
    2. '(' → logprob: -12.500003814697266
    3. 'l' → logprob: -16.625003814697266
    4. '(
' → logprob: -17.250003814697266
    5. '(d' → logprob: -18.125003814697266
    6. ' (' → logprob: -18.375003814697266
    7. '	l' → logprob: -18.625003814697266
    8. '[l' → logprob: -18.750003814697266
    9. '(b' → logprob: -19.125003814697266
    10. '```' → logprob: -19.125003814697266

Token 714: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -0.030355827882885933
    2. 'r' → logprob: -3.530355930328369
    3. 'b' → logprob: -8.280355453491211
    4. 'd' → logprob: -8.530355453491211
    5. 'ру' → logprob: -10.280355453491211
    6. '```' → logprob: -10.780355453491211
    7. 'u' → logprob: -11.155355453491211
    8. ')' → logprob: -11.405355453491211
    9. '       ' → logprob: -11.905355453491211
    10. '   ' → logprob: -11.905355453491211

Token 715: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.014970961026847363
    2. ')' → logprob: -4.264970779418945
    3. '                       ' → logprob: -7.139970779418945
    4. ')
' → logprob: -11.514970779418945
    5. '                   ' → logprob: -13.764970779418945
    6. '                           ' → logprob: -13.889970779418945
    7. ' )
' → logprob: -14.639970779418945
    8. ')

' → logprob: -14.764970779418945
    9. ')d' → logprob: -15.014970779418945
    10. '                        ' → logprob: -15.639970779418945

Token 716: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.021350780501961708
    2. '<|end|>' → logprob: -4.396350860595703
    3. '```' → logprob: -5.271350860595703
    4. '                        
' → logprob: -7.021350860595703
    5. '                               ' → logprob: -7.021350860595703
    6. '                           ' → logprob: -7.271350860595703
    7. '``' → logprob: -8.146350860595703
    8. '
' → logprob: -8.396350860595703
    9. '               ' → logprob: -8.771350860595703
    10. '[' → logprob: -9.146350860595703

Token 717: ' book' (ID: 2392)
  Prédit: 'book'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'book' (adapté à ' book') → logprob: -0.014191831462085247
    2. ' book' → logprob: -4.264191627502441
    3. '               ' → logprob: -11.889191627502441
    4. '                   ' → logprob: -12.014191627502441
    5. '```' → logprob: -12.014191627502441
    6. '           ' → logprob: -12.764191627502441
    7. '                       ' → logprob: -12.764191627502441
    8. '   ' → logprob: -13.764191627502441
    9. '                           ' → logprob: -14.014191627502441
    10. '                               ' → logprob: -14.514191627502441

Token 718: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -1.0280383548888494e-06
    2. 'pos' → logprob: -14.500000953674316
    3. 'Pos' → logprob: -15.250000953674316
    4. '```' → logprob: -16.250001907348633
    5. '_positions' → logprob: -16.750001907348633
    6. '[pos' → logprob: -17.125001907348633
    7. '[' → logprob: -17.875001907348633
    8. '_post' → logprob: -18.250001907348633
    9. '_p' → logprob: -18.250001907348633
    10. ''_' → logprob: -18.500001907348633

Token 719: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -1.5048530030981055e-06
    2. '[' → logprob: -14.000001907348633
    3. 'l' → logprob: -15.125001907348633
    4. '```' → logprob: -15.250001907348633
    5. '[d' → logprob: -17.375001907348633
    6. '[[' → logprob: -17.500001907348633
    7. '[
' → logprob: -18.250001907348633
    8. ' [' → logprob: -18.375001907348633
    9. '[b' → logprob: -18.375001907348633
    10. '	l' → logprob: -18.625001907348633

Token 720: 'ru' (ID: 1942)
  Prédit: '[d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[d' → logprob: -0.7142211198806763
    2. 'd' → logprob: -1.2142211198806763
    3. ']' → logprob: -1.8392211198806763
    4. '[l' → logprob: -3.9642210006713867
    5. '][' → logprob: -4.839221000671387
    6. '       ' → logprob: -4.964221000671387
    7. '   ' → logprob: -5.964221000671387
    8. '                   ' → logprob: -6.214221000671387
    9. '[r' → logprob: -6.339221000671387
    10. 'l' → logprob: -6.464221000671387

Token 721: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.023938365280628204
    2. ']=' → logprob: -3.7739384174346924
    3. '[l' → logprob: -7.773938179016113
    4. '[d' → logprob: -8.898938179016113
    5. '[b' → logprob: -9.523938179016113
    6. '=' → logprob: -9.773938179016113
    7. 'd' → logprob: -12.773938179016113
    8. ' ]' → logprob: -14.148938179016113
    9. '[' → logprob: -14.523938179016113
    10. '=l' → logprob: -15.773938179016113

Token 722: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005489402916282415
    2. ' =' → logprob: -5.255489349365234
    3. '=d' → logprob: -8.630489349365234
    4. '[d' → logprob: -9.630489349365234
    5. ']' → logprob: -12.130489349365234
    6. ']=' → logprob: -12.255489349365234
    7. '[' → logprob: -15.255489349365234
    8. '   ' → logprob: -15.380489349365234
    9. 'd' → logprob: -15.505489349365234
    10. '```' → logprob: -15.630489349365234

Token 723: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0019286326132714748
    2. ' d' → logprob: -6.251928806304932
    3. '	d' → logprob: -18.751928329467773
    4. '   ' → logprob: -21.001928329467773
    5. ''d' → logprob: -21.251928329467773
    6. ' ' → logprob: -21.251928329467773
    7. '$d' → logprob: -21.376928329467773
    8. ')d' → logprob: -21.626928329467773
    9. '>d' → logprob: -21.876928329467773
    10. '_d' → logprob: -22.001928329467773

Token 724: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0017319408943876624
    2. '<|end|>' → logprob: -6.876731872558594
    3. '                        
' → logprob: -8.376731872558594
    4. '                           ' → logprob: -8.876731872558594
    5. '```' → logprob: -8.876731872558594
    6. '               ' → logprob: -9.751731872558594
    7. '                   ' → logprob: -10.501731872558594
    8. '                               ' → logprob: -10.626731872558594
    9. '                        ' → logprob: -10.626731872558594
    10. '           ' → logprob: -11.251731872558594

Token 725: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0030416471417993307
    2. '<|end|>' → logprob: -6.378041744232178
    3. '```' → logprob: -7.128041744232178
    4. '               ' → logprob: -8.75304126739502
    5. '                        
' → logprob: -8.87804126739502
    6. '                   ' → logprob: -9.62804126739502
    7. '           ' → logprob: -10.25304126739502
    8. '                           ' → logprob: -10.37804126739502
    9. '                        ' → logprob: -10.75304126739502
    10. '                      ' → logprob: -11.00304126739502

Token 726: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' (adapté à ' cost') → logprob: -0.1269499510526657
    2. ' cost' → logprob: -2.1269500255584717
    3. '```' → logprob: -11.25195026397705
    4. '                   ' → logprob: -12.62695026397705
    5. '                       ' → logprob: -12.62695026397705
    6. '                           ' → logprob: -14.12695026397705
    7. '               ' → logprob: -14.37695026397705
    8. '                               ' → logprob: -14.87695026397705
    9. '(cost' → logprob: -15.25195026397705
    10. '``' → logprob: -15.75195026397705

Token 727: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.12835507094860077
    2. '+=' → logprob: -2.128355026245117
    3. '+' → logprob: -6.628355026245117
    4. ' +' → logprob: -9.503355026245117
    5. ']+=' → logprob: -11.128355026245117
    6. '<|end|>' → logprob: -12.003355026245117
    7. '+='' → logprob: -13.253355026245117
    8. '++' → logprob: -13.503355026245117
    9. '+="' → logprob: -13.753355026245117
    10. '                       ' → logprob: -14.128355026245117

Token 728: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.01815415732562542
    2. ' d' → logprob: -4.018154144287109
    3. '1' → logprob: -13.01815414428711
    4. ' ' → logprob: -14.64315414428711
    5. '   ' → logprob: -14.64315414428711
    6. '	d' → logprob: -14.76815414428711
    7. '(d' → logprob: -14.76815414428711
    8. '0' → logprob: -16.01815414428711
    9. ')d' → logprob: -16.89315414428711
    10. '$d' → logprob: -17.08065414428711

Token 729: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -6.742448022123426e-05
    2. ' +' → logprob: -9.625067710876465
    3. '<|end|>' → logprob: -14.000067710876465
    4. '+
' → logprob: -15.750067710876465
    5. ')+' → logprob: -16.25006675720215
    6. '()+' → logprob: -17.00006675720215
    7. '＋' → logprob: -17.25006675720215
    8. '```' → logprob: -17.62506675720215
    9. ']+' → logprob: -17.75006675720215
    10. '1' → logprob: -18.25006675720215

Token 730: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2352385965641588e-05
    2. '2' → logprob: -11.625012397766113
    3. '+' → logprob: -13.375012397766113
    4. '```' → logprob: -14.125012397766113
    5. ' ' → logprob: -15.000012397766113
    6. '0' → logprob: -15.125012397766113
    7. '<|end|>' → logprob: -15.500012397766113
    8. '   ' → logprob: -17.000011444091797
    9. '                   ' → logprob: -17.500011444091797
    10. '...' → logprob: -17.625011444091797

Token 731: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.004031026270240545
    2. '```' → logprob: -6.504031181335449
    3. '<|end|>' → logprob: -6.879031181335449
    4. '                        
' → logprob: -7.129031181335449
    5. '
' → logprob: -8.12903118133545
    6. '                           ' → logprob: -9.00403118133545
    7. '               ' → logprob: -10.12903118133545
    8. '                   ' → logprob: -10.12903118133545
    9. '           ' → logprob: -10.25403118133545
    10. '                               ' → logprob: -10.62903118133545

Token 732: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0020906615536659956
    2. '```' → logprob: -6.5020904541015625
    3. '               ' → logprob: -8.752090454101562
    4. '                        
' → logprob: -9.002090454101562
    5. '<|end|>' → logprob: -9.002090454101562
    6. '                   ' → logprob: -10.002090454101562
    7. '           ' → logprob: -10.127090454101562
    8. 'break' → logprob: -10.627090454101562
    9. '                           ' → logprob: -11.002090454101562
    10. '                      ' → logprob: -11.377090454101562

Token 733: ' placed' (ID: 12989)
  Prédit: 'placed'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'placed' (adapté à ' placed') → logprob: -0.49595725536346436
    2. '                       ' → logprob: -1.7459572553634644
    3. 'break' → logprob: -1.9959572553634644
    4. ' placed' → logprob: -2.620957374572754
    5. ' break' → logprob: -4.870957374572754
    6. '               ' → logprob: -9.245957374572754
    7. '                   ' → logprob: -9.995957374572754
    8. 'place' → logprob: -10.245957374572754
    9. '```' → logprob: -11.245957374572754
    10. '           ' → logprob: -11.745957374572754

Token 734: '=True' (ID: 7827)
  Prédit: '=True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.22735904157161713
    2. '=' → logprob: -1.7273590564727783
    3. ' =' → logprob: -3.7273590564727783
    4. '=False' → logprob: -6.477358818054199
    5. '                       ' → logprob: -11.7273588180542
    6. '=true' → logprob: -12.7273588180542
    7. '           ' → logprob: -13.3523588180542
    8. '       ' → logprob: -13.8523588180542
    9. '=
' → logprob: -13.9773588180542
    10. '                   ' → logprob: -13.9773588180542

Token 735: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0016550635918974876
    2. '					' → logprob: -7.251655101776123
    3. '               ' → logprob: -7.876655101776123
    4. '                   ' → logprob: -8.376654624938965
    5. '           ' → logprob: -9.501654624938965
    6. '		' → logprob: -9.501654624938965
    7. '```' → logprob: -10.126654624938965
    8. '                           ' → logprob: -10.501654624938965
    9. '	                   ' → logprob: -11.126654624938965
    10. '		               ' → logprob: -11.126654624938965

Token 736: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.002300727879628539
    2. '```' → logprob: -6.75230073928833
    3. 'break' → logprob: -7.75230073928833
    4. '               ' → logprob: -8.252300262451172
    5. '					' → logprob: -8.627300262451172
    6. '                   ' → logprob: -8.877300262451172
    7. '		' → logprob: -10.127300262451172
    8. '           ' → logprob: -10.252300262451172
    9. '	break' → logprob: -11.377300262451172
    10. '	' → logprob: -12.627300262451172

Token 737: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.00037037418223917484
    2. ' break' → logprob: -8.000370025634766
    3. '                       ' → logprob: -10.625370025634766
    4. '	break' → logprob: -11.750370025634766
    5. '               ' → logprob: -13.500370025634766
    6. '                   ' → logprob: -14.375370025634766
    7. '```' → logprob: -14.375370025634766
    8. '           ' → logprob: -16.375370025634766
    9. '					' → logprob: -17.125370025634766
    10. '
' → logprob: -17.250370025634766

Token 738: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.35054221749305725
    2. '```' → logprob: -1.8505421876907349
    3. 'if' → logprob: -2.4755423069000244
    4. '           ' → logprob: -2.9755423069000244
    5. '       ' → logprob: -6.350542068481445
    6. ' if' → logprob: -6.850542068481445
    7. '``' → logprob: -8.725542068481445
    8. '
' → logprob: -9.225542068481445
    9. '   ' → logprob: -9.225542068481445
    10. 'If' → logprob: -9.350542068481445

Token 739: '               ' (ID: 506)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.2148987501859665
    2. '               ' → logprob: -1.714898705482483
    3. 'if' → logprob: -4.589898586273193
    4. '           ' → logprob: -6.089898586273193
    5. '``' → logprob: -7.964898586273193
    6. '       ' → logprob: -8.214899063110352
    7. '                   ' → logprob: -8.839899063110352
    8. '   ' → logprob: -9.214899063110352
    9. ' if' → logprob: -9.464899063110352
    10. '
' → logprob: -11.089899063110352

Token 740: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.040732551366090775
    2. '               ' → logprob: -3.2907326221466064
    3. '```' → logprob: -6.165732383728027
    4. ' if' → logprob: -8.040732383728027
    5. '           ' → logprob: -8.415732383728027
    6. '       ' → logprob: -11.040732383728027
    7. '``' → logprob: -11.790732383728027
    8. '                   ' → logprob: -11.790732383728027
    9. '   ' → logprob: -12.040732383728027
    10. 'If' → logprob: -12.415732383728027

Token 741: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.061968132853507996
    2. 'not' → logprob: -2.8119680881500244
    3. '(not' → logprob: -16.186967849731445
    4. '                   ' → logprob: -16.561967849731445
    5. '               ' → logprob: -16.561967849731445
    6. '	not' → logprob: -16.936967849731445
    7. '```' → logprob: -17.436967849731445
    8. ':not' → logprob: -17.811967849731445
    9. '_not' → logprob: -18.311967849731445
    10. '
' → logprob: -18.811967849731445

Token 742: ' placed' (ID: 12989)
  Prédit: ' placed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' placed' → logprob: -0.12692894041538239
    2. 'placed' → logprob: -2.1269290447235107
    3. 'not' → logprob: -14.50192928314209
    4. ' not' → logprob: -15.62692928314209
    5. 'Placed' → logprob: -17.126928329467773
    6. '   ' → logprob: -17.251928329467773
    7. ' ' → logprob: -17.251928329467773
    8. '```' → logprob: -17.501928329467773
    9. '_' → logprob: -17.876928329467773
    10. 'place' → logprob: -18.001928329467773

Token 743: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.47968003153800964
    2. ':
' → logprob: -0.979680061340332
    3. '                   ' → logprob: -5.229680061340332
    4. '```' → logprob: -9.104680061340332
    5. '               ' → logprob: -10.104680061340332
    6. '                       ' → logprob: -10.854680061340332
    7. ':s' → logprob: -11.104680061340332
    8. ':

' → logprob: -11.229680061340332
    9. '):
' → logprob: -11.979680061340332
    10. 's' → logprob: -11.979680061340332

Token 744: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.013760056346654892
    2. 's' → logprob: -4.763760089874268
    3. '```' → logprob: -6.013760089874268
    4. '               ' → logprob: -6.263760089874268
    5. '   ' → logprob: -8.26375961303711
    6. '#' → logprob: -8.63875961303711
    7. '                  ' → logprob: -9.63875961303711
    8. '           ' → logprob: -9.63875961303711
    9. ' shelf' → logprob: -10.01375961303711
    10. '{
' → logprob: -10.26375961303711

Token 745: ' shelf' (ID: 40978)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.03323124349117279
    2. '                   ' → logprob: -3.783231258392334
    3. '               ' → logprob: -5.408231258392334
    4. '```' → logprob: -5.908231258392334
    5. '                       ' → logprob: -6.783231258392334
    6. ' shelf' → logprob: -7.033231258392334
    7. '   ' → logprob: -7.783231258392334
    8. '``' → logprob: -9.158230781555176
    9. '       ' → logprob: -9.783230781555176
    10. '           ' → logprob: -9.908230781555176

Token 746: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -3.190178904333152e-05
    2. '.' → logprob: -10.375031471252441
    3. 'add' → logprob: -15.000031471252441
    4. '.Add' → logprob: -16.500032424926758
    5. '.setdefault' → logprob: -16.875032424926758
    6. ' .' → logprob: -17.500032424926758
    7. '.append' → logprob: -17.625032424926758
    8. 'Adding' → logprob: -17.625032424926758
    9. '```' → logprob: -18.625032424926758
    10. ')add' → logprob: -18.750032424926758

Token 747: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -2.339278580620885e-06
    2. '(' → logprob: -13.000001907348633
    3. '(
' → logprob: -17.875001907348633
    4. ' (' → logprob: -18.125001907348633
    5. '(b' → logprob: -19.000001907348633
    6. '(s' → logprob: -19.250001907348633
    7. ')' → logprob: -19.375001907348633
    8. '(L' → logprob: -19.625001907348633
    9. '(ll' → logprob: -20.000001907348633
    10. 'l' → logprob: -20.125001907348633

Token 748: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -0.7752393484115601
    2. 'm' → logprob: -1.15023934841156
    3. 'r' → logprob: -1.65023934841156
    4. 'b' → logprob: -4.02523946762085
    5. 'l' → logprob: -5.02523946762085
    6. '(m' → logprob: -5.77523946762085
    7. 'rl' → logprob: -7.15023946762085
    8. '[m' → logprob: -7.52523946762085
    9. 's' → logprob: -8.400238990783691
    10. '```' → logprob: -8.650238990783691

Token 749: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.24447713792324066
    2. '                   ' → logprob: -2.1194770336151123
    3. ')' → logprob: -2.3694770336151123
    4. ',' → logprob: -6.744477272033691
    5. '                       ' → logprob: -7.744477272033691
    6. '               ' → logprob: -8.119477272033691
    7. '```' → logprob: -8.119477272033691
    8. 'b' → logprob: -8.369477272033691
    9. '                           ' → logprob: -9.244477272033691
    10. '   ' → logprob: -9.369477272033691

Token 750: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.08405011892318726
    2. '```' → logprob: -2.584050178527832
    3. '``' → logprob: -6.459050178527832
    4. '[' → logprob: -7.334050178527832
    5. '   ' → logprob: -7.459050178527832
    6. '               ' → logprob: -7.584050178527832
    7. '<|end|>' → logprob: -7.834050178527832
    8. '.add' → logprob: -8.459050178527832
    9. '+' → logprob: -8.709050178527832
    10. '
' → logprob: -8.709050178527832

Token 751: ' book' (ID: 2392)
  Prédit: 'book'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'book' (adapté à ' book') → logprob: -0.0019326817709952593
    2. ' book' → logprob: -6.251932621002197
    3. '```' → logprob: -12.876933097839355
    4. '           ' → logprob: -14.751933097839355
    5. '                   ' → logprob: -14.876933097839355
    6. '	book' → logprob: -15.626933097839355
    7. '               ' → logprob: -15.751933097839355
    8. '
' → logprob: -16.00193214416504
    9. '   ' → logprob: -16.25193214416504
    10. '``' → logprob: -17.00193214416504

Token 752: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -2.45848218582978e-06
    2. 'pos' → logprob: -13.75000286102295
    3. '_p' → logprob: -14.62500286102295
    4. 'Pos' → logprob: -14.87500286102295
    5. '._' → logprob: -16.000001907348633
    6. '```' → logprob: -16.125001907348633
    7. '_positions' → logprob: -16.250001907348633
    8. '_POS' → logprob: -16.625001907348633
    9. ''_' → logprob: -17.375001907348633
    10. '_' → logprob: -18.250001907348633

Token 753: '[l' (ID: 38286)
  Prédit: '[l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -2.165027217415627e-05
    2. '[b' → logprob: -11.625021934509277
    3. 'l' → logprob: -11.875021934509277
    4. '[' → logprob: -12.375021934509277
    5. '```' → logprob: -13.875021934509277
    6. 'b' → logprob: -14.875021934509277
    7. '	l' → logprob: -16.75002098083496
    8. '[
' → logprob: -17.50002098083496
    9. ' [' → logprob: -18.00002098083496
    10. '\[' → logprob: -18.25002098083496

Token 754: 'ru' (ID: 1942)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.03015517070889473
    2. '[l' → logprob: -3.5301551818847656
    3. 'lur' → logprob: -9.030155181884766
    4. 'rl' → logprob: -9.655155181884766
    5. 'lu' → logprob: -10.030155181884766
    6. 'ru' → logprob: -10.530155181884766
    7. '```' → logprob: -10.780155181884766
    8. 'r' → logprob: -11.030155181884766
    9. ']' → logprob: -11.030155181884766
    10. ''l' → logprob: -11.155155181884766

Token 755: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06696522235870361
    2. '[b' → logprob: -3.566965103149414
    3. ']=' → logprob: -3.816965103149414
    4. '=' → logprob: -4.441965103149414
    5. '[l' → logprob: -6.066965103149414
    6. ' =' → logprob: -8.441965103149414
    7. '[' → logprob: -9.566965103149414
    8. 'b' → logprob: -9.941965103149414
    9. '=b' → logprob: -10.066965103149414
    10. '```' → logprob: -10.191965103149414

Token 756: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.000572094286326319
    2. ' =' → logprob: -7.500572204589844
    3. '=b' → logprob: -11.250572204589844
    4. '=m' → logprob: -12.125572204589844
    5. '[m' → logprob: -14.875572204589844
    6. '[b' → logprob: -15.250572204589844
    7. '[' → logprob: -17.000572204589844
    8. '=s' → logprob: -18.125572204589844
    9. '```' → logprob: -18.375572204589844
    10. 'b' → logprob: -18.375572204589844

Token 757: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0015023599844425917
    2. ' m' → logprob: -6.501502513885498
    3. '	m' → logprob: -21.626502990722656
    4. '   ' → logprob: -22.001502990722656
    5. '```' → logprob: -22.126502990722656
    6. '#m' → logprob: -23.626502990722656
    7. ')m' → logprob: -23.876502990722656
    8. '<m' → logprob: -24.126502990722656
    9. ' ' → logprob: -24.126502990722656
    10. '$m' → logprob: -24.251502990722656

Token 758: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.04395335540175438
    2. '
' → logprob: -3.2939534187316895
    3. '               ' → logprob: -5.5439534187316895
    4. '           ' → logprob: -6.5439534187316895
    5. '```' → logprob: -8.418952941894531
    6. '<|end|>' → logprob: -9.793952941894531
    7. '                       ' → logprob: -10.043952941894531
    8. '       ' → logprob: -10.043952941894531
    9. '                    
' → logprob: -10.293952941894531
    10. '                  ' → logprob: -10.418952941894531

Token 759: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.04174790903925896
    2. '               ' → logprob: -3.916747808456421
    3. '```' → logprob: -4.166748046875
    4. '           ' → logprob: -5.416748046875
    5. '       ' → logprob: -8.541748046875
    6. '   ' → logprob: -8.541748046875
    7. '
' → logprob: -8.666748046875
    8. '``' → logprob: -9.041748046875
    9. '                       ' → logprob: -9.541748046875
    10. '<|end|>' → logprob: -9.541748046875

Token 760: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' (adapté à ' cost') → logprob: -9.615255839889869e-05
    2. ' cost' → logprob: -9.250096321105957
    3. '```' → logprob: -17.37509536743164
    4. '
' → logprob: -19.00009536743164
    5. '(cost' → logprob: -20.50009536743164
    6. '           ' → logprob: -20.50009536743164
    7. '   ' → logprob: -20.62509536743164
    8. '                   ' → logprob: -20.62509536743164
    9. '       ' → logprob: -21.25009536743164
    10. 'c' → logprob: -21.25009536743164

Token 761: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.2519593834877014
    2. ' +=' → logprob: -1.5019593238830566
    3. '+' → logprob: -10.501959800720215
    4. ']+=' → logprob: -14.376959800720215
    5. '```' → logprob: -14.501959800720215
    6. '+="' → logprob: -14.501959800720215
    7. '+=(' → logprob: -15.001959800720215
    8. ' +' → logprob: -15.251959800720215
    9. '+='' → logprob: -15.251959800720215
    10. '=' → logprob: -16.1269588470459

Token 762: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.00029613598599098623
    2. ' m' → logprob: -8.125296592712402
    3. '   ' → logprob: -16.750295639038086
    4. '	m' → logprob: -17.500295639038086
    5. ' ' → logprob: -18.500295639038086
    6. '$m' → logprob: -18.750295639038086
    7. '0' → logprob: -19.250295639038086
    8. '```' → logprob: -19.625295639038086
    9. '
' → logprob: -20.000295639038086
    10. '[m' → logprob: -20.125295639038086

Token 763: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.9504606825648807e-05
    2. ' +' → logprob: -10.875019073486328
    3. '```' → logprob: -15.125019073486328
    4. ')+' → logprob: -16.750019073486328
    5. '()+' → logprob: -16.875019073486328
    6. '＋' → logprob: -17.250019073486328
    7. '<|end|>' → logprob: -17.250019073486328
    8. '+
' → logprob: -17.625019073486328
    9. ']+' → logprob: -17.750019073486328
    10. '}+' → logprob: -18.625019073486328

Token 764: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.75
    3. '```' → logprob: -17.625
    4. '0' → logprob: -18.0
    5. '+' → logprob: -18.375
    6. '۱' → logprob: -19.125
    7. '2' → logprob: -19.5
    8. '<|end|>' → logprob: -20.0625
    9. '
' → logprob: -20.1875
    10. '１' → logprob: -20.3125

Token 765: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 766: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 767: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005209682509303093
    2. '           ' → logprob: -6.505209445953369
    3. 'd' → logprob: -6.630209445953369
    4. '```' → logprob: -7.255209445953369
    5. '                
' → logprob: -7.630209445953369
    6. '              ' → logprob: -8.005209922790527
    7. '<|end|>' → logprob: -8.130209922790527
    8. '                ' → logprob: -8.755209922790527
    9. ')' → logprob: -9.505209922790527
    10. '            ' → logprob: -10.380209922790527

Token 768: ' take' (ID: 2304)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4795200526714325
    2. 'd' → logprob: -1.7295200824737549
    3. 'if' → logprob: -2.354520082473755
    4. '               ' → logprob: -2.729520082473755
    5. 'des' → logprob: -3.979520082473755
    6. 'requests' → logprob: -4.729519844055176
    7. '           ' → logprob: -4.854519844055176
    8. 'cost' → logprob: -5.729519844055176
    9. 'queue' → logprob: -6.729519844055176
    10. '       ' → logprob: -7.229519844055176

Token 769: ' requested' (ID: 17222)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.2900788486003876
    2. ' d' → logprob: -1.79007887840271
    3. '               ' → logprob: -3.54007887840271
    4. 'book' → logprob: -3.79007887840271
    5. '                   ' → logprob: -5.040078639984131
    6. 'b' → logprob: -5.040078639984131
    7. 'from' → logprob: -5.540078639984131
    8. ' book' → logprob: -5.915078639984131
    9. '#' → logprob: -5.915078639984131
    10. '           ' → logprob: -6.290078639984131

Token 770: ' book' (ID: 2392)
  Prédit: 'book'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'book' → logprob: -0.0064935581758618355
    2. ' book' → logprob: -5.13149356842041
    3. 'b' → logprob: -8.25649356842041
    4. 'books' → logprob: -8.38149356842041
    5. '_book' → logprob: -11.13149356842041
    6. '```' → logprob: -11.75649356842041
    7. '       ' → logprob: -11.88149356842041
    8. '#' → logprob: -11.88149356842041
    9. '	book' → logprob: -11.88149356842041
    10. ' 책' → logprob: -12.25649356842041

Token 771: ' back' (ID: 1602)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 772: ' from' (ID: 591)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3665546178817749
    2. '                   ' → logprob: -2.3665547370910645
    3. '.remove' → logprob: -2.7415547370910645
    4. '<|end|>' → logprob: -3.4915547370910645
    5. 'from' → logprob: -3.9915547370910645
    6. ' from' → logprob: -3.9915547370910645
    7. '           ' → logprob: -4.1165547370910645
    8. ' to' → logprob: -4.4915547370910645
    9. '[' → logprob: -4.8665547370910645
    10. ' and' → logprob: -4.9915547370910645

Token 773: ' its' (ID: 1617)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0729556530714035
    2. 'des' → logprob: -3.07295560836792
    3. 'd' → logprob: -4.44795560836792
    4. ' shelf' → logprob: -5.44795560836792
    5. 'm' → logprob: -5.69795560836792
    6. 'desk' → logprob: -5.82295560836792
    7. ' shelves' → logprob: -8.322956085205078
    8. 'placement' → logprob: -9.322956085205078
    9. ' desks' → logprob: -9.322956085205078
    10. 'the' → logprob: -9.510456085205078

Token 774: ' temporary' (ID: 23005)
  Prédit: 'temporary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'temporary' → logprob: -0.4288419485092163
    2. 'current' → logprob: -1.3038419485092163
    3. ' temporary' → logprob: -3.678842067718506
    4. ' current' → logprob: -3.678842067718506
    5. 'desk' → logprob: -4.928842067718506
    6. 'temp' → logprob: -4.928842067718506
    7. 'new' → logprob: -5.678842067718506
    8. 'tempor' → logprob: -5.928842067718506
    9. 'place' → logprob: -6.303842067718506
    10. ' desk' → logprob: -6.678842067718506

Token 775: ' place' (ID: 2475)
  Prédit: ' desk'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' desk' → logprob: -0.05596939101815224
    2. ' placement' → logprob: -3.805969476699829
    3. ' place' → logprob: -4.43096923828125
    4. ' location' → logprob: -4.93096923828125
    5. ' spot' → logprob: -4.93096923828125
    6. ' position' → logprob: -5.80596923828125
    7. ' space' → logprob: -6.80596923828125
    8. 'desk' → logprob: -7.55596923828125
    9. 'placement' → logprob: -7.80596923828125
    10. 'position' → logprob: -8.68096923828125

Token 776: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.053286176174879074
    2. '[' → logprob: -4.053286075592041
    3. '           ' → logprob: -4.678286075592041
    4. '                
' → logprob: -4.678286075592041
    5. '[
' → logprob: -6.053286075592041
    6. '(' → logprob: -6.303286075592041
    7. '                ' → logprob: -6.428286075592041
    8. '            
' → logprob: -6.553286075592041
    9. '<|end|>' → logprob: -6.803286075592041
    10. '                   ' → logprob: -7.178286075592041

Token 777: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.014094981364905834
    2. '                
' → logprob: -4.764094829559326
    3. '                   ' → logprob: -6.889094829559326
    4. '
' → logprob: -7.389094829559326
    5. '[' → logprob: -7.514094829559326
    6. '           ' → logprob: -7.639094829559326
    7. 'des' → logprob: -8.139095306396484
    8. '            
' → logprob: -8.139095306396484
    9. '                ' → logprob: -8.514095306396484
    10. '    
' → logprob: -8.514095306396484

Token 778: ' loc' (ID: 1539)
  Prédit: ' cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cost' → logprob: -1.212626576423645
    2. ' b' → logprob: -1.837626576423645
    3. ' desks' → logprob: -1.837626576423645
    4. ' for' → logprob: -2.2126264572143555
    5. ' 
' → logprob: -2.5876264572143555
    6. '               ' → logprob: -3.2126264572143555
    7. '                
' → logprob: -3.2126264572143555
    8. ' if' → logprob: -3.4626264572143555
    9. 'cost' → logprob: -4.7126264572143555
    10. 'b' → logprob: -4.7126264572143555

Token 779: '2' (ID: 17)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23456496000289917
    2. '=' → logprob: -1.609565019607544
    3. '[' → logprob: -5.234564781188965
    4. '[b' → logprob: -6.109564781188965
    5. '<|end|>' → logprob: -7.484564781188965
    6. '=b' → logprob: -7.609564781188965
    7. '[token' → logprob: -7.859564781188965
    8. '<|end|>' → logprob: -10.359564781188965
    9. 'b' → logprob: -11.109564781188965
    10. ' ' → logprob: -11.859564781188965

Token 780: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0549045130610466
    2. '=' → logprob: -2.9299044609069824
    3. ' ==' → logprob: -11.17990493774414
    4. '<|end|>' → logprob: -12.67990493774414
    5. ' ' → logprob: -13.30490493774414
    6. '==' → logprob: -13.67990493774414
    7. '[' → logprob: -14.55490493774414
    8. ')' → logprob: -14.80490493774414
    9. '=b' → logprob: -15.05490493774414
    10. '[token' → logprob: -15.30490493774414

Token 781: ' book' (ID: 2392)
  Prédit: 'book'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'book' → logprob: -0.0017112360801547766
    2. ' book' → logprob: -6.376711368560791
    3. 'b' → logprob: -11.751710891723633
    4. 'books' → logprob: -15.126710891723633
    5. '	book' → logprob: -15.626710891723633
    6. 'desk' → logprob: -16.001710891723633
    7. 'None' → logprob: -16.251710891723633
    8. '(book' → logprob: -16.626710891723633
    9. 'place' → logprob: -16.626710891723633
    10. ' ' → logprob: -16.876710891723633

Token 782: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -5.796184723294573e-06
    2. 'Pos' → logprob: -12.875005722045898
    3. 'pos' → logprob: -13.375005722045898
    4. '[pos' → logprob: -14.375005722045898
    5. '[' → logprob: -14.750005722045898
    6. '```' → logprob: -15.250005722045898
    7. '_' → logprob: -15.625005722045898
    8. '[_' → logprob: -16.2500057220459
    9. '_POS' → logprob: -17.3750057220459
    10. '_positions' → logprob: -17.3750057220459

Token 783: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.011056429706513882
    2. 'b' → logprob: -4.511056423187256
    3. '[' → logprob: -12.011056900024414
    4. '[
' → logprob: -14.136056900024414
    5. '	b' → logprob: -14.261056900024414
    6. ' [' → logprob: -15.386056900024414
    7. '(b' → logprob: -15.511056900024414
    8. '```' → logprob: -15.511056900024414
    9. '   ' → logprob: -15.886056900024414
    10. ' b' → logprob: -16.136056900024414

Token 784: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0929398462176323
    2. ']
' → logprob: -2.467939853668213
    3. ')' → logprob: -5.842939853668213
    4. ')
' → logprob: -7.217939853668213
    5. '                   ' → logprob: -9.467939376831055
    6. ' ]' → logprob: -9.592939376831055
    7. '               ' → logprob: -10.217939376831055
    8. ')]' → logprob: -10.217939376831055
    9. '<|end|>' → logprob: -10.342939376831055
    10. '])' → logprob: -10.967939376831055

Token 785: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007272591348737478
    2. '                
' → logprob: -5.757272720336914
    3. ' if' → logprob: -6.632272720336914
    4. '           ' → logprob: -7.257272720336914
    5. '[' → logprob: -7.382272720336914
    6. 'if' → logprob: -8.007272720336914
    7. 'des' → logprob: -8.257272720336914
    8. '            
' → logprob: -9.007272720336914
    9. '<|end|>' → logprob: -9.132272720336914
    10. '       ' → logprob: -9.257272720336914

Token 786: ' cost' (ID: 3097)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.37698227167129517
    2. '               ' → logprob: -2.0019822120666504
    3. ' if' → logprob: -2.1269822120666504
    4. 'if' → logprob: -3.7519822120666504
    5. ' desks' → logprob: -4.25198221206665
    6. ' des' → logprob: -4.62698221206665
    7. '                
' → logprob: -4.75198221206665
    8. '                   ' → logprob: -7.25198221206665
    9. '           ' → logprob: -7.75198221206665
    10. 'cost' (adapté à ' cost') → logprob: -7.87698221206665

Token 787: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.08381116390228271
    2. '+=' → logprob: -2.5838112831115723
    3. ' -=' → logprob: -5.333811283111572
    4. '-=' → logprob: -9.958810806274414
    5. '+' → logprob: -11.083810806274414
    6. '-' → logprob: -11.833810806274414
    7. '+=(' → logprob: -12.333810806274414
    8. ' +' → logprob: -12.833810806274414
    9. ' -' → logprob: -13.333810806274414
    10. '   ' → logprob: -13.708810806274414

Token 788: ' loc' (ID: 1539)
  Prédit: 'loc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'loc' → logprob: -0.023284848779439926
    2. ' loc' → logprob: -3.773284912109375
    3. '(loc' → logprob: -10.148284912109375
    4. '	loc' → logprob: -16.273284912109375
    5. '.loc' → logprob: -17.148284912109375
    6. 'abs' → logprob: -17.398284912109375
    7. '1' → logprob: -18.148284912109375
    8. ' (' → logprob: -18.148284912109375
    9. '_loc' → logprob: -18.148284912109375
    10. '(' → logprob: -18.398284912109375

Token 789: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -14.250000953674316
    3. '۲' → logprob: -16.625001907348633
    4. '₂' → logprob: -16.750001907348633
    5. '[' → logprob: -17.500001907348633
    6. '_' → logprob: -17.500001907348633
    7. '<|end|>' → logprob: -17.500001907348633
    8. '```' → logprob: -18.000001907348633
    9. '+' → logprob: -18.375001907348633
    10. '_token' → logprob: -18.500001907348633

Token 790: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.003618720220401883
    2. ' +' → logprob: -5.6286187171936035
    3. '()+' → logprob: -11.628619194030762
    4. ')+' → logprob: -12.503619194030762
    5. '```' → logprob: -13.753619194030762
    6. '   ' → logprob: -14.128619194030762
    7. ']+' → logprob: -14.128619194030762
    8. '<|end|>' → logprob: -14.503619194030762
    9. ''+' → logprob: -14.628619194030762
    10. '+
' → logprob: -14.878619194030762

Token 791: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.676981345459353e-06
    2. ' ' → logprob: -12.125005722045898
    3. '```' → logprob: -15.250005722045898
    4. '   ' → logprob: -18.3750057220459
    5. '2' → logprob: -18.5000057220459
    6. '+' → logprob: -18.5000057220459
    7. '<|end|>' → logprob: -18.8750057220459
    8. '0' → logprob: -19.3750057220459
    9. '`' → logprob: -19.5000057220459
    10. '(' → logprob: -20.2500057220459

Token 792: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008735361509025097
    2. '                
' → logprob: -5.508735179901123
    3. '           ' → logprob: -5.883735179901123
    4. 'des' → logprob: -7.758735179901123
    5. '            
' → logprob: -8.133735656738281
    6. '
' → logprob: -8.258735656738281
    7. ' if' → logprob: -8.758735656738281
    8. ' desks' → logprob: -9.008735656738281
    9. '			' → logprob: -9.133735656738281
    10. '<|end|>' → logprob: -9.383735656738281

Token 793: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.16291376948356628
    2. '           ' → logprob: -2.0379137992858887
    3. '                
' → logprob: -5.162913799285889
    4. '                   ' → logprob: -5.412913799285889
    5. '            
' → logprob: -5.912913799285889
    6. '       ' → logprob: -6.037913799285889
    7. '
' → logprob: -6.662913799285889
    8. '```' → logprob: -7.787913799285889
    9. '[' → logprob: -8.28791332244873
    10. '    
' → logprob: -8.41291332244873

Token 794: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8287882804870605
    2. 'd' → logprob: -1.0787882804870605
    3. 'des' → logprob: -1.7037882804870605
    4. '           ' → logprob: -3.3287882804870605
    5. 'if' (adapté à ' if') → logprob: -6.0787882804870605
    6. '```' → logprob: -6.8287882804870605
    7. ' desks' → logprob: -7.2037882804870605
    8. '#' → logprob: -8.328788757324219
    9. '                
' → logprob: -8.703788757324219
    10. 'desk' → logprob: -8.828788757324219

Token 795: ' loc' (ID: 1539)
  Prédit: 'loc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'loc' → logprob: -0.0011749862460419536
    2. ' loc' → logprob: -6.7511749267578125
    3. '(loc' → logprob: -13.126174926757812
    4. 'book' → logprob: -13.876174926757812
    5. '   ' → logprob: -14.376174926757812
    6. '	loc' → logprob: -14.501174926757812
    7. ' ' → logprob: -15.376174926757812
    8. '  ' → logprob: -15.751174926757812
    9. 'b' → logprob: -16.501174926757812
    10. '    ' → logprob: -16.626174926757812

Token 796: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.747814349073451e-05
    2. '==' → logprob: -11.375017166137695
    3. ' ==' → logprob: -12.750017166137695
    4. '```' → logprob: -13.500017166137695
    5. '!=' → logprob: -14.000017166137695
    6. ' !=' → logprob: -15.125017166137695
    7. ' ' → logprob: -16.250017166137695
    8. '۲' → logprob: -16.375017166137695
    9. '[' → logprob: -16.625017166137695
    10. '₂' → logprob: -17.125017166137695

Token 797: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.8330683708190918
    2. ' ==' → logprob: -1.0830683708190918
    3. ' !=' → logprob: -1.8330683708190918
    4. '!=' → logprob: -2.708068370819092
    5. '<' → logprob: -10.45806884765625
    6. ' <' → logprob: -10.70806884765625
    7. '	' → logprob: -10.95806884765625
    8. '>' → logprob: -11.20806884765625
    9. ' ' → logprob: -11.58306884765625
    10. '   ' → logprob: -12.33306884765625

Token 798: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0005367091507650912
    2. '0' → logprob: -7.625536918640137
    3. ' m' → logprob: -10.000536918640137
    4. '   ' → logprob: -13.375536918640137
    5. ' ' → logprob: -14.375536918640137
    6. '	m' → logprob: -14.375536918640137
    7. '    ' → logprob: -16.12553596496582
    8. '[m' → logprob: -16.50053596496582
    9. '(m' → logprob: -16.75053596496582
    10. '$m' → logprob: -17.18803596496582

Token 799: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07907110452651978
    2. ':
' → logprob: -2.579071044921875
    3. '<|end|>' → logprob: -9.954071044921875
    4. '               ' → logprob: -10.579071044921875
    5. ':s' → logprob: -11.079071044921875
    6. '       ' → logprob: -11.204071044921875
    7. '):
' → logprob: -11.204071044921875
    8. '                   ' → logprob: -11.329071044921875
    9. '==' → logprob: -11.454071044921875
    10. '   ' → logprob: -12.204071044921875

Token 800: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0017675277777016163
    2. '               ' → logprob: -6.751767635345459
    3. 's' → logprob: -8.5017671585083
    4. '                       ' → logprob: -8.5017671585083
    5. '           ' → logprob: -9.2517671585083
    6. '   ' → logprob: -10.3767671585083
    7. '```' → logprob: -10.8767671585083
    8. '                  ' → logprob: -11.6267671585083
    9. '                           ' → logprob: -11.7517671585083
    10. '       ' → logprob: -12.2517671585083

Token 801: ' shelf' (ID: 40978)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.034950338304042816
    2. ' shelf' → logprob: -3.4099502563476562
    3. '                   ' → logprob: -7.409950256347656
    4. '   ' → logprob: -7.409950256347656
    5. '               ' → logprob: -10.034950256347656
    6. '       ' → logprob: -11.409950256347656
    7. '                       ' → logprob: -12.034950256347656
    8. '           ' → logprob: -12.034950256347656
    9. '```' → logprob: -12.034950256347656
    10. 'Shelf' → logprob: -12.534950256347656

Token 802: '.remove' (ID: 7986)
  Prédit: '.remove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.remove' → logprob: -0.0012322536204010248
    2. '.' → logprob: -7.251232147216797
    3. '.add' → logprob: -7.626232147216797
    4. 'remove' → logprob: -10.376232147216797
    5. '.dis' → logprob: -13.251232147216797
    6. ' .' → logprob: -13.626232147216797
    7. '   ' → logprob: -14.876232147216797
    8. ' remove' → logprob: -16.626232147216797
    9. '.clear' → logprob: -17.501232147216797
    10. '                   ' → logprob: -17.751232147216797

Token 803: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -6.2729995988775045e-06
    2. 'b' → logprob: -12.500006675720215
    3. '(' → logprob: -13.125006675720215
    4. ' (' → logprob: -14.625006675720215
    5. ' b' → logprob: -16.6250057220459
    6. '                   ' → logprob: -18.7500057220459
    7. '[b' → logprob: -19.3750057220459
    8. '(
' → logprob: -19.8750057220459
    9. '               ' → logprob: -19.8750057220459
    10. '   ' → logprob: -20.3750057220459

Token 804: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5763702392578125
    2. ')' → logprob: -0.8263702392578125
    3. '                   ' → logprob: -8.451370239257812
    4. '               ' → logprob: -8.701370239257812
    5. ')
' → logprob: -11.076370239257812
    6. '()' → logprob: -12.076370239257812
    7. '   ' → logprob: -12.326370239257812
    8. '       ' → logprob: -12.451370239257812
    9. ')

' → logprob: -12.576370239257812
    10. '())
' → logprob: -12.701370239257812

Token 805: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.9891746044158936
    2. '                   ' → logprob: -1.1141746044158936
    3. 'des' → logprob: -1.9891746044158936
    4. '```' → logprob: -2.9891746044158936
    5. '                
' → logprob: -3.4891746044158936
    6. ' desks' → logprob: -3.9891746044158936
    7. '<|end|>' → logprob: -4.739174842834473
    8. '                    
' → logprob: -4.864174842834473
    9. '[' → logprob: -5.114174842834473
    10. '                       ' → logprob: -5.114174842834473

Token 806: ' else' (ID: 1203)
  Prédit: ' desks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' desks' → logprob: -0.642488420009613
    2. 'des' → logprob: -1.5174884796142578
    3. '               ' → logprob: -1.6424884796142578
    4. 'else' (adapté à ' else') → logprob: -3.392488479614258
    5. '```' → logprob: -4.392488479614258
    6. '                   ' → logprob: -4.892488479614258
    7. ' else' → logprob: -5.892488479614258
    8. '``' → logprob: -6.892488479614258
    9. ' des' → logprob: -6.892488479614258
    10. '           ' → logprob: -7.392488479614258

Token 807: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.10252372920513153
    2. '               ' → logprob: -3.3525238037109375
    3. ':
' → logprob: -3.6025238037109375
    4. ':' → logprob: -3.9775238037109375
    5. '                       ' → logprob: -4.4775238037109375
    6. '   ' → logprob: -6.4775238037109375
    7. ' desks' → logprob: -6.6025238037109375
    8. ' des' → logprob: -7.8525238037109375
    9. 'des' → logprob: -7.8525238037109375
    10. '           ' → logprob: -8.227523803710938

Token 808: '                   ' (ID: 699)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.007384543307125568
    2. ' desks' → logprob: -5.382384777069092
    3. '               ' → logprob: -6.132384777069092
    4. '                   ' → logprob: -7.757384777069092
    5. '   ' → logprob: -9.382384300231934
    6. '           ' → logprob: -10.382384300231934
    7. ' des' → logprob: -10.757384300231934
    8. '```' → logprob: -11.632384300231934
    9. 'desk' → logprob: -12.132384300231934
    10. '                       ' → logprob: -13.007384300231934

Token 809: ' desks' (ID: 109910)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'des' → logprob: -4.692145012086257e-05
    2. ' desks' → logprob: -10.000046730041504
    3. '   ' → logprob: -14.000046730041504
    4. 'desk' → logprob: -14.875046730041504
    5. 'de' → logprob: -16.62504768371582
    6. '           ' → logprob: -17.37504768371582
    7. '               ' → logprob: -17.50004768371582
    8. ' ' → logprob: -17.75004768371582
    9. '       ' → logprob: -17.75004768371582
    10. ' des' → logprob: -18.25004768371582

Token 810: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: 0.0
    2. '```' → logprob: -17.75
    3. ' [' → logprob: -18.875
    4. '   ' → logprob: -19.0
    5. '[
' → logprob: -19.25
    6. '               ' → logprob: -19.625
    7. '       ' → logprob: -19.875
    8. 'loc' → logprob: -20.0
    9. '           ' → logprob: -20.875
    10. '(loc' → logprob: -21.0

Token 811: 'loc' (ID: 9453)
  Prédit: 'loc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'loc' → logprob: -1.8789383830153383e-05
    2. ' loc' → logprob: -11.000019073486328
    3. '[' → logprob: -13.250019073486328
    4. '(loc' → logprob: -15.500019073486328
    5. '	loc' → logprob: -17.875019073486328
    6. '.loc' → logprob: -19.375019073486328
    7. '_loc' → logprob: -20.000019073486328
    8. '```' → logprob: -20.750019073486328
    9. 'LOC' → logprob: -21.250019073486328
    10. '0' → logprob: -21.250019073486328

Token 812: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00024358915106859058
    2. '[' → logprob: -8.375243186950684
    3. '```' → logprob: -11.750243186950684
    4. '[b' → logprob: -12.875243186950684
    5. ']' → logprob: -13.375243186950684
    6. '_' → logprob: -15.000243186950684
    7. '_loc' → logprob: -16.000244140625
    8. '][' → logprob: -16.125244140625
    9. 'loc' → logprob: -16.125244140625
    10. '₂' → logprob: -16.875244140625

Token 813: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.06260500848293304
    2. '.remove' → logprob: -2.8126049041748047
    3. ').' → logprob: -8.062604904174805
    4. '.' → logprob: -8.312604904174805
    5. ' ].' → logprob: -10.562604904174805
    6. ']' → logprob: -10.937604904174805
    7. ' .' → logprob: -12.062604904174805
    8. 'remove' → logprob: -12.062604904174805
    9. '}.' → logprob: -12.187604904174805
    10. '[' → logprob: -12.187604904174805

Token 814: 'remove' (ID: 4942)
  Prédit: 'remove'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remove' → logprob: -5.512236498361744e-07
    2. ' remove' → logprob: -15.125000953674316
    3. '.remove' → logprob: -15.375000953674316
    4. 'pop' → logprob: -17.875
    5. '	remove' → logprob: -18.5
    6. '(remove' → logprob: -20.0
    7. '_remove' → logprob: -21.125
    8. '   ' → logprob: -21.25
    9. 'rem' → logprob: -21.5
    10. ' ' → logprob: -22.25

Token 815: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -7.896309739408025e-07
    2. '(' → logprob: -14.250000953674316
    3. ' (' → logprob: -17.0
    4. 'b' → logprob: -18.375
    5. '(
' → logprob: -20.0
    6. '(B' → logprob: -21.0
    7. '[b' → logprob: -21.25
    8. '(a' → logprob: -23.125
    9. '```' → logprob: -23.375
    10. '(book' → logprob: -23.625

Token 816: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3872125446796417
    2. ')' → logprob: -1.1372125148773193
    3. '[b' → logprob: -9.012212753295898
    4. '[' → logprob: -9.887212753295898
    5. ')b' → logprob: -9.887212753295898
    6. ')
' → logprob: -10.262212753295898
    7. '               ' → logprob: -10.512212753295898
    8. 'b' → logprob: -11.137212753295898
    9. '```' → logprob: -11.637212753295898
    10. ')

' → logprob: -11.637212753295898

Token 817: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09512059390544891
    2. 'des' → logprob: -2.720120668411255
    3. '```' → logprob: -4.220120429992676
    4. '                   ' → logprob: -5.095120429992676
    5. '           ' → logprob: -6.095120429992676
    6. ' desks' → logprob: -6.595120429992676
    7. '       ' → logprob: -9.470120429992676
    8. '                
' → logprob: -9.595120429992676
    9. '``' → logprob: -9.720120429992676
    10. '              ' → logprob: -9.845120429992676

Token 818: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7249143719673157
    2. 'des' → logprob: -0.7249143719673157
    3. ' desks' → logprob: -4.09991455078125
    4. '                   ' → logprob: -4.47491455078125
    5. '```' → logprob: -6.72491455078125
    6. '           ' → logprob: -7.09991455078125
    7. ' des' → logprob: -7.47491455078125
    8. '                
' → logprob: -8.22491455078125
    9. '       ' → logprob: -9.34991455078125
    10. '                ' → logprob: -9.72491455078125

Token 819: ' put' (ID: 3006)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.0001490716531407088
    2. '               ' → logprob: -9.12514877319336
    3. ' desks' → logprob: -10.87514877319336
    4. '           ' → logprob: -11.50014877319336
    5. '#' → logprob: -11.87514877319336
    6. '       ' → logprob: -14.00014877319336
    7. 'cost' → logprob: -14.12514877319336
    8. '                   ' → logprob: -14.25014877319336
    9. 'desk' → logprob: -14.62514877319336
    10. '```' → logprob: -15.37514877319336

Token 820: ' requested' (ID: 17222)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.13136906921863556
    2. '(b' → logprob: -2.256369113922119
    3. 'book' → logprob: -5.256369113922119
    4. '(des' → logprob: -5.381369113922119
    5. 'b' → logprob: -5.881369113922119
    6. ' des' → logprob: -6.381369113922119
    7. 'books' → logprob: -6.881369113922119
    8. ' book' → logprob: -7.006369113922119
    9. '(book' → logprob: -7.381369113922119
    10. ' desks' → logprob: -8.006368637084961

Token 821: ' book' (ID: 2392)
  Prédit: ' book'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' book' → logprob: -1.0807844400405884
    2. '(b' → logprob: -1.0807844400405884
    3. ' on' → logprob: -1.9557844400405884
    4. 'book' → logprob: -2.330784320831299
    5. ' (' → logprob: -3.080784320831299
    6. '(book' → logprob: -4.080784320831299
    7. '(' → logprob: -4.955784320831299
    8. 'on' → logprob: -5.705784320831299
    9. 'b' → logprob: -5.955784320831299
    10. ' b' → logprob: -6.080784320831299

Token 822: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.3153148293495178
    2. 'on' → logprob: -1.315314769744873
    3. '(' → logprob: -6.940314769744873
    4. '[' → logprob: -8.065315246582031
    5. ')' → logprob: -9.315315246582031
    6. '.' → logprob: -9.315315246582031
    7. '```' → logprob: -9.315315246582031
    8. 'des' → logprob: -9.440315246582031
    9. '.on' → logprob: -10.065315246582031
    10. '               ' → logprob: -10.315315246582031

Token 823: ' D' (ID: 415)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.013190701603889465
    2. '0' → logprob: -4.763190746307373
    3. ' desks' → logprob: -5.513190746307373
    4. ' des' → logprob: -8.513190269470215
    5. '[' → logprob: -8.513190269470215
    6. ' ' → logprob: -10.263190269470215
    7. '(' → logprob: -10.763190269470215
    8. '```' → logprob: -10.888190269470215
    9. 'Des' → logprob: -11.013190269470215
    10. 'desk' → logprob: -11.638190269470215

Token 824: '1' (ID: 16)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5116440057754517
    2. 'es' → logprob: -1.0116440057754517
    3. '0' → logprob: -3.886643886566162
    4. '1' → logprob: -4.261643886566162
    5. 'esk' → logprob: -6.261643886566162
    6. '(' → logprob: -9.51164436340332
    7. 'eks' → logprob: -9.76164436340332
    8. 'esc' → logprob: -10.26164436340332
    9. '```' → logprob: -10.26164436340332
    10. 'des' → logprob: -10.51164436340332

Token 825: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.015233521349728107
    2. '[' → logprob: -4.265233516693115
    3. 'des' → logprob: -7.640233516693115
    4. '.' → logprob: -8.640233993530273
    5. '                   ' → logprob: -9.015233993530273
    6. '                
' → logprob: -9.640233993530273
    7. '           ' → logprob: -9.640233993530273
    8. '.append' → logprob: -10.015233993530273
    9. '```' → logprob: -10.015233993530273
    10. '                ' → logprob: -10.890233993530273

Token 826: '               ' (ID: 506)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3958694636821747
    2. 'des' → logprob: -1.395869493484497
    3. '```' → logprob: -2.895869493484497
    4. '[
' → logprob: -5.520869255065918
    5. '(
' → logprob: -5.520869255065918
    6. '(' → logprob: -5.770869255065918
    7. '.' → logprob: -6.145869255065918
    8. '[]' → logprob: -6.270869255065918
    9. '               ' → logprob: -6.270869255065918
    10. '``' → logprob: -6.520869255065918

Token 827: ' desks' (ID: 109910)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.025980938225984573
    2. '               ' → logprob: -3.9009809494018555
    3. ' desks' → logprob: -5.4009809494018555
    4. '           ' → logprob: -8.025980949401855
    5. '```' → logprob: -8.025980949401855
    6. ' des' → logprob: -9.650980949401855
    7. '[' → logprob: -9.775980949401855
    8. '       ' → logprob: -10.025980949401855
    9. 'desk' → logprob: -10.025980949401855
    10. '``' → logprob: -10.900980949401855

Token 828: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.45848218582978e-06
    2. '```' → logprob: -13.00000286102295
    3. '\[' → logprob: -16.750001907348633
    4. '0' → logprob: -17.750001907348633
    5. '[
' → logprob: -18.125001907348633
    6. '   ' → logprob: -19.000001907348633
    7. '﻿' → logprob: -19.750001907348633
    8. ' [' → logprob: -19.750001907348633
    9. '][' → logprob: -19.875001907348633
    10. '``' → logprob: -20.000001907348633

Token 829: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00014025058771949261
    2. '[' → logprob: -8.875140190124512
    3. '```' → logprob: -15.625140190124512
    4. ' ' → logprob: -16.500141143798828
    5. '   ' → logprob: -18.250141143798828
    6. '(' → logprob: -18.625141143798828
    7. '`' → logprob: -19.000141143798828
    8. '``' → logprob: -19.750141143798828
    9. '０' → logprob: -20.687641143798828
    10. '[
' → logprob: -20.812641143798828

Token 830: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.12843622267246246
    2. ').' → logprob: -2.878436326980591
    3. '.' → logprob: -3.378436326980591
    4. '.append' → logprob: -3.503436326980591
    5. '   ' → logprob: -10.628436088562012
    6. '           ' → logprob: -10.878436088562012
    7. ' .' → logprob: -11.253436088562012
    8. ']' → logprob: -11.253436088562012
    9. '```' → logprob: -11.503436088562012
    10. '}.' → logprob: -11.628436088562012

Token 831: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -4.320199877838604e-07
    2. '.append' → logprob: -15.0
    3. ' append' → logprob: -18.25
    4. 'app' → logprob: -19.375
    5. 'appen' → logprob: -20.625
    6. 'add' → logprob: -22.125
    7. 'Append' → logprob: -22.375
    8. '_append' → logprob: -22.5
    9. '	append' → logprob: -22.625
    10. 'insert' → logprob: -22.875

Token 832: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -1.8074162653647363e-05
    2. '(' → logprob: -11.125018119812012
    3. 'b' → logprob: -12.625018119812012
    4. '(
' → logprob: -17.750017166137695
    5. ' (' → logprob: -18.000017166137695
    6. '```' → logprob: -19.000017166137695
    7. '(B' → logprob: -19.750017166137695
    8. ' b' → logprob: -20.250017166137695
    9. '[b' → logprob: -20.375017166137695
    10. '	b' → logprob: -20.625017166137695

Token 833: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2014310657978058
    2. ')' → logprob: -1.7014310359954834
    3. ')
' → logprob: -11.326431274414062
    4. '               ' → logprob: -12.576431274414062
    5. ')

' → logprob: -14.576431274414062
    6. ' )
' → logprob: -14.826431274414062
    7. '<|end|>' → logprob: -15.076431274414062
    8. '```' → logprob: -15.451431274414062
    9. '                   ' → logprob: -15.701431274414062
    10. '           ' → logprob: -15.701431274414062

Token 834: '               ' (ID: 506)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03116770088672638
    2. '```' → logprob: -4.406167507171631
    3. '               ' → logprob: -4.906167507171631
    4. '<|end|>' → logprob: -5.281167507171631
    5. '[
' → logprob: -5.906167507171631
    6. ' 
' → logprob: -7.281167507171631
    7. '           ' → logprob: -7.906167507171631
    8. '       ' → logprob: -8.031167984008789
    9. '``' → logprob: -8.156167984008789
    10. ')' → logprob: -8.281167984008789

Token 835: ' book' (ID: 2392)
  Prédit: 'book'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'book' (adapté à ' book') → logprob: -0.001730391290038824
    2. ' book' → logprob: -6.376730442047119
    3. '```' → logprob: -10.751729965209961
    4. 'cost' → logprob: -13.001729965209961
    5. '   ' → logprob: -13.251729965209961
    6. '               ' → logprob: -14.001729965209961
    7. '           ' → logprob: -14.126729965209961
    8. 'job' → logprob: -15.251729965209961
    9. '``' → logprob: -15.376729965209961
    10. '`' → logprob: -15.876729965209961

Token 836: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -1.3856492842023727e-06
    2. '_positions' → logprob: -14.000000953674316
    3. '[' → logprob: -15.375000953674316
    4. '_' → logprob: -15.875000953674316
    5. 'pos' → logprob: -16.125001907348633
    6. 'Pos' → logprob: -17.000001907348633
    7. '```' → logprob: -17.750001907348633
    8. 's' → logprob: -18.500001907348633
    9. '_position' → logprob: -18.875001907348633
    10. '_POS' → logprob: -18.875001907348633

Token 837: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -1.2664456789934775e-06
    2. 'b' → logprob: -13.750000953674316
    3. '```' → logprob: -15.750000953674316
    4. '[' → logprob: -18.250001907348633
    5. '\[' → logprob: -18.875001907348633
    6. '[B' → logprob: -19.750001907348633
    7. ' [' → logprob: -20.500001907348633
    8. '   ' → logprob: -20.625001907348633
    9. '\b' → logprob: -20.875001907348633
    10. '[
' → logprob: -21.125001907348633

Token 838: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001844625105150044
    2. ']=' → logprob: -6.50184440612793
    3. '=' → logprob: -8.00184440612793
    4. '[' → logprob: -12.50184440612793
    5. ' ]' → logprob: -13.00184440612793
    6. ' =' → logprob: -13.75184440612793
    7. '```' → logprob: -16.12684440612793
    8. ')' → logprob: -16.25184440612793
    9. '`]' → logprob: -16.75184440612793
    10. 'b' → logprob: -17.12684440612793

Token 839: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00941486470401287
    2. ' =' → logprob: -4.7594146728515625
    3. '[' → logprob: -7.1344146728515625
    4. '=b' → logprob: -13.384414672851562
    5. ']=' → logprob: -15.009414672851562
    6. ']' → logprob: -15.259414672851562
    7. '[b' → logprob: -15.509414672851562
    8. '```' → logprob: -15.509414672851562
    9. 'b' → logprob: -15.759414672851562
    10. '=
' → logprob: -16.384414672851562

Token 840: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.493430894101039e-05
    2. ' ' → logprob: -9.500075340270996
    3. '```' → logprob: -18.75007438659668
    4. '۰' → logprob: -19.12507438659668
    5. '   ' → logprob: -19.37507438659668
    6. '[' → logprob: -19.62507438659668
    7. '`' → logprob: -20.56257438659668
    8. '０' → logprob: -20.75007438659668
    9. '  ' → logprob: -21.62507438659668
    10. ' ' → logprob: -21.87507438659668

Token 841: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.5
    3. '۰' → logprob: -20.0
    4. '```' → logprob: -20.125
    5. '   ' → logprob: -20.75
    6. '[' → logprob: -20.75
    7. '０' → logprob: -21.375
    8. '1' → logprob: -21.8125
    9. 'def' → logprob: -22.5
    10. '০' → logprob: -22.625

Token 842: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2183249145746231
    2. '```' → logprob: -2.343324899673462
    3. '<|end|>' → logprob: -3.468324899673462
    4. '               ' → logprob: -3.593324899673462
    5. '   ' → logprob: -4.718325138092041
    6. ' 
' → logprob: -4.843325138092041
    7. '           ' → logprob: -5.093325138092041
    8. '[' → logprob: -5.468325138092041
    9. '  
' → logprob: -5.968325138092041
    10. '``' → logprob: -6.343325138092041

Token 843: '               ' (ID: 506)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.5915025472640991
    2. '               ' → logprob: -1.7165025472640991
    3. '
' → logprob: -1.8415025472640991
    4. '<|end|>' → logprob: -3.3415026664733887
    5. '           ' → logprob: -3.7165026664733887
    6. '[' → logprob: -4.591502666473389
    7. ' 
' → logprob: -4.966502666473389
    8. '``' → logprob: -5.216502666473389
    9. '            
' → logprob: -5.841502666473389
    10. '   ' → logprob: -5.966502666473389

Token 844: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' (adapté à ' cost') → logprob: -0.3580373227596283
    2. ' cost' → logprob: -1.2330373525619507
    3. '```' → logprob: -4.85803747177124
    4. '
' → logprob: -6.98303747177124
    5. '               ' → logprob: -7.98303747177124
    6. '``' → logprob: -9.358036994934082
    7. '           ' → logprob: -9.483036994934082
    8. '                   ' → logprob: -9.483036994934082
    9. ' 
' → logprob: -9.608036994934082
    10. '            
' → logprob: -10.358036994934082

Token 845: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.0619802325963974
    2. '+=' → logprob: -2.8119802474975586
    3. '+' → logprob: -11.811980247497559
    4. ']+=' → logprob: -12.686980247497559
    5. '+='' → logprob: -14.436980247497559
    6. ' +' → logprob: -15.061980247497559
    7. '+="' → logprob: -15.311980247497559
    8. '   ' → logprob: -15.436980247497559
    9. '```' → logprob: -15.561980247497559
    10. '[' → logprob: -15.811980247497559

Token 846: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.375001907348633
    3. '```' → logprob: -16.750001907348633
    4. '   ' → logprob: -18.375001907348633
    5. '+' → logprob: -19.125001907348633
    6. '2' → logprob: -19.250001907348633
    7. '0' → logprob: -19.375001907348633
    8. '<|end|>' → logprob: -20.062501907348633
    9. '۱' → logprob: -20.187501907348633
    10. '`' → logprob: -20.500001907348633

Token 847: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '```' → logprob: -17.625
    4. '2' → logprob: -18.0
    5. '   ' → logprob: -18.875
    6. '۱' → logprob: -19.25
    7. '+' → logprob: -20.0625
    8. '１' → logprob: -20.0625
    9. '' → logprob: -20.125
    10. '0' → logprob: -20.125

Token 848: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007495766505599022
    2. '           ' → logprob: -5.632495880126953
    3. '
' → logprob: -6.132495880126953
    4. '       ' → logprob: -6.882495880126953
    5. 'd' → logprob: -8.757495880126953
    6. '                
' → logprob: -9.257495880126953
    7. '   ' → logprob: -9.382495880126953
    8. '```' → logprob: -9.382495880126953
    9. '              ' → logprob: -9.882495880126953
    10. '<|end|>' → logprob: -9.882495880126953

Token 849: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006123363971710205
    2. '           ' → logprob: -5.2561235427856445
    3. '       ' → logprob: -8.006123542785645
    4. '                
' → logprob: -8.131123542785645
    5. '                   ' → logprob: -9.881123542785645
    6. '
' → logprob: -10.256123542785645
    7. '```' → logprob: -10.381123542785645
    8. '              ' → logprob: -10.381123542785645
    9. '   ' → logprob: -10.756123542785645
    10. '			' → logprob: -10.881123542785645

Token 850: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.07303864508867264
    2. 'd' → logprob: -3.5730385780334473
    3. '               ' → logprob: -3.6980385780334473
    4. ' if' → logprob: -4.073038578033447
    5. '```' → logprob: -8.198039054870605
    6. '#' (adapté à ' #') → logprob: -9.073039054870605
    7. ' d' → logprob: -9.573039054870605
    8. '           ' → logprob: -10.073039054870605
    9. '   ' → logprob: -10.448039054870605
    10. '                   ' → logprob: -11.073039054870605

Token 851: ' update' (ID: 4027)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06239750608801842
    2. '#' → logprob: -3.5623974800109863
    3. '               ' → logprob: -3.6873974800109863
    4. 'd' → logprob: -5.562397480010986
    5. ' if' → logprob: -5.812397480010986
    6. ' #' → logprob: -9.062397956848145
    7. '           ' → logprob: -9.562397956848145
    8. '                   ' → logprob: -10.812397956848145
    9. '
' → logprob: -11.437397956848145
    10. '   ' → logprob: -11.437397956848145

Token 852: ' usage' (ID: 16622)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.13405951857566833
    2. ' d' → logprob: -2.134059429168701
    3. 'usage' → logprob: -5.634059429168701
    4. ' usage' → logprob: -5.884059429168701
    5. '   ' → logprob: -7.509059429168701
    6. '_usage' → logprob: -10.00905990600586
    7. '           ' → logprob: -10.13405990600586
    8. '       ' → logprob: -10.38405990600586
    9. '               ' → logprob: -10.88405990600586
    10. 'if' → logprob: -11.25905990600586

Token 853: ' list' (ID: 1562)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16752059757709503
    2. '               ' → logprob: -2.417520523071289
    3. ' for' → logprob: -3.292520523071289
    4. '           ' → logprob: -3.917520523071289
    5. '   ' → logprob: -5.792520523071289
    6. '       ' → logprob: -6.042520523071289
    7. '                   ' → logprob: -7.042520523071289
    8. '```' → logprob: -7.667520523071289
    9. '_for' → logprob: -8.167520523071289
    10. 'd' → logprob: -8.542520523071289

Token 854: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -9.341087570646778e-05
    2. 'd' → logprob: -10.250093460083008
    3. '           ' → logprob: -10.750093460083008
    4. ' d' → logprob: -11.250093460083008
    5. '                
' → logprob: -11.500093460083008
    6. '       ' → logprob: -12.375093460083008
    7. '                   ' → logprob: -13.000093460083008
    8. '
' → logprob: -13.375093460083008
    9. '              ' → logprob: -13.500093460083008
    10. '```' → logprob: -13.750093460083008

Token 855: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00015598179015796632
    2. '           ' → logprob: -10.12515640258789
    3. 'if' → logprob: -10.12515640258789
    4. 'd' → logprob: -10.37515640258789
    5. ' if' → logprob: -10.62515640258789
    6. '       ' → logprob: -12.12515640258789
    7. 'for' → logprob: -12.25015640258789
    8. '                   ' → logprob: -12.75015640258789
    9. '   ' → logprob: -12.87515640258789
    10. ' d' → logprob: -13.00015640258789

Token 856: ' d' (ID: 272)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.23287327587604523
    2. 'd' (adapté à ' d') → logprob: -1.7328733205795288
    3. ' if' → logprob: -3.6078732013702393
    4. '               ' → logprob: -5.982873439788818
    5. ' d' → logprob: -6.732873439788818
    6. '   ' → logprob: -9.60787296295166
    7. '           ' → logprob: -9.98287296295166
    8. '       ' → logprob: -11.10787296295166
    9. '                   ' → logprob: -11.85787296295166
    10. '```' → logprob: -11.98287296295166

Token 857: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. '```' → logprob: -14.375000953674316
    3. '_' → logprob: -14.875000953674316
    4. ' ' → logprob: -17.000001907348633
    5. '
' → logprob: -17.125001907348633
    6. '[' → logprob: -17.375001907348633
    7. '１' → logprob: -17.375001907348633
    8. '   ' → logprob: -17.875001907348633
    9. 'd' → logprob: -18.125001907348633
    10. '`' → logprob: -18.375001907348633

Token 858: '_lst' (ID: 72474)
  Prédit: '_lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lst' → logprob: -1.5048530030981055e-06
    2. 'lst' → logprob: -13.750001907348633
    3. '```' → logprob: -16.250001907348633
    4. '_l' → logprob: -16.375001907348633
    5. '_ls' → logprob: -16.875001907348633
    6. '[_' → logprob: -17.000001907348633
    7. '_list' → logprob: -17.500001907348633
    8. 'd' → logprob: -17.500001907348633
    9. '\' → logprob: -18.375001907348633
    10. '_' → logprob: -18.750001907348633

Token 859: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.6931918263435364
    2. '.remove' → logprob: -0.6931918263435364
    3. '.' → logprob: -10.568191528320312
    4. '.pop' → logprob: -11.818191528320312
    5. 'remove' → logprob: -12.193191528320312
    6. '.insert' → logprob: -12.818191528320312
    7. '.extend' → logprob: -13.568191528320312
    8. ' .' → logprob: -13.818191528320312
    9. '   ' → logprob: -14.443191528320312
    10. '           ' → logprob: -15.068191528320312

Token 860: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: 0.0
    2. '(' → logprob: -16.75
    3. 'b' → logprob: -20.625
    4. '((' → logprob: -21.375
    5. ' (' → logprob: -21.625
    6. '(B' → logprob: -22.625
    7. '(a' → logprob: -23.5
    8. '	b' → logprob: -23.5
    9. '(
' → logprob: -23.875
    10. '```' → logprob: -24.375

Token 861: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005318192765116692
    2. ')
' → logprob: -5.2553181648254395
    3. '<|end|>' → logprob: -9.630318641662598
    4. '()' → logprob: -12.755318641662598
    5. ')

' → logprob: -12.755318641662598
    6. ' )' → logprob: -12.880318641662598
    7. '<|end|>' → logprob: -13.130318641662598
    8. '())' → logprob: -13.255318641662598
    9. '
' → logprob: -13.755318641662598
    10. ')return' → logprob: -14.255318641662598

Token 862: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 863: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3665609061717987
    2. '           ' → logprob: -2.116560935974121
    3. '
' → logprob: -2.366560935974121
    4. '<|end|>' → logprob: -2.991560935974121
    5. ' if' → logprob: -4.366560935974121
    6. '```' → logprob: -4.741560935974121
    7. ' 
' → logprob: -5.116560935974121
    8. 'if' → logprob: -5.741560935974121
    9. '        
' → logprob: -5.991560935974121
    10. '            
' → logprob: -6.241560935974121

Token 864: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.014627646654844284
    2. ' if' → logprob: -4.514627456665039
    3. '           ' → logprob: -5.639627456665039
    4. '#' → logprob: -12.014627456665039
    5. '```' → logprob: -12.264627456665039
    6. '               ' → logprob: -13.014627456665039
    7. '       ' → logprob: -13.139627456665039
    8. '
' → logprob: -13.264627456665039
    9. '            
' → logprob: -13.639627456665039
    10. '   ' → logprob: -14.514627456665039

Token 865: ' student' (ID: 6760)
  Prédit: 'requests'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'requests' → logprob: -0.005311308428645134
    2. ' requests' → logprob: -5.255311489105225
    3. 'len' → logprob: -9.880311012268066
    4. '   ' → logprob: -11.255311012268066
    5. '           ' → logprob: -12.630311012268066
    6. '       ' → logprob: -12.880311012268066
    7. ' len' → logprob: -13.130311012268066
    8. 'request' → logprob: -13.130311012268066
    9. ' ' → logprob: -13.505311012268066
    10. '               ' → logprob: -14.880311012268066

Token 866: ' still' (ID: 2928)
  Prédit: 'requests'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'requests' → logprob: -0.14752726256847382
    2. ' requests' → logprob: -2.0225272178649902
    3. '           ' → logprob: -5.64752721786499
    4. '.requests' → logprob: -8.147527694702148
    5. 'if' → logprob: -8.522527694702148
    6. '   ' → logprob: -9.147527694702148
    7. '               ' → logprob: -9.147527694702148
    8. '       ' → logprob: -9.272527694702148
    9. ' i' → logprob: -9.272527694702148
    10. '[i' → logprob: -9.647527694702148

Token 867: ' has' (ID: 853)
  Prédit: 'requests'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'requests' → logprob: -0.06209641695022583
    2. ' requests' → logprob: -2.812096357345581
    3. '           ' → logprob: -9.18709659576416
    4. 'if' → logprob: -11.68709659576416
    5. '   ' → logprob: -11.81209659576416
    6. '       ' → logprob: -12.81209659576416
    7. 'len' → logprob: -12.93709659576416
    8. 'request' → logprob: -13.06209659576416
    9. ' if' → logprob: -13.81209659576416
    10. '               ' → logprob: -13.81209659576416

Token 868: ' requests' (ID: 13782)
  Prédit: 'requests'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'requests' → logprob: -0.20142386853694916
    2. ' requests' → logprob: -1.7014238834381104
    3. '   ' → logprob: -12.451423645019531
    4. 'request' → logprob: -13.326423645019531
    5. ' ' → logprob: -13.576423645019531
    6. 'len' → logprob: -14.076423645019531
    7. 'books' → logprob: -14.576423645019531
    8. ' len' → logprob: -14.826423645019531
    9. '.requests' → logprob: -14.951423645019531
    10. '```' → logprob: -14.951423645019531

Token 869: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24198473989963531
    2. '           ' → logprob: -2.2419848442077637
    3. ':' → logprob: -2.7419848442077637
    4. ':
' → logprob: -3.4919848442077637
    5. ' and' → logprob: -5.241984844207764
    6. '   ' → logprob: -5.241984844207764
    7. ' if' → logprob: -7.241984844207764
    8. '               ' → logprob: -7.241984844207764
    9. '```' → logprob: -7.491984844207764
    10. '        ' → logprob: -8.616984367370605

Token 870: ' add' (ID: 1147)
  Prédit: ' queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.12112867832183838
    2. 'queue' → logprob: -3.121128559112549
    3. '           ' → logprob: -3.246128559112549
    4. ' if' → logprob: -4.121128559112549
    5. '       ' → logprob: -4.871128559112549
    6. '               ' → logprob: -5.871128559112549
    7. '	queue' → logprob: -6.496128559112549
    8. '   ' → logprob: -6.746128559112549
    9. 'if' → logprob: -6.746128559112549
    10. '(queue' → logprob: -8.496129035949707

Token 871: ' at' (ID: 540)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.21045026183128357
    2. ' i' → logprob: -1.835450291633606
    3. 'i' → logprob: -4.835450172424316
    4. '(queue' → logprob: -4.960450172424316
    5. ' queue' → logprob: -5.085450172424316
    6. '   ' → logprob: -5.585450172424316
    7. ' (' → logprob: -5.585450172424316
    8. '(' → logprob: -7.335450172424316
    9. ' them' → logprob: -8.085450172424316
    10. ' ' → logprob: -8.585450172424316

Token 872: ' end' (ID: 1268)
  Prédit: ' queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.20504377782344818
    2. ' the' → logprob: -1.9550437927246094
    3. 'queue' → logprob: -3.5800437927246094
    4. '	queue' → logprob: -4.705043792724609
    5. '   ' → logprob: -5.955043792724609
    6. '(queue' → logprob: -6.330043792724609
    7. 'the' → logprob: -7.080043792724609
    8. '       ' → logprob: -8.08004379272461
    9. ' ' → logprob: -8.33004379272461
    10. '_queue' → logprob: -8.58004379272461

Token 873: ' of' (ID: 328)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9614747762680054
    2. '(queue' → logprob: -0.9614747762680054
    3. ' queue' → logprob: -1.4614747762680054
    4. 'queue' → logprob: -6.336474895477295
    5. '```' → logprob: -7.836474895477295
    6. '(' → logprob: -7.836474895477295
    7. '       ' → logprob: -8.586474418640137
    8. ' (' → logprob: -8.711474418640137
    9. '   ' → logprob: -8.711474418640137
    10. ' if' → logprob: -9.086474418640137

Token 874: ' queue' (ID: 13661)
  Prédit: ' queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.061970602720975876
    2. 'queue' → logprob: -2.8119707107543945
    3. '(queue' → logprob: -13.186970710754395
    4. '	queue' → logprob: -13.811970710754395
    5. 'deque' → logprob: -17.561969757080078
    6. '.queue' → logprob: -18.561969757080078
    7. '_queue' → logprob: -18.936969757080078
    8. 'Queue' → logprob: -20.686969757080078
    9. 'space' → logprob: -20.936969757080078
    10. '```' → logprob: -20.936969757080078

Token 875: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5000961422920227
    2. '       ' → logprob: -1.000096082687378
    3. '   ' → logprob: -4.125096321105957
    4. '<|end|>' → logprob: -5.375096321105957
    5. ' ' → logprob: -6.750096321105957
    6. '```' → logprob: -7.250096321105957
    7. '        
' → logprob: -7.625096321105957
    8. ' if' → logprob: -8.375096321105957
    9. '		' → logprob: -8.375096321105957
    10. '<|end|>' → logprob: -8.500096321105957

Token 876: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.056831665337085724
    2. '       ' → logprob: -2.9318315982818604
    3. '   ' → logprob: -6.8068318367004395
    4. '<|end|>' → logprob: -7.9318318367004395
    5. '	       ' → logprob: -8.931831359863281
    6. ' if' → logprob: -9.181831359863281
    7. '<|end|>' → logprob: -9.931831359863281
    8. '               ' → logprob: -10.181831359863281
    9. '	   ' → logprob: -10.431831359863281
    10. '```' → logprob: -10.556831359863281

Token 877: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6262795925140381
    2. ' if' → logprob: -1.001279592514038
    3. '       ' → logprob: -2.876279592514038
    4. 'if' (adapté à ' if') → logprob: -3.251279592514038
    5. '   ' → logprob: -6.251279830932617
    6. '```' → logprob: -7.626279830932617
    7. '    ' → logprob: -9.251279830932617
    8. '               ' → logprob: -9.251279830932617
    9. '	if' → logprob: -9.501279830932617
    10. '        ' → logprob: -9.751279830932617

Token 878: ' requests' (ID: 13782)
  Prédit: ' requests'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' requests' → logprob: -0.5777862668037415
    2. 'requests' → logprob: -0.8277862668037415
    3. ' len' → logprob: -6.577786445617676
    4. 'len' → logprob: -7.702786445617676
    5. '   ' → logprob: -13.577786445617676
    6. ' ' → logprob: -14.827786445617676
    7. 'request' → logprob: -14.952786445617676
    8. '           ' → logprob: -16.07778549194336
    9. '.requests' → logprob: -16.20278549194336
    10. ' not' → logprob: -16.45278549194336

Token 879: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: 0.0
    2. 'i' → logprob: -18.25
    3. '```' → logprob: -18.75
    4. '   ' → logprob: -19.5
    5. '       ' → logprob: -19.75
    6. ' [' → logprob: -19.875
    7. '[' → logprob: -20.25
    8. '[I' → logprob: -20.5
    9. '           ' → logprob: -20.625
    10. '[
' → logprob: -20.875

Token 880: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.25285425782203674
    2. ']:' → logprob: -1.7528542280197144
    3. ':' → logprob: -3.127854347229004
    4. '):
' → logprob: -6.002854347229004
    5. '>:' → logprob: -6.627854347229004
    6. '}:' → logprob: -7.127854347229004
    7. ']:
' → logprob: -7.252854347229004
    8. '```' → logprob: -7.627854347229004
    9. '[' → logprob: -9.252854347229004
    10. ']):' → logprob: -9.627854347229004

Token 881: '               ' (ID: 506)
  Prédit: ' queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.04427661374211311
    2. '       ' → logprob: -3.544276714324951
    3. 'queue' → logprob: -4.919276714324951
    4. '               ' → logprob: -5.044276714324951
    5. '	queue' → logprob: -8.169276237487793
    6. '   ' → logprob: -8.669276237487793
    7. '(queue' → logprob: -9.669276237487793
    8. '```' → logprob: -9.794276237487793
    9. '           ' → logprob: -10.044276237487793
    10. '.queue' → logprob: -10.544276237487793

Token 882: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -0.06196970492601395
    2. ' queue' → logprob: -2.811969757080078
    3. '	queue' → logprob: -13.811969757080078
    4. '```' → logprob: -14.436969757080078
    5. '(queue' → logprob: -15.061969757080078
    6. '.queue' → logprob: -15.811969757080078
    7. '`' → logprob: -17.061969757080078
    8. '``' → logprob: -17.561969757080078
    9. 'space' → logprob: -17.811969757080078
    10. '_queue' → logprob: -19.686969757080078

Token 883: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00023750975378789008
    2. '.' → logprob: -8.375237464904785
    3. '.extend' → logprob: -12.875237464904785
    4. '.enqueue' → logprob: -14.000237464904785
    5. '.add' → logprob: -14.125237464904785
    6. ').' → logprob: -14.250237464904785
    7. ' .' → logprob: -14.500237464904785
    8. '.Append' → logprob: -14.875237464904785
    9. '.put' → logprob: -15.000237464904785
    10. '].' → logprob: -15.750237464904785

Token 884: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.0280383548888494e-06
    2. '(' → logprob: -13.875000953674316
    3. ' (' → logprob: -18.500001907348633
    4. 'i' → logprob: -18.500001907348633
    5. '((' → logprob: -19.000001907348633
    6. 'left' → logprob: -20.250001907348633
    7. '(
' → logprob: -20.500001907348633
    8. '(I' → logprob: -21.250001907348633
    9. '[i' → logprob: -22.500001907348633
    10. '(ii' → logprob: -22.750001907348633

Token 885: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.4153549020411447e-05
    2. ')
' → logprob: -10.75002384185791
    3. '())' → logprob: -13.50002384185791
    4. ' )' → logprob: -14.37502384185791
    5. '<|end|>' → logprob: -15.75002384185791
    6. '()' → logprob: -16.125024795532227
    7. '))' → logprob: -16.375024795532227
    8. ']' → logprob: -16.875024795532227
    9. '`)' → logprob: -16.875024795532227
    10. ')

' → logprob: -17.000024795532227

Token 886: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 887: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02348293550312519
    2. 'print' (adapté à ' print') → logprob: -4.023482799530029
    3. 'return' → logprob: -5.523482799530029
    4. '       ' → logprob: -6.648482799530029
    5. '```' → logprob: -10.898483276367188
    6. ' return' → logprob: -12.398483276367188
    7. '<|end|>' → logprob: -13.148483276367188
    8. ' print' → logprob: -13.148483276367188
    9. '
' → logprob: -13.648483276367188
    10. '	return' → logprob: -13.648483276367188

Token 888: '(cost' (ID: 133554)
  Prédit: '(cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cost' → logprob: -1.981667537620524e-06
    2. 'cost' → logprob: -13.250001907348633
    3. '(' → logprob: -15.875001907348633
    4. ' (' → logprob: -17.875001907348633
    5. ' cost' → logprob: -19.250001907348633
    6. '(f' → logprob: -19.250001907348633
    7. '(score' → logprob: -19.625001907348633
    8. '(c' → logprob: -19.625001907348633
    9. '(count' → logprob: -20.125001907348633
    10. '(abs' → logprob: -20.125001907348633

Token 889: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5048530030981055e-06
    2. ')`' → logprob: -14.500001907348633
    3. ' )' → logprob: -15.125001907348633
    4. '))' → logprob: -15.750001907348633
    5. '`)' → logprob: -16.000001907348633
    6. ')
' → logprob: -16.125001907348633
    7. '())' → logprob: -16.125001907348633
    8. '()' → logprob: -16.375001907348633
    9. ')}' → logprob: -16.625001907348633
    10. '   ' → logprob: -16.875001907348633

Token 890: 'if' (ID: 366)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.05849797651171684
    2. '<|end|>' → logprob: -3.558497905731201
    3. 'if' → logprob: -4.183497905731201
    4. '(process' → logprob: -5.183497905731201
    5. ' process' → logprob: -5.433497905731201
    6. '
' → logprob: -6.058497905731201
    7. '/process' → logprob: -8.18349838256836
    8. '```' → logprob: -8.68349838256836
    9. '	process' → logprob: -9.43349838256836
    10. '<|end|>' → logprob: -10.05849838256836

Token 891: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.4740947484970093
    2. ' __' → logprob: -0.9740947484970093
    3. 'name' → logprob: -11.84909439086914
    4. '_' → logprob: -13.09909439086914
    5. '___' → logprob: -13.09909439086914
    6. ' ' → logprob: -13.22409439086914
    7. ''' → logprob: -13.72409439086914
    8. '_name' → logprob: -14.34909439086914
    9. 'Name' → logprob: -14.59909439086914
    10. '/__' → logprob: -14.72409439086914

Token 892: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.08604545891284943
    2. ' ==' → logprob: -3.336045503616333
    3. 'name' → logprob: -3.961045503616333
    4. '==' → logprob: -4.586045265197754
    5. '__.__' → logprob: -4.836045265197754
    6. '.__' → logprob: -5.586045265197754
    7. '.' → logprob: -6.336045265197754
    8. '__.' → logprob: -6.461045265197754
    9. '```' → logprob: -7.211045265197754
    10. ' __' → logprob: -7.961045265197754

Token 893: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0017734732246026397
    2. '__.__' → logprob: -6.376773357391357
    3. '__.' → logprob: -10.001773834228516
    4. '==' → logprob: -11.876773834228516
    5. '=="' → logprob: -12.251773834228516
    6. '___' → logprob: -12.626773834228516
    7. '____' → logprob: -12.876773834228516
    8. '__('' → logprob: -13.251773834228516
    9. '__["' → logprob: -13.376773834228516
    10. '```' → logprob: -13.501773834228516

Token 894: '=="' (ID: 24027)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.1132454127073288
    2. '==' → logprob: -3.1132454872131348
    3. '=="' → logprob: -3.2382454872131348
    4. ' ==' → logprob: -3.8632454872131348
    5. '=='' → logprob: -6.113245487213135
    6. '__.__' → logprob: -9.238245010375977
    7. '__["' → logprob: -11.738245010375977
    8. '```' → logprob: -11.988245010375977
    9. '==="' → logprob: -12.238245010375977
    10. '__('' → logprob: -12.238245010375977

Token 895: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.17230536043643951
    2. '"' → logprob: -1.9223053455352783
    3. ''' → logprob: -4.422305583953857
    4. ' "__' → logprob: -13.6723051071167
    5. '___' → logprob: -15.4223051071167
    6. ' __' → logprob: -15.4223051071167
    7. 'main' → logprob: -15.9223051071167
    8. '   ' → logprob: -16.422306060791016
    9. '____' → logprob: -16.672306060791016
    10. '/__' → logprob: -17.422306060791016

Token 896: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.8624639324116288e-06
    2. 'name' → logprob: -13.250001907348633
    3. ' main' → logprob: -18.750001907348633
    4. '_main' → logprob: -19.875001907348633
    5. '"' → logprob: -21.625001907348633
    6. 'built' → logprob: -22.625001907348633
    7. '	main' → logprob: -22.875001907348633
    8. '(main' → logprob: -23.250001907348633
    9. 'ma' → logprob: -23.375001907348633
    10. '__' → logprob: -23.625001907348633

Token 897: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.018525179475545883
    2. '__' → logprob: -4.018525123596191
    3. '__':
' → logprob: -7.893525123596191
    4. '__["' → logprob: -13.893525123596191
    5. '__:' → logprob: -14.893525123596191
    6. '__.__' → logprob: -14.893525123596191
    7. '__.' → logprob: -15.143525123596191
    8. '__
' → logprob: -16.643526077270508
    9. '__("' → logprob: -16.893526077270508
    10. '__[' → logprob: -17.018526077270508

Token 898: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009810983203351498
    2. '	process' → logprob: -5.134810924530029
    3. ' process' → logprob: -6.134810924530029
    4. 'process' → logprob: -6.384810924530029
    5. '```' → logprob: -11.759811401367188
    6. '   ' → logprob: -12.134811401367188
    7. '(process' → logprob: -12.134811401367188
    8. '_process' → logprob: -14.009811401367188
    9. '    
' → logprob: -14.134811401367188
    10. '.process' → logprob: -14.509811401367188

Token 899: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' (adapté à ' process') → logprob: -7.107425062713446e-06
    2. ' process' → logprob: -12.250006675720215
    3. '   ' → logprob: -13.250006675720215
    4. '	process' → logprob: -14.625006675720215
    5. 'import' → logprob: -18.50000762939453
    6. '(process' → logprob: -18.62500762939453
    7. '.process' → logprob: -19.50000762939453
    8. 'proces' → logprob: -19.87500762939453
    9. '_process' → logprob: -20.37500762939453
    10. 'processor' → logprob: -22.50000762939453

Token 900: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 898
Tokens correctement prédits (1ère position, stricte): 331
Tokens correctement prédits (1ère position, avec adaptation): 367
Tokens correctement prédits (top 10): 679
Précision stricte (1ère position): 36.86%
Précision adaptée (1ère position): 40.87%
Précision (top 10): 75.61%
================================================================================
