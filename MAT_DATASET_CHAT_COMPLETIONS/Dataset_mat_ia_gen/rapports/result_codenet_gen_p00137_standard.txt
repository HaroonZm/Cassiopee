================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:11:15
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
d=int(input())
for case_i in range(1,d+1):
    s=int(input())
    print(f"Case {case_i}:")
    for _ in range(10):
        sq=str(s*s).zfill(8)
        s=int(sq[2:6])
        print(s)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'd' (ID: 67)
  → Token d'amorce (pas de prédiction)

Token 1: '=int' (ID: 37431)
  → Token d'amorce (pas de prédiction)

Token 2: '(input' (ID: 10054)
  → Token d'amorce (pas de prédiction)

Token 3: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.23399363458156586
    2. ')' → logprob: -1.733993649482727
    3. '()' → logprob: -3.6089935302734375
    4. '())' → logprob: -6.3589935302734375
    5. '```' → logprob: -7.4839935302734375
    6. '[' → logprob: -7.6089935302734375
    7. '(
' → logprob: -7.9839935302734375
    8. '**' → logprob: -8.358993530273438
    9. '")' → logprob: -8.483993530273438
    10. ''' → logprob: -8.608993530273438

Token 4: 'for' (ID: 1938)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3127801716327667
    2. '*' → logprob: -2.4377801418304443
    3. 'if' → logprob: -2.9377801418304443
    4. '%' → logprob: -3.0627801418304443
    5. 'i' → logprob: -3.9377801418304443
    6. '\n' → logprob: -4.062780380249023
    7. '#' → logprob: -4.187780380249023
    8. ')' → logprob: -5.312780380249023
    9. 'for' → logprob: -5.812780380249023
    10. ''' → logprob: -5.937780380249023

Token 5: ' case' (ID: 1890)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0522402748465538
    2. ' i' → logprob: -3.0522403717041016
    3. '  ' → logprob: -5.677240371704102
    4. 'i' → logprob: -9.177240371704102
    5. '_' → logprob: -9.802240371704102
    6. ' d' → logprob: -10.302240371704102
    7. ''' → logprob: -12.052240371704102
    8. ' )' → logprob: -12.552240371704102
    9. ' ‌' → logprob: -12.802240371704102
    10. ' _' → logprob: -13.052240371704102

Token 6: '_i' (ID: 10853)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5912027955055237
    2. ' ' → logprob: -1.091202735900879
    3. '_' → logprob: -2.841202735900879
    4. '  ' → logprob: -4.341202735900879
    5. ' :' → logprob: -4.466202735900879
    6. '(' → logprob: -4.591202735900879
    7. ':' → logprob: -5.091202735900879
    8. 's' → logprob: -5.841202735900879
    9. ' (' → logprob: -6.716202735900879
    10. ' i' → logprob: -7.091202735900879

Token 7: ' in' (ID: 306)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0014579739654436707
    2. 'in' → logprob: -6.876458168029785
    3. ' in' → logprob: -8.501458168029785
    4. 'nt' → logprob: -9.001458168029785
    5. '_' → logprob: -10.376458168029785
    6. '_n' → logprob: -10.751458168029785
    7. ' n' → logprob: -12.001458168029785
    8. 'd' → logprob: -12.251458168029785
    9. ',n' → logprob: -12.251458168029785
    10. 'f' → logprob: -12.751458168029785

Token 8: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.575951874256134
    2. 'range' → logprob: -0.825951874256134
    3. '	range' → logprob: -11.95095157623291
    4. ' ' → logprob: -12.95095157623291
    5. '_range' → logprob: -13.82595157623291
    6. '(range' → logprob: -13.95095157623291
    7. ' xrange' → logprob: -14.57595157623291
    8. '<|end|>' → logprob: -14.57595157623291
    9. '```' → logprob: -15.70095157623291
    10. 'd' → logprob: -16.075952529907227

Token 9: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00036799011286348104
    2. '(len' → logprob: -8.125368118286133
    3. '(
' → logprob: -10.125368118286133
    4. '(range' → logprob: -11.375368118286133
    5. ' (' → logprob: -11.500368118286133
    6. '(n' → logprob: -12.375368118286133
    7. '(d' → logprob: -13.250368118286133
    8. '((' → logprob: -13.750368118286133
    9. '(

' → logprob: -14.000368118286133
    10. '(length' → logprob: -14.500368118286133

Token 10: '1' (ID: 16)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.012773671187460423
    2. '1' → logprob: -4.512773513793945
    3. ' d' → logprob: -6.512773513793945
    4. '0' → logprob: -8.762773513793945
    5. ' ' → logprob: -10.387773513793945
    6. '2' → logprob: -10.637773513793945
    7. '10' → logprob: -12.137773513793945
    8. '3' → logprob: -12.262773513793945
    9. '(d' → logprob: -12.637773513793945
    10. '4' → logprob: -12.762773513793945

Token 11: ',d' (ID: 26159)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0029253996908664703
    2. ' ,' → logprob: -6.127925395965576
    3. ',d' → logprob: -7.502925395965576
    4. ',len' → logprob: -8.627925872802734
    5. ',num' → logprob: -13.002925872802734
    6. ',n' → logprob: -13.127925872802734
    7. ',length' → logprob: -13.252925872802734
    8. ',int' → logprob: -13.877925872802734
    9. 'd' → logprob: -14.377925872802734
    10. '+' → logprob: -15.377925872802734

Token 12: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0004577174549922347
    2. ' +' → logprob: -7.875457763671875
    3. '):' → logprob: -9.500457763671875
    4. '+:' → logprob: -13.250457763671875
    5. '+,' → logprob: -15.125457763671875
    6. ',' → logprob: -15.625457763671875
    7. '+
' → logprob: -15.875457763671875
    8. ' ' → logprob: -16.375457763671875
    9. ' ):' → logprob: -16.625457763671875
    10. ',+' → logprob: -16.625457763671875

Token 13: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012356207298580557
    2. ' ' → logprob: -9.000123977661133
    3. '2' → logprob: -16.750123977661133
    4. '   ' → logprob: -16.875123977661133
    5. '  ' → logprob: -17.250123977661133
    6. '```' → logprob: -17.375123977661133
    7. ')' → logprob: -17.500123977661133
    8. 'int' → logprob: -18.750123977661133
    9. '    ' → logprob: -19.437623977661133
    10. 'd' → logprob: -19.437623977661133

Token 14: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0008554781670682132
    2. ')' → logprob: -7.500855445861816
    3. ':' → logprob: -8.125855445861816
    4. '):
' → logprob: -12.375855445861816
    5. ' ):' → logprob: -13.250855445861816
    6. ':)' → logprob: -15.250855445861816
    7. '():' → logprob: -16.375856399536133
    8. ''):' → logprob: -17.000856399536133
    9. ')：' → logprob: -17.125856399536133
    10. '```' → logprob: -17.125856399536133

Token 15: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008838393725454807
    2. ' :' → logprob: -5.133838176727295
    3. ' ' → logprob: -6.758838176727295
    4. '   ' → logprob: -6.883838176727295
    5. ':
' → logprob: -7.758838176727295
    6. '    ' → logprob: -9.883838653564453
    7. ' print' → logprob: -10.008838653564453
    8. ' :
' → logprob: -10.258838653564453
    9. '```' → logprob: -10.508838653564453
    10. '):' → logprob: -10.758838653564453

Token 16: ' s' (ID: 265)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11022628098726273
    2. '    ' → logprob: -2.8602263927459717
    3. ' print' → logprob: -4.235226154327393
    4. ' n' → logprob: -4.360226154327393
    5. 'n' → logprob: -4.985226154327393
    6. '     
' → logprob: -5.860226154327393
    7. ' 
' → logprob: -6.360226154327393
    8. '   ' → logprob: -6.610226154327393
    9. ' ```' → logprob: -6.610226154327393
    10. 'print' → logprob: -6.985226154327393

Token 17: '=int' (ID: 37431)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.716343104839325
    2. ' =' → logprob: -1.3413431644439697
    3. '=input' → logprob: -1.9663431644439697
    4. 'tr' → logprob: -2.3413431644439697
    5. 'trip' → logprob: -5.466342926025391
    6. 't' → logprob: -5.966342926025391
    7. ' ' → logprob: -6.341342926025391
    8. 'um' → logprob: -6.591342926025391
    9. ':' → logprob: -7.466342926025391
    10. 'input' → logprob: -7.591342926025391

Token 18: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04347308725118637
    2. '(input' → logprob: -3.1684730052948
    3. ' (' → logprob: -8.668473243713379
    4. '()' → logprob: -8.793473243713379
    5. '(s' → logprob: -10.168473243713379
    6. '(
' → logprob: -10.293473243713379
    7. '(

' → logprob: -10.918473243713379
    8. ')' → logprob: -11.918473243713379
    9. 'input' → logprob: -11.918473243713379
    10. ' ' → logprob: -12.168473243713379

Token 19: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.3978790044784546
    2. '()' → logprob: -1.1478790044784546
    3. ')' → logprob: -4.522879123687744
    4. '(' → logprob: -10.147878646850586
    5. '()
' → logprob: -10.772878646850586
    6. ' ())' → logprob: -11.397878646850586
    7. '())
' → logprob: -12.022878646850586
    8. '()))' → logprob: -12.147878646850586
    9. '()

' → logprob: -13.272878646850586
    10. '().' → logprob: -13.772878646850586

Token 20: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2654906213283539
    2. ':' → logprob: -2.0154905319213867
    3. '<|end|>' → logprob: -2.8904905319213867
    4. ')' → logprob: -4.265490531921387
    5. 'n' → logprob: -5.015490531921387
    6. ' ' → logprob: -5.515490531921387
    7. '    ' → logprob: -5.890490531921387
    8. ' for' → logprob: -6.265490531921387
    9. '
' → logprob: -6.265490531921387
    10. '[' → logprob: -6.890490531921387

Token 21: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8977782130241394
    2. 'n' → logprob: -1.7727782726287842
    3. 'for' → logprob: -2.522778272628784
    4. 't' → logprob: -2.647778272628784
    5. ' for' → logprob: -3.522778272628784
    6. 'd' → logprob: -3.647778272628784
    7. 'sum' → logprob: -3.647778272628784
    8. ')' → logprob: -4.022778034210205
    9. 'if' → logprob: -4.147778034210205
    10. 'a' → logprob: -4.272778034210205

Token 22: '(f' (ID: 1526)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04754246398806572
    2. '(s' → logprob: -3.4225425720214844
    3. '('' → logprob: -4.922542572021484
    4. '()' → logprob: -6.047542572021484
    5. '("' → logprob: -6.422542572021484
    6. '(f' → logprob: -6.422542572021484
    7. '((' → logprob: -7.797542572021484
    8. '("("' → logprob: -8.172542572021484
    9. '(case' → logprob: -9.422542572021484
    10. 's' → logprob: -9.672542572021484

Token 23: '"' (ID: 1)
  Prédit: '"{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"{' → logprob: -0.8751015663146973
    2. '{' → logprob: -1.2501015663146973
    3. '(' → logprob: -1.7501015663146973
    4. '"' → logprob: -2.7501015663146973
    5. ''{' → logprob: -3.5001015663146973
    6. '("{' → logprob: -5.000101566314697
    7. '{s' → logprob: -5.000101566314697
    8. '({' → logprob: -5.125101566314697
    9. '")' → logprob: -6.000101566314697
    10. '('{' → logprob: -6.125101566314697

Token 24: 'Case' (ID: 6187)
  Prédit: 'Case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Case' → logprob: -0.0029806718230247498
    2. 'Day' → logprob: -6.627980709075928
    3. '#' → logprob: -7.627980709075928
    4. '"' → logprob: -8.12798023223877
    5. '{' → logprob: -8.75298023223877
    6. 'Cas' → logprob: -9.37798023223877
    7. 'case' → logprob: -9.50298023223877
    8. 'Test' → logprob: -9.87798023223877
    9. 'Scenario' → logprob: -9.87798023223877
    10. 'Number' → logprob: -10.12798023223877

Token 25: ' {' (ID: 354)
  Prédit: ' {'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {' → logprob: -0.7037497758865356
    2. ' #{' → logprob: -0.7037497758865356
    3. '{' → logprob: -4.828749656677246
    4. '#{' → logprob: -6.328749656677246
    5. ' #' → logprob: -7.203749656677246
    6. '{i' → logprob: -11.578749656677246
    7. '#' → logprob: -12.328749656677246
    8. ' ' → logprob: -12.703749656677246
    9. '{s' → logprob: -13.203749656677246
    10. ' #%' → logprob: -13.453749656677246

Token 26: 'case' (ID: 9994)
  Prédit: 'case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'case' → logprob: -0.0009429076453670859
    2. ' case' → logprob: -7.000942707061768
    3. '{' → logprob: -10.375943183898926
    4. '_case' → logprob: -15.500943183898926
    5. '(case' → logprob: -16.37594223022461
    6. ' {' → logprob: -18.37594223022461
    7. ' ' → logprob: -18.50094223022461
    8. '.case' → logprob: -19.00094223022461
    9. '}' → logprob: -19.12594223022461
    10. '{}' → logprob: -19.25094223022461

Token 27: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -1.3856492842023727e-06
    2. '}_' → logprob: -14.125000953674316
    3. '_' → logprob: -15.875000953674316
    4. ' _' → logprob: -15.875000953674316
    5. '_j' → logprob: -16.625001907348633
    6. '_f' → logprob: -17.375001907348633
    7. '_id' → logprob: -17.500001907348633
    8. '_a' → logprob: -17.625001907348633
    9. 'i' → logprob: -17.750001907348633
    10. '_idx' → logprob: -17.875001907348633

Token 28: '}:' (ID: 33132)
  Prédit: '}:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}:' → logprob: -0.00012082771718269214
    2. '},' → logprob: -9.625121116638184
    3. '}' → logprob: -10.375121116638184
    4. '}")' → logprob: -11.000121116638184
    5. ' }:' → logprob: -12.875121116638184
    6. '}:{' → logprob: -12.875121116638184
    7. ':' → logprob: -14.375121116638184
    8. '}",' → logprob: -14.875121116638184
    9. '}{' → logprob: -15.625121116638184
    10. '},"' → logprob: -16.125120162963867

Token 29: '")
' (ID: 1896)
  Prédit: ' {'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' {' → logprob: -0.01655602641403675
    2. '{' → logprob: -4.891556262969971
    3. ' ")' → logprob: -6.141556262969971
    4. ' s' → logprob: -6.266556262969971
    5. ' )' → logprob: -6.766556262969971
    6. ' {}' → logprob: -7.016556262969971
    7. '{s' → logprob: -7.141556262969971
    8. ' ' → logprob: -7.641556262969971
    9. ' {(' → logprob: -8.266555786132812
    10. ' ,' → logprob: -8.391555786132812

Token 30: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10900891572237015
    2. '<|end|>' → logprob: -2.609009027481079
    3. ' for' → logprob: -3.734009027481079
    4. '    ' → logprob: -6.4840087890625
    5. 'for' → logprob: -6.6090087890625
    6. ' ' → logprob: -7.1090087890625
    7. '<|end|>' → logprob: -7.4840087890625
    8. '    
' → logprob: -8.1090087890625
    9. ' 
' → logprob: -8.8590087890625
    10. ' if' → logprob: -9.4215087890625

Token 31: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5559328198432922
    2. ' for' → logprob: -1.4309327602386475
    3. 'for' (adapté à ' for') → logprob: -2.1809327602386475
    4. '<|end|>' → logprob: -3.3059327602386475
    5. '    ' → logprob: -4.555932998657227
    6. ' ' → logprob: -4.930932998657227
    7. ' if' → logprob: -5.930932998657227
    8. '#' → logprob: -6.305932998657227
    9. ' #' → logprob: -6.430932998657227
    10. 'print' → logprob: -6.430932998657227

Token 32: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.26528316736221313
    2. '_' → logprob: -2.3902831077575684
    3. ' ' → logprob: -2.5152831077575684
    4. ' range' → logprob: -3.1402831077575684
    5. ' i' → logprob: -4.640283107757568
    6. ' s' → logprob: -5.640283107757568
    7. ' day' → logprob: -6.265283107757568
    8. ' j' → logprob: -7.015283107757568
    9. ' in' → logprob: -8.390283584594727
    10. ' t' → logprob: -9.015283584594727

Token 33: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0032422395888715982
    2. 'in' → logprob: -5.753242015838623
    3. ' ' → logprob: -9.878242492675781
    4. 'range' → logprob: -12.878242492675781
    5. '_' → logprob: -13.003242492675781
    6. ' range' → logprob: -13.378242492675781
    7. ' _' → logprob: -13.628242492675781
    8. '  ' → logprob: -13.878242492675781
    9. '   ' → logprob: -14.128242492675781
    10. '    ' → logprob: -14.128242492675781

Token 34: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4741036295890808
    2. ' range' → logprob: -0.9741036295890808
    3. ' ' → logprob: -11.724103927612305
    4. 'in' → logprob: -12.224103927612305
    5. ' in' → logprob: -13.224103927612305
    6. '  ' → logprob: -13.349103927612305
    7. 's' → logprob: -13.599103927612305
    8. 'r' → logprob: -13.849103927612305
    9. '	range' → logprob: -13.849103927612305
    10. '   ' → logprob: -14.349103927612305

Token 35: '(' (ID: 7)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.003315311623737216
    2. '(' → logprob: -5.753315448760986
    3. ' s' → logprob: -9.628314971923828
    4. ' (' → logprob: -9.753314971923828
    5. 's' → logprob: -11.378314971923828
    6. '(range' → logprob: -13.628314971923828
    7. ' ' → logprob: -15.253314971923828
    8. '(S' → logprob: -15.878314971923828
    9. '(
' → logprob: -16.128314971923828
    10. '((' → logprob: -16.378314971923828

Token 36: '10' (ID: 702)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0021905910689383745
    2. ' s' → logprob: -6.127190589904785
    3. '0' → logprob: -12.627190589904785
    4. '1' → logprob: -14.002190589904785
    5. '   ' → logprob: -14.127190589904785
    6. '2' → logprob: -16.1271915435791
    7. ')' → logprob: -16.3771915435791
    8. '`s' → logprob: -16.3771915435791
    9. ')s' → logprob: -16.5021915435791
    10. ' ' → logprob: -16.5021915435791

Token 37: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5405206084251404
    2. '):' → logprob: -1.2905206680297852
    3. ' )' → logprob: -2.540520668029785
    4. ' ):' → logprob: -3.540520668029785
    5. ' s' → logprob: -4.665520668029785
    6. ':' → logprob: -4.790520668029785
    7. '   ' → logprob: -5.040520668029785
    8. '    ' → logprob: -6.040520668029785
    9. ',' → logprob: -6.415520668029785
    10. '):
' → logprob: -7.040520668029785

Token 38: '       ' (ID: 309)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.4805808961391449
    2. '       ' → logprob: -1.7305809259414673
    3. ' ' → logprob: -2.3555808067321777
    4. '   ' → logprob: -2.6055808067321777
    5. ' 
' → logprob: -4.730580806732178
    6. '<|end|>' → logprob: -4.855580806732178
    7. '     
' → logprob: -5.605580806732178
    8. '    
' → logprob: -5.855580806732178
    9. '\' → logprob: -6.355580806732178
    10. ' s' → logprob: -6.605580806732178

Token 39: ' sq' (ID: 24743)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -1.1483988761901855
    2. '       ' → logprob: -2.0233988761901855
    3. 'print' → logprob: -2.1483988761901855
    4. ' s' → logprob: -2.2733988761901855
    5. '    ' → logprob: -2.3983988761901855
    6. '   ' → logprob: -2.5233988761901855
    7. ' if' → logprob: -3.1483988761901855
    8. ' n' → logprob: -3.6483988761901855
    9. ' ' → logprob: -4.2733988761901855
    10. 'n' → logprob: -4.6483988761901855

Token 40: '=str' (ID: 36106)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.07358644902706146
    2. 'rt' → logprob: -3.5735864639282227
    3. 'u' → logprob: -3.9485864639282227
    4. ' =' → logprob: -4.323586463928223
    5. '**' → logprob: -5.823586463928223
    6. '()' → logprob: -7.073586463928223
    7. 's' → logprob: -7.073586463928223
    8. '=' → logprob: -7.323586463928223
    9. 'root' → logprob: -7.573586463928223
    10. ' ' → logprob: -7.823586463928223

Token 41: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.22052758932113647
    2. '(' → logprob: -1.7205276489257812
    3. '(int' → logprob: -4.595527648925781
    4. '(input' → logprob: -5.845527648925781
    5. '(pow' → logprob: -6.470527648925781
    6. '((' → logprob: -6.970527648925781
    7. '(i' → logprob: -6.970527648925781
    8. 's' → logprob: -6.970527648925781
    9. '(square' → logprob: -8.345527648925781
    10. 'q' → logprob: -8.845527648925781

Token 42: '*s' (ID: 71191)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.44346126914024353
    2. '*s' → logprob: -1.693461298942566
    3. '*' → logprob: -1.943461298942566
    4. ')' → logprob: -3.8184611797332764
    5. ' **' → logprob: -6.0684614181518555
    6. ' *' → logprob: -6.3184614181518555
    7. ')**' → logprob: -6.8184614181518555
    8. '**)' → logprob: -6.8184614181518555
    9. '*i' → logprob: -7.0684614181518555
    10. ' )' → logprob: -7.9434614181518555

Token 43: ').' (ID: 741)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00013655527436640114
    2. ')
' → logprob: -9.375136375427246
    3. '))' → logprob: -10.875136375427246
    4. ' )' → logprob: -11.375136375427246
    5. '       ' → logprob: -11.875136375427246
    6. ')))' → logprob: -13.500136375427246
    7. ')+' → logprob: -13.625136375427246
    8. ')s' → logprob: -13.625136375427246
    9. '`)' → logprob: -13.750136375427246
    10. '())' → logprob: -13.750136375427246

Token 44: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.5194161534309387
    2. 'r' → logprob: -1.144416093826294
    3. 'startswith' → logprob: -2.769416093826294
    4. 'rstrip' → logprob: -4.519416332244873
    5. 'count' → logprob: -5.144416332244873
    6. 'l' → logprob: -6.269416332244873
    7. 'replace' → logprob: -6.519416332244873
    8. 'ends' → logprob: -6.644416332244873
    9. 'split' → logprob: -6.769416332244873
    10. 'strip' → logprob: -7.144416332244873

Token 45: 'fill' (ID: 12413)
  Prédit: 'fill'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fill' → logprob: -0.0001870902779046446
    2. 'f' → logprob: -8.625186920166016
    3. 'fi' → logprob: -13.000186920166016
    4. 'filled' → logprob: -13.500186920166016
    5. '-fill' → logprob: -14.000186920166016
    6. '_fill' → logprob: -14.375186920166016
    7. 'l' → logprob: -14.750186920166016
    8. '```' → logprob: -15.125186920166016
    9. 'p' → logprob: -15.375186920166016
    10. '`' → logprob: -15.625186920166016

Token 46: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00014287306112237275
    2. '(
' → logprob: -9.875143051147461
    3. '((' → logprob: -10.250143051147461
    4. ' (' → logprob: -10.875143051147461
    5. '4' → logprob: -11.125143051147461
    6. '3' → logprob: -11.625143051147461
    7. '('' → logprob: -12.500143051147461
    8. '6' → logprob: -12.875143051147461
    9. '8' → logprob: -13.125143051147461
    10. '```' → logprob: -14.000143051147461

Token 47: '8' (ID: 23)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -1.4630012512207031
    2. '10' → logprob: -1.4630012512207031
    3. '20' → logprob: -1.5880012512207031
    4. '1' → logprob: -1.9630012512207031
    5. '2' → logprob: -2.213001251220703
    6. '4' → logprob: -3.088001251220703
    7. '8' → logprob: -4.588001251220703
    8. '19' → logprob: -4.588001251220703
    9. '6' → logprob: -5.213001251220703
    10. '9' → logprob: -5.588001251220703

Token 48: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002369585447013378
    2. ')
' → logprob: -6.127369403839111
    3. '))' → logprob: -8.87736988067627
    4. '       ' → logprob: -11.37736988067627
    5. ')))' → logprob: -11.37736988067627
    6. ' )' → logprob: -12.62736988067627
    7. ')
' → logprob: -13.25236988067627
    8. '   ' → logprob: -13.37736988067627
    9. ')

' → logprob: -13.37736988067627
    10. '[' → logprob: -13.50236988067627

Token 49: '       ' (ID: 309)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3420120477676392
    2. '
' → logprob: -1.7170120477676392
    3. '\n' → logprob: -1.8420120477676392
    4. '       ' → logprob: -2.8420119285583496
    5. '   ' → logprob: -3.0920119285583496
    6. '    
' → logprob: -3.5920119285583496
    7. '' → logprob: -3.8420119285583496
    8. ' ' → logprob: -3.9670119285583496
    9. '  
' → logprob: -3.9670119285583496
    10. ')' → logprob: -3.9670119285583496

Token 50: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.21925804018974304
    2. '       ' → logprob: -2.9692580699920654
    3. '   ' → logprob: -3.3442580699920654
    4. ' s' → logprob: -3.7192580699920654
    5. ' 
' → logprob: -3.7192580699920654
    6. '        
' → logprob: -4.094257831573486
    7. '    
' → logprob: -4.469257831573486
    8. '\n' → logprob: -5.219257831573486
    9. 'n' → logprob: -5.969257831573486
    10. '
' → logprob: -5.969257831573486

Token 51: '=int' (ID: 37431)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.024536214768886566
    2. ' =' → logprob: -4.3995361328125
    3. '+=' → logprob: -4.5245361328125
    4. '*=' → logprob: -7.5245361328125
    5. '=s' → logprob: -8.5245361328125
    6. '=int' → logprob: -8.7745361328125
    7. '%=' → logprob: -9.3995361328125
    8. ' +=' → logprob: -10.0245361328125
    9. '+' → logprob: -10.7745361328125
    10. '**' → logprob: -11.6495361328125

Token 52: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0006149819819256663
    2. '(' → logprob: -7.500615119934082
    3. '((' → logprob: -10.750615119934082
    4. '(str' → logprob: -11.125615119934082
    5. '('' → logprob: -12.250615119934082
    6. '(f' → logprob: -12.250615119934082
    7. '("("' → logprob: -12.750615119934082
    8. '(square' → logprob: -12.750615119934082
    9. '(input' → logprob: -13.125615119934082
    10. '(
' → logprob: -13.375615119934082

Token 53: 'q' (ID: 80)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.9515600204467773
    2. '*' → logprob: -1.2015600204467773
    3. 's' → logprob: -2.5765600204467773
    4. '*s' → logprob: -2.8265600204467773
    5. '[' → logprob: -2.9515600204467773
    6. 'sq' → logprob: -3.3265600204467773
    7. ')' → logprob: -3.4515600204467773
    8. '[::-' → logprob: -4.076560020446777
    9. '/' → logprob: -4.701560020446777
    10. '+' → logprob: -4.826560020446777

Token 54: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.15939821302890778
    2. '[-' → logprob: -2.409398317337036
    3. ')' → logprob: -3.409398317337036
    4. '[:' → logprob: -3.784398317337036
    5. '[::-' → logprob: -6.659398078918457
    6. '[len' → logprob: -9.159398078918457
    7. '[:-' → logprob: -9.659398078918457
    8. ')%' → logprob: -9.784398078918457
    9. ')
' → logprob: -10.659398078918457
    10. '[:]' → logprob: -10.784398078918457

Token 55: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5174655914306641
    2. '-' → logprob: -1.267465591430664
    3. '4' → logprob: -2.142465591430664
    4. ' -' → logprob: -6.142465591430664
    5. ' ' → logprob: -7.142465591430664
    6. '0' → logprob: -7.767465591430664
    7. '3' → logprob: -7.892465591430664
    8. ':' → logprob: -8.017465591430664
    9. 'len' → logprob: -8.267465591430664
    10. '::-' → logprob: -8.329965591430664

Token 56: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001977287931367755
    2. '4' → logprob: -6.376977443695068
    3. '6' → logprob: -9.00197696685791
    4. ':-' → logprob: -9.62697696685791
    5. '])' → logprob: -10.87697696685791
    6. ' :' → logprob: -11.00197696685791
    7. '3' → logprob: -11.25197696685791
    8. '-' → logprob: -11.75197696685791
    9. ':]' → logprob: -11.87697696685791
    10. '2' → logprob: -12.00197696685791

Token 57: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.0031215064227581024
    2. '])' → logprob: -6.503121376037598
    3. ' ' → logprob: -7.503121376037598
    4. '-' → logprob: -8.128121376037598
    5. '8' → logprob: -8.253121376037598
    6. ']' → logprob: -9.003121376037598
    7. '2' → logprob: -9.003121376037598
    8. '4' → logprob: -9.003121376037598
    9. '   ' → logprob: -10.753121376037598
    10. ':' → logprob: -10.878121376037598

Token 58: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0003449984942562878
    2. '])
' → logprob: -8.125345230102539
    3. ' ])' → logprob: -10.625345230102539
    4. ']' → logprob: -12.375345230102539
    5. '])
' → logprob: -12.375345230102539
    6. '       ' → logprob: -12.500345230102539
    7. '])

' → logprob: -13.125345230102539
    8. ')' → logprob: -13.375345230102539
    9. '   ' → logprob: -13.500345230102539
    10. '])*' → logprob: -13.500345230102539

Token 59: '       ' (ID: 309)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.023613587021827698
    2. '
' → logprob: -4.648613452911377
    3. '<|end|>' → logprob: -4.648613452911377
    4. '   ' → logprob: -7.148613452911377
    5. ' 
' → logprob: -7.148613452911377
    6. '\r' → logprob: -7.773613452911377
    7. '```' → logprob: -8.023613929748535
    8. ')' → logprob: -8.148613929748535
    9. ' ' → logprob: -8.273613929748535
    10. '  
' → logprob: -8.273613929748535

Token 60: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.022204503417015076
    2. '       ' → logprob: -4.147204399108887
    3. ' print' → logprob: -5.272204399108887
    4. '   ' → logprob: -7.022204399108887
    5. ' ' → logprob: -10.147204399108887
    6. '<|end|>' → logprob: -10.272204399108887
    7. '```' → logprob: -10.272204399108887
    8. '	print' → logprob: -12.397204399108887
    9. '#print' → logprob: -13.397204399108887
    10. '(print' → logprob: -13.522204399108887

Token 61: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.007058472838252783
    2. '(f' → logprob: -5.257058620452881
    3. '(' → logprob: -6.382058620452881
    4. '()' → logprob: -9.632058143615723
    5. '(str' → logprob: -10.882058143615723
    6. '((' → logprob: -11.132058143615723
    7. '(int' → logprob: -11.257058143615723
    8. '(q' → logprob: -12.757058143615723
    9. '(t' → logprob: -12.882058143615723
    10. '('' → logprob: -13.132058143615723

Token 62: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.531315314830863e-06
    2. ')
' → logprob: -13.125003814697266
    3. '))' → logprob: -14.625003814697266
    4. ' )' → logprob: -14.625003814697266
    5. '   ' → logprob: -15.375003814697266
    6. '")' → logprob: -16.000003814697266
    7. '')' → logprob: -16.375003814697266
    8. ')")' → logprob: -16.500003814697266
    9. ')`' → logprob: -17.000003814697266
    10. '`)' → logprob: -17.375003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 60
Tokens correctement prédits (1ère position, stricte): 24
Tokens correctement prédits (1ère position, avec adaptation): 26
Tokens correctement prédits (top 10): 47
Précision stricte (1ère position): 40.00%
Précision adaptée (1ère position): 43.33%
Précision (top 10): 78.33%
================================================================================
