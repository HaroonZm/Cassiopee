================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:12:04
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
t = int(input())
for _ in range(t):
    n = int(input())
    h = list(map(int, input().split()))
    max_up = 0
    max_down = 0
    for i in range(1, n):
        diff = h[i] - h[i-1]
        if diff > 0:
            if diff > max_up:
                max_up = diff
        else:
            diff = -diff
            if diff > max_down:
                max_down = diff
    print(max_up, max_down)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 't' (ID: 83)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00029232146334834397
    2. '(t' → logprob: -8.875292778015137
    3. '(
' → logprob: -10.250292778015137
    4. ')' → logprob: -10.625292778015137
    5. '```' → logprob: -10.750292778015137
    6. ''' → logprob: -11.000292778015137
    7. 't' → logprob: -11.125292778015137
    8. '('' → logprob: -11.250292778015137
    9. '`' → logprob: -12.250292778015137
    10. '()' → logprob: -12.625292778015137

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.23724457621574402
    2. ')' → logprob: -1.6122446060180664
    3. '()' → logprob: -4.737244606018066
    4. '())' → logprob: -6.362244606018066
    5. '))' → logprob: -8.237244606018066
    6. '(
' → logprob: -8.487244606018066
    7. '")' → logprob: -8.862244606018066
    8. '('' → logprob: -9.112244606018066
    9. '')' → logprob: -9.612244606018066
    10. ''' → logprob: -9.862244606018066

Token 5: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.39862149953842163
    2. '\n' → logprob: -1.1486215591430664
    3. ' for' → logprob: -4.773621559143066
    4. '\' → logprob: -7.023621559143066
    5. '\r' → logprob: -7.648621559143066
    6. 'f' → logprob: -7.898621559143066
    7. 'n' → logprob: -7.898621559143066
    8. 'i' → logprob: -8.398621559143066
    9. '
' → logprob: -8.648621559143066
    10. '' → logprob: -9.023621559143066

Token 6: ' _' (ID: 1175)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0063355411402881145
    2. '  ' → logprob: -5.256335735321045
    3. ' i' → logprob: -7.006335735321045
    4. ' t' → logprob: -8.881335258483887
    5. ' ' → logprob: -11.631335258483887
    6. 'i' → logprob: -11.881335258483887
    7. ' n' → logprob: -12.131335258483887
    8. ' )' → logprob: -12.256335258483887
    9. ''' → logprob: -12.381335258483887
    10. '```' → logprob: -12.756335258483887

Token 7: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.010266068391501904
    2. 'in' → logprob: -4.635266304016113
    3. ' ' → logprob: -7.635266304016113
    4. '  ' → logprob: -11.260266304016113
    5. ' i' → logprob: -13.010266304016113
    6. '<|end|>' → logprob: -13.135266304016113
    7. ',' → logprob: -13.260266304016113
    8. '_' → logprob: -13.635266304016113
    9. ' ,' → logprob: -14.135266304016113
    10. ')' → logprob: -14.135266304016113

Token 8: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.693149983882904
    2. 'range' → logprob: -0.693149983882904
    3. ' ' → logprob: -13.94314956665039
    4. '	range' → logprob: -14.06814956665039
    5. '_range' → logprob: -15.56814956665039
    6. '(range' → logprob: -15.56814956665039
    7. 't' → logprob: -15.69314956665039
    8. '_' → logprob: -15.69314956665039
    9. ' in' → logprob: -16.19314956665039
    10. ' t' → logprob: -16.56814956665039

Token 9: '(t' (ID: 2025)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.012592298910021782
    2. ' (' → logprob: -4.387592315673828
    3. '(t' → logprob: -10.012592315673828
    4. '(len' → logprob: -11.137592315673828
    5. '(range' → logprob: -11.387592315673828
    6. '(n' → logprob: -12.012592315673828
    7. '```' → logprob: -13.887592315673828
    8. ' ' → logprob: -13.887592315673828
    9. '(int' → logprob: -14.262592315673828
    10. ' t' → logprob: -14.637592315673828

Token 10: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00951086450368166
    2. ')' → logprob: -5.0095109939575195
    3. ':' → logprob: -5.8845109939575195
    4. '):
' → logprob: -12.63451099395752
    5. ' ):' → logprob: -13.25951099395752
    6. ''):' → logprob: -14.13451099395752
    7. ':)' → logprob: -14.13451099395752
    8. '():' → logprob: -14.63451099395752
    9. '+' → logprob: -14.75951099395752
    10. '"):' → logprob: -15.63451099395752

Token 11: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007117166533134878
    2. '    
' → logprob: -7.375711917877197
    3. '```' → logprob: -10.500711441040039
    4. '   ' → logprob: -11.125711441040039
    5. ' input' → logprob: -11.875711441040039
    6. 'input' → logprob: -11.875711441040039
    7. ' 
' → logprob: -12.250711441040039
    8. 'n' → logprob: -12.625711441040039
    9. 'a' → logprob: -12.750711441040039
    10. '    ' → logprob: -13.125711441040039

Token 12: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.5478808283805847
    2. '   ' → logprob: -0.9228808283805847
    3. ' n' → logprob: -4.42288064956665
    4. 'a' → logprob: -5.04788064956665
    5. 'x' → logprob: -5.54788064956665
    6. 's' → logprob: -7.79788064956665
    7. 'line' → logprob: -7.79788064956665
    8. 'num' → logprob: -8.172881126403809
    9. 'print' → logprob: -8.297881126403809
    10. 'data' → logprob: -8.672881126403809

Token 13: ' =' (ID: 314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.33392369747161865
    2. ' =' → logprob: -1.4589236974716187
    3. '=' → logprob: -3.333923816680908
    4. ')' → logprob: -5.083923816680908
    5. '  ' → logprob: -5.833923816680908
    6. '<|end|>' → logprob: -6.708923816680908
    7. ' >' → logprob: -7.083923816680908
    8. ' )' → logprob: -7.208923816680908
    9. '[' → logprob: -7.583923816680908
    10. '>' → logprob: -7.583923816680908

Token 14: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.020580658689141273
    2. 'int' → logprob: -3.895580768585205
    3. '=int' → logprob: -10.395580291748047
    4. ' input' → logprob: -13.020580291748047
    5. '(int' → logprob: -13.520580291748047
    6. '   ' → logprob: -13.645580291748047
    7. ' ' → logprob: -13.770580291748047
    8. '<int' → logprob: -13.770580291748047
    9. '[int' → logprob: -15.020580291748047
    10. '	int' → logprob: -15.395580291748047

Token 15: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.04308893904089928
    2. '(' → logprob: -3.168088912963867
    3. '()' → logprob: -9.668088912963867
    4. 'input' → logprob: -11.418088912963867
    5. ' (' → logprob: -12.043088912963867
    6. '=input' → logprob: -13.168088912963867
    7. '(inp' → logprob: -14.043088912963867
    8. '```' → logprob: -14.043088912963867
    9. ')' → logprob: -14.168088912963867
    10. '(
' → logprob: -14.543088912963867

Token 16: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.12977014482021332
    2. '()' → logprob: -2.629770040512085
    3. ')' → logprob: -3.004770040512085
    4. '())
' → logprob: -11.004770278930664
    5. '()))' → logprob: -11.379770278930664
    6. '(' → logprob: -12.004770278930664
    7. '))' → logprob: -12.004770278930664
    8. '`)' → logprob: -12.004770278930664
    9. '()
' → logprob: -13.004770278930664
    10. '();)' → logprob: -13.129770278930664

Token 17: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4214755594730377
    2. 'a' → logprob: -1.5464755296707153
    3. 's' → logprob: -3.296475648880005
    4. ')' → logprob: -4.171475410461426
    5. 'print' → logprob: -4.171475410461426
    6. 'for' → logprob: -4.171475410461426
    7. 'if' → logprob: -4.546475410461426
    8. ' ' → logprob: -5.546475410461426
    9. '    
' → logprob: -5.671475410461426
    10. 'arr' → logprob: -5.921475410461426

Token 18: ' h' (ID: 312)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.08145185559988022
    2. 'arr' → logprob: -3.081451892852783
    3. 's' → logprob: -4.206451892852783
    4. 'if' → logprob: -5.081451892852783
    5. 'd' → logprob: -6.581451892852783
    6. 'for' → logprob: -6.831451892852783
    7. 'lst' → logprob: -6.956451892852783
    8. 'r' → logprob: -6.956451892852783
    9. 'c' → logprob: -7.206451892852783
    10. 'l' → logprob: -7.331451892852783

Token 19: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.425648033618927
    2. '=' → logprob: -1.9256479740142822
    3. ' ' → logprob: -2.6756479740142822
    4. '[' → logprob: -3.0506479740142822
    5. 'e' → logprob: -3.4256479740142822
    6. '   ' → logprob: -4.300648212432861
    7. ',' → logprob: -4.800648212432861
    8. '_' → logprob: -5.175648212432861
    9. 'a' → logprob: -5.425648212432861
    10. '[i' → logprob: -5.550648212432861

Token 20: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -1.0236577987670898
    2. ' [' → logprob: -1.1486577987670898
    3. ' []' → logprob: -1.2736577987670898
    4. 'list' → logprob: -3.77365779876709
    5. '[]' → logprob: -4.64865779876709
    6. '[' → logprob: -4.77365779876709
    7. '[int' → logprob: -6.39865779876709
    8. ' ' → logprob: -7.89865779876709
    9. '[list' → logprob: -8.64865779876709
    10. ' input' → logprob: -8.89865779876709

Token 21: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0052843960002064705
    2. '(range' → logprob: -5.505284309387207
    3. '(h' → logprob: -7.130284309387207
    4. '(input' → logprob: -8.130284309387207
    5. '(int' → logprob: -10.630284309387207
    6. '((' → logprob: -11.380284309387207
    7. '(
' → logprob: -11.505284309387207
    8. '()' → logprob: -11.880284309387207
    9. '(eval' → logprob: -12.255284309387207
    10. '(map' → logprob: -12.505284309387207

Token 22: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.07991689443588257
    2. '(' → logprob: -2.5799169540405273
    3. '(str' → logprob: -7.454916954040527
    4. '(input' → logprob: -8.079916954040527
    5. '(lambda' → logprob: -9.579916954040527
    6. '(
' → logprob: -11.079916954040527
    7. '<int' → logprob: -11.329916954040527
    8. ')' → logprob: -11.454916954040527
    9. 'int' → logprob: -11.579916954040527
    10. '[int' → logprob: -11.829916954040527

Token 23: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0033697308972477913
    2. '(' → logprob: -6.0033698081970215
    3. ',input' → logprob: -7.7533698081970215
    4. 'input' → logprob: -8.253369331359863
    5. ')' → logprob: -8.878369331359863
    6. '=input' → logprob: -11.128369331359863
    7. '(int' → logprob: -11.378369331359863
    8. '))' → logprob: -11.503369331359863
    9. '<input' → logprob: -12.378369331359863
    10. '```' → logprob: -12.503369331359863

Token 24: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.25193944573402405
    2. ' input' → logprob: -1.5019394159317017
    3. '(input' → logprob: -11.87693977355957
    4. ',input' → logprob: -12.87693977355957
    5. '=input' → logprob: -15.50193977355957
    6. ')' → logprob: -15.50193977355957
    7. ' ' → logprob: -15.75193977355957
    8. '	input' → logprob: -15.75193977355957
    9. '   ' → logprob: -16.87693977355957
    10. '<input' → logprob: -17.00193977355957

Token 25: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -7.73183855926618e-05
    2. '()' → logprob: -9.500077247619629
    3. ' ().' → logprob: -13.375077247619629
    4. '()))' → logprob: -15.125077247619629
    5. '(' → logprob: -15.250077247619629
    6. '())' → logprob: -15.375077247619629
    7. '()
' → logprob: -16.125078201293945
    8. ')' → logprob: -18.125078201293945
    9. '.split' → logprob: -18.375078201293945
    10. '()));' → logprob: -18.375078201293945

Token 26: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0002695608709473163
    2. 'strip' → logprob: -8.250269889831543
    3. 'rstrip' → logprob: -12.250269889831543
    4. ' split' → logprob: -13.000269889831543
    5. '(split' → logprob: -13.750269889831543
    6. 'spl' → logprob: -17.000268936157227
    7. ')' → logprob: -17.750268936157227
    8. 'plit' → logprob: -18.625268936157227
    9. 'replace' → logprob: -19.125268936157227
    10. '.split' → logprob: -19.125268936157227

Token 27: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.06614968180656433
    2. '())' → logprob: -2.9411497116088867
    3. '()' → logprob: -4.691149711608887
    4. '))' → logprob: -6.441149711608887
    5. '(' → logprob: -8.441149711608887
    6. ')' → logprob: -9.191149711608887
    7. '())))' → logprob: -9.941149711608887
    8. '()))
' → logprob: -10.816149711608887
    9. '('' → logprob: -11.191149711608887
    10. '()));' → logprob: -11.566149711608887

Token 28: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8196871876716614
    2. '   ' → logprob: -1.1946871280670166
    3. '
' → logprob: -1.8196871280670166
    4. 'h' → logprob: -3.8196871280670166
    5. '[' → logprob: -4.319687366485596
    6. ':' → logprob: -4.694687366485596
    7. 'n' → logprob: -5.319687366485596
    8. '_' → logprob: -5.319687366485596
    9. '    
' → logprob: -5.319687366485596
    10. 'if' → logprob: -5.694687366485596

Token 29: ' max' (ID: 2999)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.15998664498329163
    2. 'c' → logprob: -4.03498649597168
    3. 'max' (adapté à ' max') → logprob: -4.03498649597168
    4. 'dp' → logprob: -4.03498649597168
    5. 'd' → logprob: -4.28498649597168
    6. 's' → logprob: -4.28498649597168
    7. 'count' → logprob: -4.40998649597168
    8. 'm' → logprob: -4.90998649597168
    9. '   ' → logprob: -5.03498649597168
    10. 'p' → logprob: -5.40998649597168

Token 30: '_up' (ID: 18721)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.16744408011436462
    2. '_height' → logprob: -2.5424439907073975
    3. '_h' → logprob: -2.7924439907073975
    4. '_val' → logprob: -4.542444229125977
    5. '_len' → logprob: -7.167444229125977
    6. '_v' → logprob: -7.292444229125977
    7. '_value' → logprob: -7.542444229125977
    8. '_sum' → logprob: -8.417444229125977
    9. '_diff' → logprob: -8.917444229125977
    10. '_l' → logprob: -8.917444229125977

Token 31: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5958384275436401
    2. '=' → logprob: -0.9708384275436401
    3. 'hill' → logprob: -3.0958385467529297
    4. '_' → logprob: -4.47083854675293
    5. 'ward' → logprob: -5.72083854675293
    6. 'd' → logprob: -6.59583854675293
    7. 'date' → logprob: -6.72083854675293
    8. 's' → logprob: -7.22083854675293
    9. 'diff' → logprob: -7.34583854675293
    10. '_diff' → logprob: -7.47083854675293

Token 32: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.46302923560142517
    2. ' ' → logprob: -1.8380292654037476
    3. 'h' → logprob: -2.338029146194458
    4. ' h' → logprob: -2.838029146194458
    5. ' max' → logprob: -3.713029146194458
    6. 'max' → logprob: -3.838029146194458
    7. '1' → logprob: -6.088029384613037
    8. ' -' → logprob: -6.088029384613037
    9. '-' → logprob: -6.088029384613037
    10. ' [' → logprob: -7.213029384613037

Token 33: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3668150305747986
    2. 'h' → logprob: -1.4918150901794434
    3. 'max' → logprob: -2.7418150901794434
    4. '-' → logprob: -5.116815090179443
    5. '1' → logprob: -5.491815090179443
    6. ' ' → logprob: -6.366815090179443
    7. ' h' → logprob: -6.616815090179443
    8. ' max' → logprob: -6.741815090179443
    9. 'float' → logprob: -7.366815090179443
    10. '[' → logprob: -7.616815090179443

Token 34: '
' (ID: 198)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.559596061706543
    2. 'max' → logprob: -1.434596061706543
    3. '<|end|>' → logprob: -2.559596061706543
    4. '
' → logprob: -3.309596061706543
    5. '   ' → logprob: -3.309596061706543
    6. '	max' → logprob: -4.809596061706543
    7. ',' → logprob: -4.934596061706543
    8. ' 
' → logprob: -5.309596061706543
    9. ',max' → logprob: -5.559596061706543
    10. '    
' → logprob: -5.934596061706543

Token 35: '   ' (ID: 271)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.5091040134429932
    2. 'max' → logprob: -1.1341040134429932
    3. 'current' → logprob: -3.884104013442993
    4. '   ' → logprob: -4.009103775024414
    5. ' for' → logprob: -4.884103775024414
    6. ' current' → logprob: -5.009103775024414
    7. 'for' → logprob: -5.509103775024414
    8. 'up' → logprob: -6.134103775024414
    9. 'prev' → logprob: -6.134103775024414
    10. '	max' → logprob: -6.384103775024414

Token 36: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.48529648780822754
    2. 'current' → logprob: -1.9852964878082275
    3. 'cur' → logprob: -2.3602964878082275
    4. 'curr' → logprob: -2.6102964878082275
    5. 'for' → logprob: -3.2352964878082275
    6. 'up' → logprob: -4.110296249389648
    7. ' max' → logprob: -5.235296249389648
    8. 'down' → logprob: -5.735296249389648
    9. 'prev' → logprob: -5.985296249389648
    10. 'diff' → logprob: -6.235296249389648

Token 37: '_down' (ID: 40267)
  Prédit: '_down'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_down' → logprob: -0.024365082383155823
    2. '_up' → logprob: -4.649364948272705
    3. '_' → logprob: -5.149364948272705
    4. '_diff' → logprob: -5.274364948272705
    5. '_d' → logprob: -6.149364948272705
    6. '_dn' → logprob: -8.399365425109863
    7. '_height' → logprob: -9.024365425109863
    8. 'down' → logprob: -9.149365425109863
    9. '_gap' → logprob: -9.149365425109863
    10. '_dw' → logprob: -9.149365425109863

Token 38: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14268869161605835
    2. '=' → logprob: -2.017688751220703
    3. ' ' → logprob: -11.517688751220703
    4. ',' → logprob: -12.892688751220703
    5. '_' → logprob: -15.142688751220703
    6. ')' → logprob: -15.392688751220703
    7. ' =
' → logprob: -16.017688751220703
    8. '  ' → logprob: -16.142688751220703
    9. '>' → logprob: -16.142688751220703
    10. ' ,' → logprob: -16.642688751220703

Token 39: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3134610056877136
    2. '0' → logprob: -1.3134610652923584
    3. ' h' → logprob: -9.813461303710938
    4. '1' → logprob: -9.938461303710938
    5. ' max' → logprob: -10.438461303710938
    6. ' -' → logprob: -10.875961303710938
    7. 'max' → logprob: -11.375961303710938
    8. '  ' → logprob: -12.125961303710938
    9. '   ' → logprob: -12.500961303710938
    10. ' ' → logprob: -12.625961303710938

Token 40: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07907727360725403
    2. ' ' → logprob: -2.5790772438049316
    3. '1' → logprob: -9.45407772064209
    4. 'max' → logprob: -10.45407772064209
    5. '-' → logprob: -10.95407772064209
    6. 'float' → logprob: -11.39157772064209
    7. ' -' → logprob: -11.51657772064209
    8. ' max' → logprob: -11.57907772064209
    9. '   ' → logprob: -12.07907772064209
    10. ' float' → logprob: -12.70407772064209

Token 41: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7725577354431152
    2. '<|end|>' → logprob: -0.8975577354431152
    3. '   ' → logprob: -2.2725577354431152
    4. '    
' → logprob: -5.272557735443115
    5. '<|end|>' → logprob: -5.272557735443115
    6. ' for' → logprob: -5.272557735443115
    7. ' 
' → logprob: -6.022557735443115
    8. '\n' → logprob: -6.147557735443115
    9. '  
' → logprob: -6.522557735443115
    10. ' ' → logprob: -6.772557735443115

Token 42: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04617290571331978
    2. ' for' → logprob: -3.921172857284546
    3. 'for' → logprob: -4.546173095703125
    4. '<|end|>' → logprob: -4.671173095703125
    5. '    
' → logprob: -6.796173095703125
    6. ' ' → logprob: -6.796173095703125
    7. '
' → logprob: -7.296173095703125
    8. '  ' → logprob: -7.796173095703125
    9. '```' → logprob: -8.171173095703125
    10. '    ' → logprob: -8.546173095703125

Token 43: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6214177012443542
    2. 'for' (adapté à ' for') → logprob: -0.8714177012443542
    3. '   ' → logprob: -3.496417760848999
    4. 'prev' → logprob: -5.49641752243042
    5. ' max' → logprob: -5.87141752243042
    6. 'max' → logprob: -5.99641752243042
    7. ' prev' → logprob: -6.62141752243042
    8. 'current' → logprob: -6.62141752243042
    9. ' current' → logprob: -7.37141752243042
    10. '```' → logprob: -8.496417999267578

Token 44: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.007035988848656416
    2. 'i' → logprob: -5.007036209106445
    3. ' ' → logprob: -8.632036209106445
    4. ' range' → logprob: -10.257036209106445
    5. '_' → logprob: -10.632036209106445
    6. '(i' → logprob: -10.882036209106445
    7. ' _' → logprob: -11.257036209106445
    8. '	i' → logprob: -11.632036209106445
    9. '<|end|>' → logprob: -11.757036209106445
    10. '_i' → logprob: -11.882036209106445

Token 45: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006965781562030315
    2. 'in' → logprob: -5.506965637207031
    3. ' ' → logprob: -5.881965637207031
    4. '  ' → logprob: -10.131965637207031
    5. '+' → logprob: -10.881965637207031
    6. '   ' → logprob: -11.256965637207031
    7. ' i' → logprob: -11.881965637207031
    8. '	in' → logprob: -12.006965637207031
    9. '1' → logprob: -13.506965637207031
    10. 'range' → logprob: -13.756965637207031

Token 46: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.00410380819812417
    2. 'range' → logprob: -5.504103660583496
    3. ' ' → logprob: -10.629103660583496
    4. '	range' → logprob: -14.754103660583496
    5. '(range' → logprob: -15.379103660583496
    6. '  ' → logprob: -15.504103660583496
    7. '   ' → logprob: -15.504103660583496
    8. ' xrange' → logprob: -16.504104614257812
    9. ' in' → logprob: -18.004104614257812
    10. '_range' → logprob: -18.129104614257812

Token 47: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -8.73314929776825e-05
    2. '(len' → logprob: -9.62508773803711
    3. '(n' → logprob: -10.87508773803711
    4. ' (' → logprob: -13.25008773803711
    5. '(
' → logprob: -15.37508773803711
    6. ' ' → logprob: -15.37508773803711
    7. '(i' → logprob: -17.00008773803711
    8. '1' → logprob: -18.12508773803711
    9. '(

' → logprob: -18.12508773803711
    10. '((' → logprob: -18.25008773803711

Token 48: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003691289806738496
    2. 'n' → logprob: -5.62869119644165
    3. 'len' → logprob: -9.878691673278809
    4. '(' → logprob: -11.003691673278809
    5. ' ' → logprob: -11.753691673278809
    6. ' n' → logprob: -11.878691673278809
    7. '(n' → logprob: -12.003691673278809
    8. '   ' → logprob: -14.253691673278809
    9. ')' → logprob: -14.878691673278809
    10. '(len' → logprob: -14.878691673278809

Token 49: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7023950815200806
    2. ',' → logprob: -1.4523950815200806
    3. ' )' → logprob: -2.077394962310791
    4. ' ,' → logprob: -2.577394962310791
    5. ' ' → logprob: -3.827394962310791
    6. '<|end|>' → logprob: -3.827394962310791
    7. ',len' → logprob: -4.327394962310791
    8. '(len' → logprob: -5.327394962310791
    9. ',n' → logprob: -6.327394962310791
    10. '):' → logprob: -6.952394962310791

Token 50: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1270516812801361
    2. ' n' → logprob: -2.127051591873169
    3. '   ' → logprob: -9.62705135345459
    4. 'len' → logprob: -10.50205135345459
    5. ' len' → logprob: -10.75205135345459
    6. ' ' → logprob: -12.12705135345459
    7. '	n' → logprob: -13.37705135345459
    8. '    ' → logprob: -13.87705135345459
    9. '  ' → logprob: -14.50205135345459
    10. ')n' → logprob: -15.50205135345459

Token 51: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0007248217007145286
    2. ')' → logprob: -7.750724792480469
    3. '):
' → logprob: -9.125724792480469
    4. ' ):' → logprob: -9.250724792480469
    5. ':' → logprob: -9.375724792480469
    6. '():' → logprob: -13.500724792480469
    7. ' ' → logprob: -14.625724792480469
    8. '   ' → logprob: -14.875724792480469
    9. '}:' → logprob: -14.875724792480469
    10. ',' → logprob: -15.250724792480469

Token 52: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0612553358078003
    2. ':' → logprob: -1.5612553358078003
    3. ' ' → logprob: -1.6862553358078003
    4. '   ' → logprob: -2.18625545501709
    5. '<|end|>' → logprob: -2.81125545501709
    6. ' 
' → logprob: -3.43625545501709
    7. '    ' → logprob: -3.93625545501709
    8. ':
' → logprob: -5.31125545501709
    9. '    
' → logprob: -5.56125545501709
    10. ' :' → logprob: -5.81125545501709

Token 53: ' diff' (ID: 8868)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.8422391414642334
    2. ' if' → logprob: -1.0922391414642334
    3. '   ' → logprob: -2.3422391414642334
    4. ' ' → logprob: -2.9672391414642334
    5. 'if' → logprob: -3.3422391414642334
    6. '     
' → logprob: -4.5922393798828125
    7. ' 
' → logprob: -4.8422393798828125
    8. '       ' → logprob: -4.9672393798828125
    9. '```' → logprob: -5.3422393798828125
    10. '  ' → logprob: -5.5922393798828125

Token 54: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07067824900150299
    2. '=' → logprob: -2.695678234100342
    3. ' ' → logprob: -8.0706787109375
    4. ')' → logprob: -8.1956787109375
    5. '<|end|>' → logprob: -10.1956787109375
    6. ']' → logprob: -11.0706787109375
    7. '_' → logprob: -11.1956787109375
    8. 's' → logprob: -11.3206787109375
    9. '	' → logprob: -11.3206787109375
    10. ',' → logprob: -11.4456787109375

Token 55: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.4740804135799408
    2. 'h' → logprob: -0.9740804433822632
    3. '	h' → logprob: -13.849080085754395
    4. '(h' → logprob: -13.849080085754395
    5. '    ' → logprob: -14.474080085754395
    6. '   ' → logprob: -14.599080085754395
    7. ' ' → logprob: -15.474080085754395
    8. ' (' → logprob: -16.47408103942871
    9. '       ' → logprob: -16.72408103942871
    10. '(' → logprob: -17.34908103942871

Token 56: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.7697225252486533e-06
    2. '[' → logprob: -12.500003814697266
    3. '[I' → logprob: -16.875003814697266
    4. '[j' → logprob: -18.375003814697266
    5. '[s' → logprob: -19.000003814697266
    6. '[h' → logprob: -19.125003814697266
    7. '```' → logprob: -19.125003814697266
    8. 'i' → logprob: -19.375003814697266
    9. '[
' → logprob: -19.750003814697266
    10. '[u' → logprob: -19.875003814697266

Token 57: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007285254076123238
    2. '-' → logprob: -5.382285118103027
    3. ']-' → logprob: -6.507285118103027
    4. ' -' → logprob: -7.007285118103027
    5. ' ]' → logprob: -8.632285118103027
    6. '[' → logprob: -10.007285118103027
    7. ')' → logprob: -10.257285118103027
    8. '	' → logprob: -13.882285118103027
    9. '']' → logprob: -14.507285118103027
    10. '```' → logprob: -15.007285118103027

Token 58: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.08925655484199524
    2. ' -' → logprob: -2.464256525039673
    3. '<|end|>' → logprob: -8.339256286621094
    4. ' ' → logprob: -9.839256286621094
    5. '>' → logprob: -11.464256286621094
    6. '	' → logprob: -12.464256286621094
    7. ')' → logprob: -12.839256286621094
    8. '_' → logprob: -13.589256286621094
    9. '.' → logprob: -14.214256286621094
    10. '<|end|>' → logprob: -14.464256286621094

Token 59: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.03804286941885948
    2. ' h' → logprob: -3.2880427837371826
    3. '	h' → logprob: -13.913043022155762
    4. ' ' → logprob: -15.663043022155762
    5. '   ' → logprob: -16.288042068481445
    6. '<h' → logprob: -16.288042068481445
    7. '       ' → logprob: -17.163042068481445
    8. '[h' → logprob: -17.663042068481445
    9. ')' → logprob: -18.038042068481445
    10. '    ' → logprob: -18.413042068481445

Token 60: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.2200749754119897e-06
    2. '[' → logprob: -13.625001907348633
    3. 'i' → logprob: -14.500001907348633
    4. 's' → logprob: -16.000001907348633
    5. '[j' → logprob: -16.250001907348633
    6. '[I' → logprob: -16.625001907348633
    7. '{i' → logprob: -17.125001907348633
    8. '1' → logprob: -17.625001907348633
    9. '```' → logprob: -17.625001907348633
    10. '-' → logprob: -18.125001907348633

Token 61: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -5.800739018013701e-05
    2. '1' → logprob: -10.5000581741333
    3. ' -' → logprob: -10.7500581741333
    4. ']' → logprob: -12.3750581741333
    5. '])' → logprob: -13.1250581741333
    6. '[' → logprob: -13.3750581741333
    7. '[-' → logprob: -14.8750581741333
    8. '[i' → logprob: -15.2500581741333
    9. ')' → logprob: -16.250057220458984
    10. '0' → logprob: -16.750057220458984

Token 62: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.36574100604048e-06
    2. ' ' → logprob: -12.750004768371582
    3. '```' → logprob: -14.500004768371582
    4. ']' → logprob: -14.812504768371582
    5. '   ' → logprob: -16.062503814697266
    6. ')' → logprob: -16.937503814697266
    7. '১' → logprob: -17.500003814697266
    8. '`' → logprob: -17.562503814697266
    9. '  ' → logprob: -17.687503814697266
    10. '१' → logprob: -17.812503814697266

Token 63: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5332478142227046e-05
    2. '<|end|>' → logprob: -12.250015258789062
    3. ')
' → logprob: -12.375015258789062
    4. ' )' → logprob: -12.625015258789062
    5. '))' → logprob: -14.125015258789062
    6. '])' → logprob: -14.875015258789062
    7. '   ' → logprob: -15.125015258789062
    8. '       ' → logprob: -15.375015258789062
    9. ')])' → logprob: -15.625015258789062
    10. ']' → logprob: -15.750015258789062

Token 64: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1375535726547241
    2. '<|end|>' → logprob: -1.2625535726547241
    3. ')' → logprob: -1.6375535726547241
    4. '
' → logprob: -2.5125536918640137
    5. '   ' → logprob: -2.6375536918640137
    6. ' ' → logprob: -4.762553691864014
    7. ' 
' → logprob: -5.387553691864014
    8. ',' → logprob: -5.512553691864014
    9. ':' → logprob: -5.637553691864014
    10. '' → logprob: -5.762553691864014

Token 65: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.35666564106941223
    2. ' if' → logprob: -2.23166561126709
    3. 'i' → logprob: -2.60666561126709
    4. '       ' → logprob: -2.73166561126709
    5. ' ' → logprob: -3.48166561126709
    6. '        ' → logprob: -5.10666561126709
    7. ' i' → logprob: -5.98166561126709
    8. ')' → logprob: -6.23166561126709
    9. '           ' → logprob: -6.23166561126709
    10. '    ' → logprob: -6.35666561126709

Token 66: ' diff' (ID: 8868)
  Prédit: ' diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' diff' → logprob: -0.0008732284768484533
    2. 'diff' → logprob: -7.62587308883667
    3. ' ' → logprob: -8.250873565673828
    4. '	diff' → logprob: -9.250873565673828
    5. ' ' → logprob: -11.125873565673828
    6. '(diff' → logprob: -11.625873565673828
    7. ' dif' → logprob: -12.500873565673828
    8. ' d' → logprob: -14.875873565673828
    9. '    ' → logprob: -16.125873565673828
    10. '  ' → logprob: -16.375873565673828

Token 67: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.22554278373718262
    2. ' >' → logprob: -1.6005427837371826
    3. ' ' → logprob: -9.100543022155762
    4. '<' → logprob: -12.350543022155762
    5. '">' → logprob: -12.475543022155762
    6. ' <' → logprob: -13.225543022155762
    7. ')' → logprob: -13.600543022155762
    8. '  ' → logprob: -13.850543022155762
    9. '   ' → logprob: -13.850543022155762
    10. ' ' → logprob: -13.850543022155762

Token 68: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3226627707481384
    2. ' ' → logprob: -1.3226628303527832
    3. ' max' → logprob: -5.197662830352783
    4. 'max' → logprob: -5.572662830352783
    5. '=' → logprob: -12.010162353515625
    6. '  ' → logprob: -12.260162353515625
    7. '   ' → logprob: -13.010162353515625
    8. '>' → logprob: -13.010162353515625
    9. '=max' → logprob: -13.072662353515625
    10. '	max' → logprob: -13.260162353515625

Token 69: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.038507651537656784
    2. ' ' → logprob: -3.2885076999664307
    3. 'max' → logprob: -7.788507461547852
    4. ' max' → logprob: -9.913507461547852
    5. '  ' → logprob: -14.038507461547852
    6. '```' → logprob: -15.726007461547852
    7. '1' → logprob: -15.976007461547852
    8. '>' → logprob: -16.41350746154785
    9. '-' → logprob: -16.47600746154785
    10. ')' → logprob: -16.47600746154785

Token 70: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -8.184812031686306e-05
    2. '):' → logprob: -10.625082015991211
    3. ' :' → logprob: -10.625082015991211
    4. ':
' → logprob: -11.125082015991211
    5. '<|end|>' → logprob: -12.000082015991211
    6. ' and' → logprob: -12.375082015991211
    7. '           ' → logprob: -13.250082015991211
    8. ',' → logprob: -13.500082015991211
    9. ')' → logprob: -13.500082015991211
    10. '       ' → logprob: -14.375082015991211

Token 71: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6004924178123474
    2. ' max' → logprob: -1.4754924774169922
    3. ':' → logprob: -1.8504924774169922
    4. 'max' → logprob: -2.975492477416992
    5. '<|end|>' → logprob: -5.475492477416992
    6. ':
' → logprob: -5.725492477416992
    7. ' and' → logprob: -6.475492477416992
    8. ':max' → logprob: -6.850492477416992
    9. '       ' → logprob: -7.475492477416992
    10. ' ' → logprob: -7.725492477416992

Token 72: ' if' (ID: 538)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.11298905313014984
    2. 'max' → logprob: -2.2379889488220215
    3. '               ' → logprob: -9.36298942565918
    4. '           ' → logprob: -9.73798942565918
    5. ' if' → logprob: -11.48798942565918
    6. 'if' (adapté à ' if') → logprob: -12.98798942565918
    7. '
' → logprob: -13.11298942565918
    8. '	max' → logprob: -13.36298942565918
    9. '[max' → logprob: -13.86298942565918
    10. ' ' → logprob: -14.11298942565918

Token 73: ' diff' (ID: 8868)
  Prédit: ' diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' diff' → logprob: -0.01840019039809704
    2. 'diff' → logprob: -4.018400192260742
    3. ' max' → logprob: -8.518400192260742
    4. ' dif' → logprob: -11.143400192260742
    5. '	diff' → logprob: -11.143400192260742
    6. 'max' → logprob: -11.518400192260742
    7. '            ' → logprob: -12.018400192260742
    8. '(diff' → logprob: -13.143400192260742
    9. '           ' → logprob: -13.768400192260742
    10. '        ' → logprob: -14.768400192260742

Token 74: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.009822671301662922
    2. '>' → logprob: -4.634822845458984
    3. ' ' → logprob: -10.134822845458984
    4. '<|end|>' → logprob: -11.259822845458984
    5. ')' → logprob: -11.759822845458984
    6. '<|end|>' → logprob: -13.259822845458984
    7. '">' → logprob: -14.259822845458984
    8. ' ' → logprob: -14.509822845458984
    9. ')>' → logprob: -15.009822845458984
    10. '...' → logprob: -15.134822845458984

Token 75: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.0009117019944824278
    2. 'max' → logprob: -7.000911712646484
    3. ' ' → logprob: -16.125911712646484
    4. ' maxlength' → logprob: -16.625911712646484
    5. '	max' → logprob: -17.250911712646484
    6. '(max' → logprob: -18.500911712646484
    7. ' ' → logprob: -18.500911712646484
    8. ' maximum' → logprob: -19.000911712646484
    9. '=max' → logprob: -19.375911712646484
    10. '[max' → logprob: -19.875911712646484

Token 76: '_up' (ID: 18721)
  Prédit: '_up'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_up' → logprob: -4.246537173457909e-06
    2. '_' → logprob: -12.875003814697266
    3. '_down' → logprob: -13.375003814697266
    4. '_u' → logprob: -17.000003814697266
    5. '_max' → logprob: -18.375003814697266
    6. '_UP' → logprob: -18.875003814697266
    7. '_upper' → logprob: -19.500003814697266
    8. ' _' → logprob: -19.625003814697266
    9. '__' → logprob: -19.750003814697266
    10. ')_' → logprob: -20.250003814697266

Token 77: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005240809405222535
    2. '):' → logprob: -7.750524044036865
    3. '<|end|>' → logprob: -10.125524520874023
    4. ':
' → logprob: -10.500524520874023
    5. ' :' → logprob: -11.500524520874023
    6. ')' → logprob: -11.625524520874023
    7. '):
' → logprob: -13.250524520874023
    8. '<|end|>' → logprob: -13.750524520874023
    9. '=' → logprob: -14.250524520874023
    10. ']:' → logprob: -14.500524520874023

Token 78: '               ' (ID: 506)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.184868723154068
    2. 'max' → logprob: -2.184868812561035
    3. '               ' → logprob: -2.934868812561035
    4. '[max' → logprob: -7.559868812561035
    5. '(max' → logprob: -7.684868812561035
    6. ':' → logprob: -7.684868812561035
    7. '=max' → logprob: -7.684868812561035
    8. ':
' → logprob: -8.684868812561035
    9. 'diff' → logprob: -8.809868812561035
    10. ':max' → logprob: -8.809868812561035

Token 79: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.016896583139896393
    2. 'max' (adapté à ' max') → logprob: -4.516896724700928
    3. '                   ' → logprob: -5.266896724700928
    4. '               ' → logprob: -8.14189624786377
    5. '                ' → logprob: -9.26689624786377
    6. '(max' → logprob: -9.76689624786377
    7. '                    
' → logprob: -10.39189624786377
    8. '<|end|>' → logprob: -10.51689624786377
    9. '                    ' → logprob: -10.64189624786377
    10. '                       ' → logprob: -10.64189624786377

Token 80: '_up' (ID: 18721)
  Prédit: '_up'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_up' → logprob: -3.5954712075181305e-05
    2. '_' → logprob: -10.375036239624023
    3. '_u' → logprob: -13.250036239624023
    4. ' _' → logprob: -13.750036239624023
    5. '_down' → logprob: -14.500036239624023
    6. '<|end|>' → logprob: -15.125036239624023
    7. '_UP' → logprob: -15.500036239624023
    8. '_max' → logprob: -15.750036239624023
    9. '_upper' → logprob: -16.125036239624023
    10. ')_' → logprob: -16.500036239624023

Token 81: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014163863845169544
    2. '=' → logprob: -4.264163970947266
    3. ' ' → logprob: -16.389163970947266
    4. ' =
' → logprob: -16.389163970947266
    5. '<|end|>' → logprob: -16.389163970947266
    6. ' =)' → logprob: -17.264163970947266
    7. '                ' → logprob: -17.514163970947266
    8. '=max' → logprob: -17.639163970947266
    9. '                    ' → logprob: -18.514163970947266
    10. '=

' → logprob: -18.514163970947266

Token 82: ' diff' (ID: 8868)
  Prédit: ' diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' diff' → logprob: -0.01815216802060604
    2. 'diff' → logprob: -4.018152236938477
    3. '	diff' → logprob: -13.643152236938477
    4. ' dif' → logprob: -14.643152236938477
    5. ' ' → logprob: -15.143152236938477
    6. ' d' → logprob: -15.893152236938477
    7. ' ' → logprob: -16.018152236938477
    8. '(diff' → logprob: -16.518152236938477
    9. 'd' → logprob: -16.768152236938477
    10. '.diff' → logprob: -18.643152236938477

Token 83: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03950212523341179
    2. '
' → logprob: -3.5395021438598633
    3. '\n' → logprob: -5.914502143859863
    4. '<|end|>' → logprob: -6.539502143859863
    5. ' else' → logprob: -6.914502143859863
    6. '        
' → logprob: -7.164502143859863
    7. '    
' → logprob: -7.539502143859863
    8. 'elif' → logprob: -7.664502143859863
    9. ' 
' → logprob: -7.789502143859863
    10. ' elif' → logprob: -7.914502143859863

Token 84: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020014693960547447
    2. '
' → logprob: -4.770014762878418
    3. ' else' → logprob: -5.020014762878418
    4. ' elif' → logprob: -6.645014762878418
    5. '<|end|>' → logprob: -7.270014762878418
    6. '    
' → logprob: -7.520014762878418
    7. 'elif' → logprob: -7.770014762878418
    8. '   ' → logprob: -8.020014762878418
    9. '        
' → logprob: -8.270014762878418
    10. 'else' → logprob: -8.395014762878418

Token 85: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33762359619140625
    2. ' else' → logprob: -1.4626235961914062
    3. ' elif' → logprob: -3.7126235961914062
    4. 'else' (adapté à ' else') → logprob: -4.587623596191406
    5. 'elif' → logprob: -4.962623596191406
    6. '    ' → logprob: -5.462623596191406
    7. '        ' → logprob: -6.087623596191406
    8. '   ' → logprob: -6.587623596191406
    9. ' ' → logprob: -6.837623596191406
    10. '	elif' → logprob: -7.212623596191406

Token 86: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006137345917522907
    2. ' if' → logprob: -6.006137371063232
    3. ':
' → logprob: -6.756137371063232
    4. '        ' → logprob: -7.006137371063232
    5. '           ' → logprob: -7.506137371063232
    6. '       ' → logprob: -7.631137371063232
    7. ' :' → logprob: -8.006136894226074
    8. 'if' → logprob: -8.881136894226074
    9. '{' → logprob: -10.756136894226074
    10. ' :
' → logprob: -11.506136894226074

Token 87: '           ' (ID: 352)
  Prédit: '        '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '        ' → logprob: -0.6652319431304932
    2. ' if' → logprob: -0.9152319431304932
    3. '           ' → logprob: -2.915231943130493
    4. '            ' → logprob: -3.790231943130493
    5. 'if' → logprob: -6.040231704711914
    6. '```' → logprob: -6.415231704711914
    7. ':' → logprob: -6.665231704711914
    8. ' ' → logprob: -7.040231704711914
    9. '       ' → logprob: -7.415231704711914
    10. '    ' → logprob: -7.540231704711914

Token 88: ' diff' (ID: 8868)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.026483632624149323
    2. 'if' → logprob: -3.6514835357666016
    3. '           ' → logprob: -8.901483535766602
    4. '        ' → logprob: -10.401483535766602
    5. '       ' → logprob: -11.901483535766602
    6. ' ' → logprob: -12.276483535766602
    7. '            ' → logprob: -13.651483535766602
    8. '```' → logprob: -13.651483535766602
    9. '    ' → logprob: -14.026483535766602
    10. '	if' → logprob: -14.901483535766602

Token 89: ' =' (ID: 314)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.03969543054699898
    2. ' <' → logprob: -3.2896955013275146
    3. '=' → logprob: -6.5396952629089355
    4. ' =' → logprob: -8.789695739746094
    5. '   ' → logprob: -10.914695739746094
    6. ' ' → logprob: -12.039695739746094
    7. '```' → logprob: -12.289695739746094
    8. 'if' → logprob: -12.914695739746094
    9. '*=' → logprob: -13.039695739746094
    10. ' *=' → logprob: -13.039695739746094

Token 90: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.9226621985435486
    2. ' -' → logprob: -0.9226621985435486
    3. '-d' → logprob: -2.2976622581481934
    4. 'abs' → logprob: -2.9226622581481934
    5. ' abs' → logprob: -3.0476622581481934
    6. ' diff' → logprob: -6.547662258148193
    7. 'diff' → logprob: -6.922662258148193
    8. '-h' → logprob: -8.172661781311035
    9. '   ' → logprob: -8.797661781311035
    10. '-min' → logprob: -9.297661781311035

Token 91: 'diff' (ID: 31460)
  Prédit: 'diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.00010151672904612496
    2. ' diff' → logprob: -9.250101089477539
    3. '1' → logprob: -12.750101089477539
    4. '	diff' → logprob: -13.125101089477539
    5. '(diff' → logprob: -14.625101089477539
    6. '_diff' → logprob: -18.12510108947754
    7. '   ' → logprob: -18.37510108947754
    8. ' ' → logprob: -18.62510108947754
    9. '<|end|>' → logprob: -18.62510108947754
    10. 'dif' → logprob: -18.75010108947754

Token 92: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.021204445511102676
    2. ' if' → logprob: -4.146204471588135
    3. 'if' → logprob: -5.896204471588135
    4. '       ' → logprob: -6.521204471588135
    5. '
' → logprob: -7.896204471588135
    6. '               ' → logprob: -8.396203994750977
    7. '```' → logprob: -9.021203994750977
    8. '>' → logprob: -10.271203994750977
    9. '<|end|>' → logprob: -10.271203994750977
    10. '            
' → logprob: -10.646203994750977

Token 93: '           ' (ID: 352)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2034459114074707
    2. '           ' → logprob: -1.9534459114074707
    3. '<|end|>' → logprob: -4.328445911407471
    4. '       ' → logprob: -4.578445911407471
    5. ' 
' → logprob: -5.203445911407471
    6. 'if' → logprob: -5.828445911407471
    7. '```' → logprob: -5.953445911407471
    8. '               ' → logprob: -6.453445911407471
    9. '
' → logprob: -6.453445911407471
    10. '            
' → logprob: -6.453445911407471

Token 94: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.10072524845600128
    2. ' if' → logprob: -2.3507251739501953
    3. '           ' → logprob: -7.600725173950195
    4. '```' → logprob: -11.225725173950195
    5. '       ' → logprob: -12.600725173950195
    6. '               ' → logprob: -14.225725173950195
    7. '   ' → logprob: -14.600725173950195
    8. ' ' → logprob: -14.975725173950195
    9. '	if' → logprob: -16.350725173950195
    10. '``' → logprob: -16.725725173950195

Token 95: ' diff' (ID: 8868)
  Prédit: ' diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' diff' → logprob: -0.043004110455513
    2. 'diff' → logprob: -3.168004035949707
    3. '(diff' → logprob: -13.418004035949707
    4. ' max' → logprob: -13.543004035949707
    5. '	diff' → logprob: -13.668004035949707
    6. ' dif' → logprob: -14.918004035949707
    7. 'max' → logprob: -15.543004035949707
    8. '           ' → logprob: -16.168004989624023
    9. ' ' → logprob: -16.418004989624023
    10. '            ' → logprob: -17.043004989624023

Token 96: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.00030590701499022543
    2. '>' → logprob: -8.125306129455566
    3. '<|end|>' → logprob: -11.750306129455566
    4. ' ' → logprob: -13.375306129455566
    5. '<|end|>' → logprob: -15.375306129455566
    6. ' ' → logprob: -16.37530517578125
    7. ' >

' → logprob: -16.50030517578125
    8. ' >
' → logprob: -17.87530517578125
    9. '...' → logprob: -17.87530517578125
    10. ')' → logprob: -18.00030517578125

Token 97: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.20141616463661194
    2. 'max' → logprob: -1.7014161348342896
    3. '(max' → logprob: -13.201416015625
    4. '<|end|>' → logprob: -14.826416015625
    5. '[max' → logprob: -15.451416015625
    6. '	max' → logprob: -15.701416015625
    7. '_max' → logprob: -16.201416015625
    8. '=max' → logprob: -16.326416015625
    9. ' ' → logprob: -17.076416015625
    10. ',max' → logprob: -17.701416015625

Token 98: '_down' (ID: 40267)
  Prédit: '_down'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_down' → logprob: -0.0004898841143585742
    2. 'down' → logprob: -7.625489711761475
    3. ' down' → logprob: -14.625490188598633
    4. '_d' → logprob: -15.000490188598633
    5. 'dow' → logprob: -15.125490188598633
    6. '_DOWN' → logprob: -15.250490188598633
    7. '_' → logprob: -15.250490188598633
    8. '_up' → logprob: -15.750490188598633
    9. 'd' → logprob: -16.625490188598633
    10. 'Down' → logprob: -16.750490188598633

Token 99: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00013095269969198853
    2. '=' → logprob: -10.125130653381348
    3. '               ' → logprob: -10.125130653381348
    4. ':
' → logprob: -10.500130653381348
    5. ' :' → logprob: -11.250130653381348
    6. '):' → logprob: -12.500130653381348
    7. ' =' → logprob: -12.875130653381348
    8. '           ' → logprob: -13.125130653381348
    9. ',' → logprob: -15.000130653381348
    10. '<|end|>' → logprob: -15.000130653381348

Token 100: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0150686576962471
    2. ' max' → logprob: -4.390068531036377
    3. ' diff' → logprob: -6.515068531036377
    4. 'diff' → logprob: -7.890068531036377
    5. '           ' → logprob: -8.015069007873535
    6. '<|end|>' → logprob: -9.265069007873535
    7. 'max' → logprob: -9.515069007873535
    8. '              ' → logprob: -10.265069007873535
    9. '                ' → logprob: -10.265069007873535
    10. '            ' → logprob: -10.390069007873535

Token 101: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.07934180647134781
    2. 'max' (adapté à ' max') → logprob: -2.5793418884277344
    3. 'diff' → logprob: -7.954341888427734
    4. ' diff' → logprob: -9.204341888427734
    5. '	max' → logprob: -16.829341888427734
    6. 'd' → logprob: -16.954341888427734
    7. ',max' → logprob: -17.329341888427734
    8. '(max' → logprob: -17.454341888427734
    9. 'Max' → logprob: -17.704341888427734
    10. '_max' → logprob: -17.954341888427734

Token 102: '_down' (ID: 40267)
  Prédit: '_down'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_down' → logprob: -2.816093228830141e-06
    2. 'down' → logprob: -13.50000286102295
    3. '_' → logprob: -14.75000286102295
    4. '_d' → logprob: -14.87500286102295
    5. '_up' → logprob: -15.00000286102295
    6. '_do' → logprob: -16.125001907348633
    7. '_DOWN' → logprob: -16.625001907348633
    8. ' _' → logprob: -17.625001907348633
    9. ' down' → logprob: -18.125001907348633
    10. 'Down' → logprob: -18.625001907348633

Token 103: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141363143920898
    2. '=' → logprob: -1.701413631439209
    3. ' ' → logprob: -15.576414108276367
    4. ' =
' → logprob: -16.826414108276367
    5. 'diff' → logprob: -17.201414108276367
    6. '=max' → logprob: -17.826414108276367
    7. ' ' → logprob: -18.201414108276367
    8. '=

' → logprob: -18.326414108276367
    9. '=
' → logprob: -18.826414108276367
    10. '＝' → logprob: -19.076414108276367

Token 104: ' diff' (ID: 8868)
  Prédit: ' diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' diff' → logprob: -0.6931533217430115
    2. 'diff' → logprob: -0.6931533217430115
    3. '	diff' → logprob: -12.068153381347656
    4. '(diff' → logprob: -15.693153381347656
    5. ' ' → logprob: -15.818153381347656
    6. '_diff' → logprob: -18.068153381347656
    7. '.diff' → logprob: -18.443153381347656
    8. 'd' → logprob: -18.568153381347656
    9. ' ' → logprob: -20.068153381347656
    10. ' dif' → logprob: -20.318153381347656

Token 105: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10552439093589783
    2. 'print' → logprob: -2.4805243015289307
    3. '\n' → logprob: -4.98052453994751
    4. '   ' → logprob: -5.35552453994751
    5. '    
' → logprob: -5.85552453994751
    6. '  
' → logprob: -7.10552453994751
    7. ' print' → logprob: -8.230524063110352
    8. '<|end|>' → logprob: -8.480524063110352
    9. ' 
' → logprob: -8.730524063110352
    10. '
' → logprob: -9.105524063110352

Token 106: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.016846178099513054
    2. '
' → logprob: -4.141846179962158
    3. '   ' → logprob: -7.766846179962158
    4. '    
' → logprob: -8.641845703125
    5. '\n' → logprob: -9.641845703125
    6. '  
' → logprob: -10.141845703125
    7. ' print' → logprob: -10.391845703125
    8. ')' → logprob: -10.516845703125
    9. ')
' → logprob: -10.891845703125
    10. '
' → logprob: -12.266845703125

Token 107: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.002855755155906081
    2. '
' → logprob: -5.8778557777404785
    3. ' print' → logprob: -10.50285530090332
    4. '    
' → logprob: -11.62785530090332
    5. '   ' → logprob: -12.12785530090332
    6. '\n' → logprob: -12.75285530090332
    7. '```' → logprob: -13.00285530090332
    8. '  
' → logprob: -13.37785530090332
    9. ' 
' → logprob: -14.12785530090332
    10. '
' → logprob: -14.87785530090332

Token 108: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.25404778122901917
    2. '(' → logprob: -1.5040477514266968
    3. '("' → logprob: -6.879047870635986
    4. '('' → logprob: -7.129047870635986
    5. '("("' → logprob: -8.879047393798828
    6. '(f' → logprob: -9.754047393798828
    7. '((' → logprob: -9.754047393798828
    8. '()' → logprob: -10.879047393798828
    9. '(abs' → logprob: -12.879047393798828
    10. '("(' → logprob: -13.379047393798828

Token 109: '_up' (ID: 18721)
  Prédit: '_up'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_up' → logprob: -0.0007107630372047424
    2. '_down' → logprob: -7.250710964202881
    3. '_' → logprob: -15.000710487365723
    4. '_max' → logprob: -15.125710487365723
    5. 'up' → logprob: -16.37571144104004
    6. '(max' → logprob: -16.75071144104004
    7. '(up' → logprob: -17.50071144104004
    8. '(_' → logprob: -17.50071144104004
    9. '_UP' → logprob: -17.62571144104004
    10. '_)' → logprob: -17.62571144104004

Token 110: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0029496510978788137
    2. ')' → logprob: -5.8779497146606445
    3. ',max' → logprob: -8.877949714660645
    4. ' ,' → logprob: -12.502949714660645
    5. ',)' → logprob: -14.002949714660645
    6. ',end' → logprob: -15.627949714660645
    7. ',m' → logprob: -15.627949714660645
    8. ' ' → logprob: -15.752949714660645
    9. ' )' → logprob: -16.127948760986328
    10. ',",' → logprob: -16.252948760986328

Token 111: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.06201092526316643
    2. ' max' → logprob: -2.8120110034942627
    3. ',max' → logprob: -11.062010765075684
    4. '(max' → logprob: -11.187010765075684
    5. '"' → logprob: -11.437010765075684
    6. ''' → logprob: -13.562010765075684
    7. '[max' → logprob: -14.437010765075684
    8. ',' → logprob: -14.562010765075684
    9. ' ' → logprob: -15.312010765075684
    10. ' ,' → logprob: -15.937010765075684

Token 112: '_down' (ID: 40267)
  Prédit: '_down'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_down' → logprob: -1.6240566083070007e-06
    2. '_up' → logprob: -14.750001907348633
    3. '_d' → logprob: -14.875001907348633
    4. ')_' → logprob: -15.125001907348633
    5. '_DOWN' → logprob: -15.375001907348633
    6. '_do' → logprob: -15.625001907348633
    7. '_' → logprob: -15.750001907348633
    8. '_dw' → logprob: -17.500001907348633
    9. ' _' → logprob: -17.625001907348633
    10. '_done' → logprob: -18.250001907348633

Token 113: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2664456789934775e-06
    2. ' )' → logprob: -14.125000953674316
    3. ')
' → logprob: -15.250000953674316
    4. ')`' → logprob: -15.875000953674316
    5. '`)' → logprob: -17.000001907348633
    6. '')' → logprob: -17.375001907348633
    7. '))' → logprob: -18.000001907348633
    8. '()' → logprob: -18.500001907348633
    9. '   ' → logprob: -18.500001907348633
    10. '```' → logprob: -18.625001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 111
Tokens correctement prédits (1ère position, stricte): 63
Tokens correctement prédits (1ère position, avec adaptation): 68
Tokens correctement prédits (top 10): 102
Précision stricte (1ère position): 56.76%
Précision adaptée (1ère position): 61.26%
Précision (top 10): 91.89%
================================================================================
