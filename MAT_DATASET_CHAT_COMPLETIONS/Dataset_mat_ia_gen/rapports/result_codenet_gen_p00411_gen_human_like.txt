================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 16:58:49
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
a, t, r = map(int, input().split())
time = (r / a) * t
print(time)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'a' (ID: 64)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' t' (ID: 260)
  → Token d'amorce (pas de prédiction)

Token 3: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22373628616333008
    2. '+' → logprob: -1.72373628616333
    3. ',' → logprob: -4.72373628616333
    4. ' =' → logprob: -5.34873628616333
    5. '*' → logprob: -6.22373628616333
    6. '[' → logprob: -6.47373628616333
    7. ' ' → logprob: -6.59873628616333
    8. '_' → logprob: -6.84873628616333
    9. ')' → logprob: -7.59873628616333
    10. '+=' → logprob: -7.72373628616333

Token 4: ' r' (ID: 428)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.21818730235099792
    2. ' =' → logprob: -2.2181873321533203
    3. ',' → logprob: -3.2181873321533203
    4. ' ' → logprob: -3.4681873321533203
    5. '+' → logprob: -4.34318733215332
    6. ')' → logprob: -7.21818733215332
    7. '.' → logprob: -7.84318733215332
    8. ' ,' → logprob: -7.84318733215332
    9. '[' → logprob: -8.21818733215332
    10. ' +' → logprob: -8.34318733215332

Token 5: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02777504362165928
    2. ' =' → logprob: -3.9027750492095947
    3. ',' → logprob: -5.152774810791016
    4. '.' → logprob: -7.527774810791016
    5. ';' → logprob: -8.152774810791016
    6. '+' → logprob: -8.277774810791016
    7. '[' → logprob: -9.402774810791016
    8. '(' → logprob: -9.527774810791016
    9. ')' → logprob: -10.152774810791016
    10. ':' → logprob: -10.277774810791016

Token 6: ' map' (ID: 4014)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7011511921882629
    2. ' ' → logprob: -0.7011511921882629
    3. '1' → logprob: -4.951151371002197
    4. '[' → logprob: -9.076150894165039
    5. ' [' → logprob: -9.326150894165039
    6. ' [],' → logprob: -9.326150894165039
    7. '[]' → logprob: -9.576150894165039
    8. '10' → logprob: -9.701150894165039
    9. '5' → logprob: -9.826150894165039
    10. '3' → logprob: -9.826150894165039

Token 7: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.417399138212204
    2. '<|end|>' → logprob: -1.1673991680145264
    3. '(lambda' → logprob: -4.542398929595947
    4. '<|end|>' → logprob: -5.167398929595947
    5. '```' → logprob: -5.417398929595947
    6. '(user' → logprob: -6.292398929595947
    7. '(token' → logprob: -6.417398929595947
    8. ')' → logprob: -6.917398929595947
    9. ' (' → logprob: -7.292398929595947
    10. 'user' → logprob: -7.917398929595947

Token 8: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.49720120429992676
    2. '(input' → logprob: -1.4972012042999268
    3. ')' → logprob: -2.1222012042999268
    4. '<|end|>' → logprob: -4.247200965881348
    5. '(user' → logprob: -4.497200965881348
    6. '(token' → logprob: -5.997200965881348
    7. '(data' → logprob: -6.247200965881348
    8. '(int' → logprob: -6.247200965881348
    9. '(range' → logprob: -6.622200965881348
    10. '(str' → logprob: -6.872200965881348

Token 9: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.25202471017837524
    2. ' input' → logprob: -1.5020246505737305
    3. '(input' → logprob: -9.37702465057373
    4. ')' → logprob: -11.62702465057373
    5. ',input' → logprob: -13.62702465057373
    6. '=input' → logprob: -15.62702465057373
    7. '```' → logprob: -15.87702465057373
    8. '<input' → logprob: -16.502025604248047
    9. '[input' → logprob: -16.627025604248047
    10. ' ' → logprob: -16.752025604248047

Token 10: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.937272310256958
    2. ')' → logprob: -1.312272310256958
    3. '()' → logprob: -1.437272310256958
    4. '(' → logprob: -2.562272310256958
    5. '(()' → logprob: -5.437272071838379
    6. '().' → logprob: -5.437272071838379
    7. '('' → logprob: -5.687272071838379
    8. '(""))' → logprob: -6.437272071838379
    9. '());' → logprob: -6.687272071838379
    10. '();)' → logprob: -6.937272071838379

Token 11: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00024084746837615967
    2. 'strip' → logprob: -8.37524127960205
    3. ' split' → logprob: -12.25024127960205
    4. 'rstrip' → logprob: -12.25024127960205
    5. '(split' → logprob: -14.62524127960205
    6. 'spl' → logprob: -16.250240325927734
    7. ')' → logprob: -16.500240325927734
    8. 'read' → logprob: -16.875240325927734
    9. '```' → logprob: -17.375240325927734
    10. 'startswith' → logprob: -17.500240325927734

Token 12: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.125139519572258
    2. '())' → logprob: -2.5001394748687744
    3. '))' → logprob: -3.3751394748687744
    4. '()))' → logprob: -7.6251397132873535
    5. '`)' → logprob: -8.000139236450195
    6. '()' → logprob: -8.125139236450195
    7. ')`' → logprob: -10.250139236450195
    8. '(' → logprob: -10.250139236450195
    9. '```' → logprob: -10.375139236450195
    10. ')))' → logprob: -10.875139236450195

Token 13: 'time' (ID: 4580)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6848516464233398
    2. 'if' → logprob: -1.8098516464233398
    3. '+' → logprob: -2.30985164642334
    4. 'i' → logprob: -2.43485164642334
    5. ',' → logprob: -3.18485164642334
    6. '#' → logprob: -3.80985164642334
    7. '
' → logprob: -3.93485164642334
    8. '+
' → logprob: -4.30985164642334
    9. ':' → logprob: -4.43485164642334
    10. '*' → logprob: -5.05985164642334

Token 14: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.42693156003952026
    2. '.' → logprob: -1.426931619644165
    3. ')' → logprob: -2.926931619644165
    4. '(' → logprob: -4.051931381225586
    5. '[' → logprob: -4.801931381225586
    6. 's' → logprob: -5.176931381225586
    7. '+' → logprob: -6.051931381225586
    8. '_to' → logprob: -6.176931381225586
    9. ' _' → logprob: -6.301931381225586
    10. ',' → logprob: -6.301931381225586

Token 15: ' (' (ID: 350)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6210382580757141
    2. 'a' → logprob: -0.9960382580757141
    3. '0' → logprob: -2.7460381984710693
    4. 'r' → logprob: -4.746038436889648
    5. 'min' → logprob: -4.996038436889648
    6. 'max' → logprob: -5.746038436889648
    7. ' t' → logprob: -6.746038436889648
    8. '(t' → logprob: -6.746038436889648
    9. 'time' → logprob: -6.746038436889648
    10. '(a' → logprob: -6.871038436889648

Token 16: 'r' (ID: 81)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.651353657245636
    2. 'a' → logprob: -0.901353657245636
    3. 'r' → logprob: -3.401353597640991
    4. ' t' → logprob: -4.02635383605957
    5. ' a' → logprob: -5.15135383605957
    6. '60' → logprob: -5.65135383605957
    7. '360' → logprob: -6.15135383605957
    8. '(t' → logprob: -6.40135383605957
    9. '12' → logprob: -6.65135383605957
    10. '(a' → logprob: -6.77635383605957

Token 17: ' /' (ID: 820)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5300945043563843
    2. '-' → logprob: -0.9050945043563843
    3. '-t' → logprob: -5.030094623565674
    4. '+' → logprob: -8.655094146728516
    5. '*' → logprob: -9.530094146728516
    6. ' +' → logprob: -10.155094146728516
    7. '-a' → logprob: -10.280094146728516
    8. ')' → logprob: -10.530094146728516
    9. ' ' → logprob: -10.530094146728516
    10. '+t' → logprob: -11.530094146728516

Token 18: ' a' (ID: 261)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.18969930708408356
    2. '60' → logprob: -2.189699411392212
    3. 'a' → logprob: -3.689699411392212
    4. ' t' → logprob: -4.189699172973633
    5. '360' → logprob: -5.314699172973633
    6. '(t' → logprob: -5.439699172973633
    7. ' ' → logprob: -5.439699172973633
    8. '(' → logprob: -5.689699172973633
    9. '(a' → logprob: -7.189699172973633
    10. ' (' → logprob: -7.689699172973633

Token 19: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002907227724790573
    2. ' )' → logprob: -6.7529072761535645
    3. ')*' → logprob: -7.0029072761535645
    4. '*' → logprob: -7.3779072761535645
    5. ' *' → logprob: -9.127906799316406
    6. '**' → logprob: -10.252906799316406
    7. '*t' → logprob: -11.002906799316406
    8. ')**' → logprob: -12.127906799316406
    9. ' -' → logprob: -12.252906799316406
    10. ')t' → logprob: -12.377906799316406

Token 20: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.35152918100357056
    2. ')' → logprob: -1.8515291213989258
    3. ' ' → logprob: -2.726529121398926
    4. ' *' → logprob: -3.101529121398926
    5. ' if' → logprob: -5.101529121398926
    6. ' /' → logprob: -5.226529121398926
    7. '<|end|>' → logprob: -5.726529121398926
    8. '+' → logprob: -6.226529121398926
    9. '**' → logprob: -6.351529121398926
    10. '/' → logprob: -6.601529121398926

Token 21: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.005325073841959238
    2. '60' → logprob: -5.630324840545654
    3. ' t' → logprob: -6.505324840545654
    4. '360' → logprob: -9.380325317382812
    5. '(' → logprob: -9.630325317382812
    6. '(t' → logprob: -10.380325317382812
    7. '100' → logprob: -10.505325317382812
    8. ' ' → logprob: -12.505325317382812
    9. ' (' → logprob: -12.630325317382812
    10. 'a' → logprob: -13.255325317382812

Token 22: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 23: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.004015122540295124
    2. ')' → logprob: -5.87901496887207
    3. ' print' → logprob: -7.87901496887207
    4. '*' → logprob: -8.50401496887207
    5. '#' → logprob: -8.87901496887207
    6. '<|end|>' → logprob: -9.25401496887207
    7. '\n' → logprob: -9.50401496887207
    8. '```' → logprob: -9.87901496887207
    9. '\' → logprob: -10.00401496887207
    10. '+' → logprob: -10.25401496887207

Token 24: '(time' (ID: 19192)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008650383912026882
    2. '(time' → logprob: -4.758650302886963
    3. '('' → logprob: -11.633650779724121
    4. '()' → logprob: -11.633650779724121
    5. '("("' → logprob: -11.883650779724121
    6. '(f' → logprob: -13.383650779724121
    7. '(

' → logprob: -13.383650779724121
    8. '(t' → logprob: -13.633650779724121
    9. '(.' → logprob: -13.883650779724121
    10. '(`' → logprob: -13.883650779724121

Token 25: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.723352049040841e-06
    2. '))' → logprob: -12.625004768371582
    3. ' )' → logprob: -13.875004768371582
    4. ')`' → logprob: -15.750004768371582
    5. '`)' → logprob: -16.750003814697266
    6. '')' → logprob: -16.750003814697266
    7. '*' → logprob: -17.250003814697266
    8. ')
' → logprob: -17.500003814697266
    9. ')))' → logprob: -17.625003814697266
    10. '）' → logprob: -18.375003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 23
Tokens correctement prédits (1ère position, stricte): 4
Tokens correctement prédits (1ère position, avec adaptation): 4
Tokens correctement prédits (top 10): 12
Précision stricte (1ère position): 17.39%
Précision adaptée (1ère position): 17.39%
Précision (top 10): 52.17%
================================================================================
