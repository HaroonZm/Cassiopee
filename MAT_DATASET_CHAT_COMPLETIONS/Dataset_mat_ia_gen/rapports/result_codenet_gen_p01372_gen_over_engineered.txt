================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:15:23
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import re
import math
from typing import List, Set, Union, Dict, Callable, Tuple, Optional

class Expression:
    def evaluate_all(self) -> Set[int]:
        """Evaluate all possible results of this expression with different parenthesizations."""
        raise NotImplementedError

class Number(Expression):
    def __init__(self, value: int):
        self.value = value
    
    def evaluate_all(self) -> Set[int]:
        return {self.value}

class BinaryOp(Expression):
    def __init__(self, left: Expression, right: Expression, op: str):
        self.left = left
        self.right = right
        self.op = op
        self._operation = self._get_operation(op)
    
    def _get_operation(self, op: str) -> Callable[[int,int], Optional[int]]:
        # Define operations according to Kitamasa-kun's rules
        def add(a: int, b: int) -> Optional[int]:
            return a + b
        def sub(a: int, b: int) -> Optional[int]:
            return a - b
        def mul(a: int, b: int) -> Optional[int]:
            return a * b
        def div(a: int, b: int) -> Optional[int]:
            # division by zero is invalid calculation path
            if b == 0:
                return None
            # Kitamasa-kun rounds result to the smaller abs integer, truncates fractional part
            res = a / b
            abs_a = abs(a)
            abs_b = abs(b)
            if abs_a < abs_b:
                # round to abs smaller = abs(a)
                target_abs = abs_a
            else:
                target_abs = abs_b
            # truncate fractional part towards zero (integer division trunc)
            if res >= 0:
                approx = int(math.floor(res))
            else:
                approx = int(math.ceil(res))
            # nearest integer to res with abs <= target_abs
            # fix if abs(approx) > target_abs
            if abs(approx) > target_abs:
                # choose sign of approx:
                approx = int(res//1)  # redundancy but keep
                # truncate abs to target_abs with sign of approx:
                approx = (target_abs if approx >= 0 else -target_abs)
            return approx
        return {
            '+': add,
            '-': sub,
            '*': mul,
            '/': div
        }[op]
    
    def evaluate_all(self) -> Set[int]:
        # Because multiple ways of parenthesizing children, we have to consider all their results combinatorially
        left_vals = self.left.evaluate_all()
        right_vals = self.right.evaluate_all()
        results = set()
        for lv in left_vals:
            for rv in right_vals:
                val = self._operation(lv, rv)
                if val is not None and abs(val) <= 10**9:
                    results.add(val)
        return results

class Parentheses(Expression):
    def __init__(self, inner: Expression):
        self.inner = inner
    
    def evaluate_all(self) -> Set[int]:
        # Parentheses enforce order, so just evaluate inner once
        return self.inner.evaluate_all()

class Parser:
    def __init__(self, s: str):
        self.s = s
        self.pos = 0
    
    def peek(self) -> Optional[str]:
        if self.pos < len(self.s):
            return self.s[self.pos]
        return None

    def consume(self, ch: Optional[str] = None) -> str:
        if self.pos >= len(self.s):
            raise ValueError("Unexpected end of input")
        c = self.s[self.pos]
        if ch is not None and c != ch:
            raise ValueError(f"Expected '{ch}', got '{c}'")
        self.pos += 1
        return c

    def parse_expression(self) -> Expression:
        # Parse expression with custom order,
        # but Kitamasa-kun does not fix precedence, all possible binary split orders must count,
        # so parsing into AST just by the syntax:
        # We'll parse fully into an AST with binary op nodes, ignoring precedence,
        # and then during evaluation we generate all ways of evaluation by recursive splitting.
        #
        # Because to compute all possible results with all possible orders,
        # we must parse fully respecting parentheses but treat flat expressions
        # as a list of tokens for re-parenthesizing.
        tokens = self.tokenize_expression()
        expr = self.build_expression_all_ways(tokens)
        return expr
    
    def tokenize_expression(self) -> List[Union[int, str]]:
        # Tokenize numbers, operators and parentheses
        tokens: List[Union[int,str]] = []
        while True:
            c = self.peek()
            if c is None:
                break
            if c.isspace():
                self.consume()
                continue
            if c.isdigit():
                # parse full number
                num_str = ''
                while self.peek() is not None and self.peek().isdigit():
                    num_str += self.consume()
                tokens.append(int(num_str))
            elif c in "+-*/()":
                tokens.append(self.consume())
            else:
                # Invalid character
                raise ValueError(f"Invalid character {c}")
        return tokens

    def build_expression_all_ways(self, tokens: List[Union[int,str]]) -> Expression:
        # Rebuild Expression tree from tokens taking parentheses into account
        # We parse a fully parenthesized structure and produce an Expression that allows multiple evaluation orders.
        # For Kitamasa-kun, all possible _parenthesizations_ correspond to different computation orders.
        # So we parse to AST with minimal structure: numbers and subexpressions with operators.
        # 'tokens' is list of numbers, operators, parentheses (remaining after tokenizing).

        # We'll implement a function to parse tokens into expression recursively.
        def parse_tokens(ts: List[Union[int,str]], start: int, end: int) -> Expression:
            # Remove enclosing parentheses if present
            while start < end and ts[start] == '(' and self.matching_paren(ts, start) == end - 1:
                start += 1
                end -= 1
            
            # If only one token and it's number, return Number
            if start == end - 1:
                if isinstance(ts[start], int):
                    return Number(ts[start])
                else:
                    raise ValueError("Expected number")
            # If the token range contains no parentheses on its edge, we try all binary splits
            # but for now, return a special Expression that supports generating all ways
            return ExpressionWithOps(ts[start:end])

        def expr_all_ways(ts: List[Union[int,str]], start: int, end: int) -> Expression:
            # Like parse_tokens but wrap as ExpressionWithOps to handle all possible parenthesis placements
            return parse_tokens(ts, start, end)

        # We define a helper to find matching paren index:
    def matching_paren(self, tokens: List[Union[int,str]], start_index: int) -> int:
        # Precondition tokens[start_index] == '('
        depth = 0
        for i in range(start_index, len(tokens)):
            if tokens[i] == '(':
                depth += 1
            elif tokens[i] == ')':
                depth -= 1
                if depth == 0:
                    return i
        raise ValueError("Unmatched '(' in expression")

    def parse_expression(self) -> Expression:
        # Instead of prior approach, implement a proper expression parser for given BNF,
        # but then represent the expression as a nested structure that supports all evaluation orders.
        # We'll use memoization on subexpressions by indices for generating all results.
        # To get tokens with positions, we tokenize first.
        self.pos = 0
        tokens = self.tokenize_expression()
        # parse tokens fully accepting parentheses and build a nested structure
        expr, next_pos = self.parse_expr_recursive(tokens, 0, len(tokens))
        if next_pos != len(tokens):
            raise ValueError("Extra tokens after valid expression")
        return expr

    def parse_expr_recursive(self, tokens: List[Union[int,str]], start: int, end: int) -> Tuple[Expression, int]:
        # parse expr ::= num | "(" expr ")" | expr op expr
        # But since implementation complexity, parse first primary (num or parenthesized expr)
        # then parse binary operations left to right with no fixed precedence (because all orders considered later)
        # For Kitamasa-kun, the evaluation order varies, so parser makes AST reflecting structure.
        # Here we parse with left-associative grouping by default (to produce an AST), but we reinterpret to evaluation all ways.

        def parse_primary(pos: int) -> Tuple[Expression, int]:
            if pos >= end:
                raise ValueError("Unexpected end")
            tok = tokens[pos]
            if isinstance(tok, int):
                return Number(tok), pos + 1
            elif tok == '(':
                # parse inside parens
                matching = self.matching_paren(tokens, pos)
                inner_expr, _ = self.parse_expr_recursive(tokens, pos + 1, matching)
                return inner_expr, matching + 1
            else:
                raise ValueError(f"Unexpected token {tok} where primary exp expected")

        left_expr, pos = parse_primary(start)
        # parse zero or more (op primary)
        exprs: List[Expression] = [left_expr]
        ops: List[str] = []
        while pos < end:
            tok = tokens[pos]
            if tok in ('+', '-', '*', '/'):
                ops.append(tok)
                right_expr, pos = parse_primary(pos + 1)
                exprs.append(right_expr)
            else:
                break
        # Now we have a sequence: exprs[0], ops[0], exprs[1], ops[1], exprs[2] ...
        # Build a ExpressionWithOps node that captures this flat expression to compute all eval orders later
        return ExpressionWithOps(exprs, ops), pos

class ExpressionWithOps(Expression):
    def __init__(self, exprs: Union[List[Expression], List[Union[int,str]]], ops: Optional[List[str]] = None):
        # exprs can be either:
        # - List[Expression] plus ops list
        # or
        # - List of tokens not yet parsed (used in earlier stage)
        if ops is None:
            # We have tokens, parse them fully into ExpressionWithOps by tokenizer?
            # But we do not use this way now, all tokens processed by Parser.parse_expr_recursive
            raise NotImplementedError
        self.exprs: List[Expression] = exprs
        self.ops: List[str] = ops

        self.memo: Dict[Tuple[int,int], Set[int]] = {}

    def evaluate_all(self) -> Set[int]:
        # evaluate all possible outcomes by all parenthesizing orders of exprs and ops
        # use DP memoization on (start, end) expression slice
        return self._eval_range(0, len(self.exprs) - 1)

    def _eval_range(self, i: int, j: int) -> Set[int]:
        if (i, j) in self.memo:
            return self.memo[(i,j)]
        if i == j:
            # single expression value
            res = self.exprs[i].evaluate_all()
            self.memo[(i,j)] = res
            return res
        
        results: Set[int] = set()
        # try all splits k where op[k] splits exprs[i..j]
        for k in range(i, j):
            op = self.ops[k]
            left_vals = self._eval_range(i, k)
            right_vals = self._eval_range(k + 1, j)
            for lv in left_vals:
                for rv in right_vals:
                    val = self._apply_op(lv, op, rv)
                    if val is not None and abs(val) <= 10**9:
                        results.add(val)
        self.memo[(i,j)] = results
        return results
    
    def _apply_op(self, a: int, op: str, b: int) -> Optional[int]:
        if op == '+':
            return a + b
        elif op == '-':
            return a - b
        elif op == '*':
            return a * b
        elif op == '/':
            if b == 0:
                return None
            res = a / b
            abs_a = abs(a)
            abs_b = abs(b)
            target_abs = abs_a if abs_a < abs_b else abs_b
            if res >= 0:
                approx = int(math.floor(res))
            else:
                approx = int(math.ceil(res))
            # ensure abs(approx) <= target_abs
            if abs(approx) > target_abs:
                approx = target_abs if approx >= 0 else -target_abs
            return approx
        else:
            raise ValueError(f"Unknown operator {op}")

def main():
    lines = sys.stdin.read().strip('\n').split('\n')
    for line in lines:
        if line.strip() == '#':
            break
        parser = Parser(line.strip())
        expr = parser.parse_expression()
        results = expr.evaluate_all()
        print(len(results))

if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2973678708076477
    2. '\n' → logprob: -1.547367811203003
    3. '<|end|>' → logprob: -3.797367811203003
    4. '\' → logprob: -4.922368049621582
    5. 'newline' → logprob: -5.672368049621582
    6. 'import' → logprob: -5.672368049621582
    7. '<|end|>' → logprob: -6.047368049621582
    8. '
' → logprob: -6.922368049621582
    9. '```' → logprob: -6.922368049621582
    10. '' → logprob: -7.547368049621582

Token 4: ' re' (ID: 322)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00012535012501757592
    2. 'os' → logprob: -9.00012493133545
    3. ' math' → logprob: -13.87512493133545
    4. '"os' → logprob: -15.12512493133545
    5. ' re' → logprob: -15.50012493133545
    6. ' o' → logprob: -15.87512493133545
    7. ' ' → logprob: -16.125125885009766
    8. ' json' → logprob: -16.250125885009766
    9. '	os' → logprob: -16.375125885009766
    10. '_os' → logprob: -17.000125885009766

Token 5: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.10481411963701248
    2. '.' → logprob: -2.979814052581787
    3. '\' → logprob: -4.104814052581787
    4. '[' → logprob: -4.854814052581787
    5. 'import' → logprob: -5.229814052581787
    6. ',' → logprob: -5.854814052581787
    7. '
' → logprob: -5.854814052581787
    8. '```' → logprob: -5.979814052581787
    9. '<|end|>' → logprob: -6.229814052581787
    10. '' → logprob: -6.354814052581787

Token 6: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.1058090403676033
    2. '.' → logprob: -3.730808973312378
    3. 'import' → logprob: -3.730808973312378
    4. '```' → logprob: -4.355809211730957
    5. '
' → logprob: -4.480809211730957
    6. '\' → logprob: -4.730809211730957
    7. '

' → logprob: -5.105809211730957
    8. '[' → logprob: -5.605809211730957
    9. ',' → logprob: -5.855809211730957
    10. '#' → logprob: -6.105809211730957

Token 7: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.04874042421579361
    2. 'os' → logprob: -3.0487403869628906
    3. ' math' → logprob: -9.42374038696289
    4. ' json' → logprob: -10.17374038696289
    5. ' io' → logprob: -11.42374038696289
    6. ' ' → logprob: -12.42374038696289
    7. ' requests' → logprob: -12.67374038696289
    8. 'math' → logprob: -12.67374038696289
    9. ' subprocess' → logprob: -12.92374038696289
    10. ' string' → logprob: -13.04874038696289

Token 8: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6049702763557434
    2. 'import' → logprob: -1.7299702167510986
    3. '.' → logprob: -2.3549702167510986
    4. '

' → logprob: -2.6049702167510986
    5. '\n' → logprob: -3.6049702167510986
    6. '```' → logprob: -3.6049702167510986
    7. '<|end|>' → logprob: -4.104970455169678
    8. '\' → logprob: -4.854970455169678
    9. ',' → logprob: -4.979970455169678
    10. 'def' → logprob: -4.979970455169678

Token 9: 'from' (ID: 2845)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.7885643839836121
    2. '\n' → logprob: -2.163564443588257
    3. '.' → logprob: -2.288564443588257
    4. '
' → logprob: -2.413564443588257
    5. 'def' → logprob: -2.788564443588257
    6. '

' → logprob: -3.538564443588257
    7. '```' → logprob: -3.663564443588257
    8. '#' → logprob: -3.788564443588257
    9. '\' → logprob: -3.788564443588257
    10. '' → logprob: -4.038564205169678

Token 10: ' typing' (ID: 34152)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.43739110231399536
    2. ' os' → logprob: -1.5623910427093506
    3. 'collections' → logprob: -2.5623910427093506
    4. 'os' → logprob: -4.06239128112793
    5. ' typing' → logprob: -4.43739128112793
    6. ' itertools' → logprob: -4.93739128112793
    7. ' datetime' → logprob: -5.06239128112793
    8. ' statistics' → logprob: -5.18739128112793
    9. ' ' → logprob: -5.68739128112793
    10. ' decimal' → logprob: -5.93739128112793

Token 11: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.18022935092449188
    2. 'import' → logprob: -1.8052293062210083
    3. ' ' → logprob: -8.430229187011719
    4. '<|end|>' → logprob: -9.180229187011719
    5. '.' → logprob: -9.430229187011719
    6. '_import' → logprob: -10.930229187011719
    7. '	import' → logprob: -11.055229187011719
    8. '```' → logprob: -11.305229187011719
    9. '.import' → logprob: -11.680229187011719
    10. ' as' → logprob: -12.055229187011719

Token 12: ' List' (ID: 2655)
  Prédit: ' Any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Any' → logprob: -0.19816961884498596
    2. 'Any' → logprob: -2.323169708251953
    3. ' List' → logprob: -2.573169708251953
    4. 'List' → logprob: -6.323169708251953
    5. ' Union' → logprob: -6.823169708251953
    6. ' Generator' → logprob: -7.073169708251953
    7. ' ' → logprob: -7.198169708251953
    8. ' Optional' → logprob: -7.448169708251953
    9. ' Iterable' → logprob: -8.948169708251953
    10. 'Iterable' → logprob: -9.573169708251953

Token 13: ',' (ID: 11)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.1244699954986572
    2. '```' → logprob: -1.3744699954986572
    3. '
' → logprob: -1.6244699954986572
    4. '

' → logprob: -2.1244699954986572
    5. '\n' → logprob: -3.3744699954986572
    6. 'def' → logprob: -3.7494699954986572
    7. ',' → logprob: -4.124469757080078
    8. 'class' → logprob: -4.374469757080078
    9. '``' → logprob: -5.374469757080078
    10. '\' → logprob: -5.624469757080078

Token 14: ' Set' (ID: 3957)
  Prédit: 'Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Optional' → logprob: -0.7673147320747375
    2. 'Tuple' → logprob: -1.0173146724700928
    3. ' Optional' → logprob: -2.7673146724700928
    4. 'Any' → logprob: -3.2673146724700928
    5. 'Dict' → logprob: -3.3923146724700928
    6. ' Tuple' → logprob: -4.392314910888672
    7. 'Union' → logprob: -4.392314910888672
    8. ' Union' → logprob: -5.017314910888672
    9. ' Dict' → logprob: -5.892314910888672
    10. ' Any' → logprob: -6.267314910888672

Token 15: ',' (ID: 11)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.9236905574798584
    2. '```' → logprob: -1.2986905574798584
    3. '
' → logprob: -2.4236905574798584
    4. 'import' → logprob: -2.5486905574798584
    5. ',' → logprob: -3.1736905574798584
    6. '\n' → logprob: -3.5486905574798584
    7. 'class' → logprob: -3.5486905574798584
    8. 'def' → logprob: -4.1736907958984375
    9. '\' → logprob: -4.9236907958984375
    10. '#' → logprob: -4.9236907958984375

Token 16: ' Union' (ID: 14746)
  Prédit: ' Dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Dict' → logprob: -0.5103728175163269
    2. 'Dict' → logprob: -1.7603728771209717
    3. ' Tuple' → logprob: -2.2603728771209717
    4. 'Tuple' → logprob: -2.6353728771209717
    5. ' Optional' → logprob: -3.8853728771209717
    6. 'Optional' → logprob: -4.135372638702393
    7. ' Union' → logprob: -5.260372638702393
    8. ' defaultdict' → logprob: -5.260372638702393
    9. 'Union' → logprob: -6.760372638702393
    10. 'Iterable' → logprob: -7.260372638702393

Token 17: ',' (ID: 11)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.4646995961666107
    2. '
' → logprob: -1.589699625968933
    3. 'class' → logprob: -2.9646995067596436
    4. ',' → logprob: -3.0896995067596436
    5. '```' → logprob: -4.339699745178223
    6. '.' → logprob: -4.714699745178223
    7. '' → logprob: -4.839699745178223
    8. '#' → logprob: -5.339699745178223
    9. 'import' → logprob: -5.339699745178223
    10. '


' → logprob: -5.464699745178223

Token 18: ' Dict' (ID: 55179)
  Prédit: ' Dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Dict' → logprob: -0.43024295568466187
    2. 'Dict' → logprob: -1.4302430152893066
    3. ' Optional' → logprob: -2.9302430152893066
    4. 'Optional' → logprob: -3.6802430152893066
    5. 'Tuple' → logprob: -4.180243015289307
    6. ' Tuple' → logprob: -4.305243015289307
    7. 'Any' → logprob: -7.055243015289307
    8. ' defaultdict' → logprob: -7.430243015289307
    9. 'Iterable' → logprob: -7.680243015289307
    10. ' Any' → logprob: -8.180242538452148

Token 19: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9213764667510986
    2. '

' → logprob: -1.2963764667510986
    3. ',' → logprob: -2.1713764667510986
    4. '\n' → logprob: -2.5463764667510986
    5. '```' → logprob: -2.7963764667510986
    6. 'import' → logprob: -3.6713764667510986
    7. '\' → logprob: -4.6713762283325195
    8. '' → logprob: -4.9213762283325195
    9. '.' → logprob: -5.0463762283325195
    10. '<|end|>' → logprob: -5.2963762283325195

Token 20: ' Callable' (ID: 94560)
  Prédit: ' Tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Tuple' → logprob: -0.9149941205978394
    2. ' Optional' → logprob: -1.0399941205978394
    3. 'Tuple' → logprob: -2.414994239807129
    4. 'Optional' → logprob: -2.539994239807129
    5. 'Any' → logprob: -3.289994239807129
    6. ' Any' → logprob: -3.789994239807129
    7. ' Callable' → logprob: -4.664994239807129
    8. 'Iterable' → logprob: -5.914994239807129
    9. ' defaultdict' → logprob: -5.914994239807129
    10. 'Callable' → logprob: -6.914994239807129

Token 21: ',' (ID: 11)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.492488294839859
    2. ',' → logprob: -2.117488384246826
    3. '
' → logprob: -2.367488384246826
    4. '```' → logprob: -2.742488384246826
    5. '\n' → logprob: -3.117488384246826
    6. 'import' → logprob: -3.992488384246826
    7. ',

' → logprob: -4.492488384246826
    8. '\' → logprob: -4.742488384246826
    9. ',
' → logprob: -5.117488384246826
    10. 'class' → logprob: -5.242488384246826

Token 22: ' Tuple' (ID: 50841)
  Prédit: ' Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Optional' → logprob: -1.105482816696167
    2. 'Any' → logprob: -1.230482816696167
    3. 'Optional' → logprob: -1.605482816696167
    4. ' Any' → logprob: -2.480482816696167
    5. ' Tuple' → logprob: -2.855482816696167
    6. 'Tuple' → logprob: -3.480482816696167
    7. 'Iterable' → logprob: -5.980483055114746
    8. ' Iterable' → logprob: -7.105483055114746
    9. 'Iterator' → logprob: -8.480483055114746
    10. ' Iterator' → logprob: -8.855483055114746

Token 23: ',' (ID: 11)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.41164061427116394
    2. '
' → logprob: -1.5366406440734863
    3. ',' → logprob: -2.7866406440734863
    4. '\n' → logprob: -4.161640644073486
    5. '' → logprob: -5.161640644073486
    6. '#' → logprob: -5.411640644073486
    7. '```' → logprob: -5.411640644073486
    8. '.' → logprob: -5.536640644073486
    9. 'class' → logprob: -5.661640644073486
    10. 'import' → logprob: -5.661640644073486

Token 24: ' Optional' (ID: 19351)
  Prédit: ' Optional'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Optional' → logprob: -0.08116170763969421
    2. ' Any' → logprob: -3.4561617374420166
    3. 'Optional' → logprob: -3.4561617374420166
    4. 'Any' → logprob: -4.4561614990234375
    5. ' Iterable' → logprob: -6.7061614990234375
    6. 'Iterable' → logprob: -6.9561614990234375
    7. ' defaultdict' → logprob: -8.206161499023438
    8. ' Generator' → logprob: -8.581161499023438
    9. 'Named' → logprob: -8.831161499023438
    10. ' Iterator' → logprob: -8.831161499023438

Token 25: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.2006773203611374
    2. '
' → logprob: -2.0756773948669434
    3. '\n' → logprob: -4.075677394866943
    4. ',' → logprob: -4.325677394866943
    5. 'import' → logprob: -5.075677394866943
    6. 'class' → logprob: -5.825677394866943
    7. '```' → logprob: -5.825677394866943
    8. '' → logprob: -5.950677394866943
    9. '\' → logprob: -6.325677394866943
    10. '<|end|>' → logprob: -6.450677394866943

Token 26: 'class' (ID: 1444)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.10498832166194916
    2. 'def' → logprob: -2.4799883365631104
    3. 'class' → logprob: -4.604988098144531
    4. '#' → logprob: -5.729988098144531
    5. 'D' → logprob: -7.479988098144531
    6. '```' → logprob: -7.729988098144531
    7. '@' → logprob: -7.854988098144531
    8. '\' → logprob: -8.104988098144531
    9. '
' → logprob: -8.229988098144531
    10. 'c' → logprob: -8.479988098144531

Token 27: ' Expression' (ID: 32496)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3524508774280548
    2. ' My' → logprob: -1.8524508476257324
    3. ' Calculator' → logprob: -2.9774508476257324
    4. ' Space' → logprob: -3.3524508476257324
    5. ' Parser' → logprob: -4.477450847625732
    6. ' Analyzer' → logprob: -5.352450847625732
    7. ' Vector' → logprob: -5.602450847625732
    8. ' Data' → logprob: -5.602450847625732
    9. ' Processor' → logprob: -5.852450847625732
    10. ' Token' → logprob: -5.977450847625732

Token 28: ':
' (ID: 734)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3508715331554413
    2. ':' → logprob: -1.2258715629577637
    3. ' :' → logprob: -6.850871562957764
    4. ' ' → logprob: -7.725871562957764
    5. ' (' → logprob: -8.350871086120605
    6. '<|end|>' → logprob: -8.600871086120605
    7. 'Parser' → logprob: -9.475871086120605
    8. ')' → logprob: -9.850871086120605
    9. ':**' → logprob: -10.225871086120605
    10. 's' → logprob: -10.350871086120605

Token 29: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18516644835472107
    2. '(' → logprob: -2.310166358947754
    3. '   ' → logprob: -2.935166358947754
    4. ' :' → logprob: -4.435166358947754
    5. ' ' → logprob: -6.560166358947754
    6. '    ' → logprob: -7.810166358947754
    7. ' (' → logprob: -7.810166358947754
    8. '(object' → logprob: -7.810166358947754
    9. '.' → logprob: -7.935166358947754
    10. ' def' → logprob: -8.060166358947754

Token 30: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.4999435245990753
    2. '    ' → logprob: -1.249943494796753
    3. ' ' → logprob: -3.124943494796753
    4. 'def' (adapté à ' def') → logprob: -3.249943494796753
    5. '   ' → logprob: -4.124943733215332
    6. ' pass' → logprob: -6.249943733215332
    7. '     
' → logprob: -6.499943733215332
    8. '_' → logprob: -6.999943733215332
    9. '(' → logprob: -7.374943733215332
    10. ' """' → logprob: -7.749943733215332

Token 31: ' evaluate' (ID: 21646)
  Prédit: ' __'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.38954076170921326
    2. ' init' → logprob: -1.8895407915115356
    3. 'init' → logprob: -2.264540672302246
    4. '_init' → logprob: -3.139540672302246
    5. '__' → logprob: -4.639540672302246
    6. ' nit' → logprob: -5.514540672302246
    7. 'itialize' → logprob: -6.014540672302246
    8. ' def' → logprob: -6.389540672302246
    9. ' ' → logprob: -6.639540672302246
    10. '_' → logprob: -6.764540672302246

Token 32: '_all' (ID: 13305)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3879435658454895
    2. '(self' → logprob: -1.1379435062408447
    3. ' (' → logprob: -7.012943744659424
    4. '(
' → logprob: -9.637943267822266
    5. 'self' → logprob: -10.012943267822266
    6. '(s' → logprob: -10.637943267822266
    7. ' ' → logprob: -11.762943267822266
    8. '(

' → logprob: -11.887943267822266
    9. '<|end|>' → logprob: -12.012943267822266
    10. '(Self' → logprob: -12.887943267822266

Token 33: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.11435332149267197
    2. '(' → logprob: -2.2393534183502197
    3. ' (' → logprob: -6.614353179931641
    4. '(s' → logprob: -10.11435317993164
    5. '(
' → logprob: -10.36435317993164
    6. 's' → logprob: -11.23935317993164
    7. 'self' → logprob: -11.36435317993164
    8. '()' → logprob: -11.48935317993164
    9. '_tokens' → logprob: -11.48935317993164
    10. '_cells' → logprob: -11.98935317993164

Token 34: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07552687078714371
    2. '):' → logprob: -2.8255269527435303
    3. ')' → logprob: -4.450526714324951
    4. ' ,' → logprob: -6.700526714324951
    5. 'self' → logprob: -7.950526714324951
    6. ':' → logprob: -9.45052719116211
    7. ' ):' → logprob: -10.07552719116211
    8. ' )' → logprob: -11.07552719116211
    9. '):
' → logprob: -11.70052719116211
    10. 's' → logprob: -11.82552719116211

Token 35: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.6296083927154541
    2. ':' → logprob: -1.004608392715454
    3. '(' → logprob: -2.379608392715454
    4. '():' → logprob: -5.379608154296875
    5. 'self' → logprob: -7.129608154296875
    6. ' :' → logprob: -7.379608154296875
    7. '   ' → logprob: -7.754608154296875
    8. ' (' → logprob: -8.254608154296875
    9. '.' → logprob: -8.379608154296875
    10. '       ' → logprob: -8.379608154296875

Token 36: ' Set' (ID: 3957)
  Prédit: ' List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.6506506204605103
    2. 'List' → logprob: -1.7756506204605103
    3. ' float' → logprob: -1.9006506204605103
    4. ' None' → logprob: -2.2756505012512207
    5. 'None' → logprob: -3.6506505012512207
    6. 'float' → logprob: -3.7756505012512207
    7. ' Optional' → logprob: -5.900650501251221
    8. ' int' → logprob: -6.525650501251221
    9. ' Union' → logprob: -7.150650501251221
    10. 'Optional' → logprob: -7.525650501251221

Token 37: '[int' (ID: 40124)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.41262081265449524
    2. '[int' → logprob: -1.1626207828521729
    3. '[str' → logprob: -3.912620782852173
    4. ':' → logprob: -5.912621021270752
    5. '['' → logprob: -6.412621021270752
    6. '[Any' → logprob: -8.662620544433594
    7. '[...]' → logprob: -8.912620544433594
    8. '():' → logprob: -8.912620544433594
    9. '[Int' → logprob: -9.162620544433594
    10. '["' → logprob: -9.662620544433594

Token 38: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.0021058868151158094
    2. ']' → logprob: -6.877105712890625
    3. '):' → logprob: -7.127105712890625
    4. '>:' → logprob: -8.752105712890625
    5. ']>' → logprob: -10.002105712890625
    6. ':' → logprob: -11.127105712890625
    7. '>' → logprob: -11.127105712890625
    8. '[' → logprob: -11.377105712890625
    9. '']:' → logprob: -12.002105712890625
    10. ']:
' → logprob: -12.252105712890625

Token 39: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005386164411902428
    2. ':' → logprob: -8.25053882598877
    3. '.' → logprob: -9.87553882598877
    4. '\n' → logprob: -10.00053882598877
    5. '   ' → logprob: -10.12553882598877
    6. '...' → logprob: -10.62553882598877
    7. '      ' → logprob: -11.00053882598877
    8. 'pass' → logprob: -11.37553882598877
    9. '        
' → logprob: -11.50053882598877
    10. '
' → logprob: -11.75053882598877

Token 40: ' """' (ID: 9280)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014781881123781204
    2. 'pass' → logprob: -4.639781951904297
    3. 'return' → logprob: -5.889781951904297
    4. '...' → logprob: -6.889781951904297
    5. '{' → logprob: -8.264781951904297
    6. '\n' → logprob: -8.514781951904297
    7. 'set' → logprob: -8.639781951904297
    8. ' pass' → logprob: -9.389781951904297
    9. 'self' → logprob: -9.389781951904297
    10. '\' → logprob: -10.014781951904297

Token 41: 'Evaluate' (ID: 112737)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.716788113117218
    2. '"""' → logprob: -1.5917880535125732
    3. ' pass' → logprob: -1.8417880535125732
    4. 'pass' → logprob: -2.2167880535125732
    5. '```' → logprob: -4.966788291931152
    6. 'yield' → logprob: -5.341788291931152
    7. '
' → logprob: -5.341788291931152
    8. '\n' → logprob: -5.716788291931152
    9. '   ' → logprob: -5.966788291931152
    10. 'Pass' → logprob: -6.091788291931152

Token 42: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.4422442615032196
    2. '()' → logprob: -1.192244291305542
    3. ' the' → logprob: -4.317244052886963
    4. '(self' → logprob: -4.442244052886963
    5. 'self' → logprob: -4.692244052886963
    6. ' self' → logprob: -5.192244052886963
    7. '       ' → logprob: -5.567244052886963
    8. 'all' → logprob: -6.442244052886963
    9. '():' → logprob: -6.442244052886963
    10. '()
' → logprob: -6.692244052886963

Token 43: ' possible' (ID: 4149)
  Prédit: ' possible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' possible' → logprob: -0.020366692915558815
    2. 'possible' → logprob: -4.770366668701172
    3. '_possible' → logprob: -5.895366668701172
    4. ' expressions' → logprob: -6.270366668701172
    5. '(' → logprob: -6.770366668701172
    6. '()' → logprob: -7.020366668701172
    7. ' possibilities' → logprob: -7.270366668701172
    8. ' self' → logprob: -7.395366668701172
    9. '   ' → logprob: -7.645366668701172
    10. '_' → logprob: -8.020366668701172

Token 44: ' results' (ID: 4376)
  Prédit: ' results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' results' → logprob: -0.35817673802375793
    2. ' values' → logprob: -1.9831767082214355
    3. 'results' → logprob: -2.4831767082214355
    4. 'values' → logprob: -3.7331767082214355
    5. ' outcomes' → logprob: -4.2331767082214355
    6. ' expressions' → logprob: -4.8581767082214355
    7. ' continu' → logprob: -5.3581767082214355
    8. ' outputs' → logprob: -5.4831767082214355
    9. 'evalu' → logprob: -5.6081767082214355
    10. '_values' → logprob: -5.9831767082214355

Token 45: ' of' (ID: 328)
  Prédit: ' from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.30095550417900085
    2. '       ' → logprob: -2.0509555339813232
    3. 'from' → logprob: -2.5509555339813232
    4. ' of' → logprob: -3.5509555339813232
    5. '   ' → logprob: -4.425955295562744
    6. ' that' → logprob: -5.675955295562744
    7. ' for' → logprob: -5.675955295562744
    8. '(self' → logprob: -6.550955295562744
    9. '```' → logprob: -6.800955295562744
    10. ' ' → logprob: -7.925955295562744

Token 46: ' this' (ID: 495)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.04879708215594292
    2. 'the' → logprob: -3.923797130584717
    3. ' expressions' → logprob: -4.173797130584717
    4. ' self' → logprob: -5.173797130584717
    5. ' this' → logprob: -5.548797130584717
    6. 'self' → logprob: -7.173797130584717
    7. ' an' → logprob: -7.298797130584717
    8. ' all' → logprob: -7.923797130584717
    9. ' possible' → logprob: -8.173796653747559
    10. ' expression' → logprob: -8.548796653747559

Token 47: ' expression' (ID: 12973)
  Prédit: ' expression'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' expression' → logprob: -0.027495110407471657
    2. 'expression' → logprob: -3.7774951457977295
    3. 'Expression' → logprob: -6.15249490737915
    4. '_expression' → logprob: -6.90249490737915
    5. ' Expression' → logprob: -7.27749490737915
    6. '-expression' → logprob: -9.652495384216309
    7. '.Expression' → logprob: -9.652495384216309
    8. '(expression' → logprob: -9.902495384216309
    9. ' expressions' → logprob: -9.902495384216309
    10. ' ' → logprob: -10.152495384216309

Token 48: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41616836190223694
    2. ' from' → logprob: -2.291168451309204
    3. '   ' → logprob: -2.916168451309204
    4. ':' → logprob: -3.541168451309204
    5. 's' → logprob: -3.791168451309204
    6. '"""' → logprob: -3.791168451309204
    7. '.' → logprob: -3.916168451309204
    8. '\n' → logprob: -4.041168212890625
    9. '```' → logprob: -4.541168212890625
    10. 'from' → logprob: -4.666168212890625

Token 49: ' different' (ID: 2647)
  Prédit: ' different'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' different' → logprob: -0.37154585123062134
    2. 'out' → logprob: -2.2465457916259766
    3. ' all' → logprob: -2.4965457916259766
    4. 'different' → logprob: -3.1215457916259766
    5. ' the' → logprob: -3.7465457916259766
    6. 'all' → logprob: -4.496545791625977
    7. 'in' → logprob: -4.621545791625977
    8. ' parentheses' → logprob: -4.746545791625977
    9. ' possible' → logprob: -5.121545791625977
    10. 'possible' → logprob: -5.996545791625977

Token 50: ' parent' (ID: 5980)
  Prédit: ' parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parent' → logprob: -0.9348416924476624
    2. ' parentheses' → logprob: -1.3098416328430176
    3. 'parent' → logprob: -2.5598416328430176
    4. ' interpretations' → logprob: -2.8098416328430176
    5. 's' → logprob: -3.1848416328430176
    6. ' ways' → logprob: -3.3098416328430176
    7. ' choices' → logprob: -4.309841632843018
    8. ' ' → logprob: -4.309841632843018
    9. '<|end|>' → logprob: -4.309841632843018
    10. ' evaluations' → logprob: -4.934841632843018

Token 51: 'hes' (ID: 9780)
  Prédit: 'hes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hes' → logprob: -0.2343301624059677
    2. 'heses' → logprob: -1.609330177307129
    3. 'h' → logprob: -5.234330177307129
    4. 'hesis' → logprob: -5.734330177307129
    5. '```' → logprob: -8.234330177307129
    6. '``' → logprob: -11.609330177307129
    7. 'hez' → logprob: -11.859330177307129
    8. 'he' → logprob: -12.234330177307129
    9. 'hetical' → logprob: -12.484330177307129
    10. 'hesia' → logprob: -12.484330177307129

Token 52: 'izations' (ID: 25434)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.5907843112945557
    2. 'izations' → logprob: -1.9657843112945557
    3. '```' → logprob: -1.9657843112945557
    4. 'ization' → logprob: -2.8407843112945557
    5. 'ez' → logprob: -3.3407843112945557
    6. '**' → logprob: -4.590784072875977
    7. 'iz' → logprob: -4.590784072875977
    8. 'esis' → logprob: -4.965784072875977
    9. 'eses' → logprob: -5.090784072875977
    10. '-' → logprob: -5.090784072875977

Token 53: '."""
' (ID: 33044)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06398996710777283
    2. '   ' → logprob: -3.6889898777008057
    3. '"""' → logprob: -4.313990116119385
    4. '.' → logprob: -4.313990116119385
    5. ':' → logprob: -5.188990116119385
    6. '```' → logprob: -6.438990116119385
    7. '\n' → logprob: -7.063990116119385
    8. '"""
' → logprob: -7.563990116119385
    9. '<|end|>' → logprob: -7.938990116119385
    10. '
' → logprob: -8.563989639282227

Token 54: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0035148991737514734
    2. '\n' → logprob: -7.003514766693115
    3. '   ' → logprob: -7.503514766693115
    4. '
' → logprob: -7.503514766693115
    5. '        
' → logprob: -7.628514766693115
    6. 'pass' → logprob: -8.128515243530273
    7. ':' → logprob: -9.003515243530273
    8. '\' → logprob: -9.503515243530273
    9. 'n' → logprob: -9.628515243530273
    10. '    
' → logprob: -9.753515243530273

Token 55: ' raise' (ID: 9338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7290787100791931
    2. 'pass' → logprob: -0.7290787100791931
    3. ' pass' → logprob: -3.604078769683838
    4. 'return' → logprob: -5.229078769683838
    5. 'raise' (adapté à ' raise') → logprob: -6.729078769683838
    6. 'result' → logprob: -8.47907829284668
    7. 'if' → logprob: -8.47907829284668
    8. 'yield' → logprob: -8.72907829284668
    9. ' raise' → logprob: -8.97907829284668
    10. '   ' → logprob: -9.10407829284668

Token 56: ' Not' (ID: 4037)
  Prédit: ' Not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Not' → logprob: -0.025552809238433838
    2. 'Not' → logprob: -4.275552749633789
    3. ' ' → logprob: -4.775552749633789
    4. '  ' → logprob: -5.900552749633789
    5. '_' → logprob: -9.775552749633789
    6. '_not' → logprob: -10.525552749633789
    7. '_Not' → logprob: -10.900552749633789
    8. '<|end|>' → logprob: -11.400552749633789
    9. ' ' → logprob: -11.900552749633789
    10. ' Exception' → logprob: -12.275552749633789

Token 57: 'Implemented' (ID: 42030)
  Prédit: 'Implemented'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Implemented' → logprob: -0.02329101227223873
    2. 'implemented' → logprob: -3.7732911109924316
    3. 'Not' → logprob: -10.648290634155273
    4. 'impl' → logprob: -11.398290634155273
    5. 'Found' → logprob: -12.523290634155273
    6. ' implemented' → logprob: -13.398290634155273
    7. 'ated' → logprob: -13.648290634155273
    8. 'ed' → logprob: -13.773290634155273
    9. 'Impl' → logprob: -13.898290634155273
    10. 'Implement' → logprob: -14.523290634155273

Token 58: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -3.128163257315464e-07
    2. 'Token' → logprob: -16.625
    3. ' Error' → logprob: -16.75
    4. '```' → logprob: -17.625
    5. '   ' → logprob: -18.25
    6. 'Warning' → logprob: -18.375
    7. 'Value' → logprob: -18.5
    8. 'error' → logprob: -18.625
    9. ' ' → logprob: -18.75
    10. 'Not' → logprob: -19.0

Token 59: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.24527686834335327
    2. '

' → logprob: -2.120276927947998
    3. '   ' → logprob: -3.370276927947998
    4. '    
' → logprob: -3.620276927947998
    5. '\n' → logprob: -3.995276927947998
    6. '```' → logprob: -5.620276927947998
    7. '\' → logprob: -5.745276927947998
    8. '
    
' → logprob: -6.245276927947998
    9. '<|end|>' → logprob: -6.245276927947998
    10. '    

' → logprob: -6.620276927947998

Token 60: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04445028305053711
    2. '

' → logprob: -4.044450283050537
    3. 'class' → logprob: -4.044450283050537
    4. '   ' → logprob: -5.794450283050537
    5. '\n' → logprob: -6.669450283050537
    6. '    
' → logprob: -7.044450283050537
    7. '' → logprob: -7.044450283050537
    8. '\' → logprob: -7.294450283050537
    9. ' 
' → logprob: -8.169450759887695
    10. ':' → logprob: -8.419450759887695

Token 61: ' Number' (ID: 9184)
  Prédit: ' Binary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Binary' → logprob: -1.1136980056762695
    2. ' Number' → logprob: -1.2386980056762695
    3. ' Literal' → logprob: -1.6136980056762695
    4. ' Constant' → logprob: -2.4886980056762695
    5. ' Add' → logprob: -3.4886980056762695
    6. ' ' → logprob: -3.6136980056762695
    7. ' Value' → logprob: -4.2386980056762695
    8. 'Binary' → logprob: -4.2386980056762695
    9. 'Literal' → logprob: -5.3636980056762695
    10. 'Number' → logprob: -6.1136980056762695

Token 62: '(Expression' (ID: 120302)
  Prédit: '(Expression'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Expression' → logprob: -0.6000202894210815
    2. '(' → logprob: -0.8500202894210815
    3. ':' → logprob: -3.975020408630371
    4. '):' → logprob: -6.350020408630371
    5. ')' → logprob: -6.850020408630371
    6. 'Expression' → logprob: -6.975020408630371
    7. '(Exception' → logprob: -7.725020408630371
    8. '(expression' → logprob: -8.850020408630371
    9. '(E' → logprob: -9.850020408630371
    10. '():' → logprob: -9.975020408630371

Token 63: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0007330321241170168
    2. ')' → logprob: -7.250732898712158
    3. '):
' → logprob: -11.500733375549316
    4. ':' → logprob: -11.875733375549316
    5. ' ):' → logprob: -12.375733375549316
    6. '   ' → logprob: -14.750733375549316
    7. '(' → logprob: -15.125733375549316
    8. '():' → logprob: -15.625733375549316
    9. '>):' → logprob: -15.875733375549316
    10. '):

' → logprob: -16.250732421875

Token 64: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9387360215187073
    2. '):' → logprob: -0.9387360215187073
    3. '   ' → logprob: -1.5637359619140625
    4. '(' → logprob: -5.4387359619140625
    5. ')' → logprob: -5.8137359619140625
    6. '    ' → logprob: -7.9387359619140625
    7. ' :' → logprob: -8.063735961914062
    8. '  ' → logprob: -9.438735961914062
    9. '():' → logprob: -9.563735961914062
    10. '):
' → logprob: -9.938735961914062

Token 65: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23666170239448547
    2. ' def' → logprob: -1.611661672592163
    3. 'def' (adapté à ' def') → logprob: -5.111661911010742
    4. '    ' → logprob: -5.486661911010742
    5. ' ' → logprob: -8.236661911010742
    6. '    
' → logprob: -8.236661911010742
    7. ':' → logprob: -8.486661911010742
    8. '  ' → logprob: -9.111661911010742
    9. ')' → logprob: -9.736661911010742
    10. ' 
' → logprob: -11.361661911010742

Token 66: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.01025615818798542
    2. ' ' → logprob: -4.760256290435791
    3. ' evaluate' → logprob: -7.010256290435791
    4. ' def' → logprob: -8.010255813598633
    5. '__' → logprob: -8.510255813598633
    6. 'evaluate' → logprob: -9.510255813598633
    7. '  ' → logprob: -10.135255813598633
    8. ' ' → logprob: -10.135255813598633
    9. ' _' → logprob: -11.010255813598633
    10. ' init' → logprob: -11.260255813598633

Token 67: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.9361264946837764e-07
    2. ' init' → logprob: -16.25
    3. 'int' → logprob: -19.5
    4. ' ' → logprob: -19.625
    5. '```' → logprob: -19.625
    6. 'ini' → logprob: -19.75
    7. '   ' → logprob: -20.375
    8. 'inite' → logprob: -21.25
    9. '  ' → logprob: -21.75
    10. '	init' → logprob: -21.875

Token 68: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.18252478539943695
    2. '(' → logprob: -2.0575246810913086
    3. ' (' → logprob: -4.182524681091309
    4. '__(' → logprob: -4.182524681091309
    5. '<|end|>' → logprob: -5.057524681091309
    6. 'self' → logprob: -6.432524681091309
    7. '<|end|>' → logprob: -9.307524681091309
    8. ' self' → logprob: -9.432524681091309
    9. '__(
' → logprob: -9.682524681091309
    10. ' ' → logprob: -9.807524681091309

Token 69: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0001584850688232109
    2. ' self' → logprob: -8.750158309936523
    3. '(self' → logprob: -17.875158309936523
    4. 'value' → logprob: -18.000158309936523
    5. '	self' → logprob: -18.125158309936523
    6. '       ' → logprob: -18.375158309936523
    7. '   ' → logprob: -18.750158309936523
    8. ' ' → logprob: -19.250158309936523
    9. ',self' → logprob: -19.625158309936523
    10. '_self' → logprob: -19.625158309936523

Token 70: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.030205372720956802
    2. ' ,' → logprob: -3.530205488204956
    3. 'value' → logprob: -8.780205726623535
    4. ',value' → logprob: -8.780205726623535
    5. 'self' → logprob: -9.030205726623535
    6. ' ' → logprob: -11.780205726623535
    7. ' value' → logprob: -12.655205726623535
    8. 'number' → logprob: -12.655205726623535
    9. ' self' → logprob: -12.780205726623535
    10. '  ' → logprob: -13.030205726623535

Token 71: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.7365221977233887
    2. 'self' → logprob: -0.9865221977233887
    3. ' value' → logprob: -2.1115221977233887
    4. ' self' → logprob: -3.6115221977233887
    5. '   ' → logprob: -8.361522674560547
    6. ' ' → logprob: -10.111522674560547
    7. '```' → logprob: -12.611522674560547
    8. '  ' → logprob: -12.736522674560547
    9. '       ' → logprob: -13.111522674560547
    10. '    ' → logprob: -13.361522674560547

Token 72: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009166974923573434
    2. ':int' → logprob: -7.625916481018066
    3. '):' → logprob: -8.125916481018066
    4. ' :' → logprob: -9.250916481018066
    5. ')' → logprob: -10.500916481018066
    6. ' ):' → logprob: -12.000916481018066
    7. ' )' → logprob: -14.125916481018066
    8. '=' → logprob: -14.500916481018066
    9. '=int' → logprob: -15.000916481018066
    10. '   ' → logprob: -15.125916481018066

Token 73: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.2520001530647278
    2. 'int' → logprob: -1.502000093460083
    3. ' ' → logprob: -10.126999855041504
    4. ' )' → logprob: -11.126999855041504
    5. ')' → logprob: -12.001999855041504
    6. '[int' → logprob: -12.751999855041504
    7. '<|end|>' → logprob: -13.126999855041504
    8. ':int' → logprob: -13.501999855041504
    9. '<int' → logprob: -13.501999855041504
    10. '=int' → logprob: -13.876999855041504

Token 74: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0016920845955610275
    2. ')' → logprob: -6.501692295074463
    3. '):
' → logprob: -9.376691818237305
    4. ':' → logprob: -9.376691818237305
    5. ' ):' → logprob: -10.876691818237305
    6. '):
' → logprob: -14.376691818237305
    7. '   ' → logprob: -14.501691818237305
    8. ' )' → logprob: -16.126691818237305
    9. ' ' → logprob: -16.751691818237305
    10. '=' → logprob: -17.501691818237305

Token 75: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008068907191045582
    2. 'self' → logprob: -7.37580680847168
    3. ' self' → logprob: -8.62580680847168
    4. '   ' → logprob: -15.37580680847168
    5. ' ' → logprob: -16.00080680847168
    6. '      ' → logprob: -16.00080680847168
    7. '           ' → logprob: -16.12580680847168
    8. '    ' → logprob: -16.87580680847168
    9. '        ' → logprob: -17.25080680847168
    10. ')' → logprob: -17.37580680847168

Token 76: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.4856153130531311
    2. 'self' (adapté à ' self') → logprob: -0.9856153130531311
    3. '       ' → logprob: -4.485615253448486
    4. '        ' → logprob: -8.610615730285645
    5. '	self' → logprob: -11.860615730285645
    6. ' ' → logprob: -12.235615730285645
    7. ' super' → logprob: -13.110615730285645
    8. ' ' → logprob: -13.360615730285645
    9. 'super' → logprob: -13.735615730285645
    10. '   ' → logprob: -13.860615730285645

Token 77: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -0.08911634981632233
    2. '.' → logprob: -2.464116334915161
    3. 'value' → logprob: -9.089116096496582
    4. ' value' → logprob: -10.339116096496582
    5. ' .' → logprob: -10.589116096496582
    6. '.values' → logprob: -13.214116096496582
    7. '.val' → logprob: -13.964116096496582
    8. '.user' → logprob: -14.214116096496582
    9. ')' → logprob: -14.464116096496582
    10. ' ' → logprob: -14.589116096496582

Token 78: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889595627784729
    2. '=' → logprob: -2.5788960456848145
    3. ' ' → logprob: -12.078895568847656
    4. ')' → logprob: -15.453895568847656
    5. '=value' → logprob: -15.453895568847656
    6. ' =)' → logprob: -16.953895568847656
    7. '   ' → logprob: -17.453895568847656
    8. '    ' → logprob: -17.828895568847656
    9. '=int' → logprob: -17.828895568847656
    10. '<|end|>' → logprob: -17.828895568847656

Token 79: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.20141343772411346
    2. 'value' → logprob: -1.7014133930206299
    3. '	value' → logprob: -16.326414108276367
    4. ' ' → logprob: -17.576414108276367
    5. '(value' → logprob: -17.951414108276367
    6. ')value' → logprob: -18.076414108276367
    7. '$value' → logprob: -18.451414108276367
    8. '"value' → logprob: -18.576414108276367
    9. ' ' → logprob: -18.826414108276367
    10. 'int' → logprob: -18.951414108276367

Token 80: '
    
' (ID: 15698)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 81: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3133643567562103
    2. '   ' → logprob: -1.3133643865585327
    3. ' def' → logprob: -9.188364028930664
    4. '	def' → logprob: -15.313364028930664
    5. ' ' → logprob: -16.313364028930664
    6. '       ' → logprob: -16.938364028930664
    7. '```' → logprob: -17.813364028930664
    8. '    
' → logprob: -18.938364028930664
    9. '
' → logprob: -19.313364028930664
    10. '  ' → logprob: -19.688364028930664

Token 82: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -4.5491004129871726e-05
    2. ' def' → logprob: -10.000045776367188
    3. '   ' → logprob: -17.000045776367188
    4. '	def' → logprob: -20.625045776367188
    5. ' ' → logprob: -21.375045776367188
    6. '```' → logprob: -23.375045776367188
    7. 'Def' → logprob: -24.375045776367188
    8. '    
' → logprob: -24.500045776367188
    9. ':def' → logprob: -24.625045776367188
    10. '  ' → logprob: -24.625045776367188

Token 83: ' evaluate' (ID: 21646)
  Prédit: ' evaluate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' evaluate' → logprob: -0.25213441252708435
    2. 'evaluate' → logprob: -1.5021344423294067
    3. ' def' → logprob: -9.127134323120117
    4. '.evaluate' → logprob: -9.627134323120117
    5. 'def' → logprob: -11.377134323120117
    6. ' ' → logprob: -11.502134323120117
    7. '   ' → logprob: -12.002134323120117
    8. ' ' → logprob: -13.752134323120117
    9. '  ' → logprob: -14.377134323120117
    10. 'e' → logprob: -14.752134323120117

Token 84: '_all' (ID: 13305)
  Prédit: '_all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_all' → logprob: -1.8624639324116288e-06
    2. '_' → logprob: -13.750001907348633
    3. ' _' → logprob: -14.750001907348633
    4. '_al' → logprob: -15.125001907348633
    5. '_a' → logprob: -16.375001907348633
    6. '_ALL' → logprob: -18.250001907348633
    7. '__' → logprob: -18.625001907348633
    8. ')_' → logprob: -18.750001907348633
    9. '_any' → logprob: -19.125001907348633
    10. '_one' → logprob: -19.250001907348633

Token 85: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.02022523619234562
    2. '()' → logprob: -4.2702250480651855
    3. '(' → logprob: -5.1452250480651855
    4. ' (' → logprob: -8.895225524902344
    5. ' ()' → logprob: -9.770225524902344
    6. '():' → logprob: -12.020225524902344
    7. ' ' → logprob: -12.145225524902344
    8. 'self' → logprob: -12.520225524902344
    9. '(set' → logprob: -13.270225524902344
    10. '   ' → logprob: -13.895225524902344

Token 86: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0025991995353251696
    2. '):' → logprob: -6.252599239349365
    3. ' )' → logprob: -7.377599239349365
    4. '):
' → logprob: -10.377598762512207
    5. ' ):' → logprob: -12.377598762512207
    6. ' ' → logprob: -12.752598762512207
    7. '   ' → logprob: -13.127598762512207
    8. 'self' → logprob: -13.877598762512207
    9. '):

' → logprob: -14.002598762512207
    10. 's' → logprob: -14.252598762512207

Token 87: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.08117237687110901
    2. '(' → logprob: -2.581172466278076
    3. '()' → logprob: -6.331172466278076
    4. '():' → logprob: -7.831172466278076
    5. 'self' → logprob: -10.581171989440918
    6. '(s' → logprob: -10.706171989440918
    7. ' (' → logprob: -11.206171989440918
    8. '(
' → logprob: -11.831171989440918
    9. ' ->' → logprob: -11.956171989440918
    10. ')' → logprob: -12.081171989440918

Token 88: ' Set' (ID: 3957)
  Prédit: ' {'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' {' → logprob: -0.02325223572552204
    2. '{' → logprob: -3.773252248764038
    3. '{return' → logprob: -12.523252487182617
    4. ' ' → logprob: -13.398252487182617
    5. ' ' → logprob: -13.898252487182617
    6. ' {(' → logprob: -14.898252487182617
    7. '{s' → logprob: -15.148252487182617
    8. '{id' → logprob: -17.398252487182617
    9. ' {
' → logprob: -18.023252487182617
    10. 'set' → logprob: -18.398252487182617

Token 89: '[int' (ID: 40124)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.10641518980264664
    2. '({' → logprob: -2.356415271759033
    3. '[{' → logprob: -5.106415271759033
    4. '[int' → logprob: -9.606414794921875
    5. '[' → logprob: -10.981414794921875
    6. '{return' → logprob: -11.356414794921875
    7. '(' → logprob: -11.856414794921875
    8. '<int' → logprob: -11.981414794921875
    9. '({

' → logprob: -12.356414794921875
    10. ' {' → logprob: -12.606414794921875

Token 90: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01583222858607769
    2. ':' → logprob: -5.140832424163818
    3. '():' → logprob: -5.640832424163818
    4. '       ' → logprob: -5.640832424163818
    5. '):
' → logprob: -6.265832424163818
    6. ')' → logprob: -7.890832424163818
    7. '   ' → logprob: -8.26583194732666
    8. '}:' → logprob: -9.39083194732666
    9. ']:' → logprob: -9.89083194732666
    10. '{' → logprob: -10.14083194732666

Token 91: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4432455897331238
    2. '{' → logprob: -1.3182456493377686
    3. ' {' → logprob: -2.4432456493377686
    4. '{return' → logprob: -5.9432454109191895
    5. ' return' → logprob: -7.1932454109191895
    6. 'return' → logprob: -9.068245887756348
    7. '{
' → logprob: -10.943245887756348
    8. '{"' → logprob: -11.318245887756348
    9. '```' → logprob: -11.443245887756348
    10. '        
' → logprob: -12.068245887756348

Token 92: ' return' (ID: 622)
  Prédit: '{return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{return' → logprob: -0.1410321444272995
    2. '{' → logprob: -2.3910322189331055
    3. ' {' → logprob: -3.3910322189331055
    4. ' return' → logprob: -5.8910322189331055
    5. 'return' (adapté à ' return') → logprob: -5.8910322189331055
    6. '       ' → logprob: -7.1410322189331055
    7. ' ' → logprob: -12.516032218933105
    8. '{s' → logprob: -13.266032218933105
    9. '{name' → logprob: -14.141032218933105
    10. '{text' → logprob: -14.266032218933105

Token 93: ' {' (ID: 354)
  Prédit: ' {'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {' → logprob: -0.47408992052078247
    2. '{' → logprob: -0.9740899205207825
    3. ' ' → logprob: -11.599089622497559
    4. '{s' → logprob: -13.474089622497559
    5. '{return' → logprob: -13.599089622497559
    6. ' ' → logprob: -14.224089622497559
    7. '{i' → logprob: -15.849089622497559
    8. '{id' → logprob: -16.349090576171875
    9. '{name' → logprob: -16.474090576171875
    10. '   ' → logprob: -16.974090576171875

Token 94: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0002615742268972099
    2. ' self' → logprob: -8.250261306762695
    3. '       ' → logprob: -15.125261306762695
    4. '   ' → logprob: -19.750261306762695
    5. '(self' → logprob: -20.125261306762695
    6. 'se' → logprob: -21.000261306762695
    7. '	self' → logprob: -21.125261306762695
    8. 'sel' → logprob: -21.750261306762695
    9. ' ' → logprob: -22.000261306762695
    10. '           ' → logprob: -22.000261306762695

Token 95: '.value' (ID: 4683)
  Prédit: '.value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.value' → logprob: -0.0007117166533134878
    2. '.' → logprob: -7.250711917877197
    3. ' .' → logprob: -14.000711441040039
    4. '.val' → logprob: -15.000711441040039
    5. '.v' → logprob: -15.500711441040039
    6. 'value' → logprob: -16.37571144104004
    7. ').' → logprob: -16.62571144104004
    8. '.values' → logprob: -17.12571144104004
    9. '.number' → logprob: -18.37571144104004
    10. '.Value' → logprob: -18.62571144104004

Token 96: '}

' (ID: 943)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -3.2020991056924686e-05
    2. ' }' → logprob: -10.375032424926758
    3. '}
' → logprob: -14.375032424926758
    4. '   ' → logprob: -16.500032424926758
    5. '}

' → logprob: -18.250032424926758
    6. ' ' → logprob: -19.125032424926758
    7. '       ' → logprob: -19.500032424926758
    8. ')' → logprob: -19.875032424926758
    9. '})' → logprob: -20.000032424926758
    10. '<|end|>' → logprob: -20.125032424926758

Token 97: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.01755261979997158
    2. '

' → logprob: -4.142552852630615
    3. 'class' → logprob: -6.767552852630615
    4. '    
' → logprob: -8.767552375793457
    5. '
    
' → logprob: -10.017552375793457
    6. '  
' → logprob: -10.142552375793457
    7. '
' → logprob: -10.142552375793457
    8. '    

' → logprob: -11.017552375793457
    9. '' → logprob: -11.267552375793457
    10. '<|end|>' → logprob: -11.392552375793457

Token 98: ' Binary' (ID: 32672)
  Prédit: ' Binary'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Binary' → logprob: -0.011929910629987717
    2. 'Binary' → logprob: -5.011929988861084
    3. ' Add' → logprob: -5.886929988861084
    4. ' Bin' → logprob: -6.636929988861084
    5. ' Operator' → logprob: -7.261929988861084
    6. ' ' → logprob: -8.386929512023926
    7. ' binary' → logprob: -10.261929512023926
    8. ' Variable' → logprob: -10.261929512023926
    9. ' Addition' → logprob: -10.511929512023926
    10. ' Expression' → logprob: -10.761929512023926

Token 99: 'Op' (ID: 7766)
  Prédit: 'Operation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Operation' → logprob: -0.5395591259002686
    2. 'Operator' → logprob: -1.0395591259002686
    3. 'Op' → logprob: -3.2895591259002686
    4. 'Expression' → logprob: -3.6645591259002686
    5. '(Expression' → logprob: -7.914559364318848
    6. '(Operation' → logprob: -9.539559364318848
    7. 'operator' → logprob: -10.789559364318848
    8. '(' → logprob: -11.164559364318848
    9. 'OP' → logprob: -12.039559364318848
    10. 'Oper' → logprob: -12.664559364318848

Token 100: '(Expression' (ID: 120302)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20177875459194183
    2. '(Expression' → logprob: -1.701778769493103
    3. ' (' → logprob: -8.451778411865234
    4. '(
' → logprob: -10.201778411865234
    5. '(Operation' → logprob: -10.326778411865234
    6. '(Abstract' → logprob: -10.826778411865234
    7. '(expression' → logprob: -11.451778411865234
    8. '("("' → logprob: -11.451778411865234
    9. '(E' → logprob: -11.576778411865234
    10. '(Op' → logprob: -12.326778411865234

Token 101: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.016445107758045197
    2. ':' → logprob: -4.266445159912109
    3. '(' → logprob: -6.516445159912109
    4. ' ):' → logprob: -8.14144515991211
    5. ')' → logprob: -8.39144515991211
    6. '):
' → logprob: -9.01644515991211
    7. '}:' → logprob: -10.26644515991211
    8. ',' → logprob: -10.39144515991211
    9. '<|end|>' → logprob: -11.01644515991211
    10. ' :' → logprob: -11.14144515991211

Token 102: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22842617332935333
    2. '):' → logprob: -2.728426218032837
    3. ':
' → logprob: -2.728426218032837
    4. '   ' → logprob: -3.103426218032837
    5. '(Expression' → logprob: -4.103425979614258
    6. '):
' → logprob: -4.603425979614258
    7. ')' → logprob: -7.728425979614258
    8. '(' → logprob: -7.853425979614258
    9. '<|end|>' → logprob: -8.103425979614258
    10. 'def' → logprob: -8.353425979614258

Token 103: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.6507582664489746
    2. 'def' (adapté à ' def') → logprob: -0.7757582664489746
    3. '   ' → logprob: -4.025758266448975
    4. ' ' → logprob: -9.650758743286133
    5. '(' → logprob: -10.900758743286133
    6. ':def' → logprob: -11.150758743286133
    7. '	def' → logprob: -11.275758743286133
    8. ':' → logprob: -11.400758743286133
    9. '    ' → logprob: -11.900758743286133
    10. '  ' → logprob: -12.025758743286133

Token 104: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.00015753143816255033
    2. '__' → logprob: -8.875157356262207
    3. ' _' → logprob: -12.250157356262207
    4. '_init' → logprob: -12.500157356262207
    5. ' ' → logprob: -12.625157356262207
    6. ' init' → logprob: -12.750157356262207
    7. ' ' → logprob: -13.625157356262207
    8. ' def' → logprob: -13.875157356262207
    9. 'init' → logprob: -14.500157356262207
    10. ' ___' → logprob: -15.250157356262207

Token 105: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -3.128163257315464e-07
    2. ' init' → logprob: -15.75
    3. '_init' → logprob: -16.5
    4. '(init' → logprob: -16.625
    5. '   ' → logprob: -19.125
    6. '	init' → logprob: -19.375
    7. 'ini' → logprob: -19.5
    8. '  ' → logprob: -20.125
    9. '__' → logprob: -20.5
    10. '```' → logprob: -20.625

Token 106: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.6640398502349854
    2. '(' → logprob: -1.0390398502349854
    3. ' (' → logprob: -2.0390398502349854
    4. '__(' → logprob: -7.914039611816406
    5. '<|end|>' → logprob: -8.164039611816406
    6. ' ' → logprob: -8.414039611816406
    7. 'self' → logprob: -8.539039611816406
    8. '(
' → logprob: -9.789039611816406
    9. ',' → logprob: -10.539039611816406
    10. '<|end|>' → logprob: -10.789039611816406

Token 107: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0019297054968774319
    2. ' self' → logprob: -6.251929759979248
    3. ',' → logprob: -14.87692928314209
    4. '(self' → logprob: -15.25192928314209
    5. '   ' → logprob: -15.37692928314209
    6. ' ' → logprob: -16.126930236816406
    7. '	self' → logprob: -16.376930236816406
    8. '
' → logprob: -16.876930236816406
    9. ',self' → logprob: -17.126930236816406
    10. '       ' → logprob: -17.501930236816406

Token 108: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.049236465245485306
    2. ' ,' → logprob: -3.049236536026001
    3. 'self' → logprob: -7.424236297607422
    4. ' self' → logprob: -10.299236297607422
    5. ' ' → logprob: -12.174236297607422
    6. '       ' → logprob: -12.674236297607422
    7. ',left' → logprob: -12.674236297607422
    8. ',self' → logprob: -12.924236297607422
    9. ',value' → logprob: -13.799236297607422
    10. 'left' → logprob: -14.049236297607422

Token 109: ' left' (ID: 3561)
  Prédit: ' left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.143373504281044
    2. 'left' → logprob: -2.018373489379883
    3. 'self' → logprob: -7.893373489379883
    4. ' self' → logprob: -8.393373489379883
    5. ' op' → logprob: -10.018373489379883
    6. ' lhs' → logprob: -11.143373489379883
    7. ' operator' → logprob: -11.768373489379883
    8. ' ' → logprob: -11.768373489379883
    9. '   ' → logprob: -12.143373489379883
    10. 'lhs' → logprob: -12.143373489379883

Token 110: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015523707494139671
    2. ' ,' → logprob: -4.765523910522461
    3. ':' → logprob: -5.015523910522461
    4. ' :' → logprob: -9.140523910522461
    5. ' ' → logprob: -9.515523910522461
    6. '<|end|>' → logprob: -9.890523910522461
    7. '=' → logprob: -12.640523910522461
    8. '  ' → logprob: -12.765523910522461
    9. '   ' → logprob: -13.015523910522461
    10. '<|end|>' → logprob: -13.265523910522461

Token 111: ' Expression' (ID: 32496)
  Prédit: ' Expression'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Expression' → logprob: -0.10031956434249878
    2. 'Expression' → logprob: -2.3503196239471436
    3. '(Expression' → logprob: -9.725319862365723
    4. ' ' → logprob: -10.975319862365723
    5. '.Expression' → logprob: -11.100319862365723
    6. '<|end|>' → logprob: -11.850319862365723
    7. ' expression' → logprob: -11.850319862365723
    8. '_expression' → logprob: -12.600319862365723
    9. ',' → logprob: -14.350319862365723
    10. ')' → logprob: -14.600319862365723

Token 112: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015023599844425917
    2. ' ,' → logprob: -6.501502513885498
    3. ' ' → logprob: -17.126502990722656
    4. ',
' → logprob: -17.251502990722656
    5. '‌,' → logprob: -17.751502990722656
    6. '<|end|>' → logprob: -18.751502990722656
    7. '   ' → logprob: -19.126502990722656
    8. ',int' → logprob: -19.376502990722656
    9. ')' → logprob: -19.501502990722656
    10. ',

' → logprob: -19.876502990722656

Token 113: ' right' (ID: 1849)
  Prédit: ' op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' op' → logprob: -0.2195911556482315
    2. ' operator' → logprob: -2.4695911407470703
    3. 'op' → logprob: -3.0945911407470703
    4. 'operator' → logprob: -3.3445911407470703
    5. ' right' → logprob: -3.5945911407470703
    6. 'right' → logprob: -5.46959114074707
    7. ' ' → logprob: -8.84459114074707
    8. ' oper' → logprob: -10.46959114074707
    9. '	op' → logprob: -10.96959114074707
    10. '  ' → logprob: -11.34459114074707

Token 114: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00503699854016304
    2. ':' → logprob: -5.5050368309021
    3. ' ,' → logprob: -7.1300368309021
    4. '<|end|>' → logprob: -9.630037307739258
    5. '):' → logprob: -10.005037307739258
    6. ')' → logprob: -10.255037307739258
    7. '<|end|>' → logprob: -12.380037307739258
    8. ' ' → logprob: -13.005037307739258
    9. ' :' → logprob: -13.255037307739258
    10. ' ):' → logprob: -13.880037307739258

Token 115: ' Expression' (ID: 32496)
  Prédit: ' Expression'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Expression' → logprob: -0.07069112360477448
    2. 'Expression' → logprob: -2.6956911087036133
    3. ' expression' → logprob: -7.695691108703613
    4. '.Expression' → logprob: -9.070691108703613
    5. ' ' → logprob: -9.445691108703613
    6. '_expression' → logprob: -9.945691108703613
    7. '(Expression' → logprob: -10.445691108703613
    8. 'expression' → logprob: -11.445691108703613
    9. ')' → logprob: -11.570691108703613
    10. '<|end|>' → logprob: -12.820691108703613

Token 116: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004891689168289304
    2. ' ,' → logprob: -7.625489234924316
    3. '   ' → logprob: -13.750489234924316
    4. ',
' → logprob: -16.75048828125
    5. ' ' → logprob: -17.62548828125
    6. '‌,' → logprob: -18.37548828125
    7. ',int' → logprob: -18.37548828125
    8. '):' → logprob: -18.62548828125
    9. ')' → logprob: -18.62548828125
    10. '*,' → logprob: -18.87548828125

Token 117: ' op' (ID: 991)
  Prédit: ' op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' op' → logprob: -0.2937474250793457
    2. 'op' → logprob: -1.4187474250793457
    3. 'operator' → logprob: -5.043747425079346
    4. ' operator' → logprob: -5.168747425079346
    5. '	op' → logprob: -8.918746948242188
    6. '   ' → logprob: -9.168746948242188
    7. ' ' → logprob: -9.418746948242188
    8. 'operation' → logprob: -10.918746948242188
    9. ' operation' → logprob: -11.668746948242188
    10. ' oper' → logprob: -11.918746948242188

Token 118: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.015456555411219597
    2. '):' → logprob: -4.390456676483154
    3. ' :' → logprob: -6.640456676483154
    4. ')' → logprob: -6.765456676483154
    5. ' ):' → logprob: -8.765456199645996
    6. '<|end|>' → logprob: -9.140456199645996
    7. ',' → logprob: -9.390456199645996
    8. ' ' → logprob: -10.140456199645996
    9. ':str' → logprob: -10.515456199645996
    10. '):
' → logprob: -11.140456199645996

Token 119: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.48114296793937683
    2. ' str' → logprob: -1.1061429977416992
    3. 'Callable' → logprob: -3.606142997741699
    4. ')' → logprob: -4.731142997741699
    5. ' ' → logprob: -5.231142997741699
    6. ' Callable' → logprob: -5.481142997741699
    7. ' callable' → logprob: -5.856142997741699
    8. ' '' → logprob: -7.231142997741699
    9. ''' → logprob: -7.856142997741699
    10. '   ' → logprob: -8.1061429977417

Token 120: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0021950986701995134
    2. ')' → logprob: -6.502194881439209
    3. ',' → logprob: -7.877194881439209
    4. ' ):' → logprob: -8.502195358276367
    5. '):
' → logprob: -9.752195358276367
    6. ':' → logprob: -10.252195358276367
    7. '   ' → logprob: -11.627195358276367
    8. ' ' → logprob: -12.377195358276367
    9. ' )' → logprob: -14.002195358276367
    10. '       ' → logprob: -14.502195358276367

Token 121: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007403823547065258
    2. ':' → logprob: -6.13240385055542
    3. ')' → logprob: -6.38240385055542
    4. '<|end|>' → logprob: -6.38240385055542
    5. '):' → logprob: -7.25740385055542
    6. '   ' → logprob: -7.50740385055542
    7. ' ' → logprob: -9.007403373718262
    8. ',' → logprob: -9.257403373718262
    9. '      ' → logprob: -10.007403373718262
    10. '    ' → logprob: -10.257403373718262

Token 122: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.28905731439590454
    2. 'self' (adapté à ' self') → logprob: -1.4140572547912598
    3. '       ' → logprob: -4.91405725479126
    4. ' ' → logprob: -8.414057731628418
    5. '        ' → logprob: -9.039057731628418
    6. ' super' → logprob: -9.539057731628418
    7. 'super' → logprob: -9.539057731628418
    8. ' ' → logprob: -10.914057731628418
    9. '	self' → logprob: -11.039057731628418
    10. '   ' → logprob: -12.539057731628418

Token 123: '.left' (ID: 15388)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.014376336708664894
    2. '.left' → logprob: -4.264376163482666
    3. ' .' → logprob: -9.139376640319824
    4. ' ' → logprob: -10.014376640319824
    5. ',' → logprob: -10.514376640319824
    6. '.space' → logprob: -11.389376640319824
    7. '.right' → logprob: -12.389376640319824
    8. ' left' → logprob: -12.389376640319824
    9. 'left' → logprob: -12.639376640319824
    10. '.parent' → logprob: -13.139376640319824

Token 124: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0361665487289429
    2. '<|end|>' → logprob: -1.1611665487289429
    3. ' ' → logprob: -1.4111665487289429
    4. '=' → logprob: -2.6611666679382324
    5. ',' → logprob: -4.286166667938232
    6. ' ,' → logprob: -5.786166667938232
    7. '<|end|>' → logprob: -7.036166667938232
    8. ')' → logprob: -8.036166191101074
    9. '.' → logprob: -9.661166191101074
    10. ' )' → logprob: -10.036166191101074

Token 125: ' left' (ID: 3561)
  Prédit: ' left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.16028068959712982
    2. 'left' → logprob: -1.910280704498291
    3. '	left' → logprob: -10.285280227661133
    4. ' lef' → logprob: -11.035280227661133
    5. '_left' → logprob: -13.285280227661133
    6. '(left' → logprob: -13.410280227661133
    7. '[left' → logprob: -13.535280227661133
    8. ' ' → logprob: -14.660280227661133
    9. ':left' → logprob: -15.160280227661133
    10. ' ' → logprob: -15.285280227661133

Token 126: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0094316266477108
    2. '<|end|>' → logprob: -4.884431838989258
    3. '<|end|>' → logprob: -7.759431838989258
    4. '
' → logprob: -8.009431838989258
    5. ' ' → logprob: -8.384431838989258
    6. '        
' → logprob: -8.509431838989258
    7. ' 
' → logprob: -8.884431838989258
    8. '   ' → logprob: -9.009431838989258
    9. '        ' → logprob: -9.259431838989258
    10. '      ' → logprob: -9.509431838989258

Token 127: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0034553834702819586
    2. '<|end|>' → logprob: -5.87845516204834
    3. ' ' → logprob: -8.25345516204834
    4. '<|end|>' → logprob: -9.00345516204834
    5. '
' → logprob: -10.00345516204834
    6. '        
' → logprob: -10.00345516204834
    7. '   ' → logprob: -10.25345516204834
    8. ',' → logprob: -10.25345516204834
    9. '      ' → logprob: -10.62845516204834
    10. '        ' → logprob: -10.62845516204834

Token 128: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.03063611127436161
    2. ' self' → logprob: -3.5306360721588135
    3. '       ' → logprob: -7.030636310577393
    4. '   ' → logprob: -14.780635833740234
    5. '	self' → logprob: -15.655635833740234
    6. ' ' → logprob: -16.780635833740234
    7. '(self' → logprob: -16.905635833740234
    8. '        
' → logprob: -17.155635833740234
    9. '        ' → logprob: -17.405635833740234
    10. '     ' → logprob: -17.405635833740234

Token 129: '.right' (ID: 17627)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.012005656026303768
    2. ',' → logprob: -4.887005805969238
    3. '.' → logprob: -6.512005805969238
    4. '<|end|>' → logprob: -7.387005805969238
    5. ' op' → logprob: -7.762005805969238
    6. ' ,' → logprob: -7.762005805969238
    7. '  ' → logprob: -8.762005805969238
    8. 'op' → logprob: -8.762005805969238
    9. ''' → logprob: -8.887005805969238
    10. ' 
' → logprob: -9.012005805969238

Token 130: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 131: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.5759517550468445
    2. ' right' → logprob: -0.8259517550468445
    3. '	right' → logprob: -11.82595157623291
    4. '<|end|>' → logprob: -12.95095157623291
    5. '[right' → logprob: -14.57595157623291
    6. ' ' → logprob: -14.57595157623291
    7. ' rhs' → logprob: -14.95095157623291
    8. '_right' → logprob: -15.07595157623291
    9. '(right' → logprob: -15.32595157623291
    10. 'r' → logprob: -15.32595157623291

Token 132: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007387538789771497
    2. '
' → logprob: -7.750738620758057
    3. '<|end|>' → logprob: -8.375739097595215
    4. '        
' → logprob: -11.125739097595215
    5. ',' → logprob: -11.250739097595215
    6. '   ' → logprob: -11.500739097595215
    7. 'self' → logprob: -11.875739097595215
    8. '    
' → logprob: -12.125739097595215
    9. '  
' → logprob: -12.125739097595215
    10. '        ' → logprob: -12.500739097595215

Token 133: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012542768381536007
    2. 'self' → logprob: -6.751254081726074
    3. ' self' → logprob: -10.001254081726074
    4. '   ' → logprob: -10.751254081726074
    5. '
' → logprob: -12.126254081726074
    6. ',' → logprob: -12.876254081726074
    7. '      ' → logprob: -13.376254081726074
    8. '        
' → logprob: -13.501254081726074
    9. '	self' → logprob: -13.751254081726074
    10. '    
' → logprob: -13.876254081726074

Token 134: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.031049257144331932
    2. ' self' → logprob: -3.5310492515563965
    3. '       ' → logprob: -6.6560492515563965
    4. 'op' → logprob: -12.781049728393555
    5. '   ' → logprob: -12.781049728393555
    6. '	self' → logprob: -13.031049728393555
    7. ' op' → logprob: -13.031049728393555
    8. '
' → logprob: -14.281049728393555
    9. ' ' → logprob: -14.531049728393555
    10. 'this' → logprob: -16.406049728393555

Token 135: '.op' (ID: 19357)
  Prédit: '.op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.op' → logprob: -0.0003914695407729596
    2. '.' → logprob: -8.000391006469727
    3. '.operator' → logprob: -10.125391006469727
    4. ' .' → logprob: -12.000391006469727
    5. 'op' → logprob: -12.375391006469727
    6. '.ops' → logprob: -12.750391006469727
    7. ' op' → logprob: -13.625391006469727
    8. '	op' → logprob: -14.625391006469727
    9. '.operation' → logprob: -15.250391006469727
    10. '.opt' → logprob: -15.375391006469727

Token 136: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141801238059998
    2. '=' → logprob: -1.7014180421829224
    3. ' ' → logprob: -12.826417922973633
    4. '_' → logprob: -13.701417922973633
    5. '  ' → logprob: -15.201417922973633
    6. '<|end|>' → logprob: -15.451417922973633
    7. 'space' → logprob: -16.201417922973633
    8. 's' → logprob: -16.201417922973633
    9. '_space' → logprob: -16.951417922973633
    10. ')' → logprob: -17.201417922973633

Token 137: ' op' (ID: 991)
  Prédit: ' op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' op' → logprob: -0.04303663969039917
    2. 'op' → logprob: -3.168036699295044
    3. '	op' → logprob: -10.793036460876465
    4. ' ' → logprob: -12.168036460876465
    5. ' ' → logprob: -12.418036460876465
    6. '(op' → logprob: -12.668036460876465
    7. ''op' → logprob: -12.918036460876465
    8. '_op' → logprob: -14.418036460876465
    9. ''' → logprob: -14.793036460876465
    10. '```' → logprob: -16.04303741455078

Token 138: '
' (ID: 198)
  Prédit: '    
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.0747504010796547
    2. '
' → logprob: -2.8247504234313965
    3. '   ' → logprob: -4.8247504234313965
    4. '  
' → logprob: -6.1997504234313965
    5. ' 
' → logprob: -6.9497504234313965
    6. '   
' → logprob: -6.9497504234313965
    7. '<|end|>' → logprob: -7.8247504234313965
    8. '        
' → logprob: -9.074749946594238
    9. 'def' → logprob: -9.949749946594238
    10. '

' → logprob: -10.074749946594238

Token 139: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5328280925750732
    2. '    
' → logprob: -0.9078280925750732
    3. '   ' → logprob: -5.282828330993652
    4. '  
' → logprob: -5.907828330993652
    5. '   
' → logprob: -6.907828330993652
    6. ' 
' → logprob: -7.407828330993652
    7. '        
' → logprob: -9.407828330993652
    8. '

' → logprob: -10.032828330993652
    9. '
    
' → logprob: -10.282828330993652
    10. 'def' → logprob: -10.657828330993652

Token 140: ' self' (ID: 1051)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2586733400821686
    2. '   ' → logprob: -1.7586733102798462
    3. '    
' → logprob: -3.7586734294891357
    4. '
' → logprob: -4.008673191070557
    5. ' def' → logprob: -4.383673191070557
    6. '        
' → logprob: -7.758673191070557
    7. '

' → logprob: -8.008673667907715
    8. ' 
' → logprob: -8.508673667907715
    9. '<|end|>' → logprob: -8.508673667907715
    10. '
    
' → logprob: -9.133673667907715

Token 141: '._' (ID: 2697)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6614266037940979
    2. '._' → logprob: -1.1614265441894531
    3. 'def' → logprob: -3.411426544189453
    4. ' .' → logprob: -3.911426544189453
    5. '_func' → logprob: -3.911426544189453
    6. '_result' → logprob: -4.161426544189453
    7. '.func' → logprob: -4.161426544189453
    8. '.op' → logprob: -4.161426544189453
    9. '   ' → logprob: -5.411426544189453
    10. '.result' → logprob: -5.661426544189453

Token 142: 'operation' (ID: 15397)
  Prédit: 'cache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cache' → logprob: -0.1055389791727066
    2. 'memo' → logprob: -3.105539083480835
    3. 'func' → logprob: -3.480539083480835
    4. 'results' → logprob: -4.605538845062256
    5. 'evaluate' → logprob: -5.355538845062256
    6. 'eval' → logprob: -5.605538845062256
    7. 'values' → logprob: -5.730538845062256
    8. 'cached' → logprob: -6.855538845062256
    9. 'value' → logprob: -7.355538845062256
    10. 'compute' → logprob: -7.605538845062256

Token 143: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10071370750665665
    2. '=' → logprob: -2.3507137298583984
    3. 's' → logprob: -8.225713729858398
    4. ' ' → logprob: -8.850713729858398
    5. ':' → logprob: -9.725713729858398
    6. '_map' → logprob: -11.225713729858398
    7. '_funcs' → logprob: -11.725713729858398
    8. '=lambda' → logprob: -12.350713729858398
    9. '<|end|>' → logprob: -13.350713729858398
    10. '  ' → logprob: -13.475713729858398

Token 144: ' self' (ID: 1051)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.24512864649295807
    2. '{
' → logprob: -1.6201286315917969
    3. ' {' → logprob: -4.120128631591797
    4. ' {
' → logprob: -5.995128631591797
    5. '{'' → logprob: -7.995128631591797
    6. 'None' → logprob: -8.620128631591797
    7. 'lambda' → logprob: -9.120128631591797
    8. ' None' → logprob: -9.995128631591797
    9. '{"' → logprob: -10.120128631591797
    10. ' {'' → logprob: -10.995128631591797

Token 145: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.3026924729347229
    2. '.' → logprob: -2.052692413330078
    3. '.op' → logprob: -3.677692413330078
    4. '.ops' → logprob: -3.677692413330078
    5. '{' → logprob: -3.927692413330078
    6. ' {' → logprob: -4.552692413330078
    7. ' ' → logprob: -4.927692413330078
    8. '{
' → logprob: -4.927692413330078
    9. '_ops' → logprob: -5.177692413330078
    10. '.operations' → logprob: -5.427692413330078

Token 146: 'get' (ID: 522)
  Prédit: 'get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.007859412580728531
    2. 'operation' → logprob: -5.882859230041504
    3. 'op' → logprob: -6.257859230041504
    4. 'select' → logprob: -7.132859230041504
    5. 'operator' → logprob: -7.507859230041504
    6. 'choose' → logprob: -7.757859230041504
    7. 'ops' → logprob: -8.132859230041504
    8. 'make' → logprob: -8.132859230041504
    9. 'resolve' → logprob: -8.632859230041504
    10. 'binary' → logprob: -9.257859230041504

Token 147: '_operation' (ID: 77985)
  Prédit: '_operation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_operation' → logprob: -0.006737631279975176
    2. '_operator' → logprob: -5.38173770904541
    3. 'operation' → logprob: -6.50673770904541
    4. '_op' → logprob: -7.50673770904541
    5. '_function' → logprob: -11.13173770904541
    6. '_' → logprob: -11.25673770904541
    7. ' operation' → logprob: -11.63173770904541
    8. '_callable' → logprob: -11.63173770904541
    9. 'operator' → logprob: -11.88173770904541
    10. '_lambda' → logprob: -12.25673770904541

Token 148: '(op' (ID: 34275)
  Prédit: '(op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(op' → logprob: -0.030902713537216187
    2. '(' → logprob: -3.530902624130249
    3. '<|end|>' → logprob: -7.780902862548828
    4. '(operator' → logprob: -8.905902862548828
    5. '(
' → logprob: -9.030902862548828
    6. '_op' → logprob: -9.655902862548828
    7. 'op' → logprob: -9.780902862548828
    8. '()' → logprob: -9.905902862548828
    9. '(self' → logprob: -10.155902862548828
    10. 'func' → logprob: -10.280902862548828

Token 149: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.7729658540920354e-05
    2. ' )' → logprob: -10.750027656555176
    3. '   ' → logprob: -12.500027656555176
    4. ')
' → logprob: -13.625027656555176
    5. '       ' → logprob: -15.250027656555176
    6. ')

' → logprob: -15.250027656555176
    7. '}' → logprob: -15.250027656555176
    8. ' ' → logprob: -15.375027656555176
    9. '<|end|>' → logprob: -17.000028610229492
    10. ')}' → logprob: -17.125028610229492

Token 150: '    
' (ID: 1944)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14452169835567474
    2. '   ' → logprob: -2.519521713256836
    3. '    
' → logprob: -3.769521713256836
    4. '  
' → logprob: -4.519521713256836
    5. '<|end|>' → logprob: -4.769521713256836
    6. 'def' → logprob: -5.394521713256836
    7. ' 
' → logprob: -5.769521713256836
    8. ' ' → logprob: -7.144521713256836
    9. '   
' → logprob: -7.144521713256836
    10. ' def' → logprob: -7.769521713256836

Token 151: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.62537682056427
    2. 'def' → logprob: -1.12537682056427
    3. '
' → logprob: -2.2503767013549805
    4. '    
' → logprob: -3.5003767013549805
    5. ' def' → logprob: -6.0003767013549805
    6. '  
' → logprob: -6.5003767013549805
    7. ' 
' → logprob: -7.8753767013549805
    8. '	def' → logprob: -8.75037670135498
    9. '   
' → logprob: -9.25037670135498
    10. ' ' → logprob: -9.50037670135498

Token 152: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00043460296001285315
    2. ' def' → logprob: -7.750434398651123
    3. '   ' → logprob: -12.500434875488281
    4. '@' → logprob: -16.37543487548828
    5. ' ' → logprob: -16.37543487548828
    6. '_def' → logprob: -17.37543487548828
    7. '    
' → logprob: -18.50043487548828
    8. 'de' → logprob: -18.75043487548828
    9. '	def' → logprob: -19.00043487548828
    10. '

' → logprob: -19.12543487548828

Token 153: ' _' (ID: 1175)
  Prédit: '_get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_get' → logprob: -0.03892841935157776
    2. ' _' → logprob: -3.663928508758545
    3. ' def' → logprob: -4.788928508758545
    4. 'def' → logprob: -5.663928508758545
    5. '_' → logprob: -8.413928031921387
    6. '   ' → logprob: -8.788928031921387
    7. '_define' → logprob: -8.913928031921387
    8. '_def' → logprob: -9.163928031921387
    9. '_eval' → logprob: -9.788928031921387
    10. ' ' → logprob: -10.538928031921387

Token 154: 'get' (ID: 522)
  Prédit: 'get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -5.9153885558771435e-06
    2. 'def' → logprob: -12.375005722045898
    3. ' get' → logprob: -13.625005722045898
    4. '_get' → logprob: -14.875005722045898
    5. '.get' → logprob: -18.7500057220459
    6. '	get' → logprob: -18.8750057220459
    7. '(get' → logprob: -19.0000057220459
    8. '```' → logprob: -19.1250057220459
    9. 'define' → logprob: -20.7500057220459
    10. 'operation' → logprob: -21.1250057220459

Token 155: '_operation' (ID: 77985)
  Prédit: '_operation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_operation' → logprob: -1.1160349458805285e-05
    2. 'operation' → logprob: -12.000011444091797
    3. '_' → logprob: -12.375011444091797
    4. '_operator' → logprob: -15.000011444091797
    5. '_operations' → logprob: -15.375011444091797
    6. '_OPERATION' → logprob: -17.250011444091797
    7. 'Operation' → logprob: -17.500011444091797
    8. '_oper' → logprob: -17.500011444091797
    9. '_op' → logprob: -17.625011444091797
    10. ' operation' → logprob: -17.875011444091797

Token 156: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.017183944582939148
    2. '(' → logprob: -4.142183780670166
    3. ' (' → logprob: -7.017183780670166
    4. 'self' → logprob: -8.892184257507324
    5. '<|end|>' → logprob: -10.142184257507324
    6. '(
' → logprob: -10.517184257507324
    7. '(op' → logprob: -10.892184257507324
    8. ' self' → logprob: -11.267184257507324
    9. ' ' → logprob: -11.892184257507324
    10. '(s' → logprob: -12.392184257507324

Token 157: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1668003797531128
    2. '(self' → logprob: -2.6668004989624023
    3. '(op' → logprob: -3.1668004989624023
    4. 'self' → logprob: -4.291800498962402
    5. ')' → logprob: -4.416800498962402
    6. ' ,' → logprob: -5.291800498962402
    7. ' op' → logprob: -5.541800498962402
    8. ' self' → logprob: -5.791800498962402
    9. ' ' → logprob: -6.541800498962402
    10. ' (' → logprob: -6.916800498962402

Token 158: ' op' (ID: 991)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.3046630918979645
    2. 'self' → logprob: -1.554663062095642
    3. ' op' → logprob: -3.1796631813049316
    4. ' self' → logprob: -4.679663181304932
    5. ')' → logprob: -8.679662704467773
    6. '	op' → logprob: -8.679662704467773
    7. '(op' → logprob: -10.554662704467773
    8. '   ' → logprob: -10.929662704467773
    9. '_op' → logprob: -10.929662704467773
    10. 'operator' → logprob: -10.929662704467773

Token 159: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.048623472452163696
    2. ')' → logprob: -3.298623561859131
    3. '):
' → logprob: -5.048623561859131
    4. ':' → logprob: -5.673623561859131
    5. 'self' → logprob: -7.798623561859131
    6. ' ):' → logprob: -8.673623085021973
    7. '   ' → logprob: -10.798623085021973
    8. '(self' → logprob: -11.048623085021973
    9. '       ' → logprob: -11.173623085021973
    10. ' ' → logprob: -12.048623085021973

Token 160: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.0024806505534797907
    2. ' str' → logprob: -6.252480506896973
    3. ')' → logprob: -7.752480506896973
    4. '   ' → logprob: -10.002480506896973
    5. 'self' → logprob: -11.002480506896973
    6. 'def' → logprob: -11.377480506896973
    7. '[str' → logprob: -11.377480506896973
    8. ' ' → logprob: -11.502480506896973
    9. '	str' → logprob: -12.627480506896973
    10. '       ' → logprob: -12.627480506896973

Token 161: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.579486608505249
    2. ')' → logprob: -0.829486608505249
    3. ' ):' → logprob: -6.579486846923828
    4. '):
' → logprob: -6.704486846923828
    5. ' )' → logprob: -7.079486846923828
    6. ')->' → logprob: -10.454486846923828
    7. ':' → logprob: -10.454486846923828
    8. '):
' → logprob: -11.204486846923828
    9. ' ):
' → logprob: -12.204486846923828
    10. '   ' → logprob: -12.954486846923828

Token 162: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0415283627808094
    2. ')' → logprob: -3.9165284633636475
    3. ' ->' → logprob: -4.041528224945068
    4. '):' → logprob: -6.416528224945068
    5. '->' → logprob: -7.166528224945068
    6. ' :' → logprob: -7.791528224945068
    7. ')->' → logprob: -8.666528701782227
    8. ':
' → logprob: -9.041528701782227
    9. ' )' → logprob: -10.791528701782227
    10. '   ' → logprob: -10.916528701782227

Token 163: ' Callable' (ID: 94560)
  Prédit: 'Callable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Callable' → logprob: -0.023245712742209435
    2. ' Callable' → logprob: -3.7732458114624023
    3. ' ' → logprob: -16.148244857788086
    4. 'Optional' → logprob: -16.523244857788086
    5. '   ' → logprob: -17.273244857788086
    6. 'Call' → logprob: -17.648244857788086
    7. '_callable' → logprob: -17.898244857788086
    8. 'Dict' → logprob: -18.898244857788086
    9. '```' → logprob: -19.773244857788086
    10. ' callable' → logprob: -19.898244857788086

Token 164: '[[' (ID: 26245)
  Prédit: '[['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.2840248644351959
    2. '[int' → logprob: -1.6590248346328735
    3. ':' → logprob: -2.909024953842163
    4. '[' → logprob: -6.784024715423584
    5. '[...,' → logprob: -7.409024715423584
    6. 'int' → logprob: -8.534025192260742
    7. '(int' → logprob: -8.534025192260742
    8. '```' → logprob: -10.284025192260742
    9. '   ' → logprob: -10.409025192260742
    10. '[['' → logprob: -10.784025192260742

Token 165: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -2.935296834039036e-06
    2. ' int' → logprob: -13.25000286102295
    3. 'float' → logprob: -14.50000286102295
    4. '[int' → logprob: -14.75000286102295
    5. 'Union' → logprob: -16.250003814697266
    6. '   ' → logprob: -16.750003814697266
    7. '(int' → logprob: -17.375003814697266
    8. '
' → logprob: -18.000003814697266
    9. ' ' → logprob: -18.375003814697266
    10. 'Optional' → logprob: -18.375003814697266

Token 166: ',int' (ID: 20909)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007684469688683748
    2. ',int' → logprob: -4.882684707641602
    3. ' ,' → logprob: -9.632684707641602
    4. 'int' → logprob: -11.507684707641602
    5. '[int' → logprob: -13.382684707641602
    6. ']int' → logprob: -14.757684707641602
    7. ',Integer' → logprob: -15.382684707641602
    8. '‌,' → logprob: -15.507684707641602
    9. ',bool' → logprob: -16.5076847076416
    10. ' int' → logprob: -16.5076847076416

Token 167: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.02094098925590515
    2. ',' → logprob: -3.8959410190582275
    3. ',int' → logprob: -8.020940780639648
    4. ' ],' → logprob: -10.020940780639648
    5. 'int' → logprob: -11.395940780639648
    6. ']' → logprob: -12.020940780639648
    7. ']int' → logprob: -12.770940780639648
    8. ' ,' → logprob: -13.270940780639648
    9. '),' → logprob: -13.770940780639648
    10. '[int' → logprob: -14.270940780639648

Token 168: ' Optional' (ID: 19351)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.006724129430949688
    2. ' int' → logprob: -5.0067243576049805
    3. 'Optional' → logprob: -12.00672435760498
    4. '[int' → logprob: -13.38172435760498
    5. '	int' → logprob: -15.25672435760498
    6. ' Optional' → logprob: -15.50672435760498
    7. ' ' → logprob: -15.50672435760498
    8. '<int' → logprob: -15.75672435760498
    9. 'Union' → logprob: -15.88172435760498
    10. '   ' → logprob: -16.381723403930664

Token 169: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.0002330992283532396
    2. 'int' → logprob: -8.375232696533203
    3. ']int' → logprob: -13.875232696533203
    4. '[' → logprob: -14.250232696533203
    5. '[in' → logprob: -15.125232696533203
    6. '[Int' → logprob: -16.000232696533203
    7. ' int' → logprob: -16.125232696533203
    8. '[i' → logprob: -16.375232696533203
    9. '[
' → logprob: -16.500232696533203
    10. ']' → logprob: -16.625232696533203

Token 170: ']]:
' (ID: 183340)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.003361769951879978
    2. ']' → logprob: -5.878361701965332
    3. ']:
' → logprob: -7.753361701965332
    4. ']):' → logprob: -10.128361701965332
    5. ']]' → logprob: -10.253361701965332
    6. ']:
' → logprob: -10.753361701965332
    7. ']]:
' → logprob: -11.503361701965332
    8. ']:

' → logprob: -11.628361701965332
    9. ']>' → logprob: -11.753361701965332
    10. ' ]' → logprob: -13.628361701965332

Token 171: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008131654933094978
    2. ':
' → logprob: -5.508131504058838
    3. ':' → logprob: -6.008131504058838
    4. '   ' → logprob: -7.008131504058838
    5. ' if' → logprob: -7.883131504058838
    6. '    ' → logprob: -9.133131980895996
    7. '):
' → logprob: -10.008131980895996
    8. ' :
' → logprob: -10.633131980895996
    9. '        
' → logprob: -10.758131980895996
    10. 'if' → logprob: -11.383131980895996

Token 172: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3507584035396576
    2. ' if' → logprob: -1.47575843334198
    3. 'if' → logprob: -2.8507583141326904
    4. 'def' → logprob: -4.7257585525512695
    5. ' def' → logprob: -7.9757585525512695
    6. '   ' → logprob: -8.85075855255127
    7. 'import' → logprob: -9.85075855255127
    8. '    ' → logprob: -12.22575855255127
    9. '      ' → logprob: -12.22575855255127
    10. '           ' → logprob: -12.97575855255127

Token 173: ' Define' (ID: 38966)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6185194253921509
    2. ' if' → logprob: -0.9935194253921509
    3. 'def' → logprob: -2.6185193061828613
    4. '       ' → logprob: -4.243519306182861
    5. 'import' → logprob: -6.368519306182861
    6. ' def' → logprob: -6.368519306182861
    7. ' ops' → logprob: -9.61851978302002
    8. 'ops' → logprob: -9.86851978302002
    9. '   ' → logprob: -10.24351978302002
    10. ' import' → logprob: -10.36851978302002

Token 174: ' operations' (ID: 12084)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11261515319347382
    2. '       ' → logprob: -2.6126151084899902
    3. ' def' → logprob: -4.36261510848999
    4. 'if' → logprob: -4.61261510848999
    5. '   ' → logprob: -5.36261510848999
    6. '{
' → logprob: -6.11261510848999
    7. 'lambda' → logprob: -6.61261510848999
    8. ' if' → logprob: -6.86261510848999
    9. 'import' → logprob: -8.487615585327148
    10. '           ' → logprob: -8.987615585327148

Token 175: ' according' (ID: 7065)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03869736194610596
    2. ':' → logprob: -3.7886972427368164
    3. ':
' → logprob: -4.538697242736816
    4. '   ' → logprob: -5.663697242736816
    5. ' if' → logprob: -8.163697242736816
    6. '        
' → logprob: -8.163697242736816
    7. '):
' → logprob: -8.663697242736816
    8. '    
' → logprob: -9.413697242736816
    9. '():
' → logprob: -10.038697242736816
    10. '           ' → logprob: -10.038697242736816

Token 176: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.10063783079385757
    2. 'to' → logprob: -2.350637912750244
    3. 'import' → logprob: -7.975637912750244
    4. '<|end|>' → logprob: -10.850637435913086
    5. ' import' → logprob: -11.100637435913086
    6. ' ' → logprob: -11.100637435913086
    7. 'def' → logprob: -11.600637435913086
    8. '   ' → logprob: -12.350637435913086
    9. '```' → logprob: -12.350637435913086
    10. '_to' → logprob: -12.475637435913086

Token 177: ' Kit' (ID: 23793)
  Prédit: '{
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{
' → logprob: -0.9505622982978821
    2. 'op' → logprob: -1.2005622386932373
    3. '{' → logprob: -1.5755622386932373
    4. ' op' → logprob: -2.7005622386932373
    5. ' {
' → logprob: -3.8255622386932373
    6. ' {' → logprob: -4.200562477111816
    7. 'lambda' → logprob: -6.950562477111816
    8. 'self' → logprob: -9.325562477111816
    9. '	op' → logprob: -9.325562477111816
    10. '{'' → logprob: -9.575562477111816

Token 178: 'am' (ID: 313)
  Prédit: 'ten'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ten' → logprob: -1.1874920129776
    2. 'chen' → logprob: -1.6874920129776
    3. 'z' → logprob: -2.3124918937683105
    4. 't' → logprob: -2.8124918937683105
    5. '```' → logprob: -2.8124918937683105
    6. 'ch' → logprob: -3.5624918937683105
    7. 'zen' → logprob: -3.9374918937683105
    8. 'er' → logprob: -3.9374918937683105
    9. 'ex' → logprob: -4.0624918937683105
    10. 'te' → logprob: -4.3124918937683105

Token 179: 'asa' (ID: 5643)
  Prédit: 'ura'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ura' → logprob: -0.008104220032691956
    2. 'a' → logprob: -5.63310432434082
    3. 'oto' → logprob: -6.13310432434082
    4. 'ur' → logprob: -6.88310432434082
    5. 'uro' → logprob: -8.63310432434082
    6. 'asa' → logprob: -8.88310432434082
    7. 'o' → logprob: -8.88310432434082
    8. 'u' → logprob: -8.88310432434082
    9. 'e' → logprob: -9.63310432434082
    10. 'asu' → logprob: -9.75810432434082

Token 180: '-k' (ID: 10897)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5795873999595642
    2. '       ' → logprob: -1.829587459564209
    3. ':
' → logprob: -2.329587459564209
    4. '   ' → logprob: -2.454587459564209
    5. '<|end|>' → logprob: -3.079587459564209
    6. '):
' → logprob: -5.204587459564209
    7. '<|end|>' → logprob: -5.204587459564209
    8. '():' → logprob: -5.329587459564209
    9. 'def' → logprob: -5.329587459564209
    10. '):' → logprob: -5.704587459564209

Token 181: 'un' (ID: 373)
  Prédit: 'awa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'awa' → logprob: -1.2971352338790894
    2. 'awai' → logprob: -1.9221352338790894
    3. 'w' → logprob: -2.297135353088379
    4. 'o' → logprob: -2.922135353088379
    5. 'u' → logprob: -3.047135353088379
    6. 'a' → logprob: -3.047135353088379
    7. '```' → logprob: -3.172135353088379
    8. 'i' → logprob: -3.672135353088379
    9. 'awaii' → logprob: -3.672135353088379
    10. 'method' → logprob: -3.672135353088379

Token 182: ''s' (ID: 885)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.27054649591445923
    2. ':
' → logprob: -1.6455464363098145
    3. '       ' → logprob: -3.6455464363098145
    4. '   ' → logprob: -4.6455464363098145
    5. 'def' → logprob: -6.0205464363098145
    6. ' :
' → logprob: -6.8955464363098145
    7. '
' → logprob: -7.0205464363098145
    8. '):
' → logprob: -7.1455464363098145
    9. ' :' → logprob: -7.7705464363098145
    10. '<|end|>' → logprob: -8.020546913146973

Token 183: ' rules' (ID: 9607)
  Prédit: ' rules'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rules' → logprob: -1.4111378192901611
    2. 'rules' → logprob: -1.5361378192901611
    3. 'spec' → logprob: -1.9111378192901611
    4. ' specification' → logprob: -2.661137819290161
    5. ' instructions' → logprob: -3.286137819290161
    6. 'instructions' → logprob: -3.411137819290161
    7. ' logic' → logprob: -3.661137819290161
    8. 'description' → logprob: -3.661137819290161
    9. ' description' → logprob: -3.911137819290161
    10. ' specifications' → logprob: -4.036137580871582

Token 184: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38177570700645447
    2. ':' → logprob: -1.5067757368087769
    3. ':
' → logprob: -2.6317756175994873
    4. '   ' → logprob: -5.506775856018066
    5. '        
' → logprob: -5.506775856018066
    6. '<|end|>' → logprob: -5.506775856018066
    7. '
' → logprob: -5.881775856018066
    8. ' if' → logprob: -6.006775856018066
    9. '):
' → logprob: -6.006775856018066
    10. '    
' → logprob: -7.006775856018066

Token 185: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07037162035703659
    2. ':' → logprob: -2.820371627807617
    3. '        
' → logprob: -5.945371627807617
    4. ':
' → logprob: -6.195371627807617
    5. '   ' → logprob: -6.320371627807617
    6. ' if' → logprob: -7.695371627807617
    7. '):
' → logprob: -8.320371627807617
    8. ',' → logprob: -8.945371627807617
    9. '    
' → logprob: -8.945371627807617
    10. '
' → logprob: -9.070371627807617

Token 186: ' def' (ID: 1056)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08530610054731369
    2. ' if' → logprob: -2.710306167602539
    3. 'def' (adapté à ' def') → logprob: -4.835306167602539
    4. 'if' → logprob: -5.210306167602539
    5. '
' → logprob: -7.335306167602539
    6. '        
' → logprob: -7.835306167602539
    7. ' def' → logprob: -7.960306167602539
    8. '   ' → logprob: -8.960306167602539
    9. '           ' → logprob: -9.460306167602539
    10. '```' → logprob: -10.210306167602539

Token 187: ' add' (ID: 1147)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -1.7705974578857422
    2. 'safe' → logprob: -1.7705974578857422
    3. ' safe' → logprob: -1.8955974578857422
    4. 'add' → logprob: -1.8955974578857422
    5. 'operation' → logprob: -2.145597457885742
    6. ' op' → logprob: -2.895597457885742
    7. ' add' → logprob: -2.895597457885742
    8. 'div' → logprob: -3.145597457885742
    9. 'func' → logprob: -3.770597457885742
    10. 'inner' → logprob: -4.520597457885742

Token 188: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.31403911113739014
    2. '(x' → logprob: -1.3140391111373901
    3. ' (' → logprob: -7.56403923034668
    4. '(' → logprob: -8.93903923034668
    5. '(i' → logprob: -9.18903923034668
    6. '(n' → logprob: -11.93903923034668
    7. '(lambda' → logprob: -12.56403923034668
    8. 'a' → logprob: -12.68903923034668
    9. '(u' → logprob: -13.31403923034668
    10. '(s' → logprob: -13.68903923034668

Token 189: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006450793240219355
    2. ',b' → logprob: -5.256450653076172
    3. ' ,' → logprob: -7.131450653076172
    4. ':' → logprob: -8.131450653076172
    5. ',a' → logprob: -10.006450653076172
    6. ':int' → logprob: -10.006450653076172
    7. ',int' → logprob: -11.881450653076172
    8. ',e' → logprob: -12.506450653076172
    9. ',n' → logprob: -12.631450653076172
    10. ',d' → logprob: -12.756450653076172

Token 190: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.014615310356020927
    2. 'b' → logprob: -4.639615535736084
    3. ' int' → logprob: -5.389615535736084
    4. ',' → logprob: -8.764615058898926
    5. ' b' → logprob: -9.264615058898926
    6. 'a' → logprob: -10.764615058898926
    7. '   ' → logprob: -12.514615058898926
    8. ':int' → logprob: -12.639615058898926
    9. ',int' → logprob: -13.264615058898926
    10. ' ' → logprob: -14.014615058898926

Token 191: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000926826149225235
    2. ',b' → logprob: -7.375926971435547
    3. ' ,' → logprob: -8.125926971435547
    4. ',a' → logprob: -12.875926971435547
    5. ',int' → logprob: -13.750926971435547
    6. ',d' → logprob: -15.875926971435547
    7. ',
' → logprob: -16.500926971435547
    8. ',f' → logprob: -16.500926971435547
    9. ',n' → logprob: -16.750926971435547
    10. ',e' → logprob: -17.000926971435547

Token 192: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.07889474183320999
    2. ' b' → logprob: -2.578894853591919
    3. '   ' → logprob: -12.82889461517334
    4. ' ' → logprob: -13.82889461517334
    5. '    ' → logprob: -15.07889461517334
    6. '	b' → logprob: -15.57889461517334
    7. '  ' → logprob: -15.82889461517334
    8. 'a' → logprob: -15.82889461517334
    9. ')b' → logprob: -16.453895568847656
    10. '_b' → logprob: -16.891395568847656

Token 193: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1746896207332611
    2. '):' → logprob: -1.9246896505355835
    3. ':' → logprob: -4.674689769744873
    4. ',' → logprob: -5.549689769744873
    5. '):
' → logprob: -7.299689769744873
    6. ')->' → logprob: -8.049689292907715
    7. '   ' → logprob: -10.299689292907715
    8. ':int' → logprob: -10.549689292907715
    9. ' )' → logprob: -10.674689292907715
    10. '),' → logprob: -10.799689292907715

Token 194: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.03456036373972893
    2. ' int' → logprob: -3.409560441970825
    3. 'Optional' → logprob: -7.409560203552246
    4. ')' → logprob: -8.409560203552246
    5. ' Optional' → logprob: -9.534560203552246
    6. ' )' → logprob: -12.409560203552246
    7. '[int' → logprob: -13.159560203552246
    8. ':int' → logprob: -13.284560203552246
    9. ' ' → logprob: -13.409560203552246
    10. '   ' → logprob: -13.534560203552246

Token 195: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001203923486173153
    2. '):' → logprob: -6.751204013824463
    3. ' )' → logprob: -11.251203536987305
    4. '):
' → logprob: -11.501203536987305
    5. ')->' → logprob: -12.251203536987305
    6. ':' → logprob: -13.126203536987305
    7. '):
' → logprob: -13.751203536987305
    8. '   ' → logprob: -14.251203536987305
    9. '')' → logprob: -15.813703536987305
    10. ')
' → logprob: -16.001203536987305

Token 196: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4140627980232239
    2. ' ->' → logprob: -1.789062738418579
    3. '->' → logprob: -1.789062738418579
    4. ')' → logprob: -5.414062976837158
    5. ')->' → logprob: -8.9140625
    6. '):' → logprob: -9.1640625
    7. ' :' → logprob: -9.7890625
    8. '-' → logprob: -10.5390625
    9. ':return' → logprob: -11.6640625
    10. ':
' → logprob: -12.4140625

Token 197: ' Optional' (ID: 19351)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.7847426533699036
    2. 'Optional' → logprob: -0.9097426533699036
    3. ' Optional' → logprob: -2.534742593765259
    4. ' int' → logprob: -2.784742593765259
    5. 'Union' → logprob: -10.53474235534668
    6. '(Optional' → logprob: -10.53474235534668
    7. '   ' → logprob: -10.78474235534668
    8. ' Union' → logprob: -11.90974235534668
    9. '[int' → logprob: -12.15974235534668
    10. '(int' → logprob: -12.53474235534668

Token 198: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -9.014684110297821e-06
    2. '[' → logprob: -12.250008583068848
    3. 'int' → logprob: -12.625008583068848
    4. '[
' → logprob: -15.000008583068848
    5. ' [' → logprob: -15.250008583068848
    6. '[in' → logprob: -16.000009536743164
    7. '[Int' → logprob: -16.750009536743164
    8. '[i' → logprob: -17.125009536743164
    9. '<int' → logprob: -17.500009536743164
    10. ':int' → logprob: -17.875009536743164

Token 199: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.37433117628097534
    2. ':' → logprob: -1.2493312358856201
    3. '):
' → logprob: -3.87433123588562
    4. ':
' → logprob: -5.499330997467041
    5. ']:' → logprob: -7.874330997467041
    6. ')' → logprob: -9.1243314743042
    7. '):
' → logprob: -9.1243314743042
    8. '   ' → logprob: -10.8743314743042
    9. ':return' → logprob: -10.9993314743042
    10. ':
' → logprob: -11.2493314743042

Token 200: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.29261499643325806
    2. ':' → logprob: -1.5426149368286133
    3. '       ' → logprob: -3.2926149368286133
    4. ':
' → logprob: -7.292614936828613
    5. ',' → logprob: -7.792614936828613
    6. ' return' → logprob: -8.292614936828613
    7. ':return' → logprob: -8.667614936828613
    8. '         ' → logprob: -8.792614936828613
    9. '        ' → logprob: -8.792614936828613
    10. '               ' → logprob: -8.917614936828613

Token 201: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.03525708243250847
    2. ' return' → logprob: -4.035256862640381
    3. 'if' → logprob: -4.535256862640381
    4. '       ' → logprob: -5.285256862640381
    5. ' if' → logprob: -7.410256862640381
    6. '           ' → logprob: -7.660256862640381
    7. 'result' → logprob: -9.785257339477539
    8. '   ' → logprob: -11.285257339477539
    9. 'try' → logprob: -11.410257339477539
    10. '               ' → logprob: -12.535257339477539

Token 202: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.05491681396961212
    2. ' a' → logprob: -2.9299168586730957
    3. 'None' → logprob: -11.429916381835938
    4. ' None' → logprob: -11.429916381835938
    5. '(a' → logprob: -12.179916381835938
    6. ' (' → logprob: -12.679916381835938
    7. ' ' → logprob: -13.054916381835938
    8. '   ' → logprob: -14.429916381835938
    9. '	a' → logprob: -14.617416381835938
    10. '(' → logprob: -14.929916381835938

Token 203: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5803138613700867
    2. '+' → logprob: -0.8303138613700867
    3. '+b' → logprob: -5.455313682556152
    4. ' ' → logprob: -10.705313682556152
    5. ' if' → logprob: -11.080313682556152
    6. '+
' → logprob: -11.080313682556152
    7. ' ' → logprob: -11.955313682556152
    8. ' +
' → logprob: -12.205313682556152
    9. '+B' → logprob: -12.330313682556152
    10. '-' → logprob: -12.580313682556152

Token 204: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.2519293427467346
    2. 'b' → logprob: -1.5019292831420898
    3. ' ' → logprob: -15.37692928314209
    4. '	b' → logprob: -16.876930236816406
    5. ' б' → logprob: -18.001930236816406
    6. ' ' → logprob: -18.251930236816406
    7. ')b' → logprob: -19.251930236816406
    8. '_b' → logprob: -20.251930236816406
    9. ' 
' → logprob: -20.251930236816406
    10. '<|end|>' → logprob: -20.814430236816406

Token 205: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1774638295173645
    2. '       ' → logprob: -1.9274637699127197
    3. '        
' → logprob: -4.802464008331299
    4. '\n' → logprob: -5.677464008331299
    5. '<|end|>' → logprob: -6.552464008331299
    6. '
' → logprob: -6.677464008331299
    7. '' → logprob: -6.927464008331299
    8. '    
' → logprob: -7.927464008331299
    9. '

' → logprob: -8.05246353149414
    10. '
        
' → logprob: -9.05246353149414

Token 206: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2065795511007309
    2. '       ' → logprob: -1.706579566001892
    3. '        
' → logprob: -5.456579685211182
    4. '    
' → logprob: -7.706579685211182
    5. '

' → logprob: -8.956579208374023
    6. '' → logprob: -8.956579208374023
    7. '
' → logprob: -9.956579208374023
    8. '
        
' → logprob: -10.581579208374023
    9. '   ' → logprob: -10.706579208374023
    10. '\n' → logprob: -10.956579208374023

Token 207: ' def' (ID: 1056)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3260200321674347
    2. '
' → logprob: -1.5760200023651123
    3. '        
' → logprob: -3.2010200023651123
    4. 'def' (adapté à ' def') → logprob: -4.076020240783691
    5. '    
' → logprob: -4.451020240783691
    6. '   ' → logprob: -7.701020240783691
    7. '

' → logprob: -7.701020240783691
    8. '  
' → logprob: -8.826020240783691
    9. '       
' → logprob: -8.951020240783691
    10. '        

' → logprob: -9.076020240783691

Token 208: ' sub' (ID: 1543)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.3194137215614319
    2. 'subtract' → logprob: -1.694413661956787
    3. 'mul' → logprob: -2.569413661956787
    4. 'multiply' → logprob: -5.319413661956787
    5. ' sub' → logprob: -5.569413661956787
    6. ' subtract' → logprob: -6.694413661956787
    7. '_sub' → logprob: -7.194413661956787
    8. ' mul' → logprob: -7.319413661956787
    9. 'mod' → logprob: -7.569413661956787
    10. 'mult' → logprob: -8.819414138793945

Token 209: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.02904311567544937
    2. '(' → logprob: -3.654043197631836
    3. ' (' → logprob: -5.904043197631836
    4. '(
' → logprob: -12.404043197631836
    5. 'a' → logprob: -13.279043197631836
    6. ' ' → logprob: -13.404043197631836
    7. ' a' → logprob: -13.654043197631836
    8. '<|end|>' → logprob: -14.154043197631836
    9. '(A' → logprob: -14.529043197631836
    10. ' (
' → logprob: -15.529043197631836

Token 210: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00549580343067646
    2. ',' → logprob: -5.380496025085449
    3. ' :' → logprob: -7.505496025085449
    4. ':int' → logprob: -8.75549602508545
    5. 'a' → logprob: -9.00549602508545
    6. '):' → logprob: -11.50549602508545
    7. ',a' → logprob: -11.50549602508545
    8. ')' → logprob: -11.75549602508545
    9. ' ,' → logprob: -12.25549602508545
    10. ':a' → logprob: -12.63049602508545

Token 211: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.06197429448366165
    2. ' int' → logprob: -2.811974287033081
    3. ':int' → logprob: -12.31197452545166
    4. '[int' → logprob: -13.93697452545166
    5. '(int' → logprob: -14.43697452545166
    6. '<int' → logprob: -15.18697452545166
    7. ' ' → logprob: -15.56197452545166
    8. '=int' → logprob: -16.061973571777344
    9. '<|end|>' → logprob: -16.936973571777344
    10. 'a' → logprob: -17.186973571777344

Token 212: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007769925869069993
    2. ' ,' → logprob: -7.375776767730713
    3. ',b' → logprob: -8.875777244567871
    4. ',
' → logprob: -12.250777244567871
    5. ',int' → logprob: -12.500777244567871
    6. ',a' → logprob: -13.625777244567871
    7. 'a' → logprob: -15.250777244567871
    8. 'int' → logprob: -15.625777244567871
    9. 'b' → logprob: -16.500776290893555
    10. ')' → logprob: -16.500776290893555

Token 213: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.06197440251708031
    2. ' b' → logprob: -2.811974287033081
    3. 'int' → logprob: -11.93697452545166
    4. ' int' → logprob: -15.56197452545166
    5. ' ' → logprob: -17.186973571777344
    6. '	b' → logprob: -17.936973571777344
    7. ')b' → logprob: -18.061973571777344
    8. ' ' → logprob: -18.811973571777344
    9. ')' → logprob: -18.936973571777344
    10. '_b' → logprob: -18.936973571777344

Token 214: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00013274075172375888
    2. ':int' → logprob: -9.62513256072998
    3. ')' → logprob: -10.25013256072998
    4. '):' → logprob: -10.50013256072998
    5. ' :' → logprob: -13.25013256072998
    6. 'a' → logprob: -14.37513256072998
    7. ',' → logprob: -15.37513256072998
    8. 'int' → logprob: -15.50013256072998
    9. ':
' → logprob: -15.62513256072998
    10. '   ' → logprob: -15.87513256072998

Token 215: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.005243833642452955
    2. ' int' → logprob: -5.25524377822876
    3. '[int' → logprob: -12.380244255065918
    4. 'Optional' → logprob: -12.755244255065918
    5. '(int' → logprob: -14.380244255065918
    6. ')' → logprob: -14.880244255065918
    7. ' ' → logprob: -14.880244255065918
    8. '<int' → logprob: -15.130244255065918
    9. ']int' → logprob: -15.380244255065918
    10. ':int' → logprob: -15.380244255065918

Token 216: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.45848218582978e-06
    2. ' )' → logprob: -13.25000286102295
    3. '   ' → logprob: -15.50000286102295
    4. ' ' → logprob: -16.250001907348633
    5. ')->' → logprob: -16.250001907348633
    6. '`)' → logprob: -16.500001907348633
    7. ':' → logprob: -17.250001907348633
    8. ')
' → logprob: -17.375001907348633
    9. '):
' → logprob: -17.375001907348633
    10. '")' → logprob: -17.500001907348633

Token 217: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3750847578048706
    2. '->' → logprob: -1.8750847578048706
    3. ' ->' → logprob: -1.8750847578048706
    4. ':' → logprob: -5.50008487701416
    5. '-' → logprob: -7.37508487701416
    6. ' )' → logprob: -7.75008487701416
    7. ' ' → logprob: -7.87508487701416
    8. '>' → logprob: -8.00008487701416
    9. ')->' → logprob: -8.75008487701416
    10. ' -' → logprob: -10.00008487701416

Token 218: ' Optional' (ID: 19351)
  Prédit: 'Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Optional' → logprob: -0.007288689259439707
    2. ' Optional' → logprob: -5.007288455963135
    3. 'int' → logprob: -7.632288455963135
    4. '(Optional' → logprob: -9.757288932800293
    5. ' int' → logprob: -11.007288932800293
    6. 'None' → logprob: -12.007288932800293
    7. '	Optional' → logprob: -13.382288932800293
    8. '_optional' → logprob: -13.382288932800293
    9. ' ' → logprob: -13.757288932800293
    10. 'b' → logprob: -14.132288932800293

Token 219: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.0018507008207961917
    2. 'int' → logprob: -6.876850605010986
    3. '[' → logprob: -7.751850605010986
    4. '<int' → logprob: -8.501851081848145
    5. '(int' → logprob: -9.626851081848145
    6. '_int' → logprob: -10.251851081848145
    7. ':int' → logprob: -10.501851081848145
    8. '[a' → logprob: -10.501851081848145
    9. '[Int' → logprob: -11.001851081848145
    10. ',int' → logprob: -12.501851081848145

Token 220: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05815725028514862
    2. ':
' → logprob: -2.933157205581665
    3. '):' → logprob: -6.058157444000244
    4. '):
' → logprob: -7.058157444000244
    5. ')' → logprob: -10.683156967163086
    6. ':
' → logprob: -11.308156967163086
    7. ':return' → logprob: -11.558156967163086
    8. ':

' → logprob: -12.183156967163086
    9. ' :' → logprob: -12.308156967163086
    10. '       ' → logprob: -12.308156967163086

Token 221: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.034528590738773346
    2. '       ' → logprob: -4.034528732299805
    3. ' return' → logprob: -4.409528732299805
    4. 'return' → logprob: -6.284528732299805
    5. ' ' → logprob: -6.659528732299805
    6. '   ' → logprob: -7.659528732299805
    7. ' if' → logprob: -9.159528732299805
    8. '<|end|>' → logprob: -9.534528732299805
    9. '               ' → logprob: -9.909528732299805
    10. '        ' → logprob: -10.034528732299805

Token 222: ' return' (ID: 622)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.046675555408000946
    2. 'return' (adapté à ' return') → logprob: -3.421675443649292
    3. ' a' → logprob: -4.546675682067871
    4. ' return' → logprob: -6.171675682067871
    5. '   ' → logprob: -9.421675682067871
    6. 'None' → logprob: -9.671675682067871
    7. 'result' → logprob: -10.421675682067871
    8. '       ' → logprob: -11.046675682067871
    9. ' None' → logprob: -11.171675682067871
    10. '           ' → logprob: -11.296675682067871

Token 223: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0036739481147378683
    2. ' a' → logprob: -5.628674030303955
    3. 'None' → logprob: -9.628673553466797
    4. ' None' → logprob: -12.878673553466797
    5. '(a' → logprob: -13.378673553466797
    6. ' ' → logprob: -13.503673553466797
    7. '   ' → logprob: -14.378673553466797
    8. 'max' → logprob: -14.503673553466797
    9. '	a' → logprob: -14.503673553466797
    10. 'abs' → logprob: -16.066173553466797

Token 224: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.043004341423511505
    2. '-' → logprob: -3.168004274368286
    3. ' ' → logprob: -13.293004035949707
    4. '-b' → logprob: -13.418004035949707
    5. ' ' → logprob: -13.918004035949707
    6. ' -
' → logprob: -14.418004035949707
    7. '+' → logprob: -15.793004035949707
    8. ' if' → logprob: -16.918004989624023
    9. ' -

' → logprob: -17.293004989624023
    10. '_' → logprob: -17.293004989624023

Token 225: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.12692810595035553
    2. 'b' → logprob: -2.1269280910491943
    3. ' ' → logprob: -17.126928329467773
    4. ' ' → logprob: -18.251928329467773
    5. 's' → logprob: -19.626928329467773
    6. '	b' → logprob: -20.376928329467773
    7. ' б' → logprob: -20.876928329467773
    8. '_b' → logprob: -21.251928329467773
    9. ')b' → logprob: -21.626928329467773
    10. '>b' → logprob: -22.626928329467773

Token 226: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005974896252155304
    2. '
' → logprob: -5.755974769592285
    3. '        
' → logprob: -6.255974769592285
    4. '    
' → logprob: -7.505974769592285
    5. 'return' → logprob: -9.505974769592285
    6. '  
' → logprob: -9.630974769592285
    7. '   ' → logprob: -10.130974769592285
    8. '' → logprob: -10.380974769592285
    9. '\' → logprob: -11.255974769592285
    10. ' 
' → logprob: -11.255974769592285

Token 227: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.372916686814278e-05
    2. '
' → logprob: -10.5000638961792
    3. '        
' → logprob: -10.6250638961792
    4. 'def' → logprob: -12.0000638961792
    5. 'return' → logprob: -13.2500638961792
    6. '           ' → logprob: -13.5000638961792
    7. '    
' → logprob: -13.8750638961792
    8. '   ' → logprob: -14.3750638961792
    9. '```' → logprob: -15.1250638961792
    10. '            
' → logprob: -15.5000638961792

Token 228: ' def' (ID: 1056)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14861798286437988
    2. 'def' (adapté à ' def') → logprob: -2.02361798286438
    3. '
' → logprob: -5.523617744445801
    4. 'if' → logprob: -7.398617744445801
    5. '        
' → logprob: -7.648617744445801
    6. '   ' → logprob: -7.898617744445801
    7. 'return' → logprob: -9.1486177444458
    8. '    
' → logprob: -9.3986177444458
    9. ' def' → logprob: -10.2736177444458
    10. '           ' → logprob: -10.3986177444458

Token 229: ' mul' (ID: 9975)
  Prédit: 'mul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mul' → logprob: -0.006795655936002731
    2. ' mul' → logprob: -5.006795883178711
    3. 'xor' → logprob: -11.006795883178711
    4. 'm' → logprob: -11.381795883178711
    5. 'pow' → logprob: -11.506795883178711
    6. 'mult' → logprob: -11.881795883178711
    7. 'max' → logprob: -12.256795883178711
    8. 'div' → logprob: -12.631795883178711
    9. '_mul' → logprob: -12.631795883178711
    10. 'mu' → logprob: -12.881795883178711

Token 230: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00026968008023686707
    2. '(' → logprob: -8.250269889831543
    3. ' (' → logprob: -12.000269889831543
    4. '(
' → logprob: -13.625269889831543
    5. '(A' → logprob: -14.000269889831543
    6. 'a' → logprob: -16.000268936157227
    7. 'def' → logprob: -16.625268936157227
    8. ' a' → logprob: -17.250268936157227
    9. ' ' → logprob: -17.625268936157227
    10. '   ' → logprob: -18.625268936157227

Token 231: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001321073155850172
    2. ' ,' → logprob: -6.876320838928223
    3. ',a' → logprob: -8.501320838928223
    4. ':' → logprob: -10.001320838928223
    5. '   ' → logprob: -11.126320838928223
    6. ',b' → logprob: -12.126320838928223
    7. 'a' → logprob: -12.251320838928223
    8. ')' → logprob: -12.626320838928223
    9. ' a' → logprob: -13.126320838928223
    10. '           ' → logprob: -13.251320838928223

Token 232: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.25195103883743286
    2. ' int' → logprob: -1.501950979232788
    3. ' ' → logprob: -11.876951217651367
    4. ' b' → logprob: -12.501951217651367
    5. 'b' → logprob: -12.751951217651367
    6. ':int' → logprob: -12.876951217651367
    7. ',int' → logprob: -13.626951217651367
    8. ',' → logprob: -13.626951217651367
    9. '(int' → logprob: -14.251951217651367
    10. '[int' → logprob: -14.501951217651367

Token 233: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006662101950496435
    2. ' ,' → logprob: -7.62566614151001
    3. ',a' → logprob: -9.750666618347168
    4. '(a' → logprob: -10.375666618347168
    5. ',b' → logprob: -11.000666618347168
    6. ')' → logprob: -11.125666618347168
    7. '(' → logprob: -11.375666618347168
    8. ',
' → logprob: -11.875666618347168
    9. ' a' → logprob: -12.000666618347168
    10. '           ' → logprob: -12.125666618347168

Token 234: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0619727298617363
    2. ' b' → logprob: -2.8119726181030273
    3. 'int' → logprob: -12.811972618103027
    4. 'def' → logprob: -14.061972618103027
    5. '    ' → logprob: -14.686972618103027
    6. '   ' → logprob: -14.686972618103027
    7. '       ' → logprob: -15.436972618103027
    8. ' ' → logprob: -15.686972618103027
    9. '  ' → logprob: -16.561973571777344
    10. '	b' → logprob: -16.561973571777344

Token 235: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -6.098748053773306e-05
    2. ':int' → logprob: -10.25006103515625
    3. ')' → logprob: -11.37506103515625
    4. ']' → logprob: -11.50006103515625
    5. '):' → logprob: -14.12506103515625
    6. 'int' → logprob: -14.25006103515625
    7. '   ' → logprob: -14.37506103515625
    8. ' :' → logprob: -14.37506103515625
    9. 'a' → logprob: -14.62506103515625
    10. ']:' → logprob: -15.37506103515625

Token 236: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.06200186535716057
    2. ' int' → logprob: -2.812001943588257
    3. 'b' → logprob: -10.437002182006836
    4. ' b' → logprob: -12.687002182006836
    5. '[int' → logprob: -13.937002182006836
    6. ':int' → logprob: -15.437002182006836
    7. ' ' → logprob: -15.812002182006836
    8. '(int' → logprob: -15.937002182006836
    9. '```' → logprob: -16.062002182006836
    10. '<int' → logprob: -16.687002182006836

Token 237: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.976922744186595e-05
    2. ':' → logprob: -11.125040054321289
    3. '   ' → logprob: -11.625040054321289
    4. ' )' → logprob: -11.625040054321289
    5. ' ' → logprob: -13.250040054321289
    6. ')->' → logprob: -13.375040054321289
    7. '       ' → logprob: -14.375040054321289
    8. ')
' → logprob: -14.375040054321289
    9. '):' → logprob: -14.375040054321289
    10. '):
' → logprob: -14.625040054321289

Token 238: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.38346067070961
    2. ':' → logprob: -1.2584606409072876
    3. '->' → logprob: -3.883460760116577
    4. ')' → logprob: -4.383460521697998
    5. ' ' → logprob: -7.633460521697998
    6. ' *' → logprob: -8.258460998535156
    7. '>' → logprob: -8.883460998535156
    8. ' :' → logprob: -8.883460998535156
    9. '*' → logprob: -9.133460998535156
    10. '-' → logprob: -10.258460998535156

Token 239: ' Optional' (ID: 19351)
  Prédit: 'Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Optional' → logprob: -0.40006396174430847
    2. ' Optional' → logprob: -1.4000639915466309
    3. ' int' → logprob: -3.400063991546631
    4. 'int' → logprob: -3.525063991546631
    5. ' a' → logprob: -4.525063991546631
    6. 'a' → logprob: -5.275063991546631
    7. 'None' → logprob: -6.150063991546631
    8. ' None' → logprob: -6.650063991546631
    9. '(Optional' → logprob: -9.275063514709473
    10. ' (' → logprob: -9.275063514709473

Token 240: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -9.372294698550832e-06
    2. 'int' → logprob: -11.625009536743164
    3. '[Int' → logprob: -16.125009536743164
    4. '<int' → logprob: -16.625009536743164
    5. '(int' → logprob: -16.750009536743164
    6. '[' → logprob: -16.875009536743164
    7. '[a' → logprob: -19.000009536743164
    8. '[
' → logprob: -19.000009536743164
    9. '```' → logprob: -19.375009536743164
    10. '   ' → logprob: -19.625009536743164

Token 241: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.72926926612854
    2. ']:' → logprob: -0.85426926612854
    3. ':' → logprob: -2.72926926612854
    4. '):
' → logprob: -4.354269027709961
    5. ':
' → logprob: -4.854269027709961
    6. '):' → logprob: -5.229269027709961
    7. ']' → logprob: -7.729269027709961
    8. ']:
' → logprob: -8.604269027709961
    9. '       ' → logprob: -10.354269027709961
    10. '   ' → logprob: -10.604269027709961

Token 242: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06698161363601685
    2. '       ' → logprob: -3.566981554031372
    3. 'return' → logprob: -3.566981554031372
    4. 'if' → logprob: -5.566981792449951
    5. ' return' → logprob: -5.566981792449951
    6. ' if' → logprob: -7.441981792449951
    7. '   ' → logprob: -9.816981315612793
    8. '               ' → logprob: -11.441981315612793
    9. '          ' → logprob: -12.816981315612793
    10. '```' → logprob: -13.691981315612793

Token 243: ' return' (ID: 622)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.44327834248542786
    2. 'return' (adapté à ' return') → logprob: -1.0682783126831055
    3. 'if' → logprob: -4.3182783126831055
    4. ' return' → logprob: -7.4432783126831055
    5. 'None' → logprob: -8.568278312683105
    6. ' a' → logprob: -8.943278312683105
    7. '   ' → logprob: -9.193278312683105
    8. '0' → logprob: -9.693278312683105
    9. 'ret' → logprob: -11.193278312683105
    10. 'try' → logprob: -11.943278312683105

Token 244: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0032241756562143564
    2. ' a' → logprob: -5.7532243728637695
    3. 'None' → logprob: -10.25322437286377
    4. '(a' → logprob: -12.12822437286377
    5. ' None' → logprob: -12.50322437286377
    6. ' (' → logprob: -14.37822437286377
    7. '   ' → logprob: -14.62822437286377
    8. '(' → logprob: -15.25322437286377
    9. '0' → logprob: -15.50322437286377
    10. ' ' → logprob: -15.87822437286377

Token 245: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.4743470549583435
    2. '*' → logprob: -0.9743470549583435
    3. '*b' → logprob: -9.099347114562988
    4. ' if' → logprob: -9.349347114562988
    5. ' ' → logprob: -9.849347114562988
    6. 'if' → logprob: -12.099347114562988
    7. '+' → logprob: -12.599347114562988
    8. '*a' → logprob: -13.536847114562988
    9. '_' → logprob: -14.224347114562988
    10. 'a' → logprob: -14.411847114562988

Token 246: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6931471824645996
    2. ' b' → logprob: -0.6931471824645996
    3. ' ' → logprob: -16.568147659301758
    4. '	b' → logprob: -18.068147659301758
    5. ' б' → logprob: -19.943147659301758
    6. '_b' → logprob: -19.943147659301758
    7. '(b' → logprob: -20.068147659301758
    8. ' ' → logprob: -20.193147659301758
    9. ')b' → logprob: -20.693147659301758
    10. '*b' → logprob: -20.818147659301758

Token 247: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.9795445849886164e-05
    2. '        
' → logprob: -11.000060081481934
    3. '<|end|>' → logprob: -11.250060081481934
    4. '	' → logprob: -11.375060081481934
    5. '           ' → logprob: -12.500060081481934
    6. 'return' → logprob: -12.625060081481934
    7. '      ' → logprob: -13.125060081481934
    8. '   ' → logprob: -13.250060081481934
    9. ',' → logprob: -13.250060081481934
    10. '
' → logprob: -13.375060081481934

Token 248: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00047106825513765216
    2. 'return' → logprob: -8.250471115112305
    3. '        
' → logprob: -8.875471115112305
    4. 'if' → logprob: -10.625471115112305
    5. 'def' → logprob: -11.000471115112305
    6. '
' → logprob: -11.875471115112305
    7. '           ' → logprob: -12.500471115112305
    8. ' return' → logprob: -12.625471115112305
    9. '   ' → logprob: -12.750471115112305
    10. '    
' → logprob: -13.125471115112305

Token 249: ' def' (ID: 1056)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07017084211111069
    2. 'if' → logprob: -3.6951708793640137
    3. 'def' (adapté à ' def') → logprob: -3.8201708793640137
    4. 'return' → logprob: -4.070170879364014
    5. '        
' → logprob: -5.945170879364014
    6. '   ' → logprob: -8.070170402526855
    7. '
' → logprob: -8.570170402526855
    8. '```' → logprob: -8.820170402526855
    9. '    
' → logprob: -9.070170402526855
    10. '#' → logprob: -9.070170402526855

Token 250: ' div' (ID: 4223)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.01976986601948738
    2. 'pow' → logprob: -5.019769668579102
    3. 'tr' → logprob: -5.269769668579102
    4. 'flo' → logprob: -5.644769668579102
    5. 'None' → logprob: -7.269769668579102
    6. 'mod' → logprob: -7.269769668579102
    7. '_div' → logprob: -7.894769668579102
    8. ' div' → logprob: -8.019769668579102
    9. 'id' → logprob: -8.019769668579102
    10. 'safe' → logprob: -8.394769668579102

Token 251: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0006283254479058087
    2. '(' → logprob: -7.375628471374512
    3. ' (' → logprob: -13.375628471374512
    4. '(self' → logprob: -16.375627517700195
    5. '(A' → logprob: -16.875627517700195
    6. 'def' → logprob: -17.625627517700195
    7. 'a' → logprob: -18.250627517700195
    8. '(
' → logprob: -18.375627517700195
    9. ' ' → logprob: -19.625627517700195
    10. '   ' → logprob: -20.500627517700195

Token 252: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007557853823527694
    2. 'a' → logprob: -7.625755786895752
    3. ',' → logprob: -9.750755310058594
    4. '(a' → logprob: -9.750755310058594
    5. ')' → logprob: -10.250755310058594
    6. 'def' → logprob: -10.500755310058594
    7. ' :' → logprob: -10.625755310058594
    8. ' a' → logprob: -11.000755310058594
    9. 'int' → logprob: -11.500755310058594
    10. ':int' → logprob: -12.125755310058594

Token 253: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.023276809602975845
    2. ' int' → logprob: -3.7732768058776855
    3. ' ' → logprob: -11.898277282714844
    4. '(int' → logprob: -12.148277282714844
    5. ')' → logprob: -12.898277282714844
    6. '  ' → logprob: -13.148277282714844
    7. '   ' → logprob: -13.148277282714844
    8. '```' → logprob: -13.398277282714844
    9. '[int' → logprob: -13.398277282714844
    10. 'Optional' → logprob: -13.648277282714844

Token 254: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003009041247423738
    2. ',b' → logprob: -8.625301361083984
    3. ' ,' → logprob: -9.125301361083984
    4. ',int' → logprob: -12.875301361083984
    5. ' b' → logprob: -13.500301361083984
    6. ',
' → logprob: -13.625301361083984
    7. '           ' → logprob: -13.625301361083984
    8. '       ' → logprob: -13.625301361083984
    9. 'if' → logprob: -13.875301361083984
    10. 'b' → logprob: -14.000301361083984

Token 255: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.04858941584825516
    2. ' b' → logprob: -3.0485894680023193
    3. '   ' → logprob: -14.548589706420898
    4. '       ' → logprob: -14.798589706420898
    5. ' ' → logprob: -15.048589706420898
    6. 'int' → logprob: -15.173589706420898
    7. '    ' → logprob: -15.798589706420898
    8. 'def' → logprob: -15.923589706420898
    9. '        ' → logprob: -16.9235897064209
    10. '	b' → logprob: -16.9235897064209

Token 256: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -7.255023956531659e-05
    2. ')' → logprob: -10.125072479248047
    3. ':int' → logprob: -10.375072479248047
    4. '):' → logprob: -14.500072479248047
    5. ' :' → logprob: -15.125072479248047
    6. 'int' → logprob: -15.750072479248047
    7. '   ' → logprob: -16.625072479248047
    8. ':
' → logprob: -16.750072479248047
    9. '[int' → logprob: -17.000072479248047
    10. ',' → logprob: -17.250072479248047

Token 257: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00325768836773932
    2. ' int' → logprob: -5.878257751464844
    3. '0' → logprob: -7.753257751464844
    4. ' ' → logprob: -11.878257751464844
    5. '   ' → logprob: -12.253257751464844
    6. 'b' → logprob: -13.253257751464844
    7. '(int' → logprob: -13.378257751464844
    8. '[int' → logprob: -13.503257751464844
    9. ')' → logprob: -14.128257751464844
    10. '1' → logprob: -14.628257751464844

Token 258: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.7848862373502925e-05
    2. ':' → logprob: -10.875027656555176
    3. ' )' → logprob: -12.375027656555176
    4. '   ' → logprob: -12.625027656555176
    5. 'int' → logprob: -15.125027656555176
    6. 'if' → logprob: -15.375027656555176
    7. ')
' → logprob: -15.625027656555176
    8. ')->' → logprob: -15.750027656555176
    9. '):
' → logprob: -16.375028610229492
    10. '       ' → logprob: -16.625028610229492

Token 259: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.6053831577301025
    2. ' ->' → logprob: -0.8553831577301025
    3. ':' → logprob: -3.9803831577301025
    4. ')' → logprob: -4.605382919311523
    5. '           ' → logprob: -9.355382919311523
    6. ' if' → logprob: -9.980382919311523
    7. '>' → logprob: -9.980382919311523
    8. 'if' → logprob: -9.980382919311523
    9. '   ' → logprob: -10.355382919311523
    10. '       ' → logprob: -10.605382919311523

Token 260: ' Optional' (ID: 19351)
  Prédit: 'Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Optional' → logprob: -0.19198401272296906
    2. ' Optional' → logprob: -2.441983938217163
    3. 'int' → logprob: -2.691983938217163
    4. ' int' → logprob: -4.191984176635742
    5. 'None' → logprob: -5.816984176635742
    6. ' None' → logprob: -7.441984176635742
    7. '(int' → logprob: -8.066984176635742
    8. ' (' → logprob: -8.191984176635742
    9. '(Optional' → logprob: -8.316984176635742
    10. '0' → logprob: -8.816984176635742

Token 261: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -1.0280383548888494e-06
    2. 'int' → logprob: -13.875000953674316
    3. '[' → logprob: -17.375001907348633
    4. '[Int' → logprob: -18.375001907348633
    5. '(int' → logprob: -19.000001907348633
    6. '[
' → logprob: -19.250001907348633
    7. '<int' → logprob: -20.875001907348633
    8. ':int' → logprob: -20.875001907348633
    9. '[str' → logprob: -21.000001907348633
    10. '[in' → logprob: -21.250001907348633

Token 262: ']:
' (ID: 22152)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.03875860571861267
    2. ':' → logprob: -3.4137585163116455
    3. ']:
' → logprob: -5.538758754730225
    4. '):
' → logprob: -7.163758754730225
    5. ']:' → logprob: -8.913758277893066
    6. 'if' → logprob: -9.038758277893066
    7. '   ' → logprob: -10.538758277893066
    8. '           ' → logprob: -11.163758277893066
    9. ':

' → logprob: -11.288758277893066
    10. '       ' → logprob: -11.288758277893066

Token 263: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005057160276919603
    2. ' if' → logprob: -5.755057334899902
    3. '       ' → logprob: -6.380057334899902
    4. 'if' → logprob: -8.630057334899902
    5. '               ' → logprob: -13.880057334899902
    6. '          ' → logprob: -14.005057334899902
    7. '   ' → logprob: -14.505057334899902
    8. '         ' → logprob: -15.005057334899902
    9. '        ' → logprob: -15.255057334899902
    10. 'return' → logprob: -15.630057334899902

Token 264: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10896004736423492
    2. 'return' → logprob: -2.6089601516723633
    3. ' if' → logprob: -3.6089601516723633
    4. '           ' → logprob: -6.608960151672363
    5. ' return' → logprob: -6.733960151672363
    6. '               ' → logprob: -12.733960151672363
    7. 'None' → logprob: -14.608960151672363
    8. '   ' → logprob: -14.733960151672363
    9. '```' → logprob: -15.358960151672363
    10. ' ' → logprob: -15.733960151672363

Token 265: ' division' (ID: 21629)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -7.231182826217264e-05
    2. ' if' → logprob: -10.000072479248047
    3. '           ' → logprob: -11.000072479248047
    4. 'return' → logprob: -11.500072479248047
    5. 'If' → logprob: -16.875072479248047
    6. '               ' → logprob: -19.375072479248047
    7. '```' → logprob: -19.375072479248047
    8. '       ' → logprob: -19.625072479248047
    9. '#' → logprob: -20.125072479248047
    10. '            
' → logprob: -20.750072479248047

Token 266: ' by' (ID: 656)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.28847116231918335
    2. 'if' → logprob: -1.9134712219238281
    3. '           ' → logprob: -2.288471221923828
    4. '       ' → logprob: -7.538471221923828
    5. ':' → logprob: -8.038471221923828
    6. 'return' → logprob: -8.663471221923828
    7. ' by' → logprob: -8.788471221923828
    8. ' is' → logprob: -9.163471221923828
    9. '               ' → logprob: -9.288471221923828
    10. '=' → logprob: -10.413471221923828

Token 267: ' zero' (ID: 12421)
  Prédit: 'zero'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zero' → logprob: -0.18341022729873657
    2. '0' → logprob: -1.9334101676940918
    3. ' zero' → logprob: -3.808410167694092
    4. 'b' → logprob: -7.308410167694092
    5. '   ' → logprob: -11.18341064453125
    6. ' b' → logprob: -11.30841064453125
    7. 'None' → logprob: -11.43341064453125
    8. ' ' → logprob: -11.80841064453125
    9. 'Zero' → logprob: -12.30841064453125
    10. '_zero' → logprob: -12.30841064453125

Token 268: ' is' (ID: 382)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.10556997358798981
    2. 'if' → logprob: -2.605570077896118
    3. '           ' → logprob: -3.980570077896118
    4. ' or' → logprob: -5.605569839477539
    5. ' is' → logprob: -6.355569839477539
    6. ':' → logprob: -6.855569839477539
    7. '       ' → logprob: -7.980569839477539
    8. '               ' → logprob: -8.230569839477539
    9. 'return' → logprob: -8.855569839477539
    10. ',' → logprob: -8.980569839477539

Token 269: ' invalid' (ID: 15796)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.2014172375202179
    2. ' None' → logprob: -1.7014172077178955
    3. ' ' → logprob: -13.701416969299316
    4. ' not' → logprob: -14.826416969299316
    5. 'none' → logprob: -14.826416969299316
    6. 'undefined' → logprob: -14.826416969299316
    7. 'not' → logprob: -15.076416969299316
    8. '   ' → logprob: -15.326416969299316
    9. '  ' → logprob: -15.451416969299316
    10. 'n' → logprob: -15.576416969299316

Token 270: ' calculation' (ID: 40722)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0016789869405329227
    2. ' if' → logprob: -6.501678943634033
    3. '       ' → logprob: -9.751679420471191
    4. 'if' → logprob: -10.376679420471191
    5. ',' → logprob: -10.501679420471191
    6. '               ' → logprob: -10.876679420471191
    7. '<|end|>' → logprob: -11.126679420471191
    8. 'return' → logprob: -12.376679420471191
    9. '		' → logprob: -12.501679420471191
    10. ' or' → logprob: -13.001679420471191

Token 271: ' path' (ID: 3104)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00593472458422184
    2. ' if' → logprob: -5.255934715270996
    3. 'if' → logprob: -7.505934715270996
    4. '               ' → logprob: -9.380934715270996
    5. '<|end|>' → logprob: -11.130934715270996
    6. '       ' → logprob: -11.505934715270996
    7. '\n' → logprob: -11.755934715270996
    8. 'return' → logprob: -12.130934715270996
    9. '            
' → logprob: -12.380934715270996
    10. '          ' → logprob: -12.505934715270996

Token 272: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0013846398796886206
    2. ' if' → logprob: -7.001384735107422
    3. '       ' → logprob: -8.126384735107422
    4. '               ' → logprob: -10.001384735107422
    5. 'if' → logprob: -10.001384735107422
    6. '\n' → logprob: -11.001384735107422
    7. 'return' → logprob: -11.001384735107422
    8. ' return' → logprob: -11.501384735107422
    9. ',' → logprob: -11.626384735107422
    10. '		' → logprob: -11.751384735107422

Token 273: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006483130622655153
    2. ' if' → logprob: -5.50648307800293
    3. 'if' → logprob: -6.63148307800293
    4. '       ' → logprob: -7.00648307800293
    5. '               ' → logprob: -9.00648307800293
    6. 'return' → logprob: -10.88148307800293
    7. '<|end|>' → logprob: -11.50648307800293
    8. '   ' → logprob: -12.38148307800293
    9. ' return' → logprob: -13.00648307800293
    10. '		' → logprob: -13.00648307800293

Token 274: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2290368527173996
    2. ' if' → logprob: -1.979036808013916
    3. '           ' → logprob: -2.729036808013916
    4. 'return' → logprob: -6.854036808013916
    5. '       ' → logprob: -9.104037284851074
    6. ' return' → logprob: -10.104037284851074
    7. '               ' → logprob: -11.854037284851074
    8. '	if' → logprob: -13.729037284851074
    9. '   ' → logprob: -15.104037284851074
    10. ' ' → logprob: -15.854037284851074

Token 275: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.3868715465068817
    2. 'b' → logprob: -1.136871576309204
    3. '	b' → logprob: -14.886871337890625
    4. ' ' → logprob: -15.886871337890625
    5. '   ' → logprob: -17.761871337890625
    6. '_b' → logprob: -17.886871337890625
    7. ' ' → logprob: -18.636871337890625
    8. ' б' → logprob: -19.511871337890625
    9. ')b' → logprob: -19.636871337890625
    10. '```' → logprob: -20.011871337890625

Token 276: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.07891446352005005
    2. ' ==' → logprob: -2.5789144039154053
    3. '=' → logprob: -10.703914642333984
    4. ')==' → logprob: -13.953914642333984
    5. '===' → logprob: -14.703914642333984
    6. ']==' → logprob: -15.203914642333984
    7. ')' → logprob: -15.578914642333984
    8. '==
' → logprob: -15.703914642333984
    9. '```' → logprob: -15.703914642333984
    10. '()==' → logprob: -16.828914642333984

Token 277: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02324547804892063
    2. ' ' → logprob: -3.7732455730438232
    3. '۰' → logprob: -18.523244857788086
    4. ' ' → logprob: -19.148244857788086
    5. '０' → logprob: -20.273244857788086
    6. '```' → logprob: -20.273244857788086
    7. '  ' → logprob: -20.648244857788086
    8. '00' → logprob: -21.148244857788086
    9. '   ' → logprob: -21.273244857788086
    10. '	' → logprob: -21.335744857788086

Token 278: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '۰' → logprob: -18.000001907348633
    4. '０' → logprob: -19.750001907348633
    5. 'zero' → logprob: -19.875001907348633
    6. '00' → logprob: -20.375001907348633
    7. '```' → logprob: -21.250001907348633
    8. '٠' → logprob: -21.375001907348633
    9. '012' → logprob: -21.562501907348633
    10. '০' → logprob: -21.625001907348633

Token 279: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5298795700073242
    2. ':
' → logprob: -0.9048795700073242
    3. ':return' → logprob: -6.029879570007324
    4. '               ' → logprob: -6.154879570007324
    5. '           ' → logprob: -6.404879570007324
    6. ':
' → logprob: -8.154879570007324
    7. '):
' → logprob: -9.279879570007324
    8. ' or' → logprob: -9.904879570007324
    9. ')' → logprob: -10.029879570007324
    10. '):' → logprob: -10.154879570007324

Token 280: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0004473540757317096
    2. ' return' → logprob: -9.250447273254395
    3. 'return' → logprob: -9.250447273254395
    4. '           ' → logprob: -9.500447273254395
    5. ':' → logprob: -9.625447273254395
    6. ':return' → logprob: -9.875447273254395
    7. ' None' → logprob: -10.000447273254395
    8. 'None' → logprob: -11.625447273254395
    9. '                   ' → logprob: -12.875447273254395
    10. ':
' → logprob: -13.375447273254395

Token 281: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.02448025345802307
    2. ' return' → logprob: -3.7744803428649902
    3. 'None' → logprob: -7.77448034286499
    4. '                   ' → logprob: -7.77448034286499
    5. '               ' → logprob: -8.274479866027832
    6. ' None' → logprob: -9.024479866027832
    7. ':return' → logprob: -11.524479866027832
    8. '	return' → logprob: -13.024479866027832
    9. '           ' → logprob: -13.024479866027832
    10. '{return' → logprob: -13.399479866027832

Token 282: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.029750484973192215
    2. ' None' → logprob: -3.5297505855560303
    3. '_None' → logprob: -18.27975082397461
    4. 'none' → logprob: -18.40475082397461
    5. '=None' → logprob: -18.77975082397461
    6. '(None' → logprob: -19.02975082397461
    7. ',None' → logprob: -19.65475082397461
    8. '_none' → logprob: -19.90475082397461
    9. ' ' → logprob: -21.15475082397461
    10. '.None' → logprob: -21.40475082397461

Token 283: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.318681188422488e-05
    2. 'return' → logprob: -12.37501335144043
    3. ',' → logprob: -12.75001335144043
    4. '               ' → logprob: -13.62501335144043
    5. '       ' → logprob: -13.87501335144043
    6. '          ' → logprob: -14.12501335144043
    7. '            
' → logprob: -14.25001335144043
    8. ' return' → logprob: -14.37501335144043
    9. ')' → logprob: -14.50001335144043
    10. '		' → logprob: -14.62501335144043

Token 284: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.451116051815916e-05
    2. '            
' → logprob: -11.875024795532227
    3. '               ' → logprob: -12.000024795532227
    4. '		' → logprob: -13.000024795532227
    5. '       ' → logprob: -13.125024795532227
    6. ',' → logprob: -13.125024795532227
    7. 'return' → logprob: -13.625024795532227
    8. ' return' → logprob: -13.750024795532227
    9. '          ' → logprob: -14.000024795532227
    10. '
' → logprob: -14.250024795532227

Token 285: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8674883246421814
    2. '           ' → logprob: -0.9924883246421814
    3. 'return' → logprob: -1.6174883842468262
    4. ' if' → logprob: -4.617488384246826
    5. ' return' → logprob: -7.492488384246826
    6. '#' (adapté à ' #') → logprob: -8.492487907409668
    7. '       ' → logprob: -8.867487907409668
    8. '
' → logprob: -10.117487907409668
    9. '          ' → logprob: -10.492487907409668
    10. '               ' → logprob: -10.742487907409668

Token 286: ' Kit' (ID: 23793)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1787387728691101
    2. 'return' → logprob: -2.553738832473755
    3. '#' → logprob: -2.803738832473755
    4. ' if' → logprob: -3.928738832473755
    5. ' return' → logprob: -6.178738594055176
    6. ' #' → logprob: -6.553738594055176
    7. 'q' → logprob: -7.428738594055176
    8. 'res' → logprob: -7.553738594055176
    9. 'result' → logprob: -7.553738594055176
    10. 'If' → logprob: -9.053738594055176

Token 287: 'am' (ID: 313)
  Prédit: 'am'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'am' → logprob: -0.0002738522016443312
    2. 'amassa' → logprob: -8.625273704528809
    3. 'amas' → logprob: -10.375273704528809
    4. 'a' → logprob: -11.125273704528809
    5. 'ama' → logprob: -11.250273704528809
    6. 'ams' → logprob: -11.750273704528809
    7. 'ам' → logprob: -12.000273704528809
    8. '   ' → logprob: -12.250273704528809
    9. 'amaza' → logprob: -12.500273704528809
    10. 'aması' → logprob: -12.750273704528809

Token 288: 'asa' (ID: 5643)
  Prédit: 'asa'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'asa' → logprob: -0.0006633530138060451
    2. 'sa' → logprob: -7.8756632804870605
    3. 'osa' → logprob: -9.375663757324219
    4. 'a' → logprob: -10.375663757324219
    5. '-' → logprob: -10.750663757324219
    6. '```' → logprob: -11.000663757324219
    7. 'as' → logprob: -11.313163757324219
    8. 'аса' → logprob: -11.438163757324219
    9. 's' → logprob: -11.875663757324219
    10. 'k' → logprob: -12.063163757324219

Token 289: '-k' (ID: 10897)
  Prédit: '-k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-k' → logprob: -0.003087993711233139
    2. ''s' → logprob: -7.003087997436523
    3. 'kun' → logprob: -7.128087997436523
    4. ' division' → logprob: -8.503087997436523
    5. '_k' → logprob: -8.753087997436523
    6. ' rules' → logprob: -8.753087997436523
    7. '-div' → logprob: -8.878087997436523
    8. '-style' → logprob: -9.003087997436523
    9. 'div' → logprob: -9.628087997436523
    10. 'k' → logprob: -9.753087997436523

Token 290: 'un' (ID: 373)
  Prédit: 'un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -3.845798710244708e-05
    2. 'u' → logprob: -10.875038146972656
    3. 'n' → logprob: -12.000038146972656
    4. 'uns' → logprob: -12.500038146972656
    5. 'ун' → logprob: -13.250038146972656
    6. 'an' → logprob: -13.750038146972656
    7. ''un' → logprob: -14.125038146972656
    8. '-un' → logprob: -14.375038146972656
    9. 'a' → logprob: -14.562538146972656
    10. 'unk' → logprob: -14.812538146972656

Token 291: ' rounds' (ID: 37740)
  Prédit: ''s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''s' → logprob: -0.6721707582473755
    2. ' only' → logprob: -1.9221707582473755
    3. 'def' → logprob: -2.547170639038086
    4. 's' → logprob: -3.047170639038086
    5. '#' → logprob: -4.047170639038086
    6. ' does' → logprob: -4.172170639038086
    7. '           ' → logprob: -4.172170639038086
    8. ' def' → logprob: -4.172170639038086
    9. ' uses' → logprob: -4.297170639038086
    10. 'only' → logprob: -4.547170639038086

Token 292: ' result' (ID: 1534)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2815394103527069
    2. 'tow' → logprob: -1.9065394401550293
    3. 'down' → logprob: -3.0315394401550293
    4. ' a' → logprob: -3.5315394401550293
    5. ' towards' → logprob: -4.906539440155029
    6. ' toward' → logprob: -4.906539440155029
    7. ' down' → logprob: -6.031539440155029
    8. 'up' → logprob: -7.656539440155029
    9. '(a' → logprob: -7.656539440155029
    10. 'div' → logprob: -8.281538963317871

Token 293: ' to' (ID: 316)
  Prédit: 'tow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tow' → logprob: -0.18487268686294556
    2. ' toward' → logprob: -2.684872627258301
    3. ' towards' → logprob: -3.184872627258301
    4. '           ' → logprob: -3.184872627258301
    5. 'down' → logprob: -4.184872627258301
    6. ' down' → logprob: -7.184872627258301
    7. '               ' → logprob: -8.1848726272583
    8. 'a' → logprob: -8.5598726272583
    9. '0' → logprob: -8.6848726272583
    10. 'up' → logprob: -9.0598726272583

Token 294: ' the' (ID: 290)
  Prédit: 'zero'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zero' → logprob: -0.7534473538398743
    2. 'int' → logprob: -1.1284472942352295
    3. '0' → logprob: -2.2534472942352295
    4. ' zero' → logprob: -3.1284472942352295
    5. 'nearest' → logprob: -4.128447532653809
    6. 'the' → logprob: -4.253447532653809
    7. ' int' → logprob: -4.503447532653809
    8. 'negative' → logprob: -5.253447532653809
    9. 'tow' → logprob: -6.003447532653809
    10. ' the' → logprob: -6.003447532653809

Token 295: ' smaller' (ID: 13679)
  Prédit: 'nearest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nearest' → logprob: -0.12397968024015427
    2. ' nearest' → logprob: -2.4989795684814453
    3. '0' → logprob: -3.8739795684814453
    4. 'closest' → logprob: -5.498979568481445
    5. 'zero' → logprob: -5.873979568481445
    6. 'down' → logprob: -6.123979568481445
    7. 'tow' → logprob: -6.873979568481445
    8. 'floor' → logprob: -6.873979568481445
    9. 'near' → logprob: -7.498979568481445
    10. '-' → logprob: -7.998979568481445

Token 296: ' abs' (ID: 8443)
  Prédit: ' integer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' integer' → logprob: -0.6339668035507202
    2. 'integer' → logprob: -0.7589668035507202
    3. 'int' → logprob: -7.25896692276001
    4. ' of' → logprob: -8.758966445922852
    5. '_integer' → logprob: -9.383966445922852
    6. 'inte' → logprob: -9.758966445922852
    7. 'of' → logprob: -10.258966445922852
    8. ' one' → logprob: -10.258966445922852
    9. '(integer' → logprob: -10.508966445922852
    10. 'in' → logprob: -10.633966445922852

Token 297: ' integer' (ID: 16336)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.6760069727897644
    2. 'value' → logprob: -1.0510070323944092
    3. 'int' → logprob: -2.676007032394409
    4. 'a' → logprob: -3.551007032394409
    5. 'val' → logprob: -3.801007032394409
    6. ' value' → logprob: -5.17600679397583
    7. 'integer' → logprob: -5.67600679397583
    8. '_value' → logprob: -5.92600679397583
    9. 'ol' → logprob: -6.17600679397583
    10. 'result' → logprob: -6.42600679397583

Token 298: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01810428872704506
    2. ' if' → logprob: -4.143104076385498
    3. 'if' → logprob: -7.768104076385498
    4. 'int' → logprob: -7.893104076385498
    5. ',' → logprob: -8.268104553222656
    6. ' of' → logprob: -8.393104553222656
    7. '               ' → logprob: -9.268104553222656
    8. 'return' → logprob: -9.643104553222656
    9. '          ' → logprob: -9.768104553222656
    10. 'value' → logprob: -9.893104553222656

Token 299: ' trunc' (ID: 132880)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011956296861171722
    2. ' if' → logprob: -4.761956214904785
    3. '            ' → logprob: -6.886956214904785
    4. 'return' → logprob: -7.386956214904785
    5. ' return' → logprob: -7.511956214904785
    6. '               ' → logprob: -8.386956214904785
    7. '          ' → logprob: -8.386956214904785
    8. '            
' → logprob: -9.136956214904785
    9. 'if' → logprob: -9.386956214904785
    10. ' with' → logprob: -9.386956214904785

Token 300: 'ates' (ID: 1381)
  Prédit: 'ates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ates' → logprob: -0.007802041247487068
    2. '           ' → logprob: -5.1328020095825195
    3. 'ate' → logprob: -6.7578020095825195
    4. 'ating' → logprob: -8.25780200958252
    5. '       ' → logprob: -8.38280200958252
    6. 'a' → logprob: -9.88280200958252
    7. '```' → logprob: -10.13280200958252
    8. '   ' → logprob: -10.50780200958252
    9. '(a' → logprob: -10.75780200958252
    10. '(' → logprob: -11.13280200958252

Token 301: ' fractional' (ID: 136350)
  Prédit: ' toward'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' toward' → logprob: -0.6368873119354248
    2. 'tow' → logprob: -1.3868873119354248
    3. ' towards' → logprob: -1.5118873119354248
    4. '_t' → logprob: -8.761887550354004
    5. ' the' → logprob: -9.886887550354004
    6. 'Tow' → logprob: -10.136887550354004
    7. '0' → logprob: -10.136887550354004
    8. ' ' → logprob: -10.386887550354004
    9. 'Towards' → logprob: -10.386887550354004
    10. ')' → logprob: -10.511887550354004

Token 302: ' part' (ID: 997)
  Prédit: ' part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' part' → logprob: -0.07161270827054977
    2. '_' → logprob: -3.196612596511841
    3. '_part' → logprob: -3.696612596511841
    4. 'part' → logprob: -5.94661283493042
    5. ' parts' → logprob: -7.82161283493042
    6. ' _' → logprob: -8.446612358093262
    7. '_down' → logprob: -9.446612358093262
    8. '_parts' → logprob: -10.446612358093262
    9. ')' → logprob: -10.821612358093262
    10. ' ' → logprob: -12.071612358093262

Token 303: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.28509822487831116
    2. ' if' → logprob: -1.9100981950759888
    3. ' towards' → logprob: -3.0350983142852783
    4. ' toward' → logprob: -3.7850983142852783
    5. 'tow' → logprob: -5.035098075866699
    6. ' and' → logprob: -5.410098075866699
    7. ',' → logprob: -5.535098075866699
    8. ' in' → logprob: -6.285098075866699
    9. 'if' → logprob: -6.535098075866699
    10. '.' → logprob: -6.785098075866699

Token 304: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004092528019100428
    2. ' if' → logprob: -6.004092693328857
    3. ',' → logprob: -7.879092693328857
    4. '            ' → logprob: -8.0040922164917
    5. ' return' → logprob: -8.8790922164917
    6. 'return' → logprob: -9.0040922164917
    7. ')' → logprob: -9.5040922164917
    8. '          ' → logprob: -9.5040922164917
    9. '               ' → logprob: -9.8790922164917
    10. '       ' → logprob: -9.8790922164917

Token 305: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -1.1077853441238403
    2. ' if' → logprob: -1.6077853441238403
    3. 'if' → logprob: -2.232785224914551
    4. 'sign' → logprob: -2.357785224914551
    5. ' res' → logprob: -2.482785224914551
    6. '           ' → logprob: -2.732785224914551
    7. 'result' → logprob: -2.857785224914551
    8. 'return' → logprob: -3.982785224914551
    9. ' return' → logprob: -4.607785224914551
    10. ' sign' → logprob: -4.732785224914551

Token 306: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17053820192813873
    2. '=' → logprob: -1.9205381870269775
    3. 'ult' → logprob: -4.670538425445557
    4. '_abs' → logprob: -7.920538425445557
    5. '_' → logprob: -9.420537948608398
    6. 'ul' → logprob: -9.545537948608398
    7. ' ' → logprob: -9.920537948608398
    8. '_val' → logprob: -10.045537948608398
    9. '=int' → logprob: -10.170537948608398
    10. 'sign' → logprob: -10.170537948608398

Token 307: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4306625723838806
    2. 'int' → logprob: -1.4306626319885254
    3. ' a' → logprob: -3.0556626319885254
    4. ' int' → logprob: -3.3056626319885254
    5. 'math' → logprob: -4.055662631988525
    6. ' math' → logprob: -4.680662631988525
    7. ' abs' → logprob: -9.055662155151367
    8. 'abs' → logprob: -9.305662155151367
    9. '(int' → logprob: -9.805662155151367
    10. '(a' → logprob: -10.055662155151367

Token 308: ' /' (ID: 820)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.6984118223190308
    2. ' //' → logprob: -0.6984118223190308
    3. '/' → logprob: -5.57341194152832
    4. ' /' → logprob: -6.57341194152832
    5. ' ' → logprob: -10.82341194152832
    6. ' ' → logprob: -11.57341194152832
    7. '#' → logprob: -12.19841194152832
    8. '%' → logprob: -12.32341194152832
    9. '/b' → logprob: -12.82341194152832
    10. 'div' → logprob: -13.32341194152832

Token 309: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.014166327193379402
    2. ' b' → logprob: -4.264166355133057
    3. '1' → logprob: -13.764165878295898
    4. 'abs' → logprob: -14.139165878295898
    5. ' ' → logprob: -14.514165878295898
    6. 'int' → logprob: -15.764165878295898
    7. 'float' → logprob: -16.0141658782959
    8. ' abs' → logprob: -16.3891658782959
    9. '2' → logprob: -16.6391658782959
    10. '   ' → logprob: -16.8891658782959

Token 310: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08019672334194183
    2. '
' → logprob: -2.5801966190338135
    3. ' if' → logprob: -8.080196380615234
    4. '       ' → logprob: -8.080196380615234
    5. '<|end|>' → logprob: -8.830196380615234
    6. '            
' → logprob: -9.330196380615234
    7. 'if' → logprob: -9.455196380615234
    8. '<|end|>' → logprob: -9.580196380615234
    9. ',' → logprob: -9.830196380615234
    10. '
' → logprob: -10.080196380615234

Token 311: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010973422788083553
    2. ' if' → logprob: -4.8859734535217285
    3. '
' → logprob: -6.5109734535217285
    4. '       ' → logprob: -7.6359734535217285
    5. '            
' → logprob: -7.7609734535217285
    6. 'if' → logprob: -8.51097297668457
    7. ',' → logprob: -8.51097297668457
    8. ' 
' → logprob: -9.13597297668457
    9. '<|end|>' → logprob: -9.26097297668457
    10. '               ' → logprob: -9.88597297668457

Token 312: ' abs' (ID: 8443)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.04888007044792175
    2. 'return' → logprob: -3.923880100250244
    3. 'int' → logprob: -4.048880100250244
    4. 'res' → logprob: -5.048880100250244
    5. ' if' → logprob: -6.298880100250244
    6. 'import' → logprob: -6.298880100250244
    7. 'result' → logprob: -9.298879623413086
    8. '           ' → logprob: -9.673879623413086
    9. ' return' → logprob: -9.673879623413086
    10. 'tr' → logprob: -10.048879623413086

Token 313: '_a' (ID: 10852)
  Prédit: '_res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_res' → logprob: -0.14329996705055237
    2. 'res' → logprob: -2.3933000564575195
    3. 'a' → logprob: -3.3933000564575195
    4. '_a' → logprob: -4.7683000564575195
    5. '_result' → logprob: -9.76830005645752
    6. 'result' → logprob: -11.39330005645752
    7. '_val' → logprob: -12.64330005645752
    8. 'Res' → logprob: -12.76830005645752
    9. '   ' → logprob: -13.14330005645752
    10. '(res' → logprob: -13.14330005645752

Token 314: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7022700905799866
    2. ' =' → logprob: -0.7022700905799866
    3. '_abs' → logprob: -5.577270030975342
    4. 'abs' → logprob: -5.702270030975342
    5. 'b' → logprob: -6.827270030975342
    6. 'a' → logprob: -8.7022705078125
    7. ',' → logprob: -8.7022705078125
    8. '_res' → logprob: -8.9522705078125
    9. 'bs' → logprob: -9.7022705078125
    10. '>' → logprob: -9.7022705078125

Token 315: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.01678522303700447
    2. ' abs' → logprob: -4.141785144805908
    3. 'a' → logprob: -7.766785144805908
    4. 'int' → logprob: -8.266785621643066
    5. 'math' → logprob: -9.891785621643066
    6. '(abs' → logprob: -12.141785621643066
    7. ' a' → logprob: -12.391785621643066
    8. '   ' → logprob: -12.391785621643066
    9. 'min' → logprob: -13.766785621643066
    10. ' math' → logprob: -14.266785621643066

Token 316: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.013586497865617275
    2. 'a' → logprob: -4.763586521148682
    3. '(res' → logprob: -5.513586521148682
    4. 'res' → logprob: -7.388586521148682
    5. 'int' → logprob: -8.638586044311523
    6. '(int' → logprob: -9.013586044311523
    7. '(' → logprob: -12.638586044311523
    8. '(b' → logprob: -13.763586044311523
    9. '_a' → logprob: -14.013586044311523
    10. '(
' → logprob: -14.263586044311523

Token 317: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.1605769842863083
    2. ')' → logprob: -1.9105769395828247
    3. '           ' → logprob: -8.410576820373535
    4. ')
' → logprob: -9.410576820373535
    5. '       ' → logprob: -10.660576820373535
    6. ')

' → logprob: -11.785576820373535
    7. 'abs' → logprob: -11.910576820373535
    8. ' )
' → logprob: -12.660576820373535
    9. '),' → logprob: -14.160576820373535
    10. 'res' → logprob: -14.160576820373535

Token 318: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00022809267102275044
    2. ' if' → logprob: -9.000227928161621
    3. 'abs' → logprob: -9.875227928161621
    4. ' abs' → logprob: -10.500227928161621
    5. ',' → logprob: -12.000227928161621
    6. 'if' → logprob: -12.125227928161621
    7. '<|end|>' → logprob: -12.375227928161621
    8. '          ' → logprob: -13.125227928161621
    9. '       ' → logprob: -13.500227928161621
    10. ' and' → logprob: -13.875227928161621

Token 319: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' (adapté à ' abs') → logprob: -8.304016228066757e-05
    2. ' abs' → logprob: -10.250082969665527
    3. '           ' → logprob: -10.625082969665527
    4. 'if' → logprob: -10.750082969665527
    5. 'res' → logprob: -13.625082969665527
    6. '(abs' → logprob: -16.125083923339844
    7. 'ans' → logprob: -16.750083923339844
    8. 'return' → logprob: -17.000083923339844
    9. '_abs' → logprob: -17.000083923339844
    10. '            
' → logprob: -17.125083923339844

Token 320: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.0017207576893270016
    2. 'b' → logprob: -6.501720905303955
    3. '_a' → logprob: -8.751720428466797
    4. 'res' → logprob: -10.626720428466797
    5. '_res' → logprob: -11.626720428466797
    6. 'a' → logprob: -12.001720428466797
    7. '(b' → logprob: -12.251720428466797
    8. '   ' → logprob: -12.876720428466797
    9. '(res' → logprob: -13.314220428466797
    10. '=' → logprob: -13.439220428466797

Token 321: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38689231872558594
    2. '=' → logprob: -1.136892318725586
    3. '           ' → logprob: -11.136892318725586
    4. ' ' → logprob: -13.261892318725586
    5. ',' → logprob: -13.886892318725586
    6. 'if' → logprob: -14.386892318725586
    7. '   ' → logprob: -14.511892318725586
    8. '               ' → logprob: -14.761892318725586
    9. '       ' → logprob: -14.886892318725586
    10. ':' → logprob: -15.136892318725586

Token 322: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -3.881560041918419e-05
    2. ' abs' → logprob: -10.250039100646973
    3. 'b' → logprob: -12.625039100646973
    4. '           ' → logprob: -17.000038146972656
    5. '(abs' → logprob: -17.125038146972656
    6. '       ' → logprob: -19.625038146972656
    7. 'ab' → logprob: -20.000038146972656
    8. '   ' → logprob: -20.250038146972656
    9. '.abs' → logprob: -20.375038146972656
    10. '          ' → logprob: -20.500038146972656

Token 323: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.1426916867494583
    2. 'b' → logprob: -2.0176916122436523
    3. 'a' → logprob: -12.017691612243652
    4. '	b' → logprob: -12.642691612243652
    5. '_b' → logprob: -13.517691612243652
    6. ' b' → logprob: -13.642691612243652
    7. 'res' → logprob: -13.767691612243652
    8. '=b' → logprob: -13.767691612243652
    9. ')b' → logprob: -14.892691612243652
    10. '>b' → logprob: -15.142691612243652

Token 324: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.02137213945388794
    2. ')' → logprob: -4.146372318267822
    3. '           ' → logprob: -5.271372318267822
    4. ')
' → logprob: -9.271371841430664
    5. ')

' → logprob: -10.021371841430664
    6. '       ' → logprob: -10.396371841430664
    7. ' )
' → logprob: -11.896371841430664
    8. '):
' → logprob: -12.771371841430664
    9. '
' → logprob: -13.646371841430664
    10. '               ' → logprob: -14.146371841430664

Token 325: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.583550642360933e-05
    2. ' if' → logprob: -11.250036239624023
    3. '       ' → logprob: -12.500036239624023
    4. 'if' → logprob: -12.500036239624023
    5. '```' → logprob: -12.625036239624023
    6. '               ' → logprob: -12.750036239624023
    7. '            
' → logprob: -12.750036239624023
    8. ',' → logprob: -12.875036239624023
    9. 'return' → logprob: -14.125036239624023
    10. '
' → logprob: -14.500036239624023

Token 326: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.41116082668304443
    2. '           ' → logprob: -1.1611608266830444
    3. 'res' → logprob: -4.911160945892334
    4. ' if' → logprob: -4.911160945892334
    5. 'abs' → logprob: -5.786160945892334
    6. 'sign' → logprob: -5.911160945892334
    7. 'return' → logprob: -6.661160945892334
    8. 'floor' → logprob: -7.286160945892334
    9. 'result' → logprob: -7.411160945892334
    10. ' res' → logprob: -9.036160469055176

Token 327: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.04998880252242088
    2. ' abs' → logprob: -3.1749887466430664
    3. 'res' → logprob: -5.924988746643066
    4. '(abs' → logprob: -6.049988746643066
    5. 'int' → logprob: -6.674988746643066
    6. 'math' → logprob: -8.174988746643066
    7. '   ' → logprob: -9.424988746643066
    8. ' res' → logprob: -9.674988746643066
    9. '(' → logprob: -9.799988746643066
    10. ' int' → logprob: -10.299988746643066

Token 328: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.003220133949071169
    2. '(res' → logprob: -6.003220081329346
    3. '(a' → logprob: -7.753220081329346
    4. '_b' → logprob: -8.253220558166504
    5. 'a' → logprob: -11.128220558166504
    6. '_res' → logprob: -11.253220558166504
    7. 'res' → logprob: -11.503220558166504
    8. '(abs' → logprob: -11.628220558166504
    9. '(' → logprob: -12.378220558166504
    10. '(result' → logprob: -14.128220558166504

Token 329: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.6586398482322693
    2. ' <' → logprob: -1.283639907836914
    3. '%' → logprob: -2.908639907836914
    4. '>=' → logprob: -2.908639907836914
    5. '<=' → logprob: -3.283639907836914
    6. ' <=' → logprob: -4.408639907836914
    7. '==' → logprob: -4.408639907836914
    8. ' >=' → logprob: -4.533639907836914
    9. '>' → logprob: -4.658639907836914
    10. ' %' → logprob: -5.033639907836914

Token 330: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.004104877356439829
    2. ' abs' → logprob: -5.504105091094971
    3. '(abs' → logprob: -11.754104614257812
    4. 'res' → logprob: -12.004104614257812
    5. '1' → logprob: -12.129104614257812
    6. '0' → logprob: -13.504104614257812
    7. '=' → logprob: -14.379104614257812
    8. '3' → logprob: -14.566604614257812
    9. 'a' → logprob: -14.754104614257812
    10. '   ' → logprob: -14.879104614257812

Token 331: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.0010788989020511508
    2. '_a' → logprob: -7.126079082489014
    3. 'b' → logprob: -8.751078605651855
    4. '(b' → logprob: -9.626078605651855
    5. '(res' → logprob: -11.251078605651855
    6. '(abs' → logprob: -11.501078605651855
    7. '(a' → logprob: -11.751078605651855
    8. 'res' → logprob: -11.876078605651855
    9. 'a' → logprob: -12.376078605651855
    10. 'abs' → logprob: -12.751078605651855

Token 332: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.14381949603557587
    2. ':' → logprob: -2.518819570541382
    3. '               ' → logprob: -3.018819570541382
    4. ':return' → logprob: -5.768819332122803
    5. ' or' → logprob: -7.393819332122803
    6. ':
' → logprob: -8.143819808959961
    7. '           ' → logprob: -8.643819808959961
    8. ':

' → logprob: -9.393819808959961
    9. 'return' → logprob: -9.643819808959961
    10. ' and' → logprob: -9.768819808959961

Token 333: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0002724217774812132
    2. 'return' → logprob: -9.125272750854492
    3. ' return' → logprob: -9.375272750854492
    4. '0' → logprob: -10.500272750854492
    5. ':
' → logprob: -10.750272750854492
    6. ':' → logprob: -11.625272750854492
    7. '           ' → logprob: -12.125272750854492
    8. ':return' → logprob: -12.500272750854492
    9. '                
' → logprob: -13.125272750854492
    10. ',' → logprob: -13.375272750854492

Token 334: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.19691142439842224
    2. '0' → logprob: -1.8219114542007446
    3. '               ' → logprob: -4.321911334991455
    4. ' return' → logprob: -5.821911334991455
    5. ' ' → logprob: -7.821911334991455
    6. 'if' → logprob: -8.946911811828613
    7. 'result' → logprob: -9.571911811828613
    8. '                   ' → logprob: -9.696911811828613
    9. '           ' → logprob: -10.446911811828613
    10. 'import' → logprob: -10.571911811828613

Token 335: ' round' (ID: 7353)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.002430001739412546
    2. 'if' → logprob: -6.377429962158203
    3. '               ' → logprob: -7.877429962158203
    4. 'result' → logprob: -9.252429962158203
    5. '0' → logprob: -9.377429962158203
    6. ' return' → logprob: -9.377429962158203
    7. 'res' → logprob: -10.377429962158203
    8. 'import' → logprob: -10.502429962158203
    9. 'ret' → logprob: -11.752429962158203
    10. '#' → logprob: -12.252429962158203

Token 336: ' to' (ID: 316)
  Prédit: 'tow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tow' → logprob: -0.34253889322280884
    2. 'down' → logprob: -1.592538833618164
    3. 'res' → logprob: -2.842538833618164
    4. ' down' → logprob: -4.967538833618164
    5. ' towards' → logprob: -5.592538833618164
    6. '0' → logprob: -5.592538833618164
    7. ' toward' → logprob: -5.717538833618164
    8. ' res' → logprob: -6.092538833618164
    9. 'math' → logprob: -6.592538833618164
    10. '(res' → logprob: -6.592538833618164

Token 337: ' abs' (ID: 8443)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007713219616562128
    2. 'int' → logprob: -5.132713317871094
    3. 'math' → logprob: -7.007713317871094
    4. ' ' → logprob: -7.507713317871094
    5. ' math' → logprob: -8.882713317871094
    6. ' int' → logprob: -9.507713317871094
    7. 'a' → logprob: -10.132713317871094
    8. '-' → logprob: -10.507713317871094
    9. 'min' → logprob: -11.257713317871094
    10. 'zero' → logprob: -11.632713317871094

Token 338: ' smaller' (ID: 13679)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.36139485239982605
    2. '(res' → logprob: -2.2363948822021484
    3. 'int' → logprob: -2.4863948822021484
    4. 'res' → logprob: -3.2363948822021484
    5. 'a' → logprob: -3.6113948822021484
    6. 'val' → logprob: -4.611394882202148
    7. 'result' → logprob: -4.736394882202148
    8. 'value' → logprob: -4.861394882202148
    9. '_a' → logprob: -5.861394882202148
    10. '(int' → logprob: -5.986394882202148

Token 339: ' =' (ID: 314)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6483398079872131
    2. 'integer' → logprob: -1.3983397483825684
    3. ' integer' → logprob: -1.7733397483825684
    4. 'abs' → logprob: -3.7733397483825684
    5. ' int' → logprob: -5.523339748382568
    6. 'down' → logprob: -5.898339748382568
    7. 'value' → logprob: -5.898339748382568
    8. '(abs' → logprob: -6.023339748382568
    9. '(int' → logprob: -6.273339748382568
    10. '           ' → logprob: -6.273339748382568

Token 340: ' abs' (ID: 8443)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03929915651679039
    2. 'int' → logprob: -3.539299249649048
    3. 'math' → logprob: -4.914299011230469
    4. ' ' → logprob: -6.789299011230469
    5. ' math' → logprob: -7.414299011230469
    6. ' int' → logprob: -8.664299011230469
    7. 'a' → logprob: -8.914299011230469
    8. 'min' → logprob: -10.164299011230469
    9. '   ' → logprob: -11.101799011230469
    10. '(' → logprob: -11.851799011230469

Token 341: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.5838400721549988
    2. '(int' → logprob: -1.8338401317596436
    3. '(res' → logprob: -1.9588401317596436
    4. 'int' → logprob: -2.9588401317596436
    5. 'a' → logprob: -3.5838401317596436
    6. '(abs' → logprob: -3.8338401317596436
    7. '_a' → logprob: -4.3338398933410645
    8. 'res' → logprob: -4.8338398933410645
    9. '(' → logprob: -5.2088398933410645
    10. '(math' → logprob: -6.5838398933410645

Token 342: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.694724977016449
    2. ')
' → logprob: -0.819724977016449
    3. '           ' → logprob: -3.3197250366210938
    4. '               ' → logprob: -3.9447250366210938
    5. '):
' → logprob: -6.569725036621094
    6. ').' → logprob: -7.194725036621094
    7. '):' → logprob: -7.444725036621094
    8. '),' → logprob: -7.569725036621094
    9. ')
' → logprob: -8.194725036621094
    10. '                   ' → logprob: -8.569725036621094

Token 343: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.016306845471262932
    2. '           ' → logprob: -4.3913068771362305
    3. ',' → logprob: -6.6413068771362305
    4. 'return' → logprob: -7.0163068771362305
    5. ' return' → logprob: -7.2663068771362305
    6. '                   ' → logprob: -8.26630687713623
    7. ' if' → logprob: -9.14130687713623
    8. ')' → logprob: -9.39130687713623
    9. ':' → logprob: -9.76630687713623
    10. '                
' → logprob: -9.95380687713623

Token 344: ' target' (ID: 3783)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.016072260215878487
    2. 'if' → logprob: -5.2660722732543945
    3. ' return' → logprob: -5.3910722732543945
    4. '               ' → logprob: -5.3910722732543945
    5. 'res' → logprob: -7.1410722732543945
    6. 'result' → logprob: -7.6410722732543945
    7. 'sign' → logprob: -8.766072273254395
    8. ' if' → logprob: -8.891072273254395
    9. 'import' → logprob: -9.766072273254395
    10. ' res' → logprob: -11.766072273254395

Token 345: '_abs' (ID: 81310)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5297596454620361
    2. '_res' → logprob: -1.7797596454620361
    3. '_val' → logprob: -2.529759645462036
    4. '=' → logprob: -2.529759645462036
    5. '_abs' → logprob: -3.154759645462036
    6. '_value' → logprob: -3.404759645462036
    7. '_sign' → logprob: -5.654759407043457
    8. '_int' → logprob: -6.904759407043457
    9. 'res' → logprob: -7.654759407043457
    10. '_result' → logprob: -7.654759407043457

Token 346: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.42902952432632446
    2. '=' → logprob: -1.0540294647216797
    3. '_val' → logprob: -9.05402946472168
    4. '_value' → logprob: -10.05402946472168
    5. '_abs' → logprob: -10.05402946472168
    6. ':' → logprob: -10.80402946472168
    7. '_a' → logprob: -10.80402946472168
    8. 'abs' → logprob: -11.05402946472168
    9. '=int' → logprob: -11.17902946472168
    10. '=a' → logprob: -11.42902946472168

Token 347: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -6.587483221665025e-05
    2. ' abs' → logprob: -10.000065803527832
    3. 'int' → logprob: -11.500065803527832
    4. '           ' → logprob: -12.625065803527832
    5. 'a' → logprob: -12.875065803527832
    6. '(abs' → logprob: -13.250065803527832
    7. '   ' → logprob: -13.875065803527832
    8. '               ' → logprob: -14.625065803527832
    9. '       ' → logprob: -14.625065803527832
    10. 'ab' → logprob: -16.25006675720215

Token 348: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.040148455649614334
    2. '(a' → logprob: -3.4151484966278076
    3. 'a' → logprob: -5.0401482582092285
    4. 'A' → logprob: -12.665148735046387
    5. '(' → logprob: -13.665148735046387
    6. '	a' → logprob: -14.165148735046387
    7. '_b' → logprob: -14.415148735046387
    8. '[a' → logprob: -14.790148735046387
    9. ' a' → logprob: -15.602648735046387
    10. '_i' → logprob: -15.665148735046387

Token 349: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2539706528186798
    2. '               ' → logprob: -1.5039706230163574
    3. 'else' → logprob: -7.253970623016357
    4. 'elif' → logprob: -7.753970623016357
    5. ',' → logprob: -8.503971099853516
    6. 'return' → logprob: -8.628971099853516
    7. '
' → logprob: -9.128971099853516
    8. ' else' → logprob: -9.503971099853516
    9. '                
' → logprob: -10.003971099853516
    10. 'if' → logprob: -10.503971099853516

Token 350: '           ' (ID: 352)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5765790343284607
    2. '           ' → logprob: -0.8265790343284607
    3. ' else' → logprob: -8.951579093933105
    4. 'return' → logprob: -9.076579093933105
    5. 'else' → logprob: -9.576579093933105
    6. ',' → logprob: -9.701579093933105
    7. ')' → logprob: -9.951579093933105
    8. ' if' → logprob: -10.326579093933105
    9. ' return' → logprob: -10.326579093933105
    10. 'elif' → logprob: -10.701579093933105

Token 351: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.5864682197570801
    2. ' else' → logprob: -1.33646821975708
    3. '           ' → logprob: -1.71146821975708
    4. 'elif' → logprob: -8.461467742919922
    5. ' elif' → logprob: -10.211467742919922
    6. '       ' → logprob: -10.461467742919922
    7. '               ' → logprob: -10.711467742919922
    8. '	else' → logprob: -11.961467742919922
    9. ',' → logprob: -12.461467742919922
    10. '.' → logprob: -12.586467742919922

Token 352: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3316510319709778
    2. ':' → logprob: -1.581650972366333
    3. '               ' → logprob: -2.581650972366333
    4. '           ' → logprob: -7.206651210784912
    5. '{' → logprob: -9.831650733947754
    6. '{
' → logprob: -9.956650733947754
    7. ' :
' → logprob: -10.206650733947754
    8. 'target' → logprob: -10.456650733947754
    9. ' :' → logprob: -11.206650733947754
    10. '):
' → logprob: -11.456650733947754

Token 353: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02245350182056427
    2. 'target' → logprob: -4.022453308105469
    3. ' target' → logprob: -5.522453308105469
    4. '#' → logprob: -9.022453308105469
    5. '           ' → logprob: -9.522453308105469
    6. ' #' → logprob: -10.397453308105469
    7. '```' → logprob: -11.022453308105469
    8. 'return' → logprob: -11.522453308105469
    9. '              ' → logprob: -11.772453308105469
    10. '                ' → logprob: -12.022453308105469

Token 354: ' target' (ID: 3783)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' (adapté à ' target') → logprob: -0.5517168045043945
    2. '               ' → logprob: -0.9267168045043945
    3. ' target' → logprob: -3.6767168045043945
    4. '#' → logprob: -5.9267168045043945
    5. 'return' → logprob: -9.426716804504395
    6. '           ' → logprob: -10.551716804504395
    7. ' #' → logprob: -10.676716804504395
    8. 'abs' → logprob: -10.926716804504395
    9. '	target' → logprob: -11.051716804504395
    10. '```' → logprob: -11.426716804504395

Token 355: '_abs' (ID: 81310)
  Prédit: '_abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_abs' → logprob: -2.451116051815916e-05
    2. 'abs' → logprob: -10.875024795532227
    3. '_ab' → logprob: -12.875024795532227
    4. '=_' → logprob: -14.750024795532227
    5. '_s' → logprob: -15.000024795532227
    6. '_a' → logprob: -15.250024795532227
    7. ''_' → logprob: -15.250024795532227
    8. ' _' → logprob: -15.250024795532227
    9. 's' → logprob: -15.375024795532227
    10. 'Abs' → logprob: -15.625024795532227

Token 356: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011047814972698689
    2. ' =' → logprob: -4.511047840118408
    3. ' ' → logprob: -18.88604736328125
    4. '=
' → logprob: -20.26104736328125
    5. '＝' → logprob: -20.63604736328125
    6. '=int' → logprob: -20.88604736328125
    7. ')' → logprob: -21.76104736328125
    8. ',' → logprob: -21.88604736328125
    9. '=

' → logprob: -21.88604736328125
    10. '           ' → logprob: -22.01104736328125

Token 357: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.0001085497424355708
    2. 'int' → logprob: -10.12510871887207
    3. 'math' → logprob: -10.37510871887207
    4. ' abs' → logprob: -10.62510871887207
    5. 'min' → logprob: -11.50010871887207
    6. '(abs' → logprob: -13.50010871887207
    7. '   ' → logprob: -14.62510871887207
    8. 'max' → logprob: -15.00010871887207
    9. '
' → logprob: -16.50010871887207
    10. '0' → logprob: -16.50010871887207

Token 358: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.009822086431086063
    2. 'b' → logprob: -4.634821891784668
    3. '_a' → logprob: -9.884821891784668
    4. 'a' → logprob: -11.509821891784668
    5. '(b' → logprob: -13.509821891784668
    6. '   ' → logprob: -13.759821891784668
    7. 'abs' → logprob: -14.134821891784668
    8. '	b' → logprob: -14.634821891784668
    9. 'res' → logprob: -14.884821891784668
    10. '
' → logprob: -15.009821891784668

Token 359: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005638765869662166
    2. 'return' → logprob: -8.625563621520996
    3. '            
' → logprob: -8.875563621520996
    4. ',' → logprob: -9.500563621520996
    5. '
' → logprob: -10.125563621520996
    6. '               ' → logprob: -10.750563621520996
    7. '       ' → logprob: -10.750563621520996
    8. ' if' → logprob: -11.000563621520996
    9. ' return' → logprob: -11.250563621520996
    10. '```' → logprob: -11.500563621520996

Token 360: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003933768020942807
    2. '               ' → logprob: -8.75039291381836
    3. ' if' → logprob: -9.75039291381836
    4. 'return' → logprob: -10.00039291381836
    5. ' return' → logprob: -10.00039291381836
    6. '       ' → logprob: -10.37539291381836
    7. '            
' → logprob: -10.75039291381836
    8. ',' → logprob: -11.75039291381836
    9. '
' → logprob: -13.00039291381836
    10. 'import' → logprob: -13.25039291381836

Token 361: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14161132276058197
    2. 'sign' → logprob: -2.516611337661743
    3. 'if' → logprob: -3.516611337661743
    4. ' if' → logprob: -4.891611099243164
    5. '
' → logprob: -5.266611099243164
    6. '            
' → logprob: -6.266611099243164
    7. 'res' → logprob: -6.641611099243164
    8. '#' (adapté à ' #') → logprob: -6.766611099243164
    9. 'import' → logprob: -6.766611099243164
    10. 'result' → logprob: -7.141611099243164

Token 362: ' truncate' (ID: 126309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.17492422461509705
    2. 'sign' → logprob: -2.04992413520813
    3. 'res' → logprob: -4.424924373626709
    4. 'import' → logprob: -4.674924373626709
    5. '#' → logprob: -6.049924373626709
    6. '           ' → logprob: -6.174924373626709
    7. 'from' → logprob: -6.424924373626709
    8. 'result' → logprob: -6.549924373626709
    9. 'tr' → logprob: -7.424924373626709
    10. ' if' → logprob: -7.674924373626709

Token 363: ' fractional' (ID: 136350)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.4582592248916626
    2. 'import' → logprob: -1.5832592248916626
    3. 'result' → logprob: -2.208259105682373
    4. 'res' → logprob: -2.208259105682373
    5. 'if' → logprob: -2.333259105682373
    6. 'tow' → logprob: -2.458259105682373
    7. ' toward' → logprob: -3.458259105682373
    8. '           ' → logprob: -3.458259105682373
    9. ' res' → logprob: -3.583259105682373
    10. ' towards' → logprob: -4.083259105682373

Token 364: ' part' (ID: 997)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.31718674302101135
    2. ' part' → logprob: -1.317186713218689
    3. '_part' → logprob: -5.9421868324279785
    4. '           ' → logprob: -7.1921868324279785
    5. 'parts' → logprob: -8.06718635559082
    6. ' parts' → logprob: -8.44218635559082
    7. '_parts' → logprob: -12.69218635559082
    8. '	part' → logprob: -13.19218635559082
    9. '       ' → logprob: -14.06718635559082
    10. '            
' → logprob: -14.69218635559082

Token 365: ' towards' (ID: 9979)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001795608433894813
    2. 'return' → logprob: -7.626795768737793
    3. ',' → logprob: -7.751795768737793
    4. '            
' → logprob: -8.501795768737793
    5. 'result' → logprob: -8.751795768737793
    6. ' if' → logprob: -9.001795768737793
    7. 'res' → logprob: -9.376795768737793
    8. '
' → logprob: -10.001795768737793
    9. ' return' → logprob: -10.126795768737793
    10. ' res' → logprob: -10.501795768737793

Token 366: ' zero' (ID: 12421)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02858666703104973
    2. 'zero' → logprob: -4.0285868644714355
    3. ' zero' → logprob: -4.6535868644714355
    4. ' ' → logprob: -7.1535868644714355
    5. '-zero' → logprob: -10.028586387634277
    6. '-' → logprob: -11.278586387634277
    7. '_zero' → logprob: -12.278586387634277
    8. ' -' → logprob: -12.403586387634277
    9. ' math' → logprob: -12.528586387634277
    10. 'math' → logprob: -13.528586387634277

Token 367: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006533354055136442
    2. 'return' → logprob: -6.131533145904541
    3. '            
' → logprob: -6.631533145904541
    4. ' if' → logprob: -7.006533145904541
    5. '
' → logprob: -7.131533145904541
    6. ' return' → logprob: -7.756533145904541
    7. ',' → logprob: -8.3815336227417
    8. 'if' → logprob: -9.3815336227417
    9. ':' → logprob: -9.3815336227417
    10. 'result' → logprob: -9.5065336227417

Token 368: 'integer' (ID: 27378)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9785102605819702
    2. '           ' → logprob: -1.6035102605819702
    3. ')
' → logprob: -1.7285102605819702
    4. 'return' → logprob: -2.8535103797912598
    5. 'int' → logprob: -3.1035103797912598
    6. ' if' → logprob: -3.4785103797912598
    7. 'import' → logprob: -3.8535103797912598
    8. 'if' → logprob: -3.9785103797912598
    9. ' return' → logprob: -3.9785103797912598
    10. ' )
' → logprob: -4.72851037979126

Token 369: ' division' (ID: 21629)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5587188005447388
    2. ' part' → logprob: -1.4337188005447388
    3. 'division' → logprob: -2.683718681335449
    4. ' division' → logprob: -2.933718681335449
    5. 'part' → logprob: -3.308718681335449
    6. '           ' → logprob: -4.058718681335449
    7. 'div' → logprob: -5.308718681335449
    8. 'return' → logprob: -6.058718681335449
    9. 'result' → logprob: -6.558718681335449
    10. ')
' → logprob: -6.808718681335449

Token 370: ' trunc' (ID: 132880)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010889232158660889
    2. '           ' → logprob: -4.885889053344727
    3. ')
' → logprob: -6.885889053344727
    4. '//' → logprob: -7.010889053344727
    5. ' )' → logprob: -8.010889053344727
    6. ' if' → logprob: -8.885889053344727
    7. 'return' → logprob: -9.135889053344727
    8. ' //' → logprob: -9.260889053344727
    9. '       ' → logprob: -9.510889053344727
    10. ' by' → logprob: -9.635889053344727

Token 371: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.215193748474121
    2. 'ation' → logprob: -1.215193748474121
    3. 'ates' → logprob: -1.715193748474121
    4. 'ate' → logprob: -2.715193748474121
    5. '}' → logprob: -2.965193748474121
    6. '=' → logprob: -3.090193748474121
    7. 'tow' → logprob: -3.340193748474121
    8. '//' → logprob: -4.965193748474121
    9. '```' → logprob: -5.590193748474121
    10. 'ating' → logprob: -5.840193748474121

Token 372: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0016253103967756033
    2. ' return' → logprob: -6.8766255378723145
    3. 'return' → logprob: -7.6266255378723145
    4. '            
' → logprob: -9.751625061035156
    5. ' if' → logprob: -11.126625061035156
    6. '<|end|>' → logprob: -11.751625061035156
    7. '               ' → logprob: -12.376625061035156
    8. ',' → logprob: -12.876625061035156
    9. ' 
' → logprob: -13.001625061035156
    10. '            ' → logprob: -13.501625061035156

Token 373: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.563809871673584
    2. ' return' → logprob: -2.063809871673584
    3. 'res' → logprob: -2.438809871673584
    4. 'result' → logprob: -2.563809871673584
    5. '           ' → logprob: -2.813809871673584
    6. 'if' (adapté à ' if') → logprob: -3.313809871673584
    7. ' if' → logprob: -4.063809871673584
    8. ' res' → logprob: -4.438809871673584
    9. ' result' → logprob: -4.938809871673584
    10. 'tr' → logprob: -5.813809871673584

Token 374: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.03573087602853775
    2. ' res' → logprob: -3.5357308387756348
    3. 'a' → logprob: -5.285730838775635
    4. '(res' → logprob: -7.785730838775635
    5. ' a' → logprob: -8.160731315612793
    6. 'int' → logprob: -10.035731315612793
    7. ' (' → logprob: -10.160731315612793
    8. 'r' → logprob: -10.660731315612793
    9. '(a' → logprob: -10.785731315612793
    10. 'op' → logprob: -11.035731315612793

Token 375: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.17760854959487915
    2. '>=' → logprob: -2.5526084899902344
    3. ' >' → logprob: -3.0526084899902344
    4. ' <' → logprob: -3.8026084899902344
    5. '>' → logprob: -4.302608489990234
    6. '<' → logprob: -6.427608489990234
    7. ' ' → logprob: -8.927608489990234
    8. ')>=' → logprob: -12.052608489990234
    9. ' ==' → logprob: -12.552608489990234
    10. '  ' → logprob: -13.177608489990234

Token 376: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007099286303855479
    2. ' ' → logprob: -7.2507100105285645
    3. '  ' → logprob: -17.750709533691406
    4. '۰' → logprob: -18.000709533691406
    5. '   ' → logprob: -18.500709533691406
    6. '
' → logprob: -18.750709533691406
    7. '1' → logprob: -18.875709533691406
    8. '０' → logprob: -19.250709533691406
    9. '    ' → logprob: -19.375709533691406
    10. '00' → logprob: -20.438209533691406

Token 377: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.494741632603109e-05
    2. ' ' → logprob: -9.37508487701416
    3. '   ' → logprob: -17.625085830688477
    4. '  ' → logprob: -17.875085830688477
    5. '
' → logprob: -18.000085830688477
    6. '۰' → logprob: -18.125085830688477
    7. '    ' → logprob: -19.000085830688477
    8. '00' → logprob: -19.250085830688477
    9. '1' → logprob: -19.250085830688477
    10. '０' → logprob: -19.312585830688477

Token 378: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04773442819714546
    2. '               ' → logprob: -3.547734498977661
    3. ':
' → logprob: -4.297734260559082
    4. '           ' → logprob: -5.797734260559082
    5. ' :' → logprob: -7.922734260559082
    6. ' and' → logprob: -8.172734260559082
    7. ':return' → logprob: -8.422734260559082
    8. '):' → logprob: -8.672734260559082
    9. '):
' → logprob: -9.797734260559082
    10. ',' → logprob: -11.297734260559082

Token 379: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01410485990345478
    2. ' return' → logprob: -4.514104843139648
    3. 'return' → logprob: -6.139104843139648
    4. '           ' → logprob: -7.264104843139648
    5. ' /' → logprob: -10.514104843139648
    6. '                   ' → logprob: -10.639104843139648
    7. '              ' → logprob: -10.764104843139648
    8. ' //' → logprob: -10.764104843139648
    9. ':' → logprob: -10.889104843139648
    10. '                
' → logprob: -11.389104843139648

Token 380: ' approx' (ID: 33956)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.08325322717428207
    2. ' int' → logprob: -2.8332531452178955
    3. 'return' → logprob: -4.083253383636475
    4. ' return' → logprob: -5.708253383636475
    5. '               ' → logprob: -7.333253383636475
    6. 'res' → logprob: -9.708252906799316
    7. 'math' → logprob: -9.708252906799316
    8. ' math' → logprob: -10.333252906799316
    9. '(int' → logprob: -10.458252906799316
    10. '           ' → logprob: -11.083252906799316

Token 381: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005246091168373823
    2. '=' → logprob: -5.380246162414551
    3. 'int' → logprob: -8.38024616241455
    4. ' int' → logprob: -9.00524616241455
    5. '=int' → logprob: -9.13024616241455
    6. '               ' → logprob: -9.50524616241455
    7. ' ' → logprob: -10.63024616241455
    8. '                   ' → logprob: -10.63024616241455
    9. '           ' → logprob: -11.38024616241455
    10. 'return' → logprob: -11.50524616241455

Token 382: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.04978318139910698
    2. 'math' → logprob: -3.299783229827881
    3. ' int' → logprob: -4.799783229827881
    4. ' math' → logprob: -5.674783229827881
    5. '               ' → logprob: -12.549782752990723
    6. 'min' → logprob: -12.799782752990723
    7. '           ' → logprob: -13.674782752990723
    8. '                   ' → logprob: -14.424782752990723
    9. '(int' → logprob: -15.174782752990723
    10. '	int' → logprob: -15.299782752990723

Token 383: '(math' (ID: 86464)
  Prédit: '(res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.018422778695821762
    2. '(math' → logprob: -4.268422603607178
    3. 'res' → logprob: -5.518422603607178
    4. 'math' → logprob: -8.643423080444336
    5. '(' → logprob: -9.768423080444336
    6. ' res' → logprob: -13.393423080444336
    7. '(min' → logprob: -14.018423080444336
    8. ' math' → logprob: -14.643423080444336
    9. '	res' → logprob: -15.393423080444336
    10. '(re' → logprob: -15.393423080444336

Token 384: '.floor' (ID: 23934)
  Prédit: '.floor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.floor' → logprob: -0.0030983351171016693
    2. 'floor' → logprob: -5.878098487854004
    3. '.tr' → logprob: -9.003098487854004
    4. '.' → logprob: -9.253098487854004
    5. '.f' → logprob: -10.378098487854004
    6. 'tr' → logprob: -11.003098487854004
    7. '_floor' → logprob: -11.003098487854004
    8. ' floor' → logprob: -12.378098487854004
    9. 'f' → logprob: -13.503098487854004
    10. '.ceil' → logprob: -13.753098487854004

Token 385: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.4741089344024658
    2. 'res' → logprob: -0.9741089344024658
    3. ' res' → logprob: -10.474108695983887
    4. '               ' → logprob: -13.349108695983887
    5. '	res' → logprob: -14.349108695983887
    6. '                   ' → logprob: -14.599108695983887
    7. ',res' → logprob: -15.224108695983887
    8. '(' → logprob: -15.474108695983887
    9. '$res' → logprob: -15.974108695983887
    10. '=res' → logprob: -15.974108695983887

Token 386: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0210412610322237
    2. '))
' → logprob: -4.021041393280029
    3. ' ))' → logprob: -6.146041393280029
    4. '               ' → logprob: -8.021040916442871
    5. ' ))
' → logprob: -8.896040916442871
    6. '                   ' → logprob: -9.396040916442871
    7. ')' → logprob: -9.521040916442871
    8. '()))' → logprob: -10.271040916442871
    9. '           ' → logprob: -10.521040916442871
    10. '))
' → logprob: -10.771040916442871

Token 387: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07673361897468567
    2. ' else' → logprob: -2.9517335891723633
    3. 'else' → logprob: -4.076733589172363
    4. '<|end|>' → logprob: -6.201733589172363
    5. ')' → logprob: -6.451733589172363
    6. '       ' → logprob: -8.201733589172363
    7. 'elif' → logprob: -8.326733589172363
    8. '<|end|>' → logprob: -8.826733589172363
    9. ' elif' → logprob: -9.326733589172363
    10. '            
' → logprob: -9.451733589172363

Token 388: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.5768365263938904
    2. 'else' (adapté à ' else') → logprob: -0.9518365263938904
    3. '           ' → logprob: -2.951836585998535
    4. '	else' → logprob: -10.701836585998535
    5. 'elif' → logprob: -11.576836585998535
    6. '       ' → logprob: -12.076836585998535
    7. ' elif' → logprob: -12.576836585998535
    8. '		' → logprob: -13.201836585998535
    9. '   ' → logprob: -13.326836585998535
    10. ')' → logprob: -13.701836585998535

Token 389: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6948964595794678
    2. '               ' → logprob: -0.9448964595794678
    3. ':
' → logprob: -2.1948964595794678
    4. '           ' → logprob: -8.694896697998047
    5. ' :' → logprob: -8.694896697998047
    6. ',' → logprob: -8.944896697998047
    7. ' :
' → logprob: -9.319896697998047
    8. '              ' → logprob: -9.694896697998047
    9. ':int' → logprob: -10.194896697998047
    10. ':return' → logprob: -10.569896697998047

Token 390: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006440619006752968
    2. 'int' → logprob: -5.25644063949585
    3. ' int' → logprob: -6.88144063949585
    4. '                ' → logprob: -9.131440162658691
    5. '            ' → logprob: -10.881440162658691
    6. 'approx' → logprob: -11.256440162658691
    7. '			' → logprob: -11.631440162658691
    8. '           ' → logprob: -11.631440162658691
    9. '              ' → logprob: -11.881440162658691
    10. '	           ' → logprob: -13.006440162658691

Token 391: ' approx' (ID: 33956)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.11286212503910065
    2. ' int' → logprob: -2.2378621101379395
    3. '               ' → logprob: -10.487862586975098
    4. '            ' → logprob: -12.487862586975098
    5. '           ' → logprob: -13.112862586975098
    6. '(int' → logprob: -13.737862586975098
    7. '                ' → logprob: -13.987862586975098
    8. 'approx' (adapté à ' approx') → logprob: -14.237862586975098
    9. '=int' → logprob: -14.362862586975098
    10. '	int' → logprob: -14.487862586975098

Token 392: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038047004491090775
    2. '=' → logprob: -3.2880470752716064
    3. '=int' → logprob: -12.163046836853027
    4. ' ' → logprob: -15.913046836853027
    5. ':' → logprob: -15.913046836853027
    6. 'int' → logprob: -16.913047790527344
    7. ' =
' → logprob: -17.163047790527344
    8. ')' → logprob: -17.538047790527344
    9. '=
' → logprob: -17.788047790527344
    10. ':int' → logprob: -18.163047790527344

Token 393: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.001170460251159966
    2. ' int' → logprob: -6.751170635223389
    3. 'math' → logprob: -16.001171112060547
    4. '(int' → logprob: -17.126171112060547
    5. '  ' → logprob: -18.501171112060547
    6. '[int' → logprob: -18.501171112060547
    7. '<int' → logprob: -18.751171112060547
    8. '=int' → logprob: -18.876171112060547
    9. ' math' → logprob: -19.001171112060547
    10. ':int' → logprob: -19.376171112060547

Token 394: '(math' (ID: 86464)
  Prédit: '(math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(math' → logprob: -2.534558552724775e-05
    2. 'math' → logprob: -10.625025749206543
    3. '(' → logprob: -13.875025749206543
    4. ' math' → logprob: -17.750024795532227
    5. '(max' → logprob: -17.750024795532227
    6. '(round' → logprob: -19.125024795532227
    7. '(mat' → logprob: -19.125024795532227
    8. '.math' → logprob: -19.375024795532227
    9. '(abs' → logprob: -19.375024795532227
    10. '((' → logprob: -19.375024795532227

Token 395: '.ceil' (ID: 60295)
  Prédit: '.ceil'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ceil' → logprob: -0.011639389209449291
    2. 'ceil' → logprob: -4.511639595031738
    3. '.floor' → logprob: -7.511639595031738
    4. 'floor' → logprob: -10.636639595031738
    5. '.tr' → logprob: -10.886639595031738
    6. 'tr' → logprob: -14.261639595031738
    7. 'ce' → logprob: -15.136639595031738
    8. '.c' → logprob: -15.136639595031738
    9. '.ce' → logprob: -15.261639595031738
    10. ' ceil' → logprob: -16.011638641357422

Token 396: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -9.662937372922897e-05
    2. 'res' → logprob: -9.250096321105957
    3. ' (' → logprob: -15.750096321105957
    4. ')' → logprob: -15.875096321105957
    5. ',res' → logprob: -16.625097274780273
    6. '(' → logprob: -16.875097274780273
    7. ' res' → logprob: -17.125097274780273
    8. '=res' → logprob: -18.750097274780273
    9. ')(' → logprob: -19.250097274780273
    10. '(re' → logprob: -19.625097274780273

Token 397: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0002444125711917877
    2. '))
' → logprob: -9.625244140625
    3. ')' → logprob: -9.750244140625
    4. '           ' → logprob: -10.125244140625
    5. ' ))' → logprob: -10.125244140625
    6. ')))' → logprob: -10.750244140625
    7. '               ' → logprob: -12.375244140625
    8. '       ' → logprob: -12.375244140625
    9. '()))' → logprob: -12.375244140625
    10. '   ' → logprob: -14.125244140625

Token 398: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 399: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08214389532804489
    2. ' return' → logprob: -3.207143783569336
    3. '<|end|>' → logprob: -3.957143783569336
    4. ' ' → logprob: -4.582143783569336
    5. '       ' → logprob: -5.707143783569336
    6. 'return' → logprob: -6.207143783569336
    7. ' 
' → logprob: -6.832143783569336
    8. '            
' → logprob: -7.582143783569336
    9. '               ' → logprob: -8.082143783569336
    10. '<|end|>' → logprob: -8.082143783569336

Token 400: ' nearest' (ID: 35210)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2760588526725769
    2. '#' → logprob: -2.6510589122772217
    3. '           ' → logprob: -2.7760589122772217
    4. ' if' → logprob: -3.1510589122772217
    5. 'for' → logprob: -3.9010589122772217
    6. 'return' → logprob: -4.276058673858643
    7. 'diff' → logprob: -4.526058673858643
    8. 'while' → logprob: -5.151058673858643
    9. ' #' → logprob: -5.401058673858643
    10. 'abs' → logprob: -5.651058673858643

Token 401: ' integer' (ID: 16336)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8045284152030945
    2. 'approx' → logprob: -2.1795284748077393
    3. ' abs' → logprob: -2.4295284748077393
    4. 'abs' → logprob: -2.8045284748077393
    5. ' approximation' → logprob: -3.0545284748077393
    6. 'int' → logprob: -3.5545284748077393
    7. '_abs' → logprob: -3.8045284748077393
    8. ' possible' → logprob: -3.9295284748077393
    9. ' approx' → logprob: -4.05452823638916
    10. ' integer' → logprob: -4.30452823638916

Token 402: ' to' (ID: 316)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12606222927570343
    2. ' if' → logprob: -2.6260621547698975
    3. '<|end|>' → logprob: -4.251062393188477
    4. 'if' → logprob: -4.376062393188477
    5. 'diff' → logprob: -5.376062393188477
    6. ' =' → logprob: -5.751062393188477
    7. '<|end|>' → logprob: -6.626062393188477
    8. ' is' → logprob: -6.876062393188477
    9. '       ' → logprob: -7.001062393188477
    10. '            
' → logprob: -7.251062393188477

Token 403: ' res' (ID: 694)
  Prédit: 'approx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'approx' → logprob: -0.3971402645111084
    2. ' approx' → logprob: -1.7721402645111084
    3. ' res' → logprob: -2.7721402645111084
    4. 'res' → logprob: -3.0221402645111084
    5. 'target' → logprob: -3.3971402645111084
    6. ' target' → logprob: -5.3971405029296875
    7. 'abs' → logprob: -5.8971405029296875
    8. ' abs' → logprob: -6.0221405029296875
    9. ' the' → logprob: -7.0221405029296875
    10. ' approximate' → logprob: -7.3971405029296875

Token 404: ' with' (ID: 483)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20219683647155762
    2. ' =' → logprob: -1.9521968364715576
    3. ',' → logprob: -4.452197074890137
    4. ' if' → logprob: -4.577197074890137
    5. '=' → logprob: -5.202197074890137
    6. '<|end|>' → logprob: -5.327197074890137
    7. '            
' → logprob: -5.952197074890137
    8. '<|end|>' → logprob: -6.702197074890137
    9. '       ' → logprob: -6.827197074890137
    10. '_candidates' → logprob: -7.702197074890137

Token 405: ' abs' (ID: 8443)
  Prédit: ' abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.6369094848632812
    2. 'abs' → logprob: -0.7619094848632812
    3. 'target' → logprob: -6.511909484863281
    4. 'the' → logprob: -7.636909484863281
    5. ' target' → logprob: -7.636909484863281
    6. '(abs' → logprob: -8.011909484863281
    7. ' the' → logprob: -8.011909484863281
    8. ' absolute' → logprob: -8.261909484863281
    9. 'absolute' → logprob: -8.261909484863281
    10. ' an' → logprob: -8.886909484863281

Token 406: ' <=' (ID: 5017)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11908423900604248
    2. 'approx' → logprob: -2.869084358215332
    3. ' less' → logprob: -4.494084358215332
    4. 'less' → logprob: -4.869084358215332
    5. '(abs' → logprob: -4.869084358215332
    6. '<=' → logprob: -5.119084358215332
    7. 'abs' → logprob: -5.119084358215332
    8. ' <=' → logprob: -5.494084358215332
    9. 'target' → logprob: -5.494084358215332
    10. '(target' → logprob: -5.744084358215332

Token 407: ' target' (ID: 3783)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -8.709308167453855e-05
    2. ' target' → logprob: -9.375086784362793
    3. 'max' → logprob: -14.125086784362793
    4. '(target' → logprob: -14.250086784362793
    5. 'int' → logprob: -15.375086784362793
    6. '
' → logprob: -16.12508773803711
    7. '           ' → logprob: -16.87508773803711
    8. '	target' → logprob: -17.00008773803711
    9. '[target' → logprob: -17.00008773803711
    10. '   ' → logprob: -17.25008773803711

Token 408: '_abs' (ID: 81310)
  Prédit: '_abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_abs' → logprob: -0.01180244330316782
    2. 'abs' → logprob: -4.886802673339844
    3. '(abs' → logprob: -6.011802673339844
    4. '(target' → logprob: -7.636802673339844
    5. 'target' → logprob: -8.136802673339844
    6. 'int' → logprob: -8.261802673339844
    7. '_' → logprob: -8.761802673339844
    8. '_int' → logprob: -9.386802673339844
    9. 'Abs' → logprob: -9.511802673339844
    10. '(' → logprob: -9.761802673339844

Token 409: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011979389004409313
    2. ' if' → logprob: -5.886979579925537
    3. '            
' → logprob: -6.011979579925537
    4. '
' → logprob: -6.136979579925537
    5. '<|end|>' → logprob: -6.636979579925537
    6. ',' → logprob: -6.761979579925537
    7. ' 
' → logprob: -7.261979579925537
    8. '<|end|>' → logprob: -8.261979103088379
    9. ' return' → logprob: -9.136979103088379
    10. ' +' → logprob: -9.136979103088379

Token 410: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11744361370801926
    2. '<|end|>' → logprob: -2.617443561553955
    3. ' if' → logprob: -3.742443561553955
    4. ' ' → logprob: -5.867443561553955
    5. '<|end|>' → logprob: -6.242443561553955
    6. '       ' → logprob: -6.242443561553955
    7. ',' → logprob: -6.492443561553955
    8. ')' → logprob: -6.992443561553955
    9. ' and' → logprob: -7.242443561553955
    10. ' return' → logprob: -7.242443561553955

Token 411: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.25923264026641846
    2. ' if' → logprob: -2.134232521057129
    3. ' for' → logprob: -3.259232521057129
    4. 'if' → logprob: -3.884232521057129
    5. 'for' → logprob: -4.384232521057129
    6. 'diff' → logprob: -4.384232521057129
    7. ' candidates' → logprob: -4.759232521057129
    8. ' diff' → logprob: -5.634232521057129
    9. '
' → logprob: -5.884232521057129
    10. 'candidate' → logprob: -6.134232521057129

Token 412: ' fix' (ID: 9295)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15793123841285706
    2. ' if' → logprob: -2.907931327819824
    3. 'if' → logprob: -3.032931327819824
    4. 'for' → logprob: -4.282931327819824
    5. ' for' → logprob: -4.657931327819824
    6. 'diff' → logprob: -4.907931327819824
    7. ' candidates' → logprob: -5.782931327819824
    8. 'return' → logprob: -6.282931327819824
    9. 'candidate' → logprob: -6.532931327819824
    10. ' return' → logprob: -6.907931327819824

Token 413: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.32320067286491394
    2. 'if' → logprob: -1.5732007026672363
    3. '           ' → logprob: -2.9482007026672363
    4. ' for' → logprob: -5.073200702667236
    5. 'for' → logprob: -6.073200702667236
    6. 'while' → logprob: -6.198200702667236
    7. ' while' → logprob: -6.448200702667236
    8. 'offset' → logprob: -6.948200702667236
    9. 'approx' → logprob: -7.198200702667236
    10. 'return' → logprob: -7.823200702667236

Token 414: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.1673051118850708
    2. ' abs' → logprob: -2.2923049926757812
    3. 'approx' → logprob: -3.0423049926757812
    4. '(abs' → logprob: -5.417304992675781
    5. ' approx' → logprob: -7.292304992675781
    6. 'math' → logprob: -10.042304992675781
    7. '   ' → logprob: -10.042304992675781
    8. '(' → logprob: -11.292304992675781
    9. ' (' → logprob: -11.292304992675781
    10. ' ' → logprob: -11.542304992675781

Token 415: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -8.180258191714529e-06
    2. '(res' → logprob: -13.625008583068848
    3. 'approx' → logprob: -13.875008583068848
    4. '(target' → logprob: -14.000008583068848
    5. '(int' → logprob: -14.250008583068848
    6. 'int' → logprob: -14.250008583068848
    7. ' (' → logprob: -14.375008583068848
    8. 'res' → logprob: -14.875008583068848
    9. '```' → logprob: -15.250008583068848
    10. 'target' → logprob: -15.375008583068848

Token 416: 'approx' (ID: 76945)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005271345842629671
    2. 'approx' → logprob: -5.2552714347839355
    3. ')' → logprob: -10.380270957946777
    4. 'int' → logprob: -13.505270957946777
    5. 'approximately' → logprob: -13.880270957946777
    6. 'appro' → logprob: -14.380270957946777
    7. 'a' → logprob: -14.755270957946777
    8. ' (' → logprob: -15.005270957946777
    9. '(
' → logprob: -15.005270957946777
    10. ' approx' → logprob: -15.005270957946777

Token 417: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.048896417021751404
    2. ')>' → logprob: -3.048896312713623
    3. ' )' → logprob: -9.923896789550781
    4. '(' → logprob: -10.173896789550781
    5. '>' → logprob: -10.173896789550781
    6. 'a' → logprob: -10.673896789550781
    7. 'approx' → logprob: -10.798896789550781
    8. ')>=' → logprob: -10.923896789550781
    9. ')>>' → logprob: -11.548896789550781
    10. 'res' → logprob: -11.548896789550781

Token 418: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.2815611660480499
    2. ' >' → logprob: -1.4065611362457275
    3. '()>' → logprob: -8.531560897827148
    4. ')' → logprob: -9.281560897827148
    5. '<=' → logprob: -10.531560897827148
    6. ' <=' → logprob: -10.656560897827148
    7. ' ' → logprob: -11.281560897827148
    8. ')>' → logprob: -11.281560897827148
    9. '>=' → logprob: -12.031560897827148
    10. '()' → logprob: -12.031560897827148

Token 419: ' target' (ID: 3783)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.3868781626224518
    2. ' target' → logprob: -1.1368781328201294
    3. '(target' → logprob: -13.26187801361084
    4. '	target' → logprob: -13.38687801361084
    5. 't' → logprob: -13.63687801361084
    6. ' ' → logprob: -14.38687801361084
    7. '           ' → logprob: -15.01187801361084
    8. '   ' → logprob: -15.01187801361084
    9. 'taget' → logprob: -15.38687801361084
    10. ' targ' → logprob: -15.76187801361084

Token 420: '_abs' (ID: 81310)
  Prédit: '_abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_abs' → logprob: -8.232493564719334e-05
    2. 'abs' → logprob: -9.625082015991211
    3. 'Abs' → logprob: -11.625082015991211
    4. '_' → logprob: -13.000082015991211
    5. 'target' → logprob: -13.125082015991211
    6. '```' → logprob: -14.500082015991211
    7. '_target' → logprob: -14.500082015991211
    8. '(abs' → logprob: -14.875082015991211
    9. 's' → logprob: -15.750082015991211
    10. '	' → logprob: -16.25008201599121

Token 421: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.36597955226898193
    2. ':' → logprob: -1.990979552268982
    3. ' if' → logprob: -2.6159796714782715
    4. '               ' → logprob: -2.8659796714782715
    5. ':
' → logprob: -3.4909796714782715
    6. ' and' → logprob: -6.1159796714782715
    7. '            ' → logprob: -6.6159796714782715
    8. 'if' → logprob: -6.8659796714782715
    9. ',' → logprob: -7.2409796714782715
    10. '            
' → logprob: -7.3659796714782715

Token 422: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005096645909361541
    2. ' if' → logprob: -7.750509738922119
    3. '               ' → logprob: -9.875509262084961
    4. ',' → logprob: -12.250509262084961
    5. '       ' → logprob: -12.375509262084961
    6. '            
' → logprob: -12.500509262084961
    7. ' +' → logprob: -13.250509262084961
    8. '+' → logprob: -13.500509262084961
    9. '            ' → logprob: -13.875509262084961
    10. 'if' → logprob: -14.000509262084961

Token 423: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.050221242010593414
    2. ' if' → logprob: -3.0502212047576904
    3. 'if' (adapté à ' if') → logprob: -6.5502214431762695
    4. '            
' → logprob: -9.92522144317627
    5. '       ' → logprob: -10.05022144317627
    6. '               ' → logprob: -10.80022144317627
    7. ' 
' → logprob: -11.30022144317627
    8. ' while' → logprob: -11.42522144317627
    9. '            ' → logprob: -11.55022144317627
    10. '
' → logprob: -11.80022144317627

Token 424: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.04859872907400131
    2. ' abs' → logprob: -3.0485987663269043
    3. '           ' → logprob: -12.048598289489746
    4. '(abs' → logprob: -12.173598289489746
    5. '               ' → logprob: -15.548598289489746
    6. '   ' → logprob: -16.423599243164062
    7. '            ' → logprob: -18.173599243164062
    8. 'math' → logprob: -18.298599243164062
    9. '       ' → logprob: -18.423599243164062
    10. ' ' → logprob: -18.423599243164062

Token 425: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.320199877838604e-07
    2. '(
' → logprob: -15.25
    3. ' (' → logprob: -16.625
    4. ')' → logprob: -18.625
    5. '
' → logprob: -18.75
    6. '((' → logprob: -19.0
    7. '(

' → logprob: -19.25
    8. 'approx' → logprob: -19.375
    9. '   ' → logprob: -19.625
    10. '```' → logprob: -19.875

Token 426: 'approx' (ID: 76945)
  Prédit: 'approx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'approx' → logprob: -0.4740873873233795
    2. '(' → logprob: -0.9740873575210571
    3. 'approximately' → logprob: -11.849087715148926
    4. 'appro' → logprob: -13.724087715148926
    5. ' approx' → logprob: -13.849087715148926
    6. ')' → logprob: -14.349087715148926
    7. 'Approx' → logprob: -14.849087715148926
    8. 'apro' → logprob: -16.22408676147461
    9. '{' → logprob: -16.84908676147461
    10. '   ' → logprob: -17.59908676147461

Token 427: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029121967032551765
    2. '>' → logprob: -4.1541218757629395
    3. ')>' → logprob: -4.7791218757629395
    4. ' >' → logprob: -5.4041218757629395
    5. ' )' → logprob: -9.279122352600098
    6. '>)' → logprob: -13.154122352600098
    7. '()>' → logprob: -13.654122352600098
    8. '[' → logprob: -14.029122352600098
    9. ')>
' → logprob: -14.404122352600098
    10. ' ' → logprob: -14.654122352600098

Token 428: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.1427212506532669
    2. '>' → logprob: -2.017721176147461
    3. ' <=' → logprob: -10.392721176147461
    4. ' >
' → logprob: -12.517721176147461
    5. ' ' → logprob: -12.892721176147461
    6. ')' → logprob: -12.892721176147461
    7. '<=' → logprob: -13.017721176147461
    8. ')>' → logprob: -14.392721176147461
    9. '()>' → logprob: -14.767721176147461
    10. ' >
' → logprob: -14.767721176147461

Token 429: ' target' (ID: 3783)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.06196925416588783
    2. ' target' → logprob: -2.81196928024292
    3. '	target' → logprob: -14.561968803405762
    4. '(target' → logprob: -14.936968803405762
    5. 't' → logprob: -15.061968803405762
    6. '   ' → logprob: -16.186969757080078
    7. ' ' → logprob: -16.686969757080078
    8. '[target' → logprob: -16.686969757080078
    9. 'taget' → logprob: -17.186969757080078
    10. 'arget' → logprob: -17.186969757080078

Token 430: '_abs' (ID: 81310)
  Prédit: '_abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_abs' → logprob: -6.630610641877865e-06
    2. '_' → logprob: -12.375006675720215
    3. 'Abs' → logprob: -13.375006675720215
    4. '_target' → logprob: -14.750006675720215
    5. 'abs' → logprob: -15.500006675720215
    6. '_
' → logprob: -16.8750057220459
    7. '_opt' → logprob: -17.2500057220459
    8. 'target' → logprob: -17.5000057220459
    9. '__' → logprob: -17.6250057220459
    10. ''_' → logprob: -18.0000057220459

Token 431: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2305455207824707
    2. ':
' → logprob: -1.6055455207824707
    3. '               ' → logprob: -5.980545520782471
    4. ':return' → logprob: -6.480545520782471
    5. '           ' → logprob: -7.730545520782471
    6. ' and' → logprob: -8.730545043945312
    7. '):
' → logprob: -9.230545043945312
    8. ',' → logprob: -9.480545043945312
    9. '       ' → logprob: -9.730545043945312
    10. ':
' → logprob: -9.855545043945312

Token 432: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0036747753620147705
    2. '           ' → logprob: -6.1286749839782715
    3. ' return' → logprob: -6.7536749839782715
    4. 'return' → logprob: -9.003674507141113
    5. 'approx' → logprob: -9.878674507141113
    6. '                ' → logprob: -10.128674507141113
    7. '            ' → logprob: -11.003674507141113
    8. '                   ' → logprob: -11.128674507141113
    9. ',' → logprob: -11.128674507141113
    10. ')' → logprob: -11.753674507141113

Token 433: ' #' (ID: 1069)
  Prédit: 'approx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'approx' → logprob: -0.4752214550971985
    2. 'if' → logprob: -2.1002213954925537
    3. '               ' → logprob: -2.1002213954925537
    4. 'return' → logprob: -2.3502213954925537
    5. '           ' → logprob: -3.8502213954925537
    6. ' if' → logprob: -4.350221633911133
    7. ' return' → logprob: -6.350221633911133
    8. ' approx' → logprob: -6.600221633911133
    9. 'appro' → logprob: -7.850221633911133
    10. '                   ' → logprob: -9.225221633911133

Token 434: ' choose' (ID: 5655)
  Prédit: 'approx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'approx' → logprob: -0.33767208456993103
    2. 'if' → logprob: -2.087671995162964
    3. 'return' → logprob: -2.087671995162964
    4. '               ' → logprob: -3.712671995162964
    5. '           ' → logprob: -4.837672233581543
    6. ' if' → logprob: -6.087672233581543
    7. ' approx' → logprob: -6.212672233581543
    8. ' return' → logprob: -6.837672233581543
    9. 'appro' → logprob: -7.337672233581543
    10. '                   ' → logprob: -9.337672233581543

Token 435: ' sign' (ID: 2232)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.25931259989738464
    2. 'approx' → logprob: -2.134312629699707
    3. '-' → logprob: -2.759312629699707
    4. 'target' → logprob: -3.509312629699707
    5. 'int' → logprob: -5.384312629699707
    6. ' -' → logprob: -5.634312629699707
    7. ' ' → logprob: -6.259312629699707
    8. '           ' → logprob: -6.509312629699707
    9. '(' → logprob: -6.759312629699707
    10. 'math' → logprob: -7.384312629699707

Token 436: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23687081038951874
    2. '=' → logprob: -2.111870765686035
    3. ' of' → logprob: -3.861870765686035
    4. ' if' → logprob: -3.861870765686035
    5. ':' → logprob: -4.236870765686035
    6. 'approx' → logprob: -4.361870765686035
    7. '           ' → logprob: -5.361870765686035
    8. 'of' → logprob: -5.486870765686035
    9. 'if' → logprob: -5.861870765686035
    10. '               ' → logprob: -5.861870765686035

Token 437: ' approx' (ID: 33956)
  Prédit: 'approx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'approx' → logprob: -0.28510305285453796
    2. 'target' → logprob: -2.1601030826568604
    3. 'a' → logprob: -2.5351030826568604
    4. 'res' → logprob: -3.5351030826568604
    5. 'b' → logprob: -4.160102844238281
    6. ' approx' → logprob: -6.160102844238281
    7. 'op' → logprob: -6.410102844238281
    8. '(' → logprob: -6.660102844238281
    9. ' target' → logprob: -7.035102844238281
    10. ' res' → logprob: -7.535102844238281

Token 438: ':
' (ID: 734)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5466711521148682
    2. '=' → logprob: -1.4216711521148682
    3. ':' → logprob: -3.171671152114868
    4. ' if' → logprob: -3.296671152114868
    5. ' and' → logprob: -3.421671152114868
    6. ',' → logprob: -3.671671152114868
    7. '(' → logprob: -5.171670913696289
    8. ' *' → logprob: -5.296670913696289
    9. '(-' → logprob: -5.671670913696289
    10. '=-' → logprob: -5.671670913696289

Token 439: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3456712067127228
    2. ' if' → logprob: -1.8456711769104004
    3. ' -' → logprob: -2.8456711769104004
    4. '                ' → logprob: -3.0956711769104004
    5. '-' → logprob: -4.9706711769104
    6. ' ' → logprob: -4.9706711769104
    7. '1' → logprob: -5.0956711769104
    8. '0' → logprob: -5.0956711769104
    9. '                   ' → logprob: -7.0956711769104
    10. ' return' → logprob: -7.2206711769104

Token 440: ' approx' (ID: 33956)
  Prédit: 'approx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'approx' (adapté à ' approx') → logprob: -0.9252094626426697
    2. ' if' → logprob: -1.1752095222473145
    3. 'if' → logprob: -2.1752095222473145
    4. ' approx' → logprob: -2.4252095222473145
    5. ' return' → logprob: -3.3002095222473145
    6. 'return' → logprob: -3.8002095222473145
    7. '               ' → logprob: -4.1752095222473145
    8. 'sign' → logprob: -4.5502095222473145
    9. ' sign' → logprob: -5.0502095222473145
    10. '           ' → logprob: -8.300209045410156

Token 441: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2958448827266693
    2. '=' → logprob: -1.4208449125289917
    3. ' -=' → logprob: -4.670845031738281
    4. ' *=' → logprob: -6.170845031738281
    5. ' ' → logprob: -7.045845031738281
    6. 'sign' → logprob: -7.295845031738281
    7. ' +=' → logprob: -8.045845031738281
    8. '-=' → logprob: -8.420845031738281
    9. '*=' → logprob: -8.420845031738281
    10. '_sign' → logprob: -8.795845031738281

Token 442: ' int' (ID: 677)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.34018099308013916
    2. ' ' → logprob: -2.7151808738708496
    3. 'int' → logprob: -2.8401808738708496
    4. ' math' → logprob: -2.8401808738708496
    5. ' int' → logprob: -3.2151808738708496
    6. 'target' → logprob: -3.4651808738708496
    7. ' target' → logprob: -3.9651808738708496
    8. 'math' → logprob: -4.84018087387085
    9. 'approx' → logprob: -5.71518087387085
    10. ' (' → logprob: -6.46518087387085

Token 443: '(res' (ID: 8331)
  Prédit: '(math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(math' → logprob: -0.07957259565591812
    2. '(' → logprob: -2.8295726776123047
    3. '(target' → logprob: -4.454572677612305
    4. '(res' → logprob: -5.579572677612305
    5. '((' → logprob: -6.329572677612305
    6. '(abs' → logprob: -8.954572677612305
    7. 'math' → logprob: -10.704572677612305
    8. '(-' → logprob: -11.579572677612305
    9. '(app' → logprob: -11.579572677612305
    10. 'approx' → logprob: -11.579572677612305

Token 444: '//' (ID: 393)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.39640384912490845
    2. '/math' → logprob: -1.8964037895202637
    3. '//' → logprob: -2.5214037895202637
    4. ' /' → logprob: -3.3964037895202637
    5. '>' → logprob: -3.5214037895202637
    6. ' and' → logprob: -4.521403789520264
    7. ' >' → logprob: -5.021403789520264
    8. 'and' → logprob: -5.021403789520264
    9. ' //' → logprob: -5.521403789520264
    10. '/sign' → logprob: -6.396403789520264

Token 445: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004224515287205577
    2. 'b' → logprob: -8.250422477722168
    3. ' ' → logprob: -8.750422477722168
    4. 'abs' → logprob: -14.375422477722168
    5. ' b' → logprob: -14.375422477722168
    6. '   ' → logprob: -14.875422477722168
    7. 'res' → logprob: -15.500422477722168
    8. '`' → logprob: -15.750422477722168
    9. '```' → logprob: -15.875422477722168
    10. '  ' → logprob: -16.12542152404785

Token 446: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005246769287623465
    2. ' )' → logprob: -8.250524520874023
    3. ' if' → logprob: -9.250524520874023
    4. ')
' → logprob: -9.375524520874023
    5. '0' → logprob: -10.750524520874023
    6. ' -' → logprob: -11.250524520874023
    7. '<|end|>' → logprob: -11.250524520874023
    8. ')#' → logprob: -11.875524520874023
    9. '               ' → logprob: -12.250524520874023
    10. ')-' → logprob: -12.875524520874023

Token 447: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 448: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 449: ' redundancy' (ID: 170540)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9068418145179749
    2. '<|end|>' → logprob: -1.15684175491333
    3. ' ' → logprob: -1.65684175491333
    4. ')' → logprob: -2.65684175491333
    5. '1' → logprob: -4.40684175491333
    6. '.' → logprob: -6.90684175491333
    7. '               ' → logprob: -7.15684175491333
    8. 'abs' → logprob: -7.15684175491333
    9. 'None' → logprob: -7.15684175491333
    10. '           ' → logprob: -7.28184175491333

Token 450: ' but' (ID: 889)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 451: ' keep' (ID: 3357)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 452: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 453: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23184870183467865
    2. '               ' → logprob: -2.35684871673584
    3. '<|end|>' → logprob: -2.85684871673584
    4. ')' → logprob: -3.73184871673584
    5. '       ' → logprob: -3.98184871673584
    6. ' ' → logprob: -6.35684871673584
    7. ' if' → logprob: -6.85684871673584
    8. '
' → logprob: -6.85684871673584
    9. ' else' → logprob: -7.10684871673584
    10. 'return' → logprob: -7.35684871673584

Token 454: ' #' (ID: 1069)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'target' → logprob: -1.466239333152771
    2. 'approx' → logprob: -1.466239333152771
    3. '0' → logprob: -1.966239333152771
    4. ' if' → logprob: -2.2162394523620605
    5. ' target' → logprob: -2.3412394523620605
    6. '               ' → logprob: -2.5912394523620605
    7. 'if' → logprob: -3.7162394523620605
    8. 'return' → logprob: -3.7162394523620605
    9. '           ' → logprob: -3.9662394523620605
    10. ' approx' → logprob: -4.0912394523620605

Token 455: ' truncate' (ID: 126309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.027272412553429604
    2. 'return' → logprob: -4.6522722244262695
    3. ' if' → logprob: -4.7772722244262695
    4. '               ' → logprob: -5.2772722244262695
    5. 'while' → logprob: -6.2772722244262695
    6. '           ' → logprob: -6.5272722244262695
    7. '#' → logprob: -8.40227222442627
    8. 'sign' → logprob: -9.02727222442627
    9. ' return' → logprob: -10.02727222442627
    10. '                   ' → logprob: -11.40227222442627

Token 456: ' abs' (ID: 8443)
  Prédit: 'tow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tow' → logprob: -0.9426975846290588
    2. ' toward' → logprob: -1.442697525024414
    3. 'approx' → logprob: -1.817697525024414
    4. ' towards' → logprob: -2.192697525024414
    5. ' if' → logprob: -3.567697525024414
    6. '           ' → logprob: -3.692697525024414
    7. '               ' → logprob: -4.067697525024414
    8. 'if' → logprob: -4.192697525024414
    9. ' to' → logprob: -5.942697525024414
    10. ' approximation' → logprob: -5.942697525024414

Token 457: ' to' (ID: 316)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.025945845991373062
    2. 'ion' → logprob: -4.775945663452148
    3. '           ' → logprob: -5.400945663452148
    4. 'approx' → logprob: -5.525945663452148
    5. '               ' → logprob: -5.775945663452148
    6. 'tion' → logprob: -6.025945663452148
    7. '(abs' → logprob: -7.525945663452148
    8. '       ' → logprob: -8.025945663452148
    9. 'value' → logprob: -8.150945663452148
    10. 'tow' → logprob: -8.275945663452148

Token 458: ' target' (ID: 3783)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.1270289123058319
    2. ' target' → logprob: -2.1270289421081543
    3. 'int' → logprob: -10.252028465270996
    4. ' int' → logprob: -10.877028465270996
    5. ' abs' → logprob: -11.377028465270996
    6. 'the' → logprob: -12.252028465270996
    7. 'abs' → logprob: -12.377028465270996
    8. '0' → logprob: -12.377028465270996
    9. '(target' → logprob: -12.502028465270996
    10. '[target' → logprob: -12.752028465270996

Token 459: '_abs' (ID: 81310)
  Prédit: '_abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_abs' → logprob: -0.0008039106614887714
    2. '_' → logprob: -8.00080394744873
    3. 'abs' → logprob: -8.00080394744873
    4. '           ' → logprob: -9.87580394744873
    5. '               ' → logprob: -10.25080394744873
    6. '(abs' → logprob: -10.37580394744873
    7. 'Abs' → logprob: -12.00080394744873
    8. '_target' → logprob: -13.37580394744873
    9. 'approx' → logprob: -13.37580394744873
    10. ')' → logprob: -13.87580394744873

Token 460: ' with' (ID: 483)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.013075760565698147
    2. ' if' → logprob: -5.138075828552246
    3. ' =' → logprob: -6.013075828552246
    4. '
' → logprob: -6.138075828552246
    5. '=' → logprob: -7.513075828552246
    6. ' -' → logprob: -7.638075828552246
    7. ',' → logprob: -7.763075828552246
    8. '           ' → logprob: -8.138075828552246
    9. ' *' → logprob: -8.888075828552246
    10. '-' → logprob: -8.888075828552246

Token 461: ' sign' (ID: 2232)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.16444003582000732
    2. 'approx' → logprob: -3.039440155029297
    3. '(sign' → logprob: -3.414440155029297
    4. ' sign' → logprob: -3.414440155029297
    5. 'the' → logprob: -4.789440155029297
    6. ' (' → logprob: -5.539440155029297
    7. 'int' → logprob: -5.664440155029297
    8. 'math' → logprob: -5.914440155029297
    9. ' math' → logprob: -6.039440155029297
    10. 'correct' → logprob: -6.039440155029297

Token 462: ' of' (ID: 328)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12951673567295074
    2. ' if' → logprob: -2.629516839981079
    3. ' =' → logprob: -3.629516839981079
    4. '=' → logprob: -4.7545166015625
    5. '(' → logprob: -6.0045166015625
    6. ' (' → logprob: -6.5045166015625
    7. ',' → logprob: -6.8795166015625
    8. '           ' → logprob: -7.0045166015625
    9. '
' → logprob: -7.2545166015625
    10. 'if' → logprob: -7.3795166015625

Token 463: ' approx' (ID: 33956)
  Prédit: 'approx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'approx' → logprob: -0.028085604310035706
    2. ' approx' → logprob: -3.653085708618164
    3. 'res' → logprob: -6.903085708618164
    4. ' res' → logprob: -8.153085708618164
    5. '(' → logprob: -8.528085708618164
    6. 'a' → logprob: -8.653085708618164
    7. 'apro' → logprob: -10.903085708618164
    8. ' a' → logprob: -11.153085708618164
    9. ' (' → logprob: -11.278085708618164
    10. 'approximately' → logprob: -11.403085708618164

Token 464: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.011097931303083897
    2. '
' → logprob: -5.8860979080200195
    3. '           ' → logprob: -6.3860979080200195
    4. ' if' → logprob: -6.5110979080200195
    5. ' =' → logprob: -6.6360979080200195
    6. ',' → logprob: -7.1360979080200195
    7. '=' → logprob: -7.2610979080200195
    8. ')' → logprob: -8.38609790802002
    9. ' +' → logprob: -8.76109790802002
    10. '(abs' → logprob: -8.88609790802002

Token 465: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0025699487887322903
    2. 'approx' → logprob: -7.252570152282715
    3. ' approx' → logprob: -8.127570152282715
    4. '           ' → logprob: -8.252570152282715
    5. ' if' → logprob: -8.377570152282715
    6. '                
' → logprob: -9.002570152282715
    7. ')' → logprob: -9.252570152282715
    8. ' return' → logprob: -9.627570152282715
    9. '                ' → logprob: -9.752570152282715
    10. ' abs' → logprob: -9.752570152282715

Token 466: ' approx' (ID: 33956)
  Prédit: 'approx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'approx' (adapté à ' approx') → logprob: -0.10086395591497421
    2. ' approx' → logprob: -3.1008639335632324
    3. '0' → logprob: -4.350863933563232
    4. '               ' → logprob: -4.475863933563232
    5. 'target' → logprob: -4.475863933563232
    6. 'int' → logprob: -5.600863933563232
    7. '1' → logprob: -5.975863933563232
    8. ' -' → logprob: -6.725863933563232
    9. ' target' → logprob: -7.100863933563232
    10. 'math' → logprob: -7.100863933563232

Token 467: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759446620941162
    2. ' =' → logprob: -0.8259446620941162
    3. ' ' → logprob: -13.200944900512695
    4. ' *=' → logprob: -13.700944900512695
    5. '*=' → logprob: -13.825944900512695
    6. 'sign' → logprob: -15.325944900512695
    7. 's' → logprob: -15.825944900512695
    8. '=int' → logprob: -15.950944900512695
    9. '   ' → logprob: -16.575944900512695
    10. '=
' → logprob: -16.825944900512695

Token 468: ' (' (ID: 350)
  Prédit: ' target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' target' → logprob: -1.231283187866211
    2. ' int' → logprob: -1.481283187866211
    3. 'target' → logprob: -1.731283187866211
    4. 'int' → logprob: -1.856283187866211
    5. ' (' → logprob: -2.856283187866211
    6. ' math' → logprob: -2.856283187866211
    7. 'approx' → logprob: -4.481283187866211
    8. 'math' → logprob: -4.981283187866211
    9. '(target' → logprob: -5.106283187866211
    10. '(' → logprob: -6.106283187866211

Token 469: 'target' (ID: 10857)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.9991345405578613
    2. 'target' → logprob: -1.1241345405578613
    3. '-target' → logprob: -1.4991345405578613
    4. '1' → logprob: -3.3741345405578613
    5. 'approx' → logprob: -3.3741345405578613
    6. 'int' → logprob: -4.999134540557861
    7. 'abs' → logprob: -6.249134540557861
    8. '-(' → logprob: -6.749134540557861
    9. '-sign' → logprob: -6.874134540557861
    10. '-int' → logprob: -7.124134540557861

Token 470: '_abs' (ID: 81310)
  Prédit: '_abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_abs' → logprob: -0.0007288746419362724
    2. '_' → logprob: -7.750729084014893
    3. 'abs' → logprob: -8.375728607177734
    4. 'Abs' → logprob: -10.000728607177734
    5. '_sign' → logprob: -12.000728607177734
    6. '.abs' → logprob: -12.625728607177734
    7. '_target' → logprob: -13.625728607177734
    8. '(abs' → logprob: -13.750728607177734
    9. '```' → logprob: -13.875728607177734
    10. '`' → logprob: -14.000728607177734

Token 471: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6454032063484192
    2. ' *' → logprob: -0.7704032063484192
    3. ')' → logprob: -4.7704033851623535
    4. '*' → logprob: -5.7704033851623535
    5. 'if' → logprob: -7.5204033851623535
    6. ')*' → logprob: -7.7704033851623535
    7. ' ' → logprob: -9.645402908325195
    8. ' )' → logprob: -9.770402908325195
    9. ')*(' → logprob: -10.645402908325195
    10. '*(' → logprob: -12.645402908325195

Token 472: ' approx' (ID: 33956)
  Prédit: 'approx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'approx' → logprob: -0.5238602757453918
    2. ' approx' → logprob: -0.8988602757453918
    3. ' approximate' → logprob: -7.898860454559326
    4. '           ' → logprob: -9.523859977722168
    5. '            ' → logprob: -10.023859977722168
    6. ' res' → logprob: -10.023859977722168
    7. 'res' → logprob: -10.523859977722168
    8. ' apro' → logprob: -10.648859977722168
    9. ' appro' → logprob: -10.773859977722168
    10. ' approxim' → logprob: -10.898859977722168

Token 473: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.06386292725801468
    2. ' >=' → logprob: -2.8138630390167236
    3. '>' → logprob: -6.3138628005981445
    4. ' >' → logprob: -9.938862800598145
    5. ' ' → logprob: -11.188862800598145
    6. '*' → logprob: -11.188862800598145
    7. 's' → logprob: -13.313862800598145
    8. ')>=' → logprob: -13.563862800598145
    9. '   ' → logprob: -13.813862800598145
    10. '≥' → logprob: -14.438862800598145

Token 474: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. '
' → logprob: -18.000017166137695
    4. '   ' → logprob: -18.625017166137695
    5. '۰' → logprob: -19.125017166137695
    6. '=' → logprob: -19.875017166137695
    7. ')' → logprob: -19.875017166137695
    8. '  ' → logprob: -20.500017166137695
    9. '```' → logprob: -20.500017166137695
    10. ' ' → logprob: -20.625017166137695

Token 475: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -18.8750057220459
    4. '۰' → logprob: -19.6250057220459
    5. '  ' → logprob: -20.7500057220459
    6. '０' → logprob: -21.0000057220459
    7. '```' → logprob: -21.2500057220459
    8. '00' → logprob: -21.5000057220459
    9. '1' → logprob: -21.6250057220459
    10. '
' → logprob: -21.7500057220459

Token 476: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.06197989732027054
    2. 'else' → logprob: -2.8119800090789795
    3. '               ' → logprob: -11.936980247497559
    4. '           ' → logprob: -12.561980247497559
    5. '                ' → logprob: -13.561980247497559
    6. '            ' → logprob: -15.561980247497559
    7. '              ' → logprob: -16.061979293823242
    8. '          ' → logprob: -16.061979293823242
    9. '                 ' → logprob: -16.311979293823242
    10. '        ' → logprob: -16.311979293823242

Token 477: ' -' (ID: 533)
  Prédit: '-target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-target' → logprob: -0.37141039967536926
    2. '-' → logprob: -1.8714103698730469
    3. ' -' → logprob: -1.8714103698730469
    4. '-t' → logprob: -7.371410369873047
    5. '-int' → logprob: -7.621410369873047
    6. '   ' → logprob: -7.621410369873047
    7. '-task' → logprob: -8.246410369873047
    8. '  ' → logprob: -9.871410369873047
    9. '-token' → logprob: -10.246410369873047
    10. '-user' → logprob: -10.371410369873047

Token 478: 'target' (ID: 10857)
  Prédit: 'target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -2.935296834039036e-06
    2. ' target' → logprob: -12.75000286102295
    3. '(target' → logprob: -18.625003814697266
    4. '	target' → logprob: -19.375003814697266
    5. '   ' → logprob: -19.500003814697266
    6. 'taget' → logprob: -19.625003814697266
    7. '
' → logprob: -21.000003814697266
    8. '[target' → logprob: -21.375003814697266
    9. '1' → logprob: -21.500003814697266
    10. 'tar' → logprob: -22.125003814697266

Token 479: '_abs' (ID: 81310)
  Prédit: '_abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_abs' → logprob: -2.3795937522663735e-05
    2. 'abs' → logprob: -10.75002384185791
    3. '_ab' → logprob: -13.87502384185791
    4. 'Abs' → logprob: -14.25002384185791
    5. '_target' → logprob: -16.125022888183594
    6. '_opt' → logprob: -16.250022888183594
    7. '_alt' → logprob: -16.250022888183594
    8. '_' → logprob: -16.625022888183594
    9. 'target' → logprob: -16.750022888183594
    10. '_exp' → logprob: -17.000022888183594

Token 480: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00027182576013728976
    2. ')
' → logprob: -8.500271797180176
    3. '           ' → logprob: -10.000271797180176
    4. '               ' → logprob: -11.500271797180176
    5. ' )' → logprob: -11.500271797180176
    6. ')
' → logprob: -14.000271797180176
    7. '       ' → logprob: -14.750271797180176
    8. ')#' → logprob: -15.125271797180176
    9. ')return' → logprob: -15.500271797180176
    10. '))' → logprob: -15.500271797180176

Token 481: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007815150311216712
    2. 'return' → logprob: -7.625781536102295
    3. '		' → logprob: -9.000781059265137
    4. '       ' → logprob: -9.750781059265137
    5. ' return' → logprob: -9.875781059265137
    6. '               ' → logprob: -10.250781059265137
    7. '	return' → logprob: -11.500781059265137
    8. '	       ' → logprob: -12.000781059265137
    9. '
' → logprob: -12.375781059265137
    10. '            
' → logprob: -13.750781059265137

Token 482: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03529171645641327
    2. 'return' (adapté à ' return') → logprob: -4.03529167175293
    3. '       ' → logprob: -4.16029167175293
    4. ' return' → logprob: -6.91029167175293
    5. '               ' → logprob: -8.16029167175293
    6. '
' → logprob: -10.03529167175293
    7. '	       ' → logprob: -10.78529167175293
    8. '	return' → logprob: -11.16029167175293
    9. '		' → logprob: -11.16029167175293
    10. '   ' → logprob: -13.03529167175293

Token 483: ' approx' (ID: 33956)
  Prédit: 'approx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'approx' → logprob: -0.03808269649744034
    2. ' approx' → logprob: -3.2880825996398926
    3. 'appro' → logprob: -11.28808307647705
    4. 'approximately' → logprob: -11.91308307647705
    5. ' approximate' → logprob: -12.03808307647705
    6. '   ' → logprob: -12.28808307647705
    7. 'apro' → logprob: -12.53808307647705
    8. 'int' → logprob: -13.53808307647705
    9. ' ' → logprob: -13.78808307647705
    10. 'app' → logprob: -13.91308307647705

Token 484: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 485: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010312207043170929
    2. '        
' → logprob: -5.385312080383301
    3. '<|end|>' → logprob: -5.885312080383301
    4. '    
' → logprob: -6.510312080383301
    5. '   ' → logprob: -7.010312080383301
    6. '
' → logprob: -8.2603120803833
    7. '<|end|>' → logprob: -9.5103120803833
    8. 'return' → logprob: -9.6353120803833
    9. '  
' → logprob: -10.6353120803833
    10. '            
' → logprob: -10.6353120803833

Token 486: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0047887153923511505
    2. 'return' (adapté à ' return') → logprob: -5.879788875579834
    3. 'if' → logprob: -7.004788875579834
    4. '        
' → logprob: -7.504788875579834
    5. '	' → logprob: -8.754788398742676
    6. '   ' → logprob: -9.129788398742676
    7. ' if' → logprob: -9.379788398742676
    8. '
' → logprob: -10.004788398742676
    9. ' return' → logprob: -10.879788398742676
    10. ' ' → logprob: -11.254788398742676

Token 487: ' {
' (ID: 405)
  Prédit: '{
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{
' → logprob: -0.1714320033788681
    2. '{'' → logprob: -2.4214320182800293
    3. '{' → logprob: -3.0464320182800293
    4. '{"' → logprob: -4.046432018280029
    5. 'add' → logprob: -5.671432018280029
    6. ' {
' → logprob: -9.171431541442871
    7. 'None' → logprob: -10.046431541442871
    8. 'lambda' → logprob: -10.171431541442871
    9. '{
' → logprob: -10.546431541442871
    10. ' {'' → logprob: -10.671431541442871

Token 488: '           ' (ID: 352)
  Prédit: ''+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''+' → logprob: -0.13164862990379333
    2. ''' → logprob: -2.381648540496826
    3. '           ' → logprob: -3.506648540496826
    4. '       ' → logprob: -8.381649017333984
    5. '"+' → logprob: -8.381649017333984
    6. '   ' → logprob: -8.506649017333984
    7. ' '+' → logprob: -8.631649017333984
    8. '"' → logprob: -10.756649017333984
    9. ' '+'' → logprob: -11.006649017333984
    10. '"+"' → logprob: -11.006649017333984

Token 489: ' '+' (ID: 30120)
  Prédit: ''+'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''+' (adapté à ' '+') → logprob: -0.004649422597140074
    2. ''' → logprob: -5.504649639129639
    3. '"+' → logprob: -7.504649639129639
    4. '   ' → logprob: -11.50464916229248
    5. '"+"' → logprob: -11.87964916229248
    6. ' '+' → logprob: -13.37964916229248
    7. '"' → logprob: -14.25464916229248
    8. '           ' → logprob: -14.75464916229248
    9. '       ' → logprob: -15.12964916229248
    10. '+' → logprob: -16.129650115966797

Token 490: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.1593024581670761
    2. ''' → logprob: -2.1593024730682373
    3. ''+' → logprob: -3.6593024730682373
    4. '',' → logprob: -5.284302234649658
    5. '+' → logprob: -7.409302234649658
    6. '':'' → logprob: -8.284302711486816
    7. ' ':' → logprob: -9.659302711486816
    8. '',
' → logprob: -10.159302711486816
    9. ' '+' → logprob: -11.534302711486816
    10. ''):' → logprob: -11.534302711486816

Token 491: ' add' (ID: 1147)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.0013267839094623923
    2. ' add' → logprob: -6.626326560974121
    3. '   ' → logprob: -15.501326560974121
    4. '           ' → logprob: -15.626326560974121
    5. '       ' → logprob: -15.876326560974121
    6. ' ' → logprob: -16.001327514648438
    7. 'lambda' → logprob: -16.376327514648438
    8. '(add' → logprob: -17.001327514648438
    9. '	add' → logprob: -17.001327514648438
    10. '    ' → logprob: -17.501327514648438

Token 492: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00220818561501801
    2. ',
' → logprob: -6.127208232879639
    3. '       ' → logprob: -11.25220775604248
    4. '           ' → logprob: -12.50220775604248
    5. ','' → logprob: -13.25220775604248
    6. ' ,' → logprob: -13.62720775604248
    7. ',
' → logprob: -13.87720775604248
    8. '   ' → logprob: -14.37720775604248
    9. '}' → logprob: -14.37720775604248
    10. ',

' → logprob: -14.50220775604248

Token 493: '           ' (ID: 352)
  Prédit: ''-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''-' → logprob: -0.016142521053552628
    2. '           ' → logprob: -4.14114236831665
    3. ''' → logprob: -10.016142845153809
    4. ' '-' → logprob: -10.891142845153809
    5. '               ' → logprob: -11.391142845153809
    6. '       ' → logprob: -11.516142845153809
    7. ' '-'' → logprob: -12.016142845153809
    8. '            ' → logprob: -12.391142845153809
    9. '-' → logprob: -12.391142845153809
    10. '         ' → logprob: -13.516142845153809

Token 494: ' '-' (ID: 17489)
  Prédit: ''-'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''-' (adapté à ' '-') → logprob: -8.65707261255011e-06
    2. ' '-' → logprob: -12.250008583068848
    3. ' '-'' → logprob: -13.500008583068848
    4. '-' → logprob: -13.875008583068848
    5. '           ' → logprob: -14.250008583068848
    6. '"-' → logprob: -15.125008583068848
    7. ''' → logprob: -15.375008583068848
    8. '   ' → logprob: -16.250009536743164
    9. ' ' → logprob: -16.375009536743164
    10. '       ' → logprob: -16.625009536743164

Token 495: '':' (ID: 2337)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.34999942779541016
    2. '':' → logprob: -1.2249994277954102
    3. ' :' → logprob: -7.47499942779541
    4. '           ' → logprob: -8.09999942779541
    5. '}:' → logprob: -8.34999942779541
    6. ' ':' → logprob: -8.47499942779541
    7. ''):' → logprob: -9.59999942779541
    8. ',' → logprob: -10.34999942779541
    9. '):' → logprob: -10.34999942779541
    10. '':'' → logprob: -11.09999942779541

Token 496: ' sub' (ID: 1543)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.25193724036216736
    2. ' sub' → logprob: -1.5019372701644897
    3. '	sub' → logprob: -13.001936912536621
    4. ' ' → logprob: -13.251936912536621
    5. 'subtract' → logprob: -13.876936912536621
    6. ' subtract' → logprob: -14.126936912536621
    7. '(sub' → logprob: -14.751936912536621
    8. '   ' → logprob: -15.001936912536621
    9. '.sub' → logprob: -15.001936912536621
    10. '```' → logprob: -15.251936912536621

Token 497: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01629476435482502
    2. ',
' → logprob: -4.516294956207275
    3. '           ' → logprob: -5.266294956207275
    4. '       ' → logprob: -10.266294479370117
    5. ','' → logprob: -11.516294479370117
    6. ' ,' → logprob: -11.641294479370117
    7. ',
' → logprob: -12.016294479370117
    8. ',

' → logprob: -13.391294479370117
    9. '<|end|>' → logprob: -13.391294479370117
    10. ',['' → logprob: -13.641294479370117

Token 498: '           ' (ID: 352)
  Prédit: ''*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''*' → logprob: -0.12693314254283905
    2. '           ' → logprob: -2.1269330978393555
    3. ' '*' → logprob: -12.751933097839355
    4. ''' → logprob: -14.376933097839355
    5. '`' → logprob: -14.751933097839355
    6. '       ' → logprob: -15.251933097839355
    7. '('*' → logprob: -15.376933097839355
    8. '"*' → logprob: -15.751933097839355
    9. '		' → logprob: -16.001934051513672
    10. ' '*'' → logprob: -16.001934051513672

Token 499: ' '*' (ID: 34958)
  Prédit: ''*'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''*' (adapté à ' '*') → logprob: -3.690834273584187e-05
    2. ' '*' → logprob: -10.25003719329834
    3. '           ' → logprob: -13.87503719329834
    4. '"*' → logprob: -14.75003719329834
    5. ''' → logprob: -17.000036239624023
    6. ' '*'' → logprob: -17.375036239624023
    7. '   ' → logprob: -17.625036239624023
    8. '       ' → logprob: -17.625036239624023
    9. ' ' → logprob: -17.750036239624023
    10. '('*' → logprob: -18.000036239624023

Token 500: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.0008869222365319729
    2. ''' → logprob: -8.000886917114258
    3. ' ':' → logprob: -8.250886917114258
    4. ':' → logprob: -8.625886917114258
    5. ''*' → logprob: -9.625886917114258
    6. '           ' → logprob: -11.250886917114258
    7. '*' → logprob: -11.750886917114258
    8. '',' → logprob: -12.000886917114258
    9. '':'' → logprob: -12.125886917114258
    10. ''):' → logprob: -12.500886917114258

Token 501: ' mul' (ID: 9975)
  Prédit: 'mul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mul' → logprob: -0.011050531640648842
    2. ' mul' → logprob: -4.511050701141357
    3. ' ' → logprob: -13.7610502243042
    4. 'mu' → logprob: -14.1360502243042
    5. 'multip' → logprob: -14.5110502243042
    6. 'm' → logprob: -16.011051177978516
    7. '.mul' → logprob: -16.761051177978516
    8. '   ' → logprob: -16.886051177978516
    9. '_mul' → logprob: -16.886051177978516
    10. 'mult' → logprob: -17.386051177978516

Token 502: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04074903577566147
    2. ',
' → logprob: -3.5407490730285645
    3. '           ' → logprob: -4.5407490730285645
    4. '       ' → logprob: -8.790748596191406
    5. ','' → logprob: -9.665748596191406
    6. ',
' → logprob: -10.665748596191406
    7. ' ,' → logprob: -11.790748596191406
    8. '   ' → logprob: -12.290748596191406
    9. ',

' → logprob: -12.290748596191406
    10. ',\
' → logprob: -12.915748596191406

Token 503: '           ' (ID: 352)
  Prédit: ''/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''/' → logprob: -0.12709009647369385
    2. '           ' → logprob: -2.1270899772644043
    3. ''' → logprob: -8.877090454101562
    4. ' '/' → logprob: -10.752090454101562
    5. '          ' → logprob: -15.252090454101562
    6. ' '/'' → logprob: -15.252090454101562
    7. '       ' → logprob: -15.502090454101562
    8. '"/' → logprob: -16.752090454101562
    9. '               ' → logprob: -16.752090454101562
    10. '         ' → logprob: -17.377090454101562

Token 504: ' '/' (ID: 7041)
  Prédit: ''/'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''/' (adapté à ' '/') → logprob: -1.1160349458805285e-05
    2. ''' → logprob: -11.750011444091797
    3. ' '/' → logprob: -12.750011444091797
    4. '           ' → logprob: -15.750011444091797
    5. '"/' → logprob: -17.125011444091797
    6. '       ' → logprob: -17.750011444091797
    7. '/' → logprob: -19.625011444091797
    8. '   ' → logprob: -20.000011444091797
    9. ''%' → logprob: -21.125011444091797
    10. ' ' → logprob: -21.125011444091797

Token 505: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.10464246571063995
    2. ':' → logprob: -2.854642391204834
    3. ']:' → logprob: -4.604642391204834
    4. '']:' → logprob: -4.604642391204834
    5. '}:' → logprob: -5.104642391204834
    6. '']' → logprob: -5.354642391204834
    7. ']' → logprob: -5.479642391204834
    8. '}' → logprob: -5.729642391204834
    9. ''' → logprob: -6.979642391204834
    10. ''}' → logprob: -7.104642391204834

Token 506: ' div' (ID: 4223)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.12692883610725403
    2. ' div' → logprob: -2.1269288063049316
    3. '	div' → logprob: -14.25192928314209
    4. ' ' → logprob: -17.001928329467773
    5. 'Div' → logprob: -17.751928329467773
    6. '_div' → logprob: -17.876928329467773
    7. '(div' → logprob: -18.126928329467773
    8. 'def' → logprob: -18.501928329467773
    9. '<div' → logprob: -18.626928329467773
    10. 'd' → logprob: -19.126928329467773

Token 507: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16072945296764374
    2. '}[' → logprob: -1.9107294082641602
    3. '}.' → logprob: -8.41072940826416
    4. '}' → logprob: -9.28572940826416
    5. '   ' → logprob: -9.41072940826416
    6. '[' → logprob: -9.91072940826416
    7. ' }' → logprob: -10.53572940826416
    8. ',' → logprob: -11.78572940826416
    9. '.get' → logprob: -11.78572940826416
    10. ')[' → logprob: -12.03572940826416

Token 508: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6956849098205566
    2. '}[' → logprob: -0.6956849098205566
    3. '   ' → logprob: -6.445684909820557
    4. '}.' → logprob: -7.820684909820557
    5. '[' → logprob: -8.695684432983398
    6. '}' → logprob: -8.820684432983398
    7. '.get' → logprob: -9.570684432983398
    8. ' }' → logprob: -9.570684432983398
    9. ',' → logprob: -10.195684432983398
    10. '	' → logprob: -10.820684432983398

Token 509: ' }' (ID: 388)
  Prédit: '}['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}[' → logprob: -0.013051759451627731
    2. '}.' → logprob: -5.263051986694336
    3. '       ' → logprob: -5.638051986694336
    4. '   ' → logprob: -5.638051986694336
    5. '.get' → logprob: -8.013051986694336
    6. '[' → logprob: -8.263051986694336
    7. ' }' → logprob: -10.263051986694336
    8. '           ' → logprob: -11.263051986694336
    9. '}' (adapté à ' }') → logprob: -11.763051986694336
    10. '	' → logprob: -12.138051986694336

Token 510: '[' (ID: 58)
  Prédit: '.get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.0038689509965479374
    2. '[' → logprob: -5.75386905670166
    3. 'get' → logprob: -8.00386905670166
    4. '}[' → logprob: -8.50386905670166
    5. '.op' → logprob: -9.62886905670166
    6. ')[' → logprob: -10.87886905670166
    7. '[get' → logprob: -11.25386905670166
    8. '[g' → logprob: -11.87886905670166
    9. '.' → logprob: -12.12886905670166
    10. '[self' → logprob: -12.25386905670166

Token 511: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -4.36574100604048e-06
    2. ' op' → logprob: -12.750004768371582
    3. 'self' → logprob: -13.500004768371582
    4. 'opf' → logprob: -18.875003814697266
    5. '(op' → logprob: -19.875003814697266
    6. '	op' → logprob: -20.375003814697266
    7. '_op' → logprob: -21.125003814697266
    8. 'o' → logprob: -21.375003814697266
    9. ' self' → logprob: -21.625003814697266
    10. '.op' → logprob: -21.875003814697266

Token 512: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.012569578364491463
    2. ')' → logprob: -5.262569427490234
    3. '<|end|>' → logprob: -5.262569427490234
    4. ' ]' → logprob: -6.387569427490234
    5. '}' → logprob: -8.512569427490234
    6. '<|end|>' → logprob: -9.012569427490234
    7. '   ' → logprob: -10.387569427490234
    8. ' )' → logprob: -10.762569427490234
    9. ' ' → logprob: -11.262569427490234
    10. '']' → logprob: -11.512569427490234

Token 513: '    
' (ID: 1944)
  Prédit: '    
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.1552259773015976
    2. '   ' → logprob: -2.280225992202759
    3. '<|end|>' → logprob: -3.655225992202759
    4. '
' → logprob: -5.15522575378418
    5. '  
' → logprob: -5.65522575378418
    6. '        
' → logprob: -6.40522575378418
    7. 'def' → logprob: -6.78022575378418
    8. '   
' → logprob: -6.90522575378418
    9. '<|end|>' → logprob: -6.90522575378418
    10. ')' → logprob: -8.15522575378418

Token 514: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07929732650518417
    2. 'def' → logprob: -2.5792973041534424
    3. '    
' → logprob: -7.9542975425720215
    4. ' def' → logprob: -9.954297065734863
    5. '
' → logprob: -12.454297065734863
    6. '        
' → logprob: -12.704297065734863
    7. '	def' → logprob: -14.704297065734863
    8. '  
' → logprob: -14.954297065734863
    9. '```' → logprob: -15.329297065734863
    10. '   
' → logprob: -15.704297065734863

Token 515: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -9.722539834911004e-05
    2. ' def' → logprob: -9.250097274780273
    3. '   ' → logprob: -14.000097274780273
    4. '    
' → logprob: -15.875097274780273
    5. 'd' → logprob: -17.750097274780273
    6. ' 
' → logprob: -18.000097274780273
    7. '
' → logprob: -18.375097274780273
    8. '        
' → logprob: -18.875097274780273
    9. 'de' → logprob: -19.125097274780273
    10. '	def' → logprob: -19.125097274780273

Token 516: ' evaluate' (ID: 21646)
  Prédit: 'evaluate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'evaluate' → logprob: -0.06995288282632828
    2. ' evaluate' → logprob: -2.694952964782715
    3. '.evaluate' → logprob: -12.069952964782715
    4. '_e' → logprob: -12.194952964782715
    5. 'e' → logprob: -12.569952964782715
    6. 'eval' → logprob: -14.319952964782715
    7. 'valuate' → logprob: -14.694952964782715
    8. 'def' → logprob: -15.194952964782715
    9. ' ' → logprob: -15.819952964782715
    10. 'execute' → logprob: -16.0699520111084

Token 517: '_all' (ID: 13305)
  Prédit: '_all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_all' → logprob: -1.7432603272027336e-06
    2. '_' → logprob: -14.000001907348633
    3. '_a' → logprob: -14.500001907348633
    4. '_al' → logprob: -15.250001907348633
    5. ' _' → logprob: -17.250001907348633
    6. 'all' → logprob: -18.375001907348633
    7. '__' → logprob: -18.750001907348633
    8. '_ALL' → logprob: -20.250001907348633
    9. ' all' → logprob: -20.500001907348633
    10. '_self' → logprob: -20.500001907348633

Token 518: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0005632805987261236
    2. '(' → logprob: -7.500563144683838
    3. ' (' → logprob: -12.000563621520996
    4. '()' → logprob: -12.625563621520996
    5. '(
' → logprob: -14.750563621520996
    6. '(s' → logprob: -14.875563621520996
    7. 'self' → logprob: -17.00056266784668
    8. '(sel' → logprob: -17.00056266784668
    9. '   ' → logprob: -17.25056266784668
    10. ' ' → logprob: -17.25056266784668

Token 519: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00014299227041192353
    2. '(self' → logprob: -9.000143051147461
    3. 'self' → logprob: -11.250143051147461
    4. ' )' → logprob: -12.625143051147461
    5. '   ' → logprob: -13.625143051147461
    6. '):' → logprob: -14.250143051147461
    7. '()' → logprob: -14.875143051147461
    8. '):
' → logprob: -15.250143051147461
    9. ' ' → logprob: -15.750143051147461
    10. '(' → logprob: -15.875143051147461

Token 520: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0003091254911851138
    2. '(' → logprob: -8.250308990478516
    3. 'self' → logprob: -10.375308990478516
    4. '   ' → logprob: -11.750308990478516
    5. '       ' → logprob: -12.250308990478516
    6. '(
' → logprob: -13.375308990478516
    7. ' (' → logprob: -13.875308990478516
    8. 's' → logprob: -14.750308990478516
    9. ' ' → logprob: -15.250308990478516
    10. '(s' → logprob: -15.500308990478516

Token 521: ' Set' (ID: 3957)
  Prédit: 'Set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Set' → logprob: -0.001929228543303907
    2. ' Set' → logprob: -6.25192928314209
    3. 'set' → logprob: -15.50192928314209
    4. '   ' → logprob: -15.75192928314209
    5. 'List' → logprob: -16.251928329467773
    6. '(Set' → logprob: -17.126928329467773
    7. ' ' → logprob: -17.626928329467773
    8. '_set' → logprob: -18.251928329467773
    9. '	Set' → logprob: -18.376928329467773
    10. '       ' → logprob: -18.376928329467773

Token 522: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.00011427151912357658
    2. '[' → logprob: -9.750114440917969
    3. '(int' → logprob: -10.000114440917969
    4. '<int' → logprob: -11.750114440917969
    5. '[in' → logprob: -13.375114440917969
    6. '[Int' → logprob: -14.375114440917969
    7. '(' → logprob: -15.750114440917969
    8. '[
' → logprob: -16.00011444091797
    9. 'int' → logprob: -16.37511444091797
    10. '{' → logprob: -16.75011444091797

Token 523: ']:
' (ID: 22152)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.01235376950353384
    2. '():' → logprob: -4.762353897094727
    3. '():
' → logprob: -6.012353897094727
    4. '(' → logprob: -7.137353897094727
    5. '       ' → logprob: -8.512353897094727
    6. '()' → logprob: -8.512353897094727
    7. 'self' → logprob: -9.637353897094727
    8. '   ' → logprob: -11.012353897094727
    9. '(
' → logprob: -12.887353897094727
    10. '():
' → logprob: -14.012353897094727

Token 524: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003102138638496399
    2. '{' → logprob: -6.2531023025512695
    3. 'result' → logprob: -8.12810230255127
    4. ' {' → logprob: -8.37810230255127
    5. 'left' → logprob: -8.75310230255127
    6. 'results' → logprob: -8.87810230255127
    7. ' results' → logprob: -9.37810230255127
    8. ' left' → logprob: -9.50310230255127
    9. ' result' → logprob: -10.00310230255127
    10. '```' → logprob: -10.12810230255127

Token 525: ' #' (ID: 1069)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.030407870188355446
    2. 'result' → logprob: -3.7804079055786133
    3. ' results' → logprob: -5.030407905578613
    4. '       ' → logprob: -8.280407905578613
    5. 'left' → logprob: -8.280407905578613
    6. ' result' → logprob: -9.530407905578613
    7. 'res' → logprob: -11.280407905578613
    8. ' left' → logprob: -12.030407905578613
    9. '	results' → logprob: -14.530407905578613
    10. 'all' → logprob: -14.780407905578613

Token 526: ' Because' (ID: 13602)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.010097911581397057
    2. 'left' → logprob: -4.760097980499268
    3. 'result' → logprob: -6.760097980499268
    4. ' results' → logprob: -8.38509750366211
    5. '   ' → logprob: -10.26009750366211
    6. '       ' → logprob: -10.51009750366211
    7. 'res' → logprob: -11.01009750366211
    8. ' left' → logprob: -11.63509750366211
    9. 'l' → logprob: -12.51009750366211
    10. '```' → logprob: -13.26009750366211

Token 527: ' multiple' (ID: 7598)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4427908957004547
    2. 'not' → logprob: -1.3177908658981323
    3. 'results' → logprob: -3.192790985107422
    4. ' not' → logprob: -4.192790985107422
    5. 'len' → logprob: -4.567790985107422
    6. 'result' → logprob: -4.942790985107422
    7. 'is' → logprob: -5.567790985107422
    8. 'the' → logprob: -5.942790985107422
    9. ' self' → logprob: -6.317790985107422
    10. 'all' → logprob: -6.317790985107422

Token 528: ' ways' (ID: 6984)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.11341582983732224
    2. ' results' → logprob: -2.2384157180786133
    3. 'left' → logprob: -7.988415718078613
    4. ' left' → logprob: -9.488415718078613
    5. 'result' → logprob: -9.738415718078613
    6. 'possible' → logprob: -10.238415718078613
    7. 'res' → logprob: -10.488415718078613
    8. ' possible' → logprob: -11.238415718078613
    9. 'values' → logprob: -11.363415718078613
    10. '   ' → logprob: -11.738415718078613

Token 529: ' of' (ID: 328)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.877981960773468
    2. ' to' → logprob: -1.1279819011688232
    3. '       ' → logprob: -1.6279819011688232
    4. ' of' → logprob: -3.2529819011688232
    5. 'of' → logprob: -3.7529819011688232
    6. '   ' → logprob: -7.252982139587402
    7. '=' → logprob: -7.752982139587402
    8. 'for' → logprob: -8.002982139587402
    9. '(self' → logprob: -8.752982139587402
    10. ':' → logprob: -9.127982139587402

Token 530: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.0012235627509653568
    2. ' parent' → logprob: -7.876223564147949
    3. 'evalu' → logprob: -8.00122356414795
    4. 'par' → logprob: -8.12622356414795
    5. 'paren' → logprob: -8.75122356414795
    6. 'comb' → logprob: -11.37622356414795
    7. 'evaluation' → logprob: -11.75122356414795
    8. 'left' → logprob: -11.75122356414795
    9. 'self' → logprob: -12.12622356414795
    10. 'partition' → logprob: -12.25122356414795

Token 531: 'hes' (ID: 9780)
  Prédit: 'hes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hes' → logprob: -0.00029148702742531896
    2. 'heses' → logprob: -8.50029182434082
    3. 'h' → logprob: -9.62529182434082
    4. 'hesis' → logprob: -10.75029182434082
    5. '```' → logprob: -15.62529182434082
    6. 'hez' → logprob: -16.00029182434082
    7. '   ' → logprob: -17.00029182434082
    8. 'he' → logprob: -17.50029182434082
    9. '(h' → logprob: -17.62529182434082
    10. '_' → logprob: -17.75029182434082

Token 532: 'izing' (ID: 6396)
  Prédit: 'izing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'izing' → logprob: -0.008952771313488483
    2. 'ing' → logprob: -5.008952617645264
    3. 'ization' → logprob: -7.133952617645264
    4. 'ize' → logprob: -8.133953094482422
    5. 'e' → logprob: -8.383953094482422
    6. 'zing' → logprob: -8.508953094482422
    7. 'iz' → logprob: -8.633953094482422
    8. 'ating' → logprob: -8.883953094482422
    9. 'ezing' → logprob: -8.883953094482422
    10. 'es' → logprob: -9.883953094482422

Token 533: ' children' (ID: 3953)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.9616774916648865
    2. ' left' → logprob: -1.5866775512695312
    3. '(self' → logprob: -1.8366775512695312
    4. 'self' → logprob: -1.9616775512695312
    5. '       ' → logprob: -3.9616775512695312
    6. 's' → logprob: -3.9616775512695312
    7. 'results' → logprob: -4.461677551269531
    8. ' self' → logprob: -4.461677551269531
    9. ',' → logprob: -4.586677551269531
    10. '(left' → logprob: -4.961677551269531

Token 534: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.40789660811424255
    2. 'left' → logprob: -2.2828965187072754
    3. ' can' → logprob: -2.5328965187072754
    4. '       ' → logprob: -3.5328965187072754
    5. ' left' → logprob: -3.6578965187072754
    6. '(self' → logprob: -3.9078965187072754
    7. '   ' → logprob: -4.532896518707275
    8. 'self' → logprob: -4.782896518707275
    9. ' may' → logprob: -4.907896518707275
    10. ',' → logprob: -4.907896518707275

Token 535: ' we' (ID: 581)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.07128819078207016
    2. ' results' → logprob: -2.8212881088256836
    3. 'left' → logprob: -5.571288108825684
    4. 'result' → logprob: -5.571288108825684
    5. ' left' → logprob: -7.196288108825684
    6. '       ' → logprob: -7.321288108825684
    7. ' result' → logprob: -8.821288108825684
    8. 'res' → logprob: -9.321288108825684
    9. ' res' → logprob: -11.571288108825684
    10. 'possible' → logprob: -12.946288108825684

Token 536: ' have' (ID: 679)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06727935373783112
    2. 'result' → logprob: -3.81727933883667
    3. ' result' → logprob: -4.44227933883667
    4. ' return' → logprob: -4.44227933883667
    5. 'return' → logprob: -5.19227933883667
    6. 'def' → logprob: -5.81727933883667
    7. '   ' → logprob: -5.81727933883667
    8. ' left' → logprob: -6.94227933883667
    9. ' ' → logprob: -7.31727933883667
    10. ' =' → logprob: -7.44227933883667

Token 537: ' to' (ID: 316)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.6966650485992432
    2. 'self' → logprob: -0.6966650485992432
    3. '       ' → logprob: -7.071664810180664
    4. 'result' → logprob: -7.071664810180664
    5. '{' → logprob: -7.446664810180664
    6. ' set' → logprob: -7.696664810180664
    7. ' self' → logprob: -8.696664810180664
    8. '{}' → logprob: -8.946664810180664
    9. 's' → logprob: -9.196664810180664
    10. 'possible' → logprob: -9.321664810180664

Token 538: ' consider' (ID: 3331)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5835868716239929
    2. 'results' → logprob: -0.9585868716239929
    3. ' results' → logprob: -3.3335869312286377
    4. ' result' → logprob: -4.958586692810059
    5. 'left' → logprob: -5.208586692810059
    6. 'res' → logprob: -5.333586692810059
    7. '       ' → logprob: -5.583586692810059
    8. ' left' → logprob: -7.458586692810059
    9. 'return' → logprob: -7.958586692810059
    10. 'set' → logprob: -7.958586692810059

Token 539: ' all' (ID: 722)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.1790728121995926
    2. 'self' → logprob: -1.9290728569030762
    3. ' results' → logprob: -5.054072856903076
    4. 'all' → logprob: -5.429072856903076
    5. 'left' → logprob: -5.679072856903076
    6. 'possible' → logprob: -6.304072856903076
    7. 'result' → logprob: -7.304072856903076
    8. 'values' → logprob: -7.679072856903076
    9. ' self' → logprob: -8.054072380065918
    10. 'res' → logprob: -8.304072380065918

Token 540: ' their' (ID: 1043)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.18505451083183289
    2. ' results' → logprob: -2.1850545406341553
    3. '       ' → logprob: -3.3100545406341553
    4. ' possible' → logprob: -4.810054302215576
    5. 'possible' → logprob: -5.185054302215576
    6. 'left' → logprob: -6.060054302215576
    7. 'result' → logprob: -6.685054302215576
    8. ' left' → logprob: -7.810054302215576
    9. '_results' → logprob: -7.810054302215576
    10. '(self' → logprob: -7.935054302215576

Token 541: ' results' (ID: 4376)
  Prédit: ' results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' results' → logprob: -0.32344284653663635
    2. 'results' → logprob: -1.323442816734314
    3. ' left' → logprob: -4.9484429359436035
    4. 'left' → logprob: -6.0734429359436035
    5. ' possible' → logprob: -8.698442459106445
    6. 'values' → logprob: -8.948442459106445
    7. 'res' → logprob: -8.948442459106445
    8. ' values' → logprob: -9.198442459106445
    9. 'result' → logprob: -9.823442459106445
    10. 'possible' → logprob: -10.073442459106445

Token 542: ' combin' (ID: 25307)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.047027040272951126
    2. ':' → logprob: -3.797027111053467
    3. 's' → logprob: -5.047027111053467
    4. ',' → logprob: -5.922027111053467
    5. 'result' → logprob: -5.922027111053467
    6. '():' → logprob: -6.172027111053467
    7. '{' → logprob: -6.422027111053467
    8. 'results' → logprob: -6.422027111053467
    9. '   ' → logprob: -6.922027111053467
    10. '()' → logprob: -7.047027111053467

Token 543: 'ator' (ID: 1246)
  Prédit: 'ations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ations' → logprob: -0.0007049257401376963
    2. 'e' → logprob: -8.625704765319824
    3. 'ed' → logprob: -8.625704765319824
    4. '   ' → logprob: -9.250704765319824
    5. '[' → logprob: -9.375704765319824
    6. 'a' → logprob: -9.875704765319824
    7. 'at' → logprob: -11.125704765319824
    8. '
' → logprob: -11.125704765319824
    9. ' at' → logprob: -11.250704765319824
    10. '```' → logprob: -11.375704765319824

Token 544: 'ially' (ID: 43210)
  Prédit: 'ations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ations' → logprob: -0.0004027865652460605
    2. 'es' → logprob: -8.625402450561523
    3. '   ' → logprob: -9.750402450561523
    4. 'e' → logprob: -9.750402450561523
    5. 's' → logprob: -10.250402450561523
    6. '[' → logprob: -11.000402450561523
    7. 'ings' → logprob: -11.500402450561523
    8. 'ions' → logprob: -11.875402450561523
    9. '```' → logprob: -11.875402450561523
    10. ' at' → logprob: -12.375402450561523

Token 545: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0033580856397747993
    2. 'result' → logprob: -6.003357887268066
    3. '        
' → logprob: -8.628357887268066
    4. '{' → logprob: -9.503357887268066
    5. '   ' → logprob: -9.628357887268066
    6. ',' → logprob: -9.753357887268066
    7. ':' → logprob: -9.878357887268066
    8. 'return' → logprob: -9.878357887268066
    9. 'results' → logprob: -9.878357887268066
    10. ' result' → logprob: -10.003357887268066

Token 546: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018681871006265283
    2. 'result' → logprob: -7.00186824798584
    3. '{' → logprob: -8.12686824798584
    4. '   ' → logprob: -8.25186824798584
    5. '```' → logprob: -9.50186824798584
    6. '    ' → logprob: -10.00186824798584
    7. '      ' → logprob: -10.25186824798584
    8. '	' → logprob: -10.37686824798584
    9. 'tokens' → logprob: -10.75186824798584
    10. ' {' → logprob: -10.75186824798584

Token 547: ' left' (ID: 3561)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.02085377648472786
    2. 'result' → logprob: -4.5208539962768555
    3. '       ' → logprob: -5.2708539962768555
    4. ' results' → logprob: -5.3958539962768555
    5. ' result' → logprob: -10.020853996276855
    6. 'res' → logprob: -10.645853996276855
    7. 'left' (adapté à ' left') → logprob: -11.270853996276855
    8. ' left' → logprob: -14.270853996276855
    9. '	results' → logprob: -14.895853996276855
    10. '   ' → logprob: -15.270853996276855

Token 548: '_vals' (ID: 71688)
  Prédit: '_results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_results' → logprob: -0.01563074253499508
    2. '_values' → logprob: -4.515630722045898
    3. 'results' → logprob: -5.640630722045898
    4. '_vals' → logprob: -7.015630722045898
    5. ' =' → logprob: -10.390630722045898
    6. '_' → logprob: -10.765630722045898
    7. '=' → logprob: -11.265630722045898
    8. '_set' → logprob: -11.765630722045898
    9. 'values' → logprob: -11.890630722045898
    10. '   ' → logprob: -12.015630722045898

Token 549: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10021507740020752
    2. '=' → logprob: -2.350214958190918
    3. ':' → logprob: -12.850214958190918
    4. ' ' → logprob: -12.975214958190918
    5. 's' → logprob: -13.225214958190918
    6. '()' → logprob: -13.725214958190918
    7. '   ' → logprob: -15.225214958190918
    8. '=set' → logprob: -15.975214958190918
    9. '  ' → logprob: -16.475215911865234
    10. ',' → logprob: -17.100215911865234

Token 550: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.157039049663581e-05
    2. ' self' → logprob: -9.875051498413086
    3. '(self' → logprob: -18.375051498413086
    4. '{' → logprob: -18.625051498413086
    5. '[self' → logprob: -18.625051498413086
    6. '=self' → logprob: -19.500051498413086
    7. 'set' → logprob: -19.500051498413086
    8. '	self' → logprob: -19.625051498413086
    9. '   ' → logprob: -21.000051498413086
    10. 's' → logprob: -21.625051498413086

Token 551: '.left' (ID: 15388)
  Prédit: '.left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.left' → logprob: -0.008776354603469372
    2. '.evaluate' → logprob: -4.7587761878967285
    3. '.' → logprob: -9.008776664733887
    4. 'left' → logprob: -10.258776664733887
    5. 'evaluate' → logprob: -12.508776664733887
    6. '._' → logprob: -15.258776664733887
    7. '.eval' → logprob: -16.00877571105957
    8. ' .' → logprob: -16.25877571105957
    9. '.right' → logprob: -16.38377571105957
    10. '[left' → logprob: -16.75877571105957

Token 552: '.evaluate' (ID: 71397)
  Prédit: '.evaluate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.evaluate' → logprob: -0.00018375257786829025
    2. '.' → logprob: -8.750184059143066
    3. ' .' → logprob: -11.125184059143066
    4. 'evaluate' → logprob: -11.500184059143066
    5. '.e' → logprob: -15.375184059143066
    6. '.execute' → logprob: -17.25018310546875
    7. '.enumer' → logprob: -17.50018310546875
    8. '   ' → logprob: -18.25018310546875
    9. '().' → logprob: -18.25018310546875
    10. '._' → logprob: -18.75018310546875

Token 553: '_all' (ID: 13305)
  Prédit: '_all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_all' → logprob: -3.128163257315464e-07
    2. '_' → logprob: -15.5
    3. '_a' → logprob: -17.125
    4. '_al' → logprob: -17.25
    5. ' _' → logprob: -17.625
    6. '_any' → logprob: -18.625
    7. 'all' → logprob: -19.5
    8. '_ALL' → logprob: -20.0
    9. '__' → logprob: -20.5
    10. 'All' → logprob: -20.875

Token 554: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.02975974604487419
    2. '()
' → logprob: -3.529759645462036
    3. '()
' → logprob: -11.654759407043457
    4. '()

' → logprob: -15.404759407043457
    5. ' ()' → logprob: -15.654759407043457
    6. '(' → logprob: -16.529760360717773
    7. '())' → logprob: -17.029760360717773
    8. '()`' → logprob: -17.029760360717773
    9. '(),' → logprob: -17.904760360717773
    10. '()\' → logprob: -18.904760360717773

Token 555: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.040209826081991196
    2. 'right' → logprob: -3.4152097702026367
    3. ' right' → logprob: -5.165209770202637
    4. '.right' → logprob: -8.915209770202637
    5. '        
' → logprob: -8.915209770202637
    6. '	right' → logprob: -9.290209770202637
    7. '[right' → logprob: -9.415209770202637
    8. ',' → logprob: -9.665209770202637
    9. ',right' → logprob: -9.790209770202637
    10. '	' → logprob: -9.915209770202637

Token 556: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.0007166040013544261
    2. ' right' → logprob: -7.250716686248779
    3. 'result' → logprob: -12.250716209411621
    4. 'results' → logprob: -14.250716209411621
    5. '       ' → logprob: -14.750716209411621
    6. 'res' → logprob: -15.000716209411621
    7. 'rig' → logprob: -15.500716209411621
    8. 'rights' → logprob: -16.500717163085938
    9. '	right' → logprob: -17.250717163085938
    10. 'rhs' → logprob: -17.375717163085938

Token 557: '_vals' (ID: 71688)
  Prédit: '_vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vals' → logprob: -4.0722858102526516e-05
    2. '_' → logprob: -10.375041007995605
    3. 'vals' → logprob: -12.750041007995605
    4. '_values' → logprob: -13.375041007995605
    5. 'Vals' → logprob: -13.625041007995605
    6. ' _' → logprob: -14.125041007995605
    7. 's' → logprob: -14.125041007995605
    8. '_val' → logprob: -14.750041007995605
    9. '_s' → logprob: -15.125041007995605
    10. '_pts' → logprob: -15.500041007995605

Token 558: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38688287138938904
    2. '=' → logprob: -1.1368829011917114
    3. ' ' → logprob: -11.511882781982422
    4. 's' → logprob: -14.386882781982422
    5. ')' → logprob: -15.011882781982422
    6. '  ' → logprob: -15.886882781982422
    7. '   ' → logprob: -15.886882781982422
    8. ',' → logprob: -16.011882781982422
    9. ' =
' → logprob: -16.011882781982422
    10. ':' → logprob: -16.636882781982422

Token 559: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.014164921827614307
    2. ' self' → logprob: -4.264164924621582
    3. '(self' → logprob: -13.764164924621582
    4. '	self' → logprob: -15.889164924621582
    5. 's' → logprob: -16.014163970947266
    6. '[self' → logprob: -16.889163970947266
    7. '=self' → logprob: -17.139163970947266
    8. ' ' → logprob: -18.139163970947266
    9. 'Self' → logprob: -19.014163970947266
    10. '   ' → logprob: -19.014163970947266

Token 560: '.right' (ID: 17627)
  Prédit: '.right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.right' → logprob: -0.001503790495917201
    2. 'right' → logprob: -6.501503944396973
    3. '.' → logprob: -14.126503944396973
    4. '.evaluate' → logprob: -15.126503944396973
    5. ' .' → logprob: -15.501503944396973
    6. '.left' → logprob: -16.251502990722656
    7. '	right' → logprob: -17.376502990722656
    8. 'Right' → logprob: -17.376502990722656
    9. '   ' → logprob: -17.751502990722656
    10. '_right' → logprob: -17.876502990722656

Token 561: '.evaluate' (ID: 71397)
  Prédit: '.evaluate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.evaluate' → logprob: -0.18141545355319977
    2. '()' → logprob: -2.681415557861328
    3. '.' → logprob: -3.056415557861328
    4. 'evaluate' → logprob: -3.181415557861328
    5. ')' → logprob: -5.556415557861328
    6. '_all' → logprob: -6.306415557861328
    7. '._' → logprob: -7.181415557861328
    8. '_' → logprob: -7.306415557861328
    9. 'all' → logprob: -8.556415557861328
    10. '.values' → logprob: -8.931415557861328

Token 562: '_all' (ID: 13305)
  Prédit: '_all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_all' → logprob: -3.214019307051785e-05
    2. 'all' → logprob: -10.875032424926758
    3. 'All' → logprob: -11.375032424926758
    4. '_' → logprob: -13.750032424926758
    5. '()' → logprob: -14.625032424926758
    6. '_al' → logprob: -16.625032424926758
    7. '_set' → logprob: -16.750032424926758
    8. '_a' → logprob: -17.375032424926758
    9. ' all' → logprob: -17.500032424926758
    10. ')' → logprob: -18.250032424926758

Token 563: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003934017848223448
    2. '<|end|>' → logprob: -7.003933906555176
    3. '        
' → logprob: -7.128933906555176
    4. ',' → logprob: -7.503933906555176
    5. '()' → logprob: -8.253933906555176
    6. ')' → logprob: -8.253933906555176
    7. '{' → logprob: -8.378933906555176
    8. ':' → logprob: -9.003933906555176
    9. '	' → logprob: -9.128933906555176
    10. ' ' → logprob: -9.128933906555176

Token 564: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003448491683229804
    2. 'result' → logprob: -5.878448486328125
    3. ' result' → logprob: -8.378448486328125
    4. '{' → logprob: -9.003448486328125
    5. '        
' → logprob: -9.628448486328125
    6. '```' → logprob: -9.878448486328125
    7. '<|end|>' → logprob: -10.378448486328125
    8. 'results' → logprob: -10.878448486328125
    9. ' results' → logprob: -11.128448486328125
    10. 'tokens' → logprob: -11.253448486328125

Token 565: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.02391461841762066
    2. 'result' → logprob: -3.7739145755767822
    3. ' results' → logprob: -7.523914813995361
    4. 'res' → logprob: -9.273914337158203
    5. '       ' → logprob: -10.398914337158203
    6. ' result' → logprob: -12.648914337158203
    7. '        
' → logprob: -14.148914337158203
    8. '   ' → logprob: -15.148914337158203
    9. '	results' → logprob: -16.023914337158203
    10. ' res' → logprob: -16.648914337158203

Token 566: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06197183206677437
    2. '=' → logprob: -2.81197190284729
    3. ':' → logprob: -12.561971664428711
    4. '=set' → logprob: -14.436971664428711
    5. ' ' → logprob: -16.93697166442871
    6. 's' → logprob: -17.31197166442871
    7. '	' → logprob: -17.93697166442871
    8. ' =
' → logprob: -18.56197166442871
    9. '   ' → logprob: -18.68697166442871
    10. ',' → logprob: -19.56197166442871

Token 567: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.0004307884373702109
    2. ' set' → logprob: -7.750430583953857
    3. '{' → logprob: -16.000431060791016
    4. '=set' → logprob: -17.500431060791016
    5. '{}' → logprob: -18.750431060791016
    6. '(set' → logprob: -18.875431060791016
    7. '	set' → logprob: -19.125431060791016
    8. '   ' → logprob: -20.750431060791016
    9. ')set' → logprob: -21.125431060791016
    10. '_set' → logprob: -21.875431060791016

Token 568: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00672922981902957
    2. '()
' → logprob: -5.0067291259765625
    3. '();' → logprob: -12.506729125976562
    4. '()
' → logprob: -12.506729125976562
    5. '()

' → logprob: -12.881729125976562
    6. '()\' → logprob: -13.631729125976562
    7. '(' → logprob: -13.881729125976562
    8. '       ' → logprob: -14.006729125976562
    9. '()]' → logprob: -15.756729125976562
    10. '()`' → logprob: -15.881729125976562

Token 569: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01396851148456335
    2. ' for' → logprob: -4.638968467712402
    3. '        
' → logprob: -6.013968467712402
    4. 'for' → logprob: -7.138968467712402
    5. ' ' → logprob: -8.263968467712402
    6. '	' → logprob: -8.638968467712402
    7. '   ' → logprob: -9.013968467712402
    8. '<|end|>' → logprob: -9.138968467712402
    9. ' 
' → logprob: -9.763968467712402
    10. '	for' → logprob: -10.388968467712402

Token 570: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.24134083092212677
    2. '       ' → logprob: -1.7413408756256104
    3. ' for' → logprob: -3.2413408756256104
    4. '	for' → logprob: -10.616340637207031
    5. '	' → logprob: -13.241340637207031
    6. ' ' → logprob: -13.491340637207031
    7. '   ' → logprob: -13.991340637207031
    8. '```' → logprob: -14.866340637207031
    9. ' ' → logprob: -15.241340637207031
    10. '        
' → logprob: -15.866340637207031

Token 571: ' lv' (ID: 52146)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6050940752029419
    2. 'lv' → logprob: -0.8550940752029419
    3. ' lv' → logprob: -3.7300939559936523
    4. 'a' → logprob: -5.980093955993652
    5. ' l' → logprob: -6.480093955993652
    6. 'left' → logprob: -7.605093955993652
    7. 'lhs' → logprob: -9.855093955993652
    8. ' left' → logprob: -9.980093955993652
    9. ' a' → logprob: -11.105093955993652
    10. '   ' → logprob: -11.355093955993652

Token 572: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20154431462287903
    2. 'in' → logprob: -1.7015442848205566
    3. '	in' → logprob: -9.201544761657715
    4. ' ' → logprob: -11.951544761657715
    5. ',' → logprob: -12.201544761657715
    6. 'i' → logprob: -12.326544761657715
    7. '_in' → logprob: -12.451544761657715
    8. 'import' → logprob: -12.951544761657715
    9. 's' → logprob: -13.576544761657715
    10. '  ' → logprob: -14.326544761657715

Token 573: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -2.15310683415737e-05
    2. ' left' → logprob: -10.750021934509277
    3. 'right' → logprob: -19.87502098083496
    4. '[left' → logprob: -20.62502098083496
    5. 'lef' → logprob: -21.37502098083496
    6. '   ' → logprob: -21.62502098083496
    7. '	left' → logprob: -22.25002098083496
    8. 'list' → logprob: -22.50002098083496
    9. 'l' → logprob: -23.12502098083496
    10. '.left' → logprob: -23.12502098083496

Token 574: '_vals' (ID: 71688)
  Prédit: '_vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vals' → logprob: -0.002877984195947647
    2. '_' → logprob: -6.252878189086914
    3. '_val' → logprob: -7.002878189086914
    4. 'vals' → logprob: -11.127878189086914
    5. ' in' → logprob: -11.377878189086914
    6. '_v' → logprob: -11.752878189086914
    7. '   ' → logprob: -13.627878189086914
    8. ' _' → logprob: -13.752878189086914
    9. 'v' → logprob: -14.377878189086914
    10. 'Vals' → logprob: -14.627878189086914

Token 575: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1259312778711319
    2. ' for' → logprob: -2.8759312629699707
    3. '       ' → logprob: -4.375931262969971
    4. '           ' → logprob: -4.375931262969971
    5. ':
' → logprob: -4.625931262969971
    6. ',' → logprob: -4.625931262969971
    7. ' in' → logprob: -5.000931262969971
    8. 'for' → logprob: -5.375931262969971
    9. ')' → logprob: -6.000931262969971
    10. '   ' → logprob: -6.500931262969971

Token 576: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08024073392152786
    2. ' for' → logprob: -2.5802407264709473
    3. '            ' → logprob: -8.080241203308105
    4. '		' → logprob: -8.205241203308105
    5. '	       ' → logprob: -8.830241203308105
    6. '        ' → logprob: -9.080241203308105
    7. 'for' → logprob: -9.330241203308105
    8. '       ' → logprob: -9.705241203308105
    9. ' ' → logprob: -9.830241203308105
    10. '   ' → logprob: -9.955241203308105

Token 577: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07051494717597961
    2. 'for' (adapté à ' for') → logprob: -2.6955149173736572
    3. '           ' → logprob: -7.945515155792236
    4. '       ' → logprob: -9.570514678955078
    5. '               ' → logprob: -10.070514678955078
    6. '        ' → logprob: -10.320514678955078
    7. ' ' → logprob: -10.570514678955078
    8. '	for' → logprob: -10.570514678955078
    9. '            ' → logprob: -11.820514678955078
    10. ' in' → logprob: -12.445514678955078

Token 578: ' rv' (ID: 37141)
  Prédit: 'rv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rv' → logprob: -6.456358823925257e-05
    2. ' rv' → logprob: -9.750064849853516
    3. '(rv' → logprob: -12.000064849853516
    4. '.rv' → logprob: -17.750064849853516
    5. '   ' → logprob: -18.875064849853516
    6. '  ' → logprob: -19.625064849853516
    7. ' ' → logprob: -19.750064849853516
    8. '`' → logprob: -20.750064849853516
    9. 'lv' → logprob: -20.875064849853516
    10. '       ' → logprob: -21.125064849853516

Token 579: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0019510135753080249
    2. 'in' → logprob: -6.251951217651367
    3. '<|end|>' → logprob: -11.751951217651367
    4. ' ' → logprob: -12.501951217651367
    5. ',' → logprob: -12.876951217651367
    6. '           ' → logprob: -13.001951217651367
    7. '	in' → logprob: -13.251951217651367
    8. '<|end|>' → logprob: -14.001951217651367
    9. '            ' → logprob: -14.626951217651367
    10. ')' → logprob: -14.876951217651367

Token 580: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -5.836499985889532e-05
    2. ' right' → logprob: -9.7500581741333
    3. '   ' → logprob: -18.375059127807617
    4. ' ' → logprob: -20.000059127807617
    5. '
' → logprob: -20.375059127807617
    6. '[right' → logprob: -20.625059127807617
    7. '	right' → logprob: -20.875059127807617
    8. 'r' → logprob: -20.875059127807617
    9. 'left' → logprob: -21.125059127807617
    10. '           ' → logprob: -21.625059127807617

Token 581: '_vals' (ID: 71688)
  Prédit: '_vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vals' → logprob: -0.016082817688584328
    2. 'vals' → logprob: -4.141082763671875
    3. 's' → logprob: -10.516082763671875
    4. '(vals' → logprob: -11.891082763671875
    5. 'Vals' → logprob: -12.016082763671875
    6. ' vals' → logprob: -12.141082763671875
    7. 'als' → logprob: -14.266082763671875
    8. 'v' → logprob: -14.641082763671875
    9. '_' → logprob: -14.766082763671875
    10. 'val' → logprob: -15.266082763671875

Token 582: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6515652537345886
    2. '               ' → logprob: -1.2765653133392334
    3. ':' → logprob: -1.6515653133392334
    4. '           ' → logprob: -4.901565074920654
    5. ',' → logprob: -8.151565551757812
    6. '):
' → logprob: -9.151565551757812
    7. '():
' → logprob: -10.276565551757812
    8. ':

' → logprob: -11.151565551757812
    9. '                       ' → logprob: -11.526565551757812
    10. '            ' → logprob: -11.526565551757812

Token 583: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -2.2127087504486553e-05
    2. '           ' → logprob: -12.625021934509277
    3. '                
' → logprob: -12.625021934509277
    4. '```' → logprob: -12.750021934509277
    5. '                ' → logprob: -13.000021934509277
    6. ' if' → logprob: -13.125021934509277
    7. '                   ' → logprob: -13.250021934509277
    8. '              ' → logprob: -13.250021934509277
    9. ',' → logprob: -14.500021934509277
    10. '   ' → logprob: -14.500021934509277

Token 584: ' val' (ID: 1459)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.4684835970401764
    2. 'res' → logprob: -1.093483567237854
    3. ' val' → logprob: -4.0934834480285645
    4. ' op' → logprob: -4.5934834480285645
    5. 'val' (adapté à ' val') → logprob: -5.7184834480285645
    6. 'result' → logprob: -5.7184834480285645
    7. '                   ' → logprob: -6.0934834480285645
    8. ' r' → logprob: -7.3434834480285645
    9. 'op' → logprob: -7.3434834480285645
    10. '               ' → logprob: -7.4684834480285645

Token 585: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02975928969681263
    2. '=' → logprob: -3.529759407043457
    3. '=self' → logprob: -12.904759407043457
    4. 'u' → logprob: -13.154759407043457
    5. 'ue' → logprob: -13.279759407043457
    6. '=_' → logprob: -13.529759407043457
    7. 'uate' → logprob: -15.404759407043457
    8. ' ' → logprob: -15.779759407043457
    9. '_' → logprob: -15.779759407043457
    10. '   ' → logprob: -15.904759407043457

Token 586: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00020377879263833165
    2. ' self' → logprob: -8.500204086303711
    3. 'None' → logprob: -15.500204086303711
    4. '
' → logprob: -16.87520408630371
    5. '(self' → logprob: -16.87520408630371
    6. '           ' → logprob: -17.50020408630371
    7. '               ' → logprob: -17.75020408630371
    8. '_self' → logprob: -19.50020408630371
    9. '                   ' → logprob: -19.75020408630371
    10. '       ' → logprob: -20.12520408630371

Token 587: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.0001487140398239717
    2. '_op' → logprob: -9.12514877319336
    3. '_operation' → logprob: -10.25014877319336
    4. '.op' → logprob: -13.50014877319336
    5. '.operation' → logprob: -14.12514877319336
    6. '_' → logprob: -15.12514877319336
    7. '_self' → logprob: -15.25014877319336
    8. '.' → logprob: -15.37514877319336
    9. '
' → logprob: -15.50014877319336
    10. '_operations' → logprob: -15.50014877319336

Token 588: 'operation' (ID: 15397)
  Prédit: 'operation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'operation' → logprob: -2.45848218582978e-06
    2. '_operation' → logprob: -13.12500286102295
    3. '(operation' → logprob: -15.25000286102295
    4. 'get' → logprob: -16.750001907348633
    5. ' operation' → logprob: -17.250001907348633
    6. '.operation' → logprob: -18.000001907348633
    7. '{' → logprob: -18.250001907348633
    8. 'application' → logprob: -18.625001907348633
    9. '
' → logprob: -19.125001907348633
    10. '_get' → logprob: -19.250001907348633

Token 589: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.0003362966235727072
    2. '(' → logprob: -8.000336647033691
    3. ' (' → logprob: -15.125336647033691
    4. '(
' → logprob: -15.250336647033691
    5. '(v' → logprob: -16.500335693359375
    6. '(ld' → logprob: -16.500335693359375
    7. '(lb' → logprob: -16.750335693359375
    8. '(lp' → logprob: -17.500335693359375
    9. '(ls' → logprob: -17.625335693359375
    10. '(li' → logprob: -18.250335693359375

Token 590: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.3856492842023727e-06
    2. '	v' → logprob: -14.750000953674316
    3. ' v' → logprob: -15.625000953674316
    4. ',v' → logprob: -16.000001907348633
    5. '(v' → logprob: -16.312501907348633
    6. 'в' → logprob: -16.625001907348633
    7. '{
' → logprob: -16.687501907348633
    8. '```' → logprob: -16.750001907348633
    9. '
' → logprob: -16.937501907348633
    10. ',' → logprob: -17.000001907348633

Token 591: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.4974866644479334e-05
    2. ' ,' → logprob: -11.250015258789062
    3. ',
' → logprob: -13.500015258789062
    4. ',r' → logprob: -15.250015258789062
    5. ',v' → logprob: -16.375015258789062
    6. ',val' → logprob: -17.000015258789062
    7. '‌,' → logprob: -17.125015258789062
    8. '               ' → logprob: -17.375015258789062
    9. '<|end|>' → logprob: -17.500015258789062
    10. ',

' → logprob: -18.125015258789062

Token 592: ' rv' (ID: 37141)
  Prédit: 'rv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rv' → logprob: -0.000713266315869987
    2. ' rv' → logprob: -7.250713348388672
    3. '(rv' → logprob: -12.625713348388672
    4. '.rv' → logprob: -16.875713348388672
    5. 'r' → logprob: -18.375713348388672
    6. ' ' → logprob: -18.750713348388672
    7. 'rav' → logprob: -20.000713348388672
    8. 'RV' → logprob: -20.250713348388672
    9. '   ' → logprob: -20.375713348388672
    10. ')' → logprob: -20.875713348388672

Token 593: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6949599981307983
    2. ')
' → logprob: -0.6949599981307983
    3. '               ' → logprob: -6.319960117340088
    4. ')
' → logprob: -11.81995964050293
    5. '                   ' → logprob: -13.81995964050293
    6. ')

' → logprob: -14.19495964050293
    7. '           ' → logprob: -14.56995964050293
    8. '):
' → logprob: -14.81995964050293
    9. ' )
' → logprob: -15.06995964050293
    10. ')`
' → logprob: -15.44495964050293

Token 594: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -6.134509021649137e-05
    2. '<|end|>' → logprob: -10.87506103515625
    3. '           ' → logprob: -11.12506103515625
    4. '                
' → logprob: -11.87506103515625
    5. ' if' → logprob: -12.12506103515625
    6. '              ' → logprob: -12.37506103515625
    7. '                   ' → logprob: -13.12506103515625
    8. '```' → logprob: -13.37506103515625
    9. '                ' → logprob: -13.62506103515625
    10. 'if' → logprob: -13.75006103515625

Token 595: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.32175058126449585
    2. 'if' (adapté à ' if') → logprob: -1.5717506408691406
    3. ' if' → logprob: -2.6967506408691406
    4. '	if' → logprob: -12.57175064086914
    5. ' ' → logprob: -12.69675064086914
    6. '			' → logprob: -13.32175064086914
    7. '                
' → logprob: -13.44675064086914
    8. ';if' → logprob: -14.32175064086914
    9. ' ' → logprob: -14.44675064086914
    10. '              ' → logprob: -14.44675064086914

Token 596: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0009119403548538685
    2. ' val' → logprob: -7.000911712646484
    3. '               ' → logprob: -15.125911712646484
    4. '                   ' → logprob: -16.500911712646484
    5. '           ' → logprob: -17.625911712646484
    6. '	val' → logprob: -17.625911712646484
    7. '(val' → logprob: -17.875911712646484
    8. 'v' → logprob: -18.250911712646484
    9. '[val' → logprob: -19.000911712646484
    10. '_val' → logprob: -20.875911712646484

Token 597: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.10021260380744934
    2. 'is' → logprob: -2.350212574005127
    3. ')' → logprob: -12.475213050842285
    4. '	is' → logprob: -14.225213050842285
    5. '                ' → logprob: -14.850213050842285
    6. ')is' → logprob: -15.350213050842285
    7. '               ' → logprob: -15.475213050842285
    8. ' ' → logprob: -16.22521209716797
    9. '                   ' → logprob: -16.22521209716797
    10. ' ' → logprob: -16.22521209716797

Token 598: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.17977967858314514
    2. ' not' → logprob: -1.8047796487808228
    3. 'None' → logprob: -11.054780006408691
    4. 'Not' → logprob: -12.054780006408691
    5. '	not' → logprob: -12.179780006408691
    6. 'n' → logprob: -13.304780006408691
    7. '               ' → logprob: -13.429780006408691
    8. '_not' → logprob: -14.054780006408691
    9. '                   ' → logprob: -14.554780006408691
    10. '           ' → logprob: -14.679780006408691

Token 599: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -9.088346359931165e-07
    2. ' None' → logprob: -14.000000953674316
    3. '   ' → logprob: -19.5
    4. '(None' → logprob: -20.0
    5. '_None' → logprob: -20.125
    6. 'none' → logprob: -20.375
    7. '       ' → logprob: -21.0
    8. '=None' → logprob: -21.125
    9. 'No' → logprob: -21.25
    10. 'N' → logprob: -21.25

Token 600: ' and' (ID: 326)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.17960099875926971
    2. ':' → logprob: -2.179600954055786
    3. ':
' → logprob: -3.054600954055786
    4. '               ' → logprob: -5.804601192474365
    5. '                       ' → logprob: -7.554601192474365
    6. ' and' → logprob: -8.054600715637207
    7. ',' → logprob: -8.929600715637207
    8. '                  ' → logprob: -9.804600715637207
    9. '):
' → logprob: -10.179600715637207
    10. '                           ' → logprob: -10.804600715637207

Token 601: ' abs' (ID: 8443)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -1.0014829635620117
    2. 'val' → logprob: -1.8764829635620117
    3. '0' → logprob: -2.7514829635620117
    4. '-(' → logprob: -2.8764829635620117
    5. ' isinstance' → logprob: -3.0014829635620117
    6. 'True' → logprob: -3.2514829635620117
    7. '-l' → logprob: -3.2514829635620117
    8. '(-' → logprob: -3.5014829635620117
    9. 'abs' → logprob: -3.6264829635620117
    10. ' -' → logprob: -3.6264829635620117

Token 602: '(val' (ID: 17391)
  Prédit: '(val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -1.1517960956552997e-05
    2. 'val' → logprob: -12.000011444091797
    3. '(' → logprob: -12.375011444091797
    4. ' (' → logprob: -14.500011444091797
    5. ',val' → logprob: -15.875011444091797
    6. '[val' → logprob: -16.250011444091797
    7. '           ' → logprob: -16.375011444091797
    8. '   ' → logprob: -16.500011444091797
    9. '(
' → logprob: -16.625011444091797
    10. ' val' → logprob: -17.125011444091797

Token 603: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1295895278453827
    2. ')<=' → logprob: -3.129589557647705
    3. ' <=' → logprob: -3.254589557647705
    4. '<=' → logprob: -3.254589557647705
    5. '(val' → logprob: -8.004589080810547
    6. '()' → logprob: -9.629589080810547
    7. '(' → logprob: -9.754589080810547
    8. ']<=' → logprob: -10.254589080810547
    9. 'val' → logprob: -10.879589080810547
    10. '<|end|>' → logprob: -11.004589080810547

Token 604: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.14278356730937958
    2. ' <=' → logprob: -2.0177836418151855
    3. '<' → logprob: -9.517783164978027
    4. ' <' → logprob: -11.767783164978027
    5. '>' → logprob: -12.017783164978027
    6. ')<=' → logprob: -12.017783164978027
    7. '```' → logprob: -12.767783164978027
    8. '>=' → logprob: -12.892783164978027
    9. '=' → logprob: -13.267783164978027
    10. ')' → logprob: -13.392783164978027

Token 605: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.6688908338546753
    2. '10' → logprob: -0.7938908338546753
    3. '200' → logprob: -4.668890953063965
    4. '300' → logprob: -5.293890953063965
    5. '320' → logprob: -5.293890953063965
    6. '1' → logprob: -5.418890953063965
    7. '500' → logprob: -6.168890953063965
    8. '250' → logprob: -6.543890953063965
    9. '50' → logprob: -6.668890953063965
    10. '327' → logprob: -6.793890953063965

Token 606: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.6070180535316467
    2. '100' → logprob: -0.8570180535316467
    3. '320' → logprob: -4.607017993927002
    4. '200' → logprob: -5.107017993927002
    5. '300' → logprob: -5.482017993927002
    6. '1' → logprob: -5.607017993927002
    7. '500' → logprob: -6.607017993927002
    8. '50' → logprob: -6.982017993927002
    9. '2' → logprob: -7.232017993927002
    10. '327' → logprob: -7.357017993927002

Token 607: '**' (ID: 410)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.2666940689086914
    2. '**' → logprob: -2.1416940689086914
    3. '9' → logprob: -2.2666940689086914
    4. '8' → logprob: -5.016694068908691
    5. '000' → logprob: -6.141694068908691
    6. '5' → logprob: -6.391694068908691
    7. '7' → logprob: -6.766694068908691
    8. '0' → logprob: -6.766694068908691
    9. '00' → logprob: -8.766694068908691
    10. '_' → logprob: -11.016694068908691

Token 608: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.09169036149978638
    2. '6' → logprob: -2.5916903018951416
    3. '5' → logprob: -5.591690540313721
    4. '12' → logprob: -5.966690540313721
    5. '18' → logprob: -6.216690540313721
    6. '7' → logprob: -6.341690540313721
    7. '8' → logprob: -6.341690540313721
    8. '15' → logprob: -7.591690540313721
    9. '4' → logprob: -8.466690063476562
    10. '10' → logprob: -9.716690063476562

Token 609: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.29883620142936707
    2. ':' → logprob: -1.4238362312316895
    3. '                   ' → logprob: -4.7988362312316895
    4. '               ' → logprob: -4.9238362312316895
    5. ' and' → logprob: -6.6738362312316895
    6. '           ' → logprob: -7.7988362312316895
    7. '                       ' → logprob: -8.923835754394531
    8. '):
' → logprob: -9.298835754394531
    9. ':
' → logprob: -10.423835754394531
    10. ',' → logprob: -10.923835754394531

Token 610: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00028696097433567047
    2. ' results' → logprob: -9.000287055969238
    3. '                       ' → logprob: -9.625287055969238
    4. 'results' → logprob: -9.750287055969238
    5. '                  ' → logprob: -10.750287055969238
    6. '               ' → logprob: -11.750287055969238
    7. '                           ' → logprob: -12.750287055969238
    8. '                 ' → logprob: -13.000287055969238
    9. '                    ' → logprob: -14.125287055969238
    10. '```' → logprob: -14.250287055969238

Token 611: ' results' (ID: 4376)
  Prédit: ' results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' results' → logprob: -0.30662670731544495
    2. 'results' (adapté à ' results') → logprob: -1.8066266775131226
    3. '                   ' → logprob: -2.306626796722412
    4. '                       ' → logprob: -8.431626319885254
    5. '   ' → logprob: -10.931626319885254
    6. '               ' → logprob: -11.056626319885254
    7. '	results' → logprob: -11.931626319885254
    8. '       ' → logprob: -12.181626319885254
    9. '           ' → logprob: -13.056626319885254
    10. '                  ' → logprob: -13.431626319885254

Token 612: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.006725199054926634
    2. '.' → logprob: -5.006725311279297
    3. '.append' → logprob: -12.756725311279297
    4. ' .' → logprob: -13.131725311279297
    5. '.update' → logprob: -13.131725311279297
    6. '.insert' → logprob: -13.756725311279297
    7. '                   ' → logprob: -14.381725311279297
    8. '                       ' → logprob: -14.756725311279297
    9. '.setdefault' → logprob: -15.381725311279297
    10. '.Add' → logprob: -15.506725311279297

Token 613: '(val' (ID: 17391)
  Prédit: '(val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -5.438573680294212e-06
    2. '(' → logprob: -12.250005722045898
    3. 'val' → logprob: -14.375005722045898
    4. '[val' → logprob: -18.1250057220459
    5. '(
' → logprob: -18.5000057220459
    6. ',val' → logprob: -19.0000057220459
    7. ' val' → logprob: -19.6250057220459
    8. '(v' → logprob: -19.8750057220459
    9. ' (' → logprob: -20.7500057220459
    10. '	val' → logprob: -20.8750057220459

Token 614: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003485745983198285
    2. '               ' → logprob: -8.375349044799805
    3. '       ' → logprob: -9.750349044799805
    4. ')return' → logprob: -10.125349044799805
    5. '<|end|>' → logprob: -11.625349044799805
    6. ')
' → logprob: -12.375349044799805
    7. ' )' → logprob: -13.125349044799805
    8. '           ' → logprob: -14.375349044799805
    9. ')}' → logprob: -14.875349044799805
    10. 'return' → logprob: -15.125349044799805

Token 615: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011308094253763556
    2. ' return' → logprob: -7.3761305809021
    3. 'return' → logprob: -7.6261305809021
    4. '        
' → logprob: -12.751131057739258
    5. '      ' → logprob: -12.876131057739258
    6. '	return' → logprob: -13.001131057739258
    7. '   ' → logprob: -13.376131057739258
    8. '	' → logprob: -13.501131057739258
    9. '```' → logprob: -13.626131057739258
    10. '               ' → logprob: -13.876131057739258

Token 616: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009795783553272486
    2. 'return' (adapté à ' return') → logprob: -7.125979423522949
    3. '	' → logprob: -9.00097942352295
    4. ' return' → logprob: -10.25097942352295
    5. '   ' → logprob: -11.37597942352295
    6. '	return' → logprob: -12.87597942352295
    7. '               ' → logprob: -13.75097942352295
    8. '           ' → logprob: -14.87597942352295
    9. '```' → logprob: -14.87597942352295
    10. '      ' → logprob: -15.12597942352295

Token 617: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.0004306692280806601
    2. ' results' → logprob: -7.750430583953857
    3. '	results' → logprob: -20.000431060791016
    4. 'result' → logprob: -20.125431060791016
    5. '(results' → logprob: -21.500431060791016
    6. '.results' → logprob: -22.000431060791016
    7. '_results' → logprob: -24.750431060791016
    8. '{' → logprob: -24.875431060791016
    9. 'Results' → logprob: -24.875431060791016
    10. 'set' → logprob: -25.750431060791016

Token 618: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 619: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.4892139434814453
    2. '<|end|>' → logprob: -0.9892139434814453
    3. 'def' → logprob: -5.114213943481445
    4. '#' → logprob: -5.364213943481445
    5. '```' → logprob: -6.364213943481445
    6. 'import' → logprob: -6.364213943481445
    7. '<|end|>' → logprob: -7.864213943481445
    8. ')' → logprob: -9.364213943481445
    9. '   ' → logprob: -9.739213943481445
    10. '...' → logprob: -9.989213943481445

Token 620: ' Parent' (ID: 33156)
  Prédit: ' Parser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Parser' → logprob: -0.5648511052131653
    2. 'Parser' → logprob: -1.4398510456085205
    3. 'Tokenizer' → logprob: -2.5648510456085205
    4. ' Token' → logprob: -3.1898510456085205
    5. 'Token' → logprob: -3.4398510456085205
    6. 'Variable' → logprob: -4.3148512840271
    7. 'Unary' → logprob: -4.6898512840271
    8. ' Variable' → logprob: -5.0648512840271
    9. 'Paren' → logprob: -5.4398512840271
    10. 'Expression' → logprob: -5.8148512840271

Token 621: 'heses' (ID: 109350)
  Prédit: 'heses'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heses' → logprob: -0.506600022315979
    2. 'hesis' → logprob: -1.506600022315979
    3. 'hes' → logprob: -1.756600022315979
    4. 'h' → logprob: -5.7565999031066895
    5. 'hetical' → logprob: -13.006600379943848
    6. 'hesia' → logprob: -13.881600379943848
    7. '```' → logprob: -14.381600379943848
    8. 'hs' → logprob: -15.381600379943848
    9. 'he' → logprob: -16.88159942626953
    10. 'has' → logprob: -17.13159942626953

Token 622: '(Expression' (ID: 120302)
  Prédit: '(Expression'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Expression' → logprob: -0.018941223621368408
    2. '(' → logprob: -4.268941402435303
    3. ':' → logprob: -5.393941402435303
    4. '(Open' → logprob: -9.018940925598145
    5. 'Expression' → logprob: -10.643940925598145
    6. '(Parser' → logprob: -11.518940925598145
    7. '():' → logprob: -11.643940925598145
    8. '("("' → logprob: -11.768940925598145
    9. '(Exception' → logprob: -12.018940925598145
    10. '(Binary' → logprob: -12.143940925598145

Token 623: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005860178265720606
    2. ':' → logprob: -5.630860328674316
    3. '(Expression' → logprob: -7.130860328674316
    4. ')' → logprob: -7.255860328674316
    5. '):
' → logprob: -7.880860328674316
    6. '(' → logprob: -8.630860328674316
    7. '<|end|>' → logprob: -9.380860328674316
    8. '("("' → logprob: -11.255860328674316
    9. ',' → logprob: -11.380860328674316
    10. '):

' → logprob: -11.755860328674316

Token 624: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008367887930944562
    2. 'def' → logprob: -7.3758368492126465
    3. ' def' → logprob: -9.000836372375488
    4. '  ' → logprob: -10.875836372375488
    5. '
' → logprob: -11.250836372375488
    6. '(' → logprob: -11.625836372375488
    7. ' ' → logprob: -11.750836372375488
    8. '	def' → logprob: -11.750836372375488
    9. '(
' → logprob: -12.000836372375488
    10. '    
' → logprob: -12.250836372375488

Token 625: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.015356425195932388
    2. ' def' → logprob: -4.265356540679932
    3. '   ' → logprob: -6.765356540679932
    4. '__' → logprob: -10.265356063842773
    5. '	def' → logprob: -12.765356063842773
    6. 'class' → logprob: -14.890356063842773
    7. '
' → logprob: -14.890356063842773
    8. 'Expression' → logprob: -15.265356063842773
    9. ' ' → logprob: -16.140356063842773
    10. '(Expression' → logprob: -16.265356063842773

Token 626: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.05140729621052742
    2. 'init' → logprob: -3.8014073371887207
    3. ' __' → logprob: -3.9264073371887207
    4. 'def' → logprob: -5.301407337188721
    5. ' def' → logprob: -6.051407337188721
    6. '_init' → logprob: -8.426406860351562
    7. '__(' → logprob: -9.051406860351562
    8. '(Expression' → logprob: -9.051406860351562
    9. '```' → logprob: -9.676406860351562
    10. 'Expression' → logprob: -9.801406860351562

Token 627: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -6.704273118884885e-07
    2. '_init' → logprob: -15.500000953674316
    3. '__' → logprob: -16.0
    4. '(init' → logprob: -16.0
    5. 'def' → logprob: -16.875
    6. ' init' → logprob: -17.125
    7. 'class' → logprob: -18.25
    8. '```' → logprob: -18.625
    9. 'int' → logprob: -18.75
    10. '   ' → logprob: -18.875

Token 628: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.1252366155385971
    2. '(self' → logprob: -2.2502365112304688
    3. '(' → logprob: -4.500236511230469
    4. '__' → logprob: -7.500236511230469
    5. '__(
' → logprob: -7.875236511230469
    6. '_(' → logprob: -8.875236511230469
    7. ' (' → logprob: -9.500236511230469
    8. '__((' → logprob: -9.875236511230469
    9. 'self' → logprob: -12.000236511230469
    10. ',' → logprob: -12.625236511230469

Token 629: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.008129963040119e-06
    2. ' self' → logprob: -12.500003814697266
    3. ',' → logprob: -15.625003814697266
    4. '(self' → logprob: -16.125003814697266
    5. '       ' → logprob: -18.000003814697266
    6. '   ' → logprob: -18.000003814697266
    7. 'Expression' → logprob: -18.375003814697266
    8. ',self' → logprob: -19.250003814697266
    9. 'expr' → logprob: -20.375003814697266
    10. '
' → logprob: -20.375003814697266

Token 630: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.062373317778110504
    2. 'self' → logprob: -2.812373399734497
    3. '(self' → logprob: -8.062373161315918
    4. ' self' → logprob: -9.812373161315918
    5. ',self' → logprob: -10.437373161315918
    6. ' ,' → logprob: -12.437373161315918
    7. '   ' → logprob: -14.187373161315918
    8. ' (' → logprob: -14.187373161315918
    9. '       ' → logprob: -14.937373161315918
    10. ',
' → logprob: -16.062374114990234

Token 631: ' inner' (ID: 12694)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.056867487728595734
    2. 'inner' → logprob: -3.4318675994873047
    3. 'expression' → logprob: -4.056867599487305
    4. 'content' → logprob: -5.431867599487305
    5. 'child' → logprob: -6.931867599487305
    6. ' expr' → logprob: -8.806867599487305
    7. 'contents' → logprob: -10.181867599487305
    8. 'exp' → logprob: -10.306867599487305
    9. ' inner' → logprob: -10.931867599487305
    10. 'express' → logprob: -11.181867599487305

Token 632: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02079727128148079
    2. '):' → logprob: -3.8957972526550293
    3. ',' → logprob: -9.395797729492188
    4. ' :' → logprob: -9.520797729492188
    5. 'expression' → logprob: -10.895797729492188
    6. ')' → logprob: -10.895797729492188
    7. ' ):' → logprob: -11.270797729492188
    8. '_expression' → logprob: -11.395797729492188
    9. '):
' → logprob: -11.645797729492188
    10. 'Expression' → logprob: -11.895797729492188

Token 633: ' Expression' (ID: 32496)
  Prédit: 'Expression'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Expression' → logprob: -4.008129963040119e-06
    2. ' Expression' → logprob: -12.500003814697266
    3. '(Expression' → logprob: -16.125003814697266
    4. '.Expression' → logprob: -16.250003814697266
    5. '_expression' → logprob: -18.125003814697266
    6. 'expression' → logprob: -19.875003814697266
    7. 'Express' → logprob: -20.125003814697266
    8. '   ' → logprob: -20.375003814697266
    9. ')' → logprob: -20.500003814697266
    10. 'Expr' → logprob: -20.875003814697266

Token 634: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.07891137897968292
    2. '):' → logprob: -2.578911304473877
    3. '   ' → logprob: -11.953911781311035
    4. '):
' → logprob: -12.078911781311035
    5. ')' → logprob: -12.578911781311035
    6. '       ' → logprob: -12.953911781311035
    7. ':' → logprob: -13.078911781311035
    8. ' ):
' → logprob: -14.078911781311035
    9. ':
' → logprob: -14.703911781311035
    10. '):

' → logprob: -15.703911781311035

Token 635: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023383723571896553
    2. 'self' → logprob: -3.773383617401123
    3. ' self' → logprob: -9.398384094238281
    4. '   ' → logprob: -10.023384094238281
    5. '	self' → logprob: -11.898384094238281
    6. '	' → logprob: -12.523384094238281
    7. '	   ' → logprob: -15.398384094238281
    8. '(self' → logprob: -16.14838409423828
    9. ' ' → logprob: -16.64838409423828
    10. '      ' → logprob: -17.02338409423828

Token 636: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0002836232597474009
    2. '       ' → logprob: -8.250283241271973
    3. ' self' → logprob: -10.750283241271973
    4. '   ' → logprob: -14.125283241271973
    5. '	self' → logprob: -16.50028419494629
    6. 'super' → logprob: -16.75028419494629
    7. '           ' → logprob: -19.87528419494629
    8. '(self' → logprob: -20.37528419494629
    9. '     ' → logprob: -21.00028419494629
    10. '      ' → logprob: -22.00028419494629

Token 637: '.inner' (ID: 15750)
  Prédit: '.inner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.inner' → logprob: -2.081584716506768e-05
    2. '.' → logprob: -11.125020980834961
    3. 'inner' → logprob: -12.500020980834961
    4. ' .' → logprob: -13.625020980834961
    5. '.outer' → logprob: -14.375020980834961
    6. '.left' → logprob: -16.50002098083496
    7. '.Inner' → logprob: -16.50002098083496
    8. '.in' → logprob: -16.50002098083496
    9. '
' → logprob: -16.75002098083496
    10. '.internal' → logprob: -16.87502098083496

Token 638: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022787988185883
    2. ' =' → logprob: -1.91022789478302
    3. '   ' → logprob: -12.78522777557373
    4. ' ' → logprob: -15.28522777557373
    5. ')' → logprob: -15.78522777557373
    6. '.' → logprob: -16.160228729248047
    7. '=self' → logprob: -16.285228729248047
    8. '    ' → logprob: -16.535228729248047
    9. '	' → logprob: -16.660228729248047
    10. '  ' → logprob: -17.035228729248047

Token 639: ' inner' (ID: 12694)
  Prédit: 'inner'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inner' → logprob: -0.004079828038811684
    2. ' inner' → logprob: -5.504079818725586
    3. '(inner' → logprob: -13.629079818725586
    4. 'inners' → logprob: -15.504079818725586
    5. '_inner' → logprob: -16.504079818725586
    6. '.inner' → logprob: -16.754079818725586
    7. 'inn' → logprob: -18.379079818725586
    8. ' ' → logprob: -19.504079818725586
    9. 'internal' → logprob: -19.629079818725586
    10. 'INNER' → logprob: -20.254079818725586

Token 640: '
    
' (ID: 15698)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6148517727851868
    2. '    
' → logprob: -1.239851713180542
    3. '   ' → logprob: -1.989851713180542
    4. '<|end|>' → logprob: -3.489851713180542
    5. '        
' → logprob: -7.114851951599121
    6. '  
' → logprob: -7.114851951599121
    7. 'def' → logprob: -7.864851951599121
    8. '<|end|>' → logprob: -8.614851951599121
    9. ' 
' → logprob: -9.114851951599121
    10. '   
' → logprob: -9.364851951599121

Token 641: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01833711750805378
    2. '   ' → logprob: -4.018337249755859
    3. ' def' → logprob: -8.64333724975586
    4. '
' → logprob: -12.14333724975586
    5. '	def' → logprob: -12.26833724975586
    6. '    
' → logprob: -14.26833724975586
    7. '       ' → logprob: -16.39333724975586
    8. '  ' → logprob: -17.01833724975586
    9. ' ' → logprob: -17.14333724975586
    10. '        
' → logprob: -17.64333724975586

Token 642: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -6.704273118884885e-07
    2. ' def' → logprob: -14.250000953674316
    3. '   ' → logprob: -17.75
    4. '	def' → logprob: -20.75
    5. '
' → logprob: -23.0
    6. '_def' → logprob: -24.0
    7. 'class' → logprob: -25.0
    8. '    
' → logprob: -25.125
    9. 'evaluate' → logprob: -25.375
    10. '```' → logprob: -25.375

Token 643: ' evaluate' (ID: 21646)
  Prédit: 'evaluate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'evaluate' → logprob: -0.004137887619435787
    2. 'def' → logprob: -5.504137992858887
    3. ' evaluate' → logprob: -9.879137992858887
    4. ' def' → logprob: -12.379137992858887
    5. '   ' → logprob: -13.004137992858887
    6. '
' → logprob: -14.004137992858887
    7. '.evaluate' → logprob: -14.754137992858887
    8. '__' → logprob: -15.129137992858887
    9. 'eval' → logprob: -16.50413703918457
    10. 'execute' → logprob: -16.62913703918457

Token 644: '_all' (ID: 13305)
  Prédit: '_all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_all' → logprob: -1.9361264946837764e-07
    2. '_' → logprob: -17.0
    3. '_a' → logprob: -17.375
    4. '_al' → logprob: -18.0
    5. 'All' → logprob: -19.0
    6. 'all' → logprob: -19.25
    7. ' _' → logprob: -19.5
    8. '_ALL' → logprob: -20.0
    9. ' all' → logprob: -21.0
    10. '_any' → logprob: -21.125

Token 645: '(self' (ID: 2402)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7081941962242126
    2. '(self' → logprob: -0.7081941962242126
    3. '(' → logprob: -4.208194255828857
    4. '(
' → logprob: -10.4581937789917
    5. ' ()' → logprob: -11.0831937789917
    6. '()
' → logprob: -13.3331937789917
    7. '()(' → logprob: -13.3331937789917
    8. '(

' → logprob: -13.3331937789917
    9. '(()' → logprob: -13.5831937789917
    10. ' (' → logprob: -13.7081937789917

Token 646: ')' (ID: 8)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.100285604596138
    2. ')' → logprob: -2.350285530090332
    3. '(self' → logprob: -9.975285530090332
    4. '(' → logprob: -10.475285530090332
    5. '())' → logprob: -13.350285530090332
    6. ' ()' → logprob: -13.475285530090332
    7. ' )' → logprob: -14.475285530090332
    8. 'self' → logprob: -15.725285530090332
    9. '   ' → logprob: -15.850285530090332
    10. '}' → logprob: -16.97528648376465

Token 647: ' ->' (ID: 2747)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00027825910365208983
    2. '(' → logprob: -8.50027847290039
    3. ' ()' → logprob: -10.25027847290039
    4. '():' → logprob: -10.62527847290039
    5. '()->' → logprob: -11.75027847290039
    6. ' ->' → logprob: -12.12527847290039
    7. ')' → logprob: -14.62527847290039
    8. '->' → logprob: -15.12527847290039
    9. '(self' → logprob: -15.62527847290039
    10. ' (' → logprob: -15.62527847290039

Token 648: ' Set' (ID: 3957)
  Prédit: 'Set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Set' → logprob: -0.015907904133200645
    2. ' Set' → logprob: -4.2659077644348145
    3. 'self' → logprob: -6.6409077644348145
    4. 'set' → logprob: -8.015908241271973
    5. ' self' → logprob: -9.890908241271973
    6. '_set' → logprob: -10.390908241271973
    7. ' set' → logprob: -11.140908241271973
    8. 'return' → logprob: -12.265908241271973
    9. '_Set' → logprob: -13.390908241271973
    10. 'int' → logprob: -14.015908241271973

Token 649: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.0001290454383706674
    2. '(int' → logprob: -9.250128746032715
    3. 'int' → logprob: -11.125128746032715
    4. '<int' → logprob: -11.625128746032715
    5. '[in' → logprob: -12.375128746032715
    6. '[' → logprob: -13.125128746032715
    7. '{' → logprob: -13.375128746032715
    8. '[Int' → logprob: -14.625128746032715
    9. '[self' → logprob: -15.000128746032715
    10. '[
' → logprob: -15.250128746032715

Token 650: ']:
' (ID: 22152)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.07916979491710663
    2. '():
' → logprob: -2.579169750213623
    3. ':' → logprob: -8.579170227050781
    4. ':
' → logprob: -10.579170227050781
    5. '()' → logprob: -10.704170227050781
    6. '():
' → logprob: -10.829170227050781
    7. '):' → logprob: -11.079170227050781
    8. '):
' → logprob: -11.829170227050781
    9. '(' → logprob: -14.204170227050781
    10. '():

' → logprob: -15.204170227050781

Token 651: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14093005657196045
    2. 'return' → logprob: -2.51593017578125
    3. ' return' → logprob: -3.14093017578125
    4. '   ' → logprob: -5.01593017578125
    5. '	return' → logprob: -7.26593017578125
    6. '	' → logprob: -10.14093017578125
    7. '	   ' → logprob: -11.39093017578125
    8. '{return' → logprob: -11.64093017578125
    9. '
' → logprob: -11.76593017578125
    10. ' ' → logprob: -12.26593017578125

Token 652: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.11330588161945343
    2. '       ' → logprob: -2.3633058071136475
    3. ' return' → logprob: -4.363306045532227
    4. '   ' → logprob: -8.488306045532227
    5. '	return' → logprob: -9.613306045532227
    6. '
' → logprob: -12.613306045532227
    7. '{return' → logprob: -14.863306045532227
    8. '	' → logprob: -15.113306045532227
    9. '     ' → logprob: -15.488306045532227
    10. '      ' → logprob: -15.738306045532227

Token 653: ' Parent' (ID: 33156)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0003613256849348545
    2. '       ' → logprob: -8.250361442565918
    3. ' return' → logprob: -9.250361442565918
    4. '   ' → logprob: -12.750361442565918
    5. '	return' → logprob: -14.250361442565918
    6. '
' → logprob: -14.750361442565918
    7. '```' → logprob: -17.2503604888916
    8. '           ' → logprob: -18.6253604888916
    9. '        
' → logprob: -18.8753604888916
    10. '     ' → logprob: -19.0003604888916

Token 654: 'heses' (ID: 109350)
  Prédit: 'heses'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heses' → logprob: -0.16059331595897675
    2. 'return' → logprob: -2.035593271255493
    3. 'hesis' → logprob: -4.910593509674072
    4. '   ' → logprob: -5.660593509674072
    5. 'hes' → logprob: -5.785593509674072
    6. 'def' → logprob: -6.160593509674072
    7. 'eturn' → logprob: -6.910593509674072
    8. ' return' → logprob: -7.785593509674072
    9. '       ' → logprob: -8.910593032836914
    10. 'h' → logprob: -9.785593032836914

Token 655: ' enforce' (ID: 57352)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.33087682723999023
    2. '       ' → logprob: -1.4558768272399902
    3. ' return' → logprob: -3.3308768272399902
    4. '   ' → logprob: -4.70587682723999
    5. '
' → logprob: -5.83087682723999
    6. '	return' → logprob: -8.205877304077148
    7. '        
' → logprob: -9.205877304077148
    8. ':return' → logprob: -9.455877304077148
    9. '           ' → logprob: -9.830877304077148
    10. '    
' → logprob: -9.830877304077148

Token 656: ' order' (ID: 2569)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.008733469061553478
    2. ' return' → logprob: -4.75873327255249
    3. 'self' → logprob: -9.633733749389648
    4. '       ' → logprob: -11.008733749389648
    5. 'inner' → logprob: -11.383733749389648
    6. '   ' → logprob: -11.383733749389648
    7. '	return' → logprob: -12.758733749389648
    8. 'the' → logprob: -13.508733749389648
    9. 'result' → logprob: -13.633733749389648
    10. 'that' → logprob: -13.633733749389648

Token 657: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06740818917751312
    2. 'return' → logprob: -2.8174080848693848
    3. ' return' → logprob: -5.692408084869385
    4. '(' → logprob: -8.192408561706543
    5. '   ' → logprob: -8.192408561706543
    6. '
' → logprob: -8.317408561706543
    7. '{return' → logprob: -8.567408561706543
    8. '(self' → logprob: -8.692408561706543
    9. ':
' → logprob: -9.067408561706543
    10. '	return' → logprob: -9.067408561706543

Token 658: ' so' (ID: 813)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.1443159580230713
    2. '       ' → logprob: -2.3943159580230713
    3. ' return' → logprob: -3.1443159580230713
    4. '	return' → logprob: -10.144315719604492
    5. '   ' → logprob: -12.519315719604492
    6. ' ' → logprob: -12.894315719604492
    7. '	' → logprob: -12.894315719604492
    8. '
' → logprob: -13.519315719604492
    9. '        
' → logprob: -13.644315719604492
    10. ' ' → logprob: -13.894315719604492

Token 659: ' just' (ID: 1327)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.006159027572721243
    2. ' return' → logprob: -5.256158828735352
    3. '       ' → logprob: -7.006158828735352
    4. '   ' → logprob: -11.631158828735352
    5. '	return' → logprob: -12.131158828735352
    6. '
' → logprob: -12.631158828735352
    7. ' ' → logprob: -15.631158828735352
    8. '           ' → logprob: -15.881158828735352
    9. '        
' → logprob: -16.00615882873535
    10. '```' → logprob: -16.25615882873535

Token 660: ' evaluate' (ID: 21646)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.003192566568031907
    2. ' return' → logprob: -5.75319242477417
    3. '   ' → logprob: -11.378192901611328
    4. '       ' → logprob: -12.753192901611328
    5. '	return' → logprob: -15.378192901611328
    6. '
' → logprob: -16.628192901611328
    7. '```' → logprob: -16.753192901611328
    8. '           ' → logprob: -17.128192901611328
    9. ':return' → logprob: -17.628192901611328
    10. '    ' → logprob: -17.628192901611328

Token 661: ' inner' (ID: 12694)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.11645596474409103
    2. 'self' → logprob: -2.3664560317993164
    3. '(self' → logprob: -4.366456031799316
    4. '       ' → logprob: -5.991456031799316
    5. ' return' → logprob: -7.116456031799316
    6. ' self' → logprob: -10.116456031799316
    7. '(' → logprob: -10.616456031799316
    8. '{return' → logprob: -11.116456031799316
    9. '(
' → logprob: -11.616456031799316
    10. '   ' → logprob: -11.991456031799316

Token 662: ' once' (ID: 4730)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5935783982276917
    2. 'return' → logprob: -1.3435783386230469
    3. '()
' → logprob: -1.8435783386230469
    4. '       ' → logprob: -3.593578338623047
    5. '().' → logprob: -7.843578338623047
    6. ' return' → logprob: -8.093578338623047
    7. '()\' → logprob: -9.343578338623047
    8. '.return' → logprob: -9.718578338623047
    9. '   ' → logprob: -10.218578338623047
    10. '()
' → logprob: -10.218578338623047

Token 663: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47519561648368835
    2. 'return' → logprob: -0.9751956462860107
    3. ' return' → logprob: -6.850195407867432
    4. '()' → logprob: -11.47519588470459
    5. '   ' → logprob: -11.47519588470459
    6. '	return' → logprob: -11.60019588470459
    7. '	' → logprob: -11.85019588470459
    8. '{return' → logprob: -12.22519588470459
    9. '
' → logprob: -12.72519588470459
    10. '(' → logprob: -13.10019588470459

Token 664: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10172132402658463
    2. 'return' → logprob: -2.3517212867736816
    3. ' return' → logprob: -6.601721286773682
    4. '
' → logprob: -10.35172176361084
    5. '	return' → logprob: -10.35172176361084
    6. '	' → logprob: -10.47672176361084
    7. '{return' → logprob: -10.97672176361084
    8. '```' → logprob: -10.97672176361084
    9. '   ' → logprob: -11.47672176361084
    10. '           ' → logprob: -13.10172176361084

Token 665: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.000581388536375016
    2. '       ' → logprob: -7.50058126449585
    3. ' return' → logprob: -10.500581741333008
    4. '	return' → logprob: -14.250581741333008
    5. '
' → logprob: -16.625581741333008
    6. '```' → logprob: -16.875581741333008
    7. '{return' → logprob: -17.250581741333008
    8. '   ' → logprob: -17.875581741333008
    9. '	' → logprob: -18.125581741333008
    10. ':return' → logprob: -18.500581741333008

Token 666: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.008614926598966122
    2. ' self' → logprob: -4.758615016937256
    3. '(self' → logprob: -15.133614540100098
    4. '{' → logprob: -17.008615493774414
    5. '	self' → logprob: -17.508615493774414
    6. 'set' → logprob: -17.883615493774414
    7. '       ' → logprob: -19.133615493774414
    8. '   ' → logprob: -19.508615493774414
    9. '=self' → logprob: -20.133615493774414
    10. '`' → logprob: -20.883615493774414

Token 667: '.inner' (ID: 15750)
  Prédit: '.inner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.inner' → logprob: -9.388769103679806e-05
    2. '.' → logprob: -9.500093460083008
    3. ' .' → logprob: -12.125093460083008
    4. '.evaluate' → logprob: -12.500093460083008
    5. 'inner' → logprob: -12.750093460083008
    6. '.eval' → logprob: -13.375093460083008
    7. '.outer' → logprob: -13.750093460083008
    8. '.in' → logprob: -14.375093460083008
    9. '.return' → logprob: -14.625093460083008
    10. ').' → logprob: -14.875093460083008

Token 668: '.evaluate' (ID: 71397)
  Prédit: '.evaluate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.evaluate' → logprob: -0.0150088956579566
    2. '.' → logprob: -4.390008926391602
    3. 'evaluate' → logprob: -7.015008926391602
    4. '._' → logprob: -7.140008926391602
    5. ' .' → logprob: -7.515008926391602
    6. '```' → logprob: -9.640008926391602
    7. '   ' → logprob: -10.640008926391602
    8. '.eval' → logprob: -10.890008926391602
    9. ').' → logprob: -11.140008926391602
    10. '
' → logprob: -11.390008926391602

Token 669: '_all' (ID: 13305)
  Prédit: '_all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_all' → logprob: 0.0
    2. 'All' → logprob: -18.125
    3. '_one' → logprob: -18.5
    4. '()' → logprob: -18.875
    5. 'all' → logprob: -19.0
    6. '_a' → logprob: -19.375
    7. '_' → logprob: -19.625
    8. ' _' → logprob: -19.75
    9. '__' → logprob: -19.75
    10. '_al' → logprob: -20.0

Token 670: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -8.244413766078651e-05
    2. '()
' → logprob: -9.500082015991211
    3. '()\' → logprob: -12.250082015991211
    4. '()

' → logprob: -14.500082015991211
    5. '()`' → logprob: -14.625082015991211
    6. '()+' → logprob: -14.875082015991211
    7. ' ()' → logprob: -14.875082015991211
    8. '(' → logprob: -15.500082015991211
    9. '().' → logprob: -15.875082015991211
    10. '()<' → logprob: -16.00008201599121

Token 671: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0452326275408268
    2. '<|end|>' → logprob: -3.1702325344085693
    3. 'def' → logprob: -7.170232772827148
    4. '#' → logprob: -7.420232772827148
    5. 'import' → logprob: -8.170232772827148
    6. '```' → logprob: -8.545232772827148
    7. '
' → logprob: -8.920232772827148
    8. ')' → logprob: -9.170232772827148
    9. '<|end|>' → logprob: -9.545232772827148
    10. ' class' → logprob: -10.670232772827148

Token 672: ' Parser' (ID: 44901)
  Prédit: 'Parser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parser' → logprob: -0.7777069211006165
    2. 'Tokenizer' → logprob: -1.1527068614959717
    3. 'Token' → logprob: -2.0277068614959717
    4. ' Parser' → logprob: -3.0277068614959717
    5. 'Expression' → logprob: -4.027707099914551
    6. ' Token' → logprob: -4.402707099914551
    7. 'Variable' → logprob: -5.402707099914551
    8. 'Operator' → logprob: -5.652707099914551
    9. 'Binary' → logprob: -6.027707099914551
    10. ' tokenizer' → logprob: -7.277707099914551

Token 673: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006080837454646826
    2. '(' → logprob: -5.881080627441406
    3. '():' → logprob: -6.256080627441406
    4. ':
' → logprob: -7.881080627441406
    5. '(object' → logprob: -8.131080627441406
    6. '<|end|>' → logprob: -8.506080627441406
    7. '):' → logprob: -9.256080627441406
    8. ' :' → logprob: -9.256080627441406
    9. '(":' → logprob: -9.631080627441406
    10. '(Parser' → logprob: -9.756080627441406

Token 674: '   ' (ID: 271)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.5289254188537598
    2. '   ' → logprob: -0.9039254188537598
    3. '    ' → logprob: -5.52892541885376
    4. 'def' → logprob: -7.02892541885376
    5. '	def' → logprob: -8.653924942016602
    6. ' indentation' → logprob: -8.653924942016602
    7. ':' → logprob: -9.403924942016602
    8. ' ' → logprob: -10.028924942016602
    9. '(indent' → logprob: -10.028924942016602
    10. ',' → logprob: -10.153924942016602

Token 675: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.001511408481746912
    2. 'def' (adapté à ' def') → logprob: -6.501511573791504
    3. '   ' → logprob: -11.876511573791504
    4. ' __' → logprob: -13.126511573791504
    5. 'class' → logprob: -16.751510620117188
    6. '	def' → logprob: -17.376510620117188
    7. ' class' → logprob: -18.376510620117188
    8. '__' → logprob: -18.626510620117188
    9. ' de' → logprob: -18.626510620117188
    10. 'de' → logprob: -18.626510620117188

Token 676: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.1894063800573349
    2. 'init' → logprob: -1.814406394958496
    3. ' __' → logprob: -5.689406394958496
    4. '```' → logprob: -5.939406394958496
    5. '_init' → logprob: -6.064406394958496
    6. 'def' → logprob: -6.939406394958496
    7. 'staticmethod' → logprob: -9.314406394958496
    8. ' def' → logprob: -9.939406394958496
    9. ' init' → logprob: -10.314406394958496
    10. '...' → logprob: -10.689406394958496

Token 677: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. 'call' → logprob: -17.5
    3. ' init' → logprob: -18.125
    4. '```' → logprob: -19.25
    5. '   ' → logprob: -19.5
    6. '_init' → logprob: -19.75
    7. 'new' → logprob: -19.75
    8. 'def' → logprob: -20.25
    9. 'int' → logprob: -20.5
    10. '__' → logprob: -21.125

Token 678: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.01740948297083378
    2. '(' → logprob: -4.392409324645996
    3. '__(' → logprob: -6.142409324645996
    4. '<|end|>' → logprob: -6.517409324645996
    5. 'self' → logprob: -7.267409324645996
    6. ' (' → logprob: -8.517409324645996
    7. ')(' → logprob: -9.392409324645996
    8. '__(
' → logprob: -10.517409324645996
    9. '<|end|>' → logprob: -10.517409324645996
    10. '<>(' → logprob: -10.892409324645996

Token 679: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -6.718606891809031e-05
    2. ' self' → logprob: -9.625066757202148
    3. '   ' → logprob: -14.500066757202148
    4. '(self' → logprob: -15.125066757202148
    5. '
' → logprob: -16.00006675720215
    6. ')' → logprob: -16.00006675720215
    7. '	self' → logprob: -17.62506675720215
    8. '       ' → logprob: -18.12506675720215
    9. '):
' → logprob: -18.37506675720215
    10. ',' → logprob: -18.50006675720215

Token 680: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04058684781193733
    2. 'self' → logprob: -3.2905869483947754
    3. '(self' → logprob: -6.915586948394775
    4. ' self' → logprob: -7.040586948394775
    5. ' ,' → logprob: -8.415586471557617
    6. '):
' → logprob: -9.040586471557617
    7. '):' → logprob: -9.290586471557617
    8. ' (' → logprob: -10.040586471557617
    9. '   ' → logprob: -10.290586471557617
    10. ',self' → logprob: -10.790586471557617

Token 681: ' s' (ID: 265)
  Prédit: 'text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'text' → logprob: -0.03782789781689644
    2. ' text' → logprob: -4.287827968597412
    3. 'expr' → logprob: -4.412827968597412
    4. 'expression' → logprob: -4.912827968597412
    5. 's' → logprob: -6.537827968597412
    6. 'tokens' → logprob: -6.662827968597412
    7. ' expression' → logprob: -7.662827968597412
    8. 'input' → logprob: -8.162827491760254
    9. ' expr' → logprob: -8.787827491760254
    10. 'self' → logprob: -9.412827491760254

Token 682: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.022181879729032516
    2. '):' → logprob: -4.147181987762451
    3. '):
' → logprob: -5.147181987762451
    4. ' :' → logprob: -8.772181510925293
    5. ':str' → logprob: -9.772181510925293
    6. '_:' → logprob: -10.272181510925293
    7. '   ' → logprob: -10.522181510925293
    8. ' ):' → logprob: -11.897181510925293
    9. ')' → logprob: -12.147181510925293
    10. '):
' → logprob: -12.272181510925293

Token 683: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.00013119110371917486
    2. ' str' → logprob: -9.000131607055664
    3. ')' → logprob: -12.375131607055664
    4. '[str' → logprob: -13.625131607055664
    5. 's' → logprob: -13.750131607055664
    6. '=str' → logprob: -15.500131607055664
    7. ':str' → logprob: -15.500131607055664
    8. '(str' → logprob: -15.625131607055664
    9. '	str' → logprob: -15.750131607055664
    10. '   ' → logprob: -15.750131607055664

Token 684: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.38794374465942383
    2. '):
' → logprob: -1.1379437446594238
    3. ')' → logprob: -7.137943744659424
    4. '):
' → logprob: -8.387943267822266
    5. ':' → logprob: -10.762943267822266
    6. '   ' → logprob: -11.012943267822266
    7. ',' → logprob: -11.762943267822266
    8. ' ):' → logprob: -13.637943267822266
    9. '       ' → logprob: -14.012943267822266
    10. '):

' → logprob: -14.637943267822266

Token 685: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06379896402359009
    2. 'self' → logprob: -2.8137989044189453
    3. ' self' → logprob: -6.313798904418945
    4. '   ' → logprob: -11.563798904418945
    5. 'def' → logprob: -12.438798904418945
    6. '      ' → logprob: -14.063798904418945
    7. '	self' → logprob: -14.063798904418945
    8. 'import' → logprob: -14.438798904418945
    9. ' ' → logprob: -14.438798904418945
    10. '(self' → logprob: -14.563798904418945

Token 686: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00010711929644457996
    2. ' self' → logprob: -9.500106811523438
    3. '       ' → logprob: -10.375106811523438
    4. '   ' → logprob: -14.250106811523438
    5. 'import' → logprob: -15.125106811523438
    6. 's' → logprob: -17.250106811523438
    7. '	self' → logprob: -17.625106811523438
    8. '(self' → logprob: -18.500106811523438
    9. '=self' → logprob: -19.000106811523438
    10. '
' → logprob: -19.000106811523438

Token 687: '.s' (ID: 640)
  Prédit: '.s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -0.03416818007826805
    2. '.text' → logprob: -4.034168243408203
    3. '.input' → logprob: -5.409168243408203
    4. '.string' → logprob: -5.659168243408203
    5. 's' → logprob: -5.784168243408203
    6. '.expression' → logprob: -6.784168243408203
    7. '.code' → logprob: -7.284168243408203
    8. '.tokens' → logprob: -7.409168243408203
    9. '.expr' → logprob: -7.534168243408203
    10. '.pos' → logprob: -7.909168243408203

Token 688: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5247825980186462
    2. '=' → logprob: -0.8997825980186462
    3. '<|end|>' → logprob: -7.649782657623291
    4. ',' → logprob: -7.649782657623291
    5. 'import' → logprob: -8.524782180786133
    6. ')' → logprob: -9.274782180786133
    7. '   ' → logprob: -10.274782180786133
    8. ':' → logprob: -10.399782180786133
    9. 's' → logprob: -10.399782180786133
    10. '=s' → logprob: -10.399782180786133

Token 689: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -9.615255839889869e-05
    2. ' s' → logprob: -9.250096321105957
    3. '   ' → logprob: -19.37509536743164
    4. ' ' → logprob: -19.87509536743164
    5. '_s' → logprob: -21.37509536743164
    6. '	s' → logprob: -21.62509536743164
    7. '{s' → logprob: -22.12509536743164
    8. '  ' → logprob: -22.75009536743164
    9. '    ' → logprob: -22.75009536743164
    10. '`s' → logprob: -22.87509536743164

Token 690: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25525104999542236
    2. 'self' → logprob: -1.6302510499954224
    3. ' self' → logprob: -4.380250930786133
    4. '   ' → logprob: -5.005250930786133
    5. '
' → logprob: -5.755250930786133
    6. '<|end|>' → logprob: -6.255250930786133
    7. ',' → logprob: -6.380250930786133
    8. ' ' → logprob: -7.130250930786133
    9. '	self' → logprob: -8.130250930786133
    10. '    ' → logprob: -8.255250930786133

Token 691: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007283357437700033
    2. 'self' → logprob: -5.1322832107543945
    3. '   ' → logprob: -6.8822832107543945
    4. ' self' → logprob: -8.257283210754395
    5. ' ' → logprob: -11.132283210754395
    6. '	self' → logprob: -11.507283210754395
    7. 'def' → logprob: -12.007283210754395
    8. '	' → logprob: -12.007283210754395
    9. ',' → logprob: -12.132283210754395
    10. '      ' → logprob: -12.132283210754395

Token 692: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.003659810870885849
    2. '   ' → logprob: -6.253659725189209
    3. '0' → logprob: -6.503659725189209
    4. ' self' → logprob: -8.628660202026367
    5. '       ' → logprob: -10.253660202026367
    6. 'pos' → logprob: -11.003660202026367
    7. ' ' → logprob: -14.128660202026367
    8. '1' → logprob: -16.378660202026367
    9. '	self' → logprob: -16.753660202026367
    10. 'len' → logprob: -17.003660202026367

Token 693: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -0.22406581044197083
    2. 'pos' → logprob: -2.4740657806396484
    3. '_pos' → logprob: -2.4740657806396484
    4. '.index' → logprob: -4.099065780639648
    5. '._' → logprob: -5.724065780639648
    6. '_len' → logprob: -5.849065780639648
    7. '.length' → logprob: -5.849065780639648
    8. '.i' → logprob: -6.099065780639648
    9. '_index' → logprob: -6.724065780639648
    10. '.idx' → logprob: -6.724065780639648

Token 694: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.13799472153186798
    2. '+=' → logprob: -2.2629947662353516
    3. ' =' → logprob: -4.387994766235352
    4. '=' → logprob: -4.762994766235352
    5. '_' → logprob: -5.887994766235352
    6. '<|end|>' → logprob: -7.387994766235352
    7. '+' → logprob: -8.262994766235352
    8. ' ' → logprob: -9.512994766235352
    9. ')' → logprob: -10.262994766235352
    10. '_=' → logprob: -11.387994766235352

Token 695: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.493430894101039e-05
    2. ' ' → logprob: -9.500075340270996
    3. '۰' → logprob: -22.62507438659668
    4. '  ' → logprob: -24.00007438659668
    5. '   ' → logprob: -25.00007438659668
    6. '012' → logprob: -25.50007438659668
    7. '<|end|>' → logprob: -25.62507438659668
    8. '1' → logprob: -26.00007438659668
    9. '```' → logprob: -26.37507438659668
    10. ' ' → logprob: -26.37507438659668

Token 696: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -18.25
    3. '۰' → logprob: -21.125
    4. '```' → logprob: -23.75
    5. '   ' → logprob: -24.75
    6. '000' → logprob: -25.0
    7. '٠' → logprob: -25.25
    8. '=' → logprob: -25.375
    9. '০' → logprob: -25.375
    10. '00' → logprob: -25.5

Token 697: '
    
' (ID: 15698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14025245606899261
    2. '    
' → logprob: -2.7652523517608643
    3. 'def' → logprob: -3.3902523517608643
    4. ' def' → logprob: -3.7652523517608643
    5. '
' → logprob: -5.390252590179443
    6. '<|end|>' → logprob: -6.765252590179443
    7. '       ' → logprob: -6.890252590179443
    8. '        
' → logprob: -6.890252590179443
    9. '  
' → logprob: -7.015252590179443
    10. '```' → logprob: -7.390252590179443

Token 698: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6871486902236938
    2. '   ' → logprob: -0.8121486902236938
    3. ' def' → logprob: -2.9371485710144043
    4. '	def' → logprob: -10.312149047851562
    5. '    
' → logprob: -10.687149047851562
    6. '@' → logprob: -12.562149047851562
    7. '```' → logprob: -12.937149047851562
    8. '_' → logprob: -13.562149047851562
    9. '
' → logprob: -13.687149047851562
    10. ')' → logprob: -14.187149047851562

Token 699: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0026789873372763395
    2. ' def' → logprob: -6.002678871154785
    3. '   ' → logprob: -8.502678871154785
    4. '	def' → logprob: -15.252678871154785
    5. 'de' → logprob: -18.0026798248291
    6. '
' → logprob: -18.1276798248291
    7. '```' → logprob: -18.2526798248291
    8. 'Def' → logprob: -18.3776798248291
    9. '    
' → logprob: -18.5026798248291
    10. ':def' → logprob: -19.6276798248291

Token 700: ' peek' (ID: 54757)
  Prédit: 'peek'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'peek' → logprob: -0.428043007850647
    2. ' peek' → logprob: -1.678043007850647
    3. 'parse' → logprob: -3.5530428886413574
    4. '_next' → logprob: -3.8030428886413574
    5. ' parse' → logprob: -4.053042888641357
    6. 'eat' → logprob: -4.178042888641357
    7. 'skip' → logprob: -4.303042888641357
    8. '_pe' → logprob: -4.678042888641357
    9. ' skip' → logprob: -4.678042888641357
    10. ' def' → logprob: -4.928042888641357

Token 701: '(self' (ID: 2402)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004908296745270491
    2. '(' → logprob: -5.379908084869385
    3. ' ()' → logprob: -8.879908561706543
    4. '(self' → logprob: -9.254908561706543
    5. '()>' → logprob: -11.504908561706543
    6. '():' → logprob: -11.879908561706543
    7. ' (' → logprob: -12.504908561706543
    8. '())' → logprob: -12.879908561706543
    9. '<|end|>' → logprob: -12.879908561706543
    10. '('' → logprob: -13.004908561706543

Token 702: ')' (ID: 8)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0011961825657635927
    2. ' ()' → logprob: -7.251196384429932
    3. '(' → logprob: -8.126195907592773
    4. '():' → logprob: -9.001195907592773
    5. '(self' → logprob: -10.251195907592773
    6. '()>' → logprob: -12.251195907592773
    7. '()[' → logprob: -12.626195907592773
    8. ' (' → logprob: -12.751195907592773
    9. '())' → logprob: -12.751195907592773
    10. '()">' → logprob: -13.126195907592773

Token 703: ' ->' (ID: 2747)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.17811936140060425
    2. '(self' → logprob: -1.928119421005249
    3. '(' → logprob: -4.30311918258667
    4. '():' → logprob: -5.67811918258667
    5. '():
' → logprob: -7.67811918258667
    6. ' ()' → logprob: -8.678119659423828
    7. ' (' → logprob: -9.928119659423828
    8. 'self' → logprob: -10.053119659423828
    9. '()`' → logprob: -11.678119659423828
    10. '()>' → logprob: -12.053119659423828

Token 704: ' Optional' (ID: 19351)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.25301024317741394
    2. ' self' → logprob: -1.5030102729797363
    3. ' None' → logprob: -8.003009796142578
    4. 'None' → logprob: -8.128009796142578
    5. ''' → logprob: -8.378009796142578
    6. 'str' → logprob: -9.378009796142578
    7. '(self' → logprob: -10.003009796142578
    8. ' '' → logprob: -10.253009796142578
    9. ' (' → logprob: -10.378009796142578
    10. ' str' → logprob: -11.878009796142578

Token 705: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -2.3557529857498594e-05
    2. '[int' → logprob: -11.25002384185791
    3. '[' → logprob: -12.00002384185791
    4. '(str' → logprob: -12.50002384185791
    5. 'str' → logprob: -14.37502384185791
    6. '[
' → logprob: -17.125022888183594
    7. ' str' → logprob: -18.125022888183594
    8. '[self' → logprob: -18.625022888183594
    9. ':str' → logprob: -20.000022888183594
    10. '	str' → logprob: -20.500022888183594

Token 706: ']:
' (ID: 22152)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0678505077958107
    2. '():
' → logprob: -2.8178505897521973
    3. ']:' → logprob: -5.942850589752197
    4. ':' → logprob: -6.567850589752197
    5. '()' → logprob: -6.942850589752197
    6. '):' → logprob: -7.442850589752197
    7. ']:
' → logprob: -9.192850112915039
    8. '):
' → logprob: -9.817850112915039
    9. ' ():' → logprob: -10.192850112915039
    10. '(' → logprob: -10.567850112915039

Token 707: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.531510591506958
    2. ' if' → logprob: -1.281510591506958
    3. '       ' → logprob: -2.781510591506958
    4. 'return' → logprob: -2.781510591506958
    5. ' return' → logprob: -4.531510353088379
    6. '   ' → logprob: -12.156510353088379
    7. '```' → logprob: -13.656510353088379
    8. '()' → logprob: -14.156510353088379
    9. ' ' → logprob: -14.406510353088379
    10. 'None' → logprob: -14.656510353088379

Token 708: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.20919831097126007
    2. 'return' → logprob: -1.7091983556747437
    3. ' if' → logprob: -5.209198474884033
    4. ' return' → logprob: -6.459198474884033
    5. 'self' → logprob: -7.334198474884033
    6. '       ' → logprob: -10.209197998046875
    7. '   ' → logprob: -10.459197998046875
    8. ' self' → logprob: -12.709197998046875
    9. 'None' → logprob: -14.709197998046875
    10. '        
' → logprob: -15.584197998046875

Token 709: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.20141343772411346
    2. ' self' → logprob: -1.7014133930206299
    3. '	self' → logprob: -16.951414108276367
    4. '(self' → logprob: -17.826414108276367
    5. '   ' → logprob: -19.576414108276367
    6. '_self' → logprob: -20.576414108276367
    7. '=self' → logprob: -20.701414108276367
    8. ' ' → logprob: -20.826414108276367
    9. '[self' → logprob: -21.076414108276367
    10. ' ' → logprob: -21.201414108276367

Token 710: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -2.15310683415737e-05
    2. 'pos' → logprob: -10.750021934509277
    3. '[pos' → logprob: -17.25002098083496
    4. '	pos' → logprob: -17.75002098083496
    5. ' pos' → logprob: -17.87502098083496
    6. '.' → logprob: -18.00002098083496
    7. '.s' → logprob: -18.25002098083496
    8. '_pos' → logprob: -18.75002098083496
    9. ',pos' → logprob: -19.25002098083496
    10. 'self' → logprob: -20.62502098083496

Token 711: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.08782096952199936
    2. '<len' → logprob: -2.7128210067749023
    3. ' <' → logprob: -4.087821006774902
    4. '>=' → logprob: -7.587821006774902
    5. '<size' → logprob: -8.462821006774902
    6. '[' → logprob: -9.837821006774902
    7. '<int' → logprob: -9.962821006774902
    8. ' ' → logprob: -10.462821006774902
    9. '<n' → logprob: -10.962821006774902
    10. ' >=' → logprob: -11.212821006774902

Token 712: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -4.842555426876061e-06
    2. ' len' → logprob: -12.250004768371582
    3. 'self' → logprob: -19.5000057220459
    4. '[len' → logprob: -19.7500057220459
    5. '=len' → logprob: -19.7500057220459
    6. '(len' → logprob: -20.0000057220459
    7. '	len' → logprob: -20.0000057220459
    8. 'length' → logprob: -20.1250057220459
    9. '   ' → logprob: -21.1250057220459
    10. '<len' → logprob: -21.5000057220459

Token 713: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.0445127372804563e-05
    2. '(' → logprob: -12.00001049041748
    3. 'self' → logprob: -12.37501049041748
    4. ' self' → logprob: -17.875009536743164
    5. 's' → logprob: -18.000009536743164
    6. '(
' → logprob: -18.750009536743164
    7. '[self' → logprob: -19.125009536743164
    8. '(s' → logprob: -19.125009536743164
    9. '=self' → logprob: -19.625009536743164
    10. ' (' → logprob: -20.375009536743164

Token 714: '.s' (ID: 640)
  Prédit: '.s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -3.173704271830502e-06
    2. '.' → logprob: -13.37500286102295
    3. 's' → logprob: -13.75000286102295
    4. ' .' → logprob: -14.62500286102295
    5. ').' → logprob: -18.500003814697266
    6. '_s' → logprob: -19.250003814697266
    7. '	s' → logprob: -20.125003814697266
    8. ')' → logprob: -20.125003814697266
    9. 'self' → logprob: -20.125003814697266
    10. '(s' → logprob: -20.375003814697266

Token 715: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.034386925399303436
    2. '):
' → logprob: -3.4093868732452393
    3. ')' → logprob: -7.909387111663818
    4. ':' → logprob: -8.65938663482666
    5. ']:' → logprob: -9.53438663482666
    6. '):
' → logprob: -9.90938663482666
    7. 'self' → logprob: -10.15938663482666
    8. '():' → logprob: -11.90938663482666
    9. '       ' → logprob: -12.15938663482666
    10. 's' → logprob: -12.28438663482666

Token 716: '           ' (ID: 352)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.09358695894479752
    2. ' return' → logprob: -2.4685869216918945
    3. '           ' → logprob: -5.7185869216918945
    4. ':return' → logprob: -7.4685869216918945
    5. '{return' → logprob: -8.093586921691895
    6. '	return' → logprob: -8.718586921691895
    7. '       ' → logprob: -9.218586921691895
    8. ':
' → logprob: -9.343586921691895
    9. '   ' → logprob: -10.218586921691895
    10. '
' → logprob: -10.593586921691895

Token 717: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0005542247672565281
    2. ' return' → logprob: -7.500554084777832
    3. '           ' → logprob: -13.875554084777832
    4. '
' → logprob: -16.75055503845215
    5. '	return' → logprob: -17.25055503845215
    6. '            
' → logprob: -18.00055503845215
    7. '{return' → logprob: -18.12555503845215
    8. ':return' → logprob: -18.50055503845215
    9. 'eturn' → logprob: -18.62555503845215
    10. '```' → logprob: -19.00055503845215

Token 718: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -9.615255839889869e-05
    2. ' self' → logprob: -9.250096321105957
    3. '[self' → logprob: -19.12509536743164
    4. '(self' → logprob: -20.50009536743164
    5. '	self' → logprob: -20.62509536743164
    6. 's' → logprob: -21.75009536743164
    7. '=self' → logprob: -22.25009536743164
    8. '$self' → logprob: -23.25009536743164
    9. '`' → logprob: -23.62509536743164
    10. 'Self' → logprob: -24.37509536743164

Token 719: '.s' (ID: 640)
  Prédit: '.s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -5.6696149840718135e-05
    2. '.' → logprob: -10.125056266784668
    3. 'self' → logprob: -11.250056266784668
    4. ' .' → logprob: -13.250056266784668
    5. 's' → logprob: -13.500056266784668
    6. '[' → logprob: -16.125057220458984
    7. '   ' → logprob: -16.250057220458984
    8. '.self' → logprob: -16.250057220458984
    9. '[self' → logprob: -16.750057220458984
    10. ').' → logprob: -16.875057220458984

Token 720: '[self' (ID: 33734)
  Prédit: '[self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -1.1041145626222715e-05
    2. 'self' → logprob: -11.750011444091797
    3. '[' → logprob: -12.750011444091797
    4. '[
' → logprob: -16.000011444091797
    5. ' self' → logprob: -16.875011444091797
    6. '	self' → logprob: -18.125011444091797
    7. '
' → logprob: -18.875011444091797
    8. '(self' → logprob: -19.500011444091797
    9. '   ' → logprob: -20.625011444091797
    10. '```' → logprob: -20.750011444091797

Token 721: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -0.08168357610702515
    2. '.s' → logprob: -3.20668363571167
    3. '[self' → logprob: -3.33168363571167
    4. 'self' → logprob: -6.33168363571167
    5. 'pos' → logprob: -8.081683158874512
    6. '[pos' → logprob: -9.206683158874512
    7. '.code' → logprob: -12.331683158874512
    8. '.self' → logprob: -12.331683158874512
    9. '[' → logprob: -12.456683158874512
    10. ' self' → logprob: -12.706683158874512

Token 722: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007508667651563883
    2. ']
' → logprob: -5.132508754730225
    3. ' ]' → logprob: -7.132508754730225
    4. ')' → logprob: -8.007508277893066
    5. '       ' → logprob: -8.382508277893066
    6. '<|end|>' → logprob: -9.507508277893066
    7. '[' → logprob: -10.632508277893066
    8. '<|end|>' → logprob: -10.757508277893066
    9. '   ' → logprob: -11.132508277893066
    10. '
' → logprob: -11.132508277893066

Token 723: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18775567412376404
    2. '<|end|>' → logprob: -1.9377557039260864
    3. '   ' → logprob: -4.687755584716797
    4. '    
' → logprob: -5.562755584716797
    5. 'return' → logprob: -5.812755584716797
    6. '
' → logprob: -6.062755584716797
    7. '  
' → logprob: -6.187755584716797
    8. '        
' → logprob: -6.812755584716797
    9. '```' → logprob: -7.062755584716797
    10. '<|end|>' → logprob: -7.312755584716797

Token 724: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05813733860850334
    2. '
' → logprob: -3.3081374168395996
    3. 'return' (adapté à ' return') → logprob: -4.4331374168396
    4. '   ' → logprob: -6.4331374168396
    5. '        
' → logprob: -6.4331374168396
    6. '	' → logprob: -6.8081374168396
    7. '           ' → logprob: -7.8081374168396
    8. '  
' → logprob: -7.8081374168396
    9. '<|end|>' → logprob: -7.8081374168396
    10. 'else' → logprob: -7.9331374168396

Token 725: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.6931471824645996
    2. 'None' → logprob: -0.6931471824645996
    3. '_None' → logprob: -16.318147659301758
    4. '(None' → logprob: -18.318147659301758
    5. ',None' → logprob: -19.443147659301758
    6. '_none' → logprob: -19.943147659301758
    7. '.None' → logprob: -20.568147659301758
    8. '=None' → logprob: -20.818147659301758
    9. 'none' → logprob: -21.318147659301758
    10. ' ' → logprob: -21.943147659301758

Token 726: '

' (ID: 279)
  Prédit: '    
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    
' → logprob: -0.3549722135066986
    2. '   ' → logprob: -1.479972243309021
    3. '<|end|>' → logprob: -2.8549721240997314
    4. '  
' → logprob: -5.7299723625183105
    5. 'def' → logprob: -6.1049723625183105
    6. '   
' → logprob: -6.7299723625183105
    7. '        
' → logprob: -6.7299723625183105
    8. '
' → logprob: -6.9799723625183105
    9. '<|end|>' → logprob: -7.1049723625183105
    10. '.' → logprob: -7.1049723625183105

Token 727: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6137306690216064
    2. 'def' → logprob: -0.8637306690216064
    3. ' def' → logprob: -3.3637306690216064
    4. '    
' → logprob: -7.113730430603027
    5. '```' → logprob: -7.238730430603027
    6. ' ' → logprob: -8.363730430603027
    7. ')' → logprob: -8.488730430603027
    8. ' 
' → logprob: -8.988730430603027
    9. ''' → logprob: -9.363730430603027
    10. '    ' → logprob: -9.738730430603027

Token 728: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.001052934443578124
    2. '   ' → logprob: -7.2510528564453125
    3. ' def' → logprob: -8.001052856445312
    4. '    
' → logprob: -11.876052856445312
    5. '
' → logprob: -15.001052856445312
    6. '        
' → logprob: -15.751052856445312
    7. ' 
' → logprob: -15.876052856445312
    8. '	def' → logprob: -15.876052856445312
    9. '```' → logprob: -17.376052856445312
    10. '  
' → logprob: -17.501052856445312

Token 729: ' consume' (ID: 34881)
  Prédit: 'consume'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'consume' → logprob: -0.5006084442138672
    2. 'advance' → logprob: -1.3756084442138672
    3. 'eat' → logprob: -2.125608444213867
    4. 'skip' → logprob: -4.500608444213867
    5. 'next' → logprob: -5.250608444213867
    6. ' consume' → logprob: -6.125608444213867
    7. ' advance' → logprob: -6.625608444213867
    8. '_next' → logprob: -7.375608444213867
    9. ' eat' → logprob: -8.250608444213867
    10. ' skip' → logprob: -8.500608444213867

Token 730: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.07034485042095184
    2. '(' → logprob: -2.945344924926758
    3. '()' → logprob: -4.320344924926758
    4. ' (' → logprob: -6.945344924926758
    5. '('' → logprob: -7.570344924926758
    6. 'self' → logprob: -8.945344924926758
    7. '(char' → logprob: -8.945344924926758
    8. '("("' → logprob: -9.070344924926758
    9. '_char' → logprob: -9.820344924926758
    10. '_' → logprob: -10.945344924926758

Token 731: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17275017499923706
    2. '()' → logprob: -2.797750234603882
    3. '())' → logprob: -3.047750234603882
    4. '(' → logprob: -3.547750234603882
    5. '(self' → logprob: -4.547749996185303
    6. 'self' → logprob: -5.922749996185303
    7. ' ' → logprob: -6.547749996185303
    8. '(char' → logprob: -6.797749996185303
    9. 'char' → logprob: -7.047749996185303
    10. ' )' → logprob: -7.047749996185303

Token 732: ' ch' (ID: 549)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.596388339996338
    2. 'char' → logprob: -1.846388339996338
    3. 'expected' → logprob: -1.971388339996338
    4. ' ' → logprob: -2.471388339996338
    5. 'c' → logprob: -2.471388339996338
    6. ' n' → logprob: -2.596388339996338
    7. 'token' → logprob: -2.721388339996338
    8. 'n' → logprob: -2.721388339996338
    9. ' expected' → logprob: -3.096388339996338
    10. ' c' → logprob: -3.721388339996338

Token 733: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05687840282917023
    2. ':str' → logprob: -3.0568783283233643
    3. ')' → logprob: -5.306878566741943
    4. '):' → logprob: -5.931878566741943
    5. '):
' → logprob: -7.556878566741943
    6. '=None' → logprob: -10.681878089904785
    7. '   ' → logprob: -11.306878089904785
    8. 'self' → logprob: -11.306878089904785
    9. ' :' → logprob: -11.556878089904785
    10. '  ' → logprob: -11.931878089904785

Token 734: ' Optional' (ID: 19351)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.0015261677326634526
    2. ' str' → logprob: -6.751526355743408
    3. 'Optional' → logprob: -8.00152587890625
    4. ')' → logprob: -11.37652587890625
    5. ' Optional' → logprob: -12.12652587890625
    6. '[str' → logprob: -13.00152587890625
    7. ' ' → logprob: -14.75152587890625
    8. '   ' → logprob: -15.00152587890625
    9. '(str' → logprob: -15.37652587890625
    10. 'char' → logprob: -15.50152587890625

Token 735: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -0.3943457305431366
    2. ':' → logprob: -1.394345760345459
    3. ')' → logprob: -3.519345760345459
    4. ':str' → logprob: -3.894345760345459
    5. '=' → logprob: -4.644345760345459
    6. '=None' → logprob: -4.894345760345459
    7. '=str' → logprob: -5.019345760345459
    8. '):' → logprob: -6.019345760345459
    9. '):
' → logprob: -7.269345760345459
    10. '[' → logprob: -7.894345760345459

Token 736: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00028052396373823285
    2. '=None' → logprob: -8.500280380249023
    3. '=' → logprob: -9.875280380249023
    4. ')=' → logprob: -11.875280380249023
    5. '):' → logprob: -12.000280380249023
    6. '=False' → logprob: -13.000280380249023
    7. '=True' → logprob: -13.000280380249023
    8. ' =' → logprob: -13.125280380249023
    9. '):
' → logprob: -13.250280380249023
    10. ' )' → logprob: -13.500280380249023

Token 737: ' =' (ID: 314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008092868141829967
    2. '=None' → logprob: -4.883092880249023
    3. '=' → logprob: -8.258092880249023
    4. '):
' → logprob: -8.758092880249023
    5. '):' → logprob: -10.508092880249023
    6. ' =' → logprob: -10.758092880249023
    7. '=False' → logprob: -11.883092880249023
    8. ':' → logprob: -12.258092880249023
    9. '=True' → logprob: -12.258092880249023
    10. ')=' → logprob: -12.758092880249023

Token 738: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -2.7848862373502925e-05
    2. ' None' → logprob: -10.500027656555176
    3. '=None' → logprob: -15.250027656555176
    4. '   ' → logprob: -16.750028610229492
    5. '(None' → logprob: -18.250028610229492
    6. 'No' → logprob: -19.500028610229492
    7. ''' → logprob: -19.750028610229492
    8. 'none' → logprob: -20.375028610229492
    9. ' ' → logprob: -20.375028610229492
    10. '_None' → logprob: -20.500028610229492

Token 739: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005271765403449535
    2. '):
' → logprob: -7.750527381896973
    3. '):' → logprob: -9.375527381896973
    4. ')->' → logprob: -11.500527381896973
    5. '   ' → logprob: -14.250527381896973
    6. ' )' → logprob: -15.000527381896973
    7. '):
' → logprob: -16.000526428222656
    8. '`)' → logprob: -16.125526428222656
    9. '):

' → logprob: -16.375526428222656
    10. ':' → logprob: -16.750526428222656

Token 740: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3377758264541626
    2. '(self' → logprob: -1.7127758264541626
    3. ':
' → logprob: -3.462775707244873
    4. '       ' → logprob: -3.462775707244873
    5. '   ' → logprob: -3.587775707244873
    6. ')' → logprob: -5.587775707244873
    7. '):
' → logprob: -6.087775707244873
    8. '():
' → logprob: -6.212775707244873
    9. '):' → logprob: -6.212775707244873
    10. '(' → logprob: -6.837775707244873

Token 741: ' str' (ID: 989)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.066855289041996
    2. ' self' → logprob: -3.1918551921844482
    3. 'ch' → logprob: -4.066855430603027
    4. 'str' → logprob: -5.441855430603027
    5. ' ch' → logprob: -6.941855430603027
    6. 'None' → logprob: -7.566855430603027
    7. ' str' → logprob: -8.441855430603027
    8. 'True' → logprob: -8.816855430603027
    9. ' None' → logprob: -9.566855430603027
    10. ' ' → logprob: -10.316855430603027

Token 742: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06463250517845154
    2. ':
' → logprob: -3.6896324157714844
    3. '       ' → logprob: -3.8146324157714844
    4. '   ' → logprob: -5.314632415771484
    5. '{' → logprob: -5.439632415771484
    6. '(self' → logprob: -6.564632415771484
    7. '):' → logprob: -6.689632415771484
    8. '():' → logprob: -6.689632415771484
    9. '():
' → logprob: -6.814632415771484
    10. '):
' → logprob: -7.189632415771484

Token 743: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33576515316963196
    2. 'ch' → logprob: -2.2107651233673096
    3. 'c' → logprob: -2.5857651233673096
    4. ' c' → logprob: -3.2107651233673096
    5. 'self' → logprob: -3.9607651233673096
    6. 's' → logprob: -5.085765361785889
    7. ' if' → logprob: -5.085765361785889
    8. ' s' → logprob: -5.335765361785889
    9. 'char' → logprob: -5.335765361785889
    10. 'token' → logprob: -5.460765361785889

Token 744: ' if' (ID: 538)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.1237189993262291
    2. 'ch' → logprob: -2.6237189769744873
    3. 'token' → logprob: -4.248719215393066
    4. 'self' → logprob: -4.498719215393066
    5. 'char' → logprob: -4.998719215393066
    6. 'assert' → logprob: -4.998719215393066
    7. 'if' (adapté à ' if') → logprob: -6.373719215393066
    8. ' c' → logprob: -6.498719215393066
    9. '       ' → logprob: -6.873719215393066
    10. 'return' → logprob: -8.623719215393066

Token 745: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.8469359874725342
    2. 'ch' → logprob: -0.9719359874725342
    3. ' ch' → logprob: -2.346935987472534
    4. ' self' → logprob: -2.346935987472534
    5. ' not' → logprob: -6.846936225891113
    6. 'not' → logprob: -7.721936225891113
    7. '   ' → logprob: -10.346936225891113
    8. ' ' → logprob: -10.971936225891113
    9. '(ch' → logprob: -10.971936225891113
    10. '	ch' → logprob: -11.471936225891113

Token 746: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -0.03497866168618202
    2. '.s' → logprob: -3.4099786281585693
    3. 'pos' → logprob: -6.659978866577148
    4. '.peek' → logprob: -10.659978866577148
    5. '.' → logprob: -10.909978866577148
    6. '	pos' → logprob: -12.909978866577148
    7. 's' → logprob: -13.409978866577148
    8. ' .' → logprob: -13.784978866577148
    9. ' pos' → logprob: -14.159978866577148
    10. '.pe' → logprob: -14.284978866577148

Token 747: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.7102181315422058
    2. ' >=' → logprob: -1.4602181911468506
    3. ' <' → logprob: -2.0852181911468506
    4. '<' → logprob: -2.5852181911468506
    5. '<len' → logprob: -2.5852181911468506
    6. '==' → logprob: -8.58521842956543
    7. '<n' → logprob: -8.71021842956543
    8. '[' → logprob: -8.83521842956543
    9. '<size' → logprob: -9.83521842956543
    10. '<int' → logprob: -9.96021842956543

Token 748: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.001170225441455841
    2. ' len' → logprob: -6.7511701583862305
    3. '(len' → logprob: -18.751171112060547
    4. '	len' → logprob: -20.001171112060547
    5. 'length' → logprob: -20.501171112060547
    6. '   ' → logprob: -21.001171112060547
    7. '<len' → logprob: -21.251171112060547
    8. '[len' → logprob: -21.251171112060547
    9. '=len' → logprob: -21.376171112060547
    10. '       ' → logprob: -22.251171112060547

Token 749: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00020747410599142313
    2. 'self' → logprob: -8.500207901000977
    3. '(' → logprob: -12.625207901000977
    4. ' self' → logprob: -14.375207901000977
    5. 's' → logprob: -17.000207901000977
    6. ' (' → logprob: -17.250207901000977
    7. '(
' → logprob: -18.125207901000977
    8. '
' → logprob: -18.125207901000977
    9. '[self' → logprob: -18.250207901000977
    10. '=self' → logprob: -18.625207901000977

Token 750: '.s' (ID: 640)
  Prédit: '.s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -0.034360889345407486
    2. 'self' → logprob: -3.409360885620117
    3. '(self' → logprob: -7.534360885620117
    4. 's' → logprob: -8.909360885620117
    5. ' self' → logprob: -10.659360885620117
    6. ')' → logprob: -11.659360885620117
    7. '.self' → logprob: -12.534360885620117
    8. '.' → logprob: -13.284360885620117
    9. ')s' → logprob: -13.284360885620117
    10. ').' → logprob: -13.534360885620117

Token 751: '):
' (ID: 1883)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.05874158814549446
    2. ':' → logprob: -3.308741569519043
    3. '):
' → logprob: -4.433741569519043
    4. ' or' → logprob: -4.808741569519043
    5. '):' → logprob: -9.058741569519043
    6. ')' → logprob: -9.058741569519043
    7. 'or' → logprob: -9.683741569519043
    8. '():
' → logprob: -9.933741569519043
    9. '       ' → logprob: -10.433741569519043
    10. '           ' → logprob: -10.558741569519043

Token 752: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.24402567744255066
    2. ' raise' → logprob: -2.119025707244873
    3. 'raise' → logprob: -2.619025707244873
    4. 'self' → logprob: -4.494025707244873
    5. ' s' → logprob: -5.494025707244873
    6. ' self' → logprob: -5.744025707244873
    7. 's' → logprob: -6.369025707244873
    8. 'return' → logprob: -6.994025707244873
    9. '       ' → logprob: -7.244025707244873
    10. ' return' → logprob: -7.619025707244873

Token 753: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.022369571030139923
    2. ' raise' → logprob: -3.897369623184204
    3. 'self' → logprob: -6.772369384765625
    4. '''
' → logprob: -8.397369384765625
    5. ''\' → logprob: -8.897369384765625
    6. '       ' → logprob: -9.272369384765625
    7. '           ' → logprob: -9.897369384765625
    8. '''' → logprob: -10.147369384765625
    9. ''' → logprob: -10.397369384765625
    10. 'Raise' → logprob: -11.272369384765625

Token 754: ' Value' (ID: 9963)
  Prédit: 'EOF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'EOF' → logprob: -0.6117237210273743
    2. 'Index' → logprob: -0.8617237210273743
    3. 'Exception' → logprob: -4.111723899841309
    4. 'Value' → logprob: -4.611723899841309
    5. 'Runtime' → logprob: -5.611723899841309
    6. ' EOF' → logprob: -5.986723899841309
    7. ' Index' → logprob: -6.486723899841309
    8. ' Exception' → logprob: -7.236723899841309
    9. 'Stop' → logprob: -8.236723899841309
    10. ' Runtime' → logprob: -9.111723899841309

Token 755: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.00016873658751137555
    2. 'rror' → logprob: -8.875168800354004
    3. 'EOF' → logprob: -10.625168800354004
    4. 'Index' → logprob: -12.500168800354004
    5. 'of' → logprob: -14.375168800354004
    6. 'Unexpected' → logprob: -16.375167846679688
    7. 'End' → logprob: -17.250167846679688
    8. 'error' → logprob: -17.500167846679688
    9. 'nd' → logprob: -17.625167846679688
    10. 'SError' → logprob: -17.625167846679688

Token 756: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.4862610101699829
    2. '('' → logprob: -0.9862610101699829
    3. '()' → logprob: -5.111260890960693
    4. '       ' → logprob: -6.111260890960693
    5. '()
' → logprob: -6.111260890960693
    6. '(' → logprob: -7.736260890960693
    7. '"' → logprob: -8.111261367797852
    8. '(
' → logprob: -8.236261367797852
    9. '(f' → logprob: -8.611261367797852
    10. ':' → logprob: -9.236261367797852

Token 757: 'Unexpected' (ID: 59338)
  Prédit: 'Unexpected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Unexpected' → logprob: -0.004729398991912603
    2. ''' → logprob: -5.629729270935059
    3. '"' → logprob: -7.754729270935059
    4. 'Expected' → logprob: -7.879729270935059
    5. 'unexpected' → logprob: -9.129729270935059
    6. 'EOF' → logprob: -9.379729270935059
    7. ''e' → logprob: -10.879729270935059
    8. '')' → logprob: -11.129729270935059
    9. ''E' → logprob: -11.129729270935059
    10. 'Expect' → logprob: -11.504729270935059

Token 758: ' end' (ID: 1268)
  Prédit: ' end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.582905113697052
    2. 'end' → logprob: -0.832905113697052
    3. 'EOF' → logprob: -5.082905292510986
    4. ' character' → logprob: -7.707905292510986
    5. 'character' → logprob: -8.832904815673828
    6. ' EOF' → logprob: -9.207904815673828
    7. 'input' → logprob: -10.832904815673828
    8. 'e' → logprob: -11.957904815673828
    9. 'char' → logprob: -12.207904815673828
    10. ' input' → logprob: -12.332904815673828

Token 759: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.006032603792846203
    2. 'of' → logprob: -5.131032466888428
    3. '   ' → logprob: -10.506032943725586
    4. '_of' → logprob: -10.756032943725586
    5. '  ' → logprob: -11.131032943725586
    6. ' ' → logprob: -11.756032943725586
    7. '```' → logprob: -12.006032943725586
    8. '    ' → logprob: -12.131032943725586
    9. 'Of' → logprob: -12.506032943725586
    10. '       ' → logprob: -12.506032943725586

Token 760: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0025009866803884506
    2. ' input' → logprob: -6.002501010894775
    3. 's' → logprob: -12.127500534057617
    4. 'code' → logprob: -12.127500534057617
    5. 'file' → logprob: -12.377500534057617
    6. 'string' → logprob: -12.502500534057617
    7. 'expression' → logprob: -12.877500534057617
    8. 'token' → logprob: -13.377500534057617
    9. '_input' → logprob: -14.377500534057617
    10. 'source' → logprob: -14.627500534057617

Token 761: '")
' (ID: 1896)
  Prédit: '")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.4742564857006073
    2. '")' → logprob: -0.9742565155029297
    3. '")
' → logprob: -10.22425651550293
    4. ')' → logprob: -10.22425651550293
    5. '"' → logprob: -10.72425651550293
    6. '       ' → logprob: -10.84925651550293
    7. ')
' → logprob: -10.97425651550293
    8. '')' → logprob: -11.47425651550293
    9. ' ")
' → logprob: -11.47425651550293
    10. ')")
' → logprob: -11.84925651550293

Token 762: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11761265248060226
    2. '
' → logprob: -2.367612600326538
    3. '        
' → logprob: -5.117612838745117
    4. 'self' → logprob: -5.242612838745117
    5. '  
' → logprob: -5.867612838745117
    6. '    
' → logprob: -6.867612838745117
    7. ' 
' → logprob: -7.367612838745117
    8. '   ' → logprob: -7.492612838745117
    9. 'return' → logprob: -8.367612838745117
    10. '\n' → logprob: -9.617612838745117

Token 763: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.05442696437239647
    2. 'ch' → logprob: -3.054426908493042
    3. ' c' → logprob: -6.304427146911621
    4. 'res' → logprob: -6.929427146911621
    5. 'ret' → logprob: -7.304427146911621
    6. 'token' → logprob: -7.554427146911621
    7. 'tok' → logprob: -7.929427146911621
    8. ' ch' → logprob: -7.929427146911621
    9. 'curr' → logprob: -7.929427146911621
    10. 'current' → logprob: -8.304427146911621

Token 764: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47446948289871216
    2. ' =' → logprob: -0.9744694828987122
    3. 'har' → logprob: -7.9744696617126465
    4. 'ode' → logprob: -10.974469184875488
    5. ' ' → logprob: -11.974469184875488
    6. '=self' → logprob: -11.974469184875488
    7. '=c' → logprob: -12.599469184875488
    8. 'urrent' → logprob: -12.724469184875488
    9. '   ' → logprob: -12.724469184875488
    10. 'c' → logprob: -12.849469184875488

Token 765: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004078401252627373
    2. ' self' → logprob: -5.504078388214111
    3. '(self' → logprob: -19.379077911376953
    4. '	self' → logprob: -19.754077911376953
    5. '[self' → logprob: -20.254077911376953
    6. '=self' → logprob: -21.129077911376953
    7. 's' → logprob: -21.379077911376953
    8. '
' → logprob: -21.504077911376953
    9. '$self' → logprob: -22.754077911376953
    10. '   ' → logprob: -23.129077911376953

Token 766: '.s' (ID: 640)
  Prédit: '.s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -0.0002615742268972099
    2. 's' → logprob: -8.250261306762695
    3. ' s' → logprob: -16.125261306762695
    4. '.' → logprob: -16.250261306762695
    5. 'self' → logprob: -16.625261306762695
    6. '_s' → logprob: -18.750261306762695
    7. '	s' → logprob: -19.500261306762695
    8. 'user' → logprob: -20.250261306762695
    9. ' .' → logprob: -20.375261306762695
    10. '.user' → logprob: -20.375261306762695

Token 767: '[self' (ID: 33734)
  Prédit: '[self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -6.2729995988775045e-06
    2. 'self' → logprob: -12.000006675720215
    3. '[' → logprob: -16.2500057220459
    4. ' self' → logprob: -18.8750057220459
    5. '[
' → logprob: -20.3750057220459
    6. '	self' → logprob: -20.8750057220459
    7. '(self' → logprob: -21.6250057220459
    8. '
' → logprob: -21.7500057220459
    9. '```' → logprob: -21.8750057220459
    10. '[this' → logprob: -22.5000057220459

Token 768: '.pos' (ID: 25321)
  Prédit: '.s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -0.00532281631603837
    2. '.pos' → logprob: -5.2553229331970215
    3. 'pos' → logprob: -10.380322456359863
    4. '[pos' → logprob: -11.130322456359863
    5. '[self' → logprob: -11.255322456359863
    6. '.' → logprob: -11.505322456359863
    7. 's' → logprob: -12.505322456359863
    8. 'self' → logprob: -12.630322456359863
    9. '[' → logprob: -13.005322456359863
    10. '.str' → logprob: -13.130322456359863

Token 769: ']
' (ID: 1592)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12625452876091003
    2. ')' → logprob: -3.3762545585632324
    3. '<|end|>' → logprob: -3.5012545585632324
    4. 'self' → logprob: -3.8762545585632324
    5. ']' → logprob: -4.501254558563232
    6. '       ' → logprob: -4.501254558563232
    7. ')
' → logprob: -5.251254558563232
    8. '<|end|>' → logprob: -5.876254558563232
    9. ']
' → logprob: -7.376254558563232
    10. '[self' → logprob: -7.501254558563232

Token 770: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03526812046766281
    2. 'self' → logprob: -3.5352680683135986
    3. '
' → logprob: -5.660268306732178
    4. ' self' → logprob: -6.410268306732178
    5. '<|end|>' → logprob: -8.53526782989502
    6. '```' → logprob: -9.91026782989502
    7. '\' → logprob: -10.41026782989502
    8. '        
' → logprob: -10.66026782989502
    9. '   ' → logprob: -11.16026782989502
    10. '[self' → logprob: -11.53526782989502

Token 771: ' if' (ID: 538)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10281676799058914
    2. ' self' → logprob: -2.3528168201446533
    3. '       ' → logprob: -5.977816581726074
    4. '
' → logprob: -10.102816581726074
    5. '	self' → logprob: -10.852816581726074
    6. ' if' → logprob: -12.602816581726074
    7. '        
' → logprob: -13.102816581726074
    8. 'if' (adapté à ' if') → logprob: -13.102816581726074
    9. '[self' → logprob: -13.852816581726074
    10. '   ' → logprob: -14.102816581726074

Token 772: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.02980661764740944
    2. ' ch' → logprob: -3.529806613922119
    3. '(ch' → logprob: -10.154807090759277
    4. '   ' → logprob: -11.654807090759277
    5. '	ch' → logprob: -11.904807090759277
    6. 'c' → logprob: -14.029807090759277
    7. ' ' → logprob: -14.529807090759277
    8. '  ' → logprob: -14.779807090759277
    9. ' c' → logprob: -16.77980613708496
    10. '[ch' → logprob: -16.90480613708496

Token 773: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.028764711692929268
    2. 'is' → logprob: -3.6537647247314453
    3. '==' → logprob: -6.653764724731445
    4. ' ==' → logprob: -7.403764724731445
    5. ' and' → logprob: -7.903764724731445
    6. 'and' → logprob: -8.653764724731445
    7. '!=' → logprob: -11.903764724731445
    8. ' !=' → logprob: -12.653764724731445
    9. '===' → logprob: -13.153764724731445
    10. '	is' → logprob: -13.903764724731445

Token 774: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.2521307170391083
    2. ' not' → logprob: -1.5021307468414307
    3. 'no' → logprob: -9.252130508422852
    4. 'n' → logprob: -10.502130508422852
    5. 'None' → logprob: -10.502130508422852
    6. 'c' → logprob: -10.752130508422852
    7. ' no' → logprob: -11.252130508422852
    8. 'Not' → logprob: -12.127130508422852
    9. ' c' → logprob: -13.127130508422852
    10. ' None' → logprob: -13.252130508422852

Token 775: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0008089098846539855
    2. ' None' → logprob: -7.1258087158203125
    3. '(None' → logprob: -13.375808715820312
    4. '=None' → logprob: -14.125808715820312
    5. 'N' → logprob: -14.250808715820312
    6. 'c' → logprob: -14.250808715820312
    7. 'No' → logprob: -15.250808715820312
    8. '_None' → logprob: -15.500808715820312
    9. 'ch' → logprob: -16.375808715820312
    10. 'none' → logprob: -16.500808715820312

Token 776: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.06997489184141159
    2. 'and' → logprob: -2.694974899291992
    3. '<|end|>' → logprob: -11.069974899291992
    4. ' not' → logprob: -11.569974899291992
    5. ',' → logprob: -12.319974899291992
    6. ':' → logprob: -12.569974899291992
    7. ':
' → logprob: -13.944974899291992
    8. ' is' → logprob: -13.944974899291992
    9. ' ' → logprob: -14.069974899291992
    10. '	and' → logprob: -14.444974899291992

Token 777: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.2811650335788727
    2. ' c' → logprob: -1.4061650037765503
    3. ' ch' → logprob: -11.78116512298584
    4. 'ch' → logprob: -12.40616512298584
    5. '	c' → logprob: -13.40616512298584
    6. ' ' → logprob: -13.90616512298584
    7. ' ' → logprob: -15.53116512298584
    8. ' not' → logprob: -15.65616512298584
    9. '   ' → logprob: -16.406164169311523
    10. '```' → logprob: -16.656164169311523

Token 778: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.5759424567222595
    2. '!=' → logprob: -0.8259424567222595
    3. '()!=' → logprob: -13.700942039489746
    4. ')!=' → logprob: -13.950942039489746
    5. ']!=' → logprob: -14.825942039489746
    6. '!=(' → logprob: -15.950942039489746
    7. '!==' → logprob: -16.075942993164062
    8. '!='' → logprob: -16.075942993164062
    9. '!="' → logprob: -16.450942993164062
    10. '[' → logprob: -17.200942993164062

Token 779: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.0007101670489646494
    2. ' ch' → logprob: -7.2507100105285645
    3. 'c' → logprob: -15.625710487365723
    4. '	ch' → logprob: -16.875709533691406
    5. '[ch' → logprob: -18.125709533691406
    6. '(ch' → logprob: -19.625709533691406
    7. ' ' → logprob: -20.125709533691406
    8. 'Ch' → logprob: -20.375709533691406
    9. '_ch' → logprob: -20.750709533691406
    10. ''ch' → logprob: -21.125709533691406

Token 780: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5240182876586914
    2. ':
' → logprob: -0.8990182876586914
    3. '):
' → logprob: -8.399018287658691
    4. '       ' → logprob: -8.524018287658691
    5. '           ' → logprob: -8.774018287658691
    6. '<|end|>' → logprob: -9.149018287658691
    7. ':return' → logprob: -9.774018287658691
    8. '):' → logprob: -9.774018287658691
    9. ')' → logprob: -10.149018287658691
    10. '<|end|>' → logprob: -11.149018287658691

Token 781: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010404232889413834
    2. ':' → logprob: -5.010404109954834
    3. ' raise' → logprob: -6.385404109954834
    4. ':
' → logprob: -7.010404109954834
    5. 'raise' → logprob: -8.260404586791992
    6. '       ' → logprob: -8.760404586791992
    7. '               ' → logprob: -9.135404586791992
    8. '            ' → logprob: -9.260404586791992
    9. ',' → logprob: -9.385404586791992
    10. ' ' → logprob: -10.135404586791992

Token 782: ' raise' (ID: 9338)
  Prédit: ' raise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raise' → logprob: -0.06535503268241882
    2. 'raise' (adapté à ' raise') → logprob: -3.190355062484741
    3. '           ' → logprob: -3.815355062484741
    4. '	raise' → logprob: -9.69035530090332
    5. 'Raise' → logprob: -11.81535530090332
    6. '_raise' → logprob: -13.44035530090332
    7. '.raise' → logprob: -13.69035530090332
    8. '            
' → logprob: -13.94035530090332
    9. '```' → logprob: -14.19035530090332
    10. '
' → logprob: -14.44035530090332

Token 783: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.004078878089785576
    2. ' Value' → logprob: -5.5040788650512695
    3. 'Syntax' → logprob: -15.00407886505127
    4. '_Value' → logprob: -17.379079818725586
    5. '_value' → logprob: -17.754079818725586
    6. '	Value' → logprob: -17.754079818725586
    7. '(Value' → logprob: -18.004079818725586
    8. 'Runtime' → logprob: -19.254079818725586
    9. '<Value' → logprob: -19.254079818725586
    10. '.Value' → logprob: -19.379079818725586

Token 784: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.6113693118095398
    2. 'rror' → logprob: -0.8613693118095398
    3. 'ror' → logprob: -3.3613693714141846
    4. 'or' → logprob: -9.861369132995605
    5. 'Value' → logprob: -10.236369132995605
    6. 'nd' → logprob: -11.611369132995605
    7. 'n' → logprob: -12.611369132995605
    8. 'tor' → logprob: -12.611369132995605
    9. 'r' → logprob: -12.861369132995605
    10. 'dent' → logprob: -13.111369132995605

Token 785: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.00044663884909823537
    2. '(' → logprob: -8.375446319580078
    3. '("' → logprob: -8.500446319580078
    4. 'f' → logprob: -11.625446319580078
    5. '(
' → logprob: -13.000446319580078
    6. '(c' → logprob: -14.625446319580078
    7. '('' → logprob: -15.125446319580078
    8. '()' → logprob: -15.250446319580078
    9. '(F' → logprob: -15.625446319580078
    10. '("'"' → logprob: -15.750446319580078

Token 786: '"' (ID: 1)
  Prédit: 'Expected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Expected' → logprob: -0.9386056065559387
    2. ' f' → logprob: -1.313605546951294
    3. ' Expected' → logprob: -1.313605546951294
    4. 'Unexpected' → logprob: -3.063605546951294
    5. 'f' → logprob: -4.563605785369873
    6. ' expected' → logprob: -5.188605785369873
    7. ' Unexpected' → logprob: -5.188605785369873
    8. 'Expect' → logprob: -7.063605785369873
    9. ' c' → logprob: -7.313605785369873
    10. '"' → logprob: -7.688605785369873

Token 787: 'Expected' (ID: 28041)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.7011343836784363
    2. 'Expected' → logprob: -0.7011343836784363
    3. 'c' → logprob: -5.326134204864502
    4. 'Unexpected' → logprob: -6.326134204864502
    5. 'ch' → logprob: -7.201134204864502
    6. '"' → logprob: -8.57613468170166
    7. 'Expect' → logprob: -8.82613468170166
    8. ' Expected' → logprob: -9.57613468170166
    9. ' f' → logprob: -9.95113468170166
    10. '{' → logprob: -10.07613468170166

Token 788: ' '{' (ID: 24918)
  Prédit: ''{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''{' → logprob: -0.12798866629600525
    2. ' '{' → logprob: -2.377988576889038
    3. '{' → logprob: -3.627988576889038
    4. ' {' → logprob: -7.252988815307617
    5. ''' → logprob: -9.252988815307617
    6. '"{' → logprob: -11.127988815307617
    7. ''ch' → logprob: -12.252988815307617
    8. '('{' → logprob: -12.627988815307617
    9. ' ch' → logprob: -13.627988815307617
    10. 'ch' → logprob: -14.502988815307617

Token 789: 'ch' (ID: 332)
  Prédit: 'ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.0011943945428356528
    2. '{' → logprob: -6.751194477081299
    3. 'c' → logprob: -11.62619400024414
    4. '[ch' → logprob: -11.75119400024414
    5. ' ch' → logprob: -12.25119400024414
    6. '	ch' → logprob: -13.75119400024414
    7. '}' → logprob: -14.25119400024414
    8. '(ch' → logprob: -15.12619400024414
    9. '{
' → logprob: -15.62619400024414
    10. ''ch' → logprob: -15.75119400024414

Token 790: '}',' (ID: 36898)
  Prédit: '}','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}',' → logprob: -0.06485328823328018
    2. '}'' → logprob: -3.0648531913757324
    3. '',' → logprob: -4.189853191375732
    4. ''' → logprob: -6.939853191375732
    5. '"',' → logprob: -12.31485366821289
    6. '}' → logprob: -12.43985366821289
    7. ',' → logprob: -13.31485366821289
    8. ')',' → logprob: -13.56485366821289
    9. ''}' → logprob: -13.68985366821289
    10. '}')' → logprob: -13.81485366821289

Token 791: ' got' (ID: 3508)
  Prédit: ' but'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' but' → logprob: -0.10553049296140671
    2. ' f' → logprob: -3.1055305004119873
    3. ' got' → logprob: -3.2305305004119873
    4. ' found' → logprob: -4.605530261993408
    5. 'f' → logprob: -6.230530261993408
    6. 'but' → logprob: -6.480530261993408
    7. ' c' → logprob: -7.730530261993408
    8. 'c' → logprob: -7.980530261993408
    9. ' get' → logprob: -8.105530738830566
    10. '"' → logprob: -8.230530738830566

Token 792: ' '{' (ID: 24918)
  Prédit: ' '{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '{' → logprob: -0.27932995557785034
    2. ''' → logprob: -2.029330015182495
    3. ''{' → logprob: -2.279330015182495
    4. ' '' → logprob: -4.779329776763916
    5. ' {' → logprob: -7.529329776763916
    6. ' c' → logprob: -7.904329776763916
    7. '{' → logprob: -8.154330253601074
    8. ' f' → logprob: -8.779330253601074
    9. 'c' → logprob: -10.029330253601074
    10. '"' → logprob: -10.029330253601074

Token 793: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0025156119372695684
    2. '{' → logprob: -6.00251579284668
    3. ''' → logprob: -10.87751579284668
    4. '%c' → logprob: -11.50251579284668
    5. ' c' → logprob: -12.37751579284668
    6. ''+' → logprob: -13.12751579284668
    7. '"' → logprob: -13.50251579284668
    8. '	c' → logprob: -14.00251579284668
    9. '{
' → logprob: -14.25251579284668
    10. ')c' → logprob: -14.62751579284668

Token 794: '}'' (ID: 24321)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.16575704514980316
    2. '}'' → logprob: -1.9157570600509644
    3. ''")
' → logprob: -5.665757179260254
    4. ''}' → logprob: -6.540757179260254
    5. ''"' → logprob: -7.540757179260254
    6. '')' → logprob: -10.165757179260254
    7. '}')' → logprob: -11.665757179260254
    8. '"'' → logprob: -11.915757179260254
    9. ''''' → logprob: -12.040757179260254
    10. '''' → logprob: -12.165757179260254

Token 795: '")
' (ID: 1896)
  Prédit: '")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.5711075067520142
    2. '")' → logprob: -1.4461075067520142
    3. '       ' → logprob: -1.8211075067520142
    4. '')
' → logprob: -3.9461073875427246
    5. '')' → logprob: -4.821107387542725
    6. ')
' → logprob: -5.321107387542725
    7. ')' → logprob: -5.571107387542725
    8. ''")
' → logprob: -7.696107387542725
    9. ',' → logprob: -8.196107864379883
    10. '\n' → logprob: -8.446107864379883

Token 796: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11548476666212082
    2. 'self' → logprob: -2.2404847145080566
    3. ' self' → logprob: -6.865484714508057
    4. '
' → logprob: -6.865484714508057
    5. '```' → logprob: -8.365485191345215
    6. '   ' → logprob: -8.740485191345215
    7. '        
' → logprob: -9.365485191345215
    8. '[self' → logprob: -10.865485191345215
    9. '           ' → logprob: -11.240485191345215
    10. '<|end|>' → logprob: -11.740485191345215

Token 797: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.008995653130114079
    2. '       ' → logprob: -4.758995532989502
    3. ' self' → logprob: -7.883995532989502
    4. '   ' → logprob: -12.88399600982666
    5. '
' → logprob: -14.50899600982666
    6. '```' → logprob: -14.50899600982666
    7. '	self' → logprob: -14.63399600982666
    8. '(self' → logprob: -16.258995056152344
    9. '[self' → logprob: -16.258995056152344
    10. '        
' → logprob: -16.758995056152344

Token 798: '.pos' (ID: 25321)
  Prédit: '.pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pos' → logprob: -0.0005768624832853675
    2. 'pos' → logprob: -7.500576972961426
    3. '.s' → logprob: -10.875576972961426
    4. '.' → logprob: -12.375576972961426
    5. ' pos' → logprob: -15.125576972961426
    6. '	pos' → logprob: -15.625576972961426
    7. 's' → logprob: -15.875576972961426
    8. ' .' → logprob: -16.62557601928711
    9. '_pos' → logprob: -16.87557601928711
    10. '.user' → logprob: -17.62557601928711

Token 799: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.02975187823176384
    2. ' +=' → logprob: -3.529751777648926
    3. ']+=' → logprob: -14.029751777648926
    4. '+' → logprob: -14.904751777648926
    5. '=' → logprob: -15.279751777648926
    6. '+="' → logprob: -18.029752731323242
    7. '   ' → logprob: -18.029752731323242
    8. '+='' → logprob: -18.029752731323242
    9. '```' → logprob: -18.904752731323242
    10. '+=(' → logprob: -19.154752731323242

Token 800: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '   ' → logprob: -22.875
    4. '```' → logprob: -24.125
    5. '１' → logprob: -24.625
    6. '۱' → logprob: -25.25
    7. '
' → logprob: -26.5
    8. '`' → logprob: -26.875
    9. '' → logprob: -26.875
    10. '  ' → logprob: -27.125

Token 801: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.5
    3. '   ' → logprob: -22.75
    4. '```' → logprob: -22.875
    5. '１' → logprob: -23.625
    6. '۱' → logprob: -23.75
    7. '
' → logprob: -24.25
    8. 'len' → logprob: -24.625
    9. '' → logprob: -25.0
    10. '১' → logprob: -25.6875

Token 802: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00034416402922943234
    2. '	' → logprob: -9.125344276428223
    3. 'return' → logprob: -9.500344276428223
    4. '<|end|>' → logprob: -9.875344276428223
    5. '
' → logprob: -10.250344276428223
    6. '   ' → logprob: -10.500344276428223
    7. ' return' → logprob: -11.500344276428223
    8. '           ' → logprob: -11.750344276428223
    9. '  
' → logprob: -12.000344276428223
    10. '        
' → logprob: -12.125344276428223

Token 803: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00046832661610096693
    2. 'return' → logprob: -8.125468254089355
    3. '	' → logprob: -9.000468254089355
    4. ' return' → logprob: -11.250468254089355
    5. '   ' → logprob: -11.750468254089355
    6. '	return' → logprob: -11.750468254089355
    7. '```' → logprob: -11.750468254089355
    8. '<|end|>' → logprob: -12.625468254089355
    9. '           ' → logprob: -13.125468254089355
    10. 'c' → logprob: -13.625468254089355

Token 804: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -7.636475493200123e-05
    2. ' return' → logprob: -9.750076293945312
    3. 'c' → logprob: -11.000076293945312
    4. '       ' → logprob: -14.125076293945312
    5. '	return' → logprob: -15.000076293945312
    6. '
' → logprob: -16.000076293945312
    7. '```' → logprob: -16.625076293945312
    8. '{return' → logprob: -16.875076293945312
    9. ':return' → logprob: -17.875076293945312
    10. '   ' → logprob: -18.500076293945312

Token 805: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0005530327325686812
    2. ' c' → logprob: -7.500553131103516
    3. '	c' → logprob: -21.750553131103516
    4. '_c' → logprob: -24.375553131103516
    5. 'ch' → logprob: -24.875553131103516
    6. ' ' → logprob: -25.250553131103516
    7. ')c' → logprob: -25.250553131103516
    8. '`' → logprob: -25.625553131103516
    9. '(c' → logprob: -26.000553131103516
    10. ' ' → logprob: -26.250553131103516

Token 806: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6374220848083496
    2. '    
' → logprob: -0.8874220848083496
    3. '
' → logprob: -3.6374220848083496
    4. ' 
' → logprob: -4.88742208480835
    5. '```' → logprob: -5.01242208480835
    6. '<|end|>' → logprob: -5.01242208480835
    7. 'def' → logprob: -5.26242208480835
    8. '  
' → logprob: -5.76242208480835
    9. '        
' → logprob: -6.63742208480835
    10. ' def' → logprob: -7.13742208480835

Token 807: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2865939736366272
    2. '   ' → logprob: -1.4115939140319824
    3. ' def' → logprob: -5.911593914031982
    4. '    
' → logprob: -6.036593914031982
    5. '```' → logprob: -8.41159439086914
    6. '	def' → logprob: -10.28659439086914
    7. '
' → logprob: -10.66159439086914
    8. '        
' → logprob: -11.28659439086914
    9. '<|end|>' → logprob: -11.66159439086914
    10. ' 
' → logprob: -12.41159439086914

Token 808: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0001387009397149086
    2. ' def' → logprob: -9.000138282775879
    3. '   ' → logprob: -11.125138282775879
    4. '    
' → logprob: -15.250138282775879
    5. '	def' → logprob: -15.500138282775879
    6. '
' → logprob: -17.125139236450195
    7. '```' → logprob: -17.375139236450195
    8. 'Def' → logprob: -19.125139236450195
    9. '#' → logprob: -20.000139236450195
    10. '        
' → logprob: -20.125139236450195

Token 809: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.0333690345287323
    2. ' parse' → logprob: -3.5333690643310547
    3. 'skip' → logprob: -5.908369064331055
    4. 'expr' → logprob: -8.408369064331055
    5. '_parse' → logprob: -8.533369064331055
    6. ' skip' → logprob: -8.533369064331055
    7. 'expression' → logprob: -9.408369064331055
    8. '_expression' → logprob: -9.658369064331055
    9. 'consume' → logprob: -10.408369064331055
    10. ' expression' → logprob: -10.908369064331055

Token 810: '_expression' (ID: 69265)
  Prédit: '_expression'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_expression' → logprob: -0.07115297764539719
    2. '_factor' → logprob: -2.946152925491333
    3. '_expr' → logprob: -5.196153163909912
    4. '_primary' → logprob: -5.321153163909912
    5. '_term' → logprob: -5.446153163909912
    6. '(self' → logprob: -7.196153163909912
    7. 'Expression' → logprob: -8.696152687072754
    8. '_exp' → logprob: -9.071152687072754
    9. 'factor' → logprob: -9.571152687072754
    10. '_atom' → logprob: -9.571152687072754

Token 811: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.935296834039036e-06
    2. '(' → logprob: -13.00000286102295
    3. '()' → logprob: -14.62500286102295
    4. ' (' → logprob: -16.500003814697266
    5. 'self' → logprob: -16.875003814697266
    6. '(s' → logprob: -17.500003814697266
    7. '_(' → logprob: -17.625003814697266
    8. '():' → logprob: -19.000003814697266
    9. 'def' → logprob: -19.125003814697266
    10. 's' → logprob: -19.500003814697266

Token 812: ')' (ID: 8)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.5332478142227046e-05
    2. '(' → logprob: -11.875015258789062
    3. 'self' → logprob: -12.500015258789062
    4. ')' → logprob: -12.875015258789062
    5. '()' → logprob: -13.875015258789062
    6. ' (' → logprob: -15.125015258789062
    7. '   ' → logprob: -15.125015258789062
    8. ' ' → logprob: -16.375015258789062
    9. 'def' → logprob: -16.375015258789062
    10. '```' → logprob: -16.625015258789062

Token 813: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0002072357019642368
    2. '(' → logprob: -9.12520694732666
    3. 'self' → logprob: -10.00020694732666
    4. ' ->' → logprob: -10.75020694732666
    5. '->' → logprob: -11.50020694732666
    6. '   ' → logprob: -11.75020694732666
    7. ':' → logprob: -12.50020694732666
    8. 'def' → logprob: -12.87520694732666
    9. '       ' → logprob: -13.12520694732666
    10. ' self' → logprob: -13.50020694732666

Token 814: ' Expression' (ID: 32496)
  Prédit: 'Expression'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Expression' → logprob: -0.008933625183999538
    2. ' Expression' → logprob: -4.7589335441589355
    3. 'Union' → logprob: -8.633934020996094
    4. 'Optional' → logprob: -9.008934020996094
    5. '(Expression' → logprob: -11.508934020996094
    6. ' Union' → logprob: -13.008934020996094
    7. 'Expr' → logprob: -13.258934020996094
    8. ''' → logprob: -13.508934020996094
    9. 'Binary' → logprob: -13.758934020996094
    10. ' Optional' → logprob: -14.633934020996094

Token 815: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.1459156572818756
    2. ':' → logprob: -3.1459157466888428
    3. '():' → logprob: -3.2709157466888428
    4. '():
' → logprob: -4.145915508270264
    5. '   ' → logprob: -4.520915508270264
    6. '(' → logprob: -4.645915508270264
    7. '()' → logprob: -4.770915508270264
    8. '       ' → logprob: -5.520915508270264
    9. ':
' → logprob: -6.270915508270264
    10. '->' → logprob: -6.520915508270264

Token 816: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11719098687171936
    2. 'left' → logprob: -2.9921910762786865
    3. 'expr' → logprob: -3.4921910762786865
    4. 'return' → logprob: -3.9921910762786865
    5. 'node' → logprob: -5.367190837860107
    6. 'term' → logprob: -5.617190837860107
    7. ' left' → logprob: -6.242190837860107
    8. ' expr' → logprob: -7.742190837860107
    9. ' return' → logprob: -8.242191314697266
    10. '```' → logprob: -9.242191314697266

Token 817: ' #' (ID: 1069)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.595038652420044
    2. 'expr' → logprob: -1.720038652420044
    3. ' left' → logprob: -2.220038652420044
    4. 'node' → logprob: -2.470038652420044
    5. 'term' → logprob: -2.845038652420044
    6. ' expr' → logprob: -4.470038414001465
    7. ' node' → logprob: -5.970038414001465
    8. 'return' → logprob: -6.095038414001465
    9. ' term' → logprob: -7.220038414001465
    10. 'exp' → logprob: -7.845038414001465

Token 818: ' Parse' (ID: 26701)
  Prédit: 'term'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'term' → logprob: -1.1220548152923584
    2. 'left' → logprob: -1.2470548152923584
    3. 'expr' → logprob: -1.6220548152923584
    4. 'node' → logprob: -1.7470548152923584
    5. 'return' → logprob: -5.1220550537109375
    6. ' left' → logprob: -5.2470550537109375
    7. ' expr' → logprob: -6.4970550537109375
    8. ' node' → logprob: -7.1220550537109375
    9. ' term' → logprob: -7.6220550537109375
    10. 'lhs' → logprob: -7.6220550537109375

Token 819: ' expression' (ID: 12973)
  Prédit: 'term'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'term' → logprob: -0.25439178943634033
    2. 'self' → logprob: -2.254391670227051
    3. ' term' → logprob: -2.254391670227051
    4. ' self' → logprob: -4.879391670227051
    5. 'left' → logprob: -5.504391670227051
    6. ' left' → logprob: -5.879391670227051
    7. 'return' → logprob: -9.12939167022705
    8. '   ' → logprob: -9.50439167022705
    9. ' return' → logprob: -10.75439167022705
    10. 'node' → logprob: -10.75439167022705

Token 820: ' with' (ID: 483)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1566728949546814
    2. '       ' → logprob: -2.156672954559326
    3. 'self' → logprob: -4.156672954559326
    4. '=' → logprob: -5.531672954559326
    5. '   ' → logprob: -5.656672954559326
    6. '()' → logprob: -6.531672954559326
    7. 'return' → logprob: -7.031672954559326
    8. 'term' → logprob: -7.031672954559326
    9. '(self' → logprob: -7.156672954559326
    10. '()
' → logprob: -7.531672954559326

Token 821: ' custom' (ID: 2602)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04177717864513397
    2. 'lowest' → logprob: -3.7917771339416504
    3. ' self' → logprob: -4.29177713394165
    4. 'preced' → logprob: -5.91677713394165
    5. ' lowest' → logprob: -7.04177713394165
    6. 'term' → logprob: -8.041777610778809
    7. 'addition' → logprob: -8.291777610778809
    8. 'terms' → logprob: -9.416777610778809
    9. 'in' → logprob: -9.541777610778809
    10. ' precedence' → logprob: -9.791777610778809

Token 822: ' order' (ID: 2569)
  Prédit: 'preced'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'preced' → logprob: -0.5475962162017822
    2. 'def' → logprob: -1.2975962162017822
    3. ' precedence' → logprob: -3.4225962162017822
    4. 'term' → logprob: -3.6725962162017822
    5. '_pre' → logprob: -4.172595977783203
    6. 'self' → logprob: -4.422595977783203
    7. 'return' → logprob: -4.672595977783203
    8. 'op' → logprob: -4.797595977783203
    9. 'prec' → logprob: -5.172595977783203
    10. '   ' → logprob: -5.547595977783203

Token 823: ',
' (ID: 412)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2550761103630066
    2. '(self' → logprob: -1.8800761699676514
    3. '()' → logprob: -3.6300761699676514
    4. '   ' → logprob: -4.380075931549072
    5. '_' → logprob: -5.130075931549072
    6. 'self' → logprob: -5.130075931549072
    7. 'return' → logprob: -5.630075931549072
    8. '        
' → logprob: -5.755075931549072
    9. '():' → logprob: -6.130075931549072
    10. ' =' → logprob: -6.630075931549072

Token 824: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21005921065807343
    2. ' return' → logprob: -2.96005916595459
    3. ' left' → logprob: -2.96005916595459
    4. ' term' → logprob: -3.96005916595459
    5. 'term' → logprob: -4.08505916595459
    6. ' expr' → logprob: -4.08505916595459
    7. 'return' → logprob: -4.58505916595459
    8. 'expr' → logprob: -5.46005916595459
    9. ' node' → logprob: -5.71005916595459
    10. ' lhs' → logprob: -5.96005916595459

Token 825: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5870375633239746
    2. '       ' → logprob: -0.9620375633239746
    3. ' self' → logprob: -3.0870375633239746
    4. '           ' → logprob: -5.712037563323975
    5. 'return' → logprob: -5.837037563323975
    6. '#' (adapté à ' #') → logprob: -6.087037563323975
    7. 'tokens' → logprob: -6.212037563323975
    8. 'left' → logprob: -6.462037563323975
    9. ' tokens' → logprob: -6.962037563323975
    10. ' left' → logprob: -7.087037563323975

Token 826: ' but' (ID: 889)
  Prédit: 'term'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'term' → logprob: -0.9802963137626648
    2. 'node' → logprob: -1.3552963733673096
    3. 'left' → logprob: -1.7302963733673096
    4. 'expr' → logprob: -2.3552963733673096
    5. 'return' → logprob: -3.2302963733673096
    6. '#' → logprob: -3.4802963733673096
    7. 'terms' → logprob: -4.8552961349487305
    8. ' left' → logprob: -5.1052961349487305
    9. '       ' → logprob: -5.9802961349487305
    10. ' node' → logprob: -6.2302961349487305

Token 827: ' Kit' (ID: 23793)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.9955143332481384
    2. ' return' → logprob: -1.2455143928527832
    3. '       ' → logprob: -1.6205143928527832
    4. '#' → logprob: -2.620514392852783
    5. ' left' → logprob: -4.120514392852783
    6. 'self' → logprob: -4.370514392852783
    7. 'left' → logprob: -4.870514392852783
    8. ' self' → logprob: -4.995514392852783
    9. 'result' → logprob: -4.995514392852783
    10. ' result' → logprob: -4.995514392852783

Token 828: 'am' (ID: 313)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9844267964363098
    2. '   ' → logprob: -1.234426736831665
    3. '       ' → logprob: -1.359426736831665
    4. '    ' → logprob: -4.109426975250244
    5. ' :' → logprob: -4.359426975250244
    6. ' ' → logprob: -4.609426975250244
    7. 'def' → logprob: -4.859426975250244
    8. '        ' → logprob: -5.609426975250244
    9. '  ' → logprob: -5.609426975250244
    10. '           ' → logprob: -5.734426975250244

Token 829: 'asa' (ID: 5643)
  Prédit: 'asa'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'asa' → logprob: -0.009567424654960632
    2. 'a' → logprob: -4.7595672607421875
    3. 'as' → logprob: -7.0095672607421875
    4. 'am' → logprob: -10.759567260742188
    5. 'аса' → logprob: -11.384567260742188
    6. 'assa' → logprob: -12.384567260742188
    7. '   ' → logprob: -13.134567260742188
    8. '```' → logprob: -13.259567260742188
    9. 'aza' → logprob: -13.634567260742188
    10. 'asaa' → logprob: -14.134567260742188

Token 830: '-k' (ID: 10897)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8360409736633301
    2. '()' → logprob: -1.46104097366333
    3. '   ' → logprob: -2.83604097366333
    4. '<|end|>' → logprob: -3.08604097366333
    5. '():' → logprob: -3.33604097366333
    6. '(self' → logprob: -3.46104097366333
    7. '_' → logprob: -3.71104097366333
    8. '_k' → logprob: -4.21104097366333
    9. 'def' → logprob: -4.21104097366333
    10. ':' → logprob: -4.33604097366333

Token 831: 'un' (ID: 373)
  Prédit: 'un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.002684087259694934
    2. 'u' → logprob: -6.002684116363525
    3. 'n' → logprob: -9.002683639526367
    4. '<|end|>' → logprob: -10.502683639526367
    5. '_' → logprob: -11.502683639526367
    6. 'an' → logprob: -11.627683639526367
    7. '...' → logprob: -11.877683639526367
    8. '続きを' → logprob: -12.377683639526367
    9. ''un' → logprob: -13.002683639526367
    10. 'ん' → logprob: -13.252683639526367

Token 832: ' does' (ID: 2226)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5853720307350159
    2. '()' → logprob: -1.710371971130371
    3. '():' → logprob: -2.710371971130371
    4. ':' → logprob: -2.835371971130371
    5. '   ' → logprob: -3.710371971130371
    6. '       ' → logprob: -4.210371971130371
    7. '<|end|>' → logprob: -4.210371971130371
    8. '=' → logprob: -4.335371971130371
    9. '<|end|>' → logprob: -4.710371971130371
    10. 'def' → logprob: -4.835371971130371

Token 833: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.18126720190048218
    2. 'not' → logprob: -1.806267261505127
    3. '_not' → logprob: -8.681266784667969
    4. ' return' → logprob: -8.806266784667969
    5. '():' → logprob: -8.806266784667969
    6. '   ' → logprob: -8.931266784667969
    7. ' =' → logprob: -9.306266784667969
    8. ':' → logprob: -9.306266784667969
    9. '()' → logprob: -9.556266784667969
    10. 'return' → logprob: -9.556266784667969

Token 834: ' fix' (ID: 9295)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1298408508300781
    2. ' return' → logprob: -1.5048408508300781
    3. ':
' → logprob: -2.504840850830078
    4. '():
' → logprob: -2.754840850830078
    5. ' :' → logprob: -2.879840850830078
    6. 'return' → logprob: -3.004840850830078
    7. '       ' → logprob: -3.129840850830078
    8. ' =' → logprob: -3.254840850830078
    9. ' :
' → logprob: -3.754840850830078
    10. '():' → logprob: -3.879840850830078

Token 835: ' precedence' (ID: 120000)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12334983795881271
    2. 'self' → logprob: -3.248349905014038
    3. '   ' → logprob: -3.998349905014038
    4. ' the' → logprob: -4.873349666595459
    5. 'token' → logprob: -4.998349666595459
    6. ' self' → logprob: -5.123349666595459
    7. '(self' → logprob: -5.123349666595459
    8. '    ' → logprob: -5.748349666595459
    9. 'the' → logprob: -5.873349666595459
    10. ' ' → logprob: -6.123349666595459

Token 836: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0817689448595047
    2. 'term' → logprob: -3.5817689895629883
    3. 'expr' → logprob: -3.8317689895629883
    4. 'left' → logprob: -4.831768989562988
    5. ' left' → logprob: -5.206768989562988
    6. ' expr' → logprob: -5.831768989562988
    7. ':' → logprob: -6.081768989562988
    8. ' term' → logprob: -6.456768989562988
    9. ' lhs' → logprob: -6.706768989562988
    10. 'node' → logprob: -6.706768989562988

Token 837: ' all' (ID: 722)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.46466633677482605
    2. 'return' → logprob: -2.5896663665771484
    3. 'tokens' → logprob: -2.5896663665771484
    4. 'expr' → logprob: -2.9646663665771484
    5. '#' → logprob: -3.2146663665771484
    6. ' tokens' → logprob: -3.3396663665771484
    7. 'term' → logprob: -3.7146663665771484
    8. ' return' → logprob: -3.8396663665771484
    9. 'terms' → logprob: -4.339666366577148
    10. ' #' → logprob: -4.839666366577148

Token 838: ' possible' (ID: 4149)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.8156522512435913
    2. 'operators' → logprob: -1.1906522512435913
    3. 'ops' → logprob: -1.5656522512435913
    4. 'op' → logprob: -4.315652370452881
    5. ' tokens' → logprob: -4.440652370452881
    6. ' operators' → logprob: -5.065652370452881
    7. 'operations' → logprob: -5.065652370452881
    8. '   ' → logprob: -6.440652370452881
    9. ' ops' → logprob: -7.065652370452881
    10. '_ops' → logprob: -7.190652370452881

Token 839: ' binary' (ID: 15600)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ops' → logprob: -1.0138753652572632
    2. 'op' → logprob: -1.3888753652572632
    3. 'ways' → logprob: -2.7638754844665527
    4. '   ' → logprob: -2.8888754844665527
    5. 'spl' → logprob: -3.0138754844665527
    6. 'tokens' → logprob: -3.2638754844665527
    7. 'parent' → logprob: -3.3888754844665527
    8. 'token' → logprob: -4.263875484466553
    9. ' ways' → logprob: -4.388875484466553
    10. 'operator' → logprob: -4.513875484466553

Token 840: ' split' (ID: 12648)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.8335668444633484
    2. 'op' → logprob: -1.3335669040679932
    3. '_ops' → logprob: -1.9585669040679932
    4. 'operators' → logprob: -2.958566904067993
    5. '_op' → logprob: -3.333566904067993
    6. ' ops' → logprob: -3.458566904067993
    7. '_' → logprob: -4.208566665649414
    8. ' operators' → logprob: -4.208566665649414
    9. 'operations' → logprob: -5.458566665649414
    10. ' ' → logprob: -5.833566665649414

Token 841: ' orders' (ID: 12528)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19448474049568176
    2. ':' → logprob: -3.0694847106933594
    3. '   ' → logprob: -3.8194847106933594
    4. ' if' → logprob: -3.9444847106933594
    5. ':
' → logprob: -3.9444847106933594
    6. 'if' → logprob: -4.069484710693359
    7. 'def' → logprob: -4.319484710693359
    8. '
' → logprob: -4.319484710693359
    9. 'expr' → logprob: -5.069484710693359
    10. 'tokens' → logprob: -5.444484710693359

Token 842: ' must' (ID: 2804)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0531420707702637
    2. 'expr' → logprob: -1.8031420707702637
    3. 'return' → logprob: -1.9281420707702637
    4. 'tokens' → logprob: -1.9281420707702637
    5. 'term' → logprob: -2.5531420707702637
    6. 'left' → logprob: -3.0531420707702637
    7. 'def' → logprob: -4.178142070770264
    8. 'terms' → logprob: -4.303142070770264
    9. '```' → logprob: -4.678142070770264
    10. 'node' → logprob: -5.178142070770264

Token 843: ' count' (ID: 3605)
  Prédit: ' be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.05545073375105858
    2. 'be' → logprob: -2.930450677871704
    3. ' ' → logprob: -8.430450439453125
    4. '       ' → logprob: -9.055450439453125
    5. '   ' → logprob: -10.180450439453125
    6. '    ' → logprob: -10.180450439453125
    7. 'return' → logprob: -10.180450439453125
    8. '	be' → logprob: -10.180450439453125
    9. ' return' → logprob: -10.430450439453125
    10. '  ' → logprob: -10.930450439453125

Token 844: ',
' (ID: 412)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38451093435287476
    2. 'expr' → logprob: -2.1345109939575195
    3. 'left' → logprob: -2.6345109939575195
    4. ' left' → logprob: -3.3845109939575195
    5. 'tokens' → logprob: -3.8845109939575195
    6. 'return' → logprob: -4.1345109939575195
    7. 'term' → logprob: -4.6345109939575195
    8. ' tokens' → logprob: -5.0095109939575195
    9. '```' → logprob: -5.6345109939575195
    10. ' expr' → logprob: -5.6345109939575195

Token 845: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006400342099368572
    2. 'return' → logprob: -6.006400108337402
    3. 'expr' → logprob: -6.506400108337402
    4. 'tokens' → logprob: -6.756400108337402
    5. ' tokens' → logprob: -7.881400108337402
    6. ' return' → logprob: -8.256400108337402
    7. '#' → logprob: -8.381400108337402
    8. '   ' → logprob: -8.881400108337402
    9. ' expr' → logprob: -9.881400108337402
    10. '           ' → logprob: -10.131400108337402

Token 846: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006531818769872189
    2. ' so' → logprob: -5.631531715393066
    3. 'return' → logprob: -7.381531715393066
    4. '   ' → logprob: -7.506531715393066
    5. '        
' → logprob: -7.631531715393066
    6. '           ' → logprob: -8.756531715393066
    7. ' and' → logprob: -8.881531715393066
    8. '
' → logprob: -9.006531715393066
    9. 'self' → logprob: -9.006531715393066
    10. '      ' → logprob: -9.256531715393066

Token 847: ' so' (ID: 813)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.9622786045074463
    2. 'term' → logprob: -1.5872786045074463
    3. 'token' → logprob: -1.5872786045074463
    4. 'tokens' → logprob: -1.8372786045074463
    5. '#' → logprob: -3.8372786045074463
    6. '       ' → logprob: -4.462278366088867
    7. 'return' → logprob: -5.337278366088867
    8. 'if' → logprob: -5.587278366088867
    9. 's' → logprob: -6.462278366088867
    10. 'rest' → logprob: -6.587278366088867

Token 848: ' parsing' (ID: 51039)
  Prédit: 'term'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'term' → logprob: -0.7514956593513489
    2. 'tokens' → logprob: -1.876495599746704
    3. 'token' → logprob: -2.001495599746704
    4. 'expr' → logprob: -2.501495599746704
    5. '#' → logprob: -2.751495599746704
    6. 'return' → logprob: -3.126495599746704
    7. 'terms' → logprob: -4.251495838165283
    8. 'left' → logprob: -4.626495838165283
    9. 'rest' → logprob: -5.126495838165283
    10. 'node' → logprob: -5.626495838165283

Token 849: ' into' (ID: 1511)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.6099573969841003
    2. 'term' → logprob: -1.3599574565887451
    3. 'token' → logprob: -2.234957456588745
    4. 'self' → logprob: -3.109957456588745
    5. ' tokens' → logprob: -4.484957218170166
    6. 's' → logprob: -4.484957218170166
    7. 'return' → logprob: -5.109957218170166
    8. 'terms' → logprob: -5.734957218170166
    9. 'expr' → logprob: -5.984957218170166
    10. 'def' → logprob: -6.109957218170166

Token 850: ' AST' (ID: 41607)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.20587489008903503
    2. 'a' → logprob: -1.9558749198913574
    3. 'self' → logprob: -3.8308749198913574
    4. 'terms' → logprob: -5.455874919891357
    5. 'Binary' → logprob: -5.705874919891357
    6. 'def' → logprob: -5.705874919891357
    7. 'Expression' → logprob: -6.705874919891357
    8. 'None' → logprob: -7.080874919891357
    9. 'binary' → logprob: -7.080874919891357
    10. 'token' → logprob: -7.080874919891357

Token 851: ' just' (ID: 1327)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7028772234916687
    2. '(self' → logprob: -1.7028772830963135
    3. ' =' → logprob: -1.9528772830963135
    4. 'tokens' → logprob: -3.7028772830963135
    5. 'self' → logprob: -3.8278772830963135
    6. 'def' → logprob: -3.8278772830963135
    7. 'if' → logprob: -3.9528772830963135
    8. '()' → logprob: -4.452877044677734
    9. '_tokens' → logprob: -4.452877044677734
    10. '=' → logprob: -4.577877044677734

Token 852: ' by' (ID: 656)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.48696696758270264
    2. 'tokens' → logprob: -1.3619669675827026
    3. 'returns' → logprob: -2.736967086791992
    4. 'for' → logprob: -4.861967086791992
    5. ' return' → logprob: -4.986967086791992
    6. 'token' → logprob: -5.236967086791992
    7. 'as' → logprob: -5.361967086791992
    8. 'needs' → logprob: -5.361967086791992
    9. ' tokens' → logprob: -5.611967086791992
    10. 'st' → logprob: -5.861967086791992

Token 853: ' the' (ID: 290)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.424166202545166
    2. 'spl' → logprob: -2.049166202545166
    3. 'rec' → logprob: -2.549166202545166
    4. 'terms' → logprob: -3.674166202545166
    5. 'token' → logprob: -3.674166202545166
    6. 'return' → logprob: -3.924166202545166
    7. 'binary' → logprob: -4.549166202545166
    8. 'all' → logprob: -4.799166202545166
    9. 'left' → logprob: -5.299166202545166
    10. 'looking' → logprob: -5.299166202545166

Token 854: ' syntax' (ID: 45440)
  Prédit: 'lowest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lowest' → logprob: -1.1116927862167358
    2. 'next' → logprob: -1.8616927862167358
    3. 'whole' → logprob: -2.1116929054260254
    4. 'token' → logprob: -2.3616929054260254
    5. 'full' → logprob: -2.6116929054260254
    6. 'same' → logprob: -3.1116929054260254
    7. 'top' → logprob: -3.6116929054260254
    8. 'tokens' → logprob: -3.6116929054260254
    9. 'ent' → logprob: -3.7366929054260254
    10. 'current' → logprob: -4.236692905426025

Token 855: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7112074494361877
    2. 'tokens' → logprob: -1.586207389831543
    3. 'term' → logprob: -2.336207389831543
    4. 'if' → logprob: -2.961207389831543
    5. 'token' → logprob: -3.086207389831543
    6. 'expr' → logprob: -3.211207389831543
    7. 'def' → logprob: -3.961207389831543
    8. 'rest' → logprob: -4.586207389831543
    9. ':' → logprob: -5.086207389831543
    10. '#' → logprob: -5.336207389831543

Token 856: '       ' (ID: 309)
  Prédit: 'term'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'term' → logprob: -0.9666545987129211
    2. 'token' → logprob: -1.5916545391082764
    3. 'expr' → logprob: -1.9666545391082764
    4. 'tokens' → logprob: -2.0916545391082764
    5. 'return' → logprob: -2.8416545391082764
    6. '       ' → logprob: -3.3416545391082764
    7. 'if' → logprob: -3.5916545391082764
    8. 'left' → logprob: -4.7166547775268555
    9. 'terms' → logprob: -5.2166547775268555
    10. 'c' → logprob: -5.3416547775268555

Token 857: ' #' (ID: 1069)
  Prédit: 'token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'token' → logprob: -1.3370355367660522
    2. 'if' → logprob: -1.4620355367660522
    3. 'expr' → logprob: -1.8370355367660522
    4. 'term' → logprob: -1.9620355367660522
    5. 'tokens' → logprob: -2.087035655975342
    6. '#' (adapté à ' #') → logprob: -3.462035655975342
    7. 'return' → logprob: -3.837035655975342
    8. 'left' → logprob: -5.337035655975342
    9. 'terms' → logprob: -5.587035655975342
    10. 'c' → logprob: -5.587035655975342

Token 858: ' We'll' (ID: 46830)
  Prédit: 'term'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'term' → logprob: -0.4575989246368408
    2. 'token' → logprob: -1.8325989246368408
    3. 'tokens' → logprob: -2.457598924636841
    4. 'expr' → logprob: -2.707598924636841
    5. '#' → logprob: -4.082598686218262
    6. 'return' → logprob: -4.582598686218262
    7. 'c' → logprob: -4.832598686218262
    8. 'tok' → logprob: -5.457598686218262
    9. 'if' → logprob: -5.707598686218262
    10. 'terms' → logprob: -5.707598686218262

Token 859: ' parse' (ID: 8420)
  Prédit: 'token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'token' → logprob: -0.6859626173973083
    2. 'parse' → logprob: -1.9359626770019531
    3. ' tokenize' → logprob: -2.060962677001953
    4. 'def' → logprob: -2.560962677001953
    5. ' parse' → logprob: -3.435962677001953
    6. ' token' → logprob: -3.685962677001953
    7. 'return' → logprob: -4.185962677001953
    8. '   ' → logprob: -4.310962677001953
    9. ' tokens' → logprob: -4.310962677001953
    10. ' def' → logprob: -4.935962677001953

Token 860: ' fully' (ID: 9637)
  Prédit: 'term'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'term' → logprob: -0.49477070569992065
    2. 'tokens' → logprob: -1.6197707653045654
    3. 'terms' → logprob: -2.4947707653045654
    4. 'token' → logprob: -2.8697707653045654
    5. 'left' → logprob: -3.4947707653045654
    6. 'expr' → logprob: -5.369770526885986
    7. 'node' → logprob: -5.994770526885986
    8. 'f' → logprob: -5.994770526885986
    9. 'return' → logprob: -6.369770526885986
    10. 'self' → logprob: -6.369770526885986

Token 861: ' into' (ID: 1511)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -1.6980891227722168
    2. 'if' → logprob: -1.9480891227722168
    3. 'token' → logprob: -2.323089122772217
    4. '   ' → logprob: -2.573089122772217
    5. 'def' → logprob: -2.698089122772217
    6. ' if' → logprob: -2.823089122772217
    7. 'return' → logprob: -3.073089122772217
    8. '       ' → logprob: -3.073089122772217
    9. 'expr' → logprob: -3.073089122772217
    10. '(self' → logprob: -3.823089122772217

Token 862: ' an' (ID: 448)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.36671581864356995
    2. 'a' → logprob: -1.2417157888412476
    3. 'terms' → logprob: -4.866715908050537
    4. 'self' → logprob: -5.366715908050537
    5. 'Binary' → logprob: -6.616715908050537
    6. 'list' → logprob: -7.241715908050537
    7. 'binary' → logprob: -7.741715908050537
    8. 'term' → logprob: -7.741715908050537
    9. 'token' → logprob: -8.116715431213379
    10. 'atoms' → logprob: -8.241715431213379

Token 863: ' AST' (ID: 41607)
  Prédit: 'Expression'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Expression' → logprob: -0.2691227197647095
    2. ' Expression' → logprob: -2.14412260055542
    3. 'abstract' → logprob: -3.76912260055542
    4. 'expression' → logprob: -3.89412260055542
    5. 'or' → logprob: -4.14412260055542
    6. 'Abstract' → logprob: -5.01912260055542
    7. 'AST' → logprob: -5.14412260055542
    8. 'union' → logprob: -5.39412260055542
    9. ' abstract' → logprob: -5.39412260055542
    10. 'un' → logprob: -5.51912260055542

Token 864: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18061651289463043
    2. 'return' → logprob: -2.805616617202759
    3. 'tokens' → logprob: -3.805616617202759
    4. 'expr' → logprob: -4.18061637878418
    5. 'def' → logprob: -4.18061637878418
    6. 'token' → logprob: -4.93061637878418
    7. 'if' → logprob: -4.93061637878418
    8. ',' → logprob: -5.18061637878418
    9. '   ' → logprob: -5.43061637878418
    10. 's' → logprob: -5.55561637878418

Token 865: ' binary' (ID: 15600)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.1393301486968994
    2. 'tokens' → logprob: -1.1393301486968994
    3. 'terms' → logprob: -2.0143301486968994
    4. 'no' → logprob: -2.6393301486968994
    5. 'lowest' → logprob: -3.0143301486968994
    6. 'all' → logprob: -3.7643301486968994
    7. 'self' → logprob: -4.01432991027832
    8. 'binary' → logprob: -4.26432991027832
    9. 'left' → logprob: -4.51432991027832
    10. 'Binary' → logprob: -5.01432991027832

Token 866: ' op' (ID: 991)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.22376906871795654
    2. 'ops' → logprob: -1.9737690687179565
    3. 'operator' → logprob: -3.598769187927246
    4. 'operators' → logprob: -4.098769187927246
    5. 'operations' → logprob: -5.098769187927246
    6. '_op' → logprob: -5.473769187927246
    7. 'operation' → logprob: -6.473769187927246
    8. '_ops' → logprob: -6.598769187927246
    9. '_operator' → logprob: -6.848769187927246
    10. 'Op' → logprob: -7.473769187927246

Token 867: ' nodes' (ID: 15749)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.49549585580825806
    2. 'nodes' → logprob: -1.8704957962036133
    3. 'tokens' → logprob: -2.6204957962036133
    4. '   ' → logprob: -2.8704957962036133
    5. 'er' → logprob: -4.370495796203613
    6. '       ' → logprob: -4.495495796203613
    7. 'node' → logprob: -4.495495796203613
    8. ' nodes' → logprob: -4.620495796203613
    9. 'expr' → logprob: -4.870495796203613
    10. 'or' → logprob: -4.995495796203613

Token 868: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08498719334602356
    2. 'return' → logprob: -3.959987163543701
    3. ',' → logprob: -4.459987163543701
    4. 'tokens' → logprob: -4.709987163543701
    5. '   ' → logprob: -4.834987163543701
    6. 'def' → logprob: -5.084987163543701
    7. ' and' → logprob: -5.459987163543701
    8. 'expr' → logprob: -5.959987163543701
    9. ':' → logprob: -6.084987163543701
    10. ' (' → logprob: -6.584987163543701

Token 869: ' ignoring' (ID: 68244)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.23974408209323883
    2. 'expr' → logprob: -2.989744186401367
    3. 'nodes' → logprob: -3.489744186401367
    4. '       ' → logprob: -3.489744186401367
    5. 'terms' → logprob: -3.864744186401367
    6. ' tokens' → logprob: -3.989744186401367
    7. 'parts' → logprob: -4.239744186401367
    8. '#' → logprob: -4.614744186401367
    9. 'token' → logprob: -4.864744186401367
    10. 'term' → logprob: -5.239744186401367

Token 870: ' precedence' (ID: 120000)
  Prédit: 'preced'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'preced' → logprob: -0.3456049859523773
    2. 'operator' → logprob: -2.59560489654541
    3. ' whitespace' → logprob: -2.72060489654541
    4. 'wh' → logprob: -3.09560489654541
    5. 'spaces' → logprob: -3.47060489654541
    6. ' operator' → logprob: -3.84560489654541
    7. ' precedence' → logprob: -3.97060489654541
    8. ' spaces' → logprob: -4.72060489654541
    9. 'left' → logprob: -5.47060489654541
    10. 'the' → logprob: -5.97060489654541

Token 871: ',
' (ID: 412)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1856711059808731
    2. '   ' → logprob: -3.310671091079712
    3. 'tokens' → logprob: -3.310671091079712
    4. 'if' → logprob: -3.935671091079712
    5. 'def' → logprob: -4.185671329498291
    6. 'token' → logprob: -4.685671329498291
    7. ' if' → logprob: -4.685671329498291
    8. 'expr' → logprob: -4.810671329498291
    9. 'return' → logprob: -4.935671329498291
    10. ':' → logprob: -5.060671329498291

Token 872: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014103919267654419
    2. ' and' → logprob: -5.014103889465332
    3. '   ' → logprob: -6.639103889465332
    4. '#' → logprob: -6.639103889465332
    5. ' but' → logprob: -6.639103889465332
    6. ' tokens' → logprob: -7.139103889465332
    7. 'and' → logprob: -7.264103889465332
    8. '           ' → logprob: -7.389103889465332
    9. 'tokens' → logprob: -8.389103889465332
    10. ' while' → logprob: -8.389103889465332

Token 873: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5183921456336975
    2. '#' (adapté à ' #') → logprob: -1.7683920860290527
    3. ' and' → logprob: -2.6433920860290527
    4. ' tokens' → logprob: -2.8933920860290527
    5. 'and' → logprob: -4.018392086029053
    6. 'tokens' → logprob: -4.143392086029053
    7. ' but' → logprob: -4.518392086029053
    8. '           ' → logprob: -4.768392086029053
    9. 'def' → logprob: -5.018392086029053
    10. ' so' → logprob: -5.018392086029053

Token 874: ' and' (ID: 326)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.39108502864837646
    2. '#' → logprob: -2.141085147857666
    3. 'expr' → logprob: -2.641085147857666
    4. 'term' → logprob: -2.891085147857666
    5. 'token' → logprob: -3.141085147857666
    6. '       ' → logprob: -4.141085147857666
    7. 'left' → logprob: -5.266085147857666
    8. 'terms' → logprob: -5.266085147857666
    9. 'node' → logprob: -6.141085147857666
    10. 'parts' → logprob: -6.641085147857666

Token 875: ' then' (ID: 1815)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.6558745503425598
    2. ' tokens' → logprob: -1.155874490737915
    3. 'return' → logprob: -2.530874490737915
    4. 'def' → logprob: -4.030874729156494
    5. ' return' → logprob: -4.155874729156494
    6. '#' → logprob: -4.530874729156494
    7. 'rest' → logprob: -4.780874729156494
    8. 'expr' → logprob: -4.905874729156494
    9. 'token' → logprob: -5.030874729156494
    10. '       ' → logprob: -5.155874729156494

Token 876: ' during' (ID: 3354)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.9106882214546204
    2. 'return' → logprob: -1.5356881618499756
    3. 'rest' → logprob: -2.2856881618499756
    4. 'expr' → logprob: -2.2856881618499756
    5. 'left' → logprob: -3.0356881618499756
    6. ' tokens' → logprob: -3.2856881618499756
    7. ' return' → logprob: -4.035688400268555
    8. 'token' → logprob: -4.410688400268555
    9. '       ' → logprob: -4.660688400268555
    10. 'def' → logprob: -5.035688400268555

Token 877: ' evaluation' (ID: 21407)
  Prédit: 'evaluation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'evaluation' → logprob: -0.07653841376304626
    2. 'evaluate' → logprob: -2.701538324356079
    3. ' evaluation' → logprob: -5.076538562774658
    4. 'the' → logprob: -9.0765380859375
    5. 'def' → logprob: -9.8265380859375
    6. '`' → logprob: -10.4515380859375
    7. '
' → logprob: -10.8265380859375
    8. 'eval' → logprob: -10.9515380859375
    9. ' evaluate' → logprob: -11.2015380859375
    10. '```' → logprob: -11.7015380859375

Token 878: ' we' (ID: 581)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0447225347161293
    2. ',' → logprob: -3.544722557067871
    3. 'def' → logprob: -5.544722557067871
    4. '   ' → logprob: -6.169722557067871
    5. 'return' → logprob: -6.669722557067871
    6. ':' → logprob: -6.794722557067871
    7. '#' → logprob: -7.169722557067871
    8. ' (' → logprob: -7.669722557067871
    9. 'tokens' → logprob: -7.794722557067871
    10. '()' → logprob: -8.044722557067871

Token 879: ' generate' (ID: 10419)
  Prédit: ' will'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' will' → logprob: -0.6858675479888916
    2. ' consider' → logprob: -1.6858675479888916
    3. ' generate' → logprob: -2.3108675479888916
    4. ''ll' → logprob: -2.3108675479888916
    5. ' can' → logprob: -3.4358675479888916
    6. ' return' → logprob: -4.0608673095703125
    7. ' continue' → logprob: -4.3108673095703125
    8. ' allow' → logprob: -5.1858673095703125
    9. 'consider' → logprob: -5.4358673095703125
    10. ' try' → logprob: -5.5608673095703125

Token 880: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.02976749837398529
    2. ' all' → logprob: -3.5297675132751465
    3. 'every' → logprob: -12.654767036437988
    4. 'different' → logprob: -12.779767036437988
    5. 'multiple' → logprob: -12.904767036437988
    6. 'the' → logprob: -13.154767036437988
    7. 'a' → logprob: -13.654767036437988
    8. 'results' → logprob: -14.154767036437988
    9. ' sets' → logprob: -14.404767036437988
    10. '	all' → logprob: -14.404767036437988

Token 881: ' ways' (ID: 6984)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.031388603150844574
    2. ' possible' → logprob: -3.656388521194458
    3. 'poss' → logprob: -6.531388759613037
    4. 'ways' → logprob: -6.781388759613037
    5. 'parent' → logprob: -7.156388759613037
    6. 'valid' → logprob: -8.281388282775879
    7. 'spl' → logprob: -8.281388282775879
    8. '   ' → logprob: -8.531388282775879
    9. 'token' → logprob: -8.656388282775879
    10. 'split' → logprob: -8.906388282775879

Token 882: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0037026889622211456
    2. ' to' → logprob: -5.753702640533447
    3. ' of' → logprob: -8.128703117370605
    4. '           ' → logprob: -9.253703117370605
    5. ',' → logprob: -10.128703117370605
    6. 'to' → logprob: -10.378703117370605
    7. '   ' → logprob: -11.503703117370605
    8. 'return' → logprob: -11.628703117370605
    9. '.' → logprob: -11.753703117370605
    10. ' that' → logprob: -12.003703117370605

Token 883: ' evaluation' (ID: 21407)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.012080679647624493
    2. ' parent' → logprob: -4.512080669403076
    3. 'evalu' → logprob: -7.887080669403076
    4. 'paren' → logprob: -8.637081146240234
    5. 'adding' → logprob: -9.012081146240234
    6. 'par' → logprob: -9.262081146240234
    7. 'spl' → logprob: -9.512081146240234
    8. 'evaluation' → logprob: -9.762081146240234
    9. 'comb' → logprob: -10.512081146240234
    10. ' parentheses' → logprob: -11.012081146240234

Token 884: ' by' (ID: 656)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01023019663989544
    2. '   ' → logprob: -5.38523006439209
    3. '
' → logprob: -7.01023006439209
    4. '(self' → logprob: -7.13523006439209
    5. ':' → logprob: -7.26023006439209
    6. ',' → logprob: -8.26023006439209
    7. '        
' → logprob: -8.26023006439209
    8. '(' → logprob: -8.26023006439209
    9. 'def' → logprob: -8.51023006439209
    10. 'return' → logprob: -8.63523006439209

Token 885: ' recursive' (ID: 66711)
  Prédit: 'spl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'spl' → logprob: -0.3725196421146393
    2. 'rec' → logprob: -1.372519612312317
    3. 'consider' → logprob: -4.247519493103027
    4. 're' → logprob: -4.622519493103027
    5. 'parent' → logprob: -5.372519493103027
    6. 'trying' → logprob: -5.497519493103027
    7. 'def' → logprob: -5.622519493103027
    8. 'comb' → logprob: -5.747519493103027
    9. 'different' → logprob: -5.747519493103027
    10. ' splitting' → logprob: -6.122519493103027

Token 886: ' splitting' (ID: 87130)
  Prédit: 'spl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'spl' → logprob: -0.23728010058403015
    2. 'calls' → logprob: -1.7372801303863525
    3. 'def' → logprob: -3.7372801303863525
    4. 'split' → logprob: -6.237279891967773
    5. 'partition' → logprob: -6.362279891967773
    6. 'comb' → logprob: -6.487279891967773
    7. 'parent' → logprob: -7.112279891967773
    8. 'calling' → logprob: -7.237279891967773
    9. 'evaluation' → logprob: -7.362279891967773
    10. 'divide' → logprob: -7.487279891967773

Token 887: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004451720044016838
    2. '   ' → logprob: -6.879451751708984
    3. 's' → logprob: -7.379451751708984
    4. 'tokens' → logprob: -7.504451751708984
    5. 'if' → logprob: -7.879451751708984
    6. ' if' → logprob: -8.004451751708984
    7. 'expr' → logprob: -8.254451751708984
    8. 'rest' → logprob: -8.629451751708984
    9. 'def' → logprob: -8.879451751708984
    10. '```' → logprob: -9.004451751708984

Token 888: '       ' (ID: 309)
  Prédit: 'token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'token' → logprob: -0.6976082921028137
    2. '       ' → logprob: -1.572608232498169
    3. 'expr' → logprob: -2.072608232498169
    4. 'tokens' → logprob: -2.322608232498169
    5. 'term' → logprob: -3.447608232498169
    6. 'return' → logprob: -3.822608232498169
    7. 'tok' → logprob: -4.697608470916748
    8. 'node' → logprob: -6.572608470916748
    9. 'if' → logprob: -6.822608470916748
    10. '#' → logprob: -7.197608470916748

Token 889: ' #
' (ID: 21888)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.8220734000205994
    2. 'term' → logprob: -1.8220734596252441
    3. 'tokens' → logprob: -2.197073459625244
    4. 'terms' → logprob: -2.322073459625244
    5. 'return' → logprob: -2.572073459625244
    6. 'node' → logprob: -3.072073459625244
    7. 'left' → logprob: -3.947073459625244
    8. '#' → logprob: -4.197073459625244
    9. 'if' → logprob: -4.572073459625244
    10. 'token' → logprob: -4.947073459625244

Token 890: '       ' (ID: 309)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.6093494892120361
    2. '       ' → logprob: -1.2343494892120361
    3. 'token' → logprob: -2.359349489212036
    4. 'return' → logprob: -3.859349489212036
    5. 'term' → logprob: -4.359349250793457
    6. 'tokens' → logprob: -4.734349250793457
    7. '#' → logprob: -4.859349250793457
    8. 's' → logprob: -5.484349250793457
    9. 'if' → logprob: -5.484349250793457
    10. 'rest' → logprob: -5.609349250793457

Token 891: ' #' (ID: 1069)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expr' → logprob: -1.1115214824676514
    2. 'term' → logprob: -1.8615214824676514
    3. 'tokens' → logprob: -1.8615214824676514
    4. '#' (adapté à ' #') → logprob: -2.6115214824676514
    5. 'return' → logprob: -2.6115214824676514
    6. 'token' → logprob: -2.8615214824676514
    7. 'node' → logprob: -3.1115214824676514
    8. 'terms' → logprob: -3.2365214824676514
    9. 'left' → logprob: -3.7365214824676514
    10. 'if' → logprob: -4.1115217208862305

Token 892: ' Because' (ID: 13602)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.7524867653846741
    2. 'tokens' → logprob: -1.8774867057800293
    3. 'term' → logprob: -2.2524867057800293
    4. 'return' → logprob: -2.7524867057800293
    5. 'token' → logprob: -2.8774867057800293
    6. '#' → logprob: -2.8774867057800293
    7. 'node' → logprob: -3.5024867057800293
    8. 'terms' → logprob: -3.7524867057800293
    9. 'result' → logprob: -4.377486705780029
    10. 'start' → logprob: -4.877486705780029

Token 893: ' to' (ID: 316)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expr' → logprob: -1.4761470556259155
    2. 'self' → logprob: -1.9761470556259155
    3. 'c' → logprob: -2.226147174835205
    4. 'term' → logprob: -2.351147174835205
    5. 'token' → logprob: -2.351147174835205
    6. 'result' → logprob: -2.476147174835205
    7. 'tokens' → logprob: -2.726147174835205
    8. 'start' → logprob: -3.101147174835205
    9. 'ch' → logprob: -3.601147174835205
    10. '#' → logprob: -3.601147174835205

Token 894: ' compute' (ID: 23864)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parse' → logprob: -1.023545742034912
    2. 'self' → logprob: -2.398545742034912
    3. 'def' → logprob: -2.773545742034912
    4. 'if' → logprob: -2.898545742034912
    5. 'return' → logprob: -3.023545742034912
    6. '   ' → logprob: -3.148545742034912
    7. ' parse' → logprob: -3.273545742034912
    8. 'ken' → logprob: -3.273545742034912
    9. ' self' → logprob: -3.523545742034912
    10. 'kn' → logprob: -3.773545742034912

Token 895: ' all' (ID: 722)
  Prédit: 'term'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'term' → logprob: -1.1362476348876953
    2. 'expr' → logprob: -1.3862476348876953
    3. 'token' → logprob: -1.6362476348876953
    4. 'node' → logprob: -2.3862476348876953
    5. 'left' → logprob: -2.5112476348876953
    6. 'tokens' → logprob: -4.136247634887695
    7. 'result' → logprob: -4.636247634887695
    8. 'terms' → logprob: -4.886247634887695
    9. 'if' → logprob: -5.261247634887695
    10. 'tok' → logprob: -5.636247634887695

Token 896: ' possible' (ID: 4149)
  Prédit: 'token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'token' → logprob: -1.2766255140304565
    2. 'tokens' → logprob: -1.2766255140304565
    3. ' tokens' → logprob: -2.526625633239746
    4. 'c' → logprob: -2.526625633239746
    5. 'expr' → logprob: -2.776625633239746
    6. ' parts' → logprob: -3.151625633239746
    7. 'parts' → logprob: -3.651625633239746
    8. ' token' → logprob: -4.276625633239746
    9. 's' → logprob: -4.401625633239746
    10. 'chars' → logprob: -4.651625633239746

Token 897: ' results' (ID: 4376)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -1.0648221969604492
    2. 'expr' → logprob: -1.3148221969604492
    3. 'parts' → logprob: -2.189822196960449
    4. 'exp' → logprob: -3.064822196960449
    5. 'terms' → logprob: -3.189822196960449
    6. 'token' → logprob: -3.189822196960449
    7. 'results' → logprob: -3.689822196960449
    8. 'ops' → logprob: -3.814822196960449
    9. 'express' → logprob: -4.439822196960449
    10. 'term' → logprob: -4.439822196960449

Token 898: ' with' (ID: 483)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2848096191883087
    2. '       ' → logprob: -2.6598095893859863
    3. 'if' → logprob: -2.9098095893859863
    4. 'token' → logprob: -3.2848095893859863
    5. 'tokens' → logprob: -3.4098095893859863
    6. ' if' → logprob: -4.534809589385986
    7. '   ' → logprob: -5.034809589385986
    8. 'expr' → logprob: -5.284809589385986
    9. ' of' → logprob: -5.409809589385986
    10. '(),' → logprob: -6.159809589385986

Token 899: ' all' (ID: 722)
  Prédit: 'no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'no' → logprob: -1.9480910301208496
    2. 'binary' → logprob: -2.0730910301208496
    3. 'full' → logprob: -2.1980910301208496
    4. 'the' → logprob: -2.1980910301208496
    5. 'operators' → logprob: -2.8230910301208496
    6. 'all' → logprob: -3.0730910301208496
    7. 'memo' → logprob: -3.0730910301208496
    8. 'parent' → logprob: -3.1980910301208496
    9. 'operator' → logprob: -3.3230910301208496
    10. 'self' → logprob: -3.4480910301208496

Token 900: ' possible' (ID: 4149)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.6992504596710205
    2. ' possible' → logprob: -2.3242504596710205
    3. 'tokens' → logprob: -3.0742504596710205
    4. 'binary' → logprob: -3.0742504596710205
    5. 'ways' → logprob: -3.1992504596710205
    6. ')' → logprob: -3.5742504596710205
    7. ' binary' → logprob: -3.6992504596710205
    8. 'parent' → logprob: -3.6992504596710205
    9. ' valid' → logprob: -3.8242504596710205
    10. 'valid' → logprob: -3.8242504596710205

Token 901: ' orders' (ID: 12528)
  Prédit: 'spl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'spl' → logprob: -0.7317109107971191
    2. 'parent' → logprob: -1.2317109107971191
    3. 'binary' → logprob: -2.606710910797119
    4. 'ways' → logprob: -2.606710910797119
    5. 'split' → logprob: -4.481710910797119
    6. 'token' → logprob: -4.606710910797119
    7. 'positions' → logprob: -5.231710910797119
    8. ' parent' → logprob: -5.356710910797119
    9. ' splits' → logprob: -5.356710910797119
    10. 'tokens' → logprob: -5.481710910797119

Token 902: ',
' (ID: 412)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3948698937892914
    2. ',' → logprob: -1.3948699235916138
    3. ' of' → logprob: -3.519869804382324
    4. ' if' → logprob: -4.144869804382324
    5. '   ' → logprob: -4.769869804382324
    6. ' tokens' → logprob: -5.894869804382324
    7. 'if' → logprob: -6.019869804382324
    8. ':' → logprob: -6.019869804382324
    9. ' for' → logprob: -6.144869804382324
    10. 'tokens' → logprob: -6.394869804382324

Token 903: '       ' (ID: 309)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.4364549219608307
    2. 'tokens' → logprob: -2.186455011367798
    3. 'token' → logprob: -2.436455011367798
    4. '       ' → logprob: -2.436455011367798
    5. 'term' → logprob: -3.686455011367798
    6. 'node' → logprob: -4.311454772949219
    7. ' tokens' → logprob: -4.561454772949219
    8. ' expr' → logprob: -5.311454772949219
    9. 'if' → logprob: -6.061454772949219
    10. '#' → logprob: -6.061454772949219

Token 904: ' #' (ID: 1069)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.8973958492279053
    2. 'token' → logprob: -1.2723958492279053
    3. 'if' → logprob: -2.2723958492279053
    4. 'term' → logprob: -2.2723958492279053
    5. 'tokens' → logprob: -3.1473958492279053
    6. '       ' → logprob: -3.3973958492279053
    7. '#' (adapté à ' #') → logprob: -4.397396087646484
    8. 'node' → logprob: -5.772396087646484
    9. 'c' → logprob: -5.772396087646484
    10. 'rest' → logprob: -5.897396087646484

Token 905: ' we' (ID: 581)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.9087299704551697
    2. 'term' → logprob: -1.4087300300598145
    3. 'token' → logprob: -2.0337300300598145
    4. 'tokens' → logprob: -2.1587300300598145
    5. '#' → logprob: -2.7837300300598145
    6. 'node' → logprob: -4.1587300300598145
    7. 'terms' → logprob: -5.0337300300598145
    8. 'left' → logprob: -5.1587300300598145
    9. 'if' → logprob: -5.4087300300598145
    10. 'return' → logprob: -6.0337300300598145

Token 906: ' must' (ID: 2804)
  Prédit: ' need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' need' → logprob: -0.9184455275535583
    2. 'def' → logprob: -1.5434455871582031
    3. 'need' → logprob: -2.668445587158203
    4. ' can' → logprob: -2.793445587158203
    5. ' must' → logprob: -3.168445587158203
    6. ' cannot' → logprob: -3.293445587158203
    7. ' def' → logprob: -3.293445587158203
    8. ' will' → logprob: -3.668445587158203
    9. ' parse' → logprob: -4.043445587158203
    10. ' just' → logprob: -4.543445587158203

Token 907: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.36268383264541626
    2. 'return' → logprob: -2.6126837730407715
    3. 'token' → logprob: -2.6126837730407715
    4. 'collect' → logprob: -3.6126837730407715
    5. 'implement' → logprob: -3.7376837730407715
    6. 'def' → logprob: -3.7376837730407715
    7. ' parse' → logprob: -4.4876837730407715
    8. 'not' → logprob: -4.6126837730407715
    9. '   ' → logprob: -4.6126837730407715
    10. 'split' → logprob: -4.6126837730407715

Token 908: ' fully' (ID: 9637)
  Prédit: 'term'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'term' → logprob: -0.5942002534866333
    2. 'tokens' → logprob: -1.0942002534866333
    3. 'terms' → logprob: -2.7192001342773438
    4. 'left' → logprob: -4.344200134277344
    5. 'token' → logprob: -4.719200134277344
    6. 'a' → logprob: -5.344200134277344
    7. 'the' → logprob: -5.719200134277344
    8. 'primary' → logprob: -6.094200134277344
    9. 'f' → logprob: -6.219200134277344
    10. 'self' → logprob: -6.344200134277344

Token 909: ' respecting' (ID: 136775)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.8318859934806824
    2. 'while' → logprob: -1.7068860530853271
    3. 'token' → logprob: -2.206886053085327
    4. 'term' → logprob: -2.706886053085327
    5. ' tokens' → logprob: -3.206886053085327
    6. '   ' → logprob: -3.456886053085327
    7. '       ' → logprob: -3.831886053085327
    8. 'def' → logprob: -4.081885814666748
    9. 'if' → logprob: -4.706885814666748
    10. 'self' → logprob: -4.956885814666748

Token 910: ' parentheses' (ID: 180602)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.7474105358123779
    2. 'parent' → logprob: -0.8724105358123779
    3. 'the' → logprob: -3.497410535812378
    4. ' parentheses' → logprob: -3.872410535812378
    5. 'token' → logprob: -4.372410774230957
    6. 'numbers' → logprob: -4.872410774230957
    7. ' tokens' → logprob: -4.872410774230957
    8. 'balanced' → logprob: -5.122410774230957
    9. ' parent' → logprob: -5.997410774230957
    10. 'nested' → logprob: -6.122410774230957

Token 911: ' but' (ID: 889)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06807413697242737
    2. ' and' → logprob: -3.1930742263793945
    3. ',' → logprob: -4.6930742263793945
    4. ' or' → logprob: -5.4430742263793945
    5. '<|end|>' → logprob: -5.8180742263793945
    6. '<|end|>' → logprob: -6.0680742263793945
    7. '.' → logprob: -6.3180742263793945
    8. '   ' → logprob: -7.3180742263793945
    9. ' if' → logprob: -7.3180742263793945
    10. '        
' → logprob: -7.4430742263793945

Token 912: ' treat' (ID: 4665)
  Prédit: ' also'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' also' → logprob: -1.2680639028549194
    2. 'also' → logprob: -1.7680639028549194
    3. ' not' → logprob: -1.8930639028549194
    4. ' tokens' → logprob: -2.518064022064209
    5. ' return' → logprob: -3.018064022064209
    6. 'not' → logprob: -3.518064022064209
    7. ' spaces' → logprob: -3.643064022064209
    8. ' tokenize' → logprob: -3.768064022064209
    9. 'allow' → logprob: -4.143064022064209
    10. ' for' → logprob: -4.143064022064209

Token 913: ' flat' (ID: 12508)
  Prédit: 'operators'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'operators' → logprob: -0.26617440581321716
    2. 'the' → logprob: -3.01617431640625
    3. 'operator' → logprob: -3.26617431640625
    4. 'all' → logprob: -3.51617431640625
    5. 'tokens' → logprob: -3.64117431640625
    6. 'ops' → logprob: -3.64117431640625
    7. 'binary' → logprob: -3.76617431640625
    8. ' operators' → logprob: -3.89117431640625
    9. 'every' → logprob: -5.76617431640625
    10. ' the' → logprob: -6.26617431640625

Token 914: ' expressions' (ID: 43578)
  Prédit: 'express'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'express' → logprob: -0.18792755901813507
    2. 'expression' → logprob: -2.687927484512329
    3. 'binary' → logprob: -2.937927484512329
    4. 'tokens' → logprob: -3.312927484512329
    5. ' expressions' → logprob: -6.187927722930908
    6. ' sequences' → logprob: -6.187927722930908
    7. 'sequence' → logprob: -6.562927722930908
    8. 'expr' → logprob: -6.937927722930908
    9. 'token' → logprob: -7.062927722930908
    10. 'operators' → logprob: -7.062927722930908

Token 915: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15817685425281525
    2. '(self' → logprob: -3.283176898956299
    3. ',' → logprob: -4.033176898956299
    4. '   ' → logprob: -4.408176898956299
    5. ' with' → logprob: -4.533176898956299
    6. ' (' → logprob: -4.658176898956299
    7. ' and' → logprob: -4.783176898956299
    8. ' =' → logprob: -4.908176898956299
    9. '(' → logprob: -5.283176898956299
    10. ' of' → logprob: -5.533176898956299

Token 916: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18758687376976013
    2. ' as' → logprob: -2.687586784362793
    3. '<|end|>' → logprob: -3.562586784362793
    4. '<|end|>' → logprob: -4.062586784362793
    5. ' with' → logprob: -4.187586784362793
    6. ',' → logprob: -4.687586784362793
    7. 'with' → logprob: -5.437586784362793
    8. ' in' → logprob: -5.812586784362793
    9. ' for' → logprob: -6.187586784362793
    10. 'as' → logprob: -6.187586784362793

Token 917: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.43854770064353943
    2. ' as' → logprob: -1.3135477304458618
    3. ' with' → logprob: -3.5635476112365723
    4. '#' (adapté à ' #') → logprob: -4.313547611236572
    5. 'with' → logprob: -5.188547611236572
    6. 'as' → logprob: -5.313547611236572
    7. ',' → logprob: -5.563547611236572
    8. ' without' → logprob: -5.563547611236572
    9. ' of' → logprob: -5.688547611236572
    10. ' and' → logprob: -5.938547611236572

Token 918: ' as' (ID: 472)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12484893947839737
    2. ' as' → logprob: -3.6248488426208496
    3. '#' → logprob: -3.8748488426208496
    4. '   ' → logprob: -4.74984884262085
    5. 'with' → logprob: -4.87484884262085
    6. 'as' → logprob: -5.12484884262085
    7. ',' → logprob: -5.62484884262085
    8. ' can' → logprob: -5.74984884262085
    9. ' with' → logprob: -5.87484884262085
    10. 'until' → logprob: -5.99984884262085

Token 919: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.028702622279524803
    2. 'tokens' → logprob: -4.778702735900879
    3. 'flat' → logprob: -5.153702735900879
    4. 'lists' → logprob: -5.778702735900879
    5. 'list' → logprob: -5.903702735900879
    6. 'sequence' → logprob: -6.028702735900879
    7. 'left' → logprob: -6.528702735900879
    8. 'se' → logprob: -6.528702735900879
    9. 'linear' → logprob: -6.778702735900879
    10. ' a' → logprob: -7.403702735900879

Token 920: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.4684072732925415
    2. 'sequence' → logprob: -1.4684072732925415
    3. 'flat' → logprob: -3.093407154083252
    4. 'binary' → logprob: -3.343407154083252
    5. ' list' → logprob: -3.843407154083252
    6. ' sequence' → logprob: -4.718407154083252
    7. 'll' → logprob: -4.718407154083252
    8. 'single' → logprob: -4.718407154083252
    9. 'linear' → logprob: -6.218407154083252
    10. 'chain' → logprob: -6.468407154083252

Token 921: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.4399433135986328
    2. '       ' → logprob: -1.6899433135986328
    3. '   ' → logprob: -2.564943313598633
    4. '[' → logprob: -3.814943313598633
    5. ' =' → logprob: -4.814943313598633
    6. ',' → logprob: -4.939943313598633
    7. 'tokens' → logprob: -5.314943313598633
    8. '_tokens' → logprob: -5.314943313598633
    9. 'def' → logprob: -5.439943313598633
    10. '[
' → logprob: -5.439943313598633

Token 922: ' tokens' (ID: 20290)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.006508486345410347
    2. 'terms' → logprob: -5.5065083503723145
    3. ' tokens' → logprob: -6.3815083503723145
    4. '(tokens' → logprob: -8.381508827209473
    5. 'token' → logprob: -8.631508827209473
    6. 'elements' → logprob: -9.756508827209473
    7. 'Expression' → logprob: -10.131508827209473
    8. 'term' → logprob: -10.131508827209473
    9. 'Tokens' → logprob: -10.381508827209473
    10. '(' → logprob: -10.631508827209473

Token 923: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.047491420060396194
    2. '   ' → logprob: -4.297491550445557
    3. '(self' → logprob: -4.297491550445557
    4. 'def' → logprob: -4.547491550445557
    5. 'tokens' → logprob: -5.922491550445557
    6. ':' → logprob: -6.297491550445557
    7. ' (' → logprob: -6.797491550445557
    8. '(' → logprob: -7.172491550445557
    9. '(tokens' → logprob: -8.172491073608398
    10. ' tokens' → logprob: -8.172491073608398

Token 924: ' re' (ID: 322)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.2902652025222778
    2. 'all' → logprob: -2.2902650833129883
    3. ' further' → logprob: -2.6652650833129883
    4. 'binary' → logprob: -2.6652650833129883
    5. 'spl' → logprob: -2.6652650833129883
    6. ' splitting' → logprob: -3.1652650833129883
    7. 'next' → logprob: -3.1652650833129883
    8. 'which' → logprob: -3.2902650833129883
    9. 'evaluation' → logprob: -3.2902650833129883
    10. ' evaluation' → logprob: -3.6652650833129883

Token 925: '-parent' (ID: 105287)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.2959968149662018
    2. 'mainder' → logprob: -2.295996904373169
    3. 'm' → logprob: -2.920996904373169
    4. 'st' → logprob: -3.295996904373169
    5. 'turn' → logprob: -3.795996904373169
    6. 'curse' → logprob: -4.04599666595459
    7. 'main' → logprob: -4.54599666595459
    8. 'cur' → logprob: -5.42099666595459
    9. 'ma' → logprob: -5.54599666595459
    10. 'curr' → logprob: -6.92099666595459

Token 926: 'hes' (ID: 9780)
  Prédit: 'hes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hes' → logprob: -0.0022619483061134815
    2. 'h' → logprob: -6.377262115478516
    3. 'heses' → logprob: -8.127262115478516
    4. 'hesis' → logprob: -8.377262115478516
    5. 'hs' → logprob: -10.877262115478516
    6. '```' → logprob: -12.252262115478516
    7. 'es' → logprob: -12.877262115478516
    8. 'his' → logprob: -13.502262115478516
    9. 'hez' → logprob: -13.752262115478516
    10. '()' → logprob: -14.002262115478516

Token 927: 'izing' (ID: 6396)
  Prédit: 'ization'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ization' → logprob: -0.5479282736778259
    2. 'es' → logprob: -1.9229283332824707
    3. 'izing' → logprob: -2.0479283332824707
    4. 'ing' → logprob: -2.2979283332824707
    5. 'is' → logprob: -3.6729283332824707
    6. '```' → logprob: -5.672928333282471
    7. '   ' → logprob: -6.047928333282471
    8. '
' → logprob: -6.172928333282471
    9. 'e' → logprob: -6.297928333282471
    10. '()' → logprob: -6.797928333282471

Token 928: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024718815460801125
    2. '   ' → logprob: -4.524718761444092
    3. 'tokens' → logprob: -5.774718761444092
    4. '        
' → logprob: -6.024718761444092
    5. ',' → logprob: -6.524718761444092
    6. 'def' → logprob: -6.649718761444092
    7. '
' → logprob: -7.149718761444092
    8. ' tokens' → logprob: -7.399718761444092
    9. '    
' → logprob: -7.399718761444092
    10. ':' → logprob: -7.524718761444092

Token 929: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00034714414505288005
    2. 'tokens' → logprob: -8.500347137451172
    3. ' tokens' → logprob: -9.625347137451172
    4. 'expr' → logprob: -11.250347137451172
    5. '   ' → logprob: -11.375347137451172
    6. '        
' → logprob: -11.375347137451172
    7. 's' → logprob: -11.375347137451172
    8. ' s' → logprob: -12.000347137451172
    9. '```' → logprob: -12.000347137451172
    10. '           ' → logprob: -12.375347137451172

Token 930: ' tokens' (ID: 20290)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tokens' (adapté à ' tokens') → logprob: -0.9009427428245544
    2. '       ' → logprob: -1.0259428024291992
    3. 'expr' → logprob: -1.5259428024291992
    4. ' tokens' → logprob: -4.525942802429199
    5. '#' → logprob: -6.275942802429199
    6. 'rest' → logprob: -6.650942802429199
    7. ' expr' → logprob: -7.025942802429199
    8. 'token' → logprob: -7.275942802429199
    9. 'return' → logprob: -7.900942802429199
    10. 's' → logprob: -7.900942802429199

Token 931: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00464657275006175
    2. '=' → logprob: -5.5046467781066895
    3. '=[]' → logprob: -8.004646301269531
    4. ':' → logprob: -9.004646301269531
    5. ',' → logprob: -9.629646301269531
    6. '=[]
' → logprob: -11.629646301269531
    7. '[]' → logprob: -11.629646301269531
    8. '<|end|>' → logprob: -12.129646301269531
    9. '   ' → logprob: -12.629646301269531
    10. '<|end|>' → logprob: -12.754646301269531

Token 932: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.7324901223182678
    2. '[]
' → logprob: -1.232490062713623
    3. '[]' → logprob: -1.482490062713623
    4. '[]

' → logprob: -7.482490062713623
    5. '[self' → logprob: -9.857490539550781
    6. ' []' → logprob: -11.357490539550781
    7. ' []
' → logprob: -12.232490539550781
    8. 'list' → logprob: -12.357490539550781
    9. ' self' → logprob: -12.482490539550781
    10. '[],' → logprob: -12.982490539550781

Token 933: '.token' (ID: 26675)
  Prédit: '.token'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.token' → logprob: -0.13173902034759521
    2. '._' → logprob: -2.5067391395568848
    3. 'token' → logprob: -3.7567391395568848
    4. '_token' → logprob: -4.131739139556885
    5. '_tokens' → logprob: -7.006739139556885
    6. '.tokens' → logprob: -7.256739139556885
    7. '.parse' → logprob: -8.131738662719727
    8. '.lex' → logprob: -8.881738662719727
    9. '.' → logprob: -9.006738662719727
    10. ' tokenize' → logprob: -10.131738662719727

Token 934: 'ize' (ID: 750)
  Prédit: 'ize'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ize' → logprob: -0.02656535618007183
    2. 's' → logprob: -3.6515653133392334
    3. 'izer' → logprob: -8.901565551757812
    4. 'ized' → logprob: -9.401565551757812
    5. '_list' → logprob: -10.276565551757812
    6. 'list' → logprob: -12.276565551757812
    7. 'IZE' → logprob: -13.401565551757812
    8. '```' → logprob: -13.526565551757812
    9. '_pattern' → logprob: -14.151565551757812
    10. 'List' → logprob: -15.276565551757812

Token 935: '_expression' (ID: 69265)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0007247024914249778
    2. '()
' → logprob: -7.250724792480469
    3. '()

' → logprob: -12.125724792480469
    4. '())' → logprob: -12.875724792480469
    5. ' ()' → logprob: -13.625724792480469
    6. '()]' → logprob: -14.125724792480469
    7. '()`' → logprob: -14.125724792480469
    8. '(self' → logprob: -14.625724792480469
    9. 'tokens' → logprob: -15.000724792480469
    10. '(' → logprob: -15.000724792480469

Token 936: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0001817297888919711
    2. '()
' → logprob: -8.625182151794434
    3. '()

' → logprob: -14.375182151794434
    4. ' ()' → logprob: -14.500182151794434
    5. '()`' → logprob: -15.250182151794434
    6. '(' → logprob: -15.750182151794434
    7. '())' → logprob: -15.875182151794434
    8. '()
' → logprob: -15.875182151794434
    9. '()]' → logprob: -16.125181198120117
    10. '()"' → logprob: -16.250181198120117

Token 937: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002622743137180805
    2. '        
' → logprob: -6.502622604370117
    3. '   ' → logprob: -8.252622604370117
    4. 'tokens' → logprob: -8.502622604370117
    5. '()' → logprob: -9.127622604370117
    6. 'expr' → logprob: -9.252622604370117
    7. '    
' → logprob: -9.252622604370117
    8. 'return' → logprob: -9.377622604370117
    9. '        ' → logprob: -9.877622604370117
    10. '           ' → logprob: -10.127622604370117

Token 938: ' expr' (ID: 30206)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7123332619667053
    2. '       ' → logprob: -1.0873332023620605
    3. 'expr' (adapté à ' expr') → logprob: -2.3373332023620605
    4. 'ops' → logprob: -3.7123332023620605
    5. 'nodes' → logprob: -4.0873332023620605
    6. ' return' → logprob: -4.4623332023620605
    7. 'def' → logprob: -5.3373332023620605
    8. '#' → logprob: -6.2123332023620605
    9. 'if' → logprob: -6.4623332023620605
    10. 'self' → logprob: -6.4623332023620605

Token 939: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2086188942193985
    2. ' =' → logprob: -1.7086188793182373
    3. '_tokens' → logprob: -5.833619117736816
    4. '_list' → logprob: -6.083619117736816
    5. '=' → logprob: -6.708619117736816
    6. '_nodes' → logprob: -8.833619117736816
    7. '_tree' → logprob: -8.833619117736816
    8. ',' → logprob: -9.583619117736816
    9. '_stack' → logprob: -9.708619117736816
    10. 'tokens' → logprob: -9.833619117736816

Token 940: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00013512482109945267
    2. ' self' → logprob: -9.00013542175293
    3. 'Expression' → logprob: -11.87513542175293
    4. 'parse' → logprob: -13.00013542175293
    5. 'None' → logprob: -13.87513542175293
    6. 'tokens' → logprob: -14.62513542175293
    7. '(self' → logprob: -15.37513542175293
    8. 'build' → logprob: -15.50013542175293
    9. '[self' → logprob: -16.00013542175293
    10. 'Parser' → logprob: -16.25013542175293

Token 941: '.build' (ID: 20924)
  Prédit: '.build'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.build' → logprob: -0.5911900997161865
    2. '.parse' → logprob: -0.8411900997161865
    3. '._' → logprob: -4.341190338134766
    4. '.construct' → logprob: -7.341190338134766
    5. '.tokens' → logprob: -7.341190338134766
    6. '.re' → logprob: -7.591190338134766
    7. '.from' → logprob: -9.466190338134766
    8. '.combine' → logprob: -9.466190338134766
    9. '.make' → logprob: -10.466190338134766
    10. '.convert' → logprob: -10.841190338134766

Token 942: '_expression' (ID: 69265)
  Prédit: '_expression'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_expression' → logprob: -0.08614269644021988
    2. '_expr' → logprob: -2.8361427783966064
    3. '_ast' → logprob: -4.711142539978027
    4. '_tree' → logprob: -5.086142539978027
    5. '(tokens' → logprob: -6.086142539978027
    6. '_all' → logprob: -6.086142539978027
    7. 'Expression' → logprob: -7.086142539978027
    8. '_flat' → logprob: -7.211142539978027
    9. '_(' → logprob: -8.086142539978027
    10. 'expression' → logprob: -8.086142539978027

Token 943: '_all' (ID: 13305)
  Prédit: '(tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(tokens' → logprob: -0.08008966594934464
    2. '_from' → logprob: -2.580089569091797
    3. '_tree' → logprob: -8.080089569091797
    4. '(' → logprob: -8.080089569091797
    5. 's' → logprob: -8.205089569091797
    6. 'from' → logprob: -8.955089569091797
    7. '(tree' → logprob: -10.080089569091797
    8. '_recursive' → logprob: -10.205089569091797
    9. 'tokens' → logprob: -10.705089569091797
    10. '_tokens' → logprob: -10.830089569091797

Token 944: '_' (ID: 62)
  Prédit: '(tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tokens' → logprob: -0.25136518478393555
    2. 's' → logprob: -1.7513651847839355
    3. '_pos' → logprob: -3.7513651847839355
    4. '_' → logprob: -4.5013651847839355
    5. '_orders' → logprob: -5.2513651847839355
    6. '_possible' → logprob: -6.3763651847839355
    7. '_tokens' → logprob: -6.7513651847839355
    8. '_vari' → logprob: -6.8763651847839355
    9. 'ways' → logprob: -7.2513651847839355
    10. '_s' → logprob: -7.2513651847839355

Token 945: 'ways' (ID: 2771)
  Prédit: 'orders'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orders' → logprob: -0.10099391639232635
    2. 'ways' → logprob: -2.6009938716888428
    3. 'tokens' → logprob: -4.850994110107422
    4. '(tokens' → logprob: -5.600994110107422
    5. '_orders' → logprob: -6.100994110107422
    6. 'spl' → logprob: -6.725994110107422
    7. 'trees' → logprob: -6.975994110107422
    8. '_par' → logprob: -7.350994110107422
    9. 'pairs' → logprob: -7.475994110107422
    10. 'nodes' → logprob: -7.475994110107422

Token 946: '(tokens' (ID: 74272)
  Prédit: '(tokens'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tokens' → logprob: -0.0014789171982556581
    2. '(' → logprob: -6.626479148864746
    3. '(t' → logprob: -9.501479148864746
    4. 'tokens' → logprob: -9.626479148864746
    5. '(token' → logprob: -12.251479148864746
    6. '_from' → logprob: -13.376479148864746
    7. '(len' → logprob: -13.876479148864746
    8. 'from' → logprob: -14.126479148864746
    9. '(tasks' → logprob: -14.251479148864746
    10. '_(' → logprob: -14.501479148864746

Token 947: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03723130002617836
    2. ',' → logprob: -3.412231206893921
    3. ')
' → logprob: -6.1622314453125
    4. '[' → logprob: -7.7872314453125
    5. '(tokens' → logprob: -7.7872314453125
    6. '   ' → logprob: -8.6622314453125
    7. '       ' → logprob: -8.9122314453125
    8. ' )' → logprob: -8.9122314453125
    9. '())' → logprob: -9.5372314453125
    10. '(' → logprob: -11.0372314453125

Token 948: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0033589128870517015
    2. 'return' → logprob: -6.753358840942383
    3. '   ' → logprob: -7.503358840942383
    4. '[' → logprob: -7.628358840942383
    5. '
' → logprob: -8.003358840942383
    6. '<|end|>' → logprob: -8.503358840942383
    7. ' return' → logprob: -9.378358840942383
    8. '        
' → logprob: -9.503358840942383
    9. '()' → logprob: -10.253358840942383
    10. '           ' → logprob: -10.253358840942383

Token 949: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05837778002023697
    2. 'return' (adapté à ' return') → logprob: -2.933377742767334
    3. '
' → logprob: -6.058377742767334
    4. ' return' → logprob: -7.683377742767334
    5. '	return' → logprob: -8.558378219604492
    6. '	' → logprob: -8.808378219604492
    7. '   ' → logprob: -8.933378219604492
    8. '        
' → logprob: -9.683378219604492
    9. '[' → logprob: -9.933378219604492
    10. ' ' → logprob: -11.433378219604492

Token 950: ' expr' (ID: 30206)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.0001093841710826382
    2. ' expr' → logprob: -9.125109672546387
    3. '(expr' → logprob: -15.250109672546387
    4. 'express' → logprob: -16.12510871887207
    5. 'expression' → logprob: -18.12510871887207
    6. 'Expression' → logprob: -18.75010871887207
    7. 'Expr' → logprob: -18.87510871887207
    8. '   ' → logprob: -19.12510871887207
    9. 'exp' → logprob: -19.12510871887207
    10. 'self' → logprob: -19.62510871887207

Token 951: '
    
' (ID: 15698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38118529319763184
    2. '    
' → logprob: -1.8811852931976318
    3. '
' → logprob: -2.131185293197632
    4. ':' → logprob: -4.881185531616211
    5. '(' → logprob: -5.006185531616211
    6. '  
' → logprob: -5.131185531616211
    7. '\n' → logprob: -5.631185531616211
    8. ' ' → logprob: -6.131185531616211
    9. '   
' → logprob: -6.256185531616211
    10. '<|end|>' → logprob: -6.256185531616211

Token 952: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06286174058914185
    2. 'def' → logprob: -3.687861680984497
    3. 'tokens' → logprob: -4.187861919403076
    4. '[
' → logprob: -5.312861919403076
    5. '[' → logprob: -5.437861919403076
    6. '    
' → logprob: -6.312861919403076
    7. ')' → logprob: -6.437861919403076
    8. '       ' → logprob: -6.437861919403076
    9. ' tokens' → logprob: -6.562861919403076
    10. ' def' → logprob: -6.687861919403076

Token 953: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.009267466142773628
    2. ' def' → logprob: -4.759267330169678
    3. '   ' → logprob: -7.384267330169678
    4. '
' → logprob: -10.884267807006836
    5. '    
' → logprob: -12.384267807006836
    6. ' 
' → logprob: -12.634267807006836
    7. '    ' → logprob: -13.509267807006836
    8. '#' → logprob: -13.759267807006836
    9. ' ' → logprob: -14.384267807006836
    10. '  
' → logprob: -14.509267807006836

Token 954: ' tokenize' (ID: 192720)
  Prédit: 'token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'token' → logprob: -0.013002688996493816
    2. ' tokenize' → logprob: -4.638002872467041
    3. '_token' → logprob: -5.888002872467041
    4. ' token' → logprob: -8.888002395629883
    5. 'def' → logprob: -9.138002395629883
    6. 'peek' → logprob: -9.263002395629883
    7. 'tokens' → logprob: -10.513002395629883
    8. '(token' → logprob: -10.888002395629883
    9. '_tokens' → logprob: -10.888002395629883
    10. 'parse' → logprob: -11.513002395629883

Token 955: '_expression' (ID: 69265)
  Prédit: '_expression'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_expression' → logprob: -0.0018440400017425418
    2. 'expression' → logprob: -6.5018439292907715
    3. '(self' → logprob: -8.37684440612793
    4. '(' → logprob: -9.87684440612793
    5. '(expression' → logprob: -10.75184440612793
    6. '_' → logprob: -11.62684440612793
    7. '_(' → logprob: -12.12684440612793
    8. 'self' → logprob: -12.12684440612793
    9. 'Expression' → logprob: -12.37684440612793
    10. '```' → logprob: -12.62684440612793

Token 956: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -6.051066520740278e-05
    2. '(' → logprob: -10.000060081481934
    3. ' (' → logprob: -12.000060081481934
    4. '(s' → logprob: -12.125060081481934
    5. '()' → logprob: -12.750060081481934
    6. '(
' → logprob: -15.375060081481934
    7. 'self' → logprob: -15.875060081481934
    8. '   ' → logprob: -17.00006103515625
    9. '(se' → logprob: -17.62506103515625
    10. 's' → logprob: -17.62506103515625

Token 957: ')' (ID: 8)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.004142030607908964
    2. '(' → logprob: -5.754141807556152
    3. ' (' → logprob: -7.004141807556152
    4. ')' → logprob: -10.129141807556152
    5. '()' → logprob: -12.004141807556152
    6. '(s' → logprob: -12.379141807556152
    7. '=' → logprob: -13.254141807556152
    8. '(
' → logprob: -13.754141807556152
    9. '   ' → logprob: -14.504141807556152
    10. '('' → logprob: -14.879141807556152

Token 958: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.534558552724775e-05
    2. '(' → logprob: -10.625025749206543
    3. 'self' → logprob: -14.750025749206543
    4. '   ' → logprob: -15.250025749206543
    5. ' (' → logprob: -15.875025749206543
    6. '       ' → logprob: -16.375024795532227
    7. '(
' → logprob: -16.500024795532227
    8. '(s' → logprob: -17.750024795532227
    9. 'def' → logprob: -18.625024795532227
    10. '():
' → logprob: -19.000024795532227

Token 959: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.0008873990154825151
    2. '[List' → logprob: -7.750887393951416
    3. 'list' → logprob: -8.500887870788574
    4. '[]' → logprob: -8.750887870788574
    5. ' List' → logprob: -10.375887870788574
    6. '[]
' → logprob: -10.500887870788574
    7. 'def' → logprob: -10.750887870788574
    8. '[str' → logprob: -12.500887870788574
    9. 'str' → logprob: -12.625887870788574
    10. '[' → logprob: -13.000887870788574

Token 960: '[' (ID: 58)
  Prédit: '[str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -0.0009137284359894693
    2. '[' → logprob: -7.000913619995117
    3. 'str' → logprob: -13.250913619995117
    4. '[int' → logprob: -14.875913619995117
    5. '[
' → logprob: -16.750913619995117
    6. '[token' → logprob: -17.625913619995117
    7. '=str' → logprob: -18.125913619995117
    8. ':' → logprob: -18.500913619995117
    9. '```' → logprob: -18.750913619995117
    10. 'Union' → logprob: -18.750913619995117

Token 961: 'Union' (ID: 39222)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.6941801905632019
    2. 'Union' → logprob: -0.6941801905632019
    3. '[str' → logprob: -6.944180011749268
    4. 'Tuple' → logprob: -9.819180488586426
    5. ' Union' → logprob: -12.319180488586426
    6. 'union' → logprob: -12.694180488586426
    7. ' str' → logprob: -12.694180488586426
    8. '(str' → logprob: -14.069180488586426
    9. 'Token' → logprob: -14.069180488586426
    10. 'Str' → logprob: -14.194180488586426

Token 962: '[int' (ID: 40124)
  Prédit: '[str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -0.02976194955408573
    2. '[int' → logprob: -3.529762029647827
    3. '[' → logprob: -12.029762268066406
    4. 'str' → logprob: -12.279762268066406
    5. 'int' → logprob: -14.029762268066406
    6. '['' → logprob: -19.404762268066406
    7. ' str' → logprob: -19.404762268066406
    8. '(str' → logprob: -19.529762268066406
    9. 'Number' → logprob: -19.654762268066406
    10. 'Str' → logprob: -20.279762268066406

Token 963: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023305343464016914
    2. ',str' → logprob: -3.7733054161071777
    3. '[str' → logprob: -10.02330493927002
    4. 'str' → logprob: -11.64830493927002
    5. ' ,' → logprob: -12.02330493927002
    6. ',int' → logprob: -15.14830493927002
    7. ',
' → logprob: -16.148305892944336
    8. ',bool' → logprob: -16.648305892944336
    9. '(str' → logprob: -16.898305892944336
    10. ',char' → logprob: -17.023305892944336

Token 964: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -1.9743012671824545e-05
    2. ' str' → logprob: -10.875020027160645
    3. '[str' → logprob: -14.250020027160645
    4. '   ' → logprob: -16.250019073486328
    5. '	str' → logprob: -17.125019073486328
    6. ' ' → logprob: -18.375019073486328
    7. '(str' → logprob: -18.875019073486328
    8. 'string' → logprob: -19.000019073486328
    9. '```' → logprob: -19.000019073486328
    10. 'Str' → logprob: -19.250019073486328

Token 965: ']]:
' (ID: 183340)
  Prédit: ']]:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]:
' → logprob: -0.014257056638598442
    2. ']]' → logprob: -4.514256954193115
    3. ',' → logprob: -6.014256954193115
    4. ']:
' → logprob: -7.514256954193115
    5. ']:' → logprob: -9.389257431030273
    6. ']' → logprob: -10.014257431030273
    7. ']:
' → logprob: -10.514257431030273
    8. ' ]' → logprob: -10.514257431030273
    9. ']]
' → logprob: -12.014257431030273
    10. '']' → logprob: -12.389257431030273

Token 966: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008862029761075974
    2. 'tokens' → logprob: -4.758862018585205
    3. ' tokens' → logprob: -8.508862495422363
    4. 'i' → logprob: -11.258862495422363
    5. 's' → logprob: -11.508862495422363
    6. '```' → logprob: -11.633862495422363
    7. 'code' → logprob: -12.508862495422363
    8. '   ' → logprob: -12.758862495422363
    9. 'expr' → logprob: -13.633862495422363
    10. '_tokens' → logprob: -13.758862495422363

Token 967: ' #' (ID: 1069)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.0033952754456549883
    2. '       ' → logprob: -5.753395080566406
    3. ' tokens' → logprob: -8.628395080566406
    4. 'expr' → logprob: -10.753395080566406
    5. 'result' → logprob: -11.503395080566406
    6. 'token' → logprob: -12.503395080566406
    7. 'res' → logprob: -13.128395080566406
    8. 'code' → logprob: -15.628395080566406
    9. '   ' → logprob: -15.753395080566406
    10. 's' → logprob: -15.878395080566406

Token 968: ' Token' (ID: 17951)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.013109642080962658
    2. 'expr' → logprob: -4.5131096839904785
    3. 'pattern' → logprob: -6.5131096839904785
    4. 'token' → logprob: -8.38810920715332
    5. ' tokens' → logprob: -9.51310920715332
    6. 'result' → logprob: -9.88810920715332
    7. 'res' → logprob: -10.01310920715332
    8. 's' → logprob: -10.01310920715332
    9. 'code' → logprob: -10.01310920715332
    10. 'num' → logprob: -10.38810920715332

Token 969: 'ize' (ID: 750)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0002222516923211515
    2. 'ize' → logprob: -8.625222206115723
    3. 'pattern' → logprob: -10.500222206115723
    4. '=' → logprob: -12.750222206115723
    5. '_list' → logprob: -12.750222206115723
    6. '   ' → logprob: -13.000222206115723
    7. '_pattern' → logprob: -13.375222206115723
    8. 'list' → logprob: -13.500222206115723
    9. '       ' → logprob: -13.750222206115723
    10. ' =' → logprob: -14.000222206115723

Token 970: ' numbers' (ID: 8663)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.07713838666677475
    2. 'expr' → logprob: -3.0771384239196777
    3. '       ' → logprob: -4.077138423919678
    4. ' tokens' → logprob: -4.577138423919678
    5. 's' → logprob: -7.702138423919678
    6. 'token' → logprob: -8.95213794708252
    7. 'code' → logprob: -9.20213794708252
    8. ' expr' → logprob: -9.70213794708252
    9. 'res' → logprob: -9.95213794708252
    10. 'result' → logprob: -10.32713794708252

Token 971: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.581520438194275
    2. 'tokens' → logprob: -1.581520438194275
    3. '=' → logprob: -1.831520438194275
    4. ' =' → logprob: -2.4565205574035645
    5. 'and' → logprob: -2.4565205574035645
    6. ',' → logprob: -2.5815205574035645
    7. '(self' → logprob: -3.5815205574035645
    8. 'expr' → logprob: -3.7065205574035645
    9. 'code' → logprob: -3.8315205574035645
    10. '(' → logprob: -4.2065205574035645

Token 972: ' operators' (ID: 29893)
  Prédit: 'operators'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'operators' → logprob: -0.19903810322284698
    2. 'ops' → logprob: -2.824038028717041
    3. ' operators' → logprob: -2.824038028717041
    4. '[' → logprob: -4.074038028717041
    5. ''' → logprob: -4.949038028717041
    6. 'op' → logprob: -5.324038028717041
    7. '[],' → logprob: -5.824038028717041
    8. ' ops' → logprob: -5.824038028717041
    9. ''+' → logprob: -5.824038028717041
    10. '   ' → logprob: -5.824038028717041

Token 973: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07141683250665665
    2. 'and' → logprob: -3.4464168548583984
    3. ' and' → logprob: -3.6964168548583984
    4. ' ,' → logprob: -5.321416854858398
    5. '       ' → logprob: -5.946416854858398
    6. '=' → logprob: -6.446416854858398
    7. '   ' → logprob: -7.071416854858398
    8. 'import' → logprob: -7.071416854858398
    9. '(' → logprob: -8.321416854858398
    10. ' =' → logprob: -8.446416854858398

Token 974: ' parentheses' (ID: 180602)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.39737197756767273
    2. ''' → logprob: -1.5223720073699951
    3. '['' → logprob: -2.647372007369995
    4. ' parentheses' → logprob: -4.272371768951416
    5. '[' → logprob: -5.022371768951416
    6. 'par' → logprob: -5.397371768951416
    7. 'paren' → logprob: -5.397371768951416
    8. ' '('' → logprob: -5.522371768951416
    9. '('' → logprob: -5.772371768951416
    10. '(' → logprob: -8.147372245788574

Token 975: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2484176605939865
    2. 'tokens' → logprob: -2.248417615890503
    3. '(self' → logprob: -3.498417615890503
    4. '   ' → logprob: -3.998417615890503
    5. '=' → logprob: -4.123417854309082
    6. 'def' → logprob: -4.748417854309082
    7. 's' → logprob: -4.873417854309082
    8. ' =' → logprob: -4.873417854309082
    9. ':' → logprob: -5.623417854309082
    10. 'expr' → logprob: -5.748417854309082

Token 976: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32623040676116943
    2. 'tokens' → logprob: -1.3262304067611694
    3. ' =' → logprob: -5.576230525970459
    4. ' tokens' → logprob: -6.201230525970459
    5. '   ' → logprob: -6.201230525970459
    6. '=' → logprob: -6.326230525970459
    7. ':' → logprob: -7.326230525970459
    8. 'code' → logprob: -7.951230525970459
    9. 'result' → logprob: -7.951230525970459
    10. 's' → logprob: -8.0762300491333

Token 977: ' tokens' (ID: 20290)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tokens' (adapté à ' tokens') → logprob: -0.0016053172294050455
    2. '       ' → logprob: -6.50160551071167
    3. ' tokens' → logprob: -9.251605033874512
    4. 'token' → logprob: -13.626605033874512
    5. '   ' → logprob: -13.626605033874512
    6. 'expr' → logprob: -13.751605033874512
    7. 'pattern' → logprob: -13.876605033874512
    8. 'result' → logprob: -14.001605033874512
    9. 'i' → logprob: -14.126605033874512
    10. 'res' → logprob: -15.626605033874512

Token 978: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11294294893741608
    2. '=' → logprob: -2.237942934036255
    3. '=[]' → logprob: -9.362942695617676
    4. '=[]
' → logprob: -10.862942695617676
    5. ':' → logprob: -11.737942695617676
    6. '   ' → logprob: -12.737942695617676
    7. 'tokens' → logprob: -13.362942695617676
    8. ',' → logprob: -13.862942695617676
    9. '       ' → logprob: -13.987942695617676
    10. 's' → logprob: -14.987942695617676

Token 979: ' List' (ID: 2655)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.01814187318086624
    2. ' []' → logprob: -4.768141746520996
    3. '=[]' → logprob: -5.893141746520996
    4. ' =' → logprob: -6.143141746520996
    5. '=' → logprob: -6.268141746520996
    6. '[]
' → logprob: -6.393141746520996
    7. 'tokens' → logprob: -7.268141746520996
    8. '[]=' → logprob: -9.018141746520996
    9. '=[]
' → logprob: -9.143141746520996
    10. ' []
' → logprob: -10.268141746520996

Token 980: '[' (ID: 58)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6109370589256287
    2. '=' → logprob: -0.9859370589256287
    3. '[' → logprob: -2.9859371185302734
    4. '[int' → logprob: -4.110937118530273
    5. '=[]' → logprob: -4.735937118530273
    6. '=[]
' → logprob: -5.110937118530273
    7. '[str' → logprob: -6.235937118530273
    8. '   ' → logprob: -9.360937118530273
    9. 'Union' → logprob: -9.735937118530273
    10. '[]' → logprob: -9.860937118530273

Token 981: 'Union' (ID: 39222)
  Prédit: 'Union'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Union' → logprob: -0.0005048964521847665
    2. '[' → logprob: -7.625504970550537
    3. ']' → logprob: -12.000504493713379
    4. '[int' → logprob: -12.250504493713379
    5. ' Union' → logprob: -12.750504493713379
    6. 'union' → logprob: -13.625504493713379
    7. '[str' → logprob: -13.875504493713379
    8. '_union' → logprob: -15.500504493713379
    9. ''Union' → logprob: -15.625504493713379
    10. 'int' → logprob: -16.000505447387695

Token 982: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.001960512949153781
    2. '[str' → logprob: -6.251960277557373
    3. '[' → logprob: -11.001960754394531
    4. 'int' → logprob: -11.126960754394531
    5. '=int' → logprob: -15.751960754394531
    6. 'str' → logprob: -16.00196075439453
    7. ']' → logprob: -16.62696075439453
    8. '(int' → logprob: -16.87696075439453
    9. '<int' → logprob: -17.62696075439453
    10. '[
' → logprob: -18.00196075439453

Token 983: ',str' (ID: 95110)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004017972387373447
    2. ',str' → logprob: -6.0040178298950195
    3. ',int' → logprob: -6.6290178298950195
    4. '[str' → logprob: -9.00401782989502
    5. '[int' → logprob: -9.37901782989502
    6. ' ,' → logprob: -12.25401782989502
    7. 'int' → logprob: -12.37901782989502
    8. 'str' → logprob: -13.37901782989502
    9. ',
' → logprob: -14.12901782989502
    10. ',float' → logprob: -15.37901782989502

Token 984: ']]' (ID: 8928)
  Prédit: ']]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.0004883344518020749
    2. ']]=' → logprob: -8.00048828125
    3. ']' → logprob: -8.87548828125
    4. ']=' → logprob: -11.75048828125
    5. '']]' → logprob: -13.25048828125
    6. ']]
' → logprob: -13.62548828125
    7. ' ]]' → logprob: -14.62548828125
    8. ',' → logprob: -14.75048828125
    9. ')]' → logprob: -15.25048828125
    10. '"]]' → logprob: -15.37548828125

Token 985: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38692185282707214
    2. '=' → logprob: -1.1369218826293945
    3. '=[]' → logprob: -10.511921882629395
    4. 'tokens' → logprob: -12.011921882629395
    5. '=[]
' → logprob: -12.136921882629395
    6. '       ' → logprob: -12.636921882629395
    7. ' ' → logprob: -12.886921882629395
    8. ',' → logprob: -13.261921882629395
    9. '        ' → logprob: -13.386921882629395
    10. '   ' → logprob: -14.011921882629395

Token 986: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.3132641315460205
    2. '[]' → logprob: -1.3132641315460205
    3. '[]

' → logprob: -13.438263893127441
    4. ' []
' → logprob: -14.313263893127441
    5. ' []' → logprob: -16.438264846801758
    6. '[])
' → logprob: -16.688264846801758
    7. '[' → logprob: -17.188264846801758
    8. '[]"' → logprob: -17.188264846801758
    9. '[])' → logprob: -17.563264846801758
    10. '[
' → logprob: -17.813264846801758

Token 987: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.061832308769226
    2. 'i' → logprob: -1.311832308769226
    3. 'while' → logprob: -1.311832308769226
    4. 'n' → logprob: -2.5618324279785156
    5. 'num' → logprob: -3.4368324279785156
    6. 'pos' → logprob: -5.436832427978516
    7. 'number' → logprob: -7.561832427978516
    8. 'idx' → logprob: -7.811832427978516
    9. ' while' → logprob: -8.436832427978516
    10. ' i' → logprob: -8.561832427978516

Token 988: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.006636502221226692
    2. 'i' → logprob: -5.256636619567871
    3. 'n' → logprob: -6.756636619567871
    4. 'num' → logprob: -8.756636619567871
    5. ' while' → logprob: -9.756636619567871
    6. 'length' → logprob: -11.756636619567871
    7. 'pos' → logprob: -11.756636619567871
    8. 'number' → logprob: -12.881636619567871
    9. '   ' → logprob: -13.256636619567871
    10. 'wh' → logprob: -13.631636619567871

Token 989: ' True' (ID: 6432)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.007652418687939644
    2. ' self' → logprob: -4.882652282714844
    3. 'True' → logprob: -10.257652282714844
    4. ' True' → logprob: -12.257652282714844
    5. '(self' → logprob: -13.007652282714844
    6. '	self' → logprob: -13.257652282714844
    7. '   ' → logprob: -13.382652282714844
    8. ' ' → logprob: -14.507652282714844
    9. '  ' → logprob: -16.382652282714844
    10. ' ' → logprob: -16.757652282714844

Token 990: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7073368430137634
    2. ' and' → logprob: -1.3323369026184082
    3. ':
' → logprob: -1.7073369026184082
    4. '           ' → logprob: -3.582336902618408
    5. 'and' → logprob: -3.832336902618408
    6. '   ' → logprob: -5.332336902618408
    7. '{' → logprob: -5.957336902618408
    8. '       ' → logprob: -6.457336902618408
    9. ' if' → logprob: -7.707336902618408
    10. ',' → logprob: -8.08233642578125

Token 991: '           ' (ID: 352)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.7130725383758545
    2. ' c' → logprob: -0.9630725383758545
    3. 'ch' → logprob: -2.4630725383758545
    4. '           ' → logprob: -3.8380725383758545
    5. ' ch' → logprob: -3.9630725383758545
    6. '   ' → logprob: -6.338072776794434
    7. '       ' → logprob: -7.963072776794434
    8. ' if' → logprob: -8.713072776794434
    9. '	c' → logprob: -9.588072776794434
    10. '	ch' → logprob: -10.463072776794434

Token 992: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.06216195225715637
    2. 'ch' → logprob: -2.812161922454834
    3. 'if' → logprob: -8.812162399291992
    4. ' c' → logprob: -10.312162399291992
    5. ' ch' → logprob: -11.812162399291992
    6. 'while' → logprob: -13.687162399291992
    7. '   ' → logprob: -13.812162399291992
    8. ' if' → logprob: -14.062162399291992
    9. 'char' → logprob: -14.187162399291992
    10. 'cur' → logprob: -15.187162399291992

Token 993: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6932709813117981
    2. ' =' → logprob: -0.6932709813117981
    3. ' ' → logprob: -10.068270683288574
    4. 's' → logprob: -10.193270683288574
    5. 'if' → logprob: -11.818270683288574
    6. 'import' → logprob: -11.943270683288574
    7. ':=' → logprob: -12.068270683288574
    8. '  ' → logprob: -12.318270683288574
    9. ':' → logprob: -12.693270683288574
    10. '=self' → logprob: -12.818270683288574

Token 994: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0009047918138094246
    2. ' self' → logprob: -7.125904560089111
    3. 'None' → logprob: -9.37590503692627
    4. '(self' → logprob: -11.37590503692627
    5. ' None' → logprob: -12.62590503692627
    6. ' ' → logprob: -15.62590503692627
    7. '   ' → logprob: -15.62590503692627
    8. '(' → logprob: -15.75090503692627
    9. ' (' → logprob: -15.87590503692627
    10. '
' → logprob: -16.875904083251953

Token 995: '.peek' (ID: 73296)
  Prédit: '.peek'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.peek' → logprob: -0.04569121077656746
    2. 'peek' → logprob: -3.5456912517547607
    3. '.s' → logprob: -4.670691013336182
    4. '._' → logprob: -5.795691013336182
    5. '.next' → logprob: -6.920691013336182
    6. '.pos' → logprob: -7.420691013336182
    7. '.consume' → logprob: -7.545691013336182
    8. '.skip' → logprob: -7.920691013336182
    9. 's' → logprob: -8.04569149017334
    10. '.' → logprob: -8.17069149017334

Token 996: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3485582768917084
    2. '()
' → logprob: -1.2235583066940308
    3. '
' → logprob: -10.59855842590332
    4. '():
' → logprob: -10.97355842590332
    5. '<|end|>' → logprob: -10.97355842590332
    6. '();' → logprob: -11.34855842590332
    7. '()
' → logprob: -12.22355842590332
    8. '())' → logprob: -12.22355842590332
    9. ' ' → logprob: -12.59855842590332
    10. '<|end|>' → logprob: -12.72355842590332

Token 997: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003454753023106605
    2. '       ' → logprob: -8.375345230102539
    3. ' if' → logprob: -9.875345230102539
    4. 'if' → logprob: -10.125345230102539
    5. '<|end|>' → logprob: -11.375345230102539
    6. '               ' → logprob: -13.250345230102539
    7. '<|end|>' → logprob: -13.250345230102539
    8. '   ' → logprob: -13.500345230102539
    9. '	       ' → logprob: -13.750345230102539
    10. '```' → logprob: -14.125345230102539

Token 998: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0007813957636244595
    2. ' if' → logprob: -7.250781536102295
    3. '           ' → logprob: -9.625781059265137
    4. 'None' → logprob: -12.625781059265137
    5. 'If' → logprob: -13.500781059265137
    6. ' ' → logprob: -15.875781059265137
    7. '       ' → logprob: -15.875781059265137
    8. '   ' → logprob: -16.500782012939453
    9. '
' → logprob: -16.500782012939453
    10. '            
' → logprob: -16.625782012939453

Token 999: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.054883863776922226
    2. ' c' → logprob: -2.9298839569091797
    3. ' not' → logprob: -14.42988395690918
    4. ' ' → logprob: -14.80488395690918
    5. '	c' → logprob: -15.42988395690918
    6. 'not' → logprob: -15.92988395690918
    7. ' ' → logprob: -16.30488395690918
    8. '(c' → logprob: -16.42988395690918
    9. 'None' → logprob: -16.42988395690918
    10. '#' → logprob: -16.92988395690918

Token 1000: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.20255611836910248
    2. 'is' → logprob: -1.7025561332702637
    3. '==' → logprob: -7.452556133270264
    4. ' ==' → logprob: -7.827556133270264
    5. 'in' → logprob: -9.702555656433105
    6. ' in' → logprob: -9.952555656433105
    7. 'isdigit' → logprob: -11.577555656433105
    8. ' ' → logprob: -11.952555656433105
    9. ' i' → logprob: -12.202555656433105
    10. ' =' → logprob: -12.327555656433105

Token 1001: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.014169970527291298
    2. ' None' → logprob: -4.264170169830322
    3. 'not' → logprob: -12.514169692993164
    4. 'N' → logprob: -13.514169692993164
    5. ' not' → logprob: -14.889169692993164
    6. 'No' → logprob: -15.264169692993164
    7. 'none' → logprob: -15.514169692993164
    8. ' ' → logprob: -15.639169692993164
    9. '(None' → logprob: -16.014169692993164
    10. 'Not' → logprob: -16.139169692993164

Token 1002: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.04845449700951576
    2. ':
' → logprob: -3.298454523086548
    3. ':' → logprob: -5.048454284667969
    4. '               ' → logprob: -6.423454284667969
    5. 'or' → logprob: -6.548454284667969
    6. '           ' → logprob: -7.423454284667969
    7. '   ' → logprob: -8.798454284667969
    8. '	or' → logprob: -10.048454284667969
    9. 'break' → logprob: -10.798454284667969
    10. ' ' → logprob: -11.048454284667969

Token 1003: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.016995849087834358
    2. 'break' → logprob: -4.891995906829834
    3. ' break' → logprob: -5.266995906829834
    4. '           ' → logprob: -5.516995906829834
    5. '   ' → logprob: -9.141995429992676
    6. '	break' → logprob: -10.891995429992676
    7. ' if' → logprob: -11.516995429992676
    8. '                   ' → logprob: -11.766995429992676
    9. '       ' → logprob: -12.391995429992676
    10. '              ' → logprob: -12.766995429992676

Token 1004: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.30927765369415283
    2. '               ' → logprob: -1.8092776536941528
    3. '           ' → logprob: -2.6842775344848633
    4. ' break' → logprob: -3.4342775344848633
    5. '	break' → logprob: -6.684277534484863
    6. '                   ' → logprob: -8.059277534484863
    7. '   ' → logprob: -9.809277534484863
    8. '	           ' → logprob: -10.559277534484863
    9. '		' → logprob: -10.684277534484863
    10. '			' → logprob: -11.184277534484863

Token 1005: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0020050073508173227
    2. ' if' → logprob: -7.002005100250244
    3. '       ' → logprob: -7.877005100250244
    4. ',' → logprob: -9.002004623413086
    5. '          ' → logprob: -9.252004623413086
    6. '<|end|>' → logprob: -9.377004623413086
    7. '   ' → logprob: -9.627004623413086
    8. ' ' → logprob: -9.752004623413086
    9. '               ' → logprob: -10.377004623413086
    10. 'if' → logprob: -10.502004623413086

Token 1006: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002331289928406477
    2. ' if' → logprob: -6.252331256866455
    3. 'if' → logprob: -8.502331733703613
    4. '       ' → logprob: -9.127331733703613
    5. '          ' → logprob: -11.002331733703613
    6. '            
' → logprob: -11.127331733703613
    7. '	       ' → logprob: -11.252331733703613
    8. '   ' → logprob: -12.002331733703613
    9. '               ' → logprob: -12.127331733703613
    10. '		' → logprob: -12.377331733703613

Token 1007: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.12727506458759308
    2. ' if' → logprob: -2.127274990081787
    3. '           ' → logprob: -8.002275466918945
    4. '       ' → logprob: -12.002275466918945
    5. '   ' → logprob: -13.377275466918945
    6. 'elif' → logprob: -13.627275466918945
    7. '	if' → logprob: -14.002275466918945
    8. '    ' → logprob: -14.627275466918945
    9. '            
' → logprob: -14.752275466918945
    10. ' ' → logprob: -14.877275466918945

Token 1008: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.16026119887828827
    2. ' c' → logprob: -1.9102611541748047
    3. ' ' → logprob: -10.785261154174805
    4. '   ' → logprob: -11.410261154174805
    5. '  ' → logprob: -13.160261154174805
    6. '	c' → logprob: -13.660261154174805
    7. '(c' → logprob: -14.660261154174805
    8. ' (' → logprob: -14.785261154174805
    9. '    ' → logprob: -15.160261154174805
    10. '     ' → logprob: -15.410261154174805

Token 1009: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5152173638343811
    2. '.is' → logprob: -1.6402173042297363
    3. '().' → logprob: -2.2652173042297363
    4. ' in' → logprob: -2.7652173042297363
    5. 'isdigit' → logprob: -3.3902173042297363
    6. 'in' → logprob: -5.890217304229736
    7. ' .' → logprob: -7.015217304229736
    8. '()' → logprob: -7.515217304229736
    9. 'is' → logprob: -7.765217304229736
    10. 'iss' → logprob: -7.765217304229736

Token 1010: 'iss' (ID: 1009)
  Prédit: 'isdigit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isdigit' → logprob: -0.3133528530597687
    2. 'iss' → logprob: -1.3133528232574463
    3. ' is' → logprob: -9.938352584838867
    4. '.' → logprob: -11.438352584838867
    5. 'isal' → logprob: -11.563352584838867
    6. ' in' → logprob: -11.813352584838867
    7. ''' → logprob: -12.438352584838867
    8. 'is' → logprob: -13.188352584838867
    9. 'in' → logprob: -13.438352584838867
    10. 'strip' → logprob: -13.438352584838867

Token 1011: 'pace' (ID: 2612)
  Prédit: 'pace'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pace' → logprob: -1.3856492842023727e-06
    2. 'kip' → logprob: -15.000000953674316
    3. 'space' → logprob: -15.125000953674316
    4. 'ace' → logprob: -15.375000953674316
    5. 'PACE' → logprob: -15.750000953674316
    6. 'pac' → logprob: -15.875000953674316
    7. '```' → logprob: -16.375001907348633
    8. 'paces' → logprob: -17.375001907348633
    9. 'p' → logprob: -17.875001907348633
    10. 'paced' → logprob: -18.875001907348633

Token 1012: '():
' (ID: 8595)
  Prédit: '():
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.011108181439340115
    2. '():' → logprob: -4.5111083984375
    3. '()' → logprob: -9.8861083984375
    4. '():
' → logprob: -12.0111083984375
    5. '()):
' → logprob: -13.6361083984375
    6. ':
' → logprob: -13.6361083984375
    7. '()==' → logprob: -14.2611083984375
    8. ':' → logprob: -15.2611083984375
    9. '():

' → logprob: -16.1361083984375
    10. '()
' → logprob: -17.2611083984375

Token 1013: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006234972272068262
    2. '           ' → logprob: -5.381235122680664
    3. 'self' → logprob: -6.631235122680664
    4. '                   ' → logprob: -9.881235122680664
    5. '	           ' → logprob: -10.131235122680664
    6. ' self' → logprob: -10.631235122680664
    7. '	       ' → logprob: -10.756235122680664
    8. '                
' → logprob: -10.756235122680664
    9. '
' → logprob: -11.131235122680664
    10. ',' → logprob: -11.506235122680664

Token 1014: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.028752202168107033
    2. '               ' → logprob: -3.653752088546753
    3. '           ' → logprob: -6.653752326965332
    4. ' self' → logprob: -6.778752326965332
    5. '   ' → logprob: -11.778752326965332
    6. '	self' → logprob: -12.528752326965332
    7. '_' → logprob: -13.278752326965332
    8. '(self' → logprob: -13.403752326965332
    9. '                   ' → logprob: -13.653752326965332
    10. '
' → logprob: -14.278752326965332

Token 1015: '.consume' (ID: 140765)
  Prédit: '.consume'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.consume' → logprob: -0.06237040460109711
    2. '.pos' → logprob: -2.8123703002929688
    3. 'pos' → logprob: -8.687370300292969
    4. '.' → logprob: -9.312370300292969
    5. 'consume' → logprob: -9.437370300292969
    6. '.advance' → logprob: -10.562370300292969
    7. '.cons' → logprob: -12.062370300292969
    8. '.Pos' → logprob: -12.437370300292969
    9. '[pos' → logprob: -12.562370300292969
    10. '.skip' → logprob: -12.687370300292969

Token 1016: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0003618024929892272
    2. '()
' → logprob: -8.125361442565918
    3. '(' → logprob: -10.125361442565918
    4. '('' → logprob: -10.625361442565918
    5. '()

' → logprob: -14.875361442565918
    6. '("' → logprob: -15.125361442565918
    7. '()\' → logprob: -15.375361442565918
    8. ' ()' → logprob: -16.125362396240234
    9. '())' → logprob: -16.250362396240234
    10. '(True' → logprob: -16.500362396240234

Token 1017: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0014952188357710838
    2. '           ' → logprob: -6.626495361328125
    3. '<|end|>' → logprob: -10.001495361328125
    4. 'elif' → logprob: -10.126495361328125
    5. 'continue' → logprob: -10.626495361328125
    6. ')' → logprob: -11.501495361328125
    7. '                   ' → logprob: -11.876495361328125
    8. ' and' → logprob: -12.251495361328125
    9. ' or' → logprob: -12.251495361328125
    10. ';' → logprob: -12.376495361328125

Token 1018: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.005943255964666605
    2. ' continue' → logprob: -5.255943298339844
    3. '               ' → logprob: -7.255943298339844
    4. '           ' → logprob: -13.380943298339844
    5. 'continu' → logprob: -14.005943298339844
    6. 'contin' → logprob: -14.630943298339844
    7. '	continue' → logprob: -15.630943298339844
    8. '_continue' → logprob: -16.130943298339844
    9. '                   ' → logprob: -16.630943298339844
    10. 'self' → logprob: -17.380943298339844

Token 1019: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1165376678109169
    2. 'elif' → logprob: -2.241537570953369
    3. 'if' → logprob: -5.741537570953369
    4. ' if' → logprob: -8.491538047790527
    5. ' elif' → logprob: -8.491538047790527
    6. '       ' → logprob: -10.116538047790527
    7. '```' → logprob: -11.241538047790527
    8. 'else' → logprob: -11.616538047790527
    9. '   ' → logprob: -11.866538047790527
    10. ')' → logprob: -12.741538047790527

Token 1020: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10078690946102142
    2. 'elif' → logprob: -2.6007869243621826
    3. 'if' → logprob: -3.8507869243621826
    4. '       ' → logprob: -8.975787162780762
    5. '```' → logprob: -9.100787162780762
    6. ' if' → logprob: -9.100787162780762
    7. ' elif' → logprob: -10.225787162780762
    8. '   ' → logprob: -12.975787162780762
    9. 'If' → logprob: -13.100787162780762
    10. '          ' → logprob: -13.475787162780762

Token 1021: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.005279176402837038
    2. 'elif' → logprob: -5.255279064178467
    3. '           ' → logprob: -10.505279541015625
    4. ' if' → logprob: -11.005279541015625
    5. 'If' → logprob: -13.755279541015625
    6. '       ' → logprob: -15.755279541015625
    7. ' elif' → logprob: -15.880279541015625
    8. '```' → logprob: -18.255279541015625
    9. 'import' → logprob: -18.380279541015625
    10. 'token' → logprob: -18.505279541015625

Token 1022: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00012118533049942926
    2. ' c' → logprob: -9.375121116638184
    3. 'self' → logprob: -10.375121116638184
    4. '(c' → logprob: -12.375121116638184
    5. '(' → logprob: -15.000121116638184
    6. ' (' → logprob: -15.625121116638184
    7. 'isdigit' → logprob: -16.7501220703125
    8. '(self' → logprob: -16.8751220703125
    9. '   ' → logprob: -16.8751220703125
    10. ' self' → logprob: -17.0001220703125

Token 1023: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.022167187184095383
    2. 'isdigit' → logprob: -3.897167205810547
    3. ' in' → logprob: -7.272167205810547
    4. 'in' → logprob: -8.522167205810547
    5. '().' → logprob: -8.772167205810547
    6. 'is' → logprob: -8.897167205810547
    7. '.' → logprob: -9.022167205810547
    8. '>=' → logprob: -9.397167205810547
    9. '=' → logprob: -10.022167205810547
    10. '[' → logprob: -10.272167205810547

Token 1024: 'digit' (ID: 78327)
  Prédit: 'digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'digit' → logprob: -6.704273118884885e-07
    2. 'decimal' → logprob: -14.250000953674316
    3. '_digit' → logprob: -18.625
    4. 'numeric' → logprob: -19.875
    5. ' digit' → logprob: -20.25
    6. 'dig' → logprob: -20.75
    7. 'alpha' → logprob: -22.0
    8. 'Digit' → logprob: -22.125
    9. 'd' → logprob: -22.375
    10. '-digit' → logprob: -23.0

Token 1025: '():
' (ID: 8595)
  Prédit: '():
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.025139736011624336
    2. '():' → logprob: -3.775139808654785
    3. '()' → logprob: -6.275139808654785
    4. '()):
' → logprob: -12.650139808654785
    5. '():
' → logprob: -12.775139808654785
    6. ':
' → logprob: -13.525139808654785
    7. ':' → logprob: -14.275139808654785
    8. '()
' → logprob: -14.900139808654785
    9. '()==' → logprob: -15.025139808654785
    10. '):
' → logprob: -15.025139808654785

Token 1026: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7121666669845581
    2. 'num' → logprob: -1.212166666984558
    3. '           ' → logprob: -1.837166666984558
    4. 'token' → logprob: -3.4621667861938477
    5. 'number' → logprob: -5.087166786193848
    6. ')' → logprob: -5.962166786193848
    7. 'digits' → logprob: -6.212166786193848
    8. '       ' → logprob: -6.587166786193848
    9. 'nums' → logprob: -6.837166786193848
    10. 'start' → logprob: -7.212166786193848

Token 1027: ' #' (ID: 1069)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.005385064519941807
    2. 'start' → logprob: -5.505384922027588
    3. 'number' → logprob: -6.755384922027588
    4. 'digits' → logprob: -9.755385398864746
    5. ' num' → logprob: -10.005385398864746
    6. '           ' → logprob: -10.755385398864746
    7. 'val' → logprob: -12.130385398864746
    8. '               ' → logprob: -12.505385398864746
    9. 'n' → logprob: -13.380385398864746
    10. '#' (adapté à ' #') → logprob: -13.380385398864746

Token 1028: ' parse' (ID: 8420)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.009175095707178116
    2. 'start' → logprob: -4.7591753005981445
    3. 'number' → logprob: -7.5091753005981445
    4. 'digits' → logprob: -12.259175300598145
    5. ' num' → logprob: -12.759175300598145
    6. 'val' → logprob: -12.884175300598145
    7. 'token' → logprob: -14.509175300598145
    8. 'n' → logprob: -14.759175300598145
    9. ' start' → logprob: -14.884175300598145
    10. '           ' → logprob: -15.134175300598145

Token 1029: ' full' (ID: 3149)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.022337745875120163
    2. 'number' → logprob: -4.022337913513184
    3. 'start' → logprob: -5.522337913513184
    4. 'n' → logprob: -10.147337913513184
    5. 'value' → logprob: -10.397337913513184
    6. '```' → logprob: -10.397337913513184
    7. '
' → logprob: -10.897337913513184
    8. '           ' → logprob: -11.022337913513184
    9. ' num' → logprob: -11.647337913513184
    10. ' number' → logprob: -11.772337913513184

Token 1030: ' number' (ID: 2086)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.1522369682788849
    2. 'while' → logprob: -2.4022369384765625
    3. ' number' → logprob: -4.2772369384765625
    4. 'token' → logprob: -4.2772369384765625
    5. 'digit' → logprob: -4.5272369384765625
    6. ' while' → logprob: -5.0272369384765625
    7. 'num' → logprob: -5.5272369384765625
    8. 'digits' → logprob: -7.2772369384765625
    9. '_number' → logprob: -7.7772369384765625
    10. 'value' → logprob: -9.402236938476562

Token 1031: '
' (ID: 198)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.3227224349975586
    2. '               ' → logprob: -1.5727224349975586
    3. 'start' → logprob: -2.9477224349975586
    4. 'number' → logprob: -4.322722434997559
    5. '                   ' → logprob: -7.447722434997559
    6. 'n' → logprob: -7.572722434997559
    7. 'digits' → logprob: -7.572722434997559
    8. 'token' → logprob: -7.947722434997559
    9. '           ' → logprob: -9.322722434997559
    10. ' num' → logprob: -9.572722434997559

Token 1032: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3848707973957062
    2. 'num' → logprob: -1.2598707675933838
    3. 'number' → logprob: -4.259871006011963
    4. 'start' → logprob: -4.634871006011963
    5. '                   ' → logprob: -5.009871006011963
    6. 'token' → logprob: -5.884871006011963
    7. 'while' → logprob: -7.134871006011963
    8. 'digits' → logprob: -7.134871006011963
    9. '                       ' → logprob: -8.759870529174805
    10. '           ' → logprob: -8.759870529174805

Token 1033: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' (adapté à ' num') → logprob: -0.0008291634730994701
    2. 'start' → logprob: -7.500829219818115
    3. 'number' → logprob: -8.250828742980957
    4. 'n' → logprob: -11.625828742980957
    5. '           ' → logprob: -12.875828742980957
    6. ' num' → logprob: -13.125828742980957
    7. 'digits' → logprob: -14.125828742980957
    8. 'val' → logprob: -15.375828742980957
    9. 'nums' → logprob: -15.375828742980957
    10. '               ' → logprob: -15.500828742980957

Token 1034: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.08607444912195206
    2. ' =' → logprob: -2.5860743522644043
    3. 'str' → logprob: -5.961074352264404
    4. '_chars' → logprob: -5.961074352264404
    5. '=' → logprob: -6.461074352264404
    6. 's' → logprob: -8.461074829101562
    7. '_buffer' → logprob: -9.336074829101562
    8. '_buf' → logprob: -10.336074829101562
    9. '_s' → logprob: -10.336074829101562
    10. 'Str' → logprob: -10.836074829101562

Token 1035: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16602537035942078
    2. ' =' → logprob: -1.9160254001617432
    3. '+=' → logprob: -5.666025161743164
    4. '=''' → logprob: -7.416025161743164
    5. '=""' → logprob: -7.666025161743164
    6. '=[]' → logprob: -7.916025161743164
    7. ' +=' → logprob: -8.041025161743164
    8. '=self' → logprob: -8.916025161743164
    9. '=c' → logprob: -9.541025161743164
    10. '           ' → logprob: -9.541025161743164

Token 1036: ' ''
' (ID: 25366)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -0.6144536733627319
    2. 'self' → logprob: -1.239453673362732
    3. '""' → logprob: -2.2394537925720215
    4. '''
' → logprob: -3.1144537925720215
    5. 'c' → logprob: -4.4894537925720215
    6. ' self' → logprob: -5.4894537925720215
    7. '"' → logprob: -6.7394537925720215
    8. ''' → logprob: -6.7394537925720215
    9. ' ''' → logprob: -8.114453315734863
    10. ' c' → logprob: -8.114453315734863

Token 1037: '               ' (ID: 506)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.3624030351638794
    2. '               ' → logprob: -1.2374030351638794
    3. ' while' → logprob: -4.36240291595459
    4. '                   ' → logprob: -7.61240291595459
    5. '           ' → logprob: -7.98740291595459
    6. 'c' → logprob: -8.73740291595459
    7. '	while' → logprob: -10.61240291595459
    8. '+' → logprob: -10.86240291595459
    9. 'While' → logprob: -11.11240291595459
    10. 'num' → logprob: -11.73740291595459

Token 1038: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0021564492490142584
    2. ' while' → logprob: -6.2521562576293945
    3. 'c' → logprob: -9.127156257629395
    4. 'num' → logprob: -9.377156257629395
    5. '               ' → logprob: -10.627156257629395
    6. '           ' → logprob: -12.002156257629395
    7. '                   ' → logprob: -13.502156257629395
    8. '	while' → logprob: -13.627156257629395
    9. ' c' → logprob: -14.002156257629395
    10. 'While' → logprob: -14.877156257629395

Token 1039: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0037382065784186125
    2. ' self' → logprob: -5.7537384033203125
    3. 'True' → logprob: -8.003738403320312
    4. '(self' → logprob: -8.753738403320312
    5. 'c' → logprob: -10.753738403320312
    6. ' True' → logprob: -11.128738403320312
    7. '   ' → logprob: -11.628738403320312
    8. '(True' → logprob: -11.753738403320312
    9. '(' → logprob: -11.878738403320312
    10. ' (' → logprob: -12.378738403320312

Token 1040: '.peek' (ID: 73296)
  Prédit: '.peek'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.peek' → logprob: -0.031804513186216354
    2. 'peek' → logprob: -3.7818045616149902
    3. '.pos' → logprob: -5.40680456161499
    4. '.s' → logprob: -5.90680456161499
    5. 'pos' → logprob: -7.28180456161499
    6. 's' → logprob: -8.406804084777832
    7. '.consume' → logprob: -8.781804084777832
    8. 'and' → logprob: -10.031804084777832
    9. '   ' → logprob: -10.281804084777832
    10. '.is' → logprob: -10.281804084777832

Token 1041: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004296234343200922
    2. ' is' → logprob: -5.50429630279541
    3. '().' → logprob: -9.25429630279541
    4. ' and' → logprob: -9.50429630279541
    5. 'and' → logprob: -10.62929630279541
    6. 'is' → logprob: -11.25429630279541
    7. '()!=' → logprob: -12.87929630279541
    8. 'isdigit' → logprob: -13.25429630279541
    9. '()?.' → logprob: -13.50429630279541
    10. ')' → logprob: -13.87929630279541

Token 1042: ' is' (ID: 382)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.9212695360183716
    2. 'and' → logprob: -0.9212695360183716
    3. ' is' → logprob: -2.046269416809082
    4. 'isdigit' → logprob: -2.671269416809082
    5. 'is' → logprob: -5.796269416809082
    6. '()' → logprob: -6.796269416809082
    7. '().' → logprob: -7.171269416809082
    8. '.is' → logprob: -7.421269416809082
    9. 'isal' → logprob: -10.546269416809082
    10. 'in' → logprob: -11.546269416809082

Token 1043: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.038043782114982605
    2. ' not' → logprob: -3.288043737411499
    3. 'digit' → logprob: -13.413043975830078
    4. 'Not' → logprob: -15.288043975830078
    5. 'n't' → logprob: -15.913043975830078
    6. '```' → logprob: -16.038043975830078
    7. '   ' → logprob: -16.163043975830078
    8. '	not' → logprob: -16.663043975830078
    9. ' ' → logprob: -16.788043975830078
    10. '
' → logprob: -16.788043975830078

Token 1044: ' None' (ID: 4662)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.014977075159549713
    2. ' not' → logprob: -4.264976978302002
    3. 'None' → logprob: -7.764976978302002
    4. 'digit' → logprob: -7.889976978302002
    5. 'Not' → logprob: -12.51497745513916
    6. ' None' → logprob: -13.26497745513916
    7. 'none' → logprob: -13.26497745513916
    8. '
' → logprob: -13.51497745513916
    9. 'a' → logprob: -13.88997745513916
    10. 'isdigit' → logprob: -14.26497745513916

Token 1045: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.029750604182481766
    2. ' and' → logprob: -3.5297505855560303
    3. '	and' → logprob: -15.77975082397461
    4. '                   ' → logprob: -17.15475082397461
    5. '               ' → logprob: -17.52975082397461
    6. '                ' → logprob: -19.15475082397461
    7. ' ' → logprob: -19.40475082397461
    8. '           ' → logprob: -19.52975082397461
    9. '   ' → logprob: -19.77975082397461
    10. 'a' → logprob: -20.15475082397461

Token 1046: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.7014437364414334e-05
    2. ' self' → logprob: -10.62502670288086
    3. '(self' → logprob: -12.87502670288086
    4. '   ' → logprob: -17.62502670288086
    5. ' ' → logprob: -18.87502670288086
    6. '
' → logprob: -19.37502670288086
    7. '	self' → logprob: -19.50002670288086
    8. '(' → logprob: -19.62502670288086
    9. '[self' → logprob: -19.75002670288086
    10. ' (' → logprob: -20.12502670288086

Token 1047: '.peek' (ID: 73296)
  Prédit: '.peek'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.peek' → logprob: -0.0001673061487963423
    2. 'peek' → logprob: -9.000166893005371
    3. '.s' → logprob: -10.125166893005371
    4. 's' → logprob: -13.625166893005371
    5. '.pe' → logprob: -14.000166893005371
    6. '.' → logprob: -14.000166893005371
    7. 'Peek' → logprob: -15.875166893005371
    8. ' .' → logprob: -16.000167846679688
    9. '   ' → logprob: -16.125167846679688
    10. '
' → logprob: -16.375167846679688

Token 1048: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.03496553376317024
    2. '()' → logprob: -3.4099655151367188
    3. 'and' → logprob: -7.659965515136719
    4. 'isdigit' → logprob: -7.659965515136719
    5. ' and' → logprob: -8.409965515136719
    6. '()?.' → logprob: -9.534965515136719
    7. '   ' → logprob: -10.659965515136719
    8. '()!=' → logprob: -11.534965515136719
    9. '()).' → logprob: -12.034965515136719
    10. '```' → logprob: -12.284965515136719

Token 1049: 'isdigit' (ID: 187412)
  Prédit: 'isdigit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isdigit' → logprob: 0.0
    2. 'isd' → logprob: -17.25
    3. 'isal' → logprob: -17.625
    4. 'iss' → logprob: -18.0
    5. 'strip' → logprob: -19.5
    6. '```' → logprob: -20.375
    7. ' is' → logprob: -20.75
    8. 'is' → logprob: -21.25
    9. 'digit' → logprob: -21.5
    10. 'isas' → logprob: -22.0

Token 1050: '():
' (ID: 8595)
  Prédit: '():
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.0005212200339883566
    2. '():' → logprob: -7.875521183013916
    3. '()' → logprob: -9.000521659851074
    4. '():
' → logprob: -11.875521659851074
    5. ':
' → logprob: -12.125521659851074
    6. '()):
' → logprob: -12.500521659851074
    7. '):
' → logprob: -14.500521659851074
    8. 'and' → logprob: -15.500521659851074
    9. '()==' → logprob: -15.500521659851074
    10. ':' → logprob: -15.875521659851074

Token 1051: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0022112776059657335
    2. '                       ' → logprob: -7.502211093902588
    3. ':
' → logprob: -7.752211093902588
    4. ':' → logprob: -7.752211093902588
    5. '               ' → logprob: -8.002211570739746
    6. '	               ' → logprob: -8.627211570739746
    7. '   ' → logprob: -10.252211570739746
    8. '+' → logprob: -10.252211570739746
    9. '		           ' → logprob: -10.627211570739746
    10. ' and' → logprob: -10.627211570739746

Token 1052: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' (adapté à ' num') → logprob: -0.0005774584715254605
    2. '                   ' → logprob: -8.000577926635742
    3. ' num' → logprob: -8.500577926635742
    4. 'c' → logprob: -10.500577926635742
    5. 'token' → logprob: -12.250577926635742
    6. '   ' → logprob: -12.750577926635742
    7. '	num' → logprob: -13.375577926635742
    8. '               ' → logprob: -14.000577926635742
    9. '                       ' → logprob: -15.250577926635742
    10. 'nums' → logprob: -16.000577926635742

Token 1053: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.0013963071396574378
    2. 'str' → logprob: -6.751396179199219
    3. '_tokens' → logprob: -9.626396179199219
    4. '+=' → logprob: -10.376396179199219
    5. 'Str' → logprob: -10.751396179199219
    6. '```' → logprob: -11.126396179199219
    7. '   ' → logprob: -11.251396179199219
    8. ' +=' → logprob: -11.251396179199219
    9. '_STR' → logprob: -11.751396179199219
    10. '{
' → logprob: -11.876396179199219

Token 1054: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0009136092266999185
    2. ' +=' → logprob: -7.000913619995117
    3. ']+=' → logprob: -14.125913619995117
    4. '+='' → logprob: -14.750913619995117
    5. '=' → logprob: -14.875913619995117
    6. '+="' → logprob: -15.375913619995117
    7. '+' → logprob: -15.375913619995117
    8. '+=(' → logprob: -16.125913619995117
    9. '.append' → logprob: -17.875913619995117
    10. '+
' → logprob: -18.125913619995117

Token 1055: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.7697225252486533e-06
    2. ' self' → logprob: -12.500003814697266
    3. '(self' → logprob: -17.500003814697266
    4. 'c' → logprob: -19.250003814697266
    5. '   ' → logprob: -19.500003814697266
    6. '	self' → logprob: -20.250003814697266
    7. '           ' → logprob: -20.500003814697266
    8. '[self' → logprob: -20.750003814697266
    9. '       ' → logprob: -21.500003814697266
    10. '
' → logprob: -21.750003814697266

Token 1056: '.consume' (ID: 140765)
  Prédit: '.consume'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.consume' → logprob: -0.023346219211816788
    2. 'consume' → logprob: -3.773346185684204
    3. '.' → logprob: -9.648345947265625
    4. '.peek' → logprob: -10.273345947265625
    5. '.s' → logprob: -14.523345947265625
    6. 'peek' → logprob: -14.773345947265625
    7. ' consume' → logprob: -14.898345947265625
    8. 's' → logprob: -15.523345947265625
    9. '   ' → logprob: -15.648345947265625
    10. '.cons' → logprob: -17.023345947265625

Token 1057: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0010685354936867952
    2. '()
' → logprob: -7.501068592071533
    3. '(self' → logprob: -7.876068592071533
    4. 'self' → logprob: -9.751068115234375
    5. '(' → logprob: -10.751068115234375
    6. '())' → logprob: -11.251068115234375
    7. '('' → logprob: -11.751068115234375
    8. '();' → logprob: -11.751068115234375
    9. '<|end|>' → logprob: -11.751068115234375
    10. ')' → logprob: -12.126068115234375

Token 1058: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0008907367591746151
    2. '                
' → logprob: -7.875890731811523
    3. '                   ' → logprob: -8.500890731811523
    4. '<|end|>' → logprob: -9.500890731811523
    5. '                ' → logprob: -9.875890731811523
    6. '           ' → logprob: -9.875890731811523
    7. '                    
' → logprob: -10.875890731811523
    8. '
' → logprob: -10.875890731811523
    9. ')' → logprob: -11.125890731811523
    10. ' 
' → logprob: -11.375890731811523

Token 1059: ' tokens' (ID: 20290)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tokens' (adapté à ' tokens') → logprob: -0.14480824768543243
    2. '               ' → logprob: -2.269808292388916
    3. ' tokens' → logprob: -3.519808292388916
    4. 'num' → logprob: -6.769808292388916
    5. 'token' → logprob: -8.894807815551758
    6. '
' → logprob: -9.144807815551758
    7. 'number' → logprob: -9.269807815551758
    8. '           ' → logprob: -9.269807815551758
    9. 'numbers' → logprob: -9.269807815551758
    10. '(tokens' → logprob: -9.769807815551758

Token 1060: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -2.47495681833243e-05
    2. '.' → logprob: -10.875024795532227
    3. 'append' → logprob: -12.125024795532227
    4. '.app' → logprob: -15.375024795532227
    5. '.ap' → logprob: -16.375024795532227
    6. '.extend' → logprob: -16.625024795532227
    7. ' .' → logprob: -17.250024795532227
    8. '.Append' → logprob: -18.250024795532227
    9. '.add' → logprob: -18.750024795532227
    10. ' append' → logprob: -19.625024795532227

Token 1061: '(int' (ID: 2742)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -2.2961512513575144e-05
    2. '(int' → logprob: -11.000022888183594
    3. ' int' → logprob: -12.000022888183594
    4. '[int' → logprob: -18.000022888183594
    5. '<int' → logprob: -18.500022888183594
    6. '	int' → logprob: -21.875022888183594
    7. '=int' → logprob: -22.000022888183594
    8. ':int' → logprob: -22.375022888183594
    9. '   ' → logprob: -23.625022888183594
    10. 'ints' → logprob: -24.000022888183594

Token 1062: '(num' (ID: 15828)
  Prédit: '(num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -4.894790981779806e-05
    2. 'num' → logprob: -10.000048637390137
    3. '(' → logprob: -12.625048637390137
    4. '(
' → logprob: -16.250049591064453
    5. ' num' → logprob: -17.125049591064453
    6. ')' → logprob: -17.250049591064453
    7. '[num' → logprob: -17.875049591064453
    8. ',num' → logprob: -18.000049591064453
    9. '(n' → logprob: -18.250049591064453
    10. '	num' → logprob: -18.500049591064453

Token 1063: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.007410458754748106
    2. 'num' → logprob: -5.507410526275635
    3. '(num' → logprob: -6.257410526275635
    4. '_num' → logprob: -6.632410526275635
    5. 'str' → logprob: -10.007410049438477
    6. 'Str' → logprob: -10.382410049438477
    7. '[num' → logprob: -11.507410049438477
    8. '=num' → logprob: -13.257410049438477
    9. ')' → logprob: -13.382410049438477
    10. ' num' → logprob: -13.507410049438477

Token 1064: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004090035799890757
    2. '))' → logprob: -5.504089832305908
    3. ')
' → logprob: -11.754090309143066
    4. ' )' → logprob: -12.879090309143066
    5. ')}' → logprob: -14.629090309143066
    6. '))
' → logprob: -15.504090309143066
    7. ')))' → logprob: -16.00408935546875
    8. '),' → logprob: -16.25408935546875
    9. ')]' → logprob: -16.62908935546875
    10. ')`' → logprob: -16.87908935546875

Token 1065: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.180198073387146
    2. '               ' → logprob: -1.805198073387146
    3. 'elif' → logprob: -7.9301981925964355
    4. 'continue' → logprob: -10.680197715759277
    5. '                   ' → logprob: -10.805197715759277
    6. 'else' → logprob: -10.930197715759277
    7. '       ' → logprob: -11.930197715759277
    8. '		' → logprob: -12.055197715759277
    9. ' elif' → logprob: -12.180197715759277
    10. '```' → logprob: -12.305197715759277

Token 1066: ' elif' (ID: 9497)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6962158679962158
    2. 'elif' (adapté à ' elif') → logprob: -0.6962158679962158
    3. ' elif' → logprob: -6.321215629577637
    4. 'else' → logprob: -6.696215629577637
    5. '	elif' → logprob: -11.571215629577637
    6. '       ' → logprob: -11.696215629577637
    7. ' else' → logprob: -12.571215629577637
    8. '               ' → logprob: -12.946215629577637
    9. 'el' → logprob: -13.321215629577637
    10. 'elseif' → logprob: -13.821215629577637

Token 1067: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.005891818553209305
    2. 'self' → logprob: -5.255891799926758
    3. ' c' → logprob: -7.380891799926758
    4. ' self' → logprob: -11.505891799926758
    5. '   ' → logprob: -11.630891799926758
    6. ' ' → logprob: -12.255891799926758
    7. '(c' → logprob: -12.505891799926758
    8. '           ' → logprob: -13.380891799926758
    9. '(self' → logprob: -13.630891799926758
    10. '       ' → logprob: -14.380891799926758

Token 1068: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.08949530869722366
    2. ' in' → logprob: -2.4644954204559326
    3. '==' → logprob: -8.214495658874512
    4. '()' → logprob: -8.589495658874512
    5. '   ' → logprob: -10.339495658874512
    6. ' ==' → logprob: -10.714495658874512
    7. ')' → logprob: -11.339495658874512
    8. ' ' → logprob: -11.589495658874512
    9. '       ' → logprob: -12.714495658874512
    10. 'import' → logprob: -13.089495658874512

Token 1069: ' "+' (ID: 10953)
  Prédit: ''+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''+' → logprob: -0.0766843855381012
    2. ''' → logprob: -2.8266844749450684
    3. '"+' → logprob: -4.326684474945068
    4. '"' → logprob: -7.451684474945068
    5. '('' → logprob: -7.826684474945068
    6. '['' → logprob: -8.07668399810791
    7. '('+' → logprob: -9.57668399810791
    8. '{'' → logprob: -11.07668399810791
    9. ' '+' → logprob: -11.82668399810791
    10. ''(' → logprob: -11.95168399810791

Token 1070: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -2.2961512513575144e-05
    2. '-\' → logprob: -11.375022888183594
    3. '-*' → logprob: -11.750022888183594
    4. '\-' → logprob: -13.875022888183594
    5. '"-' → logprob: -14.375022888183594
    6. '()-' → logprob: -14.625022888183594
    7. '-"' → logprob: -14.625022888183594
    8. '-=' → logprob: -15.125022888183594
    9. '-
' → logprob: -15.250022888183594
    10. ' -' → logprob: -15.625022888183594

Token 1071: '*/' (ID: 3680)
  Prédit: '*/'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*/' → logprob: -0.0011123548028990626
    2. '*/)' → logprob: -8.00111198425293
    3. '/*' → logprob: -8.12611198425293
    4. '*/),' → logprob: -8.37611198425293
    5. '=*/' → logprob: -9.37611198425293
    6. '*' → logprob: -9.75111198425293
    7. '"' → logprob: -9.87611198425293
    8. '*/,' → logprob: -10.25111198425293
    9. '-' → logprob: -11.87611198425293
    10. '*/)
' → logprob: -12.12611198425293

Token 1072: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004357483237981796
    2. '()"' → logprob: -6.00435733795166
    3. '":
' → logprob: -7.25435733795166
    4. '()/' → logprob: -7.87935733795166
    5. '():' → logprob: -8.75435733795166
    6. '()+' → logprob: -9.00435733795166
    7. '():
' → logprob: -9.12935733795166
    8. ')' → logprob: -9.12935733795166
    9. '*/' → logprob: -10.12935733795166
    10. '"' → logprob: -10.50435733795166

Token 1073: '":
' (ID: 9213)
  Prédit: '":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":
' → logprob: -0.4614242613315582
    2. '"):
' → logprob: -1.2114242315292358
    3. '):
' → logprob: -2.8364243507385254
    4. '":' → logprob: -5.711424350738525
    5. ')' → logprob: -5.961424350738525
    6. '():
' → logprob: -6.336424350738525
    7. ':
' → logprob: -6.336424350738525
    8. '):' → logprob: -7.086424350738525
    9. '"' → logprob: -7.336424350738525
    10. '()' → logprob: -7.586424350738525

Token 1074: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.42798885703086853
    2. ':
' → logprob: -1.302988886833191
    3. ':' → logprob: -3.0529887676239014
    4. 'tokens' → logprob: -4.4279890060424805
    5. '(tokens' → logprob: -4.6779890060424805
    6. '           ' → logprob: -5.9279890060424805
    7. '):
' → logprob: -6.4279890060424805
    8. '.tokens' → logprob: -6.5529890060424805
    9. ' tokens' → logprob: -6.9279890060424805
    10. '_tokens' → logprob: -7.4279890060424805

Token 1075: ' tokens' (ID: 20290)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tokens' (adapté à ' tokens') → logprob: -0.0020724674686789513
    2. '               ' → logprob: -6.877072334289551
    3. ' tokens' → logprob: -6.877072334289551
    4. 'c' → logprob: -12.37707233428955
    5. 'token' → logprob: -13.37707233428955
    6. '(tokens' → logprob: -14.00207233428955
    7. '.tokens' → logprob: -14.75207233428955
    8. '           ' → logprob: -15.12707233428955
    9. 't' → logprob: -15.75207233428955
    10. '_tokens' → logprob: -15.75207233428955

Token 1076: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.008526156656444073
    2. '=' → logprob: -5.75852632522583
    3. 'tokens' → logprob: -5.88352632522583
    4. '+=' → logprob: -6.63352632522583
    5. ' =' → logprob: -7.25852632522583
    6. ' +=' → logprob: -8.133525848388672
    7. 'append' → logprob: -9.508525848388672
    8. '.' → logprob: -9.758525848388672
    9. '(tokens' → logprob: -9.758525848388672
    10. ' tokens' → logprob: -10.633525848388672

Token 1077: '(self' (ID: 2402)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.292907877039397e-06
    2. ' self' → logprob: -12.75000286102295
    3. 'c' → logprob: -15.50000286102295
    4. '(self' → logprob: -16.125003814697266
    5. '   ' → logprob: -18.250003814697266
    6. '[self' → logprob: -19.000003814697266
    7. '	self' → logprob: -19.625003814697266
    8. '=self' → logprob: -21.000003814697266
    9. ' ' → logprob: -21.250003814697266
    10. '$self' → logprob: -21.750003814697266

Token 1078: '.consume' (ID: 140765)
  Prédit: 'consume'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'consume' → logprob: -0.4012199640274048
    2. 'self' → logprob: -1.1512199640274048
    3. '.consume' → logprob: -4.276219844818115
    4. 'c' → logprob: -8.276220321655273
    5. '(self' → logprob: -9.651220321655273
    6. ' self' → logprob: -11.026220321655273
    7. '[self' → logprob: -11.901220321655273
    8. ')' → logprob: -13.151220321655273
    9. '.' → logprob: -13.276220321655273
    10. ' consume' → logprob: -13.276220321655273

Token 1079: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.048345692455768585
    2. '())
' → logprob: -3.5483458042144775
    3. '(c' → logprob: -4.173345565795898
    4. ')' → logprob: -6.298345565795898
    5. 'c' → logprob: -7.048345565795898
    6. '()' → logprob: -8.548345565795898
    7. ')c' → logprob: -10.048345565795898
    8. '(' → logprob: -10.423345565795898
    9. '())
' → logprob: -11.173345565795898
    10. ')
' → logprob: -11.298345565795898

Token 1080: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001001847442239523
    2. 'else' → logprob: -7.376001834869385
    3. ' else' → logprob: -9.251002311706543
    4. '               ' → logprob: -9.501002311706543
    5. '<|end|>' → logprob: -9.751002311706543
    6. 'continue' → logprob: -9.876002311706543
    7. '		' → logprob: -10.126002311706543
    8. '       ' → logprob: -11.251002311706543
    9. 'elif' → logprob: -11.376002311706543
    10. '	       ' → logprob: -11.626002311706543

Token 1081: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11849662661552429
    2. 'else' (adapté à ' else') → logprob: -2.2434966564178467
    3. ' else' → logprob: -5.493496417999268
    4. 'elif' → logprob: -7.243496417999268
    5. '	       ' → logprob: -7.993496417999268
    6. '       ' → logprob: -8.368496894836426
    7. '		' → logprob: -9.618496894836426
    8. '	else' → logprob: -10.118496894836426
    9. ' elif' → logprob: -10.493496894836426
    10. '               ' → logprob: -10.743496894836426

Token 1082: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12369276583194733
    2. '           ' → logprob: -2.748692750930786
    3. ':
' → logprob: -3.623692750930786
    4. ':' → logprob: -4.623692989349365
    5. 'raise' → logprob: -5.248692989349365
    6. ' raise' → logprob: -5.373692989349365
    7. '                   ' → logprob: -6.248692989349365
    8. '	raise' → logprob: -6.748692989349365
    9. '            ' → logprob: -7.498692989349365
    10. '.raise' → logprob: -7.748692989349365

Token 1083: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.24329522252082825
    2. '               ' → logprob: -1.7432951927185059
    3. 'raise' → logprob: -3.368295192718506
    4. ' raise' → logprob: -5.118295192718506
    5. '   ' → logprob: -8.743295669555664
    6. '                   ' → logprob: -8.868295669555664
    7. '       ' → logprob: -9.493295669555664
    8. ' ' → logprob: -9.868295669555664
    9. 'break' → logprob: -9.993295669555664
    10. 'self' → logprob: -10.743295669555664

Token 1084: ' #' (ID: 1069)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' → logprob: -0.002762675518169999
    2. ' raise' → logprob: -6.752762794494629
    3. 'break' → logprob: -7.002762794494629
    4. '               ' → logprob: -7.502762794494629
    5. '                   ' → logprob: -9.002762794494629
    6. '#' (adapté à ' #') → logprob: -13.127762794494629
    7. '           ' → logprob: -13.127762794494629
    8. '	raise' → logprob: -13.752762794494629
    9. 'self' → logprob: -14.002762794494629
    10. ' break' → logprob: -14.627762794494629

Token 1085: ' Invalid' (ID: 26430)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'raise' → logprob: -0.0005779353086836636
    2. ' raise' → logprob: -7.500577926635742
    3. 'break' → logprob: -11.500577926635742
    4. '               ' → logprob: -11.750577926635742
    5. '#' → logprob: -12.875577926635742
    6. '           ' → logprob: -13.250577926635742
    7. 'Raise' → logprob: -13.750577926635742
    8. 'self' → logprob: -13.875577926635742
    9. '                   ' → logprob: -15.125577926635742
    10. '	raise' → logprob: -15.875577926635742

Token 1086: ' character' (ID: 5855)
  Prédit: 'character'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'character' → logprob: -0.7084658741950989
    2. 'token' → logprob: -2.083465814590454
    3. 'Character' → logprob: -2.208465814590454
    4. 'raise' → logprob: -2.208465814590454
    5. ' character' → logprob: -2.708465814590454
    6. 'char' → logprob: -3.208465814590454
    7. 'Token' → logprob: -4.833466053009033
    8. ' raise' → logprob: -4.958466053009033
    9. 'Syntax' → logprob: -5.083466053009033
    10. '#' → logprob: -5.333466053009033

Token 1087: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.059016384184360504
    2. 'raise' → logprob: -3.309016466140747
    3. '           ' → logprob: -4.184016227722168
    4. '                   ' → logprob: -5.434016227722168
    5. ' raise' → logprob: -6.809016227722168
    6. 'self' → logprob: -11.434016227722168
    7. 'return' → logprob: -11.934016227722168
    8. '   ' → logprob: -12.184016227722168
    9. 'Raise' → logprob: -12.184016227722168
    10. 'if' → logprob: -12.434016227722168

Token 1088: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.058204155415296555
    2. '                   ' → logprob: -3.683204174041748
    3. 'raise' → logprob: -3.808204174041748
    4. '           ' → logprob: -5.058204174041748
    5. ' raise' → logprob: -5.933204174041748
    6. '                ' → logprob: -9.80820369720459
    7. '              ' → logprob: -10.30820369720459
    8. '                       ' → logprob: -10.68320369720459
    9. 'Raise' → logprob: -10.93320369720459
    10. '   ' → logprob: -11.43320369720459

Token 1089: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.0006235609762370586
    2. 'break' → logprob: -8.25062370300293
    3. ' raise' → logprob: -8.25062370300293
    4. 'self' → logprob: -10.00062370300293
    5. '               ' → logprob: -10.50062370300293
    6. '                   ' → logprob: -10.50062370300293
    7. '           ' → logprob: -15.12562370300293
    8. '	raise' → logprob: -15.62562370300293
    9. '   ' → logprob: -16.50062370300293
    10. ' break' → logprob: -16.87562370300293

Token 1090: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -1.0445127372804563e-05
    2. ' Value' → logprob: -11.50001049041748
    3. 'Syntax' → logprob: -15.50001049041748
    4. '_value' → logprob: -17.375009536743164
    5. 'value' → logprob: -17.500009536743164
    6. 'Runtime' → logprob: -17.750009536743164
    7. '_Value' → logprob: -17.875009536743164
    8. '
' → logprob: -18.500009536743164
    9. '	Value' → logprob: -18.750009536743164
    10. '.Value' → logprob: -19.875009536743164

Token 1091: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -1.8193366486229934e-05
    2. 'rror' → logprob: -11.000018119812012
    3. 'Value' → logprob: -13.625018119812012
    4. 'SError' → logprob: -17.000019073486328
    5. '           ' → logprob: -17.250019073486328
    6. '("' → logprob: -17.250019073486328
    7. '               ' → logprob: -18.375019073486328
    8. 'error' → logprob: -18.500019073486328
    9. '('' → logprob: -18.500019073486328
    10. 'Warning' → logprob: -18.750019073486328

Token 1092: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.001169033464975655
    2. '("' → logprob: -7.001169204711914
    3. 'f' → logprob: -8.876169204711914
    4. '(' → logprob: -9.126169204711914
    5. '(
' → logprob: -12.626169204711914
    6. '('' → logprob: -12.626169204711914
    7. '           ' → logprob: -13.251169204711914
    8. '       ' → logprob: -15.876169204711914
    9. '               ' → logprob: -16.001169204711914
    10. '   ' → logprob: -16.126169204711914

Token 1093: '"' (ID: 1)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.036583539098501205
    2. '"' → logprob: -4.286583423614502
    3. 'Unexpected' → logprob: -4.661583423614502
    4. ' f' → logprob: -5.036583423614502
    5. 'Invalid' → logprob: -5.411583423614502
    6. '(f' → logprob: -6.661583423614502
    7. '           ' → logprob: -8.41158390045166
    8. 'Unknown' → logprob: -9.03658390045166
    9. 'Illegal' → logprob: -10.53658390045166
    10. '       ' → logprob: -11.03658390045166

Token 1094: 'Invalid' (ID: 12278)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.49266624450683594
    2. 'Invalid' → logprob: -1.492666244506836
    3. 'Unexpected' → logprob: -1.867666244506836
    4. '"' → logprob: -5.367666244506836
    5. 'Unknown' → logprob: -5.742666244506836
    6. 'Illegal' → logprob: -6.742666244506836
    7. 'Unsupported' → logprob: -8.492666244506836
    8. '(f' → logprob: -8.867666244506836
    9. 'Un' → logprob: -9.742666244506836
    10. 'Encounter' → logprob: -9.867666244506836

Token 1095: ' character' (ID: 5855)
  Prédit: 'character'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'character' → logprob: -0.16407670080661774
    2. ' character' → logprob: -1.9140766859054565
    3. 'token' → logprob: -5.664076805114746
    4. 'c' → logprob: -8.414076805114746
    5. 'char' → logprob: -9.539076805114746
    6. ' token' → logprob: -9.789076805114746
    7. ' c' → logprob: -11.414076805114746
    8. 'Character' → logprob: -12.039076805114746
    9. 'input' → logprob: -12.914076805114746
    10. '_character' → logprob: -13.289076805114746

Token 1096: ' {' (ID: 354)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18000264465808868
    2. ''{' → logprob: -2.3050026893615723
    3. ''' → logprob: -3.6800026893615723
    4. '{' → logprob: -3.9300026893615723
    5. ' '{' → logprob: -4.805002689361572
    6. ' c' → logprob: -6.055002689361572
    7. ' '' → logprob: -6.430002689361572
    8. ' {' → logprob: -6.555002689361572
    9. ''f' → logprob: -7.180002689361572
    10. ' encountered' → logprob: -7.305002689361572

Token 1097: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0031765217427164316
    2. ' c' → logprob: -5.878176689147949
    3. 'self' → logprob: -8.12817668914795
    4. '}' → logprob: -11.12817668914795
    5. '{' → logprob: -11.50317668914795
    6. ' self' → logprob: -11.87817668914795
    7. '                   ' → logprob: -12.25317668914795
    8. '   ' → logprob: -12.25317668914795
    9. '           ' → logprob: -12.25317668914795
    10. ' ' → logprob: -12.25317668914795

Token 1098: '}")
' (ID: 23577)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.7704410552978516
    2. '}")' → logprob: -1.0204410552978516
    3. '}")
' → logprob: -1.8954410552978516
    4. '")
' → logprob: -3.7704410552978516
    5. ')")
' → logprob: -6.520441055297852
    6. ')' → logprob: -7.145441055297852
    7. ')")' → logprob: -8.020441055297852
    8. '}' → logprob: -8.395441055297852
    9. ' }' → logprob: -8.895441055297852
    10. ')}' → logprob: -9.020441055297852

Token 1099: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1422344297170639
    2. '<|end|>' → logprob: -2.6422343254089355
    3. '           ' → logprob: -3.2672343254089355
    4. '<|end|>' → logprob: -4.5172343254089355
    5. ')' → logprob: -6.2672343254089355
    6. '        
' → logprob: -6.5172343254089355
    7. '        ' → logprob: -6.6422343254089355
    8. 'tokens' → logprob: -6.6422343254089355
    9. '	' → logprob: -6.8922343254089355
    10. '	       ' → logprob: -7.0172343254089355

Token 1100: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006875806488096714
    2. '<|end|>' → logprob: -6.131875991821289
    3. '        
' → logprob: -6.506875991821289
    4. '	' → logprob: -7.006875991821289
    5. 'return' (adapté à ' return') → logprob: -7.881875991821289
    6. ' return' → logprob: -8.131875991821289
    7. '    
' → logprob: -8.506875991821289
    8. '
' → logprob: -8.756875991821289
    9. '	return' → logprob: -8.756875991821289
    10. ')' → logprob: -8.756875991821289

Token 1101: ' tokens' (ID: 20290)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.000553151941858232
    2. ' tokens' → logprob: -7.500553131103516
    3. '(tokens' → logprob: -15.875553131103516
    4. '.tokens' → logprob: -17.875553131103516
    5. 'token' → logprob: -18.500553131103516
    6. '_tokens' → logprob: -19.250553131103516
    7. '[' → logprob: -19.375553131103516
    8. 't' → logprob: -19.625553131103516
    9. 'okens' → logprob: -20.250553131103516
    10. 'Tokens' → logprob: -20.375553131103516

Token 1102: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5919065475463867
    2. '<|end|>' → logprob: -1.0919065475463867
    3. '    
' → logprob: -2.7169065475463867
    4. '   ' → logprob: -3.7169065475463867
    5. 'def' → logprob: -4.466906547546387
    6. '<|end|>' → logprob: -5.341906547546387
    7. '

' → logprob: -6.216906547546387
    8. '  
' → logprob: -6.966906547546387
    9. '```' → logprob: -7.841906547546387
    10. ' def' → logprob: -8.091906547546387

Token 1103: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.023407824337482452
    2. '   ' → logprob: -4.273407936096191
    3. ' def' → logprob: -5.148407936096191
    4. '    
' → logprob: -6.523407936096191
    5. '
' → logprob: -7.023407936096191
    6. '<|end|>' → logprob: -8.023407936096191
    7. '```' → logprob: -8.398407936096191
    8. '	def' → logprob: -8.523407936096191
    9. '[' → logprob: -10.023407936096191
    10. '  
' → logprob: -10.398407936096191

Token 1104: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0073203896172344685
    2. '   ' → logprob: -5.757320404052734
    3. ' def' → logprob: -6.007320404052734
    4. '
' → logprob: -6.632320404052734
    5. '    
' → logprob: -8.007320404052734
    6. '	def' → logprob: -11.882320404052734
    7. '_def' → logprob: -12.882320404052734
    8. ' 
' → logprob: -12.882320404052734
    9. '```' → logprob: -13.007320404052734
    10. '        
' → logprob: -13.507320404052734

Token 1105: ' build' (ID: 3024)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.5237417221069336
    2. 'build' → logprob: -0.8987417221069336
    3. ' parse' → logprob: -8.648741722106934
    4. 'consume' → logprob: -9.148741722106934
    5. '_build' → logprob: -9.648741722106934
    6. '_parse' → logprob: -9.898741722106934
    7. 'def' → logprob: -9.898741722106934
    8. ' build' → logprob: -10.023741722106934
    9. 'expr' → logprob: -10.523741722106934
    10. 'split' → logprob: -10.648741722106934

Token 1106: '_expression' (ID: 69265)
  Prédit: '_expression'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_expression' → logprob: -0.0009443380986340344
    2. 'expression' → logprob: -7.000944137573242
    3. '```' → logprob: -12.375944137573242
    4. '   ' → logprob: -12.375944137573242
    5. '_all' → logprob: -12.625944137573242
    6. '_tokens' → logprob: -12.875944137573242
    7. ')' → logprob: -13.125944137573242
    8. '(expression' → logprob: -13.375944137573242
    9. '(self' → logprob: -13.500944137573242
    10. 'self' → logprob: -13.625944137573242

Token 1107: '_all' (ID: 13305)
  Prédit: '_all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_all' → logprob: -0.0016475648153573275
    2. '(self' → logprob: -7.501647472381592
    3. '_tokens' → logprob: -7.751647472381592
    4. '_' → logprob: -7.876647472381592
    5. 's' → logprob: -9.62664794921875
    6. '_list' → logprob: -10.12664794921875
    7. 'self' → logprob: -10.62664794921875
    8. 'all' → logprob: -10.75164794921875
    9. '_parts' → logprob: -11.12664794921875
    10. '_self' → logprob: -11.12664794921875

Token 1108: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.012596650049090385
    2. '(self' → logprob: -4.512596607208252
    3. '_all' → logprob: -7.262596607208252
    4. '_tokens' → logprob: -8.38759708404541
    5. '```' → logprob: -8.76259708404541
    6. '_list' → logprob: -9.63759708404541
    7. '(
' → logprob: -10.13759708404541
    8. '(' → logprob: -10.13759708404541
    9. '_(' → logprob: -10.26259708404541
    10. 'self' → logprob: -10.26259708404541

Token 1109: 'ways' (ID: 2771)
  Prédit: 'ways'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.00042447797022759914
    2. '_' → logprob: -7.875424385070801
    3. ' ways' → logprob: -11.1254243850708
    4. 'Ways' → logprob: -11.7504243850708
    5. 'WAYS' → logprob: -12.0004243850708
    6. 'all' → logprob: -12.3754243850708
    7. 'self' → logprob: -13.0004243850708
    8. 'way' → logprob: -13.6254243850708
    9. '```' → logprob: -13.7504243850708
    10. 'aways' → logprob: -13.8754243850708

Token 1110: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.002553307916969061
    2. '(' → logprob: -6.002553462982178
    3. 'self' → logprob: -10.25255298614502
    4. '   ' → logprob: -11.50255298614502
    5. '(
' → logprob: -11.50255298614502
    6. '```' → logprob: -11.50255298614502
    7. ' (' → logprob: -12.25255298614502
    8. '       ' → logprob: -13.37755298614502
    9. '(tokens' → logprob: -13.75255298614502
    10. '_(' → logprob: -14.12755298614502

Token 1111: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0014821283984929323
    2. '(' → logprob: -7.001482009887695
    3. 'self' → logprob: -8.501482009887695
    4. ')' → logprob: -9.001482009887695
    5. '   ' → logprob: -9.251482009887695
    6. '(
' → logprob: -10.126482009887695
    7. '       ' → logprob: -10.501482009887695
    8. '```' → logprob: -10.876482009887695
    9. 'def' → logprob: -11.626482009887695
    10. '_(' → logprob: -11.626482009887695

Token 1112: ' tokens' (ID: 20290)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.00805525854229927
    2. 'self' → logprob: -4.883055210113525
    3. ' tokens' → logprob: -7.883055210113525
    4. '   ' → logprob: -10.008055686950684
    5. '       ' → logprob: -11.383055686950684
    6. ' self' → logprob: -12.633055686950684
    7. 'token' → logprob: -13.008055686950684
    8. '(tokens' → logprob: -13.133055686950684
    9. '.tokens' → logprob: -13.758055686950684
    10. '(self' → logprob: -14.258055686950684

Token 1113: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7471375465393066
    2. ':' → logprob: -1.3721375465393066
    3. '(self' → logprob: -1.6221375465393066
    4. '       ' → logprob: -3.1221375465393066
    5. '   ' → logprob: -4.122137546539307
    6. 'self' → logprob: -4.872137546539307
    7. ',' → logprob: -6.122137546539307
    8. '[self' → logprob: -6.247137546539307
    9. ' self' → logprob: -6.622137546539307
    10. ' :' → logprob: -8.122137069702148

Token 1114: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.010226892307400703
    2. 'Optional' → logprob: -5.135226726531982
    3. 'None' → logprob: -6.135226726531982
    4. 'int' → logprob: -7.010226726531982
    5. ')' → logprob: -7.385226726531982
    6. '...' → logprob: -8.26022720336914
    7. ' List' → logprob: -8.88522720336914
    8. 'list' → logprob: -9.88522720336914
    9. 'self' → logprob: -10.63522720336914
    10. ' Optional' → logprob: -10.76022720336914

Token 1115: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004750388208776712
    2. ')' → logprob: -5.5047502517700195
    3. ':' → logprob: -8.50475025177002
    4. '   ' → logprob: -8.75475025177002
    5. '[int' → logprob: -9.75475025177002
    6. 'Union' → logprob: -10.00475025177002
    7. '):
' → logprob: -10.37975025177002
    8. ']' → logprob: -10.75475025177002
    9. '```' → logprob: -10.75475025177002
    10. ',' → logprob: -10.87975025177002

Token 1116: 'Union' (ID: 39222)
  Prédit: 'Union'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Union' → logprob: -2.3676733690081164e-05
    2. '[' → logprob: -11.12502384185791
    3. ' Union' → logprob: -12.37502384185791
    4. 'object' → logprob: -13.37502384185791
    5. 'union' → logprob: -13.50002384185791
    6. ')' → logprob: -14.50002384185791
    7. '   ' → logprob: -15.12502384185791
    8. ']' → logprob: -15.62502384185791
    9. ''Union' → logprob: -15.75002384185791
    10. '#' → logprob: -16.125022888183594

Token 1117: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.017735568806529045
    2. 'int' → logprob: -4.142735481262207
    3. '[' → logprob: -6.392735481262207
    4. 'Union' → logprob: -11.892735481262207
    5. ',int' → logprob: -12.392735481262207
    6. '[str' → logprob: -12.892735481262207
    7. '   ' → logprob: -13.142735481262207
    8. '[
' → logprob: -13.142735481262207
    9. ')' → logprob: -13.267735481262207
    10. '<int' → logprob: -13.392735481262207

Token 1118: ',str' (ID: 95110)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16188456118106842
    2. ',str' → logprob: -1.9118845462799072
    3. ',int' → logprob: -6.536884784698486
    4. '[str' → logprob: -9.161884307861328
    5. 'str' → logprob: -10.036884307861328
    6. ' ,' → logprob: -10.661884307861328
    7. ',
' → logprob: -10.911884307861328
    8. ',float' → logprob: -12.036884307861328
    9. ',bool' → logprob: -13.036884307861328
    10. '
' → logprob: -13.161884307861328

Token 1119: ']])' (ID: 64959)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0008617922430858016
    2. ']])' → logprob: -7.500861644744873
    3. '],' → logprob: -8.625862121582031
    4. ')' → logprob: -10.500862121582031
    5. ']):
' → logprob: -10.500862121582031
    6. ',' → logprob: -10.500862121582031
    7. '   ' → logprob: -11.000862121582031
    8. ']' → logprob: -11.125862121582031
    9. ']):' → logprob: -12.750862121582031
    10. ']),' → logprob: -12.875862121582031

Token 1120: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.6207853555679321
    2. '->' → logprob: -1.2457853555679321
    3. '   ' → logprob: -2.4957852363586426
    4. '       ' → logprob: -2.9957852363586426
    5. ' ->' → logprob: -4.370785236358643
    6. ')' → logprob: -5.120785236358643
    7. 'self' → logprob: -5.245785236358643
    8. '[self' → logprob: -5.245785236358643
    9. 'def' → logprob: -5.370785236358643
    10. ':' → logprob: -5.620785236358643

Token 1121: ' Expression' (ID: 32496)
  Prédit: 'Expression'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Expression' → logprob: -0.022518426179885864
    2. 'Optional' → logprob: -3.8975183963775635
    3. 'Union' → logprob: -6.272518634796143
    4. 'List' → logprob: -10.022518157958984
    5. ' Expression' → logprob: -10.897518157958984
    6. 'None' → logprob: -12.022518157958984
    7. ''' → logprob: -12.772518157958984
    8. '(Expression' → logprob: -12.897518157958984
    9. 'Tuple' → logprob: -13.022518157958984
    10. 'optional' → logprob: -13.147518157958984

Token 1122: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07605652511119843
    2. ':
' → logprob: -3.326056480407715
    3. '       ' → logprob: -3.451056480407715
    4. '[' → logprob: -6.201056480407715
    5. '   ' → logprob: -6.701056480407715
    6. '{' → logprob: -7.826056480407715
    7. ')' → logprob: -8.326056480407715
    8. 'def' → logprob: -8.576056480407715
    9. '):' → logprob: -8.701056480407715
    10. ',' → logprob: -8.826056480407715

Token 1123: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0033376486971974373
    2. 'if' → logprob: -5.878337860107422
    3. ' if' → logprob: -7.628337860107422
    4. '   ' → logprob: -10.503337860107422
    5. '```' → logprob: -11.378337860107422
    6. 'def' → logprob: -12.503337860107422
    7. '#' → logprob: -13.628337860107422
    8. '	if' → logprob: -14.003337860107422
    9. '	' → logprob: -14.753337860107422
    10. '           ' → logprob: -15.003337860107422

Token 1124: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0024489001370966434
    2. '       ' → logprob: -6.252449035644531
    3. 'def' → logprob: -7.752449035644531
    4. '#' (adapté à ' #') → logprob: -9.752449035644531
    5. ' if' → logprob: -10.502449035644531
    6. '```' → logprob: -12.502449035644531
    7. 'n' → logprob: -14.002449035644531
    8. 'length' → logprob: -16.00244903564453
    9. '   ' → logprob: -16.12744903564453
    10. '``' → logprob: -16.87744903564453

Token 1125: ' Re' (ID: 907)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2528698146343231
    2. 'def' → logprob: -1.5028698444366455
    3. '       ' → logprob: -7.002869606018066
    4. '```' → logprob: -11.127869606018066
    5. '#' → logprob: -11.502869606018066
    6. ' if' → logprob: -13.252869606018066
    7. '   ' → logprob: -13.252869606018066
    8. 'If' → logprob: -13.752869606018066
    9. '        
' → logprob: -14.252869606018066
    10. '
' → logprob: -14.752869606018066

Token 1126: 'build' (ID: 9242)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'turn' → logprob: -0.37477150559425354
    2. 'if' → logprob: -1.8747714757919312
    3. 'def' → logprob: -1.9997714757919312
    4. ' if' → logprob: -3.8747715950012207
    5. '```' → logprob: -7.249771595001221
    6. 's' → logprob: -7.374771595001221
    7. ' def' → logprob: -8.249771118164062
    8. 'urn' → logprob: -8.499771118164062
    9. 'curse' → logprob: -8.624771118164062
    10. 'c' → logprob: -8.624771118164062

Token 1127: ' Expression' (ID: 32496)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.5484165549278259
    2. 'if' → logprob: -1.1734166145324707
    3. 'def' → logprob: -2.6734166145324707
    4. 'Expression' → logprob: -4.923416614532471
    5. ' if' → logprob: -5.173416614532471
    6. 'self' → logprob: -5.298416614532471
    7. '[' → logprob: -5.423416614532471
    8. ' tokens' → logprob: -5.673416614532471
    9. 'expr' → logprob: -6.048416614532471
    10. 'None' → logprob: -6.048416614532471

Token 1128: ' tree' (ID: 8165)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[
' → logprob: -1.173988938331604
    2. 'def' → logprob: -1.298988938331604
    3. '[' → logprob: -2.0489888191223145
    4. 'tokens' → logprob: -2.5489888191223145
    5. '(
' → logprob: -2.9239888191223145
    6. ':' → logprob: -3.9239888191223145
    7. '       ' → logprob: -4.0489888191223145
    8. '
' → logprob: -4.1739888191223145
    9. '(self' → logprob: -4.2989888191223145
    10. 'self' → logprob: -4.2989888191223145

Token 1129: ' from' (ID: 591)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3353671431541443
    2. 'if' → logprob: -1.960367202758789
    3. 'def' → logprob: -2.835367202758789
    4. '(self' → logprob: -3.210367202758789
    5. '
' → logprob: -4.210367202758789
    6. '   ' → logprob: -4.335367202758789
    7. 'self' → logprob: -4.585367202758789
    8. ' if' → logprob: -5.460367202758789
    9. 'from' → logprob: -7.210367202758789
    10. '        
' → logprob: -7.335367202758789

Token 1130: ' tokens' (ID: 20290)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.00037359268753789365
    2. ' tokens' → logprob: -8.000373840332031
    3. 'the' → logprob: -10.375373840332031
    4. 'List' → logprob: -13.625373840332031
    5. '[' → logprob: -13.750373840332031
    6. '```' → logprob: -13.875373840332031
    7. 'token' → logprob: -14.250373840332031
    8. '(tokens' → logprob: -15.000373840332031
    9. 'a' → logprob: -15.125373840332031
    10. '`' → logprob: -15.125373840332031

Token 1131: ' taking' (ID: 6167)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26183223724365234
    2. 'if' → logprob: -2.6368322372436523
    3. 'def' → logprob: -2.7618322372436523
    4. ' if' → logprob: -3.0118322372436523
    5. '   ' → logprob: -4.136832237243652
    6. ',' → logprob: -5.011832237243652
    7. '        
' → logprob: -5.011832237243652
    8. '(self' → logprob: -5.386832237243652
    9. '
' → logprob: -5.386832237243652
    10. ':' → logprob: -6.011832237243652

Token 1132: ' parentheses' (ID: 180602)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.6285155415534973
    2. 'into' → logprob: -0.8785155415534973
    3. ' into' → logprob: -4.378515720367432
    4. 'preced' → logprob: -4.503515720367432
    5. 'adv' → logprob: -5.128515720367432
    6. 'tokens' → logprob: -5.503515720367432
    7. ' all' → logprob: -5.628515720367432
    8. 'care' → logprob: -5.878515720367432
    9. 'the' → logprob: -6.253515720367432
    10. '   ' → logprob: -6.503515720367432

Token 1133: ' into' (ID: 1511)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9642691612243652
    2. 'if' → logprob: -1.2142691612243652
    3. ':' → logprob: -2.0892691612243652
    4. 'def' → logprob: -2.4642691612243652
    5. ',' → logprob: -3.0892691612243652
    6. '(
' → logprob: -4.589269161224365
    7. '       ' → logprob: -4.589269161224365
    8. 'tokens' → logprob: -4.839269161224365
    9. ')' → logprob: -4.964269161224365
    10. '(tokens' → logprob: -5.339269161224365

Token 1134: ' account' (ID: 3527)
  Prédit: 'account'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'account' → logprob: -8.685467764735222e-05
    2. 'consider' → logprob: -9.500086784362793
    3. ' account' → logprob: -11.500086784362793
    4. 'count' → logprob: -13.875086784362793
    5. '
' → logprob: -14.625086784362793
    6. '#' → logprob: -16.12508773803711
    7. 'accounts' → logprob: -16.50008773803711
    8. '   ' → logprob: -16.75008773803711
    9. '_account' → logprob: -17.25008773803711
    10. '...' → logprob: -17.75008773803711

Token 1135: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01740455813705921
    2. 'if' → logprob: -4.642404556274414
    3. ' if' → logprob: -5.142404556274414
    4. 'def' → logprob: -6.892404556274414
    5. '
' → logprob: -8.767404556274414
    6. '   ' → logprob: -9.017404556274414
    7. '```' → logprob: -9.142404556274414
    8. '        
' → logprob: -9.267404556274414
    9. ',' → logprob: -9.517404556274414
    10. ':' → logprob: -9.767404556274414

Token 1136: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03897807374596596
    2. ' if' → logprob: -3.788978099822998
    3. 'if' → logprob: -4.288978099822998
    4. '```' → logprob: -7.288978099822998
    5. 'def' → logprob: -7.913978099822998
    6. '   ' → logprob: -7.913978099822998
    7. 'tokens' → logprob: -9.03897762298584
    8. ' i' → logprob: -9.03897762298584
    9. '        
' → logprob: -9.66397762298584
    10. 'i' → logprob: -10.41397762298584

Token 1137: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.041016820818185806
    2. 'def' → logprob: -3.7910168170928955
    3. '       ' → logprob: -4.291017055511475
    4. 'stack' → logprob: -5.791017055511475
    5. ' if' → logprob: -7.791017055511475
    6. 'i' → logprob: -8.416016578674316
    7. '#' (adapté à ' #') → logprob: -9.291016578674316
    8. 'pos' → logprob: -10.041016578674316
    9. 'idx' → logprob: -10.291016578674316
    10. '   ' → logprob: -11.041016578674316

Token 1138: ' We' (ID: 1416)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.16283567249774933
    2. 'def' → logprob: -2.4128355979919434
    3. '       ' → logprob: -2.9128355979919434
    4. 'stack' → logprob: -5.787835597991943
    5. 'i' → logprob: -6.287835597991943
    6. 'idx' → logprob: -7.787835597991943
    7. 'pos' → logprob: -7.912835597991943
    8. '#' → logprob: -8.037836074829102
    9. ' if' → logprob: -8.787836074829102
    10. 'n' → logprob: -9.787836074829102

Token 1139: ' parse' (ID: 8420)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6383524537086487
    2. ' def' → logprob: -0.7633524537086487
    3. '   ' → logprob: -5.263352394104004
    4. '       ' → logprob: -9.263352394104004
    5. 'pos' → logprob: -9.513352394104004
    6. ' tokenize' → logprob: -10.013352394104004
    7. '	def' → logprob: -10.138352394104004
    8. 'tokens' → logprob: -10.263352394104004
    9. '```' → logprob: -10.263352394104004
    10. ')' → logprob: -10.388352394104004

Token 1140: ' a' (ID: 261)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.43537175655365
    2. '0' → logprob: -1.56037175655365
    3. 'tokens' → logprob: -1.56037175655365
    4. 'def' → logprob: -1.56037175655365
    5. ')' → logprob: -3.0603718757629395
    6. 'idx' → logprob: -3.8103718757629395
    7. '   ' → logprob: -4.4353718757629395
    8. '       ' → logprob: -4.6853718757629395
    9. '(' → logprob: -5.3103718757629395
    10. 'i' → logprob: -5.3103718757629395

Token 1141: ' fully' (ID: 9637)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04865061491727829
    2. ' def' → logprob: -3.5486505031585693
    3. ')' → logprob: -4.423650741577148
    4. 'stack' → logprob: -6.173650741577148
    5. ' stack' → logprob: -6.298650741577148
    6. '   ' → logprob: -7.423650741577148
    7. 'pos' → logprob: -7.923650741577148
    8. 'if' → logprob: -8.048650741577148
    9. 'idx' → logprob: -8.798650741577148
    10. '[]' → logprob: -9.048650741577148

Token 1142: ' parent' (ID: 5980)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04871431738138199
    2. 'token' → logprob: -4.4237141609191895
    3. 'flat' → logprob: -5.2987141609191895
    4. '(
' → logprob: -5.5487141609191895
    5. ' def' → logprob: -5.5487141609191895
    6. 'parent' → logprob: -5.5487141609191895
    7. 'recursive' → logprob: -5.7987141609191895
    8. ')' → logprob: -6.0487141609191895
    9. 'new' → logprob: -6.1737141609191895
    10. 'balanced' → logprob: -6.6737141609191895

Token 1143: 'hes' (ID: 9780)
  Prédit: 'hes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hes' → logprob: -0.21542266011238098
    2. 'heses' → logprob: -1.7154226303100586
    3. 'hesis' → logprob: -5.090422630310059
    4. 'h' → logprob: -5.215422630310059
    5. '```' → logprob: -6.840422630310059
    6. ')' → logprob: -8.090422630310059
    7. 'esized' → logprob: -8.465422630310059
    8. '(' → logprob: -8.840422630310059
    9. 'hs' → logprob: -9.340422630310059
    10. '(None' → logprob: -9.465422630310059

Token 1144: 'ized' (ID: 2110)
  Prédit: 'ized'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ized' → logprob: -0.04089827835559845
    2. 'zed' → logprob: -3.790898323059082
    3. 'ed' → logprob: -4.915898323059082
    4. 'esized' → logprob: -5.165898323059082
    5. '   ' → logprob: -6.540898323059082
    6. '```' → logprob: -7.415898323059082
    7. 'es' → logprob: -7.915898323059082
    8. ')' → logprob: -7.915898323059082
    9. '[' → logprob: -8.540898323059082
    10. '[(' → logprob: -8.790898323059082

Token 1145: ' structure' (ID: 8866)
  Prédit: 'expression'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expression' → logprob: -0.11218059062957764
    2. ' expression' → logprob: -2.612180709838867
    3. 'def' → logprob: -4.862180709838867
    4. 'expr' → logprob: -4.987180709838867
    5. ')' → logprob: -5.612180709838867
    6. 'token' → logprob: -5.737180709838867
    7. '
' → logprob: -6.112180709838867
    8. 'sequence' → logprob: -6.612180709838867
    9. 'list' → logprob: -6.737180709838867
    10. '_expression' → logprob: -6.862180709838867

Token 1146: ' and' (ID: 326)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3343871235847473
    2. '       ' → logprob: -1.7093870639801025
    3. '(self' → logprob: -3.2093870639801025
    4. '   ' → logprob: -3.7093870639801025
    5. ',' → logprob: -4.709387302398682
    6. 'self' → logprob: -4.709387302398682
    7. ')' → logprob: -5.459387302398682
    8. 'if' → logprob: -5.709387302398682
    9. 'tokens' → logprob: -5.959387302398682
    10. ' def' → logprob: -6.209387302398682

Token 1147: ' produce' (ID: 10635)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10863693803548813
    2. 'return' → logprob: -2.9836368560791016
    3. '       ' → logprob: -3.6086368560791016
    4. 'if' → logprob: -4.608636856079102
    5. ' def' → logprob: -5.358636856079102
    6. ' return' → logprob: -6.108636856079102
    7. 'pos' → logprob: -6.358636856079102
    8. '
' → logprob: -6.733636856079102
    9. '   ' → logprob: -6.858636856079102
    10. 'index' → logprob: -7.358636856079102

Token 1148: ' an' (ID: 448)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.3007628917694092
    2. ' an' → logprob: -1.3007628917694092
    3. 'def' → logprob: -1.4257628917694092
    4. 'an' → logprob: -2.550762891769409
    5. 'a' → logprob: -2.800762891769409
    6. ' a' → logprob: -3.925762891769409
    7. 'expr' → logprob: -4.425763130187988
    8. ' if' → logprob: -4.800763130187988
    9. 'tokens' → logprob: -4.800763130187988
    10. 'the' → logprob: -4.925763130187988

Token 1149: ' Expression' (ID: 32496)
  Prédit: 'Expression'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Expression' → logprob: -0.03777521476149559
    2. 'expression' → logprob: -3.6627752780914307
    3. 'expr' → logprob: -5.162775039672852
    4. ' Expression' → logprob: -5.787775039672852
    5. 'def' → logprob: -7.162775039672852
    6. '_expression' → logprob: -7.662775039672852
    7. 'if' → logprob: -7.662775039672852
    8. ' expression' → logprob: -8.162775039672852
    9. '   ' → logprob: -9.287775039672852
    10. 'Expr' → logprob: -9.412775039672852

Token 1150: ' that' (ID: 484)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.369840145111084
    2. '[
' → logprob: -1.869840145111084
    3. '       ' → logprob: -2.369840145111084
    4. '[' → logprob: -2.494840145111084
    5. 'tokens' → logprob: -2.619840145111084
    6. 'def' → logprob: -2.619840145111084
    7. 'from' → logprob: -3.119840145111084
    8. '   ' → logprob: -3.119840145111084
    9. '(
' → logprob: -3.369840145111084
    10. ':
' → logprob: -3.369840145111084

Token 1151: ' allows' (ID: 7927)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7468776702880859
    2. 'can' → logprob: -1.746877670288086
    3. '   ' → logprob: -1.996877670288086
    4. 'def' → logprob: -2.996877670288086
    5. '```' → logprob: -3.371877670288086
    6. ' can' → logprob: -3.621877670288086
    7. 'handles' → logprob: -3.621877670288086
    8. 'rep' → logprob: -3.871877670288086
    9. 'supports' → logprob: -4.121877670288086
    10. ' if' → logprob: -4.246877670288086

Token 1152: ' multiple' (ID: 7598)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.5509034991264343
    2. 'for' → logprob: -2.425903558731079
    3. 'spl' → logprob: -2.675903558731079
    4. 'multiple' → logprob: -3.300903558731079
    5. '   ' → logprob: -3.550903558731079
    6. 're' → logprob: -3.550903558731079
    7. 'to' → logprob: -3.800903558731079
    8. 'par' → logprob: -3.800903558731079
    9. 'evalu' → logprob: -3.800903558731079
    10. ' all' → logprob: -4.5509033203125

Token 1153: ' evaluation' (ID: 21407)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -1.6728488206863403
    2. 'ways' → logprob: -1.7978488206863403
    3. ' ways' → logprob: -1.9228488206863403
    4. 'token' → logprob: -2.047848701477051
    5. 'levels' → logprob: -2.297848701477051
    6. '   ' → logprob: -2.797848701477051
    7. 'def' → logprob: -3.672848701477051
    8. 'return' → logprob: -3.672848701477051
    9. '```' → logprob: -3.922848701477051
    10. 'spl' → logprob: -4.297848701477051

Token 1154: ' orders' (ID: 12528)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.3306584358215332
    2. '<|end|>' → logprob: -1.7056584358215332
    3. 'tokens' → logprob: -2.080658435821533
    4. '_tokens' → logprob: -2.830658435821533
    5. '_' → logprob: -2.955658435821533
    6. ':' → logprob: -3.080658435821533
    7. '   ' → logprob: -3.330658435821533
    8. '_all' → logprob: -3.705658435821533
    9. ' of' → logprob: -3.955658435821533
    10. '.' → logprob: -4.080658435821533

Token 1155: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02667192555963993
    2. ':' → logprob: -4.901671886444092
    3. 'if' → logprob: -5.651671886444092
    4. 'def' → logprob: -6.026671886444092
    5. ' if' → logprob: -6.026671886444092
    6. 'tokens' → logprob: -6.151671886444092
    7. '(' → logprob: -6.651671886444092
    8. '   ' → logprob: -6.776671886444092
    9. '(tokens' → logprob: -6.901671886444092
    10. '        
' → logprob: -7.151671886444092

Token 1156: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27657023072242737
    2. 'if' → logprob: -1.526570200920105
    3. 'def' → logprob: -4.5265703201293945
    4. ' if' → logprob: -4.7765703201293945
    5. 'stack' → logprob: -6.4015703201293945
    6. 'pos' → logprob: -7.0265703201293945
    7. 'i' → logprob: -7.1515703201293945
    8. '#' → logprob: -7.6515703201293945
    9. 'idx' → logprob: -7.9015703201293945
    10. 'index' → logprob: -8.276570320129395

Token 1157: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.33070677518844604
    2. '       ' → logprob: -1.3307068347930908
    3. ' if' → logprob: -4.455706596374512
    4. 'def' → logprob: -5.580706596374512
    5. 'i' → logprob: -6.580706596374512
    6. '```' → logprob: -8.955706596374512
    7. 'index' → logprob: -9.330706596374512
    8. ' i' → logprob: -9.330706596374512
    9. 'idx' → logprob: -9.830706596374512
    10. '   ' → logprob: -9.955706596374512

Token 1158: ' For' (ID: 2214)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9386855959892273
    2. '       ' → logprob: -1.188685655593872
    3. 'def' → logprob: -1.563685655593872
    4. 'i' → logprob: -2.813685655593872
    5. ' if' → logprob: -4.188685417175293
    6. ' i' → logprob: -5.313685417175293
    7. 'pos' → logprob: -5.438685417175293
    8. 'idx' → logprob: -5.813685417175293
    9. ' def' → logprob: -6.063685417175293
    10. 'index' → logprob: -6.188685417175293

Token 1159: ' Kit' (ID: 23793)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9133346080780029
    2. 'len' → logprob: -1.413334608078003
    3. 'self' → logprob: -1.538334608078003
    4. 'def' → logprob: -3.288334608078003
    5. 'not' → logprob: -3.913334608078003
    6. 'idx' → logprob: -4.538334846496582
    7. ' len' → logprob: -4.538334846496582
    8. ' self' → logprob: -4.663334846496582
    9. ' i' → logprob: -4.663334846496582
    10. 'tokens' → logprob: -4.788334846496582

Token 1160: 'am' (ID: 313)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0837010145187378
    2. ')' → logprob: -1.7087010145187378
    3. '(
' → logprob: -2.2087011337280273
    4. '[
' → logprob: -2.2087011337280273
    5. '[' → logprob: -2.8337011337280273
    6. '   ' → logprob: -2.9587011337280273
    7. ':
' → logprob: -3.5837011337280273
    8. '(' → logprob: -4.083701133728027
    9. '):' → logprob: -4.208701133728027
    10. '('' → logprob: -4.458701133728027

Token 1161: 'asa' (ID: 5643)
  Prédit: 'asa'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'asa' → logprob: -0.00556231290102005
    2. 'am' → logprob: -6.0055623054504395
    3. 'ama' → logprob: -6.3805623054504395
    4. '```' → logprob: -7.2555623054504395
    5. 'аса' → logprob: -8.755562782287598
    6. 'as' → logprob: -9.255562782287598
    7. 'amassa' → logprob: -9.755562782287598
    8. 'a' → logprob: -9.755562782287598
    9. '   ' → logprob: -9.880562782287598
    10. '
' → logprob: -10.630562782287598

Token 1162: '-k' (ID: 10897)
  Prédit: '-k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-k' → logprob: -0.04066650941967964
    2. '_k' → logprob: -3.2906665802001953
    3. '-' → logprob: -6.540666580200195
    4. '   ' → logprob: -8.790666580200195
    5. 'k' → logprob: -8.790666580200195
    6. '-ku' → logprob: -8.790666580200195
    7. 'class' → logprob: -8.915666580200195
    8. 'self' → logprob: -9.040666580200195
    9. ''-' → logprob: -10.040666580200195
    10. 'def' → logprob: -10.290666580200195

Token 1163: 'un' (ID: 373)
  Prédit: 'un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.0009125363430939615
    2. 'u' → logprob: -7.125912666320801
    3. 'n' → logprob: -9.2509126663208
    4. '-un' → logprob: -13.2509126663208
    5. '```' → logprob: -13.3759126663208
    6. ''un' → logprob: -13.5009126663208
    7. '-' → logprob: -13.7509126663208
    8. 'unk' → logprob: -14.1259126663208
    9. ''' → logprob: -14.3759126663208
    10. 'class' → logprob: -15.0009126663208

Token 1164: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1890385150909424
    2. ',' → logprob: -1.4390385150909424
    3. '       ' → logprob: -1.9390385150909424
    4. 'if' → logprob: -2.1890385150909424
    5. ':' → logprob: -2.4390385150909424
    6. ' if' → logprob: -2.6890385150909424
    7. ')' → logprob: -4.439038276672363
    8. '):
' → logprob: -4.939038276672363
    9. 'tokens' → logprob: -5.064038276672363
    10. '):' → logprob: -5.314038276672363

Token 1165: ' all' (ID: 722)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3112561106681824
    2. 'if' → logprob: -1.8112561702728271
    3. '       ' → logprob: -2.811256170272827
    4. ' def' → logprob: -4.186255931854248
    5. 'i' → logprob: -4.311255931854248
    6. ' if' → logprob: -5.436255931854248
    7. '#' → logprob: -5.561255931854248
    8. 'pos' → logprob: -5.811255931854248
    9. 'idx' → logprob: -6.061255931854248
    10. ' i' → logprob: -7.311255931854248

Token 1166: ' possible' (ID: 4149)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.14898893237113953
    2. ')' → logprob: -3.273988962173462
    3. 'token' → logprob: -4.023988723754883
    4. ' tokens' → logprob: -4.148988723754883
    5. 'operators' → logprob: -4.773988723754883
    6. 'ways' → logprob: -4.773988723754883
    7. ':' → logprob: -5.273988723754883
    8. '):' → logprob: -5.398988723754883
    9. 'op' → logprob: -5.398988723754883
    10. 'if' → logprob: -5.523988723754883

Token 1167: ' _' (ID: 1175)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7522051930427551
    2. 'def' → logprob: -1.3772051334381104
    3. 'spl' → logprob: -2.1272051334381104
    4. 'ways' → logprob: -3.7522051334381104
    5. 'express' → logprob: -3.7522051334381104
    6. '   ' → logprob: -4.2522053718566895
    7. '```' → logprob: -4.2522053718566895
    8. ' if' → logprob: -4.5022053718566895
    9. 'split' → logprob: -4.5022053718566895
    10. ')' → logprob: -5.5022053718566895

Token 1168: 'parent' (ID: 4903)
  Prédit: 'spl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spl' → logprob: -1.4479451179504395
    2. 'def' → logprob: -1.6979451179504395
    3. 'ways' → logprob: -2.0729451179504395
    4. 'tokens' → logprob: -2.4479451179504395
    5. 'parent' → logprob: -2.5729451179504395
    6. 'token' → logprob: -2.9479451179504395
    7. ')' → logprob: -3.3229451179504395
    8. 'express' → logprob: -3.6979451179504395
    9. 'binary' → logprob: -3.8229451179504395
    10. ' ways' → logprob: -4.0729451179504395

Token 1169: 'hes' (ID: 9780)
  Prédit: 'hes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hes' → logprob: -0.30015143752098083
    2. 'heses' → logprob: -1.4251514673233032
    3. 'h' → logprob: -4.175151348114014
    4. 'hesis' → logprob: -5.800151348114014
    5. '```' → logprob: -8.550151824951172
    6. ')' → logprob: -8.925151824951172
    7. 'hs' → logprob: -10.425151824951172
    8. '#' → logprob: -11.425151824951172
    9. '   ' → logprob: -11.800151824951172
    10. '()' → logprob: -12.300151824951172

Token 1170: 'izations' (ID: 25434)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.9317049980163574
    2. 'izations' → logprob: -1.4317049980163574
    3. 'ized' → logprob: -2.0567049980163574
    4. '```' → logprob: -2.4317049980163574
    5. 'ization' → logprob: -3.9317049980163574
    6. ')' → logprob: -4.056704998016357
    7. '#' → logprob: -4.056704998016357
    8. 'izes' → logprob: -4.181704998016357
    9. '   ' → logprob: -4.181704998016357
    10. 'ections' → logprob: -4.556704998016357

Token 1171: '_' (ID: 62)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' are' → logprob: -1.3605687618255615
    2. ' must' → logprob: -1.6105687618255615
    3. 'must' → logprob: -2.2355687618255615
    4. ' of' → logprob: -2.2355687618255615
    5. 'are' → logprob: -2.2355687618255615
    6. 'of' → logprob: -2.9855687618255615
    7. ',' → logprob: -2.9855687618255615
    8. 'def' → logprob: -3.7355687618255615
    9. '=' → logprob: -3.9855687618255615
    10. ' =' → logprob: -4.610569000244141

Token 1172: ' correspond' (ID: 11095)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.7533794641494751
    2. ' must' → logprob: -2.1283793449401855
    3. ':' → logprob: -2.5033793449401855
    4. ',' → logprob: -2.7533793449401855
    5. '<|end|>' → logprob: -3.1283793449401855
    6. ')' → logprob: -3.2533793449401855
    7. ' tokens' → logprob: -3.7533793449401855
    8. ' =' → logprob: -4.1283793449401855
    9. '       ' → logprob: -4.2533793449401855
    10. ' if' → logprob: -4.3783793449401855

Token 1173: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.6979997158050537
    2. 'to' → logprob: -0.6979997158050537
    3. '=' → logprob: -6.322999954223633
    4. '       ' → logprob: -6.947999954223633
    5. '_tokens' → logprob: -7.322999954223633
    6. '<|end|>' → logprob: -8.072999954223633
    7. ')' → logprob: -8.322999954223633
    8. '_to' → logprob: -8.322999954223633
    9. 'tokens' → logprob: -9.197999954223633
    10. '   ' → logprob: -9.697999954223633

Token 1174: ' different' (ID: 2647)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.580955982208252
    2. 'express' → logprob: -2.205955982208252
    3. 'the' → logprob: -2.205955982208252
    4. 'a' → logprob: -2.580955982208252
    5. 'all' → logprob: -3.455955982208252
    6. 'def' → logprob: -3.455955982208252
    7. 'tokens' → logprob: -3.705955982208252
    8. 'par' → logprob: -4.830955982208252
    9. 'an' → logprob: -4.955955982208252
    10. 'sub' → logprob: -5.205955982208252

Token 1175: ' computation' (ID: 76411)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.4311276078224182
    2. 'spl' → logprob: -1.9311275482177734
    3. 'if' → logprob: -3.4311275482177734
    4. ' ways' → logprob: -3.6811275482177734
    5. 'split' → logprob: -3.9311275482177734
    6. '   ' → logprob: -4.056127548217773
    7. '```' → logprob: -4.181127548217773
    8. 'def' → logprob: -4.181127548217773
    9. 'length' → logprob: -5.056127548217773
    10. 'express' → logprob: -5.181127548217773

Token 1176: ' orders' (ID: 12528)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5406885147094727
    2. 'tokens' → logprob: -2.1656885147094727
    3. 'orders' → logprob: -2.7906885147094727
    4. ' tokens' → logprob: -2.9156885147094727
    5. '   ' → logprob: -3.2906885147094727
    6. ' orders' → logprob: -3.5406885147094727
    7. ' of' → logprob: -3.9156885147094727
    8. ' s' → logprob: -4.040688514709473
    9. '_tokens' → logprob: -4.915688514709473
    10. ' ways' → logprob: -4.915688514709473

Token 1177: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21475930511951447
    2. ' if' → logprob: -2.089759349822998
    3. 'if' → logprob: -3.589759349822998
    4. ',' → logprob: -4.089759349822998
    5. ':' → logprob: -4.464759349822998
    6. ')' → logprob: -5.464759349822998
    7. '.' → logprob: -6.464759349822998
    8. ':
' → logprob: -6.964759349822998
    9. 'tokens' → logprob: -7.089759349822998
    10. '        
' → logprob: -7.339759349822998

Token 1178: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25543904304504395
    2. 'if' → logprob: -1.505439043045044
    3. ' if' → logprob: -6.130438804626465
    4. 'def' → logprob: -7.130438804626465
    5. '#' → logprob: -8.755438804626465
    6. '```' → logprob: -8.880438804626465
    7. 'index' → logprob: -9.880438804626465
    8. 'idx' → logprob: -10.005438804626465
    9. 'i' → logprob: -10.130438804626465
    10. 'pos' → logprob: -10.380438804626465

Token 1179: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7408755421638489
    2. 'if' → logprob: -0.7408755421638489
    3. 'def' → logprob: -3.490875482559204
    4. ' if' → logprob: -4.490875720977783
    5. '#' (adapté à ' #') → logprob: -5.615875720977783
    6. 'i' → logprob: -7.740875720977783
    7. ' def' → logprob: -8.615875244140625
    8. 'pos' → logprob: -8.865875244140625
    9. 'stack' → logprob: -8.990875244140625
    10. '```' → logprob: -9.490875244140625

Token 1180: ' So' (ID: 2632)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.11197289079427719
    2. 'def' → logprob: -2.8619728088378906
    3. '       ' → logprob: -3.1119728088378906
    4. '#' → logprob: -5.611972808837891
    5. 'stack' → logprob: -8.36197280883789
    6. 'i' → logprob: -8.48697280883789
    7. 'pos' → logprob: -10.23697280883789
    8. ' if' → logprob: -10.23697280883789
    9. 'idx' → logprob: -10.73697280883789
    10. '
' → logprob: -10.73697280883789

Token 1181: ' we' (ID: 581)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.13559231162071228
    2. 'def' → logprob: -2.135592222213745
    3. '       ' → logprob: -4.885592460632324
    4. '#' → logprob: -7.385592460632324
    5. ' if' → logprob: -8.510592460632324
    6. 'i' → logprob: -9.260592460632324
    7. '   ' → logprob: -9.760592460632324
    8. ' def' → logprob: -10.385592460632324
    9. '
' → logprob: -10.760592460632324
    10. 'pos' → logprob: -10.885592460632324

Token 1182: ' parse' (ID: 8420)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0742238238453865
    2. ' def' → logprob: -3.074223756790161
    3. '   ' → logprob: -4.07422399520874
    4. 'if' → logprob: -5.57422399520874
    5. ' if' → logprob: -6.44922399520874
    6. '
' → logprob: -6.82422399520874
    7. '       ' → logprob: -6.82422399520874
    8. 'return' → logprob: -8.449223518371582
    9. 'import' → logprob: -9.449223518371582
    10. '#' → logprob: -9.699223518371582

Token 1183: ' to' (ID: 316)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5074375867843628
    2. 'if' → logprob: -1.0074375867843628
    3. 'self' → logprob: -4.382437705993652
    4. ')' → logprob: -5.382437705993652
    5. 'i' → logprob: -5.632437705993652
    6. 'idx' → logprob: -5.757437705993652
    7. 'tokens' → logprob: -6.007437705993652
    8. '#' → logprob: -6.632437705993652
    9. '       ' → logprob: -6.882437705993652
    10. 'pos' → logprob: -7.382437705993652

Token 1184: ' AST' (ID: 41607)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7222621440887451
    2. 'self' → logprob: -1.2222621440887451
    3. 'parse' → logprob: -2.847262144088745
    4. 'a' → logprob: -3.722262144088745
    5. 'an' → logprob: -3.722262144088745
    6. '[]' → logprob: -3.972262144088745
    7. 'Expression' → logprob: -4.347262382507324
    8. ')' → logprob: -4.472262382507324
    9. 'build' → logprob: -4.472262382507324
    10. 'tokens' → logprob: -4.722262382507324

Token 1185: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5758236646652222
    2. 'def' → logprob: -1.0758236646652222
    3. '(self' → logprob: -3.8258237838745117
    4. '   ' → logprob: -4.200823783874512
    5. 'from' → logprob: -4.325823783874512
    6. ',' → logprob: -4.450823783874512
    7. ')' → logprob: -4.575823783874512
    8. 'self' → logprob: -5.075823783874512
    9. 'if' → logprob: -5.700823783874512
    10. 'tokens' → logprob: -6.075823783874512

Token 1186: ' minimal' (ID: 19957)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.1942827701568604
    2. 'def' → logprob: -1.1942827701568604
    3. 'parent' → logprob: -2.0692827701568604
    4. '[]' → logprob: -2.9442827701568604
    5. 'self' → logprob: -3.0692827701568604
    6. 'tokens' → logprob: -3.0692827701568604
    7. 'explicit' → logprob: -3.9442827701568604
    8. 'the' → logprob: -3.9442827701568604
    9. 'preced' → logprob: -4.069282531738281
    10. 'len' → logprob: -4.319282531738281

Token 1187: ' structure' (ID: 8866)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.020668864250183
    2. ')' → logprob: -1.645668864250183
    3. '```' → logprob: -1.895668864250183
    4. 'preced' → logprob: -3.1456689834594727
    5. 'length' → logprob: -3.2706689834594727
    6. 'tokens' → logprob: -3.3956689834594727
    7. '   ' → logprob: -3.7706689834594727
    8. 'node' → logprob: -4.145668983459473
    9. ' precedence' → logprob: -4.395668983459473
    10. ' def' → logprob: -4.645668983459473

Token 1188: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37801113724708557
    2. 'if' → logprob: -1.8780111074447632
    3. 'def' → logprob: -2.6280112266540527
    4. ' if' → logprob: -3.6280112266540527
    5. ':' → logprob: -3.7530112266540527
    6. ',' → logprob: -4.878011226654053
    7. 'tokens' → logprob: -4.878011226654053
    8. '   ' → logprob: -5.253011226654053
    9. ')' → logprob: -5.503011226654053
    10. ' =' → logprob: -5.753011226654053

Token 1189: ' numbers' (ID: 8663)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5439139604568481
    2. ' if' → logprob: -1.6689139604568481
    3. '       ' → logprob: -2.2939138412475586
    4. 'def' → logprob: -2.2939138412475586
    5. ' def' → logprob: -3.7939138412475586
    6. 'i' → logprob: -6.418913841247559
    7. ' i' → logprob: -6.668913841247559
    8. 'pos' → logprob: -7.168913841247559
    9. 'stack' → logprob: -7.168913841247559
    10. '```' → logprob: -7.293913841247559

Token 1190: ' and' (ID: 326)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -1.0782122611999512
    2. ',' → logprob: -1.3282122611999512
    3. ' if' → logprob: -2.453212261199951
    4. ' and' → logprob: -2.453212261199951
    5. ')' → logprob: -2.703212261199951
    6. '       ' → logprob: -2.828212261199951
    7. 'if' → logprob: -3.328212261199951
    8. 'or' → logprob: -4.203212261199951
    9. 'and' → logprob: -4.203212261199951
    10. '|' → logprob: -5.078212261199951

Token 1191: ' sub' (ID: 1543)
  Prédit: 'Binary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Binary' → logprob: -0.294841468334198
    2. 'binary' → logprob: -2.1698415279388428
    3. 'operators' → logprob: -2.6698415279388428
    4. 'ops' → logprob: -3.5448415279388428
    5. '[' → logprob: -4.044841289520264
    6. 'parent' → logprob: -5.419841289520264
    7. '[(' → logprob: -5.419841289520264
    8. '['' → logprob: -5.794841289520264
    9. 'operations' → logprob: -6.169841289520264
    10. '[
' → logprob: -6.544841289520264

Token 1192: 'express' (ID: 23787)
  Prédit: 'express'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'express' → logprob: -0.06339076161384583
    2. 'tokens' → logprob: -4.188390731811523
    3. 'expression' → logprob: -4.438390731811523
    4. 'expr' → logprob: -4.438390731811523
    5. 'se' → logprob: -5.313390731811523
    6. 'trees' → logprob: -5.313390731811523
    7. 'class' → logprob: -5.438390731811523
    8. '-ex' → logprob: -6.938390731811523
    9. 'ex' → logprob: -7.063390731811523
    10. ' expressions' → logprob: -7.063390731811523

Token 1193: 'ions' (ID: 756)
  Prédit: 'ions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ions' → logprob: -0.0013421354815363884
    2. 's' → logprob: -6.876342296600342
    3. 'ion' → logprob: -8.501341819763184
    4. 'pressions' → logprob: -9.251341819763184
    5. 'essions' → logprob: -12.251341819763184
    6. 'ons' → logprob: -13.001341819763184
    7. '   ' → logprob: -13.626341819763184
    8. '```' → logprob: -14.876341819763184
    9. ')' → logprob: -15.001341819763184
    10. '
' → logprob: -15.126341819763184

Token 1194: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41570422053337097
    2. ' if' → logprob: -2.1657042503356934
    3. 'if' → logprob: -2.4157042503356934
    4. ',' → logprob: -3.0407042503356934
    5. ')' → logprob: -3.5407042503356934
    6. 'def' → logprob: -3.9157042503356934
    7. ':' → logprob: -4.165704250335693
    8. 'tokens' → logprob: -4.915704250335693
    9. '):' → logprob: -5.415704250335693
    10. '```' → logprob: -6.040704250335693

Token 1195: ' operators' (ID: 29893)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.10069474577903748
    2. 'tokens' → logprob: -3.8506946563720703
    3. 'explicit' → logprob: -3.9756946563720703
    4. 'Parent' → logprob: -4.22569465637207
    5. ' parentheses' → logprob: -5.60069465637207
    6. 'possible' → logprob: -5.72569465637207
    7. 'preced' → logprob: -5.72569465637207
    8. 'operators' → logprob: -5.72569465637207
    9. '_parent' → logprob: -6.35069465637207
    10. '[]' → logprob: -6.35069465637207

Token 1196: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8785293102264404
    2. ' if' → logprob: -1.3785293102264404
    3. ':' → logprob: -2.0035293102264404
    4. ',' → logprob: -2.6285293102264404
    5. 'def' → logprob: -3.2535293102264404
    6. 'if' → logprob: -3.8785293102264404
    7. ')' → logprob: -4.0035295486450195
    8. 'tokens' → logprob: -5.0035295486450195
    9. '```' → logprob: -5.2535295486450195
    10. ' tokens' → logprob: -5.3785295486450195

Token 1197: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47673729062080383
    2. 'if' → logprob: -0.9767372608184814
    3. ' if' → logprob: -6.2267374992370605
    4. 'def' → logprob: -8.101737022399902
    5. '```' → logprob: -8.976737022399902
    6. '#' → logprob: -9.226737022399902
    7. '   ' → logprob: -9.976737022399902
    8. 'tokens' → logprob: -10.101737022399902
    9. '
' → logprob: -10.476737022399902
    10. '        
' → logprob: -11.476737022399902

Token 1198: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5946351885795593
    2. 'if' → logprob: -0.8446351885795593
    3. '       ' → logprob: -4.094635009765625
    4. '#' (adapté à ' #') → logprob: -6.719635009765625
    5. 'stack' → logprob: -7.969635009765625
    6. '   ' → logprob: -9.344635009765625
    7. ' def' → logprob: -9.469635009765625
    8. 'pos' → logprob: -9.719635009765625
    9. ' if' → logprob: -10.219635009765625
    10. '```' → logprob: -11.719635009765625

Token 1199: ' '' (ID: 461)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.28810644149780273
    2. 'def' → logprob: -1.7881064414978027
    3. '       ' → logprob: -2.5381064414978027
    4. 'i' → logprob: -6.413106441497803
    5. '#' → logprob: -6.538106441497803
    6. 'stack' → logprob: -8.163106918334961
    7. 'pos' → logprob: -9.038106918334961
    8. 'idx' → logprob: -9.038106918334961
    9. 'index' → logprob: -9.413106918334961
    10. ' if' → logprob: -9.413106918334961

Token 1200: 'tokens' (ID: 64329)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.48103076219558716
    2. 'if' → logprob: -0.9810307621955872
    3. '#' → logprob: -5.1060309410095215
    4. '       ' → logprob: -7.8560309410095215
    5. '   ' → logprob: -8.856030464172363
    6. 'pos' → logprob: -8.981030464172363
    7. 'stack' → logprob: -9.856030464172363
    8. '
' → logprob: -9.981030464172363
    9. 'i' → logprob: -10.356030464172363
    10. 'idx' → logprob: -11.106030464172363

Token 1201: ''' (ID: 6)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.256333589553833
    2. ' =' → logprob: -1.381333589553833
    3. '=' → logprob: -2.006333589553833
    4. ')' → logprob: -2.006333589553833
    5. '=[]' → logprob: -2.881333589553833
    6. ':' → logprob: -3.256333589553833
    7. '_tokens' → logprob: -4.006333351135254
    8. ',' → logprob: -4.506333351135254
    9. '<|end|>' → logprob: -4.631333351135254
    10. '<|end|>' → logprob: -5.006333351135254

Token 1202: ' is' (ID: 382)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20131206512451172
    2. 'def' → logprob: -2.4513120651245117
    3. ' =' → logprob: -3.8263120651245117
    4. '<|end|>' → logprob: -3.8263120651245117
    5. 'if' → logprob: -3.9513120651245117
    6. '=[]' → logprob: -4.576312065124512
    7. ')' → logprob: -5.201312065124512
    8. ':' → logprob: -6.201312065124512
    9. '_tokens' → logprob: -6.201312065124512
    10. '<|end|>' → logprob: -6.326312065124512

Token 1203: ' list' (ID: 1562)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2069227546453476
    2. 'tokens' → logprob: -2.581922769546509
    3. '[]' → logprob: -3.081922769546509
    4. 'def' → logprob: -3.956922769546509
    5. ' self' → logprob: -4.20692253112793
    6. '[' → logprob: -4.70692253112793
    7. 'a' → logprob: -4.95692253112793
    8. '   ' → logprob: -5.70692253112793
    9. '[]
' → logprob: -6.08192253112793
    10. '[self' → logprob: -6.20692253112793

Token 1204: ' of' (ID: 328)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.096782922744751
    2. '[
' → logprob: -1.971782922744751
    3. ' of' → logprob: -1.971782922744751
    4. '=' → logprob: -2.346782922744751
    5. ' =' → logprob: -2.471782922744751
    6. 'of' → logprob: -2.721782922744751
    7. ':' → logprob: -3.096782922744751
    8. ',' → logprob: -3.346782922744751
    9. '<|end|>' → logprob: -4.971782684326172
    10. '=[
' → logprob: -5.096782684326172

Token 1205: ' numbers' (ID: 8663)
  Prédit: 'Union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Union' → logprob: -0.05527874082326889
    2. 'tokens' → logprob: -2.930278778076172
    3. 'token' → logprob: -8.930278778076172
    4. 'objects' → logprob: -9.555278778076172
    5. 'int' → logprob: -9.680278778076172
    6. ' Union' → logprob: -10.305278778076172
    7. ' tokens' → logprob: -10.555278778076172
    8. 'union' → logprob: -10.805278778076172
    9. 'object' → logprob: -11.180278778076172
    10. '[' → logprob: -11.805278778076172

Token 1206: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6800371408462524
    2. '[' → logprob: -1.9300371408462524
    3. ':' → logprob: -2.805037021636963
    4. ' or' → logprob: -2.805037021636963
    5. '       ' → logprob: -3.055037021636963
    6. ')' → logprob: -3.305037021636963
    7. '<|end|>' → logprob: -3.555037021636963
    8. '[
' → logprob: -3.930037021636963
    9. ' and' → logprob: -4.055037021636963
    10. ':
' → logprob: -4.805037021636963

Token 1207: ' operators' (ID: 29893)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.01477013248950243
    2. ''' → logprob: -4.764770030975342
    3. ''s' → logprob: -6.514770030975342
    4. 'strings' → logprob: -6.639770030975342
    5. ' str' → logprob: -7.014770030975342
    6. 'operators' → logprob: -7.389770030975342
    7. '   ' → logprob: -7.889770030975342
    8. 'or' → logprob: -8.1397705078125
    9. '[str' → logprob: -8.2647705078125
    10. ' or' → logprob: -9.1397705078125

Token 1208: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1269369274377823
    2. 'and' → logprob: -3.126936912536621
    3. 'or' → logprob: -3.626936912536621
    4. ' or' → logprob: -4.626936912536621
    5. ']' → logprob: -4.751936912536621
    6. ')' → logprob: -4.751936912536621
    7. ' and' → logprob: -5.376936912536621
    8. ':' → logprob: -5.751936912536621
    9. '       ' → logprob: -6.501936912536621
    10. ',
' → logprob: -6.626936912536621

Token 1209: ' parentheses' (ID: 180602)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.28205686807632446
    2. ' and' → logprob: -1.9070568084716797
    3. ''' → logprob: -2.9070568084716797
    4. 'or' → logprob: -3.9070568084716797
    5. ' or' → logprob: -4.28205680847168
    6. 'parent' → logprob: -5.53205680847168
    7. 'strings' → logprob: -6.90705680847168
    8. '       ' → logprob: -7.15705680847168
    9. 'str' → logprob: -7.15705680847168
    10. '"' → logprob: -7.78205680847168

Token 1210: ' (' (ID: 350)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8994003534317017
    2. '       ' → logprob: -1.0244003534317017
    3. ' if' → logprob: -2.024400234222412
    4. ')' → logprob: -3.524400234222412
    5. 'def' → logprob: -3.524400234222412
    6. '   ' → logprob: -4.274400234222412
    7. ':' → logprob: -4.399400234222412
    8. ',' → logprob: -5.274400234222412
    9. '```' → logprob: -5.899400234222412
    10. ' =' → logprob: -6.649400234222412

Token 1211: 'remaining' (ID: 83570)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4672201871871948
    2. ',' → logprob: -1.8422201871871948
    3. '):
' → logprob: -3.0922203063964844
    4. 'def' → logprob: -3.2172203063964844
    5. '   ' → logprob: -3.5922203063964844
    6. '       ' → logprob: -3.8422203063964844
    7. '):' → logprob: -3.9672203063964844
    8. 'index' → logprob: -4.342220306396484
    9. ']' → logprob: -4.592220306396484
    10. '[' → logprob: -5.092220306396484

Token 1212: ' after' (ID: 1934)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19365470111370087
    2. 'tokens' → logprob: -2.568654775619507
    3. ',' → logprob: -3.443654775619507
    4. ']' → logprob: -3.568654775619507
    5. '[' → logprob: -4.318654537200928
    6. ')
' → logprob: -5.568654537200928
    7. '])' → logprob: -5.568654537200928
    8. '):' → logprob: -5.943654537200928
    9. 'and' → logprob: -6.068654537200928
    10. '')' → logprob: -6.443654537200928

Token 1213: ' token' (ID: 6602)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.22404199838638306
    2. 'rem' → logprob: -2.4740419387817383
    3. 'token' → logprob: -3.5990419387817383
    4. 'cons' → logprob: -4.599041938781738
    5. 'self' → logprob: -4.724041938781738
    6. 'parent' → logprob: -4.724041938781738
    7. 'filter' → logprob: -4.849041938781738
    8. ' parsing' → logprob: -4.849041938781738
    9. 're' → logprob: -4.974041938781738
    10. 'def' → logprob: -5.099041938781738

Token 1214: 'izing' (ID: 6396)
  Prédit: 'ize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ize' → logprob: -0.2931469678878784
    2. 's' → logprob: -1.5431469678878784
    3. ')' → logprob: -3.668147087097168
    4. 'list' → logprob: -4.668147087097168
    5. '_list' → logprob: -6.293147087097168
    6. 'ization' → logprob: -6.543147087097168
    7. 'ized' → logprob: -7.668147087097168
    8. 'izer' → logprob: -7.793147087097168
    9. ']' → logprob: -8.543147087097168
    10. 'stream' → logprob: -9.293147087097168

Token 1215: ').

' (ID: 3991)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7363550066947937
    2. ')
' → logprob: -0.9863550066947937
    3. '):
' → logprob: -2.9863550662994385
    4. '):' → logprob: -3.4863550662994385
    5. '
' → logprob: -4.111354827880859
    6. ',' → logprob: -4.236354827880859
    7. ']' → logprob: -5.361354827880859
    8. 'if' → logprob: -5.486354827880859
    9. '[' → logprob: -5.736354827880859
    10. ':' → logprob: -5.861354827880859

Token 1216: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31921085715293884
    2. 'if' → logprob: -1.3192108869552612
    3. 'def' → logprob: -5.569211006164551
    4. ' if' → logprob: -6.444211006164551
    5. '```' → logprob: -8.06921100616455
    6. '   ' → logprob: -9.06921100616455
    7. '#' → logprob: -10.31921100616455
    8. 'tokens' → logprob: -10.69421100616455
    9. 'index' → logprob: -11.44421100616455
    10. 'i' → logprob: -11.44421100616455

Token 1217: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3282531797885895
    2. 'def' → logprob: -1.328253149986267
    3. 'stack' → logprob: -4.828253269195557
    4. '       ' → logprob: -5.578253269195557
    5. '#' (adapté à ' #') → logprob: -5.828253269195557
    6. '   ' → logprob: -9.328252792358398
    7. 'pos' → logprob: -10.328252792358398
    8. ' if' → logprob: -11.703252792358398
    9. ' def' → logprob: -11.828252792358398
    10. '        
' → logprob: -12.203252792358398

Token 1218: ' We'll' (ID: 46830)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.37887829542160034
    2. 'if' → logprob: -1.3788783550262451
    3. 'stack' → logprob: -2.878878355026245
    4. '       ' → logprob: -5.253878116607666
    5. 'pos' → logprob: -7.003878116607666
    6. '#' → logprob: -7.753878116607666
    7. 'i' → logprob: -8.378878593444824
    8. 'idx' → logprob: -8.503878593444824
    9. '   ' → logprob: -8.753878593444824
    10. 'index' → logprob: -9.253878593444824

Token 1219: ' implement' (ID: 6365)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3537890613079071
    2. ' def' → logprob: -1.3537890911102295
    3. '       ' → logprob: -3.9787890911102295
    4. 'if' → logprob: -4.72878885269165
    5. '   ' → logprob: -5.10378885269165
    6. ' if' → logprob: -5.22878885269165
    7. '```' → logprob: -8.853789329528809
    8. '#' → logprob: -9.353789329528809
    9. 'stack' → logprob: -9.603789329528809
    10. 'return' → logprob: -9.978789329528809

Token 1220: ' a' (ID: 261)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00911497138440609
    2. ' def' → logprob: -4.759114742279053
    3. '       ' → logprob: -8.259115219116211
    4. '   ' → logprob: -8.509115219116211
    5. 'self' → logprob: -10.759115219116211
    6. '```' → logprob: -11.134115219116211
    7. 'a' → logprob: -14.259115219116211
    8. 'if' → logprob: -14.384115219116211
    9. '	def' → logprob: -14.759115219116211
    10. '
' → logprob: -14.759115219116211

Token 1221: ' function' (ID: 1114)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0006421420839615166
    2. 'stack' → logprob: -8.500641822814941
    3. 'helper' → logprob: -8.750641822814941
    4. ' def' → logprob: -8.875641822814941
    5. '   ' → logprob: -9.750641822814941
    6. 'recursive' → logprob: -9.750641822814941
    7. 'parser' → logprob: -12.250641822814941
    8. 'self' → logprob: -12.500641822814941
    9. '       ' → logprob: -12.500641822814941
    10. 'parse' → logprob: -13.125641822814941

Token 1222: ' to' (ID: 316)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.012642314657568932
    2. ' def' → logprob: -4.7626423835754395
    3. '       ' → logprob: -6.0126423835754395
    4. 'self' → logprob: -7.2626423835754395
    5. '   ' → logprob: -7.5126423835754395
    6. ' self' → logprob: -9.012641906738281
    7. '
' → logprob: -10.262641906738281
    8. '(self' → logprob: -10.262641906738281
    9. ' that' → logprob: -10.637641906738281
    10. '(' → logprob: -11.137641906738281

Token 1223: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.03434327244758606
    2. 'def' → logprob: -4.534343242645264
    3. 'consume' → logprob: -4.659343242645264
    4. 'self' → logprob: -5.534343242645264
    5. '_parse' → logprob: -5.909343242645264
    6. ' parse' → logprob: -6.159343242645264
    7. 'build' → logprob: -6.909343242645264
    8. '   ' → logprob: -7.034343242645264
    9. 'process' → logprob: -7.409343242645264
    10. 'extract' → logprob: -7.534343242645264

Token 1224: ' tokens' (ID: 20290)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.015589200891554356
    2. 'self' → logprob: -4.265589237213135
    3. 'tokens' → logprob: -7.765589237213135
    4. ' def' → logprob: -8.265588760375977
    5. 'pos' → logprob: -8.765588760375977
    6. '```' → logprob: -9.140588760375977
    7. 'index' → logprob: -9.265588760375977
    8. 'i' → logprob: -9.640588760375977
    9. 'expr' → logprob: -9.890588760375977
    10. '(self' → logprob: -10.015588760375977

Token 1225: ' into' (ID: 1511)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6851783394813538
    2. '(self' → logprob: -0.8101783394813538
    3. '   ' → logprob: -4.435178279876709
    4. '       ' → logprob: -4.560178279876709
    5. '(
' → logprob: -4.560178279876709
    6. 'self' → logprob: -4.935178279876709
    7. '(' → logprob: -5.060178279876709
    8. 'from' → logprob: -5.685178279876709
    9. ' def' → logprob: -8.060178756713867
    10. ',' → logprob: -8.185178756713867

Token 1226: ' expression' (ID: 12973)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1688610464334488
    2. 'a' → logprob: -2.543861150741577
    3. 'self' → logprob: -3.668861150741577
    4. 'Expression' → logprob: -4.043860912322998
    5. 'an' → logprob: -4.168860912322998
    6. 'expr' → logprob: -4.418860912322998
    7. 'expression' → logprob: -5.543860912322998
    8. ' def' → logprob: -7.293860912322998
    9. '#' → logprob: -8.043861389160156
    10. '(self' → logprob: -8.418861389160156

Token 1227: ' recursively' (ID: 130266)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.1448259800672531
    2. 'def' → logprob: -2.3948259353637695
    3. 'self' → logprob: -4.2698259353637695
    4. '       ' → logprob: -4.5198259353637695
    5. '   ' → logprob: -5.0198259353637695
    6. ',' → logprob: -6.0198259353637695
    7. '_tokens' → logprob: -6.5198259353637695
    8. 'from' → logprob: -6.5198259353637695
    9. '(
' → logprob: -6.7698259353637695
    10. 'tokens' → logprob: -6.8948259353637695

Token 1228: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5516225099563599
    2. '       ' → logprob: -1.1766225099563599
    3. '   ' → logprob: -2.5516223907470703
    4. '(self' → logprob: -3.8016223907470703
    5. ',' → logprob: -4.55162239074707
    6. ' def' → logprob: -6.67662239074707
    7. '(' → logprob: -6.80162239074707
    8. 'self' → logprob: -7.30162239074707
    9. '
' → logprob: -7.55162239074707
    10. '(
' → logprob: -8.05162239074707

Token 1229: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02202608436346054
    2. 'def' → logprob: -4.147026062011719
    3. '   ' → logprob: -5.772026062011719
    4. '
' → logprob: -6.522026062011719
    5. '        
' → logprob: -7.647026062011719
    6. ' def' → logprob: -7.897026062011719
    7. '```' → logprob: -8.272026062011719
    8. '    
' → logprob: -8.522026062011719
    9. '           ' → logprob: -11.272026062011719
    10. ',' → logprob: -11.397026062011719

Token 1230: ' def' (ID: 1056)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0603005513548851
    2. 'def' (adapté à ' def') → logprob: -2.935300588607788
    3. ' def' → logprob: -5.560300350189209
    4. '   ' → logprob: -7.185300350189209
    5. 'index' → logprob: -8.560300827026367
    6. '
' → logprob: -8.935300827026367
    7. '        
' → logprob: -9.060300827026367
    8. 'tokens' → logprob: -9.435300827026367
    9. 'return' → logprob: -9.935300827026367
    10. '```' → logprob: -10.310300827026367

Token 1231: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.0015298592625185847
    2. '_parse' → logprob: -6.626529693603516
    3. ' parse' → logprob: -9.501529693603516
    4. 'helper' → logprob: -9.876529693603516
    5. '_helper' → logprob: -10.126529693603516
    6. '_parser' → logprob: -11.251529693603516
    7. '_inner' → logprob: -11.251529693603516
    8. 'inner' → logprob: -13.001529693603516
    9. 'expr' → logprob: -13.126529693603516
    10. '_expr' → logprob: -13.251529693603516

Token 1232: '_tokens' (ID: 65830)
  Prédit: '_tokens'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tokens' → logprob: -0.6730156540870667
    2. '_expression' → logprob: -0.9230156540870667
    3. '_expr' → logprob: -2.798015594482422
    4. 'tokens' → logprob: -4.673015594482422
    5. '(index' → logprob: -5.048015594482422
    6. '(tokens' → logprob: -5.298015594482422
    7. '(i' → logprob: -5.923015594482422
    8. 'expr' → logprob: -6.548015594482422
    9. '(idx' → logprob: -6.548015594482422
    10. '(' → logprob: -6.798015594482422

Token 1233: '(ts' (ID: 70166)
  Prédit: '(tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(tokens' → logprob: -0.1930239051580429
    2. '(i' → logprob: -2.568023920059204
    3. '(index' → logprob: -2.818023920059204
    4. '(idx' → logprob: -3.693023920059204
    5. '(self' → logprob: -5.193023681640625
    6. '_tokens' → logprob: -5.818023681640625
    7. '(pos' → logprob: -6.068023681640625
    8. '(start' → logprob: -7.193023681640625
    9. '(t' → logprob: -7.318023681640625
    10. '(' → logprob: -7.568023681640625

Token 1234: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.029751762747764587
    2. '):
' → logprob: -4.779751777648926
    3. '_tokens' → logprob: -5.529751777648926
    4. '):' → logprob: -6.029751777648926
    5. ',i' → logprob: -6.154751777648926
    6. ')' → logprob: -6.404751777648926
    7. '(idx' → logprob: -6.529751777648926
    8. '       ' → logprob: -6.654751777648926
    9. ':' → logprob: -6.779751777648926
    10. '   ' → logprob: -7.154751777648926

Token 1235: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.584108829498291
    2. 'int' → logprob: -0.834108829498291
    3. ')' → logprob: -5.709108829498291
    4. 'list' → logprob: -6.334108829498291
    5. '...' → logprob: -7.709108829498291
    6. '[int' → logprob: -7.834108829498291
    7. '0' → logprob: -8.084108352661133
    8. 'Callable' → logprob: -8.209108352661133
    9. 'lambda' → logprob: -8.334108352661133
    10. 'Optional' → logprob: -8.709108352661133

Token 1236: '[' (ID: 58)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.19029860198497772
    2. '[' → logprob: -1.8152985572814941
    3. ',' → logprob: -4.815298557281494
    4. ')' → logprob: -6.565298557281494
    5. ',int' → logprob: -7.815298557281494
    6. '):' → logprob: -8.440299034118652
    7. 'Union' → logprob: -9.065299034118652
    8. '   ' → logprob: -10.190299034118652
    9. '):
' → logprob: -10.190299034118652
    10. '[Index' → logprob: -10.565299034118652

Token 1237: 'Union' (ID: 39222)
  Prédit: 'Union'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Union' → logprob: -2.045823566731997e-05
    2. ' Union' → logprob: -12.000020027160645
    3. '_union' → logprob: -12.125020027160645
    4. ''Union' → logprob: -12.625020027160645
    5. ')' → logprob: -13.625020027160645
    6. ']' → logprob: -13.750020027160645
    7. 'union' → logprob: -14.000020027160645
    8. 'object' → logprob: -14.125020027160645
    9. '[' → logprob: -14.750020027160645
    10. '])' → logprob: -14.875020027160645

Token 1238: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.32078394293785095
    2. '[' → logprob: -1.3207839727401733
    3. 'int' → logprob: -4.945784091949463
    4. 'Union' → logprob: -8.070783615112305
    5. ',int' → logprob: -10.445783615112305
    6. ',' → logprob: -10.570783615112305
    7. ')' → logprob: -12.320783615112305
    8. '[
' → logprob: -12.820783615112305
    9. ']' → logprob: -13.320783615112305
    10. '   ' → logprob: -14.320783615112305

Token 1239: ',str' (ID: 95110)
  Prédit: ',str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',str' → logprob: -0.004002061206847429
    2. ',' → logprob: -5.754002094268799
    3. ',int' → logprob: -7.129002094268799
    4. '[str' → logprob: -10.87900161743164
    5. 'str' → logprob: -12.87900161743164
    6. ' ,' → logprob: -14.37900161743164
    7. '[int' → logprob: -16.37900161743164
    8. ',
' → logprob: -16.75400161743164
    9. ',char' → logprob: -16.75400161743164
    10. ',strong' → logprob: -17.25400161743164

Token 1240: ']],' (ID: 37171)
  Prédit: ']],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']],' → logprob: -0.059538450092077255
    2. ']])' → logprob: -2.9345383644104004
    3. ',' → logprob: -5.9345383644104
    4. '],' → logprob: -6.5595383644104
    5. ']]' → logprob: -7.9345383644104
    6. ']' → logprob: -9.934538841247559
    7. '       ' → logprob: -9.934538841247559
    8. '])' → logprob: -10.559538841247559
    9. '']],' → logprob: -10.684538841247559
    10. '   ' → logprob: -10.809538841247559

Token 1241: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.28583279252052307
    2. ' start' → logprob: -1.5358327627182007
    3. 'pos' → logprob: -4.28583288192749
    4. 'index' → logprob: -4.91083288192749
    5. ' pos' → logprob: -6.16083288192749
    6. 'idx' → logprob: -6.28583288192749
    7. 'i' → logprob: -6.53583288192749
    8. '           ' → logprob: -6.78583288192749
    9. ' idx' → logprob: -7.03583288192749
    10. '            ' → logprob: -7.53583288192749

Token 1242: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01880248636007309
    2. '=' → logprob: -4.518802642822266
    3. ':' → logprob: -6.268802642822266
    4. ')' → logprob: -6.518802642822266
    5. ':int' → logprob: -6.518802642822266
    6. ',start' → logprob: -7.518802642822266
    7. ' ,' → logprob: -7.768802642822266
    8. '<|end|>' → logprob: -8.018802642822266
    9. '):' → logprob: -8.143802642822266
    10. ',int' → logprob: -8.143802642822266

Token 1243: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -4.644463479053229e-05
    2. ' int' → logprob: -10.125046730041504
    3. '0' → logprob: -12.250046730041504
    4. '[int' → logprob: -14.625046730041504
    5. ')' → logprob: -15.000046730041504
    6. '   ' → logprob: -15.875046730041504
    7. ',int' → logprob: -15.875046730041504
    8. ',' → logprob: -16.250045776367188
    9. '
' → logprob: -16.375045776367188
    10. ']int' → logprob: -16.500045776367188

Token 1244: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.837811088189483e-05
    2. ')' → logprob: -10.000068664550781
    3. ' ,' → logprob: -11.500068664550781
    4. ',end' → logprob: -12.625068664550781
    5. ',
' → logprob: -12.875068664550781
    6. ',int' → logprob: -13.000068664550781
    7. '   ' → logprob: -14.000068664550781
    8. ',start' → logprob: -14.000068664550781
    9. ',next' → logprob: -14.125068664550781
    10. '       ' → logprob: -14.500068664550781

Token 1245: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.10020990669727325
    2. ' end' → logprob: -2.350209951400757
    3. 'stop' → logprob: -12.975210189819336
    4. '   ' → logprob: -14.725210189819336
    5. ',end' → logprob: -15.350210189819336
    6. ',' → logprob: -15.725210189819336
    7. ')' → logprob: -16.225210189819336
    8. ' stop' → logprob: -16.350210189819336
    9. '	end' → logprob: -16.850210189819336
    10. 'length' → logprob: -17.725210189819336

Token 1246: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0981791019439697
    2. '+' → logprob: -1.4731791019439697
    3. ',' → logprob: -1.7231791019439697
    4. ':' → logprob: -1.9731791019439697
    5. '):' → logprob: -2.4731791019439697
    6. '):
' → logprob: -4.598178863525391
    7. ' +' → logprob: -4.723178863525391
    8. '=' → logprob: -5.348178863525391
    9. ':int' → logprob: -5.473178863525391
    10. '   ' → logprob: -6.098178863525391

Token 1247: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0003501242317724973
    2. ' int' → logprob: -8.000349998474121
    3. 'Optional' → logprob: -11.875349998474121
    4. '[int' → logprob: -12.250349998474121
    5. ')' → logprob: -13.875349998474121
    6. '=int' → logprob: -14.250349998474121
    7. ':int' → logprob: -14.750349998474121
    8. '(int' → logprob: -15.125349998474121
    9. '<int' → logprob: -15.500349998474121
    10. ']int' → logprob: -16.125350952148438

Token 1248: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004071159288287163
    2. '):
' → logprob: -5.754071235656738
    3. '):' → logprob: -7.129071235656738
    4. '   ' → logprob: -10.254071235656738
    5. ')->' → logprob: -10.754071235656738
    6. ',' → logprob: -11.004071235656738
    7. ':' → logprob: -11.879071235656738
    8. '       ' → logprob: -12.629071235656738
    9. '=' → logprob: -12.879071235656738
    10. '):
' → logprob: -13.879071235656738

Token 1249: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13652226328849792
    2. ')' → logprob: -3.2615222930908203
    3. ':
' → logprob: -3.6365222930908203
    4. '       ' → logprob: -3.7615222930908203
    5. ',' → logprob: -4.76152229309082
    6. '->' → logprob: -4.88652229309082
    7. '   ' → logprob: -5.01152229309082
    8. ' ->' → logprob: -6.01152229309082
    9. '):
' → logprob: -6.13652229309082
    10. '[' → logprob: -6.38652229309082

Token 1250: ' Expression' (ID: 32496)
  Prédit: 'Expression'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Expression' → logprob: -0.10417070239782333
    2. 'Tuple' → logprob: -2.354170799255371
    3. ' Expression' → logprob: -6.604170799255371
    4. 'Union' → logprob: -6.979170799255371
    5. ' Tuple' → logprob: -6.979170799255371
    6. 'int' → logprob: -7.479170799255371
    7. 'Optional' → logprob: -9.604170799255371
    8. '(Expression' → logprob: -10.479170799255371
    9. 'Expr' → logprob: -10.604170799255371
    10. ' int' → logprob: -11.229170799255371

Token 1251: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04595683515071869
    2. ':
' → logprob: -3.92095685005188
    3. '       ' → logprob: -4.045956611633301
    4. ')' → logprob: -5.670956611633301
    5. '<|end|>' → logprob: -7.295956611633301
    6. ',' → logprob: -7.420956611633301
    7. '[' → logprob: -7.920956611633301
    8. '<|end|>' → logprob: -8.1709566116333
    9. '(' → logprob: -8.4209566116333
    10. '):
' → logprob: -8.6709566116333

Token 1252: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08466051518917084
    2. '           ' → logprob: -3.084660530090332
    3. '        ' → logprob: -4.209660530090332
    4. ' if' → logprob: -4.709660530090332
    5. ' ' → logprob: -5.584660530090332
    6. '   ' → logprob: -6.084660530090332
    7. '        
' → logprob: -6.959660530090332
    8. '    ' → logprob: -7.084660530090332
    9. ' 
' → logprob: -7.584660530090332
    10. ' ' → logprob: -7.959660530090332

Token 1253: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.08237271010875702
    2. ' if' → logprob: -2.9573726654052734
    3. 'i' → logprob: -4.207372665405273
    4. '           ' → logprob: -4.582372665405273
    5. 'pos' → logprob: -6.832372665405273
    6. '#' (adapté à ' #') → logprob: -8.332372665405273
    7. ' i' → logprob: -8.332372665405273
    8. 'idx' → logprob: -8.457372665405273
    9. '               ' → logprob: -9.207372665405273
    10. 'index' → logprob: -10.207372665405273

Token 1254: ' Remove' (ID: 18141)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.003108549863100052
    2. 'i' → logprob: -6.503108501434326
    3. '           ' → logprob: -7.003108501434326
    4. ' if' → logprob: -8.378108978271484
    5. '#' → logprob: -8.503108978271484
    6. 'pos' → logprob: -9.003108978271484
    7. 'while' → logprob: -9.503108978271484
    8. 'idx' → logprob: -10.003108978271484
    9. '               ' → logprob: -11.628108978271484
    10. '       ' → logprob: -12.628108978271484

Token 1255: ' enclosing' (ID: 187563)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.25395169854164124
    2. ' while' → logprob: -1.7539516687393188
    3. 'if' → logprob: -4.128951549530029
    4. '#' → logprob: -5.128951549530029
    5. 'start' → logprob: -5.753951549530029
    6. ')' → logprob: -5.878951549530029
    7. 'paren' → logprob: -5.878951549530029
    8. ' leading' → logprob: -6.128951549530029
    9. ' if' → logprob: -6.128951549530029
    10. ' parentheses' → logprob: -6.253951549530029

Token 1256: ' parentheses' (ID: 180602)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10954870283603668
    2. ' (' → logprob: -2.984548807144165
    3. 'start' → logprob: -3.734548807144165
    4. '(start' → logprob: -4.234548568725586
    5. 'parent' → logprob: -5.234548568725586
    6. '(
' → logprob: -5.359548568725586
    7. '('' → logprob: -6.234548568725586
    8. 'paren' → logprob: -6.609548568725586
    9. ' parentheses' → logprob: -8.484548568725586
    10. ' start' → logprob: -8.484548568725586

Token 1257: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3899001181125641
    2. 'while' → logprob: -1.8899000883102417
    3. ' while' → logprob: -2.6399002075195312
    4. 'if' → logprob: -3.0149002075195312
    5. ' if' → logprob: -3.1399002075195312
    6. ',' → logprob: -5.639900207519531
    7. '
' → logprob: -5.764900207519531
    8. '            
' → logprob: -8.014900207519531
    9. '#' → logprob: -8.639900207519531
    10. 'start' → logprob: -9.264900207519531

Token 1258: ' present' (ID: 3333)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.1406908482313156
    2. 'ts' → logprob: -2.140690803527832
    3. ' start' → logprob: -5.015690803527832
    4. ' ts' → logprob: -6.265690803527832
    5. 'end' → logprob: -6.390690803527832
    6. '(ts' → logprob: -6.390690803527832
    7. 'tokens' → logprob: -7.015690803527832
    8. '(start' → logprob: -7.265690803527832
    9. '   ' → logprob: -9.890690803527832
    10. ' ' → logprob: -10.140690803527832

Token 1259: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008037286810576916
    2. 'while' → logprob: -5.383037090301514
    3. ' while' → logprob: -6.008037090301514
    4. ' if' → logprob: -7.633037090301514
    5. 'if' → logprob: -8.008037567138672
    6. '
' → logprob: -9.383037567138672
    7. ',' → logprob: -10.758037567138672
    8. '            
' → logprob: -11.383037567138672
    9. '       ' → logprob: -12.883037567138672
    10. ':' → logprob: -13.133037567138672

Token 1260: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010434437543153763
    2. ' if' → logprob: -5.385434627532959
    3. 'if' → logprob: -6.260434627532959
    4. ' while' → logprob: -6.260434627532959
    5. 'while' → logprob: -6.385434627532959
    6. '       ' → logprob: -9.0104341506958
    7. '               ' → logprob: -9.2604341506958
    8. '
' → logprob: -11.1354341506958
    9. '            
' → logprob: -11.6354341506958
    10. '            ' → logprob: -11.8854341506958

Token 1261: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -1.1891202926635742
    2. 'while' (adapté à ' while') → logprob: -1.1891202926635742
    3. 'if' → logprob: -1.4391202926635742
    4. ' if' → logprob: -2.314120292663574
    5. '           ' → logprob: -2.939120292663574
    6. 'i' → logprob: -7.064120292663574
    7. '#' → logprob: -8.064120292663574
    8. ' i' → logprob: -8.064120292663574
    9. 'start' → logprob: -8.189120292663574
    10. ' #' → logprob: -9.314120292663574

Token 1262: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.006250730250030756
    2. 'ts' → logprob: -6.006250858306885
    3. 'end' → logprob: -6.506250858306885
    4. ' start' → logprob: -6.631250858306885
    5. 'tokens' → logprob: -7.256250858306885
    6. '(start' → logprob: -9.131250381469727
    7. '   ' → logprob: -9.756250381469727
    8. '     ' → logprob: -11.256250381469727
    9. ' ' → logprob: -11.381250381469727
    10. '(ts' → logprob: -11.506250381469727

Token 1263: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.9358154535293579
    2. '<=' → logprob: -0.9358154535293579
    3. ' <' → logprob: -2.0608153343200684
    4. ' <=' → logprob: -2.4358153343200684
    5. '<len' → logprob: -8.185815811157227
    6. '+' → logprob: -8.810815811157227
    7. ' ' → logprob: -10.310815811157227
    8. '[' → logprob: -10.685815811157227
    9. '   ' → logprob: -11.435815811157227
    10. '<n' → logprob: -11.560815811157227

Token 1264: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.004078758880496025
    2. ' end' → logprob: -5.5040788650512695
    3. '(end' → logprob: -15.75407886505127
    4. '=end' → logprob: -16.254077911376953
    5. 'len' → logprob: -17.379077911376953
    6. '_end' → logprob: -17.504077911376953
    7. '[end' → logprob: -18.004077911376953
    8. '	end' → logprob: -18.004077911376953
    9. '>end' → logprob: -18.629077911376953
    10. ''end' → logprob: -18.754077911376953

Token 1265: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.029874062165617943
    2. ' and' → logprob: -3.529874086380005
    3. '           ' → logprob: -9.154873847961426
    4. '               ' → logprob: -12.404873847961426
    5. '       ' → logprob: -12.654873847961426
    6. '   ' → logprob: -12.779873847961426
    7. '	and' → logprob: -13.154873847961426
    8. '          ' → logprob: -13.279873847961426
    9. '                   ' → logprob: -13.779873847961426
    10. '            ' → logprob: -14.404873847961426

Token 1266: ' ts' (ID: 6601)
  Prédit: 'ts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ts' → logprob: -0.004183941055089235
    2. 'is' → logprob: -5.754183769226074
    3. 'tokens' → logprob: -7.004183769226074
    4. '   ' → logprob: -10.504183769226074
    5. '           ' → logprob: -10.754183769226074
    6. ' ts' → logprob: -11.004183769226074
    7. '(ts' → logprob: -11.379183769226074
    8. '       ' → logprob: -12.629183769226074
    9. 'type' → logprob: -13.504183769226074
    10. ' isinstance' → logprob: -13.504183769226074

Token 1267: '[start' (ID: 62179)
  Prédit: '[start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[start' → logprob: -0.01067271362990141
    2. '==' → logprob: -4.885672569274902
    3. 'start' → logprob: -6.385672569274902
    4. '[' → logprob: -7.260672569274902
    5. ' ==' → logprob: -7.510672569274902
    6. '```' → logprob: -9.760672569274902
    7. '=start' → logprob: -11.635672569274902
    8. '   ' → logprob: -11.760672569274902
    9. '(start' → logprob: -11.885672569274902
    10. '[
' → logprob: -12.010672569274902

Token 1268: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.039688095450401306
    2. ' ==' → logprob: -3.2896881103515625
    3. '=='' → logprob: -6.9146881103515625
    4. ']==' → logprob: -8.414688110351562
    5. '==
' → logprob: -8.914688110351562
    6. ')' → logprob: -8.914688110351562
    7. ')==' → logprob: -9.664688110351562
    8. ']' → logprob: -10.039688110351562
    9. '=' → logprob: -11.039688110351562
    10. 'in' → logprob: -11.289688110351562

Token 1269: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.34186702966690063
    2. '=='' → logprob: -1.7168669700622559
    3. ' ==' → logprob: -2.216866970062256
    4. '=' → logprob: -7.591866970062256
    5. '=="' → logprob: -8.966867446899414
    6. '==
' → logprob: -9.216867446899414
    7. ' =='' → logprob: -9.591867446899414
    8. ')==' → logprob: -10.216867446899414
    9. '[' → logprob: -10.591867446899414
    10. ']=='' → logprob: -10.716867446899414

Token 1270: ' '('' (ID: 87284)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -3.726595241460018e-05
    2. '"' → logprob: -11.12503719329834
    3. ' '('' → logprob: -11.62503719329834
    4. ''(' → logprob: -11.75003719329834
    5. '('' → logprob: -12.75003719329834
    6. '(' → logprob: -12.87503719329834
    7. '')' → logprob: -15.87503719329834
    8. '''' → logprob: -18.250038146972656
    9. '(
' → logprob: -18.250038146972656
    10. '("("' → logprob: -18.375038146972656

Token 1271: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.16030587255954742
    2. ' and' → logprob: -1.9103058576583862
    3. '           ' → logprob: -9.785305976867676
    4. ')' → logprob: -12.035305976867676
    5. '       ' → logprob: -12.035305976867676
    6. '          ' → logprob: -12.785305976867676
    7. '   ' → logprob: -12.910305976867676
    8. '               ' → logprob: -13.535305976867676
    9. '	and' → logprob: -13.660305976867676
    10. '            ' → logprob: -13.910305976867676

Token 1272: ' self' (ID: 1051)
  Prédit: 'ts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ts' → logprob: -0.016354454681277275
    2. ' ts' → logprob: -4.266354560852051
    3. 'tokens' → logprob: -7.016354560852051
    4. 'end' → logprob: -7.391354560852051
    5. '   ' → logprob: -8.26635456085205
    6. '(ts' → logprob: -9.51635456085205
    7. ')' → logprob: -10.01635456085205
    8. ' end' → logprob: -10.39135456085205
    9. '    ' → logprob: -10.39135456085205
    10. ' ' → logprob: -10.39135456085205

Token 1273: '.match' (ID: 21348)
  Prédit: 'peek'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'peek' → logprob: -1.5690971612930298
    2. 'ts' → logprob: -1.9440971612930298
    3. 'tokens' → logprob: -2.0690970420837402
    4. 'matching' → logprob: -2.1940970420837402
    5. 'is' → logprob: -2.8190970420837402
    6. '.peek' → logprob: -2.9440970420837402
    7. 'parse' → logprob: -3.1940970420837402
    8. 'find' → logprob: -3.3190970420837402
    9. '.find' → logprob: -3.4440970420837402
    10. 's' → logprob: -3.4440970420837402

Token 1274: 'ing' (ID: 289)
  Prédit: 'ts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ts' → logprob: -0.6992124319076538
    2. 'tokens' → logprob: -1.9492124319076538
    3. '(ts' → logprob: -2.3242125511169434
    4. '(tokens' → logprob: -2.5742125511169434
    5. ')' → logprob: -3.1992125511169434
    6. '')' → logprob: -4.074212551116943
    7. 'paren' → logprob: -4.199212551116943
    8. '_tokens' → logprob: -4.324212551116943
    9. 'okens' → logprob: -4.324212551116943
    10. '   ' → logprob: -4.449212551116943

Token 1275: '_par' (ID: 31329)
  Prédit: 'paren'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'paren' → logprob: -0.8003203272819519
    2. 'parent' → logprob: -1.3003203868865967
    3. 'ts' → logprob: -2.1753203868865967
    4. '_parent' → logprob: -3.1753203868865967
    5. 'tokens' → logprob: -3.6753203868865967
    6. 'start' → logprob: -3.8003203868865967
    7. '[start' → logprob: -4.050320148468018
    8. 'par' → logprob: -4.050320148468018
    9. '(ts' → logprob: -4.800320148468018
    10. '_par' → logprob: -5.175320148468018

Token 1276: 'en' (ID: 262)
  Prédit: 'en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.1534842699766159
    2. 'ent' → logprob: -2.028484344482422
    3. '(start' → logprob: -5.653484344482422
    4. 'ens' → logprob: -5.778484344482422
    5. '[start' → logprob: -6.403484344482422
    6. 'start' → logprob: -7.028484344482422
    7. 'ar' → logprob: -7.528484344482422
    8. 'aren' → logprob: -7.778484344482422
    9. '[' → logprob: -9.278484344482422
    10. '(' → logprob: -9.778484344482422

Token 1277: '(ts' (ID: 70166)
  Prédit: '[start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[start' → logprob: -0.7205526232719421
    2. '(start' → logprob: -1.845552682876587
    3. 's' → logprob: -2.220552682876587
    4. '[end' → logprob: -2.720552682876587
    5. 'ts' → logprob: -3.220552682876587
    6. 'end' → logprob: -3.595552682876587
    7. '   ' → logprob: -3.970552682876587
    8. 't' → logprob: -4.095552444458008
    9. ')' → logprob: -4.095552444458008
    10. 'start' → logprob: -4.345552444458008

Token 1278: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10236385464668274
    2. '[start' → logprob: -3.3523638248443604
    3. ')' → logprob: -4.1023640632629395
    4. 'start' → logprob: -4.3523640632629395
    5. ',start' → logprob: -4.6023640632629395
    6. '(start' → logprob: -4.7273640632629395
    7. 'end' → logprob: -6.1023640632629395
    8. 's' → logprob: -6.7273640632629395
    9. ')[' → logprob: -6.8523640632629395
    10. ' ,' → logprob: -6.9773640632629395

Token 1279: ' start' (ID: 1604)
  Prédit: 'ts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ts' → logprob: -0.18221387267112732
    2. 'start' → logprob: -1.8072139024734497
    3. 'end' → logprob: -6.93221378326416
    4. ' ts' → logprob: -7.30721378326416
    5. 'tokens' → logprob: -7.93221378326416
    6. '   ' → logprob: -8.68221378326416
    7. ')' → logprob: -9.55721378326416
    8. ' start' → logprob: -9.68221378326416
    9. 't' → logprob: -11.05721378326416
    10. '    ' → logprob: -11.18221378326416

Token 1280: ')' (ID: 8)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8352340459823608
    2. ')' → logprob: -1.2102340459823608
    3. ' +' → logprob: -2.3352341651916504
    4. '):
' → logprob: -2.5852341651916504
    5. '):' → logprob: -2.9602341651916504
    6. ',' → logprob: -3.5852341651916504
    7. ')==' → logprob: -5.46023416519165
    8. ',end' → logprob: -6.21023416519165
    9. '(start' → logprob: -6.83523416519165
    10. '[start' → logprob: -6.96023416519165

Token 1281: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5238034725189209
    2. ' ==' → logprob: -0.8988034725189209
    3. ')' → logprob: -8.7738037109375
    4. ' <' → logprob: -9.1488037109375
    5. '()==' → logprob: -9.2738037109375
    6. '<' → logprob: -10.0238037109375
    7. '[' → logprob: -10.2738037109375
    8. '   ' → logprob: -10.2738037109375
    9. ')==' → logprob: -10.3988037109375
    10. ']==' → logprob: -10.5238037109375

Token 1282: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.001331190811470151
    2. ' end' → logprob: -6.626331329345703
    3. '   ' → logprob: -13.251331329345703
    4. '           ' → logprob: -13.501331329345703
    5. '(end' → logprob: -14.001331329345703
    6. '       ' → logprob: -15.001331329345703
    7. '[end' → logprob: -15.501331329345703
    8. ' ' → logprob: -16.001331329345703
    9. '               ' → logprob: -16.376331329345703
    10. ''end' → logprob: -16.376331329345703

Token 1283: ' -' (ID: 533)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -1.1916853189468384
    2. '-' → logprob: -1.4416853189468384
    3. ' -' → logprob: -1.4416853189468384
    4. ':' → logprob: -2.441685199737549
    5. '               ' → logprob: -2.566685199737549
    6. '           ' → logprob: -3.191685199737549
    7. '):
' → logprob: -4.691685199737549
    8. '       ' → logprob: -6.066685199737549
    9. ' and' → logprob: -6.691685199737549
    10. ')' → logprob: -7.191685199737549

Token 1284: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '   ' → logprob: -17.875
    4. ')' → logprob: -20.625
    5. '```' → logprob: -20.875
    6. '
' → logprob: -21.375
    7. '                   ' → logprob: -22.25
    8. '-' → logprob: -22.375
    9. '           ' → logprob: -22.5
    10. '       ' → logprob: -22.625

Token 1285: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.625001907348633
    3. '   ' → logprob: -15.375001907348633
    4. ')' → logprob: -16.625001907348633
    5. '       ' → logprob: -18.250001907348633
    6. '
' → logprob: -18.500001907348633
    7. '```' → logprob: -18.875001907348633
    8. 'start' → logprob: -19.125001907348633
    9. '           ' → logprob: -19.375001907348633
    10. '')' → logprob: -19.625001907348633

Token 1286: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.32367438077926636
    2. '):
' → logprob: -1.8236744403839111
    3. '               ' → logprob: -2.698674440383911
    4. ':' → logprob: -3.198674440383911
    5. '           ' → logprob: -5.448674201965332
    6. ')' → logprob: -6.573674201965332
    7. '):' → logprob: -7.323674201965332
    8. ' and' → logprob: -8.323674201965332
    9. 'and' → logprob: -9.698674201965332
    10. '                   ' → logprob: -9.823674201965332

Token 1287: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00034392563975416124
    2. ' and' → logprob: -8.250344276428223
    3. 'and' → logprob: -10.500344276428223
    4. '                   ' → logprob: -10.625344276428223
    5. ':
' → logprob: -11.875344276428223
    6. '                       ' → logprob: -12.000344276428223
    7. '           ' → logprob: -12.375344276428223
    8. 'start' → logprob: -13.125344276428223
    9. '                ' → logprob: -13.500344276428223
    10. ':' → logprob: -13.500344276428223

Token 1288: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' (adapté à ' start') → logprob: -0.02456168830394745
    2. '               ' → logprob: -3.774561643600464
    3. ' start' → logprob: -7.149561882019043
    4. '           ' → logprob: -7.649561882019043
    5. '                   ' → logprob: -10.399561882019043
    6. '[start' → logprob: -11.649561882019043
    7. '   ' → logprob: -12.524561882019043
    8. '(start' → logprob: -12.649561882019043
    9. '
' → logprob: -13.524561882019043
    10. ':start' → logprob: -13.899561882019043

Token 1289: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.001037691137753427
    2. ' +=' → logprob: -6.87603759765625
    3. ']+=' → logprob: -13.00103759765625
    4. '=' → logprob: -13.25103759765625
    5. '+' → logprob: -15.00103759765625
    6. ',' → logprob: -15.25103759765625
    7. '   ' → logprob: -15.87603759765625
    8. '           ' → logprob: -16.37603759765625
    9. '
' → logprob: -17.87603759765625
    10. '       ' → logprob: -17.87603759765625

Token 1290: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '   ' → logprob: -17.0
    4. '2' → logprob: -18.5
    5. '
' → logprob: -19.0
    6. '+' → logprob: -19.875
    7. '```' → logprob: -20.5
    8. '۱' → logprob: -20.75
    9. '１' → logprob: -21.0
    10. '  ' → logprob: -22.0

Token 1291: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.664371848164592e-05
    2. '2' → logprob: -11.375016212463379
    3. ' ' → logprob: -12.375016212463379
    4. '   ' → logprob: -14.000016212463379
    5. '
' → logprob: -16.250017166137695
    6. '۱' → logprob: -17.687517166137695
    7. '```' → logprob: -18.062517166137695
    8. '  ' → logprob: -18.187517166137695
    9. '１' → logprob: -18.375017166137695
    10. '+' → logprob: -18.687517166137695

Token 1292: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5458898544311523
    2. '
' → logprob: -1.7958898544311523
    3. 'and' → logprob: -2.2958898544311523
    4. '               ' → logprob: -2.5458898544311523
    5. ' and' → logprob: -2.7958898544311523
    6. ',' → logprob: -5.795889854431152
    7. '       ' → logprob: -6.170889854431152
    8. '<|end|>' → logprob: -6.170889854431152
    9. '<|end|>' → logprob: -6.670889854431152
    10. ')' → logprob: -6.795889854431152

Token 1293: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7770776748657227
    2. '               ' → logprob: -0.7770776748657227
    3. 'end' → logprob: -2.5270776748657227
    4. 'and' → logprob: -8.402077674865723
    5. '       ' → logprob: -9.527077674865723
    6. ',end' → logprob: -9.652077674865723
    7. ' end' → logprob: -9.652077674865723
    8. '[end' → logprob: -10.027077674865723
    9. '                   ' → logprob: -10.277077674865723
    10. '   ' → logprob: -10.777077674865723

Token 1294: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' (adapté à ' end') → logprob: -1.0802738870552275e-05
    2. ' end' → logprob: -11.50001049041748
    3. '               ' → logprob: -15.50001049041748
    4. '(end' → logprob: -15.62501049041748
    5. '           ' → logprob: -15.75001049041748
    6. '	end' → logprob: -18.250011444091797
    7. 'endon' → logprob: -18.500011444091797
    8. '                   ' → logprob: -18.625011444091797
    9. ''end' → logprob: -19.250011444091797
    10. '   ' → logprob: -19.250011444091797

Token 1295: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.0598842091858387
    2. '-' → logprob: -2.9348843097686768
    3. ' -=' → logprob: -5.309884071350098
    4. '=' → logprob: -10.184884071350098
    5. '   ' → logprob: -12.684884071350098
    6. '+=' → logprob: -12.934884071350098
    7. ' -' → logprob: -14.184884071350098
    8. '```' → logprob: -14.309884071350098
    9. '       ' → logprob: -15.184884071350098
    10. '           ' → logprob: -15.184884071350098

Token 1296: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014013137842994183
    2. ' ' → logprob: -8.875140190124512
    3. '   ' → logprob: -15.250140190124512
    4. '2' → logprob: -17.750139236450195
    5. '
' → logprob: -17.875139236450195
    6. '```' → logprob: -17.875139236450195
    7. '           ' → logprob: -18.000139236450195
    8. '  ' → logprob: -19.125139236450195
    9. '                   ' → logprob: -19.375139236450195
    10. '0' → logprob: -19.625139236450195

Token 1297: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.061054359131958e-06
    2. ' ' → logprob: -11.750007629394531
    3. '2' → logprob: -15.750007629394531
    4. '   ' → logprob: -17.37500762939453
    5. '
' → logprob: -17.62500762939453
    6. '۱' → logprob: -18.18750762939453
    7. '１' → logprob: -18.81250762939453
    8. '```' → logprob: -19.06250762939453
    9. '0' → logprob: -19.56250762939453
    10. '१' → logprob: -20.56250762939453

Token 1298: '
            
' (ID: 45334)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5175594091415405
    2. '
' → logprob: -1.2675594091415405
    3. '\n' → logprob: -2.76755952835083
    4. '            
' → logprob: -3.76755952835083
    5. '<|end|>' → logprob: -4.01755952835083
    6. '        
' → logprob: -5.64255952835083
    7. '    
' → logprob: -5.89255952835083
    8. ' 
' → logprob: -5.89255952835083
    9. '<|end|>' → logprob: -6.39255952835083
    10. '		' → logprob: -6.76755952835083

Token 1299: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008361379615962505
    2. '       ' → logprob: -4.883361339569092
    3. '               ' → logprob: -8.13336181640625
    4. '            ' → logprob: -9.25836181640625
    5. '		' → logprob: -9.50836181640625
    6. '	       ' → logprob: -9.50836181640625
    7. '   ' → logprob: -9.88336181640625
    8. '        ' → logprob: -10.38336181640625
    9. '```' → logprob: -10.88336181640625
    10. '          ' → logprob: -11.00836181640625

Token 1300: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.014913304708898067
    2. '           ' → logprob: -4.264913082122803
    3. '#' (adapté à ' #') → logprob: -8.014913558959961
    4. ' if' → logprob: -8.014913558959961
    5. '       ' → logprob: -10.014913558959961
    6. 'while' → logprob: -11.139913558959961
    7. '   ' → logprob: -11.764913558959961
    8. 'length' → logprob: -11.889913558959961
    9. 'i' → logprob: -12.139913558959961
    10. 'left' → logprob: -12.889913558959961

Token 1301: ' If' (ID: 1843)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.09487244486808777
    2. '#' → logprob: -2.59487247467041
    3. 'length' → logprob: -4.71987247467041
    4. '           ' → logprob: -5.21987247467041
    5. 'n' → logprob: -7.34487247467041
    6. 'def' → logprob: -8.46987247467041
    7. ' if' → logprob: -8.71987247467041
    8. 'for' → logprob: -8.84487247467041
    9. 'If' → logprob: -9.21987247467041
    10. '   ' → logprob: -10.21987247467041

Token 1302: ' only' (ID: 1606)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.04308631643652916
    2. 'is' → logprob: -3.543086290359497
    3. 'end' → logprob: -4.418086528778076
    4. ' start' → logprob: -7.668086528778076
    5. 'type' → logprob: -8.418086051940918
    6. '   ' → logprob: -8.543086051940918
    7. ' isinstance' → logprob: -8.668086051940918
    8. '(start' → logprob: -9.918086051940918
    9. 'iss' → logprob: -10.918086051940918
    10. 'ts' → logprob: -11.043086051940918

Token 1303: ' one' (ID: 1001)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.29809510707855225
    2. 'one' → logprob: -1.5480951070785522
    3. ' one' → logprob: -3.173095226287842
    4. 'a' → logprob: -6.173095226287842
    5. 'end' → logprob: -7.923095226287842
    6. '[start' → logprob: -8.048094749450684
    7. ' start' → logprob: -8.673094749450684
    8. '1' → logprob: -9.173094749450684
    9. 'number' → logprob: -9.423094749450684
    10. 'token' → logprob: -9.923094749450684

Token 1304: ' token' (ID: 6602)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7807509303092957
    2. 'if' → logprob: -1.0307509899139404
    3. 'token' → logprob: -2.2807509899139404
    4. ' token' → logprob: -3.0307509899139404
    5. ' element' → logprob: -4.280750751495361
    6. 'element' → logprob: -4.780750751495361
    7. 'start' → logprob: -6.030750751495361
    8. '[start' → logprob: -6.530750751495361
    9. '           ' → logprob: -6.905750751495361
    10. ' start' → logprob: -6.905750751495361

Token 1305: ' and' (ID: 326)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.23058053851127625
    2. ' ==' → logprob: -1.8555805683135986
    3. '[start' → logprob: -4.3555803298950195
    4. 'and' → logprob: -4.4805803298950195
    5. '           ' → logprob: -4.6055803298950195
    6. ' and' → logprob: -4.7305803298950195
    7. ':' → logprob: -6.3555803298950195
    8. ',' → logprob: -6.4805803298950195
    9. '(start' → logprob: -6.9805803298950195
    10. 'if' → logprob: -7.1055803298950195

Token 1306: ' it's' (ID: 4275)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.14422515034675598
    2. ' isinstance' → logprob: -2.0192251205444336
    3. 'start' → logprob: -7.144225120544434
    4. '(is' → logprob: -7.519225120544434
    5. 'type' → logprob: -9.019225120544434
    6. ' (' → logprob: -10.019225120544434
    7. '   ' → logprob: -11.644225120544434
    8. 'isdigit' → logprob: -11.769225120544434
    9. ' start' → logprob: -12.019225120544434
    10. 'end' → logprob: -12.019225120544434

Token 1307: ' number' (ID: 2086)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.07494471967220306
    2. 'an' → logprob: -3.1999447345733643
    3. 'a' → logprob: -3.9499447345733643
    4. ' an' → logprob: -4.699944496154785
    5. ' a' → logprob: -6.699944496154785
    6. ' isinstance' → logprob: -7.199944496154785
    7. 'is' → logprob: -7.324944496154785
    8. 'number' → logprob: -8.824944496154785
    9. ' int' → logprob: -8.949944496154785
    10. 'integer' → logprob: -9.699944496154785

Token 1308: ',' (ID: 11)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.5037042498588562
    2. ' and' → logprob: -1.003704309463501
    3. '==' → logprob: -4.253704071044922
    4. '           ' → logprob: -4.628704071044922
    5. '               ' → logprob: -6.128704071044922
    6. ':' → logprob: -6.878704071044922
    7. ',' → logprob: -7.628704071044922
    8. ' ==' → logprob: -7.628704071044922
    9. ':
' → logprob: -8.128704071044922
    10. ' or' → logprob: -8.128704071044922

Token 1309: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.701759934425354
    2. ' return' → logprob: -1.076759934425354
    3. '               ' → logprob: -1.826759934425354
    4. ' if' → logprob: -6.4517598152160645
    5. 'if' → logprob: -7.0767598152160645
    6. '           ' → logprob: -9.076760292053223
    7. ':return' → logprob: -10.576760292053223
    8. '                   ' → logprob: -11.076760292053223
    9. '{return' → logprob: -11.201760292053223
    10. '   ' → logprob: -11.701760292053223

Token 1310: ' Number' (ID: 9184)
  Prédit: 'Number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Number' → logprob: -0.0001242772996192798
    2. ' Number' → logprob: -9.000123977661133
    3. '(Number' → logprob: -14.625123977661133
    4. '
' → logprob: -16.375123977661133
    5. '           ' → logprob: -16.500123977661133
    6. '   ' → logprob: -16.625123977661133
    7. 'Expression' → logprob: -17.250123977661133
    8. 'number' → logprob: -18.375123977661133
    9. '_Number' → logprob: -18.750123977661133
    10. '       ' → logprob: -18.750123977661133

Token 1311: '
' (ID: 198)
  Prédit: '(tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(tokens' → logprob: -0.519342303276062
    2. '(Number' → logprob: -1.644342303276062
    3. 'Number' → logprob: -2.7693424224853516
    4. '(ts' → logprob: -3.0193424224853516
    5. 'tokens' → logprob: -3.3943424224853516
    6. '(' → logprob: -3.6443424224853516
    7. '           ' → logprob: -4.019342422485352
    8. '(
' → logprob: -5.144342422485352
    9. 'Expression' → logprob: -5.894342422485352
    10. ' tokens' → logprob: -5.894342422485352

Token 1312: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010306544601917267
    2. '               ' → logprob: -4.635306358337402
    3. 'return' → logprob: -8.385306358337402
    4. ' if' → logprob: -9.260306358337402
    5. ':' → logprob: -10.260306358337402
    6. 'if' → logprob: -10.385306358337402
    7. '(start' → logprob: -10.510306358337402
    8. ' return' → logprob: -10.760306358337402
    9. '       ' → logprob: -11.010306358337402
    10. ',' → logprob: -11.010306358337402

Token 1313: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.16420012712478638
    2. '           ' → logprob: -1.9142000675201416
    3. ' if' → logprob: -5.539200305938721
    4. 'return' → logprob: -10.539199829101562
    5. '       ' → logprob: -11.664199829101562
    6. '   ' → logprob: -14.164199829101562
    7. 'assert' → logprob: -14.289199829101562
    8. 'elif' → logprob: -14.539199829101562
    9. '               ' → logprob: -14.914199829101562
    10. '```' → logprob: -15.289199829101562

Token 1314: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.02271166443824768
    2. 'end' → logprob: -4.647711753845215
    3. 'is' → logprob: -4.897711753845215
    4. ' start' → logprob: -6.272711753845215
    5. 'type' → logprob: -6.647711753845215
    6. ' isinstance' → logprob: -7.022711753845215
    7. '   ' → logprob: -7.647711753845215
    8. 'ts' → logprob: -8.022711753845215
    9. 'tokens' → logprob: -8.022711753845215
    10. 'iss' → logprob: -9.897711753845215

Token 1315: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.043371498584747314
    2. ' ==' → logprob: -3.1683714389801025
    3. '+' → logprob: -8.918371200561523
    4. '==
' → logprob: -9.543371200561523
    5. '<=' → logprob: -9.918371200561523
    6. '=' → logprob: -9.918371200561523
    7. '>=' → logprob: -10.543371200561523
    8. '>' → logprob: -11.043371200561523
    9. '[' → logprob: -12.293371200561523
    10. '===' → logprob: -12.543371200561523

Token 1316: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.0005556552205234766
    2. ' end' → logprob: -7.500555515289307
    3. '=end' → logprob: -13.875555992126465
    4. '(end' → logprob: -14.375555992126465
    5. '	end' → logprob: -14.875555992126465
    6. '   ' → logprob: -15.625555992126465
    7. '>end' → logprob: -15.750555992126465
    8. '[end' → logprob: -16.00055503845215
    9. ''end' → logprob: -16.50055503845215
    10. ' ' → logprob: -16.75055503845215

Token 1317: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.9868593215942383
    2. '           ' → logprob: -1.6118593215942383
    3. '<|end|>' → logprob: -2.1118593215942383
    4. '       ' → logprob: -2.6118593215942383
    5. '<|end|>' → logprob: -2.8618593215942383
    6. ':' → logprob: -2.9868593215942383
    7. ' -' → logprob: -3.6118593215942383
    8. ' or' → logprob: -3.9868593215942383
    9. '==' → logprob: -4.111859321594238
    10. 'and' → logprob: -4.486859321594238

Token 1318: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '   ' → logprob: -18.875001907348633
    4. '```' → logprob: -20.750001907348633
    5. '  ' → logprob: -21.625001907348633
    6. '           ' → logprob: -22.000001907348633
    7. '۱' → logprob: -22.750001907348633
    8. '１' → logprob: -22.750001907348633
    9. '0' → logprob: -22.875001907348633
    10. '       ' → logprob: -23.500001907348633

Token 1319: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5332478142227046e-05
    2. ' ' → logprob: -11.125015258789062
    3. '```' → logprob: -15.000015258789062
    4. '   ' → logprob: -15.875015258789062
    5. '           ' → logprob: -17.375015258789062
    6. '       ' → logprob: -18.125015258789062
    7. '0' → logprob: -18.375015258789062
    8. '2' → logprob: -18.625015258789062
    9. '  ' → logprob: -18.625015258789062
    10. '(' → logprob: -18.875015258789062

Token 1320: ':
' (ID: 734)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.6120949387550354
    2. ' and' → logprob: -0.8620949387550354
    3. ':
' → logprob: -3.6120948791503906
    4. '           ' → logprob: -5.737094879150391
    5. ':' → logprob: -5.862094879150391
    6. '               ' → logprob: -6.112094879150391
    7. ':return' → logprob: -9.23709487915039
    8. 'return' → logprob: -10.23709487915039
    9. '	and' → logprob: -10.61209487915039
    10. '       ' → logprob: -11.36209487915039

Token 1321: '               ' (ID: 506)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5851566791534424
    2. '               ' → logprob: -0.8351566791534424
    3. '           ' → logprob: -5.210156440734863
    4. ' return' → logprob: -5.710156440734863
    5. '{return' → logprob: -9.210156440734863
    6. '       ' → logprob: -9.335156440734863
    7. '   ' → logprob: -9.460156440734863
    8. ':return' → logprob: -9.710156440734863
    9. '                   ' → logprob: -10.585156440734863
    10. 'if' → logprob: -10.960156440734863

Token 1322: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0010784220648929477
    2. '               ' → logprob: -7.0010786056518555
    3. ' return' → logprob: -8.751078605651855
    4. '           ' → logprob: -12.001078605651855
    5. '                   ' → logprob: -13.501078605651855
    6. '   ' → logprob: -15.001078605651855
    7. 'if' (adapté à ' if') → logprob: -15.126078605651855
    8. '	return' → logprob: -15.251078605651855
    9. '{return' → logprob: -16.37607765197754
    10. ':return' → logprob: -16.87607765197754

Token 1323: ' isinstance' (ID: 25889)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.0015386694576591253
    2. ' isinstance' → logprob: -6.5015387535095215
    3. 'type' → logprob: -10.251538276672363
    4. '   ' → logprob: -14.376538276672363
    5. '           ' → logprob: -15.626538276672363
    6. '       ' → logprob: -16.75153923034668
    7. 'typeof' → logprob: -16.87653923034668
    8. '
' → logprob: -16.87653923034668
    9. '(is' → logprob: -17.12653923034668
    10. '               ' → logprob: -18.00153923034668

Token 1324: '(ts' (ID: 70166)
  Prédit: 'ts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ts' → logprob: -0.04772169888019562
    2. 'tokens' → logprob: -3.2977216243743896
    3. '(ts' → logprob: -4.797721862792969
    4. 'Number' → logprob: -7.422721862792969
    5. '(tokens' → logprob: -7.797721862792969
    6. ' ts' → logprob: -8.297721862792969
    7. 'Tokens' → logprob: -10.297721862792969
    8. ' tokens' → logprob: -10.422721862792969
    9. 'int' → logprob: -10.422721862792969
    10. '	ts' → logprob: -11.672721862792969

Token 1325: '[start' (ID: 62179)
  Prédit: '[start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[start' → logprob: -0.011309526860713959
    2. '[' → logprob: -4.511309623718262
    3. '[int' → logprob: -9.261309623718262
    4. '[
' → logprob: -9.386309623718262
    5. '[end' → logprob: -10.136309623718262
    6. '[s' → logprob: -11.636309623718262
    7. '```' → logprob: -11.886309623718262
    8. ' [' → logprob: -12.136309623718262
    9. '   ' → logprob: -12.511309623718262
    10. '[in' → logprob: -12.761309623718262

Token 1326: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.024988366290926933
    2. '[start' → logprob: -4.024988174438477
    3. ',start' → logprob: -6.149988174438477
    4. '[int' → logprob: -6.399988174438477
    5. '(start' → logprob: -6.649988174438477
    6. '(ts' → logprob: -7.274988174438477
    7. ' ,' → logprob: -7.524988174438477
    8. ',int' → logprob: -9.024988174438477
    9. ',[' → logprob: -9.774988174438477
    10. '   ' → logprob: -9.899988174438477

Token 1327: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -3.8889261304575484e-06
    2. ' int' → logprob: -12.500003814697266
    3. '
' → logprob: -16.250003814697266
    4. '(int' → logprob: -17.500003814697266
    5. '   ' → logprob: -18.000003814697266
    6. '	int' → logprob: -18.750003814697266
    7. ')' → logprob: -18.750003814697266
    8. '<int' → logprob: -19.000003814697266
    9. '[int' → logprob: -19.625003814697266
    10. '=int' → logprob: -19.750003814697266

Token 1328: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2528737783432007
    2. '):' → logprob: -1.5028737783432007
    3. ')' → logprob: -7.00287389755249
    4. '):
' → logprob: -11.627873420715332
    5. '):

' → logprob: -11.752873420715332
    6. ':' → logprob: -12.002873420715332
    7. '           ' → logprob: -12.502873420715332
    8. ':
' → logprob: -12.877873420715332
    9. '       ' → logprob: -13.127873420715332
    10. '               ' → logprob: -14.127873420715332

Token 1329: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.03849686682224274
    2. 'return' → logprob: -3.288496971130371
    3. '               ' → logprob: -8.413496971130371
    4. '           ' → logprob: -9.538496971130371
    5. ' return' → logprob: -9.538496971130371
    6. '                       ' → logprob: -10.163496971130371
    7. '   ' → logprob: -11.288496971130371
    8. ':return' → logprob: -11.413496971130371
    9. '                  ' → logprob: -11.538496971130371
    10. '{return' → logprob: -11.538496971130371

Token 1330: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -7.886803359724581e-05
    2. ' return' → logprob: -10.000079154968262
    3. '                   ' → logprob: -10.500079154968262
    4. '                       ' → logprob: -12.750079154968262
    5. '               ' → logprob: -13.250079154968262
    6. '	return' → logprob: -14.375079154968262
    7. '   ' → logprob: -15.375079154968262
    8. '           ' → logprob: -15.500079154968262
    9. '{return' → logprob: -16.125078201293945
    10. ':return' → logprob: -16.375078201293945

Token 1331: ' Number' (ID: 9184)
  Prédit: 'Number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Number' → logprob: -0.0002613358374219388
    2. ' Number' → logprob: -8.250261306762695
    3. '_Number' → logprob: -20.000261306762695
    4. '   ' → logprob: -21.625261306762695
    5. ' ' → logprob: -22.625261306762695
    6. 'number' → logprob: -22.750261306762695
    7. '(Number' → logprob: -23.000261306762695
    8. '_number' → logprob: -23.500261306762695
    9. 'Num' → logprob: -23.750261306762695
    10. ' number' → logprob: -25.375261306762695

Token 1332: '(ts' (ID: 70166)
  Prédit: '(ts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ts' → logprob: -0.002094230381771922
    2. 'ts' → logprob: -6.252094268798828
    3. '(' → logprob: -8.752094268798828
    4. '(
' → logprob: -12.002094268798828
    5. '	ts' → logprob: -14.127094268798828
    6. ' ts' → logprob: -14.877094268798828
    7. '_ts' → logprob: -16.502094268798828
    8. '(tokens' → logprob: -16.752094268798828
    9. 'Ts' → logprob: -16.877094268798828
    10. '   ' → logprob: -17.377094268798828

Token 1333: '[start' (ID: 62179)
  Prédit: '[start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[start' → logprob: -1.747814349073451e-05
    2. 'start' → logprob: -11.000017166137695
    3. '[' → logprob: -15.125017166137695
    4. '[
' → logprob: -15.250017166137695
    5. ':start' → logprob: -17.625017166137695
    6. '=start' → logprob: -17.750017166137695
    7. ')' → logprob: -17.875017166137695
    8. '   ' → logprob: -18.000017166137695
    9. '[end' → logprob: -18.250017166137695
    10. '```' → logprob: -18.375017166137695

Token 1334: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.044721052050590515
    2. '])' → logprob: -3.6697211265563965
    3. ')
' → logprob: -4.0447211265563965
    4. '])
' → logprob: -7.6697211265563965
    5. '           ' → logprob: -9.169720649719238
    6. '               ' → logprob: -9.419720649719238
    7. ']' → logprob: -9.919720649719238
    8. '       ' → logprob: -11.544720649719238
    9. ' )' → logprob: -12.294720649719238
    10. '）' → logprob: -13.044720649719238

Token 1335: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0014011908788233995
    2. '            
' → logprob: -7.126401424407959
    3. '               ' → logprob: -7.751401424407959
    4. '            ' → logprob: -10.0014009475708
    5. 'return' → logprob: -10.2514009475708
    6. '       ' → logprob: -10.5014009475708
    7. '        
' → logprob: -11.2514009475708
    8. '          ' → logprob: -11.6264009475708
    9. 'elif' → logprob: -11.7514009475708
    10. '    
' → logprob: -11.8764009475708

Token 1336: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012050645425915718
    2. '               ' → logprob: -4.637050628662109
    3. 'else' (adapté à ' else') → logprob: -7.012050628662109
    4. 'elif' → logprob: -7.637050628662109
    5. 'raise' → logprob: -7.887050628662109
    6. '
' → logprob: -8.01205062866211
    7. 'if' → logprob: -9.88705062866211
    8. ' else' → logprob: -10.26205062866211
    9. '       ' → logprob: -10.76205062866211
    10. '            
' → logprob: -10.76205062866211

Token 1337: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0321544408798218
    2. '                   ' → logprob: -1.1571544408798218
    3. '               ' → logprob: -1.7821544408798218
    4. '                       ' → logprob: -3.4071545600891113
    5. '                           ' → logprob: -3.6571545600891113
    6. 'raise' → logprob: -3.9071545600891113
    7. '...' → logprob: -4.782154560089111
    8. ':' → logprob: -5.282154560089111
    9. ':
' → logprob: -5.282154560089111
    10. '{' → logprob: -5.282154560089111

Token 1338: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.31606242060661316
    2. 'raise' → logprob: -1.5660624504089355
    3. '                       ' → logprob: -3.1910624504089355
    4. '               ' → logprob: -4.6910624504089355
    5. '           ' → logprob: -4.9410624504089355
    6. '...' → logprob: -6.1910624504089355
    7. ' raise' → logprob: -7.1910624504089355
    8. 'return' → logprob: -8.316061973571777
    9. '                           ' → logprob: -8.566061973571777
    10. 'Value' → logprob: -8.691061973571777

Token 1339: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -6.749814019713085e-06
    2. ' raise' → logprob: -12.500006675720215
    3. '#' → logprob: -13.625006675720215
    4. 'Value' → logprob: -14.125006675720215
    5. '           ' → logprob: -14.750006675720215
    6. 'return' → logprob: -15.500006675720215
    7. 'break' → logprob: -15.500006675720215
    8. 'assert' → logprob: -16.75000762939453
    9. '	raise' → logprob: -17.25000762939453
    10. '       ' → logprob: -18.00000762939453

Token 1340: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -5.512236498361744e-07
    2. ' Value' → logprob: -15.000000953674316
    3. 'Syntax' → logprob: -15.750000953674316
    4. 'Runtime' → logprob: -17.25
    5. '(Value' → logprob: -18.5
    6. '_Value' → logprob: -20.125
    7. '<Value' → logprob: -20.125
    8. '_value' → logprob: -20.5
    9. '	Value' → logprob: -20.75
    10. '.Value' → logprob: -20.875

Token 1341: 'Error' (ID: 2255)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.28126347064971924
    2. 'Error' → logprob: -1.4062634706497192
    3. '(Value' → logprob: -10.15626335144043
    4. 'Index' → logprob: -10.78126335144043
    5. 'Syntax' → logprob: -11.03126335144043
    6. '.Value' → logprob: -11.90626335144043
    7. 'Runtime' → logprob: -12.03126335144043
    8. 'Val' → logprob: -12.65626335144043
    9. '_Value' → logprob: -12.78126335144043
    10. 'Token' → logprob: -12.90626335144043

Token 1342: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.12710174918174744
    2. '(f' → logprob: -2.1271016597747803
    3. '(' → logprob: -8.87710189819336
    4. '('' → logprob: -10.50210189819336
    5. '(
' → logprob: -12.37710189819336
    6. 'f' → logprob: -13.62710189819336
    7. '("'' → logprob: -14.50210189819336
    8. '()' → logprob: -14.87710189819336
    9. '("("' → logprob: -16.12710189819336
    10. '("")' → logprob: -16.50210189819336

Token 1343: 'Expected' (ID: 28041)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.1640140563249588
    2. 'Unexpected' → logprob: -2.4140141010284424
    3. 'Value' → logprob: -3.9140141010284424
    4. '"' → logprob: -4.039013862609863
    5. ' f' → logprob: -4.164013862609863
    6. 'Invalid' → logprob: -5.539013862609863
    7. 'ts' → logprob: -6.664013862609863
    8. 'Expression' → logprob: -6.789013862609863
    9. '           ' → logprob: -7.914013862609863
    10. 'Expected' → logprob: -8.039013862609863

Token 1344: ' number' (ID: 2086)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.43926551938056946
    2. 'int' → logprob: -1.814265489578247
    3. ' number' → logprob: -2.814265489578247
    4. 'a' → logprob: -3.064265489578247
    5. 'Number' → logprob: -3.314265489578247
    6. ' a' → logprob: -3.939265489578247
    7. 'an' → logprob: -4.939265727996826
    8. ' an' → logprob: -5.064265727996826
    9. ' int' → logprob: -5.564265727996826
    10. 'tokens' → logprob: -5.939265727996826

Token 1345: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.08140207827091217
    2. '")
' → logprob: -3.331402063369751
    3. ' at' → logprob: -3.456402063369751
    4. ',' → logprob: -4.70640230178833
    5. ' but' → logprob: -7.45640230178833
    6. ' or' → logprob: -8.081401824951172
    7. 'at' → logprob: -8.581401824951172
    8. ')' → logprob: -8.581401824951172
    9. 'token' → logprob: -8.581401824951172
    10. '           ' → logprob: -9.581401824951172

Token 1346: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003921847674064338
    2. '       ' → logprob: -9.000391960144043
    3. '          ' → logprob: -9.625391960144043
    4. '            
' → logprob: -9.750391960144043
    5. '               ' → logprob: -10.500391960144043
    6. ')' → logprob: -10.625391960144043
    7. '<|end|>' → logprob: -10.750391960144043
    8. '            ' → logprob: -10.875391960144043
    9. 'return' → logprob: -11.375391960144043
    10. '    
' → logprob: -12.000391960144043

Token 1347: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.020964104682207108
    2. '       ' → logprob: -4.3959641456604
    3. ' if' → logprob: -6.1459641456604
    4. '
' → logprob: -6.8959641456604
    5. '   ' → logprob: -7.0209641456604
    6. '		' → logprob: -7.6459641456604
    7. ' elif' → logprob: -8.020963668823242
    8. 'elif' → logprob: -8.020963668823242
    9. 'if' → logprob: -8.145963668823242
    10. '            
' → logprob: -8.145963668823242

Token 1348: ' If' (ID: 1843)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6713395118713379
    2. '           ' → logprob: -1.171339511871338
    3. 'ops' → logprob: -2.046339511871338
    4. 'op' → logprob: -3.171339511871338
    5. 'operators' → logprob: -6.296339511871338
    6. ' #' → logprob: -6.671339511871338
    7. 'min' → logprob: -7.171339511871338
    8. '   ' → logprob: -7.421339511871338
    9. 'idx' → logprob: -7.796339511871338
    10. 'split' → logprob: -7.796339511871338

Token 1349: ' the' (ID: 290)
  Prédit: 'ts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ts' → logprob: -0.4030819535255432
    2. 'any' → logprob: -1.7780818939208984
    3. 'start' → logprob: -2.4030818939208984
    4. 'is' → logprob: -3.5280818939208984
    5. ' ts' → logprob: -3.9030818939208984
    6. 'tokens' → logprob: -5.403081893920898
    7. ' any' → logprob: -5.528081893920898
    8. ' isinstance' → logprob: -5.653081893920898
    9. 'all' → logprob: -6.153081893920898
    10. 'len' → logprob: -6.403081893920898

Token 1350: ' token' (ID: 6602)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.5613068342208862
    2. 'next' → logprob: -1.9363068342208862
    3. '#' → logprob: -2.311306953430176
    4. 'tokens' → logprob: -3.061306953430176
    5. 'end' → logprob: -3.811306953430176
    6. 'def' → logprob: -3.811306953430176
    7. 'op' → logprob: -4.561306953430176
    8. 're' → logprob: -4.686306953430176
    9. 'first' → logprob: -4.686306953430176
    10. 'operator' → logprob: -4.686306953430176

Token 1351: ' range' (ID: 3352)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.7325549721717834
    2. '[start' → logprob: -0.8575549721717834
    3. 'start' → logprob: -3.3575549125671387
    4. 'is' → logprob: -3.9825549125671387
    5. 's' → logprob: -4.107554912567139
    6. 'in' → logprob: -4.857554912567139
    7. ' at' → logprob: -5.232554912567139
    8. '[' → logprob: -5.357554912567139
    9. 'list' → logprob: -5.857554912567139
    10. '[end' → logprob: -6.982554912567139

Token 1352: ' contains' (ID: 8895)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.46909454464912415
    2. '[' → logprob: -2.2190945148468018
    3. ' ==' → logprob: -2.2190945148468018
    4. '[start' → logprob: -2.5940945148468018
    5. '<=' → logprob: -3.5940945148468018
    6. ' is' → logprob: -4.344094753265381
    7. '[end' → logprob: -4.594094753265381
    8. ' <=' → logprob: -5.219094753265381
    9. '[next' → logprob: -5.219094753265381
    10. 'is' → logprob: -5.719094753265381

Token 1353: ' no' (ID: 860)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.8013628721237183
    2. 'any' → logprob: -1.4263628721237183
    3. 'start' → logprob: -2.301362991333008
    4. '')' → logprob: -2.676362991333008
    5. 'end' → logprob: -3.551362991333008
    6. 'no' → logprob: -4.176362991333008
    7. ''+' → logprob: -4.301362991333008
    8. 'only' → logprob: -4.426362991333008
    9. 'None' → logprob: -4.551362991333008
    10. ' any' → logprob: -5.176362991333008

Token 1354: ' parentheses' (ID: 180602)
  Prédit: 'operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'operator' → logprob: -0.7971764802932739
    2. ''' → logprob: -1.297176480293274
    3. 'op' → logprob: -2.2971763610839844
    4. 'operators' → logprob: -3.0471763610839844
    5. ' operator' → logprob: -3.4221763610839844
    6. '('' → logprob: -3.6721763610839844
    7. '(' → logprob: -4.797176361083984
    8. 'ops' → logprob: -4.922176361083984
    9. '')' → logprob: -5.047176361083984
    10. ' operators' → logprob: -5.047176361083984

Token 1355: ' on' (ID: 402)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9876740574836731
    2. ',' → logprob: -1.1126739978790283
    3. ' or' → logprob: -2.1126739978790283
    4. ':
' → logprob: -2.8626739978790283
    5. ' and' → logprob: -3.1126739978790283
    6. 'and' → logprob: -3.1126739978790283
    7. 'or' → logprob: -3.6126739978790283
    8. '           ' → logprob: -7.112674236297607
    9. '<|end|>' → logprob: -7.362674236297607
    10. 'tokens' → logprob: -7.487674236297607

Token 1356: ' its' (ID: 1617)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.14464889466762543
    2. 'start' → logprob: -3.144648790359497
    3. 'this' → logprob: -3.894648790359497
    4. 'tokens' → logprob: -4.394649028778076
    5. ' the' → logprob: -4.644649028778076
    6. 'that' → logprob: -4.894649028778076
    7. 'any' → logprob: -5.394649028778076
    8. 'positions' → logprob: -5.519649028778076
    9. 'op' → logprob: -5.894649028778076
    10. ')' → logprob: -5.894649028778076

Token 1357: ' edge' (ID: 11165)
  Prédit: 'own'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'own' → logprob: -0.048165760934352875
    2. 'outer' → logprob: -3.298165798187256
    3. 'outside' → logprob: -5.673165798187256
    4. 'surface' → logprob: -6.298165798187256
    5. 'level' → logprob: -6.423165798187256
    6. 'left' → logprob: -7.548165798187256
    7. 'side' → logprob: -7.923165798187256
    8. 'inside' → logprob: -8.173165321350098
    9. 'boundary' → logprob: -8.173165321350098
    10. 'lowest' → logprob: -8.173165321350098

Token 1358: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1917423009872437
    2. ':' → logprob: -1.1917423009872437
    3. ' or' → logprob: -1.9417423009872437
    4. ' and' → logprob: -2.066742420196533
    5. ':
' → logprob: -3.066742420196533
    6. 'and' → logprob: -3.191742420196533
    7. '           ' → logprob: -4.066742420196533
    8. 'or' → logprob: -4.316742420196533
    9. '       ' → logprob: -6.941742420196533
    10. '               ' → logprob: -7.691742420196533

Token 1359: ' we' (ID: 581)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5026366114616394
    2. '#' → logprob: -1.5026366710662842
    3. ' for' → logprob: -3.127636671066284
    4. ' #' → logprob: -3.127636671066284
    5. 'for' → logprob: -4.127636432647705
    6. ' op' → logprob: -4.627636432647705
    7. 'op' → logprob: -4.752636432647705
    8. 'min' → logprob: -5.127636432647705
    9. ' ops' → logprob: -5.502636432647705
    10. ' operators' → logprob: -5.502636432647705

Token 1360: ' try' (ID: 2075)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7606927156448364
    2. ' can' → logprob: -1.5106927156448364
    3. '           ' → logprob: -2.135692596435547
    4. 'can' → logprob: -3.135692596435547
    5. ' will' → logprob: -3.635692596435547
    6. ':' → logprob: -4.135692596435547
    7. 'will' → logprob: -4.385692596435547
    8. ' #' → logprob: -4.510692596435547
    9. ' must' → logprob: -5.010692596435547
    10. 'import' → logprob: -5.135692596435547

Token 1361: ' all' (ID: 722)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.3953759670257568
    2. 'i' → logprob: -1.8953759670257568
    3. ' to' → logprob: -2.145375967025757
    4. ' op' → logprob: -2.395375967025757
    5. 'for' → logprob: -2.520375967025757
    6. ' i' → logprob: -2.520375967025757
    7. '           ' → logprob: -2.645375967025757
    8. 'op' → logprob: -2.895375967025757
    9. 'to' → logprob: -3.395375967025757
    10. '               ' → logprob: -5.020376205444336

Token 1362: ' binary' (ID: 15600)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.347324937582016
    2. 'op' → logprob: -1.5973249673843384
    3. ' i' → logprob: -3.347324848175049
    4. ' op' → logprob: -3.472324848175049
    5. 'split' → logprob: -4.972324848175049
    6. 'ops' → logprob: -5.222324848175049
    7. '   ' → logprob: -5.472324848175049
    8. 'for' → logprob: -5.847324848175049
    9. ' for' → logprob: -6.722324848175049
    10. ' split' → logprob: -6.972324848175049

Token 1363: ' splits' (ID: 76848)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.6049323678016663
    2. 'ops' → logprob: -0.8549323678016663
    3. ' op' → logprob: -5.2299323081970215
    4. '_ops' → logprob: -5.4799323081970215
    5. 'operators' → logprob: -5.6049323081970215
    6. ' ops' → logprob: -5.7299323081970215
    7. '_op' → logprob: -5.7299323081970215
    8. ' operators' → logprob: -6.2299323081970215
    9. '   ' → logprob: -6.2299323081970215
    10. '       ' → logprob: -6.4799323081970215

Token 1364: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0381157360970974
    2. ' for' → logprob: -3.7881157398223877
    3. ',' → logprob: -5.788115501403809
    4. '<|end|>' → logprob: -6.538115501403809
    5. '
' → logprob: -6.663115501403809
    6. '<|end|>' → logprob: -6.788115501403809
    7. '               ' → logprob: -6.913115501403809
    8. ' and' → logprob: -7.413115501403809
    9. ' at' → logprob: -7.413115501403809
    10. '.' → logprob: -7.413115501403809

Token 1365: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.018823543563485146
    2. ':' → logprob: -4.893823623657227
    3. '               ' → logprob: -5.393823623657227
    4. '       ' → logprob: -5.518823623657227
    5. ',' → logprob: -7.393823623657227
    6. ':
' → logprob: -7.643823623657227
    7. ' and' → logprob: -8.268823623657227
    8. ' for' → logprob: -8.643823623657227
    9. '\n' → logprob: -9.018823623657227
    10. ' at' → logprob: -9.393823623657227

Token 1366: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03166882321238518
    2. '       ' → logprob: -3.6566689014434814
    3. '
' → logprob: -6.406668663024902
    4. ' if' → logprob: -6.406668663024902
    5. 'if' → logprob: -7.031668663024902
    6. ' for' → logprob: -7.531668663024902
    7. '        
' → logprob: -9.281668663024902
    8. 'for' → logprob: -9.281668663024902
    9. '   ' → logprob: -9.906668663024902
    10. '            
' → logprob: -9.906668663024902

Token 1367: ' but' (ID: 889)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09536217898130417
    2. 'if' → logprob: -3.5953621864318848
    3. ' if' → logprob: -3.8453621864318848
    4. ' for' → logprob: -4.845362186431885
    5. 'for' → logprob: -5.095362186431885
    6. '#' → logprob: -5.720362186431885
    7. 'tokens' → logprob: -6.345362186431885
    8. '
' → logprob: -6.470362186431885
    9. 'left' → logprob: -6.595362186431885
    10. 'idx' → logprob: -6.595362186431885

Token 1368: ' for' (ID: 395)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.30941641330719
    2. '           ' → logprob: -1.68441641330719
    3. ' not' → logprob: -2.1844162940979004
    4. 'if' → logprob: -2.5594162940979004
    5. ' any' → logprob: -2.6844162940979004
    6. ' for' → logprob: -2.6844162940979004
    7. ' True' → logprob: -3.0594162940979004
    8. ' tokens' → logprob: -3.5594162940979004
    9. 'tokens' → logprob: -4.0594162940979
    10. ' start' → logprob: -4.1844162940979

Token 1369: ' now' (ID: 1954)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.20345845818519592
    2. 'op' → logprob: -3.203458547592163
    3. 'idx' → logprob: -3.203458547592163
    4. '(' → logprob: -4.203458309173584
    5. 'paren' → logprob: -4.703458309173584
    6. 'ts' → logprob: -4.953458309173584
    7. ' i' → logprob: -4.953458309173584
    8. 'len' → logprob: -4.953458309173584
    9. 'pos' → logprob: -5.078458309173584
    10. 'start' → logprob: -5.203458309173584

Token 1370: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.1129416227340698
    2. ' return' → logprob: -1.7379416227340698
    3. ' for' → logprob: -2.3629417419433594
    4. ':' → logprob: -2.3629417419433594
    5. 'return' → logprob: -2.7379417419433594
    6. ' if' → logprob: -2.8629417419433594
    7. ':
' → logprob: -3.6129417419433594
    8. '#' → logprob: -3.6129417419433594
    9. ' #' → logprob: -3.9879417419433594
    10. ' continue' → logprob: -4.112941741943359

Token 1371: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.4793897867202759
    2. '           ' → logprob: -1.7293897867202759
    3. '#' → logprob: -2.1043896675109863
    4. ' #' → logprob: -2.1043896675109863
    5. ' tokens' → logprob: -2.3543896675109863
    6. ' splits' → logprob: -2.6043896675109863
    7. 'return' → logprob: -3.2293896675109863
    8. ' if' → logprob: -3.3543896675109863
    9. ' split' → logprob: -3.9793896675109863
    10. 'tokens' → logprob: -3.9793896675109863

Token 1372: ' a' (ID: 261)
  Prédit: 'Parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Parent' → logprob: -0.9365670084953308
    2. 'None' → logprob: -1.3115670680999756
    3. 'Number' → logprob: -1.8115670680999756
    4. 'Binary' → logprob: -2.0615670680999756
    5. 'self' → logprob: -3.4365670680999756
    6. 'Expression' → logprob: -5.6865668296813965
    7. ' None' → logprob: -6.1865668296813965
    8. '[' → logprob: -6.1865668296813965
    9. '[]' → logprob: -6.1865668296813965
    10. ' Parent' → logprob: -6.6865668296813965

Token 1373: ' special' (ID: 3582)
  Prédit: 'Binary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Binary' → logprob: -0.047069013118743896
    2. 'Parent' → logprob: -4.297069072723389
    3. ' Binary' → logprob: -4.547069072723389
    4. 'Composite' → logprob: -4.922069072723389
    5. 'Expression' → logprob: -5.297069072723389
    6. 'class' → logprob: -6.172069072723389
    7. 'Parsed' → logprob: -7.172069072723389
    8. 'None' → logprob: -7.297069072723389
    9. 'List' → logprob: -7.297069072723389
    10. 'Number' → logprob: -7.422069072723389

Token 1374: ' Expression' (ID: 32496)
  Prédit: 'Expression'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Expression' → logprob: -0.5169574618339539
    2. 'class' → logprob: -1.2669575214385986
    3. 'Binary' → logprob: -2.2669575214385986
    4. ' class' → logprob: -6.2669572830200195
    5. 'Token' → logprob: -6.2669572830200195
    6. 'Unknown' → logprob: -6.5169572830200195
    7. 'node' → logprob: -6.5169572830200195
    8. 'Node' → logprob: -6.6419572830200195
    9. 'object' → logprob: -6.6419572830200195
    10. ' Expression' → logprob: -6.7669572830200195

Token 1375: ' that' (ID: 484)
  Prédit: 'Binary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Binary' → logprob: -0.7331068515777588
    2. '(Binary' → logprob: -2.108106851577759
    3. '(None' → logprob: -2.858106851577759
    4. ' Binary' → logprob: -2.983106851577759
    5. 'None' → logprob: -3.108106851577759
    6. 'Parent' → logprob: -3.483106851577759
    7. '(' → logprob: -3.733106851577759
    8. 'Expression' → logprob: -3.858106851577759
    9. '()' → logprob: -4.10810661315918
    10. 'def' → logprob: -4.23310661315918

Token 1376: ' supports' (ID: 17203)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.9113988280296326
    2. '...' → logprob: -1.5363988876342773
    3. 'stores' → logprob: -2.6613988876342773
    4. 'supports' → logprob: -2.6613988876342773
    5. 'def' → logprob: -3.0363988876342773
    6. 'allows' → logprob: -3.4113988876342773
    7. 'can' → logprob: -3.7863988876342773
    8. 'captures' → logprob: -4.036398887634277
    9. 'raises' → logprob: -4.286398887634277
    10. 'lambda' → logprob: -4.411398887634277

Token 1377: ' generating' (ID: 36766)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.3571149706840515
    2. 'multiple' → logprob: -1.8571150302886963
    3. 'spl' → logprob: -3.1071150302886963
    4. 'lazy' → logprob: -3.1071150302886963
    5. 'different' → logprob: -4.607114791870117
    6. 'evaluate' → logprob: -4.607114791870117
    7. 'evalu' → logprob: -4.982114791870117
    8. 'binary' → logprob: -5.482114791870117
    9. 'evaluation' → logprob: -5.482114791870117
    10. 'def' → logprob: -5.732114791870117

Token 1378: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.014925627037882805
    2. 'results' → logprob: -5.264925479888916
    3. 'multiple' → logprob: -5.264925479888916
    4. '[]' → logprob: -6.639925479888916
    5. ' all' → logprob: -7.139925479888916
    6. 'a' → logprob: -7.889925479888916
    7. 'values' → logprob: -8.139925956726074
    8. 'possible' → logprob: -8.264925956726074
    9. 'different' → logprob: -8.264925956726074
    10. '[' → logprob: -8.639925956726074

Token 1379: ' ways' (ID: 6984)
  Prédit: 'Binary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Binary' → logprob: -1.2160799503326416
    2. 'possible' → logprob: -1.2160799503326416
    3. 'ways' → logprob: -1.5910799503326416
    4. 'parent' → logprob: -2.8410799503326416
    5. ' Binary' → logprob: -3.9660799503326416
    6. '_possible' → logprob: -4.0910797119140625
    7. '_binary' → logprob: -4.2160797119140625
    8. 'token' → logprob: -4.2160797119140625
    9. 'Possible' → logprob: -4.5910797119140625
    10. ')' → logprob: -4.8410797119140625

Token 1380: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7070410847663879
    2. '<|end|>' → logprob: -2.082041025161743
    3. ':' → logprob: -2.832041025161743
    4. '(' → logprob: -3.082041025161743
    5. '<|end|>' → logprob: -3.582041025161743
    6. '       ' → logprob: -3.582041025161743
    7. '(
' → logprob: -3.957041025161743
    8. ' (' → logprob: -3.957041025161743
    9. '{' → logprob: -4.082041263580322
    10. ')' → logprob: -4.207041263580322

Token 1381: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0012909513898193836
    2. 'return' → logprob: -8.126291275024414
    3. ' return' → logprob: -8.626291275024414
    4. '               ' → logprob: -8.876291275024414
    5. ':' → logprob: -9.001291275024414
    6. 'class' → logprob: -9.001291275024414
    7. '       ' → logprob: -9.126291275024414
    8. '		' → logprob: -9.626291275024414
    9. ' class' → logprob: -10.751291275024414
    10. ',' → logprob: -10.876291275024414

Token 1382: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7644428014755249
    2. 'return' (adapté à ' return') → logprob: -0.8894428014755249
    3. ' return' → logprob: -2.1394429206848145
    4. 'class' → logprob: -5.7644429206848145
    5. '       ' → logprob: -7.2644429206848145
    6. ' class' → logprob: -7.8894429206848145
    7. '
' → logprob: -8.264442443847656
    8. 'tokens' → logprob: -8.264442443847656
    9. ' tokens' → logprob: -9.014442443847656
    10. '               ' → logprob: -9.014442443847656

Token 1383: ' Expression' (ID: 32496)
  Prédit: 'Multi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Multi' → logprob: -0.9099228382110596
    2. 'All' → logprob: -1.1599228382110596
    3. 'Expression' → logprob: -2.2849228382110596
    4. 'Composite' → logprob: -2.4099228382110596
    5. 'Multiple' → logprob: -3.5349228382110596
    6. 'Binary' → logprob: -3.7849228382110596
    7. 'Compound' → logprob: -4.4099225997924805
    8. 'Expr' → logprob: -4.6599225997924805
    9. 'Combined' → logprob: -5.2849225997924805
    10. 'Operator' → logprob: -6.5349225997924805

Token 1384: 'With' (ID: 2886)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1385: 'Ops' (ID: 40217)
  Prédit: 'All'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'All' → logprob: -0.5981235504150391
    2. 'Spl' → logprob: -1.098123550415039
    3. 'Tokens' → logprob: -3.223123550415039
    4. 'Ways' → logprob: -3.848123550415039
    5. 'Split' → logprob: -4.223123550415039
    6. 'Children' → logprob: -4.473123550415039
    7. 'all' → logprob: -4.598123550415039
    8. 'spl' → logprob: -5.098123550415039
    9. 'Binary' → logprob: -5.223123550415039
    10. 'Multiple' → logprob: -5.973123550415039

Token 1386: '(ts' (ID: 70166)
  Prédit: '(ts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ts' → logprob: -0.09223414957523346
    2. '(' → logprob: -2.7172341346740723
    3. '(tokens' → logprob: -3.9672341346740723
    4. '(
' → logprob: -5.842234134674072
    5. 'tokens' → logprob: -9.34223461151123
    6. 'ts' → logprob: -10.34223461151123
    7. '([' → logprob: -10.96723461151123
    8. '```' → logprob: -11.46723461151123
    9. '((' → logprob: -11.71723461151123
    10. 'Tokens' → logprob: -12.21723461151123

Token 1387: '[start' (ID: 62179)
  Prédit: '[start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[start' → logprob: -0.2896909713745117
    2. ',' → logprob: -1.4146909713745117
    3. ',start' → logprob: -5.164690971374512
    4. '[' → logprob: -6.289690971374512
    5. ',
' → logprob: -8.414690971374512
    6. '           ' → logprob: -8.789690971374512
    7. '[
' → logprob: -9.289690971374512
    8. '   ' → logprob: -9.414690971374512
    9. ',[' → logprob: -9.539690971374512
    10. 'start' → logprob: -9.664690971374512

Token 1388: ':end' (ID: 63990)
  Prédit: ':end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':end' → logprob: -0.0026597201358526945
    2. ':' → logprob: -6.377659797668457
    3. '+' → logprob: -8.127659797668457
    4. ',' → logprob: -8.377659797668457
    5. ' :' → logprob: -8.502659797668457
    6. ',end' → logprob: -9.127659797668457
    7. '   ' → logprob: -10.002659797668457
    8. ' ' → logprob: -10.127659797668457
    9. 'end' → logprob: -11.877659797668457
    10. ' ,' → logprob: -12.002659797668457

Token 1389: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.00027337539358995855
    2. ')' → logprob: -8.625273704528809
    3. ']' → logprob: -10.250273704528809
    4. '],' → logprob: -11.125273704528809
    5. '])
' → logprob: -11.250273704528809
    6. '       ' → logprob: -11.500273704528809
    7. ' ])' → logprob: -12.625273704528809
    8. '   ' → logprob: -13.000273704528809
    9. '))' → logprob: -13.250273704528809
    10. '           ' → logprob: -13.375273704528809

Token 1390: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0821361541748047
    2. ')' → logprob: -1.4571361541748047
    3. '   ' → logprob: -1.4571361541748047
    4. ':' → logprob: -1.9571361541748047
    5. '           ' → logprob: -4.082136154174805
    6. 'class' → logprob: -4.332136154174805
    7. '(
' → logprob: -5.082136154174805
    8. ']' → logprob: -6.207136154174805
    9. ':
' → logprob: -6.207136154174805
    10. '               ' → logprob: -6.582136154174805

Token 1391: ' def' (ID: 1056)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0575541257858276
    2. '   ' → logprob: -1.0575541257858276
    3. '       ' → logprob: -1.5575541257858276
    4. '    
' → logprob: -3.057554244995117
    5. '        
' → logprob: -3.682554244995117
    6. ')' → logprob: -5.182554244995117
    7. 'class' → logprob: -5.557554244995117
    8. '           ' → logprob: -5.682554244995117
    9. 'def' (adapté à ' def') → logprob: -6.307554244995117
    10. '<|end|>' → logprob: -6.307554244995117

Token 1392: ' expr' (ID: 30206)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.14279493689537048
    2. 'Expression' → logprob: -2.5177948474884033
    3. ' parse' → logprob: -4.142795085906982
    4. 'matching' → logprob: -4.517795085906982
    5. 'build' → logprob: -5.142795085906982
    6. 'self' → logprob: -5.642795085906982
    7. '_expression' → logprob: -5.767795085906982
    8. ' Expression' → logprob: -5.892795085906982
    9. 'tokens' → logprob: -6.642795085906982
    10. 'match' → logprob: -6.642795085906982

Token 1393: '_all' (ID: 13305)
  Prédit: '_tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_tokens' → logprob: -0.012764851562678814
    2. ' =' → logprob: -5.012764930725098
    3. '_with' → logprob: -5.387764930725098
    4. 's' → logprob: -8.512764930725098
    5. '=' → logprob: -8.637764930725098
    6. 'with' → logprob: -8.762764930725098
    7. 'Tokens' → logprob: -9.012764930725098
    8. ')' → logprob: -9.137764930725098
    9. '<|end|>' → logprob: -9.137764930725098
    10. 'tokens' → logprob: -9.387764930725098

Token 1394: '_' (ID: 62)
  Prédit: 'With'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'With' → logprob: -0.5891740322113037
    2. '_with' → logprob: -1.3391740322113037
    3. '_tokens' → logprob: -2.2141740322113037
    4. '_' → logprob: -3.8391740322113037
    5. 'Ways' → logprob: -3.8391740322113037
    6. 'with' → logprob: -4.839174270629883
    7. 'Tokens' → logprob: -5.089174270629883
    8. ' =' → logprob: -5.714174270629883
    9. ')' → logprob: -5.839174270629883
    10. 's' → logprob: -6.089174270629883

Token 1395: 'ways' (ID: 2771)
  Prédit: 'ways'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.004383843857795
    2. 'ops' → logprob: -6.0043840408325195
    3. 'Ways' → logprob: -6.3793840408325195
    4. 'tokens' → logprob: -9.87938404083252
    5. '_' → logprob: -10.25438404083252
    6. 'way' → logprob: -10.37938404083252
    7. ' ways' → logprob: -11.25438404083252
    8. 'with' → logprob: -12.00438404083252
    9. '   ' → logprob: -12.12938404083252
    10. 'ows' → logprob: -12.50438404083252

Token 1396: '(ts' (ID: 70166)
  Prédit: '(tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tokens' → logprob: -0.5147199034690857
    2. '_tokens' → logprob: -1.6397199630737305
    3. '(ts' → logprob: -1.8897199630737305
    4. ' =' → logprob: -3.7647199630737305
    5. '(' → logprob: -3.8897199630737305
    6. ':' → logprob: -5.3897199630737305
    7. '(token' → logprob: -6.6397199630737305
    8. '=' → logprob: -6.8897199630737305
    9. 'tokens' → logprob: -6.8897199630737305
    10. '(self' → logprob: -7.2647199630737305

Token 1397: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0029824525117874146
    2. ' ,' → logprob: -7.0029826164245605
    3. ')' → logprob: -7.1279826164245605
    4. ':' → logprob: -8.002982139587402
    5. '):' → logprob: -8.002982139587402
    6. '<|end|>' → logprob: -9.502982139587402
    7. ',start' → logprob: -9.502982139587402
    8. '[' → logprob: -9.752982139587402
    9. '[start' → logprob: -9.877982139587402
    10. '):
' → logprob: -9.877982139587402

Token 1398: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.01349206455051899
    2. ')' → logprob: -5.138492107391357
    3. ' List' → logprob: -6.013492107391357
    4. 'Union' → logprob: -6.138492107391357
    5. '[List' → logprob: -6.638492107391357
    6. 'ts' → logprob: -8.6384916305542
    7. 'list' → logprob: -8.7634916305542
    8. '[start' → logprob: -9.0134916305542
    9. '[int' → logprob: -9.1384916305542
    10. ' Union' → logprob: -9.2634916305542

Token 1399: '[' (ID: 58)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.39245903491973877
    2. '[' → logprob: -1.1424590349197388
    3. ',' → logprob: -5.767458915710449
    4. ')' → logprob: -6.767458915710449
    5. ',int' → logprob: -7.017458915710449
    6. '):' → logprob: -9.01745891571045
    7. 'Union' → logprob: -9.26745891571045
    8. '):
' → logprob: -9.76745891571045
    9. 'int' → logprob: -9.76745891571045
    10. '<int' → logprob: -11.76745891571045

Token 1400: 'Union' (ID: 39222)
  Prédit: 'Union'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Union' → logprob: -4.7755875129951164e-05
    2. 'int' → logprob: -11.25004768371582
    3. 'union' → logprob: -11.25004768371582
    4. '_union' → logprob: -11.25004768371582
    5. ' Union' → logprob: -12.00004768371582
    6. '[int' → logprob: -14.37504768371582
    7. '[' → logprob: -14.37504768371582
    8. ''Union' → logprob: -14.62504768371582
    9. ')' → logprob: -15.00004768371582
    10. 'Uniform' → logprob: -15.12504768371582

Token 1401: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.014302297495305538
    2. 'int' → logprob: -4.2643022537231445
    3. ',int' → logprob: -9.014302253723145
    4. ',' → logprob: -11.639302253723145
    5. '<int' → logprob: -12.264302253723145
    6. '[' → logprob: -14.014302253723145
    7. ']int' → logprob: -14.514302253723145
    8. '=int' → logprob: -14.764302253723145
    9. ':int' → logprob: -14.889302253723145
    10. 'Union' → logprob: -14.889302253723145

Token 1402: ',str' (ID: 95110)
  Prédit: ',str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',str' → logprob: -0.0028025058563798666
    2. ',' → logprob: -6.25280237197876
    3. ',int' → logprob: -7.12780237197876
    4. 'str' → logprob: -10.502802848815918
    5. '[str' → logprob: -11.252802848815918
    6. ',float' → logprob: -12.127802848815918
    7. ',bool' → logprob: -12.377802848815918
    8. ' ,' → logprob: -12.627802848815918
    9. ',len' → logprob: -12.627802848815918
    10. ',
' → logprob: -12.627802848815918

Token 1403: ']],' (ID: 37171)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '],' → logprob: -0.054461508989334106
    2. '])' → logprob: -3.0544614791870117
    3. ',' → logprob: -5.179461479187012
    4. '       ' → logprob: -9.679461479187012
    5. ']):
' → logprob: -10.054461479187012
    6. '),' → logprob: -10.429461479187012
    7. ']])' → logprob: -10.554461479187012
    8. '   ' → logprob: -11.304461479187012
    9. ']):' → logprob: -11.429461479187012
    10. ']' → logprob: -11.679461479187012

Token 1404: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.045195478945970535
    2. ' start' → logprob: -3.1701955795288086
    3. ')' → logprob: -7.920195579528809
    4. '   ' → logprob: -8.420195579528809
    5. '           ' → logprob: -8.670195579528809
    6. '       ' → logprob: -8.670195579528809
    7. 'l' → logprob: -8.670195579528809
    8. 's' → logprob: -8.920195579528809
    9. 'pos' → logprob: -9.420195579528809
    10. '          ' → logprob: -9.545195579528809

Token 1405: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.028291434049606323
    2. ',end' → logprob: -4.65329122543335
    3. '):' → logprob: -5.40329122543335
    4. '+' → logprob: -5.65329122543335
    5. ')' → logprob: -6.02829122543335
    6. ' ,' → logprob: -6.02829122543335
    7. ':' → logprob: -6.52829122543335
    8. ':int' → logprob: -6.77829122543335
    9. ',int' → logprob: -7.15329122543335
    10. '<|end|>' → logprob: -7.27829122543335

Token 1406: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -6.988221684878226e-06
    2. ' int' → logprob: -12.000006675720215
    3. '   ' → logprob: -14.625006675720215
    4. '...' → logprob: -16.12500762939453
    5. '[int' → logprob: -16.87500762939453
    6. ')' → logprob: -17.00000762939453
    7. '
' → logprob: -17.12500762939453
    8. ',int' → logprob: -18.37500762939453
    9. ',' → logprob: -18.50000762939453
    10. 'Optional' → logprob: -18.75000762939453

Token 1407: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016384923947043717
    2. ',end' → logprob: -9.000164031982422
    3. ' ,' → logprob: -10.375164031982422
    4. ',
' → logprob: -12.250164031982422
    5. 'def' → logprob: -13.500164031982422
    6. ',int' → logprob: -14.000164031982422
    7. ')' → logprob: -14.125164031982422
    8. '   ' → logprob: -15.375164031982422
    9. ',next' → logprob: -15.375164031982422
    10. '<|end|>' → logprob: -15.750164031982422

Token 1408: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.023251768201589584
    2. ' end' → logprob: -3.77325177192688
    3. '   ' → logprob: -12.8982515335083
    4. '      ' → logprob: -14.0232515335083
    5. '    ' → logprob: -14.1482515335083
    6. '       ' → logprob: -14.5232515335083
    7. ' ' → logprob: -14.8982515335083
    8. '     ' → logprob: -15.0232515335083
    9. '  ' → logprob: -15.2732515335083
    10. '        ' → logprob: -15.6482515335083

Token 1409: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11182013899087906
    2. '):' → logprob: -2.4868202209472656
    3. '):
' → logprob: -4.236820220947266
    4. ':' → logprob: -5.111820220947266
    5. '+' → logprob: -6.611820220947266
    6. ',' → logprob: -7.736820220947266
    7. '   ' → logprob: -8.986820220947266
    8. '):
' → logprob: -9.736820220947266
    9. '=' → logprob: -10.111820220947266
    10. '):

' → logprob: -11.111820220947266

Token 1410: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00031866179779171944
    2. ' int' → logprob: -8.75031852722168
    3. ')' → logprob: -9.00031852722168
    4. 'end' → logprob: -10.37531852722168
    5. '[int' → logprob: -13.00031852722168
    6. '=int' → logprob: -13.62531852722168
    7. ':int' → logprob: -14.50031852722168
    8. '   ' → logprob: -15.50031852722168
    9. '(int' → logprob: -15.62531852722168
    10. ']int' → logprob: -15.62531852722168

Token 1411: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0032984360586851835
    2. '):' → logprob: -6.003298282623291
    3. '):
' → logprob: -7.128298282623291
    4. '   ' → logprob: -11.62829875946045
    5. ')->' → logprob: -12.87829875946045
    6. '       ' → logprob: -13.37829875946045
    7. ':' → logprob: -13.62829875946045
    8. '):
' → logprob: -13.75329875946045
    9. ' )' → logprob: -14.12829875946045
    10. ')
' → logprob: -14.25329875946045

Token 1412: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009412972256541252
    2. ':
' → logprob: -4.75941276550293
    3. '   ' → logprob: -8.88441276550293
    4. ':return' → logprob: -8.88441276550293
    5. ')' → logprob: -9.13441276550293
    6. ' :' → logprob: -9.38441276550293
    7. ' ->' → logprob: -9.50941276550293
    8. '       ' → logprob: -10.00941276550293
    9. '<|end|>' → logprob: -10.25941276550293
    10. '<|end|>' → logprob: -10.25941276550293

Token 1413: ' Expression' (ID: 32496)
  Prédit: 'Expression'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Expression' → logprob: -0.0018000080017372966
    2. 'parse' → logprob: -7.001800060272217
    3. 'int' → logprob: -7.626800060272217
    4. 'List' → logprob: -9.126799583435059
    5. 'Callable' → logprob: -9.126799583435059
    6. 'Optional' → logprob: -9.876799583435059
    7. ' Expression' → logprob: -10.126799583435059
    8. 'Union' → logprob: -10.251799583435059
    9. '(Expression' → logprob: -11.251799583435059
    10. 'Expr' → logprob: -11.626799583435059

Token 1414: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0948016569018364
    2. ':
' → logprob: -2.719801664352417
    3. '           ' → logprob: -5.219801425933838
    4. '       ' → logprob: -5.469801425933838
    5. '{' → logprob: -5.469801425933838
    6. '(tokens' → logprob: -6.219801425933838
    7. '<|end|>' → logprob: -6.344801425933838
    8. '<|end|>' → logprob: -7.094801425933838
    9. '   ' → logprob: -7.594801425933838
    10. ')' → logprob: -7.719801425933838

Token 1415: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007018941454589367
    2. '           ' → logprob: -5.88201904296875
    3. ' if' → logprob: -6.38201904296875
    4. '   ' → logprob: -6.88201904296875
    5. '        ' → logprob: -7.25701904296875
    6. 'if' → logprob: -8.88201904296875
    7. '    ' → logprob: -9.25701904296875
    8. '(' → logprob: -9.38201904296875
    9. ' ' → logprob: -9.63201904296875
    10. '      ' → logprob: -10.00701904296875

Token 1416: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.005799028091132641
    2. '           ' → logprob: -6.005798816680908
    3. '       ' → logprob: -6.380798816680908
    4. ' if' → logprob: -6.505798816680908
    5. 'tokens' → logprob: -9.880799293518066
    6. 'return' → logprob: -10.755799293518066
    7. '#' (adapté à ' #') → logprob: -10.880799293518066
    8. 'token' → logprob: -11.005799293518066
    9. '   ' → logprob: -11.505799293518066
    10. '               ' → logprob: -12.005799293518066

Token 1417: ' Like' (ID: 13342)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.008444721810519695
    2. '           ' → logprob: -5.008444786071777
    3. ' if' → logprob: -6.508444786071777
    4. '       ' → logprob: -9.258444786071777
    5. '#' → logprob: -9.633444786071777
    6. 'tokens' → logprob: -10.633444786071777
    7. 'return' → logprob: -11.133444786071777
    8. 'i' → logprob: -11.633444786071777
    9. '   ' → logprob: -12.383444786071777
    10. '               ' → logprob: -12.383444786071777

Token 1418: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.0026406990364193916
    2. ' parse' → logprob: -6.752640724182129
    3. 'self' → logprob: -7.877640724182129
    4. 'expr' → logprob: -8.127640724182129
    5. 'def' → logprob: -8.252640724182129
    6. '           ' → logprob: -8.502640724182129
    7. 'ts' → logprob: -9.627640724182129
    8. 'start' → logprob: -9.877640724182129
    9. 'tokens' → logprob: -9.877640724182129
    10. 'Expression' → logprob: -10.252640724182129

Token 1419: '_tokens' (ID: 65830)
  Prédit: '_tokens'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tokens' → logprob: -0.0018301078816875815
    2. '_' → logprob: -6.751830101013184
    3. 'Tokens' → logprob: -8.126830101013184
    4. 'tokens' → logprob: -8.376830101013184
    5. '_t' → logprob: -9.876830101013184
    6. '_token' → logprob: -10.876830101013184
    7. '```' → logprob: -11.376830101013184
    8. '_expression' → logprob: -11.876830101013184
    9. '(tokens' → logprob: -12.126830101013184
    10. '\' → logprob: -12.501830101013184

Token 1420: ' but' (ID: 889)
  Prédit: '(ts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ts' → logprob: -0.04925576224923134
    2. '(' → logprob: -3.549255847930908
    3. 'def' → logprob: -5.049255847930908
    4. '(tokens' → logprob: -5.174255847930908
    5. ':' → logprob: -6.424255847930908
    6. '   ' → logprob: -6.674255847930908
    7. '(
' → logprob: -7.424255847930908
    8. ' def' → logprob: -7.924255847930908
    9. 'ts' → logprob: -7.924255847930908
    10. ',' → logprob: -7.924255847930908

Token 1421: ' wrap' (ID: 20404)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.40399301052093506
    2. 'return' → logprob: -2.1539931297302246
    3. 'tokens' → logprob: -2.2789931297302246
    4. 'parse' → logprob: -3.0289931297302246
    5. '               ' → logprob: -4.528993129730225
    6. ' return' → logprob: -5.153993129730225
    7. 'cache' → logprob: -5.403993129730225
    8. ' tokens' → logprob: -5.403993129730225
    9. '   ' → logprob: -5.528993129730225
    10. '(tokens' → logprob: -5.653993129730225

Token 1422: ' as' (ID: 472)
  Prédit: 'ts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ts' → logprob: -0.8549801111221313
    2. '(ts' → logprob: -1.6049801111221313
    3. '(Expression' → logprob: -1.9799801111221313
    4. 'Expression' → logprob: -2.354979991912842
    5. 'parse' → logprob: -3.104979991912842
    6. '(' → logprob: -3.604979991912842
    7. '(
' → logprob: -4.229979991912842
    8. '(parse' → logprob: -4.229979991912842
    9. 'def' → logprob: -4.729979991912842
    10. 'return' → logprob: -4.854979991912842

Token 1423: ' Expression' (ID: 32496)
  Prédit: 'Expression'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Expression' → logprob: -0.005735502112656832
    2. 'self' → logprob: -5.755735397338867
    3. 'parse' → logprob: -6.130735397338867
    4. 'Binary' → logprob: -8.505735397338867
    5. 'expr' → logprob: -10.005735397338867
    6. '(Expression' → logprob: -10.255735397338867
    7. ' Expression' → logprob: -10.630735397338867
    8. 'lambda' → logprob: -11.005735397338867
    9. '   ' → logprob: -11.505735397338867
    10. 'tokens' → logprob: -11.755735397338867

Token 1424: 'With' (ID: 2886)
  Prédit: 'With'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'With' → logprob: -0.01217666082084179
    2. 'All' → logprob: -4.512176513671875
    3. '(
' → logprob: -7.762176513671875
    4. '_with' → logprob: -8.887176513671875
    5. '(' → logprob: -9.137176513671875
    6. 'with' → logprob: -9.262176513671875
    7. '(ts' → logprob: -9.512176513671875
    8. '   ' → logprob: -10.262176513671875
    9. '(tokens' → logprob: -10.262176513671875
    10. '           ' → logprob: -10.387176513671875

Token 1425: 'Ops' (ID: 40217)
  Prédit: 'Ops'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Ops' → logprob: -0.003286678809672594
    2. 'ops' → logprob: -5.753286838531494
    3. '_ops' → logprob: -10.003286361694336
    4. 'Op' → logprob: -10.753286361694336
    5. '
' → logprob: -11.503286361694336
    6. '```' → logprob: -12.503286361694336
    7. 'Binary' → logprob: -12.878286361694336
    8. 'Opts' → logprob: -12.878286361694336
    9. 'Operators' → logprob: -12.878286361694336
    10. 'list' → logprob: -13.003286361694336

Token 1426: ' to' (ID: 316)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.28806203603744507
    2. '(
' → logprob: -1.9130620956420898
    3. '(ts' → logprob: -3.03806209564209
    4. ':' → logprob: -3.91306209564209
    5. '   ' → logprob: -4.28806209564209
    6. '('' → logprob: -5.53806209564209
    7. '('\' → logprob: -6.03806209564209
    8. 'return' → logprob: -6.28806209564209
    9. '\t' → logprob: -6.53806209564209
    10. '(tokens' → logprob: -6.53806209564209

Token 1427: ' handle' (ID: 5318)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.21361343562602997
    2. 'parse' → logprob: -1.9636133909225464
    3. ' return' → logprob: -4.088613510131836
    4. 'self' → logprob: -4.463613510131836
    5. 'build' → logprob: -5.213613510131836
    6. '           ' → logprob: -5.713613510131836
    7. ')' → logprob: -6.213613510131836
    8. 'Expression' → logprob: -6.463613510131836
    9. ' parse' → logprob: -6.463613510131836
    10. '
' → logprob: -6.588613510131836

Token 1428: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.5824836492538452
    2. 'ts' → logprob: -1.0824836492538452
    3. 'memo' → logprob: -3.4574837684631348
    4. 'multiple' → logprob: -4.207483768463135
    5. 'rec' → logprob: -5.082483768463135
    6. 'the' → logprob: -5.332483768463135
    7. 'possible' → logprob: -5.332483768463135
    8. 'binary' → logprob: -5.457483768463135
    9. 'full' → logprob: -5.707483768463135
    10. 'different' → logprob: -5.957483768463135

Token 1429: ' possible' (ID: 4149)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.3599221408367157
    2. 'possible' → logprob: -1.859922170639038
    3. 'tokens' → logprob: -2.609922170639038
    4. 'ops' → logprob: -4.234921932220459
    5. 'token' → logprob: -4.609921932220459
    6. ' ways' → logprob: -4.609921932220459
    7. '_possible' → logprob: -4.734921932220459
    8. 'parent' → logprob: -5.109921932220459
    9. 'op' → logprob: -5.234921932220459
    10. 'operators' → logprob: -5.734921932220459

Token 1430: ' parent' (ID: 5980)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.6667124032974243
    2. '_' → logprob: -1.4167124032974243
    3. 'ops' → logprob: -2.7917122840881348
    4. 'tokens' → logprob: -2.7917122840881348
    5. 'ts' → logprob: -3.5417122840881348
    6. 'parent' → logprob: -3.7917122840881348
    7. '_ops' → logprob: -4.041712284088135
    8. '_tokens' → logprob: -4.541712284088135
    9. '   ' → logprob: -5.166712284088135
    10. 'Ways' → logprob: -5.166712284088135

Token 1431: 'hesis' (ID: 101333)
  Prédit: 'heses'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heses' → logprob: -0.24372723698616028
    2. 'hes' → logprob: -1.743727207183838
    3. 'h' → logprob: -3.868727207183838
    4. 'hesis' → logprob: -4.243727207183838
    5. ')' → logprob: -5.243727207183838
    6. 'hs' → logprob: -7.618727207183838
    7. ']' → logprob: -8.993727684020996
    8. '```' → logprob: -10.243727684020996
    9. '))' → logprob: -10.743727684020996
    10. '#' → logprob: -10.993727684020996

Token 1432: ' placements' (ID: 122051)
  Prédit: 'ings'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ings' → logprob: -0.9911003708839417
    2. ')' → logprob: -1.6161003112792969
    3. 's' → logprob: -1.6161003112792969
    4. '_' → logprob: -1.8661003112792969
    5. '   ' → logprob: -4.616100311279297
    6. 'ing' → logprob: -4.866100311279297
    7. ')(
' → logprob: -4.991100311279297
    8. ' ' → logprob: -5.116100311279297
    9. ')_' → logprob: -5.241100311279297
    10. '           ' → logprob: -5.741100311279297

Token 1433: '
' (ID: 198)
  Prédit: '(ts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ts' → logprob: -0.04510672390460968
    2. 'def' → logprob: -4.920106887817383
    3. '           ' → logprob: -5.170106887817383
    4. '
' → logprob: -5.170106887817383
    5. '(tokens' → logprob: -5.170106887817383
    6. ':' → logprob: -5.670106887817383
    7. '):
' → logprob: -5.795106887817383
    8. ':
' → logprob: -6.045106887817383
    9. ')' → logprob: -6.295106887817383
    10. '):' → logprob: -6.420106887817383

Token 1434: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.022892864421010017
    2. '               ' → logprob: -4.397892951965332
    3. ':' → logprob: -6.022892951965332
    4. '       ' → logprob: -6.147892951965332
    5. ')' → logprob: -6.522892951965332
    6. ',' → logprob: -6.897892951965332
    7. '   ' → logprob: -7.772892951965332
    8. '(' → logprob: -7.897892951965332
    9. '          ' → logprob: -8.272892951965332
    10. '):' → logprob: -8.397892951965332

Token 1435: ' return' (ID: 622)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.05153411999344826
    2. '           ' → logprob: -3.5515341758728027
    3. ' if' → logprob: -4.301534175872803
    4. 'return' (adapté à ' return') → logprob: -5.301534175872803
    5. '       ' → logprob: -6.551534175872803
    6. '               ' → logprob: -6.801534175872803
    7. 'tokens' → logprob: -8.301533699035645
    8. '   ' → logprob: -9.301533699035645
    9. '```' → logprob: -10.426533699035645
    10. ' return' → logprob: -10.676533699035645

Token 1436: ' parse' (ID: 8420)
  Prédit: 'Expression'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Expression' → logprob: -0.20197807252407074
    2. 'parse' → logprob: -1.951978087425232
    3. 'self' → logprob: -3.2019779682159424
    4. ' Expression' → logprob: -9.951977729797363
    5. 'expr' → logprob: -10.326977729797363
    6. 'Expr' → logprob: -10.326977729797363
    7. '(Expression' → logprob: -10.826977729797363
    8. ' parse' → logprob: -11.326977729797363
    9. 'Self' → logprob: -11.451977729797363
    10. '(parse' → logprob: -11.451977729797363

Token 1437: '_tokens' (ID: 65830)
  Prédit: '_tokens'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tokens' → logprob: -3.881560041918419e-05
    2. '_' → logprob: -11.250039100646973
    3. '_t' → logprob: -11.375039100646973
    4. 'tokens' → logprob: -12.125039100646973
    5. 'Tokens' → logprob: -12.375039100646973
    6. '_token' → logprob: -12.625039100646973
    7. '```' → logprob: -15.375039100646973
    8. '_
' → logprob: -15.875039100646973
    9. ' _' → logprob: -16.125038146972656
    10. ')_' → logprob: -16.250038146972656

Token 1438: '(ts' (ID: 70166)
  Prédit: '(ts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ts' → logprob: -0.002965576946735382
    2. '(tokens' → logprob: -6.002965450286865
    3. '(' → logprob: -7.752965450286865
    4. '(
' → logprob: -10.252965927124023
    5. 'ts' → logprob: -11.127965927124023
    6. ' (' → logprob: -12.252965927124023
    7. '	ts' → logprob: -13.127965927124023
    8. 'tokens' → logprob: -14.252965927124023
    9. '
' → logprob: -14.627965927124023
    10. ')' → logprob: -14.752965927124023

Token 1439: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012856863031629473
    2. '(ts' → logprob: -10.000128746032715
    3. ' ,' → logprob: -10.125128746032715
    4. ',
' → logprob: -11.250128746032715
    5. ',t' → logprob: -11.750128746032715
    6. '       ' → logprob: -12.625128746032715
    7. '(tokens' → logprob: -12.750128746032715
    8. '           ' → logprob: -12.875128746032715
    9. ')' → logprob: -13.000128746032715
    10. '   ' → logprob: -13.375128746032715

Token 1440: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.0007761581800878048
    2. ' start' → logprob: -7.250776290893555
    3. 'end' → logprob: -9.625776290893555
    4. ' end' → logprob: -15.625776290893555
    5. 'star' → logprob: -18.125776290893555
    6. '[start' → logprob: -18.375776290893555
    7. '(start' → logprob: -19.125776290893555
    8. '_start' → logprob: -19.250776290893555
    9. 'Start' → logprob: -19.375776290893555
    10. '=start' → logprob: -19.625776290893555

Token 1441: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0022273333743214607
    2. ',end' → logprob: -6.127227306365967
    3. ' ,' → logprob: -10.127227783203125
    4. ',
' → logprob: -13.752227783203125
    5. '+' → logprob: -15.002227783203125
    6. '   ' → logprob: -15.252227783203125
    7. ',next' → logprob: -16.127227783203125
    8. '<|end|>' → logprob: -16.502227783203125
    9. 'end' → logprob: -17.002227783203125
    10. '<|end|>' → logprob: -17.002227783203125

Token 1442: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.0024756586644798517
    2. ' end' → logprob: -6.002475738525391
    3. '(end' → logprob: -20.00247573852539
    4. '[end' → logprob: -20.00247573852539
    5. '	end' → logprob: -20.50247573852539
    6. '=end' → logprob: -20.50247573852539
    7. ',end' → logprob: -21.50247573852539
    8. 'End' → logprob: -21.50247573852539
    9. '_end' → logprob: -21.50247573852539
    10. 'END' → logprob: -22.25247573852539

Token 1443: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001116880914196372
    2. '       ' → logprob: -6.876116752624512
    3. '           ' → logprob: -10.126116752624512
    4. '   ' → logprob: -11.126116752624512
    5. ')
' → logprob: -11.626116752624512
    6. ' )' → logprob: -12.126116752624512
    7. ',' → logprob: -13.001116752624512
    8. '        ' → logprob: -13.251116752624512
    9. ')[' → logprob: -13.376116752624512
    10. '      ' → logprob: -13.626116752624512

Token 1444: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015491651371121407
    2. '           ' → logprob: -5.015491485595703
    3. 'return' → logprob: -5.140491485595703
    4. '   ' → logprob: -6.890491485595703
    5. '
' → logprob: -7.515491485595703
    6. '<|end|>' → logprob: -7.765491485595703
    7. ' return' → logprob: -8.265491485595703
    8. '        
' → logprob: -8.765491485595703
    9. 'tokens' → logprob: -8.890491485595703
    10. '```' → logprob: -10.140491485595703

Token 1445: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41028934717178345
    2. '           ' → logprob: -1.5352892875671387
    3. 'return' → logprob: -2.2852892875671387
    4. '
' → logprob: -4.785289287567139
    5. ' return' → logprob: -5.160289287567139
    6. '#' (adapté à ' #') → logprob: -6.535289287567139
    7. 'tokens' → logprob: -7.160289287567139
    8. '   ' → logprob: -7.285289287567139
    9. 'def' → logprob: -7.785289287567139
    10. 'class' → logprob: -7.910289287567139

Token 1446: ' We' (ID: 1416)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.005454074125736952
    2. '       ' → logprob: -5.505454063415527
    3. ' return' → logprob: -6.755454063415527
    4. '   ' → logprob: -9.505454063415527
    5. '           ' → logprob: -9.880454063415527
    6. 'def' → logprob: -10.755454063415527
    7. 'expr' → logprob: -10.755454063415527
    8. '#' → logprob: -11.005454063415527
    9. 'result' → logprob: -11.880454063415527
    10. '
' → logprob: -12.255454063415527

Token 1447: ' define' (ID: 13174)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.01315152458846569
    2. ' return' → logprob: -5.0131516456604
    3. '=' → logprob: -6.1381516456604
    4. ' =' → logprob: -6.6381516456604
    5. 'def' → logprob: -6.8881516456604
    6. 'eturn' → logprob: -7.0131516456604
    7. '_return' → logprob: -8.638151168823242
    8. '   ' → logprob: -8.763151168823242
    9. 'tokens' → logprob: -9.388151168823242
    10. 'continue' → logprob: -9.513151168823242

Token 1448: ' a' (ID: 261)
  Prédit: 'Expression'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Expression' → logprob: -0.41040441393852234
    2. 'class' → logprob: -1.7854044437408447
    3. 'self' → logprob: -2.2854044437408447
    4. 'lambda' → logprob: -3.2854044437408447
    5. 'parse' → logprob: -4.035404205322266
    6. 'def' → logprob: -5.535404205322266
    7. 'expr' → logprob: -6.035404205322266
    8. 'expression' → logprob: -6.285404205322266
    9. '       ' → logprob: -7.035404205322266
    10. '   ' → logprob: -7.660404205322266

Token 1449: ' helper' (ID: 25246)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.1269213855266571
    2. 'def' → logprob: -2.2519214153289795
    3. 'return' → logprob: -4.5019211769104
    4. 'cache' → logprob: -6.6269211769104
    5. 'Expression' → logprob: -7.8769211769104
    6. ')' → logprob: -8.251921653747559
    7. ' class' → logprob: -8.251921653747559
    8. '
' → logprob: -8.876921653747559
    9. '   ' → logprob: -9.126921653747559
    10. ' def' → logprob: -9.751921653747559

Token 1450: ' to' (ID: 316)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.045559562742710114
    2. ' def' → logprob: -3.1705596446990967
    3. '
' → logprob: -6.295559406280518
    4. ')' → logprob: -8.670559883117676
    5. '   ' → logprob: -8.920559883117676
    6. 'function' → logprob: -9.170559883117676
    7. ']' → logprob: -10.170559883117676
    8. ' function' → logprob: -10.170559883117676
    9. 'token' → logprob: -10.420559883117676
    10. '<|end|>' → logprob: -10.795559883117676

Token 1451: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.22777824103832245
    2. 'matching' → logprob: -1.8527781963348389
    3. ' find' → logprob: -3.602778196334839
    4. 'parse' → logprob: -5.102778434753418
    5. 'match' → logprob: -5.352778434753418
    6. 'build' → logprob: -5.727778434753418
    7. ' matching' → logprob: -5.852778434753418
    8. 'def' → logprob: -6.977778434753418
    9. 'compute' → logprob: -7.602778434753418
    10. 'return' → logprob: -7.852778434753418

Token 1452: ' matching' (ID: 20238)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6022834777832031
    2. 'start' → logprob: -0.9772834777832031
    3. 'matching' → logprob: -3.352283477783203
    4. 'end' → logprob: -4.102283477783203
    5. ')' → logprob: -4.852283477783203
    6. ' self' → logprob: -5.852283477783203
    7. ' matching' → logprob: -5.977283477783203
    8. 'the' → logprob: -6.227283477783203
    9. '_matching' → logprob: -6.602283477783203
    10. ' start' → logprob: -6.727283477783203

Token 1453: ' par' (ID: 686)
  Prédit: '_par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_par' → logprob: -0.08892441540956497
    2. 'paren' → logprob: -2.9639244079589844
    3. '_parent' → logprob: -3.5889244079589844
    4. 'parent' → logprob: -5.463924407958984
    5. 'par' → logprob: -7.213924407958984
    6. ')' → logprob: -8.213924407958984
    7. '(paren' → logprob: -8.838924407958984
    8. 'Paren' → logprob: -9.463924407958984
    9. '_' → logprob: -9.588924407958984
    10. '_token' → logprob: -9.713924407958984

Token 1454: 'en' (ID: 262)
  Prédit: 'en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.008165115490555763
    2. 'ent' → logprob: -4.883164882659912
    3. 'paren' → logprob: -8.63316535949707
    4. 'ens' → logprob: -8.88316535949707
    5. 'e' → logprob: -9.88316535949707
    6. 'an' → logprob: -10.00816535949707
    7. ')' → logprob: -10.13316535949707
    8. 'end' → logprob: -11.00816535949707
    9. 'open' → logprob: -11.25816535949707
    10. 'def' → logprob: -11.38316535949707

Token 1455: ' index' (ID: 3472)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.07426311075687408
    2. 'ts' → logprob: -4.074263095855713
    3. 's' → logprob: -4.324263095855713
    4. '_index' → logprob: -4.449263095855713
    5. 'th' → logprob: -4.949263095855713
    6. '_idx' → logprob: -4.949263095855713
    7. '_pos' → logprob: -5.449263095855713
    8. '_t' → logprob: -6.199263095855713
    9. '(self' → logprob: -6.574263095855713
    10. ')' → logprob: -6.574263095855713

Token 1456: ':
' (ID: 734)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2832232117652893
    2. '
' → logprob: -2.2832231521606445
    3. '   ' → logprob: -3.1582231521606445
    4. ' =' → logprob: -3.2832231521606445
    5. '       ' → logprob: -3.9082231521606445
    6. ' def' → logprob: -4.4082231521606445
    7. '(' → logprob: -4.5332231521606445
    8. '(self' → logprob: -4.9082231521606445
    9. '=' → logprob: -5.9082231521606445
    10. '(tokens' → logprob: -6.1582231521606445

Token 1457: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8168994188308716
    2. 'def' → logprob: -0.8168994188308716
    3. '   ' → logprob: -2.941899299621582
    4. '
' → logprob: -3.566899299621582
    5. '           ' → logprob: -3.816899299621582
    6. ' def' → logprob: -4.441899299621582
    7. '    ' → logprob: -7.941899299621582
    8. '        
' → logprob: -8.191899299621582
    9. '    
' → logprob: -8.566899299621582
    10. '```' → logprob: -9.441899299621582

Token 1458: ' def' (ID: 1056)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.160156011581421
    2. '       ' → logprob: -1.410156011581421
    3. 'def' (adapté à ' def') → logprob: -1.410156011581421
    4. '   ' → logprob: -1.785156011581421
    5. ' def' → logprob: -3.910156011581421
    6. '    
' → logprob: -5.53515625
    7. '        
' → logprob: -6.53515625
    8. '    ' → logprob: -6.78515625
    9. '(' → logprob: -7.16015625
    10. ' 
' → logprob: -7.53515625

Token 1459: ' matching' (ID: 20238)
  Prédit: ' matching'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' matching' → logprob: -0.20128116011619568
    2. 'matching' → logprob: -2.3262810707092285
    3. '_matching' → logprob: -2.8262810707092285
    4. ' find' → logprob: -3.9512810707092285
    5. ' _' → logprob: -5.8262810707092285
    6. '_find' → logprob: -6.8262810707092285
    7. 'find' → logprob: -7.7012810707092285
    8. '_' → logprob: -7.8262810707092285
    9. ' parse' → logprob: -7.8262810707092285
    10. ' def' → logprob: -8.076281547546387

Token 1460: '_par' (ID: 31329)
  Prédit: '_par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_par' → logprob: -0.000215457082958892
    2. '_parent' → logprob: -9.000215530395508
    3. '_' → logprob: -9.500215530395508
    4. 'paren' → logprob: -11.875215530395508
    5. 'Paren' → logprob: -12.500215530395508
    6. '(paren' → logprob: -12.625215530395508
    7. 'par' → logprob: -13.750215530395508
    8. '_para' → logprob: -14.250215530395508
    9. '_token' → logprob: -14.750215530395508
    10. '_p' → logprob: -15.125215530395508

Token 1461: 'en' (ID: 262)
  Prédit: 'en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.00015276329941116273
    2. 'ent' → logprob: -9.750152587890625
    3. '(self' → logprob: -9.750152587890625
    4. 'def' → logprob: -11.375152587890625
    5. 'e' → logprob: -12.000152587890625
    6. 'an' → logprob: -12.125152587890625
    7. '(paren' → logprob: -12.875152587890625
    8. '   ' → logprob: -13.625152587890625
    9. '```' → logprob: -13.875152587890625
    10. '(en' → logprob: -14.250152587890625

Token 1462: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0007915244204923511
    2. '(' → logprob: -7.250791549682617
    3. 'self' → logprob: -9.875791549682617
    4. '   ' → logprob: -11.125791549682617
    5. '(
' → logprob: -12.125791549682617
    6. '(s' → logprob: -12.500791549682617
    7. ' (' → logprob: -13.000791549682617
    8. '       ' → logprob: -14.125791549682617
    9. 'def' → logprob: -14.625791549682617
    10. '
' → logprob: -14.750791549682617

Token 1463: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01564600132405758
    2. 'self' → logprob: -4.640645980834961
    3. '(self' → logprob: -5.390645980834961
    4. '   ' → logprob: -7.140645980834961
    5. ',self' → logprob: -8.265645980834961
    6. '       ' → logprob: -9.140645980834961
    7. ')' → logprob: -10.015645980834961
    8. ' ,' → logprob: -10.015645980834961
    9. ')(' → logprob: -10.765645980834961
    10. ',s' → logprob: -11.015645980834961

Token 1464: ' tokens' (ID: 20290)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.2538406550884247
    2. 'ts' → logprob: -1.503840684890747
    3. 'self' → logprob: -6.503840446472168
    4. 's' → logprob: -8.878840446472168
    5. '   ' → logprob: -8.878840446472168
    6. ' tokens' → logprob: -9.378840446472168
    7. ' ts' → logprob: -11.378840446472168
    8. '       ' → logprob: -11.628840446472168
    9. 't' → logprob: -11.753840446472168
    10. 'token' → logprob: -12.753840446472168

Token 1465: ':' (ID: 25)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.006340760737657547
    2. ',' → logprob: -5.381340980529785
    3. 'self' → logprob: -7.256340980529785
    4. ')' → logprob: -8.131340980529785
    5. '   ' → logprob: -8.131340980529785
    6. '(' → logprob: -9.006340980529785
    7. '       ' → logprob: -9.256340980529785
    8. '):' → logprob: -9.881340980529785
    9. ')(' → logprob: -9.881340980529785
    10. ' (' → logprob: -10.506340980529785

Token 1466: ' List' (ID: 2655)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.010050944983959198
    2. 'List' → logprob: -5.1350507736206055
    3. 'int' → logprob: -6.1350507736206055
    4. '   ' → logprob: -7.2600507736206055
    5. '       ' → logprob: -7.8850507736206055
    6. ' self' → logprob: -8.260050773620605
    7. ',' → logprob: -8.885050773620605
    8. 'tokens' → logprob: -9.260050773620605
    9. '(self' → logprob: -10.135050773620605
    10. 'list' → logprob: -10.385050773620605

Token 1467: '[' (ID: 58)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.038521189242601395
    2. '[int' → logprob: -4.0385212898254395
    3. '   ' → logprob: -4.5385212898254395
    4. ',self' → logprob: -6.0385212898254395
    5. ' ,' → logprob: -6.2885212898254395
    6. '[self' → logprob: -6.6635212898254395
    7. '[' → logprob: -6.7885212898254395
    8. ',int' → logprob: -7.1635212898254395
    9. '       ' → logprob: -7.7885212898254395
    10. ':' → logprob: -7.7885212898254395

Token 1468: 'Union' (ID: 39222)
  Prédit: 'Union'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Union' → logprob: -0.8113429546356201
    2. 'str' → logprob: -1.0613429546356201
    3. 'int' → logprob: -1.8113429546356201
    4. '[str' → logprob: -3.56134295463562
    5. '[int' → logprob: -4.686343193054199
    6. ')' → logprob: -4.811343193054199
    7. '   ' → logprob: -8.3113431930542
    8. 'union' → logprob: -9.6863431930542
    9. ' Union' → logprob: -9.8113431930542
    10. '):
' → logprob: -10.6863431930542

Token 1469: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.001579374773427844
    2. 'int' → logprob: -6.501579284667969
    3. ',int' → logprob: -9.501579284667969
    4. ',' → logprob: -13.876579284667969
    5. '[str' → logprob: -14.376579284667969
    6. '[' → logprob: -14.626579284667969
    7. ' int' → logprob: -16.25157928466797
    8. ':int' → logprob: -16.50157928466797
    9. '   ' → logprob: -17.12657928466797
    10. ']int' → logprob: -17.12657928466797

Token 1470: ',str' (ID: 95110)
  Prédit: ',str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',str' → logprob: -0.0017557413084432483
    2. ',' → logprob: -6.751755714416504
    3. 'str' → logprob: -7.626755714416504
    4. ',int' → logprob: -9.626755714416504
    5. '[str' → logprob: -10.376755714416504
    6. ',
' → logprob: -14.751755714416504
    7. ',s' → logprob: -15.376755714416504
    8. ' ,' → logprob: -15.501755714416504
    9. 'int' → logprob: -17.37675666809082
    10. ',char' → logprob: -17.50175666809082

Token 1471: ']],' (ID: 37171)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '],' → logprob: -0.00880400650203228
    2. ',' → logprob: -4.758803844451904
    3. '])' → logprob: -8.883804321289062
    4. '   ' → logprob: -10.758804321289062
    5. '),' → logprob: -11.008804321289062
    6. ' ],' → logprob: -12.758804321289062
    7. ']' → logprob: -12.883804321289062
    8. ''],' → logprob: -13.383804321289062
    9. '       ' → logprob: -13.508804321289062
    10. '},' → logprob: -13.883804321289062

Token 1472: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.24312734603881836
    2. 'idx' → logprob: -2.4931273460388184
    3. 'index' → logprob: -2.8681273460388184
    4. 'pos' → logprob: -2.8681273460388184
    5. 'i' → logprob: -4.618127346038818
    6. ' start' → logprob: -5.493127346038818
    7. ' idx' → logprob: -6.243127346038818
    8. 'open' → logprob: -6.243127346038818
    9. 'self' → logprob: -7.618127346038818
    10. ' index' → logprob: -8.118127822875977

Token 1473: '_index' (ID: 7748)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20865584909915924
    2. '):' → logprob: -2.208655834197998
    3. '):
' → logprob: -3.708655834197998
    4. ':' → logprob: -3.833655834197998
    5. '   ' → logprob: -3.958655834197998
    6. ',' → logprob: -4.708655834197998
    7. '       ' → logprob: -6.708655834197998
    8. '+' → logprob: -7.083655834197998
    9. ':int' → logprob: -7.333655834197998
    10. '(self' → logprob: -8.083656311035156

Token 1474: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0026642426382750273
    2. '   ' → logprob: -6.377664089202881
    3. '):' → logprob: -7.877664089202881
    4. '(self' → logprob: -8.252664566040039
    5. ':' → logprob: -8.627664566040039
    6. '       ' → logprob: -9.752664566040039
    7. '):
' → logprob: -10.127664566040039
    8. ',' → logprob: -11.377664566040039
    9. ' )' → logprob: -11.502664566040039
    10. 'self' → logprob: -11.877664566040039

Token 1475: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -6.630610641877865e-06
    2. ' int' → logprob: -12.000006675720215
    3. 'Optional' → logprob: -15.500006675720215
    4. '   ' → logprob: -16.6250057220459
    5. '[int' → logprob: -16.6250057220459
    6. '(int' → logprob: -17.6250057220459
    7. ':int' → logprob: -18.0000057220459
    8. '	int' → logprob: -18.0000057220459
    9. 'Int' → logprob: -18.3750057220459
    10. ']int' → logprob: -18.6250057220459

Token 1476: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005125007592141628
    2. '):
' → logprob: -6.130125045776367
    3. '):' → logprob: -6.255125045776367
    4. ':' → logprob: -7.255125045776367
    5. '   ' → logprob: -8.380125045776367
    6. '       ' → logprob: -10.005125045776367
    7. ')->' → logprob: -10.630125045776367
    8. '):
' → logprob: -12.880125045776367
    9. ' )' → logprob: -13.505125045776367
    10. '):

' → logprob: -13.755125045776367

Token 1477: ' ->' (ID: 2747)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8103117942810059
    2. ':' → logprob: -0.9353117942810059
    3. '   ' → logprob: -2.185311794281006
    4. 'def' → logprob: -3.685311794281006
    5. ' =' → logprob: -4.935311794281006
    6. '    ' → logprob: -5.435311794281006
    7. ' def' → logprob: -5.810311794281006
    8. ':
' → logprob: -5.935311794281006
    9. '=' → logprob: -6.685311794281006
    10. ':int' → logprob: -7.060311794281006

Token 1478: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0007174347410909832
    2. ' int' → logprob: -7.375717639923096
    3. '[int' → logprob: -9.750717163085938
    4. '(int' → logprob: -11.000717163085938
    5. 'Optional' → logprob: -11.750717163085938
    6. 'None' → logprob: -12.750717163085938
    7. ':int' → logprob: -13.375717163085938
    8. '
' → logprob: -14.375717163085938
    9. 'Int' → logprob: -14.500717163085938
    10. '<int' → logprob: -14.625717163085938

Token 1479: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5993578433990479
    2. ':' → logprob: -0.8493578433990479
    3. ':
' → logprob: -3.849357843399048
    4. '):' → logprob: -8.099357604980469
    5. '   ' → logprob: -8.099357604980469
    6. ')' → logprob: -8.224357604980469
    7. '):
' → logprob: -8.474357604980469
    8. ',' → logprob: -8.599357604980469
    9. '{' → logprob: -9.599357604980469
    10. '[' → logprob: -9.724357604980469

Token 1480: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009187239338643849
    2. 'i' → logprob: -7.750918865203857
    3. '   ' → logprob: -8.3759183883667
    4. ' i' → logprob: -10.0009183883667
    5. '    ' → logprob: -10.1259183883667
    6. '```' → logprob: -10.1259183883667
    7. 'index' → logprob: -10.3759183883667
    8. '           ' → logprob: -11.1259183883667
    9. 'indent' → logprob: -11.3759183883667
    10. 'n' → logprob: -11.7509183883667

Token 1481: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11490097641944885
    2. 'stack' → logprob: -3.239901065826416
    3. 'depth' → logprob: -3.239901065826416
    4. 'level' → logprob: -4.239901065826416
    5. 'count' → logprob: -4.239901065826416
    6. 'counter' → logprob: -7.614901065826416
    7. '           ' → logprob: -8.489900588989258
    8. 'nest' → logprob: -8.739900588989258
    9. 'balance' → logprob: -9.239900588989258
    10. '   ' → logprob: -9.364900588989258

Token 1482: ' Pre' (ID: 4659)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.0696659088134766
    2. 'depth' → logprob: -1.3196659088134766
    3. '       ' → logprob: -1.8196659088134766
    4. 'stack' → logprob: -2.0696659088134766
    5. 'level' → logprob: -2.3196659088134766
    6. 'counter' → logprob: -6.444665908813477
    7. 'cnt' → logprob: -7.444665908813477
    8. 'nest' → logprob: -8.319665908813477
    9. 'balance' → logprob: -8.444665908813477
    10. '           ' → logprob: -8.444665908813477

Token 1483: 'condition' (ID: 15688)
  Prédit: 'dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dict' → logprob: -0.5883368253707886
    2. 'd' → logprob: -1.0883368253707886
    3. '       ' → logprob: -3.088336944580078
    4. 'v' → logprob: -4.213336944580078
    5. 'def' → logprob: -4.463336944580078
    6. 'sum' → logprob: -4.588336944580078
    7. 'count' → logprob: -5.338336944580078
    8. '   ' → logprob: -5.338336944580078
    9. 's' → logprob: -5.463336944580078
    10. 'sent' → logprob: -5.963336944580078

Token 1484: ' tokens' (ID: 20290)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.42769697308540344
    2. 'stack' → logprob: -2.302696943283081
    3. 'count' → logprob: -2.427696943283081
    4. 'depth' → logprob: -3.302696943283081
    5. 'level' → logprob: -3.427696943283081
    6. ' =' → logprob: -3.802696943283081
    7. 'counter' → logprob: -4.05269718170166
    8. ' if' → logprob: -4.55269718170166
    9. '        ' → logprob: -4.67769718170166
    10. 'if' → logprob: -5.17769718170166

Token 1485: '[start' (ID: 62179)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0342648029327393
    2. '[start' → logprob: -1.1592648029327393
    3. '       ' → logprob: -2.0342648029327393
    4. '   ' → logprob: -2.9092648029327393
    5. '[' → logprob: -3.5342648029327393
    6. 'def' → logprob: -3.6592648029327393
    7. '[self' → logprob: -4.15926456451416
    8. ' =' → logprob: -4.53426456451416
    9. '=' → logprob: -4.78426456451416
    10. ')' → logprob: -5.03426456451416

Token 1486: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.005365494638681412
    2. ']' → logprob: -6.130365371704102
    3. 'index' → logprob: -7.130365371704102
    4. '   ' → logprob: -7.380365371704102
    5. '```' → logprob: -7.880365371704102
    6. '
' → logprob: -8.255365371704102
    7. '+' → logprob: -8.380365371704102
    8. '       ' → logprob: -8.630365371704102
    9. ')' → logprob: -8.880365371704102
    10. ']=' → logprob: -9.380365371704102

Token 1487: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -1.1131256818771362
    2. '==' → logprob: -1.2381256818771362
    3. ')' → logprob: -1.7381256818771362
    4. ']' → logprob: -2.238125801086426
    5. ']==' → logprob: -3.113125801086426
    6. ' is' → logprob: -3.988125801086426
    7. '       ' → logprob: -5.113125801086426
    8. ':
' → logprob: -5.363125801086426
    9. ':' → logprob: -5.488125801086426
    10. '[' → logprob: -5.488125801086426

Token 1488: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5837223529815674
    2. '==' → logprob: -0.8337223529815674
    3. ')' → logprob: -6.083722114562988
    4. '       ' → logprob: -6.708722114562988
    5. ' must' → logprob: -7.458722114562988
    6. ' is' → logprob: -7.583722114562988
    7. '=='' → logprob: -7.708722114562988
    8. 'must' → logprob: -7.833722114562988
    9. ':' → logprob: -7.958722114562988
    10. '```' → logprob: -8.083722114562988

Token 1489: ' '('' (ID: 87284)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0005610156804323196
    2. '')' → logprob: -7.750561237335205
    3. '(' → logprob: -9.875560760498047
    4. '"' → logprob: -9.875560760498047
    5. '('' → logprob: -11.500560760498047
    6. ' '('' → logprob: -11.625560760498047
    7. ''(' → logprob: -12.000560760498047
    8. ')' → logprob: -13.375560760498047
    9. '(
' → logprob: -16.000560760498047
    10. '("("' → logprob: -16.125560760498047

Token 1490: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018975267186760902
    2. 'count' → logprob: -5.018975257873535
    3. '
' → logprob: -5.393975257873535
    4. 'depth' → logprob: -6.143975257873535
    5. '           ' → logprob: -6.893975257873535
    6. '   ' → logprob: -6.893975257873535
    7. 'stack' → logprob: -7.018975257873535
    8. 'level' → logprob: -7.393975257873535
    9. ':' → logprob: -7.643975257873535
    10. 'counter' → logprob: -7.893975257873535

Token 1491: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003396343090571463
    2. '   ' → logprob: -9.00033950805664
    3. ',' → logprob: -9.50033950805664
    4. '```' → logprob: -9.75033950805664
    5. 'def' → logprob: -10.62533950805664
    6. '           ' → logprob: -10.87533950805664
    7. ':' → logprob: -11.25033950805664
    8. ')' → logprob: -12.12533950805664
    9. 'count' → logprob: -12.62533950805664
    10. 'self' → logprob: -13.37533950805664

Token 1492: ' depth' (ID: 13636)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5871938467025757
    2. 'level' → logprob: -2.0871939659118652
    3. 'count' → logprob: -2.0871939659118652
    4. 'stack' → logprob: -2.3371939659118652
    5. 'depth' (adapté à ' depth') → logprob: -2.3371939659118652
    6. 'counter' → logprob: -7.087193965911865
    7. '           ' → logprob: -7.337193965911865
    8. 'cnt' → logprob: -7.337193965911865
    9. 'balance' → logprob: -8.087193489074707
    10. 'nest' → logprob: -8.712193489074707

Token 1493: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47583743929862976
    2. ' =' → logprob: -0.9758374691009521
    3. ' +=' → logprob: -6.600837230682373
    4. '+=' → logprob: -7.975837230682373
    5. '       ' → logprob: -10.475837707519531
    6. ' ' → logprob: -11.350837707519531
    7. '        ' → logprob: -11.975837707519531
    8. '   ' → logprob: -12.850837707519531
    9. ':' → logprob: -12.975837707519531
    10. '	' → logprob: -13.600837707519531

Token 1494: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001502636878285557
    2. '0' → logprob: -8.875150680541992
    3. ' ' → logprob: -11.500150680541992
    4. '   ' → logprob: -15.375150680541992
    5. '```' → logprob: -17.500150680541992
    6. '  ' → logprob: -17.750150680541992
    7. '+' → logprob: -18.125150680541992
    8. '`' → logprob: -18.625150680541992
    9. '{
' → logprob: -19.125150680541992
    10. '۱' → logprob: -19.312650680541992

Token 1495: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007612424436956644
    2. '0' → logprob: -4.882612228393555
    3. ' ' → logprob: -12.007612228393555
    4. '   ' → logprob: -17.382612228393555
    5. '```' → logprob: -17.507612228393555
    6. '`' → logprob: -18.007612228393555
    7. '=' → logprob: -19.507612228393555
    8. '+' → logprob: -19.757612228393555
    9. '  ' → logprob: -19.820112228393555
    10. '``' → logprob: -19.882612228393555

Token 1496: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01570820063352585
    2. ' for' → logprob: -4.640707969665527
    3. 'for' → logprob: -5.390707969665527
    4. 'while' → logprob: -7.640707969665527
    5. '   ' → logprob: -8.765707969665527
    6. '	' → logprob: -9.015707969665527
    7. ' while' → logprob: -9.265707969665527
    8. '
' → logprob: -9.265707969665527
    9. '           ' → logprob: -9.390707969665527
    10. '```' → logprob: -9.765707969665527

Token 1497: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02021927200257778
    2. 'for' → logprob: -4.645219326019287
    3. ' for' → logprob: -4.645219326019287
    4. 'while' → logprob: -8.395218849182129
    5. '	' → logprob: -8.520218849182129
    6. '   ' → logprob: -8.895218849182129
    7. '	for' → logprob: -10.020218849182129
    8. '	   ' → logprob: -10.395218849182129
    9. '           ' → logprob: -10.395218849182129
    10. ' while' → logprob: -10.520218849182129

Token 1498: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.004603149369359016
    2. 'i' → logprob: -6.254603385925293
    3. '       ' → logprob: -6.254603385925293
    4. ' for' → logprob: -7.254603385925293
    5. 'index' → logprob: -10.629603385925293
    6. 'idx' → logprob: -12.129603385925293
    7. '   ' → logprob: -12.629603385925293
    8. 'while' → logprob: -12.629603385925293
    9. '```' → logprob: -13.004603385925293
    10. 'n' → logprob: -13.254603385925293

Token 1499: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -3.3213025744771585e-05
    2. ' i' → logprob: -10.500033378601074
    3. 'idx' → logprob: -12.250033378601074
    4. '   ' → logprob: -14.375033378601074
    5. 'index' → logprob: -15.375033378601074
    6. '	i' → logprob: -17.750032424926758
    7. '_i' → logprob: -18.125032424926758
    8. '
' → logprob: -18.625032424926758
    9. '       ' → logprob: -19.000032424926758
    10. '```' → logprob: -19.500032424926758

Token 1500: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0907265767455101
    2. 'in' → logprob: -2.465726613998413
    3. ' i' → logprob: -7.090726375579834
    4. ' ' → logprob: -8.590726852416992
    5. ',' → logprob: -9.090726852416992
    6. 'i' → logprob: -9.215726852416992
    7. '=start' → logprob: -9.215726852416992
    8. '[start' → logprob: -9.465726852416992
    9. '	in' → logprob: -9.840726852416992
    10. '<|end|>' → logprob: -10.090726852416992

Token 1501: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.000714935187716037
    2. ' range' → logprob: -7.2507147789001465
    3. 'start' → logprob: -12.500715255737305
    4. '(range' → logprob: -13.875715255737305
    5. '
' → logprob: -15.375715255737305
    6. '	range' → logprob: -16.375715255737305
    7. '   ' → logprob: -17.125715255737305
    8. '[start' → logprob: -17.875715255737305
    9. 'index' → logprob: -18.000715255737305
    10. 'rang' → logprob: -18.250715255737305

Token 1502: '(start' (ID: 20008)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -3.619311974034645e-05
    2. ' start' → logprob: -11.125036239624023
    3. 'self' → logprob: -11.375036239624023
    4. '(start' → logprob: -12.500036239624023
    5. '
' → logprob: -13.125036239624023
    6. '   ' → logprob: -13.250036239624023
    7. '[start' → logprob: -13.500036239624023
    8. '=start' → logprob: -14.625036239624023
    9. '       ' → logprob: -15.375036239624023
    10. 'i' → logprob: -15.750036239624023

Token 1503: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.002844579517841339
    2. 'start' → logprob: -6.87784481048584
    3. '(start' → logprob: -7.00284481048584
    4. '   ' → logprob: -8.12784481048584
    5. '_start' → logprob: -8.87784481048584
    6. 'index' → logprob: -8.87784481048584
    7. '+' → logprob: -9.37784481048584
    8. '       ' → logprob: -10.25284481048584
    9. '```' → logprob: -10.25284481048584
    10. ',start' → logprob: -10.50284481048584

Token 1504: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04265405237674713
    2. '+' → logprob: -3.292654037475586
    3. ' +' → logprob: -5.917654037475586
    4. ' ,' → logprob: -7.792654037475586
    5. ',start' → logprob: -7.792654037475586
    6. '       ' → logprob: -7.917654037475586
    7. ',len' → logprob: -7.917654037475586
    8. '	' → logprob: -9.292654037475586
    9. '+,' → logprob: -10.667654037475586
    10. '(start' → logprob: -10.917654037475586

Token 1505: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00012439649435691535
    2. ' len' → logprob: -9.000123977661133
    3. '(len' → logprob: -14.625123977661133
    4. '       ' → logprob: -15.500123977661133
    5. '   ' → logprob: -15.625123977661133
    6. '           ' → logprob: -15.875123977661133
    7. '
' → logprob: -17.875123977661133
    8. '<len' → logprob: -18.250123977661133
    9. ',len' → logprob: -18.375123977661133
    10. '	len' → logprob: -18.500123977661133

Token 1506: '(tokens' (ID: 74272)
  Prédit: '(tokens'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tokens' → logprob: -0.014291146770119667
    2. 'tokens' → logprob: -4.264291286468506
    3. '(self' → logprob: -9.389290809631348
    4. '(' → logprob: -10.264290809631348
    5. ' tokens' → logprob: -12.639290809631348
    6. 'self' → logprob: -12.639290809631348
    7. '(
' → logprob: -13.889290809631348
    8. '.tokens' → logprob: -14.514290809631348
    9. '   ' → logprob: -15.264290809631348
    10. ')' → logprob: -15.264290809631348

Token 1507: ')):
' (ID: 22530)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.049969859421253204
    2. '):' → logprob: -3.0499699115753174
    3. '       ' → logprob: -6.674969673156738
    4. '           ' → logprob: -9.924969673156738
    5. '):
' → logprob: -10.674969673156738
    6. '()):
' → logprob: -11.549969673156738
    7. '   ' → logprob: -12.174969673156738
    8. '):

' → logprob: -12.174969673156738
    9. '():
' → logprob: -12.424969673156738
    10. '[' → logprob: -12.674969673156738

Token 1508: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003132976416964084
    2. '       ' → logprob: -8.375313758850098
    3. 'if' → logprob: -9.750313758850098
    4. ' if' → logprob: -11.625313758850098
    5. '          ' → logprob: -12.625313758850098
    6. '               ' → logprob: -12.625313758850098
    7. '   ' → logprob: -12.625313758850098
    8. '	       ' → logprob: -13.000313758850098
    9. '```' → logprob: -13.875313758850098
    10. '         ' → logprob: -14.875313758850098

Token 1509: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5019216537475586
    2. 'if' (adapté à ' if') → logprob: -1.0019216537475586
    3. ' if' → logprob: -3.7519216537475586
    4. '               ' → logprob: -6.001921653747559
    5. '	       ' → logprob: -7.501921653747559
    6. '       ' → logprob: -8.001921653747559
    7. '   ' → logprob: -8.376921653747559
    8. '		' → logprob: -10.001921653747559
    9. 'token' → logprob: -10.001921653747559
    10. 'depth' → logprob: -10.001921653747559

Token 1510: ' tokens' (ID: 20290)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.00878462940454483
    2. ' tokens' → logprob: -4.758784770965576
    3. '           ' → logprob: -8.758784294128418
    4. '               ' → logprob: -12.633784294128418
    5. '   ' → logprob: -12.633784294128418
    6. '       ' → logprob: -13.008784294128418
    7. '(tokens' → logprob: -13.133784294128418
    8. 'token' → logprob: -14.758784294128418
    9. '.tokens' → logprob: -15.258784294128418
    10. ' ' → logprob: -15.258784294128418

Token 1511: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.558399319241289e-05
    2. '==' → logprob: -11.125025749206543
    3. '[' → logprob: -12.375025749206543
    4. ' ==' → logprob: -12.500025749206543
    5. '[
' → logprob: -13.250025749206543
    6. '```' → logprob: -14.750025749206543
    7. 'i' → logprob: -15.375025749206543
    8. '`' → logprob: -16.375024795532227
    9. '{i' → logprob: -16.625024795532227
    10. '(i' → logprob: -17.000024795532227

Token 1512: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3886960744857788
    2. '==' → logprob: -1.1386960744857788
    3. ']==' → logprob: -7.138696193695068
    4. '=='' → logprob: -7.263696193695068
    5. '=' → logprob: -9.38869571685791
    6. ']' → logprob: -9.51369571685791
    7. ')==' → logprob: -10.13869571685791
    8. '===' → logprob: -10.88869571685791
    9. '==
' → logprob: -10.88869571685791
    10. ')' → logprob: -11.13869571685791

Token 1513: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5376012325286865
    2. ' ==' → logprob: -0.9126012325286865
    3. '=='' → logprob: -4.287601470947266
    4. '==
' → logprob: -8.037601470947266
    5. '=' → logprob: -9.287601470947266
    6. '	' → logprob: -9.912601470947266
    7. ' =='' → logprob: -10.162601470947266
    8. '[' → logprob: -10.412601470947266
    9. '=="' → logprob: -10.537601470947266
    10. '		' → logprob: -11.287601470947266

Token 1514: ' '('' (ID: 87284)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0011069943429902196
    2. ' '('' → logprob: -7.001107215881348
    3. '"' → logprob: -9.251107215881348
    4. '(' → logprob: -9.876107215881348
    5. ''(' → logprob: -10.126107215881348
    6. '('' → logprob: -12.001107215881348
    7. ' '' → logprob: -14.126107215881348
    8. '("("' → logprob: -15.376107215881348
    9. '(
' → logprob: -15.626107215881348
    10. ' "("' → logprob: -15.751107215881348

Token 1515: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05596601217985153
    2. ':
' → logprob: -3.0559659004211426
    3. ':' → logprob: -5.180965900421143
    4. '           ' → logprob: -7.055965900421143
    5. ' or' → logprob: -7.555965900421143
    6. '):
' → logprob: -8.9309663772583
    7. 'depth' → logprob: -10.4309663772583
    8. 'or' → logprob: -10.6809663772583
    9. '(depth' → logprob: -10.6809663772583
    10. '              ' → logprob: -10.6809663772583

Token 1516: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0009545749635435641
    2. 'depth' → logprob: -7.000954627990723
    3. '           ' → logprob: -10.750954627990723
    4. '(depth' → logprob: -11.250954627990723
    5. ' depth' → logprob: -12.500954627990723
    6. '                   ' → logprob: -13.500954627990723
    7. '              ' → logprob: -13.500954627990723
    8. '                       ' → logprob: -14.625954627990723
    9. '.depth' → logprob: -15.000954627990723
    10. '	           ' → logprob: -15.000954627990723

Token 1517: ' depth' (ID: 13636)
  Prédit: 'depth'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'depth' (adapté à ' depth') → logprob: -0.013517125509679317
    2. '               ' → logprob: -4.513516902923584
    3. ' depth' → logprob: -6.013516902923584
    4. '(depth' → logprob: -11.013517379760742
    5. '                   ' → logprob: -13.013517379760742
    6. '.depth' → logprob: -14.263517379760742
    7. '+' → logprob: -14.888517379760742
    8. '           ' → logprob: -15.013517379760742
    9. '   ' → logprob: -15.263517379760742
    10. '                ' → logprob: -15.763517379760742

Token 1518: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.004656422417610884
    2. ' +=' → logprob: -5.3796563148498535
    3. ']+=' → logprob: -11.004656791687012
    4. '+' → logprob: -12.004656791687012
    5. '           ' → logprob: -12.379656791687012
    6. '               ' → logprob: -12.379656791687012
    7. '=' → logprob: -12.504656791687012
    8. '                   ' → logprob: -14.504656791687012
    9. '            ' → logprob: -15.504656791687012
    10. '```' → logprob: -16.379655838012695

Token 1519: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '<|end|>' → logprob: -18.625
    4. '```' → logprob: -19.875
    5. '+' → logprob: -20.75
    6. '۱' → logprob: -21.5
    7. '
' → logprob: -22.625
    8. '{
' → logprob: -22.625
    9. '   ' → logprob: -22.75
    10. '१' → logprob: -23.625

Token 1520: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -19.375
    3. '<|end|>' → logprob: -20.125
    4. '```' → logprob: -20.75
    5. '`' → logprob: -22.625
    6. '
' → logprob: -22.875
    7. '{
' → logprob: -23.125
    8. '۱' → logprob: -23.125
    9. '+' → logprob: -23.75
    10. '(' → logprob: -24.0

Token 1521: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01109156385064125
    2. 'elif' → logprob: -4.511091709136963
    3. ' elif' → logprob: -10.761091232299805
    4. '       ' → logprob: -12.011091232299805
    5. '               ' → logprob: -12.136091232299805
    6. '		' → logprob: -12.511091232299805
    7. '```' → logprob: -13.261091232299805
    8. '<|end|>' → logprob: -13.261091232299805
    9. '
' → logprob: -14.011091232299805
    10. '	elif' → logprob: -14.386091232299805

Token 1522: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00018542143516242504
    2. 'elif' → logprob: -8.625185012817383
    3. '
' → logprob: -12.750185012817383
    4. '       ' → logprob: -14.000185012817383
    5. ' elif' → logprob: -14.125185012817383
    6. '```' → logprob: -14.500185012817383
    7. '		' → logprob: -14.750185012817383
    8. '               ' → logprob: -15.375185012817383
    9. '          ' → logprob: -16.000185012817383
    10. '	       ' → logprob: -16.500185012817383

Token 1523: ' elif' (ID: 9497)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.049566298723220825
    2. 'elif' (adapté à ' elif') → logprob: -3.0495662689208984
    3. ' elif' → logprob: -7.049566268920898
    4. '       ' → logprob: -9.924566268920898
    5. '               ' → logprob: -10.924566268920898
    6. 'if' → logprob: -11.174566268920898
    7. '
' → logprob: -11.674566268920898
    8. ' if' → logprob: -11.924566268920898
    9. '   ' → logprob: -12.174566268920898
    10. '```' → logprob: -13.049566268920898

Token 1524: ' tokens' (ID: 20290)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.00868394784629345
    2. ' tokens' → logprob: -4.758684158325195
    3. '           ' → logprob: -10.383684158325195
    4. '               ' → logprob: -10.633684158325195
    5. '(tokens' → logprob: -11.633684158325195
    6. '                   ' → logprob: -13.383684158325195
    7. ')' → logprob: -13.758684158325195
    8. '')' → logprob: -14.133684158325195
    9. '.tokens' → logprob: -14.508684158325195
    10. '   ' → logprob: -14.758684158325195

Token 1525: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.3856492842023727e-06
    2. '==' → logprob: -14.625000953674316
    3. ' ==' → logprob: -15.000000953674316
    4. '[' → logprob: -15.125000953674316
    5. '[
' → logprob: -15.750000953674316
    6. 'i' → logprob: -17.625001907348633
    7. '{i' → logprob: -17.750001907348633
    8. '[t' → logprob: -18.625001907348633
    9. '```' → logprob: -18.875001907348633
    10. ' [' → logprob: -19.000001907348633

Token 1526: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2584187388420105
    2. '==' → logprob: -2.3834187984466553
    3. ' ==' → logprob: -2.5084187984466553
    4. '[i' → logprob: -3.1334187984466553
    5. ']==' → logprob: -4.633418560028076
    6. 'i' → logprob: -7.758418560028076
    7. ')' → logprob: -9.508419036865234
    8. '   ' → logprob: -9.633419036865234
    9. '[' → logprob: -10.258419036865234
    10. '           ' → logprob: -10.508419036865234

Token 1527: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6943193674087524
    2. ' ==' → logprob: -0.6943193674087524
    3. ')' → logprob: -7.319319248199463
    4. ']' → logprob: -8.569319725036621
    5. '')' → logprob: -8.694319725036621
    6. ']==' → logprob: -9.569319725036621
    7. '=' → logprob: -10.569319725036621
    8. ''' → logprob: -11.069319725036621
    9. '']' → logprob: -11.444319725036621
    10. ')==' → logprob: -11.444319725036621

Token 1528: ' ')' (ID: 35910)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -5.512236498361744e-07
    2. ')' → logprob: -15.500000953674316
    3. '")' → logprob: -16.75
    4. ' ')' → logprob: -16.75
    5. ''' → logprob: -17.125
    6. '']' → logprob: -17.875
    7. '')"' → logprob: -18.125
    8. ' ')'' → logprob: -19.0
    9. '   ' → logprob: -19.25
    10. ''):' → logprob: -20.25

Token 1529: '':
' (ID: 7669)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.49925094842910767
    2. ':
' → logprob: -0.9992509484291077
    3. ':' → logprob: -3.874250888824463
    4. '           ' → logprob: -6.124250888824463
    5. '):
' → logprob: -7.624250888824463
    6. ' and' → logprob: -7.749250888824463
    7. 'depth' → logprob: -7.999250888824463
    8. '                   ' → logprob: -8.374251365661621
    9. 'and' → logprob: -8.874251365661621
    10. '                ' → logprob: -9.999251365661621

Token 1530: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0011283133644610643
    2. ':
' → logprob: -7.251128196716309
    3. ':' → logprob: -8.876128196716309
    4. '           ' → logprob: -9.001128196716309
    5. '                   ' → logprob: -9.626128196716309
    6. '              ' → logprob: -11.126128196716309
    7. 'depth' → logprob: -11.251128196716309
    8. '	           ' → logprob: -11.251128196716309
    9. '```' → logprob: -11.751128196716309
    10. '):
' → logprob: -12.126128196716309

Token 1531: ' depth' (ID: 13636)
  Prédit: 'depth'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'depth' (adapté à ' depth') → logprob: -0.03763618320226669
    2. ' depth' → logprob: -3.7876362800598145
    3. '               ' → logprob: -4.2876362800598145
    4. '                   ' → logprob: -7.6626362800598145
    5. '           ' → logprob: -10.662635803222656
    6. 'return' → logprob: -10.912635803222656
    7. '(depth' → logprob: -11.037635803222656
    8. '                ' → logprob: -11.162635803222656
    9. ' return' → logprob: -13.537635803222656
    10. '            ' → logprob: -13.537635803222656

Token 1532: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -1.0239378213882446
    2. '-=' → logprob: -1.0239378213882446
    3. '               ' → logprob: -1.2739378213882446
    4. '==' → logprob: -7.398937702178955
    5. '                ' → logprob: -7.898937702178955
    6. '=' → logprob: -8.148938179016113
    7. '+=' → logprob: -8.523938179016113
    8. '           ' → logprob: -9.273938179016113
    9. '                   ' → logprob: -9.398938179016113
    10. '            ' → logprob: -9.773938179016113

Token 1533: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.16027449071407318
    2. ' ' → logprob: -1.9102745056152344
    3. '0' → logprob: -9.910274505615234
    4. ' ' → logprob: -14.660274505615234
    5. '<|end|>' → logprob: -15.910274505615234
    6. '```' → logprob: -16.535274505615234
    7. '           ' → logprob: -16.785274505615234
    8. '               ' → logprob: -16.785274505615234
    9. '                   ' → logprob: -17.785274505615234
    10. '<|end|>' → logprob: -17.785274505615234

Token 1534: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.696889623621246e-06
    2. '0' → logprob: -12.87500286102295
    3. ' ' → logprob: -17.000001907348633
    4. '
' → logprob: -20.000001907348633
    5. '   ' → logprob: -21.250001907348633
    6. '{
' → logprob: -22.500001907348633
    7. '```' → logprob: -22.500001907348633
    8. '۱' → logprob: -23.625001907348633
    9. '１' → logprob: -24.125001907348633
    10. 'return' → logprob: -24.375001907348633

Token 1535: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03892211616039276
    2. '           ' → logprob: -3.288922071456909
    3. '
' → logprob: -8.163922309875488
    4. 'if' → logprob: -8.413922309875488
    5. 'return' → logprob: -8.538922309875488
    6. '```' → logprob: -9.288922309875488
    7. '                   ' → logprob: -10.538922309875488
    8. ' if' → logprob: -10.913922309875488
    9. ',' → logprob: -11.163922309875488
    10. '{
' → logprob: -11.663922309875488

Token 1536: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007946106605231762
    2. '           ' → logprob: -4.882946014404297
    3. '                   ' → logprob: -8.632946014404297
    4. '```' → logprob: -9.757946014404297
    5. 'return' → logprob: -9.882946014404297
    6. 'if' → logprob: -10.507946014404297
    7. '
' → logprob: -11.757946014404297
    8. '{
' → logprob: -12.257946014404297
    9. '{return' → logprob: -12.632946014404297
    10. '                       ' → logprob: -13.382946014404297

Token 1537: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.3669191300868988
    2. '               ' → logprob: -1.2419191598892212
    3. ' if' → logprob: -4.741919040679932
    4. 'return' → logprob: -4.741919040679932
    5. '           ' → logprob: -7.241919040679932
    6. '                   ' → logprob: -10.24191951751709
    7. '{return' → logprob: -10.61691951751709
    8. '	           ' → logprob: -10.74191951751709
    9. ' return' → logprob: -11.11691951751709
    10. 'If' → logprob: -11.36691951751709

Token 1538: ' depth' (ID: 13636)
  Prédit: 'depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'depth' → logprob: -0.00020354038861114532
    2. ' depth' → logprob: -8.500203132629395
    3. '   ' → logprob: -17.50020408630371
    4. '(depth' → logprob: -17.50020408630371
    5. ' ' → logprob: -20.25020408630371
    6. '
' → logprob: -20.25020408630371
    7. '  ' → logprob: -21.00020408630371
    8. 'd' → logprob: -21.37520408630371
    9. '0' → logprob: -21.62520408630371
    10. '    ' → logprob: -21.62520408630371

Token 1539: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.012352706864476204
    2. ' ==' → logprob: -4.63735294342041
    3. '0' → logprob: -6.01235294342041
    4. '==
' → logprob: -10.01235294342041
    5. ']==' → logprob: -10.26235294342041
    6. '           ' → logprob: -10.63735294342041
    7. ')==' → logprob: -11.51235294342041
    8. '===' → logprob: -11.63735294342041
    9. '               ' → logprob: -12.51235294342041
    10. '[' → logprob: -12.88735294342041

Token 1540: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.762356209335849e-05
    2. 'i' → logprob: -10.75003719329834
    3. ' ' → logprob: -11.12503719329834
    4. ' i' → logprob: -13.75003719329834
    5. 'start' → logprob: -16.000038146972656
    6. '   ' → logprob: -16.250038146972656
    7. '
' → logprob: -17.500038146972656
    8. '1' → logprob: -17.625038146972656
    9. '           ' → logprob: -17.750038146972656
    10. '               ' → logprob: -18.875038146972656

Token 1541: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0325924449716695e-05
    2. 'start' → logprob: -11.87501049041748
    3. ' ' → logprob: -12.62501049041748
    4. '   ' → logprob: -19.000009536743164
    5. 'return' → logprob: -19.375009536743164
    6. '
' → logprob: -19.625009536743164
    7. ' start' → logprob: -20.000009536743164
    8. 'i' → logprob: -20.250009536743164
    9. 'next' → logprob: -20.750009536743164
    10. '=' → logprob: -20.875009536743164

Token 1542: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.019026724621653557
    2. ':
' → logprob: -4.269026756286621
    3. ':' → logprob: -6.394026756286621
    4. '               ' → logprob: -6.519026756286621
    5. ':return' → logprob: -7.269026756286621
    6. 'return' → logprob: -7.769026756286621
    7. ' return' → logprob: -8.394026756286621
    8. '                       ' → logprob: -9.019026756286621
    9. '           ' → logprob: -9.394026756286621
    10. '		           ' → logprob: -9.894026756286621

Token 1543: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.01200754102319479
    2. 'return' → logprob: -4.512007713317871
    3. ' return' → logprob: -7.012007713317871
    4. '               ' → logprob: -10.512007713317871
    5. '           ' → logprob: -11.262007713317871
    6. ':return' → logprob: -12.137007713317871
    7. '                       ' → logprob: -12.512007713317871
    8. '                  ' → logprob: -12.637007713317871
    9. '		           ' → logprob: -13.262007713317871
    10. '   ' → logprob: -14.262007713317871

Token 1544: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00420483248308301
    2. ' return' → logprob: -5.504204750061035
    3. '                   ' → logprob: -9.129204750061035
    4. '	return' → logprob: -11.254204750061035
    5. '{return' → logprob: -13.129204750061035
    6. ':return' → logprob: -13.504204750061035
    7. '               ' → logprob: -14.379204750061035
    8. '                       ' → logprob: -15.004204750061035
    9. '_return' → logprob: -15.754204750061035
    10. '   ' → logprob: -16.00420570373535

Token 1545: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -3.547789674485102e-05
    2. ' i' → logprob: -10.250035285949707
    3. '	i' → logprob: -19.625036239624023
    4. '(i' → logprob: -22.375036239624023
    5. '{i' → logprob: -22.875036239624023
    6. '
' → logprob: -23.125036239624023
    7. '   ' → logprob: -23.500036239624023
    8. '[i' → logprob: -23.750036239624023
    9. '*i' → logprob: -23.875036239624023
    10. ')i' → logprob: -23.875036239624023

Token 1546: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1547: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010877328924834728
    2. '
' → logprob: -5.1358771324157715
    3. '   ' → logprob: -6.7608771324157715
    4. '           ' → logprob: -7.0108771324157715
    5. '        
' → logprob: -7.1358771324157715
    6. '```' → logprob: -7.2608771324157715
    7. '<|end|>' → logprob: -7.5108771324157715
    8. '    
' → logprob: -7.6358771324157715
    9. '        ' → logprob: -9.76087760925293
    10. '            
' → logprob: -10.38587760925293

Token 1548: ' raise' (ID: 9338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0020522393751889467
    2. '           ' → logprob: -7.252052307128906
    3. '   ' → logprob: -7.627052307128906
    4. '
' → logprob: -8.002052307128906
    5. '               ' → logprob: -9.252052307128906
    6. ' raise' → logprob: -9.627052307128906
    7. 'return' → logprob: -9.752052307128906
    8. ' return' → logprob: -9.877052307128906
    9. 'raise' (adapté à ' raise') → logprob: -10.002052307128906
    10. '        
' → logprob: -10.377052307128906

Token 1549: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.00017517358355689794
    2. 'Index' → logprob: -8.750175476074219
    3. ' Value' → logprob: -11.000175476074219
    4. 'value' → logprob: -17.50017547607422
    5. '_value' → logprob: -17.62517547607422
    6. 'Runtime' → logprob: -18.12517547607422
    7. '_Value' → logprob: -18.12517547607422
    8. '(Value' → logprob: -18.50017547607422
    9. ' Index' → logprob: -19.75017547607422
    10. '.Value' → logprob: -19.75017547607422

Token 1550: 'Error' (ID: 2255)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.27226904034614563
    2. ' _' → logprob: -1.8972690105438232
    3. '   ' → logprob: -3.3972690105438232
    4. ' ' → logprob: -4.772269248962402
    5. '       ' → logprob: -5.022269248962402
    6. '    ' → logprob: -5.272269248962402
    7. '(' → logprob: -5.272269248962402
    8. '[' → logprob: -5.272269248962402
    9. '  ' → logprob: -5.397269248962402
    10. ' (' → logprob: -6.272269248962402

Token 1551: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0025298797991126776
    2. '(' → logprob: -6.377530097961426
    3. '(f' → logprob: -7.377530097961426
    4. '("("' → logprob: -8.877530097961426
    5. '("(' → logprob: -10.627530097961426
    6. '('' → logprob: -10.877530097961426
    7. '"' → logprob: -12.002530097961426
    8. '(
' → logprob: -12.127530097961426
    9. '       ' → logprob: -13.127530097961426
    10. 'f' → logprob: -13.502530097961426

Token 1552: 'Un' (ID: 2265)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.44607943296432495
    2. '")' → logprob: -1.1960794925689697
    3. ')' → logprob: -3.5710794925689697
    4. 'Un' → logprob: -4.571079254150391
    5. ''' → logprob: -5.196079254150391
    6. '')' → logprob: -5.571079254150391
    7. 'Unexpected' → logprob: -6.321079254150391
    8. 'No' → logprob: -6.571079254150391
    9. 'Index' → logprob: -6.571079254150391
    10. 'un' → logprob: -7.196079254150391

Token 1553: 'matched' (ID: 60401)
  Prédit: 'matched'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matched' → logprob: -0.11652354896068573
    2. 'balanced' → logprob: -3.116523504257202
    3. ')' → logprob: -4.116523742675781
    4. 'expected' → logprob: -4.741523742675781
    5. 'reachable' → logprob: -5.241523742675781
    6. 'parsed' → logprob: -5.616523742675781
    7. 'defined' → logprob: -5.741523742675781
    8. 'handled' → logprob: -5.991523742675781
    9. 'recognized' → logprob: -5.991523742675781
    10. '       ' → logprob: -6.241523742675781

Token 1554: ' '('' (ID: 87284)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.395369291305542
    2. '')' → logprob: -1.645369291305542
    3. ''' → logprob: -2.145369291305542
    4. ')' → logprob: -4.520369529724121
    5. '_parent' → logprob: -6.020369529724121
    6. '")' → logprob: -7.020369529724121
    7. ' parent' → logprob: -7.270369529724121
    8. 'paren' → logprob: -7.895369529724121
    9. 'Parent' → logprob: -8.020369529724121
    10. '(' → logprob: -8.520369529724121

Token 1555: ' in' (ID: 306)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009648781269788742
    2. ')' → logprob: -5.00964879989624
    3. '
' → logprob: -6.50964879989624
    4. '<|end|>' → logprob: -6.88464879989624
    5. '    
' → logprob: -8.259648323059082
    6. '       ' → logprob: -9.384648323059082
    7. '<|end|>' → logprob: -10.634648323059082
    8. '```' → logprob: -11.009648323059082
    9. '        
' → logprob: -12.009648323059082
    10. ')
' → logprob: -12.134648323059082

Token 1556: ' expression' (ID: 12973)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.00395907461643219
    2. ' tokens' → logprob: -5.6289591789245605
    3. 'self' → logprob: -9.003958702087402
    4. ')' → logprob: -9.378958702087402
    5. 'def' → logprob: -9.753958702087402
    6. 'token' → logprob: -10.378958702087402
    7. 'code' → logprob: -10.753958702087402
    8. '
' → logprob: -11.253958702087402
    9. '(tokens' → logprob: -12.003958702087402
    10. 'Code' → logprob: -12.503958702087402

Token 1557: '")

' (ID: 10822)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.45431724190711975
    2. '   ' → logprob: -1.0793172121047974
    3. '    
' → logprob: -3.829317331314087
    4. '<|end|>' → logprob: -6.329317092895508
    5. 'class' → logprob: -7.204317092895508
    6. '

' → logprob: -7.454317092895508
    7. '        
' → logprob: -8.829317092895508
    8. '<|end|>' → logprob: -9.704317092895508
    9. '
    
' → logprob: -9.829317092895508
    10. '       ' → logprob: -10.079317092895508

Token 1558: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6190297603607178
    2. '```' → logprob: -1.1190297603607178
    3. '
' → logprob: -2.9940297603607178
    4. '<|end|>' → logprob: -3.1190297603607178
    5. 'class' → logprob: -3.9940297603607178
    6. '       ' → logprob: -5.244029998779297
    7. '<|end|>' → logprob: -5.494029998779297
    8. '    
' → logprob: -5.619029998779297
    9. ' class' → logprob: -5.869029998779297
    10. ')' → logprob: -6.494029998779297

Token 1559: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08302164822816849
    2. 'class' → logprob: -2.833021640777588
    3. '
' → logprob: -4.958021640777588
    4. '       ' → logprob: -5.083021640777588
    5. ' class' → logprob: -5.958021640777588
    6. '<|end|>' → logprob: -6.333021640777588
    7. ')' → logprob: -6.833021640777588
    8. '    
' → logprob: -6.833021640777588
    9. '```' → logprob: -7.958021640777588
    10. '<|end|>' → logprob: -8.333022117614746

Token 1560: ' parse' (ID: 8420)
  Prédit: ' build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' build' → logprob: -0.5063549280166626
    2. 'build' → logprob: -1.5063549280166626
    3. ' parse' → logprob: -2.006354808807373
    4. 'parse' → logprob: -3.756354808807373
    5. ' def' → logprob: -5.006354808807373
    6. '   ' → logprob: -5.131354808807373
    7. ' indent' → logprob: -6.381354808807373
    8. 'def' → logprob: -6.756354808807373
    9. 'indent' → logprob: -7.381354808807373
    10. ' tokenize' → logprob: -8.131355285644531

Token 1561: '_expression' (ID: 69265)
  Prédit: '_expression'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_expression' → logprob: -0.011623364873230457
    2. '_tokens' → logprob: -4.636623382568359
    3. '_all' → logprob: -7.261623382568359
    4. '_' → logprob: -7.761623382568359
    5. 'expression' → logprob: -8.38662338256836
    6. '(self' → logprob: -8.76162338256836
    7. '(expression' → logprob: -9.63662338256836
    8. '(' → logprob: -9.88662338256836
    9. '```' → logprob: -10.13662338256836
    10. '   ' → logprob: -10.13662338256836

Token 1562: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.011963014490902424
    2. '   ' → logprob: -4.636962890625
    3. '(' → logprob: -7.386962890625
    4. '       ' → logprob: -7.886962890625
    5. ' =' → logprob: -7.886962890625
    6. '(
' → logprob: -8.011962890625
    7. '
' → logprob: -9.011962890625
    8. '=' → logprob: -9.386962890625
    9. '```' → logprob: -10.261962890625
    10. 'self' → logprob: -10.386962890625

Token 1563: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3482246398925781
    2. '(self' → logprob: -1.4732246398925781
    3. '   ' → logprob: -3.473224639892578
    4. '):' → logprob: -4.348224639892578
    5. '):
' → logprob: -4.473224639892578
    6. ',' → logprob: -5.348224639892578
    7. 'self' → logprob: -6.223224639892578
    8. '       ' → logprob: -6.848224639892578
    9. '
' → logprob: -7.098224639892578
    10. ')->' → logprob: -7.848224639892578

Token 1564: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.1013960912823677
    2. '       ' → logprob: -2.726396083831787
    3. '   ' → logprob: -3.601396083831787
    4. ':' → logprob: -6.351396083831787
    5. 'self' → logprob: -7.601396083831787
    6. '
' → logprob: -7.726396083831787
    7. '(
' → logprob: -8.226396560668945
    8. 'def' → logprob: -8.726396560668945
    9. '[' → logprob: -9.101396560668945
    10. '[self' → logprob: -9.601396560668945

Token 1565: ' Expression' (ID: 32496)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07169216871261597
    2. 'Expression' → logprob: -3.4466922283172607
    3. 'List' → logprob: -4.071691989898682
    4. ' self' → logprob: -4.321691989898682
    5. 'return' → logprob: -6.321691989898682
    6. 'def' → logprob: -6.821691989898682
    7. ' List' → logprob: -6.946691989898682
    8. '   ' → logprob: -7.321691989898682
    9. ' Expression' → logprob: -7.571691989898682
    10. '       ' → logprob: -7.696691989898682

Token 1566: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8491216897964478
    2. '(self' → logprob: -0.8491216897964478
    3. '   ' → logprob: -2.724121570587158
    4. ':' → logprob: -3.349121570587158
    5. ':
' → logprob: -3.599121570587158
    6. '[' → logprob: -5.349121570587158
    7. 'def' → logprob: -5.974121570587158
    8. '
' → logprob: -6.349121570587158
    9. '(
' → logprob: -6.474121570587158
    10. '(' → logprob: -7.599121570587158

Token 1567: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00036382899270392954
    2. 'def' → logprob: -8.875364303588867
    3. ':' → logprob: -9.375364303588867
    4. '```' → logprob: -9.875364303588867
    5. '(self' → logprob: -11.000364303588867
    6. 'self' → logprob: -11.250364303588867
    7. '(' → logprob: -11.500364303588867
    8. '   ' → logprob: -11.625364303588867
    9. '           ' → logprob: -12.125364303588867
    10. '#' → logprob: -12.250364303588867

Token 1568: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007074567489326
    2. 'tokens' → logprob: -5.132074356079102
    3. ' tokens' → logprob: -7.632074356079102
    4. 'self' → logprob: -8.132074356079102
    5. 'return' → logprob: -8.757074356079102
    6. '   ' → logprob: -10.007074356079102
    7. '(tokens' → logprob: -10.382074356079102
    8. '
' → logprob: -10.632074356079102
    9. ' return' → logprob: -10.757074356079102
    10. '_tokens' → logprob: -11.007074356079102

Token 1569: ' Instead' (ID: 21050)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13889174163341522
    2. 'tokens' → logprob: -2.1388916969299316
    3. ' tokens' → logprob: -4.888891696929932
    4. 'self' → logprob: -6.388891696929932
    5. '```' → logprob: -6.888891696929932
    6. 'def' → logprob: -7.138891696929932
    7. '
' → logprob: -8.76389217376709
    8. '   ' → logprob: -8.88889217376709
    9. 'Tokens' → logprob: -9.51389217376709
    10. '_tokens' → logprob: -9.63889217376709

Token 1570: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4683448076248169
    2. 'of' → logprob: -1.718344807624817
    3. '   ' → logprob: -2.5933446884155273
    4. 'def' → logprob: -2.7183446884155273
    5. ' of' → logprob: -3.2183446884155273
    6. ':' → logprob: -5.593344688415527
    7. '```' → logprob: -6.343344688415527
    8. 'Of' → logprob: -6.843344688415527
    9. '
' → logprob: -6.968344688415527
    10. '           ' → logprob: -7.093344688415527

Token 1571: ' prior' (ID: 6217)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.016244331374764442
    2. 'def' → logprob: -4.516244411468506
    3. '   ' → logprob: -6.141244411468506
    4. '       ' → logprob: -6.641244411468506
    5. ' self' → logprob: -7.016244411468506
    6. 'parse' → logprob: -8.641243934631348
    7. 'token' → logprob: -9.016243934631348
    8. 'lambda' → logprob: -9.016243934631348
    9. '(self' → logprob: -9.141243934631348
    10. 'super' → logprob: -9.766243934631348

Token 1572: ' approach' (ID: 7139)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6236767768859863
    2. '   ' → logprob: -1.1236767768859863
    3. '
' → logprob: -3.4986767768859863
    4. ':' → logprob: -3.6236767768859863
    5. ':
' → logprob: -4.373676776885986
    6. '       ' → logprob: -4.498676776885986
    7. 'tokens' → logprob: -4.623676776885986
    8. ' def' → logprob: -5.248676776885986
    9. '):
' → logprob: -5.623676776885986
    10. '    
' → logprob: -5.748676776885986

Token 1573: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14339220523834229
    2. '   ' → logprob: -2.3933920860290527
    3. ':
' → logprob: -4.268392086029053
    4. ':' → logprob: -4.643392086029053
    5. 'def' → logprob: -4.643392086029053
    6. ',' → logprob: -6.643392086029053
    7. '
' → logprob: -6.643392086029053
    8. '(self' → logprob: -6.768392086029053
    9. '(tokens' → logprob: -6.893392086029053
    10. '():
' → logprob: -7.143392086029053

Token 1574: ' implement' (ID: 6365)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009103518910706043
    2. 'def' → logprob: -5.884103298187256
    3. 'tokens' → logprob: -6.509103298187256
    4. ' return' → logprob: -6.634103298187256
    5. 'return' → logprob: -6.634103298187256
    6. '```' → logprob: -7.384103298187256
    7. ' tokens' → logprob: -7.509103298187256
    8. '#' → logprob: -8.009103775024414
    9. '   ' → logprob: -8.384103775024414
    10. 's' → logprob: -9.134103775024414

Token 1575: ' a' (ID: 261)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5016191601753235
    2. '       ' → logprob: -1.7516191005706787
    3. 'self' → logprob: -1.8766191005706787
    4. '   ' → logprob: -3.0016191005706787
    5. '
' → logprob: -5.001619338989258
    6. 'tokens' → logprob: -5.376619338989258
    7. '```' → logprob: -6.001619338989258
    8. ' self' → logprob: -6.501619338989258
    9. ' def' → logprob: -7.001619338989258
    10. 'the' → logprob: -8.001619338989258

Token 1576: ' proper' (ID: 7937)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08079902827739716
    2. '   ' → logprob: -4.080799102783203
    3. 'full' → logprob: -4.455799102783203
    4. 'parse' → logprob: -4.455799102783203
    5. ' def' → logprob: -4.580799102783203
    6. 'tokens' → logprob: -4.830799102783203
    7. 'new' → logprob: -5.455799102783203
    8. 'token' → logprob: -5.580799102783203
    9. ' full' → logprob: -6.455799102783203
    10. 'self' → logprob: -6.705799102783203

Token 1577: ' expression' (ID: 12973)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.21998435258865356
    2. '   ' → logprob: -2.344984292984009
    3. '
' → logprob: -3.344984292984009
    4. '       ' → logprob: -4.344984531402588
    5. ' def' → logprob: -4.344984531402588
    6. 'parse' → logprob: -4.344984531402588
    7. 'token' → logprob: -5.344984531402588
    8. '```' → logprob: -5.719984531402588
    9. 'return' → logprob: -5.844984531402588
    10. ' parse' → logprob: -6.344984531402588

Token 1578: ' parser' (ID: 14216)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.298691987991333
    2. '```' → logprob: -3.048691987991333
    3. 'def' → logprob: -3.298691987991333
    4. '_parser' → logprob: -3.548691987991333
    5. '(self' → logprob: -3.673691987991333
    6. '_with' → logprob: -3.673691987991333
    7. '       ' → logprob: -4.173691749572754
    8. ' parser' → logprob: -4.298691749572754
    9. '
' → logprob: -4.548691749572754
    10. ':' → logprob: -4.548691749572754

Token 1579: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1533120572566986
    2. '   ' → logprob: -2.5283119678497314
    3. '(self' → logprob: -2.9033119678497314
    4. 'def' → logprob: -6.1533122062683105
    5. '(
' → logprob: -6.6533122062683105
    6. '
' → logprob: -6.7783122062683105
    7. ' with' → logprob: -7.6533122062683105
    8. ':' → logprob: -7.7783122062683105
    9. ' that' → logprob: -7.7783122062683105
    10. ':
' → logprob: -7.9033122062683105

Token 1580: ' given' (ID: 4335)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5982506275177002
    2. 'tokens' → logprob: -1.0982506275177002
    3. 'the' → logprob: -3.0982506275177
    4. 'def' → logprob: -3.5982506275177
    5. '   ' → logprob: -4.223250389099121
    6. 's' → logprob: -4.973250389099121
    7. ')' → logprob: -5.598250389099121
    8. '(self' → logprob: -5.598250389099121
    9. ' self' → logprob: -6.098250389099121
    10. '       ' → logprob: -6.348250389099121

Token 1581: ' B' (ID: 418)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.3346513509750366
    2. '   ' → logprob: -2.709651470184326
    3. 'self' → logprob: -2.834651470184326
    4. 'def' → logprob: -3.084651470184326
    5. '       ' → logprob: -3.209651470184326
    6. ' tokens' → logprob: -3.959651470184326
    7. 'expression' → logprob: -4.459651470184326
    8. '
' → logprob: -4.709651470184326
    9. ')' → logprob: -5.084651470184326
    10. ')
' → logprob: -5.459651470184326

Token 1582: 'NF' (ID: 64104)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7025755643844604
    2. 'r' → logprob: -1.4525755643844604
    3. '
' → logprob: -2.82757568359375
    4. ')' → logprob: -3.20257568359375
    5. '       ' → logprob: -3.70257568359375
    6. 'ased' → logprob: -3.82757568359375
    7. 'reak' → logprob: -4.07757568359375
    8. 'ase' → logprob: -4.45257568359375
    9. 'y' → logprob: -4.45257568359375
    10. ':' → logprob: -4.45257568359375

Token 1583: ',
' (ID: 412)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49613168835639954
    2. ':' → logprob: -1.1211316585540771
    3. '   ' → logprob: -3.371131658554077
    4. ':
' → logprob: -3.746131658554077
    5. '```' → logprob: -5.996131896972656
    6. '(' → logprob: -7.121131896972656
    7. '
' → logprob: -7.496131896972656
    8. 'def' → logprob: -7.871131896972656
    9. '():' → logprob: -7.871131896972656
    10. ',' → logprob: -7.871131896972656

Token 1584: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010160179808735847
    2. '   ' → logprob: -8.001015663146973
    3. 'def' → logprob: -8.126015663146973
    4. '```' → logprob: -8.626015663146973
    5. '           ' → logprob: -9.376015663146973
    6. 'self' → logprob: -10.126015663146973
    7. '
' → logprob: -11.376015663146973
    8. '(self' → logprob: -11.501015663146973
    9. ')' → logprob: -12.126015663146973
    10. ':' → logprob: -12.251015663146973

Token 1585: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0047063762322068214
    2. '   ' → logprob: -6.504706382751465
    3. 'self' → logprob: -6.629706382751465
    4. '           ' → logprob: -7.004706382751465
    5. 's' → logprob: -8.379706382751465
    6. 'def' → logprob: -8.629706382751465
    7. '```' → logprob: -9.129706382751465
    8. ')' → logprob: -9.879706382751465
    9. '               ' → logprob: -10.129706382751465
    10. ':' → logprob: -10.254706382751465

Token 1586: ' but' (ID: 889)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05471865087747574
    2. 'def' → logprob: -3.6797187328338623
    3. '   ' → logprob: -4.054718494415283
    4. '#' → logprob: -5.429718494415283
    5. '```' → logprob: -6.054718494415283
    6. '
' → logprob: -6.304718494415283
    7. 'tokens' → logprob: -7.929718494415283
    8. ' def' → logprob: -8.554718971252441
    9. 'import' → logprob: -8.804718971252441
    10. 's' → logprob: -9.054718971252441

Token 1587: ' then' (ID: 1815)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1120334267616272
    2. '   ' → logprob: -3.4870333671569824
    3. 'tokens' → logprob: -3.8620333671569824
    4. '#' → logprob: -4.112033367156982
    5. 'self' → logprob: -4.112033367156982
    6. 'def' → logprob: -4.612033367156982
    7. ' tokens' → logprob: -5.862033367156982
    8. '
' → logprob: -6.487033367156982
    9. 's' → logprob: -6.612033367156982
    10. ')' → logprob: -6.987033367156982

Token 1588: ' represent' (ID: 5188)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016061468049883842
    2. 'class' → logprob: -5.391061305999756
    3. 'def' → logprob: -5.516061305999756
    4. '#' → logprob: -6.016061305999756
    5. '   ' → logprob: -6.391061305999756
    6. '
' → logprob: -6.891061305999756
    7. '           ' → logprob: -7.391061305999756
    8. '```' → logprob: -8.266061782836914
    9. ' class' → logprob: -8.766061782836914
    10. 'return' → logprob: -8.766061782836914

Token 1589: ' the' (ID: 290)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.5328971147537231
    2. 'self' → logprob: -1.5328971147537231
    3. 'tokens' → logprob: -1.5328971147537231
    4. '   ' → logprob: -1.9078971147537231
    5. ' tokens' → logprob: -3.0328969955444336
    6. 'class' → logprob: -3.4078969955444336
    7. 'def' → logprob: -3.5328969955444336
    8. ' self' → logprob: -3.5328969955444336
    9. 'Expression' → logprob: -3.5328969955444336
    10. '(tokens' → logprob: -4.782896995544434

Token 1590: ' expression' (ID: 12973)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -1.0173381567001343
    2. 'def' → logprob: -1.3923381567001343
    3. '   ' → logprob: -2.267338275909424
    4. 'tokens' → logprob: -2.642338275909424
    5. '       ' → logprob: -2.892338275909424
    6. '
' → logprob: -3.642338275909424
    7. ' def' → logprob: -3.642338275909424
    8. ' class' → logprob: -3.767338275909424
    9. ' tokens' → logprob: -4.142338275909424
    10. 'Expression' → logprob: -4.142338275909424

Token 1591: ' as' (ID: 472)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9616734981536865
    2. ':' → logprob: -1.0866734981536865
    3. '   ' → logprob: -1.8366734981536865
    4. ':
' → logprob: -2.2116734981536865
    5. '(' → logprob: -6.336673736572266
    6. '
' → logprob: -6.586673736572266
    7. '```' → logprob: -6.836673736572266
    8. 'def' → logprob: -6.961673736572266
    9. '(
' → logprob: -7.211673736572266
    10. '        
' → logprob: -7.211673736572266

Token 1592: ' a' (ID: 261)
  Prédit: 'Expression'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Expression' → logprob: -0.6400850415229797
    2. 'self' → logprob: -0.7650850415229797
    3. ' Expression' → logprob: -6.140085220336914
    4. 'class' → logprob: -6.640085220336914
    5. 'tokens' → logprob: -6.765085220336914
    6. 'lambda' → logprob: -7.140085220336914
    7. ' self' → logprob: -7.640085220336914
    8. '   ' → logprob: -7.890085220336914
    9. 'def' → logprob: -7.890085220336914
    10. 'Binary' → logprob: -8.640085220336914

Token 1593: ' nested' (ID: 47576)
  Prédit: 'Expression'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Expression' → logprob: -0.6385474801063538
    2. 'class' → logprob: -1.263547420501709
    3. 'def' → logprob: -2.013547420501709
    4. ' def' → logprob: -4.513547420501709
    5. 'tokens' → logprob: -4.638547420501709
    6. ' Expression' → logprob: -5.013547420501709
    7. '   ' → logprob: -5.013547420501709
    8. '
' → logprob: -5.388547420501709
    9. 'self' → logprob: -5.388547420501709
    10. ' class' → logprob: -5.638547420501709

Token 1594: ' structure' (ID: 8866)
  Prédit: 'Expression'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Expression' → logprob: -0.7019641995429993
    2. 'class' → logprob: -1.4519641399383545
    3. 'def' → logprob: -1.8269641399383545
    4. ' def' → logprob: -3.2019641399383545
    5. ' Expression' → logprob: -4.326964378356934
    6. '
' → logprob: -4.826964378356934
    7. ' class' → logprob: -4.826964378356934
    8. ' structure' → logprob: -4.951964378356934
    9. 'structure' → logprob: -4.951964378356934
    10. 'tree' → logprob: -5.326964378356934

Token 1595: ' that' (ID: 484)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15281379222869873
    2. ':' → logprob: -2.2778139114379883
    3. '   ' → logprob: -3.7778139114379883
    4. ':
' → logprob: -4.527813911437988
    5. '
' → logprob: -7.027813911437988
    6. '```' → logprob: -7.152813911437988
    7. ',' → logprob: -7.527813911437988
    8. '        
' → logprob: -7.777813911437988
    9. '<|end|>' → logprob: -8.027813911437988
    10. '(' → logprob: -8.027813911437988

Token 1596: ' supports' (ID: 17203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9113254547119141
    2. '   ' → logprob: -1.411325454711914
    3. 'supports' → logprob: -2.911325454711914
    4. ' supports' → logprob: -3.161325454711914
    5. '```' → logprob: -3.286325454711914
    6. ' can' → logprob: -3.536325454711914
    7. ':' → logprob: -3.661325454711914
    8. ' parses' → logprob: -3.786325454711914
    9. ' def' → logprob: -4.161325454711914
    10. '
' → logprob: -4.286325454711914

Token 1597: ' all' (ID: 722)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3448706269264221
    2. '       ' → logprob: -2.3448705673217773
    3. 'Expression' → logprob: -2.7198705673217773
    4. 'def' → logprob: -2.9698705673217773
    5. ' self' → logprob: -3.7198705673217773
    6. '   ' → logprob: -4.094870567321777
    7. 'tokens' → logprob: -4.844870567321777
    8. 'parse' → logprob: -4.844870567321777
    9. ' Expression' → logprob: -5.094870567321777
    10. 'return' → logprob: -5.719870567321777

Token 1598: ' evaluation' (ID: 21407)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.340802788734436
    2. '   ' → logprob: -1.840802788734436
    3. 'ways' → logprob: -1.840802788734436
    4. 'possible' → logprob: -1.840802788734436
    5. 'tokens' → logprob: -2.7158026695251465
    6. 'parent' → logprob: -3.4658026695251465
    7. 'token' → logprob: -3.7158026695251465
    8. ' ways' → logprob: -3.8408026695251465
    9. '```' → logprob: -3.8408026695251465
    10. '_possible' → logprob: -4.2158026695251465

Token 1599: ' orders' (ID: 12528)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8861469030380249
    2. '   ' → logprob: -1.011146903038025
    3. '(self' → logprob: -2.6361470222473145
    4. '```' → logprob: -3.5111470222473145
    5. ':
' → logprob: -3.6361470222473145
    6. ':' → logprob: -3.8861470222473145
    7. 'All' → logprob: -4.6361470222473145
    8. '_all' → logprob: -4.6361470222473145
    9. 'def' → logprob: -4.7611470222473145
    10. '_' → logprob: -5.1361470222473145

Token 1600: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13523800671100616
    2. ':' → logprob: -2.7602379322052
    3. '   ' → logprob: -2.8852379322052
    4. ':
' → logprob: -5.760238170623779
    5. '(' → logprob: -6.635238170623779
    6. '<|end|>' → logprob: -7.510238170623779
    7. '
' → logprob: -8.260237693786621
    8. '<|end|>' → logprob: -8.510237693786621
    9. 'def' → logprob: -8.635237693786621
    10. '```' → logprob: -8.635237693786621

Token 1601: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022955892607569695
    2. ':' → logprob: -4.147955894470215
    3. '```' → logprob: -5.647955894470215
    4. '   ' → logprob: -6.522955894470215
    5. ':
' → logprob: -7.397955894470215
    6. '[' → logprob: -8.147955894470215
    7. '(' → logprob: -8.522955894470215
    8. '
' → logprob: -9.272955894470215
    9. '    ' → logprob: -9.522955894470215
    10. '(
' → logprob: -9.647955894470215

Token 1602: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017976349918171763
    2. '
' → logprob: -7.626797676086426
    3. '   ' → logprob: -7.626797676086426
    4. ':' → logprob: -8.376797676086426
    5. '```' → logprob: -9.126797676086426
    6. 'class' → logprob: -9.376797676086426
    7. 'def' → logprob: -9.501797676086426
    8. '(' → logprob: -9.751797676086426
    9. '           ' → logprob: -9.876797676086426
    10. '(
' → logprob: -10.376797676086426

Token 1603: ' We'll' (ID: 46830)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0029546432197093964
    2. '   ' → logprob: -6.627954483032227
    3. 'class' → logprob: -7.002954483032227
    4. '           ' → logprob: -8.627954483032227
    5. ')' → logprob: -8.877954483032227
    6. '```' → logprob: -9.252954483032227
    7. 'def' → logprob: -10.002954483032227
    8. '
' → logprob: -10.252954483032227
    9. '<|end|>' → logprob: -10.502954483032227
    10. '    ' → logprob: -11.127954483032227

Token 1604: ' use' (ID: 1199)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.2480406761169434
    2. '       ' → logprob: -1.4980406761169434
    3. '   ' → logprob: -1.6230406761169434
    4. 'class' → logprob: -2.7480406761169434
    5. ' return' → logprob: -2.9980406761169434
    6. 'return' → logprob: -2.9980406761169434
    7. ' def' → logprob: -3.1230406761169434
    8. '
' → logprob: -4.748040676116943
    9. '    ' → logprob: -4.748040676116943
    10. 'continue' → logprob: -4.873040676116943

Token 1605: ' memo' (ID: 46393)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.20727406442165375
    2. 'def' → logprob: -2.5822739601135254
    3. ' self' → logprob: -3.7072739601135254
    4. '   ' → logprob: -3.8322739601135254
    5. 'Expression' → logprob: -3.8322739601135254
    6. 'tokens' → logprob: -3.9572739601135254
    7. '       ' → logprob: -5.082273960113525
    8. ' def' → logprob: -5.207273960113525
    9. ' Expression' → logprob: -5.707273960113525
    10. 'class' → logprob: -5.707273960113525

Token 1606: 'ization' (ID: 2860)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5699743628501892
    2. 'def' → logprob: -1.444974422454834
    3. '    ' → logprob: -3.819974422454834
    4. ':' → logprob: -3.819974422454834
    5. 'ization' → logprob: -4.069974422454834
    6. 'ized' → logprob: -4.069974422454834
    7. '       ' → logprob: -4.069974422454834
    8. '_' → logprob: -4.194974422454834
    9. '
' → logprob: -4.319974422454834
    10. 'class' → logprob: -4.569974422454834

Token 1607: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.209967702627182
    2. '       ' → logprob: -2.334967613220215
    3. 'def' → logprob: -3.584967613220215
    4. '
' → logprob: -4.209967613220215
    5. '(self' → logprob: -4.709967613220215
    6. '<|end|>' → logprob: -4.959967613220215
    7. '<|end|>' → logprob: -5.084967613220215
    8. ',' → logprob: -5.709967613220215
    9. ' and' → logprob: -5.834967613220215
    10. ' (' → logprob: -6.084967613220215

Token 1608: ' sub' (ID: 1543)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.02511380985379219
    2. '(self' → logprob: -4.775113582611084
    3. '   ' → logprob: -5.025113582611084
    4. 'def' → logprob: -5.275113582611084
    5. 'tokens' → logprob: -6.150113582611084
    6. '       ' → logprob: -6.900113582611084
    7. ' self' → logprob: -7.900113582611084
    8. ')' → logprob: -8.650114059448242
    9. '           ' → logprob: -8.900114059448242
    10. 'get' → logprob: -9.025114059448242

Token 1609: 'express' (ID: 23787)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4819577932357788
    2. '   ' → logprob: -1.9819577932357788
    3. 'tokens' → logprob: -2.7319579124450684
    4. 'express' → logprob: -3.1069579124450684
    5. 'class' → logprob: -3.2319579124450684
    6. 'expression' → logprob: -3.9819579124450684
    7. '
' → logprob: -3.9819579124450684
    8. '_tokens' → logprob: -4.106957912445068
    9. 'expr' → logprob: -4.856957912445068
    10. '       ' → logprob: -5.481957912445068

Token 1610: 'ions' (ID: 756)
  Prédit: 'ions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ions' → logprob: -0.38105085492134094
    2. 's' → logprob: -1.7560508251190186
    3. 'def' → logprob: -3.0060508251190186
    4. '   ' → logprob: -3.2560508251190186
    5. 'ion' → logprob: -3.7560508251190186
    6. 'ss' → logprob: -4.631051063537598
    7. 'pressions' → logprob: -4.881051063537598
    8. 'essions' → logprob: -5.131051063537598
    9. '       ' → logprob: -5.631051063537598
    10. 'e' → logprob: -7.131051063537598

Token 1611: ' by' (ID: 656)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16383132338523865
    2. '       ' → logprob: -2.6638312339782715
    3. '(self' → logprob: -3.1638312339782715
    4. '
' → logprob: -4.0388312339782715
    5. ':' → logprob: -5.5388312339782715
    6. 'def' → logprob: -5.6638312339782715
    7. '    
' → logprob: -6.1638312339782715
    8. ',' → logprob: -6.6638312339782715
    9. ' (' → logprob: -6.6638312339782715
    10. '(' → logprob: -6.9138312339782715

Token 1612: ' indices' (ID: 30378)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.753258466720581
    2. 'self' → logprob: -1.003258466720581
    3. '(self' → logprob: -3.128258466720581
    4. 'tokens' → logprob: -3.253258466720581
    5. '(lambda' → logprob: -3.878258466720581
    6. '(' → logprob: -4.12825870513916
    7. 'lambda' → logprob: -4.50325870513916
    8. '_tokens' → logprob: -5.50325870513916
    9. '{}' → logprob: -5.62825870513916
    10. '{' → logprob: -5.87825870513916

Token 1613: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15343916416168213
    2. '       ' → logprob: -2.4034390449523926
    3. '
' → logprob: -4.028439044952393
    4. ':' → logprob: -4.028439044952393
    5. '<|end|>' → logprob: -5.778439044952393
    6. '<|end|>' → logprob: -6.028439044952393
    7. '    
' → logprob: -6.153439044952393
    8. 'def' → logprob: -6.528439044952393
    9. '(' → logprob: -6.653439044952393
    10. ',' → logprob: -6.778439044952393

Token 1614: ' generating' (ID: 36766)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3541468381881714
    2. 'def' → logprob: -1.4791468381881714
    3. '   ' → logprob: -2.979146957397461
    4. ' self' → logprob: -5.229146957397461
    5. 'parse' → logprob: -5.854146957397461
    6. ' def' → logprob: -5.854146957397461
    7. 'tokens' → logprob: -6.229146957397461
    8. '       ' → logprob: -6.354146957397461
    9. '(self' → logprob: -7.354146957397461
    10. ')' → logprob: -7.354146957397461

Token 1615: ' all' (ID: 722)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5917959809303284
    2. '       ' → logprob: -1.5917959213256836
    3. 'tokens' → logprob: -2.4667959213256836
    4. '   ' → logprob: -3.2167959213256836
    5. ' self' → logprob: -3.2167959213256836
    6. '{' → logprob: -4.216795921325684
    7. ' tokens' → logprob: -5.091795921325684
    8. '           ' → logprob: -5.091795921325684
    9. '(self' → logprob: -5.091795921325684
    10. '```' → logprob: -5.091795921325684

Token 1616: ' results' (ID: 4376)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1943495273590088
    2. '_tokens' → logprob: -1.5693495273590088
    3. 'def' → logprob: -1.9443495273590088
    4. 'tokens' → logprob: -2.319349527359009
    5. '```' → logprob: -2.819349527359009
    6. '       ' → logprob: -3.319349527359009
    7. '_with' → logprob: -3.694349527359009
    8. '`' → logprob: -3.819349527359009
    9. '_' → logprob: -4.19434928894043
    10. '_expression' → logprob: -4.44434928894043

Token 1617: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0297547578811646
    2. '   ' → logprob: -1.2797547578811646
    3. '<|end|>' → logprob: -1.9047547578811646
    4. '       ' → logprob: -2.154754638671875
    5. '<|end|>' → logprob: -2.779754638671875
    6. '
' → logprob: -4.654754638671875
    7. ':
' → logprob: -4.779754638671875
    8. '[' → logprob: -5.529754638671875
    9. ',' → logprob: -5.654754638671875
    10. 'def' → logprob: -6.404754638671875

Token 1618: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23199202120304108
    2. ':' → logprob: -2.60699200630188
    3. '   ' → logprob: -2.98199200630188
    4. '
' → logprob: -3.60699200630188
    5. ':
' → logprob: -3.73199200630188
    6. '```' → logprob: -3.98199200630188
    7. '    
' → logprob: -5.856992244720459
    8. '[' → logprob: -6.106992244720459
    9. '(' → logprob: -6.231992244720459
    10. '        
' → logprob: -6.606992244720459

Token 1619: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004053229466080666
    2. '
' → logprob: -6.504053115844727
    3. '   ' → logprob: -6.754053115844727
    4. 'def' → logprob: -7.879053115844727
    5. ':' → logprob: -8.379053115844727
    6. 'class' → logprob: -8.629053115844727
    7. '           ' → logprob: -9.004053115844727
    8. '```' → logprob: -9.254053115844727
    9. '(' → logprob: -9.504053115844727
    10. ')' → logprob: -10.379053115844727

Token 1620: ' To' (ID: 2514)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003581657074391842
    2. '   ' → logprob: -6.753581523895264
    3. 'class' → logprob: -6.878581523895264
    4. '           ' → logprob: -7.503581523895264
    5. '
' → logprob: -8.128582000732422
    6. ' class' → logprob: -9.003582000732422
    7. 'def' → logprob: -9.503582000732422
    8. ')' → logprob: -10.128582000732422
    9. '    ' → logprob: -10.378582000732422
    10. '        
' → logprob: -10.378582000732422

Token 1621: ' get' (ID: 717)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6853569746017456
    2. 'class' → logprob: -1.6853569746017456
    3. '   ' → logprob: -2.560357093811035
    4. '
' → logprob: -2.935357093811035
    5. 'parse' → logprob: -3.310357093811035
    6. 'cache' → logprob: -3.560357093811035
    7. ' def' → logprob: -3.935357093811035
    8. 'import' → logprob: -4.185357093811035
    9. '       ' → logprob: -5.060357093811035
    10. 'self' → logprob: -5.060357093811035

Token 1622: ' tokens' (ID: 20290)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4651600122451782
    2. 'Expression' → logprob: -1.9651600122451782
    3. 'class' → logprob: -2.7151598930358887
    4. '       ' → logprob: -2.7151598930358887
    5. 'tokens' → logprob: -3.9651598930358887
    6. '   ' → logprob: -4.465159893035889
    7. ' self' → logprob: -4.590159893035889
    8. 'None' → logprob: -4.715159893035889
    9. 'def' → logprob: -4.840159893035889
    10. '
' → logprob: -4.965159893035889

Token 1623: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12469711154699326
    2. ':' → logprob: -2.999697208404541
    3. '   ' → logprob: -2.999697208404541
    4. '[' → logprob: -5.624697208404541
    5. ':
' → logprob: -5.999697208404541
    6. '(' → logprob: -6.374697208404541
    7. ')' → logprob: -6.374697208404541
    8. '<|end|>' → logprob: -6.749697208404541
    9. ',' → logprob: -6.999697208404541
    10. '<|end|>' → logprob: -7.249697208404541

Token 1624: ' positions' (ID: 15897)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8100506663322449
    2. 'return' → logprob: -2.0600507259368896
    3. 'self' → logprob: -2.0600507259368896
    4. 'tokens' → logprob: -2.5600507259368896
    5. ')' → logprob: -2.8100507259368896
    6. 'class' → logprob: -3.1850507259368896
    7. '
' → logprob: -3.6850507259368896
    8. '#' → logprob: -4.1850504875183105
    9. '[]' → logprob: -4.4350504875183105
    10. '   ' → logprob: -4.5600504875183105

Token 1625: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08883780986070633
    2. ':' → logprob: -3.4638378620147705
    3. '   ' → logprob: -3.5888378620147705
    4. '<|end|>' → logprob: -4.838837623596191
    5. '<|end|>' → logprob: -5.588837623596191
    6. ':
' → logprob: -6.338837623596191
    7. '[' → logprob: -6.338837623596191
    8. '(' → logprob: -6.338837623596191
    9. ',' → logprob: -6.463837623596191
    10. '
' → logprob: -6.463837623596191

Token 1626: ' we' (ID: 581)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3105721175670624
    2. ' tokens' → logprob: -2.4355721473693848
    3. ' return' → logprob: -2.8105721473693848
    4. 'tokens' → logprob: -3.1855721473693848
    5. '        ' → logprob: -4.310572147369385
    6. ' ' → logprob: -4.435572147369385
    7. '[' → logprob: -4.435572147369385
    8. 'return' → logprob: -4.435572147369385
    9. '           ' → logprob: -5.935572147369385
    10. ' [' → logprob: -6.060572147369385

Token 1627: ' tokenize' (ID: 192720)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8247538805007935
    2. ':' → logprob: -1.6997538805007935
    3. 'def' → logprob: -1.8247538805007935
    4. '       ' → logprob: -2.324753761291504
    5. ' def' → logprob: -4.074753761291504
    6. 'tokens' → logprob: -4.574753761291504
    7. ' tokenize' → logprob: -4.574753761291504
    8. 'return' → logprob: -4.699753761291504
    9. 'token' → logprob: -5.199753761291504
    10. ':
' → logprob: -5.324753761291504

Token 1628: ' first' (ID: 1577)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0443195104599
    2. '<|end|>' → logprob: -1.9193195104599
    3. '       ' → logprob: -2.1693196296691895
    4. '(tokens' → logprob: -2.5443196296691895
    5. '<|end|>' → logprob: -2.6693196296691895
    6. '   ' → logprob: -2.6693196296691895
    7. 'tokens' → logprob: -3.0443196296691895
    8. 'def' → logprob: -3.2943196296691895
    9. '_tokens' → logprob: -4.4193196296691895
    10. '(' → logprob: -4.6693196296691895

Token 1629: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7470952868461609
    2. ':' → logprob: -0.9970952868461609
    3. '   ' → logprob: -2.2470953464508057
    4. '<|end|>' → logprob: -4.497095108032227
    5. '<|end|>' → logprob: -4.872095108032227
    6. ':
' → logprob: -5.122095108032227
    7. ',' → logprob: -5.372095108032227
    8. '(tokens' → logprob: -5.622095108032227
    9. 'tokens' → logprob: -5.747095108032227
    10. '
' → logprob: -6.247095108032227

Token 1630: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006230113562196493
    2. '   ' → logprob: -5.506229877471924
    3. 'tokens' → logprob: -7.756229877471924
    4. '<|end|>' → logprob: -7.756229877471924
    5. '<|end|>' → logprob: -8.506230354309082
    6. '```' → logprob: -8.756230354309082
    7. ':' → logprob: -8.756230354309082
    8. '
' → logprob: -9.006230354309082
    9. '(' → logprob: -9.506230354309082
    10. '           ' → logprob: -9.631230354309082

Token 1631: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004812323022633791
    2. '   ' → logprob: -6.004812240600586
    3. 'tokens' → logprob: -6.379812240600586
    4. 'def' → logprob: -8.254812240600586
    5. '(tokens' → logprob: -9.754812240600586
    6. '
' → logprob: -9.879812240600586
    7. ':' → logprob: -10.004812240600586
    8. ' tokens' → logprob: -10.379812240600586
    9. '```' → logprob: -10.629812240600586
    10. '           ' → logprob: -10.754812240600586

Token 1632: '.pos' (ID: 25321)
  Prédit: '.tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.tokens' → logprob: -0.6188217401504517
    2. '.s' → logprob: -1.2438217401504517
    3. 'tokens' → logprob: -2.118821620941162
    4. '_tokens' → logprob: -4.368821620941162
    5. 'pos' → logprob: -4.493821620941162
    6. 's' → logprob: -5.368821620941162
    7. '.' → logprob: -5.368821620941162
    8. '.pos' → logprob: -5.493821620941162
    9. '.consume' → logprob: -5.493821620941162
    10. 'def' → logprob: -5.618821620941162

Token 1633: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6155360341072083
    2. '=' → logprob: -1.3655359745025635
    3. ' =' → logprob: -1.8655359745025635
    4. '+=' → logprob: -3.2405359745025635
    5. '<|end|>' → logprob: -6.240536212921143
    6. 'tokens' → logprob: -6.740536212921143
    7. ')' → logprob: -6.990536212921143
    8. '_tokens' → logprob: -7.115536212921143
    9. '```' → logprob: -7.240536212921143
    10. ' ' → logprob: -7.490536212921143

Token 1634: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '```' → logprob: -20.5
    4. '۰' → logprob: -20.875
    5. '   ' → logprob: -21.625
    6. '[' → logprob: -21.625
    7. '<|end|>' → logprob: -21.75
    8. '=' → logprob: -21.75
    9. '#' → logprob: -22.125
    10. '00' → logprob: -22.375

Token 1635: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '<|end|>' → logprob: -18.5
    4. '[' → logprob: -19.625
    5. '۰' → logprob: -20.0
    6. '=' → logprob: -20.25
    7. '#' → logprob: -20.5
    8. '<|end|>' → logprob: -21.25
    9. '```' → logprob: -21.375
    10. '00' → logprob: -22.5625

Token 1636: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009722442366182804
    2. '
' → logprob: -5.7597222328186035
    3. '<|end|>' → logprob: -6.2597222328186035
    4. '   ' → logprob: -6.5097222328186035
    5. 'tokens' → logprob: -7.1347222328186035
    6. 'def' → logprob: -7.7597222328186035
    7. '<|end|>' → logprob: -8.259722709655762
    8. ',' → logprob: -8.259722709655762
    9. '        
' → logprob: -8.509722709655762
    10. '```' → logprob: -8.634722709655762

Token 1637: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002701566321775317
    2. 'tokens' → logprob: -6.002701759338379
    3. '   ' → logprob: -10.002701759338379
    4. ' tokens' → logprob: -10.127701759338379
    5. '```' → logprob: -10.252701759338379
    6. 'def' → logprob: -10.752701759338379
    7. '           ' → logprob: -11.127701759338379
    8. ',' → logprob: -11.127701759338379
    9. 's' → logprob: -12.002701759338379
    10. 'token' → logprob: -12.127701759338379

Token 1638: ' tokens' (ID: 20290)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tokens' (adapté à ' tokens') → logprob: -0.004091104958206415
    2. '       ' → logprob: -6.379091262817383
    3. 'self' → logprob: -6.879091262817383
    4. ' tokens' → logprob: -7.254091262817383
    5. 'return' → logprob: -8.254091262817383
    6. '```' → logprob: -8.379091262817383
    7. 's' → logprob: -9.379091262817383
    8. 'def' → logprob: -10.629091262817383
    9. 'code' → logprob: -11.879091262817383
    10. 'token' → logprob: -12.004091262817383

Token 1639: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10392533242702484
    2. '=' → logprob: -2.3539252281188965
    3. '<|end|>' → logprob: -7.1039252281188965
    4. '<|end|>' → logprob: -7.1039252281188965
    5. '()' → logprob: -7.6039252281188965
    6. ',' → logprob: -7.9789252281188965
    7. 'tokens' → logprob: -8.103925704956055
    8. '_tokens' → logprob: -8.728925704956055
    9. ')' → logprob: -8.978925704956055
    10. '(tokens' → logprob: -9.353925704956055

Token 1640: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0002330992283532396
    2. ' self' → logprob: -9.000232696533203
    3. '[self' → logprob: -9.500232696533203
    4. '[]' → logprob: -11.000232696533203
    5. 'list' → logprob: -12.000232696533203
    6. '[' → logprob: -12.500232696533203
    7. '[]
' → logprob: -12.750232696533203
    8. '(self' → logprob: -13.375232696533203
    9. '[(' → logprob: -13.875232696533203
    10. '[
' → logprob: -14.500232696533203

Token 1641: '.token' (ID: 26675)
  Prédit: 'token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'token' → logprob: -0.17978018522262573
    2. '.token' → logprob: -1.8047802448272705
    3. ' tokenize' → logprob: -11.804780006408691
    4. '(token' → logprob: -12.054780006408691
    5. 'tokens' → logprob: -12.304780006408691
    6. '
' → logprob: -12.679780006408691
    7. ' token' → logprob: -12.929780006408691
    8. '[token' → logprob: -13.429780006408691
    9. 'self' → logprob: -13.554780006408691
    10. '	token' → logprob: -13.554780006408691

Token 1642: 'ize' (ID: 750)
  Prédit: 'ize'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ize' → logprob: -4.5252596464706585e-05
    2. 's' → logprob: -10.875044822692871
    3. 'ized' → logprob: -11.000044822692871
    4. 'izer' → logprob: -12.500044822692871
    5. 'IZE' → logprob: -13.000044822692871
    6. 'list' → logprob: -13.250044822692871
    7. '_list' → logprob: -14.250044822692871
    8. 'zie' → logprob: -15.125044822692871
    9. '```' → logprob: -15.750044822692871
    10. '   ' → logprob: -15.875044822692871

Token 1643: '_expression' (ID: 69265)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.7245453596115112
    2. '_expression' → logprob: -0.7245453596115112
    3. 'expression' → logprob: -3.849545478820801
    4. '(self' → logprob: -4.724545478820801
    5. 'Expression' → logprob: -8.8495454788208
    6. ' self' → logprob: -9.4745454788208
    7. ')' → logprob: -9.7245454788208
    8. 'def' → logprob: -9.8495454788208
    9. '_code' → logprob: -9.8495454788208
    10. 'code' → logprob: -9.9745454788208

Token 1644: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017636016011238098
    2. '
' → logprob: -4.517635822296143
    3. 'tokens' → logprob: -6.267635822296143
    4. '<|end|>' → logprob: -6.267635822296143
    5. 'return' → logprob: -7.017635822296143
    6. '<|end|>' → logprob: -7.642635822296143
    7. ',' → logprob: -8.5176362991333
    8. '[' → logprob: -8.5176362991333
    9. '()' → logprob: -8.6426362991333
    10. ' tokens' → logprob: -9.1426362991333

Token 1645: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005210752133280039
    2. '
' → logprob: -5.380210876464844
    3. 'return' → logprob: -8.380210876464844
    4. '```' → logprob: -9.005210876464844
    5. '   ' → logprob: -9.505210876464844
    6. '        
' → logprob: -10.130210876464844
    7. '           ' → logprob: -10.505210876464844
    8. 'def' → logprob: -11.005210876464844
    9. '<|end|>' → logprob: -11.255210876464844
    10. ')' → logprob: -11.255210876464844

Token 1646: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1250842958688736
    2. 'return' → logprob: -2.375084400177002
    3. 'def' → logprob: -4.625084400177002
    4. 'from' → logprob: -5.125084400177002
    5. 'self' → logprob: -5.375084400177002
    6. 'class' → logprob: -6.375084400177002
    7. '```' → logprob: -7.000084400177002
    8. '   ' → logprob: -7.375084400177002
    9. '
' → logprob: -7.375084400177002
    10. 'expr' → logprob: -9.375083923339844

Token 1647: ' parse' (ID: 8420)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.864549458026886
    2. 'return' → logprob: -1.7395493984222412
    3. 'class' → logprob: -1.7395493984222412
    4. 'def' → logprob: -2.239549398422241
    5. 'self' → logprob: -3.114549398422241
    6. 'from' → logprob: -3.114549398422241
    7. '#' → logprob: -4.23954963684082
    8. '
' → logprob: -4.98954963684082
    9. '   ' → logprob: -5.36454963684082
    10. '```' → logprob: -6.11454963684082

Token 1648: ' tokens' (ID: 20290)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23832553625106812
    2. 'return' → logprob: -2.113325595855713
    3. 'self' → logprob: -3.613325595855713
    4. 'def' → logprob: -3.863325595855713
    5. ' return' → logprob: -4.113325595855713
    6. 'class' → logprob: -4.363325595855713
    7. '   ' → logprob: -5.238325595855713
    8. ' self' → logprob: -6.113325595855713
    9. 'expr' → logprob: -6.238325595855713
    10. '
' → logprob: -6.738325595855713

Token 1649: ' fully' (ID: 9637)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02268393710255623
    2. '
' → logprob: -4.272684097290039
    3. '        
' → logprob: -5.897684097290039
    4. ' =' → logprob: -6.022684097290039
    5. 'def' → logprob: -6.897684097290039
    6. '   ' → logprob: -7.397684097290039
    7. ',' → logprob: -7.897684097290039
    8. 'return' → logprob: -8.272684097290039
    9. 'class' → logprob: -8.522684097290039
    10. '    
' → logprob: -8.647684097290039

Token 1650: ' accepting' (ID: 41592)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13203448057174683
    2. '
' → logprob: -2.1320345401763916
    3. '        
' → logprob: -6.3820343017578125
    4. 'def' → logprob: -7.1320343017578125
    5. ',' → logprob: -7.3820343017578125
    6. '   ' → logprob: -7.7570343017578125
    7. '    
' → logprob: -8.007034301757812
    8. 'class' → logprob: -8.132034301757812
    9. '<|end|>' → logprob: -8.632034301757812
    10. 'return' → logprob: -9.132034301757812

Token 1651: ' parentheses' (ID: 180602)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.2388942241668701
    2. 'class' → logprob: -1.4888942241668701
    3. 'def' → logprob: -1.6138942241668701
    4. 'Expression' → logprob: -1.9888942241668701
    5. 'self' → logprob: -2.98889422416687
    6. '       ' → logprob: -3.23889422416687
    7. 'tokens' → logprob: -3.86389422416687
    8. '   ' → logprob: -4.488894462585449
    9. 'ts' → logprob: -5.113894462585449
    10. ')' → logprob: -5.113894462585449

Token 1652: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0448327511548996
    2. '
' → logprob: -3.294832706451416
    3. 'def' → logprob: -6.669832706451416
    4. '<|end|>' → logprob: -6.919832706451416
    5. '        
' → logprob: -6.919832706451416
    6. ',' → logprob: -7.169832706451416
    7. 'class' → logprob: -7.169832706451416
    8. '<|end|>' → logprob: -7.669832706451416
    9. 'return' → logprob: -8.169833183288574
    10. '   ' → logprob: -8.294833183288574

Token 1653: ' build' (ID: 3024)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.038239315152168274
    2. 'def' → logprob: -3.4132392406463623
    3. 'memo' → logprob: -6.288239479064941
    4. 'self' → logprob: -6.788239479064941
    5. 'class' → logprob: -7.663239479064941
    6. '       ' → logprob: -7.663239479064941
    7. 'expr' → logprob: -8.413239479064941
    8. ' return' → logprob: -9.538239479064941
    9. 'from' → logprob: -9.788239479064941
    10. '
' → logprob: -10.163239479064941

Token 1654: ' a' (ID: 261)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.26251259446144104
    2. 'Expression' → logprob: -2.387512683868408
    3. 'return' → logprob: -2.637512683868408
    4. 'def' → logprob: -3.012512683868408
    5. '       ' → logprob: -4.887512683868408
    6. 'class' → logprob: -5.512512683868408
    7. 'expr' → logprob: -5.887512683868408
    8. 'lambda' → logprob: -6.762512683868408
    9. ' self' → logprob: -7.137512683868408
    10. 'expression' → logprob: -7.512512683868408

Token 1655: ' nested' (ID: 47576)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.7454155087471008
    2. 'def' → logprob: -1.245415449142456
    3. 'Expression' → logprob: -2.370415449142456
    4. 'return' → logprob: -2.745415449142456
    5. 'self' → logprob: -3.120415449142456
    6. 'memo' → logprob: -4.370415687561035
    7. 'cache' → logprob: -4.870415687561035
    8. 'stack' → logprob: -6.120415687561035
    9. 'partial' → logprob: -6.245415687561035
    10. '
' → logprob: -6.620415687561035

Token 1656: ' structure' (ID: 8866)
  Prédit: 'Expression'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Expression' → logprob: -0.47641292214393616
    2. 'class' → logprob: -1.7264128923416138
    3. 'def' → logprob: -1.9764128923416138
    4. 'return' → logprob: -2.9764130115509033
    5. 'expression' → logprob: -5.101412773132324
    6. ' Expression' → logprob: -6.601412773132324
    7. ' def' → logprob: -7.351412773132324
    8. '_expression' → logprob: -7.601412773132324
    9. ' return' → logprob: -7.976412773132324
    10. 'structure' → logprob: -7.976412773132324

Token 1657: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06188555434346199
    2. '
' → logprob: -3.1868855953216553
    3. 'class' → logprob: -4.311885356903076
    4. '   ' → logprob: -6.186885356903076
    5. ',' → logprob: -7.686885356903076
    6. '(' → logprob: -8.436885833740234
    7. 'def' → logprob: -8.436885833740234
    8. '        
' → logprob: -8.436885833740234
    9. ' with' → logprob: -8.561885833740234
    10. ' and' → logprob: -8.561885833740234

Token 1658: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.448370838072151e-05
    2. '   ' → logprob: -10.375094413757324
    3. '
' → logprob: -10.625094413757324
    4. ',' → logprob: -11.375094413757324
    5. '        
' → logprob: -11.875094413757324
    6. '           ' → logprob: -12.125094413757324
    7. 'def' → logprob: -12.250094413757324
    8. '<|end|>' → logprob: -12.750094413757324
    9. '```' → logprob: -13.375094413757324
    10. 'return' → logprob: -14.000094413757324

Token 1659: ' expr' (ID: 30206)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002107552019879222
    2. 'def' → logprob: -7.127107620239258
    3. '
' → logprob: -7.252107620239258
    4. '   ' → logprob: -8.627107620239258
    5. 'return' → logprob: -8.752107620239258
    6. 'class' → logprob: -9.002107620239258
    7. 'self' → logprob: -10.377107620239258
    8. '```' → logprob: -10.502107620239258
    9. '        
' → logprob: -10.627107620239258
    10. '#' → logprob: -11.377107620239258

Token 1660: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10035181045532227
    2. '=' → logprob: -2.4753518104553223
    3. '       ' → logprob: -4.600351810455322
    4. '_tokens' → logprob: -7.350351810455322
    5. '   ' → logprob: -8.850351333618164
    6. '=self' → logprob: -9.100351333618164
    7. '           ' → logprob: -9.350351333618164
    8. ',' → logprob: -10.100351333618164
    9. '=
' → logprob: -10.225351333618164
    10. ':' → logprob: -10.225351333618164

Token 1661: ' next' (ID: 2613)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07757718116044998
    2. 'self' → logprob: -3.2025771141052246
    3. 'pos' → logprob: -4.202577114105225
    4. ' self' → logprob: -4.702577114105225
    5. ' ' → logprob: -5.702577114105225
    6. ' pos' → logprob: -6.577577114105225
    7. 'index' → logprob: -6.702577114105225
    8. '_' → logprob: -7.327577114105225
    9. 'rest' → logprob: -7.327577114105225
    10. 'idx' → logprob: -7.452577114105225

Token 1662: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.052065227180719376
    2. '_token' → logprob: -3.177065134048462
    3. '_index' → logprob: -5.302065372467041
    4. '_idx' → logprob: -6.552065372467041
    5. 'pos' → logprob: -6.927065372467041
    6. '_' → logprob: -6.927065372467041
    7. '_tokens' → logprob: -8.302064895629883
    8. '_start' → logprob: -9.427064895629883
    9. '_end' → logprob: -10.177064895629883
    10. ')' → logprob: -10.302064895629883

Token 1663: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.200225830078125
    2. '=' → logprob: -1.825225830078125
    3. ',' → logprob: -3.950225830078125
    4. '<|end|>' → logprob: -8.700225830078125
    5. '       ' → logprob: -8.825225830078125
    6. ')' → logprob: -9.075225830078125
    7. '   ' → logprob: -9.075225830078125
    8. '(' → logprob: -9.200225830078125
    9. '<|end|>' → logprob: -10.075225830078125
    10. ' ' → logprob: -10.075225830078125

Token 1664: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.006796013563871384
    2. ' self' → logprob: -5.006795883178711
    3. '(self' → logprob: -10.006795883178711
    4. '       ' → logprob: -10.381795883178711
    5. '0' → logprob: -13.381795883178711
    6. '	self' → logprob: -14.131795883178711
    7. '   ' → logprob: -14.131795883178711
    8. '$self' → logprob: -15.256795883178711
    9. '[self' → logprob: -15.381795883178711
    10. '           ' → logprob: -15.881795883178711

Token 1665: '.parse' (ID: 7259)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.4016095697879791
    2. 'self' → logprob: -1.5266095399856567
    3. '_parse' → logprob: -3.4016096591949463
    4. '.parse' → logprob: -4.026609420776367
    5. 'build' → logprob: -4.026609420776367
    6. ' parse' → logprob: -4.276609420776367
    7. ' self' → logprob: -4.276609420776367
    8. '._' → logprob: -5.526609420776367
    9. '.build' → logprob: -5.526609420776367
    10. 'def' → logprob: -5.651609420776367

Token 1666: '_expr' (ID: 53654)
  Prédit: '_tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tokens' → logprob: -0.13015201687812805
    2. '_expression' → logprob: -2.1301519870758057
    3. 'tokens' → logprob: -6.130152225494385
    4. 'expression' → logprob: -8.005151748657227
    5. '(tokens' → logprob: -8.255151748657227
    6. '(self' → logprob: -8.880151748657227
    7. '_expr' → logprob: -9.880151748657227
    8. '(' → logprob: -10.005151748657227
    9. 'Tokens' → logprob: -10.005151748657227
    10. '```' → logprob: -10.505151748657227

Token 1667: '_recursive' (ID: 175926)
  Prédit: 'ession'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ession' → logprob: -0.09646853804588318
    2. '(tokens' → logprob: -2.721468448638916
    3. '(self' → logprob: -4.721468448638916
    4. 'ression' → logprob: -5.096468448638916
    5. '_tokens' → logprob: -5.346468448638916
    6. 'essions' → logprob: -6.096468448638916
    7. '```' → logprob: -7.096468448638916
    8. 's' → logprob: -7.346468448638916
    9. '(ss' → logprob: -7.721468448638916
    10. '(' → logprob: -7.846468448638916

Token 1668: '(tokens' (ID: 74272)
  Prédit: '(tokens'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tokens' → logprob: -0.3524002432823181
    2. '(self' → logprob: -1.227400302886963
    3. '(' → logprob: -5.727400302886963
    4. '       ' → logprob: -8.102399826049805
    5. '(
' → logprob: -8.602399826049805
    6. 'tokens' → logprob: -9.227399826049805
    7. '(t' → logprob: -10.102399826049805
    8. '_tokens' → logprob: -11.102399826049805
    9. '(token' → logprob: -11.227399826049805
    10. '   ' → logprob: -12.227399826049805

Token 1669: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0027071540243923664
    2. '       ' → logprob: -6.002707004547119
    3. '(tokens' → logprob: -8.627707481384277
    4. '(' → logprob: -11.252707481384277
    5. ',
' → logprob: -11.502707481384277
    6. ' ,' → logprob: -12.127707481384277
    7. 'tokens' → logprob: -12.502707481384277
    8. ',self' → logprob: -12.752707481384277
    9. '(self' → logprob: -12.752707481384277
    10. ',t' → logprob: -13.127707481384277

Token 1670: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00012606535165105015
    2. ' ' → logprob: -9.250125885009766
    3. 'len' → logprob: -10.875125885009766
    4. '       ' → logprob: -13.000125885009766
    5. '   ' → logprob: -13.375125885009766
    6. '1' → logprob: -14.125125885009766
    7. '        ' → logprob: -14.250125885009766
    8. 'self' → logprob: -14.375125885009766
    9. '           ' → logprob: -14.625125885009766
    10. '         ' → logprob: -14.750125885009766

Token 1671: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010235115041723475
    2. ' ' → logprob: -9.750102043151855
    3. 'len' → logprob: -10.250102043151855
    4. '1' → logprob: -13.125102043151855
    5. ')' → logprob: -13.250102043151855
    6. '   ' → logprob: -13.875102043151855
    7. 'self' → logprob: -14.375102043151855
    8. '[' → logprob: -14.500102043151855
    9. '
' → logprob: -14.875102043151855
    10. '     ' → logprob: -15.312602043151855

Token 1672: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01868244633078575
    2. ')' → logprob: -4.143682479858398
    3. '       ' → logprob: -6.268682479858398
    4. '   ' → logprob: -8.643682479858398
    5. '<|end|>' → logprob: -8.643682479858398
    6. '<|end|>' → logprob: -9.518682479858398
    7. '+' → logprob: -9.893682479858398
    8. ',)' → logprob: -9.893682479858398
    9. ' ,' → logprob: -10.018682479858398
    10. '```' → logprob: -10.143682479858398

Token 1673: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0015053401002660394
    2. ' len' → logprob: -6.501505374908447
    3. '   ' → logprob: -14.001504898071289
    4. '(len' → logprob: -14.126504898071289
    5. '	len' → logprob: -14.626504898071289
    6. '[len' → logprob: -15.126504898071289
    7. ',len' → logprob: -15.501504898071289
    8. '           ' → logprob: -16.37650489807129
    9. '    ' → logprob: -16.37650489807129
    10. '       ' → logprob: -16.62650489807129

Token 1674: '(tokens' (ID: 74272)
  Prédit: '(tokens'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tokens' → logprob: -0.029807310551404953
    2. 'tokens' → logprob: -3.5298073291778564
    3. '(' → logprob: -10.404807090759277
    4. ')' → logprob: -11.279807090759277
    5. ' tokens' → logprob: -11.779807090759277
    6. ' (' → logprob: -13.404807090759277
    7. '(
' → logprob: -13.654807090759277
    8. '```' → logprob: -14.029807090759277
    9. '.tokens' → logprob: -14.404807090759277
    10. '   ' → logprob: -15.279807090759277

Token 1675: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14621581137180328
    2. ')
' → logprob: -2.0212159156799316
    3. '       ' → logprob: -6.021215915679932
    4. '   ' → logprob: -7.146215915679932
    5. ')

' → logprob: -9.271215438842773
    6. '):
' → logprob: -9.396215438842773
    7. '):' → logprob: -10.146215438842773
    8. ')
' → logprob: -10.271215438842773
    9. ')`' → logprob: -11.396215438842773
    10. '))' → logprob: -11.771215438842773

Token 1676: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0035652618389576674
    2. ',' → logprob: -6.003565311431885
    3. ':' → logprob: -7.753565311431885
    4. '   ' → logprob: -9.128564834594727
    5. '```' → logprob: -9.128564834594727
    6. '(' → logprob: -9.253564834594727
    7. '
' → logprob: -9.878564834594727
    8. '           ' → logprob: -10.128564834594727
    9. 'def' → logprob: -10.128564834594727
    10. ';' → logprob: -10.253564834594727

Token 1677: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011801084037870169
    2. 'return' → logprob: -7.001180171966553
    3. '```' → logprob: -8.876179695129395
    4. '   ' → logprob: -10.376179695129395
    5. '           ' → logprob: -10.376179695129395
    6. ',' → logprob: -10.626179695129395
    7. ' return' → logprob: -11.376179695129395
    8. ':' → logprob: -11.626179695129395
    9. ')' → logprob: -12.376179695129395
    10. '
' → logprob: -12.626179695129395

Token 1678: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.06197440251708031
    2. ' next' → logprob: -2.811974287033081
    3. '(next' → logprob: -12.56197452545166
    4. '   ' → logprob: -13.56197452545166
    5. '	next' → logprob: -13.81197452545166
    6. '_next' → logprob: -14.93697452545166
    7. '[next' → logprob: -15.31197452545166
    8. '
' → logprob: -16.436973571777344
    9. '    ' → logprob: -16.686973571777344
    10. '.next' → logprob: -17.061973571777344

Token 1679: '_pos' (ID: 14692)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.08499672263860703
    2. ' <' → logprob: -3.8349967002868652
    3. ' _' → logprob: -4.209996700286865
    4. ' >=' → logprob: -4.334996700286865
    5. ' ==' → logprob: -4.459996700286865
    6. ' !=' → logprob: -5.584996700286865
    7. '==' → logprob: -5.709996700286865
    8. '<' → logprob: -5.709996700286865
    9. ')' → logprob: -6.084996700286865
    10. '<|end|>' → logprob: -6.834996700286865

Token 1680: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2460561841726303
    2. ' ==' → logprob: -1.9960561990737915
    3. '!=' → logprob: -3.246056079864502
    4. ' !=' → logprob: -3.496056079864502
    5. '<|end|>' → logprob: -4.746056079864502
    6. '=' → logprob: -6.621056079864502
    7. '<=' → logprob: -7.121056079864502
    8. '>=' → logprob: -7.371056079864502
    9. ')' → logprob: -8.24605655670166
    10. '<|end|>' → logprob: -8.37105655670166

Token 1681: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -4.620622712536715e-05
    2. ' len' → logprob: -10.125045776367188
    3. '0' → logprob: -12.875045776367188
    4. '(len' → logprob: -14.125045776367188
    5. 'tokens' → logprob: -14.375045776367188
    6. '[len' → logprob: -14.500045776367188
    7. '	len' → logprob: -14.750045776367188
    8. '   ' → logprob: -15.000045776367188
    9. 'leni' → logprob: -15.125045776367188
    10. '           ' → logprob: -15.750045776367188

Token 1682: '(tokens' (ID: 74272)
  Prédit: '(tokens'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tokens' → logprob: -0.006717505399137735
    2. 'tokens' → logprob: -5.006717681884766
    3. ' tokens' → logprob: -13.881717681884766
    4. '(' → logprob: -14.131717681884766
    5. '.tokens' → logprob: -16.381717681884766
    6. 'okens' → logprob: -16.881717681884766
    7. '(
' → logprob: -16.881717681884766
    8. ')' → logprob: -16.881717681884766
    9. '(self' → logprob: -17.131717681884766
    10. '```' → logprob: -17.506717681884766

Token 1683: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0037580362986773252
    2. ':
' → logprob: -6.378757953643799
    3. '):' → logprob: -6.878757953643799
    4. '       ' → logprob: -7.003757953643799
    5. ')' → logprob: -10.253758430480957
    6. '   ' → logprob: -10.378758430480957
    7. '           ' → logprob: -11.128758430480957
    8. ':' → logprob: -11.628758430480957
    9. '):
' → logprob: -11.753758430480957
    10. ''):
' → logprob: -11.753758430480957

Token 1684: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0031825865153223276
    2. ':
' → logprob: -6.003182411193848
    3. ':' → logprob: -8.003182411193848
    4. '       ' → logprob: -8.753182411193848
    5. 'return' → logprob: -10.003182411193848
    6. '```' → logprob: -10.003182411193848
    7. '               ' → logprob: -10.253182411193848
    8. ' return' → logprob: -11.128182411193848
    9. ':return' → logprob: -11.128182411193848
    10. 'raise' → logprob: -11.253182411193848

Token 1685: ' raise' (ID: 9338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2369411736726761
    2. 'raise' (adapté à ' raise') → logprob: -1.9869412183761597
    3. ' raise' → logprob: -2.61194109916687
    4. '               ' → logprob: -8.73694133758545
    5. '	raise' → logprob: -9.23694133758545
    6. '            ' → logprob: -9.36194133758545
    7. 'return' → logprob: -10.98694133758545
    8. '
' → logprob: -11.11194133758545
    9. '   ' → logprob: -11.11194133758545
    10. ' ' → logprob: -11.48694133758545

Token 1686: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.001171652227640152
    2. ' Value' → logprob: -6.751171588897705
    3. 'Syntax' → logprob: -14.626172065734863
    4. 'value' → logprob: -14.876172065734863
    5. '_value' → logprob: -16.001171112060547
    6. '	Value' → logprob: -16.251171112060547
    7. '_Value' → logprob: -16.376171112060547
    8. '   ' → logprob: -16.501171112060547
    9. ' value' → logprob: -16.751171112060547
    10. ' ' → logprob: -17.126171112060547

Token 1687: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.00032378386822529137
    2. 'Value' → logprob: -8.250324249267578
    3. 'Unexpected' → logprob: -11.000324249267578
    4. '("' → logprob: -11.375324249267578
    5. '_Error' → logprob: -11.875324249267578
    6. 'Expected' → logprob: -12.875324249267578
    7. 'EOF' → logprob: -13.125324249267578
    8. '"' → logprob: -13.250324249267578
    9. '   ' → logprob: -13.250324249267578
    10. '_("' → logprob: -13.500324249267578

Token 1688: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.04580862075090408
    2. '(f' → logprob: -3.2958085536956787
    3. '(' → logprob: -4.920808792114258
    4. '(
' → logprob: -8.420808792114258
    5. '("("' → logprob: -8.670808792114258
    6. '('' → logprob: -10.420808792114258
    7. '(",' → logprob: -11.045808792114258
    8. 'f' → logprob: -13.420808792114258
    9. '("(' → logprob: -13.920808792114258
    10. '       ' → logprob: -14.045808792114258

Token 1689: 'Extra' (ID: 14547)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.1509706974029541
    2. 'Unexpected' → logprob: -2.150970697402954
    3. ' "' → logprob: -5.150970458984375
    4. '")' → logprob: -5.650970458984375
    5. 'Expected' → logprob: -5.650970458984375
    6. 'f' → logprob: -5.900970458984375
    7. ' f' → logprob: -6.025970458984375
    8. ' Unexpected' → logprob: -6.275970458984375
    9. ''' → logprob: -6.900970458984375
    10. 'Invalid' → logprob: -7.400970458984375

Token 1690: ' tokens' (ID: 20290)
  Prédit: ' tokens'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tokens' → logprob: -0.898181676864624
    2. '_tokens' → logprob: -1.273181676864624
    3. ')' → logprob: -2.023181676864624
    4. 'tokens' → logprob: -2.148181676864624
    5. ' code' → logprob: -3.398181676864624
    6. ' input' → logprob: -4.648181915283203
    7. '_token' → logprob: -5.523181915283203
    8. ' token' → logprob: -5.648181915283203
    9. ' )' → logprob: -5.898181915283203
    10. '_code' → logprob: -6.148181915283203

Token 1691: ' after' (ID: 1934)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.5744470357894897
    2. ')' → logprob: -1.9494470357894897
    3. ' after' → logprob: -1.9494470357894897
    4. 'at' → logprob: -3.4494471549987793
    5. ' found' → logprob: -4.199447154998779
    6. '")' → logprob: -4.324447154998779
    7. 'after' → logprob: -4.574447154998779
    8. 'not' → logprob: -4.574447154998779
    9. ' not' → logprob: -4.699447154998779
    10. 'found' → logprob: -4.699447154998779

Token 1692: ' valid' (ID: 4529)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.09040242433547974
    2. 'parse' → logprob: -2.715402364730835
    3. 'next' → logprob: -4.465402603149414
    4. 'expression' → logprob: -5.090402603149414
    5. ' expr' → logprob: -7.465402603149414
    6. ')' → logprob: -7.840402603149414
    7. ' next' → logprob: -7.965402603149414
    8. '_expr' → logprob: -8.090402603149414
    9. 'par' → logprob: -8.590402603149414
    10. 'parsed' → logprob: -8.715402603149414

Token 1693: ' expression' (ID: 12973)
  Prédit: 'expression'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expression' → logprob: -0.6201971769332886
    2. 'parse' → logprob: -1.2451971769332886
    3. 'expr' → logprob: -2.245197296142578
    4. ' parse' → logprob: -3.745197296142578
    5. ')' → logprob: -3.745197296142578
    6. ' expression' → logprob: -4.120197296142578
    7. '_expr' → logprob: -6.620197296142578
    8. '_expression' → logprob: -7.120197296142578
    9. ')
' → logprob: -7.870197296142578
    10. 'parsed' → logprob: -7.870197296142578

Token 1694: '")
' (ID: 1896)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6024819612503052
    2. '")
' → logprob: -0.9774819612503052
    3. '")' → logprob: -3.4774818420410156
    4. ')")
' → logprob: -3.4774818420410156
    5. ')' → logprob: -4.727481842041016
    6. ')
' → logprob: -5.852481842041016
    7. '   ' → logprob: -6.227481842041016
    8. ')")' → logprob: -8.602481842041016
    9. '```' → logprob: -8.977481842041016
    10. ']")
' → logprob: -9.352481842041016

Token 1695: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011737769469618797
    2. '
' → logprob: -4.886737823486328
    3. '```' → logprob: -6.511737823486328
    4. '   ' → logprob: -7.261737823486328
    5. ':
' → logprob: -7.761737823486328
    6. '           ' → logprob: -7.886737823486328
    7. ':' → logprob: -8.386737823486328
    8. '[' → logprob: -8.511737823486328
    9. 'return' → logprob: -9.011737823486328
    10. '        
' → logprob: -9.386737823486328

Token 1696: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001452140393666923
    2. 'return' (adapté à ' return') → logprob: -6.8764519691467285
    3. '           ' → logprob: -8.626452445983887
    4. '```' → logprob: -8.876452445983887
    5. '   ' → logprob: -10.126452445983887
    6. ' return' → logprob: -10.376452445983887
    7. '
' → logprob: -11.751452445983887
    8. 'def' → logprob: -12.126452445983887
    9. '        
' → logprob: -12.876452445983887
    10. ')' → logprob: -13.251452445983887

Token 1697: ' expr' (ID: 30206)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.011049824766814709
    2. ' expr' → logprob: -4.511049747467041
    3. '(expr' → logprob: -13.2610502243042
    4. 'express' → logprob: -15.1360502243042
    5. '_expr' → logprob: -18.636049270629883
    6. 'expression' → logprob: -18.636049270629883
    7. '   ' → logprob: -19.511049270629883
    8. 'exp' → logprob: -19.761049270629883
    9. 'Expr' → logprob: -19.886049270629883
    10. '
' → logprob: -19.886049270629883

Token 1698: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29986485838890076
    2. '```' → logprob: -2.1748647689819336
    3. ':' → logprob: -2.7998647689819336
    4. '
' → logprob: -3.4248647689819336
    5. '       ' → logprob: -4.049864768981934
    6. '    
' → logprob: -4.549864768981934
    7. 'def' → logprob: -4.924864768981934
    8. '<|end|>' → logprob: -5.549864768981934
    9. '[' → logprob: -6.049864768981934
    10. ' def' → logprob: -6.299864768981934

Token 1699: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02648862823843956
    2. '```' → logprob: -4.776488780975342
    3. ' def' → logprob: -5.151488780975342
    4. 'def' → logprob: -5.276488780975342
    5. '
' → logprob: -6.026488780975342
    6. '    
' → logprob: -6.401488780975342
    7. '`' → logprob: -7.151488780975342
    8. '       ' → logprob: -7.651488780975342
    9. '[' → logprob: -8.151488304138184
    10. 'class' → logprob: -8.776488304138184

Token 1700: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00998237356543541
    2. '
' → logprob: -5.384982585906982
    3. 'def' (adapté à ' def') → logprob: -6.009982585906982
    4. '```' → logprob: -6.759982585906982
    5. '    
' → logprob: -7.134982585906982
    6. ' def' → logprob: -7.134982585906982
    7. '       ' → logprob: -11.009982109069824
    8. ')' → logprob: -11.259982109069824
    9. '(' → logprob: -11.259982109069824
    10. 'indent' → logprob: -11.384982109069824

Token 1701: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.0013883279170840979
    2. ' parse' → logprob: -6.6263885498046875
    3. 'def' → logprob: -9.751388549804688
    4. ' def' → logprob: -13.626388549804688
    5. 'parser' → logprob: -14.501388549804688
    6. '_parse' → logprob: -14.626388549804688
    7. '   ' → logprob: -14.626388549804688
    8. '(parse' → logprob: -14.626388549804688
    9. ' ' → logprob: -15.126388549804688
    10. '
' → logprob: -15.876388549804688

Token 1702: '_expr' (ID: 53654)
  Prédit: '_expr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_expr' → logprob: -6.253713218029588e-05
    2. 'expr' → logprob: -10.125062942504883
    3. '_expression' → logprob: -11.000062942504883
    4. '   ' → logprob: -13.875062942504883
    5. '(expr' → logprob: -14.125062942504883
    6. '_parse' → logprob: -14.500062942504883
    7. '_tokens' → logprob: -14.625062942504883
    8. '_EXPR' → logprob: -14.625062942504883
    9. '_exp' → logprob: -15.125062942504883
    10. '_parser' → logprob: -15.125062942504883

Token 1703: '_recursive' (ID: 175926)
  Prédit: '_recursive'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_recursive' → logprob: -2.696889623621246e-06
    2. '_rec' → logprob: -13.87500286102295
    3. ''_' → logprob: -15.00000286102295
    4. '
' → logprob: -15.37500286102295
    5. '```' → logprob: -15.37500286102295
    6. 'recursive' → logprob: -15.37500286102295
    7. '_' → logprob: -15.87500286102295
    8. '\' → logprob: -16.000001907348633
    9. ' _' → logprob: -16.250001907348633
    10. '##_' → logprob: -16.375001907348633

Token 1704: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.3915141355246305e-05
    2. '(' → logprob: -10.75002384185791
    3. 'self' → logprob: -13.37502384185791
    4. '(
' → logprob: -14.75002384185791
    5. '   ' → logprob: -15.37502384185791
    6. 'def' → logprob: -15.75002384185791
    7. '       ' → logprob: -16.375024795532227
    8. ' (' → logprob: -17.250024795532227
    9. '
' → logprob: -18.125024795532227
    10. '```' → logprob: -18.250024795532227

Token 1705: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.641841820150148e-05
    2. '(' → logprob: -11.00002670288086
    3. 'self' → logprob: -11.87502670288086
    4. '       ' → logprob: -13.87502670288086
    5. '(
' → logprob: -14.50002670288086
    6. ' (' → logprob: -14.62502670288086
    7. 'def' → logprob: -15.25002670288086
    8. '   ' → logprob: -15.37502670288086
    9. ')' → logprob: -16.75002670288086
    10. '
' → logprob: -16.87502670288086

Token 1706: ' tokens' (ID: 20290)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.10152092576026917
    2. 'self' → logprob: -2.3515210151672363
    3. ' tokens' → logprob: -6.726521015167236
    4. ' self' → logprob: -9.851520538330078
    5. '   ' → logprob: -10.101520538330078
    6. '       ' → logprob: -11.351520538330078
    7. 'ts' → logprob: -12.601520538330078
    8. 'def' → logprob: -13.601520538330078
    9. '.tokens' → logprob: -13.976520538330078
    10. 'token' → logprob: -14.351520538330078

Token 1707: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018390947952866554
    2. '(self' → logprob: -4.643391132354736
    3. '       ' → logprob: -5.268391132354736
    4. '[' → logprob: -6.768391132354736
    5. 'self' → logprob: -7.518391132354736
    6. ')' → logprob: -7.768391132354736
    7. '   ' → logprob: -8.143390655517578
    8. ' ,' → logprob: -8.143390655517578
    9. ':' → logprob: -8.518390655517578
    10. '[self' → logprob: -8.893390655517578

Token 1708: ' List' (ID: 2655)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07137121260166168
    2. 'List' → logprob: -2.69637131690979
    3. ' self' → logprob: -7.696371078491211
    4. '   ' → logprob: -7.946371078491211
    5. ')' → logprob: -8.946371078491211
    6. '       ' → logprob: -9.196371078491211
    7. ',' → logprob: -9.446371078491211
    8. ' List' → logprob: -9.821371078491211
    9. '[' → logprob: -9.946371078491211
    10. '0' → logprob: -10.446371078491211

Token 1709: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3946079909801483
    2. '[int' → logprob: -1.3946080207824707
    3. ',' → logprob: -2.6446080207824707
    4. '[self' → logprob: -5.269608020782471
    5. '   ' → logprob: -6.769608020782471
    6. ':' → logprob: -8.519607543945312
    7. 'self' → logprob: -8.644607543945312
    8. '       ' → logprob: -8.894607543945312
    9. ')' → logprob: -9.769607543945312
    10. '[List' → logprob: -9.769607543945312

Token 1710: 'Union' (ID: 39222)
  Prédit: 'Union'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Union' → logprob: -3.650518920039758e-06
    2. ' Union' → logprob: -13.000003814697266
    3. 'union' → logprob: -13.750003814697266
    4. '[' → logprob: -16.375003814697266
    5. '_union' → logprob: -16.375003814697266
    6. 'int' → logprob: -16.875003814697266
    7. '   ' → logprob: -17.125003814697266
    8. ''Union' → logprob: -18.125003814697266
    9. '[int' → logprob: -19.625003814697266
    10. 'Uniform' → logprob: -19.750003814697266

Token 1711: '[int' (ID: 40124)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.47410261631011963
    2. '[int' → logprob: -0.9741026163101196
    3. '   ' → logprob: -11.349102973937988
    4. 'Union' → logprob: -12.224102973937988
    5. '<int' → logprob: -12.724102973937988
    6. ' int' → logprob: -12.974102973937988
    7. '[' → logprob: -13.474102973937988
    8. '=int' → logprob: -15.224102973937988
    9. '       ' → logprob: -15.224102973937988
    10. ',int' → logprob: -15.224102973937988

Token 1712: ',str' (ID: 95110)
  Prédit: ',str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',str' → logprob: -0.3201192617416382
    2. ',int' → logprob: -1.3201192617416382
    3. ',' → logprob: -5.445119380950928
    4. 'int' → logprob: -6.445119380950928
    5. '[int' → logprob: -7.695119380950928
    6. 'str' → logprob: -8.19511890411377
    7. '[str' → logprob: -8.57011890411377
    8. ',s' → logprob: -12.82011890411377
    9. ' ,' → logprob: -12.94511890411377
    10. '   ' → logprob: -14.44511890411377

Token 1713: ']],' (ID: 37171)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.0002682496269699186
    2. ',' → logprob: -8.87526798248291
    3. ']],' → logprob: -9.00026798248291
    4. ']' → logprob: -13.50026798248291
    5. ' ],' → logprob: -14.12526798248291
    6. '   ' → logprob: -14.25026798248291
    7. '])' → logprob: -14.75026798248291
    8. '[int' → logprob: -14.87526798248291
    9. '       ' → logprob: -15.25026798248291
    10. '],
' → logprob: -15.50026798248291

Token 1714: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.06325067579746246
    2. ' start' → logprob: -2.813250780105591
    3. '   ' → logprob: -6.938250541687012
    4. '    ' → logprob: -8.938250541687012
    5. '       ' → logprob: -9.688250541687012
    6. '     ' → logprob: -10.438250541687012
    7. ' ' → logprob: -10.813250541687012
    8. 'pos' → logprob: -11.063250541687012
    9. 'self' → logprob: -11.313250541687012
    10. '      ' → logprob: -11.563250541687012

Token 1715: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00275506847538054
    2. ':' → logprob: -6.002755165100098
    3. ':int' → logprob: -8.627755165100098
    4. ',int' → logprob: -9.877755165100098
    5. '   ' → logprob: -10.627755165100098
    6. ' ,' → logprob: -11.127755165100098
    7. ')' → logprob: -13.002755165100098
    8. '=' → logprob: -13.752755165100098
    9. '[int' → logprob: -13.752755165100098
    10. 'int' → logprob: -13.877755165100098

Token 1716: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00016349162615370005
    2. ' int' → logprob: -8.750163078308105
    3. '   ' → logprob: -13.125163078308105
    4. '0' → logprob: -14.000163078308105
    5. '[int' → logprob: -14.125163078308105
    6. ')' → logprob: -14.875163078308105
    7. 'Optional' → logprob: -15.125163078308105
    8. ':int' → logprob: -16.125164031982422
    9. '...' → logprob: -16.375164031982422
    10. '
' → logprob: -16.375164031982422

Token 1717: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.024604277219623e-05
    2. ' ,' → logprob: -10.375040054321289
    3. ',int' → logprob: -13.000040054321289
    4. '   ' → logprob: -13.125040054321289
    5. ':' → logprob: -13.500040054321289
    6. '       ' → logprob: -14.125040054321289
    7. ',
' → logprob: -14.375040054321289
    8. ',end' → logprob: -14.375040054321289
    9. ',next' → logprob: -14.750040054321289
    10. ')' → logprob: -14.875040054321289

Token 1718: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.16024149954319
    2. ' end' → logprob: -1.9102414846420288
    3. '   ' → logprob: -11.28524112701416
    4. '       ' → logprob: -13.53524112701416
    5. 'stop' → logprob: -13.91024112701416
    6. '    ' → logprob: -14.28524112701416
    7. '        ' → logprob: -15.41024112701416
    8. ' ' → logprob: -15.53524112701416
    9. ',end' → logprob: -15.66024112701416
    10. '[end' → logprob: -15.66024112701416

Token 1719: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.031688231974840164
    2. ':' → logprob: -3.5316882133483887
    3. '   ' → logprob: -7.156688213348389
    4. '):' → logprob: -7.156688213348389
    5. ',' → logprob: -9.031688690185547
    6. '):
' → logprob: -9.031688690185547
    7. '       ' → logprob: -9.531688690185547
    8. ':int' → logprob: -10.781688690185547
    9. ' )' → logprob: -11.031688690185547
    10. '=' → logprob: -12.156688690185547

Token 1720: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.06465809047222137
    2. 'end' → logprob: -3.3146581649780273
    3. ')' → logprob: -4.689658164978027
    4. ' int' → logprob: -4.689658164978027
    5. ' end' → logprob: -5.064658164978027
    6. '[int' → logprob: -7.564658164978027
    7. '...' → logprob: -8.439658164978027
    8. '   ' → logprob: -8.689658164978027
    9. '(int' → logprob: -8.814658164978027
    10. '[end' → logprob: -9.314658164978027

Token 1721: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00027111053350381553
    2. '):
' → logprob: -9.00027084350586
    3. '   ' → logprob: -9.62527084350586
    4. '):' → logprob: -10.12527084350586
    5. ':' → logprob: -10.62527084350586
    6. ')->' → logprob: -11.87527084350586
    7. '       ' → logprob: -12.25027084350586
    8. ' )' → logprob: -13.25027084350586
    9. ',' → logprob: -13.87527084350586
    10. '=' → logprob: -14.75027084350586

Token 1722: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1316152960062027
    2. '       ' → logprob: -2.131615400314331
    3. ':
' → logprob: -5.881615161895752
    4. '[' → logprob: -8.25661563873291
    5. ':return' → logprob: -8.75661563873291
    6. '   ' → logprob: -8.88161563873291
    7. '{' → logprob: -9.00661563873291
    8. ' ->' → logprob: -9.00661563873291
    9. '<|end|>' → logprob: -9.13161563873291
    10. ')' → logprob: -9.13161563873291

Token 1723: ' Tuple' (ID: 50841)
  Prédit: 'Tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -0.0017155165551230311
    2. ' Tuple' → logprob: -6.376715660095215
    3. 'Union' → logprob: -11.876715660095215
    4. '<Tuple' → logprob: -13.376715660095215
    5. 'int' → logprob: -13.501715660095215
    6. '.Tuple' → logprob: -14.001715660095215
    7. 'tuple' → logprob: -14.126715660095215
    8. '(' → logprob: -14.751715660095215
    9. '   ' → logprob: -15.126715660095215
    10. '(T' → logprob: -15.376715660095215

Token 1724: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00757468119263649
    2. 'Expression' → logprob: -5.007574558258057
    3. '[int' → logprob: -7.507574558258057
    4. '(Expression' → logprob: -8.132575035095215
    5. 'Optional' → logprob: -12.007575035095215
    6. 'int' → logprob: -12.257575035095215
    7. '[
' → logprob: -12.882575035095215
    8. '   ' → logprob: -13.757575035095215
    9. '(' → logprob: -13.882575035095215
    10. ',' → logprob: -15.257575035095215

Token 1725: 'Expression' (ID: 12633)
  Prédit: 'Expression'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Expression' → logprob: -0.0001261845463886857
    2. 'Optional' → logprob: -9.625125885009766
    3. 'int' → logprob: -10.375125885009766
    4. 'Union' → logprob: -10.625125885009766
    5. '[' → logprob: -13.625125885009766
    6. ' Expression' → logprob: -13.875125885009766
    7. '(Expression' → logprob: -14.125125885009766
    8. '
' → logprob: -14.250125885009766
    9. 'Expr' → logprob: -15.500125885009766
    10. 'List' → logprob: -15.500125885009766

Token 1726: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009877204895019531
    2. '[int' → logprob: -5.2598772048950195
    3. ',int' → logprob: -5.3848772048950195
    4. '   ' → logprob: -11.00987720489502
    5. ' ,' → logprob: -11.00987720489502
    6. ',List' → logprob: -12.00987720489502
    7. 'int' → logprob: -12.63487720489502
    8. '[' → logprob: -13.00987720489502
    9. ',
' → logprob: -14.50987720489502
    10. '[List' → logprob: -14.63487720489502

Token 1727: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -5.796184723294573e-06
    2. ' int' → logprob: -12.250005722045898
    3. '[int' → logprob: -15.125005722045898
    4. 'Optional' → logprob: -15.375005722045898
    5. '   ' → logprob: -15.500005722045898
    6. '
' → logprob: -15.750005722045898
    7. '(int' → logprob: -18.5000057220459
    8. 'List' → logprob: -18.6250057220459
    9. '    
' → logprob: -18.6250057220459
    10. ']int' → logprob: -18.7500057220459

Token 1728: ']:
' (ID: 22152)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.437720388174057
    2. '   ' → logprob: -1.9377204179763794
    3. ':
' → logprob: -2.68772029876709
    4. '):
' → logprob: -2.93772029876709
    5. ']:
' → logprob: -3.31272029876709
    6. ',' → logprob: -3.68772029876709
    7. ':' → logprob: -3.81272029876709
    8. '           ' → logprob: -6.56272029876709
    9. '{' → logprob: -6.81272029876709
    10. ']' → logprob: -7.43772029876709

Token 1729: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00013250234769657254
    2. '        
' → logprob: -10.00013256072998
    3. '```' → logprob: -10.37513256072998
    4. '           ' → logprob: -11.12513256072998
    5. ' if' → logprob: -11.25013256072998
    6. '``' → logprob: -12.12513256072998
    7. '        ' → logprob: -12.75013256072998
    8. ' ' → logprob: -12.87513256072998
    9. '`' → logprob: -13.12513256072998
    10. '               ' → logprob: -13.25013256072998

Token 1730: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1922638714313507
    2. '       ' → logprob: -1.9422638416290283
    3. 'pos' → logprob: -3.9422638416290283
    4. 'i' → logprob: -4.692264080047607
    5. 'index' → logprob: -6.942264080047607
    6. '#' (adapté à ' #') → logprob: -7.442264080047607
    7. 'tokens' → logprob: -7.567264080047607
    8. 'idx' → logprob: -8.06726360321045
    9. '   ' → logprob: -8.19226360321045
    10. '           ' → logprob: -9.06726360321045

Token 1731: ' parse' (ID: 8420)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6931172013282776
    2. 'i' → logprob: -1.4431171417236328
    3. 'pos' → logprob: -1.6931171417236328
    4. '       ' → logprob: -2.693117141723633
    5. 'idx' → logprob: -5.443117141723633
    6. '#' → logprob: -5.818117141723633
    7. 'index' → logprob: -6.068117141723633
    8. 'tokens' → logprob: -6.443117141723633
    9. 'def' → logprob: -7.693117141723633
    10. '           ' → logprob: -8.693117141723633

Token 1732: ' expr' (ID: 30206)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.004552946425974369
    2. 'tokens' → logprob: -5.504552841186523
    3. '(start' → logprob: -8.504552841186523
    4. ' start' → logprob: -9.254552841186523
    5. '       ' → logprob: -9.754552841186523
    6. '   ' → logprob: -9.879552841186523
    7. '           ' → logprob: -11.879552841186523
    8. '
' → logprob: -11.879552841186523
    9. '[start' → logprob: -12.004552841186523
    10. ')' → logprob: -12.004552841186523

Token 1733: ' ::=' (ID: 176636)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24855312705039978
    2. '(self' → logprob: -2.6235530376434326
    3. ',' → logprob: -3.1235530376434326
    4. '(tokens' → logprob: -3.6235530376434326
    5. 'tokens' → logprob: -3.9985530376434326
    6. 'def' → logprob: -4.248553276062012
    7. 'self' → logprob: -4.748553276062012
    8. '(' → logprob: -4.873553276062012
    9. '(
' → logprob: -4.998553276062012
    10. '           ' → logprob: -4.998553276062012

Token 1734: ' num' (ID: 2269)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.7800921201705933
    2. 'tokens' → logprob: -1.9050921201705933
    3. 'self' → logprob: -2.030092239379883
    4. '(start' → logprob: -2.280092239379883
    5. 'int' → logprob: -3.905092239379883
    6. '(
' → logprob: -3.905092239379883
    7. '(int' → logprob: -4.030092239379883
    8. 'Number' → logprob: -4.030092239379883
    9. 'Union' → logprob: -4.405092239379883
    10. 'parse' → logprob: -4.405092239379883

Token 1735: ' |' (ID: 1022)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5233752727508545
    2. '       ' → logprob: -1.1483752727508545
    3. ':' → logprob: -4.148375511169434
    4. ':
' → logprob: -4.148375511169434
    5. '|' → logprob: -4.523375511169434
    6. '           ' → logprob: -4.648375511169434
    7. ' or' → logprob: -5.148375511169434
    8. '(tokens' → logprob: -5.273375511169434
    9. 'tokens' → logprob: -5.523375511169434
    10. ')' → logprob: -5.898375511169434

Token 1736: ' "("' (ID: 75321)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.6636847257614136
    2. 'tokens' → logprob: -1.6636847257614136
    3. 'Number' → logprob: -2.038684844970703
    4. 'Expression' → logprob: -2.038684844970703
    5. 'self' → logprob: -2.288684844970703
    6. '('' → logprob: -3.288684844970703
    7. 'Union' → logprob: -3.413684844970703
    8. 'Binary' → logprob: -3.538684844970703
    9. '(
' → logprob: -3.538684844970703
    10. '   ' → logprob: -3.913684844970703

Token 1737: ' expr' (ID: 30206)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.7112653851509094
    2. 'tokens' → logprob: -0.7112653851509094
    3. '')' → logprob: -6.211265563964844
    4. '   ' → logprob: -6.211265563964844
    5. '       ' → logprob: -6.461265563964844
    6. ')' → logprob: -6.586265563964844
    7. ''' → logprob: -6.586265563964844
    8. '
' → logprob: -6.836265563964844
    9. '[start' → logprob: -6.836265563964844
    10. '(start' → logprob: -6.961265563964844

Token 1738: ' ")"' (ID: 150133)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9526389241218567
    2. '")' → logprob: -1.452638864517212
    3. ')' → logprob: -1.952638864517212
    4. '       ' → logprob: -2.077638864517212
    5. '   ' → logprob: -3.452638864517212
    6. '           ' → logprob: -3.452638864517212
    7. '","' → logprob: -4.327639102935791
    8. '",' → logprob: -4.452639102935791
    9. '')' → logprob: -5.452639102935791
    10. ' ,' → logprob: -6.202639102935791

Token 1739: ' |' (ID: 1022)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3376448452472687
    2. ' if' → logprob: -1.5876448154449463
    3. '           ' → logprob: -2.9626448154449463
    4. 'if' → logprob: -3.8376448154449463
    5. ':
' → logprob: -5.962645053863525
    6. ':' → logprob: -6.837645053863525
    7. '
' → logprob: -6.837645053863525
    8. '   ' → logprob: -7.087645053863525
    9. '               ' → logprob: -7.337645053863525
    10. ' (' → logprob: -7.837645053863525

Token 1740: ' expr' (ID: 30206)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.42739441990852356
    2. 'self' → logprob: -1.8023943901062012
    3. 'Number' → logprob: -2.677394390106201
    4. 'Expression' → logprob: -3.177394390106201
    5. 'Binary' → logprob: -3.802394390106201
    6. '   ' → logprob: -4.802394390106201
    7. '(tokens' → logprob: -5.177394390106201
    8. ' tokens' → logprob: -5.302394390106201
    9. '(self' → logprob: -5.552394390106201
    10. 'parse' → logprob: -5.677394390106201

Token 1741: ' op' (ID: 991)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24718642234802246
    2. 'def' → logprob: -3.1221864223480225
    3. '[' → logprob: -3.2471864223480225
    4. '       ' → logprob: -3.3721864223480225
    5. '|' → logprob: -3.8721864223480225
    6. ' (' → logprob: -4.622186660766602
    7. ' |' → logprob: -4.747186660766602
    8. '           ' → logprob: -5.372186660766602
    9. ' ' → logprob: -5.372186660766602
    10. '(' → logprob: -5.497186660766602

Token 1742: ' expr' (ID: 30206)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07696942239999771
    2. ':' → logprob: -3.7019693851470947
    3. ':
' → logprob: -4.076969623565674
    4. '       ' → logprob: -4.326969623565674
    5. ' ,' → logprob: -4.701969623565674
    6. '   ' → logprob: -6.076969623565674
    7. '           ' → logprob: -6.701969623565674
    8. ')' → logprob: -7.201969623565674
    9. '):
' → logprob: -7.201969623565674
    10. ',
' → logprob: -7.326969623565674

Token 1743: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7635031938552856
    2. ':
' → logprob: -1.1385031938552856
    3. ':' → logprob: -2.138503074645996
    4. ' if' → logprob: -4.013503074645996
    5. '           ' → logprob: -4.138503074645996
    6. '[' → logprob: -4.388503074645996
    7. '):
' → logprob: -4.638503074645996
    8. ')' → logprob: -5.013503074645996
    9. '
' → logprob: -5.388503074645996
    10. '        
' → logprob: -5.513503074645996

Token 1744: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010722271399572492
    2. ' if' → logprob: -7.001072406768799
    3. 'if' → logprob: -10.12607192993164
    4. ',' → logprob: -10.75107192993164
    5. '   ' → logprob: -10.75107192993164
    6. ':' → logprob: -11.12607192993164
    7. '           ' → logprob: -11.37607192993164
    8. '```' → logprob: -11.62607192993164
    9. ' ' → logprob: -11.75107192993164
    10. ' ' → logprob: -12.12607192993164

Token 1745: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009991057449951768
    2. ' if' → logprob: -7.5009989738464355
    3. 'if' → logprob: -8.000999450683594
    4. '   ' → logprob: -10.125999450683594
    5. '           ' → logprob: -10.500999450683594
    6. '```' → logprob: -11.375999450683594
    7. '        
' → logprob: -11.750999450683594
    8. '
' → logprob: -12.000999450683594
    9. '	' → logprob: -12.750999450683594
    10. ' i' → logprob: -13.375999450683594

Token 1746: ' But' (ID: 3072)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.07951831072568893
    2. '       ' → logprob: -2.5795183181762695
    3. 'i' → logprob: -8.07951831817627
    4. ' if' → logprob: -8.82951831817627
    5. '#' → logprob: -9.45451831817627
    6. 'pos' → logprob: -10.57951831817627
    7. 'token' → logprob: -10.95451831817627
    8. '   ' → logprob: -11.20451831817627
    9. '```' → logprob: -11.32951831817627
    10. 'index' → logprob: -11.95451831817627

Token 1747: ' since' (ID: 3630)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40890735387802124
    2. '#' → logprob: -1.783907413482666
    3. 'if' → logprob: -2.908907413482666
    4. ' if' → logprob: -3.408907413482666
    5. 'tokens' → logprob: -3.533907413482666
    6. ' tokens' → logprob: -4.283907413482666
    7. '           ' → logprob: -4.408907413482666
    8. '
' → logprob: -4.658907413482666
    9. 'start' → logprob: -5.283907413482666
    10. '   ' → logprob: -6.408907413482666

Token 1748: ' implementation' (ID: 13847)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.005035575479269028
    2. 'tokens' → logprob: -5.880035400390625
    3. ' start' → logprob: -6.380035400390625
    4. 'True' → logprob: -8.505035400390625
    5. 'end' → logprob: -9.005035400390625
    6. 'self' → logprob: -9.630035400390625
    7. ' tokens' → logprob: -10.130035400390625
    8. '       ' → logprob: -10.380035400390625
    9. '(start' → logprob: -10.755035400390625
    10. '   ' → logprob: -11.255035400390625

Token 1749: ' complexity' (ID: 37588)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1703881174325943
    2. ':' → logprob: -2.2953882217407227
    3. ':
' → logprob: -3.4203882217407227
    4. 'def' → logprob: -5.170388221740723
    5. '           ' → logprob: -5.420388221740723
    6. ' def' → logprob: -5.920388221740723
    7. '   ' → logprob: -6.170388221740723
    8. ',' → logprob: -6.295388221740723
    9. ' is' → logprob: -6.545388221740723
    10. '
' → logprob: -7.295388221740723

Token 1750: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9365884065628052
    2. ':' → logprob: -1.0615884065628052
    3. ':
' → logprob: -1.4365884065628052
    4. 'def' → logprob: -5.311588287353516
    5. '
' → logprob: -5.436588287353516
    6. '):
' → logprob: -6.061588287353516
    7. '           ' → logprob: -6.061588287353516
    8. '   ' → logprob: -6.436588287353516
    9. ' def' → logprob: -6.561588287353516
    10. ',' → logprob: -7.061588287353516

Token 1751: ' parse' (ID: 8420)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14869153499603271
    2. ' if' → logprob: -2.3986916542053223
    3. '           ' → logprob: -3.2736916542053223
    4. '        ' → logprob: -6.273691654205322
    5. '#' → logprob: -6.523691654205322
    6. ' ' → logprob: -6.898691654205322
    7. ' tokens' → logprob: -7.023691654205322
    8. ' return' → logprob: -7.148691654205322
    9. '
' → logprob: -7.648691654205322
    10. '```' → logprob: -7.648691654205322

Token 1752: ' first' (ID: 1577)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9371390342712402
    2. 'tokens' → logprob: -0.9371390342712402
    3. '       ' → logprob: -3.0621390342712402
    4. ' tokens' → logprob: -3.3121390342712402
    5. ' if' → logprob: -3.5621390342712402
    6. '#' → logprob: -3.8121390342712402
    7. 'def' → logprob: -3.9371390342712402
    8. '           ' → logprob: -4.06213903427124
    9. 'None' → logprob: -4.93713903427124
    10. 'while' → logprob: -5.18713903427124

Token 1753: ' primary' (ID: 9107)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39387205243110657
    2. '           ' → logprob: -2.268872022628784
    3. '#' → logprob: -2.893872022628784
    4. 'if' → logprob: -3.643872022628784
    5. ' if' → logprob: -3.768872022628784
    6. ',' → logprob: -4.268872261047363
    7. '(None' → logprob: -4.268872261047363
    8. 'None' → logprob: -4.393872261047363
    9. 'def' → logprob: -4.518872261047363
    10. '(' → logprob: -4.893872261047363

Token 1754: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14166192710399628
    2. '(self' → logprob: -2.8916618824005127
    3. '(' → logprob: -4.016662120819092
    4. ':' → logprob: -4.516662120819092
    5. ',' → logprob: -4.516662120819092
    6. '(
' → logprob: -4.641662120819092
    7. '   ' → logprob: -5.016662120819092
    8. ' (' → logprob: -5.266662120819092
    9. 'def' → logprob: -5.516662120819092
    10. '(tokens' → logprob: -6.141662120819092

Token 1755: 'num' (ID: 4571)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.3313755691051483
    2. ')' → logprob: -1.4563755989074707
    3. 'start' → logprob: -4.081375598907471
    4. '):
' → logprob: -4.206375598907471
    5. 'self' → logprob: -5.456375598907471
    6. '#' → logprob: -6.081375598907471
    7. 'def' → logprob: -6.206375598907471
    8. '       ' → logprob: -6.581375598907471
    9. '):' → logprob: -6.581375598907471
    10. ' tokens' → logprob: -6.706375598907471

Token 1756: ' or' (ID: 503)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.45352625846862793
    2. ' or' → logprob: -1.328526258468628
    3. '):' → logprob: -3.578526258468628
    4. 'or' → logprob: -3.953526258468628
    5. '|' → logprob: -4.453526496887207
    6. ',' → logprob: -4.578526496887207
    7. '       ' → logprob: -4.703526496887207
    8. '):
' → logprob: -4.828526496887207
    9. '=' → logprob: -5.828526496887207
    10. 'def' → logprob: -6.203526496887207

Token 1757: ' parent' (ID: 5980)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.007414600811898708
    2. 'parent' → logprob: -5.382414817810059
    3. 'paren' → logprob: -6.757414817810059
    4. '(' → logprob: -7.132414817810059
    5. ' '('' → logprob: -7.757414817810059
    6. '"' → logprob: -8.507414817810059
    7. '('' → logprob: -9.257414817810059
    8. '(
' → logprob: -10.507414817810059
    9. 'Parent' → logprob: -11.257414817810059
    10. '(paren' → logprob: -11.257414817810059

Token 1758: 'hes' (ID: 9780)
  Prédit: 'heses'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heses' → logprob: -0.09118415415287018
    2. 'hes' → logprob: -3.216184139251709
    3. 'hesis' → logprob: -3.341184139251709
    4. 'h' → logprob: -4.466184139251709
    5. 'hs' → logprob: -9.341184616088867
    6. ')' → logprob: -9.841184616088867
    7. '```' → logprob: -11.966184616088867
    8. 'hesia' → logprob: -12.966184616088867
    9. '#' → logprob: -13.216184616088867
    10. 'he' → logprob: -14.466184616088867

Token 1759: 'ized' (ID: 2110)
  Prédit: 'zed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zed' → logprob: -0.10465920716524124
    2. '   ' → logprob: -3.10465931892395
    3. 'ized' → logprob: -3.35465931892395
    4. ')' → logprob: -5.604659080505371
    5. 'esized' → logprob: -5.854659080505371
    6. '(' → logprob: -6.104659080505371
    7. ' ' → logprob: -6.354659080505371
    8. '
' → logprob: -6.729659080505371
    9. '```' → logprob: -6.979659080505371
    10. 'def' → logprob: -7.354659080505371

Token 1760: ' expr' (ID: 30206)
  Prédit: 'expression'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expression' → logprob: -0.13558335602283478
    2. ')' → logprob: -2.6355834007263184
    3. 'expr' → logprob: -3.1355834007263184
    4. ' expression' → logprob: -4.760583400726318
    5. '
' → logprob: -6.885583400726318
    6. 'token' → logprob: -7.635583400726318
    7. '):
' → logprob: -7.885583400726318
    8. '_expression' → logprob: -8.26058292388916
    9. '):' → logprob: -8.63558292388916
    10. '),' → logprob: -9.26058292388916

Token 1761: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.44620147347450256
    2. ')' → logprob: -1.6962014436721802
    3. '):
' → logprob: -2.9462015628814697
    4. '           ' → logprob: -3.1962015628814697
    5. '):' → logprob: -4.071201324462891
    6. ':' → logprob: -4.196201324462891
    7. ',' → logprob: -4.196201324462891
    8. ')
' → logprob: -4.446201324462891
    9. ':
' → logprob: -4.821201324462891
    10. '   ' → logprob: -5.446201324462891

Token 1762: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14220082759857178
    2. ':' → logprob: -2.1422009468078613
    3. ',' → logprob: -4.892200946807861
    4. '```' → logprob: -5.267200946807861
    5. ':
' → logprob: -6.892200946807861
    6. '(' → logprob: -7.767200946807861
    7. '``' → logprob: -8.642200469970703
    8. '   ' → logprob: -8.642200469970703
    9. ' :' → logprob: -9.017200469970703
    10. '           ' → logprob: -9.142200469970703

Token 1763: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02513926848769188
    2. '```' → logprob: -4.650139331817627
    3. ' if' → logprob: -4.900139331817627
    4. 'if' → logprob: -6.400139331817627
    5. '
' → logprob: -6.650139331817627
    6. '   ' → logprob: -6.900139331817627
    7. '           ' → logprob: -7.150139331817627
    8. ' i' → logprob: -7.150139331817627
    9. ' c' → logprob: -8.275138854980469
    10. '               ' → logprob: -8.400138854980469

Token 1764: ' then' (ID: 1815)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001050911727361381
    2. ' if' → logprob: -8.25105094909668
    3. 'if' → logprob: -8.75105094909668
    4. '   ' → logprob: -8.75105094909668
    5. '
' → logprob: -9.00105094909668
    6. '           ' → logprob: -9.12605094909668
    7. '```' → logprob: -10.25105094909668
    8. '#' → logprob: -10.50105094909668
    9. '        
' → logprob: -10.62605094909668
    10. ' i' → logprob: -10.62605094909668

Token 1765: ' parse' (ID: 8420)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6175582408905029
    2. 'while' → logprob: -1.117558240890503
    3. ' while' → logprob: -2.617558240890503
    4. '           ' → logprob: -4.367558479309082
    5. 'if' → logprob: -4.492558479309082
    6. 'pos' → logprob: -4.742558479309082
    7. 'c' → logprob: -5.242558479309082
    8. ' if' → logprob: -5.742558479309082
    9. '   ' → logprob: -5.742558479309082
    10. ' c' → logprob: -5.867558479309082

Token 1766: ' binary' (ID: 15600)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'op' → logprob: -1.324748158454895
    2. 'self' → logprob: -1.699748158454895
    3. '       ' → logprob: -1.949748158454895
    4. '   ' → logprob: -2.1997480392456055
    5. 'tokens' → logprob: -2.3247480392456055
    6. 'while' → logprob: -2.8247480392456055
    7. '```' → logprob: -3.3247480392456055
    8. ' op' → logprob: -4.0747480392456055
    9. ' self' → logprob: -4.6997480392456055
    10. ' tokens' → logprob: -4.6997480392456055

Token 1767: ' operations' (ID: 12084)
  Prédit: '_op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_op' → logprob: -0.17409060895442963
    2. 'op' → logprob: -2.674090623855591
    3. '_' → logprob: -3.049090623855591
    4. ' _' → logprob: -3.549090623855591
    5. '_ops' → logprob: -5.549090385437012
    6. '_operator' → logprob: -6.174090385437012
    7. ' op' → logprob: -6.424090385437012
    8. '   ' → logprob: -6.549090385437012
    9. 'Op' → logprob: -6.924090385437012
    10. '_token' → logprob: -7.424090385437012

Token 1768: ' left' (ID: 3561)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017037924379110336
    2. ':' → logprob: -4.517037868499756
    3. ',' → logprob: -7.017037868499756
    4. ':
' → logprob: -7.142037868499756
    5. '           ' → logprob: -7.142037868499756
    6. ' =' → logprob: -7.142037868499756
    7. '        
' → logprob: -7.392037868499756
    8. '   ' → logprob: -8.142038345336914
    9. ' :' → logprob: -8.267038345336914
    10. '
' → logprob: -8.892038345336914

Token 1769: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5770171284675598
    2. ':' → logprob: -1.452017068862915
    3. '       ' → logprob: -2.077017068862915
    4. ' =' → logprob: -3.202017068862915
    5. '=' → logprob: -3.577017068862915
    6. 'def' → logprob: -6.577017307281494
    7. 'over' → logprob: -6.577017307281494
    8. '=None' → logprob: -6.702017307281494
    9. '           ' → logprob: -6.952017307281494
    10. '        
' → logprob: -7.202017307281494

Token 1770: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -7.588793960167095e-05
    2. ' right' → logprob: -10.750076293945312
    3. '   ' → logprob: -10.875076293945312
    4. '
' → logprob: -11.250076293945312
    5. 'end' → logprob: -11.250076293945312
    6. '1' → logprob: -13.000076293945312
    7. ' ' → logprob: -13.500076293945312
    8. 'next' → logprob: -13.625076293945312
    9. 'start' → logprob: -13.625076293945312
    10. 'left' → logprob: -13.750076293945312

Token 1771: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013067754916846752
    2. ':' → logprob: -4.638067722320557
    3. ':
' → logprob: -6.638067722320557
    4. '           ' → logprob: -7.763067722320557
    5. '   ' → logprob: -8.763068199157715
    6. '(' → logprob: -8.763068199157715
    7. '```' → logprob: -8.763068199157715
    8. ' (' → logprob: -8.888068199157715
    9. '
' → logprob: -9.013068199157715
    10. ' :' → logprob: -9.013068199157715

Token 1772: ' no' (ID: 860)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.3549054265022278
    2. 'end' → logprob: -2.229905366897583
    3. 'None' → logprob: -2.229905366897583
    4. 'preced' → logprob: -3.854905366897583
    5. 'next' → logprob: -4.854905605316162
    6. '   ' → logprob: -4.854905605316162
    7. 'lowest' → logprob: -4.854905605316162
    8. '#' → logprob: -5.104905605316162
    9. 'tokens' → logprob: -5.354905605316162
    10. '0' → logprob: -5.354905605316162

Token 1773: ' fixed' (ID: 13213)
  Prédit: 'preced'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'preced' → logprob: -0.006863017100840807
    2. 'explicit' → logprob: -6.006863117218018
    3. ' precedence' → logprob: -6.381863117218018
    4. 'operator' → logprob: -6.881863117218018
    5. 'look' → logprob: -7.381863117218018
    6. 'pre' → logprob: -8.00686264038086
    7. 'prec' → logprob: -8.75686264038086
    8. 'priority' → logprob: -9.25686264038086
    9. 'consider' → logprob: -9.38186264038086
    10. '
' → logprob: -9.50686264038086

Token 1774: ' precedence' (ID: 120000)
  Prédit: 'preced'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'preced' → logprob: -0.027009978890419006
    2. ' precedence' → logprob: -3.652009963989258
    3. '```' → logprob: -8.152009963989258
    4. 'prec' → logprob: -8.527009963989258
    5. '
' → logprob: -9.402009963989258
    6. 'priority' → logprob: -9.652009963989258
    7. '   ' → logprob: -10.527009963989258
    8. 'pre' → logprob: -11.277009963989258
    9. ' ' → logprob: -11.652009963989258
    10. '``' → logprob: -11.652009963989258

Token 1775: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0037522208876907825
    2. ':' → logprob: -6.1287522315979
    3. ':
' → logprob: -7.3787522315979
    4. '           ' → logprob: -8.378751754760742
    5. '        
' → logprob: -8.628751754760742
    6. '
' → logprob: -8.878751754760742
    7. '   ' → logprob: -9.753751754760742
    8. '):
' → logprob: -10.128751754760742
    9. '```' → logprob: -10.378751754760742
    10. ' :' → logprob: -10.378751754760742

Token 1776: 'because' (ID: 53081)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -1.1798286437988281
    2. ')' → logprob: -1.8048286437988281
    3. 'start' → logprob: -1.9298286437988281
    4. 'tokens' → logprob: -2.179828643798828
    5. ',' → logprob: -2.929828643798828
    6. '       ' → logprob: -3.054828643798828
    7. ' tokens' → logprob: -3.179828643798828
    8. 'end' → logprob: -3.554828643798828
    9. ' start' → logprob: -4.054828643798828
    10. 'pos' → logprob: -4.179828643798828

Token 1777: ' all' (ID: 722)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.7402629256248474
    2. 'start' → logprob: -1.1152629852294922
    3. 'end' → logprob: -2.115262985229492
    4. ' self' → logprob: -4.240262985229492
    5. 'True' → logprob: -4.490262985229492
    6. 'tokens' → logprob: -4.490262985229492
    7. ' start' → logprob: -4.740262985229492
    8. ' end' → logprob: -5.115262985229492
    9. 'preced' → logprob: -5.990262985229492
    10. ' True' → logprob: -5.990262985229492

Token 1778: ' orders' (ID: 12528)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -1.1519057750701904
    2. ' tokens' → logprob: -1.6519057750701904
    3. '):
' → logprob: -2.4019057750701904
    4. '):' → logprob: -2.5269057750701904
    5. '   ' → logprob: -2.7769057750701904
    6. ')' → logprob: -2.9019057750701904
    7. 'preced' → logprob: -3.0269057750701904
    8. 'ops' → logprob: -3.5269057750701904
    9. '       ' → logprob: -4.1519060134887695
    10. 'op' → logprob: -4.2769060134887695

Token 1779: ' considered' (ID: 9474)
  Prédit: 'are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'are' → logprob: -0.4923650920391083
    2. 'allowed' → logprob: -1.6173651218414307
    3. '=' → logprob: -3.3673651218414307
    4. ')' → logprob: -3.6173651218414307
    5. 'must' → logprob: -3.6173651218414307
    6. 'consider' → logprob: -3.9923651218414307
    7. 'have' → logprob: -4.367364883422852
    8. ' are' → logprob: -4.617364883422852
    9. 'of' → logprob: -4.742364883422852
    10. '):
' → logprob: -5.117364883422852

Token 1780: ' later' (ID: 4849)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6562075614929199
    2. '):
' → logprob: -1.28120756149292
    3. '):' → logprob: -2.78120756149292
    4. ':' → logprob: -3.03120756149292
    5. ')' → logprob: -3.28120756149292
    6. ':
' → logprob: -3.65620756149292
    7. ',' → logprob: -4.65620756149292
    8. '.' → logprob: -5.53120756149292
    9. ')
' → logprob: -5.78120756149292
    10. '
' → logprob: -6.15620756149292

Token 1781: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19304759800434113
    2. '):
' → logprob: -1.9430476427078247
    3. ':
' → logprob: -4.193047523498535
    4. '):' → logprob: -5.193047523498535
    5. '           ' → logprob: -5.943047523498535
    6. ':' → logprob: -5.943047523498535
    7. ')' → logprob: -6.318047523498535
    8. ',' → logprob: -6.443047523498535
    9. '
' → logprob: -6.943047523498535
    10. '   ' → logprob: -7.443047523498535

Token 1782: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004996551433578134
    2. '        
' → logprob: -8.500499725341797
    3. ',' → logprob: -9.750499725341797
    4. '           ' → logprob: -9.875499725341797
    5. '   ' → logprob: -10.250499725341797
    6. ':' → logprob: -10.625499725341797
    7. ' if' → logprob: -10.750499725341797
    8. '	' → logprob: -11.250499725341797
    9. '```' → logprob: -11.375499725341797
    10. '(' → logprob: -11.500499725341797

Token 1783: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02304653637111187
    2. 'if' → logprob: -3.8980464935302734
    3. ' if' → logprob: -7.148046493530273
    4. '   ' → logprob: -7.898046493530273
    5. 'pos' → logprob: -8.023046493530273
    6. '```' → logprob: -8.523046493530273
    7. 'i' → logprob: -8.773046493530273
    8. 'token' → logprob: -8.773046493530273
    9. '           ' → logprob: -9.523046493530273
    10. 'c' → logprob: -9.648046493530273

Token 1784: ' For' (ID: 2214)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01588255912065506
    2. 'pos' → logprob: -4.76588249206543
    3. 'if' → logprob: -6.14088249206543
    4. 'i' → logprob: -6.14088249206543
    5. 'index' → logprob: -7.01588249206543
    6. '   ' → logprob: -7.51588249206543
    7. ' i' → logprob: -7.89088249206543
    8. 'tokens' → logprob: -8.64088249206543
    9. '```' → logprob: -9.01588249206543
    10. ' if' → logprob: -9.01588249206543

Token 1785: ' Kit' (ID: 23793)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.11562599986791611
    2. 'self' → logprob: -2.615626096725464
    3. 'tokens' → logprob: -4.115625858306885
    4. '       ' → logprob: -5.365625858306885
    5. '   ' → logprob: -5.490625858306885
    6. ' start' → logprob: -5.740625858306885
    7. 'def' → logprob: -5.990625858306885
    8. 'pos' → logprob: -6.990625858306885
    9. ' self' → logprob: -7.115625858306885
    10. 'True' → logprob: -7.865625858306885

Token 1786: 'am' (ID: 313)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5916038155555725
    2. '       ' → logprob: -1.2166037559509277
    3. 'def' → logprob: -1.9666037559509277
    4. ' def' → logprob: -5.841603755950928
    5. '
' → logprob: -6.466603755950928
    6. ':' → logprob: -6.716603755950928
    7. '    ' → logprob: -6.966603755950928
    8. '```' → logprob: -7.091603755950928
    9. '        
' → logprob: -7.716603755950928
    10. ' ' → logprob: -7.841603755950928

Token 1787: 'asa' (ID: 5643)
  Prédit: 'asa'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'asa' → logprob: -0.00013953536108601838
    2. '   ' → logprob: -9.875139236450195
    3. 'as' → logprob: -10.625139236450195
    4. '```' → logprob: -11.125139236450195
    5. 'аса' → logprob: -11.375139236450195
    6. 'assa' → logprob: -12.250139236450195
    7. 'a' → logprob: -12.500139236450195
    8. 'class' → logprob: -12.750139236450195
    9. 'import' → logprob: -12.875139236450195
    10. 'aza' → logprob: -13.125139236450195

Token 1788: '-k' (ID: 10897)
  Prédit: '-k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-k' → logprob: -0.0012822567950934172
    2. '_k' → logprob: -7.376282215118408
    3. '   ' → logprob: -8.751282691955566
    4. '-' → logprob: -9.001282691955566
    5. ':' → logprob: -9.251282691955566
    6. 'def' → logprob: -9.376282691955566
    7. '-def' → logprob: -9.876282691955566
    8. 'class' → logprob: -10.501282691955566
    9. '```' → logprob: -10.501282691955566
    10. '-class' → logprob: -11.501282691955566

Token 1789: 'un' (ID: 373)
  Prédit: 'un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.06384839117527008
    2. 'n' → logprob: -2.8138484954833984
    3. '-n' → logprob: -7.438848495483398
    4. 'u' → logprob: -7.563848495483398
    5. '-un' → logprob: -8.313848495483398
    6. '```' → logprob: -9.688848495483398
    7. ''n' → logprob: -9.813848495483398
    8. '-k' → logprob: -10.188848495483398
    9. ''un' → logprob: -10.313848495483398
    10. '_n' → logprob: -10.313848495483398

Token 1790: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9346592426300049
    2. '       ' → logprob: -1.0596592426300049
    3. ':
' → logprob: -1.5596592426300049
    4. ',' → logprob: -3.434659242630005
    5. '):
' → logprob: -5.059659004211426
    6. '(tokens' → logprob: -6.059659004211426
    7. ' :' → logprob: -6.809659004211426
    8. ' :
' → logprob: -6.809659004211426
    9. '   ' → logprob: -7.184659004211426
    10. ' (' → logprob: -7.184659004211426

Token 1791: ' the' (ID: 290)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.097495675086975
    2. '#' → logprob: -1.222495675086975
    3. ' if' → logprob: -2.5974955558776855
    4. 'def' → logprob: -2.8474955558776855
    5. 'if' → logprob: -2.9724955558776855
    6. 'tokens' → logprob: -3.0974955558776855
    7. ' tokens' → logprob: -3.2224955558776855
    8. 'pos' → logprob: -3.5974955558776855
    9. ' #' → logprob: -4.3474955558776855
    10. ' i' → logprob: -4.5974955558776855

Token 1792: ' evaluation' (ID: 21407)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.16763654351234436
    2. '#' → logprob: -3.0426366329193115
    3. '       ' → logprob: -3.2926366329193115
    4. '   ' → logprob: -3.7926366329193115
    5. 'if' → logprob: -4.042636394500732
    6. 'while' → logprob: -5.042636394500732
    7. ' def' → logprob: -5.292636394500732
    8. '
' → logprob: -5.917636394500732
    9. 'pos' → logprob: -6.417636394500732
    10. ' if' → logprob: -6.417636394500732

Token 1793: ' order' (ID: 2569)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2201024293899536
    2. '   ' → logprob: -1.3451024293899536
    3. 'def' → logprob: -2.220102310180664
    4. ':' → logprob: -2.720102310180664
    5. ' continues' → logprob: -3.095102310180664
    6. ':
' → logprob: -3.220102310180664
    7. ' is' → logprob: -3.345102310180664
    8. ' def' → logprob: -3.595102310180664
    9. ' will' → logprob: -4.595102310180664
    10. ',' → logprob: -4.845102310180664

Token 1794: ' varies' (ID: 47245)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08289306610822678
    2. ':' → logprob: -3.207893133163452
    3. ' ' → logprob: -4.707892894744873
    4. ' is' → logprob: -4.832892894744873
    5. ',' → logprob: -5.207892894744873
    6. ' =' → logprob: -5.832892894744873
    7. '   ' → logprob: -5.957892894744873
    8. '           ' → logprob: -6.207892894744873
    9. ' (' → logprob: -6.582892894744873
    10. '        ' → logprob: -6.707892894744873

Token 1795: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005676583852618933
    2. ':' → logprob: -5.755676746368408
    3. ',' → logprob: -6.380676746368408
    4. '(' → logprob: -8.25567626953125
    5. '        
' → logprob: -8.75567626953125
    6. '   ' → logprob: -9.63067626953125
    7. '           ' → logprob: -9.75567626953125
    8. ':
' → logprob: -9.75567626953125
    9. '```' → logprob: -10.13067626953125
    10. ' (' → logprob: -10.25567626953125

Token 1796: ' so' (ID: 813)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7490293383598328
    2. ' tokens' → logprob: -1.9990293979644775
    3. ' pos' → logprob: -2.2490293979644775
    4. ' if' → logprob: -2.2490293979644775
    5. ' while' → logprob: -3.1240293979644775
    6. ' return' → logprob: -3.1240293979644775
    7. '           ' → logprob: -3.8740293979644775
    8. ' i' → logprob: -4.124029159545898
    9. ' index' → logprob: -4.874029159545898
    10. '#' → logprob: -4.874029159545898

Token 1797: ' parser' (ID: 14216)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.43406370282173157
    2. 'pos' → logprob: -1.8090636730194092
    3. ' if' → logprob: -1.8090636730194092
    4. '       ' → logprob: -4.184063911437988
    5. ' pos' → logprob: -5.559063911437988
    6. 'tokens' → logprob: -6.934063911437988
    7. '#' → logprob: -7.059063911437988
    8. 'current' → logprob: -7.434063911437988
    9. 'expr' → logprob: -7.684063911437988
    10. 'curr' → logprob: -7.934063911437988

Token 1798: ' makes' (ID: 4787)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04927573353052139
    2. ' must' → logprob: -4.549275875091553
    3. ':' → logprob: -4.674275875091553
    4. ' def' → logprob: -5.174275875091553
    5. '   ' → logprob: -5.674275875091553
    6. ' ' → logprob: -6.049275875091553
    7. ',' → logprob: -6.299275875091553
    8. 'def' → logprob: -6.299275875091553
    9. '```' → logprob: -6.299275875091553
    10. ' =' → logprob: -6.424275875091553

Token 1799: ' AST' (ID: 41607)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.20348986983299255
    2. 'def' → logprob: -2.9534897804260254
    3. 'stack' → logprob: -3.7034897804260254
    4. 'tokens' → logprob: -3.7034897804260254
    5. 'an' → logprob: -3.8284897804260254
    6. 'expr' → logprob: -4.078489780426025
    7. 'sure' → logprob: -4.453489780426025
    8. 'the' → logprob: -5.078489780426025
    9. '       ' → logprob: -5.078489780426025
    10. 'return' → logprob: -5.578489780426025

Token 1800: ' reflecting' (ID: 66890)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11105413734912872
    2. ':' → logprob: -2.7360541820526123
    3. ':
' → logprob: -4.361053943634033
    4. ',' → logprob: -4.861053943634033
    5. ' (' → logprob: -5.486053943634033
    6. '```' → logprob: -5.861053943634033
    7. '   ' → logprob: -6.611053943634033
    8. '           ' → logprob: -6.736053943634033
    9. '(' → logprob: -6.861053943634033
    10. ' if' → logprob: -6.986053943634033

Token 1801: ' structure' (ID: 8866)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.3068033456802368
    2. 'no' → logprob: -1.5568033456802368
    3. 'left' → logprob: -1.9318033456802368
    4. 'tokens' → logprob: -2.1818032264709473
    5. 'the' → logprob: -2.4318032264709473
    6. '```' → logprob: -3.1818032264709473
    7. 'all' → logprob: -3.8068032264709473
    8. '   ' → logprob: -4.181803226470947
    9. 'possible' → logprob: -4.306803226470947
    10. 'binary' → logprob: -4.431803226470947

Token 1802: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12455177307128906
    2. ':' → logprob: -2.249551773071289
    3. ':
' → logprob: -5.624551773071289
    4. '(' → logprob: -6.124551773071289
    5. ',' → logprob: -6.124551773071289
    6. '   ' → logprob: -7.124551773071289
    7. '        
' → logprob: -7.874551773071289
    8. ' (' → logprob: -8.124551773071289
    9. '```' → logprob: -8.249551773071289
    10. ' :' → logprob: -8.499551773071289

Token 1803: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005394508480094373
    2. ' if' → logprob: -7.875539302825928
    3. '        
' → logprob: -9.750539779663086
    4. '           ' → logprob: -10.375539779663086
    5. '```' → logprob: -10.750539779663086
    6. 'if' → logprob: -11.750539779663086
    7. ',' → logprob: -12.000539779663086
    8. '        ' → logprob: -12.375539779663086
    9. '   ' → logprob: -12.375539779663086
    10. ' ' → logprob: -12.750539779663086

Token 1804: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01796753890812397
    2. ' if' → logprob: -4.517967700958252
    3. '```' → logprob: -5.392967700958252
    4. 'if' → logprob: -7.267967700958252
    5. ' i' → logprob: -7.642967700958252
    6. '           ' → logprob: -8.017967224121094
    7. '
' → logprob: -9.017967224121094
    8. '   ' → logprob: -9.267967224121094
    9. '        
' → logprob: -9.267967224121094
    10. '``' → logprob: -9.517967224121094

Token 1805: ' Here' (ID: 7306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006653088144958019
    2. 'if' → logprob: -5.631653308868408
    3. ' if' → logprob: -6.381653308868408
    4. '```' → logprob: -7.381653308868408
    5. '           ' → logprob: -8.13165283203125
    6. '   ' → logprob: -8.88165283203125
    7. 'i' → logprob: -9.63165283203125
    8. '
' → logprob: -9.88165283203125
    9. '``' → logprob: -10.63165283203125
    10. '               ' → logprob: -10.75665283203125

Token 1806: ' we' (ID: 581)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028304997831583023
    2. ' if' → logprob: -4.0283050537109375
    3. 'if' → logprob: -4.7783050537109375
    4. 'pos' → logprob: -8.278305053710938
    5. 'tokens' → logprob: -8.403305053710938
    6. '#' → logprob: -8.528305053710938
    7. 'token' → logprob: -8.653305053710938
    8. '   ' → logprob: -8.653305053710938
    9. '
' → logprob: -9.028305053710938
    10. '           ' → logprob: -9.278305053710938

Token 1807: ' parse' (ID: 8420)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7732915878295898
    2. '       ' → logprob: -1.3982915878295898
    3. 'def' → logprob: -1.7732915878295898
    4. ' def' → logprob: -2.27329158782959
    5. ' continue' → logprob: -5.77329158782959
    6. 'consume' → logprob: -5.89829158782959
    7. '
' → logprob: -6.14829158782959
    8. 'continue' → logprob: -6.27329158782959
    9. '	def' → logprob: -6.52329158782959
    10. ' parse' → logprob: -6.89829158782959

Token 1808: ' with' (ID: 483)
  Prédit: 'primary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'primary' → logprob: -0.9392016530036926
    2. 'tokens' → logprob: -1.3142015933990479
    3. ' primary' → logprob: -2.314201593399048
    4. 'if' → logprob: -2.814201593399048
    5. '
' → logprob: -3.189201593399048
    6. 'def' → logprob: -3.439201593399048
    7. '       ' → logprob: -3.689201593399048
    8. ' if' → logprob: -3.939201593399048
    9. '   ' → logprob: -4.189201831817627
    10. '#' → logprob: -4.564201831817627

Token 1809: ' left' (ID: 3561)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9893819093704224
    2. 'start' → logprob: -1.2393819093704224
    3. 'left' → logprob: -2.114381790161133
    4. 'self' → logprob: -2.489381790161133
    5. 'None' → logprob: -3.989381790161133
    6. 'primary' → logprob: -4.239381790161133
    7. 'current' → logprob: -4.239381790161133
    8. 'tokens' → logprob: -4.239381790161133
    9. 'pos' → logprob: -4.614381790161133
    10. '#' → logprob: -4.739381790161133

Token 1810: '-ass' (ID: 44229)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.323462963104248
    2. 'over' → logprob: -1.823462963104248
    3. '   ' → logprob: -2.073462963104248
    4. '_expr' → logprob: -2.198462963104248
    5. ':' → logprob: -2.573462963104248
    6. '_token' → logprob: -2.823462963104248
    7. '_assoc' → logprob: -2.948462963104248
    8. '_ass' → logprob: -3.448462963104248
    9. '=' → logprob: -4.198462963104248
    10. '_tokens' → logprob: -4.323462963104248

Token 1811: 'oci' (ID: 3212)
  Prédit: 'oci'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oci' → logprob: -0.1664927899837494
    2. 'oc' → logprob: -2.5414927005767822
    3. 'ociate' → logprob: -2.9164927005767822
    4. 'ert' → logprob: -4.666492938995361
    5. 'ign' → logprob: -5.166492938995361
    6. '   ' → logprob: -6.666492938995361
    7. '```' → logprob: -6.666492938995361
    8. 'ociated' → logprob: -6.916492938995361
    9. '       ' → logprob: -7.291492938995361
    10. '
' → logprob: -8.541492462158203

Token 1812: 'ative' (ID: 1799)
  Prédit: 'ative'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ative' → logprob: -0.0050819567404687405
    2. 'oci' → logprob: -5.880082130432129
    3. 'oc' → logprob: -6.380082130432129
    4. 'ativity' → logprob: -8.880082130432129
    5. '   ' → logprob: -9.005082130432129
    6. 'ociate' → logprob: -9.630082130432129
    7. 'ity' → logprob: -9.755082130432129
    8. 'ate' → logprob: -10.130082130432129
    9. 'itive' → logprob: -10.380082130432129
    10. 'ation' → logprob: -10.880082130432129

Token 1813: ' grouping' (ID: 97243)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.4253959655761719
    2. ' (' → logprob: -1.6753959655761719
    3. ' expression' → logprob: -2.550395965576172
    4. ')' → logprob: -2.675395965576172
    5. ' ' → logprob: -2.675395965576172
    6. '   ' → logprob: -3.050395965576172
    7. 'expression' → logprob: -3.425395965576172
    8. '```' → logprob: -3.425395965576172
    9. '()' → logprob: -4.175395965576172
    10. '_expr' → logprob: -4.175395965576172

Token 1814: ' by' (ID: 656)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06471274048089981
    2. '(self' → logprob: -3.9397127628326416
    3. '(' → logprob: -4.3147125244140625
    4. ':' → logprob: -5.0647125244140625
    5. '(
' → logprob: -5.3147125244140625
    6. ',' → logprob: -5.4397125244140625
    7. ':
' → logprob: -5.8147125244140625
    8. ' (' → logprob: -5.9397125244140625
    9. '```' → logprob: -6.3147125244140625
    10. '   ' → logprob: -6.4397125244140625

Token 1815: ' default' (ID: 2787)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5046008229255676
    2. 'def' → logprob: -1.7546007633209229
    3. 'cons' → logprob: -2.879600763320923
    4. 'default' → logprob: -3.504600763320923
    5. 'one' → logprob: -3.754600763320923
    6. 'par' → logprob: -3.754600763320923
    7. 'increment' → logprob: -4.379601001739502
    8. 'tokens' → logprob: -4.379601001739502
    9. 'adv' → logprob: -4.629601001739502
    10. 'token' → logprob: -5.004601001739502

Token 1816: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09747646749019623
    2. ':' → logprob: -2.7224764823913574
    3. ':
' → logprob: -4.347476482391357
    4. ',' → logprob: -4.722476482391357
    5. '   ' → logprob: -6.597476482391357
    6. '):
' → logprob: -7.347476482391357
    7. ')' → logprob: -7.472476482391357
    8. '):' → logprob: -7.722476482391357
    9. ' :' → logprob: -7.972476482391357
    10. ' (' → logprob: -8.0974760055542

Token 1817: 'to' (ID: 935)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -1.1956937313079834
    2. ')' → logprob: -1.4456937313079834
    3. '       ' → logprob: -1.6956937313079834
    4. 'tokens' → logprob: -2.3206937313079834
    5. ' tokens' → logprob: -2.6956937313079834
    6. '           ' → logprob: -3.3206937313079834
    7. '):' → logprob: -3.8206937313079834
    8. ' )' → logprob: -5.0706939697265625
    9. ',' → logprob: -5.0706939697265625
    10. ' ):
' → logprob: -5.3206939697265625

Token 1818: ' produce' (ID: 10635)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.3621445894241333
    2. 'allow' → logprob: -2.3621444702148438
    3. 'pass' → logprob: -2.3621444702148438
    4. 'consume' → logprob: -2.6121444702148438
    5. '   ' → logprob: -2.7371444702148438
    6. '):
' → logprob: -3.1121444702148438
    7. 'token' → logprob: -3.1121444702148438
    8. ')' → logprob: -3.2371444702148438
    9. 'def' → logprob: -3.6121444702148438
    10. '       ' → logprob: -3.6121444702148438

Token 1819: ' an' (ID: 448)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6428998112678528
    2. 'an' → logprob: -1.517899751663208
    3. 'Expression' → logprob: -2.517899751663208
    4. ')' → logprob: -2.767899751663208
    5. ' a' → logprob: -4.267899990081787
    6. ' an' → logprob: -4.392899990081787
    7. 'the' → logprob: -4.392899990081787
    8. 'tokens' → logprob: -4.517899990081787
    9. 'one' → logprob: -4.892899990081787
    10. 'single' → logprob: -5.392899990081787

Token 1820: ' AST' (ID: 41607)
  Prédit: 'Expression'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Expression' → logprob: -0.04201450198888779
    2. 'initial' → logprob: -3.6670145988464355
    3. 'expression' → logprob: -4.9170145988464355
    4. ' Expression' → logprob: -5.6670145988464355
    5. 'expr' → logprob: -6.2920145988464355
    6. 'inter' → logprob: -7.4170145988464355
    7. 'explicit' → logprob: -7.5420145988464355
    8. 'operator' → logprob: -8.292014122009277
    9. '`' → logprob: -9.167014122009277
    10. 'AST' → logprob: -9.167014122009277

Token 1821: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1196868419647217
    2. '):
' → logprob: -1.6196868419647217
    3. ' that' → logprob: -1.9946868419647217
    4. '):' → logprob: -2.1196868419647217
    5. ' with' → logprob: -2.9946868419647217
    6. ',' → logprob: -3.1196868419647217
    7. '       ' → logprob: -3.2446868419647217
    8. ':' → logprob: -4.494687080383301
    9. ' but' → logprob: -4.744687080383301
    10. '           ' → logprob: -5.119687080383301

Token 1822: ' but' (ID: 889)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05470160022377968
    2. ' tokens' → logprob: -4.054701805114746
    3. 'tokens' → logprob: -4.804701805114746
    4. ' pos' → logprob: -4.929701805114746
    5. '           ' → logprob: -5.429701805114746
    6. ' if' → logprob: -5.679701805114746
    7. 'pos' → logprob: -5.679701805114746
    8. ' while' → logprob: -6.429701805114746
    9. ' i' → logprob: -6.429701805114746
    10. '   ' → logprob: -6.929701805114746

Token 1823: ' we' (ID: 581)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13643044233322144
    2. ' we' → logprob: -3.011430501937866
    3. ' return' → logprob: -3.261430501937866
    4. ' then' → logprob: -4.636430263519287
    5. ' tokens' → logprob: -5.386430263519287
    6. ' the' → logprob: -6.011430263519287
    7. 'return' → logprob: -6.011430263519287
    8. '   ' → logprob: -6.136430263519287
    9. ' can' → logprob: -6.261430263519287
    10. '           ' → logprob: -6.261430263519287

Token 1824: ' reinterpret' (ID: 61515)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6295267343521118
    2. '   ' → logprob: -1.8795267343521118
    3. ' continue' → logprob: -2.0045266151428223
    4. ' can' → logprob: -3.2545266151428223
    5. 'continue' → logprob: -3.3795266151428223
    6. ' will' → logprob: -3.7545266151428223
    7. ' return' → logprob: -4.004526615142822
    8. ' must' → logprob: -4.504526615142822
    9. ' def' → logprob: -5.004526615142822
    10. 'return' → logprob: -5.129526615142822

Token 1825: ' to' (ID: 316)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.576821506023407
    2. ')' → logprob: -2.2018215656280518
    3. ' tokens' → logprob: -3.0768215656280518
    4. ' =' → logprob: -3.4518215656280518
    5. ' with' → logprob: -3.4518215656280518
    6. ' )' → logprob: -3.5768215656280518
    7. '_tokens' → logprob: -4.076821327209473
    8. ' (' → logprob: -4.201821327209473
    9. ' the' → logprob: -4.326821327209473
    10. 'tokens' → logprob: -4.451821327209473

Token 1826: ' evaluation' (ID: 21407)
  Prédit: 'support'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'support' → logprob: -0.6141462326049805
    2. 'return' → logprob: -1.9891462326049805
    3. ' support' → logprob: -2.2391462326049805
    4. 'allow' → logprob: -2.9891462326049805
    5. 'handle' → logprob: -3.1141462326049805
    6. 'parse' → logprob: -3.6141462326049805
    7. ')' → logprob: -4.1141462326049805
    8. '   ' → logprob: -4.2391462326049805
    9. ' return' → logprob: -4.7391462326049805
    10. ' handle' → logprob: -4.9891462326049805

Token 1827: ' all' (ID: 722)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9870644807815552
    2. '_' → logprob: -1.3620644807815552
    3. '   ' → logprob: -1.3620644807815552
    4. ')' → logprob: -3.1120643615722656
    5. ':' → logprob: -4.487064361572266
    6. '_tokens' → logprob: -4.737064361572266
    7. ' _' → logprob: -5.487064361572266
    8. ',' → logprob: -5.487064361572266
    9. '):
' → logprob: -5.862064361572266
    10. ' ' → logprob: -6.112064361572266

Token 1828: ' ways' (ID: 6984)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8945770263671875
    2. ')' → logprob: -1.7695770263671875
    3. '   ' → logprob: -2.6445770263671875
    4. '_tokens' → logprob: -2.6445770263671875
    5. '       ' → logprob: -3.0195770263671875
    6. '):' → logprob: -3.2695770263671875
    7. 'tokens' → logprob: -3.3945770263671875
    8. ':' → logprob: -3.5195770263671875
    9. ' tokens' → logprob: -4.1445770263671875
    10. ' ' → logprob: -4.3945770263671875

Token 1829: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0833456888794899
    2. ':' → logprob: -2.708345651626587
    3. ':
' → logprob: -4.833345890045166
    4. ',' → logprob: -6.958345890045166
    5. '):
' → logprob: -6.958345890045166
    6. '```' → logprob: -7.583345890045166
    7. '        
' → logprob: -7.583345890045166
    8. '(' → logprob: -7.708345890045166
    9. '           ' → logprob: -7.958345890045166
    10. '):' → logprob: -8.083345413208008

Token 1830: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001968649885384366
    2. ' if' → logprob: -9.75019645690918
    3. ':' → logprob: -10.62519645690918
    4. '   ' → logprob: -10.62519645690918
    5. '           ' → logprob: -10.75019645690918
    6. '```' → logprob: -10.87519645690918
    7. '        
' → logprob: -11.12519645690918
    8. 'if' → logprob: -11.37519645690918
    9. '`' → logprob: -13.00019645690918
    10. '
' → logprob: -13.00019645690918

Token 1831: ' def' (ID: 1056)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08985699713230133
    2. 'if' → logprob: -2.8398571014404297
    3. 'pos' → logprob: -4.33985710144043
    4. 'i' → logprob: -4.96485710144043
    5. ' if' → logprob: -5.33985710144043
    6. '   ' → logprob: -7.33985710144043
    7. 'left' → logprob: -7.33985710144043
    8. ' i' → logprob: -7.46485710144043
    9. 'expr' → logprob: -8.46485710144043
    10. '```' → logprob: -8.58985710144043

Token 1832: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.01497542392462492
    2. 'primary' → logprob: -5.639975547790527
    3. 'consume' → logprob: -5.764975547790527
    4. 'self' → logprob: -6.264975547790527
    5. '_primary' → logprob: -6.639975547790527
    6. 'next' → logprob: -6.764975547790527
    7. '_parse' → logprob: -6.764975547790527
    8. 'peek' → logprob: -7.389975547790527
    9. 'error' → logprob: -8.264975547790527
    10. 'expr' → logprob: -8.264975547790527

Token 1833: '_primary' (ID: 111799)
  Prédit: '_primary'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_primary' → logprob: -0.04339545965194702
    2. '_tokens' → logprob: -3.668395519256592
    3. 'primary' → logprob: -4.168395519256592
    4. 'tokens' → logprob: -7.293395519256592
    5. '_number' → logprob: -8.293395042419434
    6. '_token' → logprob: -8.418395042419434
    7. '_expression' → logprob: -9.168395042419434
    8. '_expr' → logprob: -10.168395042419434
    9. 'expr' → logprob: -10.418395042419434
    10. 'def' → logprob: -10.793395042419434

Token 1834: '(pos' (ID: 24566)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.03028540313243866
    2. '(' → logprob: -3.530285358428955
    3. '():' → logprob: -8.655285835266113
    4. '(s' → logprob: -8.780285835266113
    5. '(
' → logprob: -9.655285835266113
    6. '()' → logprob: -10.530285835266113
    7. '(tokens' → logprob: -10.530285835266113
    8. '(token' → logprob: -11.030285835266113
    9. 'self' → logprob: -11.030285835266113
    10. ' (' → logprob: -11.780285835266113

Token 1835: ':' (ID: 25)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.03889230638742447
    2. ')' → logprob: -3.7888922691345215
    3. '):
' → logprob: -4.4138922691345215
    4. '):' → logprob: -6.4138922691345215
    5. ':' → logprob: -6.9138922691345215
    6. '=' → logprob: -8.78889274597168
    7. '       ' → logprob: -8.78889274597168
    8. 'self' → logprob: -9.66389274597168
    9. ' =' → logprob: -9.78889274597168
    10. '   ' → logprob: -9.91389274597168

Token 1836: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0004366294015198946
    2. 'pos' → logprob: -8.500436782836914
    3. 'Callable' → logprob: -9.375436782836914
    4. 'self' → logprob: -9.875436782836914
    5. '[int' → logprob: -11.375436782836914
    6. ')' → logprob: -11.375436782836914
    7. '...' → logprob: -11.500436782836914
    8. ' int' → logprob: -11.500436782836914
    9. '   ' → logprob: -11.625436782836914
    10. '(int' → logprob: -11.750436782836914

Token 1837: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2071271389722824
    2. '(self' → logprob: -2.082127094268799
    3. '       ' → logprob: -2.957127094268799
    4. '):
' → logprob: -4.832127094268799
    5. '           ' → logprob: -7.207127094268799
    6. '   ' → logprob: -7.457127094268799
    7. ':' → logprob: -8.457127571105957
    8. '->' → logprob: -8.457127571105957
    9. '):' → logprob: -8.582127571105957
    10. ')->' → logprob: -8.582127571105957

Token 1838: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.11579632014036179
    2. '       ' → logprob: -2.2407963275909424
    3. '           ' → logprob: -7.115796089172363
    4. ':' → logprob: -7.490796089172363
    5. '   ' → logprob: -7.615796089172363
    6. '(' → logprob: -7.865796089172363
    7. '->' → logprob: -8.115796089172363
    8. ':
' → logprob: -9.240796089172363
    9. ' ->' → logprob: -9.615796089172363
    10. 'self' → logprob: -9.740796089172363

Token 1839: ' Tuple' (ID: 50841)
  Prédit: 'Tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -0.03021184168756008
    2. 'int' → logprob: -3.530211925506592
    3. ' Tuple' → logprob: -8.780211448669434
    4. '(int' → logprob: -8.780211448669434
    5. 'Expression' → logprob: -9.780211448669434
    6. '[int' → logprob: -10.280211448669434
    7. 'Union' → logprob: -10.655211448669434
    8. 'tuple' → logprob: -11.655211448669434
    9. '(T' → logprob: -11.905211448669434
    10. '[' → logprob: -12.280211448669434

Token 1840: '[' (ID: 58)
  Prédit: '(Expression'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Expression' → logprob: -0.967022180557251
    2. 'Expression' → logprob: -1.342022180557251
    3. '(' → logprob: -2.092022180557251
    4. '[' → logprob: -2.217022180557251
    5. 'Union' → logprob: -2.717022180557251
    6. 'int' → logprob: -3.592022180557251
    7. '[int' → logprob: -4.342021942138672
    8. '(int' → logprob: -4.467021942138672
    9. 'Optional' → logprob: -5.217021942138672
    10. '(Optional' → logprob: -6.842021942138672

Token 1841: 'Expression' (ID: 12633)
  Prédit: 'Expression'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Expression' → logprob: -0.0005736440070904791
    2. 'Union' → logprob: -8.000574111938477
    3. 'int' → logprob: -8.625574111938477
    4. '(Expression' → logprob: -10.500574111938477
    5. 'Optional' → logprob: -11.000574111938477
    6. '[' → logprob: -12.250574111938477
    7. 'Tuple' → logprob: -12.250574111938477
    8. '(' → logprob: -13.500574111938477
    9. 'Number' → logprob: -13.875574111938477
    10. ' Expression' → logprob: -14.000574111938477

Token 1842: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001347615267150104
    2. ',int' → logprob: -6.626347541809082
    3. '[int' → logprob: -11.501347541809082
    4. ',List' → logprob: -12.251347541809082
    5. '(int' → logprob: -12.501347541809082
    6. 'int' → logprob: -13.626347541809082
    7. '       ' → logprob: -14.376347541809082
    8. ' ,' → logprob: -14.376347541809082
    9. '           ' → logprob: -15.751347541809082
    10. 'tokens' → logprob: -15.876347541809082

Token 1843: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -4.842555426876061e-06
    2. 'Optional' → logprob: -12.500004768371582
    3. ' int' → logprob: -14.375004768371582
    4. '[int' → logprob: -14.625004768371582
    5. '   ' → logprob: -17.3750057220459
    6. ']int' → logprob: -17.7500057220459
    7. '	int' → logprob: -17.8750057220459
    8. '
' → logprob: -18.1250057220459
    9. '    
' → logprob: -18.3750057220459
    10. '(int' → logprob: -18.3750057220459

Token 1844: ']:
' (ID: 22152)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.525197446346283
    2. ':
' → logprob: -1.6501975059509277
    3. ',' → logprob: -1.7751975059509277
    4. ':' → logprob: -3.7751975059509277
    5. '           ' → logprob: -4.650197505950928
    6. '):
' → logprob: -4.900197505950928
    7. '(self' → logprob: -5.900197505950928
    8. '(' → logprob: -6.650197505950928
    9. ']:
' → logprob: -6.650197505950928
    10. '               ' → logprob: -7.525197505950928

Token 1845: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13222676515579224
    2. '           ' → logprob: -2.3822267055511475
    3. '               ' → logprob: -3.7572267055511475
    4. '                       ' → logprob: -5.507226943969727
    5. '```' → logprob: -6.632226943969727
    6. '   ' → logprob: -7.382226943969727
    7. '                   ' → logprob: -7.882226943969727
    8. '(' → logprob: -8.257226943969727
    9. 'if' → logprob: -8.507226943969727
    10. '#' → logprob: -8.507226943969727

Token 1846: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2172587513923645
    2. 'c' → logprob: -1.7172586917877197
    3. '           ' → logprob: -4.967258930206299
    4. 'token' → logprob: -5.467258930206299
    5. '               ' → logprob: -5.967258930206299
    6. ' if' → logprob: -7.342258930206299
    7. 'ch' → logprob: -7.717258930206299
    8. 'char' → logprob: -8.09225845336914
    9. 'tok' → logprob: -8.34225845336914
    10. ' c' → logprob: -9.96725845336914

Token 1847: ' pos' (ID: 1253)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.03238645941019058
    2. 'pos' → logprob: -3.532386541366577
    3. 'self' → logprob: -6.157386302947998
    4. '           ' → logprob: -8.282386779785156
    5. ' tokens' → logprob: -8.782386779785156
    6. '   ' → logprob: -10.032386779785156
    7. 'position' → logprob: -11.407386779785156
    8. '       ' → logprob: -11.532386779785156
    9. '(tokens' → logprob: -11.657386779785156
    10. 'token' → logprob: -12.282386779785156

Token 1848: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.8554954528808594
    2. '==' → logprob: -1.7304954528808594
    3. ' >=' → logprob: -1.8554954528808594
    4. '<' → logprob: -2.6054954528808594
    5. ' ==' → logprob: -2.7304954528808594
    6. ' <' → logprob: -2.7304954528808594
    7. '<len' → logprob: -3.7304954528808594
    8. '>' → logprob: -5.980495452880859
    9. '+' → logprob: -5.980495452880859
    10. '<n' → logprob: -6.230495452880859

Token 1849: ' end' (ID: 1268)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.0683535037969705e-05
    2. ' len' → logprob: -12.25001049041748
    3. '(len' → logprob: -12.75001049041748
    4. '           ' → logprob: -12.87501049041748
    5. ',len' → logprob: -17.000011444091797
    6. '[len' → logprob: -17.000011444091797
    7. '	len' → logprob: -17.000011444091797
    8. '=len' → logprob: -17.000011444091797
    9. '<len' → logprob: -17.250011444091797
    10. 'leni' → logprob: -17.375011444091797

Token 1850: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.08757329732179642
    2. '               ' → logprob: -3.212573289871216
    3. ':' → logprob: -3.462573289871216
    4. ' and' → logprob: -4.837573528289795
    5. '           ' → logprob: -5.837573528289795
    6. '():
' → logprob: -7.837573528289795
    7. '):
' → logprob: -7.962573528289795
    8. ',' → logprob: -8.587573051452637
    9. ' or' → logprob: -8.712573051452637
    10. 'and' → logprob: -9.337573051452637

Token 1851: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003755067242309451
    2. '           ' → logprob: -7.25375509262085
    3. ' (' → logprob: -7.50375509262085
    4. ':
' → logprob: -7.75375509262085
    5. '(' → logprob: -7.87875509262085
    6. 'return' → logprob: -8.503754615783691
    7. '):
' → logprob: -8.753754615783691
    8. ',' → logprob: -9.003754615783691
    9. ':' → logprob: -9.128754615783691
    10. ' return' → logprob: -9.253754615783691

Token 1852: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.04935663938522339
    2. '           ' → logprob: -3.174356698989868
    3. ' raise' → logprob: -5.549356460571289
    4. 'None' → logprob: -7.299356460571289
    5. '(None' → logprob: -7.549356460571289
    6. 'pos' → logprob: -7.924356460571289
    7. '               ' → logprob: -8.174356460571289
    8. '(' → logprob: -8.924356460571289
    9. '            ' → logprob: -8.924356460571289
    10. '                   ' → logprob: -9.174356460571289

Token 1853: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -9.639096970204264e-05
    2. 'Index' → logprob: -9.250096321105957
    3. ' Value' → logprob: -16.000097274780273
    4. '(Value' → logprob: -16.250097274780273
    5. 'value' → logprob: -16.750097274780273
    6. 'EOF' → logprob: -17.000097274780273
    7. '_value' → logprob: -18.250097274780273
    8. 'Position' → logprob: -18.625097274780273
    9. '_Value' → logprob: -19.125097274780273
    10. '	Value' → logprob: -19.125097274780273

Token 1854: 'Error' (ID: 2255)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.04738137125968933
    2. 'Error' → logprob: -3.5473814010620117
    3. 'Index' → logprob: -4.047381401062012
    4. '(Value' → logprob: -12.922381401062012
    5. 'Unexpected' → logprob: -13.672381401062012
    6. 'EOF' → logprob: -14.172381401062012
    7. '.Value' → logprob: -14.172381401062012
    8. '_value' → logprob: -14.422381401062012
    9. '```' → logprob: -14.422381401062012
    10. 'Position' → logprob: -14.797381401062012

Token 1855: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.11457425355911255
    2. '(' → logprob: -2.7395741939544678
    3. '("("' → logprob: -3.2395741939544678
    4. '(
' → logprob: -6.239574432373047
    5. '('' → logprob: -7.239574432373047
    6. '(f' → logprob: -7.864574432373047
    7. '(pos' → logprob: -7.989574432373047
    8. '           ' → logprob: -7.989574432373047
    9. '(",' → logprob: -8.114574432373047
    10. '"' → logprob: -8.489574432373047

Token 1856: 'Unexpected' (ID: 59338)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.07866380363702774
    2. '"' → logprob: -4.2036638259887695
    3. 'self' → logprob: -4.2036638259887695
    4. '("' → logprob: -4.7036638259887695
    5. 'Unexpected' → logprob: -4.9536638259887695
    6. '           ' → logprob: -5.7036638259887695
    7. '(pos' → logprob: -5.7036638259887695
    8. ' pos' → logprob: -5.9536638259887695
    9. '(self' → logprob: -6.2036638259887695
    10. '")' → logprob: -6.3286638259887695

Token 1857: ' end' (ID: 1268)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.013511823490262032
    2. 'end' → logprob: -4.388511657714844
    3. 'EOF' → logprob: -7.763511657714844
    4. 'position' → logprob: -7.888511657714844
    5. ')' → logprob: -9.763511657714844
    6. 'index' → logprob: -10.138511657714844
    7. 'int' → logprob: -11.388511657714844
    8. 'start' → logprob: -11.513511657714844
    9. ' pos' → logprob: -11.638511657714844
    10. '(pos' → logprob: -12.013511657714844

Token 1858: '")
' (ID: 1896)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.5481340289115906
    2. '_of' → logprob: -1.2981340885162354
    3. ' of' → logprob: -2.5481340885162354
    4. '           ' → logprob: -2.7981340885162354
    5. ')' → logprob: -5.923133850097656
    6. '```' → logprob: -5.923133850097656
    7. '               ' → logprob: -6.298133850097656
    8. '       ' → logprob: -7.173133850097656
    9. 'Of' → logprob: -7.798133850097656
    10. '
' → logprob: -8.548133850097656

Token 1859: '           ' (ID: 352)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04538801312446594
    2. '           ' → logprob: -3.1703879833221436
    3. '  
' → logprob: -8.170388221740723
    4. '    
' → logprob: -8.170388221740723
    5. '
' → logprob: -8.420388221740723
    6. '                
' → logprob: -8.545388221740723
    7. '            
' → logprob: -8.545388221740723
    8. '```' → logprob: -8.795388221740723
    9. ' 
' → logprob: -8.920388221740723
    10. '   ' → logprob: -9.170388221740723

Token 1860: ' tok' (ID: 13372)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00847037322819233
    2. 'if' → logprob: -5.38347053527832
    3. '           ' → logprob: -6.25847053527832
    4. 'ch' → logprob: -7.00847053527832
    5. 'token' → logprob: -7.38347053527832
    6. 'tok' (adapté à ' tok') → logprob: -7.88347053527832
    7. 't' → logprob: -11.75847053527832
    8. '               ' → logprob: -12.25847053527832
    9. '```' → logprob: -12.50847053527832
    10. ' c' → logprob: -12.63347053527832

Token 1861: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16031236946582794
    2. ' =' → logprob: -1.9103124141693115
    3. '           ' → logprob: -9.66031265258789
    4. '=
' → logprob: -11.66031265258789
    5. '		' → logprob: -12.53531265258789
    6. '       ' → logprob: -12.91031265258789
    7. '               ' → logprob: -13.28531265258789
    8. '        ' → logprob: -13.41031265258789
    9. '=self' → logprob: -13.78531265258789
    10. '	' → logprob: -14.03531265258789

Token 1862: ' tokens' (ID: 20290)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.0004234051739331335
    2. ' tokens' → logprob: -7.875423431396484
    3. '(tokens' → logprob: -11.000423431396484
    4. '   ' → logprob: -11.625423431396484
    5. '       ' → logprob: -11.625423431396484
    6. '           ' → logprob: -12.125423431396484
    7. 'self' → logprob: -13.875423431396484
    8. 'token' → logprob: -14.375423431396484
    9. 't' → logprob: -14.500423431396484
    10. '.tokens' → logprob: -15.375423431396484

Token 1863: '[pos' (ID: 48272)
  Prédit: '[pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -0.012342237867414951
    2. 'pos' → logprob: -4.63734245300293
    3. ' =' → logprob: -6.88734245300293
    4. '           ' → logprob: -7.51234245300293
    5. '=' → logprob: -7.76234245300293
    6. 'if' → logprob: -8.88734245300293
    7. 'tokens' → logprob: -9.63734245300293
    8. ',pos' → logprob: -9.76234245300293
    9. '       ' → logprob: -9.88734245300293
    10. '   ' → logprob: -9.88734245300293

Token 1864: ']
' (ID: 1592)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.06264723092317581
    2. '           ' → logprob: -2.9376473426818848
    3. ']
' → logprob: -4.937647342681885
    4. '       ' → logprob: -8.187646865844727
    5. '])
' → logprob: -8.812646865844727
    6. ')' → logprob: -9.187646865844727
    7. ']' → logprob: -11.937646865844727
    8. '')
' → logprob: -12.187646865844727
    9. ')
' → logprob: -12.687646865844727
    10. '   ' → logprob: -12.687646865844727

Token 1865: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006093903793953359
    2. 'if' → logprob: -7.750609397888184
    3. ' if' → logprob: -8.875609397888184
    4. '       ' → logprob: -10.625609397888184
    5. '               ' → logprob: -12.125609397888184
    6. '   ' → logprob: -13.250609397888184
    7. '...' → logprob: -13.500609397888184
    8. '{
' → logprob: -13.750609397888184
    9. '	       ' → logprob: -14.125609397888184
    10. '<|end|>' → logprob: -14.500609397888184

Token 1866: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.4751603305339813
    2. '           ' → logprob: -0.9751603603363037
    3. ' if' → logprob: -6.850160121917725
    4. 'If' → logprob: -11.725160598754883
    5. '       ' → logprob: -11.975160598754883
    6. 'pos' → logprob: -12.975160598754883
    7. '
' → logprob: -13.100160598754883
    8. '		' → logprob: -13.975160598754883
    9. '               ' → logprob: -14.100160598754883
    10. '	if' → logprob: -14.350160598754883

Token 1867: ' isinstance' (ID: 25889)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.0009249189170077443
    2. ' isinstance' → logprob: -7.000925064086914
    3. '           ' → logprob: -12.125925064086914
    4. '   ' → logprob: -13.125925064086914
    5. '(is' → logprob: -13.125925064086914
    6. '    ' → logprob: -13.500925064086914
    7. 'tok' → logprob: -13.750925064086914
    8. '       ' → logprob: -14.125925064086914
    9. '  ' → logprob: -15.250925064086914
    10. '        ' → logprob: -15.750925064086914

Token 1868: '(tok' (ID: 182089)
  Prédit: 'tok'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tok' → logprob: -0.08102584630250931
    2. '(tok' → logprob: -2.5810258388519287
    3. 'int' → logprob: -6.331026077270508
    4. 'Expression' → logprob: -9.206026077270508
    5. '(int' → logprob: -9.456026077270508
    6. '(tokens' → logprob: -9.831026077270508
    7. 'tokens' → logprob: -9.956026077270508
    8. '(Expression' → logprob: -10.456026077270508
    9. 'Number' → logprob: -10.831026077270508
    10. '(' → logprob: -11.706026077270508

Token 1869: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010735384421423078
    2. ',int' → logprob: -7.626073360443115
    3. ' ,' → logprob: -7.876073360443115
    4. ',
' → logprob: -9.876073837280273
    5. '(tok' → logprob: -10.126073837280273
    6. '(int' → logprob: -10.251073837280273
    7. 'int' → logprob: -10.251073837280273
    8. '(' → logprob: -10.876073837280273
    9. '           ' → logprob: -11.876073837280273
    10. '   ' → logprob: -12.626073837280273

Token 1870: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -2.2200749754119897e-06
    2. ' int' → logprob: -13.375001907348633
    3. 'str' → logprob: -14.875001907348633
    4. '(int' → logprob: -16.250001907348633
    5. ' ' → logprob: -16.875001907348633
    6. '   ' → logprob: -17.125001907348633
    7. '[int' → logprob: -17.625001907348633
    8. ')' → logprob: -17.750001907348633
    9. '
' → logprob: -17.875001907348633
    10. '```' → logprob: -18.625001907348633

Token 1871: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0038938994985073805
    2. '):' → logprob: -5.878893852233887
    3. '           ' → logprob: -7.503893852233887
    4. '               ' → logprob: -8.003893852233887
    5. ')' → logprob: -9.128893852233887
    6. ':
' → logprob: -9.753893852233887
    7. ':' → logprob: -11.378893852233887
    8. '       ' → logprob: -12.003893852233887
    9. '):
' → logprob: -12.253893852233887
    10. '                   ' → logprob: -12.253893852233887

Token 1872: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002865854650735855
    2. ' return' → logprob: -6.752865791320801
    3. 'return' → logprob: -6.877865791320801
    4. ':
' → logprob: -8.0028657913208
    5. ':' → logprob: -9.5028657913208
    6. ' (' → logprob: -9.6278657913208
    7. '                               ' → logprob: -10.5028657913208
    8. '                   ' → logprob: -10.8778657913208
    9. '           ' → logprob: -11.0028657913208
    10. ')' → logprob: -11.0028657913208

Token 1873: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.012714242562651634
    2. ' return' → logprob: -4.762714385986328
    3. '               ' → logprob: -5.512714385986328
    4. '                   ' → logprob: -10.137714385986328
    5. '	return' → logprob: -12.137714385986328
    6. '           ' → logprob: -12.262714385986328
    7. '   ' → logprob: -12.762714385986328
    8. '{return' → logprob: -13.637714385986328
    9. ' ' → logprob: -14.262714385986328
    10. 'Return' → logprob: -15.012714385986328

Token 1874: ' Number' (ID: 9184)
  Prédit: 'Number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Number' → logprob: -0.3133828341960907
    2. '(Number' → logprob: -1.313382863998413
    3. ' Number' → logprob: -9.063383102416992
    4. ' (' → logprob: -13.313383102416992
    5. '(' → logprob: -13.438383102416992
    6. '_Number' → logprob: -13.938383102416992
    7. '(N' → logprob: -14.563383102416992
    8. '_number' → logprob: -15.563383102416992
    9. '   ' → logprob: -15.688383102416992
    10. '(number' → logprob: -16.188383102416992

Token 1875: '(tok' (ID: 182089)
  Prédit: '(tok'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tok' → logprob: -0.001624952768906951
    2. '(tokens' → logprob: -6.501625061035156
    3. 'tok' → logprob: -9.126625061035156
    4. '(' → logprob: -11.501625061035156
    5. 'tokens' → logprob: -13.751625061035156
    6. '(token' → logprob: -13.751625061035156
    7. ',' → logprob: -15.251625061035156
    8. ' tok' → logprob: -15.376625061035156
    9. 'Tok' → logprob: -15.376625061035156
    10. '(
' → logprob: -15.501625061035156

Token 1876: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.13388703338569e-06
    2. ',pos' → logprob: -12.500009536743164
    3. '),' → logprob: -12.875009536743164
    4. '           ' → logprob: -13.125009536743164
    5. ' ,' → logprob: -14.875009536743164
    6. '               ' → logprob: -15.250009536743164
    7. '       ' → logprob: -16.125009536743164
    8. '   ' → logprob: -16.875009536743164
    9. ',),' → logprob: -17.250009536743164
    10. ',p' → logprob: -18.250009536743164

Token 1877: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -6.2729995988775045e-06
    2. ' pos' → logprob: -12.000006675720215
    3. '(pos' → logprob: -17.5000057220459
    4. '	pos' → logprob: -19.1250057220459
    5. '_pos' → logprob: -20.8750057220459
    6. '[pos' → logprob: -22.1250057220459
    7. 'position' → logprob: -22.2500057220459
    8. '           ' → logprob: -22.5000057220459
    9. '   ' → logprob: -23.0000057220459
    10. 'p' → logprob: -23.0000057220459

Token 1878: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.038046542555093765
    2. ' +' → logprob: -3.2880465984344482
    3. '+
' → logprob: -12.288046836853027
    4. ' +
' → logprob: -15.163046836853027
    5. '＋' → logprob: -16.41304588317871
    6. '+[' → logprob: -17.03804588317871
    7. '++' → logprob: -17.28804588317871
    8. '()+' → logprob: -17.28804588317871
    9. '+\' → logprob: -17.41304588317871
    10. '+++' → logprob: -17.53804588317871

Token 1879: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.625
    3. '```' → logprob: -18.125
    4. '   ' → logprob: -21.625
    5. '``' → logprob: -21.625
    6. '2' → logprob: -21.75
    7. '`' → logprob: -22.125
    8. '۱' → logprob: -22.125
    9. '１' → logprob: -22.625
    10. '(' → logprob: -22.8125

Token 1880: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.25
    3. '```' → logprob: -18.375
    4. '
' → logprob: -21.5
    5. '``' → logprob: -22.125
    6. '   ' → logprob: -22.125
    7. '۱' → logprob: -22.375
    8. '１' → logprob: -22.625
    9. '2' → logprob: -22.8125
    10. '(' → logprob: -23.0

Token 1881: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0017306297086179256
    2. '<|end|>' → logprob: -7.001730442047119
    3. '       ' → logprob: -8.251730918884277
    4. '
' → logprob: -8.501730918884277
    5. 'elif' → logprob: -8.501730918884277
    6. '          ' → logprob: -9.626730918884277
    7. '		' → logprob: -11.376730918884277
    8. '```' → logprob: -11.501730918884277
    9. 'import' → logprob: -11.626730918884277
    10. 'else' → logprob: -11.876730918884277

Token 1882: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0020997028332203627
    2. '       ' → logprob: -7.127099514007568
    3. 'elif' → logprob: -7.127099514007568
    4. '```' → logprob: -8.377099990844727
    5. 'if' → logprob: -8.627099990844727
    6. '
' → logprob: -9.502099990844727
    7. '		' → logprob: -13.627099990844727
    8. '          ' → logprob: -13.877099990844727
    9. '            
' → logprob: -14.002099990844727
    10. '               ' → logprob: -14.002099990844727

Token 1883: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.21701426804065704
    2. '           ' → logprob: -1.9670143127441406
    3. 'if' → logprob: -2.9670143127441406
    4. '       ' → logprob: -5.592014312744141
    5. '
' → logprob: -11.21701431274414
    6. ' elif' → logprob: -12.21701431274414
    7. '```' → logprob: -13.59201431274414
    8. ' if' → logprob: -13.59201431274414
    9. '		' → logprob: -14.84201431274414
    10. 'else' → logprob: -14.96701431274414

Token 1884: ' tok' (ID: 13372)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.5246299505233765
    2. 'tok' → logprob: -0.8996299505233765
    3. ' tokens' → logprob: -7.024630069732666
    4. ' tok' → logprob: -8.149629592895508
    5. '   ' → logprob: -10.024629592895508
    6. 't' → logprob: -10.149629592895508
    7. '    ' → logprob: -10.524629592895508
    8. ' ' → logprob: -10.524629592895508
    9. 'to' → logprob: -10.524629592895508
    10. '           ' → logprob: -10.649629592895508

Token 1885: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.40735942125320435
    2. ' ==' → logprob: -1.1573593616485596
    3. '=='' → logprob: -3.9073593616485596
    4. '==
' → logprob: -9.65735912322998
    5. '=' → logprob: -10.28235912322998
    6. '[' → logprob: -10.53235912322998
    7. '=="' → logprob: -10.65735912322998
    8. ' =='' → logprob: -11.65735912322998
    9. '()==' → logprob: -11.90735912322998
    10. '(' → logprob: -12.15735912322998

Token 1886: ' '('' (ID: 87284)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0002383441897109151
    2. '(' → logprob: -9.500238418579102
    3. ''(' → logprob: -9.500238418579102
    4. '('' → logprob: -10.250238418579102
    5. '"' → logprob: -10.375238418579102
    6. ' '('' → logprob: -10.750238418579102
    7. '("("' → logprob: -14.750238418579102
    8. '(
' → logprob: -15.750238418579102
    9. '`' → logprob: -16.8752384185791
    10. '')' → logprob: -17.3752384185791

Token 1887: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.1680053472518921
    2. '               ' → logprob: -1.918005347251892
    3. ':' → logprob: -5.543005466461182
    4. '):
' → logprob: -6.168005466461182
    5. '           ' → logprob: -6.793005466461182
    6. ')' → logprob: -7.918005466461182
    7. '(' → logprob: -9.793004989624023
    8. ',' → logprob: -10.418004989624023
    9. '):' → logprob: -10.668004989624023
    10. '():
' → logprob: -11.168004989624023

Token 1888: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00025192240718752146
    2. 'return' → logprob: -9.250251770019531
    3. 'pos' → logprob: -9.500251770019531
    4. '           ' → logprob: -10.250251770019531
    5. '                   ' → logprob: -11.125251770019531
    6. '   ' → logprob: -11.375251770019531
    7. ' return' → logprob: -12.000251770019531
    8. ' pos' → logprob: -13.250251770019531
    9. '       ' → logprob: -13.375251770019531
    10. '                       ' → logprob: -13.500251770019531

Token 1889: ' #' (ID: 1069)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.018278943374753
    2. '               ' → logprob: -4.518279075622559
    3. 'inner' → logprob: -5.768279075622559
    4. ' expr' → logprob: -5.893279075622559
    5. 'sub' → logprob: -7.768279075622559
    6. '           ' → logprob: -7.893279075622559
    7. ' inner' → logprob: -8.143279075622559
    8. 'exp' → logprob: -9.768279075622559
    9. '   ' → logprob: -10.268279075622559
    10. 'e' → logprob: -10.643279075622559

Token 1890: ' parse' (ID: 8420)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.026430921629071236
    2. 'inner' → logprob: -4.026431083679199
    3. ' expr' → logprob: -5.526431083679199
    4. ' inner' → logprob: -6.526431083679199
    5. '               ' → logprob: -6.651431083679199
    6. '           ' → logprob: -6.901431083679199
    7. 'sub' → logprob: -8.2764310836792
    8. '   ' → logprob: -10.0264310836792
    9. 'parsed' → logprob: -10.5264310836792
    10. '       ' → logprob: -10.6514310836792

Token 1891: ' inside' (ID: 6772)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.05002281442284584
    2. '_expression' → logprob: -3.675022840499878
    3. 'expression' → logprob: -4.550022602081299
    4. 'inner' → logprob: -5.175022602081299
    5. '_expr' → logprob: -5.675022602081299
    6. '_inner' → logprob: -7.300022602081299
    7. 'def' → logprob: -7.425022602081299
    8. 'sub' → logprob: -7.800022602081299
    9. ',' → logprob: -8.050023078918457
    10. '   ' → logprob: -8.175023078918457

Token 1892: ' par' (ID: 686)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5265476107597351
    2. 'pos' → logprob: -1.5265476703643799
    3. ',' → logprob: -2.65154767036438
    4. 'expr' → logprob: -3.15154767036438
    5. '           ' → logprob: -3.65154767036438
    6. 'tokens' → logprob: -4.026547431945801
    7. 'return' → logprob: -4.526547431945801
    8. '(pos' → logprob: -5.776547431945801
    9. ' pos' → logprob: -6.026547431945801
    10. '(tokens' → logprob: -6.151547431945801

Token 1893: 'ens' (ID: 696)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.30578309297561646
    2. 'ens' → logprob: -1.8057830333709717
    3. 'ent' → logprob: -3.0557830333709717
    4. 'pos' → logprob: -3.6807830333709717
    5. 'tokens' → logprob: -4.305783271789551
    6. 'expr' → logprob: -5.555783271789551
    7. 'ser' → logprob: -6.055783271789551
    8. ')' → logprob: -6.555783271789551
    9. 't' → logprob: -7.305783271789551
    10. 'end' → logprob: -7.430783271789551

Token 1894: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0140224639326334
    2. 'expr' → logprob: -5.139022350311279
    3. 'return' → logprob: -5.514022350311279
    4. ',' → logprob: -6.764022350311279
    5. 'pos' → logprob: -6.889022350311279
    6. '                   ' → logprob: -7.014022350311279
    7. ' return' → logprob: -9.014022827148438
    8. 'new' → logprob: -9.014022827148438
    9. 'inner' → logprob: -9.264022827148438
    10. 'next' → logprob: -9.389022827148438

Token 1895: '               ' (ID: 506)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.38863667845726013
    2. '               ' → logprob: -1.5136367082595825
    3. 'return' → logprob: -2.388636589050293
    4. ' return' → logprob: -5.388636589050293
    5. 'pos' → logprob: -6.513636589050293
    6. '                       ' → logprob: -6.888636589050293
    7. ',' → logprob: -6.888636589050293
    8. '(pos' → logprob: -7.638636589050293
    9. '(' → logprob: -8.263636589050293
    10. '```' → logprob: -8.638636589050293

Token 1896: ' matching' (ID: 20238)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.02906407229602337
    2. 'inner' → logprob: -3.654064178466797
    3. '               ' → logprob: -6.279064178466797
    4. ' expr' → logprob: -8.029064178466797
    5. ' inner' → logprob: -8.904064178466797
    6. '           ' → logprob: -8.904064178466797
    7. 'sub' → logprob: -9.029064178466797
    8. 'exp' → logprob: -10.154064178466797
    9. '                   ' → logprob: -10.779064178466797
    10. '   ' → logprob: -10.779064178466797

Token 1897: ' =' (ID: 314)
  Prédit: '_pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.28380462527275085
    2. '_par' → logprob: -1.9088046550750732
    3. 'paren' → logprob: -3.1588046550750732
    4. '_index' → logprob: -3.7838046550750732
    5. 'pos' → logprob: -4.033804416656494
    6. ' =' → logprob: -4.533804416656494
    7. 'par' → logprob: -6.783804416656494
    8. '=' → logprob: -6.908804416656494
    9. '_idx' → logprob: -7.033804416656494
    10. '_token' → logprob: -7.408804416656494

Token 1898: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.000192812061868608
    2. ' self' → logprob: -8.750192642211914
    3. '(self' → logprob: -11.250192642211914
    4. '[self' → logprob: -11.750192642211914
    5. 'tokens' → logprob: -12.125192642211914
    6. 'next' → logprob: -12.500192642211914
    7. 'pos' → logprob: -14.000192642211914
    8. '   ' → logprob: -14.375192642211914
    9. '
' → logprob: -14.500192642211914
    10. ')' → logprob: -15.125192642211914

Token 1899: '.match' (ID: 21348)
  Prédit: 'matching'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matching' → logprob: -0.00023441045777872205
    2. 'match' → logprob: -9.000234603881836
    3. '.match' → logprob: -9.500234603881836
    4. ' matching' → logprob: -10.500234603881836
    5. 'self' → logprob: -12.250234603881836
    6. '
' → logprob: -13.500234603881836
    7. '_matching' → logprob: -14.000234603881836
    8. '   ' → logprob: -14.875234603881836
    9. '```' → logprob: -15.875234603881836
    10. '匹' → logprob: -16.000234603881836

Token 1900: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: 0.0
    2. ')' → logprob: -17.625
    3. '   ' → logprob: -18.375
    4. 'in' → logprob: -18.75
    5. 'hing' → logprob: -19.125
    6. 'i' → logprob: -19.25
    7. '
' → logprob: -19.75
    8. '#' → logprob: -19.75
    9. 'ING' → logprob: -19.75
    10. 'ingin' → logprob: -19.875

Token 1901: '_par' (ID: 31329)
  Prédit: '_par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_par' → logprob: -0.003467855742201209
    2. 'paren' → logprob: -6.503468036651611
    3. '(tokens' → logprob: -6.753468036651611
    4. 'par' → logprob: -7.753468036651611
    5. '_tokens' → logprob: -8.878467559814453
    6. 'tokens' → logprob: -9.253467559814453
    7. '_parent' → logprob: -9.628467559814453
    8. '(paren' → logprob: -10.253467559814453
    9. '```' → logprob: -12.628467559814453
    10. 'Paren' → logprob: -12.753467559814453

Token 1902: 'en' (ID: 262)
  Prédit: 'en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.20229344069957733
    2. '(tokens' → logprob: -3.0772933959960938
    3. 'tokens' → logprob: -3.2022933959960938
    4. 'ar' → logprob: -3.5772933959960938
    5. 'ent' → logprob: -4.077293395996094
    6. 'aren' → logprob: -4.327293395996094
    7. '_tokens' → logprob: -4.577293395996094
    8. 't' → logprob: -4.702293395996094
    9. '   ' → logprob: -6.077293395996094
    10. 'th' → logprob: -6.452293395996094

Token 1903: '(tokens' (ID: 74272)
  Prédit: '(tokens'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tokens' → logprob: -0.01830269955098629
    2. 'tokens' → logprob: -4.018302917480469
    3. ' tokens' → logprob: -9.393302917480469
    4. '(self' → logprob: -10.768302917480469
    5. '(' → logprob: -11.018302917480469
    6. 'self' → logprob: -12.018302917480469
    7. '.tokens' → logprob: -12.018302917480469
    8. ',' → logprob: -12.643302917480469
    9. ')' → logprob: -12.643302917480469
    10. '(t' → logprob: -13.018302917480469

Token 1904: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.059362322092056274
    2. '(tokens' → logprob: -3.0593624114990234
    3. ',t' → logprob: -4.559362411499023
    4. '(t' → logprob: -9.684362411499023
    5. '(self' → logprob: -9.934362411499023
    6. 'tokens' → logprob: -10.309362411499023
    7. ' ,' → logprob: -10.559362411499023
    8. '(' → logprob: -10.809362411499023
    9. 'self' → logprob: -11.184362411499023
    10. ',self' → logprob: -11.559362411499023

Token 1905: ' pos' (ID: 1253)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.13509389758110046
    2. 'pos' → logprob: -2.135093927383423
    3. ' tokens' → logprob: -5.010093688964844
    4. ' pos' → logprob: -7.510093688964844
    5. '(tokens' → logprob: -7.885093688964844
    6. 'tok' → logprob: -8.135093688964844
    7. 'token' → logprob: -9.760093688964844
    8. ')' → logprob: -10.510093688964844
    9. '   ' → logprob: -10.635093688964844
    10. 't' → logprob: -10.760093688964844

Token 1906: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.6337168216705322
    2. ')' → logprob: -0.7587168216705322
    3. '           ' → logprob: -7.383716583251953
    4. ')
' → logprob: -8.758716583251953
    5. '):
' → logprob: -9.008716583251953
    6. '       ' → logprob: -9.383716583251953
    7. ')

' → logprob: -10.508716583251953
    8. '               ' → logprob: -10.883716583251953
    9. ')return' → logprob: -11.133716583251953
    10. '):' → logprob: -11.258716583251953

Token 1907: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007943621836602688
    2. 'return' → logprob: -4.882943630218506
    3. '                   ' → logprob: -8.257943153381348
    4. ' return' → logprob: -9.757943153381348
    5. '           ' → logprob: -11.757943153381348
    6. '       ' → logprob: -13.007943153381348
    7. '                       ' → logprob: -13.132943153381348
    8. '```' → logprob: -13.132943153381348
    9. '   ' → logprob: -13.757943153381348
    10. 'next' → logprob: -14.007943153381348

Token 1908: ' inner' (ID: 12694)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.701951801776886
    2. 'inner' (adapté à ' inner') → logprob: -0.951951801776886
    3. '               ' → logprob: -2.826951742172241
    4. 'return' → logprob: -2.951951742172241
    5. ' inner' → logprob: -5.32695198059082
    6. ' expr' → logprob: -6.70195198059082
    7. ' return' → logprob: -8.45195198059082
    8. 'sub' → logprob: -8.95195198059082
    9. 'inside' → logprob: -9.07695198059082
    10. '           ' → logprob: -9.57695198059082

Token 1909: '_expr' (ID: 53654)
  Prédit: '_expr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_expr' → logprob: -0.005595275666564703
    2. 'expr' → logprob: -5.2555952072143555
    3. ',' → logprob: -8.005595207214355
    4. ' =' → logprob: -11.630595207214355
    5. '_expression' → logprob: -11.755595207214355
    6. '
' → logprob: -12.630595207214355
    7. '   ' → logprob: -12.880595207214355
    8. '_exp' → logprob: -13.380595207214355
    9. 'Expr' → logprob: -13.880595207214355
    10. ',
' → logprob: -15.005595207214355

Token 1910: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012510620290413499
    2. '=' → logprob: -7.251251220703125
    3. ' =' → logprob: -7.626251220703125
    4. ' ,' → logprob: -11.001251220703125
    5. '           ' → logprob: -11.501251220703125
    6. '
' → logprob: -12.876251220703125
    7. ',t' → logprob: -12.876251220703125
    8. ',
' → logprob: -13.001251220703125
    9. ',self' → logprob: -13.001251220703125
    10. 'tokens' → logprob: -13.126251220703125

Token 1911: ' _' (ID: 1175)
  Prédit: 'matching'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matching' → logprob: -0.007562144659459591
    2. 'next' → logprob: -5.382562160491943
    3. ' matching' → logprob: -6.507562160491943
    4. 'return' → logprob: -6.882562160491943
    5. 'match' → logprob: -9.382561683654785
    6. '_matching' → logprob: -9.757561683654785
    7. ' =' → logprob: -9.882561683654785
    8. '=' → logprob: -9.882561683654785
    9. 'self' → logprob: -10.007561683654785
    10. 'pos' → logprob: -10.257561683654785

Token 1912: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005234952084720135
    2. ' =' → logprob: -5.255234718322754
    3. '=parse' → logprob: -15.130234718322754
    4. 'next' → logprob: -15.505234718322754
    5. '=self' → logprob: -15.755234718322754
    6. ')=' → logprob: -16.25523567199707
    7. 'pos' → logprob: -16.38023567199707
    8. '=
' → logprob: -16.50523567199707
    9. ')' → logprob: -16.63023567199707
    10. '           ' → logprob: -16.88023567199707

Token 1913: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.7835754988482222e-05
    2. ' self' → logprob: -11.000018119812012
    3. '(self' → logprob: -14.375018119812012
    4. '           ' → logprob: -15.250018119812012
    5. '   ' → logprob: -17.000017166137695
    6. 'parse' → logprob: -17.250017166137695
    7. '               ' → logprob: -17.250017166137695
    8. '
' → logprob: -17.375017166137695
    9. '                   ' → logprob: -17.625017166137695
    10. '       ' → logprob: -18.125017166137695

Token 1914: '.parse' (ID: 7259)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -8.375538163818419e-05
    2. ' parse' → logprob: -10.750083923339844
    3. '(parse' → logprob: -11.000083923339844
    4. 'def' → logprob: -11.250083923339844
    5. '.parse' → logprob: -11.500083923339844
    6. '
' → logprob: -11.500083923339844
    7. 'self' → logprob: -12.625083923339844
    8. '_parse' → logprob: -13.125083923339844
    9. '=parse' → logprob: -13.250083923339844
    10. '__' → logprob: -13.375083923339844

Token 1915: '_expr' (ID: 53654)
  Prédit: '_expr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_expr' → logprob: -0.008646360598504543
    2. 'expr' → logprob: -4.758646488189697
    3. 'Expr' → logprob: -11.383646011352539
    4. '_tokens' → logprob: -11.508646011352539
    5. 'tokens' → logprob: -11.883646011352539
    6. '_expression' → logprob: -13.383646011352539
    7. 'expression' → logprob: -14.508646011352539
    8. 'express' → logprob: -15.133646011352539
    9. '(expr' → logprob: -15.383646011352539
    10. 'self' → logprob: -16.00864601135254

Token 1916: '_recursive' (ID: 175926)
  Prédit: '_recursive'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_recursive' → logprob: -1.5928495486150496e-05
    2. 'recursive' → logprob: -11.125016212463379
    3. 'Recursive' → logprob: -14.000016212463379
    4. '_tokens' → logprob: -16.500015258789062
    5. '_rec' → logprob: -16.750015258789062
    6. '               ' → logprob: -16.875015258789062
    7. 'def' → logprob: -17.250015258789062
    8. '           ' → logprob: -17.500015258789062
    9. '```' → logprob: -17.625015258789062
    10. '       ' → logprob: -17.875015258789062

Token 1917: '(tokens' (ID: 74272)
  Prédit: '(tokens'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tokens' → logprob: -0.0040823169983923435
    2. 'tokens' → logprob: -5.504082202911377
    3. '(self' → logprob: -13.504082679748535
    4. ' tokens' → logprob: -14.129082679748535
    5. '```' → logprob: -14.254082679748535
    6. '(t' → logprob: -14.754082679748535
    7. '.tokens' → logprob: -15.754082679748535
    8. 'self' → logprob: -16.12908172607422
    9. '(token' → logprob: -16.12908172607422
    10. '(
' → logprob: -16.37908172607422

Token 1918: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12843453884124756
    2. '(tokens' → logprob: -2.128434658050537
    3. ',t' → logprob: -6.753434658050537
    4. '(t' → logprob: -8.253434181213379
    5. 'tokens' → logprob: -10.753434181213379
    6. '               ' → logprob: -11.378434181213379
    7. '```' → logprob: -11.628434181213379
    8. ')' → logprob: -11.753434181213379
    9. '           ' → logprob: -12.253434181213379
    10. '(self' → logprob: -12.378434181213379

Token 1919: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.013386443257331848
    2. 'tokens' → logprob: -4.513386249542236
    3. ' pos' → logprob: -6.138386249542236
    4. ' tokens' → logprob: -9.888386726379395
    5. '[pos' → logprob: -10.013386726379395
    6. '```' → logprob: -11.013386726379395
    7. '           ' → logprob: -11.263386726379395
    8. '   ' → logprob: -11.638386726379395
    9. '(pos' → logprob: -11.763386726379395
    10. '(tokens' → logprob: -12.388386726379395

Token 1920: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.005930931773036718
    2. ' +' → logprob: -5.1309309005737305
    3. '1' → logprob: -14.00593090057373
    4. '＋' → logprob: -15.13093090057373
    5. '()+' → logprob: -15.63093090057373
    6. '           ' → logprob: -15.63093090057373
    7. ',' → logprob: -15.63093090057373
    8. '[' → logprob: -16.005931854248047
    9. '```' → logprob: -16.130931854248047
    10. '+,' → logprob: -16.255931854248047

Token 1921: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.625003814697266
    3. '```' → logprob: -15.875003814697266
    4. '
' → logprob: -16.625003814697266
    5. '2' → logprob: -17.375003814697266
    6. '   ' → logprob: -17.500003814697266
    7. '...' → logprob: -17.750003814697266
    8. 'def' → logprob: -18.687503814697266
    9. '(' → logprob: -18.750003814697266
    10. '           ' → logprob: -19.437503814697266

Token 1922: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.127333340875339e-06
    2. ' ' → logprob: -12.500003814697266
    3. '```' → logprob: -15.937503814697266
    4. '   ' → logprob: -16.687503814697266
    5. '
' → logprob: -17.375003814697266
    6. '۱' → logprob: -17.875003814697266
    7. '2' → logprob: -18.062503814697266
    8. '１' → logprob: -18.062503814697266
    9. 'import' → logprob: -18.562503814697266
    10. '(' → logprob: -18.812503814697266

Token 1923: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00037132782745175064
    2. ',m' → logprob: -8.375370979309082
    3. 'matching' → logprob: -9.875370979309082
    4. '               ' → logprob: -10.250370979309082
    5. ' ,' → logprob: -10.875370979309082
    6. '           ' → logprob: -11.375370979309082
    7. ',
' → logprob: -11.750370979309082
    8. '                   ' → logprob: -11.875370979309082
    9. '```' → logprob: -13.500370979309082
    10. ')' → logprob: -13.875370979309082

Token 1924: ' matching' (ID: 20238)
  Prédit: 'matching'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matching' → logprob: -0.0001593195047462359
    2. ' matching' → logprob: -8.75015926361084
    3. '           ' → logprob: -15.00015926361084
    4. '_matching' → logprob: -15.75015926361084
    5. '               ' → logprob: -16.500160217285156
    6. '   ' → logprob: -16.625160217285156
    7. 'match' → logprob: -16.875160217285156
    8. '
' → logprob: -17.000160217285156
    9. 'return' → logprob: -17.875160217285156
    10. '[' → logprob: -18.000160217285156

Token 1925: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18210427463054657
    2. ')
' → logprob: -1.807104229927063
    3. '               ' → logprob: -6.807104110717773
    4. '           ' → logprob: -7.307104110717773
    5. '       ' → logprob: -8.307104110717773
    6. ')return' → logprob: -9.057104110717773
    7. '(' → logprob: -10.182104110717773
    8. '                   ' → logprob: -10.307104110717773
    9. '(tokens' → logprob: -10.557104110717773
    10. '```' → logprob: -10.807104110717773

Token 1926: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006740357726812363
    2. 'return' → logprob: -5.006740570068359
    3. '       ' → logprob: -11.50674057006836
    4. '           ' → logprob: -12.00674057006836
    5. '                   ' → logprob: -12.25674057006836
    6. ' return' → logprob: -12.88174057006836
    7. '                       ' → logprob: -14.75674057006836
    8. ',' → logprob: -15.00674057006836
    9. '			' → logprob: -15.38174057006836
    10. '   ' → logprob: -15.63174057006836

Token 1927: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00875037256628275
    2. '               ' → logprob: -4.7587504386901855
    3. ' return' → logprob: -9.008749961853027
    4. '                   ' → logprob: -12.258749961853027
    5. '           ' → logprob: -12.633749961853027
    6. '       ' → logprob: -12.758749961853027
    7. '	return' → logprob: -13.883749961853027
    8. '
' → logprob: -14.383749961853027
    9. '   ' → logprob: -15.008749961853027
    10. '                       ' → logprob: -15.883749961853027

Token 1928: ' inner' (ID: 12694)
  Prédit: 'Parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Parent' → logprob: -0.0006545356009155512
    2. '(' → logprob: -8.000654220581055
    3. 'inner' → logprob: -8.750654220581055
    4. ' Parent' → logprob: -9.375654220581055
    5. '(inner' → logprob: -10.250654220581055
    6. 'Inner' → logprob: -11.125654220581055
    7. 'parent' → logprob: -11.750654220581055
    8. 'Paren' → logprob: -12.375654220581055
    9. '   ' → logprob: -12.625654220581055
    10. '(P' → logprob: -12.875654220581055

Token 1929: '_expr' (ID: 53654)
  Prédit: '_expr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_expr' → logprob: -0.0001310719089815393
    2. 'expr' → logprob: -9.000130653381348
    3. 'Expr' → logprob: -12.500130653381348
    4. '_expression' → logprob: -13.625130653381348
    5. '_,' → logprob: -14.250130653381348
    6. '_EXPR' → logprob: -14.750130653381348
    7. ',' → logprob: -14.875130653381348
    8. '_' → logprob: -15.375130653381348
    9. 'express' → logprob: -15.625130653381348
    10. '
' → logprob: -15.875130653381348

Token 1930: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011629798245849088
    2. '               ' → logprob: -9.750116348266602
    3. '           ' → logprob: -10.375116348266602
    4. '       ' → logprob: -11.750116348266602
    5. '   ' → logprob: -12.000116348266602
    6. ' ,' → logprob: -12.000116348266602
    7. ',m' → logprob: -13.625116348266602
    8. ',
' → logprob: -14.000116348266602
    9. '                   ' → logprob: -14.125116348266602
    10. '```' → logprob: -14.500116348266602

Token 1931: ' matching' (ID: 20238)
  Prédit: 'matching'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matching' → logprob: -0.0009117019944824278
    2. ' matching' → logprob: -7.000911712646484
    3. '_matching' → logprob: -16.750911712646484
    4. '
' → logprob: -17.875911712646484
    5. 'matched' → logprob: -18.375911712646484
    6. 'match' → logprob: -18.500911712646484
    7. '   ' → logprob: -18.750911712646484
    8. 'Matching' → logprob: -20.125911712646484
    9. '           ' → logprob: -20.375911712646484
    10. '	m' → logprob: -20.625911712646484

Token 1932: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3879792392253876
    2. ' +' → logprob: -1.13797926902771
    3. '<|end|>' → logprob: -7.512979030609131
    4. '<|end|>' → logprob: -7.887979030609131
    5. '       ' → logprob: -9.887979507446289
    6. ')' → logprob: -10.262979507446289
    7. '+
' → logprob: -10.512979507446289
    8. '           ' → logprob: -11.512979507446289
    9. ' +
' → logprob: -11.637979507446289
    10. '```' → logprob: -11.637979507446289

Token 1933: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '```' → logprob: -19.0
    4. '   ' → logprob: -20.625
    5. '`' → logprob: -20.875
    6. '
' → logprob: -21.25
    7. '۱' → logprob: -21.5
    8. '(' → logprob: -21.875
    9. '１' → logprob: -22.25
    10. '+' → logprob: -22.5

Token 1934: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.0
    3. '```' → logprob: -21.25
    4. '
' → logprob: -21.375
    5. '0' → logprob: -22.25
    6. '(' → logprob: -22.375
    7. '   ' → logprob: -22.625
    8. '۱' → logprob: -23.0
    9. '<|end|>' → logprob: -23.875
    10. '`' → logprob: -23.875

Token 1935: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.015555044636130333
    2. '<|end|>' → logprob: -4.390554904937744
    3. '		' → logprob: -6.265554904937744
    4. '
' → logprob: -8.015555381774902
    5. '       ' → logprob: -8.140555381774902
    6. '          ' → logprob: -9.265555381774902
    7. '<|end|>' → logprob: -9.265555381774902
    8. '               ' → logprob: -9.640555381774902
    9. '	       ' → logprob: -10.015555381774902
    10. '.' → logprob: -10.140555381774902

Token 1936: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001877827919088304
    2. '
' → logprob: -7.251877784729004
    3. '       ' → logprob: -7.376877784729004
    4. '```' → logprob: -7.876877784729004
    5. '               ' → logprob: -9.126877784729004
    6. 'else' → logprob: -10.751877784729004
    7. '		' → logprob: -11.001877784729004
    8. 'return' → logprob: -12.251877784729004
    9. '   ' → logprob: -13.376877784729004
    10. '            
' → logprob: -13.501877784729004

Token 1937: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22822247445583344
    2. '       ' → logprob: -2.353222370147705
    3. 'else' (adapté à ' else') → logprob: -2.603222370147705
    4. '
' → logprob: -3.853222370147705
    5. ' else' → logprob: -4.603222370147705
    6. 'elif' → logprob: -5.978222370147705
    7. '               ' → logprob: -7.978222370147705
    8. '#' → logprob: -8.478222846984863
    9. '   ' → logprob: -8.853222846984863
    10. ' elif' → logprob: -8.978222846984863

Token 1938: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6130625605583191
    2. ':
' → logprob: -1.3630626201629639
    3. '               ' → logprob: -2.238062620162964
    4. ':' → logprob: -2.613062620162964
    5. ',' → logprob: -4.863062381744385
    6. '                   ' → logprob: -5.363062381744385
    7. '            ' → logprob: -5.738062381744385
    8. '       ' → logprob: -6.613062381744385
    9. '          ' → logprob: -7.363062381744385
    10. '                       ' → logprob: -7.488062381744385

Token 1939: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0893234983086586
    2. '           ' → logprob: -2.4643235206604004
    3. '                   ' → logprob: -8.714323043823242
    4. 'raise' → logprob: -10.214323043823242
    5. '       ' → logprob: -10.339323043823242
    6. '   ' → logprob: -10.464323043823242
    7. '	           ' → logprob: -10.714323043823242
    8. '             ' → logprob: -10.714323043823242
    9. ' ' → logprob: -11.339323043823242
    10. 'def' → logprob: -11.589323043823242

Token 1940: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -7.219262624857947e-05
    2. ' raise' → logprob: -10.000072479248047
    3. '                   ' → logprob: -11.500072479248047
    4. '               ' → logprob: -11.750072479248047
    5. '	raise' → logprob: -12.125072479248047
    6. '           ' → logprob: -13.625072479248047
    7. 'Raise' → logprob: -14.000072479248047
    8. '   ' → logprob: -15.125072479248047
    9. '#' → logprob: -15.250072479248047
    10. 'return' → logprob: -15.875072479248047

Token 1941: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -1.5048530030981055e-06
    2. ' Value' → logprob: -13.500001907348633
    3. 'Syntax' → logprob: -18.375001907348633
    4. '	Value' → logprob: -18.625001907348633
    5. '_value' → logprob: -19.625001907348633
    6. '_Value' → logprob: -20.125001907348633
    7. '(Value' → logprob: -20.375001907348633
    8. '.Value' → logprob: -21.375001907348633
    9. '<Value' → logprob: -21.625001907348633
    10. 'value' → logprob: -22.500001907348633

Token 1942: 'Error' (ID: 2255)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -0.693195104598999
    2. 'Error' → logprob: -0.693195104598999
    3. '(Value' → logprob: -10.318195343017578
    4. 'rror' → logprob: -11.818195343017578
    5. 'alue' → logprob: -13.318195343017578
    6. 'value' → logprob: -13.568195343017578
    7. 'Syntax' → logprob: -14.068195343017578
    8. 'Token' → logprob: -14.068195343017578
    9. '.Value' → logprob: -14.318195343017578
    10. '	Value' → logprob: -14.693195343017578

Token 1943: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.0033031930215656757
    2. '("' → logprob: -5.753303050994873
    3. '(' → logprob: -9.378303527832031
    4. 'f' → logprob: -10.253303527832031
    5. '           ' → logprob: -13.128303527832031
    6. '(
' → logprob: -13.503303527832031
    7. '               ' → logprob: -13.753303527832031
    8. '(Value' → logprob: -14.378303527832031
    9. '(F' → logprob: -15.628303527832031
    10. 'Unexpected' → logprob: -16.00330352783203

Token 1944: '"' (ID: 1)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.08983182907104492
    2. '"' → logprob: -2.589831829071045
    3. '           ' → logprob: -5.214831829071045
    4. 'Unexpected' → logprob: -5.464831829071045
    5. ' f' → logprob: -7.339831829071045
    6. '       ' → logprob: -8.339832305908203
    7. '               ' → logprob: -9.339832305908203
    8. '            ' → logprob: -9.589832305908203
    9. '   ' → logprob: -10.339832305908203
    10. '        ' → logprob: -10.839832305908203

Token 1945: 'Unexpected' (ID: 59338)
  Prédit: 'tok'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tok' → logprob: -0.03338747099041939
    2. '"' → logprob: -4.408387660980225
    3. 'Unexpected' → logprob: -4.533387660980225
    4. 'Value' → logprob: -6.033387660980225
    5. 'f' → logprob: -6.283387660980225
    6. 'Tok' → logprob: -6.533387660980225
    7. '(tok' → logprob: -7.158387660980225
    8. 'Expected' → logprob: -7.408387660980225
    9. 'tokens' → logprob: -7.408387660980225
    10. ' tok' → logprob: -8.283387184143066

Token 1946: ' token' (ID: 6602)
  Prédit: 'token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'token' → logprob: -0.0006913475226610899
    2. 'character' → logprob: -7.8756914138793945
    3. ' token' → logprob: -8.125691413879395
    4. 'tok' → logprob: -12.375691413879395
    5. '_token' → logprob: -12.500691413879395
    6. 'char' → logprob: -12.625691413879395
    7. ' character' → logprob: -13.625691413879395
    8. 'Token' → logprob: -14.250691413879395
    9. 'expression' → logprob: -14.250691413879395
    10. 'operator' → logprob: -14.875691413879395

Token 1947: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.034345466643571854
    2. ' at' → logprob: -3.7843453884124756
    3. ' {' → logprob: -5.034345626831055
    4. ':' → logprob: -6.284345626831055
    5. ''{' → logprob: -7.409345626831055
    6. '"{' → logprob: -8.034345626831055
    7. 'at' → logprob: -8.284345626831055
    8. 'f' → logprob: -8.284345626831055
    9. ' f' → logprob: -8.409345626831055
    10. ',' → logprob: -8.659345626831055

Token 1948: 'tok' (ID: 43620)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.02064221166074276
    2. 'tok' → logprob: -3.8956422805786133
    3. ' tokens' → logprob: -10.270642280578613
    4. '   ' → logprob: -11.020642280578613
    5. 'token' → logprob: -11.395642280578613
    6. 't' → logprob: -11.645642280578613
    7. '}' → logprob: -12.520642280578613
    8. 'tk' → logprob: -12.520642280578613
    9. '           ' → logprob: -12.770642280578613
    10. '(tokens' → logprob: -12.770642280578613

Token 1949: '}' (ID: 92)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -1.2857221364974976
    2. '}")' → logprob: -1.9107221364974976
    3. ')")' → logprob: -2.035722255706787
    4. '       ' → logprob: -2.160722255706787
    5. ')")
' → logprob: -2.160722255706787
    6. '           ' → logprob: -2.160722255706787
    7. ')' → logprob: -2.660722255706787
    8. '}")
' → logprob: -4.035722255706787
    9. ' at' → logprob: -5.410722255706787
    10. '}' → logprob: -5.910722255706787

Token 1950: ' where' (ID: 1919)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013610366731882095
    2. ')' → logprob: -4.388610363006592
    3. ')
' → logprob: -7.513610363006592
    4. '           ' → logprob: -8.38861083984375
    5. '   ' → logprob: -9.26361083984375
    6. '")' → logprob: -9.76361083984375
    7. '):
' → logprob: -10.01361083984375
    8. '
' → logprob: -10.76361083984375
    9. '        
' → logprob: -10.88861083984375
    10. '      ' → logprob: -11.26361083984375

Token 1951: ' primary' (ID: 9107)
  Prédit: 'primary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'primary' → logprob: -0.6741229891777039
    2. 'pos' → logprob: -0.7991229891777039
    3. 'parse' → logprob: -4.2991228103637695
    4. 'Expression' → logprob: -5.2991228103637695
    5. ''' → logprob: -5.4241228103637695
    6. 'a' → logprob: -5.5491228103637695
    7. '')' → logprob: -5.7991228103637695
    8. ')' → logprob: -5.9241228103637695
    9. ''ex' → logprob: -6.6741228103637695
    10. 'Number' → logprob: -7.1741228103637695

Token 1952: ' exp' (ID: 2794)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.32752564549446106
    2. ' was' → logprob: -2.2025256156921387
    3. ' is' → logprob: -2.4525256156921387
    4. ' expected' → logprob: -3.7025256156921387
    5. ' )' → logprob: -4.827525615692139
    6. 'expected' → logprob: -4.952525615692139
    7. '")' → logprob: -5.202525615692139
    8. ' at' → logprob: -5.202525615692139
    9. '_expected' → logprob: -5.827525615692139
    10. '_parser' → logprob: -5.952525615692139

Token 1953: ' expected' (ID: 5930)
  Prédit: 'ression'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ression' → logprob: -0.038545161485672
    2. 'r' → logprob: -3.9135451316833496
    3. 'ession' → logprob: -4.66354513168335
    4. 'ect' → logprob: -5.66354513168335
    5. 'ected' → logprob: -5.66354513168335
    6. 'res' → logprob: -7.66354513168335
    7. ')' → logprob: -7.78854513168335
    8. 'ress' → logprob: -8.163545608520508
    9. ' was' → logprob: -10.288545608520508
    10. 'pression' → logprob: -10.413545608520508

Token 1954: '")

' (ID: 10822)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16647017002105713
    2. '           ' → logprob: -2.5414700508117676
    3. '")
' → logprob: -2.9164700508117676
    4. ')
' → logprob: -4.916470050811768
    5. '")' → logprob: -4.916470050811768
    6. ')' → logprob: -5.291470050811768
    7. '")

' → logprob: -7.916470050811768
    8. '               ' → logprob: -9.166470527648926
    9. '   ' → logprob: -9.166470527648926
    10. '')
' → logprob: -10.041470527648926

Token 1955: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018072795122861862
    2. '           ' → logprob: -4.268072605133057
    3. '```' → logprob: -5.768072605133057
    4. '   ' → logprob: -8.018073081970215
    5. '
' → logprob: -8.393073081970215
    6. '               ' → logprob: -10.018073081970215
    7. '        
' → logprob: -10.393073081970215
    8. 'def' → logprob: -10.643073081970215
    9. 'class' → logprob: -10.768073081970215
    10. 'return' → logprob: -11.268073081970215

Token 1956: ' left' (ID: 3561)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019118191674351692
    2. 'pos' → logprob: -4.644118309020996
    3. 'left' (adapté à ' left') → logprob: -4.894118309020996
    4. 'expr' → logprob: -6.644118309020996
    5. '```' → logprob: -8.644118309020996
    6. '           ' → logprob: -8.894118309020996
    7. '   ' → logprob: -10.019118309020996
    8. 'i' → logprob: -10.394118309020996
    9. 'lhs' → logprob: -10.644118309020996
    10. ' left' → logprob: -10.644118309020996

Token 1957: '_expr' (ID: 53654)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010107948444783688
    2. '_expr' → logprob: -4.63510799407959
    3. ',left' → logprob: -9.38510799407959
    4. '_exp' → logprob: -10.01010799407959
    5. '_,' → logprob: -10.13510799407959
    6. 'expr' → logprob: -10.51010799407959
    7. '_pos' → logprob: -10.63510799407959
    8. ' ,' → logprob: -10.88510799407959
    9. '_expression' → logprob: -11.01010799407959
    10. ',pos' → logprob: -11.26010799407959

Token 1958: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003270023735240102
    2. ',pos' → logprob: -8.750327110290527
    3. ',left' → logprob: -9.250327110290527
    4. ',right' → logprob: -10.875327110290527
    5. ',next' → logprob: -11.125327110290527
    6. '   ' → logprob: -11.500327110290527
    7. ' ,' → logprob: -11.750327110290527
    8. ',n' → logprob: -12.250327110290527
    9. '=' → logprob: -12.250327110290527
    10. ',current' → logprob: -13.375327110290527

Token 1959: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.031836044043302536
    2. ' pos' → logprob: -3.7818360328674316
    3. 'next' → logprob: -5.281836032867432
    4. ' next' → logprob: -6.531836032867432
    5. 'start' → logprob: -6.531836032867432
    6. ' start' → logprob: -8.53183650970459
    7. 'left' → logprob: -8.78183650970459
    8. '   ' → logprob: -9.40683650970459
    9. '    ' → logprob: -10.90683650970459
    10. '       ' → logprob: -11.03183650970459

Token 1960: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18619976937770844
    2. ' =' → logprob: -1.8111997842788696
    3. ' +=' → logprob: -5.81119966506958
    4. '+=' → logprob: -6.56119966506958
    5. ',' → logprob: -6.93619966506958
    6. '<|end|>' → logprob: -7.93619966506958
    7. ' ' → logprob: -8.811200141906738
    8. '    ' → logprob: -9.436200141906738
    9. ')' → logprob: -9.811200141906738
    10. '+' → logprob: -9.811200141906738

Token 1961: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.0011741555063053966
    2. ' parse' → logprob: -6.751173973083496
    3. 'self' → logprob: -13.001173973083496
    4. '       ' → logprob: -14.251173973083496
    5. '           ' → logprob: -14.376173973083496
    6. '(parse' → logprob: -15.251173973083496
    7. '   ' → logprob: -15.876173973083496
    8. '	parse' → logprob: -16.501174926757812
    9. ' self' → logprob: -17.251174926757812
    10. 'parser' → logprob: -18.876174926757812

Token 1962: '_primary' (ID: 111799)
  Prédit: '_primary'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_primary' → logprob: -0.006360062398016453
    2. 'primary' → logprob: -5.381360054016113
    3. '_tokens' → logprob: -6.506360054016113
    4. '_expression' → logprob: -9.006360054016113
    5. '_expr' → logprob: -9.881360054016113
    6. 'expr' → logprob: -10.631360054016113
    7. '(primary' → logprob: -11.256360054016113
    8. 'tokens' → logprob: -11.631360054016113
    9. '   ' → logprob: -12.631360054016113
    10. '_' → logprob: -12.881360054016113

Token 1963: '(start' (ID: 20008)
  Prédit: '(pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.011859707534313202
    2. '(self' → logprob: -4.886859893798828
    3. '(' → logprob: -6.011859893798828
    4. '       ' → logprob: -7.261859893798828
    5. '(tokens' → logprob: -7.761859893798828
    6. 'pos' → logprob: -8.511859893798828
    7. '   ' → logprob: -9.136859893798828
    8. '           ' → logprob: -9.386859893798828
    9. ')' → logprob: -9.886859893798828
    10. 'self' → logprob: -10.261859893798828

Token 1964: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15175025165081024
    2. ')' → logprob: -2.026750326156616
    3. '<|end|>' → logprob: -6.276750087738037
    4. '
' → logprob: -6.401750087738037
    5. 'while' → logprob: -6.401750087738037
    6. ')
' → logprob: -6.526750087738037
    7. '#' → logprob: -7.151750087738037
    8. '        
' → logprob: -7.651750087738037
    9. '   ' → logprob: -8.526750564575195
    10. '),' → logprob: -9.026750564575195

Token 1965: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6942574977874756
    2. 'while' → logprob: -0.6942574977874756
    3. '```' → logprob: -7.069257736206055
    4. ' while' → logprob: -8.694257736206055
    5. '   ' → logprob: -9.944257736206055
    6. '	while' → logprob: -10.944257736206055
    7. 'if' → logprob: -11.194257736206055
    8. '           ' → logprob: -12.319257736206055
    9. '        
' → logprob: -13.069257736206055
    10. '
' → logprob: -13.069257736206055

Token 1966: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.00044532763422466815
    2. '       ' → logprob: -7.750445365905762
    3. 'if' → logprob: -12.250445365905762
    4. '```' → logprob: -12.375445365905762
    5. ' while' → logprob: -12.625445365905762
    6. '   ' → logprob: -13.125445365905762
    7. '	while' → logprob: -15.875445365905762
    8. '``' → logprob: -16.500444412231445
    9. '
' → logprob: -16.750444412231445
    10. 'While' → logprob: -17.125444412231445

Token 1967: ' parse' (ID: 8420)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -3.607391408877447e-05
    2. '       ' → logprob: -10.250036239624023
    3. ' while' → logprob: -14.500036239624023
    4. '   ' → logprob: -15.750036239624023
    5. 'def' → logprob: -17.000036239624023
    6. '```' → logprob: -17.500036239624023
    7. '	while' → logprob: -17.625036239624023
    8. 'While' → logprob: -18.125036239624023
    9. 'if' → logprob: -19.375036239624023
    10. '#' → logprob: -19.500036239624023

Token 1968: ' zero' (ID: 12421)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0025363059248775244
    2. 'def' → logprob: -6.252536296844482
    3. '   ' → logprob: -8.25253677368164
    4. '       ' → logprob: -8.75253677368164
    5. ' while' → logprob: -8.75253677368164
    6. '```' → logprob: -12.00253677368164
    7. '``' → logprob: -12.12753677368164
    8. '	while' → logprob: -12.75253677368164
    9. '
' → logprob: -12.75253677368164
    10. 'pos' → logprob: -13.00253677368164

Token 1969: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.7047245502471924
    2. ':' → logprob: -1.2047245502471924
    3. ' ' → logprob: -2.4547245502471924
    4. 'or' → logprob: -3.7047245502471924
    5. 'if' → logprob: -4.079724311828613
    6. ' :' → logprob: -4.204724311828613
    7. ' if' → logprob: -4.454724311828613
    8. '  ' → logprob: -4.704724311828613
    9. '
' → logprob: -4.954724311828613
    10. 'while' → logprob: -4.954724311828613

Token 1970: ' more' (ID: 945)
  Prédit: 'more'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'more' → logprob: -0.21109573543071747
    2. ' more' → logprob: -2.0860958099365234
    3. 'one' → logprob: -2.8360958099365234
    4. 'or' → logprob: -5.211095809936523
    5. ' one' → logprob: -7.461095809936523
    6. '1' → logprob: -7.461095809936523
    7. ' or' → logprob: -8.211095809936523
    8. '   ' → logprob: -8.336095809936523
    9. 'More' → logprob: -9.336095809936523
    10. '       ' → logprob: -9.586095809936523

Token 1971: ' (' (ID: 350)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.583156168460846
    2. 'while' → logprob: -0.833156168460846
    3. '   ' → logprob: -5.458156108856201
    4. '       ' → logprob: -7.083156108856201
    5. ' if' → logprob: -7.833156108856201
    6. 'if' → logprob: -7.958156108856201
    7. ' tokens' → logprob: -8.70815658569336
    8. '```' → logprob: -8.70815658569336
    9. ' #' → logprob: -8.83315658569336
    10. '
' → logprob: -9.20815658569336

Token 1972: 'op' (ID: 467)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.4370977282524109
    2. ' while' → logprob: -1.3120977878570557
    3. '   ' → logprob: -3.5620977878570557
    4. ')' → logprob: -4.187097549438477
    5. '
' → logprob: -4.687097549438477
    6. '       ' → logprob: -5.062097549438477
    7. 'if' → logprob: -5.687097549438477
    8. 'op' → logprob: -5.687097549438477
    9. '):
' → logprob: -6.187097549438477
    10. 'tokens' → logprob: -6.437097549438477

Token 1973: ' primary' (ID: 9107)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2668861448764801
    2. ')' → logprob: -2.7668862342834473
    3. ' tokens' → logprob: -2.8918862342834473
    4. 'tokens' → logprob: -3.0168862342834473
    5. '_tokens' → logprob: -4.141886234283447
    6. ':' → logprob: -4.766886234283447
    7. '=' → logprob: -5.016886234283447
    8. ' ,' → logprob: -5.141886234283447
    9. '):' → logprob: -6.016886234283447
    10. ' ' → logprob: -6.016886234283447

Token 1974: ')
' (ID: 446)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.616946280002594
    2. ')' → logprob: -1.1169462203979492
    3. '       ' → logprob: -3.241946220397949
    4. '):' → logprob: -3.491946220397949
    5. ',' → logprob: -3.741946220397949
    6. 'tokens' → logprob: -4.741946220397949
    7. '   ' → logprob: -4.866946220397949
    8. '           ' → logprob: -5.366946220397949
    9. ')
' → logprob: -5.366946220397949
    10. 'while' → logprob: -5.616946220397949

Token 1975: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6271824836730957
    2. 'while' → logprob: -1.2521824836730957
    3. ' while' → logprob: -1.7521824836730957
    4. '```' → logprob: -5.377182483673096
    5. '	while' → logprob: -7.377182483673096
    6. '   ' → logprob: -7.627182483673096
    7. '        
' → logprob: -8.627182006835938
    8. '
' → logprob: -8.877182006835938
    9. '           ' → logprob: -9.252182006835938
    10. ',' → logprob: -9.252182006835938

Token 1976: ' expr' (ID: 30206)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.00011427151912357658
    2. '       ' → logprob: -9.250114440917969
    3. ' while' → logprob: -11.000114440917969
    4. '   ' → logprob: -13.875114440917969
    5. '```' → logprob: -15.000114440917969
    6. '	while' → logprob: -16.75011444091797
    7. '
' → logprob: -17.37511444091797
    8. 'While' → logprob: -17.50011444091797
    9. '``' → logprob: -18.75011444091797
    10. '           ' → logprob: -19.25011444091797

Token 1977: 's' (ID: 82)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.15173457562923431
    2. ' while' → logprob: -3.1517345905303955
    3. '_pos' → logprob: -3.4017345905303955
    4. ' =' → logprob: -3.6517345905303955
    5. ',' → logprob: -4.401734352111816
    6. 'pos' → logprob: -4.776734352111816
    7. '_' → logprob: -5.026734352111816
    8. '=' → logprob: -6.276734352111816
    9. '	while' → logprob: -6.276734352111816
    10. '   ' → logprob: -6.401734352111816

Token 1978: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1618777513504028
    2. ' =' → logprob: -1.1618777513504028
    3. 'while' → logprob: -1.2868777513504028
    4. '=' → logprob: -3.4118776321411133
    5. ' while' → logprob: -3.5368776321411133
    6. '_pos' → logprob: -5.036877632141113
    7. 'pos' → logprob: -5.411877632141113
    8. '_list' → logprob: -5.411877632141113
    9. '_tokens' → logprob: -5.536877632141113
    10. '   ' → logprob: -6.036877632141113

Token 1979: ' List' (ID: 2655)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.8214734792709351
    2. '[(' → logprob: -1.696473479270935
    3. '[' → logprob: -2.4464735984802246
    4. ' =' → logprob: -2.8214735984802246
    5. '[]
' → logprob: -2.8214735984802246
    6. ' []' → logprob: -3.3214735984802246
    7. '[left' → logprob: -3.6964735984802246
    8. '[
' → logprob: -3.8214735984802246
    9. 'List' → logprob: -3.8214735984802246
    10. '[pos' → logprob: -4.196473598480225

Token 1980: '[' (ID: 58)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.29467901587486267
    2. '=' → logprob: -2.2946789264678955
    3. '.append' → logprob: -2.6696789264678955
    4. '[' → logprob: -3.1696789264678955
    5. ',' → logprob: -3.6696789264678955
    6. '[]' → logprob: -4.919679164886475
    7. '=[]' → logprob: -5.544679164886475
    8. '_tokens' → logprob: -6.294679164886475
    9. '[
' → logprob: -7.419679164886475
    10. ':' → logprob: -7.419679164886475

Token 1981: 'Expression' (ID: 12633)
  Prédit: 'Expression'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Expression' → logprob: -0.19646303355693817
    2. 'Union' → logprob: -1.9464629888534546
    3. 'Tuple' → logprob: -3.821463108062744
    4. '[' → logprob: -4.321463108062744
    5. '(Expression' → logprob: -8.321462631225586
    6. 'tuple' → logprob: -10.446462631225586
    7. 'union' → logprob: -10.946462631225586
    8. '[(' → logprob: -11.071462631225586
    9. ' Expression' → logprob: -11.196462631225586
    10. '(' → logprob: -11.446462631225586

Token 1982: ']' (ID: 60)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7323175668716431
    2. '=' → logprob: -1.357317566871643
    3. ' =' → logprob: -1.607317566871643
    4. '.append' → logprob: -3.3573174476623535
    5. '       ' → logprob: -4.9823174476623535
    6. ')' → logprob: -4.9823174476623535
    7. '=[]' → logprob: -5.1073174476623535
    8. '   ' → logprob: -5.9823174476623535
    9. '[]' → logprob: -7.2323174476623535
    10. ']' → logprob: -7.2323174476623535

Token 1983: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18511931598186493
    2. '=' → logprob: -2.060119390487671
    3. ',' → logprob: -3.310119390487671
    4. '.append' → logprob: -6.685119152069092
    5. '=[]' → logprob: -6.685119152069092
    6. '       ' → logprob: -6.935119152069092
    7. '   ' → logprob: -7.685119152069092
    8. '           ' → logprob: -7.810119152069092
    9. '=[]
' → logprob: -8.43511962890625
    10. '[]' → logprob: -8.93511962890625

Token 1984: ' [' (ID: 723)
  Prédit: '[left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[left' → logprob: -0.100323885679245
    2. '[' → logprob: -2.3503239154815674
    3. '[right' → logprob: -10.600323677062988
    4. '[start' → logprob: -10.725323677062988
    5. '[]' → logprob: -11.100323677062988
    6. '[]
' → logprob: -11.475323677062988
    7. '[pos' → logprob: -11.600323677062988
    8. ' [' → logprob: -11.600323677062988
    9. '[
' → logprob: -11.850323677062988
    10. '   ' → logprob: -12.225323677062988

Token 1985: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -4.008129963040119e-06
    2. ' left' → logprob: -12.500003814697266
    3. '[left' → logprob: -16.250003814697266
    4. '(left' → logprob: -16.500003814697266
    5. '	left' → logprob: -17.000003814697266
    6. '   ' → logprob: -17.125003814697266
    7. '
' → logprob: -18.375003814697266
    8. ',left' → logprob: -19.000003814697266
    9. '.left' → logprob: -20.000003814697266
    10. '```' → logprob: -20.125003814697266

Token 1986: '_expr' (ID: 53654)
  Prédit: '_expr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_expr' → logprob: -0.00010139751975657418
    2. 'expr' → logprob: -10.000101089477539
    3. ')' → logprob: -11.250101089477539
    4. ',' → logprob: -12.125101089477539
    5. 'Expr' → logprob: -12.250101089477539
    6. '   ' → logprob: -12.375101089477539
    7. '
' → logprob: -12.500101089477539
    8. ']' → logprob: -12.750101089477539
    9. '```' → logprob: -12.875101089477539
    10. '_left' → logprob: -13.125101089477539

Token 1987: ']
' (ID: 1592)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18827778100967407
    2. ']' → logprob: -2.0632777214050293
    3. ',' → logprob: -3.5632777214050293
    4. '        
' → logprob: -5.688277721405029
    5. ']
' → logprob: -5.688277721405029
    6. '           ' → logprob: -5.688277721405029
    7. 'while' → logprob: -6.313277721405029
    8. ')' → logprob: -6.688277721405029
    9. ',
' → logprob: -7.563277721405029
    10. '               ' → logprob: -7.813277721405029

Token 1988: '       ' (ID: 309)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.434556245803833
    2. '       ' → logprob: -1.934556245803833
    3. '```' → logprob: -2.434556245803833
    4. 'pos' → logprob: -2.684556245803833
    5. ' while' → logprob: -3.559556245803833
    6. 'ops' → logprob: -4.809556007385254
    7. 'tokens' → logprob: -5.809556007385254
    8. '           ' → logprob: -5.934556007385254
    9. '``' → logprob: -6.184556007385254
    10. 'operators' → logprob: -6.559556007385254

Token 1989: ' ops' (ID: 26973)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.6677671074867249
    2. 'ops' (adapté à ' ops') → logprob: -0.7927671074867249
    3. '       ' → logprob: -3.54276704788208
    4. '   ' → logprob: -6.04276704788208
    5. 'operators' → logprob: -6.41776704788208
    6. 'pos' → logprob: -7.04276704788208
    7. 'positions' → logprob: -7.91776704788208
    8. ' while' → logprob: -9.667767524719238
    9. 'tokens' → logprob: -9.792767524719238
    10. 'expr' → logprob: -10.417767524719238

Token 1990: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11190541833639145
    2. '=' → logprob: -2.361905336380005
    3. '=[]' → logprob: -4.736905574798584
    4. ':' → logprob: -5.986905574798584
    5. '=[]
' → logprob: -9.236905097961426
    6. '[]' → logprob: -9.236905097961426
    7. '_tokens' → logprob: -9.736905097961426
    8. 'tokens' → logprob: -9.861905097961426
    9. ' ' → logprob: -11.861905097961426
    10. '.append' → logprob: -11.986905097961426

Token 1991: ' List' (ID: 2655)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.00020580526324920356
    2. ' []' → logprob: -9.500205993652344
    3. '[]
' → logprob: -9.750205993652344
    4. '[List' → logprob: -10.125205993652344
    5. '[' → logprob: -11.375205993652344
    6. '[str' → logprob: -11.375205993652344
    7. 'List' → logprob: -11.875205993652344
    8. '[]

' → logprob: -13.625205993652344
    9. '[])' → logprob: -14.375205993652344
    10. '[]}' → logprob: -14.625205993652344

Token 1992: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -0.0265019703656435
    2. ':' → logprob: -4.7765021324157715
    3. ' =' → logprob: -5.2765021324157715
    4. '=[]' → logprob: -5.5265021324157715
    5. '[]' → logprob: -6.2765021324157715
    6. '.append' → logprob: -6.2765021324157715
    7. 'str' → logprob: -7.0265021324157715
    8. '=' → logprob: -7.1515021324157715
    9. '[' → logprob: -7.4015021324157715
    10. '=['' → logprob: -7.6515021324157715

Token 1993: ']' (ID: 60)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.9379109740257263
    2. '=' → logprob: -1.312911033630371
    3. ']' → logprob: -1.562911033630371
    4. ' =' → logprob: -2.187911033630371
    5. '=[]' → logprob: -5.187911033630371
    6. ']=' → logprob: -5.562911033630371
    7. ',' → logprob: -6.562911033630371
    8. '[]' → logprob: -6.687911033630371
    9. '=[]
' → logprob: -6.812911033630371
    10. ')' → logprob: -6.937911033630371

Token 1994: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11056233942508698
    2. ' =' → logprob: -2.360562324523926
    3. '=[]' → logprob: -4.735562324523926
    4. '.append' → logprob: -7.110562324523926
    5. '=[]
' → logprob: -7.985562324523926
    6. 'tokens' → logprob: -8.360562324523926
    7. '[]' → logprob: -9.860562324523926
    8. 'append' → logprob: -10.360562324523926
    9. ':' → logprob: -10.860562324523926
    10. '_tokens' → logprob: -11.610562324523926

Token 1995: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0007142199319787323
    2. '[]
' → logprob: -7.250714302062988
    3. '[]

' → logprob: -13.625714302062988
    4. '[])' → logprob: -14.000714302062988
    5. '[]}' → logprob: -14.125714302062988
    6. '[]>' → logprob: -14.375714302062988
    7. ' []' → logprob: -14.750714302062988
    8. '[' → logprob: -15.000714302062988
    9. '[]"' → logprob: -16.500713348388672
    10. '=[]' → logprob: -16.750713348388672

Token 1996: '       ' (ID: 309)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.32571911811828613
    2. '       ' → logprob: -1.3257191181182861
    3. ' while' → logprob: -4.700718879699707
    4. '```' → logprob: -6.075718879699707
    5. '
' → logprob: -8.075718879699707
    6. '           ' → logprob: -8.325718879699707
    7. '   ' → logprob: -8.450718879699707
    8. 'While' → logprob: -8.700718879699707
    9. '	while' → logprob: -10.325718879699707
    10. '``' → logprob: -11.450718879699707

Token 1997: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.001995131839066744
    2. '       ' → logprob: -6.251995086669922
    3. ' while' → logprob: -10.001995086669922
    4. '```' → logprob: -11.126995086669922
    5. '   ' → logprob: -12.751995086669922
    6. '
' → logprob: -13.126995086669922
    7. '	while' → logprob: -14.126995086669922
    8. 'While' → logprob: -14.626995086669922
    9. '``' → logprob: -15.251995086669922
    10. '           ' → logprob: -16.751995086669922

Token 1998: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -1.0230648517608643
    2. 'self' → logprob: -1.0230648517608643
    3. 'True' → logprob: -1.2730648517608643
    4. ' True' → logprob: -8.148064613342285
    5. '(True' → logprob: -8.148064613342285
    6. '   ' → logprob: -8.648064613342285
    7. '(self' → logprob: -8.898064613342285
    8. '(pos' → logprob: -9.648064613342285
    9. ' self' → logprob: -10.398064613342285
    10. '(' → logprob: -11.773064613342285

Token 1999: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.26468929648399353
    2. ' <' → logprob: -1.514689326286316
    3. '<len' → logprob: -4.5146894454956055
    4. 'is' → logprob: -6.7646894454956055
    5. '<n' → logprob: -8.389689445495605
    6. ' is' → logprob: -9.139689445495605
    7. '<num' → logprob: -10.514689445495605
    8. '<this' → logprob: -10.764689445495605
    9. '<class' → logprob: -10.889689445495605
    10. '!=' → logprob: -10.889689445495605

Token 2000: ' end' (ID: 1268)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.20166096091270447
    2. 'end' → logprob: -1.7016609907150269
    3. ' len' → logprob: -8.826661109924316
    4. ' end' → logprob: -9.826661109924316
    5. '(len' → logprob: -10.951661109924316
    6. '(end' → logprob: -11.576661109924316
    7. '   ' → logprob: -12.701661109924316
    8. '[end' → logprob: -12.826661109924316
    9. 'length' → logprob: -13.451661109924316
    10. '```' → logprob: -13.576661109924316

Token 2001: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.47213250398635864
    2. 'and' → logprob: -1.0971324443817139
    3. '           ' → logprob: -3.597132444381714
    4. ':
' → logprob: -4.347132682800293
    5. ':' → logprob: -6.597132682800293
    6. '       ' → logprob: -7.597132682800293
    7. '   ' → logprob: -9.472132682800293
    8. '):
' → logprob: -10.097132682800293
    9. ',' → logprob: -10.472132682800293
    10. '```' → logprob: -10.597132682800293

Token 2002: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2271386831998825
    2. 'c' → logprob: -2.3521387577056885
    3. 'if' → logprob: -3.1021387577056885
    4. 'tok' → logprob: -3.9771387577056885
    5. ' if' → logprob: -4.352138519287109
    6. 'token' → logprob: -4.852138519287109
    7. 'ch' → logprob: -4.852138519287109
    8. ' c' → logprob: -4.977138519287109
    9. '```' → logprob: -5.227138519287109
    10. '   ' → logprob: -6.727138519287109

Token 2003: ' tok' (ID: 13372)
  Prédit: 'tok'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tok' (adapté à ' tok') → logprob: -0.010532469488680363
    2. 'if' → logprob: -5.010532379150391
    3. 'op' → logprob: -5.760532379150391
    4. 'c' → logprob: -7.635532379150391
    5. '           ' → logprob: -9.51053237915039
    6. 'token' → logprob: -9.76053237915039
    7. 'tk' → logprob: -10.88553237915039
    8. 'ch' → logprob: -11.51053237915039
    9. ' tok' → logprob: -11.76053237915039
    10. 't' → logprob: -12.01053237915039

Token 2004: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5629995465278625
    2. ' =' → logprob: -1.3129994869232178
    3. ' if' → logprob: -2.6879994869232178
    4. 'if' → logprob: -3.1879994869232178
    5. ' in' → logprob: -3.3129994869232178
    6. 'in' → logprob: -4.812999725341797
    7. 'is' → logprob: -6.187999725341797
    8. ' is' → logprob: -6.312999725341797
    9. '           ' → logprob: -6.937999725341797
    10. 'token' → logprob: -8.062999725341797

Token 2005: ' tokens' (ID: 20290)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -2.8444881536415778e-05
    2. ' tokens' → logprob: -10.500028610229492
    3. '   ' → logprob: -15.125028610229492
    4. '           ' → logprob: -15.500028610229492
    5. '(tokens' → logprob: -16.375028610229492
    6. 't' → logprob: -16.375028610229492
    7. '       ' → logprob: -16.750028610229492
    8. 'token' → logprob: -16.875028610229492
    9. 'tok' → logprob: -17.875028610229492
    10. 'tickets' → logprob: -17.875028610229492

Token 2006: '[pos' (ID: 48272)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4163333773612976
    2. 'if' → logprob: -1.7913334369659424
    3. ' if' → logprob: -1.9163334369659424
    4. '
' → logprob: -4.416333198547363
    5. ' in' → logprob: -4.416333198547363
    6. 'in' → logprob: -7.416333198547363
    7. '            
' → logprob: -7.791333198547363
    8. '[' → logprob: -8.291333198547363
    9. '		' → logprob: -8.666333198547363
    10. '       ' → logprob: -8.916333198547363

Token 2007: ']
' (ID: 1592)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.018221698701381683
    2. ' if' → logprob: -5.018221855163574
    3. '
' → logprob: -5.143221855163574
    4. 'if' → logprob: -6.018221855163574
    5. ')
' → logprob: -6.268221855163574
    6. '            
' → logprob: -8.393221855163574
    7. '		' → logprob: -8.518221855163574
    8. ')' → logprob: -8.643221855163574
    9. '       ' → logprob: -8.768221855163574
    10. '          ' → logprob: -9.643221855163574

Token 2008: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.029179049655795097
    2. ' if' → logprob: -3.654179096221924
    3. 'if' → logprob: -6.404179096221924
    4. '       ' → logprob: -6.904179096221924
    5. '               ' → logprob: -9.904178619384766
    6. '```' → logprob: -9.904178619384766
    7. '   ' → logprob: -10.404178619384766
    8. ' ' → logprob: -11.029178619384766
    9. '	       ' → logprob: -11.029178619384766
    10. '<|end|>' → logprob: -11.154178619384766

Token 2009: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.017722098156809807
    2. '           ' → logprob: -4.267722129821777
    3. ' if' → logprob: -5.642722129821777
    4. '	if' → logprob: -12.642722129821777
    5. 'If' → logprob: -13.267722129821777
    6. '               ' → logprob: -13.642722129821777
    7. '```' → logprob: -14.142722129821777
    8. '   ' → logprob: -14.267722129821777
    9. '       ' → logprob: -14.642722129821777
    10. '            
' → logprob: -15.142722129821777

Token 2010: ' tok' (ID: 13372)
  Prédit: 'tok'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tok' → logprob: -0.005583656020462513
    2. ' tok' → logprob: -5.255583763122559
    3. 'not' → logprob: -8.505583763122559
    4. ' not' → logprob: -10.130583763122559
    5. 'is' → logprob: -10.380583763122559
    6. '(tok' → logprob: -10.630583763122559
    7. 't' → logprob: -11.255583763122559
    8. ' isinstance' → logprob: -11.255583763122559
    9. 'tk' → logprob: -11.880583763122559
    10. 'token' → logprob: -12.255583763122559

Token 2011: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.046405769884586334
    2. ' not' → logprob: -3.171405792236328
    3. 'in' → logprob: -6.421405792236328
    4. ' ==' → logprob: -6.546405792236328
    5. 'not' → logprob: -8.546405792236328
    6. '==' → logprob: -9.796405792236328
    7. ' ' → logprob: -10.546405792236328
    8. '=='' → logprob: -10.671405792236328
    9. ' =='' → logprob: -11.671405792236328
    10. ' ' → logprob: -11.796405792236328

Token 2012: ' ('' (ID: 9906)
  Prédit: '"+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"+' → logprob: -0.4312407076358795
    2. ''+' → logprob: -1.1812406778335571
    3. '"' → logprob: -3.3062407970428467
    4. ''' → logprob: -5.431240558624268
    5. '['' → logprob: -6.431240558624268
    6. ' "+' → logprob: -8.181241035461426
    7. '{'' → logprob: -8.306241035461426
    8. '('' → logprob: -9.806241035461426
    9. ' '+' → logprob: -9.931241035461426
    10. '{' → logprob: -10.431241035461426

Token 2013: '+',' (ID: 141314)
  Prédit: ''+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''+' → logprob: -0.0005246769287623465
    2. '+-' → logprob: -7.875524520874023
    3. ''' → logprob: -9.625524520874023
    4. '"+' → logprob: -9.875524520874023
    5. ' '+' → logprob: -11.500524520874023
    6. '['' → logprob: -11.750524520874023
    7. '+' → logprob: -11.750524520874023
    8. '+'' → logprob: -15.250524520874023
    9. '+,' → logprob: -15.375524520874023
    10. '   ' → logprob: -15.375524520874023

Token 2014: ' '-',' (ID: 124266)
  Prédit: ''-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''-' → logprob: -0.00048358101048506796
    2. ' '-',' → logprob: -7.750483512878418
    3. '   ' → logprob: -10.875483512878418
    4. ''*' → logprob: -11.000483512878418
    5. ' ' → logprob: -12.625483512878418
    6. '('-',' → logprob: -12.625483512878418
    7. '"-' → logprob: -12.875483512878418
    8. '           ' → logprob: -13.000483512878418
    9. '       ' → logprob: -13.250483512878418
    10. '-' → logprob: -13.750483512878418

Token 2015: ' '*' (ID: 34958)
  Prédit: ''*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''*' → logprob: -1.2113979209971149e-05
    2. ' '*' → logprob: -11.375012397766113
    3. '"*' → logprob: -14.500012397766113
    4. ''' → logprob: -17.500011444091797
    5. '('*' → logprob: -17.625011444091797
    6. '`' → logprob: -18.875011444091797
    7. '*' → logprob: -19.750011444091797
    8. '*,' → logprob: -20.125011444091797
    9. ' '*'' → logprob: -20.250011444091797
    10. ')*' → logprob: -20.500011444091797

Token 2016: '',' (ID: 787)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5757176876068115
    2. ''/' → logprob: -1.7007176876068115
    3. '',' → logprob: -2.3257176876068115
    4. ''' → logprob: -2.3257176876068115
    5. '/' → logprob: -3.2007176876068115
    6. ' '/',' → logprob: -4.200717926025391
    7. '/',' → logprob: -6.950717926025391
    8. '/,' → logprob: -7.450717926025391
    9. '','' → logprob: -7.450717926025391
    10. ','' → logprob: -8.20071792602539

Token 2017: ' '/' (ID: 7041)
  Prédit: ''/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''/' → logprob: -0.00012403888104017824
    2. ''' → logprob: -9.000123977661133
    3. ' '/')' → logprob: -14.875123977661133
    4. '"/' → logprob: -16.125123977661133
    5. ' '/' → logprob: -16.625123977661133
    6. '   ' → logprob: -17.750123977661133
    7. ' ' → logprob: -18.250123977661133
    8. '/' → logprob: -18.250123977661133
    9. '')' → logprob: -18.375123977661133
    10. ''+' → logprob: -19.500123977661133

Token 2018: ''):
' (ID: 26539)
  Prédit: ''):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''):
' → logprob: -0.22687724232673645
    2. '):
' → logprob: -1.601877212524414
    3. '',' → logprob: -7.976877212524414
    4. ''):' → logprob: -7.976877212524414
    5. ')' → logprob: -8.601877212524414
    6. '')' → logprob: -8.976877212524414
    7. '           ' → logprob: -8.976877212524414
    8. '):' → logprob: -9.226877212524414
    9. '"):
' → logprob: -9.601877212524414
    10. ',' → logprob: -9.601877212524414

Token 2019: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007455653045326471
    2. ':' → logprob: -5.882455825805664
    3. '<|end|>' → logprob: -6.007455825805664
    4. ':
' → logprob: -7.007455825805664
    5. '```' → logprob: -8.132455825805664
    6. '<|end|>' → logprob: -8.632455825805664
    7. '           ' → logprob: -8.632455825805664
    8. ',' → logprob: -9.132455825805664
    9. '	           ' → logprob: -9.507455825805664
    10. '              ' → logprob: -9.882455825805664

Token 2020: ' ops' (ID: 26973)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' (adapté à ' ops') → logprob: -0.11860673874616623
    2. '               ' → logprob: -2.6186068058013916
    3. ' ops' → logprob: -3.8686068058013916
    4. 'pos' → logprob: -4.4936065673828125
    5. 'op' → logprob: -5.2436065673828125
    6. ' op' → logprob: -7.6186065673828125
    7. '                   ' → logprob: -8.368606567382812
    8. '   ' → logprob: -8.743606567382812
    9. ' pos' → logprob: -8.868606567382812
    10. 'operator' → logprob: -9.493606567382812

Token 2021: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.7121500968933105
    2. ' =' → logprob: -0.8371500968933105
    3. '=' → logprob: -2.5871500968933105
    4. ',' → logprob: -8.337150573730469
    5. 'append' → logprob: -8.337150573730469
    6. '.' → logprob: -8.587150573730469
    7. 'pos' → logprob: -8.837150573730469
    8. '               ' → logprob: -9.462150573730469
    9. ' .' → logprob: -9.587150573730469
    10. 'tokens' → logprob: -9.962150573730469

Token 2022: '(tok' (ID: 182089)
  Prédit: 'tok'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tok' → logprob: -0.49249792098999023
    2. 'tokens' → logprob: -0.9924979209899902
    3. ' tok' → logprob: -4.24249792098999
    4. ' tokens' → logprob: -5.99249792098999
    5. '(tok' → logprob: -7.74249792098999
    6. '(tokens' → logprob: -8.492498397827148
    7. 'to' → logprob: -8.617498397827148
    8. 'token' → logprob: -8.992498397827148
    9. ' toks' → logprob: -9.117498397827148
    10. ''' → logprob: -9.242498397827148

Token 2023: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.12976406514644623
    2. ')' → logprob: -2.1297640800476074
    3. '               ' → logprob: -5.879764080047607
    4. ');' → logprob: -11.25476360321045
    5. ')
' → logprob: -11.75476360321045
    6. '           ' → logprob: -12.00476360321045
    7. '                   ' → logprob: -12.75476360321045
    8. '),' → logprob: -13.50476360321045
    9. ',' → logprob: -13.62976360321045
    10. '')
' → logprob: -13.75476360321045

Token 2024: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0028319843113422394
    2. 'pos' → logprob: -6.502831935882568
    3. '```' → logprob: -7.877831935882568
    4. '           ' → logprob: -8.127832412719727
    5. '                   ' → logprob: -8.377832412719727
    6. ',pos' → logprob: -8.752832412719727
    7. '	           ' → logprob: -9.752832412719727
    8. ',' → logprob: -9.877832412719727
    9. ' pos' → logprob: -10.252832412719727
    10. '[pos' → logprob: -10.752832412719727

Token 2025: ' right' (ID: 1849)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.009634139947593212
    2. '               ' → logprob: -5.259634017944336
    3. '           ' → logprob: -5.884634017944336
    4. 'right' (adapté à ' right') → logprob: -7.009634017944336
    5. ' pos' → logprob: -8.259634017944336
    6. 'primary' → logprob: -8.509634017944336
    7. 'expr' → logprob: -8.634634017944336
    8. 'left' → logprob: -10.634634017944336
    9. 'next' → logprob: -11.009634017944336
    10. 'rhs' → logprob: -11.884634017944336

Token 2026: '_expr' (ID: 53654)
  Prédit: '_expr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_expr' → logprob: -0.00028529210248962045
    2. ',' → logprob: -8.625285148620605
    3. 'expr' → logprob: -9.625285148620605
    4. '_exp' → logprob: -11.500285148620605
    5. '_expression' → logprob: -11.500285148620605
    6. 'Expr' → logprob: -12.125285148620605
    7. '_pos' → logprob: -12.875285148620605
    8. '_,' → logprob: -13.000285148620605
    9. '   ' → logprob: -13.000285148620605
    10. '```' → logprob: -13.250285148620605

Token 2027: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014525714504998177
    2. ',right' → logprob: -9.000144958496094
    3. ',pos' → logprob: -10.875144958496094
    4. ' ,' → logprob: -13.250144958496094
    5. ',left' → logprob: -15.000144958496094
    6. ',next' → logprob: -15.375144958496094
    7. ',start' → logprob: -16.125144958496094
    8. ',
' → logprob: -16.875144958496094
    9. ',parent' → logprob: -16.875144958496094
    10. ',new' → logprob: -17.000144958496094

Token 2028: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.001502717612311244
    2. ' pos' → logprob: -6.501502513885498
    3. '(pos' → logprob: -15.376502990722656
    4. 'next' → logprob: -16.501502990722656
    5. '[pos' → logprob: -17.501502990722656
    6. '_pos' → logprob: -17.751502990722656
    7. '	pos' → logprob: -18.751502990722656
    8. '   ' → logprob: -20.751502990722656
    9. '```' → logprob: -20.751502990722656
    10. 'new' → logprob: -20.876502990722656

Token 2029: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01976717635989189
    2. ' =' → logprob: -4.5197672843933105
    3. ',' → logprob: -4.7697672843933105
    4. '<|end|>' → logprob: -10.144766807556152
    5. '=
' → logprob: -10.394766807556152
    6. '+=' → logprob: -10.519766807556152
    7. ')' → logprob: -10.769766807556152
    8. ':' → logprob: -11.144766807556152
    9. '```' → logprob: -11.269766807556152
    10. '[' → logprob: -12.144766807556152

Token 2030: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -8.625866030342877e-05
    2. ' parse' → logprob: -9.750085830688477
    3. 'self' → logprob: -10.500085830688477
    4. '(parse' → logprob: -15.375085830688477
    5. '           ' → logprob: -17.250085830688477
    6. ' self' → logprob: -17.375085830688477
    7. '	parse' → logprob: -17.500085830688477
    8. '   ' → logprob: -18.000085830688477
    9. 'parser' → logprob: -18.500085830688477
    10. '_parse' → logprob: -18.875085830688477

Token 2031: '_primary' (ID: 111799)
  Prédit: '_primary'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_primary' → logprob: -0.00044318195432424545
    2. 'primary' → logprob: -8.250443458557129
    3. 'expr' → logprob: -9.500443458557129
    4. '_expr' → logprob: -9.500443458557129
    5. '_tokens' → logprob: -11.375443458557129
    6. 'Primary' → logprob: -11.375443458557129
    7. '_expression' → logprob: -12.125443458557129
    8. '(primary' → logprob: -13.000443458557129
    9. '(expr' → logprob: -14.500443458557129
    10. ' primary' → logprob: -16.000442504882812

Token 2032: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -0.0002622894535306841
    2. 'pos' → logprob: -8.250262260437012
    3. ' pos' → logprob: -14.750262260437012
    4. '[pos' → logprob: -15.250262260437012
    5. ',pos' → logprob: -15.500262260437012
    6. '	pos' → logprob: -16.750263214111328
    7. '(' → logprob: -17.000263214111328
    8. '(position' → logprob: -17.250263214111328
    9. '(
' → logprob: -17.250263214111328
    10. ' (' → logprob: -18.125263214111328

Token 2033: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0485982745885849
    2. ' +' → logprob: -3.048598289489746
    3. ')' → logprob: -12.673598289489746
    4. '+
' → logprob: -12.923598289489746
    5. '()+' → logprob: -13.298598289489746
    6. '+)' → logprob: -13.423598289489746
    7. ')+' → logprob: -14.298598289489746
    8. '1' → logprob: -15.048598289489746
    9. '[' → logprob: -15.423598289489746
    10. '               ' → logprob: -15.548598289489746

Token 2034: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -14.125001907348633
    3. '2' → logprob: -14.375001907348633
    4. '```' → logprob: -16.250001907348633
    5. '   ' → logprob: -16.375001907348633
    6. '           ' → logprob: -18.250001907348633
    7. '(' → logprob: -18.500001907348633
    8. '       ' → logprob: -18.500001907348633
    9. '
' → logprob: -18.750001907348633
    10. '[' → logprob: -18.812501907348633

Token 2035: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.8889261304575484e-06
    2. ' ' → logprob: -13.000003814697266
    3. '2' → logprob: -13.750003814697266
    4. '   ' → logprob: -15.875003814697266
    5. '```' → logprob: -15.875003814697266
    6. '0' → logprob: -16.500003814697266
    7. '(' → logprob: -17.187503814697266
    8. '
' → logprob: -17.250003814697266
    9. 'len' → logprob: -17.562503814697266
    10. '[' → logprob: -18.062503814697266

Token 2036: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3633511960506439
    2. ')' → logprob: -1.2383512258529663
    3. '               ' → logprob: -4.238351345062256
    4. '())
' → logprob: -8.738350868225098
    5. '()' → logprob: -9.863350868225098
    6. '           ' → logprob: -9.988350868225098
    7. ')
' → logprob: -10.363350868225098
    8. '```' → logprob: -11.238350868225098
    9. '()
' → logprob: -11.363350868225098
    10. '())' → logprob: -11.488350868225098

Token 2037: '               ' (ID: 506)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.5780879855155945
    2. '               ' → logprob: -0.8280879855155945
    3. '           ' → logprob: -6.32808780670166
    4. '                   ' → logprob: -9.07808780670166
    5. '   ' → logprob: -9.20308780670166
    6. 'express' → logprob: -9.57808780670166
    7. ' expr' → logprob: -9.70308780670166
    8. '```' → logprob: -12.82808780670166
    9. '_expr' → logprob: -12.95308780670166
    10. '       ' → logprob: -12.95308780670166

Token 2038: ' expr' (ID: 30206)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expr' (adapté à ' expr') → logprob: -5.676981345459353e-06
    2. 'left' → logprob: -12.250005722045898
    3. '           ' → logprob: -14.625005722045898
    4. '#' → logprob: -15.875005722045898
    5. '               ' → logprob: -16.1250057220459
    6. 'express' → logprob: -16.5000057220459
    7. ' expr' → logprob: -16.7500057220459
    8. '                   ' → logprob: -18.8750057220459
    9. '       ' → logprob: -19.1250057220459
    10. 'expression' → logprob: -19.6250057220459

Token 2039: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00011951648048125207
    2. 'expr' → logprob: -9.62511920928955
    3. '       ' → logprob: -11.12511920928955
    4. '_expr' → logprob: -11.25011920928955
    5. '   ' → logprob: -11.37511920928955
    6. '           ' → logprob: -11.87511920928955
    7. 'es' → logprob: -13.00011920928955
    8. '=' → logprob: -14.00011920928955
    9. ' =' → logprob: -14.00011920928955
    10. '               ' → logprob: -14.87511920928955

Token 2040: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -4.572941179503687e-05
    2. '.' → logprob: -10.000045776367188
    3. '.app' → logprob: -15.625045776367188
    4. 'append' → logprob: -17.125045776367188
    5. '.extend' → logprob: -17.875045776367188
    6. '.Append' → logprob: -18.500045776367188
    7. '.push' → logprob: -18.875045776367188
    8. '.ap' → logprob: -19.000045776367188
    9. ' .' → logprob: -19.250045776367188
    10. '_append' → logprob: -20.000045776367188

Token 2041: '(right' (ID: 52104)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.5761476159095764
    2. '(right' → logprob: -0.8261476159095764
    3. ' right' → logprob: -8.57614803314209
    4. '[right' → logprob: -11.20114803314209
    5. '	right' → logprob: -12.57614803314209
    6. ',right' → logprob: -13.82614803314209
    7. '(
' → logprob: -13.95114803314209
    8. '(' → logprob: -15.57614803314209
    9. ':right' → logprob: -15.70114803314209
    10. ' (' → logprob: -16.576147079467773

Token 2042: '_expr' (ID: 53654)
  Prédit: '_expr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_expr' → logprob: -1.0280383548888494e-06
    2. 'expr' → logprob: -14.375000953674316
    3. ')' → logprob: -15.500000953674316
    4. 'Expr' → logprob: -16.000001907348633
    5. '   ' → logprob: -17.375001907348633
    6. '_EXPR' → logprob: -18.250001907348633
    7. '```' → logprob: -18.250001907348633
    8. ')_' → logprob: -18.375001907348633
    9. '_' → logprob: -18.500001907348633
    10. '_exp' → logprob: -18.500001907348633

Token 2043: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6581515073776245
    2. ')' → logprob: -0.7831515073776245
    3. '       ' → logprob: -4.283151626586914
    4. '<|end|>' → logprob: -5.283151626586914
    5. ')
' → logprob: -5.783151626586914
    6. '               ' → logprob: -6.158151626586914
    7. '<|end|>' → logprob: -7.158151626586914
    8. '   ' → logprob: -9.408151626586914
    9. '
' → logprob: -10.408151626586914
    10. ',' → logprob: -10.408151626586914

Token 2044: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7526717782020569
    2. '       ' → logprob: -1.252671718597412
    3. '
' → logprob: -1.752671718597412
    4. '               ' → logprob: -3.002671718597412
    5. '```' → logprob: -5.002671718597412
    6. '#' → logprob: -5.627671718597412
    7. '        
' → logprob: -6.002671718597412
    8. '    
' → logprob: -6.627671718597412
    9. '            
' → logprob: -6.877671718597412
    10. 'else' → logprob: -6.877671718597412

Token 2045: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3191867470741272
    2. '           ' → logprob: -1.4441866874694824
    3. 'else' (adapté à ' else') → logprob: -3.6941866874694824
    4. ' else' → logprob: -4.444186687469482
    5. '               ' → logprob: -7.819186687469482
    6. '
' → logprob: -9.19418716430664
    7. '#' → logprob: -9.81918716430664
    8. '   ' → logprob: -10.44418716430664
    9. ':
' → logprob: -11.06918716430664
    10. '```' → logprob: -11.06918716430664

Token 2046: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0004989399458281696
    2. '	           ' → logprob: -8.62549877166748
    3. ':' → logprob: -9.25049877166748
    4. '           ' → logprob: -10.00049877166748
    5. '			' → logprob: -10.00049877166748
    6. '              ' → logprob: -10.62549877166748
    7. '		       ' → logprob: -10.75049877166748
    8. '                   ' → logprob: -11.00049877166748
    9. '                ' → logprob: -11.25049877166748
    10. ':
' → logprob: -11.87549877166748

Token 2047: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -7.493430894101039e-05
    2. 'break' → logprob: -10.125075340270996
    3. '           ' → logprob: -10.875075340270996
    4. '	           ' → logprob: -12.500075340270996
    5. '	break' → logprob: -12.750075340270996
    6. '			' → logprob: -12.750075340270996
    7. '                   ' → logprob: -13.125075340270996
    8. ' break' → logprob: -13.625075340270996
    9. '              ' → logprob: -13.875075340270996
    10. '   ' → logprob: -13.875075340270996

Token 2048: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.11743365228176117
    2. '               ' → logprob: -2.367433547973633
    3. '           ' → logprob: -4.117433547973633
    4. '	break' → logprob: -7.617433547973633
    5. ' break' → logprob: -8.242433547973633
    6. '			' → logprob: -11.117433547973633
    7. '   ' → logprob: -11.742433547973633
    8. '	           ' → logprob: -12.492433547973633
    9. '       ' → logprob: -13.117433547973633
    10. 'return' → logprob: -13.117433547973633

Token 2049: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04239368438720703
    2. '        
' → logprob: -3.542393684387207
    3. '
' → logprob: -4.542393684387207
    4. '    
' → logprob: -7.042393684387207
    5. ',' → logprob: -8.542393684387207
    6. '<|end|>' → logprob: -8.792393684387207
    7. 'return' → logprob: -9.167393684387207
    8. '           ' → logprob: -9.292393684387207
    9. '            
' → logprob: -9.292393684387207
    10. ':
' → logprob: -9.292393684387207

Token 2050: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08814737200737
    2. '
' → logprob: -2.7131474018096924
    3. '        
' → logprob: -4.338147163391113
    4. 'return' → logprob: -6.338147163391113
    5. '    
' → logprob: -7.338147163391113
    6. '           ' → logprob: -7.463147163391113
    7. '  
' → logprob: -7.713147163391113
    8. '```' → logprob: -8.213147163391113
    9. '   ' → logprob: -8.713147163391113
    10. ':
' → logprob: -8.838147163391113

Token 2051: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.2538991868495941
    2. '       ' → logprob: -2.003899097442627
    3. 'if' → logprob: -3.003899097442627
    4. 'return' → logprob: -4.378899097442627
    5. 'def' → logprob: -4.378899097442627
    6. 'from' → logprob: -4.753899097442627
    7. 'class' → logprob: -5.128899097442627
    8. '```' → logprob: -9.253899574279785
    9. '   ' → logprob: -10.253899574279785
    10. '           ' → logprob: -10.753899574279785

Token 2052: ' Now' (ID: 6549)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.435114324092865
    2. '#' → logprob: -1.8101143836975098
    3. '       ' → logprob: -1.8101143836975098
    4. 'def' → logprob: -4.56011438369751
    5. 'if' → logprob: -4.93511438369751
    6. 'from' → logprob: -5.18511438369751
    7. 'class' → logprob: -6.31011438369751
    8. '   ' → logprob: -8.435113906860352
    9. '           ' → logprob: -9.060113906860352
    10. ' return' → logprob: -10.435113906860352

Token 2053: ' we' (ID: 581)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1153331845998764
    2. '#' → logprob: -2.490333080291748
    3. 'return' → logprob: -4.490333080291748
    4. 'class' → logprob: -4.990333080291748
    5. 'def' → logprob: -6.490333080291748
    6. ' #' → logprob: -6.740333080291748
    7. ' return' → logprob: -6.740333080291748
    8. 'from' → logprob: -6.740333080291748
    9. 'if' → logprob: -6.865333080291748
    10. '           ' → logprob: -7.240333080291748

Token 2054: ' have' (ID: 679)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4918659031391144
    2. '   ' → logprob: -1.741865873336792
    3. '
' → logprob: -2.991865873336792
    4. 'def' → logprob: -2.991865873336792
    5. ' return' → logprob: -3.116865873336792
    6. 'return' → logprob: -3.491865873336792
    7. ':
' → logprob: -4.616866111755371
    8. 'class' → logprob: -4.991866111755371
    9. ' def' → logprob: -5.116866111755371
    10. 'import' → logprob: -5.616866111755371

Token 2055: ' a' (ID: 261)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0453025102615356
    2. 'def' → logprob: -1.6703025102615356
    3. '       ' → logprob: -1.7953025102615356
    4. 'expr' → logprob: -2.295302391052246
    5. 'return' → logprob: -2.545302391052246
    6. '           ' → logprob: -3.545302391052246
    7. 'len' → logprob: -3.670302391052246
    8. 'class' → logprob: -4.170302391052246
    9. 'from' → logprob: -4.170302391052246
    10. 'if' → logprob: -4.420302391052246

Token 2056: ' sequence' (ID: 16281)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2900109887123108
    2. 'def' → logprob: -1.665010929107666
    3. 'class' → logprob: -2.915010929107666
    4. 'Expression' → logprob: -5.415010929107666
    5. '#' → logprob: -6.290010929107666
    6. 'if' → logprob: -6.790010929107666
    7. 'final' → logprob: -8.290011405944824
    8. ' return' → logprob: -8.540011405944824
    9. 'special' → logprob: -9.790011405944824
    10. '   ' → logprob: -9.915011405944824

Token 2057: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7277765870094299
    2. 'of' → logprob: -0.9777765870094299
    3. ' of' → logprob: -2.602776527404785
    4. '#' → logprob: -3.477776527404785
    5. ':' → logprob: -4.227776527404785
    6. '           ' → logprob: -4.977776527404785
    7. 'class' → logprob: -5.602776527404785
    8. ',' → logprob: -5.852776527404785
    9. '[' → logprob: -6.477776527404785
    10. 'from' → logprob: -6.852776527404785

Token 2058: ' expr' (ID: 30206)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5334994792938232
    2. 'if' → logprob: -1.5334994792938232
    3. 'return' → logprob: -2.7834994792938232
    4. '       ' → logprob: -2.9084994792938232
    5. 'expr' → logprob: -3.1584994792938232
    6. '           ' → logprob: -4.908499717712402
    7. ' if' → logprob: -5.283499717712402
    8. ' #' → logprob: -5.408499717712402
    9. 'n' → logprob: -5.533499717712402
    10. '[' → logprob: -5.658499717712402

Token 2059: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.001853315974585712
    2. ',' → logprob: -7.1268534660339355
    3. '_list' → logprob: -7.6268534660339355
    4. '   ' → logprob: -8.626852989196777
    5. '```' → logprob: -9.501852989196777
    6. '       ' → logprob: -10.126852989196777
    7. '_tokens' → logprob: -10.376852989196777
    8. 'tokens' → logprob: -10.751852989196777
    9. ' =' → logprob: -11.001852989196777
    10. '
' → logprob: -11.126852989196777

Token 2060: '[' (ID: 58)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03192321956157684
    2. 'class' → logprob: -4.656923294067383
    3. 'and' → logprob: -5.156923294067383
    4. ' and' → logprob: -5.406923294067383
    5. '
' → logprob: -6.531923294067383
    6. '[' → logprob: -6.531923294067383
    7. 's' → logprob: -6.656923294067383
    8. '       ' → logprob: -6.656923294067383
    9. ',
' → logprob: -6.781923294067383
    10. '           ' → logprob: -7.406923294067383

Token 2061: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.38553571701049805
    2. ',' → logprob: -1.510535717010498
    3. '[' → logprob: -3.135535717010498
    4. ']' → logprob: -3.885535717010498
    5. '1' → logprob: -4.385535717010498
    6. ')' → logprob: -4.760535717010498
    7. '],' → logprob: -6.010535717010498
    8. '),' → logprob: -6.760535717010498
    9. '   ' → logprob: -6.885535717010498
    10. ' ,' → logprob: -7.010535717010498

Token 2062: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4554458260536194
    2. ',' → logprob: -1.7054457664489746
    3. '],' → logprob: -2.0804457664489746
    4. '
' → logprob: -3.5804457664489746
    5. '   ' → logprob: -4.580445766448975
    6. ' ,' → logprob: -4.955445766448975
    7. ']
' → logprob: -5.455445766448975
    8. 'if' → logprob: -6.330445766448975
    9. ']+' → logprob: -6.830445766448975
    10. '       ' → logprob: -6.955445766448975

Token 2063: ' ops' (ID: 26973)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.002553784754127264
    2. ' ops' → logprob: -6.127553939819336
    3. ''' → logprob: -9.502553939819336
    4. 'op' → logprob: -9.502553939819336
    5. '
' → logprob: -9.627553939819336
    6. '   ' → logprob: -10.252553939819336
    7. '       ' → logprob: -11.002553939819336
    8. ' ' → logprob: -11.127553939819336
    9. 'opts' → logprob: -11.627553939819336
    10. '.ops' → logprob: -11.752553939819336

Token 2064: '[' (ID: 58)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.056131020188331604
    2. ' =' → logprob: -3.43113112449646
    3. ' ,' → logprob: -6.056130886077881
    4. '<|end|>' → logprob: -6.056130886077881
    5. '   ' → logprob: -6.306130886077881
    6. 's' → logprob: -6.556130886077881
    7. '_tokens' → logprob: -6.806130886077881
    8. ':' → logprob: -6.806130886077881
    9. ',
' → logprob: -6.931130886077881
    10. '[],' → logprob: -6.931130886077881

Token 2065: '0' (ID: 15)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.9894317388534546
    2. '0' → logprob: -1.2394317388534546
    3. 'len' → logprob: -2.614431858062744
    4. ']' → logprob: -2.614431858062744
    5. '-' → logprob: -3.114431858062744
    6. '],' → logprob: -3.614431858062744
    7. ':]' → logprob: -3.614431858062744
    8. '...' → logprob: -3.739431858062744
    9. '...]' → logprob: -4.114431858062744
    10. ':' → logprob: -4.864431858062744

Token 2066: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.020244859158992767
    2. '],' → logprob: -4.39524507522583
    3. ']' → logprob: -4.89524507522583
    4. ' ,' → logprob: -9.020244598388672
    5. ',
' → logprob: -10.020244598388672
    6. '),' → logprob: -10.770244598388672
    7. '   ' → logprob: -11.520244598388672
    8. ')' → logprob: -12.145244598388672
    9. '
' → logprob: -12.270244598388672
    10. '',' → logprob: -13.145244598388672

Token 2067: ' expr' (ID: 30206)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.009014204144477844
    2. ' expr' → logprob: -4.759014129638672
    3. 'express' → logprob: -8.509014129638672
    4. '#' → logprob: -9.384014129638672
    5. 'ops' → logprob: -9.634014129638672
    6. '   ' → logprob: -11.884014129638672
    7. '```' → logprob: -12.384014129638672
    8. '
' → logprob: -12.634014129638672
    9. ' ops' → logprob: -12.634014129638672
    10. ' #' → logprob: -12.634014129638672

Token 2068: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00015181333583313972
    2. '   ' → logprob: -10.500151634216309
    3. '```' → logprob: -10.625151634216309
    4. '[' → logprob: -10.875151634216309
    5. ']' → logprob: -11.125151634216309
    6. '0' → logprob: -11.750151634216309
    7. '
' → logprob: -12.000151634216309
    8. '       ' → logprob: -12.125151634216309
    9. 'expr' → logprob: -12.125151634216309
    10. '1' → logprob: -12.250151634216309

Token 2069: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0008868030272424221
    2. '1' → logprob: -7.625886917114258
    3. 's' → logprob: -8.625886917114258
    4. ',' → logprob: -9.250886917114258
    5. '```' → logprob: -10.500886917114258
    6. '   ' → logprob: -11.125886917114258
    7. ']' → logprob: -11.375886917114258
    8. '][' → logprob: -11.750886917114258
    9. '#' → logprob: -11.875886917114258
    10. '[
' → logprob: -11.875886917114258

Token 2070: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.027225754223764e-05
    2. '0' → logprob: -10.875060081481934
    3. ']' → logprob: -10.875060081481934
    4. '...' → logprob: -11.500060081481934
    5. '...]' → logprob: -12.750060081481934
    6. '```' → logprob: -13.250060081481934
    7. '[' → logprob: -13.375060081481934
    8. '-' → logprob: -14.125060081481934
    9. '
' → logprob: -14.250060081481934
    10. ',' → logprob: -14.250060081481934

Token 2071: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3565269410610199
    2. ']' → logprob: -1.2315269708633423
    3. '],' → logprob: -5.231526851654053
    4. ')' → logprob: -7.231526851654053
    5. '...' → logprob: -7.731526851654053
    6. '])' → logprob: -8.231527328491211
    7. '       ' → logprob: -8.356527328491211
    8. ',
' → logprob: -8.856527328491211
    9. '#' → logprob: -8.856527328491211
    10. '.' → logprob: -8.981527328491211

Token 2072: ' ops' (ID: 26973)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.3755173683166504
    2. ' ops' → logprob: -1.2505173683166504
    3. '#' → logprob: -4.50051736831665
    4. ' #' → logprob: -5.12551736831665
    5. '...,' → logprob: -6.00051736831665
    6. ',' → logprob: -6.75051736831665
    7. '...' → logprob: -6.87551736831665
    8. '
' → logprob: -7.62551736831665
    9. '       ' → logprob: -7.62551736831665
    10. ''' → logprob: -7.87551736831665

Token 2073: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0001305950863752514
    2. '```' → logprob: -9.125130653381348
    3. '`' → logprob: -12.375130653381348
    4. '[
' → logprob: -12.500130653381348
    5. '0' → logprob: -12.750130653381348
    6. '   ' → logprob: -12.875130653381348
    7. '           ' → logprob: -13.875130653381348
    8. '<|end|>' → logprob: -14.000130653381348
    9. '       ' → logprob: -14.125130653381348
    10. '``' → logprob: -14.375130653381348

Token 2074: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.013185054063796997
    2. '[' → logprob: -4.388185024261475
    3. 'len' → logprob: -8.013185501098633
    4. '   ' → logprob: -9.513185501098633
    5. '```' → logprob: -9.763185501098633
    6. ' ' → logprob: -10.388185501098633
    7. '[
' → logprob: -10.763185501098633
    8. '][' → logprob: -10.763185501098633
    9. '
' → logprob: -11.013185501098633
    10. '``' → logprob: -11.263185501098633

Token 2075: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1446290910243988
    2. ']' → logprob: -2.3946290016174316
    3. '],' → logprob: -3.1446290016174316
    4. ',
' → logprob: -8.89462947845459
    5. '```' → logprob: -10.26962947845459
    6. '   ' → logprob: -10.39462947845459
    7. '...' → logprob: -10.51962947845459
    8. ']
' → logprob: -10.64462947845459
    9. '           ' → logprob: -11.01962947845459
    10. ' ,' → logprob: -11.26962947845459

Token 2076: ' expr' (ID: 30206)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.0989706814289093
    2. 'ops' → logprob: -2.848970651626587
    3. ' expr' → logprob: -4.348970890045166
    4. ' ops' → logprob: -4.598970890045166
    5. '#' → logprob: -4.723970890045166
    6. '```' → logprob: -6.598970890045166
    7. ' #' → logprob: -6.973970890045166
    8. 'express' → logprob: -7.098970890045166
    9. '``' → logprob: -7.848970890045166
    10. '       ' → logprob: -8.473970413208008

Token 2077: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0007292322698049247
    2. '[' → logprob: -7.750729084014893
    3. ']' → logprob: -9.12572956085205
    4. '   ' → logprob: -10.00072956085205
    5. '2' → logprob: -10.37572956085205
    6. '```' → logprob: -11.25072956085205
    7. '[
' → logprob: -11.25072956085205
    8. '
' → logprob: -11.75072956085205
    9. ',' → logprob: -11.87572956085205
    10. '[s' → logprob: -11.87572956085205

Token 2078: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02099796198308468
    2. ',' → logprob: -4.895998001098633
    3. '```' → logprob: -5.145998001098633
    4. ']' → logprob: -6.395998001098633
    5. '#' → logprob: -7.020998001098633
    6. '...' → logprob: -7.145998001098633
    7. '           ' → logprob: -7.270998001098633
    8. '][' → logprob: -7.520998001098633
    9. '   ' → logprob: -7.520998001098633
    10. '[
' → logprob: -7.645998001098633

Token 2079: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01665368862450123
    2. '1' → logprob: -4.891653537750244
    3. '-' → logprob: -5.891653537750244
    4. '[' → logprob: -6.141653537750244
    5. 'len' → logprob: -6.266653537750244
    6. ']' → logprob: -6.766653537750244
    7. '```' → logprob: -8.266654014587402
    8. '2' → logprob: -8.516654014587402
    9. '(len' → logprob: -9.391654014587402
    10. '[len' → logprob: -9.516654014587402

Token 2080: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.39016076922416687
    2. ',' → logprob: -1.1401607990264893
    3. '],' → logprob: -6.26516056060791
    4. '       ' → logprob: -7.89016056060791
    5. '   ' → logprob: -8.01516056060791
    6. ')' → logprob: -9.01516056060791
    7. ']
' → logprob: -9.39016056060791
    8. '           ' → logprob: -9.39016056060791
    9. ':' → logprob: -9.51516056060791
    10. '.' → logprob: -9.89016056060791

Token 2081: ' ...
' (ID: 12646)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29002419114112854
    2. ',' → logprob: -1.4150241613388062
    3. '
' → logprob: -5.540024280548096
    4. ',
' → logprob: -5.915024280548096
    5. '           ' → logprob: -7.165024280548096
    6. '        
' → logprob: -8.290023803710938
    7. '```' → logprob: -8.415023803710938
    8. '   ' → logprob: -8.665023803710938
    9. '#' → logprob: -8.665023803710938
    10. 'return' → logprob: -8.790023803710938

Token 2082: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.044706910848617554
    2. '
' → logprob: -3.4197068214416504
    3. ',' → logprob: -5.41970682144165
    4. '   ' → logprob: -6.04470682144165
    5. '[' → logprob: -7.29470682144165
    6. '           ' → logprob: -7.41970682144165
    7. ' ' → logprob: -7.91970682144165
    8. '```' → logprob: -7.91970682144165
    9. '#' → logprob: -8.169707298278809
    10. ',
' → logprob: -8.544707298278809

Token 2083: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001677675754763186
    2. 'if' → logprob: -6.751677513122559
    3. 'return' → logprob: -8.126677513122559
    4. '   ' → logprob: -9.751677513122559
    5. '```' → logprob: -10.001677513122559
    6. ' if' → logprob: -10.126677513122559
    7. 'class' → logprob: -10.626677513122559
    8. '           ' → logprob: -11.126677513122559
    9. '
' → logprob: -11.376677513122559
    10. 'def' → logprob: -11.501677513122559

Token 2084: ' Build' (ID: 10885)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04023490473628044
    2. 'class' → logprob: -4.1652350425720215
    3. 'def' → logprob: -4.9152350425720215
    4. 'if' → logprob: -5.0402350425720215
    5. 'return' → logprob: -5.5402350425720215
    6. '#' → logprob: -5.6652350425720215
    7. '   ' → logprob: -6.7902350425720215
    8. '
' → logprob: -7.2902350425720215
    9. '           ' → logprob: -7.4152350425720215
    10. 'from' → logprob: -8.540234565734863

Token 2085: ' a' (ID: 261)
  Prédit: 'Expression'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Expression' → logprob: -0.005749844945967197
    2. 'Binary' → logprob: -5.880749702453613
    3. ' Expression' → logprob: -6.630749702453613
    4. 'self' → logprob: -7.130749702453613
    5. 'return' → logprob: -8.255749702453613
    6. '   ' → logprob: -8.755749702453613
    7. '       ' → logprob: -8.755749702453613
    8. 'expression' → logprob: -9.255749702453613
    9. 'def' → logprob: -10.255749702453613
    10. '(Expression' → logprob: -10.630749702453613

Token 2086: ' Expression' (ID: 32496)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5773423314094543
    2. 'return' → logprob: -1.2023422718048096
    3. 'class' → logprob: -2.0773422718048096
    4. 'Expression' → logprob: -4.577342510223389
    5. 'new' → logprob: -7.702342510223389
    6. ' def' → logprob: -7.702342510223389
    7. 'Binary' → logprob: -7.952342510223389
    8. ' return' → logprob: -8.07734203338623
    9. 'set' → logprob: -8.20234203338623
    10. '#' → logprob: -8.82734203338623

Token 2087: 'With' (ID: 2886)
  Prédit: 'With'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'With' → logprob: -0.02932862937450409
    2. 'return' → logprob: -4.0293288230896
    3. 'with' → logprob: -6.0293288230896
    4. 's' → logprob: -6.4043288230896
    5. '_with' → logprob: -6.5293288230896
    6. '       ' → logprob: -6.5293288230896
    7. 'All' → logprob: -6.6543288230896
    8. 'class' → logprob: -6.9043288230896
    9. 'def' → logprob: -7.4043288230896
    10. '   ' → logprob: -7.6543288230896

Token 2088: 'Ops' (ID: 40217)
  Prédit: 'Ops'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Ops' → logprob: -0.0004873955331277102
    2. 'Op' → logprob: -8.125487327575684
    3. 'ops' → logprob: -9.750487327575684
    4. 's' → logprob: -9.875487327575684
    5. '_ops' → logprob: -10.000487327575684
    6. 'O' → logprob: -11.750487327575684
    7. ' Ops' → logprob: -12.500487327575684
    8. 'All' → logprob: -12.875487327575684
    9. '   ' → logprob: -13.000487327575684
    10. '(' → logprob: -13.000487327575684

Token 2089: ' node' (ID: 4596)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05617869272828102
    2. '
' → logprob: -3.6811788082122803
    3. 'class' → logprob: -3.8061788082122803
    4. 'return' → logprob: -5.306178569793701
    5. '   ' → logprob: -7.181178569793701
    6. '```' → logprob: -7.931178569793701
    7. '           ' → logprob: -8.68117904663086
    8. ' return' → logprob: -8.80617904663086
    9. '        
' → logprob: -9.30617904663086
    10. '[' → logprob: -9.30617904663086

Token 2090: ' that' (ID: 484)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1188083067536354
    2. '
' → logprob: -2.7438082695007324
    3. 'return' → logprob: -3.1188082695007324
    4. 'class' → logprob: -6.743808269500732
    5. ' return' → logprob: -7.243808269500732
    6. '   ' → logprob: -7.368808269500732
    7. '        
' → logprob: -8.49380874633789
    8. '           ' → logprob: -8.61880874633789
    9. '(' → logprob: -9.11880874633789
    10. '(return' → logprob: -9.24380874633789

Token 2091: ' captures' (ID: 62892)
  Prédit: 'supports'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'supports' → logprob: -0.8895062208175659
    2. 'return' → logprob: -1.264506220817566
    3. 'returns' → logprob: -2.0145063400268555
    4. 'rep' → logprob: -3.5145063400268555
    5. 'stores' → logprob: -3.7645063400268555
    6. ':' → logprob: -3.8895063400268555
    7. 'enc' → logprob: -4.2645063400268555
    8. 'is' → logprob: -4.5145063400268555
    9. '   ' → logprob: -4.6395063400268555
    10. '       ' → logprob: -4.8895063400268555

Token 2092: ' this' (ID: 495)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.0031773564405739307
    2. 'tokens' → logprob: -6.128177165985107
    3. 'Expression' → logprob: -7.878177165985107
    4. '           ' → logprob: -8.878177642822266
    5. 'ops' → logprob: -9.003177642822266
    6. '       ' → logprob: -9.253177642822266
    7. 'self' → logprob: -9.378177642822266
    8. 'express' → logprob: -10.003177642822266
    9. 'ts' → logprob: -10.253177642822266
    10. '   ' → logprob: -10.503177642822266

Token 2093: ' flat' (ID: 12508)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.39196649193763733
    2. '       ' → logprob: -1.141966462135315
    3. 'class' → logprob: -6.266966342926025
    4. ' return' → logprob: -6.391966342926025
    5. '
' → logprob: -7.266966342926025
    6. '           ' → logprob: -7.891966342926025
    7. '   ' → logprob: -8.391966819763184
    8. '(' → logprob: -10.016966819763184
    9. '```' → logprob: -10.141966819763184
    10. '(return' → logprob: -10.516966819763184

Token 2094: ' expression' (ID: 12973)
  Prédit: 'With'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'With' → logprob: -0.9486796855926514
    2. '_with' → logprob: -1.0736796855926514
    3. '_' → logprob: -1.9486796855926514
    4. '_tokens' → logprob: -2.9486796855926514
    5. 'with' → logprob: -4.5736799240112305
    6. '(tokens' → logprob: -5.1986799240112305
    7. '       ' → logprob: -5.3236799240112305
    8. '_ops' → logprob: -5.4486799240112305
    9. '_
' → logprob: -5.4486799240112305
    10. 'Tokens' → logprob: -5.4486799240112305

Token 2095: ' to' (ID: 316)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.11813496798276901
    2. '       ' → logprob: -2.3681349754333496
    3. 'class' → logprob: -4.86813497543335
    4. '(tokens' → logprob: -5.74313497543335
    5. '(' → logprob: -5.86813497543335
    6. '           ' → logprob: -6.24313497543335
    7. ' return' → logprob: -7.49313497543335
    8. '   ' → logprob: -7.61813497543335
    9. '(return' → logprob: -8.493134498596191
    10. ':return' → logprob: -8.743134498596191

Token 2096: ' compute' (ID: 23864)
  Prédit: 'support'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'support' → logprob: -0.5440419912338257
    2. 'handle' → logprob: -1.2940419912338257
    3. 'allow' → logprob: -2.4190421104431152
    4. 'evaluate' → logprob: -3.4190421104431152
    5. 'represent' → logprob: -4.794042110443115
    6. ' support' → logprob: -5.669042110443115
    7. 'enable' → logprob: -5.669042110443115
    8. 'store' → logprob: -6.419042110443115
    9. ' handle' → logprob: -6.669042110443115
    10. 'return' → logprob: -6.919042110443115

Token 2097: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.34027761220932007
    2. 'Expression' → logprob: -1.4652776718139648
    3. 'return' → logprob: -3.465277671813965
    4. 'All' → logprob: -5.340277671813965
    5. '```' → logprob: -5.590277671813965
    6. 'expr' → logprob: -5.965277671813965
    7. '_all' → logprob: -6.090277671813965
    8. 'ops' → logprob: -6.090277671813965
    9. 'tokens' → logprob: -6.090277671813965
    10. 'with' → logprob: -6.590277671813965

Token 2098: ' eval' (ID: 29383)
  Prédit: 'Ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Ways' → logprob: -0.2979348301887512
    2. 'ways' → logprob: -1.5479347705841064
    3. '_' → logprob: -3.6729347705841064
    4. '       ' → logprob: -5.4229350090026855
    5. ' ways' → logprob: -5.5479350090026855
    6. 'With' → logprob: -5.7979350090026855
    7. '   ' → logprob: -6.0479350090026855
    8. '_with' → logprob: -6.5479350090026855
    9. 's' → logprob: -7.1729350090026855
    10. '```' → logprob: -7.7979350090026855

Token 2099: ' orders' (ID: 12528)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5663506984710693
    2. 's' → logprob: -1.9413506984710693
    3. 'With' → logprob: -2.5663506984710693
    4. 'Ways' → logprob: -2.5663506984710693
    5. '       ' → logprob: -3.3163506984710693
    6. '   ' → logprob: -3.5663506984710693
    7. '_with' → logprob: -3.8163506984710693
    8. '_s' → logprob: -4.441350936889648
    9. 'ways' → logprob: -5.066350936889648
    10. ')' → logprob: -5.566350936889648

Token 2100: ' later' (ID: 4849)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0031470584217458963
    2. 'return' → logprob: -6.003147125244141
    3. '
' → logprob: -8.37814712524414
    4. 'class' → logprob: -8.75314712524414
    5. '```' → logprob: -9.12814712524414
    6. '           ' → logprob: -9.62814712524414
    7. ' return' → logprob: -10.00314712524414
    8. '   ' → logprob: -10.62814712524414
    9. ',' → logprob: -11.87814712524414
    10. ':' → logprob: -12.25314712524414

Token 2101: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004875315818935633
    2. 'return' → logprob: -5.504875183105469
    3. '
' → logprob: -8.379875183105469
    4. 'class' → logprob: -8.379875183105469
    5. '   ' → logprob: -9.004875183105469
    6. '```' → logprob: -9.129875183105469
    7. ' return' → logprob: -9.879875183105469
    8. '           ' → logprob: -10.129875183105469
    9. '`' → logprob: -12.754875183105469
    10. '               ' → logprob: -13.254875183105469

Token 2102: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004482223652303219
    2. '```' → logprob: -6.254482269287109
    3. 'return' → logprob: -7.004482269287109
    4. '
' → logprob: -7.629482269287109
    5. '           ' → logprob: -8.12948226928711
    6. '   ' → logprob: -8.12948226928711
    7. 'class' → logprob: -8.37948226928711
    8. ' return' → logprob: -8.75448226928711
    9. '``' → logprob: -10.00448226928711
    10. '(' → logprob: -10.12948226928711

Token 2103: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011422444134950638
    2. 'return' (adapté à ' return') → logprob: -4.511422634124756
    3. ' return' → logprob: -8.011422157287598
    4. 'class' → logprob: -11.261422157287598
    5. '   ' → logprob: -11.386422157287598
    6. '           ' → logprob: -11.761422157287598
    7. '```' → logprob: -11.761422157287598
    8. '`' → logprob: -14.511422157287598
    9. '        
' → logprob: -15.011422157287598
    10. '	' → logprob: -15.011422157287598

Token 2104: ' Expression' (ID: 32496)
  Prédit: 'Expression'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Expression' → logprob: -0.00675314012914896
    2. '(Expression' → logprob: -5.006752967834473
    3. ' Expression' → logprob: -10.506752967834473
    4. 'Expr' → logprob: -12.881752967834473
    5. '   ' → logprob: -13.256752967834473
    6. 'Express' → logprob: -13.381752967834473
    7. '(
' → logprob: -14.131752967834473
    8. '(' → logprob: -14.256752967834473
    9. 'expression' → logprob: -14.256752967834473
    10. '
' → logprob: -14.506752967834473

Token 2105: 'With' (ID: 2886)
  Prédit: 'With'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'With' → logprob: -1.6240566083070007e-06
    2. '_with' → logprob: -13.750001907348633
    3. '_With' → logprob: -14.875001907348633
    4. '(' → logprob: -17.000001907348633
    5. 'with' → logprob: -17.125001907348633
    6. '   ' → logprob: -17.375001907348633
    7. 'W' → logprob: -17.375001907348633
    8. 's' → logprob: -17.875001907348633
    9. '_WITH' → logprob: -18.000001907348633
    10. ' With' → logprob: -18.125001907348633

Token 2106: 'Ops' (ID: 40217)
  Prédit: 'Ops'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Ops' → logprob: -3.2020991056924686e-05
    2. 'Op' → logprob: -10.750032424926758
    3. '_ops' → logprob: -12.625032424926758
    4. '(' → logprob: -13.250032424926758
    5. 'ops' → logprob: -13.500032424926758
    6. 's' → logprob: -13.750032424926758
    7. 'Os' → logprob: -14.250032424926758
    8. 'O' → logprob: -14.375032424926758
    9. ' Ops' → logprob: -14.375032424926758
    10. 'Opts' → logprob: -15.375032424926758

Token 2107: '(expr' (ID: 78746)
  Prédit: '(expr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(expr' → logprob: -0.00458071893081069
    2. '(tokens' → logprob: -5.754580497741699
    3. '(' → logprob: -7.504580497741699
    4. ' (' → logprob: -7.879580497741699
    5. '(express' → logprob: -8.7545804977417
    6. '(None' → logprob: -9.5045804977417
    7. '(expression' → logprob: -9.5045804977417
    8. '(ts' → logprob: -10.1295804977417
    9. 'expr' → logprob: -10.1295804977417
    10. '(self' → logprob: -10.7545804977417

Token 2108: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.7432603272027336e-06
    2. '[s' → logprob: -14.750001907348633
    3. '   ' → logprob: -15.625001907348633
    4. '       ' → logprob: -15.750001907348633
    5. 'es' → logprob: -15.750001907348633
    6. ' s' → logprob: -16.125001907348633
    7. '[' → logprob: -16.125001907348633
    8. '(s' → logprob: -16.250001907348633
    9. '[]' → logprob: -16.375001907348633
    10. ')' → logprob: -16.375001907348633

Token 2109: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004738063144031912
    2. '[' → logprob: -9.000473976135254
    3. ' ,' → logprob: -9.125473976135254
    4. ',
' → logprob: -9.375473976135254
    5. '           ' → logprob: -9.875473976135254
    6. '       ' → logprob: -10.125473976135254
    7. '   ' → logprob: -10.250473976135254
    8. ',[' → logprob: -11.250473976135254
    9. '[],' → logprob: -12.500473976135254
    10. '```' → logprob: -13.000473976135254

Token 2110: ' ops' (ID: 26973)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' → logprob: -1.981667537620524e-06
    2. ' ops' → logprob: -13.250001907348633
    3. '   ' → logprob: -16.250001907348633
    4. '       ' → logprob: -17.750001907348633
    5. 'opts' → logprob: -18.250001907348633
    6. '           ' → logprob: -19.625001907348633
    7. ' ' → logprob: -19.875001907348633
    8. '.ops' → logprob: -20.250001907348633
    9. '
' → logprob: -20.625001907348633
    10. '     ' → logprob: -20.750001907348633

Token 2111: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7510882616043091
    2. '<|end|>' → logprob: -1.001088261604309
    3. ',' → logprob: -2.0010881423950195
    4. '<|end|>' → logprob: -4.3760881423950195
    5. '(' → logprob: -5.5010881423950195
    6. '   ' → logprob: -5.5010881423950195
    7. '       ' → logprob: -6.5010881423950195
    8. '),' → logprob: -7.3760881423950195
    9. '[' → logprob: -7.7510881423950195
    10. '(tokens' → logprob: -7.8760881423950195

Token 2112: ' pos' (ID: 1253)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.018461517989635468
    2. 'len' → logprob: -4.39346170425415
    3. 'pos' → logprob: -5.26846170425415
    4. ' end' → logprob: -7.51846170425415
    5. '   ' → logprob: -9.393461227416992
    6. 'start' → logprob: -9.518461227416992
    7. ' len' → logprob: -11.268461227416992
    8. ' pos' → logprob: -11.268461227416992
    9. '(end' → logprob: -11.643461227416992
    10. '       ' → logprob: -11.893461227416992

Token 2113: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8122677803039551
    2. '
' → logprob: -1.687267780303955
    3. ':' → logprob: -1.937267780303955
    4. 'class' → logprob: -2.187267780303955
    5. '```' → logprob: -2.937267780303955
    6. '(
' → logprob: -4.312267780303955
    7. ':
' → logprob: -4.312267780303955
    8. '(' → logprob: -4.437267780303955
    9. '    
' → logprob: -4.812267780303955
    10. '<|end|>' → logprob: -5.687267780303955

Token 2114: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.04287997633218765
    2. '
' → logprob: -3.542880058288574
    3. '   ' → logprob: -5.292880058288574
    4. ' class' → logprob: -5.917880058288574
    5. '```' → logprob: -6.042880058288574
    6. '    
' → logprob: -7.167880058288574
    7. ' 
' → logprob: -7.417880058288574
    8. 'from' → logprob: -7.417880058288574
    9. ':' → logprob: -8.542880058288574
    10. '+' → logprob: -9.167880058288574

Token 2115: ' Expression' (ID: 32496)
  Prédit: 'Expression'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Expression' → logprob: -0.0019316127290949225
    2. ' Expression' → logprob: -6.251931667327881
    3. '(Expression' → logprob: -13.751931190490723
    4. '_expression' → logprob: -14.501931190490723
    5. '
' → logprob: -14.876931190490723
    6. 'Expr' → logprob: -15.876931190490723
    7. 'Express' → logprob: -16.00193214416504
    8. '   ' → logprob: -16.25193214416504
    9. 'Expressions' → logprob: -16.25193214416504
    10. 'Binary' → logprob: -16.37693214416504

Token 2116: 'With' (ID: 2886)
  Prédit: 'With'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'With' → logprob: -6.630610641877865e-06
    2. '_with' → logprob: -12.375006675720215
    3. 'with' → logprob: -14.000006675720215
    4. '_With' → logprob: -14.625006675720215
    5. ' With' → logprob: -15.125006675720215
    6. '_WITH' → logprob: -15.375006675720215
    7. ':' → logprob: -15.625006675720215
    8. '(' → logprob: -16.3750057220459
    9. ' with' → logprob: -17.6250057220459
    10. '```' → logprob: -18.0000057220459

Token 2117: 'Ops' (ID: 40217)
  Prédit: 'Ops'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Ops' → logprob: -1.1472419600977446e-06
    2. 'Op' → logprob: -14.000000953674316
    3. ' Ops' → logprob: -16.000001907348633
    4. '_ops' → logprob: -16.375001907348633
    5. 'Opts' → logprob: -17.125001907348633
    6. 'ops' → logprob: -17.250001907348633
    7. '   ' → logprob: -18.250001907348633
    8. 'Oops' → logprob: -18.500001907348633
    9. '(' → logprob: -18.750001907348633
    10. '```' → logprob: -19.375001907348633

Token 2118: '(Expression' (ID: 120302)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.38984909653663635
    2. '(' → logprob: -1.389849066734314
    3. '(Expression' → logprob: -2.7648491859436035
    4. '(List' → logprob: -4.7648491859436035
    5. '(
' → logprob: -7.1398491859436035
    6. ':
' → logprob: -7.7648491859436035
    7. '(Exception' → logprob: -8.264848709106445
    8. '(object' → logprob: -9.014848709106445
    9. '```' → logprob: -9.389848709106445
    10. '   ' → logprob: -9.514848709106445

Token 2119: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5322483777999878
    2. '):
' → logprob: -0.9072483777999878
    3. ':' → logprob: -5.157248497009277
    4. '   ' → logprob: -6.407248497009277
    5. ':
' → logprob: -6.532248497009277
    6. '):
' → logprob: -9.032248497009277
    7. ')' → logprob: -11.032248497009277
    8. ',' → logprob: -11.157248497009277
    9. '(' → logprob: -11.157248497009277
    10. '```' → logprob: -11.157248497009277

Token 2120: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004898841143585742
    2. 'def' → logprob: -7.875489711761475
    3. ' def' → logprob: -10.125490188598633
    4. '```' → logprob: -10.750490188598633
    5. '	def' → logprob: -11.500490188598633
    6. ':' → logprob: -12.000490188598633
    7. '    ' → logprob: -12.000490188598633
    8. '(' → logprob: -12.125490188598633
    9. '    
' → logprob: -12.375490188598633
    10. ')' → logprob: -12.875490188598633

Token 2121: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.07148431241512299
    2. '   ' → logprob: -2.821484327316284
    3. ' def' → logprob: -4.696484088897705
    4. '```' → logprob: -8.321484565734863
    5. '	def' → logprob: -9.946484565734863
    6. 'class' → logprob: -10.696484565734863
    7. 'from' → logprob: -11.321484565734863
    8. '__' → logprob: -11.321484565734863
    9. ' ' → logprob: -13.446484565734863
    10. 'tokens' → logprob: -14.196484565734863

Token 2122: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00019483851792756468
    2. ' __' → logprob: -9.375194549560547
    3. '```' → logprob: -9.875194549560547
    4. 'init' → logprob: -10.125194549560547
    5. 'def' → logprob: -11.625194549560547
    6. '.__' → logprob: -12.625194549560547
    7. 'python' → logprob: -13.375194549560547
    8. '___' → logprob: -13.750194549560547
    9. '_init' → logprob: -13.750194549560547
    10. '
' → logprob: -14.000194549560547

Token 2123: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.00021784115233458579
    2. '_init' → logprob: -8.50021743774414
    3. '__' → logprob: -11.37521743774414
    4. 'def' → logprob: -14.00021743774414
    5. '(init' → logprob: -14.00021743774414
    6. '```' → logprob: -14.25021743774414
    7. ' init' → logprob: -15.12521743774414
    8. '.init' → logprob: -16.12521743774414
    9. 'class' → logprob: -17.12521743774414
    10. ' __' → logprob: -17.37521743774414

Token 2124: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.018171481788158417
    2. '__(' → logprob: -4.018171310424805
    3. ' (' → logprob: -11.393171310424805
    4. '__(
' → logprob: -12.393171310424805
    5. 'self' → logprob: -12.768171310424805
    6. '   ' → logprob: -13.643171310424805
    7. '_(' → logprob: -14.268171310424805
    8. '(' → logprob: -14.518171310424805
    9. '__' → logprob: -15.018171310424805
    10. '```' → logprob: -15.768171310424805

Token 2125: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.008129963040119e-06
    2. ' self' → logprob: -12.625003814697266
    3. '   ' → logprob: -15.250003814697266
    4. '       ' → logprob: -15.250003814697266
    5. '(self' → logprob: -16.750003814697266
    6. '	self' → logprob: -18.250003814697266
    7. '
' → logprob: -20.000003814697266
    8. ' ' → logprob: -21.000003814697266
    9. ',' → logprob: -22.250003814697266
    10. '    ' → logprob: -22.375003814697266

Token 2126: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.000741134281270206
    2. 'self' → logprob: -7.750741004943848
    3. ' (' → logprob: -8.250741004943848
    4. '       ' → logprob: -10.875741004943848
    5. '   ' → logprob: -11.250741004943848
    6. ',' → logprob: -11.500741004943848
    7. '(' → logprob: -13.000741004943848
    8. '__(' → logprob: -13.125741004943848
    9. ' self' → logprob: -13.875741004943848
    10. '(
' → logprob: -13.875741004943848

Token 2127: ' expr' (ID: 30206)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.023593787103891373
    2. 'express' → logprob: -3.7735939025878906
    3. 'oper' → logprob: -9.02359390258789
    4. ' expr' → logprob: -9.27359390258789
    5. '   ' → logprob: -9.64859390258789
    6. 'self' → logprob: -10.27359390258789
    7. 'args' → logprob: -11.64859390258789
    8. 'left' → logprob: -11.89859390258789
    9. 'nodes' → logprob: -12.64859390258789
    10. 'terms' → logprob: -13.27359390258789

Token 2128: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0005244385101832449
    2. '_list' → logprob: -8.000524520874023
    3. ',' → logprob: -9.375524520874023
    4. 'List' → logprob: -9.625524520874023
    5. '   ' → logprob: -10.875524520874023
    6. 'list' → logprob: -11.625524520874023
    7. 'es' → logprob: -13.250524520874023
    8. ' s' → logprob: -13.250524520874023
    9. '       ' → logprob: -13.875524520874023
    10. '
' → logprob: -14.000524520874023

Token 2129: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6935814023017883
    2. ':' → logprob: -0.6935814023017883
    3. ' ,' → logprob: -8.193581581115723
    4. ' :' → logprob: -9.443581581115723
    5. '   ' → logprob: -9.818581581115723
    6. ',List' → logprob: -12.068581581115723
    7. ':list' → logprob: -12.693581581115723
    8. '[],' → logprob: -13.193581581115723
    9. '=' → logprob: -13.193581581115723
    10. '[List' → logprob: -13.318581581115723

Token 2130: ' Union' (ID: 14746)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.00043519894825294614
    2. ' List' → logprob: -8.000434875488281
    3. 'Union' → logprob: -9.500434875488281
    4. 'Optional' → logprob: -10.750434875488281
    5. 'list' → logprob: -13.000434875488281
    6. '   ' → logprob: -14.375434875488281
    7. ',' → logprob: -15.250434875488281
    8. ' Union' → logprob: -15.625434875488281
    9. '[List' → logprob: -16.37543487548828
    10. ',List' → logprob: -16.87543487548828

Token 2131: '[List' (ID: 113982)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.3136739134788513
    2. '[List' → logprob: -1.313673973083496
    3. ',List' → logprob: -8.438673973083496
    4. ',' → logprob: -9.563673973083496
    5. '   ' → logprob: -9.688673973083496
    6. ' List' → logprob: -10.063673973083496
    7. '
' → logprob: -12.188673973083496
    8. '(List' → logprob: -12.313673973083496
    9. '	List' → logprob: -12.688673973083496
    10. '[' → logprob: -13.063673973083496

Token 2132: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.370294846012257e-05
    2. ',' → logprob: -10.375043869018555
    3. 'Expression' → logprob: -12.000043869018555
    4. '[
' → logprob: -12.625043869018555
    5. '[int' → logprob: -13.750043869018555
    6. ' [' → logprob: -14.750043869018555
    7. ',[' → logprob: -15.375043869018555
    8. ']' → logprob: -15.500043869018555
    9. '(Expression' → logprob: -15.750043869018555
    10. '   ' → logprob: -15.875043869018555

Token 2133: 'Expression' (ID: 12633)
  Prédit: 'Expression'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Expression' → logprob: -0.0002497767563909292
    2. 'Union' → logprob: -8.875249862670898
    3. '[' → logprob: -9.125249862670898
    4. '(Expression' → logprob: -14.875249862670898
    5. ' Expression' → logprob: -16.0002498626709
    6. '   ' → logprob: -16.5002498626709
    7. 'Expr' → logprob: -16.8752498626709
    8. 'Express' → logprob: -17.1252498626709
    9. '.Expression' → logprob: -17.1252498626709
    10. '['' → logprob: -17.2502498626709

Token 2134: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0048690419644117355
    2. '],' → logprob: -5.379868984222412
    3. ',int' → logprob: -9.12986946105957
    4. ',None' → logprob: -9.75486946105957
    5. ',str' → logprob: -10.62986946105957
    6. ' ,' → logprob: -11.12986946105957
    7. ',[' → logprob: -11.37986946105957
    8. '[,' → logprob: -12.25486946105957
    9. ',bool' → logprob: -12.37986946105957
    10. ',List' → logprob: -12.62986946105957

Token 2135: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.010334382764995098
    2. 'None' → logprob: -5.260334491729736
    3. 'Optional' → logprob: -5.885334491729736
    4. 'str' → logprob: -6.385334491729736
    5. ' List' → logprob: -7.885334491729736
    6. 'Tuple' → logprob: -9.010334014892578
    7. 'list' → logprob: -9.760334014892578
    8. '   ' → logprob: -11.260334014892578
    9. 'int' → logprob: -11.260334014892578
    10. 'Union' → logprob: -11.260334014892578

Token 2136: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.27036240696907043
    2. '[int' → logprob: -1.520362377166748
    3. ',' → logprob: -4.395362377166748
    4. ',int' → logprob: -5.770362377166748
    5. 'Expression' → logprob: -7.145362377166748
    6. '])' → logprob: -7.395362377166748
    7. ']' → logprob: -7.645362377166748
    8. '[str' → logprob: -8.520362854003906
    9. 'int' → logprob: -8.770362854003906
    10. '[Any' → logprob: -9.270362854003906

Token 2137: 'Union' (ID: 39222)
  Prédit: 'Union'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Union' → logprob: -0.13766101002693176
    2. 'str' → logprob: -2.1376609802246094
    3. '[str' → logprob: -5.512660980224609
    4. '[' → logprob: -5.762660980224609
    5. 'int' → logprob: -5.887660980224609
    6. '[int' → logprob: -8.01266098022461
    7. 'Str' → logprob: -9.26266098022461
    8. 'union' → logprob: -9.38766098022461
    9. 'object' → logprob: -10.01266098022461
    10. ' Union' → logprob: -10.26266098022461

Token 2138: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.7729494571685791
    2. 'int' → logprob: -1.022949457168579
    3. 'Expression' → logprob: -1.897949457168579
    4. '[' → logprob: -3.647949457168579
    5. 'Number' → logprob: -6.02294921875
    6. 'Union' → logprob: -9.14794921875
    7. 'Expr' → logprob: -9.14794921875
    8. '[str' → logprob: -10.27294921875
    9. '(Expression' → logprob: -10.64794921875
    10. ' int' → logprob: -11.02294921875

Token 2139: ',str' (ID: 95110)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007535886950790882
    2. ']])' → logprob: -5.757535934448242
    3. ']],' → logprob: -6.632535934448242
    4. ']]' → logprob: -6.757535934448242
    5. ',str' → logprob: -6.882535934448242
    6. ',None' → logprob: -8.382535934448242
    7. ',int' → logprob: -8.507535934448242
    8. ']]]' → logprob: -9.132535934448242
    9. ',List' → logprob: -9.257535934448242
    10. ' ,' → logprob: -9.882535934448242

Token 2140: ']]' (ID: 8928)
  Prédit: ']])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']])' → logprob: -0.39782294631004333
    2. ']]' → logprob: -1.3978229761123657
    3. '],' → logprob: -2.897822856903076
    4. ']],' → logprob: -3.897822856903076
    5. ']]]' → logprob: -6.022822856903076
    6. ']' → logprob: -6.772822856903076
    7. ']]:
' → logprob: -6.897822856903076
    8. ']])
' → logprob: -8.272823333740234
    9. '])]' → logprob: -8.522823333740234
    10. ',' → logprob: -8.522823333740234

Token 2141: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013635702198371291
    2. '],' → logprob: -6.876363754272461
    3. ' ,' → logprob: -9.251363754272461
    4. ',
' → logprob: -9.751363754272461
    5. '   ' → logprob: -9.751363754272461
    6. '])' → logprob: -10.751363754272461
    7. '       ' → logprob: -11.001363754272461
    8. ']):
' → logprob: -11.126363754272461
    9. ',List' → logprob: -11.376363754272461
    10. ']=' → logprob: -11.626363754272461

Token 2142: ' ops' (ID: 26973)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.024019835516810417
    2. ' ops' → logprob: -3.774019718170166
    3. '       ' → logprob: -8.149020195007324
    4. '   ' → logprob: -8.399020195007324
    5. '        ' → logprob: -9.524020195007324
    6. '    ' → logprob: -9.899020195007324
    7. '      ' → logprob: -10.524020195007324
    8. '     ' → logprob: -10.649020195007324
    9. '         ' → logprob: -10.899020195007324
    10. '           ' → logprob: -11.024020195007324

Token 2143: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001272854395210743
    2. '=' → logprob: -6.751272678375244
    3. '=None' → logprob: -9.251273155212402
    4. ' =' → logprob: -13.251273155212402
    5. '):' → logprob: -13.501273155212402
    6. '   ' → logprob: -13.751273155212402
    7. ' :' → logprob: -14.251273155212402
    8. '):
' → logprob: -15.001273155212402
    9. ')' → logprob: -15.251273155212402
    10. '=[]' → logprob: -15.501273155212402

Token 2144: ' Optional' (ID: 19351)
  Prédit: 'Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Optional' → logprob: -0.010125061497092247
    2. 'Union' → logprob: -4.760125160217285
    3. 'List' → logprob: -6.510125160217285
    4. ' Optional' → logprob: -11.260125160217285
    5. 'None' → logprob: -12.010125160217285
    6. 'optional' → logprob: -14.510125160217285
    7. 'list' → logprob: -14.635125160217285
    8. ' Union' → logprob: -14.885125160217285
    9. '(Optional' → logprob: -15.135125160217285
    10. '   ' → logprob: -15.135125160217285

Token 2145: '[List' (ID: 113982)
  Prédit: '[List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[List' → logprob: -3.953082341467962e-05
    2. '=' → logprob: -10.500039100646973
    3. 'List' → logprob: -11.750039100646973
    4. '[' → logprob: -13.250039100646973
    5. ' =' → logprob: -13.750039100646973
    6. ':' → logprob: -14.500039100646973
    7. '[list' → logprob: -15.125039100646973
    8. '[
' → logprob: -15.375039100646973
    9. '=None' → logprob: -16.62504005432129
    10. '(List' → logprob: -17.12504005432129

Token 2146: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -6.869017852295656e-06
    2. 'str' → logprob: -12.250006675720215
    3. '[' → logprob: -13.875006675720215
    4. '=str' → logprob: -14.000006675720215
    5. ' =' → logprob: -16.12500762939453
    6. ']' → logprob: -16.87500762939453
    7. ')' → logprob: -17.75000762939453
    8. '=' → logprob: -17.75000762939453
    9. '[int' → logprob: -17.75000762939453
    10. '[
' → logprob: -17.87500762939453

Token 2147: ']]' (ID: 8928)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05320627987384796
    2. ']=' → logprob: -3.053206205368042
    3. ']]' → logprob: -5.928206443786621
    4. '])' → logprob: -6.303206443786621
    5. ']|' → logprob: -10.303206443786621
    6. ']==' → logprob: -10.428206443786621
    7. ']]=' → logprob: -11.053206443786621
    8. ']?' → logprob: -11.178206443786621
    9. '[' → logprob: -11.803206443786621
    10. '=' → logprob: -13.053206443786621

Token 2148: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6964974999427795
    2. '=None' → logprob: -0.6964974999427795
    3. ' =' → logprob: -6.196497440338135
    4. ')' → logprob: -6.821497440338135
    5. '):
' → logprob: -8.821497917175293
    6. ')=' → logprob: -9.821497917175293
    7. '):' → logprob: -11.696497917175293
    8. ':' → logprob: -12.821497917175293
    9. '=False' → logprob: -13.696497917175293
    10. '=
' → logprob: -13.946497917175293

Token 2149: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -1.0325924449716695e-05
    2. ' None' → logprob: -11.50001049041748
    3. '   ' → logprob: -16.625009536743164
    4. '=None' → logprob: -18.000009536743164
    5. '(None' → logprob: -19.125009536743164
    6. '_None' → logprob: -19.250009536743164
    7. ',None' → logprob: -20.125009536743164
    8. '
' → logprob: -20.125009536743164
    9. 'No' → logprob: -20.250009536743164
    10. '...' → logprob: -20.500009536743164

Token 2150: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.07584968954324722
    2. '):' → logprob: -3.075849771499634
    3. ')' → logprob: -4.575849533081055
    4. '=None' → logprob: -4.575849533081055
    5. '=' → logprob: -5.200849533081055
    6. '   ' → logprob: -7.700849533081055
    7. ')=' → logprob: -8.575849533081055
    8. ':' → logprob: -9.700849533081055
    9. '):
' → logprob: -10.200849533081055
    10. ' =' → logprob: -10.700849533081055

Token 2151: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.035311851650476456
    2. 'if' → logprob: -3.7853119373321533
    3. '   ' → logprob: -4.785311698913574
    4. 'self' → logprob: -5.910311698913574
    5. ' if' → logprob: -7.410311698913574
    6. 'def' → logprob: -8.535311698913574
    7. 'If' → logprob: -10.410311698913574
    8. '```' → logprob: -11.035311698913574
    9. '	' → logprob: -11.160311698913574
    10. ' self' → logprob: -11.160311698913574

Token 2152: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.48558250069618225
    2. 'self' → logprob: -0.9855824708938599
    3. '       ' → logprob: -4.48558235168457
    4. ' if' → logprob: -8.86058235168457
    5. ' self' → logprob: -10.86058235168457
    6. '   ' → logprob: -11.98558235168457
    7. '#' (adapté à ' #') → logprob: -14.36058235168457
    8. '(self' → logprob: -15.11058235168457
    9. 'super' → logprob: -15.23558235168457
    10. '	if' → logprob: -15.86058235168457

Token 2153: ' expr' (ID: 30206)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.049523767083883286
    2. 'self' → logprob: -3.0495238304138184
    3. '       ' → logprob: -7.299523830413818
    4. 'super' → logprob: -8.29952335357666
    5. '#' → logprob: -12.17452335357666
    6. ' if' → logprob: -12.54952335357666
    7. 'from' → logprob: -13.42452335357666
    8. 'assert' → logprob: -14.79952335357666
    9. '   ' → logprob: -15.29952335357666
    10. 'import' → logprob: -15.54952335357666

Token 2154: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -7.465036105713807e-06
    2. 'essions' → logprob: -13.125007629394531
    3. '_list' → logprob: -13.875007629394531
    4. 'ss' → logprob: -14.125007629394531
    5. '   ' → logprob: -14.625007629394531
    6. '```' → logprob: -14.625007629394531
    7. 'pressions' → logprob: -15.000007629394531
    8. '
' → logprob: -15.000007629394531
    9. 'expr' → logprob: -15.375007629394531
    10. '       ' → logprob: -15.500007629394531

Token 2155: ' can' (ID: 665)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4195420444011688
    2. ' =' → logprob: -1.5445420742034912
    3. ':' → logprob: -2.169542074203491
    4. ',' → logprob: -5.169541835784912
    5. '=[]' → logprob: -6.044541835784912
    6. ')' → logprob: -6.294541835784912
    7. '=None' → logprob: -6.794541835784912
    8. '=[' → logprob: -7.294541835784912
    9. '   ' → logprob: -7.419541835784912
    10. '[' → logprob: -7.544541835784912

Token 2156: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.022227687761187553
    2. 'be' → logprob: -4.397227764129639
    3. 'List' → logprob: -4.897227764129639
    4. 'Union' → logprob: -6.647227764129639
    5. '[List' → logprob: -8.02222728729248
    6. ' List' → logprob: -8.14722728729248
    7. ' Union' → logprob: -8.89722728729248
    8. '[
' → logprob: -9.27222728729248
    9. '[' → logprob: -10.89722728729248
    10. 'Be' → logprob: -11.39722728729248

Token 2157: ' either' (ID: 4784)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.004915296565741301
    2. '[List' → logprob: -5.754915237426758
    3. 'list' → logprob: -6.879915237426758
    4. ' List' → logprob: -7.504915237426758
    5. 'a' → logprob: -9.004915237426758
    6. '(List' → logprob: -12.004915237426758
    7. 'Union' → logprob: -12.129915237426758
    8. '[
' → logprob: -12.629915237426758
    9. '
' → logprob: -12.754915237426758
    10. '   ' → logprob: -12.879915237426758

Token 2158: ':
' (ID: 734)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.013697158545255661
    2. '[List' → logprob: -4.513697147369385
    3. ' List' → logprob: -6.513697147369385
    4. 'list' → logprob: -7.138697147369385
    5. 'tokens' → logprob: -8.638697624206543
    6. '[
' → logprob: -9.763697624206543
    7. '[' → logprob: -10.013697624206543
    8. '[int' → logprob: -11.263697624206543
    9. '(List' → logprob: -11.638697624206543
    10. 'a' → logprob: -11.763697624206543

Token 2159: '       ' (ID: 309)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.7414419651031494
    2. 'expr' → logprob: -1.2414419651031494
    3. '[List' → logprob: -1.6164419651031494
    4. '[' → logprob: -3.8664419651031494
    5. '       ' → logprob: -5.11644172668457
    6. ' List' → logprob: -5.86644172668457
    7. '[
' → logprob: -5.99144172668457
    8. '(List' → logprob: -7.11644172668457
    9. '(expr' → logprob: -7.36644172668457
    10. '   ' → logprob: -7.49144172668457

Token 2160: ' #' (ID: 1069)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.14667338132858276
    2. 'expr' → logprob: -2.1466734409332275
    3. '[List' → logprob: -4.771673202514648
    4. ' List' → logprob: -5.396673202514648
    5. '       ' → logprob: -6.021673202514648
    6. '[' → logprob: -6.271673202514648
    7. '[
' → logprob: -7.396673202514648
    8. 'list' → logprob: -7.771673202514648
    9. ' expr' → logprob: -7.896673202514648
    10. '           ' → logprob: -8.396673202514648

Token 2161: ' -' (ID: 533)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.024579603224992752
    2. ' List' → logprob: -4.3995795249938965
    3. '[List' → logprob: -5.3995795249938965
    4. 'list' → logprob: -5.7745795249938965
    5. '[' → logprob: -6.3995795249938965
    6. '[
' → logprob: -6.7745795249938965
    7. ' list' → logprob: -7.1495795249938965
    8. 'expr' → logprob: -8.274580001831055
    9. 'Expression' → logprob: -9.399580001831055
    10. '   ' → logprob: -9.649580001831055

Token 2162: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.003240101272240281
    2. ' List' → logprob: -6.37824010848999
    3. '[List' → logprob: -7.00324010848999
    4. 'list' → logprob: -8.378239631652832
    5. 'expr' → logprob: -8.628239631652832
    6. 'tokens' → logprob: -9.503239631652832
    7. 'Expression' → logprob: -9.878239631652832
    8. '
' → logprob: -11.503239631652832
    9. 'If' → logprob: -11.503239631652832
    10. '[' → logprob: -11.753239631652832

Token 2163: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0022956132888793945
    2. '[int' → logprob: -6.25229549407959
    3. 'of' → logprob: -8.37729549407959
    4. 'Expression' → logprob: -9.75229549407959
    5. '[
' → logprob: -10.37729549407959
    6. ' of' → logprob: -10.75229549407959
    7. '(Expression' → logprob: -11.50229549407959
    8. 'Of' → logprob: -12.87729549407959
    9. '[Any' → logprob: -13.37729549407959
    10. '
' → logprob: -13.62729549407959

Token 2164: 'Expression' (ID: 12633)
  Prédit: 'Expression'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Expression' → logprob: -4.167648876318708e-05
    2. 'Union' → logprob: -10.250041961669922
    3. 'int' → logprob: -12.625041961669922
    4. 'Number' → logprob: -13.750041961669922
    5. '[' → logprob: -13.875041961669922
    6. '(Expression' → logprob: -14.875041961669922
    7. ' Expression' → logprob: -15.875041961669922
    8. '   ' → logprob: -16.250041961669922
    9. '[int' → logprob: -16.250041961669922
    10. 'Express' → logprob: -16.750041961669922

Token 2165: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007125119213014841
    2. ',' → logprob: -6.382124900817871
    3. ']:' → logprob: -6.632124900817871
    4. '[' → logprob: -6.757124900817871
    5. '],' → logprob: -7.007124900817871
    6. ')' → logprob: -7.382124900817871
    7. ']>' → logprob: -8.382124900817871
    8. '[
' → logprob: -8.757124900817871
    9. ')]' → logprob: -8.757124900817871
    10. ' or' → logprob: -8.882124900817871

Token 2166: ' plus' (ID: 2932)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.29974883794784546
    2. ')' → logprob: -1.7997488975524902
    3. ' if' → logprob: -3.4247488975524902
    4. ']' → logprob: -3.6747488975524902
    5. 'if' → logprob: -4.54974889755249
    6. '[' → logprob: -4.67474889755249
    7. ' or' → logprob: -4.92474889755249
    8. '       ' → logprob: -6.04974889755249
    9. ',
' → logprob: -6.79974889755249
    10. '<|end|>' → logprob: -7.29974889755249

Token 2167: ' ops' (ID: 26973)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.004444243386387825
    2. '(' → logprob: -6.879444122314453
    3. 'Optional' → logprob: -7.254444122314453
    4. '(
' → logprob: -7.754444122314453
    5. '(Optional' → logprob: -7.754444122314453
    6. 'None' → logprob: -7.879444122314453
    7. '(None' → logprob: -8.129444122314453
    8. 'List' → logprob: -8.754444122314453
    9. ' ops' → logprob: -8.754444122314453
    10. ' (' → logprob: -9.004444122314453

Token 2168: ' list' (ID: 1562)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.43301764130592346
    2. ' or' → logprob: -2.0580177307128906
    3. ')' → logprob: -2.3080177307128906
    4. 'if' → logprob: -2.6830177307128906
    5. ',' → logprob: -3.9330177307128906
    6. '<|end|>' → logprob: -4.308017730712891
    7. 'or' → logprob: -5.433017730712891
    8. ']' → logprob: -5.808017730712891
    9. '=' → logprob: -5.808017730712891
    10. '       ' → logprob: -5.933017730712891

Token 2169: '
' (ID: 198)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.36637482047080994
    2. ',' → logprob: -1.4913748502731323
    3. 'if' → logprob: -3.3663747310638428
    4. ' or' → logprob: -4.366374969482422
    5. ')' → logprob: -4.491374969482422
    6. '       ' → logprob: -4.616374969482422
    7. ',
' → logprob: -4.866374969482422
    8. '=' → logprob: -6.991374969482422
    9. ' (' → logprob: -6.991374969482422
    10. '
' → logprob: -7.366374969482422

Token 2170: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0371261835098267
    2. ',' → logprob: -1.5371261835098267
    3. ' if' → logprob: -1.9121261835098267
    4. ',
' → logprob: -2.662126064300537
    5. ' or' → logprob: -2.912126064300537
    6. '[' → logprob: -3.162126064300537
    7. ':' → logprob: -3.412126064300537
    8. 'if' → logprob: -3.412126064300537
    9. '
' → logprob: -4.787126064300537
    10. ':
' → logprob: -4.912126064300537

Token 2171: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2534649968147278
    2. 'if' → logprob: -2.378464937210083
    3. '       ' → logprob: -2.628464937210083
    4. ' or' → logprob: -3.128464937210083
    5. ')' → logprob: -5.753465175628662
    6. '```' → logprob: -6.003465175628662
    7. ':' → logprob: -6.378465175628662
    8. '           ' → logprob: -6.503465175628662
    9. '
' → logprob: -7.003465175628662
    10. ',' → logprob: -7.003465175628662

Token 2172: ' or' (ID: 503)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0238982439041138
    2. '):
' → logprob: -1.0238982439041138
    3. ')' → logprob: -2.398898124694824
    4. 'ops' → logprob: -3.523898124694824
    5. '       ' → logprob: -3.648898124694824
    6. '   ' → logprob: -3.898898124694824
    7. '=' → logprob: -4.273898124694824
    8. '):' → logprob: -4.523898124694824
    9. ',
' → logprob: -4.523898124694824
    10. 'if' → logprob: -4.773898124694824

Token 2173: '
' (ID: 198)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.013205762021243572
    2. 'tokens' → logprob: -4.888205528259277
    3. ' List' → logprob: -6.513205528259277
    4. '#' → logprob: -6.638205528259277
    5. '       ' → logprob: -7.013205528259277
    6. 'expr' → logprob: -7.138205528259277
    7. '
' → logprob: -7.888205528259277
    8. '[List' → logprob: -8.263205528259277
    9. '[' → logprob: -9.013205528259277
    10. '(List' → logprob: -9.513205528259277

Token 2174: '       ' (ID: 309)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.05123811960220337
    2. '       ' → logprob: -3.8012380599975586
    3. 'tokens' → logprob: -3.8012380599975586
    4. ' List' → logprob: -5.926238059997559
    5. 'Union' → logprob: -6.801238059997559
    6. '[' → logprob: -7.926238059997559
    7. '#' → logprob: -8.176238059997559
    8. ' tokens' → logprob: -8.176238059997559
    9. '[List' → logprob: -8.551238059997559
    10. 'expr' → logprob: -8.926238059997559

Token 2175: ' #' (ID: 1069)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.009780172258615494
    2. 'tokens' → logprob: -4.884780406951904
    3. '       ' → logprob: -7.009780406951904
    4. '#' (adapté à ' #') → logprob: -7.509780406951904
    5. 'Union' → logprob: -8.509779930114746
    6. 'None' → logprob: -9.009779930114746
    7. ' List' → logprob: -9.009779930114746
    8. '
' → logprob: -9.759779930114746
    9. 'expr' → logprob: -10.009779930114746
    10. '[' → logprob: -10.509779930114746

Token 2176: ' -' (ID: 533)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.06355085968971252
    2. 'tokens' → logprob: -2.8135509490966797
    3. 'None' → logprob: -7.68855094909668
    4. 'is' → logprob: -8.31355094909668
    5. '#' → logprob: -8.31355094909668
    6. 'expr' → logprob: -8.68855094909668
    7. '       ' → logprob: -9.56355094909668
    8. 'list' → logprob: -9.56355094909668
    9. ' List' → logprob: -9.68855094909668
    10. '
' → logprob: -9.68855094909668

Token 2177: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.0628647580742836
    2. 'tokens' → logprob: -2.9378647804260254
    3. 'list' → logprob: -5.062864780426025
    4. '[List' → logprob: -7.562864780426025
    5. 'expr' → logprob: -8.437864303588867
    6. 'Union' → logprob: -8.562864303588867
    7. ' List' → logprob: -8.812864303588867
    8. '[' → logprob: -8.812864303588867
    9. '#' → logprob: -9.562864303588867
    10. ' tokens' → logprob: -9.562864303588867

Token 2178: ' of' (ID: 328)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.38706713914871216
    2. '[int' → logprob: -1.1370670795440674
    3. 'int' → logprob: -9.637066841125488
    4. '[
' → logprob: -10.012066841125488
    5. ')' → logprob: -11.137066841125488
    6. '[str' → logprob: -11.262066841125488
    7. '[List' → logprob: -11.637066841125488
    8. 'Union' → logprob: -12.137066841125488
    9. 'Expression' → logprob: -12.637066841125488
    10. ',int' → logprob: -12.762066841125488

Token 2179: ' tokens' (ID: 20290)
  Prédit: 'Union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Union' → logprob: -0.001970981014892459
    2. 'int' → logprob: -6.2519707679748535
    3. 'Expression' → logprob: -11.376971244812012
    4. '[int' → logprob: -11.501971244812012
    5. '[' → logprob: -12.126971244812012
    6. ' Union' → logprob: -12.501971244812012
    7. '(int' → logprob: -12.626971244812012
    8. '(' → logprob: -12.626971244812012
    9. 'union' → logprob: -13.501971244812012
    10. '```' → logprob: -13.501971244812012

Token 2180: ' not' (ID: 625)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5724170804023743
    2. ':' → logprob: -1.8224170207977295
    3. '   ' → logprob: -2.6974170207977295
    4. '):' → logprob: -2.6974170207977295
    5. ',
' → logprob: -3.3224170207977295
    6. ')' → logprob: -3.3224170207977295
    7. '       ' → logprob: -3.6974170207977295
    8. '):
' → logprob: -4.572417259216309
    9. '[' → logprob: -4.822417259216309
    10. ':
' → logprob: -5.322417259216309

Token 2181: ' yet' (ID: 5073)
  Prédit: 'fully'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fully' → logprob: -0.1170264184474945
    2. 'parsed' → logprob: -2.6170263290405273
    3. 'yet' → logprob: -3.7420263290405273
    4. ' yet' → logprob: -5.742026329040527
    5. 'finished' → logprob: -5.867026329040527
    6. 'processed' → logprob: -6.367026329040527
    7. 'complete' → logprob: -6.617026329040527
    8. 'completed' → logprob: -7.117026329040527
    9. 'converted' → logprob: -7.617026329040527
    10. 'provided' → logprob: -7.742026329040527

Token 2182: ' parsed' (ID: 31111)
  Prédit: 'parsed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parsed' → logprob: -0.6058992743492126
    2. 'converted' → logprob: -0.9808992743492126
    3. 'constructed' → logprob: -4.355899333953857
    4. 'processed' → logprob: -4.480899333953857
    5. 'implemented' → logprob: -4.980899333953857
    6. ' parsed' → logprob: -5.105899333953857
    7. 'complete' → logprob: -5.605899333953857
    8. 'initialized' → logprob: -5.605899333953857
    9. 'completed' → logprob: -5.855899333953857
    10. 'Expression' → logprob: -5.855899333953857

Token 2183: ' (' (ID: 350)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6706339120864868
    2. '       ' → logprob: -2.0456337928771973
    3. ':
' → logprob: -2.5456337928771973
    4. ':' → logprob: -2.7956337928771973
    5. '):' → logprob: -2.7956337928771973
    6. '   ' → logprob: -2.9206337928771973
    7. 'if' → logprob: -3.6706337928771973
    8. ')' → logprob: -3.7956337928771973
    9. ' if' → logprob: -3.9206337928771973
    10. ',' → logprob: -3.9206337928771973

Token 2184: 'used' (ID: 4943)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -1.4127733707427979
    2. ')' → logprob: -1.6627733707427979
    3. '[
' → logprob: -1.9127733707427979
    4. 'List' → logprob: -2.162773370742798
    5. 'Expression' → logprob: -2.287773370742798
    6. '[' → logprob: -2.537773370742798
    7. 'None' → logprob: -3.662773370742798
    8. 'Optional' → logprob: -4.162773132324219
    9. '[int' → logprob: -4.662773132324219
    10. ']' → logprob: -4.912773132324219

Token 2185: ' in' (ID: 306)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5861390829086304
    2. 'for' → logprob: -1.8361390829086304
    3. 'in' → logprob: -2.21113920211792
    4. 'when' → logprob: -2.33613920211792
    5. ',' → logprob: -3.21113920211792
    6. ' for' → logprob: -5.33613920211792
    7. ' in' → logprob: -5.33613920211792
    8. '):
' → logprob: -5.58613920211792
    9. ' when' → logprob: -5.71113920211792
    10. '=' → logprob: -5.83613920211792

Token 2186: ' earlier' (ID: 11965)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.10061077028512955
    2. 'token' → logprob: -2.8506107330322266
    3. 'def' → logprob: -4.100610733032227
    4. 'self' → logprob: -4.850610733032227
    5. 'parse' → logprob: -5.350610733032227
    6. 'Parser' → logprob: -6.225610733032227
    7. ')' → logprob: -6.225610733032227
    8. 'tokens' → logprob: -6.850610733032227
    9. 'Token' → logprob: -7.100610733032227
    10. '```' → logprob: -7.725610733032227

Token 2187: ' stage' (ID: 9402)
  Prédit: 'version'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'version' → logprob: -0.6017253398895264
    2. ')' → logprob: -1.4767253398895264
    3. 'code' → logprob: -3.1017253398895264
    4. 'parse' → logprob: -3.2267253398895264
    5. ' version' → logprob: -3.6017253398895264
    6. 'token' → logprob: -3.9767253398895264
    7. ',' → logprob: -4.2267255783081055
    8. 'def' → logprob: -4.6017255783081055
    9. 'par' → logprob: -4.8517255783081055
    10. ' code' → logprob: -4.8517255783081055

Token 2188: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01810779981315136
    2. ')
' → logprob: -4.643107891082764
    3. '       ' → logprob: -5.893107891082764
    4. '):' → logprob: -6.018107891082764
    5. '):
' → logprob: -6.393107891082764
    6. ']' → logprob: -7.643107891082764
    7. ',' → logprob: -7.768107891082764
    8. '   ' → logprob: -8.768107414245605
    9. '])' → logprob: -9.393107414245605
    10. '),' → logprob: -9.518107414245605

Token 2189: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.039197955280542374
    2. 'if' → logprob: -4.53919792175293
    3. '):
' → logprob: -4.78919792175293
    4. ' if' → logprob: -5.03919792175293
    5. ':' → logprob: -6.16419792175293
    6. '```' → logprob: -6.28919792175293
    7. '):' → logprob: -6.41419792175293
    8. ':
' → logprob: -6.53919792175293
    9. 'def' → logprob: -6.78919792175293
    10. ')' → logprob: -6.78919792175293

Token 2190: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7451623678207397
    2. 'if' (adapté à ' if') → logprob: -0.7451623678207397
    3. ' if' → logprob: -3.7451624870300293
    4. 'self' → logprob: -3.8701624870300293
    5. 'def' → logprob: -5.745162487030029
    6. '   ' → logprob: -6.495162487030029
    7. '):
' → logprob: -7.495162487030029
    8. ')' → logprob: -7.995162487030029
    9. ' self' → logprob: -9.120162010192871
    10. ',' → logprob: -9.370162010192871

Token 2191: ' ops' (ID: 26973)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.0006967080407775939
    2. ' isinstance' → logprob: -8.000697135925293
    3. 'not' → logprob: -8.750697135925293
    4. '   ' → logprob: -8.750697135925293
    5. '(is' → logprob: -10.875697135925293
    6. '       ' → logprob: -11.000697135925293
    7. '           ' → logprob: -13.250697135925293
    8. '
' → logprob: -13.250697135925293
    9. 'all' → logprob: -13.500697135925293
    10. '    ' → logprob: -13.500697135925293

Token 2192: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.25290563702583313
    2. 'is' → logprob: -1.5029056072235107
    3. '=' → logprob: -7.00290584564209
    4. '=None' → logprob: -10.50290584564209
    5. '==' → logprob: -10.87790584564209
    6. ')' → logprob: -12.00290584564209
    7. '=is' → logprob: -12.00290584564209
    8. ')is' → logprob: -12.87790584564209
    9. '	is' → logprob: -13.12790584564209
    10. '===' → logprob: -13.12790584564209

Token 2193: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -3.464347173576243e-05
    2. ' None' → logprob: -10.75003433227539
    3. 'not' → logprob: -11.25003433227539
    4. '   ' → logprob: -16.75003433227539
    5. '=None' → logprob: -16.75003433227539
    6. 'none' → logprob: -16.87503433227539
    7. ' not' → logprob: -17.87503433227539
    8. '_None' → logprob: -18.00003433227539
    9. 'Not' → logprob: -18.62503433227539
    10. '(None' → logprob: -19.50003433227539

Token 2194: ':
' (ID: 734)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6241304874420166
    2. ':' → logprob: -1.2491304874420166
    3. ':
' → logprob: -1.9991304874420166
    4. ' and' → logprob: -4.1241302490234375
    5. '       ' → logprob: -4.6241302490234375
    6. '=' → logprob: -5.2491302490234375
    7. '<|end|>' → logprob: -5.8741302490234375
    8. ',
' → logprob: -6.6241302490234375
    9. ' or' → logprob: -6.7491302490234375
    10. 'and' → logprob: -6.9991302490234375

Token 2195: '           ' (ID: 352)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.45893746614456177
    2. '       ' → logprob: -1.083937406539917
    3. '           ' → logprob: -4.083937644958496
    4. 'super' → logprob: -5.333937644958496
    5. 'if' → logprob: -5.708937644958496
    6. ' self' → logprob: -6.333937644958496
    7. '#' → logprob: -6.583937644958496
    8. '   ' → logprob: -7.708937644958496
    9. 'assert' → logprob: -8.333937644958496
    10. 'def' → logprob: -8.708937644958496

Token 2196: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1837904006242752
    2. 'tokens' → logprob: -2.183790445327759
    3. '#' (adapté à ' #') → logprob: -3.433790445327759
    4. 'super' → logprob: -4.18379020690918
    5. '       ' → logprob: -4.93379020690918
    6. 'expr' → logprob: -8.18379020690918
    7. 'raise' → logprob: -9.55879020690918
    8. '           ' → logprob: -9.80879020690918
    9. 'ts' → logprob: -9.93379020690918
    10. '   ' → logprob: -10.30879020690918

Token 2197: ' We' (ID: 1416)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.12348449230194092
    2. 'tokens' → logprob: -2.7484846115112305
    3. '#' → logprob: -3.1234846115112305
    4. 'super' → logprob: -6.2484846115112305
    5. 'expr' → logprob: -6.2484846115112305
    6. '       ' → logprob: -6.3734846115112305
    7. 'raise' → logprob: -6.6234846115112305
    8. 'if' → logprob: -6.9984846115112305
    9. 'from' → logprob: -9.99848461151123
    10. 'assert' → logprob: -9.99848461151123

Token 2198: ' have' (ID: 679)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.5369541645050049
    2. ' =' → logprob: -1.6619541645050049
    3. 'raise' → logprob: -1.6619541645050049
    4. '#' → logprob: -2.036954164505005
    5. '=' → logprob: -2.536954164505005
    6. ' raise' → logprob: -2.536954164505005
    7. '       ' → logprob: -4.161953926086426
    8. '           ' → logprob: -4.661953926086426
    9. ':' → logprob: -4.786953926086426
    10. '__' → logprob: -4.786953926086426

Token 2199: ' tokens' (ID: 20290)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.004207444377243519
    2. 'tokens' → logprob: -6.379207611083984
    3. 'self' → logprob: -6.504207611083984
    4. 'Expression' → logprob: -8.129207611083984
    5. '[' → logprob: -8.629207611083984
    6. 'super' → logprob: -8.754207611083984
    7. ' expr' → logprob: -9.504207611083984
    8. '(expr' → logprob: -9.629207611083984
    9. 'expression' → logprob: -10.379207611083984
    10. '       ' → logprob: -10.629207611083984

Token 2200: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6126052141189575
    2. '=' → logprob: -1.2376052141189575
    3. '[' → logprob: -2.737605094909668
    4. ')' → logprob: -3.362605094909668
    5. ':' → logprob: -3.487605094909668
    6. ',' → logprob: -4.237605094909668
    7. '=[]' → logprob: -5.112605094909668
    8. '<|end|>' → logprob: -6.237605094909668
    9. '=[' → logprob: -6.612605094909668
    10. '       ' → logprob: -6.612605094909668

Token 2201: ' parse' (ID: 8420)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5391557216644287
    2. 'tokens' → logprob: -1.2891557216644287
    3. '#' → logprob: -2.5391557216644287
    4. '           ' → logprob: -3.9141557216644287
    5. ' self' → logprob: -4.664155960083008
    6. 'def' → logprob: -4.914155960083008
    7. '       ' → logprob: -5.039155960083008
    8. ' tokens' → logprob: -5.539155960083008
    9. 'expr' → logprob: -6.039155960083008
    10. '[' → logprob: -6.664155960083008

Token 2202: ' them' (ID: 1373)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.31250375509262085
    2. '       ' → logprob: -2.9375038146972656
    3. 'tokens' → logprob: -2.9375038146972656
    4. '(self' → logprob: -3.0625038146972656
    5. 'expr' → logprob: -3.4375038146972656
    6. '(tokens' → logprob: -4.562503814697266
    7. '           ' → logprob: -4.812503814697266
    8. 'def' → logprob: -5.062503814697266
    9. '_tokens' → logprob: -5.062503814697266
    10. '[' → logprob: -5.187503814697266

Token 2203: ' fully' (ID: 9637)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.4677692651748657
    2. '[' → logprob: -1.9677692651748657
    3. ')' → logprob: -2.467769145965576
    4. ':' → logprob: -2.467769145965576
    5. ':
' → logprob: -2.592769145965576
    6. ' =' → logprob: -2.842769145965576
    7. 'tokens' → logprob: -2.967769145965576
    8. '):
' → logprob: -3.092769145965576
    9. '_tokens' → logprob: -3.467769145965576
    10. ',' → logprob: -3.467769145965576

Token 2204: ' into' (ID: 1511)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.8551292419433594
    2. '       ' → logprob: -1.6051292419433594
    3. ':' → logprob: -2.3551292419433594
    4. 'self' → logprob: -2.6051292419433594
    5. ',' → logprob: -2.9801292419433594
    6. ':
' → logprob: -3.6051292419433594
    7. '(tokens' → logprob: -3.6051292419433594
    8. '           ' → logprob: -3.7301292419433594
    9. '[' → logprob: -4.230129241943359
    10. ' tokens' → logprob: -4.980129241943359

Token 2205: ' Expression' (ID: 32496)
  Prédit: 'express'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'express' → logprob: -0.15976476669311523
    2. '[]' → logprob: -2.7847647666931152
    3. 'self' → logprob: -2.9097647666931152
    4. 'expr' → logprob: -4.034764766693115
    5. '[' → logprob: -5.159764766693115
    6. '[])' → logprob: -5.659764766693115
    7. 'Expression' → logprob: -6.409764766693115
    8. 'Expressions' → logprob: -7.159764766693115
    9. '[]
' → logprob: -7.284764766693115
    10. 'parsed' → logprob: -8.159765243530273

Token 2206: 'With' (ID: 2886)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0069419145584106
    2. 'self' → logprob: -2.006941795349121
    3. ':' → logprob: -2.506941795349121
    4. '(self' → logprob: -2.631941795349121
    5. 'tokens' → logprob: -2.756941795349121
    6. ',' → logprob: -3.006941795349121
    7. '[' → logprob: -3.381941795349121
    8. ':
' → logprob: -3.631941795349121
    9. '(
' → logprob: -3.756941795349121
    10. '_tokens' → logprob: -4.006941795349121

Token 2207: 'Ops' (ID: 40217)
  Prédit: 'Ops'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Ops' → logprob: -0.18860727548599243
    2. 'Expressions' → logprob: -2.8136072158813477
    3. 'ops' → logprob: -3.0636072158813477
    4. '_ops' → logprob: -4.313607215881348
    5. 'self' → logprob: -4.938607215881348
    6. 'Op' → logprob: -5.063607215881348
    7. '[]' → logprob: -5.188607215881348
    8. '       ' → logprob: -5.438607215881348
    9. 's' → logprob: -5.813607215881348
    10. 'Expression' → logprob: -5.938607215881348

Token 2208: ' by' (ID: 656)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.462517499923706
    2. ':
' → logprob: -1.462517499923706
    3. '           ' → logprob: -1.837517499923706
    4. '
' → logprob: -2.712517499923706
    5. '[' → logprob: -2.962517499923706
    6. ',' → logprob: -2.962517499923706
    7. 'tokens' → logprob: -2.962517499923706
    8. ':' → logprob: -3.462517499923706
    9. '(tokens' → logprob: -3.587517499923706
    10. 'self' → logprob: -4.087517738342285

Token 2209: ' tokenizer' (ID: 99665)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.9233987927436829
    2. 'tokens' → logprob: -0.9233987927436829
    3. 'expr' → logprob: -2.298398733139038
    4. 'def' → logprob: -2.423398733139038
    5. 'express' → logprob: -5.423398971557617
    6. 'token' → logprob: -5.673398971557617
    7. '   ' → logprob: -7.048398971557617
    8. 'ts' → logprob: -7.173398971557617
    9. ' tokens' → logprob: -7.173398971557617
    10. '#' → logprob: -7.173398971557617

Token 2210: '?
' (ID: 3901)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1219106912612915
    2. ':' → logprob: -1.2469106912612915
    3. ':
' → logprob: -1.8719106912612915
    4. ',' → logprob: -3.121910572052002
    5. 'tokens' → logprob: -3.371910572052002
    6. '):
' → logprob: -3.621910572052002
    7. 'def' → logprob: -3.746910572052002
    8. '
' → logprob: -4.121910572052002
    9. '[' → logprob: -4.371910572052002
    10. ')' → logprob: -4.371910572052002

Token 2211: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4974671006202698
    2. '       ' → logprob: -0.9974671006202698
    3. '               ' → logprob: -4.747467041015625
    4. ')' → logprob: -6.122467041015625
    5. ',' → logprob: -6.122467041015625
    6. 'return' → logprob: -6.622467041015625
    7. ':
' → logprob: -6.747467041015625
    8. '```' → logprob: -6.747467041015625
    9. '   ' → logprob: -7.247467041015625
    10. '[' → logprob: -7.247467041015625

Token 2212: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9665254950523376
    2. 'raise' → logprob: -0.9665254950523376
    3. '           ' → logprob: -2.4665255546569824
    4. 'self' → logprob: -2.7165255546569824
    5. 'tokens' → logprob: -3.3415255546569824
    6. ' raise' → logprob: -3.8415255546569824
    7. '#' (adapté à ' #') → logprob: -5.091525554656982
    8. ')' → logprob: -5.466525554656982
    9. ')
' → logprob: -5.466525554656982
    10. ' tokens' → logprob: -6.466525554656982

Token 2213: ' But' (ID: 3072)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0781158208847046
    2. '       ' → logprob: -1.4531158208847046
    3. 'raise' → logprob: -1.4531158208847046
    4. 'self' → logprob: -2.953115940093994
    5. 'tokens' → logprob: -3.203115940093994
    6. '#' → logprob: -3.578115940093994
    7. 'if' → logprob: -3.703115940093994
    8. ')' → logprob: -4.078115940093994
    9. ' raise' → logprob: -5.203115940093994
    10. ')
' → logprob: -5.203115940093994

Token 2214: ' we' (ID: 581)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9501695036888123
    2. '           ' → logprob: -1.575169563293457
    3. '       ' → logprob: -1.700169563293457
    4. 'raise' → logprob: -2.200169563293457
    5. '
' → logprob: -3.825169563293457
    6. 'def' → logprob: -4.075169563293457
    7. 'self' → logprob: -4.325169563293457
    8. 'ops' → logprob: -4.450169563293457
    9. 'tokens' → logprob: -4.450169563293457
    10. 'return' → logprob: -5.325169563293457

Token 2215: ' do' (ID: 621)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.850969672203064
    2. ')' → logprob: -1.725969672203064
    3. ' def' → logprob: -2.1009697914123535
    4. '):
' → logprob: -2.9759697914123535
    5. ':' → logprob: -3.2259697914123535
    6. ',' → logprob: -3.2259697914123535
    7. '       ' → logprob: -3.6009697914123535
    8. '):' → logprob: -4.2259697914123535
    9. ').__' → logprob: -4.6009697914123535
    10. '   ' → logprob: -4.6009697914123535

Token 2216: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.005136511288583279
    2. ' not' → logprob: -5.505136489868164
    3. 'def' → logprob: -7.130136489868164
    4. 'n't' → logprob: -9.005136489868164
    5. 'nothing' → logprob: -10.130136489868164
    6. '_not' → logprob: -10.380136489868164
    7. 'self' → logprob: -10.755136489868164
    8. '       ' → logprob: -11.380136489868164
    9. '           ' → logprob: -11.505136489868164
    10. ' nothing' → logprob: -12.505136489868164

Token 2217: ' use' (ID: 1199)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1560704708099365
    2. ':' → logprob: -1.4060704708099365
    3. 'continue' → logprob: -2.7810704708099365
    4. ',' → logprob: -3.1560704708099365
    5. '           ' → logprob: -3.1560704708099365
    6. '       ' → logprob: -3.4060704708099365
    7. 'return' → logprob: -3.4060704708099365
    8. 'def' → logprob: -3.4060704708099365
    9. '):
' → logprob: -3.5310704708099365
    10. '):' → logprob: -3.7810704708099365

Token 2218: ' this' (ID: 495)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ops' → logprob: -1.3872638940811157
    2. 'pass' → logprob: -1.6372638940811157
    3. 'tokens' → logprob: -2.012263774871826
    4. 'raise' → logprob: -2.762263774871826
    5. '...' → logprob: -2.887263774871826
    6. 'self' → logprob: -3.262263774871826
    7. '<|end|>' → logprob: -3.387263774871826
    8. 'None' → logprob: -3.512263774871826
    9. 'return' → logprob: -3.512263774871826
    10. '```' → logprob: -3.762263774871826

Token 2219: ' way' (ID: 2006)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4072368144989014
    2. ':' → logprob: -1.5322368144989014
    3. '       ' → logprob: -1.6572368144989014
    4. '<|end|>' → logprob: -2.7822368144989014
    5. '   ' → logprob: -2.9072368144989014
    6. '
' → logprob: -3.2822368144989014
    7. ':
' → logprob: -3.4072368144989014
    8. ',' → logprob: -3.7822368144989014
    9. '):
' → logprob: -3.9072368144989014
    10. '):' → logprob: -3.9072368144989014

Token 2220: ' now' (ID: 1954)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08813601732254028
    2. ':' → logprob: -3.3381359577178955
    3. ')' → logprob: -4.588136196136475
    4. ':
' → logprob: -4.588136196136475
    5. '           ' → logprob: -4.963136196136475
    6. ',' → logprob: -4.963136196136475
    7. '   ' → logprob: -5.463136196136475
    8. '
' → logprob: -6.088136196136475
    9. '):
' → logprob: -6.088136196136475
    10. '):' → logprob: -7.088136196136475

Token 2221: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025421492755413055
    2. ')' → logprob: -4.650421619415283
    3. '           ' → logprob: -5.525421619415283
    4. '
' → logprob: -5.900421619415283
    5. ',' → logprob: -6.400421619415283
    6. ':' → logprob: -6.650421619415283
    7. '):
' → logprob: -6.650421619415283
    8. '   ' → logprob: -6.775421619415283
    9. '):' → logprob: -7.275421619415283
    10. ':
' → logprob: -7.525421619415283

Token 2222: ' all' (ID: 722)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07896193861961365
    2. '       ' → logprob: -3.4539618492126465
    3. 'return' → logprob: -4.3289618492126465
    4. 'raise' → logprob: -4.3289618492126465
    5. '               ' → logprob: -4.8289618492126465
    6. ' raise' → logprob: -5.4539618492126465
    7. '
' → logprob: -6.5789618492126465
    8. '#' → logprob: -7.2039618492126465
    9. '                   ' → logprob: -7.4539618492126465
    10. '...' → logprob: -7.7039618492126465

Token 2223: ' tokens' (ID: 20290)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3427706956863403
    2. 'tokens' → logprob: -1.7177706956863403
    3. 'def' → logprob: -2.092770576477051
    4. 'expr' → logprob: -2.342770576477051
    5. '       ' → logprob: -2.467770576477051
    6. 'parsed' → logprob: -2.842770576477051
    7. 'ops' → logprob: -2.967770576477051
    8. 'args' → logprob: -3.217770576477051
    9. 'code' → logprob: -4.217770576477051
    10. 'express' → logprob: -4.342770576477051

Token 2224: ' processed' (ID: 23478)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.336093544960022
    2. ' are' → logprob: -1.711093544960022
    3. ')' → logprob: -1.836093544960022
    4. '=' → logprob: -2.4610934257507324
    5. ':' → logprob: -2.9610934257507324
    6. 'are' → logprob: -3.2110934257507324
    7. '       ' → logprob: -3.7110934257507324
    8. '):' → logprob: -3.9610934257507324
    9. '=None' → logprob: -4.086093425750732
    10. '```' → logprob: -4.086093425750732

Token 2225: ' by' (ID: 656)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.045963212847709656
    2. ')' → logprob: -4.170963287353516
    3. ',' → logprob: -4.920963287353516
    4. '
' → logprob: -5.045963287353516
    5. '           ' → logprob: -5.920963287353516
    6. '   ' → logprob: -5.920963287353516
    7. '.' → logprob: -6.045963287353516
    8. '```' → logprob: -6.545963287353516
    9. ':' → logprob: -6.795963287353516
    10. ':
' → logprob: -7.170963287353516

Token 2226: ' Parser' (ID: 44901)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.45951712131500244
    2. 'parse' → logprob: -1.4595171213150024
    3. 'the' → logprob: -2.709517002105713
    4. '__' → logprob: -2.834517002105713
    5. 'Expression' → logprob: -5.959517002105713
    6. 'def' → logprob: -6.084517002105713
    7. 'token' → logprob: -6.459517002105713
    8. 'parser' → logprob: -7.459517002105713
    9. 'Parser' → logprob: -7.459517002105713
    10. 'super' → logprob: -7.584517002105713

Token 2227: '.parse' (ID: 7259)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1113204956054688
    2. '   ' → logprob: -1.2363204956054688
    3. ':' → logprob: -2.3613204956054688
    4. ')' → logprob: -2.4863204956054688
    5. 'def' → logprob: -2.6113204956054688
    6. '):' → logprob: -2.8613204956054688
    7. '):
' → logprob: -3.3613204956054688
    8. ',' → logprob: -4.236320495605469
    9. ':
' → logprob: -5.111320495605469
    10. ')
' → logprob: -5.236320495605469

Token 2228: '_expr' (ID: 53654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38650867342948914
    2. '_' → logprob: -2.3865087032318115
    3. 'With' → logprob: -2.3865087032318115
    4. '(' → logprob: -2.8865087032318115
    5. '(
' → logprob: -4.011508464813232
    6. '_with' → logprob: -4.261508464813232
    7. '   ' → logprob: -4.636508464813232
    8. ',' → logprob: -5.136508464813232
    9. 'def' → logprob: -5.761508464813232
    10. ':' → logprob: -6.011508464813232

Token 2229: '_recursive' (ID: 175926)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6680063009262085
    2. '   ' → logprob: -1.1680063009262085
    3. ')' → logprob: -2.418006420135498
    4. '):
' → logprob: -3.293006420135498
    5. 'def' → logprob: -3.918006420135498
    6. '):' → logprob: -4.293006420135498
    7. ')
' → logprob: -5.668006420135498
    8. '<|end|>' → logprob: -5.668006420135498
    9. ':' → logprob: -5.793006420135498
    10. ':
' → logprob: -6.543006420135498

Token 2230: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10236825048923492
    2. ':' → logprob: -2.9773683547973633
    3. '):' → logprob: -4.352368354797363
    4. '   ' → logprob: -4.727368354797363
    5. ':
' → logprob: -4.727368354797363
    6. '):
' → logprob: -4.727368354797363
    7. ')' → logprob: -5.602368354797363
    8. ',' → logprob: -7.227368354797363
    9. '
' → logprob: -7.227368354797363
    10. '           ' → logprob: -7.602368354797363

Token 2231: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026138655841350555
    2. '           ' → logprob: -4.151138782501221
    3. '):
' → logprob: -6.151138782501221
    4. ')' → logprob: -6.401138782501221
    5. '   ' → logprob: -6.526138782501221
    6. ':
' → logprob: -6.526138782501221
    7. ':' → logprob: -6.526138782501221
    8. '):' → logprob: -7.026138782501221
    9. ',' → logprob: -8.276138305664062
    10. '```' → logprob: -8.651138305664062

Token 2232: ' raise' (ID: 9338)
  Prédit: 'raise'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raise' (adapté à ' raise') → logprob: -0.13684293627738953
    2. '       ' → logprob: -2.636842966079712
    3. ')' → logprob: -3.886842966079712
    4. ' raise' → logprob: -4.136842727661133
    5. '           ' → logprob: -4.511842727661133
    6. 'pass' → logprob: -6.136842727661133
    7. 'self' → logprob: -6.261842727661133
    8. '):
' → logprob: -6.886842727661133
    9. 'def' → logprob: -7.386842727661133
    10. 'return' → logprob: -7.386842727661133

Token 2233: ' Not' (ID: 4037)
  Prédit: 'Not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Not' → logprob: -0.12706711888313293
    2. 'Value' → logprob: -2.1270670890808105
    3. 'Runtime' → logprob: -9.377067565917969
    4. 'Assertion' → logprob: -10.502067565917969
    5. ' Not' → logprob: -11.127067565917969
    6. 'Type' → logprob: -12.377067565917969
    7. '(Not' → logprob: -13.002067565917969
    8. '_Not' → logprob: -13.127067565917969
    9. 'Syntax' → logprob: -14.127067565917969
    10. 'Exception' → logprob: -14.377067565917969

Token 2234: 'Implemented' (ID: 42030)
  Prédit: 'Implemented'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Implemented' → logprob: -6.694766489090398e-05
    2. 'Implement' → logprob: -10.375066757202148
    3. 'Not' → logprob: -10.750066757202148
    4. 'Found' → logprob: -12.375066757202148
    5. 'Error' → logprob: -12.750066757202148
    6. 'implemented' → logprob: -12.875066757202148
    7. 'Used' → logprob: -13.750066757202148
    8. 'Im' → logprob: -14.375066757202148
    9. 'Implementation' → logprob: -14.875066757202148
    10. 'ed' → logprob: -15.000066757202148

Token 2235: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -0.00011331788846291602
    2. 'Not' → logprob: -9.500113487243652
    3. 'Implemented' → logprob: -10.750113487243652
    4. 'Warning' → logprob: -12.000113487243652
    5. 'rror' → logprob: -12.625113487243652
    6. '(self' → logprob: -13.125113487243652
    7. '           ' → logprob: -14.125113487243652
    8. 'Ok' → logprob: -14.125113487243652
    9. '(Not' → logprob: -14.750113487243652
    10. 'Please' → logprob: -14.875113487243652

Token 2236: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28177738189697266
    2. ')' → logprob: -1.5317773818969727
    3. '   ' → logprob: -4.656777381896973
    4. '<|end|>' → logprob: -4.781777381896973
    5. '(' → logprob: -6.031777381896973
    6. ':' → logprob: -6.406777381896973
    7. '.' → logprob: -6.781777381896973
    8. ',' → logprob: -6.906777381896973
    9. '[' → logprob: -7.656777381896973
    10. 'def' → logprob: -7.781777381896973

Token 2237: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08440198004245758
    2. '       ' → logprob: -3.334402084350586
    3. 'def' → logprob: -3.459402084350586
    4. ')' → logprob: -5.084402084350586
    5. '):
' → logprob: -5.959402084350586
    6. '
' → logprob: -6.834402084350586
    7. '):' → logprob: -7.084402084350586
    8. ':' → logprob: -7.209402084350586
    9. '    
' → logprob: -7.209402084350586
    10. '```' → logprob: -7.584402084350586

Token 2238: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04743446782231331
    2. 'self' (adapté à ' self') → logprob: -3.5474345684051514
    3. ':
' → logprob: -5.047434329986572
    4. ':' → logprob: -5.297434329986572
    5. '):
' → logprob: -6.547434329986572
    6. 'def' → logprob: -6.922434329986572
    7. '   ' → logprob: -7.172434329986572
    8. '(self' → logprob: -7.172434329986572
    9. ' self' → logprob: -7.922434329986572
    10. '):' → logprob: -7.922434329986572

Token 2239: '.expr' (ID: 121306)
  Prédit: '.expr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.expr' → logprob: -6.170270353322849e-05
    2. 'expr' → logprob: -9.875061988830566
    3. '.ex' → logprob: -12.125061988830566
    4. '.' → logprob: -13.125061988830566
    5. '.expression' → logprob: -13.125061988830566
    6. ' .' → logprob: -16.00006103515625
    7. '   ' → logprob: -16.00006103515625
    8. '.exc' → logprob: -16.00006103515625
    9. '_expr' → logprob: -16.50006103515625
    10. '.Expr' → logprob: -16.62506103515625

Token 2240: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: 0.0
    2. 'expr' → logprob: -18.625
    3. '_s' → logprob: -18.75
    4. ' s' → logprob: -19.0
    5. '```' → logprob: -19.375
    6. '   ' → logprob: -20.0
    7. '_expr' → logprob: -20.125
    8. 'sx' → logprob: -20.25
    9. '_' → logprob: -20.375
    10. '
' → logprob: -20.625

Token 2241: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7496912479400635
    2. ',' → logprob: -0.9996912479400635
    3. ' =' → logprob: -1.8746912479400635
    4. ':' → logprob: -5.374691009521484
    5. '=[' → logprob: -7.999691009521484
    6. '[' → logprob: -8.249691009521484
    7. '.append' → logprob: -8.499691009521484
    8. ')' → logprob: -9.374691009521484
    9. ',
' → logprob: -9.374691009521484
    10. '   ' → logprob: -9.499691009521484

Token 2242: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.13057829439640045
    2. '[List' → logprob: -2.1305782794952393
    3. 'expr' → logprob: -6.130578517913818
    4. ' List' → logprob: -6.880578517913818
    5. '[' → logprob: -8.00557804107666
    6. ' =' → logprob: -10.00557804107666
    7. '=' → logprob: -10.63057804107666
    8. '[
' → logprob: -10.75557804107666
    9. '(List' → logprob: -12.50557804107666
    10. '   ' → logprob: -13.38057804107666

Token 2243: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0006513170665130019
    2. ' =' → logprob: -8.000651359558105
    3. '[
' → logprob: -8.875651359558105
    4. '[int' → logprob: -9.750651359558105
    5. '=' → logprob: -10.375651359558105
    6. '   ' → logprob: -11.375651359558105
    7. '[Index' → logprob: -11.375651359558105
    8. '[List' → logprob: -11.500651359558105
    9. '(Expression' → logprob: -11.625651359558105
    10. '[self' → logprob: -11.625651359558105

Token 2244: 'Expression' (ID: 12633)
  Prédit: 'Expression'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Expression' → logprob: 0.0
    2. ' Expression' → logprob: -17.5
    3. '[' → logprob: -18.25
    4. 'expression' → logprob: -20.375
    5. '(Expression' → logprob: -20.625
    6. 'Union' → logprob: -20.75
    7. '   ' → logprob: -20.875
    8. 'Express' → logprob: -21.25
    9. '.Expression' → logprob: -21.25
    10. 'Expressions' → logprob: -21.75

Token 2245: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5753914713859558
    2. ' =' → logprob: -1.3253915309906006
    3. ']' → logprob: -1.8253915309906006
    4. '       ' → logprob: -5.3253912925720215
    5. '[' → logprob: -6.2003912925720215
    6. ',' → logprob: -6.2003912925720215
    7. ']=' → logprob: -7.0753912925720215
    8. ')' → logprob: -8.20039176940918
    9. '.append' → logprob: -9.20039176940918
    10. '   ' → logprob: -9.45039176940918

Token 2246: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11553829163312912
    2. ' =' → logprob: -2.6155383586883545
    3. ',' → logprob: -3.7405383586883545
    4. '[' → logprob: -5.115538120269775
    5. '.append' → logprob: -5.990538120269775
    6. '       ' → logprob: -6.740538120269775
    7. '   ' → logprob: -7.490538120269775
    8. '[
' → logprob: -7.740538120269775
    9. ')' → logprob: -8.115538597106934
    10. ',
' → logprob: -8.615538597106934

Token 2247: ' expr' (ID: 30206)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.0019305398454889655
    2. ' expr' → logprob: -6.2519307136535645
    3. '[' → logprob: -14.001930236816406
    4. '   ' → logprob: -14.626930236816406
    5. '(expr' → logprob: -14.626930236816406
    6. 'express' → logprob: -16.876930236816406
    7. ' [' → logprob: -17.001930236816406
    8. '[
' → logprob: -17.751930236816406
    9. '.expr' → logprob: -17.876930236816406
    10. '       ' → logprob: -17.876930236816406

Token 2248: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -4.668304245569743e-05
    2. '[' → logprob: -10.625046730041504
    3. 'ss' → logprob: -11.375046730041504
    4. '   ' → logprob: -13.500046730041504
    5. 'x' → logprob: -13.875046730041504
    6. ']' → logprob: -14.000046730041504
    7. '[
' → logprob: -14.000046730041504
    8. 'gs' → logprob: -14.000046730041504
    9. '       ' → logprob: -14.125046730041504
    10. '```' → logprob: -14.500046730041504

Token 2249: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.39737239480018616
    2. '       ' → logprob: -1.1473723649978638
    3. '<|end|>' → logprob: -5.022372245788574
    4. ',
' → logprob: -5.897372245788574
    5. '<|end|>' → logprob: -8.522372245788574
    6. '   ' → logprob: -8.522372245788574
    7. ' ,' → logprob: -8.647372245788574
    8. '           ' → logprob: -8.897372245788574
    9. '               ' → logprob: -10.147372245788574
    10. '        ' → logprob: -10.147372245788574

Token 2250: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008998608216643333
    2. 'self' → logprob: -5.008998394012451
    3. '<|end|>' → logprob: -7.383998394012451
    4. 'ops' → logprob: -7.508998394012451
    5. '   ' → logprob: -7.508998394012451
    6. '_ops' → logprob: -8.63399887084961
    7. '           ' → logprob: -9.38399887084961
    8. '```' → logprob: -9.88399887084961
    9. ',' → logprob: -10.00899887084961
    10. '	' → logprob: -10.13399887084961

Token 2251: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.17303767800331116
    2. '       ' → logprob: -2.0480377674102783
    3. 'ops' → logprob: -3.6730377674102783
    4. '_ops' → logprob: -6.298037528991699
    5. '
' → logprob: -7.423037528991699
    6. ',' → logprob: -7.423037528991699
    7. '```' → logprob: -7.798037528991699
    8. '   ' → logprob: -7.923037528991699
    9. ' self' → logprob: -8.0480375289917
    10. ',self' → logprob: -9.1730375289917

Token 2252: '.ops' (ID: 93952)
  Prédit: '.ops'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ops' → logprob: -8.470901229884475e-05
    2. 'ops' → logprob: -9.50008487701416
    3. '```' → logprob: -13.00008487701416
    4. '_ops' → logprob: -13.25008487701416
    5. ' .' → logprob: -13.75008487701416
    6. '.' → logprob: -13.87508487701416
    7. '
' → logprob: -14.12508487701416
    8. '._' → logprob: -14.37508487701416
    9. '   ' → logprob: -14.50008487701416
    10. 'Ops' → logprob: -15.00008487701416

Token 2253: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12831658124923706
    2. ':' → logprob: -2.753316640853882
    3. ' =' → logprob: -2.878316640853882
    4. '=None' → logprob: -9.253316879272461
    5. '.append' → logprob: -9.253316879272461
    6. '   ' → logprob: -9.753316879272461
    7. ',' → logprob: -9.878316879272461
    8. '=[]' → logprob: -10.128316879272461
    9. '[:]' → logprob: -10.503316879272461
    10. '=[' → logprob: -10.628316879272461

Token 2254: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.10912584513425827
    2. '[List' → logprob: -2.734125852584839
    3. '[' → logprob: -4.23412561416626
    4. 'ops' → logprob: -4.60912561416626
    5. ' List' → logprob: -4.73412561416626
    6. 'Optional' → logprob: -6.48412561416626
    7. '[
' → logprob: -6.60912561416626
    8. '[]' → logprob: -7.35912561416626
    9. ' ops' → logprob: -7.35912561416626
    10. '[str' → logprob: -7.98412561416626

Token 2255: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -0.00024358915106859058
    2. '[' → logprob: -8.625243186950684
    3. '[
' → logprob: -9.750243186950684
    4. ' =' → logprob: -13.375243186950684
    5. '[int' → logprob: -14.125243186950684
    6. 'str' → logprob: -14.375243186950684
    7. '=str' → logprob: -14.500243186950684
    8. '```' → logprob: -14.625243186950684
    9. ']' → logprob: -14.750243186950684
    10. '(str' → logprob: -15.125243186950684

Token 2256: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0012195244198665023
    2. '=' → logprob: -7.251219749450684
    3. ']=' → logprob: -8.001219749450684
    4. ' =' → logprob: -9.126219749450684
    5. ')' → logprob: -10.126219749450684
    6. ' ]' → logprob: -10.876219749450684
    7. '])' → logprob: -12.376219749450684
    8. ']
' → logprob: -14.126219749450684
    9. '   ' → logprob: -15.001219749450684
    10. '[' → logprob: -15.376219749450684

Token 2257: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1902211308479309
    2. ' =' → logprob: -2.065221071243286
    3. '<|end|>' → logprob: -4.065221309661865
    4. ')' → logprob: -4.315221309661865
    5. '       ' → logprob: -5.315221309661865
    6. ':' → logprob: -5.565221309661865
    7. '<|end|>' → logprob: -6.815221309661865
    8. ']' → logprob: -7.190221309661865
    9. '   ' → logprob: -7.315221309661865
    10. '[' → logprob: -7.440221309661865

Token 2258: ' ops' (ID: 26973)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.0005535095697268844
    2. ' ops' → logprob: -7.500553607940674
    3. '[' → logprob: -15.125553131103516
    4. 'op' → logprob: -16.250553131103516
    5. 'opts' → logprob: -16.625553131103516
    6. '   ' → logprob: -18.000553131103516
    7. '       ' → logprob: -18.625553131103516
    8. '_ops' → logprob: -18.750553131103516
    9. '.ops' → logprob: -18.875553131103516
    10. 'Ops' → logprob: -19.250553131103516

Token 2259: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20649734139442444
    2. '    
' → logprob: -2.2064974308013916
    3. '
' → logprob: -2.7064974308013916
    4. ':' → logprob: -6.0814971923828125
    5. '  
' → logprob: -6.5814971923828125
    6. 'def' → logprob: -6.5814971923828125
    7. '<|end|>' → logprob: -6.8314971923828125
    8. '   
' → logprob: -7.0814971923828125
    9. '        
' → logprob: -7.2064971923828125
    10. '```' → logprob: -7.5814971923828125

Token 2260: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03608359396457672
    2. 'def' → logprob: -3.411083698272705
    3. 'from' → logprob: -6.286083698272705
    4. '_cache' → logprob: -8.286083221435547
    5. '_next' → logprob: -9.786083221435547
    6. '_cached' → logprob: -10.161083221435547
    7. '```' → logprob: -10.411083221435547
    8. '_def' → logprob: -10.536083221435547
    9. 'class' → logprob: -10.661083221435547
    10. '_token' → logprob: -11.036083221435547

Token 2261: ' self' (ID: 1051)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006527314893901348
    2. 'def' → logprob: -5.131527423858643
    3. 'from' → logprob: -8.381526947021484
    4. '       ' → logprob: -9.131526947021484
    5. '
' → logprob: -9.506526947021484
    6. '    
' → logprob: -9.756526947021484
    7. 'import' → logprob: -11.006526947021484
    8. '_' → logprob: -11.006526947021484
    9. '```' → logprob: -11.006526947021484
    10. '@' → logprob: -11.256526947021484

Token 2262: '.memo' (ID: 161018)
  Prédit: '._'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.002353526186197996
    2. '.memo' → logprob: -6.752353668212891
    3. '_cache' → logprob: -7.377353668212891
    4. '.' → logprob: -8.62735366821289
    5. '.cache' → logprob: -8.87735366821289
    6. 'def' → logprob: -9.75235366821289
    7. '_cached' → logprob: -10.62735366821289
    8. '_mem' → logprob: -10.75235366821289
    9. '   ' → logprob: -10.75235366821289
    10. '_expr' → logprob: -11.25235366821289

Token 2263: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12410804629325867
    2. ':' → logprob: -2.499108076095581
    3. '=' → logprob: -3.374108076095581
    4. ' :' → logprob: -8.87410831451416
    5. '={}' → logprob: -9.99910831451416
    6. ' ' → logprob: -10.49910831451416
    7. '   ' → logprob: -10.62410831451416
    8. '  ' → logprob: -11.37410831451416
    9. '.setdefault' → logprob: -11.74910831451416
    10. '={}
' → logprob: -11.74910831451416

Token 2264: ' Dict' (ID: 55179)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.005643874406814575
    2. 'dict' → logprob: -5.255643844604492
    3. 'Dict' → logprob: -8.005643844604492
    4. '{' → logprob: -9.505643844604492
    5. '{}
' → logprob: -14.380643844604492
    6. '={}' → logprob: -14.380643844604492
    7. '{})' → logprob: -15.255643844604492
    8. '{}

' → logprob: -15.380643844604492
    9. '_dict' → logprob: -16.505643844604492
    10. '{}\' → logprob: -17.005643844604492

Token 2265: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3832721710205078
    2. '[int' → logprob: -1.5082721710205078
    3. ' =' → logprob: -2.383272171020508
    4. '   ' → logprob: -6.758272171020508
    5. '       ' → logprob: -6.883272171020508
    6. 'int' → logprob: -7.133272171020508
    7. '=' → logprob: -7.383272171020508
    8. '[List' → logprob: -8.133272171020508
    9. ' ' → logprob: -9.008272171020508
    10. '[
' → logprob: -9.133272171020508

Token 2266: 'Tuple' (ID: 40048)
  Prédit: 'Tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -0.0013671426568180323
    2. 'int' → logprob: -6.751367092132568
    3. '[int' → logprob: -8.876367568969727
    4. '[' → logprob: -10.376367568969727
    5. ' Tuple' → logprob: -10.626367568969727
    6. 'tuple' → logprob: -13.751367568969727
    7. '<Tuple' → logprob: -15.376367568969727
    8. '.Tuple' → logprob: -16.001367568969727
    9. ' ' → logprob: -16.626367568969727
    10. 'Optional' → logprob: -16.876367568969727

Token 2267: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.00032998246024362743
    2. '[' → logprob: -8.125329971313477
    3. '[List' → logprob: -11.000329971313477
    4. 'int' → logprob: -11.375329971313477
    5. '[
' → logprob: -12.625329971313477
    6. '[(' → logprob: -14.125329971313477
    7. ' ' → logprob: -15.000329971313477
    8. ']' → logprob: -15.250329971313477
    9. '(int' → logprob: -15.750329971313477
    10. '[Int' → logprob: -15.750329971313477

Token 2268: ',int' (ID: 20909)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16170863807201385
    2. ',int' → logprob: -1.9117085933685303
    3. 'int' → logprob: -7.161708831787109
    4. '[int' → logprob: -7.286708831787109
    5. ',
' → logprob: -11.41170883178711
    6. ' ,' → logprob: -12.41170883178711
    7. ']int' → logprob: -13.28670883178711
    8. ',List' → logprob: -13.41170883178711
    9. ',Integer' → logprob: -14.16170883178711
    10. ',float' → logprob: -14.41170883178711

Token 2269: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04040345177054405
    2. ',int' → logprob: -3.290403366088867
    3. ',List' → logprob: -6.165403366088867
    4. '],' → logprob: -9.165403366088867
    5. ',None' → logprob: -10.165403366088867
    6. ',bool' → logprob: -10.665403366088867
    7. ',self' → logprob: -10.790403366088867
    8. ',Integer' → logprob: -10.790403366088867
    9. ',float' → logprob: -11.540403366088867
    10. ',(' → logprob: -12.165403366088867

Token 2270: ' Set' (ID: 3957)
  Prédit: 'Set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Set' → logprob: -0.0019407729851081967
    2. 'Dict' → logprob: -6.376940727233887
    3. 'set' → logprob: -8.876940727233887
    4. 'List' → logprob: -9.626940727233887
    5. ' Set' → logprob: -10.501940727233887
    6. 'Optional' → logprob: -13.001940727233887
    7. 'dict' → logprob: -13.626940727233887
    8. '_set' → logprob: -15.001940727233887
    9. '   ' → logprob: -15.001940727233887
    10. '	Set' → logprob: -15.126940727233887

Token 2271: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.011545703746378422
    2. '[' → logprob: -4.511545658111572
    3. '[List' → logprob: -7.886545658111572
    4. ',' → logprob: -10.13654613494873
    5. 'int' → logprob: -10.26154613494873
    6. '[Int' → logprob: -10.88654613494873
    7. '[
' → logprob: -11.26154613494873
    8. '[f' → logprob: -12.13654613494873
    9. ']' → logprob: -12.76154613494873
    10. ',int' → logprob: -13.13654613494873

Token 2272: ']]' (ID: 8928)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01616750657558441
    2. ']]' → logprob: -4.141167640686035
    3. ']=' → logprob: -9.891167640686035
    4. ',' → logprob: -10.641167640686035
    5. '       ' → logprob: -10.641167640686035
    6. ')]' → logprob: -11.766167640686035
    7. '   ' → logprob: -12.141167640686035
    8. ']]=' → logprob: -12.516167640686035
    9. '],' → logprob: -12.891167640686035
    10. ']>' → logprob: -12.891167640686035

Token 2273: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5848815441131592
    2. '<|end|>' → logprob: -1.3348815441131592
    3. '=' → logprob: -2.709881544113159
    4. '   ' → logprob: -3.084881544113159
    5. '       ' → logprob: -3.584881544113159
    6. '[' → logprob: -4.834881782531738
    7. '<|end|>' → logprob: -4.959881782531738
    8. ')' → logprob: -5.209881782531738
    9. ' def' → logprob: -5.584881782531738
    10. 'def' → logprob: -5.834881782531738

Token 2274: ' {}

' (ID: 21724)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.00012642296496778727
    2. 'dict' → logprob: -9.000126838684082
    3. '{' → logprob: -13.875126838684082
    4. '{}

' → logprob: -14.125126838684082
    5. '{}
' → logprob: -14.375126838684082
    6. '{})' → logprob: -15.000126838684082
    7. ' {}' → logprob: -15.250126838684082
    8. '={}' → logprob: -16.250125885009766
    9. '{}\' → logprob: -17.375125885009766
    10. ' dict' → logprob: -17.375125885009766

Token 2275: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01291937381029129
    2. 'def' → logprob: -5.6379194259643555
    3. '    
' → logprob: -5.8879194259643555
    4. '```' → logprob: -6.0129194259643555
    5. ' def' → logprob: -6.2629194259643555
    6. '
' → logprob: -7.1379194259643555
    7. '    ' → logprob: -7.1379194259643555
    8. ' _' → logprob: -9.262919425964355
    9. '_' → logprob: -9.262919425964355
    10. ' ' → logprob: -10.012919425964355

Token 2276: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1762857735157013
    2. '
' → logprob: -2.176285743713379
    3. '    
' → logprob: -3.801285743713379
    4. 'def' (adapté à ' def') → logprob: -4.426285743713379
    5. ' def' → logprob: -4.801285743713379
    6. '  
' → logprob: -6.551285743713379
    7. ' ' → logprob: -6.926285743713379
    8. ' 
' → logprob: -7.426285743713379
    9. '    ' → logprob: -7.551285743713379
    10. '   
' → logprob: -7.926285743713379

Token 2277: ' evaluate' (ID: 21646)
  Prédit: 'evaluate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'evaluate' → logprob: -9.17420256882906e-05
    2. ' evaluate' → logprob: -9.750091552734375
    3. 'def' → logprob: -10.375091552734375
    4. '_e' → logprob: -14.125091552734375
    5. '.evaluate' → logprob: -14.375091552734375
    6. 'compute' → logprob: -14.875091552734375
    7. 'eval' → logprob: -15.125091552734375
    8. 'calculate' → logprob: -17.125091552734375
    9. '__' → logprob: -17.625091552734375
    10. '_eval' → logprob: -17.750091552734375

Token 2278: '_all' (ID: 13305)
  Prédit: '_all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_all' → logprob: -1.3856492842023727e-06
    2. '_' → logprob: -14.875000953674316
    3. ' _' → logprob: -15.250000953674316
    4. '_al' → logprob: -15.500000953674316
    5. 'All' → logprob: -16.000001907348633
    6. '```' → logprob: -16.625001907348633
    7. '   ' → logprob: -16.750001907348633
    8. '(_' → logprob: -16.750001907348633
    9. '(self' → logprob: -17.000001907348633
    10. '_a' → logprob: -17.125001907348633

Token 2279: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.08191908895969391
    2. '(' → logprob: -2.8319191932678223
    3. '_all' → logprob: -4.456919193267822
    4. '(
' → logprob: -5.581919193267822
    5. '_' → logprob: -5.956919193267822
    6. '   ' → logprob: -7.456919193267822
    7. '[' → logprob: -8.456918716430664
    8. '_(' → logprob: -8.956918716430664
    9. '[self' → logprob: -9.206918716430664
    10. '```' → logprob: -9.456918716430664

Token 2280: ')' (ID: 8)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.14967899024486542
    2. '(' → logprob: -2.524678945541382
    3. '[' → logprob: -4.024679183959961
    4. '   ' → logprob: -4.524679183959961
    5. '[self' → logprob: -5.024679183959961
    6. '_' → logprob: -5.149679183959961
    7. '_all' → logprob: -5.399679183959961
    8. '(
' → logprob: -5.774679183959961
    9. ')' → logprob: -5.899679183959961
    10. '[
' → logprob: -6.524679183959961

Token 2281: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.011908468790352345
    2. '(' → logprob: -4.511908531188965
    3. '(
' → logprob: -7.261908531188965
    4. '   ' → logprob: -9.761908531188965
    5. 'self' → logprob: -10.011908531188965
    6. ' (' → logprob: -10.761908531188965
    7. '       ' → logprob: -11.511908531188965
    8. '_' → logprob: -12.511908531188965
    9. ' ' → logprob: -12.761908531188965
    10. '```' → logprob: -13.011908531188965

Token 2282: ' Set' (ID: 3957)
  Prédit: 'Set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Set' → logprob: -0.0007973581086844206
    2. ' Set' → logprob: -7.250797271728516
    3. 'set' → logprob: -9.500797271728516
    4. '_set' → logprob: -11.500797271728516
    5. '   ' → logprob: -14.125797271728516
    6. ' set' → logprob: -14.625797271728516
    7. ' ' → logprob: -14.875797271728516
    8. '_Set' → logprob: -15.250797271728516
    9. '(Set' → logprob: -15.625797271728516
    10. '	Set' → logprob: -15.625797271728516

Token 2283: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.05439502000808716
    2. '[' → logprob: -3.6793949604034424
    3. '[(' → logprob: -4.0543951988220215
    4. '_all' → logprob: -5.4293951988220215
    5. '[{' → logprob: -6.1793951988220215
    6. '_values' → logprob: -7.0543951988220215
    7. '[
' → logprob: -7.6793951988220215
    8. 'all' → logprob: -7.8043951988220215
    9. '<int' → logprob: -7.9293951988220215
    10. '({' → logprob: -8.304394721984863

Token 2284: ']:
' (ID: 22152)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.24925930798053741
    2. '       ' → logprob: -2.7492592334747314
    3. '   ' → logprob: -3.2492592334747314
    4. '(' → logprob: -3.3742592334747314
    5. '(
' → logprob: -3.4992592334747314
    6. '[' → logprob: -3.6242592334747314
    7. '[self' → logprob: -4.8742594718933105
    8. '{' → logprob: -5.4992594718933105
    9. '):
' → logprob: -5.4992594718933105
    10. ':
' → logprob: -5.7492594718933105

Token 2285: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.3306015716807451e-05
    2. '```' → logprob: -11.50001335144043
    3. '   ' → logprob: -13.75001335144043
    4. '           ' → logprob: -14.00001335144043
    5. '(' → logprob: -15.25001335144043
    6. '      ' → logprob: -15.87501335144043
    7. '`' → logprob: -16.00001335144043
    8. '
' → logprob: -16.12501335144043
    9. '0' → logprob: -16.50001335144043
    10. '{' → logprob: -16.50001335144043

Token 2286: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04412435367703438
    2. 'if' → logprob: -3.4191243648529053
    3. '```' → logprob: -4.669124126434326
    4. ' if' → logprob: -7.294124126434326
    5. 'def' → logprob: -9.044124603271484
    6. '   ' → logprob: -9.419124603271484
    7. '{
' → logprob: -9.919124603271484
    8. '``' → logprob: -10.044124603271484
    9. '{' → logprob: -10.544124603271484
    10. '	' → logprob: -11.919124603271484

Token 2287: ' evaluate' (ID: 21646)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1655135154724121
    2. '       ' → logprob: -2.040513515472412
    3. 'def' → logprob: -3.915513515472412
    4. '   ' → logprob: -6.540513515472412
    5. ' if' → logprob: -7.165513515472412
    6. '```' → logprob: -8.54051399230957
    7. 'n' → logprob: -9.41551399230957
    8. 'return' → logprob: -10.54051399230957
    9. 'import' → logprob: -10.79051399230957
    10. '
' → logprob: -11.16551399230957

Token 2288: ' all' (ID: 722)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.8409555554389954
    2. '_all' → logprob: -0.9659555554389954
    3. 'if' → logprob: -2.4659554958343506
    4. '       ' → logprob: -3.0909554958343506
    5. 'def' → logprob: -3.3409554958343506
    6. 'all' → logprob: -5.09095573425293
    7. '   ' → logprob: -5.34095573425293
    8. '(self' → logprob: -5.59095573425293
    9. '
' → logprob: -5.59095573425293
    10. 'All' → logprob: -7.34095573425293

Token 2289: ' possible' (ID: 4149)
  Prédit: '_all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_all' → logprob: -0.3559940755367279
    2. '_' → logprob: -1.3559941053390503
    3. '(' → logprob: -3.6059939861297607
    4. '_possible' → logprob: -4.98099422454834
    5. '(
' → logprob: -6.60599422454834
    6. '(_' → logprob: -6.85599422454834
    7. '('_' → logprob: -6.85599422454834
    8. '(self' → logprob: -6.98099422454834
    9. '_s' → logprob: -7.35599422454834
    10. '```' → logprob: -7.60599422454834

Token 2290: ' outcomes' (ID: 24693)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.20597366988658905
    2. '(self' → logprob: -2.9559736251831055
    3. '(' → logprob: -3.4559736251831055
    4. 'values' → logprob: -3.4559736251831055
    5. '_results' → logprob: -3.7059736251831055
    6. 'possible' → logprob: -3.9559736251831055
    7. '()' → logprob: -4.2059736251831055
    8. '((' → logprob: -5.8309736251831055
    9. 'self' → logprob: -5.9559736251831055
    10. '(
' → logprob: -6.5809736251831055

Token 2291: ' by' (ID: 656)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36304497718811035
    2. '(self' → logprob: -1.2380449771881104
    3. '(' → logprob: -4.488044738769531
    4. '           ' → logprob: -6.863044738769531
    5. '```' → logprob: -6.863044738769531
    6. '(
' → logprob: -8.238044738769531
    7. '   ' → logprob: -8.863044738769531
    8. 'from' → logprob: -8.988044738769531
    9. 'for' → logprob: -9.113044738769531
    10. '
' → logprob: -9.238044738769531

Token 2292: ' all' (ID: 722)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.35163336992263794
    2. 'def' → logprob: -1.3516333103179932
    3. '       ' → logprob: -3.726633310317993
    4. 'rec' → logprob: -5.476633548736572
    5. '(self' → logprob: -6.226633548736572
    6. 'comb' → logprob: -6.726633548736572
    7. 'return' → logprob: -6.976633548736572
    8. 'com' → logprob: -7.226633548736572
    9. 'evalu' → logprob: -7.226633548736572
    10. 'memo' → logprob: -7.726633548736572

Token 2293: ' parent' (ID: 5980)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.5227254629135132
    2. 'ways' → logprob: -1.0227254629135132
    3. 'parent' → logprob: -3.2727255821228027
    4. ' ways' → logprob: -5.522725582122803
    5. 'spl' → logprob: -6.647725582122803
    6. '   ' → logprob: -7.272725582122803
    7. '       ' → logprob: -7.397725582122803
    8. 'def' → logprob: -7.522725582122803
    9. '#' → logprob: -7.522725582122803
    10. ' possible' → logprob: -8.022725105285645

Token 2294: 'hes' (ID: 9780)
  Prédit: 'hes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hes' → logprob: -0.002678152872249484
    2. 'heses' → logprob: -6.627677917480469
    3. 'hesis' → logprob: -7.252677917480469
    4. 'h' → logprob: -7.377677917480469
    5. 'he' → logprob: -12.002677917480469
    6. '```' → logprob: -12.627677917480469
    7. '
' → logprob: -13.127677917480469
    8. '   ' → logprob: -13.627677917480469
    9. '       ' → logprob: -14.127677917480469
    10. '(
' → logprob: -14.627677917480469

Token 2295: 'izing' (ID: 6396)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6134382486343384
    2. 'es' → logprob: -1.4884382486343384
    3. ')' → logprob: -2.738438129425049
    4. '       ' → logprob: -3.113438129425049
    5. 'esized' → logprob: -3.863438129425049
    6. '   ' → logprob: -3.863438129425049
    7. 'hes' → logprob: -4.113438129425049
    8. '()' → logprob: -4.238438129425049
    9. '                   ' → logprob: -4.863438129425049
    10. '
' → logprob: -5.113438129425049

Token 2296: ' orders' (ID: 12528)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08435662090778351
    2. '(
' → logprob: -2.8343565464019775
    3. '(self' → logprob: -4.209356784820557
    4. '_' → logprob: -5.584356784820557
    5. '{' → logprob: -7.584356784820557
    6. ' (' → logprob: -7.709356784820557
    7. ''' → logprob: -7.959356784820557
    8. 'for' → logprob: -8.209356307983398
    9. '```' → logprob: -8.459356307983398
    10. '
' → logprob: -8.709356307983398

Token 2297: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01865050010383129
    2. 'if' → logprob: -4.518650531768799
    3. '```' → logprob: -5.893650531768799
    4. '(' → logprob: -6.143650531768799
    5. '(n' → logprob: -6.768650531768799
    6. ' if' → logprob: -7.018650531768799
    7. '(self' → logprob: -8.26865005493164
    8. '           ' → logprob: -9.39365005493164
    9. '`' → logprob: -9.51865005493164
    10. '   ' → logprob: -9.89365005493164

Token 2298: ' expr' (ID: 30206)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.28704845905303955
    2. '(self' → logprob: -1.7870484590530396
    3. 'the' → logprob: -3.03704833984375
    4. '(' → logprob: -3.91204833984375
    5. '0' → logprob: -6.03704833984375
    6. '       ' → logprob: -6.66204833984375
    7. '   ' → logprob: -6.78704833984375
    8. 'len' → logprob: -6.91204833984375
    9. 'express' → logprob: -6.91204833984375
    10. 'sub' → logprob: -7.28704833984375

Token 2299: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.02256493642926216
    2. '       ' → logprob: -3.8975648880004883
    3. '   ' → logprob: -7.397564888000488
    4. '           ' → logprob: -7.772564888000488
    5. '(self' → logprob: -8.647564888000488
    6. '[(' → logprob: -8.647564888000488
    7. '
' → logprob: -9.272564888000488
    8. '[
' → logprob: -9.772564888000488
    9. '(s' → logprob: -9.897564888000488
    10. '        ' → logprob: -10.147564888000488

Token 2300: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7836829423904419
    2. '(self' → logprob: -0.7836829423904419
    3. '(
' → logprob: -3.0336828231811523
    4. '(' → logprob: -3.5336828231811523
    5. '
' → logprob: -6.033682823181152
    6. '```' → logprob: -6.033682823181152
    7. '_' → logprob: -7.158682823181152
    8. '           ' → logprob: -7.283682823181152
    9. '   ' → logprob: -7.283682823181152
    10. '[' → logprob: -8.408682823181152

Token 2301: ' ops' (ID: 26973)
  Prédit: 'ops'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ops' → logprob: -0.0032605347223579884
    2. 'operators' → logprob: -6.003260612487793
    3. ' ops' → logprob: -7.753260612487793
    4. '   ' → logprob: -9.378260612487793
    5. 'operations' → logprob: -9.628260612487793
    6. 'self' → logprob: -10.003260612487793
    7. '       ' → logprob: -10.378260612487793
    8. 'op' → logprob: -10.378260612487793
    9. 'operator' → logprob: -10.878260612487793
    10. '
' → logprob: -11.003260612487793

Token 2302: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4360622465610504
    2. '(self' → logprob: -1.686062216758728
    3. '
' → logprob: -2.6860623359680176
    4. '(' → logprob: -2.9360623359680176
    5. '(
' → logprob: -3.4360623359680176
    6. '```' → logprob: -4.686062335968018
    7. '        
' → logprob: -6.436062335968018
    8. '   ' → logprob: -7.561062335968018
    9. '{' → logprob: -7.561062335968018
    10. '           ' → logprob: -7.811062335968018

Token 2303: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08699234575033188
    2. '(self' → logprob: -3.0869922637939453
    3. '```' → logprob: -3.8369922637939453
    4. '(' → logprob: -4.336992263793945
    5. '(
' → logprob: -7.336992263793945
    6. '           ' → logprob: -7.336992263793945
    7. '`' → logprob: -7.586992263793945
    8. '   ' → logprob: -8.211992263793945
    9. '
' → logprob: -8.836992263793945
    10. '``' → logprob: -8.961992263793945

Token 2304: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8323358297348022
    2. 'if' → logprob: -1.3323358297348022
    3. ' if' → logprob: -1.5823358297348022
    4. 'i' → logprob: -2.832335948944092
    5. '(' → logprob: -4.457335948944092
    6. ' i' → logprob: -4.707335948944092
    7. '```' → logprob: -5.832335948944092
    8. ' (' → logprob: -5.957335948944092
    9. '(n' → logprob: -6.707335948944092
    10. 'n' → logprob: -6.832335948944092

Token 2305: ' use' (ID: 1199)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20827290415763855
    2. ' if' → logprob: -2.458272933959961
    3. 'if' → logprob: -2.708272933959961
    4. 'n' → logprob: -3.958272933959961
    5. '```' → logprob: -4.708272933959961
    6. 'i' → logprob: -6.083272933959961
    7. ' n' → logprob: -6.208272933959961
    8. 'def' → logprob: -7.208272933959961
    9. 'l' → logprob: -7.708272933959961
    10. '   ' → logprob: -7.833272933959961

Token 2306: ' DP' (ID: 51992)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5600796937942505
    2. 'def' → logprob: -1.1850796937942505
    3. '(self' → logprob: -2.185079574584961
    4. 'from' → logprob: -6.435079574584961
    5. 'fun' → logprob: -6.435079574584961
    6. 'lambda' → logprob: -6.685079574584961
    7. '(lambda' → logprob: -6.685079574584961
    8. '       ' → logprob: -6.810079574584961
    9. '
' → logprob: -6.935079574584961
    10. 'memo' → logprob: -7.435079574584961

Token 2307: ' memo' (ID: 46393)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8877220749855042
    2. '{' → logprob: -1.7627220153808594
    3. '(' → logprob: -2.0127220153808594
    4. '(
' → logprob: -3.0127220153808594
    5. '(self' → logprob: -3.1377220153808594
    6. '[' → logprob: -3.1377220153808594
    7. '_' → logprob: -3.6377220153808594
    8. '({' → logprob: -3.7627220153808594
    9. '{
' → logprob: -4.012722015380859
    10. '[(' → logprob: -4.262722015380859

Token 2308: 'ization' (ID: 2860)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.6023967266082764
    2. '_' → logprob: -1.6023967266082764
    3. '       ' → logprob: -1.9773967266082764
    4. '{' → logprob: -2.1023967266082764
    5. '[' → logprob: -2.2273967266082764
    6. '[(' → logprob: -2.4773967266082764
    7. '((' → logprob: -3.7273967266082764
    8. '
' → logprob: -3.9773967266082764
    9. '(self' → logprob: -3.9773967266082764
    10. '(
' → logprob: -3.9773967266082764

Token 2309: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6139886379241943
    2. '(' → logprob: -1.3639886379241943
    3. '(self' → logprob: -1.7389886379241943
    4. '(
' → logprob: -3.8639886379241943
    5. '   ' → logprob: -5.988988876342773
    6. ' (' → logprob: -6.488988876342773
    7. '((' → logprob: -7.113988876342773
    8. '```' → logprob: -8.113988876342773
    9. '           ' → logprob: -8.238988876342773
    10. ' ' → logprob: -8.613988876342773

Token 2310: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007964789867401123
    2. '0' → logprob: -5.632964611053467
    3. '(self' → logprob: -5.882964611053467
    4. 'self' → logprob: -7.132964611053467
    5. ' (' → logprob: -7.507964611053467
    6. 'def' → logprob: -9.507965087890625
    7. '(start' → logprob: -10.257965087890625
    8. '(int' → logprob: -10.757965087890625
    9. '(len' → logprob: -11.132965087890625
    10. '   ' → logprob: -11.132965087890625

Token 2311: 'start' (ID: 5236)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03599147871136665
    2. '(' → logprob: -3.5359914302825928
    3. 'self' → logprob: -5.285991668701172
    4. '(self' → logprob: -7.535991668701172
    5. 'int' → logprob: -8.285991668701172
    6. '   ' → logprob: -9.785991668701172
    7. ' ' → logprob: -9.785991668701172
    8. ')' → logprob: -10.035991668701172
    9. 'start' → logprob: -10.035991668701172
    10. ' (' → logprob: -10.285991668701172

Token 2312: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004675880074501038
    2. ',int' → logprob: -6.25467586517334
    3. ',end' → logprob: -6.87967586517334
    4. ' ,' → logprob: -7.75467586517334
    5. ',
' → logprob: -8.62967586517334
    6. '```' → logprob: -8.75467586517334
    7. '   ' → logprob: -9.00467586517334
    8. ':int' → logprob: -9.37967586517334
    9. ',i' → logprob: -9.37967586517334
    10. ',self' → logprob: -9.37967586517334

Token 2313: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.022777391597628593
    2. ' end' → logprob: -4.397777557373047
    3. '0' → logprob: -5.022777557373047
    4. 'start' → logprob: -6.647777557373047
    5. 'stop' → logprob: -6.647777557373047
    6. 'len' → logprob: -7.522777557373047
    7. 'self' → logprob: -8.647777557373047
    8. ' ' → logprob: -9.897777557373047
    9. '   ' → logprob: -9.897777557373047
    10. ',end' → logprob: -10.397777557373047

Token 2314: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2792654037475586
    2. ')' → logprob: -1.5292654037475586
    3. '[' → logprob: -4.904265403747559
    4. '):' → logprob: -4.904265403747559
    5. '_,' → logprob: -5.154265403747559
    6. '       ' → logprob: -6.404265403747559
    7. '```' → logprob: -6.904265403747559
    8. '   ' → logprob: -7.154265403747559
    9. '_' → logprob: -7.529265403747559
    10. ',
' → logprob: -7.779265403747559

Token 2315: ' expression' (ID: 12973)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07843205332756042
    2. '(' → logprob: -2.828432083129883
    3. '(self' → logprob: -4.828432083129883
    4. '(
' → logprob: -5.453432083129883
    5. '           ' → logprob: -6.828432083129883
    6. '   ' → logprob: -7.203432083129883
    7. ''' → logprob: -7.953432083129883
    8. ' (' → logprob: -8.078432083129883
    9. '```' → logprob: -8.203432083129883
    10. '`' → logprob: -8.328432083129883

Token 2316: ' slice' (ID: 30288)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7413156032562256
    2. '(' → logprob: -0.8663156032562256
    3. '(
' → logprob: -3.3663156032562256
    4. '(self' → logprob: -3.6163156032562256
    5. '```' → logprob: -4.616315841674805
    6. ' (' → logprob: -4.741315841674805
    7. '           ' → logprob: -5.366315841674805
    8. '`' → logprob: -5.366315841674805
    9. '_' → logprob: -6.116315841674805
    10. '[' → logprob: -6.116315841674805

Token 2317: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029566142708063126
    2. '(' → logprob: -4.529566287994385
    3. '   ' → logprob: -5.404566287994385
    4. '(
' → logprob: -5.654566287994385
    5. '           ' → logprob: -5.904566287994385
    6. '[' → logprob: -6.654566287994385
    7. ' (' → logprob: -6.904566287994385
    8. '
' → logprob: -7.279566287994385
    9. '        
' → logprob: -7.279566287994385
    10. '```' → logprob: -7.404566287994385

Token 2318: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007705057505518198
    2. '(' → logprob: -5.132705211639404
    3. '```' → logprob: -7.882705211639404
    4. '(
' → logprob: -8.132704734802246
    5. '           ' → logprob: -8.132704734802246
    6. '        
' → logprob: -8.757704734802246
    7. '(self' → logprob: -8.882704734802246
    8. '`' → logprob: -9.507704734802246
    9. '[' → logprob: -9.507704734802246
    10. '        ' → logprob: -9.632704734802246

Token 2319: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12051279097795486
    2. '(' → logprob: -2.4955127239227295
    3. '0' → logprob: -4.995512962341309
    4. ' (' → logprob: -5.620512962341309
    5. '        ' → logprob: -5.995512962341309
    6. '           ' → logprob: -6.120512962341309
    7. ' ' → logprob: -6.495512962341309
    8. '   ' → logprob: -6.620512962341309
    9. ' 
' → logprob: -6.745512962341309
    10. '(
' → logprob: -6.870512962341309

Token 2320: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.001242017257027328
    2. ' self' → logprob: -6.876242160797119
    3. '       ' → logprob: -8.626241683959961
    4. '(self' → logprob: -10.751241683959961
    5. '{' → logprob: -12.376241683959961
    6. '           ' → logprob: -13.751241683959961
    7. '   ' → logprob: -14.626241683959961
    8. '      ' → logprob: -15.126241683959961
    9. '{}' → logprob: -15.126241683959961
    10. '  ' → logprob: -15.376241683959961

Token 2321: '._' (ID: 2697)
  Prédit: '.evaluate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.evaluate' → logprob: -0.0333879329264164
    2. '.' → logprob: -4.158388137817383
    3. '._' → logprob: -4.533388137817383
    4. '.eval' → logprob: -6.283388137817383
    5. '.e' → logprob: -6.658388137817383
    6. 'evaluate' → logprob: -6.783388137817383
    7. '```' → logprob: -7.533388137817383
    8. ' .' → logprob: -7.783388137817383
    9. '   ' → logprob: -7.908388137817383
    10. '
' → logprob: -8.783388137817383

Token 2322: 'eval' (ID: 37679)
  Prédit: 'evaluate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'evaluate' → logprob: -0.11227905005216599
    2. 'eval' → logprob: -2.362278938293457
    3. 'compute' → logprob: -4.487278938293457
    4. 'calc' → logprob: -7.987278938293457
    5. 'dfs' → logprob: -9.362278938293457
    6. '_eval' → logprob: -9.487278938293457
    7. 'calculate' → logprob: -9.987278938293457
    8. 'dp' → logprob: -9.987278938293457
    9. 'memo' → logprob: -9.987278938293457
    10. 'all' → logprob: -10.612278938293457

Token 2323: '_range' (ID: 22022)
  Prédit: '_all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_all' → logprob: -0.0018138210289180279
    2. '_' → logprob: -7.501813888549805
    3. 'l' → logprob: -7.876813888549805
    4. 'All' → logprob: -8.501813888549805
    5. '_l' → logprob: -9.626813888549805
    6. '(_' → logprob: -9.751813888549805
    7. 'u' → logprob: -9.876813888549805
    8. '_ll' → logprob: -10.126813888549805
    9. 'll' → logprob: -10.251813888549805
    10. 's' → logprob: -10.376813888549805

Token 2324: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.058047808706760406
    2. '(
' → logprob: -3.1830477714538574
    3. '((' → logprob: -4.558047771453857
    4. '[' → logprob: -6.808047771453857
    5. '([' → logprob: -7.683047771453857
    6. '[(' → logprob: -7.808047771453857
    7. '({' → logprob: -7.808047771453857
    8. '[
' → logprob: -8.058048248291016
    9. '(_' → logprob: -8.308048248291016
    10. '(self' → logprob: -8.558048248291016

Token 2325: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.27099974633893e-05
    2. ' ' → logprob: -11.500012397766113
    3. '(' → logprob: -13.375012397766113
    4. '   ' → logprob: -14.625012397766113
    5. ')' → logprob: -14.750012397766113
    6. '       ' → logprob: -16.37501335144043
    7. '  ' → logprob: -17.50001335144043
    8. 'self' → logprob: -17.62501335144043
    9. ',' → logprob: -18.00001335144043
    10. '           ' → logprob: -18.37501335144043

Token 2326: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00472417613491416
    2. ',len' → logprob: -5.379724025726318
    3. ' ,' → logprob: -9.504724502563477
    4. ',
' → logprob: -11.379724502563477
    5. ')' → logprob: -12.129724502563477
    6. 'len' → logprob: -13.129724502563477
    7. ',length' → logprob: -13.129724502563477
    8. '(len' → logprob: -13.629724502563477
    9. '<|end|>' → logprob: -13.629724502563477
    10. ',None' → logprob: -13.879724502563477

Token 2327: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.000719222822226584
    2. ' len' → logprob: -7.25071907043457
    3. '(len' → logprob: -11.87571907043457
    4. '	len' → logprob: -13.75071907043457
    5. '[len' → logprob: -14.50071907043457
    6. '   ' → logprob: -15.25071907043457
    7. ',len' → logprob: -15.62571907043457
    8. 'self' → logprob: -15.87571907043457
    9. ')' → logprob: -16.75071907043457
    10. '=len' → logprob: -16.87571907043457

Token 2328: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0025288143660873175
    2. 'self' → logprob: -6.502528667449951
    3. '(' → logprob: -7.127528667449951
    4. '(
' → logprob: -8.62752914428711
    5. ')' → logprob: -10.75252914428711
    6. '(expr' → logprob: -11.12752914428711
    7. ' self' → logprob: -13.00252914428711
    8. ' (' → logprob: -13.37752914428711
    9. ',' → logprob: -14.50252914428711
    10. '[self' → logprob: -14.62752914428711

Token 2329: '.expr' (ID: 121306)
  Prédit: '.expr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.expr' → logprob: -6.492120155598968e-05
    2. 'expr' → logprob: -9.750064849853516
    3. 'self' → logprob: -13.000064849853516
    4. '(expr' → logprob: -13.625064849853516
    5. '.expression' → logprob: -14.375064849853516
    6. ').' → logprob: -14.625064849853516
    7. '   ' → logprob: -14.750064849853516
    8. '.' → logprob: -14.875064849853516
    9. '.args' → logprob: -14.875064849853516
    10. '.ex' → logprob: -15.875064849853516

Token 2330: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -2.081584716506768e-05
    2. 'prs' → logprob: -12.375020980834961
    3. 'expr' → logprob: -12.500020980834961
    4. ')' → logprob: -13.000020980834961
    5. 'rs' → logprob: -13.375020980834961
    6. ' s' → logprob: -13.375020980834961
    7. 'cs' → logprob: -13.625020980834961
    8. '   ' → logprob: -13.750020980834961
    9. 'sx' → logprob: -14.375020980834961
    10. ')s' → logprob: -14.625020980834961

Token 2331: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.061243053525686264
    2. '-' → logprob: -3.1862430572509766
    3. ' -' → logprob: -4.061243057250977
    4. ',' → logprob: -8.436243057250977
    5. '   ' → logprob: -8.561243057250977
    6. '       ' → logprob: -8.811243057250977
    7. ')-' → logprob: -9.061243057250977
    8. ' )' → logprob: -9.561243057250977
    9. '),' → logprob: -10.686243057250977
    10. ')
' → logprob: -11.061243057250977

Token 2332: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.060566503554582596
    2. '-' → logprob: -3.0605664253234863
    3. ' -' → logprob: -5.060566425323486
    4. '       ' → logprob: -5.935566425323486
    5. ',' → logprob: -7.185566425323486
    6. ')
' → logprob: -7.560566425323486
    7. '+' → logprob: -7.810566425323486
    8. '   ' → logprob: -7.810566425323486
    9. ' )' → logprob: -8.810566902160645
    10. '```' → logprob: -9.560566902160645

Token 2333: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.2994620242971e-06
    2. ' ' → logprob: -11.750008583068848
    3. '0' → logprob: -15.000008583068848
    4. '2' → logprob: -16.75000762939453
    5. '```' → logprob: -17.75000762939453
    6. '   ' → logprob: -18.00000762939453
    7. ')' → logprob: -18.25000762939453
    8. '`' → logprob: -19.25000762939453
    9. '[' → logprob: -20.62500762939453
    10. '(' → logprob: -21.18750762939453

Token 2334: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. '0' → logprob: -14.250000953674316
    3. ' ' → logprob: -14.625000953674316
    4. '2' → logprob: -18.125001907348633
    5. '```' → logprob: -19.000001907348633
    6. '   ' → logprob: -19.250001907348633
    7. '
' → logprob: -20.125001907348633
    8. ')' → logprob: -21.000001907348633
    9. 'from' → logprob: -21.000001907348633
    10. '`' → logprob: -21.125001907348633

Token 2335: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01776871271431446
    2. '       ' → logprob: -4.267768859863281
    3. '+' → logprob: -6.392768859863281
    4. ' +' → logprob: -6.892768859863281
    5. '   ' → logprob: -8.392768859863281
    6. ',' → logprob: -8.767768859863281
    7. ' )' → logprob: -9.017768859863281
    8. ')+' → logprob: -9.017768859863281
    9. '           ' → logprob: -9.767768859863281
    10. '        ' → logprob: -10.267768859863281

Token 2336: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32230451703071594
    2. ':' → logprob: -1.8223044872283936
    3. '   ' → logprob: -2.3223044872283936
    4. '(' → logprob: -5.197304725646973
    5. '{' → logprob: -5.822304725646973
    6. '[' → logprob: -6.697304725646973
    7. ',' → logprob: -6.697304725646973
    8. '_' → logprob: -6.947304725646973
    9. ':
' → logprob: -6.947304725646973
    10. 'def' → logprob: -7.072304725646973

Token 2337: ' def' (ID: 1056)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6208560466766357
    2. '   ' → logprob: -1.3708560466766357
    3. ':' → logprob: -2.1208560466766357
    4. '_' → logprob: -3.9958560466766357
    5. '(' → logprob: -4.120856285095215
    6. '```' → logprob: -4.245856285095215
    7. ':
' → logprob: -4.495856285095215
    8. 'def' (adapté à ' def') → logprob: -5.495856285095215
    9. '{' → logprob: -5.620856285095215
    10. '    ' → logprob: -5.995856285095215

Token 2338: ' _' (ID: 1175)
  Prédit: '_eval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_eval' → logprob: -2.057743949990254e-05
    2. 'def' → logprob: -11.625020980834961
    3. ' _' → logprob: -12.250020980834961
    4. '_def' → logprob: -13.125020980834961
    5. '_' → logprob: -13.750020980834961
    6. '_m' → logprob: -14.000020980834961
    7. '_e' → logprob: -14.125020980834961
    8. '_ev' → logprob: -15.000020980834961
    9. '_repr' → logprob: -15.375020980834961
    10. '_eq' → logprob: -15.500020980834961

Token 2339: 'eval' (ID: 37679)
  Prédit: 'eval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eval' → logprob: -2.7610454708337784e-05
    2. '_eval' → logprob: -10.500027656555176
    3. '(eval' → logprob: -18.37502670288086
    4. ' eval' → logprob: -18.50002670288086
    5. 'def' → logprob: -20.75002670288086
    6. 'evaluate' → logprob: -20.87502670288086
    7. '.eval' → logprob: -21.12502670288086
    8. 'e' → logprob: -21.75002670288086
    9. '_e' → logprob: -22.25002670288086
    10. 'ev' → logprob: -22.37502670288086

Token 2340: '_range' (ID: 22022)
  Prédit: '_range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_range' → logprob: -1.5048530030981055e-06
    2. 'range' → logprob: -14.625001907348633
    3. 'Range' → logprob: -15.000001907348633
    4. '_eval' → logprob: -15.500001907348633
    5. '\' → logprob: -15.750001907348633
    6. '   ' → logprob: -16.125001907348633
    7. '_r' → logprob: -16.625001907348633
    8. '_ranges' → logprob: -17.000001907348633
    9. ' _' → logprob: -17.250001907348633
    10. '`' → logprob: -18.250001907348633

Token 2341: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.7729658540920354e-05
    2. '(' → logprob: -10.500027656555176
    3. ' (' → logprob: -17.000028610229492
    4. '(
' → logprob: -17.250028610229492
    5. '       ' → logprob: -17.875028610229492
    6. '   ' → logprob: -18.375028610229492
    7. 'self' → logprob: -19.250028610229492
    8. '(start' → logprob: -19.375028610229492
    9. '(this' → logprob: -19.875028610229492
    10. ' ' → logprob: -20.000028610229492

Token 2342: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0017483653500676155
    2. '(' → logprob: -6.751748561859131
    3. '       ' → logprob: -8.001748085021973
    4. 'self' → logprob: -8.876748085021973
    5. '   ' → logprob: -9.626748085021973
    6. ' (' → logprob: -11.251748085021973
    7. ')' → logprob: -12.001748085021973
    8. '(
' → logprob: -12.251748085021973
    9. '(start' → logprob: -12.251748085021973
    10. ' ' → logprob: -12.876748085021973

Token 2343: ' i' (ID: 575)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.020163200795650482
    2. 'self' → logprob: -4.145163059234619
    3. ' start' → logprob: -5.520163059234619
    4. ' self' → logprob: -9.895163536071777
    5. '   ' → logprob: -10.395163536071777
    6. 'int' → logprob: -11.020163536071777
    7. 'left' → logprob: -11.645163536071777
    8. '0' → logprob: -12.645163536071777
    9. 'l' → logprob: -13.520163536071777
    10. ' ' → logprob: -14.020163536071777

Token 2344: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018632952123880386
    2. ' ,' → logprob: -4.393632888793945
    3. ',i' → logprob: -5.393632888793945
    4. '   ' → logprob: -6.643632888793945
    5. ',int' → logprob: -9.143632888793945
    6. ',j' → logprob: -10.518632888793945
    7. '    ' → logprob: -10.768632888793945
    8. ',
' → logprob: -11.018632888793945
    9. ' ' → logprob: -11.018632888793945
    10. '	' → logprob: -11.768632888793945

Token 2345: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.14294064044952393
    2. 'i' → logprob: -2.0179405212402344
    3. ' int' → logprob: -9.767940521240234
    4. '[int' → logprob: -9.767940521240234
    5. ' i' → logprob: -10.142940521240234
    6. ',' → logprob: -10.142940521240234
    7. '0' → logprob: -10.892940521240234
    8. '(int' → logprob: -11.517940521240234
    9. '   ' → logprob: -11.517940521240234
    10. ',int' → logprob: -11.642940521240234

Token 2346: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012558852904476225
    2. ' ,' → logprob: -9.375125885009766
    3. ',i' → logprob: -10.375125885009766
    4. ',int' → logprob: -11.875125885009766
    5. ',j' → logprob: -13.750125885009766
    6. '   ' → logprob: -14.000125885009766
    7. ',
' → logprob: -14.875125885009766
    8. ',n' → logprob: -16.750125885009766
    9. '       ' → logprob: -17.125125885009766
    10. ',k' → logprob: -17.375125885009766

Token 2347: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0020977992098778486
    2. ' j' → logprob: -6.2520976066589355
    3. '   ' → logprob: -8.877098083496094
    4. '    ' → logprob: -11.627098083496094
    5. '     ' → logprob: -12.377098083496094
    6. '       ' → logprob: -12.377098083496094
    7. 'i' → logprob: -12.752098083496094
    8. '  ' → logprob: -12.877098083496094
    9. '      ' → logprob: -13.002098083496094
    10. ' ' → logprob: -14.002098083496094

Token 2348: ':' (ID: 25)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.44941648840904236
    2. ':' → logprob: -2.324416399002075
    3. ',' → logprob: -2.324416399002075
    4. ' +' → logprob: -2.949416399002075
    5. ')' → logprob: -3.074416399002075
    6. '   ' → logprob: -3.824416399002075
    7. '):
' → logprob: -4.824416637420654
    8. '<|end|>' → logprob: -5.074416637420654
    9. ',i' → logprob: -5.199416637420654
    10. ':int' → logprob: -5.199416637420654

Token 2349: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -8.061054359131958e-06
    2. ' int' → logprob: -12.125007629394531
    3. '   ' → logprob: -13.375007629394531
    4. 'j' → logprob: -14.875007629394531
    5. '(int' → logprob: -15.375007629394531
    6. 'i' → logprob: -15.750007629394531
    7. ')' → logprob: -16.75000762939453
    8. '[int' → logprob: -17.00000762939453
    9. 'def' → logprob: -17.25000762939453
    10. '       ' → logprob: -17.25000762939453

Token 2350: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016956469044089317
    2. '):
' → logprob: -4.891956329345703
    3. '):' → logprob: -5.016956329345703
    4. ':' → logprob: -6.641956329345703
    5. '   ' → logprob: -7.766956329345703
    6. '       ' → logprob: -7.766956329345703
    7. ')->' → logprob: -8.141956329345703
    8. ',' → logprob: -9.516956329345703
    9. '+' → logprob: -9.766956329345703
    10. ':int' → logprob: -11.016956329345703

Token 2351: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3302657902240753
    2. '       ' → logprob: -1.330265760421753
    3. ')' → logprob: -4.955265998840332
    4. '   ' → logprob: -5.830265998840332
    5. ':
' → logprob: -6.580265998840332
    6. '->' → logprob: -6.830265998840332
    7. ' ->' → logprob: -7.205265998840332
    8. '<|end|>' → logprob: -7.455265998840332
    9. '        ' → logprob: -7.830265998840332
    10. '           ' → logprob: -8.080265998840332

Token 2352: ' Set' (ID: 3957)
  Prédit: 'Set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Set' → logprob: -3.4121114822482923e-06
    2. 'set' → logprob: -13.125003814697266
    3. ' Set' → logprob: -14.375003814697266
    4. 'Optional' → logprob: -15.750003814697266
    5. 'int' → logprob: -16.000003814697266
    6. '_set' → logprob: -16.250003814697266
    7. '   ' → logprob: -16.250003814697266
    8. 'Dict' → logprob: -16.625003814697266
    9. '	Set' → logprob: -16.875003814697266
    10. 'Sets' → logprob: -17.250003814697266

Token 2353: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -6.988221684878226e-06
    2. 'int' → logprob: -12.375006675720215
    3. '(int' → logprob: -13.875006675720215
    4. '<int' → logprob: -14.375006675720215
    5. '[Int' → logprob: -14.875006675720215
    6. '[(' → logprob: -15.125006675720215
    7. '[' → logprob: -15.625006675720215
    8. '   ' → logprob: -16.37500762939453
    9. '```' → logprob: -16.37500762939453
    10. '[
' → logprob: -16.75000762939453

Token 2354: ']:
' (ID: 22152)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.007772371172904968
    2. '       ' → logprob: -5.132772445678711
    3. '(' → logprob: -7.507772445678711
    4. '   ' → logprob: -7.757772445678711
    5. ')' → logprob: -7.882772445678711
    6. '):
' → logprob: -8.257772445678711
    7. '(int' → logprob: -9.882772445678711
    8. '(i' → logprob: -10.007772445678711
    9. 'self' → logprob: -10.257772445678711
    10. '(
' → logprob: -10.507772445678711

Token 2355: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016097202897071838
    2. ' if' → logprob: -7.251609802246094
    3. 'if' → logprob: -8.126609802246094
    4. '```' → logprob: -8.251609802246094
    5. '        
' → logprob: -10.251609802246094
    6. '(' → logprob: -10.251609802246094
    7. '        ' → logprob: -10.501609802246094
    8. '[' → logprob: -10.501609802246094
    9. '           ' → logprob: -10.626609802246094
    10. '	' → logprob: -10.751609802246094

Token 2356: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10078183561563492
    2. 'if' (adapté à ' if') → logprob: -2.3507819175720215
    3. '```' → logprob: -7.6007819175720215
    4. ' if' → logprob: -9.725781440734863
    5. '``' → logprob: -11.850781440734863
    6. '   ' → logprob: -12.600781440734863
    7. '	' → logprob: -14.100781440734863
    8. '	if' → logprob: -14.225781440734863
    9. '{
' → logprob: -14.600781440734863
    10. '           ' → logprob: -14.600781440734863

Token 2357: ' (' (ID: 350)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0017201616428792477
    2. ' i' → logprob: -6.376719951629639
    3. '       ' → logprob: -12.001720428466797
    4. '   ' → logprob: -12.251720428466797
    5. '(i' → logprob: -12.876720428466797
    6. '           ' → logprob: -13.376720428466797
    7. 'self' → logprob: -13.876720428466797
    8. ' (' → logprob: -14.001720428466797
    9. '     ' → logprob: -14.751720428466797
    10. ' self' → logprob: -15.751720428466797

Token 2358: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.5451681974809617e-05
    2. '(i' → logprob: -11.500015258789062
    3. '   ' → logprob: -12.500015258789062
    4. ' i' → logprob: -14.000015258789062
    5. '       ' → logprob: -15.125015258789062
    6. '_i' → logprob: -15.250015258789062
    7. ' (' → logprob: -15.875015258789062
    8. ')i' → logprob: -17.125015258789062
    9. '           ' → logprob: -17.250015258789062
    10. ')' → logprob: -17.375015258789062

Token 2359: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0023116690572351217
    2. ',i' → logprob: -6.752311706542969
    3. ',j' → logprob: -6.877311706542969
    4. '==' → logprob: -10.377311706542969
    5. ' ,' → logprob: -11.127311706542969
    6. ',int' → logprob: -11.252311706542969
    7. ',
' → logprob: -11.377311706542969
    8. ',next' → logprob: -12.002311706542969
    9. ',n' → logprob: -12.252311706542969
    10. ',k' → logprob: -12.502311706542969

Token 2360: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -4.842555426876061e-06
    2. ' j' → logprob: -12.375004768371582
    3. 'i' → logprob: -14.500004768371582
    4. '   ' → logprob: -17.1250057220459
    5. '$j' → logprob: -17.8750057220459
    6. ')' → logprob: -18.6250057220459
    7. '	j' → logprob: -18.6250057220459
    8. '```' → logprob: -18.6250057220459
    9. ',j' → logprob: -20.0000057220459
    10. '_j' → logprob: -20.0000057220459

Token 2361: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00014239625306800008
    2. ' in' → logprob: -9.375142097473145
    3. ')==' → logprob: -10.875142097473145
    4. ' )' → logprob: -11.625142097473145
    5. 'in' → logprob: -12.000142097473145
    6. ',)' → logprob: -12.125142097473145
    7. ']' → logprob: -13.125142097473145
    8. ' not' → logprob: -13.125142097473145
    9. '   ' → logprob: -13.250142097473145
    10. '==' → logprob: -13.375142097473145

Token 2362: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.47409969568252563
    2. ' in' → logprob: -0.9740996956825256
    3. ')' → logprob: -11.974100112915039
    4. '   ' → logprob: -12.599100112915039
    5. 'i' → logprob: -13.224100112915039
    6. 'In' → logprob: -13.474100112915039
    7. '[' → logprob: -13.599100112915039
    8. '==' → logprob: -13.599100112915039
    9. 'is' → logprob: -13.849100112915039
    10. ' ' → logprob: -13.974100112915039

Token 2363: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -6.630610641877865e-06
    2. ' self' → logprob: -12.000006675720215
    3. '       ' → logprob: -15.000006675720215
    4. '   ' → logprob: -17.7500057220459
    5. '(self' → logprob: -18.2500057220459
    6. '           ' → logprob: -20.2500057220459
    7. '[self' → logprob: -21.0000057220459
    8. '`' → logprob: -21.2500057220459
    9. '=self' → logprob: -21.3750057220459
    10. '
' → logprob: -21.5000057220459

Token 2364: '.memo' (ID: 161018)
  Prédit: '.memo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.memo' → logprob: -0.00020950057660229504
    2. 'memo' → logprob: -8.50020980834961
    3. '.memory' → logprob: -12.87520980834961
    4. '.mem' → logprob: -13.12520980834961
    5. '.' → logprob: -13.62520980834961
    6. '
' → logprob: -16.37520980834961
    7. ' memo' → logprob: -16.50020980834961
    8. ' .' → logprob: -17.50020980834961
    9. 'Memo' → logprob: -17.50020980834961
    10. '.mn' → logprob: -17.75020980834961

Token 2365: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04058844968676567
    2. ':
' → logprob: -3.29058837890625
    3. ':return' → logprob: -6.79058837890625
    4. '           ' → logprob: -7.79058837890625
    5. '<|end|>' → logprob: -8.29058837890625
    6. '=' → logprob: -8.41558837890625
    7. '       ' → logprob: -8.41558837890625
    8. '):
' → logprob: -9.91558837890625
    9. ' =' → logprob: -9.91558837890625
    10. '):' → logprob: -10.16558837890625

Token 2366: '           ' (ID: 352)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.04355673864483833
    2. '           ' → logprob: -3.2935566902160645
    3. 'self' → logprob: -5.4185566902160645
    4. '{return' → logprob: -7.7935566902160645
    5. ' return' → logprob: -7.9185566902160645
    6. '{' → logprob: -8.918557167053223
    7. '       ' → logprob: -9.543557167053223
    8. '```' → logprob: -10.543557167053223
    9. '{
' → logprob: -10.918557167053223
    10. '   ' → logprob: -11.668557167053223

Token 2367: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -6.432518421206623e-05
    2. ' return' → logprob: -9.7500638961792
    3. '       ' → logprob: -12.2500638961792
    4. '           ' → logprob: -14.7500638961792
    5. 'self' → logprob: -14.7500638961792
    6. '{return' → logprob: -15.2500638961792
    7. ':return' → logprob: -16.250064849853516
    8. '	return' → logprob: -16.625064849853516
    9. '```' → logprob: -17.750064849853516
    10. '   ' → logprob: -18.500064849853516

Token 2368: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -7.941850526549388e-06
    2. ' self' → logprob: -11.750007629394531
    3. '(self' → logprob: -18.87500762939453
    4. '       ' → logprob: -19.50000762939453
    5. '	self' → logprob: -20.00000762939453
    6. '[self' → logprob: -21.25000762939453
    7. '=self' → logprob: -21.25000762939453
    8. '
' → logprob: -21.87500762939453
    9. '```' → logprob: -22.50000762939453
    10. '           ' → logprob: -22.62500762939453

Token 2369: '.memo' (ID: 161018)
  Prédit: '.memo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.memo' → logprob: -1.4259644558478612e-05
    2. '.mem' → logprob: -11.625014305114746
    3. '.memory' → logprob: -13.125014305114746
    4. '.' → logprob: -13.250014305114746
    5. 'memo' → logprob: -14.000014305114746
    6. '.m' → logprob: -14.750014305114746
    7. ' .' → logprob: -16.62501335144043
    8. '[m' → logprob: -16.87501335144043
    9. '.mime' → logprob: -17.37501335144043
    10. '.mn' → logprob: -18.00001335144043

Token 2370: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.06629093736410141
    2. '[i' → logprob: -3.066290855407715
    3. '(i' → logprob: -4.066290855407715
    4. '       ' → logprob: -8.566290855407715
    5. '
' → logprob: -9.691290855407715
    6. '{i' → logprob: -10.316290855407715
    7. '   ' → logprob: -10.566290855407715
    8. '((' → logprob: -10.566290855407715
    9. '[
' → logprob: -11.066290855407715
    10. '{
' → logprob: -11.441290855407715

Token 2371: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.0280383548888494e-06
    2. ' i' → logprob: -14.500000953674316
    3. '   ' → logprob: -14.750000953674316
    4. '       ' → logprob: -18.000001907348633
    5. ')' → logprob: -18.500001907348633
    6. ')i' → logprob: -18.500001907348633
    7. '_i' → logprob: -18.750001907348633
    8. '{i' → logprob: -19.000001907348633
    9. '(i' → logprob: -19.250001907348633
    10. '           ' → logprob: -19.250001907348633

Token 2372: ',j' (ID: 22712)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.056647174060344696
    2. ',i' → logprob: -2.9316470623016357
    3. 'i' → logprob: -7.056647300720215
    4. ' ,' → logprob: -7.181647300720215
    5. '   ' → logprob: -9.431647300720215
    6. ',j' → logprob: -11.556647300720215
    7. ',
' → logprob: -11.681647300720215
    8. ' i' → logprob: -11.931647300720215
    9. '       ' → logprob: -12.181647300720215
    10. ')' → logprob: -12.431647300720215

Token 2373: ')]
' (ID: 11587)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07094945013523102
    2. ')]' → logprob: -3.0709495544433594
    3. ']
' → logprob: -3.9459495544433594
    4. ')' → logprob: -5.945949554443359
    5. '])' → logprob: -9.82094955444336
    6. ']

' → logprob: -9.94594955444336
    7. ')]
' → logprob: -10.32094955444336
    8. '       ' → logprob: -11.07094955444336
    9. ')
' → logprob: -11.57094955444336
    10. ']
' → logprob: -13.69594955444336

Token 2374: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.845798710244708e-05
    2. ' if' → logprob: -11.000038146972656
    3. 'if' → logprob: -11.125038146972656
    4. '```' → logprob: -12.375038146972656
    5. '   ' → logprob: -13.750038146972656
    6. '           ' → logprob: -14.250038146972656
    7. '        
' → logprob: -15.500038146972656
    8. '	' → logprob: -15.500038146972656
    9. ' ' → logprob: -16.125038146972656
    10. '{' → logprob: -16.500038146972656

Token 2375: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.006928493268787861
    2. '       ' → logprob: -5.006928443908691
    3. ' if' → logprob: -8.506928443908691
    4. '```' → logprob: -11.881928443908691
    5. 'If' → logprob: -12.506928443908691
    6. '	if' → logprob: -15.381928443908691
    7. 'result' → logprob: -16.506929397583008
    8. 'results' → logprob: -16.631929397583008
    9. '#' → logprob: -17.006929397583008
    10. '   ' → logprob: -17.631929397583008

Token 2376: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00018208740220870823
    2. ' i' → logprob: -8.625182151794434
    3. '   ' → logprob: -13.000182151794434
    4. ' ' → logprob: -16.750181198120117
    5. '(i' → logprob: -17.500181198120117
    6. '  ' → logprob: -17.625181198120117
    7. '	i' → logprob: -18.000181198120117
    8. '       ' → logprob: -18.250181198120117
    9. '    ' → logprob: -18.375181198120117
    10. '#' → logprob: -18.375181198120117

Token 2377: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.038344062864780426
    2. ' ==' → logprob: -3.288344144821167
    3. '==
' → logprob: -8.163344383239746
    4. '>' → logprob: -12.288344383239746
    5. '=' → logprob: -12.538344383239746
    6. '===' → logprob: -13.038344383239746
    7. ' ==
' → logprob: -13.663344383239746
    8. ']==' → logprob: -13.663344383239746
    9. '==(' → logprob: -13.663344383239746
    10. ')==' → logprob: -13.788344383239746

Token 2378: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -4.5491004129871726e-05
    2. ' j' → logprob: -10.000045776367188
    3. '   ' → logprob: -18.375045776367188
    4. '	j' → logprob: -18.625045776367188
    5. '       ' → logprob: -19.000045776367188
    6. '           ' → logprob: -19.000045776367188
    7. '    ' → logprob: -19.125045776367188
    8. '     ' → logprob: -19.625045776367188
    9. '      ' → logprob: -20.500045776367188
    10. '          ' → logprob: -20.750045776367188

Token 2379: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.30754128098487854
    2. ':' → logprob: -1.6825412511825562
    3. '           ' → logprob: -2.8075413703918457
    4. ':return' → logprob: -4.557541370391846
    5. 'return' → logprob: -5.432541370391846
    6. '       ' → logprob: -6.432541370391846
    7. '{' → logprob: -6.807541370391846
    8. ' return' → logprob: -7.932541370391846
    9. '{
' → logprob: -8.932540893554688
    10. '{return' → logprob: -9.182540893554688

Token 2380: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1933569461107254
    2. '           ' → logprob: -1.943356990814209
    3. 'return' → logprob: -3.443356990814209
    4. ' return' → logprob: -7.693356990814209
    5. '{return' → logprob: -9.19335651397705
    6. '{
' → logprob: -10.81835651397705
    7. '{' → logprob: -10.94335651397705
    8. ':return' → logprob: -11.31835651397705
    9. 'self' → logprob: -12.19335651397705
    10. '               ' → logprob: -12.56835651397705

Token 2381: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.049507200717926025
    2. 'result' → logprob: -3.5495071411132812
    3. 'res' → logprob: -4.549507141113281
    4. 'self' → logprob: -5.299507141113281
    5. 'results' → logprob: -5.549507141113281
    6. 'vals' → logprob: -9.674507141113281
    7. 'ret' → logprob: -11.049507141113281
    8. ' return' → logprob: -11.549507141113281
    9. 'val' → logprob: -12.299507141113281
    10. '       ' → logprob: -12.424507141113281

Token 2382: ' single' (ID: 4590)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.004122923128306866
    2. 'result' → logprob: -5.754122734069824
    3. '       ' → logprob: -7.754122734069824
    4. 'self' → logprob: -7.879122734069824
    5. '           ' → logprob: -9.754122734069824
    6. 'res' → logprob: -10.129122734069824
    7. ' return' → logprob: -10.379122734069824
    8. 'ret' → logprob: -12.379122734069824
    9. 'retval' → logprob: -13.629122734069824
    10. 'results' → logprob: -14.379122734069824

Token 2383: ' expression' (ID: 12973)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.22818623483181
    2. 'return' → logprob: -1.8531862497329712
    3. 'result' → logprob: -4.728186130523682
    4. '       ' → logprob: -4.978186130523682
    5. ' self' → logprob: -4.978186130523682
    6. 'Number' → logprob: -5.353186130523682
    7. 'expr' → logprob: -5.353186130523682
    8. '           ' → logprob: -5.478186130523682
    9. 'value' → logprob: -5.478186130523682
    10. ' return' → logprob: -5.603186130523682

Token 2384: ' value' (ID: 1432)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8190199732780457
    2. '       ' → logprob: -0.9440199732780457
    3. ':
' → logprob: -1.9440200328826904
    4. ':' → logprob: -4.194019794464111
    5. 'return' → logprob: -4.819019794464111
    6. '{' → logprob: -7.194019794464111
    7. ':return' → logprob: -7.319019794464111
    8. ' return' → logprob: -7.569019794464111
    9. 'result' → logprob: -7.694019794464111
    10. '{
' → logprob: -7.944019794464111

Token 2385: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9172977209091187
    2. 'return' → logprob: -1.1672977209091187
    3. '       ' → logprob: -1.4172977209091187
    4. ':
' → logprob: -3.417297840118408
    5. ' return' → logprob: -5.167297840118408
    6. 'result' → logprob: -6.292297840118408
    7. '{' → logprob: -6.417297840118408
    8. '{
' → logprob: -6.542297840118408
    9. ':' → logprob: -6.792297840118408
    10. ':return' → logprob: -7.667297840118408

Token 2386: '           ' (ID: 352)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5702945590019226
    2. '           ' → logprob: -1.0702946186065674
    3. '       ' → logprob: -2.4452946186065674
    4. ' return' → logprob: -6.070294380187988
    5. ':' → logprob: -7.070294380187988
    6. ':return' → logprob: -7.320294380187988
    7. ':
' → logprob: -7.570294380187988
    8. '```' → logprob: -8.445294380187988
    9. ' =' → logprob: -8.820294380187988
    10. '               ' → logprob: -9.070294380187988

Token 2387: ' res' (ID: 694)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.03507903218269348
    2. 'result' → logprob: -3.660079002380371
    3. 'res' (adapté à ' res') → logprob: -5.285079002380371
    4. '           ' → logprob: -5.910079002380371
    5. 'self' → logprob: -7.910079002380371
    6. 'results' → logprob: -8.535079002380371
    7. '       ' → logprob: -8.785079002380371
    8. 'ret' → logprob: -9.035079002380371
    9. ' return' → logprob: -9.910079002380371
    10. 'retval' → logprob: -10.035079002380371

Token 2388: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1602482944726944
    2. ' =' → logprob: -1.9102482795715332
    3. '=self' → logprob: -11.285248756408691
    4. '=set' → logprob: -11.910248756408691
    5. 's' → logprob: -13.160248756408691
    6. '       ' → logprob: -14.160248756408691
    7. '=
' → logprob: -14.285248756408691
    8. '           ' → logprob: -14.910248756408691
    9. '={' → logprob: -15.160248756408691
    10. ':' → logprob: -15.285248756408691

Token 2389: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0015117661096155643
    2. ' self' → logprob: -6.501511573791504
    3. '{' → logprob: -12.126511573791504
    4. 'set' → logprob: -12.751511573791504
    5. '(self' → logprob: -14.501511573791504
    6. '           ' → logprob: -15.001511573791504
    7. '       ' → logprob: -15.876511573791504
    8. '	self' → logprob: -16.62651252746582
    9. '   ' → logprob: -17.87651252746582
    10. '{
' → logprob: -18.12651252746582

Token 2390: '.expr' (ID: 121306)
  Prédit: '.expr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.expr' → logprob: -0.00026419671485200524
    2. 'expr' → logprob: -8.250264167785645
    3. 'self' → logprob: -13.125264167785645
    4. '.' → logprob: -15.750264167785645
    5. '(expr' → logprob: -15.750264167785645
    6. '   ' → logprob: -16.12526512145996
    7. '{' → logprob: -16.25026512145996
    8. '=' → logprob: -16.75026512145996
    9. '
' → logprob: -16.75026512145996
    10. '       ' → logprob: -16.87526512145996

Token 2391: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: 0.0
    2. 'ss' → logprob: -18.0
    3. 'ress' → logprob: -18.0
    4. '[i' → logprob: -18.375
    5. 'expr' → logprob: -18.625
    6. '[s' → logprob: -19.0
    7. 'self' → logprob: -19.25
    8. 'sss' → logprob: -19.375
    9. ' s' → logprob: -20.0
    10. '{s' → logprob: -20.0

Token 2392: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.106736039626412e-05
    2. '(i' → logprob: -11.000031471252441
    3. '[' → logprob: -12.125031471252441
    4. '
' → logprob: -13.375031471252441
    5. '{i' → logprob: -13.750031471252441
    6. '[j' → logprob: -13.875031471252441
    7. '[
' → logprob: -14.000031471252441
    8. 'evaluate' → logprob: -14.375031471252441
    9. '   ' → logprob: -14.500031471252441
    10. 'eval' → logprob: -14.750031471252441

Token 2393: '].' (ID: 1651)
  Prédit: '.evaluate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.evaluate' → logprob: -0.0002908910100813955
    2. 'evaluate' → logprob: -9.125290870666504
    3. '.' → logprob: -9.250290870666504
    4. ').' → logprob: -9.625290870666504
    5. '].' → logprob: -11.875290870666504
    6. '   ' → logprob: -12.625290870666504
    7. ' .' → logprob: -12.875290870666504
    8. ')' → logprob: -13.000290870666504
    9. '}.' → logprob: -13.250290870666504
    10. '           ' → logprob: -14.125290870666504

Token 2394: 'evaluate' (ID: 114439)
  Prédit: 'evaluate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'evaluate' → logprob: 0.0
    2. '.evaluate' → logprob: -19.375
    3. ' evaluate' → logprob: -19.5
    4. '   ' → logprob: -21.125
    5. '`' → logprob: -22.375
    6. 'return' → logprob: -22.75
    7. 'valuate' → logprob: -22.75
    8. '
' → logprob: -23.5
    9. '```' → logprob: -23.75
    10. 'eval' → logprob: -24.0

Token 2395: '_all' (ID: 13305)
  Prédit: '_all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_all' → logprob: -8.73314929776825e-05
    2. '()' → logprob: -9.37508773803711
    3. '()
' → logprob: -13.62508773803711
    4. 'All' → logprob: -14.37508773803711
    5. '_' → logprob: -14.62508773803711
    6. 'all' → logprob: -16.75008773803711
    7. '()`' → logprob: -17.00008773803711
    8. ' _' → logprob: -17.25008773803711
    9. '_ALL' → logprob: -17.37508773803711
    10. '```' → logprob: -17.50008773803711

Token 2396: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3868766129016876
    2. '()
' → logprob: -1.1368765830993652
    3. '()
' → logprob: -13.136877059936523
    4. '       ' → logprob: -13.511877059936523
    5. '()

' → logprob: -14.511877059936523
    6. '())' → logprob: -14.886877059936523
    7. '()\' → logprob: -15.011877059936523
    8. '()`' → logprob: -15.136877059936523
    9. '())
' → logprob: -15.386877059936523
    10. '()+' → logprob: -16.136877059936523

Token 2397: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004301103297621012
    2. '           ' → logprob: -5.629301071166992
    3. 'return' → logprob: -7.504301071166992
    4. '```' → logprob: -8.879301071166992
    5. '               ' → logprob: -12.754301071166992
    6. '        
' → logprob: -12.879301071166992
    7. '
' → logprob: -13.004301071166992
    8. '{
' → logprob: -14.379301071166992
    9. ' return' → logprob: -14.629301071166992
    10. '``' → logprob: -15.004301071166992

Token 2398: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39654022455215454
    2. 'self' (adapté à ' self') → logprob: -1.1465401649475098
    3. '           ' → logprob: -4.64654016494751
    4. ' self' → logprob: -11.271540641784668
    5. '
' → logprob: -12.271540641784668
    6. '   ' → logprob: -12.396540641784668
    7. '```' → logprob: -12.521540641784668
    8. '               ' → logprob: -13.896540641784668
    9. '	self' → logprob: -14.896540641784668
    10. '(self' → logprob: -15.021540641784668

Token 2399: '.memo' (ID: 161018)
  Prédit: '.memo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.memo' → logprob: -0.00010247035970678553
    2. 'memo' → logprob: -9.875102043151855
    3. '.mem' → logprob: -10.000102043151855
    4. '.memory' → logprob: -12.250102043151855
    5. '.' → logprob: -14.375102043151855
    6. ' .' → logprob: -17.000102996826172
    7. 'Memo' → logprob: -17.250102996826172
    8. '   ' → logprob: -17.750102996826172
    9. ' memo' → logprob: -17.750102996826172
    10. ').' → logprob: -18.125102996826172

Token 2400: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -4.246537173457909e-06
    2. '[((' → logprob: -13.250003814697266
    3. '.setdefault' → logprob: -13.875003814697266
    4. '((' → logprob: -14.250003814697266
    5. '[' → logprob: -15.375003814697266
    6. '[
' → logprob: -15.625003814697266
    7. '```' → logprob: -15.625003814697266
    8. '   ' → logprob: -16.000003814697266
    9. '
' → logprob: -16.625003814697266
    10. ' [(' → logprob: -17.875003814697266

Token 2401: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -5.5577775128767826e-06
    2. '(i' → logprob: -12.875005722045898
    3. ' i' → logprob: -13.750005722045898
    4. '   ' → logprob: -14.375005722045898
    5. ')' → logprob: -14.625005722045898
    6. ')i' → logprob: -14.750005722045898
    7. '{i' → logprob: -16.1250057220459
    8. ' (' → logprob: -16.2500057220459
    9. '(' → logprob: -16.7500057220459
    10. ' ' → logprob: -17.6250057220459

Token 2402: ',j' (ID: 22712)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1605745404958725
    2. ',i' → logprob: -1.9105745553970337
    3. ',j' → logprob: -8.285574913024902
    4. ' ,' → logprob: -9.785574913024902
    5. '   ' → logprob: -10.785574913024902
    6. ',
' → logprob: -12.660574913024902
    7. '[i' → logprob: -12.785574913024902
    8. 'i' → logprob: -13.035574913024902
    9. '(i' → logprob: -13.035574913024902
    10. '```' → logprob: -13.410574913024902

Token 2403: ')]' (ID: 15710)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13187140226364136
    2. ']' → logprob: -2.131871461868286
    3. ')=' → logprob: -5.881871223449707
    4. ']=' → logprob: -6.256871223449707
    5. '])' → logprob: -9.006871223449707
    6. ')]' → logprob: -10.006871223449707
    7. '=' → logprob: -11.131871223449707
    8. ')
' → logprob: -11.381871223449707
    9. '   ' → logprob: -11.381871223449707
    10. '       ' → logprob: -12.131871223449707

Token 2404: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00033546582562848926
    2. ' =' → logprob: -8.000335693359375
    3. '=
' → logprob: -18.875335693359375
    4. '=

' → logprob: -20.750335693359375
    5. '=set' → logprob: -21.750335693359375
    6. '=}' → logprob: -22.000335693359375
    7. '＝' → logprob: -22.375335693359375
    8. '.=' → logprob: -22.375335693359375
    9. ' ' → logprob: -23.125335693359375
    10. '_=' → logprob: -24.000335693359375

Token 2405: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -3.7697225252486533e-06
    2. ' res' → logprob: -12.500003814697266
    3. 're' → logprob: -20.125003814697266
    4. 'set' → logprob: -22.875003814697266
    5. '	res' → logprob: -23.000003814697266
    6. 'r' → logprob: -23.625003814697266
    7. 'ress' → logprob: -24.250003814697266
    8. 'resi' → logprob: -24.500003814697266
    9. 'rest' → logprob: -24.625003814697266
    10. '(res' → logprob: -24.625003814697266

Token 2406: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00017946491425391287
    2. '       ' → logprob: -9.000179290771484
    3. '               ' → logprob: -11.125179290771484
    4. '<|end|>' → logprob: -11.500179290771484
    5. 'return' → logprob: -11.750179290771484
    6. '	       ' → logprob: -12.000179290771484
    7. '		' → logprob: -12.625179290771484
    8. '                   ' → logprob: -12.875179290771484
    9. '<|end|>' → logprob: -13.250179290771484
    10. '          ' → logprob: -13.250179290771484

Token 2407: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001054603373631835
    2. '       ' → logprob: -6.876054763793945
    3. 'return' → logprob: -11.626054763793945
    4. '               ' → logprob: -12.126054763793945
    5. '   ' → logprob: -12.876054763793945
    6. '	       ' → logprob: -13.626054763793945
    7. '```' → logprob: -13.751054763793945
    8. '                   ' → logprob: -13.751054763793945
    9. '		' → logprob: -14.751054763793945
    10. ' return' → logprob: -15.501054763793945

Token 2408: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.31334972381591797
    2. 'return' (adapté à ' return') → logprob: -1.313349723815918
    3. '       ' → logprob: -10.063349723815918
    4. ' return' → logprob: -10.688349723815918
    5. '{return' → logprob: -11.938349723815918
    6. '   ' → logprob: -12.188349723815918
    7. '               ' → logprob: -12.813349723815918
    8. '		' → logprob: -13.313349723815918
    9. '                   ' → logprob: -13.438349723815918
    10. ':return' → logprob: -13.563349723815918

Token 2409: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -3.128163257315464e-07
    2. ' res' → logprob: -15.5
    3. 're' → logprob: -17.75
    4. 'r' → logprob: -20.375
    5. '	res' → logprob: -21.75
    6. 'ress' → logprob: -22.5
    7. 'resc' → logprob: -23.0
    8. '
' → logprob: -23.25
    9. 'rest' → logprob: -23.25
    10. '(res' → logprob: -23.25

Token 2410: '
        
' (ID: 20417)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013685694430023432
    2. '        
' → logprob: -7.251368522644043
    3. '
' → logprob: -7.626368522644043
    4. '   ' → logprob: -9.876368522644043
    5. '    
' → logprob: -10.751368522644043
    6. '<|end|>' → logprob: -10.751368522644043
    7. '	' → logprob: -11.376368522644043
    8. '           ' → logprob: -11.376368522644043
    9. ')' → logprob: -11.501368522644043
    10. 'return' → logprob: -12.251368522644043

Token 2411: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0049495818093419075
    2. 'if' → logprob: -5.379949569702148
    3. 'result' → logprob: -8.504949569702148
    4. 'results' → logprob: -9.879949569702148
    5. ' if' → logprob: -10.254949569702148
    6. '   ' → logprob: -10.879949569702148
    7. 'import' → logprob: -11.754949569702148
    8. 'res' → logprob: -12.504949569702148
    9. '
' → logprob: -12.879949569702148
    10. '           ' → logprob: -14.129949569702148

Token 2412: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.0007603150443173945
    2. 'result' → logprob: -7.500760078430176
    3. 'res' → logprob: -8.500760078430176
    4. '       ' → logprob: -12.750760078430176
    5. ' results' → logprob: -13.750760078430176
    6. '	results' → logprob: -17.125761032104492
    7. 'all' → logprob: -18.250761032104492
    8. '        
' → logprob: -18.500761032104492
    9. 'Results' → logprob: -19.125761032104492
    10. '           ' → logprob: -19.375761032104492

Token 2413: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014163863845169544
    2. ' =' → logprob: -4.264163970947266
    3. '=set' → logprob: -15.014163970947266
    4. ':' → logprob: -17.014163970947266
    5. '   ' → logprob: -18.514163970947266
    6. ' ' → logprob: -20.514163970947266
    7. '=
' → logprob: -20.764163970947266
    8. '＝' → logprob: -20.764163970947266
    9. 'set' → logprob: -21.014163970947266
    10. '_set' → logprob: -21.014163970947266

Token 2414: ' Set' (ID: 3957)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -4.4849443838757e-06
    2. 'Set' → logprob: -12.875004768371582
    3. ' set' → logprob: -13.875004768371582
    4. '=set' → logprob: -13.875004768371582
    5. '=' → logprob: -18.125003814697266
    6. '{' → logprob: -19.375003814697266
    7. '_set' → logprob: -19.750003814697266
    8. 'sets' → logprob: -20.000003814697266
    9. ')set' → logprob: -20.125003814697266
    10. 'self' → logprob: -20.125003814697266

Token 2415: '[int' (ID: 40124)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.017119603231549263
    2. ' =' → logprob: -4.392119407653809
    3. '[int' → logprob: -5.392119407653809
    4. '=int' → logprob: -10.517119407653809
    5. '=
' → logprob: -11.642119407653809
    6. '=set' → logprob: -12.267119407653809
    7. 'int' → logprob: -13.017119407653809
    8. '   ' → logprob: -13.767119407653809
    9. '=[]
' → logprob: -13.767119407653809
    10. '       ' → logprob: -14.642119407653809

Token 2416: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0004306692280806601
    2. ' =' → logprob: -7.750430583953857
    3. '=set' → logprob: -19.125431060791016
    4. '=
' → logprob: -19.750431060791016
    5. ')=' → logprob: -20.125431060791016
    6. ')' → logprob: -20.500431060791016
    7. ']=' → logprob: -20.750431060791016
    8. '       ' → logprob: -21.125431060791016
    9. '＝' → logprob: -21.375431060791016
    10. '   ' → logprob: -21.750431060791016

Token 2417: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0007106438861228526
    2. ' =' → logprob: -7.250710487365723
    3. '=set' → logprob: -14.250710487365723
    4. '=
' → logprob: -16.50071144104004
    5. '={}' → logprob: -19.00071144104004
    6. '       ' → logprob: -20.37571144104004
    7. '＝' → logprob: -20.50071144104004
    8. '=

' → logprob: -20.62571144104004
    9. ' ' → logprob: -20.75071144104004
    10. 'set' → logprob: -21.25071144104004

Token 2418: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -7.941850526549388e-06
    2. ' set' → logprob: -11.750007629394531
    3. '       ' → logprob: -18.25000762939453
    4. '   ' → logprob: -19.37500762939453
    5. '=set' → logprob: -19.75000762939453
    6. ' ' → logprob: -21.37500762939453
    7. '           ' → logprob: -22.00000762939453
    8. '0' → logprob: -22.12500762939453
    9. '(set' → logprob: -22.50000762939453
    10. '	set' → logprob: -22.62500762939453

Token 2419: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0148025406524539
    2. '
' → logprob: -5.0148024559021
    3. 'for' → logprob: -5.1398024559021
    4. ' for' → logprob: -7.0148024559021
    5. '()
' → logprob: -7.2648024559021
    6. '        
' → logprob: -7.8898024559021
    7. '<|end|>' → logprob: -10.014802932739258
    8. '()' → logprob: -10.264802932739258
    9. '           ' → logprob: -10.514802932739258
    10. '<|end|>' → logprob: -11.014802932739258

Token 2420: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11880989372730255
    2. 'for' → logprob: -2.243809938430786
    3. ' for' → logprob: -5.368809700012207
    4. '           ' → logprob: -6.868809700012207
    5. '```' → logprob: -9.118809700012207
    6. 'k' → logprob: -9.368809700012207
    7. '   ' → logprob: -10.243809700012207
    8. '               ' → logprob: -11.493809700012207
    9. '
' → logprob: -12.118809700012207
    10. '	for' → logprob: -12.368809700012207

Token 2421: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.000924561289139092
    2. '       ' → logprob: -7.000924587249756
    3. ' for' → logprob: -11.250924110412598
    4. '           ' → logprob: -17.375925064086914
    5. '   ' → logprob: -17.625925064086914
    6. '	for' → logprob: -18.125925064086914
    7. 'k' → logprob: -19.625925064086914
    8. 'For' → logprob: -21.125925064086914
    9. '```' → logprob: -21.250925064086914
    10. ' ' → logprob: -21.375925064086914

Token 2422: ' try' (ID: 2075)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00020783171930816025
    2. '       ' → logprob: -8.500207901000977
    3. 'k' → logprob: -12.750207901000977
    4. ' for' → logprob: -13.500207901000977
    5. '   ' → logprob: -17.125207901000977
    6. '           ' → logprob: -18.375207901000977
    7. '	for' → logprob: -19.750207901000977
    8. '```' → logprob: -21.125207901000977
    9. '
' → logprob: -21.250207901000977
    10. '        
' → logprob: -21.750207901000977

Token 2423: ' all' (ID: 722)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -2.8325677703833207e-05
    2. ' k' → logprob: -12.000028610229492
    3. 'split' → logprob: -12.000028610229492
    4. 'mid' → logprob: -12.250028610229492
    5. '   ' → logprob: -12.500028610229492
    6. 'm' → logprob: -12.625028610229492
    7. 'for' → logprob: -13.375028610229492
    8. 'b' → logprob: -14.250028610229492
    9. 't' → logprob: -14.750028610229492
    10. 'r' → logprob: -15.500028610229492

Token 2424: ' splits' (ID: 76848)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00011129142512800172
    2. 'split' → logprob: -9.87511157989502
    3. ' k' → logprob: -10.12511157989502
    4. '   ' → logprob: -11.25011157989502
    5. 'mid' → logprob: -12.62511157989502
    6. '       ' → logprob: -13.87511157989502
    7. '```' → logprob: -14.75011157989502
    8. '(k' → logprob: -15.00011157989502
    9. 'm' → logprob: -15.25011157989502
    10. 'spl' → logprob: -15.50011157989502

Token 2425: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.28124475479125977
    2. ' k' → logprob: -1.6562447547912598
    3. '(k' → logprob: -3.2812447547912598
    4. ' for' → logprob: -4.78124475479126
    5. 'for' → logprob: -6.28124475479126
    6. '_k' → logprob: -6.28124475479126
    7. ' at' → logprob: -6.53124475479126
    8. '       ' → logprob: -7.40624475479126
    9. ' between' → logprob: -7.65624475479126
    10. ' (' → logprob: -7.78124475479126

Token 2426: ' where' (ID: 1919)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.35006898641586304
    2. 'in' → logprob: -1.2250690460205078
    3. 'for' → logprob: -7.225069046020508
    4. '       ' → logprob: -7.600069046020508
    5. ',' → logprob: -9.600069046020508
    6. '           ' → logprob: -9.600069046020508
    7. 'from' → logprob: -10.225069046020508
    8. ' for' → logprob: -10.350069046020508
    9. '   ' → logprob: -10.475069046020508
    10. '
' → logprob: -10.475069046020508

Token 2427: ' op' (ID: 991)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.005659997928887606
    2. 'k' → logprob: -5.380660057067871
    3. ' i' → logprob: -6.880660057067871
    4. ' k' → logprob: -12.130660057067871
    5. '   ' → logprob: -12.505660057067871
    6. '`' → logprob: -14.505660057067871
    7. 'range' → logprob: -14.880660057067871
    8. ' ' → logprob: -15.255660057067871
    9. 'j' → logprob: -15.255660057067871
    10. 'for' → logprob: -15.380660057067871

Token 2428: '[k' (ID: 14298)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.5109519958496094
    2. ' in' → logprob: -1.8859519958496094
    3. ' =' → logprob: -2.1359519958496094
    4. 'k' → logprob: -2.1359519958496094
    5. '_index' → logprob: -2.1359519958496094
    6. 's' → logprob: -2.2609519958496094
    7. 'in' → logprob: -3.0109519958496094
    8. '_idx' → logprob: -3.0109519958496094
    9. '=k' → logprob: -4.510951995849609
    10. ' k' → logprob: -4.510951995849609

Token 2429: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.021520670503377914
    2. 'k' → logprob: -5.271520614624023
    3. ']
' → logprob: -6.396520614624023
    4. ' ]' → logprob: -6.396520614624023
    5. ' k' → logprob: -6.521520614624023
    6. 's' → logprob: -6.646520614624023
    7. '       ' → logprob: -6.771520614624023
    8. ']=' → logprob: -6.896520614624023
    9. ' between' → logprob: -6.896520614624023
    10. ' is' → logprob: -7.146520614624023

Token 2430: ' splits' (ID: 76848)
  Prédit: ' between'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' between' → logprob: -1.5453037023544312
    2. ' k' → logprob: -1.7953037023544312
    3. ' in' → logprob: -2.0453038215637207
    4. ' is' → logprob: -2.2953038215637207
    5. ':' → logprob: -2.6703038215637207
    6. '```' → logprob: -3.2953038215637207
    7. ')' → logprob: -3.4203038215637207
    8. 'k' → logprob: -3.4203038215637207
    9. 'between' → logprob: -3.5453038215637207
    10. '>=' → logprob: -3.7953038215637207

Token 2431: ' expr' (ID: 30206)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.5775677561759949
    2. 'i' → logprob: -1.2025678157806396
    3. 'between' → logprob: -2.7025678157806396
    4. 'the' → logprob: -2.9525678157806396
    5. ' between' → logprob: -5.2025675773620605
    6. ' i' → logprob: -6.0775675773620605
    7. '[i' → logprob: -6.2025675773620605
    8. ' the' → logprob: -6.3275675773620605
    9. ' (' → logprob: -6.9525675773620605
    10. 'expr' → logprob: -7.0775675773620605

Token 2432: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.10522345453500748
    2. '_index' → logprob: -3.7302234172821045
    3. '```' → logprob: -4.730223655700684
    4. '   ' → logprob: -5.105223655700684
    5. '_expr' → logprob: -5.105223655700684
    6. ' between' → logprob: -5.230223655700684
    7. '       ' → logprob: -5.480223655700684
    8. ' =' → logprob: -5.605223655700684
    9. 'expr' → logprob: -5.730223655700684
    10. '_idx' → logprob: -5.855223655700684

Token 2433: '[i' (ID: 1768)
  Prédit: ' between'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' between' → logprob: -0.4103025794029236
    2. 'between' → logprob: -2.6603026390075684
    3. '(i' → logprob: -2.7853026390075684
    4. '[i' → logprob: -3.0353026390075684
    5. 'i' → logprob: -3.1603026390075684
    6. '```' → logprob: -3.9103026390075684
    7. ',' → logprob: -4.160302639007568
    8. '_between' → logprob: -4.160302639007568
    9. '=' → logprob: -4.285302639007568
    10. ' i' → logprob: -4.285302639007568

Token 2434: '..' (ID: 485)
  Prédit: ',k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',k' → logprob: -1.0895230770111084
    2. ',' → logprob: -1.3395230770111084
    3. '+' → logprob: -2.4645230770111084
    4. '+k' → logprob: -2.4645230770111084
    5. ':k' → logprob: -2.7145230770111084
    6. '],' → logprob: -2.8395230770111084
    7. ',j' → logprob: -3.2145230770111084
    8. ':j' → logprob: -3.4645230770111084
    9. ':' → logprob: -4.5895233154296875
    10. ']' → logprob: -4.7145233154296875

Token 2435: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.012983977794647217
    2. 'k' → logprob: -4.387983798980713
    3. 'i' → logprob: -8.262984275817871
    4. ' j' → logprob: -9.387984275817871
    5. ':j' → logprob: -10.512984275817871
    6. ']' → logprob: -11.012984275817871
    7. '   ' → logprob: -11.137984275817871
    8. '[j' → logprob: -11.387984275817871
    9. ',j' → logprob: -11.512984275817871
    10. '
' → logprob: -11.887984275817871

Token 2436: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08034469187259674
    2. '+' → logprob: -3.5803446769714355
    3. ']:
' → logprob: -4.2053446769714355
    4. '],' → logprob: -5.0803446769714355
    5. ']
' → logprob: -5.3303446769714355
    6. ' +' → logprob: -5.7053446769714355
    7. '+k' → logprob: -5.9553446769714355
    8. 'k' → logprob: -6.2053446769714355
    9. ']+' → logprob: -6.2053446769714355
    10. '       ' → logprob: -6.2053446769714355

Token 2437: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.801608681678772
    2. '       ' → logprob: -1.176608681678772
    3. 'for' → logprob: -1.801608681678772
    4. '           ' → logprob: -3.6766085624694824
    5. '```' → logprob: -3.9266085624694824
    6. ' (' → logprob: -5.301608562469482
    7. '(k' → logprob: -5.426608562469482
    8. ':
' → logprob: -5.551608562469482
    9. ':' → logprob: -5.801608562469482
    10. 'k' → logprob: -5.926608562469482

Token 2438: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1174077987670898
    2. ' for' → logprob: -1.1174077987670898
    3. 'for' (adapté à ' for') → logprob: -1.2424077987670898
    4. '           ' → logprob: -2.86740779876709
    5. '   ' → logprob: -9.49240779876709
    6. '
' → logprob: -9.86740779876709
    7. '               ' → logprob: -10.11740779876709
    8. '```' → logprob: -11.61740779876709
    9. '	for' → logprob: -12.11740779876709
    10. ' ' → logprob: -12.11740779876709

Token 2439: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.002809036523103714
    2. ' k' → logprob: -5.877809047698975
    3. '_k' → logprob: -13.252808570861816
    4. '(k' → logprob: -14.377808570861816
    5. '```' → logprob: -14.877808570861816
    6. 'i' → logprob: -15.127808570861816
    7. 'range' → logprob: -15.127808570861816
    8. ' ' → logprob: -15.502808570861816
    9. '   ' → logprob: -15.502808570861816
    10. ' in' → logprob: -16.002809524536133

Token 2440: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007673114072531462
    2. 'in' → logprob: -4.882673263549805
    3. 'i' → logprob: -11.007673263549805
    4. '=' → logprob: -11.132673263549805
    5. ' i' → logprob: -11.632673263549805
    6. ',' → logprob: -12.507673263549805
    7. '```' → logprob: -12.507673263549805
    8. '_in' → logprob: -12.632673263549805
    9. '	in' → logprob: -12.757673263549805
    10. ' ' → logprob: -12.882673263549805

Token 2441: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0005566088366322219
    2. ' range' → logprob: -7.500556468963623
    3. 'i' → logprob: -13.000556945800781
    4. '   ' → logprob: -14.125556945800781
    5. '(range' → logprob: -15.000556945800781
    6. ' ' → logprob: -15.500556945800781
    7. '	range' → logprob: -16.75055694580078
    8. '[i' → logprob: -17.87555694580078
    9. '  ' → logprob: -18.25055694580078
    10. '(i' → logprob: -18.62555694580078

Token 2442: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.31352701783180237
    2. 'i' → logprob: -1.31352698802948
    3. ' i' → logprob: -8.31352710723877
    4. '   ' → logprob: -11.93852710723877
    5. '       ' → logprob: -12.56352710723877
    6. '	i' → logprob: -13.06352710723877
    7. '{i' → logprob: -13.06352710723877
    8. '[i' → logprob: -13.56352710723877
    9. ' (' → logprob: -13.81352710723877
    10. '(' → logprob: -13.93852710723877

Token 2443: ',' (ID: 11)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.15293963253498077
    2. ',' → logprob: -2.027939558029175
    3. ' +' → logprob: -4.777939796447754
    4. ',k' → logprob: -7.027939796447754
    5. '   ' → logprob: -8.277939796447754
    6. ' ,' → logprob: -8.402939796447754
    7. ',i' → logprob: -9.277939796447754
    8. ',j' → logprob: -9.402939796447754
    9. '+,' → logprob: -9.402939796447754
    10. '+k' → logprob: -9.777939796447754

Token 2444: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -4.56102097814437e-05
    2. ' j' → logprob: -10.000045776367188
    3. '	j' → logprob: -16.625045776367188
    4. '$j' → logprob: -17.000045776367188
    5. '_j' → logprob: -18.250045776367188
    6. 'k' → logprob: -18.250045776367188
    7. ',j' → logprob: -18.625045776367188
    8. ':j' → logprob: -19.000045776367188
    9. '   ' → logprob: -19.125045776367188
    10. '(j' → logprob: -19.500045776367188

Token 2445: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8006430864334106
    2. '):
' → logprob: -1.0506430864334106
    3. '):' → logprob: -1.6756430864334106
    4. ' +' → logprob: -4.800642967224121
    5. '       ' → logprob: -6.050642967224121
    6. '   ' → logprob: -6.425642967224121
    7. ',' → logprob: -6.800642967224121
    8. ')' → logprob: -8.675642967224121
    9. '```' → logprob: -8.675642967224121
    10. '
' → logprob: -9.675642967224121

Token 2446: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0023787387181073427
    2. 'left' → logprob: -6.377378940582275
    3. ' left' → logprob: -8.627378463745117
    4. '```' → logprob: -8.627378463745117
    5. ' op' → logprob: -9.002378463745117
    6. 'op' → logprob: -9.377378463745117
    7. '   ' → logprob: -10.002378463745117
    8. '               ' → logprob: -10.377378463745117
    9. '[left' → logprob: -12.502378463745117
    10. '(left' → logprob: -12.502378463745117

Token 2447: ' op' (ID: 991)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.0013920195633545518
    2. ' left' → logprob: -6.751391887664795
    3. '               ' → logprob: -9.126392364501953
    4. '           ' → logprob: -9.251392364501953
    5. '	left' → logprob: -12.001392364501953
    6. 'Left' → logprob: -12.876392364501953
    7. '   ' → logprob: -13.126392364501953
    8. '_left' → logprob: -13.126392364501953
    9. '(left' → logprob: -13.626392364501953
    10. '```' → logprob: -14.126392364501953

Token 2448: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04362749680876732
    2. '=' → logprob: -3.1686275005340576
    3. 's' → logprob: -8.418627738952637
    4. '_char' → logprob: -8.668627738952637
    5. '_idx' → logprob: -9.293627738952637
    6. '_token' → logprob: -10.293627738952637
    7. '_results' → logprob: -10.668627738952637
    8. '_' → logprob: -10.918627738952637
    9. '   ' → logprob: -11.543627738952637
    10. '=self' → logprob: -11.918627738952637

Token 2449: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -6.742448022123426e-05
    2. ' self' → logprob: -9.625067710876465
    3. '           ' → logprob: -14.250067710876465
    4. '       ' → logprob: -15.000067710876465
    5. '`' → logprob: -16.62506675720215
    6. '   ' → logprob: -16.62506675720215
    7. '(self' → logprob: -16.75006675720215
    8. '	self' → logprob: -17.12506675720215
    9. '[self' → logprob: -17.87506675720215
    10. '               ' → logprob: -18.25006675720215

Token 2450: '.ops' (ID: 93952)
  Prédit: '.ops'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ops' → logprob: -0.007899156771600246
    2. 'ops' → logprob: -4.882899284362793
    3. 'self' → logprob: -8.382899284362793
    4. '.op' → logprob: -11.257899284362793
    5. '.opts' → logprob: -11.382899284362793
    6. '   ' → logprob: -11.507899284362793
    7. '       ' → logprob: -12.007899284362793
    8. '_ops' → logprob: -12.132899284362793
    9. '```' → logprob: -12.132899284362793
    10. ' ops' → logprob: -13.132899284362793

Token 2451: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.00013965457037556916
    2. '           ' → logprob: -9.000139236450195
    3. '[' → logprob: -12.125139236450195
    4. '               ' → logprob: -12.750139236450195
    5. '       ' → logprob: -13.375139236450195
    6. 's' → logprob: -13.875139236450195
    7. '   ' → logprob: -14.000139236450195
    8. '```' → logprob: -14.000139236450195
    9. ' [' → logprob: -14.500139236450195
    10. '                   ' → logprob: -15.000139236450195

Token 2452: ']
' (ID: 1592)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.023391293361783028
    2. '           ' → logprob: -4.648391246795654
    3. ']
' → logprob: -4.898391246795654
    4. ')' → logprob: -5.148391246795654
    5. ']' → logprob: -8.523391723632812
    6. '       ' → logprob: -10.523391723632812
    7. ' )
' → logprob: -11.023391723632812
    8. '])
' → logprob: -11.273391723632812
    9. '               ' → logprob: -11.773391723632812
    10. ')
' → logprob: -12.273391723632812

Token 2453: '           ' (ID: 352)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.23172153532505035
    2. '           ' → logprob: -1.6067215204238892
    3. ' left' → logprob: -5.2317214012146
    4. '               ' → logprob: -7.6067214012146
    5. '	left' → logprob: -8.981721878051758
    6. 'l' → logprob: -9.731721878051758
    7. '_left' → logprob: -9.981721878051758
    8. '   ' → logprob: -10.106721878051758
    9. '[left' → logprob: -10.356721878051758
    10. ',left' → logprob: -10.731721878051758

Token 2454: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' (adapté à ' left') → logprob: -4.084206375409849e-05
    2. '           ' → logprob: -10.625041007995605
    3. ' left' → logprob: -11.125041007995605
    4. 'lv' → logprob: -14.625041007995605
    5. 'lhs' → logprob: -14.750041007995605
    6. 'l' → logprob: -15.000041007995605
    7. 'Left' → logprob: -15.875041007995605
    8. '	left' → logprob: -16.00004005432129
    9. 'lef' → logprob: -16.25004005432129
    10. '_left' → logprob: -16.87504005432129

Token 2455: '_vals' (ID: 71688)
  Prédit: '_vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vals' → logprob: -0.05912887305021286
    2. 'vals' → logprob: -3.059128761291504
    3. '_results' → logprob: -5.309128761291504
    4. 'results' → logprob: -6.434128761291504
    5. '=' → logprob: -6.559128761291504
    6. '_values' → logprob: -6.934128761291504
    7. '_set' → logprob: -7.434128761291504
    8. ' =' → logprob: -7.934128761291504
    9. 'set' → logprob: -8.184128761291504
    10. 'values' → logprob: -9.434128761291504

Token 2456: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16023294627666473
    2. ' =' → logprob: -1.9102329015731812
    3. '           ' → logprob: -12.285232543945312
    4. ' ' → logprob: -13.660232543945312
    5. '=set' → logprob: -13.660232543945312
    6. 'set' → logprob: -14.910232543945312
    7. '=self' → logprob: -15.160232543945312
    8. '               ' → logprob: -15.160232543945312
    9. '            ' → logprob: -15.660232543945312
    10. '_set' → logprob: -15.910232543945312

Token 2457: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0011714138090610504
    2. ' self' → logprob: -6.751171588897705
    3. '           ' → logprob: -14.126171112060547
    4. '(self' → logprob: -14.626171112060547
    5. '[self' → logprob: -17.626171112060547
    6. '       ' → logprob: -18.126171112060547
    7. '	self' → logprob: -18.626171112060547
    8. '               ' → logprob: -18.876171112060547
    9. '=self' → logprob: -18.876171112060547
    10. ' ' → logprob: -19.501171112060547

Token 2458: '._' (ID: 2697)
  Prédit: '_eval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_eval' → logprob: -0.3053887188434601
    2. '_expr' → logprob: -1.8053886890411377
    3. '._' → logprob: -2.4303886890411377
    4. '.evaluate' → logprob: -5.055388927459717
    5. '.eval' → logprob: -5.930388927459717
    6. '.expr' → logprob: -6.930388927459717
    7. '_e' → logprob: -7.555388927459717
    8. 'expr' → logprob: -9.430388450622559
    9. 'evaluate' → logprob: -9.555388450622559
    10. 'self' → logprob: -9.930388450622559

Token 2459: 'eval' (ID: 37679)
  Prédit: 'eval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eval' → logprob: -5.848420551046729e-05
    2. '_eval' → logprob: -9.7500581741333
    3. ' eval' → logprob: -16.250059127807617
    4. '.eval' → logprob: -16.500059127807617
    5. '(eval' → logprob: -17.750059127807617
    6. 'ev' → logprob: -19.375059127807617
    7. 'Eval' → logprob: -20.125059127807617
    8. 'evaluate' → logprob: -20.625059127807617
    9. 'eva' → logprob: -21.000059127807617
    10. 'val' → logprob: -21.875059127807617

Token 2460: '_range' (ID: 22022)
  Prédit: '_range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_range' → logprob: -0.000429596402682364
    2. '(i' → logprob: -8.000429153442383
    3. 'range' → logprob: -9.500429153442383
    4. 'Range' → logprob: -11.125429153442383
    5. '(k' → logprob: -12.375429153442383
    6. '(' → logprob: -16.125429153442383
    7. '(j' → logprob: -16.875429153442383
    8. '   ' → logprob: -17.125429153442383
    9. '_ranges' → logprob: -17.125429153442383
    10. 'r' → logprob: -17.500429153442383

Token 2461: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -9.729906196298543e-06
    2. '(' → logprob: -11.875009536743164
    3. '(
' → logprob: -13.750009536743164
    4. '(k' → logprob: -13.875009536743164
    5. 'i' → logprob: -14.500009536743164
    6. ' (' → logprob: -16.625009536743164
    7. '```' → logprob: -17.875009536743164
    8. 'k' → logprob: -18.125009536743164
    9. ' i' → logprob: -19.250009536743164
    10. '(I' → logprob: -19.625009536743164

Token 2462: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.47874999046325684
    2. ',k' → logprob: -1.3537499904632568
    3. 'k' → logprob: -2.103749990463257
    4. '(k' → logprob: -9.478750228881836
    5. ' ,' → logprob: -9.603750228881836
    6. ' k' → logprob: -11.228750228881836
    7. '           ' → logprob: -12.228750228881836
    8. '{k' → logprob: -12.478750228881836
    9. '   ' → logprob: -13.228750228881836
    10. ',
' → logprob: -13.478750228881836

Token 2463: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.9361264946837764e-07
    2. ' k' → logprob: -16.0
    3. '{k' → logprob: -17.875
    4. '   ' → logprob: -18.375
    5. '	k' → logprob: -19.5
    6. '(k' → logprob: -20.375
    7. '       ' → logprob: -21.125
    8. '     ' → logprob: -21.375
    9. '           ' → logprob: -21.5
    10. ' ' → logprob: -22.0

Token 2464: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.31326720118522644
    2. ')' → logprob: -1.3132672309875488
    3. '           ' → logprob: -13.93826675415039
    4. '       ' → logprob: -14.18826675415039
    5. '),' → logprob: -14.18826675415039
    6. ')
' → logprob: -14.18826675415039
    7. ')

' → logprob: -14.81326675415039
    8. '   ' → logprob: -14.93826675415039
    9. '())
' → logprob: -14.93826675415039
    10. ' )
' → logprob: -15.31326675415039

Token 2465: '           ' (ID: 352)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.01905994489789009
    2. '           ' → logprob: -4.019060134887695
    3. ' right' → logprob: -7.019060134887695
    4. '       ' → logprob: -12.144060134887695
    5. 'Right' → logprob: -13.019060134887695
    6. '```' → logprob: -13.019060134887695
    7. '               ' → logprob: -13.269060134887695
    8. '	right' → logprob: -14.144060134887695
    9. '.right' → logprob: -14.519060134887695
    10. 'for' → logprob: -14.644060134887695

Token 2466: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.00024715426843613386
    2. '           ' → logprob: -9.00024700164795
    3. ' right' → logprob: -9.00024700164795
    4. 'for' → logprob: -15.50024700164795
    5. 'Right' → logprob: -17.375247955322266
    6. '	right' → logprob: -17.875247955322266
    7. '       ' → logprob: -18.125247955322266
    8. '               ' → logprob: -18.500247955322266
    9. '(right' → logprob: -18.750247955322266
    10. '.right' → logprob: -19.000247955322266

Token 2467: '_vals' (ID: 71688)
  Prédit: '_vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vals' → logprob: -9.610702363715973e-06
    2. 'vals' → logprob: -12.750009536743164
    3. '```' → logprob: -12.875009536743164
    4. '_' → logprob: -14.125009536743164
    5. ')_' → logprob: -14.875009536743164
    6. 's' → logprob: -15.000009536743164
    7. '(vals' → logprob: -15.000009536743164
    8. ',' → logprob: -15.000009536743164
    9. ' _' → logprob: -15.250009536743164
    10. '_pts' → logprob: -15.250009536743164

Token 2468: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.025587784126400948
    2. ' =' → logprob: -3.775587797164917
    3. '(k' → logprob: -6.150587558746338
    4. '           ' → logprob: -9.150588035583496
    5. ',' → logprob: -9.650588035583496
    6. '(j' → logprob: -11.025588035583496
    7. '   ' → logprob: -12.150588035583496
    8. ',k' → logprob: -12.525588035583496
    9. '=k' → logprob: -12.650588035583496
    10. '(' → logprob: -12.650588035583496

Token 2469: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06587973982095718
    2. 'j' → logprob: -2.8158798217773438
    3. ' self' → logprob: -6.065879821777344
    4. '(j' → logprob: -6.940879821777344
    5. '(self' → logprob: -7.815879821777344
    6. '           ' → logprob: -9.190879821777344
    7. '   ' → logprob: -9.940879821777344
    8. ' j' → logprob: -10.190879821777344
    9. '(k' → logprob: -11.940879821777344
    10. '       ' → logprob: -12.315879821777344

Token 2470: '._' (ID: 2697)
  Prédit: '_eval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_eval' → logprob: -0.001325837685726583
    2. 'eval' → logprob: -7.376325607299805
    3. 'j' → logprob: -8.001325607299805
    4. '_j' → logprob: -8.751325607299805
    5. '(j' → logprob: -8.876325607299805
    6. ' _' → logprob: -10.501325607299805
    7. '.eval' → logprob: -11.251325607299805
    8. '[j' → logprob: -12.126325607299805
    9. ' j' → logprob: -12.251325607299805
    10. '._' → logprob: -12.626325607299805

Token 2471: 'eval' (ID: 37679)
  Prédit: 'eval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eval' → logprob: -0.00017541198758408427
    2. '_eval' → logprob: -8.750175476074219
    3. ' eval' → logprob: -11.875175476074219
    4. 'j' → logprob: -12.375175476074219
    5. '(j' → logprob: -13.250175476074219
    6. '(eval' → logprob: -13.250175476074219
    7. 'range' → logprob: -14.625175476074219
    8. '.eval' → logprob: -14.750175476074219
    9. '_j' → logprob: -14.875175476074219
    10. 'exec' → logprob: -15.875175476074219

Token 2472: '_range' (ID: 22022)
  Prédit: '_range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_range' → logprob: -0.05963975936174393
    2. '(j' → logprob: -3.4346396923065186
    3. 'range' → logprob: -4.184639930725098
    4. '(k' → logprob: -4.809639930725098
    5. 'Range' → logprob: -6.184639930725098
    6. 'j' → logprob: -8.559639930725098
    7. 'k' → logprob: -11.559639930725098
    8. '-range' → logprob: -12.184639930725098
    9. ' Range' → logprob: -12.809639930725098
    10. '_RANGE' → logprob: -13.434639930725098

Token 2473: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -5.512236498361744e-07
    2. '(' → logprob: -15.250000953674316
    3. 'k' → logprob: -15.875000953674316
    4. ' (' → logprob: -16.625
    5. '(
' → logprob: -18.625
    6. '((' → logprob: -18.875
    7. '           ' → logprob: -19.75
    8. '(j' → logprob: -19.875
    9. '   ' → logprob: -20.75
    10. ' k' → logprob: -20.875

Token 2474: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.011540643870830536
    2. ' +' → logprob: -4.511540412902832
    3. 'k' → logprob: -8.011540412902832
    4. ',' → logprob: -9.011540412902832
    5. '(k' → logprob: -11.011540412902832
    6. '+k' → logprob: -11.261540412902832
    7. ',k' → logprob: -12.761540412902832
    8. '[k' → logprob: -13.261540412902832
    9. ' k' → logprob: -13.511540412902832
    10. '+,' → logprob: -14.011540412902832

Token 2475: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. 'j' → logprob: -19.0
    4. '```' → logprob: -19.25
    5. '   ' → logprob: -21.0
    6. '
' → logprob: -21.625
    7. '0' → logprob: -22.375
    8. '`' → logprob: -22.625
    9. 'k' → logprob: -22.625
    10. ',' → logprob: -23.0

Token 2476: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. 'j' → logprob: -15.625
    3. ' ' → logprob: -18.75
    4. '```' → logprob: -22.0
    5. '(j' → logprob: -22.125
    6. '   ' → logprob: -23.0
    7. ' j' → logprob: -23.375
    8. '１' → logprob: -23.625
    9. '
' → logprob: -23.75
    10. '0' → logprob: -24.0

Token 2477: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023328518494963646
    2. ',j' → logprob: -3.7733285427093506
    3. '(j' → logprob: -9.64832878112793
    4. ',k' → logprob: -11.64832878112793
    5. 'j' → logprob: -12.39832878112793
    6. ' ,' → logprob: -12.77332878112793
    7. '```' → logprob: -14.27332878112793
    8. '           ' → logprob: -14.27332878112793
    9. '   ' → logprob: -14.52332878112793
    10. ',
' → logprob: -14.89832878112793

Token 2478: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -5.157039049663581e-05
    2. ' j' → logprob: -9.875051498413086
    3. '           ' → logprob: -17.625051498413086
    4. '	j' → logprob: -18.625051498413086
    5. '       ' → logprob: -18.750051498413086
    6. '   ' → logprob: -18.875051498413086
    7. '$j' → logprob: -19.750051498413086
    8. '_j' → logprob: -19.750051498413086
    9. '                   ' → logprob: -20.000051498413086
    10. '               ' → logprob: -20.250051498413086

Token 2479: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2647947072982788
    2. '           ' → logprob: -1.5147947072982788
    3. ')' → logprob: -4.389794826507568
    4. '       ' → logprob: -8.88979434967041
    5. '):
' → logprob: -8.88979434967041
    6. '               ' → logprob: -9.88979434967041
    7. '```' → logprob: -11.13979434967041
    8. 'for' → logprob: -11.51479434967041
    9. ')
' → logprob: -11.76479434967041
    10. ':
' → logprob: -12.01479434967041

Token 2480: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0036288120318204165
    2. 'for' → logprob: -5.753628730773926
    3. '               ' → logprob: -7.753628730773926
    4. ' for' → logprob: -10.878628730773926
    5. '                   ' → logprob: -13.253628730773926
    6. '       ' → logprob: -14.378628730773926
    7. '```' → logprob: -15.378628730773926
    8. '   ' → logprob: -15.628628730773926
    9. '                       ' → logprob: -16.753629684448242
    10. '		' → logprob: -17.253629684448242

Token 2481: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0042081596329808235
    2. '           ' → logprob: -5.504208087921143
    3. ' for' → logprob: -9.0042085647583
    4. '               ' → logprob: -12.1292085647583
    5. '                   ' → logprob: -14.0042085647583
    6. '```' → logprob: -15.0042085647583
    7. '                       ' → logprob: -15.6292085647583
    8. '       ' → logprob: -15.8792085647583
    9. '   ' → logprob: -17.254207611083984
    10. '	for' → logprob: -17.504207611083984

Token 2482: ' lv' (ID: 52146)
  Prédit: 'lv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lv' → logprob: -5.512236498361744e-07
    2. ' lv' → logprob: -14.500000953674316
    3. 'l' → logprob: -18.0
    4. '_lv' → logprob: -19.25
    5. 'lvl' → logprob: -20.125
    6. 'left' → logprob: -20.25
    7. 'val' → logprob: -20.25
    8. 'vl' → logprob: -21.875
    9. 'lt' → logprob: -22.0
    10. '
' → logprob: -22.25

Token 2483: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16023682057857513
    2. 'in' → logprob: -1.9102368354797363
    3. '               ' → logprob: -11.535236358642578
    4. '	in' → logprob: -13.910236358642578
    5. '           ' → logprob: -14.785236358642578
    6. ' ' → logprob: -14.910236358642578
    7. ',' → logprob: -15.285236358642578
    8. 'import' → logprob: -15.660236358642578
    9. '_in' → logprob: -16.160236358642578
    10. '   ' → logprob: -16.285236358642578

Token 2484: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.004106065724045038
    2. 'right' → logprob: -5.504106044769287
    3. ' left' → logprob: -10.504106521606445
    4. ' right' → logprob: -16.254106521606445
    5. '[left' → logprob: -16.754106521606445
    6. '   ' → logprob: -18.379106521606445
    7. '(left' → logprob: -19.004106521606445
    8. '           ' → logprob: -19.129106521606445
    9. 'lef' → logprob: -19.254106521606445
    10. '.left' → logprob: -20.004106521606445

Token 2485: '_vals' (ID: 71688)
  Prédit: '_vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vals' → logprob: -5.288163083605468e-05
    2. 'vals' → logprob: -10.000052452087402
    3. 's' → logprob: -12.875052452087402
    4. '```' → logprob: -13.750052452087402
    5. '_val' → logprob: -14.125052452087402
    6. 'Vals' → logprob: -14.625052452087402
    7. '(vals' → logprob: -14.625052452087402
    8. '_v' → logprob: -15.125052452087402
    9. '_' → logprob: -15.250052452087402
    10. '
' → logprob: -15.500052452087402

Token 2486: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.025068482384085655
    2. ':
' → logprob: -3.775068521499634
    3. ':' → logprob: -7.275068283081055
    4. '                   ' → logprob: -7.900068283081055
    5. 'for' → logprob: -8.900068283081055
    6. '```' → logprob: -8.900068283081055
    7. ' in' → logprob: -9.025068283081055
    8. '                       ' → logprob: -9.525068283081055
    9. '{
' → logprob: -9.650068283081055
    10. 'in' → logprob: -10.275068283081055

Token 2487: '               ' (ID: 506)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1698130965232849
    2. '               ' → logprob: -1.9198131561279297
    3. ' for' → logprob: -4.66981315612793
    4. '                   ' → logprob: -9.04481315612793
    5. '                       ' → logprob: -11.04481315612793
    6. '```' → logprob: -11.41981315612793
    7. '                               ' → logprob: -11.79481315612793
    8. '			' → logprob: -12.41981315612793
    9. '	for' → logprob: -12.79481315612793
    10. '           ' → logprob: -13.16981315612793

Token 2488: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.010652195662260056
    2. ' for' → logprob: -4.7606520652771
    3. '                   ' → logprob: -6.2606520652771
    4. '                       ' → logprob: -9.135652542114258
    5. '                               ' → logprob: -12.135652542114258
    6. '	for' → logprob: -12.260652542114258
    7. ' ' → logprob: -13.010652542114258
    8. '                           ' → logprob: -13.510652542114258
    9. '               ' → logprob: -13.885652542114258
    10. '                    ' → logprob: -14.385652542114258

Token 2489: ' rv' (ID: 37141)
  Prédit: 'rv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rv' → logprob: -0.0007129086880013347
    2. ' rv' → logprob: -7.250712871551514
    3. '(rv' → logprob: -12.750713348388672
    4. '.rv' → logprob: -18.000713348388672
    5. ' ' → logprob: -19.375713348388672
    6. '   ' → logprob: -19.625713348388672
    7. '  ' → logprob: -20.750713348388672
    8. '`' → logprob: -21.125713348388672
    9. '    ' → logprob: -21.250713348388672
    10. '```' → logprob: -21.375713348388672

Token 2490: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020659951493144035
    2. 'in' → logprob: -3.895659923553467
    3. '                   ' → logprob: -9.145660400390625
    4. '               ' → logprob: -12.395660400390625
    5. ',' → logprob: -13.395660400390625
    6. '```' → logprob: -14.270660400390625
    7. '_in' → logprob: -14.395660400390625
    8. ':' → logprob: -14.645660400390625
    9. '                       ' → logprob: -14.770660400390625
    10. '.' → logprob: -14.770660400390625

Token 2491: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.04877936840057373
    2. 'self' → logprob: -3.0487794876098633
    3. ' right' → logprob: -8.798779487609863
    4. ' self' → logprob: -10.173779487609863
    5. '           ' → logprob: -13.798779487609863
    6. '(self' → logprob: -14.298779487609863
    7. '   ' → logprob: -14.423779487609863
    8. '       ' → logprob: -15.423779487609863
    9. '               ' → logprob: -15.923779487609863
    10. '(right' → logprob: -16.298778533935547

Token 2492: '_vals' (ID: 71688)
  Prédit: '_vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vals' → logprob: -0.0003613256849348545
    2. 'vals' → logprob: -8.000361442565918
    3. 'Vals' → logprob: -11.500361442565918
    4. '```' → logprob: -11.875361442565918
    5. 'right' → logprob: -12.375361442565918
    6. '_values' → logprob: -13.625361442565918
    7. '_right' → logprob: -14.250361442565918
    8. '_val' → logprob: -14.500361442565918
    9. '(vals' → logprob: -14.625361442565918
    10. 's' → logprob: -14.875361442565918

Token 2493: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0319361537694931
    2. ':
' → logprob: -3.9069361686706543
    3. ':' → logprob: -4.656936168670654
    4. '                       ' → logprob: -7.781936168670654
    5. '				' → logprob: -7.906936168670654
    6. '{
' → logprob: -8.406935691833496
    7. '```' → logprob: -8.406935691833496
    8. ',' → logprob: -9.156935691833496
    9. '		           ' → logprob: -9.406935691833496
    10. '                    ' → logprob: -9.781935691833496

Token 2494: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.20486082136631012
    2. 'val' → logprob: -1.704860806465149
    3. 'try' → logprob: -6.829860687255859
    4. ' val' → logprob: -7.329860687255859
    5. 'if' → logprob: -7.454860687255859
    6. '                       ' → logprob: -8.20486068725586
    7. '```' → logprob: -8.20486068725586
    8. '{
' → logprob: -9.45486068725586
    9. 'token' → logprob: -9.70486068725586
    10. 'v' → logprob: -9.70486068725586

Token 2495: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' (adapté à ' val') → logprob: -0.0017474116757512093
    2. ' val' → logprob: -6.3767476081848145
    3. '                   ' → logprob: -10.626747131347656
    4. 'v' → logprob: -11.001747131347656
    5. 'res' → logprob: -13.501747131347656
    6. '	val' → logprob: -13.751747131347656
    7. 'self' → logprob: -14.501747131347656
    8. '                       ' → logprob: -14.626747131347656
    9. 'result' → logprob: -14.626747131347656
    10. '_val' → logprob: -15.376747131347656

Token 2496: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5760214328765869
    2. '=' → logprob: -0.8260214328765869
    3. '=self' → logprob: -9.576021194458008
    4. '                   ' → logprob: -11.951021194458008
    5. '=
' → logprob: -13.076021194458008
    6. '                    ' → logprob: -13.826021194458008
    7. 'self' → logprob: -13.951021194458008
    8. '                       ' → logprob: -14.201021194458008
    9. '_=' → logprob: -15.576021194458008
    10. ' =
' → logprob: -15.576021194458008

Token 2497: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -7.707997428951785e-05
    2. ' self' → logprob: -9.500077247619629
    3. '                   ' → logprob: -13.500077247619629
    4. 'Binary' → logprob: -14.875077247619629
    5. '(self' → logprob: -15.375077247619629
    6. '                       ' → logprob: -16.750076293945312
    7. 'None' → logprob: -17.500076293945312
    8. '   ' → logprob: -17.500076293945312
    9. '               ' → logprob: -18.625076293945312
    10. ' ' → logprob: -18.875076293945312

Token 2498: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.0028627701103687286
    2. '_binary' → logprob: -6.377862930297852
    3. '_self' → logprob: -7.377862930297852
    4. 'self' → logprob: -8.377862930297852
    5. '_ops' → logprob: -9.502862930297852
    6. '.ops' → logprob: -9.877862930297852
    7. '_get' → logprob: -10.002862930297852
    8. '_op' → logprob: -10.127862930297852
    9. '.op' → logprob: -10.877862930297852
    10. 'Binary' → logprob: -11.252862930297852

Token 2499: 'apply' (ID: 22822)
  Prédit: 'operation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'operation' → logprob: -0.00012487331696320325
    2. 'Binary' → logprob: -9.25012493133545
    3. '_operation' → logprob: -11.50012493133545
    4. 'op' → logprob: -12.25012493133545
    5. 'expression' → logprob: -12.87512493133545
    6. ' operation' → logprob: -13.00012493133545
    7. '(operation' → logprob: -13.00012493133545
    8. 'Operation' → logprob: -13.50012493133545
    9. '.operation' → logprob: -13.75012493133545
    10. '`' → logprob: -14.12512493133545

Token 2500: '_op' (ID: 20111)
  Prédit: '(op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(op' → logprob: -0.6168899536132812
    2. 'op' → logprob: -1.3668899536132812
    3. 'self' → logprob: -1.9918899536132812
    4. '(self' → logprob: -2.7418899536132812
    5. '_op' → logprob: -6.491889953613281
    6. 'operation' → logprob: -6.991889953613281
    7. '_operation' → logprob: -7.366889953613281
    8. 'operator' → logprob: -8.116889953613281
    9. ' op' → logprob: -8.616889953613281
    10. '           ' → logprob: -8.741889953613281

Token 2501: '(l' (ID: 4179)
  Prédit: '(op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(op' → logprob: -0.1132383793592453
    2. '(l' → logprob: -2.2382383346557617
    3. '(' → logprob: -8.613238334655762
    4. '(lp' → logprob: -8.988238334655762
    5. 'op' → logprob: -10.238238334655762
    6. '(
' → logprob: -10.988238334655762
    7. '(left' → logprob: -11.363238334655762
    8. '(ld' → logprob: -11.488238334655762
    9. '(self' → logprob: -11.863238334655762
    10. '(ll' → logprob: -12.238238334655762

Token 2502: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0001831565605243668
    2. '(op' → logprob: -9.37518310546875
    3. 'op' → logprob: -10.12518310546875
    4. 'p' → logprob: -10.75018310546875
    5. '(v' → logprob: -11.75018310546875
    6. 'k' → logprob: -12.25018310546875
    7. 'e' → logprob: -12.50018310546875
    8. 'f' → logprob: -12.75018310546875
    9. 'eft' → logprob: -12.75018310546875
    10. '_op' → logprob: -13.12518310546875

Token 2503: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3782830137643032e-05
    2. '(op' → logprob: -12.25001335144043
    3. ' ,' → logprob: -12.25001335144043
    4. ',
' → logprob: -13.50001335144043
    5. ',k' → logprob: -13.50001335144043
    6. 'op' → logprob: -14.37501335144043
    7. '                   ' → logprob: -14.87501335144043
    8. ' op' → logprob: -16.25001335144043
    9. '               ' → logprob: -16.37501335144043
    10. '           ' → logprob: -16.62501335144043

Token 2504: ' op' (ID: 991)
  Prédit: 'rv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rv' → logprob: -0.00193149340339005
    2. ' rv' → logprob: -6.251931667327881
    3. '(rv' → logprob: -12.876931190490723
    4. ' ' → logprob: -16.50193214416504
    5. '   ' → logprob: -16.75193214416504
    6. '
' → logprob: -17.37693214416504
    7. 'r' → logprob: -17.75193214416504
    8. '.rv' → logprob: -18.37693214416504
    9. '    ' → logprob: -18.87693214416504
    10. '```' → logprob: -19.00193214416504

Token 2505: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.2020991056924686e-05
    2. '(rv' → logprob: -10.750032424926758
    3. ',r' → logprob: -12.375032424926758
    4. '                   ' → logprob: -13.000032424926758
    5. ' ,' → logprob: -13.000032424926758
    6. '```' → logprob: -14.375032424926758
    7. ',
' → logprob: -14.500032424926758
    8. '`,' → logprob: -16.000032424926758
    9. '.rv' → logprob: -16.375032424926758
    10. '_,' → logprob: -16.375032424926758

Token 2506: ' rv' (ID: 37141)
  Prédit: 'rv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rv' → logprob: -0.0001278534036828205
    2. ' rv' → logprob: -9.000127792358398
    3. '(rv' → logprob: -12.375127792358398
    4. '.rv' → logprob: -16.3751277923584
    5. '   ' → logprob: -17.0001277923584
    6. '                   ' → logprob: -17.3751277923584
    7. 'r' → logprob: -18.2501277923584
    8. '               ' → logprob: -18.8751277923584
    9. '           ' → logprob: -19.7501277923584
    10. '```' → logprob: -20.1251277923584

Token 2507: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005763234104961157
    2. '                   ' → logprob: -5.380763053894043
    3. '                       ' → logprob: -7.380763053894043
    4. '):
' → logprob: -8.380763053894043
    5. ')
' → logprob: -9.880763053894043
    6. '<|end|>' → logprob: -9.880763053894043
    7. '               ' → logprob: -10.505763053894043
    8. '#' → logprob: -11.005763053894043
    9. '```' → logprob: -11.005763053894043
    10. ')#' → logprob: -11.130763053894043

Token 2508: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.881349503993988
    2. '                       ' → logprob: -1.0063495635986328
    3. '(' → logprob: -1.7563495635986328
    4. '```' → logprob: -4.506349563598633
    5. '(
' → logprob: -4.631349563598633
    6. '                           ' → logprob: -5.256349563598633
    7. '                      ' → logprob: -5.881349563598633
    8. '{
' → logprob: -5.881349563598633
    9. '                               ' → logprob: -6.131349563598633
    10. ' (' → logprob: -6.506349563598633

Token 2509: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2553347051143646
    2. 'if' (adapté à ' if') → logprob: -1.505334734916687
    3. ' if' → logprob: -5.880334854125977
    4. '                       ' → logprob: -8.130334854125977
    5. '```' → logprob: -9.130334854125977
    6. '               ' → logprob: -9.880334854125977
    7. '           ' → logprob: -10.005334854125977
    8. '       ' → logprob: -10.505334854125977
    9. '                    ' → logprob: -10.630334854125977
    10. '                  ' → logprob: -10.755334854125977

Token 2510: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.4740790128707886
    2. 'val' → logprob: -0.9740790128707886
    3. '                   ' → logprob: -13.349079132080078
    4. '(val' → logprob: -15.599079132080078
    5. '                    ' → logprob: -16.099079132080078
    6. 'v' → logprob: -17.474079132080078
    7. '	val' → logprob: -17.599079132080078
    8. '                       ' → logprob: -17.849079132080078
    9. '[val' → logprob: -18.599079132080078
    10. '_val' → logprob: -18.974079132080078

Token 2511: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.003673829138278961
    2. 'is' → logprob: -5.628674030303955
    3. '                    ' → logprob: -10.128673553466797
    4. '                   ' → logprob: -11.003673553466797
    5. ' !=' → logprob: -12.878673553466797
    6. '                       ' → logprob: -13.253673553466797
    7. '                        ' → logprob: -13.253673553466797
    8. ' not' → logprob: -13.253673553466797
    9. '<|end|>' → logprob: -13.753673553466797
    10. '!=' → logprob: -13.878673553466797

Token 2512: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.012530959211289883
    2. ' not' → logprob: -4.38753080368042
    3. 'Not' → logprob: -11.512531280517578
    4. 'None' → logprob: -11.762531280517578
    5. 'n' → logprob: -13.887531280517578
    6. '	not' → logprob: -15.137531280517578
    7. 'no' → logprob: -15.262531280517578
    8. '!' → logprob: -15.387531280517578
    9. '                   ' → logprob: -15.512531280517578
    10. '[' → logprob: -15.762531280517578

Token 2513: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.000133098365040496
    2. 'not' → logprob: -9.000133514404297
    3. ' None' → logprob: -11.750133514404297
    4. '(None' → logprob: -14.250133514404297
    5. 'Not' → logprob: -14.750133514404297
    6. '   ' → logprob: -15.500133514404297
    7. '_None' → logprob: -16.250133514404297
    8. '       ' → logprob: -16.375133514404297
    9. '=None' → logprob: -16.500133514404297
    10. 'none' → logprob: -17.125133514404297

Token 2514: ' and' (ID: 326)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0029313452541828156
    2. ' and' → logprob: -6.252931118011475
    3. ':
' → logprob: -7.127931118011475
    4. '                   ' → logprob: -9.502931594848633
    5. 'and' → logprob: -10.127931594848633
    6. '                      ' → logprob: -10.502931594848633
    7. ':' → logprob: -10.752931594848633
    8. '                           ' → logprob: -10.877931594848633
    9. '                               ' → logprob: -12.252931594848633
    10. '                        ' → logprob: -12.377931594848633

Token 2515: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -7.64839569455944e-05
    2. ' abs' → logprob: -9.500076293945312
    3. '                   ' → logprob: -13.500076293945312
    4. '(abs' → logprob: -15.500076293945312
    5. '                       ' → logprob: -17.875076293945312
    6. '   ' → logprob: -19.875076293945312
    7. '                    ' → logprob: -20.125076293945312
    8. '
' → logprob: -21.125076293945312
    9. '.abs' → logprob: -21.125076293945312
    10. '                           ' → logprob: -21.250076293945312

Token 2516: '(val' (ID: 17391)
  Prédit: '(val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -2.816093228830141e-06
    2. '(' → logprob: -13.12500286102295
    3. 'val' → logprob: -14.62500286102295
    4. '(
' → logprob: -16.375001907348633
    5. '[val' → logprob: -16.375001907348633
    6. '```' → logprob: -16.625001907348633
    7. '                   ' → logprob: -17.125001907348633
    8. ',val' → logprob: -17.375001907348633
    9. ' (' → logprob: -17.750001907348633
    10. '(vals' → logprob: -18.750001907348633

Token 2517: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.127927303314209
    2. '<=' → logprob: -1.127927303314209
    3. ' <=' → logprob: -1.377927303314209
    4. ')<=' → logprob: -2.752927303314209
    5. '(val' → logprob: -3.877927303314209
    6. '[val' → logprob: -4.252927303314209
    7. 'val' → logprob: -7.127927303314209
    8. '[' → logprob: -8.377927780151367
    9. ']<=' → logprob: -8.377927780151367
    10. '```' → logprob: -8.502927780151367

Token 2518: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.3871115446090698
    2. '<=' → logprob: -1.1371115446090698
    3. '```' → logprob: -8.38711166381836
    4. ')<=' → logprob: -12.38711166381836
    5. '[' → logprob: -13.13711166381836
    6. '``' → logprob: -13.63711166381836
    7. '                   ' → logprob: -13.88711166381836
    8. 'val' → logprob: -14.13711166381836
    9. ')' → logprob: -14.38711166381836
    10. '[val' → logprob: -14.38711166381836

Token 2519: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -6.802049756515771e-05
    2. '100' → logprob: -9.625067710876465
    3. ' ' → logprob: -13.250067710876465
    4. '1' → logprob: -16.00006866455078
    5. '   ' → logprob: -17.87506866455078
    6. '```' → logprob: -17.87506866455078
    7. '(' → logprob: -18.12506866455078
    8. '109' → logprob: -19.62506866455078
    9. '１０' → logprob: -19.87506866455078
    10. 'int' → logprob: -20.00006866455078

Token 2520: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.001170225441455841
    2. '100' → logprob: -6.7511701583862305
    3. ' ' → logprob: -17.251171112060547
    4. '1' → logprob: -18.251171112060547
    5. '(' → logprob: -18.376171112060547
    6. '109' → logprob: -20.001171112060547
    7. '```' → logprob: -20.376171112060547
    8. '１０' → logprob: -20.626171112060547
    9. 'int' → logprob: -20.751171112060547
    10. '۱۰' → logprob: -21.876171112060547

Token 2521: '**' (ID: 410)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.6932154297828674
    2. '**' → logprob: -0.6932154297828674
    3. '^' → logprob: -10.318215370178223
    4. '```' → logprob: -10.443215370178223
    5. '*' → logprob: -13.193215370178223
    6. ' ' → logprob: -13.568215370178223
    7. '[' → logprob: -13.818215370178223
    8. '\xe2\x81' → logprob: -14.568215370178223
    9. ' **' → logprob: -15.318215370178223
    10. '09' → logprob: -15.693215370178223

Token 2522: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -15.625000953674316
    3. '```' → logprob: -15.625000953674316
    4. '09' → logprob: -16.375
    5. '909' → logprob: -18.375
    6. '900' → logprob: -18.5625
    7. '``' → logprob: -18.8125
    8. '[' → logprob: -18.9375
    9. '９' → logprob: -19.0625
    10. '   ' → logprob: -19.125

Token 2523: ':
' (ID: 734)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.06315924227237701
    2. ':
' → logprob: -2.938159227371216
    3. ':' → logprob: -4.938159465789795
    4. '                   ' → logprob: -7.438159465789795
    5. '                      ' → logprob: -8.313158988952637
    6. '):
' → logprob: -9.188158988952637
    7. '                           ' → logprob: -10.063158988952637
    8. '                        ' → logprob: -10.813158988952637
    9. '```' → logprob: -11.188158988952637
    10. ',' → logprob: -11.688158988952637

Token 2524: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0003418991982471198
    2. 'results' → logprob: -9.00034236907959
    3. ' results' → logprob: -9.37534236907959
    4. '                      ' → logprob: -10.12534236907959
    5. '                           ' → logprob: -10.50034236907959
    6. '                   ' → logprob: -10.87534236907959
    7. '(results' → logprob: -11.12534236907959
    8. '                        ' → logprob: -11.87534236907959
    9. '```' → logprob: -11.87534236907959
    10. '                               ' → logprob: -12.87534236907959

Token 2525: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.003203377593308687
    2. ' results' → logprob: -5.753203392028809
    3. '                       ' → logprob: -10.753203392028809
    4. '	results' → logprob: -13.003203392028809
    5. '   ' → logprob: -14.128203392028809
    6. '                           ' → logprob: -15.003203392028809
    7. '                               ' → logprob: -15.003203392028809
    8. '(results' → logprob: -15.378203392028809
    9. '.results' → logprob: -16.128202438354492
    10. ' ' → logprob: -16.128202438354492

Token 2526: '.add' (ID: 1950)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.03809335455298424
    2. '.add' → logprob: -3.288093328475952
    3. '                           ' → logprob: -11.163093566894531
    4. '{}.' → logprob: -11.538093566894531
    5. '.update' → logprob: -11.663093566894531
    6. '                       ' → logprob: -11.788093566894531
    7. ' .' → logprob: -12.538093566894531
    8. '.append' → logprob: -13.288093566894531
    9. '.setdefault' → logprob: -13.288093566894531
    10. '‌.' → logprob: -14.538093566894531

Token 2527: '(val' (ID: 17391)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.02325339801609516
    2. '(val' → logprob: -3.7732534408569336
    3. ' val' → logprob: -11.773253440856934
    4. ',val' → logprob: -16.023252487182617
    5. '[val' → logprob: -16.648252487182617
    6. '	val' → logprob: -16.773252487182617
    7. '_val' → logprob: -18.648252487182617
    8. '(' → logprob: -19.773252487182617
    9. '(
' → logprob: -19.898252487182617
    10. '.val' → logprob: -20.148252487182617

Token 2528: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1027948185801506
    2. ')
' → logprob: -2.852794885635376
    3. '                   ' → logprob: -3.352794885635376
    4. '               ' → logprob: -6.102794647216797
    5. '                       ' → logprob: -6.352794647216797
    6. '           ' → logprob: -7.977794647216797
    7. '                           ' → logprob: -8.602794647216797
    8. '       ' → logprob: -8.852794647216797
    9. ')return' → logprob: -9.352794647216797
    10. '                               ' → logprob: -9.602794647216797

Token 2529: '       ' (ID: 309)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.248616337776184
    2. '                   ' → logprob: -1.373616337776184
    3. '(
' → logprob: -2.1236162185668945
    4. '```' → logprob: -2.1236162185668945
    5. '                       ' → logprob: -2.8736162185668945
    6. '_' → logprob: -2.9986162185668945
    7. '       ' → logprob: -4.1236162185668945
    8. '   ' → logprob: -4.2486162185668945
    9. '                               ' → logprob: -4.6236162185668945
    10. '`' → logprob: -4.7486162185668945

Token 2530: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17595811188220978
    2. 'return' → logprob: -2.0509581565856934
    3. '   ' → logprob: -3.6759581565856934
    4. '           ' → logprob: -5.800958156585693
    5. ' return' → logprob: -6.675958156585693
    6. '```' → logprob: -6.800958156585693
    7. '                   ' → logprob: -7.300958156585693
    8. ' ' → logprob: -8.050957679748535
    9. '               ' → logprob: -8.425957679748535
    10. '                       ' → logprob: -8.925957679748535

Token 2531: '.memo' (ID: 161018)
  Prédit: '.memo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.memo' → logprob: -0.0002469158498570323
    2. '.mem' → logprob: -8.50024700164795
    3. '.memory' → logprob: -10.25024700164795
    4. '.' → logprob: -11.87524700164795
    5. 'memo' → logprob: -14.00024700164795
    6. '.mime' → logprob: -16.125246047973633
    7. ' .' → logprob: -16.250246047973633
    8. '.mn' → logprob: -16.875246047973633
    9. '.motor' → logprob: -17.375246047973633
    10. '​.' → logprob: -18.250246047973633

Token 2532: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.0001801801408873871
    2. '[
' → logprob: -9.2501802444458
    3. '[' → logprob: -9.7501802444458
    4. '```' → logprob: -10.8751802444458
    5. '[((' → logprob: -12.7501802444458
    6. '   ' → logprob: -13.6251802444458
    7. '       ' → logprob: -14.2501802444458
    8. '    
' → logprob: -15.1251802444458
    9. '[...]' → logprob: -15.3751802444458
    10. '[]' → logprob: -15.3751802444458

Token 2533: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.696889623621246e-06
    2. '(i' → logprob: -13.12500286102295
    3. ' i' → logprob: -14.50000286102295
    4. '   ' → logprob: -16.750001907348633
    5. '(' → logprob: -17.750001907348633
    6. ')i' → logprob: -18.125001907348633
    7. ')' → logprob: -18.375001907348633
    8. ' (' → logprob: -18.500001907348633
    9. '_i' → logprob: -19.125001907348633
    10. '{i' → logprob: -20.000001907348633

Token 2534: ',j' (ID: 22712)
  Prédit: ',j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',j' → logprob: -0.5762640237808228
    2. ',' → logprob: -0.8262640237808228
    3. ',(' → logprob: -8.451264381408691
    4. ',k' → logprob: -10.076264381408691
    5. '[j' → logprob: -11.076264381408691
    6. ' ,' → logprob: -12.076264381408691
    7. '       ' → logprob: -12.201264381408691
    8. '[' → logprob: -12.326264381408691
    9. ',user' → logprob: -12.326264381408691
    10. ',i' → logprob: -12.451264381408691

Token 2535: ')]' (ID: 15710)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00016825977945700288
    2. ']=' → logprob: -8.875167846679688
    3. ')' → logprob: -10.625167846679688
    4. '])' → logprob: -13.250167846679688
    5. ']=(' → logprob: -14.000167846679688
    6. '   ' → logprob: -14.250167846679688
    7. ')]' → logprob: -14.750167846679688
    8. ']
' → logprob: -15.625167846679688
    9. ' ]' → logprob: -15.875167846679688
    10. '       ' → logprob: -16.125167846679688

Token 2536: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -3.547789674485102e-05
    2. ' =' → logprob: -10.250035285949707
    3. '=
' → logprob: -18.875036239624023
    4. '.=' → logprob: -20.375036239624023
    5. '=}' → logprob: -21.375036239624023
    6. '＝' → logprob: -22.250036239624023
    7. '_=' → logprob: -22.375036239624023
    8. '=

' → logprob: -22.625036239624023
    9. ']=' → logprob: -23.250036239624023
    10. '=`' → logprob: -23.375036239624023

Token 2537: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -1.676292231422849e-05
    2. ' results' → logprob: -11.000017166137695
    3. '(results' → logprob: -19.375017166137695
    4. '	results' → logprob: -20.375017166137695
    5. 'result' → logprob: -23.375017166137695
    6. '.results' → logprob: -23.875017166137695
    7. 'Results' → logprob: -23.875017166137695
    8. 'answers' → logprob: -25.250017166137695
    9. '_results' → logprob: -26.250017166137695
    10. '   ' → logprob: -26.250017166137695

Token 2538: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001358400477329269
    2. 'return' → logprob: -9.50013542175293
    3. '   ' → logprob: -10.62513542175293
    4. '	' → logprob: -10.75013542175293
    5. ' return' → logprob: -12.37513542175293
    6. '           ' → logprob: -12.87513542175293
    7. '```' → logprob: -13.12513542175293
    8. '(' → logprob: -13.62513542175293
    9. '	return' → logprob: -13.75013542175293
    10. '      ' → logprob: -14.25013542175293

Token 2539: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006229649879969656
    2. 'return' → logprob: -7.500622749328613
    3. '   ' → logprob: -10.500622749328613
    4. '```' → logprob: -10.875622749328613
    5. ' return' → logprob: -11.750622749328613
    6. '           ' → logprob: -12.000622749328613
    7. '               ' → logprob: -12.625622749328613
    8. '	' → logprob: -12.875622749328613
    9. '                   ' → logprob: -13.875622749328613
    10. '	return' → logprob: -15.000622749328613

Token 2540: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12936832010746002
    2. 'return' (adapté à ' return') → logprob: -2.129368305206299
    3. '   ' → logprob: -6.379368305206299
    4. ' return' → logprob: -7.879368305206299
    5. '           ' → logprob: -8.879368782043457
    6. '```' → logprob: -9.254368782043457
    7. '
' → logprob: -9.879368782043457
    8. '	return' → logprob: -10.754368782043457
    9. '               ' → logprob: -11.004368782043457
    10. '        
' → logprob: -11.879368782043457

Token 2541: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -4.5491004129871726e-05
    2. ' results' → logprob: -10.000045776367188
    3. 'result' → logprob: -19.125045776367188
    4. '	results' → logprob: -19.125045776367188
    5. '(results' → logprob: -20.250045776367188
    6. '   ' → logprob: -22.250045776367188
    7. '.results' → logprob: -22.875045776367188
    8. '       ' → logprob: -24.000045776367188
    9. 'res' → logprob: -24.625045776367188
    10. 'Results' → logprob: -25.375045776367188

Token 2542: '
    
' (ID: 15698)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06249336898326874
    2. '   ' → logprob: -2.812493324279785
    3. ' def' → logprob: -8.187493324279785
    4. '```' → logprob: -10.187493324279785
    5. '@' → logprob: -10.687493324279785
    6. '       ' → logprob: -10.937493324279785
    7. '_def' → logprob: -10.937493324279785
    8. 'return' → logprob: -11.062493324279785
    9. '
' → logprob: -11.187493324279785
    10. '(' → logprob: -11.187493324279785

Token 2543: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.47662243247032166
    2. '   ' → logprob: -0.976622462272644
    3. '```' → logprob: -7.351622581481934
    4. '_def' → logprob: -7.601622581481934
    5. ' def' → logprob: -7.726622581481934
    6. '`' → logprob: -8.476622581481934
    7. '
' → logprob: -8.601622581481934
    8. '       ' → logprob: -8.851622581481934
    9. '_' → logprob: -9.101622581481934
    10. '    
' → logprob: -9.726622581481934

Token 2544: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0031225793063640594
    2. '   ' → logprob: -6.378122806549072
    3. '_apply' → logprob: -6.628122806549072
    4. '_def' → logprob: -9.878122329711914
    5. ' def' → logprob: -10.253122329711914
    6. '```' → logprob: -13.378122329711914
    7. 'Apply' → logprob: -13.503122329711914
    8. '_ap' → logprob: -13.753122329711914
    9. ' ' → logprob: -13.878122329711914
    10. 'apply' → logprob: -14.003122329711914

Token 2545: ' _' (ID: 1175)
  Prédit: '_apply'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_apply' → logprob: -2.1008713702030946e-06
    2. '_app' → logprob: -14.000001907348633
    3. '_eval' → logprob: -14.750001907348633
    4. '_e' → logprob: -15.500001907348633
    5. '_ap' → logprob: -15.625001907348633
    6. ' _' → logprob: -15.625001907348633
    7. '_application' → logprob: -16.000001907348633
    8. 'apply' → logprob: -16.375001907348633
    9. '```' → logprob: -17.250001907348633
    10. '``' → logprob: -17.625001907348633

Token 2546: 'apply' (ID: 22822)
  Prédit: 'apply'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apply' → logprob: -0.000553151941858232
    2. '_apply' → logprob: -7.500553131103516
    3. ' apply' → logprob: -16.375553131103516
    4. '.apply' → logprob: -17.500553131103516
    5. '   ' → logprob: -19.000553131103516
    6. 'def' → logprob: -19.250553131103516
    7. '
' → logprob: -19.875553131103516
    8. 'Apply' → logprob: -20.000553131103516
    9. '```' → logprob: -20.125553131103516
    10. 'evaluate' → logprob: -20.375553131103516

Token 2547: '_op' (ID: 20111)
  Prédit: '_op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_op' → logprob: -0.0001681405701674521
    2. '(self' → logprob: -9.000167846679688
    3. 'self' → logprob: -10.500167846679688
    4. 'op' → logprob: -11.375167846679688
    5. '_' → logprob: -13.375167846679688
    6. 'Op' → logprob: -13.875167846679688
    7. '_ops' → logprob: -14.375167846679688
    8. '(_' → logprob: -14.375167846679688
    9. '_operation' → logprob: -14.500167846679688
    10. '(' → logprob: -14.625167846679688

Token 2548: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.632542913896032e-05
    2. '(' → logprob: -10.000046730041504
    3. 'self' → logprob: -14.125046730041504
    4. '(
' → logprob: -16.000045776367188
    5. '   ' → logprob: -17.375045776367188
    6. '       ' → logprob: -17.625045776367188
    7. '(l' → logprob: -18.625045776367188
    8. 'def' → logprob: -19.125045776367188
    9. '(sel' → logprob: -19.250045776367188
    10. ' (' → logprob: -19.625045776367188

Token 2549: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0005141906440258026
    2. '(' → logprob: -7.750514030456543
    3. '(l' → logprob: -9.500514030456543
    4. 'self' → logprob: -12.125514030456543
    5. '(s' → logprob: -14.125514030456543
    6. ' (' → logprob: -14.125514030456543
    7. '(sel' → logprob: -14.500514030456543
    8. '   ' → logprob: -15.125514030456543
    9. '(
' → logprob: -15.250514030456543
    10. 'def' → logprob: -16.12551498413086

Token 2550: ' a' (ID: 261)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.30266207456588745
    2. 'a' → logprob: -1.4276621341705322
    3. 'op' → logprob: -4.177661895751953
    4. 'lv' → logprob: -5.802661895751953
    5. 'left' → logprob: -6.302661895751953
    6. 'l' → logprob: -7.802661895751953
    7. '   ' → logprob: -8.552661895751953
    8. 'lhs' → logprob: -8.802661895751953
    9. ' self' → logprob: -9.177661895751953
    10. '       ' → logprob: -10.052661895751953

Token 2551: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007563813705928624
    2. ' ,' → logprob: -7.62575626373291
    3. 'self' → logprob: -9.62575626373291
    4. ',a' → logprob: -10.12575626373291
    5. '(self' → logprob: -10.25075626373291
    6. '       ' → logprob: -10.25075626373291
    7. '   ' → logprob: -10.62575626373291
    8. '_,' → logprob: -10.75075626373291
    9. ',self' → logprob: -11.25075626373291
    10. '(op' → logprob: -12.00075626373291

Token 2552: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5829229354858398
    2. 'str' → logprob: -0.8329229354858398
    3. 'a' → logprob: -5.95792293548584
    4. 'op' → logprob: -6.33292293548584
    5. 'b' → logprob: -6.83292293548584
    6. '[str' → logprob: -8.45792293548584
    7. '[int' → logprob: -8.70792293548584
    8. ' str' → logprob: -8.83292293548584
    9. '(str' → logprob: -8.95792293548584
    10. ' int' → logprob: -9.20792293548584

Token 2553: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.274932143744081e-05
    2. ' ,' → logprob: -10.125042915344238
    3. ',self' → logprob: -13.750042915344238
    4. 'self' → logprob: -15.000042915344238
    5. '   ' → logprob: -15.000042915344238
    6. ',a' → logprob: -15.125042915344238
    7. '       ' → logprob: -15.625042915344238
    8. 'op' → logprob: -15.750042915344238
    9. '_,' → logprob: -16.750041961669922
    10. '(op' → logprob: -16.750041961669922

Token 2554: ' op' (ID: 991)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.4308181405067444
    2. 'op' → logprob: -1.0558180809020996
    3. ' b' → logprob: -6.9308180809021
    4. ' op' → logprob: -7.6808180809021
    5. 'str' → logprob: -7.8058180809021
    6. 'self' → logprob: -8.555818557739258
    7. '   ' → logprob: -10.805818557739258
    8. '       ' → logprob: -11.180818557739258
    9. '_op' → logprob: -11.430818557739258
    10. 'operator' → logprob: -12.180818557739258

Token 2555: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004564107861369848
    2. ':' → logprob: -5.50456428527832
    3. ' ,' → logprob: -8.12956428527832
    4. ':str' → logprob: -9.25456428527832
    5. '   ' → logprob: -10.75456428527832
    6. ')' → logprob: -11.00456428527832
    7. 'op' → logprob: -11.62956428527832
    8. ' op' → logprob: -11.75456428527832
    9. '(op' → logprob: -12.00456428527832
    10. ' :' → logprob: -12.00456428527832

Token 2556: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.0007553085451945662
    2. 'int' → logprob: -7.250755310058594
    3. ' str' → logprob: -10.250755310058594
    4. '[str' → logprob: -12.125755310058594
    5. 'op' → logprob: -13.000755310058594
    6. '   ' → logprob: -14.375755310058594
    7. 'a' → logprob: -14.875755310058594
    8. '(str' → logprob: -15.375755310058594
    9. '       ' → logprob: -15.500755310058594
    10. ' ' → logprob: -15.500755310058594

Token 2557: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.253090865968261e-06
    2. ' ,' → logprob: -12.125009536743164
    3. ',b' → logprob: -13.625009536743164
    4. ',
' → logprob: -13.625009536743164
    5. ')' → logprob: -14.000009536743164
    6. '   ' → logprob: -15.375009536743164
    7. ':' → logprob: -16.000009536743164
    8. '```' → logprob: -17.000009536743164
    9. '‌,' → logprob: -17.250009536743164
    10. '):
' → logprob: -17.375009536743164

Token 2558: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.306760805164231e-05
    2. ' b' → logprob: -11.25001335144043
    3. '   ' → logprob: -19.25001335144043
    4. '	b' → logprob: -19.50001335144043
    5. '       ' → logprob: -20.37501335144043
    6. '    ' → logprob: -21.62501335144043
    7. '           ' → logprob: -22.00001335144043
    8. '  ' → logprob: -22.87501335144043
    9. '      ' → logprob: -22.87501335144043
    10. '     ' → logprob: -23.12501335144043

Token 2559: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004135391674935818
    2. ':' → logprob: -5.504135608673096
    3. ' )' → logprob: -10.504135131835938
    4. '):' → logprob: -10.879135131835938
    5. ',' → logprob: -12.254135131835938
    6. '   ' → logprob: -12.754135131835938
    7. '`)' → logprob: -13.754135131835938
    8. '):
' → logprob: -13.879135131835938
    9. '')' → logprob: -15.379135131835938
    10. ':int' → logprob: -15.379135131835938

Token 2560: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -4.320199877838604e-07
    2. ' int' → logprob: -15.0
    3. '(int' → logprob: -19.75
    4. '[int' → logprob: -20.5
    5. ''int' → logprob: -20.625
    6. '   ' → logprob: -21.25
    7. ':int' → logprob: -21.875
    8. 'Optional' → logprob: -22.125
    9. '<int' → logprob: -23.0
    10. '	int' → logprob: -23.125

Token 2561: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00043472214019857347
    2. '):
' → logprob: -7.875434875488281
    3. '):' → logprob: -10.250434875488281
    4. ':' → logprob: -11.125434875488281
    5. '   ' → logprob: -13.000434875488281
    6. ')->' → logprob: -13.875434875488281
    7. ' )' → logprob: -14.000434875488281
    8. '):
' → logprob: -15.625434875488281
    9. '       ' → logprob: -16.00043487548828
    10. '):

' → logprob: -16.87543487548828

Token 2562: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.031754396855831146
    2. '->' → logprob: -4.406754493713379
    3. ':
' → logprob: -5.156754493713379
    4. '       ' → logprob: -5.156754493713379
    5. ')' → logprob: -5.781754493713379
    6. ' ->' → logprob: -5.781754493713379
    7. '   ' → logprob: -7.906754493713379
    8. '):' → logprob: -8.281754493713379
    9. ')->' → logprob: -8.781754493713379
    10. ':return' → logprob: -8.781754493713379

Token 2563: ' Optional' (ID: 19351)
  Prédit: 'Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Optional' → logprob: -2.6776029699249193e-05
    2. ' Optional' → logprob: -10.62502670288086
    3. '(Optional' → logprob: -13.12502670288086
    4. '	Optional' → logprob: -15.87502670288086
    5. ''' → logprob: -16.37502670288086
    6. 'int' → logprob: -16.62502670288086
    7. '_optional' → logprob: -17.62502670288086
    8. '   ' → logprob: -18.12502670288086
    9. 'Union' → logprob: -18.12502670288086
    10. 'None' → logprob: -18.25002670288086

Token 2564: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.00026383911608718336
    2. 'int' → logprob: -8.250264167785645
    3. '[Int' → logprob: -13.625264167785645
    4. ':int' → logprob: -14.000264167785645
    5. '[' → logprob: -15.375264167785645
    6. '=int' → logprob: -16.000263214111328
    7. '[
' → logprob: -16.375263214111328
    8. '(int' → logprob: -17.000263214111328
    9. '_int' → logprob: -17.625263214111328
    10. '<int' → logprob: -18.125263214111328

Token 2565: ']:
' (ID: 22152)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.13282369077205658
    2. ':
' → logprob: -2.5078237056732178
    3. '       ' → logprob: -4.007823467254639
    4. '   ' → logprob: -4.507823467254639
    5. ':' → logprob: -5.132823467254639
    6. '):' → logprob: -5.507823467254639
    7. ')' → logprob: -5.882823467254639
    8. '():
' → logprob: -7.757823467254639
    9. '{
' → logprob: -9.257823944091797
    10. '{' → logprob: -9.757823944091797

Token 2566: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022692665457725525
    2. ' if' → logprob: -4.772692680358887
    3. '```' → logprob: -5.022692680358887
    4. '{
' → logprob: -6.272692680358887
    5. 'if' → logprob: -6.397692680358887
    6. '        ' → logprob: -7.397692680358887
    7. '    ' → logprob: -7.522692680358887
    8. ' ' → logprob: -7.522692680358887
    9. ' return' → logprob: -8.522692680358887
    10. '   ' → logprob: -8.522692680358887

Token 2567: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35276204347610474
    2. 'return' → logprob: -1.60276198387146
    3. 'self' → logprob: -2.35276198387146
    4. ' return' → logprob: -7.602762222290039
    5. 'if' (adapté à ' if') → logprob: -8.852762222290039
    6. ' self' → logprob: -9.227762222290039
    7. '```' → logprob: -10.977762222290039
    8. '           ' → logprob: -11.352762222290039
    9. 'Binary' → logprob: -11.477762222290039
    10. '{
' → logprob: -12.227762222290039

Token 2568: ' op' (ID: 991)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -1.6047699318733066e-05
    2. ' op' → logprob: -11.375016212463379
    3. 'self' → logprob: -12.375016212463379
    4. 'a' → logprob: -16.500015258789062
    5. '(op' → logprob: -16.625015258789062
    6. '   ' → logprob: -17.000015258789062
    7. '	op' → logprob: -17.750015258789062
    8. '       ' → logprob: -18.375015258789062
    9. 'not' → logprob: -18.625015258789062
    10. '           ' → logprob: -18.875015258789062

Token 2569: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5345975160598755
    2. '==' → logprob: -0.9095975160598755
    3. '=='' → logprob: -4.534597396850586
    4. ' =='' → logprob: -8.409597396850586
    5. '=' → logprob: -9.284597396850586
    6. ''' → logprob: -9.409597396850586
    7. '==
' → logprob: -9.409597396850586
    8. '=="' → logprob: -9.784597396850586
    9. '       ' → logprob: -10.034597396850586
    10. '[' → logprob: -11.284597396850586

Token 2570: ' '+' (ID: 30120)
  Prédit: ''+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''+' → logprob: -0.16030994057655334
    2. ''' → logprob: -1.910309910774231
    3. '"+"' → logprob: -9.785309791564941
    4. '+' → logprob: -11.660309791564941
    5. '"+' → logprob: -11.785309791564941
    6. ''*' → logprob: -12.535309791564941
    7. 'None' → logprob: -12.535309791564941
    8. ' '+'' → logprob: -12.660309791564941
    9. ' '+' → logprob: -14.160309791564941
    10. ''-' → logprob: -14.660309791564941

Token 2571: '':
' (ID: 7669)
  Prédit: ''a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''a' → logprob: -1.0077459812164307
    2. ''' → logprob: -1.1327459812164307
    3. '':' → logprob: -1.7577459812164307
    4. ''+' → logprob: -3.0077459812164307
    5. '       ' → logprob: -3.2577459812164307
    6. '':
' → logprob: -4.007745742797852
    7. 'a' → logprob: -4.632745742797852
    8. ':' → logprob: -5.257745742797852
    9. '           ' → logprob: -5.257745742797852
    10. '        ' → logprob: -5.632745742797852

Token 2572: '           ' (ID: 352)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.0729423463344574
    2. '           ' → logprob: -3.1979422569274902
    3. 'return' → logprob: -3.5729422569274902
    4. '            ' → logprob: -6.94794225692749
    5. '               ' → logprob: -8.697942733764648
    6. ' ' → logprob: -9.697942733764648
    7. '        ' → logprob: -9.822942733764648
    8. ' 
' → logprob: -10.072942733764648
    9. '       ' → logprob: -10.322942733764648
    10. ' ' → logprob: -10.697942733764648

Token 2573: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00030733743915334344
    2. 'a' → logprob: -8.250307083129883
    3. ' return' → logprob: -10.000307083129883
    4. '
' → logprob: -14.625307083129883
    5. '       ' → logprob: -16.125307083129883
    6. '{return' → logprob: -16.625307083129883
    7. 'result' → logprob: -17.375307083129883
    8. '	return' → logprob: -18.000307083129883
    9. ' a' → logprob: -18.125307083129883
    10. '           ' → logprob: -18.375307083129883

Token 2574: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.9361264946837764e-07
    2. ' a' → logprob: -15.75
    3. '	a' → logprob: -21.75
    4. '_a' → logprob: -23.0
    5. '(a' → logprob: -24.375
    6. '#a' → logprob: -24.625
    7. '   ' → logprob: -25.25
    8. '```' → logprob: -25.5
    9. ''a' → logprob: -26.0
    10. '<a' → logprob: -26.0

Token 2575: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2519480884075165
    2. ' +' → logprob: -1.5019481182098389
    3. '+b' → logprob: -11.001948356628418
    4. '+
' → logprob: -13.376948356628418
    5. '+a' → logprob: -14.876948356628418
    6. ' +
' → logprob: -15.626948356628418
    7. ' ' → logprob: -16.2519474029541
    8. ' ' → logprob: -17.2519474029541
    9. '+p' → logprob: -17.2519474029541
    10. '[' → logprob: -17.5019474029541

Token 2576: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.029750484973192215
    2. ' b' → logprob: -3.5297505855560303
    3. ' ' → logprob: -19.77975082397461
    4. '	b' → logprob: -19.77975082397461
    5. '_b' → logprob: -20.15475082397461
    6. ' ' → logprob: -21.52975082397461
    7. ')b' → logprob: -21.77975082397461
    8. ' б' → logprob: -22.77975082397461
    9. '*b' → logprob: -23.27975082397461
    10. '```' → logprob: -23.40475082397461

Token 2577: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2578: '       ' (ID: 309)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.017638947814702988
    2. ' elif' → logprob: -4.51763916015625
    3. '       ' → logprob: -6.64263916015625
    4. '*' → logprob: -6.89263916015625
    5. '`' → logprob: -7.14263916015625
    6. '```' → logprob: -7.26763916015625
    7. '<|end|>' → logprob: -7.51763916015625
    8. ''' → logprob: -7.89263916015625
    9. '   ' → logprob: -8.01763916015625
    10. ' 
' → logprob: -8.39263916015625

Token 2579: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.012568047270178795
    2. 'if' → logprob: -4.63756799697876
    3. ' elif' → logprob: -6.76256799697876
    4. ''' → logprob: -6.76256799697876
    5. '       ' → logprob: -9.387568473815918
    6. '`' → logprob: -9.387568473815918
    7. ' if' → logprob: -9.887568473815918
    8. '
' → logprob: -10.137568473815918
    9. ' 
' → logprob: -10.262568473815918
    10. '```' → logprob: -10.262568473815918

Token 2580: ' op' (ID: 991)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -2.935296834039036e-06
    2. ' op' → logprob: -12.75000286102295
    3. ''-' → logprob: -17.125003814697266
    4. '	op' → logprob: -18.625003814697266
    5. ' ' → logprob: -19.125003814697266
    6. '   ' → logprob: -19.125003814697266
    7. '(op' → logprob: -20.000003814697266
    8. ''op' → logprob: -20.000003814697266
    9. 'o' → logprob: -20.375003814697266
    10. '       ' → logprob: -20.625003814697266

Token 2581: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5802980065345764
    2. '==' → logprob: -0.8302980065345764
    3. '           ' → logprob: -6.080297946929932
    4. '       ' → logprob: -7.580297946929932
    5. '-' → logprob: -7.830297946929932
    6. '=' → logprob: -7.955297946929932
    7. '=='' → logprob: -7.955297946929932
    8. '        ' → logprob: -9.08029842376709
    9. ''-' → logprob: -9.20529842376709
    10. ':' → logprob: -9.58029842376709

Token 2582: ' '-' (ID: 17489)
  Prédit: ''-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''-' → logprob: -7.183501293184236e-05
    2. ''*' → logprob: -10.25007152557373
    3. '-' → logprob: -10.75007152557373
    4. ' '-' → logprob: -12.12507152557373
    5. ''+' → logprob: -12.37507152557373
    6. ' ' → logprob: -13.50007152557373
    7. '   ' → logprob: -14.25007152557373
    8. '('-' → logprob: -14.37507152557373
    9. ''' → logprob: -14.37507152557373
    10. '"-' → logprob: -14.50007152557373

Token 2583: '':
' (ID: 7669)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7258991599082947
    2. '           ' → logprob: -0.9758991599082947
    3. ' '' → logprob: -3.4758992195129395
    4. '       ' → logprob: -3.4758992195129395
    5. '        ' → logprob: -3.8508992195129395
    6. ' return' → logprob: -3.8508992195129395
    7. ':' → logprob: -4.1008992195129395
    8. '            ' → logprob: -5.1008992195129395
    9. ' ' → logprob: -5.9758992195129395
    10. '               ' → logprob: -6.2258992195129395

Token 2584: '           ' (ID: 352)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4378567934036255
    2. ' return' → logprob: -1.0628567934036255
    3. 'a' → logprob: -5.562856674194336
    4. '           ' → logprob: -6.312856674194336
    5. ' a' → logprob: -6.562856674194336
    6. 'b' → logprob: -6.937856674194336
    7. '       ' → logprob: -7.187856674194336
    8. ' b' → logprob: -8.562856674194336
    9. ' ' → logprob: -10.562856674194336
    10. '        ' → logprob: -10.687856674194336

Token 2585: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.005001651588827372
    2. ' return' → logprob: -5.505001544952393
    3. 'a' → logprob: -7.005001544952393
    4. 'b' → logprob: -12.38000202178955
    5. ' a' → logprob: -12.50500202178955
    6. '{return' → logprob: -12.63000202178955
    7. '{
' → logprob: -13.38000202178955
    8. '	return' → logprob: -13.63000202178955
    9. '       ' → logprob: -14.38000202178955
    10. ':return' → logprob: -15.38000202178955

Token 2586: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0004306692280806601
    2. ' a' → logprob: -7.750430583953857
    3. '(a' → logprob: -18.375431060791016
    4. '	a' → logprob: -18.875431060791016
    5. 'None' → logprob: -19.500431060791016
    6. '   ' → logprob: -20.250431060791016
    7. ' ' → logprob: -21.125431060791016
    8. ' ' → logprob: -21.625431060791016
    9. '[a' → logprob: -21.750431060791016
    10. '#a' → logprob: -21.875431060791016

Token 2587: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.049356523901224136
    2. '-' → logprob: -3.049356460571289
    3. '-b' → logprob: -7.174356460571289
    4. 'b' → logprob: -14.299356460571289
    5. ' ' → logprob: -14.924356460571289
    6. ' ' → logprob: -15.049356460571289
    7. ' -
' → logprob: -15.049356460571289
    8. '[' → logprob: -15.174356460571289
    9. '```' → logprob: -15.674356460571289
    10. '+' → logprob: -15.924356460571289

Token 2588: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00033546582562848926
    2. ' b' → logprob: -8.000335693359375
    3. '       ' → logprob: -17.500335693359375
    4. '	b' → logprob: -19.250335693359375
    5. '(b' → logprob: -19.250335693359375
    6. '1' → logprob: -20.500335693359375
    7. '_b' → logprob: -20.750335693359375
    8. '   ' → logprob: -20.750335693359375
    9. ')b' → logprob: -20.750335693359375
    10. ' ' → logprob: -20.875335693359375

Token 2589: '
' (ID: 198)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.062227822840213776
    2. '       ' → logprob: -3.312227725982666
    3. ' elif' → logprob: -3.812227725982666
    4. '*' → logprob: -7.312227725982666
    5. '	elif' → logprob: -7.812227725982666
    6. '           ' → logprob: -7.937227725982666
    7. '   ' → logprob: -9.312228202819824
    8. 'else' → logprob: -9.437228202819824
    9. '```' → logprob: -10.187228202819824
    10. '`' → logprob: -10.312228202819824

Token 2590: '       ' (ID: 309)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.21562647819519043
    2. '       ' → logprob: -1.7156264781951904
    3. ' elif' → logprob: -4.3406267166137695
    4. '           ' → logprob: -7.8406267166137695
    5. '   ' → logprob: -8.21562671661377
    6. '*' → logprob: -8.84062671661377
    7. '	elif' → logprob: -9.21562671661377
    8. '     ' → logprob: -9.96562671661377
    9. '```' → logprob: -10.21562671661377
    10. ' ' → logprob: -11.09062671661377

Token 2591: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.10167749971151352
    2. ''*' → logprob: -2.351677417755127
    3. '       ' → logprob: -7.226677417755127
    4. ' elif' → logprob: -8.101677894592285
    5. ''' → logprob: -8.726677894592285
    6. '           ' → logprob: -8.851677894592285
    7. '*' → logprob: -9.601677894592285
    8. '`' → logprob: -10.976677894592285
    9. 'return' → logprob: -11.351677894592285
    10. '   ' → logprob: -11.726677894592285

Token 2592: ' op' (ID: 991)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.005828541703522205
    2. ''*' → logprob: -5.255828380584717
    3. ' op' → logprob: -7.505828380584717
    4. ''op' → logprob: -10.755828857421875
    5. '(op' → logprob: -11.630828857421875
    6. ' '*' → logprob: -12.130828857421875
    7. '_op' → logprob: -12.630828857421875
    8. 'mul' → logprob: -13.505828857421875
    9. '	op' → logprob: -13.880828857421875
    10. '*' → logprob: -14.005828857421875

Token 2593: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.21705935895442963
    2. '==' → logprob: -1.7170593738555908
    3. '           ' → logprob: -4.967059135437012
    4. ':' → logprob: -5.342059135437012
    5. '=' → logprob: -6.342059135437012
    6. '*' → logprob: -7.717059135437012
    7. ''' → logprob: -8.467059135437012
    8. '       ' → logprob: -8.592059135437012
    9. ' '' → logprob: -8.967059135437012
    10. ''*' → logprob: -8.967059135437012

Token 2594: ' '*' (ID: 34958)
  Prédit: ''*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''*' → logprob: -1.5213274309644476e-05
    2. ' '*' → logprob: -11.250015258789062
    3. ''+' → logprob: -14.250015258789062
    4. ''' → logprob: -14.875015258789062
    5. '"*' → logprob: -14.875015258789062
    6. ' '*'' → logprob: -15.250015258789062
    7. ''m' → logprob: -15.625015258789062
    8. '*' → logprob: -15.625015258789062
    9. '('*' → logprob: -16.375015258789062
    10. ''s' → logprob: -16.875015258789062

Token 2595: '':
' (ID: 7669)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.9094817042350769
    2. '           ' → logprob: -1.5344817638397217
    3. ':
' → logprob: -1.7844817638397217
    4. ' return' → logprob: -2.1594817638397217
    5. ':' → logprob: -2.7844817638397217
    6. ':return' → logprob: -4.159481525421143
    7. '       ' → logprob: -4.409481525421143
    8. '   ' → logprob: -5.534481525421143
    9. '               ' → logprob: -6.784481525421143
    10. 'a' → logprob: -7.659481525421143

Token 2596: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2705983519554138
    2. 'return' → logprob: -1.5205984115600586
    3. ' return' → logprob: -4.145598411560059
    4. '       ' → logprob: -6.520598411560059
    5. '               ' → logprob: -8.395598411560059
    6. ':' → logprob: -8.895598411560059
    7. '{
' → logprob: -9.020598411560059
    8. ' ' → logprob: -9.145598411560059
    9. ':
' → logprob: -9.145598411560059
    10. ':return' → logprob: -9.145598411560059

Token 2597: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0022493419237434864
    2. ' return' → logprob: -6.502249240875244
    3. '           ' → logprob: -7.252249240875244
    4. '       ' → logprob: -10.877249717712402
    5. 'if' → logprob: -11.752249717712402
    6. '```' → logprob: -12.002249717712402
    7. '   ' → logprob: -13.502249717712402
    8. '	return' → logprob: -13.752249717712402
    9. ':return' → logprob: -13.877249717712402
    10. '{return' → logprob: -14.502249717712402

Token 2598: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -4.0126840758603066e-05
    2. ' a' → logprob: -10.125040054321289
    3. '   ' → logprob: -18.50004005432129
    4. 'None' → logprob: -20.62504005432129
    5. '(a' → logprob: -20.87504005432129
    6. ' ' → logprob: -21.37504005432129
    7. '	a' → logprob: -21.62504005432129
    8. '    ' → logprob: -22.00004005432129
    9. '  ' → logprob: -22.12504005432129
    10. 'int' → logprob: -22.37504005432129

Token 2599: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.028480304405093193
    2. '*' → logprob: -3.778480291366577
    3. '*b' → logprob: -5.278480529785156
    4. '<|end|>' → logprob: -9.903480529785156
    5. ' ' → logprob: -10.153480529785156
    6. ' b' → logprob: -11.903480529785156
    7. 'b' → logprob: -12.028480529785156
    8. '       ' → logprob: -12.403480529785156
    9. ' ' → logprob: -12.653480529785156
    10. '   ' → logprob: -12.653480529785156

Token 2600: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00020354038861114532
    2. ' b' → logprob: -8.500203132629395
    3. ' ' → logprob: -18.50020408630371
    4. '   ' → logprob: -19.25020408630371
    5. '	b' → logprob: -19.25020408630371
    6. '       ' → logprob: -20.25020408630371
    7. ')b' → logprob: -20.50020408630371
    8. '<|end|>' → logprob: -20.50020408630371
    9. '```' → logprob: -20.62520408630371
    10. '(b' → logprob: -21.25020408630371

Token 2601: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04891730099916458
    2. 'elif' → logprob: -3.048917293548584
    3. ' elif' → logprob: -9.298917770385742
    4. '   ' → logprob: -9.423917770385742
    5. '
' → logprob: -10.423917770385742
    6. '<|end|>' → logprob: -10.548917770385742
    7. '\
' → logprob: -10.798917770385742
    8. '```' → logprob: -10.798917770385742
    9. '	' → logprob: -11.298917770385742
    10. '/' → logprob: -11.423917770385742

Token 2602: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001930420519784093
    2. 'elif' → logprob: -6.251930236816406
    3. ' elif' → logprob: -14.001930236816406
    4. '   ' → logprob: -14.501930236816406
    5. '	' → logprob: -15.251930236816406
    6. '	elif' → logprob: -16.126930236816406
    7. '
' → logprob: -16.251930236816406
    8. '           ' → logprob: -16.876930236816406
    9. '```' → logprob: -17.126930236816406
    10. 'return' → logprob: -17.626930236816406

Token 2603: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.0006445261533372104
    2. '       ' → logprob: -7.750644683837891
    3. ''/' → logprob: -8.62564468383789
    4. ' elif' → logprob: -11.12564468383789
    5. '/' → logprob: -11.75064468383789
    6. '/
' → logprob: -12.25064468383789
    7. ''' → logprob: -13.12564468383789
    8. 'return' → logprob: -13.25064468383789
    9. '           ' → logprob: -13.87564468383789
    10. 'else' → logprob: -14.50064468383789

Token 2604: ' op' (ID: 991)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.019920391961932182
    2. ' op' → logprob: -4.019920349121094
    3. ''' → logprob: -7.269920349121094
    4. ''/' → logprob: -8.019920349121094
    5. 'b' → logprob: -8.894920349121094
    6. ' '/'' → logprob: -9.019920349121094
    7. '/' → logprob: -9.269920349121094
    8. '   ' → logprob: -9.519920349121094
    9. '       ' → logprob: -9.769920349121094
    10. '           ' → logprob: -9.894920349121094

Token 2605: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.06207389757037163
    2. '==' → logprob: -2.8120739459991455
    3. '=='' → logprob: -9.437073707580566
    4. '=' → logprob: -11.062073707580566
    5. ''' → logprob: -13.062073707580566
    6. ' =='' → logprob: -13.062073707580566
    7. ' =' → logprob: -13.312073707580566
    8. '           ' → logprob: -14.312073707580566
    9. ' ==
' → logprob: -14.312073707580566
    10. '==
' → logprob: -14.562073707580566

Token 2606: ' '/' (ID: 7041)
  Prédit: ''/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''/' → logprob: -0.014172209426760674
    2. ''' → logprob: -4.264172077178955
    3. '/' → logprob: -12.014172554016113
    4. '"/' → logprob: -13.139172554016113
    5. ' '/'' → logprob: -15.639172554016113
    6. ' '/' → logprob: -16.014171600341797
    7. '('/' → logprob: -16.264171600341797
    8. ''+' → logprob: -17.014171600341797
    9. '('/')' → logprob: -17.014171600341797
    10. ''*' → logprob: -17.139171600341797

Token 2607: '':
' (ID: 7669)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9409686923027039
    2. '       ' → logprob: -1.6909687519073486
    3. ':
' → logprob: -1.9409687519073486
    4. '(self' → logprob: -2.3159687519073486
    5. ':' → logprob: -2.5659687519073486
    6. ' (' → logprob: -3.5659687519073486
    7. '(' → logprob: -3.9409687519073486
    8. ''' → logprob: -4.3159685134887695
    9. '':
' → logprob: -4.3159685134887695
    10. 'def' → logprob: -5.1909685134887695

Token 2608: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20184335112571716
    2. '           ' → logprob: -1.8268433809280396
    3. 'if' → logprob: -4.07684326171875
    4. ' if' → logprob: -5.82684326171875
    5. '0' → logprob: -7.20184326171875
    6. '               ' → logprob: -7.70184326171875
    7. 'def' → logprob: -8.32684326171875
    8. '   ' → logprob: -8.57684326171875
    9. '#' → logprob: -8.95184326171875
    10. 'return' → logprob: -9.70184326171875

Token 2609: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.26813918352127075
    2. '           ' → logprob: -1.893139123916626
    3. 'return' → logprob: -3.268139123916626
    4. 'def' → logprob: -3.768139123916626
    5. '#' → logprob: -4.893139362335205
    6. '       ' → logprob: -5.393139362335205
    7. 'div' → logprob: -5.518139362335205
    8. ' if' → logprob: -5.768139362335205
    9. 'None' → logprob: -6.143139362335205
    10. 'Binary' → logprob: -6.893139362335205

Token 2610: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -4.842555426876061e-06
    2. ' b' → logprob: -12.250004768371582
    3. 'op' → logprob: -18.6250057220459
    4. '   ' → logprob: -18.7500057220459
    5. '_b' → logprob: -18.8750057220459
    6. '       ' → logprob: -18.8750057220459
    7. '	b' → logprob: -18.8750057220459
    8. 'B' → logprob: -19.0000057220459
    9. '
' → logprob: -19.6250057220459
    10. '           ' → logprob: -19.6250057220459

Token 2611: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.009770493023097515
    2. ' ==' → logprob: -4.634770393371582
    3. '==
' → logprob: -12.009770393371582
    4. '```' → logprob: -12.509770393371582
    5. ')==' → logprob: -12.884770393371582
    6. ']==' → logprob: -14.009770393371582
    7. '!=' → logprob: -14.384770393371582
    8. '()==' → logprob: -15.009770393371582
    9. '=' → logprob: -15.259770393371582
    10. '===' → logprob: -15.884770393371582

Token 2612: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '۰' → logprob: -18.125003814697266
    4. '```' → logprob: -19.250003814697266
    5. '=' → logprob: -19.625003814697266
    6. '00' → logprob: -20.750003814697266
    7. '#' → logprob: -20.750003814697266
    8. '  ' → logprob: -20.875003814697266
    9. 'import' → logprob: -21.000003814697266
    10. '   ' → logprob: -21.125003814697266

Token 2613: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.250001907348633
    3. '۰' → logprob: -16.875001907348633
    4. ' ' → logprob: -17.875001907348633
    5. '  ' → logprob: -17.875001907348633
    6. '=' → logprob: -18.250001907348633
    7. '
' → logprob: -18.750001907348633
    8. '```' → logprob: -19.125001907348633
    9. 'zero' → logprob: -19.375001907348633
    10. '٠' → logprob: -19.562501907348633

Token 2614: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12999406456947327
    2. ':
' → logprob: -2.1299941539764404
    3. ':' → logprob: -6.004993915557861
    4. ':return' → logprob: -7.504993915557861
    5. '           ' → logprob: -10.87999439239502
    6. 'return' → logprob: -11.00499439239502
    7. '):
' → logprob: -13.37999439239502
    8. '              ' → logprob: -13.62999439239502
    9. ':
' → logprob: -13.87999439239502
    10. '{
' → logprob: -14.12999439239502

Token 2615: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0004468772385735065
    2. 'return' → logprob: -7.750446796417236
    3. 'None' → logprob: -11.500447273254395
    4. ' return' → logprob: -12.500447273254395
    5. '           ' → logprob: -14.500447273254395
    6. '   ' → logprob: -14.625447273254395
    7. '              ' → logprob: -15.000447273254395
    8. ' None' → logprob: -15.500447273254395
    9. '                   ' → logprob: -15.625447273254395
    10. '{return' → logprob: -16.000446319580078

Token 2616: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0026957436930388212
    2. 'None' → logprob: -6.002695560455322
    3. '               ' → logprob: -8.50269603729248
    4. ' return' → logprob: -11.00269603729248
    5. ' None' → logprob: -15.50269603729248
    6. '```' → logprob: -16.252695083618164
    7. '                   ' → logprob: -16.377695083618164
    8. '           ' → logprob: -16.877695083618164
    9. '	return' → logprob: -17.502695083618164
    10. '
' → logprob: -17.502695083618164

Token 2617: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: 0.0
    2. ' None' → logprob: -17.375
    3. '=None' → logprob: -22.125
    4. '_None' → logprob: -22.125
    5. 'No' → logprob: -22.25
    6. '
' → logprob: -22.5
    7. '(None' → logprob: -22.75
    8. '```' → logprob: -23.0
    9. 'none' → logprob: -23.25
    10. '       ' → logprob: -24.125

Token 2618: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008109067566692829
    2. '
' → logprob: -4.883109092712402
    3. 'return' → logprob: -7.758109092712402
    4. '       ' → logprob: -9.883109092712402
    5. '               ' → logprob: -11.508109092712402
    6. '            
' → logprob: -12.258109092712402
    7. ',' → logprob: -13.383109092712402
    8. ' return' → logprob: -13.508109092712402
    9. 'else' → logprob: -13.633109092712402
    10. '
' → logprob: -13.758109092712402

Token 2619: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005593375768512487
    2. 'return' → logprob: -5.880593299865723
    3. '       ' → logprob: -6.380593299865723
    4. '
' → logprob: -6.880593299865723
    5. '               ' → logprob: -10.755593299865723
    6. ' return' → logprob: -11.130593299865723
    7. '            
' → logprob: -12.005593299865723
    8. '   ' → logprob: -12.880593299865723
    9. '{
' → logprob: -13.130593299865723
    10. 'else' → logprob: -13.130593299865723

Token 2620: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.5576050877571106
    2. '#' → logprob: -1.5576050281524658
    3. 'abs' → logprob: -1.6826050281524658
    4. '           ' → logprob: -3.807605028152466
    5. 'sign' → logprob: -5.682605266571045
    6. '               ' → logprob: -6.182605266571045
    7. 'if' → logprob: -6.932605266571045
    8. 'a' → logprob: -7.057605266571045
    9. 'div' → logprob: -7.682605266571045
    10. 'quot' → logprob: -8.307604789733887

Token 2621: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0348750539124012
    2. '=' → logprob: -3.4098751544952393
    3. '           ' → logprob: -6.78487491607666
    4. '=int' → logprob: -11.28487491607666
    5. ':' → logprob: -11.40987491607666
    6. '=float' → logprob: -11.40987491607666
    7. ',' → logprob: -12.28487491607666
    8. 'div' → logprob: -12.28487491607666
    9. '_val' → logprob: -12.40987491607666
    10. '            ' → logprob: -12.40987491607666

Token 2622: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.002113381866365671
    2. ' a' → logprob: -6.252113342285156
    3. 'self' → logprob: -9.127113342285156
    4. 'int' → logprob: -10.377113342285156
    5. '0' → logprob: -11.252113342285156
    6. 'math' → logprob: -11.502113342285156
    7. ' self' → logprob: -12.377113342285156
    8. '(a' → logprob: -12.502113342285156
    9. 'float' → logprob: -12.877113342285156
    10. 'Expression' → logprob: -13.127113342285156

Token 2623: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.02393743395805359
    2. ' /' → logprob: -3.773937463760376
    3. '//' → logprob: -7.398937225341797
    4. ' //' → logprob: -10.148937225341797
    5. '/b' → logprob: -10.273937225341797
    6. '/res' → logprob: -12.648937225341797
    7. '/int' → logprob: -13.898937225341797
    8. '/a' → logprob: -14.398937225341797
    9. ' ' → logprob: -15.023937225341797
    10. '/
' → logprob: -15.898937225341797

Token 2624: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0005530327325686812
    2. ' b' → logprob: -7.500553131103516
    3. '           ' → logprob: -19.125553131103516
    4. ')b' → logprob: -22.500553131103516
    5. '       ' → logprob: -23.125553131103516
    6. '   ' → logprob: -23.125553131103516
    7. '	b' → logprob: -23.375553131103516
    8. 'float' → logprob: -23.375553131103516
    9. 'int' → logprob: -23.500553131103516
    10. '               ' → logprob: -23.750553131103516

Token 2625: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00048179292934946716
    2. '               ' → logprob: -8.625481605529785
    3. '<|end|>' → logprob: -9.250481605529785
    4. '            
' → logprob: -9.875481605529785
    5. '
' → logprob: -10.250481605529785
    6. '```' → logprob: -11.000481605529785
    7. '		' → logprob: -11.500481605529785
    8. ':' → logprob: -11.500481605529785
    9. '[' → logprob: -11.625481605529785
    10. '#' → logprob: -12.000481605529785

Token 2626: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00010509284038562328
    2. '               ' → logprob: -9.500104904174805
    3. '       ' → logprob: -11.375104904174805
    4. 'if' → logprob: -11.625104904174805
    5. ' if' → logprob: -12.500104904174805
    6. '
' → logprob: -13.375104904174805
    7. '```' → logprob: -13.750104904174805
    8. '          ' → logprob: -14.125104904174805
    9. '		' → logprob: -14.875104904174805
    10. '            ' → logprob: -15.000104904174805

Token 2627: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' (adapté à ' abs') → logprob: -0.07093635201454163
    2. '           ' → logprob: -3.320936441421509
    3. 'if' → logprob: -3.445936441421509
    4. ' abs' → logprob: -8.19593620300293
    5. 'import' → logprob: -9.07093620300293
    6. '               ' → logprob: -10.32093620300293
    7. ' if' → logprob: -11.07093620300293
    8. '{
' → logprob: -11.44593620300293
    9. '(abs' → logprob: -11.69593620300293
    10. '```' → logprob: -12.57093620300293

Token 2628: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.07869886606931686
    2. 'a' → logprob: -2.8286988735198975
    3. '(a' → logprob: -4.203698635101318
    4. '_b' → logprob: -7.078698635101318
    5. 'res' → logprob: -7.453698635101318
    6. '(' → logprob: -9.953699111938477
    7. '(res' → logprob: -10.578699111938477
    8. 'def' → logprob: -10.828699111938477
    9. '```' → logprob: -10.953699111938477
    10. '(
' → logprob: -11.203699111938477

Token 2629: ' =' (ID: 314)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02730698324739933
    2. ' <' → logprob: -5.152307033538818
    3. '=' → logprob: -5.402307033538818
    4. ' =' → logprob: -6.027307033538818
    5. 'abs' → logprob: -6.027307033538818
    6. '          ' → logprob: -6.027307033538818
    7. '_a' → logprob: -6.152307033538818
    8. ',' → logprob: -6.402307033538818
    9. '<|end|>' → logprob: -6.902307033538818
    10. '               ' → logprob: -7.402307033538818

Token 2630: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.01104935072362423
    2. ' abs' → logprob: -4.511049270629883
    3. '(abs' → logprob: -14.011049270629883
    4. '           ' → logprob: -14.386049270629883
    5. '.abs' → logprob: -16.511049270629883
    6. '       ' → logprob: -17.511049270629883
    7. 'ab' → logprob: -17.636049270629883
    8. '   ' → logprob: -18.511049270629883
    9. '|' → logprob: -18.636049270629883
    10. '               ' → logprob: -18.761049270629883

Token 2631: '(a' (ID: 6271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.007353771012276411
    2. 'b' → logprob: -5.007353782653809
    3. '(a' → logprob: -7.382353782653809
    4. '(b' → logprob: -11.257353782653809
    5. '_a' → logprob: -13.007353782653809
    6. ' a' → logprob: -14.382353782653809
    7. '           ' → logprob: -15.632353782653809
    8. '_b' → logprob: -16.257352828979492
    9. ' b' → logprob: -16.882352828979492
    10. 'res' → logprob: -17.007352828979492

Token 2632: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008002049289643764
    2. ')' → logprob: -5.383002281188965
    3. ')
' → logprob: -5.883002281188965
    4. '```' → logprob: -9.133002281188965
    5. 'abs' → logprob: -9.258002281188965
    6. '               ' → logprob: -9.383002281188965
    7. '
' → logprob: -9.883002281188965
    8. '|' → logprob: -10.008002281188965
    9. 'a' → logprob: -10.633002281188965
    10. ',' → logprob: -10.883002281188965

Token 2633: '           ' (ID: 352)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.011208031326532364
    2. '           ' → logprob: -4.5112080574035645
    3. ' abs' → logprob: -8.761207580566406
    4. '(abs' → logprob: -13.261207580566406
    5. '_abs' → logprob: -13.761207580566406
    6. '```' → logprob: -15.136207580566406
    7. '.abs' → logprob: -15.261207580566406
    8. 'Abs' → logprob: -16.261207580566406
    9. '               ' → logprob: -16.511207580566406
    10. '		' → logprob: -17.386207580566406

Token 2634: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' (adapté à ' abs') → logprob: -8.895480277715251e-06
    2. ' abs' → logprob: -11.750008583068848
    3. '           ' → logprob: -13.875008583068848
    4. '(abs' → logprob: -18.625009536743164
    5. '.abs' → logprob: -20.000009536743164
    6. '_abs' → logprob: -20.000009536743164
    7. '```' → logprob: -20.875009536743164
    8. 'Abs' → logprob: -21.625009536743164
    9. '               ' → logprob: -21.875009536743164
    10. 'ab' → logprob: -22.125009536743164

Token 2635: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.0015224798116832972
    2. 'b' → logprob: -6.501522541046143
    3. '(b' → logprob: -11.251522064208984
    4. '_a' → logprob: -12.001522064208984
    5. 'a' → logprob: -14.376522064208984
    6. '           ' → logprob: -15.376522064208984
    7. '       ' → logprob: -16.501522064208984
    8. '   ' → logprob: -17.251522064208984
    9. '               ' → logprob: -17.501522064208984
    10. '(a' → logprob: -17.751522064208984

Token 2636: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5840961933135986
    2. '           ' → logprob: -1.4590961933135986
    3. ' =' → logprob: -1.5840961933135986
    4. ' b' → logprob: -6.8340959548950195
    5. '               ' → logprob: -6.9590959548950195
    6. ' >' → logprob: -7.7090959548950195
    7. 'b' → logprob: -7.7090959548950195
    8. '>' → logprob: -7.9590959548950195
    9. ' if' → logprob: -8.33409595489502
    10. ' <' → logprob: -8.70909595489502

Token 2637: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.06328748911619186
    2. ' abs' → logprob: -2.8132874965667725
    3. 'b' → logprob: -6.813287258148193
    4. ' b' → logprob: -8.438287734985352
    5. '(abs' → logprob: -13.063287734985352
    6. '           ' → logprob: -14.563287734985352
    7. '|' → logprob: -15.188287734985352
    8. '.abs' → logprob: -15.313287734985352
    9. 'ab' → logprob: -15.688287734985352
    10. '```' → logprob: -16.43828773498535

Token 2638: '(b' (ID: 3229)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.10065044462680817
    2. '(b' → logprob: -2.3506505489349365
    3. '_b' → logprob: -8.350650787353516
    4. 'abs' → logprob: -9.100650787353516
    5. ' b' → logprob: -10.350650787353516
    6. '           ' → logprob: -10.475650787353516
    7. 'B' → logprob: -10.850650787353516
    8. '       ' → logprob: -12.850650787353516
    9. '[b' → logprob: -12.850650787353516
    10. '	b' → logprob: -13.225650787353516

Token 2639: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005998594220727682
    2. ')' → logprob: -5.505998611450195
    3. ':' → logprob: -7.755998611450195
    4. '```' → logprob: -7.755998611450195
    5. '               ' → logprob: -8.630998611450195
    6. '[' → logprob: -8.880998611450195
    7. ':
' → logprob: -8.880998611450195
    8. '          ' → logprob: -9.255998611450195
    9. '<|end|>' → logprob: -9.255998611450195
    10. ',' → logprob: -9.505998611450195

Token 2640: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006597769097425044
    2. 'target' → logprob: -7.500659942626953
    3. '{
' → logprob: -10.000659942626953
    4. '```' → logprob: -10.375659942626953
    5. ' target' → logprob: -11.375659942626953
    6. '{' → logprob: -12.000659942626953
    7. '
' → logprob: -12.000659942626953
    8. '               ' → logprob: -13.125659942626953
    9. '(target' → logprob: -13.750659942626953
    10. '          ' → logprob: -13.875659942626953

Token 2641: ' target' (ID: 3783)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.32686561346054077
    2. 'target' (adapté à ' target') → logprob: -1.4518656730651855
    3. 'if' → logprob: -3.2018656730651855
    4. ' if' → logprob: -6.2018656730651855
    5. ' target' → logprob: -6.5768656730651855
    6. '{
' → logprob: -8.201865196228027
    7. '```' → logprob: -8.951865196228027
    8. '
' → logprob: -10.076865196228027
    9. '(target' → logprob: -10.701865196228027
    10. ' ' → logprob: -10.701865196228027

Token 2642: '_abs' (ID: 81310)
  Prédit: '_abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_abs' → logprob: -2.868328920158092e-05
    2. 'abs' → logprob: -11.625028610229492
    3. '           ' → logprob: -12.000028610229492
    4. '=' → logprob: -12.500028610229492
    5. '=_' → logprob: -13.000028610229492
    6. '```' → logprob: -13.250028610229492
    7. ''_' → logprob: -13.375028610229492
    8. '       ' → logprob: -14.000028610229492
    9. 'Abs' → logprob: -14.375028610229492
    10. '_a' → logprob: -14.625028610229492

Token 2643: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0619848296046257
    2. ' =' → logprob: -2.8119847774505615
    3. '           ' → logprob: -11.06198501586914
    4. ':' → logprob: -14.43698501586914
    5. ')' → logprob: -15.43698501586914
    6. '```' → logprob: -15.43698501586914
    7. ',' → logprob: -16.18698501586914
    8. '       ' → logprob: -16.56198501586914
    9. '=_' → logprob: -16.56198501586914
    10. '_' → logprob: -16.68698501586914

Token 2644: ' abs' (ID: 8443)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.5120210647583008
    2. ' min' → logprob: -1.5120210647583008
    3. 'abs' → logprob: -1.7620210647583008
    4. ' abs' → logprob: -4.887021064758301
    5. 'max' → logprob: -7.012021064758301
    6. '(min' → logprob: -10.0120210647583
    7. ' max' → logprob: -10.3870210647583
    8. '(abs' → logprob: -10.5120210647583
    9. '           ' → logprob: -12.7620210647583
    10. '	min' → logprob: -13.6370210647583

Token 2645: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.08757735043764114
    2. 'a' → logprob: -2.7125773429870605
    3. '(a' → logprob: -4.2125773429870605
    4. '_b' → logprob: -5.9625773429870605
    5. 'b' → logprob: -10.087577819824219
    6. '(b' → logprob: -11.212577819824219
    7. '(min' → logprob: -11.337577819824219
    8. '(abs' → logprob: -11.712577819824219
    9. '(' → logprob: -12.212577819824219
    10. 'min' → logprob: -12.337577819824219

Token 2646: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3155643343925476
    2. '           ' → logprob: -1.4405643939971924
    3. '               ' → logprob: -4.440564155578613
    4. '<|end|>' → logprob: -4.690564155578613
    5. ')' → logprob: -5.190564155578613
    6. 'if' → logprob: -6.190564155578613
    7. '       ' → logprob: -6.315564155578613
    8. '```' → logprob: -7.440564155578613
    9. '            ' → logprob: -7.815564155578613
    10. '[' → logprob: -8.440564155578613

Token 2647: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.0002683688362594694
    2. ' abs' → logprob: -8.25026798248291
    3. '(abs' → logprob: -11.87526798248291
    4. '           ' → logprob: -16.750268936157227
    5. 'ab' → logprob: -18.250268936157227
    6. '   ' → logprob: -19.250268936157227
    7. 'a' → logprob: -19.875268936157227
    8. '.abs' → logprob: -20.000268936157227
    9. '_abs' → logprob: -20.250268936157227
    10. '               ' → logprob: -20.250268936157227

Token 2648: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.03068661503493786
    2. 'a' → logprob: -4.280686378479004
    3. '_b' → logprob: -4.280686378479004
    4. '(a' → logprob: -6.030686378479004
    5. 'b' → logprob: -9.030686378479004
    6. '(b' → logprob: -10.780686378479004
    7. '(res' → logprob: -12.655686378479004
    8. 'A' → logprob: -13.405686378479004
    9. 'res' → logprob: -13.405686378479004
    10. '(' → logprob: -13.905686378479004

Token 2649: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.01002379972487688
    2. ' <' → logprob: -4.635023593902588
    3. '<a' → logprob: -8.760024070739746
    4. '<b' → logprob: -10.260024070739746
    5. '<=' → logprob: -10.635024070739746
    6. '<int' → logprob: -11.510024070739746
    7. 'a' → logprob: -11.885024070739746
    8. '<size' → logprob: -12.510024070739746
    9. '<num' → logprob: -12.510024070739746
    10. '<class' → logprob: -12.635024070739746

Token 2650: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -1.676292231422849e-05
    2. ' abs' → logprob: -11.000017166137695
    3. 'ab' → logprob: -18.125017166137695
    4. '(abs' → logprob: -18.875017166137695
    5. 'b' → logprob: -19.000017166137695
    6. 'a' → logprob: -20.000017166137695
    7. '   ' → logprob: -20.250017166137695
    8. '_abs' → logprob: -20.875017166137695
    9. '           ' → logprob: -22.750017166137695
    10. '.abs' → logprob: -23.250017166137695

Token 2651: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.016179239377379417
    2. 'b' → logprob: -4.141179084777832
    3. '_a' → logprob: -9.391179084777832
    4. 'a' → logprob: -10.266179084777832
    5. '(b' → logprob: -10.641179084777832
    6. '(a' → logprob: -14.516179084777832
    7. '(' → logprob: -15.016179084777832
    8. '```' → logprob: -15.391179084777832
    9. '   ' → logprob: -15.641179084777832
    10. 'B' → logprob: -15.766179084777832

Token 2652: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.5802589058876038
    2. 'else' → logprob: -0.8302589058876038
    3. '           ' → logprob: -5.455258846282959
    4. '               ' → logprob: -10.830259323120117
    5. '```' → logprob: -11.455259323120117
    6. '       ' → logprob: -13.330259323120117
    7. '	else' → logprob: -13.580259323120117
    8. '_else' → logprob: -14.205259323120117
    9. ')' → logprob: -15.205259323120117
    10. '            ' → logprob: -15.330259323120117

Token 2653: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.0001584850688232109
    2. ' abs' → logprob: -8.750158309936523
    3. '(abs' → logprob: -18.875158309936523
    4. '           ' → logprob: -20.625158309936523
    5. '.abs' → logprob: -22.250158309936523
    6. '_abs' → logprob: -23.000158309936523
    7. 'Abs' → logprob: -23.125158309936523
    8. 'ab' → logprob: -23.750158309936523
    9. 'absor' → logprob: -24.000158309936523
    10. '```' → logprob: -24.250158309936523

Token 2654: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -3.368984107510187e-05
    2. 'b' → logprob: -10.375033378601074
    3. 'abs' → logprob: -13.375033378601074
    4. '(b' → logprob: -14.375033378601074
    5. 'B' → logprob: -16.62503433227539
    6. '   ' → logprob: -16.87503433227539
    7. '_a' → logprob: -17.25003433227539
    8. '	b' → logprob: -17.25003433227539
    9. 's' → logprob: -17.50003433227539
    10. '_B' → logprob: -17.75003433227539

Token 2655: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0016191228060051799
    2. '
' → logprob: -6.501619338989258
    3. '               ' → logprob: -10.751619338989258
    4. '            
' → logprob: -10.751619338989258
    5. ' if' → logprob: -10.876619338989258
    6. 'return' → logprob: -11.376619338989258
    7. ' 
' → logprob: -11.501619338989258
    8. '```' → logprob: -11.626619338989258
    9. 'if' → logprob: -12.251619338989258
    10. '#' → logprob: -13.001619338989258

Token 2656: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006852246820926666
    2. 'if' → logprob: -5.256852149963379
    3. ' if' → logprob: -7.256852149963379
    4. '               ' → logprob: -8.131852149963379
    5. 'return' → logprob: -8.131852149963379
    6. '```' → logprob: -8.131852149963379
    7. '                   ' → logprob: -11.881852149963379
    8. '(' → logprob: -12.506852149963379
    9. '
' → logprob: -12.631852149963379
    10. '                       ' → logprob: -12.881852149963379

Token 2657: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05901189520955086
    2. ' if' → logprob: -2.934011936187744
    3. 'if' (adapté à ' if') → logprob: -6.684011936187744
    4. '            ' → logprob: -7.059011936187744
    5. '               ' → logprob: -8.059011459350586
    6. ' return' → logprob: -8.184011459350586
    7. '       ' → logprob: -8.184011459350586
    8. '		' → logprob: -8.559011459350586
    9. 'return' → logprob: -8.684011459350586
    10. '```' → logprob: -8.809011459350586

Token 2658: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.023883773013949394
    2. 'abs' → logprob: -4.273883819580078
    3. 'a' → logprob: -5.148883819580078
    4. 'op' → logprob: -5.648883819580078
    5. ' res' → logprob: -9.273883819580078
    6. '(res' → logprob: -9.398883819580078
    7. 'val' → logprob: -10.023883819580078
    8. 'b' → logprob: -10.273883819580078
    9. '0' → logprob: -11.398883819580078
    10. 'not' → logprob: -11.523883819580078

Token 2659: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.28130844235420227
    2. '>=' → logprob: -1.4063084125518799
    3. '>' → logprob: -9.4063081741333
    4. ' >' → logprob: -10.2813081741333
    5. ' <=' → logprob: -11.5313081741333
    6. ' <' → logprob: -11.6563081741333
    7. '<=' → logprob: -11.7813081741333
    8. '           ' → logprob: -12.1563081741333
    9. '=' → logprob: -13.1563081741333
    10. '<' → logprob: -13.1563081741333

Token 2660: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00033593899570405483
    2. ' ' → logprob: -8.000335693359375
    3. '           ' → logprob: -15.125335693359375
    4. '               ' → logprob: -15.750335693359375
    5. '   ' → logprob: -17.500335693359375
    6. '                   ' → logprob: -18.750335693359375
    7. '```' → logprob: -19.375335693359375
    8. ' ' → logprob: -19.500335693359375
    9. '  ' → logprob: -19.625335693359375
    10. '
' → logprob: -19.625335693359375

Token 2661: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '   ' → logprob: -21.375003814697266
    4. '۰' → logprob: -21.875003814697266
    5. '  ' → logprob: -23.000003814697266
    6. '
' → logprob: -23.750003814697266
    7. '```' → logprob: -24.000003814697266
    8. '1' → logprob: -24.250003814697266
    9. '00' → logprob: -24.500003814697266
    10. '０' → logprob: -24.750003814697266

Token 2662: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005591722205281258
    2. ':' → logprob: -5.630591869354248
    3. ':
' → logprob: -6.380591869354248
    4. '           ' → logprob: -9.75559139251709
    5. ',' → logprob: -9.88059139251709
    6. '```' → logprob: -10.13059139251709
    7. '<|end|>' → logprob: -10.75559139251709
    8. ' and' → logprob: -11.00559139251709
    9. ':return' → logprob: -11.00559139251709
    10. '                   ' → logprob: -11.13059139251709

Token 2663: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0007902132347226143
    2. '                   ' → logprob: -8.5007905960083
    3. '           ' → logprob: -8.7507905960083
    4. '```' → logprob: -9.5007905960083
    5. '`' → logprob: -9.6257905960083
    6. ' return' → logprob: -9.7507905960083
    7. '              ' → logprob: -10.1257905960083
    8. 'return' → logprob: -10.3757905960083
    9. '                ' → logprob: -10.7507905960083
    10. '                       ' → logprob: -10.7507905960083

Token 2664: ' approx' (ID: 33956)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.1524905264377594
    2. ' int' → logprob: -2.0274906158447266
    3. 'math' → logprob: -5.027490615844727
    4. ' math' → logprob: -5.777490615844727
    5. '               ' → logprob: -10.277490615844727
    6. '           ' → logprob: -10.777490615844727
    7. '(int' → logprob: -10.902490615844727
    8. 'return' → logprob: -11.527490615844727
    9. '[int' → logprob: -12.027490615844727
    10. '            ' → logprob: -12.152490615844727

Token 2665: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00977108534425497
    2. '=' → logprob: -4.63477087020874
    3. '               ' → logprob: -12.134771347045898
    4. '=int' → logprob: -12.634771347045898
    5. '           ' → logprob: -13.134771347045898
    6. ':' → logprob: -13.634771347045898
    7. '                   ' → logprob: -14.009771347045898
    8. '            ' → logprob: -14.134771347045898
    9. '                ' → logprob: -14.509771347045898
    10. 'int' → logprob: -14.759771347045898

Token 2666: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.07918575406074524
    2. ' int' → logprob: -2.579185724258423
    3. 'math' → logprob: -8.704185485839844
    4. ' math' → logprob: -8.954185485839844
    5. '(int' → logprob: -14.079185485839844
    6. '               ' → logprob: -17.204185485839844
    7. '=int' → logprob: -17.329185485839844
    8. 'Math' → logprob: -17.704185485839844
    9. '[int' → logprob: -17.829185485839844
    10. '           ' → logprob: -17.829185485839844

Token 2667: '(math' (ID: 86464)
  Prédit: '(math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(math' → logprob: -0.100211963057518
    2. 'math' → logprob: -2.3502118587493896
    3. ' math' → logprob: -12.725212097167969
    4. 'Math' → logprob: -13.225212097167969
    5. '.math' → logprob: -14.850212097167969
    6. '(' → logprob: -15.975212097167969
    7. '_math' → logprob: -16.85021209716797
    8. '(Math' → logprob: -18.47521209716797
    9. '(
' → logprob: -18.72521209716797
    10. '```' → logprob: -19.10021209716797

Token 2668: '.floor' (ID: 23934)
  Prédit: '.floor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.floor' → logprob: -0.1604621410369873
    2. 'floor' → logprob: -1.9104621410369873
    3. '_floor' → logprob: -8.910462379455566
    4. ' floor' → logprob: -9.535462379455566
    5. 'Floor' → logprob: -10.785462379455566
    6. '```' → logprob: -13.035462379455566
    7. '[f' → logprob: -13.160462379455566
    8. '[' → logprob: -13.535462379455566
    9. 'f' → logprob: -13.660462379455566
    10. 'import' → logprob: -13.910462379455566

Token 2669: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.006715728435665369
    2. 'res' → logprob: -5.006715774536133
    3. ' res' → logprob: -15.506715774536133
    4. '(' → logprob: -16.381715774536133
    5. '$res' → logprob: -17.006715774536133
    6. '	res' → logprob: -17.631715774536133
    7. ')' → logprob: -18.006715774536133
    8. ',res' → logprob: -18.256715774536133
    9. '=res' → logprob: -19.006715774536133
    10. ' (' → logprob: -19.506715774536133

Token 2670: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.45366355776786804
    2. ')' → logprob: -1.2036635875701904
    3. '))
' → logprob: -3.3286635875701904
    4. ')
' → logprob: -3.5786635875701904
    5. '           ' → logprob: -7.578663349151611
    6. '())' → logprob: -9.20366382598877
    7. '               ' → logprob: -9.32866382598877
    8. '())
' → logprob: -9.82866382598877
    9. '       ' → logprob: -10.32866382598877
    10. '()))' → logprob: -10.82866382598877

Token 2671: '           ' (ID: 352)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0064949775114655495
    2. '           ' → logprob: -5.631494998931885
    3. '```' → logprob: -6.631494998931885
    4. '                
' → logprob: -8.006494522094727
    5. '                ' → logprob: -8.256494522094727
    6. '                   ' → logprob: -8.381494522094727
    7. '<|end|>' → logprob: -8.881494522094727
    8. '              ' → logprob: -9.131494522094727
    9. 'else' → logprob: -9.381494522094727
    10. '                               ' → logprob: -10.006494522094727

Token 2672: ' else' (ID: 1203)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003195654833689332
    2. '              ' → logprob: -7.128195762634277
    3. '           ' → logprob: -7.378195762634277
    4. '                ' → logprob: -7.753195762634277
    5. '```' → logprob: -7.753195762634277
    6. '                   ' → logprob: -8.878195762634277
    7. '(' → logprob: -9.003195762634277
    8. '             ' → logprob: -9.378195762634277
    9. '                
' → logprob: -9.503195762634277
    10. '            ' → logprob: -9.878195762634277

Token 2673: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.012597481720149517
    2. ':
' → logprob: -5.387597560882568
    3. '           ' → logprob: -6.387597560882568
    4. '(' → logprob: -6.387597560882568
    5. ':' → logprob: -6.512597560882568
    6. '                   ' → logprob: -7.137597560882568
    7. '{
' → logprob: -7.637597560882568
    8. '(
' → logprob: -7.762597560882568
    9. '              ' → logprob: -7.887597560882568
    10. '                ' → logprob: -8.38759708404541

Token 2674: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04700463265180588
    2. 'int' → logprob: -3.2970046997070312
    3. ' int' → logprob: -5.797004699707031
    4. '           ' → logprob: -6.422004699707031
    5. 'return' → logprob: -6.547004699707031
    6. '                   ' → logprob: -7.672004699707031
    7. '              ' → logprob: -7.672004699707031
    8. '`' → logprob: -7.797004699707031
    9. '(int' → logprob: -8.047004699707031
    10. ' return' → logprob: -8.422004699707031

Token 2675: ' approx' (ID: 33956)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.02478080242872238
    2. ' int' → logprob: -3.899780750274658
    3. '(int' → logprob: -6.649780750274658
    4. 'math' → logprob: -7.149780750274658
    5. ' math' → logprob: -7.149780750274658
    6. 'return' → logprob: -7.149780750274658
    7. '<int' → logprob: -9.274781227111816
    8. '           ' → logprob: -9.274781227111816
    9. '               ' → logprob: -9.524781227111816
    10. '(' → logprob: -9.899781227111816

Token 2676: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16368113458156586
    2. '=' → logprob: -1.913681149482727
    3. '=int' → logprob: -6.1636810302734375
    4. '           ' → logprob: -7.1636810302734375
    5. '               ' → logprob: -7.7886810302734375
    6. '(int' → logprob: -9.538681030273438
    7. '            ' → logprob: -10.163681030273438
    8. 'int' → logprob: -11.913681030273438
    9. ':' → logprob: -11.913681030273438
    10. '                   ' → logprob: -12.163681030273438

Token 2677: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -2.1888679839321412e-05
    2. ' int' → logprob: -10.750021934509277
    3. '(int' → logprob: -15.000021934509277
    4. 'math' → logprob: -17.37502098083496
    5. '[int' → logprob: -18.00002098083496
    6. '<int' → logprob: -19.12502098083496
    7. '           ' → logprob: -19.50002098083496
    8. ':int' → logprob: -20.50002098083496
    9. '=int' → logprob: -20.62502098083496
    10. '               ' → logprob: -20.87502098083496

Token 2678: '(math' (ID: 86464)
  Prédit: '(math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(math' → logprob: -0.03804183006286621
    2. 'math' → logprob: -3.288041830062866
    3. ' math' → logprob: -15.538042068481445
    4. '.math' → logprob: -15.788042068481445
    5. 'Math' → logprob: -18.538042068481445
    6. '_math' → logprob: -18.788042068481445
    7. '/math' → logprob: -19.913042068481445
    8. '(' → logprob: -20.038042068481445
    9. 'cmath' → logprob: -21.663042068481445
    10. 'import' → logprob: -21.663042068481445

Token 2679: '.ceil' (ID: 60295)
  Prédit: '.ceil'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ceil' → logprob: -9.639096970204264e-05
    2. 'ceil' → logprob: -9.250096321105957
    3. '.floor' → logprob: -16.125097274780273
    4. ' ceil' → logprob: -16.500097274780273
    5. '```' → logprob: -17.500097274780273
    6. '.c' → logprob: -17.750097274780273
    7. '.ce' → logprob: -17.750097274780273
    8. 'import' → logprob: -18.500097274780273
    9. '
' → logprob: -18.875097274780273
    10. '.' → logprob: -19.000097274780273

Token 2680: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.00020413640595506877
    2. 'res' → logprob: -8.500204086303711
    3. '           ' → logprob: -15.625204086303711
    4. ',res' → logprob: -16.00020408630371
    5. ')' → logprob: -16.25020408630371
    6. '$res' → logprob: -16.75020408630371
    7. ' res' → logprob: -16.87520408630371
    8. '	res' → logprob: -17.62520408630371
    9. '(' → logprob: -17.62520408630371
    10. '```' → logprob: -17.87520408630371

Token 2681: '))
' (ID: 2210)
  Prédit: '(res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.06692353636026382
    2. ')' → logprob: -2.8169236183166504
    3. '))' → logprob: -5.94192361831665
    4. 'res' → logprob: -6.19192361831665
    5. ')
' → logprob: -9.191923141479492
    6. '(' → logprob: -9.691923141479492
    7. '))
' → logprob: -10.191923141479492
    8. '$res' → logprob: -11.191923141479492
    9. '           ' → logprob: -11.316923141479492
    10. '       ' → logprob: -12.066923141479492

Token 2682: '           ' (ID: 352)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2560780942440033
    2. '           ' → logprob: -1.5060781240463257
    3. '```' → logprob: -5.631078243255615
    4. '`' → logprob: -9.256077766418457
    5. '            ' → logprob: -9.256077766418457
    6. '                       ' → logprob: -9.506077766418457
    7. '``' → logprob: -9.631077766418457
    8. '              ' → logprob: -10.256077766418457
    9. '          ' → logprob: -10.756077766418457
    10. '                   ' → logprob: -10.756077766418457

Token 2683: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005850838497281075
    2. '               ' → logprob: -8.125585556030273
    3. ' if' → logprob: -8.875585556030273
    4. 'if' → logprob: -9.375585556030273
    5. '                       ' → logprob: -10.625585556030273
    6. '```' → logprob: -10.625585556030273
    7. '                   ' → logprob: -11.625585556030273
    8. 'return' → logprob: -13.125585556030273
    9. '                           ' → logprob: -13.875585556030273
    10. '#' (adapté à ' #') → logprob: -13.875585556030273

Token 2684: ' ensure' (ID: 6757)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.005502441432327032
    2. '           ' → logprob: -5.255502223968506
    3. '#' → logprob: -8.255502700805664
    4. ' if' → logprob: -11.880502700805664
    5. '```' → logprob: -13.880502700805664
    6. '               ' → logprob: -14.755502700805664
    7. '                   ' → logprob: -14.880502700805664
    8. '       ' → logprob: -15.755502700805664
    9. 'return' → logprob: -17.880502700805664
    10. '
' → logprob: -18.130502700805664

Token 2685: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.0016075820894911885
    2. ' abs' → logprob: -6.751607418060303
    3. '(abs' → logprob: -8.001607894897461
    4. '           ' → logprob: -9.751607894897461
    5. 'if' → logprob: -10.126607894897461
    6. 'approx' → logprob: -12.501607894897461
    7. '(' → logprob: -16.12660789489746
    8. '       ' → logprob: -16.75160789489746
    9. ' if' → logprob: -17.12660789489746
    10. '   ' → logprob: -17.12660789489746

Token 2686: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1472419600977446e-06
    2. 'approx' → logprob: -13.750000953674316
    3. '(
' → logprob: -17.750001907348633
    4. '           ' → logprob: -18.500001907348633
    5. '       ' → logprob: -18.750001907348633
    6. '`' → logprob: -18.875001907348633
    7. '```' → logprob: -19.125001907348633
    8. ' (' → logprob: -19.250001907348633
    9. '   ' → logprob: -19.375001907348633
    10. '
' → logprob: -20.750001907348633

Token 2687: 'approx' (ID: 76945)
  Prédit: 'approx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'approx' → logprob: -0.000431861262768507
    2. '(' → logprob: -7.750432014465332
    3. ' approx' → logprob: -13.625432014465332
    4. 'approximately' → logprob: -17.000431060791016
    5. '   ' → logprob: -19.875431060791016
    6. '`' → logprob: -20.000431060791016
    7. 'Approx' → logprob: -20.250431060791016
    8. ')' → logprob: -20.500431060791016
    9. '       ' → logprob: -20.500431060791016
    10. '{' → logprob: -20.750431060791016

Token 2688: ')' (ID: 8)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.1431521326303482
    2. '<=' → logprob: -2.5181522369384766
    3. ')' → logprob: -3.0181522369384766
    4. '           ' → logprob: -6.018152236938477
    5. ')<=' → logprob: -6.643152236938477
    6. '            ' → logprob: -10.143152236938477
    7. '(' → logprob: -10.643152236938477
    8. '               ' → logprob: -10.643152236938477
    9. '```' → logprob: -11.018152236938477
    10. '()' → logprob: -12.143152236938477

Token 2689: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.5802751779556274
    2. ' <=' → logprob: -0.8302751779556274
    3. '           ' → logprob: -5.455275058746338
    4. '            ' → logprob: -10.955275535583496
    5. '```' → logprob: -11.205275535583496
    6. '               ' → logprob: -11.455275535583496
    7. '≤' → logprob: -12.955275535583496
    8. '          ' → logprob: -13.205275535583496
    9. ')<=' → logprob: -13.330275535583496
    10. ' ≤' → logprob: -13.455275535583496

Token 2690: ' target' (ID: 3783)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.0004343645414337516
    2. ' target' → logprob: -7.750434398651123
    3. '           ' → logprob: -12.625433921813965
    4. 'approx' → logprob: -15.500433921813965
    5. '(target' → logprob: -15.625433921813965
    6. '	target' → logprob: -19.00043487548828
    7. '               ' → logprob: -19.00043487548828
    8. '   ' → logprob: -19.12543487548828
    9. 'max' → logprob: -19.62543487548828
    10. '
' → logprob: -19.87543487548828

Token 2691: '_abs' (ID: 81310)
  Prédit: '_abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_abs' → logprob: -1.8074162653647363e-05
    2. '_' → logprob: -11.250018119812012
    3. 'abs' → logprob: -12.375018119812012
    4. 'Abs' → logprob: -14.250018119812012
    5. '           ' → logprob: -16.875017166137695
    6. 'approx' → logprob: -17.000017166137695
    7. '       ' → logprob: -18.000017166137695
    8. '        ' → logprob: -18.250017166137695
    9. '(abs' → logprob: -18.375017166137695
    10. '          ' → logprob: -18.750017166137695

Token 2692: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001713590754661709
    2. '
' → logprob: -9.500171661376953
    3. ' if' → logprob: -9.625171661376953
    4. 'if' → logprob: -11.500171661376953
    5. '```' → logprob: -11.625171661376953
    6. '               ' → logprob: -11.875171661376953
    7. '                   ' → logprob: -14.000171661376953
    8. '       ' → logprob: -14.625171661376953
    9. '{
' → logprob: -14.875171661376953
    10. '                           ' → logprob: -14.875171661376953

Token 2693: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -6.670925358776003e-05
    2. '               ' → logprob: -10.500066757202148
    3. '```' → logprob: -11.000066757202148
    4. ' if' → logprob: -11.625066757202148
    5. '                   ' → logprob: -12.625066757202148
    6. '{
' → logprob: -12.625066757202148
    7. '
' → logprob: -13.125066757202148
    8. 'if' → logprob: -13.250066757202148
    9. '                       ' → logprob: -14.375066757202148
    10. ',' → logprob: -14.625066757202148

Token 2694: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008457247167825699
    2. ' if' → logprob: -5.258457183837891
    3. 'if' (adapté à ' if') → logprob: -5.758457183837891
    4. '```' → logprob: -9.88345718383789
    5. '                   ' → logprob: -12.25845718383789
    6. '               ' → logprob: -12.63345718383789
    7. '
' → logprob: -13.88345718383789
    8. '                       ' → logprob: -14.25845718383789
    9. 'return' → logprob: -15.00845718383789
    10. '#' → logprob: -15.13345718383789

Token 2695: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -6.074907287256792e-05
    2. ' abs' → logprob: -9.75006103515625
    3. '           ' → logprob: -13.00006103515625
    4. '(abs' → logprob: -15.75006103515625
    5. '               ' → logprob: -19.00006103515625
    6. '            ' → logprob: -22.12506103515625
    7. '   ' → logprob: -22.37506103515625
    8. '       ' → logprob: -22.62506103515625
    9. '          ' → logprob: -22.62506103515625
    10. 'approx' → logprob: -22.62506103515625

Token 2696: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.15310683415737e-05
    2. 'approx' → logprob: -10.750021934509277
    3. '(
' → logprob: -18.37502098083496
    4. ' (' → logprob: -18.37502098083496
    5. 'approximately' → logprob: -19.25002098083496
    6. 'Approx' → logprob: -20.37502098083496
    7. ' approx' → logprob: -20.50002098083496
    8. '```' → logprob: -20.87502098083496
    9. '   ' → logprob: -21.00002098083496
    10. '`' → logprob: -21.37502098083496

Token 2697: 'approx' (ID: 76945)
  Prédit: 'approx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'approx' → logprob: -0.16022899746894836
    2. '(' → logprob: -1.910228967666626
    3. ' approx' → logprob: -12.410228729248047
    4. 'approximately' → logprob: -14.410228729248047
    5. 'appro' → logprob: -15.785228729248047
    6. 'Approx' → logprob: -16.535228729248047
    7. 'apro' → logprob: -17.035228729248047
    8. '```' → logprob: -19.410228729248047
    9. ' (' → logprob: -19.535228729248047
    10. '(
' → logprob: -19.910228729248047

Token 2698: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008613191312178969
    2. ')>' → logprob: -7.250861167907715
    3. '>' → logprob: -8.875861167907715
    4. '(' → logprob: -12.250861167907715
    5. ' >' → logprob: -13.000861167907715
    6. '()' → logprob: -13.375861167907715
    7. '           ' → logprob: -14.000861167907715
    8. ' )' → logprob: -14.125861167907715
    9. 'approx' → logprob: -14.125861167907715
    10. '()>' → logprob: -15.750861167907715

Token 2699: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.5759933590888977
    2. ' >' → logprob: -0.8259933590888977
    3. ')' → logprob: -10.700993537902832
    4. '           ' → logprob: -11.450993537902832
    5. '()>' → logprob: -12.325993537902832
    6. ' <=' → logprob: -12.450993537902832
    7. ')>' → logprob: -12.950993537902832
    8. ' ' → logprob: -13.575993537902832
    9. '   ' → logprob: -13.825993537902832
    10. ' >
' → logprob: -13.825993537902832

Token 2700: ' target' (ID: 3783)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.00020354038861114532
    2. ' target' → logprob: -8.500203132629395
    3. '(target' → logprob: -19.50020408630371
    4. '[target' → logprob: -20.50020408630371
    5. '           ' → logprob: -20.62520408630371
    6. '	target' → logprob: -21.12520408630371
    7. '```' → logprob: -21.25020408630371
    8. '   ' → logprob: -21.87520408630371
    9. 't' → logprob: -22.12520408630371
    10. '0' → logprob: -22.62520408630371

Token 2701: '_abs' (ID: 81310)
  Prédit: '_abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_abs' → logprob: -0.03969302400946617
    2. '_' → logprob: -3.4146931171417236
    3. 'target' → logprob: -5.5396928787231445
    4. 'approx' → logprob: -6.6646928787231445
    5. '_target' → logprob: -7.4146928787231445
    6. '(target' → logprob: -10.039692878723145
    7. '_exact' → logprob: -10.039692878723145
    8. 'abs' → logprob: -10.164692878723145
    9. '_ans' → logprob: -11.539692878723145
    10. '```' → logprob: -11.539692878723145

Token 2702: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4105832874774933
    2. ':
' → logprob: -1.160583257675171
    3. ':' → logprob: -3.785583257675171
    4. '):
' → logprob: -7.78558349609375
    5. ':return' → logprob: -8.78558349609375
    6. '           ' → logprob: -10.03558349609375
    7. ' and' → logprob: -10.03558349609375
    8. '```' → logprob: -10.53558349609375
    9. ',' → logprob: -11.53558349609375
    10. '                       ' → logprob: -12.03558349609375

Token 2703: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0002270198310725391
    2. '```' → logprob: -9.250226974487305
    3. '(' → logprob: -10.125226974487305
    4. '                   ' → logprob: -11.000226974487305
    5. '                       ' → logprob: -11.000226974487305
    6. '              ' → logprob: -11.500226974487305
    7. 'approx' → logprob: -11.625226974487305
    8. '(
' → logprob: -11.875226974487305
    9. '{
' → logprob: -12.000226974487305
    10. '``' → logprob: -12.250226974487305

Token 2704: ' approx' (ID: 33956)
  Prédit: 'approx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'approx' (adapté à ' approx') → logprob: -0.2401694506406784
    2. '               ' → logprob: -1.9901694059371948
    3. ' approx' → logprob: -2.6151695251464844
    4. '           ' → logprob: -6.115169525146484
    5. '                   ' → logprob: -8.115169525146484
    6. '(' → logprob: -8.240169525146484
    7. ' approximate' → logprob: -8.865169525146484
    8. '                ' → logprob: -9.365169525146484
    9. '                       ' → logprob: -9.365169525146484
    10. 'Approx' → logprob: -9.365169525146484

Token 2705: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2520151734352112
    2. '=' → logprob: -1.5020151138305664
    3. '               ' → logprob: -9.627015113830566
    4. '           ' → logprob: -11.877015113830566
    5. '                   ' → logprob: -12.002015113830566
    6. '                ' → logprob: -12.502015113830566
    7. '            ' → logprob: -14.252015113830566
    8. '```' → logprob: -14.502015113830566
    9. '                    ' → logprob: -14.502015113830566
    10. '   ' → logprob: -14.877015113830566

Token 2706: ' target' (ID: 3783)
  Prédit: '(target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(target' → logprob: -0.12603090703487396
    2. ' (' → logprob: -2.751030921936035
    3. 'int' → logprob: -3.376030921936035
    4. '(int' → logprob: -4.626030921936035
    5. 'target' → logprob: -4.626030921936035
    6. ' int' → logprob: -7.876030921936035
    7. '(' → logprob: -8.126030921936035
    8. ' target' → logprob: -9.501030921936035
    9. '[target' → logprob: -11.001030921936035
    10. 'approx' → logprob: -12.376030921936035

Token 2707: '_abs' (ID: 81310)
  Prédit: '_abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_abs' → logprob: -5.9153885558771435e-06
    2. 'abs' → logprob: -12.500005722045898
    3. 'Abs' → logprob: -13.375005722045898
    4. '(abs' → logprob: -14.625005722045898
    5. '_ab' → logprob: -17.2500057220459
    6. '.abs' → logprob: -17.3750057220459
    7. '```' → logprob: -17.6250057220459
    8. 'token' → logprob: -18.5000057220459
    9. '_alt' → logprob: -18.6250057220459
    10. '_ext' → logprob: -18.6250057220459

Token 2708: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0073796892538666725
    2. 'if' → logprob: -5.007379531860352
    3. '               ' → logprob: -7.382379531860352
    4. '           ' → logprob: -10.132379531860352
    5. '(if' → logprob: -13.882379531860352
    6. '                   ' → logprob: -15.132379531860352
    7. '```' → logprob: -15.757379531860352
    8. '              ' → logprob: -16.00737953186035
    9. '            ' → logprob: -16.13237953186035
    10. '             ' → logprob: -16.25737953186035

Token 2709: ' approx' (ID: 33956)
  Prédit: 'approx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'approx' → logprob: -0.00016790216614026576
    2. ' approx' → logprob: -8.875167846679688
    3. 'op' → logprob: -10.625167846679688
    4. 'apro' → logprob: -13.500167846679688
    5. 'appro' → logprob: -14.500167846679688
    6. '(' → logprob: -14.875167846679688
    7. 'approximately' → logprob: -14.875167846679688
    8. 'app' → logprob: -15.125167846679688
    9. 'res' → logprob: -15.125167846679688
    10. 'ap' → logprob: -15.500167846679688

Token 2710: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.06995243579149246
    2. '>=' → logprob: -2.6949524879455566
    3. ' <' → logprob: -11.944952011108398
    4. '[' → logprob: -13.194952011108398
    5. '```' → logprob: -13.194952011108398
    6. ' ' → logprob: -13.319952011108398
    7. '           ' → logprob: -14.569952011108398
    8. ' <=' → logprob: -14.569952011108398
    9. ')>=' → logprob: -14.694952011108398
    10. '<' → logprob: -14.819952011108398

Token 2711: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010902655776590109
    2. ' ' → logprob: -9.12510871887207
    3. '   ' → logprob: -18.00010871887207
    4. '۰' → logprob: -18.62510871887207
    5. '=' → logprob: -19.62510871887207
    6. '           ' → logprob: -20.00010871887207
    7. '
' → logprob: -20.12510871887207
    8. '```' → logprob: -20.37510871887207
    9. '1' → logprob: -20.75010871887207
    10. '00' → logprob: -20.75010871887207

Token 2712: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.5597102396423e-05
    2. ' ' → logprob: -10.250035285949707
    3. '   ' → logprob: -16.625036239624023
    4. '           ' → logprob: -17.000036239624023
    5. '               ' → logprob: -17.750036239624023
    6. '                   ' → logprob: -18.000036239624023
    7. '
' → logprob: -18.000036239624023
    8. '۰' → logprob: -18.000036239624023
    9. 'else' → logprob: -18.625036239624023
    10. '1' → logprob: -18.875036239624023

Token 2713: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.33059629797935486
    2. 'else' → logprob: -1.3305963277816772
    3. '               ' → logprob: -4.080596446990967
    4. '           ' → logprob: -8.205595970153809
    5. '                   ' → logprob: -11.705595970153809
    6. '                ' → logprob: -13.330595970153809
    7. '```' → logprob: -13.955595970153809
    8. '       ' → logprob: -14.330595970153809
    9. '              ' → logprob: -14.330595970153809
    10. '             ' → logprob: -14.455595970153809

Token 2714: ' -' (ID: 533)
  Prédit: '-target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-target' → logprob: -0.08510205149650574
    2. ' -' → logprob: -2.585102081298828
    3. '-' → logprob: -5.085102081298828
    4. '-task' → logprob: -13.710102081298828
    5. '-token' → logprob: -14.835102081298828
    6. '-int' → logprob: -14.835102081298828
    7. '-app' → logprob: -15.210102081298828
    8. '-temp' → logprob: -15.335102081298828
    9. '-user' → logprob: -15.585102081298828
    10. '-t' → logprob: -15.710102081298828

Token 2715: 'target' (ID: 10857)
  Prédit: 'target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -3.650518920039758e-06
    2. 'approx' → logprob: -12.750003814697266
    3. '1' → logprob: -15.125003814697266
    4. ' target' → logprob: -15.250003814697266
    5. 'abs' → logprob: -16.375003814697266
    6. '(target' → logprob: -19.250003814697266
    7. '_target' → logprob: -19.625003814697266
    8. '	target' → logprob: -20.000003814697266
    9. '```' → logprob: -20.000003814697266
    10. '           ' → logprob: -20.500003814697266

Token 2716: '_abs' (ID: 81310)
  Prédit: '_abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_abs' → logprob: -2.165027217415627e-05
    2. 'abs' → logprob: -10.875021934509277
    3. 'target' → logprob: -13.375021934509277
    4. 'Abs' → logprob: -15.125021934509277
    5. '_ext' → logprob: -15.625021934509277
    6. '```' → logprob: -15.875021934509277
    7. '_target' → logprob: -16.00002098083496
    8. 'b' → logprob: -16.25002098083496
    9. 'a' → logprob: -16.37502098083496
    10. '_opt' → logprob: -17.12502098083496

Token 2717: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006021226872690022
    2. '       ' → logprob: -8.750601768493652
    3. '               ' → logprob: -9.000601768493652
    4. 'return' → logprob: -9.000601768493652
    5. '
' → logprob: -9.375601768493652
    6. ' return' → logprob: -10.250601768493652
    7. ')' → logprob: -10.750601768493652
    8. '<|end|>' → logprob: -11.250601768493652
    9. ')
' → logprob: -11.875601768493652
    10. '[' → logprob: -12.250601768493652

Token 2718: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011811756528913975
    2. '       ' → logprob: -4.51181173324585
    3. '               ' → logprob: -8.011812210083008
    4. 'return' → logprob: -8.511812210083008
    5. '
' → logprob: -9.136812210083008
    6. '		' → logprob: -9.761812210083008
    7. '                   ' → logprob: -11.136812210083008
    8. ' return' → logprob: -11.386812210083008
    9. '	' → logprob: -11.511812210083008
    10. '	return' → logprob: -11.761812210083008

Token 2719: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08200903236865997
    2. 'return' (adapté à ' return') → logprob: -2.5820090770721436
    3. '               ' → logprob: -6.2070088386535645
    4. '       ' → logprob: -7.3320088386535645
    5. ' return' → logprob: -7.8320088386535645
    6. '                   ' → logprob: -11.207009315490723
    7. '	return' → logprob: -11.832009315490723
    8. '		' → logprob: -11.957009315490723
    9. '                       ' → logprob: -12.207009315490723
    10. '          ' → logprob: -12.207009315490723

Token 2720: ' approx' (ID: 33956)
  Prédit: 'approx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'approx' → logprob: -0.0007137430948205292
    2. ' approx' → logprob: -7.25071382522583
    3. 'apro' → logprob: -13.125713348388672
    4. 'appro' → logprob: -13.500713348388672
    5. 'approximately' → logprob: -15.250713348388672
    6. 'app' → logprob: -16.500713348388672
    7. 'Approx' → logprob: -16.625713348388672
    8. 'int' → logprob: -17.375713348388672
    9. '
' → logprob: -17.750713348388672
    10. ' approximate' → logprob: -18.125713348388672

Token 2721: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2722: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2723: ' else' (ID: 1203)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2724: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7333768010139465
    2. ':' → logprob: -1.3583767414093018
    3. ':
' → logprob: -1.3583767414093018
    4. '       ' → logprob: -7.108376979827881
    5. ' :
' → logprob: -7.233376979827881
    6. ' :' → logprob: -7.483376979827881
    7. ':return' → logprob: -7.733376979827881
    8. '               ' → logprob: -7.733376979827881
    9. 'return' → logprob: -7.858376979827881
    10. 'raise' → logprob: -8.233376502990723

Token 2725: '           ' (ID: 352)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.20330816507339478
    2. '           ' → logprob: -1.70330810546875
    3. ' None' → logprob: -6.70330810546875
    4. 'return' → logprob: -7.57830810546875
    5. '(None' → logprob: -9.45330810546875
    6. '       ' → logprob: -10.07830810546875
    7. 'raise' → logprob: -11.45330810546875
    8. ' return' → logprob: -12.20330810546875
    9. '   ' → logprob: -12.32830810546875
    10. '               ' → logprob: -12.57830810546875

Token 2726: ' raise' (ID: 9338)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.01424836553633213
    2. 'return' → logprob: -4.264248371124268
    3. '           ' → logprob: -9.76424789428711
    4. ' None' → logprob: -11.26424789428711
    5. 'raise' (adapté à ' raise') → logprob: -11.26424789428711
    6. '               ' → logprob: -13.38924789428711
    7. ' return' → logprob: -16.38924789428711
    8. '       ' → logprob: -16.88924789428711
    9. '(None' → logprob: -17.38924789428711
    10. '
' → logprob: -17.51424789428711

Token 2727: ' Value' (ID: 9963)
  Prédit: 'Value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Value' → logprob: -7.896309739408025e-07
    2. 'Runtime' → logprob: -14.500000953674316
    3. 'Not' → logprob: -15.250000953674316
    4. ' Value' → logprob: -17.0
    5. 'Assertion' → logprob: -17.25
    6. 'value' → logprob: -20.25
    7. 'Syntax' → logprob: -21.125
    8. '_value' → logprob: -21.25
    9. '_Value' → logprob: -22.125
    10. '
' → logprob: -22.125

Token 2728: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -5.319370302458992e-06
    2. '_Error' → logprob: -12.500005722045898
    3. 'Value' → logprob: -14.625005722045898
    4. 'rror' → logprob: -15.000005722045898
    5. 'SError' → logprob: -15.375005722045898
    6. '_error' → logprob: -15.500005722045898
    7. '_' → logprob: -15.625005722045898
    8. '_ERROR' → logprob: -17.6250057220459
    9. '	Error' → logprob: -18.0000057220459
    10. 'Errors' → logprob: -18.1250057220459

Token 2729: '(f' (ID: 1526)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5132973790168762
    2. '("' → logprob: -1.3882973194122314
    3. '("("' → logprob: -2.1382973194122314
    4. '('' → logprob: -3.8882973194122314
    5. '(f' → logprob: -5.0132975578308105
    6. '(
' → logprob: -5.3882975578308105
    7. '"' → logprob: -6.5132975578308105
    8. '("'' → logprob: -8.388297080993652
    9. '           ' → logprob: -9.138297080993652
    10. '(":' → logprob: -9.138297080993652

Token 2730: '"' (ID: 1)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.1553155928850174
    2. '"' → logprob: -2.155315637588501
    3. ' f' → logprob: -4.030315399169922
    4. '(f' → logprob: -4.655315399169922
    5. '           ' → logprob: -8.155315399169922
    6. '       ' → logprob: -9.030315399169922
    7. 'Unexpected' → logprob: -9.155315399169922
    8. 'Unknown' → logprob: -9.905315399169922
    9. 'Invalid' → logprob: -10.530315399169922
    10. '   ' → logprob: -10.655315399169922

Token 2731: 'Unknown' (ID: 24560)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.5761775970458984
    2. '"' → logprob: -0.8261775970458984
    3. ''' → logprob: -9.201177597045898
    4. 'Invalid' → logprob: -10.201177597045898
    5. 'Unknown' → logprob: -10.326177597045898
    6. 'Unsupported' → logprob: -10.701177597045898
    7. ''f' → logprob: -10.951177597045898
    8. '(f' → logprob: -12.076177597045898
    9. 'Unexpected' → logprob: -12.201177597045898
    10. ' f' → logprob: -12.326177597045898

Token 2732: ' operator' (ID: 11019)
  Prédit: ' op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' op' → logprob: -0.12100151926279068
    2. ''op' → logprob: -2.4960014820098877
    3. ''' → logprob: -4.496001720428467
    4. 'op' → logprob: -4.621001720428467
    5. '(op' → logprob: -5.246001720428467
    6. '_op' → logprob: -6.246001720428467
    7. ' ' → logprob: -7.121001720428467
    8. ' operator' → logprob: -7.496001720428467
    9. ')' → logprob: -7.996001720428467
    10. 'operator' → logprob: -8.621001243591309

Token 2733: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.019125793129205704
    2. '(op' → logprob: -4.144125938415527
    3. ''{' → logprob: -6.769125938415527
    4. 'op' → logprob: -7.269125938415527
    5. ':' → logprob: -7.644125938415527
    6. '(f' → logprob: -8.769125938415527
    7. '(' → logprob: -9.144125938415527
    8. '{o' → logprob: -9.269125938415527
    9. '"{' → logprob: -9.394125938415527
    10. ''op' → logprob: -9.394125938415527

Token 2734: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.0015035520773380995
    2. ' op' → logprob: -6.5015034675598145
    3. ''op' → logprob: -14.126503944396973
    4. ''' → logprob: -15.501503944396973
    5. '(op' → logprob: -15.501503944396973
    6. '	op' → logprob: -17.001502990722656
    7. '   ' → logprob: -18.251502990722656
    8. ' ' → logprob: -18.501502990722656
    9. '_op' → logprob: -19.251502990722656
    10. 'o' → logprob: -19.376502990722656

Token 2735: '}")

' (ID: 119200)
  Prédit: '}")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}")' → logprob: -0.004471896681934595
    2. '}")
' → logprob: -6.379471778869629
    3. '")' → logprob: -6.629471778869629
    4. '}' → logprob: -6.754471778869629
    5. ')")' → logprob: -9.379471778869629
    6. '}"' → logprob: -9.629471778869629
    7. ')' → logprob: -10.754471778869629
    8. '       ' → logprob: -10.879471778869629
    9. '}')' → logprob: -10.879471778869629
    10. '}")
' → logprob: -11.004471778869629

Token 2736: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2737: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.06611956655979156
    2. ' parse' → logprob: -2.81611967086792
    3. ' solve' → logprob: -5.81611967086792
    4. ' evaluate' → logprob: -7.31611967086792
    5. ' calculate' → logprob: -8.691119194030762
    6. ' run' → logprob: -9.066119194030762
    7. ' compute' → logprob: -9.566119194030762
    8. ' solution' → logprob: -9.941119194030762
    9. ' process' → logprob: -10.191119194030762
    10. 'main' → logprob: -11.191119194030762

Token 2738: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00020818933262489736
    2. '():
' → logprob: -8.625207901000977
    3. '()' → logprob: -10.500207901000977
    4. ' ():' → logprob: -14.375207901000977
    5. '():
' → logprob: -15.250207901000977
    6. '()>' → logprob: -16.000207901000977
    7. '():

' → logprob: -16.750207901000977
    8. '()">' → logprob: -16.875207901000977
    9. '().' → logprob: -17.500207901000977
    10. '()->' → logprob: -17.875207901000977

Token 2739: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.057312339544296265
    2. 'import' → logprob: -2.932312250137329
    3. ' import' → logprob: -6.682312488555908
    4. '```' → logprob: -7.432312488555908
    5. 's' → logprob: -8.05731201171875
    6. 'input' → logprob: -8.93231201171875
    7. ' s' → logprob: -9.68231201171875
    8. 'line' → logprob: -11.18231201171875
    9. ' line' → logprob: -11.80731201171875
    10. 'def' → logprob: -11.80731201171875

Token 2740: ' lines' (ID: 8698)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.15321601927280426
    2. '   ' → logprob: -2.7782161235809326
    3. 's' → logprob: -2.9032161235809326
    4. ' import' → logprob: -4.0282158851623535
    5. ' s' → logprob: -5.5282158851623535
    6. 'line' → logprob: -5.9032158851623535
    7. 'input' → logprob: -8.903216361999512
    8. '```' → logprob: -9.028216361999512
    9. ' line' → logprob: -9.403216361999512
    10. 'expr' → logprob: -10.028216361999512

Token 2741: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4816206097602844
    2. ' =' → logprob: -1.3566205501556396
    3. '()' → logprob: -2.2316205501556396
    4. '   ' → logprob: -4.606620788574219
    5. '=[]' → logprob: -5.356620788574219
    6. '[]' → logprob: -7.356620788574219
    7. '=[]
' → logprob: -7.856620788574219
    8. ':' → logprob: -8.106620788574219
    9. '```' → logprob: -8.481620788574219
    10. 'import' → logprob: -8.731620788574219

Token 2742: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.20606622099876404
    2. ' sys' → logprob: -1.7060662508010864
    3. '[' → logprob: -5.831066131591797
    4. ' [' → logprob: -6.456066131591797
    5. '(sys' → logprob: -9.956066131591797
    6. '[]
' → logprob: -10.581066131591797
    7. '[]' → logprob: -10.706066131591797
    8. 'list' → logprob: -11.331066131591797
    9. '[list' → logprob: -11.831066131591797
    10. '[int' → logprob: -12.081066131591797

Token 2743: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0006975423893891275
    2. '.' → logprob: -7.750697612762451
    3. 'stdin' → logprob: -8.500697135925293
    4. '.stdout' → logprob: -10.625697135925293
    5. '.argv' → logprob: -11.125697135925293
    6. '.readline' → logprob: -11.500697135925293
    7. '.std' → logprob: -12.375697135925293
    8. '(stdin' → logprob: -12.375697135925293
    9. '```' → logprob: -13.500697135925293
    10. '().' → logprob: -13.750697135925293

Token 2744: '.read' (ID: 7211)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0018749780720099807
    2. '().' → logprob: -6.876874923706055
    3. '.' → logprob: -7.626874923706055
    4. '.readlines' → logprob: -8.501874923706055
    5. 'read' → logprob: -9.626874923706055
    6. '
' → logprob: -10.876874923706055
    7. '```' → logprob: -10.876874923706055
    8. '   ' → logprob: -11.126874923706055
    9. ' readline' → logprob: -11.626874923706055
    10. '()
' → logprob: -11.751874923706055

Token 2745: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.004092174116522074
    2. '()' → logprob: -5.504092216491699
    3. '()
' → logprob: -12.3790922164917
    4. '_lines' → logprob: -12.3790922164917
    5. 'lines' → logprob: -12.7540922164917
    6. 'split' → logprob: -14.5040922164917
    7. '.split' → logprob: -14.6290922164917
    8. '()\' → logprob: -15.0040922164917
    9. '(' → logprob: -15.7540922164917
    10. ' ().' → logprob: -15.8790922164917

Token 2746: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.06203142926096916
    2. 'split' → logprob: -2.8120315074920654
    3. 'read' → logprob: -9.812031745910645
    4. 'decode' → logprob: -12.312031745910645
    5. 'rstrip' → logprob: -12.312031745910645
    6. 'lines' → logprob: -18.562030792236328
    7. ' strip' → logprob: -18.562030792236328
    8. ' split' → logprob: -19.937030792236328
    9. '_strip' → logprob: -20.062030792236328
    10. '(strip' → logprob: -20.062030792236328

Token 2747: '('\' (ID: 24345)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0028429143130779266
    2. '()' → logprob: -5.877842903137207
    3. '()
' → logprob: -10.877842903137207
    4. '('\' → logprob: -12.252842903137207
    5. '()\' → logprob: -12.502842903137207
    6. 'lines' → logprob: -12.627842903137207
    7. '_lines' → logprob: -12.877842903137207
    8. 'split' → logprob: -13.127842903137207
    9. '.split' → logprob: -13.502842903137207
    10. '_split' → logprob: -14.502842903137207

Token 2748: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.016308369114995003
    2. '\n' → logprob: -4.141308307647705
    3. ''\' → logprob: -9.016308784484863
    4. ')' → logprob: -9.891308784484863
    5. ' \' → logprob: -10.516308784484863
    6. ')\' → logprob: -11.516308784484863
    7. '('\' → logprob: -11.516308784484863
    8. '```' → logprob: -11.766308784484863
    9. 'r' → logprob: -11.891308784484863
    10. '\' → logprob: -12.266308784484863

Token 2749: '').' (ID: 3426)
  Prédit: '()).'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()).' → logprob: -0.9417805075645447
    2. ').' → logprob: -1.1917805671691895
    3. '').' → logprob: -2.1917805671691895
    4. '()' → logprob: -2.3167805671691895
    5. '().' → logprob: -3.4417805671691895
    6. '('\' → logprob: -3.6917805671691895
    7. '()\' → logprob: -3.9417805671691895
    8. '()
' → logprob: -5.5667805671691895
    9. '())
' → logprob: -6.0667805671691895
    10. ''\' → logprob: -6.1917805671691895

Token 2750: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -7.896309739408025e-07
    2. 'strip' → logprob: -14.250000953674316
    3. ' split' → logprob: -16.0
    4. 'rstrip' → logprob: -18.75
    5. '(split' → logprob: -19.25
    6. 'lines' → logprob: -21.125
    7. 'spl' → logprob: -21.375
    8. '.split' → logprob: -23.5
    9. '_split' → logprob: -24.0
    10. 'replace' → logprob: -24.375

Token 2751: '('\' (ID: 24345)
  Prédit: '('\'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('\' → logprob: -0.6694118976593018
    2. 'lines' → logprob: -0.9194118976593018
    3. '()' → logprob: -2.4194118976593018
    4. '()
' → logprob: -8.669411659240723
    5. '('' → logprob: -10.294411659240723
    6. '()\' → logprob: -10.419411659240723
    7. '("\' → logprob: -11.294411659240723
    8. '(' → logprob: -11.669411659240723
    9. '()[' → logprob: -12.794411659240723
    10. ''\' → logprob: -13.544411659240723

Token 2752: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.004097158554941416
    2. '\n' → logprob: -5.504096984863281
    3. 'lines' → logprob: -12.004096984863281
    4. '')' → logprob: -12.629096984863281
    5. '```' → logprob: -12.879096984863281
    6. ''\' → logprob: -13.254096984863281
    7. '('\' → logprob: -13.629096984863281
    8. '\' → logprob: -13.754096984863281
    9. '
' → logprob: -14.379096984863281
    10. '['' → logprob: -14.879096984863281

Token 2753: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.6144709587097168
    2. '')
' → logprob: -0.8644709587097168
    3. '   ' → logprob: -3.989470958709717
    4. ')' → logprob: -4.489470958709717
    5. ')
' → logprob: -4.864470958709717
    6. ')')
' → logprob: -8.239471435546875
    7. '')
' → logprob: -9.989471435546875
    8. '")' → logprob: -11.739471435546875
    9. '")
' → logprob: -11.989471435546875
    10. ')'
' → logprob: -12.364471435546875

Token 2754: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5782985687255859
    2. '   ' → logprob: -0.8282985687255859
    3. ' for' → logprob: -6.078298568725586
    4. 'results' → logprob: -10.078298568725586
    5. 'expr' → logprob: -11.078298568725586
    6. '```' → logprob: -12.578298568725586
    7. 'result' → logprob: -14.328298568725586
    8. 'express' → logprob: -14.453298568725586
    9. 'if' → logprob: -14.953298568725586
    10. 'answers' → logprob: -15.078298568725586

Token 2755: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0023246256168931723
    2. 'results' → logprob: -6.25232458114624
    3. '   ' → logprob: -8.627325057983398
    4. 'expr' → logprob: -9.502325057983398
    5. ' for' → logprob: -9.877325057983398
    6. 'parser' → logprob: -10.127325057983398
    7. 'express' → logprob: -10.377325057983398
    8. 'n' → logprob: -12.127325057983398
    9. 'expression' → logprob: -12.502325057983398
    10. 'answers' → logprob: -12.627325057983398

Token 2756: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0004329341172706336
    2. ' line' → logprob: -7.750432968139648
    3. 'expr' → logprob: -13.000432968139648
    4. '(line' → logprob: -18.50043296813965
    5. '   ' → logprob: -19.25043296813965
    6. '	line' → logprob: -19.62543296813965
    7. '_line' → logprob: -20.12543296813965
    8. 'lin' → logprob: -20.25043296813965
    9. 'expression' → logprob: -20.25043296813965
    10. ' expr' → logprob: -20.62543296813965

Token 2757: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01751607470214367
    2. '       ' → logprob: -4.517516136169434
    3. 'in' → logprob: -5.642516136169434
    4. ':
' → logprob: -6.642516136169434
    5. ':' → logprob: -6.892516136169434
    6. '   ' → logprob: -7.642516136169434
    7. ',' → logprob: -10.392516136169434
    8. '_in' → logprob: -11.392516136169434
    9. '():
' → logprob: -11.642516136169434
    10. ' =' → logprob: -11.892516136169434

Token 2758: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.0017102824058383703
    2. ' lines' → logprob: -6.376710414886475
    3. 'line' → logprob: -11.876709938049316
    4. '(lines' → logprob: -14.001709938049316
    5. '	lines' → logprob: -15.751709938049316
    6. '   ' → logprob: -16.751710891723633
    7. 'sys' → logprob: -16.876710891723633
    8. 'range' → logprob: -17.626710891723633
    9. 'lin' → logprob: -17.876710891723633
    10. ' ' → logprob: -18.126710891723633

Token 2759: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3026319742202759
    2. ':' → logprob: -1.5526319742202759
    3. ':
' → logprob: -3.0526318550109863
    4. ',' → logprob: -6.552631855010986
    5. '   ' → logprob: -8.552632331848145
    6. '<|end|>' → logprob: -9.052632331848145
    7. ' if' → logprob: -9.302632331848145
    8. '):
' → logprob: -9.427632331848145
    9. '<|end|>' → logprob: -9.927632331848145
    10. '():
' → logprob: -10.302632331848145

Token 2760: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12695656716823578
    2. '       ' → logprob: -2.1269564628601074
    3. '```' → logprob: -10.626956939697266
    4. ' if' → logprob: -13.501956939697266
    5. '   ' → logprob: -14.751956939697266
    6. '    ' → logprob: -15.001956939697266
    7. '           ' → logprob: -15.001956939697266
    8. 'if' → logprob: -15.126956939697266
    9. '`' → logprob: -15.501956939697266
    10. ',' → logprob: -15.626956939697266

Token 2761: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -1.3144458532333374
    2. 'parser' → logprob: -1.3144458532333374
    3. 'expr' → logprob: -1.5644458532333374
    4. '   ' → logprob: -1.5644458532333374
    5. 'try' → logprob: -3.689445972442627
    6. 'p' → logprob: -4.814445972442627
    7. 'line' → logprob: -4.939445972442627
    8. ' if' → logprob: -6.189445972442627
    9. '       ' → logprob: -7.439445972442627
    10. 'expression' → logprob: -7.564445972442627

Token 2762: ' line' (ID: 2543)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.39011600613594055
    2. 'not' → logprob: -1.1401159763336182
    3. 'line' → logprob: -6.015116214752197
    4. ' line' → logprob: -7.140116214752197
    5. '   ' → logprob: -12.390115737915039
    6. '#line' → logprob: -14.765115737915039
    7. 'len' → logprob: -14.765115737915039
    8. ' ' → logprob: -15.515115737915039
    9. '
' → logprob: -16.51511573791504
    10. ' len' → logprob: -16.64011573791504

Token 2763: '.strip' (ID: 40613)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.9420078992843628
    2. '.strip' → logprob: -1.1920078992843628
    3. ' ==' → logprob: -1.1920078992843628
    4. '.' → logprob: -6.317008018493652
    5. ':' → logprob: -8.067008018493652
    6. '           ' → logprob: -8.442008018493652
    7. '       ' → logprob: -8.567008018493652
    8. '.startswith' → logprob: -9.192008018493652
    9. '```' → logprob: -9.567008018493652
    10. ':
' → logprob: -9.817008018493652

Token 2764: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6964820027351379
    2. '()==' → logprob: -0.6964820027351379
    3. '():' → logprob: -6.321482181549072
    4. '():
' → logprob: -7.071482181549072
    5. '==' → logprob: -7.321482181549072
    6. ' ==' → logprob: -10.946481704711914
    7. '()=="' → logprob: -12.696481704711914
    8. '()!=' → logprob: -14.946481704711914
    9. '```' → logprob: -16.071481704711914
    10. '()='' → logprob: -16.446481704711914

Token 2765: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.003391117788851261
    2. ' ==' → logprob: -5.753391265869141
    3. '()==' → logprob: -8.75339126586914
    4. ':' → logprob: -11.00339126586914
    5. '===' → logprob: -11.50339126586914
    6. ')==' → logprob: -11.87839126586914
    7. '==
' → logprob: -11.87839126586914
    8. '```' → logprob: -12.00339126586914
    9. ']==' → logprob: -12.37839126586914
    10. '       ' → logprob: -13.75339126586914

Token 2766: ' '#' (ID: 11284)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -0.6830676198005676
    2. ''' → logprob: -1.6830675601959229
    3. '"":' → logprob: -1.9330675601959229
    4. '"' → logprob: -1.9330675601959229
    5. '""' → logprob: -3.933067560195923
    6. ''ex' → logprob: -9.308067321777344
    7. '":' → logprob: -10.933067321777344
    8. ''end' → logprob: -12.183067321777344
    9. ' "":
' → logprob: -12.183067321777344
    10. ' '':
' → logprob: -12.683067321777344

Token 2767: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.3673313856124878
    2. ''):
' → logprob: -2.2423315048217773
    3. '':
' → logprob: -2.3673315048217773
    4. ''):' → logprob: -3.2423315048217773
    5. '#' → logprob: -3.7423315048217773
    6. ':' → logprob: -3.8673315048217773
    7. 'continue' → logprob: -5.242331504821777
    8. '')' → logprob: -5.867331504821777
    9. 'break' → logprob: -5.992331504821777
    10. ' break' → logprob: -6.367331504821777

Token 2768: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.4153549020411447e-05
    2. '       ' → logprob: -11.00002384185791
    3. 'continue' → logprob: -12.50002384185791
    4. '```' → logprob: -13.62502384185791
    5. '               ' → logprob: -13.87502384185791
    6. '	       ' → logprob: -14.25002384185791
    7. ' continue' → logprob: -15.12502384185791
    8. '		' → logprob: -15.50002384185791
    9. '          ' → logprob: -16.500024795532227
    10. 'break' → logprob: -17.250024795532227

Token 2769: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.1696656197309494
    2. '           ' → logprob: -1.9196655750274658
    3. '       ' → logprob: -5.044665813446045
    4. 'return' → logprob: -6.044665813446045
    5. ' break' → logprob: -7.669665813446045
    6. '               ' → logprob: -9.544665336608887
    7. '	break' → logprob: -10.419665336608887
    8. '_break' → logprob: -12.044665336608887
    9. '	       ' → logprob: -12.919665336608887
    10. '		' → logprob: -13.294665336608887

Token 2770: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00013202552509028465
    2. '        
' → logprob: -9.500131607055664
    3. '<|end|>' → logprob: -10.750131607055664
    4. '   ' → logprob: -10.875131607055664
    5. '
' → logprob: -11.500131607055664
    6. ',' → logprob: -13.125131607055664
    7. '           ' → logprob: -13.625131607055664
    8. '    
' → logprob: -13.875131607055664
    9. '```' → logprob: -15.000131607055664
    10. '<|end|>' → logprob: -15.250131607055664

Token 2771: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006034854333847761
    2. '   ' → logprob: -5.131034851074219
    3. '```' → logprob: -10.256034851074219
    4. 'try' → logprob: -11.256034851074219
    5. 'parser' → logprob: -11.381034851074219
    6. '           ' → logprob: -12.006034851074219
    7. ' parser' → logprob: -12.006034851074219
    8. 'expr' → logprob: -12.131034851074219
    9. '        
' → logprob: -12.381034851074219
    10. '    
' → logprob: -12.631034851074219

Token 2772: ' parser' (ID: 14216)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8270370960235596
    2. 'parser' (adapté à ' parser') → logprob: -0.8270370960235596
    3. 'expr' → logprob: -2.8270370960235596
    4. 'try' → logprob: -2.8270370960235596
    5. '   ' → logprob: -5.3270368576049805
    6. 'p' → logprob: -6.5770368576049805
    7. ' parser' → logprob: -8.20203685760498
    8. 'expression' → logprob: -8.32703685760498
    9. 'exp' → logprob: -9.70203685760498
    10. ' try' → logprob: -10.70203685760498

Token 2773: ' =' (ID: 314)
  Prédit: '.parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parse' → logprob: -0.6467255353927612
    2. ' =' → logprob: -1.3967255353927612
    3. '.' → logprob: -2.646725654602051
    4. '.parser' → logprob: -2.771725654602051
    5. '=' → logprob: -3.396725654602051
    6. '(parser' → logprob: -4.396725654602051
    7. '=parse' → logprob: -4.396725654602051
    8. '_parser' → logprob: -4.896725654602051
    9. '(Parser' → logprob: -5.021725654602051
    10. '.Parser' → logprob: -5.146725654602051

Token 2774: ' Parser' (ID: 44901)
  Prédit: 'Parser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parser' → logprob: -0.12692853808403015
    2. ' Parser' → logprob: -2.1269285678863525
    3. '(Parser' → logprob: -14.501928329467773
    4. '.Parser' → logprob: -17.501928329467773
    5. '_parser' → logprob: -20.001928329467773
    6. '   ' → logprob: -20.126928329467773
    7. ' parser' → logprob: -20.751928329467773
    8. 'Parsed' → logprob: -21.626928329467773
    9. 'Parsing' → logprob: -22.251928329467773
    10. 'parser' → logprob: -22.626928329467773

Token 2775: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.014019877649843693
    2. 'Parser' → logprob: -5.139019966125488
    3. '(Parser' → logprob: -5.389019966125488
    4. '(parser' → logprob: -6.389019966125488
    5. '(' → logprob: -6.514019966125488
    6. 'parser' → logprob: -9.139019966125488
    7. 'line' → logprob: -9.639019966125488
    8. ' Parser' → logprob: -10.139019966125488
    9. ' parser' → logprob: -10.889019966125488
    10. '.Parser' → logprob: -11.014019966125488

Token 2776: '.strip' (ID: 40613)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014867615886032581
    2. '       ' → logprob: -4.764867782592773
    3. ')
' → logprob: -5.764867782592773
    4. ').' → logprob: -6.514867782592773
    5. '   ' → logprob: -7.014867782592773
    6. '<|end|>' → logprob: -8.514867782592773
    7. '<|end|>' → logprob: -9.014867782592773
    8. '.parse' → logprob: -9.889867782592773
    9. '())' → logprob: -10.264867782592773
    10. '),' → logprob: -10.514867782592773

Token 2777: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.03016708418726921
    2. '())
' → logprob: -3.5301671028137207
    3. '()' → logprob: -8.405166625976562
    4. ')' → logprob: -8.655166625976562
    5. '())
' → logprob: -11.530166625976562
    6. '()
' → logprob: -12.405166625976562
    7. ')
' → logprob: -13.155166625976562
    8. '()).' → logprob: -13.530166625976562
    9. '())

' → logprob: -14.530166625976562
    10. ' ())' → logprob: -15.030166625976562

Token 2778: '       ' (ID: 309)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.0030191836412996054
    2. '       ' → logprob: -6.628019332885742
    3. 'expression' → logprob: -6.878019332885742
    4. 'result' → logprob: -7.878019332885742
    5. '```' → logprob: -8.878019332885742
    6. 'exp' → logprob: -10.128019332885742
    7. ' expr' → logprob: -10.378019332885742
    8. 'try' → logprob: -10.878019332885742
    9. 'res' → logprob: -11.128019332885742
    10. 'ex' → logprob: -11.128019332885742

Token 2779: ' expr' (ID: 30206)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expr' (adapté à ' expr') → logprob: -1.9862216504407115e-05
    2. 'expression' → logprob: -11.250020027160645
    3. 'try' → logprob: -12.250020027160645
    4. 'result' → logprob: -13.625020027160645
    5. 'exp' → logprob: -14.875020027160645
    6. 'express' → logprob: -15.375020027160645
    7. 'res' → logprob: -16.625019073486328
    8. '```' → logprob: -16.750019073486328
    9. ' expr' → logprob: -16.875019073486328
    10. 'ex' → logprob: -17.750019073486328

Token 2780: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05493723228573799
    2. '=' → logprob: -2.9299371242523193
    3. ')' → logprob: -11.054937362670898
    4. 's' → logprob: -11.679937362670898
    5. '.' → logprob: -11.804937362670898
    6. '=parse' → logprob: -12.429937362670898
    7. ' ' → logprob: -12.554937362670898
    8. '   ' → logprob: -12.679937362670898
    9. '.evaluate' → logprob: -13.429937362670898
    10. ' =
' → logprob: -13.554937362670898

Token 2781: ' parser' (ID: 14216)
  Prédit: 'parser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parser' → logprob: -7.541112427134067e-05
    2. ' parser' → logprob: -9.500075340270996
    3. '	parser' → logprob: -15.375075340270996
    4. '(parser' → logprob: -16.000076293945312
    5. 'expr' → logprob: -16.500076293945312
    6. '.parser' → logprob: -19.750076293945312
    7. '   ' → logprob: -19.875076293945312
    8. 'Parser' → logprob: -20.500076293945312
    9. '_parser' → logprob: -20.875076293945312
    10. '/parser' → logprob: -21.125076293945312

Token 2782: '.parse' (ID: 7259)
  Prédit: '.parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parse' → logprob: -0.07891975343227386
    2. 'parse' → logprob: -2.5789196491241455
    3. '=parse' → logprob: -11.078919410705566
    4. '.' → logprob: -11.703919410705566
    5. '_parse' → logprob: -12.203919410705566
    6. '	parse' → logprob: -14.453919410705566
    7. '(parse' → logprob: -15.078919410705566
    8. ' parse' → logprob: -15.828919410705566
    9. '```' → logprob: -16.203920364379883
    10. '.Parse' → logprob: -16.328920364379883

Token 2783: '_expression' (ID: 69265)
  Prédit: '_expression'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_expression' → logprob: -0.0007104054093360901
    2. 'expression' → logprob: -7.250710487365723
    3. '(expression' → logprob: -15.250710487365723
    4. 'Expression' → logprob: -15.375710487365723
    5. ' expression' → logprob: -18.250709533691406
    6. '\' → logprob: -18.375709533691406
    7. '```' → logprob: -19.125709533691406
    8. '-expression' → logprob: -19.250709533691406
    9. '
' → logprob: -19.500709533691406
    10. '.expression' → logprob: -19.625709533691406

Token 2784: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0877053290605545
    2. '()
' → logprob: -2.962705373764038
    3. '       ' → logprob: -3.462705373764038
    4. '().' → logprob: -7.087705135345459
    5. '<|end|>' → logprob: -10.712705612182617
    6. '()\' → logprob: -11.212705612182617
    7. '();' → logprob: -11.462705612182617
    8. '(),' → logprob: -11.712705612182617
    9. '()

' → logprob: -11.712705612182617
    10. '())' → logprob: -11.712705612182617

Token 2785: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007216368801891804
    2. 'results' → logprob: -5.757216453552246
    3. '```' → logprob: -5.882216453552246
    4. 'result' → logprob: -7.757216453552246
    5. '   ' → logprob: -7.757216453552246
    6. ' results' → logprob: -8.507216453552246
    7. '`' → logprob: -10.257216453552246
    8. '``' → logprob: -10.382216453552246
    9. '<|end|>' → logprob: -10.382216453552246
    10. ' result' → logprob: -11.007216453552246

Token 2786: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.008083408698439598
    2. 'res' → logprob: -5.508083343505859
    3. 'vals' → logprob: -6.133083343505859
    4. 'result' → logprob: -6.758083343505859
    5. 'all' → logprob: -7.883083343505859
    6. 'values' → logprob: -8.38308334350586
    7. '       ' → logprob: -10.38308334350586
    8. 'possible' → logprob: -11.63308334350586
    9. ' results' → logprob: -12.38308334350586
    10. 'answers' → logprob: -12.63308334350586

Token 2787: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07989025861024857
    2. '=' → logprob: -2.579890251159668
    3. '.' → logprob: -7.204890251159668
    4. '   ' → logprob: -8.829890251159668
    5. '       ' → logprob: -9.579890251159668
    6. '.add' → logprob: -11.579890251159668
    7. '.evaluate' → logprob: -12.454890251159668
    8. '    ' → logprob: -12.704890251159668
    9. ':' → logprob: -12.954890251159668
    10. '<|end|>' → logprob: -12.954890251159668

Token 2788: ' expr' (ID: 30206)
  Prédit: 'expr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'expr' → logprob: -0.014169269241392612
    2. ' expr' → logprob: -4.264169216156006
    3. '(expr' → logprob: -12.639169692993164
    4. '   ' → logprob: -13.389169692993164
    5. 'express' → logprob: -14.014169692993164
    6. '       ' → logprob: -17.264169692993164
    7. '.expr' → logprob: -18.139169692993164
    8. 'parser' → logprob: -18.139169692993164
    9. '_expr' → logprob: -18.514169692993164
    10. 'expression' → logprob: -18.639169692993164

Token 2789: '.evaluate' (ID: 71397)
  Prédit: '.evaluate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.evaluate' → logprob: -0.0003659746435005218
    2. '.' → logprob: -8.2503662109375
    3. 'evaluate' → logprob: -9.3753662109375
    4. ' .' → logprob: -11.6253662109375
    5. '   ' → logprob: -12.2503662109375
    6. ' =' → logprob: -13.7503662109375
    7. '._' → logprob: -14.0003662109375
    8. '```' → logprob: -14.1253662109375
    9. '.e' → logprob: -14.3753662109375
    10. '=' → logprob: -14.8753662109375

Token 2790: '_all' (ID: 13305)
  Prédit: '_all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_all' → logprob: -3.128163257315464e-07
    2. '()' → logprob: -16.625
    3. '```' → logprob: -16.875
    4. '_' → logprob: -17.25
    5. 'all' → logprob: -17.625
    6. '__' → logprob: -17.625
    7. ' _' → logprob: -18.25
    8. 'All' → logprob: -18.5
    9. '()
' → logprob: -18.5
    10. '(_' → logprob: -18.75

Token 2791: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.2907143533229828
    2. '()' → logprob: -1.4157143831253052
    3. '       ' → logprob: -4.665714263916016
    4. '()
' → logprob: -10.540714263916016
    5. '()

' → logprob: -10.915714263916016
    6. '
' → logprob: -11.040714263916016
    7. '<|end|>' → logprob: -11.915714263916016
    8. '        
' → logprob: -11.915714263916016
    9. '();' → logprob: -12.290714263916016
    10. '#' → logprob: -12.790714263916016

Token 2792: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00010092071170220152
    2. '```' → logprob: -9.500101089477539
    3. '<|end|>' → logprob: -11.375101089477539
    4. '   ' → logprob: -11.750101089477539
    5. 'print' → logprob: -12.875101089477539
    6. '        
' → logprob: -14.000101089477539
    7. '           ' → logprob: -14.000101089477539
    8. '`' → logprob: -14.750101089477539
    9. ',' → logprob: -14.875101089477539
    10. '``' → logprob: -15.125101089477539

Token 2793: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.11507992446422577
    2. 'if' → logprob: -2.365079879760742
    3. '       ' → logprob: -4.615079879760742
    4. 'min' → logprob: -5.865079879760742
    5. 'for' → logprob: -6.990079879760742
    6. 'max' → logprob: -7.990079879760742
    7. 'results' → logprob: -8.490079879760742
    8. 'sorted' → logprob: -9.115079879760742
    9. 'result' → logprob: -9.240079879760742
    10. 'answer' → logprob: -9.490079879760742

Token 2794: '(len' (ID: 14990)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.19923774898052216
    2. '(min' → logprob: -2.074237823486328
    3. 'len' → logprob: -3.074237823486328
    4. '(len' → logprob: -5.324237823486328
    5. 'sorted' → logprob: -6.574237823486328
    6. 'max' → logprob: -6.949237823486328
    7. 'results' → logprob: -7.949237823486328
    8. ''' → logprob: -8.324237823486328
    9. '(max' → logprob: -8.449237823486328
    10. 'sum' → logprob: -8.699237823486328

Token 2795: '(results' (ID: 42655)
  Prédit: '(results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(results' → logprob: -1.9743012671824545e-05
    2. '(' → logprob: -11.375020027160645
    3. 'results' → logprob: -11.750020027160645
    4. ' (' → logprob: -15.875020027160645
    5. '(result' → logprob: -16.375019073486328
    6. '(
' → logprob: -16.875019073486328
    7. '(res' → logprob: -17.375019073486328
    8. '(`' → logprob: -17.625019073486328
    9. ')' → logprob: -17.875019073486328
    10. '```' → logprob: -18.125019073486328

Token 2796: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001835825969465077
    2. '())' → logprob: -6.876835823059082
    3. ',' → logprob: -7.501835823059082
    4. '))' → logprob: -9.376835823059082
    5. '()' → logprob: -9.501835823059082
    6. '(' → logprob: -10.126835823059082
    7. ')
' → logprob: -11.126835823059082
    8. '`)' → logprob: -11.876835823059082
    9. ')`' → logprob: -12.001835823059082
    10. '   ' → logprob: -12.626835823059082

Token 2797: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2798: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.003618839429691434
    2. ' __' → logprob: -5.6286187171936035
    3. '```' → logprob: -11.253619194030762
    4. 'name' → logprob: -12.503619194030762
    5. '_name' → logprob: -13.878619194030762
    6. '___' → logprob: -14.753619194030762
    7. '_' → logprob: -15.503619194030762
    8. '/__' → logprob: -15.753619194030762
    9. '`' → logprob: -16.128618240356445
    10. ' ' → logprob: -17.003618240356445

Token 2799: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0032093229237943888
    2. '==' → logprob: -6.753209114074707
    3. '```' → logprob: -6.878209114074707
    4. 'if' → logprob: -8.128209114074707
    5. ' ==' → logprob: -8.503209114074707
    6. '[' → logprob: -8.753209114074707
    7. '__.__' → logprob: -9.253209114074707
    8. '.__' → logprob: -10.003209114074707
    9. '__":
' → logprob: -10.253209114074707
    10. '__["' → logprob: -10.503209114074707

Token 2800: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.009437420405447483
    2. '==' → logprob: -4.759437561035156
    3. '=="' → logprob: -8.134437561035156
    4. '```' → logprob: -8.384437561035156
    5. ' ==' → logprob: -9.009437561035156
    6. '__.__' → logprob: -9.509437561035156
    7. '=='' → logprob: -10.134437561035156
    8. '__":
' → logprob: -10.634437561035156
    9. '__["' → logprob: -12.009437561035156
    10. '__.' → logprob: -12.009437561035156

Token 2801: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4790184497833252
    2. '__' → logprob: -1.2290184497833252
    3. '=="' → logprob: -3.229018449783325
    4. '=='' → logprob: -3.729018449783325
    5. ' ==' → logprob: -3.979018449783325
    6. '```' → logprob: -5.479018211364746
    7. '[' → logprob: -7.729018211364746
    8. '==
' → logprob: -8.354018211364746
    9. '['' → logprob: -8.854018211364746
    10. '==='' → logprob: -9.354018211364746

Token 2802: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.2520940899848938
    2. ''' → logprob: -1.502094030380249
    3. '__' → logprob: -8.752094268798828
    4. '`' → logprob: -12.377094268798828
    5. ' "__' → logprob: -13.502094268798828
    6. '"name' → logprob: -15.377094268798828
    7. '   ' → logprob: -15.752094268798828
    8. '```' → logprob: -15.752094268798828
    9. ''name' → logprob: -15.877094268798828
    10. ' '__' → logprob: -16.252094268798828

Token 2803: 'main' (ID: 7731)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.011050889268517494
    2. 'main' → logprob: -4.511050701141357
    3. 'name' → logprob: -13.636051177978516
    4. ''' → logprob: -14.136051177978516
    5. '"' → logprob: -14.761051177978516
    6. '```' → logprob: -15.261051177978516
    7. ' __' → logprob: -16.011051177978516
    8. '___' → logprob: -16.636051177978516
    9. '__
' → logprob: -16.761051177978516
    10. '_main' → logprob: -17.011051177978516

Token 2804: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.27882450819015503
    2. '__' → logprob: -1.5288245677947998
    3. '__":
' → logprob: -3.9038245677948
    4. '__
' → logprob: -6.403824329376221
    5. '():
' → logprob: -7.153824329376221
    6. ':
' → logprob: -7.278824329376221
    7. ':' → logprob: -7.403824329376221
    8. '```' → logprob: -7.528824329376221
    9. '_' → logprob: -8.028824806213379
    10. '.' → logprob: -8.153824806213379

Token 2805: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0006388116744346917
    2. '	main' → logprob: -8.250638961791992
    3. '   ' → logprob: -8.375638961791992
    4. ' main' → logprob: -9.125638961791992
    5. '(main' → logprob: -10.375638961791992
    6. '```' → logprob: -12.250638961791992
    7. '_main' → logprob: -13.625638961791992
    8. '.main' → logprob: -15.500638961791992
    9. '    
' → logprob: -15.500638961791992
    10. 'm' → logprob: -16.000638961791992

Token 2806: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -18.75
    3. '	main' → logprob: -21.75
    4. '   ' → logprob: -22.5
    5. 'mai' → logprob: -23.25
    6. '(main' → logprob: -23.375
    7. 'm' → logprob: -23.875
    8. 'ma' → logprob: -24.5
    9. '_main' → logprob: -25.375
    10. '```' → logprob: -25.375

Token 2807: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 2805
Tokens correctement prédits (1ère position, stricte): 879
Tokens correctement prédits (1ère position, avec adaptation): 991
Tokens correctement prédits (top 10): 2067
Précision stricte (1ère position): 31.34%
Précision adaptée (1ère position): 35.33%
Précision (top 10): 73.69%
================================================================================
