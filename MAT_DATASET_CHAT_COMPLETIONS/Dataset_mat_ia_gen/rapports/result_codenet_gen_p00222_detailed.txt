================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:26:41
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import math

def sieve(n):
    """
    Crée une liste booléenne indiquant la primalité des entiers de 0 à n.
    True signifie que l'indice est un nombre premier, False sinon.
    Utilisation du crible d'Ératosthène pour une efficacité optimale.
    """
    primes = [True] * (n + 1)
    primes[0] = False
    primes[1] = False
    limit = int(math.sqrt(n)) + 1
    for i in range(2, limit):
        if primes[i]:
            for j in range(i*i, n+1, i):
                primes[j] = False
    return primes

def precompute_twin_quadruples(max_n):
    """
    Pré-calculer pour chaque possible n (jusqu'à max_n) la valeur maximale de la
    taille d'une quadruple de nombres premiers (a, a+2, a+6, a+8) dont la taille
    est <= n.
    Retourne une liste max_size où max_size[x] correspond à la plus grande taille
    d'une quadruple jusqu'à x (ou 0 si aucune).
    """
    primes = sieve(max_n)
    max_size = [0] * (max_n + 1)
    current_max = 0
    # On parcourt tous les nombres jusqu'à max_n pour détecter les quadruples
    for a in range(2, max_n - 8 + 1):
        # Vérification de la condition quadruple de nombres premiers
        if primes[a] and primes[a + 2] and primes[a + 6] and primes[a + 8]:
            size = a + 8
            if size > current_max:
                current_max = size
        max_size[a] = current_max
    # Compléter max_size pour les indices restants (de max_n-7 à max_n)
    for x in range(max_n - 7 + 1, max_n + 1):
        max_size[x] = current_max
    return max_size

def main():
    input_numbers = []
    max_input = 0
    for line in sys.stdin:
        n = int(line.strip())
        if n == 0:
            break
        input_numbers.append(n)
        if n > max_input:
            max_input = n
    # Pré-calculer pour tous les n jusqu'au maximum d'entrée
    max_size = precompute_twin_quadruples(max_input)
    # Pour chaque entrée, afficher la plus grande taille <= n
    for n in input_numbers:
        print(max_size[n])

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6975938677787781
    2. '\n' → logprob: -0.8225938677787781
    3. '<|end|>' → logprob: -3.572593927383423
    4. '\' → logprob: -4.322593688964844
    5. 'newline' → logprob: -5.072593688964844
    6. 'import' → logprob: -5.322593688964844
    7. '<|end|>' → logprob: -5.947593688964844
    8. '```' → logprob: -6.572593688964844
    9. '' → logprob: -6.697593688964844
    10. '
' → logprob: -6.947593688964844

Token 4: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00020771251001860946
    2. 'os' → logprob: -8.500207901000977
    3. ' math' → logprob: -13.375207901000977
    4. ' re' → logprob: -13.750207901000977
    5. '"os' → logprob: -14.250207901000977
    6. ' json' → logprob: -14.750207901000977
    7. '_os' → logprob: -16.375207901000977
    8. ' ' → logprob: -16.500207901000977
    9. ' io' → logprob: -16.625207901000977
    10. '	os' → logprob: -16.875207901000977

Token 5: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.07778619974851608
    2. '\' → logprob: -3.8277862071990967
    3. '\n' → logprob: -3.8277862071990967
    4. 'import' → logprob: -4.202785968780518
    5. '
' → logprob: -5.452785968780518
    6. '```' → logprob: -5.452785968780518
    7. '<|end|>' → logprob: -6.077785968780518
    8. ',' → logprob: -6.702785968780518
    9. '

' → logprob: -7.077785968780518
    10. '<|end|>' → logprob: -7.452785968780518

Token 6: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8861402273178101
    2. '\' → logprob: -1.38614022731781
    3. 'import' → logprob: -2.1361403465270996
    4. '\n' → logprob: -2.2611403465270996
    5. 'def' → logprob: -3.5111403465270996
    6. '```' → logprob: -3.6361403465270996
    7. ',' → logprob: -4.3861403465271
    8. '#' → logprob: -4.6361403465271
    9. '
' → logprob: -4.6361403465271
    10. '' → logprob: -5.3861403465271

Token 7: ' sieve' (ID: 142781)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.011139074340462685
    2. ' calculate' → logprob: -4.886138916015625
    3. '_' → logprob: -6.261138916015625
    4. ' space' → logprob: -7.636138916015625
    5. ' factorial' → logprob: -7.636138916015625
    6. ' compute' → logprob: -8.636138916015625
    7. ' add' → logprob: -9.761138916015625
    8. ' my' → logprob: -9.761138916015625
    9. ' sqrt' → logprob: -10.261138916015625
    10. ' main' → logprob: -10.511138916015625

Token 8: '(n' (ID: 2406)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.524763822555542
    2. '(' → logprob: -0.899763822555542
    3. '_s' → logprob: -7.024764060974121
    4. '_(' → logprob: -7.649764060974121
    5. ' (' → logprob: -9.649764060974121
    6. 's' → logprob: -10.024764060974121
    7. ')' → logprob: -10.774764060974121
    8. '```' → logprob: -11.024764060974121
    9. '_sat' → logprob: -11.274764060974121
    10. '(s' → logprob: -11.399764060974121

Token 9: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0891430675983429
    2. ')' → logprob: -2.4641430377960205
    3. ' ):' → logprob: -9.464142799377441
    4. '_' → logprob: -9.714142799377441
    5. ' )' → logprob: -10.964142799377441
    6. ':' → logprob: -11.714142799377441
    7. '):
' → logprob: -11.964142799377441
    8. ')：' → logprob: -12.214142799377441
    9. ',' → logprob: -12.464142799377441
    10. '(' → logprob: -12.589142799377441

Token 10: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018204839900135994
    2. ':
' → logprob: -5.518204689025879
    3. '():' → logprob: -5.518204689025879
    4. '   ' → logprob: -5.768204689025879
    5. '):' → logprob: -6.018204689025879
    6. '```' → logprob: -6.643204689025879
    7. ' :' → logprob: -7.143204689025879
    8. '`:' → logprob: -7.893204689025879
    9. '**' → logprob: -8.143204689025879
    10. '\' → logprob: -8.268204689025879

Token 11: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5957937836647034
    2. ' ' → logprob: -1.4707937240600586
    3. '    ' → logprob: -1.9707937240600586
    4. ' sieve' → logprob: -3.7207937240600586
    5. '```' → logprob: -4.970793724060059
    6. ' visited' → logprob: -4.970793724060059
    7. ' [' → logprob: -5.345793724060059
    8. ' if' → logprob: -5.720793724060059
    9. ' 
' → logprob: -5.845793724060059
    10. ' result' → logprob: -6.095793724060059

Token 12: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48674967885017395
    2. ' """' → logprob: -2.6117496490478516
    3. 'Generate' → logprob: -2.8617496490478516
    4. '"""' → logprob: -2.9867496490478516
    5. ' """
' → logprob: -2.9867496490478516
    6. 'Gener' → logprob: -3.6117496490478516
    7. ' ' → logprob: -4.361749649047852
    8. 'Returns' → logprob: -4.611749649047852
    9. 'S' → logprob: -4.736749649047852
    10. '"""
' → logprob: -4.861749649047852

Token 13: ' Cr' (ID: 5790)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0814247131347656
    2. ' """' → logprob: -1.4564247131347656
    3. ' """
' → logprob: -1.9564247131347656
    4. '"""' → logprob: -2.8314247131347656
    5. ' Generate' → logprob: -2.8314247131347656
    6. 'Generate' → logprob: -2.8314247131347656
    7. ' sieve' → logprob: -3.4564247131347656
    8. '"""
' → logprob: -3.9564247131347656
    9. ' primes' → logprob: -4.206424713134766
    10. ' Generates' → logprob: -4.706424713134766

Token 14: 'ée' (ID: 2894)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.00676534092053771
    2. 'eat' → logprob: -5.131765365600586
    3. 'eturn' → logprob: -8.131765365600586
    4. 'ea' → logprob: -8.256765365600586
    5. 'ee' → logprob: -8.631765365600586
    6. 'ease' → logprob: -11.006765365600586
    7. 'ef' → logprob: -11.131765365600586
    8. 'et' → logprob: -11.131765365600586
    9. 'eep' → logprob: -11.506765365600586
    10. 'earn' → logprob: -11.631765365600586

Token 15: ' une' (ID: 2463)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.23040151596069336
    2. ' ' → logprob: -1.7304015159606934
    3. ' une' → logprob: -4.355401515960693
    4. 's' → logprob: -5.480401515960693
    5. 'e' → logprob: -5.980401515960693
    6. ' ' → logprob: -6.355401515960693
    7. '   ' → logprob: -6.480401515960693
    8. ' e' → logprob: -6.605401515960693
    9. '  ' → logprob: -6.855401515960693
    10. ' a' → logprob: -7.105401515960693

Token 16: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.01808602176606655
    2. 'liste' → logprob: -4.143085956573486
    3. ' list' → logprob: -7.018085956573486
    4. ' ' → logprob: -7.143085956573486
    5. 's' → logprob: -9.393086433410645
    6. ' Liste' → logprob: -10.268086433410645
    7. 'é' → logprob: -10.893086433410645
    8. 'Liste' → logprob: -10.893086433410645
    9. 'list' → logprob: -11.018086433410645
    10. ' table' → logprob: -11.018086433410645

Token 17: ' bool' (ID: 3792)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5734232664108276
    2. '[]' → logprob: -1.4484232664108276
    3. ' des' → logprob: -2.198423385620117
    4. ' de' → logprob: -3.698423385620117
    5. '<|end|>' → logprob: -4.448423385620117
    6. ' d' → logprob: -4.698423385620117
    7. ' ' → logprob: -4.698423385620117
    8. '[n' → logprob: -5.448423385620117
    9. 'd' → logprob: -5.573423385620117
    10. ' [' → logprob: -5.698423385620117

Token 18: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.00012403888104017824
    2. 'éan' → logprob: -9.125123977661133
    3. 'ean' → logprob: -11.750123977661133
    4. 'éna' → logprob: -13.375123977661133
    5. 'ée' → logprob: -13.625123977661133
    6. '```' → logprob: -14.250123977661133
    7. 'ène' → logprob: -14.375123977661133
    8. ' é' → logprob: -14.750123977661133
    9. '-é' → logprob: -15.125123977661133
    10. 'enne' → logprob: -15.125123977661133

Token 19: 'enne' (ID: 17721)
  Prédit: 'enne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enne' → logprob: -0.0007046872633509338
    2. 'ene' → logprob: -7.500704765319824
    3. 'ène' → logprob: -9.875704765319824
    4. 'ne' → logprob: -10.125704765319824
    5. 'nne' → logprob: -10.500704765319824
    6. 'en' → logprob: -11.625704765319824
    7. 'ennes' → logprob: -12.000704765319824
    8. 'e' → logprob: -12.125704765319824
    9. 'an' → logprob: -12.500704765319824
    10. 'ane' → logprob: -12.625704765319824

Token 20: ' indiqu' (ID: 100773)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.28166326880455017
    2. ' ' → logprob: -1.9066632986068726
    3. '[]' → logprob: -3.281663179397583
    4. 's' → logprob: -4.031663417816162
    5. ' des' → logprob: -4.281663417816162
    6. ' de' → logprob: -5.156663417816162
    7. '```' → logprob: -5.406663417816162
    8. '[n' → logprob: -5.656663417816162
    9. ' [' → logprob: -6.406663417816162
    10. '  ' → logprob: -6.531663417816162

Token 21: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.00010652327910065651
    2. 'e' → logprob: -9.375106811523438
    3. 'ent' → logprob: -11.250106811523438
    4. '```' → logprob: -12.750106811523438
    5. 'a' → logprob: -13.500106811523438
    6. '#' → logprob: -14.250106811523438
    7. '_ant' → logprob: -14.625106811523438
    8. '   ' → logprob: -14.750106811523438
    9. 'ante' → logprob: -14.750106811523438
    10. ''ant' → logprob: -14.875106811523438

Token 22: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5571375489234924
    2. 's' → logprob: -1.0571374893188477
    3. ' si' → logprob: -3.3071374893188477
    4. ' True' → logprob: -4.432137489318848
    5. '```' → logprob: -5.057137489318848
    6. ' la' → logprob: -5.182137489318848
    7. 'si' → logprob: -5.682137489318848
    8. 'e' → logprob: -6.182137489318848
    9. ' if' → logprob: -6.307137489318848
    10. 'True' → logprob: -6.682137489318848

Token 23: ' primal' (ID: 181789)
  Prédit: ' présence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' présence' → logprob: -0.4064162075519562
    2. ' ' → logprob: -1.7814161777496338
    3. ' primal' → logprob: -3.031416177749634
    4. 's' → logprob: -3.281416177749634
    5. ' presence' → logprob: -3.906416177749634
    6. 'prés' → logprob: -3.906416177749634
    7. 'pr' → logprob: -4.281416416168213
    8. ' disponibilité' → logprob: -5.406416416168213
    9. '   ' → logprob: -6.156416416168213
    10. 'presence' → logprob: -6.281416416168213

Token 24: 'ité' (ID: 3761)
  Prédit: 'ité'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ité' → logprob: -0.005567532032728195
    2. 'ity' → logprob: -5.50556755065918
    3. 'it' → logprob: -7.25556755065918
    4. 'i' → logprob: -8.00556755065918
    5. 'itié' → logprob: -8.88056755065918
    6. '#' → logprob: -10.00556755065918
    7. 'eté' → logprob: -10.00556755065918
    8. ' it' → logprob: -10.13056755065918
    9. 'e' → logprob: -10.38056755065918
    10. '```' → logprob: -10.50556755065918

Token 25: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.22352783381938934
    2. '[' → logprob: -2.2235279083251953
    3. ' ' → logprob: -3.3485279083251953
    4. ' de' → logprob: -3.5985279083251953
    5. 's' → logprob: -4.348527908325195
    6. '[n' → logprob: -5.223527908325195
    7. ' of' → logprob: -5.348527908325195
    8. '[i' → logprob: -6.223527908325195
    9. ' for' → logprob: -7.348527908325195
    10. '   ' → logprob: -7.473527908325195

Token 26: ' ent' (ID: 1121)
  Prédit: ' nombres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombres' → logprob: -0.019755490124225616
    2. ' ent' → logprob: -4.0197553634643555
    3. ' nombre' → logprob: -7.1447553634643555
    4. 'ent' → logprob: -8.019755363464355
    5. ' ' → logprob: -9.019755363464355
    6. ' numbers' → logprob: -9.269755363464355
    7. 'n' → logprob: -9.519755363464355
    8. 'nombre' → logprob: -9.894755363464355
    9. ' num' → logprob: -10.019755363464355
    10. ' integers' → logprob: -10.269755363464355

Token 27: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.02406848780810833
    2. 'ières' → logprob: -4.274068355560303
    3. 'i' → logprob: -4.649068355560303
    4. 'ités' → logprob: -9.399068832397461
    5. 'ier' → logprob: -9.649068832397461
    6. '```' → logprob: -9.774068832397461
    7. 'ié' → logprob: -9.899068832397461
    8. 'ière' → logprob: -11.024068832397461
    9. '[i' → logprob: -13.024068832397461
    10. '   ' → logprob: -13.149068832397461

Token 28: ' de' (ID: 334)
  Prédit: ' jusqu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' jusqu' → logprob: -0.40530648827552795
    2. ' de' → logprob: -1.1553064584732056
    3. ' ' → logprob: -4.655306339263916
    4. ' up' → logprob: -5.155306339263916
    5. ' jusque' → logprob: -6.780306339263916
    6. 'de' → logprob: -7.155306339263916
    7. '```' → logprob: -8.405306816101074
    8. '_' → logprob: -8.655306816101074
    9. 'jus' → logprob: -9.030306816101074
    10. ' entre' → logprob: -9.030306816101074

Token 29: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5868362188339233
    2. '0' → logprob: -1.4618362188339233
    3. '2' → logprob: -1.7118362188339233
    4. '1' → logprob: -3.461836338043213
    5. '```' → logprob: -10.086835861206055
    6. '[' → logprob: -10.211835861206055
    7. ' ' → logprob: -10.711835861206055
    8. ' [' → logprob: -10.961835861206055
    9. '`' → logprob: -11.211835861206055
    10. '   ' → logprob: -11.336835861206055

Token 30: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.22649893164634705
    2. '2' → logprob: -1.6014989614486694
    3. '1' → logprob: -7.226499080657959
    4. ' ' → logprob: -8.1014986038208
    5. 'de' → logprob: -10.8514986038208
    6. '```' → logprob: -10.8514986038208
    7. '[' → logprob: -11.8514986038208
    8. '   ' → logprob: -12.9764986038208
    9. '`' → logprob: -13.6014986038208
    10. 'à' → logprob: -14.5389986038208

Token 31: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.644175112247467
    2. ' à' → logprob: -0.769175112247467
    3. ' ' → logprob: -4.644175052642822
    4. 'a' → logprob: -7.394175052642822
    5. '```' → logprob: -7.894175052642822
    6. '   ' → logprob: -8.64417552947998
    7. ''à' → logprob: -8.76917552947998
    8. 'au' → logprob: -9.14417552947998
    9. ' a' → logprob: -9.26917552947998
    10. ' ' → logprob: -9.39417552947998

Token 32: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.09580335021018982
    2. 'n' → logprob: -2.9708032608032227
    3. ' ' → logprob: -3.2208032608032227
    4. ' ' → logprob: -8.720803260803223
    5. '	n' → logprob: -12.220803260803223
    6. '   ' → logprob: -13.345803260803223
    7. '  ' → logprob: -13.470803260803223
    8. ' `' → logprob: -14.970803260803223
    9. '`' → logprob: -15.720803260803223
    10. '```' → logprob: -15.720803260803223

Token 33: '.
' (ID: 558)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0912353992462158
    2. '   ' → logprob: -1.0912353992462158
    3. '.' → logprob: -2.216235399246216
    4. ':' → logprob: -2.716235399246216
    5. ',' → logprob: -3.341235399246216
    6. ' :' → logprob: -3.591235399246216
    7. '
' → logprob: -3.716235399246216
    8. '\n' → logprob: -3.966235399246216
    9. '```' → logprob: -4.091235160827637
    10. '  ' → logprob: -6.091235160827637

Token 34: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07400000840425491
    2. '```' → logprob: -3.324000120162964
    3. '    
' → logprob: -4.573999881744385
    4. '\n' → logprob: -4.948999881744385
    5. '"""
' → logprob: -5.323999881744385
    6. '
' → logprob: -5.823999881744385
    7. '  
' → logprob: -5.948999881744385
    8. '   
' → logprob: -6.073999881744385
    9. ' 
' → logprob: -6.198999881744385
    10. ' """
' → logprob: -7.073999881744385

Token 35: ' True' (ID: 6432)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41913101077079773
    2. '
' → logprob: -1.7941310405731201
    3. '\n' → logprob: -2.29413104057312
    4. '```' → logprob: -3.66913104057312
    5. '    
' → logprob: -3.91913104057312
    6. 'n' → logprob: -5.044130802154541
    7. '"""
' → logprob: -5.044130802154541
    8. '  
' → logprob: -5.169130802154541
    9. ' 
' → logprob: -5.294130802154541
    10. '   
' → logprob: -6.044130802154541

Token 36: ' signifie' (ID: 81149)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2859359681606293
    2. '<|end|>' → logprob: -1.5359359979629517
    3. ',' → logprob: -4.285935878753662
    4. ' for' → logprob: -5.660935878753662
    5. '<|end|>' → logprob: -5.785935878753662
    6. '  ' → logprob: -5.910935878753662
    7. ' ,' → logprob: -6.410935878753662
    8. '   ' → logprob: -6.660935878753662
    9. '    ' → logprob: -6.910935878753662
    10. '[' → logprob: -7.035935878753662

Token 37: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.7446552515029907
    2. 'que' → logprob: -1.7446552515029907
    3. ' qu' → logprob: -2.119655132293701
    4. ' ' → logprob: -2.494655132293701
    5. 'qu' → logprob: -2.619655132293701
    6. 'prime' → logprob: -3.494655132293701
    7. ' prime' → logprob: -3.994655132293701
    8. '   ' → logprob: -4.744655132293701
    9. ' premier' → logprob: -5.244655132293701
    10. 'prem' → logprob: -6.119655132293701

Token 38: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.3773595988750458
    2. 'le' → logprob: -1.5023596286773682
    3. ' l' → logprob: -3.002359628677368
    4. ' le' → logprob: -3.252359628677368
    5. 'nombre' → logprob: -6.502359390258789
    6. 'c' → logprob: -7.502359390258789
    7. 'la' → logprob: -7.627359390258789
    8. ' nombre' → logprob: -8.377359390258789
    9. ' ' → logprob: -9.127359390258789
    10. 'les' → logprob: -9.252359390258789

Token 39: ''ind' (ID: 82245)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.13645143806934357
    2. 'e' → logprob: -2.511451482772827
    3. ''' → logprob: -4.136451244354248
    4. ' e' → logprob: -4.511451244354248
    5. 'i' → logprob: -5.261451244354248
    6. 'a' → logprob: -5.636451244354248
    7. 's' → logprob: -5.761451244354248
    8. ' i' → logprob: -6.136451244354248
    9. ' a' → logprob: -6.886451244354248
    10. 'u' → logprob: -7.011451244354248

Token 40: 'ice' (ID: 603)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.3759896755218506
    2. 'i' → logprob: -1.5009896755218506
    3. 'ex' → logprob: -2.7509896755218506
    4. 'e' → logprob: -4.00098991394043
    5. 'ice' → logprob: -6.25098991394043
    6. 'í' → logprob: -6.37598991394043
    7. 'ic' → logprob: -7.00098991394043
    8. 'ique' → logprob: -7.00098991394043
    9. 'iqué' → logprob: -7.25098991394043
    10. 'éc' → logprob: -7.75098991394043

Token 41: ' est' (ID: 893)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.48469704389572144
    2. ' est' → logprob: -0.9846970438957214
    3. 's' → logprob: -5.359696865081787
    4. '   ' → logprob: -5.859696865081787
    5. '  ' → logprob: -7.484696865081787
    6. 'est' → logprob: -7.734696865081787
    7. ' is' → logprob: -7.984696865081787
    8. '    ' → logprob: -7.984696865081787
    9. '[' → logprob: -8.484697341918945
    10. '`' → logprob: -8.734697341918945

Token 42: ' un' (ID: 537)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prem' → logprob: -0.04328165575861931
    2. ' premier' → logprob: -3.9182815551757812
    3. 'un' → logprob: -4.918281555175781
    4. 'p' → logprob: -5.793281555175781
    5. 'pot' → logprob: -5.793281555175781
    6. 'prima' → logprob: -5.918281555175781
    7. '   ' → logprob: -6.168281555175781
    8. '```' → logprob: -7.043281555175781
    9. 'prime' → logprob: -7.418281555175781
    10. 'prob' → logprob: -7.668281555175781

Token 43: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.10449835658073425
    2. 'nombre' → logprob: -2.4794983863830566
    3. 'e' → logprob: -4.604498386383057
    4. ' ' → logprob: -5.479498386383057
    5. '   ' → logprob: -8.354497909545898
    6. 'prem' → logprob: -8.479497909545898
    7. 'p' → logprob: -8.854497909545898
    8. ' nombres' → logprob: -9.229497909545898
    9. ' premier' → logprob: -9.354497909545898
    10. 'n' → logprob: -9.479497909545898

Token 44: ' premier' (ID: 15506)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7675193548202515
    2. ' premier' → logprob: -0.7675193548202515
    3. 'prem' → logprob: -2.892519474029541
    4. '   ' → logprob: -4.392519474029541
    5. '  ' → logprob: -6.267519474029541
    6. ' Premier' → logprob: -7.392519474029541
    7. ' premi' → logprob: -7.517519474029541
    8. ' PREMI' → logprob: -8.517518997192383
    9. ' p' → logprob: -8.892518997192383
    10. ' primo' → logprob: -9.142518997192383

Token 45: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5531013607978821
    2. '   ' → logprob: -1.3031013011932373
    3. ',
' → logprob: -3.0531013011932373
    4. '.' → logprob: -3.3031013011932373
    5. 's' → logprob: -3.5531013011932373
    6. '```' → logprob: -3.5531013011932373
    7. 'e' → logprob: -5.928101539611816
    8. '
' → logprob: -5.928101539611816
    9. '  ' → logprob: -7.303101539611816
    10. '"""
' → logprob: -7.303101539611816

Token 46: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.3292907178401947
    2. ' ' → logprob: -1.329290747642517
    3. '   ' → logprob: -4.829290866851807
    4. ' True' → logprob: -6.204290866851807
    5. 'False' → logprob: -6.329290866851807
    6. ' et' → logprob: -7.079290866851807
    7. ' 
' → logprob: -7.329290866851807
    8. '    ' → logprob: -7.454290866851807
    9. '```' → logprob: -7.954290866851807
    10. '  ' → logprob: -8.204290390014648

Token 47: ' sinon' (ID: 52915)
  Prédit: ' signifie'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' signifie' → logprob: -0.17408230900764465
    2. '   ' → logprob: -3.0490822792053223
    3. ' ' → logprob: -3.1740822792053223
    4. ' que' → logprob: -3.2990822792053223
    5. ' indique' → logprob: -4.549082279205322
    6. ' est' → logprob: -5.174082279205322
    7. '```' → logprob: -5.424082279205322
    8. ',' → logprob: -6.049082279205322
    9. '    ' → logprob: -6.174082279205322
    10. ' ' → logprob: -6.424082279205322

Token 48: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23863376677036285
    2. '.' → logprob: -2.113633871078491
    3. '```' → logprob: -3.238633871078491
    4. '
' → logprob: -3.488633871078491
    5. '.
' → logprob: -4.863633632659912
    6. '"""' → logprob: -5.363633632659912
    7. '"""
' → logprob: -5.988633632659912
    8. ',' → logprob: -6.738633632659912
    9. ')' → logprob: -6.863633632659912
    10. ' ' → logprob: -7.113633632659912

Token 49: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016561774536967278
    2. '"""
' → logprob: -4.266561985015869
    3. '
' → logprob: -7.266561985015869
    4. '"""' → logprob: -7.391561985015869
    5. '    
' → logprob: -7.766561985015869
    6. '```' → logprob: -8.516561508178711
    7. '\n' → logprob: -8.891561508178711
    8. '"' → logprob: -9.141561508178711
    9. ' ' → logprob: -10.266561508178711
    10. '  
' → logprob: -10.391561508178711

Token 50: ' Util' (ID: 13564)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021356966346502304
    2. '"""
' → logprob: -4.89635705947876
    3. '    
' → logprob: -5.39635705947876
    4. '
' → logprob: -5.77135705947876
    5. '\n' → logprob: -6.27135705947876
    6. '```' → logprob: -6.27135705947876
    7. '"""' → logprob: -7.02135705947876
    8. 'n' → logprob: -8.271356582641602
    9. '   
' → logprob: -8.271356582641602
    10. ' 
' → logprob: -8.396356582641602

Token 51: 'isation' (ID: 6993)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.8786382675170898
    2. 'ise' → logprob: -0.8786382675170898
    3. 'isé' → logprob: -2.25363826751709
    4. 'is' → logprob: -3.62863826751709
    5. 'iser' → logprob: -4.50363826751709
    6. 'ser' → logprob: -4.87863826751709
    7. 's' → logprob: -5.12863826751709
    8. 'isant' → logprob: -5.37863826751709
    9. 'isée' → logprob: -5.87863826751709
    10. '```' → logprob: -6.50363826751709

Token 52: ' du' (ID: 1462)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.3166073262691498
    2. '   ' → logprob: -1.8166073560714722
    3. ' :
' → logprob: -2.6916072368621826
    4. ' ' → logprob: -4.191607475280762
    5. ':' → logprob: -4.191607475280762
    6. ' de' → logprob: -5.441607475280762
    7. ':
' → logprob: -7.066607475280762
    8. '  ' → logprob: -7.191607475280762
    9. ' du' → logprob: -7.191607475280762
    10. '(n' → logprob: -7.316607475280762

Token 53: ' cr' (ID: 1769)
  Prédit: ' cr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cr' → logprob: -0.010989692993462086
    2. ' "' → logprob: -5.135989665985107
    3. ' sieve' → logprob: -6.385989665985107
    4. ' Cr' → logprob: -7.385989665985107
    5. '   ' → logprob: -7.510989665985107
    6. ' S' → logprob: -7.760989665985107
    7. ' sie' → logprob: -7.885989665985107
    8. ' '' → logprob: -8.385990142822266
    9. 's' → logprob: -8.635990142822266
    10. 'é' → logprob: -9.010990142822266

Token 54: 'ible' (ID: 1430)
  Prédit: 'ible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ible' → logprob: -0.0009687491692602634
    2. 'ibl' → logprob: -7.875968933105469
    3. 'ib' → logprob: -8.250968933105469
    4. 'iv' → logprob: -9.000968933105469
    5. 'i' → logprob: -9.500968933105469
    6. '```' → logprob: -10.500968933105469
    7. '   ' → logprob: -11.500968933105469
    8. '  ' → logprob: -11.750968933105469
    9. 'ive' → logprob: -11.750968933105469
    10. 'ivé' → logprob: -11.750968933105469

Token 55: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5619956254959106
    2. ' d' → logprob: -1.0619956254959106
    3. 's' → logprob: -3.561995506286621
    4. 'é' → logprob: -3.811995506286621
    5. ' ' → logprob: -4.311995506286621
    6. 'e' → logprob: -5.811995506286621
    7. '   ' → logprob: -5.936995506286621
    8. ' de' → logprob: -6.061995506286621
    9. 'er' → logprob: -6.561995506286621
    10. ' É' → logprob: -6.561995506286621

Token 56: ''É' (ID: 87944)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.1966830939054489
    2. 'É' → logprob: -2.446683168411255
    3. ''É' → logprob: -2.446683168411255
    4. 'Er' → logprob: -5.821682929992676
    5. '’É' → logprob: -6.946682929992676
    6. 'S' → logprob: -7.696682929992676
    7. ''E' → logprob: -7.946682929992676
    8. '埃' → logprob: -8.321682929992676
    9. '```' → logprob: -10.196682929992676
    10. 'é' → logprob: -10.321682929992676

Token 57: 'rat' (ID: 11990)
  Prédit: 'rat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rat' → logprob: -0.0027889462653547525
    2. 'r' → logprob: -6.00278902053833
    3. 'rast' → logprob: -9.502788543701172
    4. '**' → logprob: -9.627788543701172
    5. 'rats' → logprob: -9.627788543701172
    6. 'R' → logprob: -11.252788543701172
    7. '
' → logprob: -11.252788543701172
    8. 'ras' → logprob: -11.377788543701172
    9. 'рат' → logprob: -11.377788543701172
    10. '```' → logprob: -11.627788543701172

Token 58: 'ost' (ID: 564)
  Prédit: 'ost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ost' → logprob: -0.02459239959716797
    2. 'os' → logprob: -3.899592399597168
    3. ' ost' → logprob: -5.899592399597168
    4. 'h' → logprob: -7.274592399597168
    5. 'o' → logprob: -9.524592399597168
    6. 'ö' → logprob: -10.024592399597168
    7. 'osten' → logprob: -10.149592399597168
    8. 'ose' → logprob: -10.274592399597168
    9. 'osest' → logprob: -10.524592399597168
    10. ' os' → logprob: -10.649592399597168

Token 59: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.00014847563579678535
    2. '<h' → logprob: -10.50014877319336
    3. 'ost' → logprob: -11.00014877319336
    4. 'o' → logprob: -11.50014877319336
    5. '**' → logprob: -11.50014877319336
    6. '' → logprob: -12.00014877319336
    7. 'ot' → logprob: -12.00014877319336
    8. '
' → logprob: -12.12514877319336
    9. '#' → logprob: -12.25014877319336
    10. 'oth' → logprob: -12.25014877319336

Token 60: 'ène' (ID: 22902)
  Prédit: 'ène'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ène' → logprob: -0.03711218386888504
    2. 'ene' → logprob: -4.037112236022949
    3. '`' → logprob: -4.787112236022949
    4. '#' → logprob: -6.162112236022949
    5. 'ènes' → logprob: -6.162112236022949
    6. '{' → logprob: -7.412112236022949
    7. 'enes' → logprob: -7.412112236022949
    8. '=' → logprob: -7.787112236022949
    9. '```' → logprob: -7.912112236022949
    10. '**' → logprob: -8.16211223602295

Token 61: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2643834054470062
    2. '
' → logprob: -2.389383316040039
    3. '    
' → logprob: -3.639383316040039
    4. '\n' → logprob: -3.764383316040039
    5. '"""
' → logprob: -4.139383316040039
    6. '```' → logprob: -4.264383316040039
    7. '  
' → logprob: -4.639383316040039
    8. ' 
' → logprob: -4.639383316040039
    9. '.' → logprob: -4.639383316040039
    10. ':' → logprob: -5.389383316040039

Token 62: ' une' (ID: 2463)
  Prédit: ' mar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mar' → logprob: -0.22040843963623047
    2. ' trouver' → logprob: -2.3454084396362305
    3. ' identifier' → logprob: -2.8454084396362305
    4. ' déterminer' → logprob: -4.4704084396362305
    5. ' détect' → logprob: -4.7204084396362305
    6. ' élim' → logprob: -5.5954084396362305
    7. ' optimiser' → logprob: -5.9704084396362305
    8. 'identifier' → logprob: -6.2204084396362305
    9. ' filtr' → logprob: -6.2204084396362305
    10. ' améliorer' → logprob: -6.3454084396362305

Token 63: ' efficacité' (ID: 162480)
  Prédit: ' efficacité'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' efficacité' → logprob: -1.3974955081939697
    2. ' effic' → logprob: -2.1474955081939697
    3. 'impl' → logprob: -2.3974955081939697
    4. ' version' → logprob: -2.6474955081939697
    5. ' méthode' → logprob: -2.6474955081939697
    6. ' impl' → logprob: -2.7724955081939697
    7. ' ' → logprob: -2.8974955081939697
    8. ' implementation' → logprob: -3.0224955081939697
    9. 'e' → logprob: -3.2724955081939697
    10. ' meilleure' → logprob: -3.5224955081939697

Token 64: ' optimale' (ID: 72604)
  Prédit: ' optimale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' optimale' → logprob: -0.7255399823188782
    2. ' maximale' → logprob: -1.3505399227142334
    3. '.' → logprob: -1.6005399227142334
    4. ' du' → logprob: -4.1005401611328125
    5. '.
' → logprob: -4.4755401611328125
    6. ' optim' → logprob: -5.3505401611328125
    7. ' de' → logprob: -5.8505401611328125
    8. ' optimal' → logprob: -5.9755401611328125
    9. '   ' → logprob: -6.1005401611328125
    10. ' maximum' → logprob: -6.6005401611328125

Token 65: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3417419195175171
    2. '.' → logprob: -1.716741919517517
    3. '
' → logprob: -2.9667420387268066
    4. '.
' → logprob: -3.7167420387268066
    5. '"""
' → logprob: -5.216742038726807
    6. '```' → logprob: -5.216742038726807
    7. '\n' → logprob: -5.466742038726807
    8. ':' → logprob: -5.591742038726807
    9. '    
' → logprob: -5.841742038726807
    10. ' ' → logprob: -6.091742038726807

Token 66: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10859491676092148
    2. '
' → logprob: -2.8585948944091797
    3. '"""
' → logprob: -3.6085948944091797
    4. '"""' → logprob: -4.35859489440918
    5. '\n' → logprob: -6.35859489440918
    6. '```' → logprob: -6.48359489440918
    7. '    
' → logprob: -7.10859489440918
    8. '"' → logprob: -7.73359489440918
    9. ' """
' → logprob: -8.35859489440918
    10. 'n' → logprob: -8.48359489440918

Token 67: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22241735458374023
    2. '\n' → logprob: -2.5974173545837402
    3. '"""
' (adapté à ' """
') → logprob: -2.9724173545837402
    4. '
' → logprob: -3.7224173545837402
    5. '"""' → logprob: -4.09741735458374
    6. '    
' → logprob: -4.47241735458374
    7. '```' → logprob: -4.72241735458374
    8. '  
' → logprob: -5.09741735458374
    9. ' 
' → logprob: -6.09741735458374
    10. '   
' → logprob: -6.47241735458374

Token 68: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.043526604771614075
    2. '    
' → logprob: -4.543526649475098
    3. 'pr' → logprob: -4.668526649475098
    4. ' primes' → logprob: -5.168526649475098
    5. 'prime' → logprob: -5.168526649475098
    6. 'n' → logprob: -5.668526649475098
    7. '
' → logprob: -6.293526649475098
    8. ' sieve' → logprob: -6.543526649475098
    9. ' 
' → logprob: -7.293526649475098
    10. 'p' → logprob: -7.418526649475098

Token 69: ' primes' (ID: 104042)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9340909123420715
    2. ' primes' → logprob: -1.5590908527374268
    3. 'prime' → logprob: -1.6840908527374268
    4. 'pr' → logprob: -2.1840908527374268
    5. ' is' → logprob: -3.0590908527374268
    6. ' prime' → logprob: -3.6840908527374268
    7. ' sieve' → logprob: -4.434091091156006
    8. 'is' → logprob: -4.434091091156006
    9. ' primal' → logprob: -6.934091091156006
    10. 's' → logprob: -8.059090614318848

Token 70: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01119577419012785
    2. '=' → logprob: -4.511195659637451
    3. '[' → logprob: -8.88619613647461
    4. '[]' → logprob: -13.01119613647461
    5. ' =[' → logprob: -13.26119613647461
    6. '=[' → logprob: -13.51119613647461
    7. '[:]' → logprob: -13.51119613647461
    8. ' ' → logprob: -14.01119613647461
    9. 's' → logprob: -14.26119613647461
    10. '   ' → logprob: -15.01119613647461

Token 71: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6934017539024353
    2. ' [' → logprob: -0.6934017539024353
    3. '[n' → logprob: -8.318401336669922
    4. '   ' → logprob: -12.943401336669922
    5. ' ' → logprob: -13.068401336669922
    6. ' ' → logprob: -14.068401336669922
    7. '[start' → logprob: -14.068401336669922
    8. '[num' → logprob: -14.568401336669922
    9. '[s' → logprob: -14.693401336669922
    10. '[class' → logprob: -14.693401336669922

Token 72: 'True' (ID: 4710)
  Prédit: 'True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.061970602720975876
    2. ' True' → logprob: -2.8119707107543945
    3. '   ' → logprob: -13.436970710754395
    4. '(True' → logprob: -14.061970710754395
    5. 'Tr' → logprob: -14.436970710754395
    6. 'False' → logprob: -15.561970710754395
    7. '    ' → logprob: -18.436969757080078
    8. '=True' → logprob: -18.561969757080078
    9. ' Tru' → logprob: -18.561969757080078
    10. ' Tr' → logprob: -19.186969757080078

Token 73: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.26615285873413086
    2. ' for' → logprob: -1.5161528587341309
    3. ' ]' → logprob: -5.141152858734131
    4. ',' → logprob: -5.266152858734131
    5. 'for' → logprob: -7.266152858734131
    6. '   ' → logprob: -7.391152858734131
    7. '<|end|>' → logprob: -7.391152858734131
    8. ')' → logprob: -8.016153335571289
    9. '<|end|>' → logprob: -8.391153335571289
    10. '[' → logprob: -8.391153335571289

Token 74: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.08852799981832504
    2. ',' → logprob: -2.9635279178619385
    3. ']' → logprob: -3.9635279178619385
    4. 'for' → logprob: -4.838528156280518
    5. ' ' → logprob: -5.963528156280518
    6. '[' → logprob: -6.213528156280518
    7. '   ' → logprob: -7.713528156280518
    8. ')' → logprob: -7.963528156280518
    9. ' ]' → logprob: -8.58852767944336
    10. '<|end|>' → logprob: -9.08852767944336

Token 75: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.08918165415525436
    2. ' (' → logprob: -2.464181661605835
    3. '(' → logprob: -8.839181900024414
    4. 'n' → logprob: -9.339181900024414
    5. ' n' → logprob: -11.964181900024414
    6. '(max' → logprob: -14.089181900024414
    7. ' ' → logprob: -14.464181900024414
    8. '((' → logprob: -14.964181900024414
    9. '(len' → logprob: -15.214181900024414
    10. '(
' → logprob: -15.589181900024414

Token 76: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -7.696077227592468e-05
    2. ' n' → logprob: -9.500077247619629
    3. '(n' → logprob: -13.125077247619629
    4. '   ' → logprob: -16.875076293945312
    5. '	n' → logprob: -17.625076293945312
    6. ' (' → logprob: -17.750076293945312
    7. '
' → logprob: -18.875076293945312
    8. ')n' → logprob: -19.375076293945312
    9. ' ' → logprob: -19.750076293945312
    10. '(' → logprob: -20.000076293945312

Token 77: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.005233882926404476
    2. ' +' → logprob: -5.2552337646484375
    3. ' plus' → logprob: -16.630233764648438
    4. '+
' → logprob: -16.630233764648438
    5. ' ' → logprob: -17.005233764648438
    6. ' +
' → logprob: -18.380233764648438
    7. '+

' → logprob: -18.755233764648438
    8. '＋' → logprob: -18.880233764648438
    9. 'plus' → logprob: -19.755233764648438
    10. ' +
' → logprob: -20.380233764648438

Token 78: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011047935113310814
    2. ' ' → logprob: -4.511047840118408
    3. '```' → logprob: -16.63604736328125
    4. ')' → logprob: -16.88604736328125
    5. '2' → logprob: -17.13604736328125
    6. ' ' → logprob: -17.51104736328125
    7. '7' → logprob: -18.26104736328125
    8. '  ' → logprob: -18.51104736328125
    9. ' )' → logprob: -18.69854736328125
    10. '１' → logprob: -18.82354736328125

Token 79: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.700132997939363e-05
    2. ' ' → logprob: -11.000017166137695
    3. ')' → logprob: -15.250017166137695
    4. '```' → logprob: -18.125017166137695
    5. '0' → logprob: -19.000017166137695
    6. '  ' → logprob: -19.687517166137695
    7. '１' → logprob: -20.000017166137695
    8. '   ' → logprob: -20.062517166137695
    9. '

' → logprob: -20.250017166137695
    10. '۱' → logprob: -20.687517166137695

Token 80: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.505351095460355e-05
    2. ')
' → logprob: -10.250075340270996
    3. ']' → logprob: -10.875075340270996
    4. '[' → logprob: -11.875075340270996
    5. ' )' → logprob: -12.125075340270996
    6. '   ' → logprob: -12.750075340270996
    7. '),' → logprob: -14.500075340270996
    8. '`)' → logprob: -14.750075340270996
    9. '#' → logprob: -14.875075340270996
    10. ')n' → logprob: -15.000075340270996

Token 81: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4720010757446289
    2. 'pr' → logprob: -1.222001075744629
    3. '   ' → logprob: -3.222001075744629
    4. '    
' → logprob: -3.972001075744629
    5. ' primes' → logprob: -4.722001075744629
    6. ' 
' → logprob: -4.847001075744629
    7. '  
' → logprob: -6.097001075744629
    8. '   
' → logprob: -6.972001075744629
    9. '	pr' → logprob: -7.597001075744629
    10. '\n' → logprob: -7.597001075744629

Token 82: ' primes' (ID: 104042)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.021943530067801476
    2. 'p' → logprob: -3.8969435691833496
    3. ' primes' → logprob: -7.39694356918335
    4. '   ' → logprob: -7.89694356918335
    5. '    
' → logprob: -8.646943092346191
    6. 'pri' → logprob: -9.521943092346191
    7. '	pr' → logprob: -9.896943092346191
    8. ' 
' → logprob: -10.521943092346191
    9. '   
' → logprob: -11.146943092346191
    10. ' p' → logprob: -11.271943092346191

Token 83: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.128163257315464e-07
    2. ' [' → logprob: -16.125
    3. '\[' → logprob: -17.125
    4. '```' → logprob: -18.0
    5. '[:' → logprob: -18.875
    6. '[...]' → logprob: -19.0
    7. '[:]' → logprob: -19.0
    8. '   ' → logprob: -19.0
    9. '[
' → logprob: -19.75
    10. ' ' → logprob: -19.875

Token 84: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000555416801944375
    2. ' ' → logprob: -7.500555515289307
    3. '  ' → logprob: -14.375555038452148
    4. ':' → logprob: -14.500555038452148
    5. '   ' → logprob: -14.500555038452148
    6. ')' → logprob: -16.12555503845215
    7. '-' → logprob: -16.25055503845215
    8. ' :' → logprob: -16.37555503845215
    9. '00' → logprob: -16.37555503845215
    10. '۰' → logprob: -16.37555503845215

Token 85: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.020556366071105003
    2. ' ]' → logprob: -3.8955564498901367
    3. ']=' → logprob: -11.770556449890137
    4. '=' → logprob: -12.645556449890137
    5. ' =' → logprob: -13.395556449890137
    6. ' ' → logprob: -13.770556449890137
    7. '],' → logprob: -15.395556449890137
    8. ')' → logprob: -15.645556449890137
    9. '']' → logprob: -15.895556449890137
    10. ',' → logprob: -16.14555549621582

Token 86: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0025430822279304266
    2. ' ' → logprob: -6.502542972564697
    3. '=' → logprob: -6.877542972564697
    4. ' =
' → logprob: -12.002543449401855
    5. ',' → logprob: -13.252543449401855
    6. ' =
' → logprob: -14.627543449401855
    7. '<|end|>' → logprob: -15.002543449401855
    8. '=False' → logprob: -15.252543449401855
    9. ' ]' → logprob: -16.00254249572754
    10. ']' → logprob: -16.25254249572754

Token 87: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.1269536167383194
    2. ' False' → logprob: -2.126953601837158
    3. 'F' → logprob: -10.626954078674316
    4. ' F' → logprob: -14.751954078674316
    5. 'Fa' → logprob: -15.626954078674316
    6. 'Falsy' → logprob: -15.751954078674316
    7. '.False' → logprob: -15.751954078674316
    8. ' ' → logprob: -15.876954078674316
    9. '(False' → logprob: -16.126953125
    10. '=False' → logprob: -16.251953125

Token 88: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5548712611198425
    2. '<|end|>' → logprob: -1.0548713207244873
    3. '
' → logprob: -3.1798713207244873
    4. 'pr' → logprob: -4.929871082305908
    5. '    
' → logprob: -5.054871082305908
    6. ' ' → logprob: -5.304871082305908
    7. '<|end|>' → logprob: -5.304871082305908
    8. ' primes' → logprob: -5.679871082305908
    9. ' 
' → logprob: -5.929871082305908
    10. '	pr' → logprob: -6.304871082305908

Token 89: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14250138401985168
    2. '<|end|>' → logprob: -2.5175013542175293
    3. '
' → logprob: -4.142501354217529
    4. '    
' → logprob: -4.267501354217529
    5. ' ' → logprob: -4.892501354217529
    6. '  ' → logprob: -5.517501354217529
    7. ' 
' → logprob: -5.642501354217529
    8. '   
' → logprob: -6.392501354217529
    9. '    ' → logprob: -6.517501354217529
    10. '  
' → logprob: -6.642501354217529

Token 90: ' primes' (ID: 104042)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.05611693114042282
    2. '   ' → logprob: -3.056116819381714
    3. ' primes' → logprob: -4.931117057800293
    4. '	pr' → logprob: -9.181117057800293
    5. '    
' → logprob: -9.431117057800293
    6. '    ' → logprob: -10.556117057800293
    7. ' pr' → logprob: -10.806117057800293
    8. '   
' → logprob: -11.056117057800293
    9. ' 
' → logprob: -11.181117057800293
    10. '  ' → logprob: -11.806117057800293

Token 91: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3902033970225602e-05
    2. '1' → logprob: -12.125014305114746
    3. '<|end|>' → logprob: -12.125014305114746
    4. ' [' → logprob: -13.125014305114746
    5. '[
' → logprob: -14.250014305114746
    6. '<|end|>' → logprob: -15.625014305114746
    7. ' ' → logprob: -16.37501335144043
    8. '\[' → logprob: -16.50001335144043
    9. '```' → logprob: -16.87501335144043
    10. '][' → logprob: -18.18751335144043

Token 92: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7729658540920354e-05
    2. ' ' → logprob: -10.500027656555176
    3. '<|end|>' → logprob: -16.500028610229492
    4. '  ' → logprob: -17.125028610229492
    5. '```' → logprob: -17.750028610229492
    6. '   ' → logprob: -18.312528610229492
    7. '    ' → logprob: -19.625028610229492
    8. '۱' → logprob: -19.937528610229492
    9. '2' → logprob: -20.000028610229492
    10. '<|end|>' → logprob: -20.125028610229492

Token 93: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011743424460291862
    2. ' =' → logprob: -4.886743545532227
    3. ' ]' → logprob: -5.886743545532227
    4. '=' → logprob: -6.636743545532227
    5. ']=' → logprob: -10.511743545532227
    6. ' ' → logprob: -11.636743545532227
    7. ')' → logprob: -12.386743545532227
    8. '']' → logprob: -14.761743545532227
    9. '[' → logprob: -15.011743545532227
    10. '}' → logprob: -16.011743545532227

Token 94: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.003179259831085801
    2. '=' → logprob: -5.75317907333374
    3. ' ' → logprob: -13.503179550170898
    4. '=False' → logprob: -16.3781795501709
    5. ' =
' → logprob: -16.8781795501709
    6. ' =
' → logprob: -19.2531795501709
    7. ' =)' → logprob: -19.2531795501709
    8. ' ' → logprob: -19.5031795501709
    9. ')' → logprob: -19.8781795501709
    10. ']' → logprob: -20.1281795501709

Token 95: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.12692831456661224
    2. ' False' → logprob: -2.1269283294677734
    3. '(False' → logprob: -15.626928329467773
    4. '=False' → logprob: -17.626928329467773
    5. '_false' → logprob: -18.376928329467773
    6. '.False' → logprob: -18.376928329467773
    7. '_FALSE' → logprob: -21.001928329467773
    8. '<|end|>' → logprob: -22.751928329467773
    9. '[' → logprob: -22.876928329467773
    10. 'false' → logprob: -22.876928329467773

Token 96: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.002842080080881715
    2. '   ' → logprob: -6.377841949462891
    3. '    
' → logprob: -7.377841949462891
    4. ' 
' → logprob: -8.00284194946289
    5. '  
' → logprob: -9.25284194946289
    6. ' for' → logprob: -10.12784194946289
    7. '
' → logprob: -11.12784194946289
    8. '   
' → logprob: -11.37784194946289
    9. 'for' → logprob: -11.87784194946289
    10. '\n' → logprob: -12.62784194946289

Token 97: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2680882215499878
    2. '   ' → logprob: -2.3930883407592773
    3. '    
' → logprob: -2.3930883407592773
    4. ' 
' → logprob: -3.1430883407592773
    5. '  
' → logprob: -5.393088340759277
    6. '   
' → logprob: -5.893088340759277
    7. ' for' → logprob: -6.518088340759277
    8. 'for' → logprob: -8.143088340759277
    9. '\n' → logprob: -9.643088340759277
    10. '     
' → logprob: -9.893088340759277

Token 98: ' limit' (ID: 5967)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5351818799972534
    2. ' for' → logprob: -1.4101818799972534
    3. '
' → logprob: -2.410181999206543
    4. '   ' → logprob: -3.410181999206543
    5. 'i' → logprob: -4.160181999206543
    6. ' 
' → logprob: -4.410181999206543
    7. '    
' → logprob: -4.535181999206543
    8. ' i' → logprob: -4.910181999206543
    9. '  
' → logprob: -7.035181999206543
    10. '   
' → logprob: -7.785181999206543

Token 99: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00193149340339005
    2. '=' → logprob: -6.251931667327881
    3. ' ' → logprob: -13.251931190490723
    4. '=int' → logprob: -14.501931190490723
    5. ' ' → logprob: -14.626931190490723
    6. '   ' → logprob: -16.62693214416504
    7. '_' → logprob: -17.12693214416504
    8. '  ' → logprob: -17.50193214416504
    9. '	' → logprob: -17.75193214416504
    10. ' =
' → logprob: -17.87693214416504

Token 100: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.038688067346811295
    2. 'int' → logprob: -3.2886881828308105
    3. ' math' → logprob: -7.4136881828308105
    4. '	int' → logprob: -10.663687705993652
    5. 'math' → logprob: -11.038687705993652
    6. ' ' → logprob: -13.288687705993652
    7. '(int' → logprob: -13.788687705993652
    8. '   ' → logprob: -15.038687705993652
    9. ' in' → logprob: -15.288687705993652
    10. ' i' → logprob: -15.663687705993652

Token 101: '(math' (ID: 86464)
  Prédit: '(math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(math' → logprob: -0.034114718437194824
    2. '(n' → logprob: -3.7841148376464844
    3. '(' → logprob: -4.534114837646484
    4. 'math' → logprob: -10.534114837646484
    5. ' (' → logprob: -11.034114837646484
    6. '(s' → logprob: -11.159114837646484
    7. ' math' → logprob: -11.284114837646484
    8. '(pow' → logprob: -13.784114837646484
    9. '((' → logprob: -14.409114837646484
    10. '(mat' → logprob: -14.409114837646484

Token 102: '.sqrt' (ID: 38011)
  Prédit: '.sqrt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sqrt' → logprob: -0.1603880226612091
    2. '.' → logprob: -1.9103879928588867
    3. '.s' → logprob: -8.910387992858887
    4. '.Sqrt' → logprob: -11.285387992858887
    5. '.math' → logprob: -12.535387992858887
    6. ' .' → logprob: -12.785387992858887
    7. '.n' → logprob: -12.910387992858887
    8. 'sqrt' → logprob: -13.035387992858887
    9. '.ceil' → logprob: -14.160387992858887
    10. 's' → logprob: -14.285387992858887

Token 103: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0010786604834720492
    2. '(' → logprob: -7.5010786056518555
    3. 'n' → logprob: -8.001078605651855
    4. ' (' → logprob: -8.626078605651855
    5. ' n' → logprob: -11.751078605651855
    6. ')' → logprob: -13.501078605651855
    7. ')n' → logprob: -14.001078605651855
    8. '(
' → logprob: -14.376078605651855
    9. ')(' → logprob: -15.876078605651855
    10. ' ' → logprob: -16.251079559326172

Token 104: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.010613854974508286
    2. ')' → logprob: -4.635613918304443
    3. '(' → logprob: -8.010613441467285
    4. '))+' → logprob: -8.010613441467285
    5. '(n' → logprob: -8.885613441467285
    6. ' ))' → logprob: -10.260613441467285
    7. '()))' → logprob: -11.885613441467285
    8. ' ' → logprob: -12.135613441467285
    9. ')))' → logprob: -12.635613441467285
    10. ' )' → logprob: -13.510613441467285

Token 105: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5760282278060913
    2. '+' → logprob: -0.8260282278060913
    3. '+
' → logprob: -9.951027870178223
    4. ' +
' → logprob: -10.201027870178223
    5. '   ' → logprob: -12.826027870178223
    6. ')+' → logprob: -14.576027870178223
    7. ' ' → logprob: -15.451027870178223
    8. ')' → logprob: -15.701027870178223
    9. '()+' → logprob: -16.45102882385254
    10. '+i' → logprob: -16.70102882385254

Token 106: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007104054093360901
    2. ' ' → logprob: -7.250710487365723
    3. '   ' → logprob: -15.000710487365723
    4. '2' → logprob: -16.125709533691406
    5. '(' → logprob: -17.000709533691406
    6. '```' → logprob: -17.250709533691406
    7. '  ' → logprob: -18.375709533691406
    8. '    ' → logprob: -18.750709533691406
    9. '۱' → logprob: -19.375709533691406
    10. ' ' → logprob: -19.500709533691406

Token 107: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '```' → logprob: -20.12500762939453
    4. '   ' → logprob: -20.62500762939453
    5. '۱' → logprob: -21.25000762939453
    6. '１' → logprob: -21.37500762939453
    7. '  ' → logprob: -21.50000762939453
    8. '    ' → logprob: -21.62500762939453
    9. '2' → logprob: -22.00000762939453
    10. '(' → logprob: -22.50000762939453

Token 108: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2386331856250763
    2. '   ' → logprob: -1.863633155822754
    3. '    
' → logprob: -3.488633155822754
    4. ' for' → logprob: -4.488633155822754
    5. 'for' → logprob: -4.738633155822754
    6. '  
' → logprob: -5.863633155822754
    7. ' 
' → logprob: -6.863633155822754
    8. '\n' → logprob: -6.988633155822754
    9. '' → logprob: -7.363633155822754
    10. '   
' → logprob: -7.988633155822754

Token 109: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1214900091290474
    2. '   ' → logprob: -2.246490001678467
    3. '    
' → logprob: -5.246490001678467
    4. ' for' → logprob: -5.996490001678467
    5. '  
' → logprob: -7.496490001678467
    6. 'for' → logprob: -8.746490478515625
    7. ' 
' → logprob: -9.871490478515625
    8. '	for' → logprob: -10.371490478515625
    9. '   
' → logprob: -10.621490478515625
    10. '<|end|>' → logprob: -11.121490478515625

Token 110: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18280352652072906
    2. '
' → logprob: -1.9328035116195679
    3. ' for' → logprob: -4.432803630828857
    4. 'for' (adapté à ' for') → logprob: -5.182803630828857
    5. '    
' → logprob: -5.432803630828857
    6. '	for' → logprob: -7.807803630828857
    7. '	
' → logprob: -10.4328031539917
    8. ' 
' → logprob: -11.8078031539917
    9. '  
' → logprob: -11.9328031539917
    10. '   
' → logprob: -12.6828031539917

Token 111: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0029467977583408356
    2. ' ' → logprob: -5.877946853637695
    3. 'i' → logprob: -9.002946853637695
    4. ' p' → logprob: -11.127946853637695
    5. ' _' → logprob: -13.502946853637695
    6. '  ' → logprob: -14.127946853637695
    7. '	i' → logprob: -14.627946853637695
    8. ' (' → logprob: -15.002946853637695
    9. ' space' → logprob: -15.377946853637695
    10. ' range' → logprob: -15.377946853637695

Token 112: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0011493867496028543
    2. 'in' → logprob: -7.0011491775512695
    3. ' ' → logprob: -8.37614917755127
    4. ' i' → logprob: -12.75114917755127
    5. '  ' → logprob: -13.37614917755127
    6. 'range' → logprob: -14.62614917755127
    7. '	in' → logprob: -14.75114917755127
    8. ',' → logprob: -15.00114917755127
    9. '   ' → logprob: -15.12614917755127
    10. '1' → logprob: -15.75114917755127

Token 113: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0031784253660589457
    2. 'range' → logprob: -5.753178596496582
    3. ' ' → logprob: -15.253178596496582
    4. '	range' → logprob: -15.253178596496582
    5. '(range' → logprob: -16.503177642822266
    6. '2' → logprob: -16.878177642822266
    7. ' xrange' → logprob: -16.878177642822266
    8. 'Range' → logprob: -17.753177642822266
    9. '.range' → logprob: -17.878177642822266
    10. 'ange' → logprob: -18.753177642822266

Token 114: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00014799882774241269
    2. '2' → logprob: -9.250147819519043
    3. ' (' → logprob: -9.875147819519043
    4. ' ' → logprob: -14.875147819519043
    5. '(
' → logprob: -17.75014877319336
    6. ')' → logprob: -18.50014877319336
    7. '    ' → logprob: -19.25014877319336
    8. '```' → logprob: -19.37514877319336
    9. '3' → logprob: -19.50014877319336
    10. '1' → logprob: -19.50014877319336

Token 115: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001681405701674521
    2. ' ' → logprob: -8.750167846679688
    3. '   ' → logprob: -11.750167846679688
    4. '    ' → logprob: -14.375167846679688
    5. 'limit' → logprob: -14.375167846679688
    6. '

' → logprob: -16.625167846679688
    7. '  ' → logprob: -16.625167846679688
    8. '	' → logprob: -17.000167846679688
    9. '     ' → logprob: -17.000167846679688
    10. '(' → logprob: -17.250167846679688

Token 116: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023246407508850098
    2. ' ,' → logprob: -3.7732462882995605
    3. ' ' → logprob: -14.273246765136719
    4. ' )' → logprob: -16.89824676513672
    5. ',n' → logprob: -18.02324676513672
    6. ')' → logprob: -18.14824676513672
    7. ',len' → logprob: -18.14824676513672
    8. ' ,
' → logprob: -18.27324676513672
    9. ' ,

' → logprob: -18.64824676513672
    10. '‌,' → logprob: -19.02324676513672

Token 117: ' limit' (ID: 5967)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.3868740200996399
    2. ' limit' → logprob: -1.1368739604949951
    3. '    ' → logprob: -13.136874198913574
    4. '(limit' → logprob: -14.511874198913574
    5. 'lim' → logprob: -15.136874198913574
    6. '   ' → logprob: -16.261873245239258
    7. ' ' → logprob: -16.636873245239258
    8. '_limit' → logprob: -17.011873245239258
    9. '.limit' → logprob: -18.136873245239258
    10. '-limit' → logprob: -18.386873245239258

Token 118: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0017200425500050187
    2. ' ):' → logprob: -6.876719951629639
    3. ')' → logprob: -7.501719951629639
    4. '):
' → logprob: -9.001720428466797
    5. ':' → logprob: -11.501720428466797
    6. ' )' → logprob: -14.251720428466797
    7. ' :' → logprob: -15.126720428466797
    8. ' ):
' → logprob: -15.501720428466797
    9. '):
' → logprob: -16.001720428466797
    10. '+' → logprob: -16.251720428466797

Token 119: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007322643883526325
    2. '   ' → logprob: -5.632322788238525
    3. '        
' → logprob: -6.632322788238525
    4. '    
' → logprob: -7.257322788238525
    5. ':' → logprob: -7.757322788238525
    6. '    ' → logprob: -8.132322311401367
    7. ' 
' → logprob: -8.382322311401367
    8. ' if' → logprob: -8.507322311401367
    9. '  
' → logprob: -9.382322311401367
    10. '
' → logprob: -9.507322311401367

Token 120: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.40967029333114624
    2. 'if' (adapté à ' if') → logprob: -1.784670352935791
    3. '       ' → logprob: -2.534670352935791
    4. ' ' → logprob: -3.159670352935791
    5. ' 
' → logprob: -3.909670352935791
    6. '    ' → logprob: -4.409670352935791
    7. '   ' → logprob: -5.284670352935791
    8. '        
' → logprob: -5.909670352935791
    9. '     
' → logprob: -6.159670352935791
    10. '    
' → logprob: -6.534670352935791

Token 121: ' primes' (ID: 104042)
  Prédit: ' primes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' primes' → logprob: -0.00021366903092712164
    2. 'pr' → logprob: -8.625213623046875
    3. ' ' → logprob: -11.250213623046875
    4. ' ' → logprob: -11.500213623046875
    5. '	pr' → logprob: -11.625213623046875
    6. ' prime' → logprob: -14.250213623046875
    7. ' pr' → logprob: -15.000213623046875
    8. 'prime' → logprob: -15.250213623046875
    9. ' prim' → logprob: -15.875213623046875
    10. '(pr' → logprob: -16.375213623046875

Token 122: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.004079112783074379
    2. '[' → logprob: -5.504079341888428
    3. '[I' → logprob: -15.50407886505127
    4. ' [' → logprob: -16.629079818725586
    5. '[
' → logprob: -16.754079818725586
    6. '```' → logprob: -17.004079818725586
    7. '[s' → logprob: -17.129079818725586
    8. '\[' → logprob: -17.379079818725586
    9. '[...]' → logprob: -17.629079818725586
    10. ' ' → logprob: -17.754079818725586

Token 123: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06504365056753159
    2. ']:' → logprob: -2.8150436878204346
    3. ':' → logprob: -6.4400434494018555
    4. ' ):' → logprob: -6.9400434494018555
    5. ']' → logprob: -8.690043449401855
    6. ')' → logprob: -8.690043449401855
    7. '):
' → logprob: -9.565043449401855
    8. ']):' → logprob: -10.315043449401855
    9. '=' → logprob: -10.940043449401855
    10. '[' → logprob: -11.065043449401855

Token 124: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1278233528137207
    2. '       ' → logprob: -2.6278233528137207
    3. ' for' → logprob: -4.377823352813721
    4. ':' → logprob: -4.502823352813721
    5. '        
' → logprob: -4.877823352813721
    6. '        ' → logprob: -5.252823352813721
    7. 'for' → logprob: -5.752823352813721
    8. '            
' → logprob: -6.127823352813721
    9. ' 
' → logprob: -6.377823352813721
    10. '
' → logprob: -6.752823352813721

Token 125: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.10710462182760239
    2. 'for' (adapté à ' for') → logprob: -2.357104539871216
    3. '   ' → logprob: -6.107104778289795
    4. '       ' → logprob: -6.232104778289795
    5. ' j' → logprob: -6.607104778289795
    6. '    ' → logprob: -7.482104778289795
    7. 'j' → logprob: -7.982104778289795
    8. ' ' → logprob: -7.982104778289795
    9. '  ' → logprob: -10.982104301452637
    10. ' ' → logprob: -11.357104301452637

Token 126: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.009599893353879452
    2. 'j' → logprob: -4.884599685668945
    3. ' ' → logprob: -6.259599685668945
    4. '    ' → logprob: -10.384599685668945
    5. '	j' → logprob: -11.009599685668945
    6. ' (' → logprob: -11.634599685668945
    7. '"' → logprob: -12.634599685668945
    8. ' i' → logprob: -13.009599685668945
    9. ' in' → logprob: -13.134599685668945
    10. ' ' → logprob: -13.509599685668945

Token 127: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01442650705575943
    2. 'in' → logprob: -4.2644267082214355
    3. ' i' → logprob: -8.764426231384277
    4. ' ' → logprob: -9.264426231384277
    5. '=' → logprob: -13.264426231384277
    6. '<|end|>' → logprob: -13.264426231384277
    7. 'n' → logprob: -13.639426231384277
    8. 'range' → logprob: -13.764426231384277
    9. '	in' → logprob: -14.014426231384277
    10. '    ' → logprob: -14.014426231384277

Token 128: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06197262182831764
    2. ' range' → logprob: -2.8119726181030273
    3. '	range' → logprob: -13.436972618103027
    4. 'i' → logprob: -13.811972618103027
    5. '(range' → logprob: -13.936972618103027
    6. '   ' → logprob: -14.436972618103027
    7. ' i' → logprob: -15.186972618103027
    8. ' ' → logprob: -15.436972618103027
    9. ' xrange' → logprob: -15.686972618103027
    10. 'ange' → logprob: -15.686972618103027

Token 129: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -5.931863051955588e-05
    2. '(' → logprob: -9.750059127807617
    3. ' (' → logprob: -14.625059127807617
    4. 'i' → logprob: -16.000059127807617
    5. ' i' → logprob: -16.125059127807617
    6. '(
' → logprob: -16.375059127807617
    7. '(j' → logprob: -16.875059127807617
    8. '(I' → logprob: -17.000059127807617
    9. ')' → logprob: -18.000059127807617
    10. '	i' → logprob: -18.125059127807617

Token 130: '*i' (ID: 51147)
  Prédit: '*i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*i' → logprob: -0.019326113164424896
    2. '*' → logprob: -4.269326210021973
    3. ' *' → logprob: -5.269326210021973
    4. ' ' → logprob: -14.144326210021973
    5. '*j' → logprob: -14.394326210021973
    6. '   ' → logprob: -14.894326210021973
    7. 'i' → logprob: -15.019326210021973
    8. ' i' → logprob: -16.269325256347656
    9. '**' → logprob: -16.394325256347656
    10. '*,' → logprob: -16.519325256347656

Token 131: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00046260483213700354
    2. ',n' → logprob: -7.750462532043457
    3. ' ,' → logprob: -10.375462532043457
    4. 'n' → logprob: -15.250462532043457
    5. '

' → logprob: -16.000463485717773
    6. ',
' → logprob: -16.625463485717773
    7. ',

' → logprob: -16.750463485717773
    8. '```' → logprob: -17.250463485717773
    9. ' n' → logprob: -17.750463485717773
    10. ',len' → logprob: -18.000463485717773

Token 132: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.31326642632484436
    2. 'n' → logprob: -1.313266396522522
    3. '	n' → logprob: -12.43826675415039
    4. '    ' → logprob: -15.18826675415039
    5. '   ' → logprob: -15.68826675415039
    6. ' ' → logprob: -15.93826675415039
    7. '(n' → logprob: -16.81326675415039
    8. ')n' → logprob: -16.93826675415039
    9. ' 
' → logprob: -18.43826675415039
    10. ' ' → logprob: -18.43826675415039

Token 133: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.018151111900806427
    2. ' +' → logprob: -4.01815128326416
    3. '+
' → logprob: -13.76815128326416
    4. '   ' → logprob: -16.268150329589844
    5. ' +
' → logprob: -16.768150329589844
    6. ' ' → logprob: -16.893150329589844
    7. '+,' → logprob: -18.018150329589844
    8. '+)' → logprob: -18.268150329589844
    9. '
' → logprob: -18.643150329589844
    10. '+j' → logprob: -18.768150329589844

Token 134: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.176947600673884e-05
    2. ' ' → logprob: -10.750021934509277
    3. ')' → logprob: -16.37502098083496
    4. '```' → logprob: -17.37502098083496
    5. ',' → logprob: -17.50002098083496
    6. '   ' → logprob: -17.62502098083496
    7. '+' → logprob: -19.00002098083496
    8. '
' → logprob: -19.00002098083496
    9. '１' → logprob: -19.25002098083496
    10. '

' → logprob: -19.37502098083496

Token 135: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00027492138906382024
    2. ' ,' → logprob: -8.250274658203125
    3. ',i' → logprob: -11.250274658203125
    4. '   ' → logprob: -15.250274658203125
    5. ',j' → logprob: -15.750274658203125
    6. ' i' → logprob: -16.000274658203125
    7. ')' → logprob: -16.625274658203125
    8. '),' → logprob: -18.000274658203125
    9. '```' → logprob: -18.250274658203125
    10. ',n' → logprob: -18.250274658203125

Token 136: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1602422147989273
    2. ' i' → logprob: -1.9102421998977661
    3. '	i' → logprob: -11.410242080688477
    4. ')' → logprob: -12.660242080688477
    5. ')i' → logprob: -13.285242080688477
    6. ' ' → logprob: -13.785242080688477
    7. '   ' → logprob: -14.535242080688477
    8. ' ' → logprob: -15.660242080688477
    9. '<|end|>' → logprob: -16.285242080688477
    10. ',i' → logprob: -16.285242080688477

Token 137: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003624546341598034
    2. '):
' → logprob: -5.628624439239502
    3. ')' → logprob: -10.87862491607666
    4. ' ):' → logprob: -13.00362491607666
    5. '):
' → logprob: -13.25362491607666
    6. ':' → logprob: -14.00362491607666
    7. '   ' → logprob: -15.25362491607666
    8. '):

' → logprob: -15.37862491607666
    9. '       ' → logprob: -17.003623962402344
    10. ',' → logprob: -17.003623962402344

Token 138: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.016685230657458305
    2. ' primes' → logprob: -4.6416850090026855
    3. 'pr' → logprob: -5.1416850090026855
    4. '                
' → logprob: -7.2666850090026855
    5. '           ' → logprob: -9.016685485839844
    6. '(pr' → logprob: -9.641685485839844
    7. '                   ' → logprob: -10.391685485839844
    8. ' 
' → logprob: -10.641685485839844
    9. '                ' → logprob: -10.766685485839844
    10. '	pr' → logprob: -10.891685485839844

Token 139: ' primes' (ID: 104042)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.0067550367675721645
    2. ' primes' → logprob: -5.0067548751831055
    3. ' pr' → logprob: -10.256754875183105
    4. '	pr' → logprob: -12.506754875183105
    5. '_pr' → logprob: -15.256754875183105
    6. 'prime' → logprob: -15.256754875183105
    7. '-pr' → logprob: -16.506755828857422
    8. 'pri' → logprob: -16.506755828857422
    9. 'Pr' → logprob: -16.631755828857422
    10. '(pr' → logprob: -17.006755828857422

Token 140: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.002482315758243203
    2. '[' → logprob: -6.0024824142456055
    3. '[i' → logprob: -12.627482414245605
    4. '[js' → logprob: -13.252482414245605
    5. '[J' → logprob: -14.252482414245605
    6. '```' → logprob: -15.127482414245605
    7. '][' → logprob: -15.627482414245605
    8. '[s' → logprob: -16.25248146057129
    9. ' [' → logprob: -16.37748146057129
    10. '\[' → logprob: -17.00248146057129

Token 141: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.000351670227246359
    2. ' ]' → logprob: -8.000351905822754
    3. ']=' → logprob: -11.250351905822754
    4. '=' → logprob: -13.000351905822754
    5. ' =' → logprob: -14.000351905822754
    6. ')' → logprob: -17.000350952148438
    7. ' ' → logprob: -17.125350952148438
    8. 'False' → logprob: -17.875350952148438
    9. '=False' → logprob: -18.125350952148438
    10. ']

' → logprob: -18.625350952148438

Token 142: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3134223222732544
    2. '=' → logprob: -1.3134223222732544
    3. '=False' → logprob: -8.938422203063965
    4. ']' → logprob: -10.563422203063965
    5. 'False' → logprob: -13.438422203063965
    6. ']=' → logprob: -14.063422203063965
    7. ')' → logprob: -14.688422203063965
    8. ' ' → logprob: -15.188422203063965
    9. ' False' → logprob: -15.688422203063965
    10. '<|end|>' → logprob: -15.813422203063965

Token 143: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.014163628220558167
    2. ' False' → logprob: -4.264163494110107
    3. '(False' → logprob: -16.639163970947266
    4. '=False' → logprob: -17.014163970947266
    5. '.False' → logprob: -18.889163970947266
    6. '_false' → logprob: -19.514163970947266
    7. 'F' → logprob: -21.389163970947266
    8. '_FALSE' → logprob: -22.639163970947266
    9. 'Falsy' → logprob: -22.764163970947266
    10. 'True' → logprob: -23.139163970947266

Token 144: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16280710697174072
    2. '   ' → logprob: -2.162806987762451
    3. '\n' → logprob: -3.912806987762451
    4. '    
' → logprob: -5.287806987762451
    5. 'return' → logprob: -5.412806987762451
    6. '<|end|>' → logprob: -5.912806987762451
    7. ' return' → logprob: -6.912806987762451
    8. '  
' → logprob: -7.787806987762451
    9. ' 
' → logprob: -7.912806987762451
    10. '	return' → logprob: -8.28780746459961

Token 145: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3200542628765106
    2. '
' → logprob: -1.445054292678833
    3. 'return' → logprob: -4.320054054260254
    4. '    
' → logprob: -4.320054054260254
    5. '\n' → logprob: -5.695054054260254
    6. '<|end|>' → logprob: -5.820054054260254
    7. ' return' → logprob: -6.195054054260254
    8. '	return' → logprob: -6.695054054260254
    9. ':return' → logprob: -7.570054054260254
    10. ' 
' → logprob: -7.820054054260254

Token 146: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.02474219724535942
    2. '   ' → logprob: -3.7747421264648438
    3. ' return' → logprob: -6.524742126464844
    4. '    
' → logprob: -11.024742126464844
    5. ':return' → logprob: -12.399742126464844
    6. '
' → logprob: -12.524742126464844
    7. ' ' → logprob: -13.399742126464844
    8. '	return' → logprob: -13.524742126464844
    9. '```' → logprob: -14.399742126464844
    10. '@return' → logprob: -15.274742126464844

Token 147: ' primes' (ID: 104042)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.38688167929649353
    2. ' primes' → logprob: -1.136881709098816
    3. '	pr' → logprob: -12.136881828308105
    4. ' ' → logprob: -13.511881828308105
    5. ' pr' → logprob: -13.636881828308105
    6. '(pr' → logprob: -13.886881828308105
    7. 'prim' → logprob: -15.011881828308105
    8. 'pri' → logprob: -15.136881828308105
    9. 'prime' → logprob: -15.136881828308105
    10. '_pr' → logprob: -15.511881828308105

Token 148: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 149: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04511149600148201
    2. '
' → logprob: -3.1701114177703857
    3. '

' → logprob: -7.295111656188965
    4. '<|end|>' → logprob: -7.545111656188965
    5. '```' → logprob: -8.795111656188965
    6. '\n' → logprob: -8.920111656188965
    7. '\' → logprob: -9.170111656188965
    8. '  
' → logprob: -9.170111656188965
    9. ' 
' → logprob: -9.295111656188965
    10. '<|end|>' → logprob: -9.420111656188965

Token 150: ' pre' (ID: 876)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.6802259683609009
    2. ' main' → logprob: -1.3052259683609009
    3. ' count' → logprob: -2.5552258491516113
    4. ' find' → logprob: -2.9302258491516113
    5. ' sum' → logprob: -3.9302258491516113
    6. ' prime' → logprob: -4.305225849151611
    7. ' est' → logprob: -4.430225849151611
    8. ' primes' → logprob: -4.430225849151611
    9. ' factor' → logprob: -4.680225849151611
    10. ' next' → logprob: -4.930225849151611

Token 151: 'compute' (ID: 54521)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.3503446578979492
    2. 'compute' → logprob: -1.3503446578979492
    3. 'dict' → logprob: -1.7253446578979492
    4. 'pare' → logprob: -1.9753446578979492
    5. 'fix' → logprob: -2.475344657897949
    6. 'process' → logprob: -3.350344657897949
    7. 'dic' → logprob: -4.600344657897949
    8. 's' → logprob: -4.850344657897949
    9. 'mi' → logprob: -5.475344657897949
    10. 'sum' → logprob: -5.600344657897949

Token 152: '_t' (ID: 838)
  Prédit: '_factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.8142916560173035
    2. '_pr' → logprob: -1.1892917156219482
    3. '_f' → logprob: -1.6892917156219482
    4. '_prime' → logprob: -3.6892917156219482
    5. '_div' → logprob: -3.9392917156219482
    6. '_max' → logprob: -4.564291477203369
    7. '_numbers' → logprob: -5.814291477203369
    8. '_s' → logprob: -6.564291477203369
    9. '_' → logprob: -6.814291477203369
    10. '_m' → logprob: -7.189291477203369

Token 153: 'win' (ID: 11668)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.1036797761917114
    2. 'ot' → logprob: -1.2286797761917114
    3. 'able' → logprob: -2.103679656982422
    4. 'ri' → logprob: -3.103679656982422
    5. 'o' → logprob: -3.353679656982422
    6. 'rip' → logprob: -3.353679656982422
    7. 'otal' → logprob: -3.603679656982422
    8. 'ables' → logprob: -3.978679656982422
    9. 'ab' → logprob: -3.978679656982422
    10. 'w' → logprob: -4.728679656982422

Token 154: '_quad' (ID: 180190)
  Prédit: '_pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_pr' → logprob: -0.0010156603530049324
    2. '_prime' → logprob: -7.251015663146973
    3. '_' → logprob: -9.126015663146973
    4. 'pr' → logprob: -9.376015663146973
    5. '_pairs' → logprob: -9.626015663146973
    6. '_pe' → logprob: -10.876015663146973
    7. 'Pr' → logprob: -11.126015663146973
    8. '()' → logprob: -13.126015663146973
    9. '_Pr' → logprob: -13.626015663146973
    10. '_p' → logprob: -13.751015663146973

Token 155: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -0.0016764947213232517
    2. 'r' → logprob: -7.001676559448242
    3. 'pr' → logprob: -8.001676559448242
    4. 'rap' → logprob: -8.876676559448242
    5. 'def' → logprob: -9.126676559448242
    6. 'raph' → logprob: -9.501676559448242
    7. 'ri' → logprob: -10.876676559448242
    8. 's' → logprob: -11.751676559448242
    9. 'res' → logprob: -12.001676559448242
    10. 'rip' → logprob: -12.001676559448242

Token 156: 'ples' (ID: 4524)
  Prédit: 'plets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plets' → logprob: -0.2979622781276703
    2. 'ru' → logprob: -1.7979623079299927
    3. 'ples' → logprob: -2.547962188720703
    4. 'ple' → logprob: -5.422962188720703
    5. 'rap' → logprob: -5.672962188720703
    6. 'plet' → logprob: -5.922962188720703
    7. 'pl' → logprob: -6.672962188720703
    8. 'pr' → logprob: -7.172962188720703
    9. 'r' → logprob: -7.922962188720703
    10. 'p' → logprob: -7.922962188720703

Token 157: '(max' (ID: 17178)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.024180319160223007
    2. '(' → logprob: -4.0241804122924805
    3. '(max' → logprob: -5.2741804122924805
    4. 's' → logprob: -8.27418041229248
    5. '(_' → logprob: -8.52418041229248
    6. '(s' → logprob: -8.77418041229248
    7. '(limit' → logprob: -8.77418041229248
    8. ' (' → logprob: -10.39918041229248
    9. '_max' → logprob: -10.89918041229248
    10. '_s' → logprob: -11.27418041229248

Token 158: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.5853434801101685
    2. ')' → logprob: -0.9603434801101685
    3. '_prime' → logprob: -3.460343360900879
    4. '_' → logprob: -5.460343360900879
    5. '_num' → logprob: -5.585343360900879
    6. '_number' → logprob: -5.585343360900879
    7. '_pr' → logprob: -5.835343360900879
    8. '):' → logprob: -6.085343360900879
    9. '_)' → logprob: -6.210343360900879
    10. ' )' → logprob: -6.210343360900879

Token 159: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001247016480192542
    2. ')' → logprob: -7.501246929168701
    3. '):
' → logprob: -7.751246929168701
    4. ' ):' → logprob: -8.37624740600586
    5. ':' → logprob: -10.62624740600586
    6. '_' → logprob: -13.25124740600586
    7. ',' → logprob: -13.62624740600586
    8. '=' → logprob: -13.62624740600586
    9. '):
' → logprob: -13.62624740600586
    10. '():' → logprob: -14.37624740600586

Token 160: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5291144251823425
    2. '():' → logprob: -0.9041144251823425
    3. '():
' → logprob: -6.029114246368408
    4. ' :' → logprob: -6.404114246368408
    5. ':
' → logprob: -7.529114246368408
    6. '(n' → logprob: -7.529114246368408
    7. '(' → logprob: -7.654114246368408
    8. '   ' → logprob: -8.654114723205566
    9. '):' → logprob: -9.779114723205566
    10. ' ():' → logprob: -10.154114723205566

Token 161: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005746167618781328
    2. ' quadru' → logprob: -6.505746364593506
    3. ' quad' → logprob: -6.755746364593506
    4. ' twin' → logprob: -6.755746364593506
    5. ' primes' → logprob: -6.880746364593506
    6. '    ' → logprob: -8.755745887756348
    7. ' t' → logprob: -9.005745887756348
    8. ' twins' → logprob: -9.005745887756348
    9. '    
' → logprob: -9.380745887756348
    10. ' pairs' → logprob: -9.380745887756348

Token 162: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1211884543299675
    2. ' primes' → logprob: -3.4961884021759033
    3. ' """
' → logprob: -3.8711884021759033
    4. ' quadru' → logprob: -4.121188640594482
    5. ' twin' → logprob: -4.371188640594482
    6. 't' → logprob: -4.996188640594482
    7. '"""
' → logprob: -5.246188640594482
    8. ' max' → logprob: -5.246188640594482
    9. ' t' → logprob: -5.996188640594482
    10. ' result' → logprob: -5.996188640594482

Token 163: ' Pré' (ID: 86400)
  Prédit: ' primes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' primes' → logprob: -0.7132459282875061
    2. ' twin' → logprob: -0.9632459282875061
    3. '   ' → logprob: -2.9632458686828613
    4. ' quadru' → logprob: -3.5882458686828613
    5. ' twins' → logprob: -3.7132458686828613
    6. 't' → logprob: -5.213245868682861
    7. ' quad' → logprob: -5.463245868682861
    8. 'pr' → logprob: -5.588245868682861
    9. ' prime' → logprob: -5.963245868682861
    10. ' """
' → logprob: -6.338245868682861

Token 164: '-cal' (ID: 84920)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.15927430987358093
    2. '   ' → logprob: -2.1592743396759033
    3. 'com' → logprob: -4.034274101257324
    4. 'pare' → logprob: -5.159274101257324
    5. ' ' → logprob: -6.034274101257324
    6. 'c' → logprob: -6.159274101257324
    7. 'comp' → logprob: -6.659274101257324
    8. '  ' → logprob: -7.284274101257324
    9. 'comput' → logprob: -7.659274101257324
    10. '    ' → logprob: -8.784274101257324

Token 165: 'cul' (ID: 2885)
  Prédit: 'om'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'om' → logprob: -0.029597967863082886
    2. 'omp' → logprob: -3.6545979976654053
    3. 'ul' → logprob: -6.904597759246826
    4. 'cule' → logprob: -7.029597759246826
    5. 'cul' → logprob: -7.154597759246826
    6. 'm' → logprob: -9.029598236083984
    7. 'alculate' → logprob: -9.279598236083984
    8. 'alc' → logprob: -9.654598236083984
    9. 'ule' → logprob: -9.904598236083984
    10. 'c' → logprob: -10.154598236083984

Token 166: 'er' (ID: 259)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.18180814385414124
    2. 'er' → logprob: -1.9318081140518188
    3. 'ate' → logprob: -4.056807994842529
    4. 'ates' → logprob: -5.931807994842529
    5. 'des' → logprob: -7.431807994842529
    6. ' des' → logprob: -7.806807994842529
    7. 'te' → logprob: -8.931808471679688
    8. 'def' → logprob: -9.556808471679688
    9. 'de' → logprob: -10.056808471679688
    10. 's' → logprob: -10.056808471679688

Token 167: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9807442426681519
    2. 't' → logprob: -1.2307442426681519
    3. ' primes' → logprob: -2.3557443618774414
    4. ' twin' → logprob: -2.8557443618774414
    5. ' une' → logprob: -3.4807443618774414
    6. ' les' → logprob: -3.7307443618774414
    7. ' quadru' → logprob: -4.480744361877441
    8. ' pairs' → logprob: -4.480744361877441
    9. 'max' → logprob: -4.730744361877441
    10. 'pr' → logprob: -4.855744361877441

Token 168: ' chaque' (ID: 21194)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.028539856895804405
    2. ' chaque' → logprob: -4.528539657592773
    3. 'max' → logprob: -5.028539657592773
    4. ' n' → logprob: -5.778539657592773
    5. ' tous' → logprob: -5.778539657592773
    6. ' all' → logprob: -6.028539657592773
    7. ' ' → logprob: -8.028539657592773
    8. '[max' → logprob: -8.278539657592773
    9. ' each' → logprob: -8.403539657592773
    10. ' toutes' → logprob: -8.528539657592773

Token 169: ' possible' (ID: 4149)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.16845369338989258
    2. ' nombre' → logprob: -2.2934536933898926
    3. 'n' → logprob: -3.2934536933898926
    4. ' number' → logprob: -5.043453693389893
    5. 'nombre' → logprob: -5.543453693389893
    6. ' i' → logprob: -6.293453693389893
    7. ' entier' → logprob: -6.418453693389893
    8. 'i' → logprob: -6.918453693389893
    9. ' numéro' → logprob: -7.543453693389893
    10. 'num' → logprob: -7.918453693389893

Token 170: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2594696879386902
    2. ' n' → logprob: -1.509469747543335
    3. ' nombre' → logprob: -6.259469509124756
    4. 'nombre' → logprob: -6.509469509124756
    5. 'number' → logprob: -7.509469509124756
    6. '_n' → logprob: -7.634469509124756
    7. ' number' → logprob: -7.634469509124756
    8. 'max' → logprob: -7.634469509124756
    9. 'e' → logprob: -8.509469985961914
    10. ' max' → logprob: -8.884469985961914

Token 171: ' (' (ID: 350)
  Prédit: ' jusqu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' jusqu' → logprob: -0.3947361409664154
    2. ' la' → logprob: -1.6447361707687378
    3. ' up' → logprob: -3.0197360515594482
    4. ',' → logprob: -3.3947360515594482
    5. ' les' → logprob: -3.8947360515594482
    6. ' une' → logprob: -4.644736289978027
    7. ' un' → logprob: -5.269736289978027
    8. ' le' → logprob: -5.644736289978027
    9. ' si' → logprob: -6.769736289978027
    10. ' jusque' → logprob: -6.769736289978027

Token 172: 'jus' (ID: 56271)
  Prédit: ' jusqu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' jusqu' → logprob: -0.24069426953792572
    2. ')' → logprob: -1.990694284439087
    3. 'max' → logprob: -3.740694284439087
    4. ' up' → logprob: -4.115694046020508
    5. ' max' → logprob: -4.490694046020508
    6. 'jus' → logprob: -4.865694046020508
    7. ' de' → logprob: -5.490694046020508
    8. ' )' → logprob: -6.115694046020508
    9. 'de' → logprob: -6.240694046020508
    10. 'le' → logprob: -6.490694046020508

Token 173: 'qu' (ID: 351)
  Prédit: 'qu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qu' → logprob: -0.029919996857643127
    2. 'q' → logprob: -3.6549201011657715
    3. 'que' → logprob: -6.0299201011657715
    4. 's' → logprob: -8.279919624328613
    5. '```' → logprob: -8.654919624328613
    6. 'qua' → logprob: -8.904919624328613
    7. ''' → logprob: -9.154919624328613
    8. 't' → logprob: -9.154919624328613
    9. 'ques' → logprob: -9.404919624328613
    10. ''à' → logprob: -9.654919624328613

Token 174: ''à' (ID: 33688)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.9089619517326355
    2. 'à' → logprob: -1.0339620113372803
    3. 'max' → logprob: -1.7839620113372803
    4. ' max' → logprob: -3.5339620113372803
    5. '=' → logprob: -3.6589620113372803
    6. '=max' → logprob: -4.283961772918701
    7. '   ' → logprob: -6.658961772918701
    8. ''à' → logprob: -6.908961772918701
    9. 'a' → logprob: -7.158961772918701
    10. 'au' → logprob: -7.283961772918701

Token 175: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.07888989895582199
    2. ' max' → logprob: -2.578889846801758
    3. '=max' → logprob: -16.703889846801758
    4. '[max' → logprob: -16.703889846801758
    5. '(max' → logprob: -17.578889846801758
    6. '
' → logprob: -18.078889846801758
    7. '_max' → logprob: -18.453889846801758
    8. '	max' → logprob: -19.328889846801758
    9. '```' → logprob: -19.453889846801758
    10. ':max' → logprob: -19.453889846801758

Token 176: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.000116655595775228
    2. '_' → logprob: -9.125116348266602
    3. ' _' → logprob: -12.125116348266602
    4. ')_' → logprob: -14.500116348266602
    5. '```' → logprob: -14.875116348266602
    6. ')' → logprob: -14.875116348266602
    7. '_i' → logprob: -15.000116348266602
    8. '=_' → logprob: -15.250116348266602
    9. '_N' → logprob: -16.5001163482666
    10. '_a' → logprob: -16.6251163482666

Token 177: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11034447699785233
    2. '),' → logprob: -2.360344409942627
    3. '):' → logprob: -4.735344409942627
    4. ' )' → logprob: -7.360344409942627
    5. '):
' → logprob: -7.735344409942627
    6. ' la' → logprob: -9.860344886779785
    7. ' ),' → logprob: -10.235344886779785
    8. '):

' → logprob: -10.360344886779785
    9. ',' → logprob: -10.610344886779785
    10. ' le' → logprob: -10.985344886779785

Token 178: ' la' (ID: 557)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -1.2574821710586548
    2. ' le' → logprob: -1.3824821710586548
    3. ' la' → logprob: -1.7574821710586548
    4. 'le' → logprob: -2.5074820518493652
    5. ' une' → logprob: -2.6324820518493652
    6. ',' → logprob: -2.8824820518493652
    7. ' les' → logprob: -2.8824820518493652
    8. 'les' → logprob: -5.257482051849365
    9. 'un' → logprob: -5.382482051849365
    10. '   ' → logprob: -5.757482051849365

Token 179: ' valeur' (ID: 41664)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -1.0194460153579712
    2. 'plus' → logprob: -1.2694460153579712
    3. 'liste' → logprob: -2.0194458961486816
    4. 'distance' → logprob: -2.7694458961486816
    5. ' liste' → logprob: -2.8944458961486816
    6. ' quantité' → logprob: -4.394445896148682
    7. 'quant' → logprob: -4.519445896148682
    8. 'prés' → logprob: -4.644445896148682
    9. 'presence' → logprob: -4.644445896148682
    10. 'count' → logprob: -4.894445896148682

Token 180: ' maximale' (ID: 76380)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.11272656172513962
    2. ' de' → logprob: -3.3627264499664307
    3. '   ' → logprob: -3.6127264499664307
    4. ' maximale' → logprob: -4.11272668838501
    5. 'des' → logprob: -5.11272668838501
    6. 'de' → logprob: -5.48772668838501
    7. ' ' → logprob: -5.86272668838501
    8. '  ' → logprob: -6.23772668838501
    9. 'max' → logprob: -6.36272668838501
    10. 's' → logprob: -6.36272668838501

Token 181: ' de' (ID: 334)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.39066922664642334
    2. 'des' → logprob: -2.015669345855713
    3. 'de' → logprob: -2.640669345855713
    4. ' d' → logprob: -3.015669345855713
    5. 'd' → logprob: -3.390669345855713
    6. ' de' → logprob: -3.765669345855713
    7. 'du' → logprob: -5.140669345855713
    8. ' maximale' → logprob: -6.515669345855713
    9. ' ' → logprob: -6.765669345855713
    10. 'max' → logprob: -7.015669345855713

Token 182: ' la' (ID: 557)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7981505990028381
    2. ' n' → logprob: -0.7981505990028381
    3. ' i' → logprob: -4.298150539398193
    4. 'k' → logprob: -4.423150539398193
    5. 'i' → logprob: -4.798150539398193
    6. ' ' → logprob: -4.923150539398193
    7. ' k' → logprob: -4.923150539398193
    8. '4' → logprob: -5.048150539398193
    9. ' twin' → logprob: -5.173150539398193
    10. 'l' → logprob: -5.423150539398193

Token 183: '
' (ID: 198)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'distance' → logprob: -1.0295140743255615
    2. 'plus' → logprob: -1.2795140743255615
    3. 'long' → logprob: -2.7795140743255615
    4. 'diff' → logprob: -3.1545140743255615
    5. ' longueur' → logprob: -3.2795140743255615
    6. '   ' → logprob: -3.4045140743255615
    7. ' plus' → logprob: -3.5295140743255615
    8. ' ' → logprob: -3.7795140743255615
    9. ' distance' → logprob: -3.9045140743255615
    10. 'tail' → logprob: -4.279514312744141

Token 184: '   ' (ID: 271)
  Prédit: ' plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plus' → logprob: -1.1135380268096924
    2. 'plus' → logprob: -1.2385380268096924
    3. 'distance' → logprob: -2.6135380268096924
    4. ' distance' → logprob: -3.1135380268096924
    5. ' longueur' → logprob: -3.3635380268096924
    6. 'diff' → logprob: -3.6135380268096924
    7. '   ' → logprob: -3.6135380268096924
    8. ' ' → logprob: -3.8635380268096924
    9. ' quadru' → logprob: -3.9885380268096924
    10. 'prem' → logprob: -4.113537788391113

Token 185: ' taille' (ID: 41644)
  Prédit: 'long'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'long' → logprob: -0.4287070333957672
    2. 'plus' → logprob: -2.1787071228027344
    3. 'tail' → logprob: -2.4287071228027344
    4. 'diff' → logprob: -3.0537071228027344
    5. 'distance' → logprob: -3.1787071228027344
    6. 't' → logprob: -4.553707122802734
    7. 'prem' → logprob: -4.928707122802734
    8. 'qu' → logprob: -5.053707122802734
    9. 's' → logprob: -5.553707122802734
    10. 'val' → logprob: -5.803707122802734

Token 186: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.06694381684064865
    2. ' des' → logprob: -3.066943883895874
    3. 'd' → logprob: -4.191943645477295
    4. ' de' → logprob: -6.566943645477295
    5. ' du' → logprob: -7.066943645477295
    6. 'des' → logprob: -8.566944122314453
    7. 'du' → logprob: -8.691944122314453
    8. 'de' → logprob: -8.816944122314453
    9. ' possible' → logprob: -9.316944122314453
    10. ' maximale' → logprob: -9.441944122314453

Token 187: ''une' (ID: 13337)
  Prédit: ''un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''un' → logprob: -0.863105058670044
    2. ''une' → logprob: -1.238105058670044
    3. 'e' → logprob: -1.613105058670044
    4. 'u' → logprob: -3.488105058670044
    5. 'a' → logprob: -3.613105058670044
    6. ''' → logprob: -4.238104820251465
    7. ''u' → logprob: -5.113104820251465
    8. 'es' → logprob: -5.488104820251465
    9. '   ' → logprob: -6.113104820251465
    10. ''a' → logprob: -7.613104820251465

Token 188: ' quadru' (ID: 177591)
  Prédit: ' quadru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' quadru' → logprob: -0.30651959776878357
    2. ' sé' → logprob: -3.0565195083618164
    3. 'suite' → logprob: -3.0565195083618164
    4. ' liste' → logprob: -3.1815195083618164
    5. ' suite' → logprob: -3.4315195083618164
    6. 'quad' → logprob: -3.5565195083618164
    7. ' chaîne' → logprob: -4.181519508361816
    8. '   ' → logprob: -4.681519508361816
    9. 'liste' → logprob: -5.181519508361816
    10. ' quad' → logprob: -5.181519508361816

Token 189: 'ple' (ID: 789)
  Prédit: 'plet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plet' → logprob: -0.31464022397994995
    2. 'ple' → logprob: -1.3146402835845947
    3. 'plets' → logprob: -8.064640045166016
    4. 'plete' → logprob: -8.564640045166016
    5. 'pp' → logprob: -8.939640045166016
    6. 'ru' → logprob: -8.939640045166016
    7. 'uple' → logprob: -9.189640045166016
    8. 'pl' → logprob: -9.314640045166016
    9. 'plate' → logprob: -9.689640045166016
    10. 'ples' → logprob: -9.689640045166016

Token 190: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.1024608612060547
    2. '   ' → logprob: -1.3524608612060547
    3. 'de' → logprob: -1.9774608612060547
    4. 't' → logprob: -2.4774608612060547
    5. 's' → logprob: -2.7274608612060547
    6. ' d' → logprob: -3.7274608612060547
    7. ' des' → logprob: -3.9774608612060547
    8. ' ' → logprob: -4.852460861206055
    9. ' t' → logprob: -4.852460861206055
    10. '  ' → logprob: -4.977460861206055

Token 191: ' nombres' (ID: 76205)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.6168757677078247
    2. ' nombres' → logprob: -1.4918757677078247
    3. 'j' → logprob: -1.6168757677078247
    4. 'n' → logprob: -4.491875648498535
    5. 'p' → logprob: -5.491875648498535
    6. 'pr' → logprob: -5.616875648498535
    7. 'nombre' → logprob: -6.116875648498535
    8. ' ' → logprob: -6.116875648498535
    9. ' p' → logprob: -6.366875648498535
    10. '   ' → logprob: -6.491875648498535

Token 192: ' premiers' (ID: 59140)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prem' → logprob: -0.003660645103082061
    2. ' premiers' → logprob: -6.003660678863525
    3. '   ' → logprob: -7.253660678863525
    4. ' j' → logprob: -8.503660202026367
    5. 'j' → logprob: -8.753660202026367
    6. 'jum' → logprob: -9.878660202026367
    7. 't' → logprob: -11.253660202026367
    8. '```' → logprob: -11.628660202026367
    9. ' ' → logprob: -12.378660202026367
    10. ' premi' → logprob: -12.503660202026367

Token 193: ' (' (ID: 350)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.6174910068511963
    2. ' cons' → logprob: -2.1174910068511963
    3. ' (' → logprob: -2.2424910068511963
    4. 'j' → logprob: -2.8674910068511963
    5. 't' → logprob: -3.2424910068511963
    6. ' form' → logprob: -4.367490768432617
    7. '   ' → logprob: -4.492490768432617
    8. ' jum' → logprob: -4.492490768432617
    9. 'cons' → logprob: -4.742490768432617
    10. 'jum' → logprob: -5.242490768432617

Token 194: 'a' (ID: 64)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -1.411611557006836
    2. ')' → logprob: -1.911611557006836
    3. 'j' → logprob: -2.161611557006836
    4. '2' → logprob: -2.536611557006836
    5. ' (' → logprob: -2.536611557006836
    6. 'p' → logprob: -2.661611557006836
    7. ' p' → logprob: -3.411611557006836
    8. ' ' → logprob: -3.536611557006836
    9. '   ' → logprob: -3.786611557006836
    10. '(p' → logprob: -4.286611557006836

Token 195: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010204236023128033
    2. ' ,' → logprob: -5.635204315185547
    3. ',b' → logprob: -5.760204315185547
    4. 's' → logprob: -6.885204315185547
    5. '   ' → logprob: -7.760204315185547
    6. 'a' → logprob: -8.010204315185547
    7. 'def' → logprob: -8.385204315185547
    8. ')' → logprob: -9.010204315185547
    9. 'le' → logprob: -9.135204315185547
    10. 't' → logprob: -9.135204315185547

Token 196: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.049818120896816254
    2. ' a' → logprob: -3.4248180389404297
    3. 'b' → logprob: -4.17481803894043
    4. ' b' → logprob: -7.42481803894043
    5. '   ' → logprob: -10.67481803894043
    6. ' ' → logprob: -11.67481803894043
    7. '    ' → logprob: -11.92481803894043
    8. ',' → logprob: -12.17481803894043
    9. '
' → logprob: -12.29981803894043
    10. '    
' → logprob: -12.67481803894043

Token 197: '+' (ID: 10)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.37409716844558716
    2. '+' → logprob: -1.3740971088409424
    3. ' ,' → logprob: -3.4990971088409424
    4. ' +' → logprob: -3.6240971088409424
    5. ')' → logprob: -7.2490973472595215
    6. '),' → logprob: -7.7490973472595215
    7. '+,' → logprob: -8.249096870422363
    8. ' ' → logprob: -8.749096870422363
    9. ',
' → logprob: -9.124096870422363
    10. 'a' → logprob: -9.499096870422363

Token 198: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.000700045726262033
    2. ' ' → logprob: -7.750699996948242
    3. '4' → logprob: -8.750699996948242
    4. '6' → logprob: -9.875699996948242
    5. '
' → logprob: -11.125699996948242
    6. '   ' → logprob: -11.250699996948242
    7. '{' → logprob: -11.500699996948242
    8. '

' → logprob: -12.125699996948242
    9. '```' → logprob: -12.625699996948242
    10. '  ' → logprob: -12.875699996948242

Token 199: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007528312969952822
    2. ' ,' → logprob: -5.007528305053711
    3. 'a' → logprob: -7.382528305053711
    4. ',a' → logprob: -9.757528305053711
    5. ')' → logprob: -10.132528305053711
    6. '),' → logprob: -10.507528305053711
    7. ' ' → logprob: -10.882528305053711
    8. ',b' → logprob: -11.382528305053711
    9. ',
' → logprob: -11.882528305053711
    10. 'b' → logprob: -12.007528305053711

Token 200: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.02975963056087494
    2. ' a' → logprob: -3.529759645462036
    3. ' ' → logprob: -12.404759407043457
    4. '   ' → logprob: -13.529759407043457
    5. '(a' → logprob: -14.029759407043457
    6. '	a' → logprob: -14.404759407043457
    7. ')a' → logprob: -14.779759407043457
    8. '#a' → logprob: -14.904759407043457
    9. '  ' → logprob: -15.154759407043457
    10. ' 
' → logprob: -15.279759407043457

Token 201: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.038432978093624115
    2. ',' → logprob: -3.413433074951172
    3. ' +' → logprob: -5.538433074951172
    4. ' ,' → logprob: -8.038433074951172
    5. '4' → logprob: -8.538433074951172
    6. '*' → logprob: -9.538433074951172
    7. ' ' → logprob: -9.663433074951172
    8. '+,' → logprob: -10.163433074951172
    9. '-' → logprob: -10.288433074951172
    10. '2' → logprob: -10.538433074951172

Token 202: '6' (ID: 21)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.14399272203445435
    2. '6' → logprob: -2.0189926624298096
    3. '8' → logprob: -7.768992900848389
    4. '2' → logprob: -8.58149242401123
    5. '
' → logprob: -8.76899242401123
    6. ' ' → logprob: -8.83149242401123
    7. '{' → logprob: -9.58149242401123
    8. '12' → logprob: -9.64399242401123
    9. '10' → logprob: -9.89399242401123
    10. '

' → logprob: -10.20649242401123

Token 203: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011827271664515138
    2. ' ,' → logprob: -6.751182556152344
    3. ')' → logprob: -11.376182556152344
    4. '),' → logprob: -15.001182556152344
    5. ' ' → logprob: -15.876182556152344
    6. ' )' → logprob: -15.876182556152344
    7. '   ' → logprob: -16.001182556152344
    8. 'a' → logprob: -16.126182556152344
    9. '+' → logprob: -16.501182556152344
    10. ',
' → logprob: -16.626182556152344

Token 204: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.251953661441803
    2. ' a' → logprob: -1.5019536018371582
    3. ' ' → logprob: -11.626954078674316
    4. '   ' → logprob: -12.001954078674316
    5. ' ' → logprob: -12.626954078674316
    6. ',' → logprob: -13.001954078674316
    7. '	a' → logprob: -13.626954078674316
    8. ',a' → logprob: -14.251954078674316
    9. '    ' → logprob: -14.501954078674316
    10. ')a' → logprob: -15.501954078674316

Token 205: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.028796790167689323
    2. ',' → logprob: -3.903796672821045
    3. ' +' → logprob: -4.903796672821045
    4. '-' → logprob: -7.903796672821045
    5. ')' → logprob: -8.528797149658203
    6. ' ,' → logprob: -9.403797149658203
    7. ' ' → logprob: -9.903797149658203
    8. '   ' → logprob: -10.403797149658203
    9. '```' → logprob: -10.903797149658203
    10. 'def' → logprob: -12.403797149658203

Token 206: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.00040934275602921844
    2. '4' → logprob: -8.500409126281738
    3. '10' → logprob: -9.125409126281738
    4. '12' → logprob: -10.500409126281738
    5. '{' → logprob: -11.125409126281738
    6. '```' → logprob: -11.250409126281738
    7. '
' → logprob: -11.625409126281738
    8. '2' → logprob: -12.000409126281738
    9. ' ' → logprob: -12.250409126281738
    10. '...' → logprob: -12.937909126281738

Token 207: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006172416731715202
    2. ')
' → logprob: -5.506172180175781
    3. '   ' → logprob: -6.506172180175781
    4. '):
' → logprob: -8.381172180175781
    5. ' )' → logprob: -9.006172180175781
    6. 'def' → logprob: -9.506172180175781
    7. ').' → logprob: -10.131172180175781
    8. '),' → logprob: -10.131172180175781
    9. '):' → logprob: -10.256172180175781
    10. ').
' → logprob: -11.506172180175781

Token 208: ' dont' (ID: 11562)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5330331921577454
    2. ' jusqu' → logprob: -2.2830331325531006
    3. 'def' → logprob: -2.6580331325531006
    4. 'prés' → logprob: -3.0330331325531006
    5. ' pouvant' → logprob: -3.2830331325531006
    6. ' possible' → logprob: -3.7830331325531006
    7. ',' → logprob: -4.03303337097168
    8. 'possible' → logprob: -4.15803337097168
    9. ' pour' → logprob: -4.78303337097168
    10. ' de' → logprob: -5.03303337097168

Token 209: ' la' (ID: 557)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3626335561275482
    2. 'la' → logprob: -2.362633466720581
    3. 'l' → logprob: -2.862633466720581
    4. 'le' → logprob: -3.112633466720581
    5. ' l' → logprob: -3.362633466720581
    6. ' la' → logprob: -3.487633466720581
    7. 'les' → logprob: -4.36263370513916
    8. ' a' → logprob: -4.73763370513916
    9. ' le' → logprob: -4.73763370513916
    10. ' ' → logprob: -5.86263370513916

Token 210: ' taille' (ID: 41644)
  Prédit: 'tail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tail' → logprob: -0.8062527775764465
    2. 'prem' → logprob: -1.1812527179718018
    3. ' taille' → logprob: -2.9312527179718018
    4. 'a' → logprob: -3.6812527179718018
    5. 'distance' → logprob: -4.056252956390381
    6. ' longueur' → logprob: -4.306252956390381
    7. 'base' → logprob: -4.431252956390381
    8. ' présence' → logprob: -4.431252956390381
    9. 'dé' → logprob: -4.431252956390381
    10. 'diff' → logprob: -4.806252956390381

Token 211: '
' (ID: 198)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.5527506470680237
    2. 'max' → logprob: -1.802750587463379
    3. ' maximale' → logprob: -1.927750587463379
    4. 's' → logprob: -3.552750587463379
    5. '   ' → logprob: -3.927750587463379
    6. ' max' → logprob: -4.552750587463379
    7. 'est' → logprob: -4.677750587463379
    8. ' is' → logprob: -4.802750587463379
    9. ' maximal' → logprob: -4.927750587463379
    10. ' =' → logprob: -5.052750587463379

Token 212: '   ' (ID: 271)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.483598530292511
    2. ' maximale' → logprob: -1.1085984706878662
    3. 'max' → logprob: -3.608598470687866
    4. '   ' → logprob: -5.108598709106445
    5. 'est' → logprob: -5.358598709106445
    6. ' is' → logprob: -5.483598709106445
    7. ' max' → logprob: -6.358598709106445
    8. ' maximal' → logprob: -6.608598709106445
    9. ' de' → logprob: -6.733598709106445
    10. ' n' → logprob: -6.733598709106445

Token 213: ' est' (ID: 893)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' (adapté à ' est') → logprob: -0.6082839369773865
    2. 'max' → logprob: -1.1082839965820312
    3. ' est' → logprob: -2.7332839965820312
    4. ' maximale' → logprob: -3.2332839965820312
    5. 'd' → logprob: -5.733283996582031
    6. 'n' → logprob: -5.858283996582031
    7. 'au' → logprob: -6.233283996582031
    8. '   ' → logprob: -6.358283996582031
    9. '<=' → logprob: -6.608283996582031
    10. 's' → logprob: -6.608283996582031

Token 214: ' <=' (ID: 5017)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.0957818031311035
    2. ' au' → logprob: -1.4707818031311035
    3. 'a' → logprob: -1.9707818031311035
    4. ' ' → logprob: -2.2207818031311035
    5. ' la' → logprob: -2.7207818031311035
    6. '   ' → logprob: -3.2207818031311035
    7. 'au' → logprob: -3.9707818031311035
    8. '4' → logprob: -4.4707818031311035
    9. '2' → logprob: -5.0957818031311035
    10. ' quadru' → logprob: -5.2207818031311035

Token 215: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.1801927089691162
    2. 'n' → logprob: -1.8051927089691162
    3. ' ' → logprob: -7.930192947387695
    4. ' ' → logprob: -11.180192947387695
    5. '(n' → logprob: -11.555192947387695
    6. 'a' → logprob: -11.805192947387695
    7. ' max' → logprob: -12.180192947387695
    8. '   ' → logprob: -12.305192947387695
    9. ' a' → logprob: -12.305192947387695
    10. ' i' → logprob: -12.430192947387695

Token 216: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.095832347869873
    2. ':' → logprob: -1.845832347869873
    3. '):
' → logprob: -2.095832347869873
    4. '.' → logprob: -2.220832347869873
    5. ':
' → logprob: -2.345832347869873
    6. ' :' → logprob: -3.470832347869873
    7. ')' → logprob: -3.470832347869873
    8. ' :
' → logprob: -3.470832347869873
    9. '):' → logprob: -3.720832347869873
    10. ',' → logprob: -3.970832347869873

Token 217: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05475012958049774
    2. 'def' → logprob: -3.9297502040863037
    3. ')' → logprob: -4.429749965667725
    4. ' 
' → logprob: -5.054749965667725
    5. '    
' → logprob: -5.304749965667725
    6. '
' → logprob: -5.304749965667725
    7. 'n' → logprob: -6.679749965667725
    8. '  
' → logprob: -7.304749965667725
    9. ' def' → logprob: -7.554749965667725
    10. '```' → logprob: -7.554749965667725

Token 218: ' Retour' (ID: 146830)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.41405296325683594
    2. '   ' → logprob: -2.039052963256836
    3. ' 
' → logprob: -2.664052963256836
    4. 'n' → logprob: -3.414052963256836
    5. '    
' → logprob: -3.539052963256836
    6. 'max' → logprob: -3.789052963256836
    7. ' max' → logprob: -4.039052963256836
    8. 'def' → logprob: -4.789052963256836
    9. '  
' → logprob: -5.414052963256836
    10. '"""
' → logprob: -5.789052963256836

Token 219: 'ne' (ID: 611)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.21120209991931915
    2. 'ne' → logprob: -2.2112021446228027
    3. 'ner' → logprob: -2.5862021446228027
    4. '   ' → logprob: -6.211202144622803
    5. 'nera' → logprob: -7.211202144622803
    6. 'na' → logprob: -7.711202144622803
    7. 'nez' → logprob: -7.836202144622803
    8. ' ' → logprob: -8.086201667785645
    9. ' None' → logprob: -8.086201667785645
    10. 's' → logprob: -8.336201667785645

Token 220: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.5445491671562195
    2. ' [' → logprob: -1.2945492267608643
    3. '[' → logprob: -2.7945492267608643
    4. ' un' → logprob: -3.6695492267608643
    5. ' a' → logprob: -3.7945492267608643
    6. '[]' → logprob: -3.9195492267608643
    7. ' None' → logprob: -5.669548988342285
    8. ' []' → logprob: -5.919548988342285
    9. ' ' → logprob: -6.044548988342285
    10. '[n' → logprob: -6.419548988342285

Token 221: ' liste' (ID: 31719)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.5734901428222656
    2. 'list' → logprob: -1.6984901428222656
    3. '[' → logprob: -2.1984901428222656
    4. ' liste' → logprob: -2.5734901428222656
    5. 'liste' → logprob: -3.3234901428222656
    6. ' [' → logprob: -3.9484901428222656
    7. '[]' → logprob: -5.698490142822266
    8. 'List' → logprob: -6.573490142822266
    9. '_list' → logprob: -6.698490142822266
    10. '   ' → logprob: -7.698490142822266

Token 222: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -1.1894298791885376
    2. ' de' → logprob: -1.4394298791885376
    3. ' des' → logprob: -1.9394298791885376
    4. '[]' → logprob: -2.564429759979248
    5. 'max' → logprob: -2.564429759979248
    6. ' lengths' → logprob: -3.189429759979248
    7. '[max' → logprob: -3.439429759979248
    8. '[' → logprob: -4.064429759979248
    9. ' of' → logprob: -4.189429759979248
    10. ' result' → logprob: -4.314429759979248

Token 223: '_size' (ID: 5044)
  Prédit: '_sizes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sizes' → logprob: -0.5945784449577332
    2. '_t' → logprob: -1.719578504562378
    3. '_quad' → logprob: -1.969578504562378
    4. '_lengths' → logprob: -2.219578504562378
    5. '_size' → logprob: -4.344578266143799
    6. '_length' → logprob: -5.719578266143799
    7. '_tail' → logprob: -6.594578266143799
    8. 'quad' → logprob: -7.094578266143799
    9. '_len' → logprob: -7.094578266143799
    10. '_' → logprob: -8.094578742980957

Token 224: ' où' (ID: 15113)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2530323565006256
    2. '_' → logprob: -1.8780323266983032
    3. '[' → logprob: -3.8780324459075928
    4. '=' → logprob: -4.253032207489014
    5. '=[' → logprob: -5.378032207489014
    6. ' de' → logprob: -5.503032207489014
    7. '_max' → logprob: -5.628032207489014
    8. '[]' → logprob: -5.753032207489014
    9. '   ' → logprob: -6.003032207489014
    10. '[max' → logprob: -6.128032207489014

Token 225: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.05739913135766983
    2. ' max' → logprob: -3.307399034500122
    3. 'l' → logprob: -4.682399272918701
    4. 'index' → logprob: -4.932399272918701
    5. ' l' → logprob: -7.182399272918701
    6. 'le' → logprob: -7.682399272918701
    7. 'indice' → logprob: -8.057398796081543
    8. ' index' → logprob: -8.557398796081543
    9. 'la' → logprob: -8.682398796081543
    10. '   ' → logprob: -8.932398796081543

Token 226: '_size' (ID: 5044)
  Prédit: '_size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -6.392202976712724e-06
    2. '_sizes' → logprob: -12.750006675720215
    3. '_s' → logprob: -13.875006675720215
    4. '_' → logprob: -14.500006675720215
    5. ' _' → logprob: -14.625006675720215
    6. '_max' → logprob: -14.750006675720215
    7. '_SIZE' → logprob: -15.250006675720215
    8. '   ' → logprob: -15.875006675720215
    9. 'size' → logprob: -16.0000057220459
    10. 's' → logprob: -16.2500057220459

Token 227: '[x' (ID: 17295)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1900795698165894
    2. '[i' → logprob: -1.1900795698165894
    3. '[n' → logprob: -1.6900795698165894
    4. '[' → logprob: -2.440079689025879
    5. '=' → logprob: -2.815079689025879
    6. '[max' → logprob: -3.565079689025879
    7. '[s' → logprob: -4.315079689025879
    8. 's' → logprob: -4.565079689025879
    9. '=[' → logprob: -6.690079689025879
    10. ']' → logprob: -6.690079689025879

Token 228: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001402025343850255
    2. ' ]' → logprob: -6.751401901245117
    3. ']=' → logprob: -8.751401901245117
    4. 's' → logprob: -10.376401901245117
    5. '=' → logprob: -11.876401901245117
    6. ' ' → logprob: -12.126401901245117
    7. 'x' → logprob: -12.251401901245117
    8. ' =' → logprob: -12.501401901245117
    9. '   ' → logprob: -12.626401901245117
    10. ')' → logprob: -13.126401901245117

Token 229: ' correspond' (ID: 11095)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.29761621356010437
    2. '[x' → logprob: -1.7976162433624268
    3. ' représente' → logprob: -3.7976162433624268
    4. ' est' → logprob: -3.9226162433624268
    5. 's' → logprob: -4.547616004943848
    6. '=' → logprob: -4.547616004943848
    7. '[' → logprob: -4.672616004943848
    8. '[i' → logprob: -5.422616004943848
    9. ' correspond' → logprob: -5.547616004943848
    10. ']' → logprob: -6.797616004943848

Token 230: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.16002361476421356
    2. ' au' → logprob: -2.9100236892700195
    3. 'à' → logprob: -3.1600236892700195
    4. ' aux' → logprob: -3.6600236892700195
    5. 'au' → logprob: -4.9100236892700195
    6. ' to' → logprob: -5.1600236892700195
    7. '_' → logprob: -5.5350236892700195
    8. 'aux' → logprob: -5.9100236892700195
    9. 's' → logprob: -6.2850236892700195
    10. ' ' → logprob: -7.4100236892700195

Token 231: ' la' (ID: 557)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.803959310054779
    2. ' la' → logprob: -1.3039593696594238
    3. 'la' → logprob: -1.4289593696594238
    4. ' x' → logprob: -3.803959369659424
    5. 'max' → logprob: -4.303959369659424
    6. 'l' → logprob: -6.428959369659424
    7. ' max' → logprob: -6.553959369659424
    8. ' ' → logprob: -7.053959369659424
    9. '0' → logprob: -7.303959369659424
    10. 'the' → logprob: -8.553958892822266

Token 232: ' plus' (ID: 2932)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6354429721832275
    2. 'max' → logprob: -1.3854429721832275
    3. ' max' → logprob: -2.7604429721832275
    4. ' x' → logprob: -3.3854429721832275
    5. 'plus' → logprob: -4.010442733764648
    6. ' taille' → logprob: -4.260442733764648
    7. 'int' → logprob: -4.260442733764648
    8. ' maximum' → logprob: -4.260442733764648
    9. 'tail' → logprob: -4.385442733764648
    10. ' plus' → logprob: -4.385442733764648

Token 233: ' grande' (ID: 10094)
  Prédit: ' grande'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grande' → logprob: -0.06111331656575203
    2. ' large' → logprob: -3.1861133575439453
    3. ' longue' → logprob: -4.936113357543945
    4. 'large' → logprob: -6.061113357543945
    5. ' long' → logprob: -6.311113357543945
    6. '_large' → logprob: -6.311113357543945
    7. 'long' → logprob: -6.936113357543945
    8. ' grand' → logprob: -7.061113357543945
    9. ' grandes' → logprob: -7.561113357543945
    10. ' _' → logprob: -7.811113357543945

Token 234: ' taille' (ID: 41644)
  Prédit: ' quadru'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' quadru' → logprob: -0.4708152711391449
    2. ' taille' → logprob: -1.3458153009414673
    3. 'tail' → logprob: -2.3458151817321777
    4. 'quad' → logprob: -4.220815181732178
    5. ' quad' → logprob: -6.470815181732178
    6. 'size' → logprob: -7.095815181732178
    7. ' x' → logprob: -7.595815181732178
    8. '   ' → logprob: -7.595815181732178
    9. ' longueur' → logprob: -8.470815658569336
    10. ' size' → logprob: -8.470815658569336

Token 235: '
' (ID: 198)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.26350176334381104
    2. ' d' → logprob: -2.0135016441345215
    3. ' possible' → logprob: -3.5135016441345215
    4. '_possible' → logprob: -4.2635016441345215
    5. 'possible' → logprob: -4.5135016441345215
    6. ' maximale' → logprob: -4.8885016441345215
    7. ' jusqu' → logprob: -5.3885016441345215
    8. '<|end|>' → logprob: -5.3885016441345215
    9. ' de' → logprob: -5.5135016441345215
    10. '_des' → logprob: -5.5135016441345215

Token 236: '   ' (ID: 271)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.06311280280351639
    2. ' de' → logprob: -3.813112735748291
    3. ' possible' → logprob: -4.313112735748291
    4. ' jusqu' → logprob: -5.063112735748291
    5. ' maximale' → logprob: -5.188112735748291
    6. ' d' → logprob: -5.563112735748291
    7. 'possible' → logprob: -6.188112735748291
    8. 'des' → logprob: -6.313112735748291
    9. 'de' → logprob: -6.688112735748291
    10. ' of' → logprob: -6.938112735748291

Token 237: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.41029006242752075
    2. 'd' (adapté à ' d') → logprob: -2.035290002822876
    3. 'possible' → logprob: -2.910290002822876
    4. ' possible' → logprob: -3.035290002822876
    5. ' de' → logprob: -3.410290002822876
    6. ' des' → logprob: -3.535290002822876
    7. 'de' → logprob: -3.535290002822876
    8. 'des' → logprob: -5.910290241241455
    9. ' of' → logprob: -6.410290241241455
    10. '_possible' → logprob: -6.660290241241455

Token 238: ''une' (ID: 13337)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -1.1243531703948975
    2. ' quadru' → logprob: -1.8743531703948975
    3. 'une' → logprob: -1.9993531703948975
    4. ' a' → logprob: -2.1243531703948975
    5. 'a' → logprob: -2.4993531703948975
    6. ' x' → logprob: -2.7493531703948975
    7. ''une' → logprob: -3.4993531703948975
    8. 'x' → logprob: -3.9993531703948975
    9. ' la' → logprob: -4.249353408813477
    10. 'e' → logprob: -4.749353408813477

Token 239: ' quadru' (ID: 177591)
  Prédit: ' quadru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' quadru' → logprob: -0.08959176391363144
    2. 'quad' → logprob: -2.4645917415618896
    3. ' quad' → logprob: -7.464591979980469
    4. ' ' → logprob: -10.714591979980469
    5. 'qu' → logprob: -11.839591979980469
    6. '   ' → logprob: -11.839591979980469
    7. '_quad' → logprob: -11.964591979980469
    8. '```' → logprob: -11.964591979980469
    9. 'quadr' → logprob: -12.089591979980469
    10. 'qqu' → logprob: -12.214591979980469

Token 240: 'ple' (ID: 789)
  Prédit: '_size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -0.42549458146095276
    2. 'ple' → logprob: -1.5504945516586304
    3. '   ' → logprob: -2.67549467086792
    4. ' _' → logprob: -3.67549467086792
    5. 'uple' → logprob: -4.17549467086792
    6. 'le' → logprob: -5.55049467086792
    7. '_p' → logprob: -5.67549467086792
    8. 'p' → logprob: -5.92549467086792
    9. 'e' → logprob: -5.92549467086792
    10. 'pl' → logprob: -6.30049467086792

Token 241: ' jusqu' (ID: 21961)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.2203928679227829
    2. 'de' → logprob: -2.345392942428589
    3. '_de' → logprob: -4.22039270401001
    4. '_possible' → logprob: -4.22039270401001
    5. ' quadru' → logprob: -4.72039270401001
    6. '_t' → logprob: -4.72039270401001
    7. ' jusqu' → logprob: -4.84539270401001
    8. ' possible' → logprob: -4.84539270401001
    9. ' des' → logprob: -5.09539270401001
    10. 'possible' → logprob: -5.47039270401001

Token 242: ''à' (ID: 33688)
  Prédit: ''à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.6272206902503967
    2. 'à' → logprob: -1.252220630645752
    3. ' à' → logprob: -2.752220630645752
    4. 'x' → logprob: -2.752220630645752
    5. 'a' → logprob: -4.002220630645752
    6. ' x' → logprob: -4.502220630645752
    7. 'au' → logprob: -4.752220630645752
    8. '’à' → logprob: -4.752220630645752
    9. ' ' → logprob: -6.252220630645752
    10. ''au' → logprob: -6.627220630645752

Token 243: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4740816056728363
    2. ' x' → logprob: -0.9740816354751587
    3. ' ' → logprob: -12.599081993103027
    4. '[x' → logprob: -15.599081993103027
    5. '"x' → logprob: -15.849081993103027
    6. '`' → logprob: -16.09908103942871
    7. '<x' → logprob: -16.22408103942871
    8. '	x' → logprob: -16.34908103942871
    9. ' ' → logprob: -16.47408103942871
    10. ')x' → logprob: -16.47408103942871

Token 244: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7466933727264404
    2. ':
' → logprob: -1.3716933727264404
    3. '.
' → logprob: -2.1216933727264404
    4. '.' → logprob: -3.1216933727264404
    5. ':' → logprob: -3.3716933727264404
    6. 'def' → logprob: -3.6216933727264404
    7. '
' → logprob: -4.3716936111450195
    8. '):
' → logprob: -4.8716936111450195
    9. ',' → logprob: -5.1216936111450195
    10. ' :
' → logprob: -5.4966936111450195

Token 245: 'ou' (ID: 283)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05352598801255226
    2. ').' → logprob: -3.303525924682617
    3. ' )' → logprob: -4.303525924682617
    4. ')
' → logprob: -7.678525924682617
    5. ' ).' → logprob: -7.803525924682617
    6. 'n' → logprob: -8.053525924682617
    7. ' n' → logprob: -9.428525924682617
    8. '   ' → logprob: -9.678525924682617
    9. 'max' → logprob: -9.928525924682617
    10. ' )
' → logprob: -9.928525924682617

Token 246: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7589334845542908
    2. ' ' → logprob: -1.8839335441589355
    3. ' n' → logprob: -2.1339335441589355
    4. ' None' → logprob: -2.1339335441589355
    5. ' x' → logprob: -2.8839335441589355
    6. 'None' → logprob: -3.3839335441589355
    7. 'x' → logprob: -3.5089335441589355
    8. ' max' → logprob: -4.5089335441589355
    9. 'n' → logprob: -4.8839335441589355
    10. 'max' → logprob: -6.8839335441589355

Token 247: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12048806250095367
    2. 'x' → logprob: -2.620488166809082
    3. ' ' → logprob: -3.495488166809082
    4. 'None' → logprob: -5.620488166809082
    5. 'max' → logprob: -6.495488166809082
    6. ' x' → logprob: -6.620488166809082
    7. 'n' → logprob: -6.620488166809082
    8. ' None' → logprob: -6.745488166809082
    9. ' n' → logprob: -7.745488166809082
    10. ' max' → logprob: -8.620488166809082

Token 248: ' si' (ID: 1784)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4601624608039856
    2. ']' → logprob: -1.0851624011993408
    3. '   ' → logprob: -5.46016263961792
    4. ' pour' → logprob: -5.58516263961792
    5. '])' → logprob: -5.58516263961792
    6. ' )' → logprob: -5.83516263961792
    7. ' ]' → logprob: -5.83516263961792
    8. ')
' → logprob: -5.83516263961792
    9. ').' → logprob: -5.96016263961792
    10. ' for' → logprob: -6.33516263961792

Token 249: ' aucune' (ID: 51173)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.37984952330589294
    2. ' x' → logprob: -1.2548495531082153
    3. ' aucune' → logprob: -4.629849433898926
    4. ' aucun' → logprob: -4.754849433898926
    5. 'auc' → logprob: -4.879849433898926
    6. ' not' → logprob: -6.004849433898926
    7. 'not' → logprob: -7.004849433898926
    8. ' pas' → logprob: -7.379849433898926
    9. ' there' → logprob: -8.004849433898926
    10. ' no' → logprob: -8.629849433898926

Token 250: ').
' (ID: 6294)
  Prédit: ' quadru'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' quadru' → logprob: -0.004355229437351227
    2. 'quad' → logprob: -5.504355430603027
    3. ' quad' → logprob: -8.629355430603027
    4. '_quad' → logprob: -10.004355430603027
    5. '   ' → logprob: -10.879355430603027
    6. ')' → logprob: -11.879355430603027
    7. ' ' → logprob: -12.379355430603027
    8. ' ' → logprob: -12.504355430603027
    9. ' triple' → logprob: -12.754355430603027
    10. 'qu' → logprob: -13.066855430603027

Token 251: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2056518942117691
    2. '
' → logprob: -1.705651879310608
    3. 'def' → logprob: -5.830651760101318
    4. ' def' → logprob: -7.830651760101318
    5. '    
' → logprob: -7.955651760101318
    6. ' max' → logprob: -8.330652236938477
    7. 'max' → logprob: -9.580652236938477
    8. ' 
' → logprob: -9.830652236938477
    9. '  
' → logprob: -10.080652236938477
    10. '   
' → logprob: -10.580652236938477

Token 252: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24054346978664398
    2. '
' → logprob: -2.6155433654785156
    3. 'max' → logprob: -2.6155433654785156
    4. ' max' → logprob: -2.9905433654785156
    5. '"""
' (adapté à ' """
') → logprob: -4.615543365478516
    6. ')
' → logprob: -6.365543365478516
    7. 'def' → logprob: -6.615543365478516
    8. '    
' → logprob: -6.615543365478516
    9. ' """
' → logprob: -6.865543365478516
    10. ')' → logprob: -7.740543365478516

Token 253: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013505916576832533
    2. 'max' → logprob: -7.001350402832031
    3. ' max' → logprob: -8.126350402832031
    4. 't' → logprob: -9.876350402832031
    5. '
' → logprob: -9.876350402832031
    6. '    
' → logprob: -11.251350402832031
    7. ' twin' → logprob: -11.751350402832031
    8. 'quad' → logprob: -12.001350402832031
    9. 'n' → logprob: -12.501350402832031
    10. 'sizes' → logprob: -13.126350402832031

Token 254: ' primes' (ID: 104042)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.0008299979381263256
    2. 'max' → logprob: -8.250829696655273
    3. 'prime' → logprob: -8.625829696655273
    4. '   ' → logprob: -8.625829696655273
    5. ' primes' → logprob: -8.875829696655273
    6. 'is' → logprob: -10.000829696655273
    7. 't' → logprob: -10.875829696655273
    8. '#' → logprob: -13.375829696655273
    9. 's' → logprob: -14.000829696655273
    10. 'n' → logprob: -14.250829696655273

Token 255: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020667314529419
    2. '=' → logprob: -2.3502066135406494
    3. ',' → logprob: -18.35020637512207
    4. ' =
' → logprob: -18.72520637512207
    5. ' ' → logprob: -18.97520637512207
    6. '＝' → logprob: -18.97520637512207
    7. ' =[' → logprob: -19.85020637512207
    8. ')' → logprob: -20.22520637512207
    9. '[' → logprob: -20.72520637512207
    10. ' ' → logprob: -20.85020637512207

Token 256: ' sieve' (ID: 142781)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5759563446044922
    2. ' sieve' → logprob: -0.8259563446044922
    3. '[s' → logprob: -11.825956344604492
    4. 'sie' → logprob: -12.450956344604492
    5. '   ' → logprob: -13.200956344604492
    6. ' ' → logprob: -13.950956344604492
    7. ' sie' → logprob: -14.075956344604492
    8. '	s' → logprob: -14.450956344604492
    9. '(s' → logprob: -14.950956344604492
    10. '```' → logprob: -15.200956344604492

Token 257: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -1.1756367712223437e-05
    2. 'max' → logprob: -11.625011444091797
    3. '(' → logprob: -12.875011444091797
    4. ' max' → logprob: -15.875011444091797
    5. '[max' → logprob: -17.375011444091797
    6. ' (' → logprob: -17.625011444091797
    7. '=max' → logprob: -18.750011444091797
    8. ',max' → logprob: -19.875011444091797
    9. '	max' → logprob: -19.875011444091797
    10. '(min' → logprob: -20.500011444091797

Token 258: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -3.128163257315464e-07
    2. '_' → logprob: -15.25
    3. 'n' → logprob: -18.125
    4. '_max' → logprob: -18.375
    5. '_x' → logprob: -18.75
    6. '_i' → logprob: -19.5
    7. 'max' → logprob: -19.75
    8. '\' → logprob: -20.0
    9. ' _' → logprob: -20.0
    10. '_m' → logprob: -20.0

Token 259: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00784699060022831
    2. ')
' → logprob: -5.007846832275391
    3. '+' → logprob: -6.882846832275391
    4. ')
' → logprob: -10.00784683227539
    5. ')

' → logprob: -10.75784683227539
    6. ' )' → logprob: -10.88284683227539
    7. ' +' → logprob: -11.13284683227539
    8. 'max' → logprob: -13.13284683227539
    9. '*' → logprob: -13.88284683227539
    10. '))' → logprob: -14.25784683227539

Token 260: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23244771361351013
    2. ' max' → logprob: -1.9824477434158325
    3. 'max' → logprob: -2.732447624206543
    4. '
' → logprob: -6.232447624206543
    5. ' twin' → logprob: -7.232447624206543
    6. ' quadru' → logprob: -7.732447624206543
    7. ' quad' → logprob: -7.857447624206543
    8. 't' → logprob: -8.107447624206543
    9. 'quad' → logprob: -8.232447624206543
    10. '    
' → logprob: -8.732447624206543

Token 261: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.034112874418497086
    2. 't' → logprob: -4.159112930297852
    3. 'quad' → logprob: -4.284112930297852
    4. ' max' → logprob: -6.284112930297852
    5. '   ' → logprob: -6.534112930297852
    6. 'sizes' → logprob: -8.409112930297852
    7. ' quadru' → logprob: -8.909112930297852
    8. 'n' → logprob: -9.534112930297852
    9. 'counts' → logprob: -9.534112930297852
    10. 'result' → logprob: -9.784112930297852

Token 262: '_size' (ID: 5044)
  Prédit: '_size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -2.927930654550437e-05
    2. '_sizes' → logprob: -10.625029563903809
    3. '_length' → logprob: -13.625029563903809
    4. '_' → logprob: -13.750029563903809
    5. '_n' → logprob: -14.250029563903809
    6. '_s' → logprob: -14.625029563903809
    7. 'size' → logprob: -15.000029563903809
    8. '_max' → logprob: -15.125029563903809
    9. '_len' → logprob: -15.750029563903809
    10. '```' → logprob: -16.125028610229492

Token 263: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141693949699402
    2. '=' → logprob: -1.7014169692993164
    3. ' ' → logprob: -13.576416969299316
    4. '[' → logprob: -13.826416969299316
    5. 's' → logprob: -14.451416969299316
    6. '=[' → logprob: -15.326416969299316
    7. '   ' → logprob: -15.326416969299316
    8. ' =[' → logprob: -15.451416969299316
    9. ',' → logprob: -15.951416969299316
    10. '=[]' → logprob: -16.826416015625

Token 264: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0035878336057066917
    2. '[max' → logprob: -6.00358772277832
    3. ' [' → logprob: -6.87858772277832
    4. '[n' → logprob: -9.50358772277832
    5. '[len' → logprob: -13.25358772277832
    6. '[min' → logprob: -13.25358772277832
    7. '[num' → logprob: -14.12858772277832
    8. '[m' → logprob: -14.87858772277832
    9. '[size' → logprob: -15.12858772277832
    10. '   ' → logprob: -15.50358772277832

Token 265: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1875571544806007e-05
    2. ' ' → logprob: -11.375011444091797
    3. '[' → logprob: -15.625011444091797
    4. '1' → logprob: -15.750011444091797
    5. '(' → logprob: -17.312511444091797
    6. '   ' → logprob: -17.625011444091797
    7. 'max' → logprob: -17.937511444091797
    8. ']' → logprob: -18.000011444091797
    9. '۰' → logprob: -18.250011444091797
    10. ')' → logprob: -18.562511444091797

Token 266: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0001242772996192798
    2. ' ]' → logprob: -9.750123977661133
    3. ']*(' → logprob: -9.875123977661133
    4. ']*' → logprob: -11.750123977661133
    5. ' for' → logprob: -12.125123977661133
    6. 'for' → logprob: -14.875123977661133
    7. ' *' → logprob: -15.750123977661133
    8. '   ' → logprob: -15.875123977661133
    9. ')' → logprob: -16.000123977661133
    10. ']+' → logprob: -16.250123977661133

Token 267: ' *' (ID: 425)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.8262140154838562
    2. ' *' → logprob: -0.9512140154838562
    3. ']' → logprob: -2.951214075088501
    4. '
' → logprob: -3.201214075088501
    5. '*(' → logprob: -3.701214075088501
    6. ' for' → logprob: -4.451213836669922
    7. '(' → logprob: -4.451213836669922
    8. '*' → logprob: -4.701213836669922
    9. '   ' → logprob: -4.826213836669922
    10. ' (' → logprob: -5.326213836669922

Token 268: ' (' (ID: 350)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -2.5776860184123507e-06
    2. ' (' → logprob: -13.25000286102295
    3. '((' → logprob: -14.62500286102295
    4. '(' → logprob: -16.125001907348633
    5. 'max' → logprob: -16.625001907348633
    6. '[max' → logprob: -16.875001907348633
    7. '(MAX' → logprob: -18.250001907348633
    8. '(ma' → logprob: -18.375001907348633
    9. '   ' → logprob: -18.750001907348633
    10. '(m' → logprob: -19.000001907348633

Token 269: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.011104768142104149
    2. '(max' → logprob: -4.511104583740234
    3. ' max' → logprob: -9.886104583740234
    4. '[max' → logprob: -12.136104583740234
    5. ',max' → logprob: -15.261104583740234
    6. '=max' → logprob: -15.761104583740234
    7. ':max' → logprob: -15.761104583740234
    8. '	max' → logprob: -17.136104583740234
    9. '
' → logprob: -17.261104583740234
    10. '(' → logprob: -18.261104583740234

Token 270: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -2.1008713702030946e-06
    2. 'n' → logprob: -13.250001907348633
    3. 'max' → logprob: -15.750001907348633
    4. '+' → logprob: -17.625001907348633
    5. '(n' → logprob: -17.875001907348633
    6. '   ' → logprob: -18.125001907348633
    7. '(max' → logprob: -18.125001907348633
    8. '
' → logprob: -18.375001907348633
    9. '(' → logprob: -18.500001907348633
    10. '_i' → logprob: -19.000001907348633

Token 271: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06207221746444702
    2. ' +' → logprob: -2.812072277069092
    3. ')' → logprob: -9.187071800231934
    4. ' )' → logprob: -13.937071800231934
    5. '+)' → logprob: -14.562071800231934
    6. ' ' → logprob: -15.312071800231934
    7. '+n' → logprob: -15.437071800231934
    8. '   ' → logprob: -15.812071800231934
    9. '1' → logprob: -16.81207275390625
    10. '+
' → logprob: -16.81207275390625

Token 272: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.1928003813372925e-05
    2. ' ' → logprob: -9.875051498413086
    3. '2' → logprob: -15.500051498413086
    4. '   ' → logprob: -15.875051498413086
    5. '
' → logprob: -19.000051498413086
    6. '  ' → logprob: -19.562551498413086
    7. '１' → logprob: -19.687551498413086
    8. '۱' → logprob: -20.125051498413086
    9. '```' → logprob: -20.312551498413086
    10. 'max' → logprob: -20.625051498413086

Token 273: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.700132997939363e-05
    2. ' ' → logprob: -11.125017166137695
    3. '2' → logprob: -13.125017166137695
    4. '   ' → logprob: -16.750017166137695
    5. '10' → logprob: -17.125017166137695
    6. '3' → logprob: -18.125017166137695
    7. '１' → logprob: -18.500017166137695
    8. '4' → logprob: -18.687517166137695
    9. '5' → logprob: -18.687517166137695
    10. '7' → logprob: -18.812517166137695

Token 274: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0061752633191645145
    2. ')
' → logprob: -5.1311750411987305
    3. '   ' → logprob: -8.38117504119873
    4. ')
' → logprob: -11.88117504119873
    5. ' )' → logprob: -12.25617504119873
    6. '
' → logprob: -12.75617504119873
    7. ')

' → logprob: -13.63117504119873
    8. ' ' → logprob: -14.38117504119873
    9. ']' → logprob: -15.50617504119873
    10. ' )
' → logprob: -15.63117504119873

Token 275: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48390698432922363
    2. 'count' → logprob: -1.4839069843292236
    3. 'current' → logprob: -2.1089069843292236
    4. 'for' → logprob: -3.9839069843292236
    5. 'max' → logprob: -5.2339067459106445
    6. 'size' → logprob: -5.7339067459106445
    7. 'quad' → logprob: -6.1089067459106445
    8. ' current' → logprob: -6.6089067459106445
    9. 'length' → logprob: -6.6089067459106445
    10. 'last' → logprob: -7.1089067459106445

Token 276: ' current' (ID: 2208)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.2996111512184143
    2. 'current' (adapté à ' current') → logprob: -1.6746110916137695
    3. 'for' → logprob: -3.4246110916137695
    4. '   ' → logprob: -4.1746110916137695
    5. 'max' → logprob: -4.4246110916137695
    6. 'quad' → logprob: -5.5496110916137695
    7. 'size' → logprob: -5.9246110916137695
    8. 'last' → logprob: -6.2996110916137695
    9. 'length' → logprob: -6.6746110916137695
    10. 'start' → logprob: -7.5496110916137695

Token 277: '_max' (ID: 13731)
  Prédit: '_size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -0.3470230996608734
    2. '_max' → logprob: -1.5970231294631958
    3. '_length' → logprob: -3.2220230102539062
    4. '=' → logprob: -4.097023010253906
    5. '_quad' → logprob: -4.097023010253906
    6. '_len' → logprob: -4.972023010253906
    7. '_count' → logprob: -5.222023010253906
    8. '_' → logprob: -6.347023010253906
    9. 'max' → logprob: -6.597023010253906
    10. ' =' → logprob: -7.347023010253906

Token 278: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5760664939880371
    2. ' =' → logprob: -0.8260664939880371
    3. '_size' → logprob: -9.076066970825195
    4. 'size' → logprob: -12.326066970825195
    5. ',' → logprob: -12.576066970825195
    6. '_length' → logprob: -12.701066970825195
    7. ' ' → logprob: -14.451066970825195
    8. 'Size' → logprob: -15.201066970825195
    9. '_len' → logprob: -15.576066970825195
    10. '   ' → logprob: -16.201066970825195

Token 279: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003193516517058015
    2. ' ' → logprob: -5.753193378448486
    3. '1' → logprob: -11.753193855285645
    4. '4' → logprob: -12.878193855285645
    5. '2' → logprob: -13.003193855285645
    6. '   ' → logprob: -14.128193855285645
    7. '[' → logprob: -14.440693855285645
    8. '8' → logprob: -15.003193855285645
    9. '3' → logprob: -15.440693855285645
    10. '  ' → logprob: -15.628193855285645

Token 280: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00013035668234806508
    2. '4' → logprob: -9.500130653381348
    3. '1' → logprob: -10.375130653381348
    4. '8' → logprob: -11.500130653381348
    5. '2' → logprob: -12.125130653381348
    6. ' ' → logprob: -12.250130653381348
    7. '3' → logprob: -13.812630653381348
    8. '[' → logprob: -14.250130653381348
    9. '9' → logprob: -14.312630653381348
    10. '10' → logprob: -15.812630653381348

Token 281: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012296659871935844
    2. '
' → logprob: -4.637296676635742
    3. '    
' → logprob: -6.887296676635742
    4. ' for' → logprob: -7.012296676635742
    5. 'for' → logprob: -8.512296676635742
    6. ' quadru' → logprob: -8.762296676635742
    7. '<|end|>' → logprob: -9.387296676635742
    8. ',' → logprob: -9.637296676635742
    9. 'quad' → logprob: -10.637296676635742
    10. '  
' → logprob: -11.137296676635742

Token 282: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004946735687553883
    2. ' for' → logprob: -5.754946708679199
    3. 'for' → logprob: -6.504946708679199
    4. '
' → logprob: -9.0049467086792
    5. '    
' → logprob: -9.1299467086792
    6. 'i' → logprob: -11.7549467086792
    7. ' i' → logprob: -11.8799467086792
    8. ',' → logprob: -11.8799467086792
    9. 'n' → logprob: -12.7549467086792
    10. '#' → logprob: -13.2549467086792

Token 283: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.021295815706253052
    2. '   ' → logprob: -4.02129602432251
    3. ' for' → logprob: -6.77129602432251
    4. 'a' → logprob: -7.27129602432251
    5. 'i' → logprob: -7.64629602432251
    6. 'max' → logprob: -7.77129602432251
    7. 'size' → logprob: -9.021295547485352
    8. 'count' → logprob: -9.146295547485352
    9. 'n' → logprob: -9.521295547485352
    10. 'length' → logprob: -9.521295547485352

Token 284: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1709042191505432
    2. 'a' → logprob: -2.6709041595458984
    3. ' for' → logprob: -2.7959041595458984
    4. 'i' → logprob: -4.795904159545898
    5. 'quad' → logprob: -5.170904159545898
    6. ' quadru' → logprob: -5.170904159545898
    7. 'max' → logprob: -6.795904159545898
    8. '   ' → logprob: -6.920904159545898
    9. 'last' → logprob: -7.045904159545898
    10. 'prev' → logprob: -7.170904159545898

Token 285: ' parc' (ID: 22138)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6124569177627563
    2. ' for' → logprob: -0.8624569177627563
    3. 'a' → logprob: -3.987456798553467
    4. 'i' → logprob: -4.487456798553467
    5. ' a' → logprob: -6.237456798553467
    6. ' i' → logprob: -6.362456798553467
    7. '   ' → logprob: -7.362456798553467
    8. 'n' → logprob: -7.862456798553467
    9. 'range' → logprob: -8.112457275390625
    10. '=' → logprob: -8.362457275390625

Token 286: 'ourt' (ID: 38600)
  Prédit: 'ourt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ourt' → logprob: -0.47638726234436035
    2. 'ours' → logprob: -0.9763872623443604
    3. 'oure' → logprob: -6.351387023925781
    4. 'our' → logprob: -7.601387023925781
    5. '_' → logprob: -10.601387023925781
    6. 'ourse' → logprob: -10.601387023925781
    7. 'court' → logprob: -12.851387023925781
    8. '(' → logprob: -13.601387023925781
    9. '#' → logprob: -13.726387023925781
    10. '
' → logprob: -13.851387023925781

Token 287: ' tous' (ID: 10688)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.002502651885151863
    2. ' range' → logprob: -6.37750244140625
    3. 'for' → logprob: -7.37750244140625
    4. 'max' → logprob: -9.50250244140625
    5. 'a' → logprob: -10.00250244140625
    6. 'n' → logprob: -10.87750244140625
    7. 'i' → logprob: -11.00250244140625
    8. 'p' → logprob: -12.37750244140625
    9. ' for' → logprob: -12.62750244140625
    10. 'x' → logprob: -12.62750244140625

Token 288: ' les' (ID: 1341)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3726804554462433
    2. 'x' → logprob: -2.122680425643921
    3. 'i' → logprob: -2.747680425643921
    4. 'n' → logprob: -2.997680425643921
    5. ' i' → logprob: -3.872680425643921
    6. ' a' → logprob: -3.997680425643921
    7. ' les' → logprob: -4.1226806640625
    8. ' n' → logprob: -5.2476806640625
    9. 'les' → logprob: -5.4976806640625
    10. ' x' → logprob: -5.4976806640625

Token 289: ' nombres' (ID: 76205)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.41471436619758606
    2. 'i' → logprob: -1.4147143363952637
    3. 'n' → logprob: -2.7897143363952637
    4. 'a' → logprob: -3.9147143363952637
    5. 'range' → logprob: -4.664714336395264
    6. 'num' → logprob: -5.414714336395264
    7. 'numbers' → logprob: -7.664714336395264
    8. 'possible' → logprob: -8.539714813232422
    9. 'k' → logprob: -8.789714813232422
    10. 'p' → logprob: -9.164714813232422

Token 290: ' jusqu' (ID: 21961)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8552697896957397
    2. 'from' → logprob: -1.4802697896957397
    3. 'de' → logprob: -2.4802699089050293
    4. 'for' → logprob: -2.6052699089050293
    5. 'n' → logprob: -3.1052699089050293
    6. 'pour' → logprob: -3.4802699089050293
    7. ' jusqu' → logprob: -3.9802699089050293
    8. 'i' → logprob: -4.230269908905029
    9. 'x' → logprob: -4.480269908905029
    10. 'jus' → logprob: -4.605269908905029

Token 291: ''à' (ID: 33688)
  Prédit: ''à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.8890304565429688
    2. 'au' → logprob: -1.1390304565429688
    3. 'à' → logprob: -1.3890304565429688
    4. ''au' → logprob: -4.139030456542969
    5. ' à' → logprob: -6.139030456542969
    6. '’à' → logprob: -7.139030456542969
    7. 'a' → logprob: -8.014030456542969
    8. ' au' → logprob: -9.139030456542969
    9. 'max' → logprob: -9.889030456542969
    10. '   ' → logprob: -10.264030456542969

Token 292: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -6.64708495605737e-05
    2. ' max' → logprob: -9.625066757202148
    3. '(max' → logprob: -15.500066757202148
    4. '   ' → logprob: -16.37506675720215
    5. '
' → logprob: -17.12506675720215
    6. '[max' → logprob: -17.50006675720215
    7. ' ' → logprob: -17.62506675720215
    8. '	max' → logprob: -18.75006675720215
    9. '=max' → logprob: -18.75006675720215
    10. ',max' → logprob: -19.50006675720215

Token 293: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -3.292907877039397e-06
    2. 'n' → logprob: -13.12500286102295
    3. '
' → logprob: -15.25000286102295
    4. '_' → logprob: -15.87500286102295
    5. '_max' → logprob: -15.87500286102295
    6. '```' → logprob: -15.87500286102295
    7. '   ' → logprob: -16.250003814697266
    8. '=' → logprob: -16.375003814697266
    9. 'max' → logprob: -16.500003814697266
    10. '=_' → logprob: -16.875003814697266

Token 294: ' pour' (ID: 1930)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.457990825176239
    2. '   ' → logprob: -1.0829908847808838
    3. 'for' → logprob: -3.832990884780884
    4. '
' → logprob: -5.957990646362305
    5. ':' → logprob: -6.457990646362305
    6. ',' → logprob: -6.582990646362305
    7. '    
' → logprob: -8.207990646362305
    8. 'n' → logprob: -8.457990646362305
    9. '	for' → logprob: -8.582990646362305
    10. '.' → logprob: -8.957990646362305

Token 295: ' détect' (ID: 118715)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -1.1418145895004272
    2. 'identifier' → logprob: -1.3918145895004272
    3. ' identifier' → logprob: -2.141814708709717
    4. 'chercher' → logprob: -2.141814708709717
    5. ' trouver' → logprob: -2.266814708709717
    6. 'voir' → logprob: -3.766814708709717
    7. 'v' → logprob: -4.141814708709717
    8. ' détect' → logprob: -4.516814708709717
    9. 'a' → logprob: -4.641814708709717
    10. 'dé' → logprob: -5.016814708709717

Token 296: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.00027325618430040777
    2. 'ter' → logprob: -8.250273704528809
    3. 'ect' → logprob: -12.750273704528809
    4. 'cter' → logprob: -13.125273704528809
    5. 'erm' → logprob: -13.375273704528809
    6. 'e' → logprob: -13.750273704528809
    7. '#' → logprob: -14.250273704528809
    8. 'eter' → logprob: -14.500273704528809
    9. ' er' → logprob: -14.625273704528809
    10. '   ' → logprob: -14.750273704528809

Token 297: ' les' (ID: 1341)
  Prédit: ' quadru'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' quadru' → logprob: -0.3352210223674774
    2. ' les' → logprob: -1.7102210521697998
    3. 'les' → logprob: -2.9602210521698
    4. ' des' → logprob: -3.8352210521698
    5. 'quad' → logprob: -3.8352210521698
    6. ' quad' → logprob: -6.460220813751221
    7. ' la' → logprob: -6.835220813751221
    8. 'des' → logprob: -6.960220813751221
    9. 't' → logprob: -7.085220813751221
    10. 'a' → logprob: -7.085220813751221

Token 298: ' quadru' (ID: 177591)
  Prédit: 'quad'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quad' → logprob: -0.32207077741622925
    2. ' quadru' → logprob: -1.322070837020874
    3. 'qu' → logprob: -5.572070598602295
    4. '   ' → logprob: -6.197070598602295
    5. 't' → logprob: -6.822070598602295
    6. 'i' → logprob: -7.947070598602295
    7. ' ' → logprob: -8.322071075439453
    8. 'a' → logprob: -8.447071075439453
    9. ' quad' → logprob: -8.572071075439453
    10. 'quart' → logprob: -8.947071075439453

Token 299: 'ples' (ID: 4524)
  Prédit: 'ples'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ples' → logprob: -0.004032687284052372
    2. 'ple' → logprob: -5.754032611846924
    3. 'p' → logprob: -8.379033088684082
    4. 'pl' → logprob: -8.629033088684082
    5. 'plets' → logprob: -8.754033088684082
    6. 'uples' → logprob: -9.379033088684082
    7. '   ' → logprob: -10.254033088684082
    8. 'ru' → logprob: -10.754033088684082
    9. '```' → logprob: -10.754033088684082
    10. 'plex' → logprob: -11.004033088684082

Token 300: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.950742244720459
    2. 'for' → logprob: -1.075742244720459
    3. '   ' → logprob: -1.325742244720459
    4. ',' → logprob: -6.200742244720459
    5. 'n' → logprob: -6.575742244720459
    6. ' range' → logprob: -7.200742244720459
    7. 'range' → logprob: -7.325742244720459
    8. 'a' → logprob: -7.950742244720459
    9. '.' → logprob: -8.075742721557617
    10. '
' → logprob: -8.075742721557617

Token 301: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07582604140043259
    2. ' for' → logprob: -2.8258259296417236
    3. 'for' → logprob: -4.325826168060303
    4. '.' → logprob: -8.325825691223145
    5. ',' → logprob: -8.950825691223145
    6. ':' → logprob: -10.200825691223145
    7. '
' → logprob: -10.325825691223145
    8. ' range' → logprob: -10.700825691223145
    9. ' and' → logprob: -10.825825691223145
    10. '    
' → logprob: -11.825825691223145

Token 302: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.018434014171361923
    2. ' for' → logprob: -4.143434047698975
    3. '   ' → logprob: -6.143434047698975
    4. 'i' → logprob: -8.393433570861816
    5. 'a' → logprob: -11.518433570861816
    6. 'n' → logprob: -11.643433570861816
    7. ' i' → logprob: -13.018433570861816
    8. '```' → logprob: -13.893433570861816
    9. '	for' → logprob: -14.893433570861816
    10. 'max' → logprob: -15.268433570861816

Token 303: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.19541281461715698
    2. 'x' → logprob: -2.6954128742218018
    3. 'i' → logprob: -3.0704128742218018
    4. 'num' → logprob: -3.1954128742218018
    5. ' a' → logprob: -4.695412635803223
    6. ' num' → logprob: -5.320412635803223
    7. 'n' → logprob: -5.445412635803223
    8. ' i' → logprob: -6.195412635803223
    9. ' x' → logprob: -6.320412635803223
    10. ' n' → logprob: -8.945412635803223

Token 304: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005336216650903225
    2. 'in' → logprob: -5.255336284637451
    3. ' ' → logprob: -9.505335807800293
    4. ',' → logprob: -11.255335807800293
    5. '   ' → logprob: -12.880335807800293
    6. '  ' → logprob: -13.380335807800293
    7. 'a' → logprob: -13.505335807800293
    8. 'd' → logprob: -13.755335807800293
    9. '1' → logprob: -13.880335807800293
    10. 'n' → logprob: -14.130335807800293

Token 305: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20141558349132538
    2. ' range' → logprob: -1.7014155387878418
    3. '(range' → logprob: -14.076416015625
    4. '	range' → logprob: -14.076416015625
    5. ' ' → logprob: -15.076416015625
    6. '   ' → logprob: -15.951416015625
    7. '2' → logprob: -16.451416015625
    8. '  ' → logprob: -17.326416015625
    9. '[' → logprob: -17.826416015625
    10. '```' → logprob: -17.951416015625

Token 306: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02195822261273861
    2. '(max' → logprob: -4.271958351135254
    3. '2' → logprob: -4.896958351135254
    4. ' ' → logprob: -8.896958351135254
    5. '   ' → logprob: -9.521958351135254
    6. ' (' → logprob: -10.021958351135254
    7. 'max' → logprob: -10.646958351135254
    8. ' max' → logprob: -12.271958351135254
    9. '(len' → logprob: -12.521958351135254
    10. ',max' → logprob: -13.521958351135254

Token 307: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.13853934407234192
    2. 'max' → logprob: -2.1385393142700195
    3. '0' → logprob: -5.0135393142700195
    4. '3' → logprob: -5.5135393142700195
    5. '1' → logprob: -8.01353931427002
    6. '4' → logprob: -8.51353931427002
    7. ' max' → logprob: -9.26353931427002
    8. ' ' → logprob: -9.38853931427002
    9. '8' → logprob: -9.76353931427002
    10. '(max' → logprob: -10.38853931427002

Token 308: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.9040898880339228e-05
    2. ' ,' → logprob: -10.625028610229492
    3. ',max' → logprob: -12.500028610229492
    4. ',
' → logprob: -14.500028610229492
    5. '   ' → logprob: -14.875028610229492
    6. 'max' → logprob: -15.625028610229492
    7. '+' → logprob: -17.375028610229492
    8. '
' → logprob: -18.750028610229492
    9. '

' → logprob: -19.125028610229492
    10. ',

' → logprob: -19.500028610229492

Token 309: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.00012356207298580557
    2. ' max' → logprob: -9.000123977661133
    3. '(max' → logprob: -16.000123977661133
    4. '   ' → logprob: -17.500123977661133
    5. '[max' → logprob: -17.625123977661133
    6. '	max' → logprob: -18.250123977661133
    7. 'len' → logprob: -18.375123977661133
    8. ' ' → logprob: -19.250123977661133
    9. '=max' → logprob: -19.375123977661133
    10. '
' → logprob: -20.000123977661133

Token 310: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -1.9361264946837764e-07
    2. '+' → logprob: -16.5
    3. '_max' → logprob: -18.75
    4. '_q' → logprob: -18.875
    5. ' _' → logprob: -19.0
    6. '_k' → logprob: -19.0
    7. '_x' → logprob: -19.5
    8. '-_' → logprob: -19.875
    9. '_i' → logprob: -20.0
    10. '_' → logprob: -20.25

Token 311: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.782657265663147
    2. ' -' → logprob: -1.157657265663147
    3. ' +' → logprob: -1.907657265663147
    4. '-' → logprob: -2.5326571464538574
    5. '   ' → logprob: -7.782657146453857
    6. '):
' → logprob: -8.657657623291016
    7. ' ' → logprob: -9.532657623291016
    8. '
' → logprob: -11.032657623291016
    9. '):' → logprob: -11.282657623291016
    10. ')' → logprob: -11.907657623291016

Token 312: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.4476027190685272
    2. '8' → logprob: -1.0726027488708496
    3. '9' → logprob: -4.07260274887085
    4. '10' → logprob: -6.69760274887085
    5. '11' → logprob: -8.072602272033691
    6. '1' → logprob: -9.697602272033691
    7. ' ' → logprob: -10.572602272033691
    8. '13' → logprob: -10.760102272033691
    9. '12' → logprob: -11.697602272033691
    10. '15' → logprob: -11.947602272033691

Token 313: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.3919088840484619
    2. '7' → logprob: -1.141908884048462
    3. '9' → logprob: -5.391908645629883
    4. '10' → logprob: -7.766908645629883
    5. '11' → logprob: -10.516908645629883
    6. ' ' → logprob: -12.204408645629883
    7. '1' → logprob: -12.641908645629883
    8. '6' → logprob: -12.891908645629883
    9. '13' → logprob: -13.016908645629883
    10. '```' → logprob: -13.454408645629883

Token 314: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4609870910644531
    2. '):
' → logprob: -1.7109870910644531
    3. ' +' → logprob: -2.210987091064453
    4. '):' → logprob: -2.585987091064453
    5. '   ' → logprob: -5.960987091064453
    6. ' ):
' → logprob: -7.710987091064453
    7. ')' → logprob: -8.085987091064453
    8. ' ):' → logprob: -8.460987091064453
    9. '    ' → logprob: -9.585987091064453
    10. ':' → logprob: -10.710987091064453

Token 315: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003819332632701844
    2. ' ' → logprob: -7.875381946563721
    3. '   ' → logprob: -13.250381469726562
    4. '  ' → logprob: -17.000381469726562
    5. ')' → logprob: -17.250381469726562
    6. '```' → logprob: -18.125381469726562
    7. '2' → logprob: -18.375381469726562
    8. '
' → logprob: -18.500381469726562
    9. '    ' → logprob: -19.062881469726562
    10. '	' → logprob: -19.375381469726562

Token 316: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -17.375024795532227
    4. '```' → logprob: -19.250024795532227
    5. '2' → logprob: -19.375024795532227
    6. '  ' → logprob: -19.625024795532227
    7. '
' → logprob: -19.875024795532227
    8. '１' → logprob: -20.625024795532227
    9. ' ' → logprob: -21.062524795532227
    10. '

' → logprob: -21.250024795532227

Token 317: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1272297203540802
    2. '):
' → logprob: -2.127229690551758
    3. ':' → logprob: -8.627229690551758
    4. '   ' → logprob: -10.127229690551758
    5. ' ):' → logprob: -10.252229690551758
    6. ')' → logprob: -10.627229690551758
    7. '):
' → logprob: -11.127229690551758
    8. ' ):
' → logprob: -12.002229690551758
    9. '):

' → logprob: -13.752229690551758
    10. ':
' → logprob: -15.002229690551758

Token 318: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0028785800095647573
    2. '   ' → logprob: -6.002878665924072
    3. ' if' → logprob: -8.752878189086914
    4. ',' → logprob: -9.877878189086914
    5. '<|end|>' → logprob: -10.002878189086914
    6. ':' → logprob: -10.127878189086914
    7. '        
' → logprob: -10.752878189086914
    8. ':
' → logprob: -11.627878189086914
    9. '    
' → logprob: -11.752878189086914
    10. '    ' → logprob: -11.877878189086914

Token 319: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.32276609539985657
    2. ' if' → logprob: -1.3227660655975342
    3. '       ' → logprob: -4.697766304016113
    4. '   ' → logprob: -8.072766304016113
    5. '           ' → logprob: -10.572766304016113
    6. ' ' → logprob: -13.322766304016113
    7. '    ' → logprob: -13.322766304016113
    8. '	if' → logprob: -14.447766304016113
    9. 'If' → logprob: -14.697766304016113
    10. 'while' → logprob: -14.947766304016113

Token 320: ' Vér' (ID: 159169)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02329777181148529
    2. ' if' → logprob: -3.7732977867126465
    3. '       ' → logprob: -10.273297309875488
    4. '   ' → logprob: -11.148297309875488
    5. '           ' → logprob: -13.023297309875488
    6. '
' → logprob: -14.648297309875488
    7. ' ' → logprob: -15.898297309875488
    8. 'If' → logprob: -16.023298263549805
    9. 'while' → logprob: -16.148298263549805
    10. '	if' → logprob: -16.648298263549805

Token 321: 'ification' (ID: 3166)
  Prédit: 'ifie'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.022387532517313957
    2. 'if' → logprob: -4.522387504577637
    3. 'ifier' → logprob: -4.522387504577637
    4. 'ifiez' → logprob: -8.397387504577637
    5. 'ify' → logprob: -9.397387504577637
    6. ' if' → logprob: -9.647387504577637
    7. 'ifi' → logprob: -10.897387504577637
    8. 'ification' → logprob: -11.272387504577637
    9. 'ifié' → logprob: -12.772387504577637
    10. 'ifies' → logprob: -12.772387504577637

Token 322: ' de' (ID: 334)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0022937096655368805
    2. '   ' → logprob: -7.002293586730957
    3. 'if' → logprob: -7.127293586730957
    4. '       ' → logprob: -7.752293586730957
    5. '    ' → logprob: -9.377293586730957
    6. '           ' → logprob: -10.377293586730957
    7. ':' → logprob: -11.752293586730957
    8. '        ' → logprob: -12.002293586730957
    9. ' ' → logprob: -12.252293586730957
    10. ' des' → logprob: -12.752293586730957

Token 323: ' la' (ID: 557)
  Prédit: ' primes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' primes' → logprob: -0.43381837010383606
    2. 'pr' → logprob: -1.0588183403015137
    3. '(pr' → logprob: -5.433818340301514
    4. ' pr' → logprob: -7.683818340301514
    5. '   ' → logprob: -9.433818817138672
    6. ' all' → logprob: -9.933818817138672
    7. '	pr' → logprob: -10.433818817138672
    8. 'all' → logprob: -10.808818817138672
    9. ' (' → logprob: -10.933818817138672
    10. ' ' → logprob: -10.933818817138672

Token 324: ' condition' (ID: 7060)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.015040596947073936
    2. '(pr' → logprob: -5.390040397644043
    3. ' primes' → logprob: -5.765040397644043
    4. ' quadru' → logprob: -6.140040397644043
    5. ' primal' → logprob: -6.515040397644043
    6. 'prime' → logprob: -6.765040397644043
    7. '   ' → logprob: -7.765040397644043
    8. 'quad' → logprob: -8.140040397644043
    9. 'qu' → logprob: -8.390040397644043
    10. 'condition' → logprob: -8.640040397644043

Token 325: ' quadru' (ID: 177591)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.015100600197911263
    2. 'if' → logprob: -4.390100479125977
    3. '   ' → logprob: -6.515100479125977
    4. '       ' → logprob: -7.390100479125977
    5. ' primes' → logprob: -8.265100479125977
    6. 'pr' → logprob: -9.015100479125977
    7. ' and' → logprob: -10.390100479125977
    8. '(pr' → logprob: -10.515100479125977
    9. '           ' → logprob: -10.890100479125977
    10. ':' → logprob: -11.640100479125977

Token 326: 'ple' (ID: 789)
  Prédit: 'ple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ple' → logprob: -0.0010752035304903984
    2. 'ples' → logprob: -6.876075267791748
    3. 'plet' → logprob: -10.25107479095459
    4. 'plets' → logprob: -13.00107479095459
    5. 'plex' → logprob: -13.12607479095459
    6. 'pl' → logprob: -13.75107479095459
    7. 'pp' → logprob: -15.25107479095459
    8. 'plete' → logprob: -15.25107479095459
    9. 'p' → logprob: -15.37607479095459
    10. 'uple' → logprob: -15.62607479095459

Token 327: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9449781179428101
    2. ' if' → logprob: -1.06997811794281
    3. '   ' → logprob: -1.69497811794281
    4. ' and' → logprob: -2.6949782371520996
    5. ':' → logprob: -4.3199782371521
    6. 'if' → logprob: -6.6949782371521
    7. '    ' → logprob: -7.4449782371521
    8. 'and' → logprob: -7.5699782371521
    9. ' =' → logprob: -7.8199782371521
    10. ' :' → logprob: -8.069977760314941

Token 328: ' nombres' (ID: 76205)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.019818726927042007
    2. 'prime' → logprob: -4.7698187828063965
    3. ' primes' → logprob: -5.3948187828063965
    4. '(pr' → logprob: -5.5198187828063965
    5. ' primal' → logprob: -6.6448187828063965
    6. 'prim' → logprob: -8.144818305969238
    7. '   ' → logprob: -8.519818305969238
    8. 'a' → logprob: -8.894818305969238
    9. 'prima' → logprob: -9.519818305969238
    10. '4' → logprob: -9.644818305969238

Token 329: ' premiers' (ID: 59140)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prem' → logprob: -0.03224160894751549
    2. ' premiers' → logprob: -3.6572415828704834
    3. '   ' → logprob: -5.2822418212890625
    4. 'pr' → logprob: -7.7822418212890625
    5. '       ' → logprob: -9.782241821289062
    6. '     ' → logprob: -9.907241821289062
    7. ' premi' → logprob: -10.032241821289062
    8. ' premier' → logprob: -10.157241821289062
    9. ' if' → logprob: -10.282241821289062
    10. 'prima' → logprob: -10.532241821289062

Token 330: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019250690937042236
    2. ' if' → logprob: -4.269250869750977
    3. '   ' → logprob: -5.894250869750977
    4. ':' → logprob: -6.394250869750977
    5. 'if' → logprob: -8.019250869750977
    6. ' :' → logprob: -9.144250869750977
    7. ' and' → logprob: -9.394250869750977
    8. ',' → logprob: -10.144250869750977
    9. '           ' → logprob: -10.769250869750977
    10. '      ' → logprob: -11.769250869750977

Token 331: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017638361314311624
    2. '   ' → logprob: -7.251763820648193
    3. ':' → logprob: -7.501763820648193
    4. ' if' → logprob: -7.751763820648193
    5. ' :' → logprob: -10.376764297485352
    6. ',' → logprob: -11.626764297485352
    7. 'if' → logprob: -11.751764297485352
    8. '           ' → logprob: -12.126764297485352
    9. '      ' → logprob: -13.001764297485352
    10. ' ' → logprob: -13.251764297485352

Token 332: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.20476308465003967
    2. ' if' → logprob: -1.7047630548477173
    3. '       ' → logprob: -5.704762935638428
    4. '   ' → logprob: -11.329763412475586
    5. ' ' → logprob: -14.204763412475586
    6. '	if' → logprob: -14.454763412475586
    7. 'If' → logprob: -15.329763412475586
    8. '           ' → logprob: -15.454763412475586
    9. '    ' → logprob: -15.954763412475586
    10. '  ' → logprob: -16.704763412475586

Token 333: ' primes' (ID: 104042)
  Prédit: ' primes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' primes' → logprob: -0.25198179483413696
    2. 'pr' → logprob: -1.5019817352294922
    3. '(pr' → logprob: -10.751981735229492
    4. '   ' → logprob: -11.251981735229492
    5. ' ' → logprob: -11.626981735229492
    6. '  ' → logprob: -13.126981735229492
    7. '	pr' → logprob: -13.501981735229492
    8. ' all' → logprob: -13.626981735229492
    9. 'all' → logprob: -14.001981735229492
    10. 'prime' → logprob: -14.001981735229492

Token 334: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -4.320199877838604e-07
    2. 'a' → logprob: -14.875
    3. '[' → logprob: -16.625
    4. ' [' → logprob: -18.875
    5. '   ' → logprob: -19.25
    6. '[
' → logprob: -20.5
    7. '[A' → logprob: -20.5
    8. '```' → logprob: -21.375
    9. '
' → logprob: -22.0
    10. '(a' → logprob: -22.125

Token 335: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011824953369796276
    2. 'and' → logprob: -4.886825084686279
    3. ' and' → logprob: -5.511825084686279
    4. ' ]' → logprob: -8.761824607849121
    5. '   ' → logprob: -11.636824607849121
    6. '    ' → logprob: -13.261824607849121
    7. 'a' → logprob: -13.886824607849121
    8. ' ' → logprob: -14.261824607849121
    9. '       ' → logprob: -14.261824607849121
    10. ']
' → logprob: -15.261824607849121

Token 336: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.4740799069404602
    2. ' and' → logprob: -0.9740799069404602
    3. '    ' → logprob: -13.474080085754395
    4. '   ' → logprob: -14.349080085754395
    5. ' ' → logprob: -14.599080085754395
    6. '	and' → logprob: -16.349079132080078
    7. 'a' → logprob: -16.474079132080078
    8. 'andr' → logprob: -16.599079132080078
    9. '  ' → logprob: -16.849079132080078
    10. ' и' → logprob: -17.599079132080078

Token 337: ' primes' (ID: 104042)
  Prédit: ' primes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' primes' → logprob: -0.06197250634431839
    2. 'pr' → logprob: -2.8119726181030273
    3. '(pr' → logprob: -13.311972618103027
    4. 'prime' → logprob: -13.811972618103027
    5. '	pr' → logprob: -14.186972618103027
    6. '   ' → logprob: -14.186972618103027
    7. ' ' → logprob: -15.186972618103027
    8. '    ' → logprob: -16.18697166442871
    9. ' pr' → logprob: -16.18697166442871
    10. ' prime' → logprob: -16.43697166442871

Token 338: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.0009139667963609099
    2. 'a' → logprob: -7.000914096832275
    3. ' a' → logprob: -14.000913619995117
    4. '   ' → logprob: -14.500913619995117
    5. '[' → logprob: -14.500913619995117
    6. '[
' → logprob: -15.250913619995117
    7. ' [' → logprob: -15.375913619995117
    8. '	a' → logprob: -16.375913619995117
    9. ' ' → logprob: -17.875913619995117
    10. '
' → logprob: -18.000913619995117

Token 339: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.016099829226732254
    2. ' +' → logprob: -4.14109992980957
    3. '+a' → logprob: -10.14109992980957
    4. ' ' → logprob: -11.39109992980957
    5. '   ' → logprob: -12.14109992980957
    6. 'a' → logprob: -12.14109992980957
    7. '2' → logprob: -13.14109992980957
    8. '+
' → logprob: -13.89109992980957
    9. ']' → logprob: -14.64109992980957
    10. ' a' → logprob: -15.26609992980957

Token 340: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0004897649050690234
    2. ' ' → logprob: -7.625489711761475
    3. '   ' → logprob: -14.250490188598633
    4. '8' → logprob: -14.687990188598633
    5. '  ' → logprob: -15.312990188598633
    6. '```' → logprob: -15.625490188598633
    7. '２' → logprob: -17.187990188598633
    8. '
' → logprob: -17.187990188598633
    9. '۲' → logprob: -17.250490188598633
    10. '[' → logprob: -17.500490188598633

Token 341: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.749814019713085e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -16.31250762939453
    4. '```' → logprob: -16.68750762939453
    5. '  ' → logprob: -17.31250762939453
    6. '8' → logprob: -17.43750762939453
    7. '۲' → logprob: -17.56250762939453
    8. '２' → logprob: -17.87500762939453
    9. '
' → logprob: -17.87500762939453
    10. '২' → logprob: -17.93750762939453

Token 342: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.009063232690095901
    2. ' ]' → logprob: -5.009063243865967
    3. ' and' → logprob: -6.259063243865967
    4. 'and' → logprob: -7.759063243865967
    5. '`]' → logprob: -13.884062767028809
    6. '']' → logprob: -14.009062767028809
    7. '   ' → logprob: -14.259062767028809
    8. ' ' → logprob: -14.384062767028809
    9. ']
' → logprob: -15.134062767028809
    10. ')' → logprob: -15.134062767028809

Token 343: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0021855919621884823
    2. 'and' → logprob: -6.127185821533203
    3. ' ' → logprob: -15.002185821533203
    4. ' и' → logprob: -16.877185821533203
    5. ' ' → logprob: -17.002185821533203
    6. '<|end|>' → logprob: -17.502185821533203
    7. '	and' → logprob: -17.627185821533203
    8. '        ' → logprob: -17.627185821533203
    9. ' و' → logprob: -17.752185821533203
    10. ' và' → logprob: -18.252185821533203

Token 344: ' primes' (ID: 104042)
  Prédit: ' primes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' primes' → logprob: -0.012511413544416428
    2. 'pr' → logprob: -4.387511253356934
    3. '(pr' → logprob: -14.262511253356934
    4. 'prime' → logprob: -14.262511253356934
    5. ' prime' → logprob: -15.762511253356934
    6. '	pr' → logprob: -16.01251220703125
    7. ' pr' → logprob: -16.38751220703125
    8. ' ' → logprob: -16.88751220703125
    9. '_pr' → logprob: -17.88751220703125
    10. 'Pr' → logprob: -18.51251220703125

Token 345: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -2.4153549020411447e-05
    2. 'a' → logprob: -11.00002384185791
    3. '[' → logprob: -11.87502384185791
    4. ' a' → logprob: -15.50002384185791
    5. ' [' → logprob: -16.375024795532227
    6. '[
' → logprob: -16.500024795532227
    7. '(a' → logprob: -17.500024795532227
    8. '```' → logprob: -18.375024795532227
    9. '<a' → logprob: -18.750024795532227
    10. '   ' → logprob: -18.750024795532227

Token 346: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5234378576278687
    2. '+' → logprob: -0.8984378576278687
    3. '[' → logprob: -8.7734375
    4. '   ' → logprob: -9.3984375
    5. ' ' → logprob: -9.8984375
    6. ' +
' → logprob: -11.8984375
    7. '+
' → logprob: -12.5234375
    8. ']' → logprob: -13.1484375
    9. '  ' → logprob: -13.5234375
    10. '```' → logprob: -13.6484375

Token 347: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -1.843177233240567e-05
    2. ' ' → logprob: -11.000018119812012
    3. '4' → logprob: -14.500018119812012
    4. '```' → logprob: -15.312518119812012
    5. '   ' → logprob: -15.500018119812012
    6. '8' → logprob: -16.125019073486328
    7. '۶' → logprob: -16.125019073486328
    8. '६' → logprob: -16.500019073486328
    9. '
' → logprob: -16.812519073486328
    10. '<|end|>' → logprob: -17.062519073486328

Token 348: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -6.869017852295656e-06
    2. ' ' → logprob: -12.125006675720215
    3. '8' → logprob: -14.312506675720215
    4. '```' → logprob: -15.937506675720215
    5. '   ' → logprob: -16.18750762939453
    6. '۶' → logprob: -16.62500762939453
    7. '4' → logprob: -16.81250762939453
    8. '६' → logprob: -17.00000762939453
    9. '' → logprob: -17.25000762939453
    10. '٦' → logprob: -17.68750762939453

Token 349: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0008166544139385223
    2. ' ]' → logprob: -7.375816822052002
    3. ' and' → logprob: -9.000816345214844
    4. '   ' → logprob: -10.375816345214844
    5. 'and' → logprob: -10.375816345214844
    6. '`]' → logprob: -13.625816345214844
    7. '']' → logprob: -13.875816345214844
    8. ' ' → logprob: -14.750816345214844
    9. ']
' → logprob: -14.750816345214844
    10. '```' → logprob: -14.875816345214844

Token 350: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.003184959525242448
    2. 'and' → logprob: -5.753184795379639
    3. ' ' → logprob: -12.128185272216797
    4. ' и' → logprob: -14.753185272216797
    5. ' et' → logprob: -15.378185272216797
    6. ' ' → logprob: -15.503185272216797
    7. '```' → logprob: -15.753185272216797
    8. '[' → logprob: -16.128185272216797
    9. ')' → logprob: -16.128185272216797
    10. 'et' → logprob: -16.253185272216797

Token 351: ' primes' (ID: 104042)
  Prédit: ' primes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' primes' → logprob: -0.011084727942943573
    2. 'pr' → logprob: -4.51108455657959
    3. '(pr' → logprob: -10.76108455657959
    4. 'prime' → logprob: -12.63608455657959
    5. ' pr' → logprob: -13.13608455657959
    6. 'a' → logprob: -13.26108455657959
    7. ' prime' → logprob: -13.38608455657959
    8. '	pr' → logprob: -13.51108455657959
    9. ' True' → logprob: -13.88608455657959
    10. 'True' → logprob: -13.88608455657959

Token 352: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.0002584785979706794
    2. 'a' → logprob: -8.375258445739746
    3. '[' → logprob: -11.125258445739746
    4. ' [' → logprob: -12.125258445739746
    5. '   ' → logprob: -13.000258445739746
    6. '```' → logprob: -13.500258445739746
    7. '[
' → logprob: -13.625258445739746
    8. ' a' → logprob: -14.125258445739746
    9. ' ' → logprob: -14.500258445739746
    10. '(a' → logprob: -15.000258445739746

Token 353: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.6326376795768738
    2. '+' → logprob: -0.7576376795768738
    3. ' ' → logprob: -10.632637977600098
    4. '[' → logprob: -11.632637977600098
    5. '   ' → logprob: -12.757637977600098
    6. ' +
' → logprob: -14.257637977600098
    7. '+
' → logprob: -14.632637977600098
    8. ' ' → logprob: -15.257637977600098
    9. '8' → logprob: -15.382637977600098
    10. ' plus' → logprob: -15.507637977600098

Token 354: ' ' (ID: 220)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -9.698698704596609e-05
    2. ' ' → logprob: -9.250097274780273
    3. '   ' → logprob: -15.250097274780273
    4. '۸' → logprob: -16.062597274780273
    5. 'eight' → logprob: -16.687597274780273
    6. '```' → logprob: -16.750097274780273
    7. '08' → logprob: -16.937597274780273
    8. '<|end|>' → logprob: -16.937597274780273
    9. '  ' → logprob: -17.187597274780273
    10. '৮' → logprob: -17.312597274780273

Token 355: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -4.60414821645827e-06
    2. ' ' → logprob: -12.500004768371582
    3. '08' → logprob: -16.125003814697266
    4. '۸' → logprob: -16.312503814697266
    5. '৮' → logprob: -16.562503814697266
    6. '८' → logprob: -16.625003814697266
    7. 'eight' → logprob: -16.625003814697266
    8. '   ' → logprob: -16.687503814697266
    9. '<|end|>' → logprob: -17.000003814697266
    10. '８' → logprob: -17.750003814697266

Token 356: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.0025611496530473232
    2. ']:
' → logprob: -6.127561092376709
    3. ']' → logprob: -8.377561569213867
    4. ' ]' → logprob: -9.627561569213867
    5. ':' → logprob: -10.002561569213867
    6. ']:
' → logprob: -11.502561569213867
    7. '       ' → logprob: -11.627561569213867
    8. '   ' → logprob: -11.752561569213867
    9. ']:

' → logprob: -13.252561569213867
    10. '"]:' → logprob: -13.377561569213867

Token 357: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00610689353197813
    2. '       ' → logprob: -5.256106853485107
    3. 'current' → logprob: -7.631106853485107
    4. ' current' → logprob: -9.131107330322266
    5. ':' → logprob: -9.256107330322266
    6. '
' → logprob: -10.006107330322266
    7. '               ' → logprob: -11.006107330322266
    8. ',' → logprob: -11.131107330322266
    9. '```' → logprob: -11.131107330322266
    10. '   ' → logprob: -11.381107330322266

Token 358: ' size' (ID: 2349)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.4991336762905121
    2. '   ' → logprob: -2.124133586883545
    3. 'size' (adapté à ' size') → logprob: -2.124133586883545
    4. 'length' → logprob: -2.124133586883545
    5. '       ' → logprob: -4.374133586883545
    6. 'for' → logprob: -4.624133586883545
    7. 'count' → logprob: -5.999133586883545
    8. 'if' → logprob: -6.499133586883545
    9. 'quad' → logprob: -6.499133586883545
    10. ' current' → logprob: -6.624133586883545

Token 359: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0019784762989729643
    2. '=' → logprob: -6.251978397369385
    3. '   ' → logprob: -10.876978874206543
    4. ' ' → logprob: -10.876978874206543
    5. 's' → logprob: -12.751978874206543
    6. ' +=' → logprob: -13.376978874206543
    7. 'a' → logprob: -13.876978874206543
    8. '  ' → logprob: -14.126978874206543
    9. '=int' → logprob: -14.501978874206543
    10. '_index' → logprob: -14.751978874206543

Token 360: ' a' (ID: 261)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.4484352469444275
    2. '9' → logprob: -1.3234353065490723
    3. 'a' → logprob: -2.8234353065490723
    4. ' ' → logprob: -4.198435306549072
    5. '1' → logprob: -4.948435306549072
    6. '8' → logprob: -5.073435306549072
    7. '12' → logprob: -6.073435306549072
    8. '10' → logprob: -6.323435306549072
    9. '16' → logprob: -7.448435306549072
    10. ' a' → logprob: -7.698435306549072

Token 361: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.09019101411104202
    2. '+' → logprob: -2.465191125869751
    3. '   ' → logprob: -7.090190887451172
    4. ' -' → logprob: -8.090190887451172
    5. ' ' → logprob: -10.715190887451172
    6. '-' → logprob: -10.965190887451172
    7. '  ' → logprob: -11.090190887451172
    8. '
' → logprob: -11.465190887451172
    9. ' //' → logprob: -11.465190887451172
    10. '+a' → logprob: -11.465190887451172

Token 362: ' ' (ID: 220)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.017899516969919205
    2. ' ' → logprob: -4.142899513244629
    3. '10' → logprob: -6.892899513244629
    4. '9' → logprob: -8.017899513244629
    5. '12' → logprob: -8.392899513244629
    6. '14' → logprob: -8.892899513244629
    7. '11' → logprob: -9.267899513244629
    8. '1' → logprob: -10.642899513244629
    9. '  ' → logprob: -11.455399513244629
    10. '   ' → logprob: -12.017899513244629

Token 363: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.000548387470189482
    2. ' ' → logprob: -8.125548362731934
    3. '9' → logprob: -9.125548362731934
    4. '11' → logprob: -9.750548362731934
    5. '10' → logprob: -10.000548362731934
    6. '1' → logprob: -11.000548362731934
    7. '12' → logprob: -11.875548362731934
    8. '14' → logprob: -12.188048362731934
    9. '   ' → logprob: -12.938048362731934
    10. '  ' → logprob: -13.125548362731934

Token 364: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2971801459789276
    2. '           ' → logprob: -1.42218017578125
    3. '       ' → logprob: -4.79718017578125
    4. '<|end|>' → logprob: -5.79718017578125
    5. '   ' → logprob: -6.17218017578125
    6. ' if' → logprob: -7.29718017578125
    7. '  
' → logprob: -7.79718017578125
    8. '            
' → logprob: -7.92218017578125
    9. ' 
' → logprob: -8.67218017578125
    10. 'if' → logprob: -8.79718017578125

Token 365: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.45262184739112854
    2. '
' → logprob: -1.0776218175888062
    3. '       ' → logprob: -3.8276219367980957
    4. '   ' → logprob: -6.952621936798096
    5. '<|end|>' → logprob: -8.702621459960938
    6. '  
' → logprob: -8.952621459960938
    7. ' if' → logprob: -9.202621459960938
    8. '
' → logprob: -9.452621459960938
    9. '            
' → logprob: -9.702621459960938
    10. ',' → logprob: -9.702621459960938

Token 366: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.3881009519100189
    2. ' if' → logprob: -1.3881009817123413
    3. '           ' → logprob: -3.1381008625030518
    4. '   ' → logprob: -3.8881008625030518
    5. 'current' → logprob: -5.263101100921631
    6. '       ' → logprob: -6.013101100921631
    7. ' current' → logprob: -7.513101100921631
    8. 'while' → logprob: -10.888100624084473
    9. 'for' → logprob: -11.013100624084473
    10. '	if' → logprob: -11.138100624084473

Token 367: ' size' (ID: 2349)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.005238856188952923
    2. ' size' → logprob: -5.255239009857178
    3. '   ' → logprob: -12.38023853302002
    4. '	size' → logprob: -15.25523853302002
    5. ' ' → logprob: -15.88023853302002
    6. '           ' → logprob: -16.130239486694336
    7. '(size' → logprob: -16.505239486694336
    8. 'current' → logprob: -16.505239486694336
    9. 'si' → logprob: -17.505239486694336
    10. 'max' → logprob: -17.630239486694336

Token 368: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.20149365067481995
    2. '>' → logprob: -1.7014936208724976
    3. ' <=' → logprob: -10.451493263244629
    4. ' ' → logprob: -10.451493263244629
    5. ' >=' → logprob: -12.201493263244629
    6. '<=' → logprob: -12.201493263244629
    7. '   ' → logprob: -12.451493263244629
    8. ' >
' → logprob: -12.701493263244629
    9. '>=' → logprob: -12.826493263244629
    10. '  ' → logprob: -14.451493263244629

Token 369: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.003178071230649948
    2. ' current' → logprob: -5.753178119659424
    3. '	current' → logprob: -16.503177642822266
    4. '   ' → logprob: -16.753177642822266
    5. '=current' → logprob: -16.753177642822266
    6. '(current' → logprob: -17.003177642822266
    7. 'urrent' → logprob: -17.253177642822266
    8. '_current' → logprob: -17.253177642822266
    9. '[current' → logprob: -17.503177642822266
    10. '$current' → logprob: -17.628177642822266

Token 370: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -3.128163257315464e-07
    2. '_size' → logprob: -15.625
    3. '_' → logprob: -17.5
    4. 'max' → logprob: -18.0
    5. '_min' → logprob: -18.25
    6. ' _' → logprob: -18.375
    7. '_MAX' → logprob: -21.125
    8. '_Max' → logprob: -21.25
    9. '_m' → logprob: -21.375
    10. 'Max' → logprob: -21.625

Token 371: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.47413569688796997
    2. ':' → logprob: -0.97413569688797
    3. '):
' → logprob: -10.724135398864746
    4. '           ' → logprob: -10.849135398864746
    5. ':
' → logprob: -12.224135398864746
    6. ':

' → logprob: -12.224135398864746
    7. '               ' → logprob: -13.224135398864746
    8. '       ' → logprob: -13.724135398864746
    9. ' :
' → logprob: -13.724135398864746
    10. '):' → logprob: -14.474135398864746

Token 372: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02070409059524536
    2. ' current' → logprob: -4.02070426940918
    3. 'current' → logprob: -6.02070426940918
    4. ':
' → logprob: -10.02070426940918
    5. '           ' → logprob: -10.89570426940918
    6. '                
' → logprob: -11.64570426940918
    7. ',current' → logprob: -11.64570426940918
    8. '[current' → logprob: -11.77070426940918
    9. '
' → logprob: -12.14570426940918
    10. ':' → logprob: -12.14570426940918

Token 373: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.10151208192110062
    2. 'current' (adapté à ' current') → logprob: -2.7265121936798096
    3. '               ' → logprob: -3.4765121936798096
    4. '	current' → logprob: -10.60151195526123
    5. '   ' → logprob: -10.97651195526123
    6. '_current' → logprob: -11.10151195526123
    7. '                   ' → logprob: -11.22651195526123
    8. '
' → logprob: -11.35151195526123
    9. '[current' → logprob: -11.35151195526123
    10. '(current' → logprob: -11.60151195526123

Token 374: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -2.8444881536415778e-05
    2. '_size' → logprob: -10.500028610229492
    3. '_' → logprob: -15.750028610229492
    4. 'max' → logprob: -15.875028610229492
    5. '_min' → logprob: -16.125028610229492
    6. ' _' → logprob: -16.375028610229492
    7. '_MAX' → logprob: -16.500028610229492
    8. '_Max' → logprob: -16.625028610229492
    9. 'Max' → logprob: -16.750028610229492
    10. '=_' → logprob: -18.000028610229492

Token 375: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687121868133545
    2. '=' → logprob: -1.1368712186813354
    3. '=size' → logprob: -15.636871337890625
    4. ' ' → logprob: -17.886871337890625
    5. '   ' → logprob: -17.886871337890625
    6. '=
' → logprob: -18.261871337890625
    7. ' =
' → logprob: -18.511871337890625
    8. '＝' → logprob: -18.761871337890625
    9. ')' → logprob: -19.136871337890625
    10. 'size' → logprob: -19.386871337890625

Token 376: ' size' (ID: 2349)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.3132617771625519
    2. ' size' → logprob: -1.3132617473602295
    3. '	size' → logprob: -17.563261032104492
    4. '(size' → logprob: -17.813261032104492
    5. '               ' → logprob: -18.688261032104492
    6. 's' → logprob: -19.188261032104492
    7. '_size' → logprob: -19.438261032104492
    8. '=size' → logprob: -19.563261032104492
    9. ' ' → logprob: -19.688261032104492
    10. '   ' → logprob: -19.813261032104492

Token 377: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6346355080604553
    2. '
' → logprob: -0.7596355080604553
    3. '           ' → logprob: -7.1346354484558105
    4. '        
' → logprob: -7.1346354484558105
    5. '               ' → logprob: -8.634635925292969
    6. '<|end|>' → logprob: -9.509635925292969
    7. '            
' → logprob: -9.884635925292969
    8. '    
' → logprob: -10.259635925292969
    9. '
' → logprob: -10.509635925292969
    10. '   ' → logprob: -10.634635925292969

Token 378: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2166096568107605
    2. '
' → logprob: -1.7166097164154053
    3. '           ' → logprob: -4.466609477996826
    4. '        
' → logprob: -6.466609477996826
    5. '   ' → logprob: -7.216609477996826
    6. '               ' → logprob: -7.966609477996826
    7. '```' → logprob: -8.091609954833984
    8. '            
' → logprob: -8.716609954833984
    9. '<|end|>' → logprob: -8.841609954833984
    10. ' for' → logprob: -9.091609954833984

Token 379: ' max' (ID: 2999)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6465575098991394
    2. '   ' → logprob: -0.8965575098991394
    3. '
' → logprob: -2.771557569503784
    4. ' for' → logprob: -5.521557331085205
    5. '    
' → logprob: -7.771557331085205
    6. '        
' → logprob: -8.146557807922363
    7. ' max' → logprob: -8.271557807922363
    8. 'for' → logprob: -8.396557807922363
    9. ' if' → logprob: -8.771557807922363
    10. 'max' (adapté à ' max') → logprob: -9.396557807922363

Token 380: '_size' (ID: 5044)
  Prédit: '_size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -5.512236498361744e-07
    2. '_' → logprob: -15.750000953674316
    3. 'size' → logprob: -15.750000953674316
    4. '_max' → logprob: -15.875000953674316
    5. '_s' → logprob: -17.375
    6. '_SIZE' → logprob: -17.875
    7. '\' → logprob: -18.125
    8. '[size' → logprob: -18.25
    9. '   ' → logprob: -18.625
    10. '_sizes' → logprob: -19.0

Token 381: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.21342365443706512
    2. '[size' → logprob: -1.7134236097335815
    3. '[' → logprob: -4.713423728942871
    4. '[len' → logprob: -6.963423728942871
    5. '[max' → logprob: -6.963423728942871
    6. '[s' → logprob: -8.588423728942871
    7. '[current' → logprob: -8.588423728942871
    8. '[:]' → logprob: -9.213423728942871
    9. '[i' → logprob: -9.338423728942871
    10. '[:' → logprob: -9.588423728942871

Token 382: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0003955224819947034
    2. ' ]' → logprob: -8.000395774841309
    3. ']=' → logprob: -9.875395774841309
    4. '+' → logprob: -12.375395774841309
    5. '=' → logprob: -12.625395774841309
    6. '   ' → logprob: -15.250395774841309
    7. ')' → logprob: -15.375395774841309
    8. ' =' → logprob: -15.500395774841309
    9. ' ' → logprob: -15.875395774841309
    10. ']
' → logprob: -16.750394821166992

Token 383: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.21544794738292694
    2. ']' → logprob: -1.8404479026794434
    3. ' =' → logprob: -3.4654479026794434
    4. ']=' → logprob: -5.590447902679443
    5. ' ]' → logprob: -9.715448379516602
    6. '[' → logprob: -11.715448379516602
    7. '=max' → logprob: -12.215448379516602
    8. ' ' → logprob: -12.965448379516602
    9. ')' → logprob: -13.590448379516602
    10. '+' → logprob: -14.465448379516602

Token 384: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.0008915711659938097
    2. ' current' → logprob: -7.50089168548584
    3. 'max' → logprob: -8.00089168548584
    4. ' max' → logprob: -12.87589168548584
    5. 'cur' → logprob: -15.12589168548584
    6. ' ' → logprob: -15.62589168548584
    7. '	current' → logprob: -16.000890731811523
    8. 'curr' → logprob: -16.125890731811523
    9. '   ' → logprob: -16.750890731811523
    10. '(current' → logprob: -17.375890731811523

Token 385: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -9.729906196298543e-06
    2. ' _' → logprob: -12.750009536743164
    3. '_size' → logprob: -12.750009536743164
    4. 'max' → logprob: -13.000009536743164
    5. '_' → logprob: -14.000009536743164
    6. ')_' → logprob: -16.000009536743164
    7. '_MAX' → logprob: -16.250009536743164
    8. '_min' → logprob: -16.375009536743164
    9. ''_' → logprob: -16.500009536743164
    10. 'Max' → logprob: -16.750009536743164

Token 386: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.010855153203010559
    2. '   ' → logprob: -4.635855197906494
    3. '    
' → logprob: -7.010855197906494
    4. '\n' → logprob: -9.635854721069336
    5. '
' → logprob: -10.510854721069336
    6. ' 
' → logprob: -10.510854721069336
    7. '

' → logprob: -10.885854721069336
    8. 'return' → logprob: -10.885854721069336
    9. '  
' → logprob: -11.010854721069336
    10. ' for' → logprob: -12.385854721069336

Token 387: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37878498435020447
    2. '
' → logprob: -1.2537850141525269
    3. '    
' → logprob: -3.8787848949432373
    4. ' 
' → logprob: -5.128785133361816
    5. '   
' → logprob: -7.378785133361816
    6. 'return' → logprob: -7.503785133361816
    7. ' for' → logprob: -7.628785133361816
    8. ' return' → logprob: -7.628785133361816
    9. '\n' → logprob: -7.753785133361816
    10. '  
' → logprob: -8.128785133361816

Token 388: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11054547131061554
    2. ' for' → logprob: -2.4855453968048096
    3. '   ' → logprob: -3.8605453968048096
    4. '
' → logprob: -8.36054515838623
    5. 'return' → logprob: -9.86054515838623
    6. '```' → logprob: -11.11054515838623
    7. '#' (adapté à ' #') → logprob: -11.98554515838623
    8. ' return' → logprob: -13.11054515838623
    9. '    
' → logprob: -13.11054515838623
    10. '  ' → logprob: -13.36054515838623

Token 389: ' Compl' (ID: 62946)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00011129142512800172
    2. '#' → logprob: -10.00011157989502
    3. 'return' → logprob: -10.12511157989502
    4. ' for' → logprob: -11.12511157989502
    5. '   ' → logprob: -12.00011157989502
    6. '
' → logprob: -13.00011157989502
    7. 'max' → logprob: -13.75011157989502
    8. 'last' → logprob: -14.00011157989502
    9. '```' → logprob: -15.37511157989502
    10. 'pour' → logprob: -15.50011157989502

Token 390: 'éter' (ID: 73737)
  Prédit: 'éter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éter' → logprob: -0.5523536205291748
    2. 'é' → logprob: -1.1773536205291748
    3. 'ète' → logprob: -2.427353620529175
    4. 'ete' → logprob: -3.927353620529175
    5. 'été' → logprob: -5.552353858947754
    6. 'eter' → logprob: -6.052353858947754
    7. 'è' → logprob: -7.552353858947754
    8. 'e' → logprob: -7.552353858947754
    9. 'et' → logprob: -8.052353858947754
    10. 'ét' → logprob: -8.802353858947754

Token 391: ' max' (ID: 2999)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.1680753231048584
    2. ' le' → logprob: -1.6680753231048584
    3. 'for' → logprob: -1.6680753231048584
    4. ' la' → logprob: -2.0430753231048584
    5. ' les' → logprob: -2.2930753231048584
    6. 'le' → logprob: -3.2930753231048584
    7. ' max' → logprob: -4.4180755615234375
    8. 'max' → logprob: -4.6680755615234375
    9. ' pour' → logprob: -4.9180755615234375
    10. 'les' → logprob: -5.2930755615234375

Token 392: '_size' (ID: 5044)
  Prédit: '_size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -6.034592388459714e-06
    2. '_max' → logprob: -12.250005722045898
    3. '_' → logprob: -14.875005722045898
    4. 'size' → logprob: -15.125005722045898
    5. '   ' → logprob: -15.375005722045898
    6. 'max' → logprob: -16.3750057220459
    7. '_s' → logprob: -16.5000057220459
    8. '```' → logprob: -18.0000057220459
    9. '_sizes' → logprob: -18.1250057220459
    10. '\' → logprob: -18.1250057220459

Token 393: ' pour' (ID: 1930)
  Prédit: '[max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[max' → logprob: -1.1183806657791138
    2. '[a' → logprob: -1.4933806657791138
    3. '   ' → logprob: -1.9933806657791138
    4. '[' → logprob: -2.243380546569824
    5. '[i' → logprob: -2.743380546569824
    6. 'for' → logprob: -3.243380546569824
    7. '
' → logprob: -3.493380546569824
    8. ' for' → logprob: -4.118380546569824
    9. '[min' → logprob: -4.493380546569824
    10. '[:]' → logprob: -5.118380546569824

Token 394: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.7804880738258362
    2. 'a' → logprob: -1.0304880142211914
    3. ' le' → logprob: -3.1554880142211914
    4. ' a' → logprob: -3.5304880142211914
    5. 'i' → logprob: -3.7804880142211914
    6. ' range' → logprob: -3.9054880142211914
    7. 'le' → logprob: -4.280488014221191
    8. ' la' → logprob: -4.280488014221191
    9. ' i' → logprob: -4.405488014221191
    10. 'les' → logprob: -4.530488014221191

Token 395: ' indices' (ID: 30378)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.025310153141617775
    2. ' indices' → logprob: -3.7753100395202637
    3. 'a' → logprob: -7.025310039520264
    4. 'val' → logprob: -7.525310039520264
    5. 'indexes' → logprob: -8.025310516357422
    6. 'ind' → logprob: -8.900310516357422
    7. 'indice' → logprob: -9.650310516357422
    8. 'index' → logprob: -9.650310516357422
    9. 'positions' → logprob: -11.025310516357422
    10. ' a' → logprob: -12.150310516357422

Token 396: ' rest' (ID: 2867)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7581714391708374
    2. 'rest' → logprob: -2.383171558380127
    3. ' de' → logprob: -2.508171558380127
    4. ' rest' → logprob: -2.758171558380127
    5. ' a' → logprob: -3.008171558380127
    6. 'from' → logprob: -3.008171558380127
    7. 'range' → logprob: -3.008171558380127
    8. 'de' → logprob: -3.383171558380127
    9. '[a' → logprob: -3.633171558380127
    10. 'au' → logprob: -3.633171558380127

Token 397: 'ants' (ID: 2027)
  Prédit: 'ants'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ants' → logprob: -0.05762568488717079
    2. 'ant' → logprob: -2.9326257705688477
    3. '[' → logprob: -6.307625770568848
    4. 'a' → logprob: -7.807625770568848
    5. 'e' → logprob: -8.307625770568848
    6. '[a' → logprob: -8.932625770568848
    7. '[e' → logprob: -10.432625770568848
    8. '{' → logprob: -10.932625770568848
    9. ']' → logprob: -11.057625770568848
    10. '[]' → logprob: -11.182625770568848

Token 398: ' (' (ID: 350)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.08622854948043823
    2. '
' → logprob: -2.836228609085083
    3. 'for' → logprob: -4.086228370666504
    4. '   ' → logprob: -5.086228370666504
    5. '    
' → logprob: -8.336228370666504
    6. '[max' → logprob: -8.586228370666504
    7. '[' → logprob: -8.961228370666504
    8. '```' → logprob: -9.086228370666504
    9. ' 
' → logprob: -9.461228370666504
    10. '  
' → logprob: -10.336228370666504

Token 399: 'de' (ID: 613)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.19592370092868805
    2. ' range' → logprob: -2.1959238052368164
    3. 'for' → logprob: -2.8209238052368164
    4. ' for' → logprob: -5.320923805236816
    5. 'max' → logprob: -6.445923805236816
    6. ' max' → logprob: -8.445923805236816
    7. ')' → logprob: -8.945923805236816
    8. '   ' → logprob: -9.820923805236816
    9. 'from' → logprob: -9.945923805236816
    10. ' pour' → logprob: -10.070923805236816

Token 400: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.010015420615673065
    2. ' max' → logprob: -4.635015487670898
    3. 'a' → logprob: -8.385015487670898
    4. '(max' → logprob: -10.635015487670898
    5. 'range' → logprob: -12.135015487670898
    6. ' a' → logprob: -14.010015487670898
    7. 'len' → logprob: -15.135015487670898
    8. ' ' → logprob: -15.635015487670898
    9. '[max' → logprob: -16.0100154876709
    10. ' range' → logprob: -16.1350154876709

Token 401: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.13289758563041687
    2. '_size' → logprob: -2.3828976154327393
    3. '_a' → logprob: -3.5078976154327393
    4. '_max' → logprob: -6.38289737701416
    5. 'a' → logprob: -8.50789737701416
    6. '_num' → logprob: -9.88289737701416
    7. '   ' → logprob: -10.00789737701416
    8. '_i' → logprob: -10.13289737701416
    9. '_' → logprob: -10.25789737701416
    10. '_x' → logprob: -10.63289737701416

Token 402: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7427145838737488
    2. ' -' → logprob: -1.1177146434783936
    3. '+' → logprob: -2.1177146434783936
    4. ',' → logprob: -2.9927146434783936
    5. ' +' → logprob: -3.7427146434783936
    6. 'a' → logprob: -7.6177144050598145
    7. ')' → logprob: -7.7427144050598145
    8. ' à' → logprob: -7.7427144050598145
    9. ' ,' → logprob: -8.117714881896973
    10. '   ' → logprob: -8.242714881896973

Token 403: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.02003759890794754
    2. '8' → logprob: -4.020037651062012
    3. ' ' → logprob: -6.395037651062012
    4. '+' → logprob: -9.770037651062012
    5. 'a' → logprob: -9.770037651062012
    6. 'max' → logprob: -10.520037651062012
    7. '9' → logprob: -11.145037651062012
    8. '   ' → logprob: -11.645037651062012
    9. '
' → logprob: -11.645037651062012
    10. ' -' → logprob: -12.145037651062012

Token 404: ' à' (ID: 1221)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.051379911601543427
    2. ' à' → logprob: -3.176379919052124
    3. ' ,' → logprob: -5.426379680633545
    4. ')' → logprob: -5.926379680633545
    5. '+' → logprob: -7.926379680633545
    6. 'à' → logprob: -8.176380157470703
    7. ' to' → logprob: -8.301380157470703
    8. '),' → logprob: -9.426380157470703
    9. ' )' → logprob: -9.801380157470703
    10. ',max' → logprob: -9.926380157470703

Token 405: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0019286326132714748
    2. ' max' → logprob: -6.251928806304932
    3. '[max' → logprob: -17.001928329467773
    4. '   ' → logprob: -18.626928329467773
    5. ',max' → logprob: -19.001928329467773
    6. '	max' → logprob: -19.376928329467773
    7. '(max' → logprob: -19.501928329467773
    8. ' ' → logprob: -20.001928329467773
    9. '
' → logprob: -20.626928329467773
    10. 'n' → logprob: -20.626928329467773

Token 406: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -3.8889261304575484e-06
    2. 'n' → logprob: -13.375003814697266
    3. '_' → logprob: -13.875003814697266
    4. '_max' → logprob: -14.250003814697266
    5. '_size' → logprob: -14.625003814697266
    6. 'max' → logprob: -16.500003814697266
    7. '_i' → logprob: -16.750003814697266
    8. '_x' → logprob: -17.875003814697266
    9. ')' → logprob: -18.500003814697266
    10. ' _' → logprob: -18.750003814697266

Token 407: ')
' (ID: 446)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.06476390361785889
    2. '):' → logprob: -3.8147640228271484
    3. ')' → logprob: -3.9397640228271484
    4. '   ' → logprob: -4.439764022827148
    5. ',' → logprob: -5.689764022827148
    6. '+' → logprob: -6.064764022827148
    7. ')
' → logprob: -6.439764022827148
    8. ':' → logprob: -7.064764022827148
    9. 'for' → logprob: -7.564764022827148
    10. ' ):
' → logprob: -8.064764022827148

Token 408: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018686186522245407
    2. ' for' → logprob: -4.018686294555664
    3. 'for' → logprob: -7.643686294555664
    4. '
' → logprob: -10.143686294555664
    5. '```' → logprob: -11.643686294555664
    6. '	for' → logprob: -12.268686294555664
    7. '    
' → logprob: -13.518686294555664
    8. '    ' → logprob: -13.893686294555664
    9. '       ' → logprob: -14.768686294555664
    10. ',' → logprob: -14.768686294555664

Token 409: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.581458330154419
    2. ' for' → logprob: -0.831458330154419
    3. '   ' → logprob: -5.20645809173584
    4. '
' → logprob: -10.95645809173584
    5. '	for' → logprob: -13.33145809173584
    6. '```' → logprob: -13.58145809173584
    7. ' last' → logprob: -13.83145809173584
    8. 'last' → logprob: -14.70645809173584
    9. '    
' → logprob: -15.08145809173584
    10. 'max' → logprob: -15.58145809173584

Token 410: ' x' (ID: 1215)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0243520587682724
    2. 'a' → logprob: -3.7743520736694336
    3. 'x' → logprob: -7.149352073669434
    4. ' i' → logprob: -8.149352073669434
    5. 'k' → logprob: -10.649352073669434
    6. ' a' → logprob: -12.649352073669434
    7. 'idx' → logprob: -12.649352073669434
    8. 'index' → logprob: -14.024352073669434
    9. ' idx' → logprob: -15.149352073669434
    10. 'b' → logprob: -15.774352073669434

Token 411: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08903128653764725
    2. 'in' → logprob: -2.464031219482422
    3. '	in' → logprob: -10.714031219482422
    4. '   ' → logprob: -11.339031219482422
    5. ' ' → logprob: -11.464031219482422
    6. 'a' → logprob: -11.464031219482422
    7. 'In' → logprob: -11.839031219482422
    8. '_' → logprob: -11.964031219482422
    9. 'x' → logprob: -12.214031219482422
    10. ' ' → logprob: -12.589031219482422

Token 412: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0009126556105911732
    2. ' range' → logprob: -7.000912666320801
    3. '(range' → logprob: -13.6259126663208
    4. 'in' → logprob: -18.125911712646484
    5. ' ' → logprob: -18.750911712646484
    6. '	range' → logprob: -19.250911712646484
    7. ' in' → logprob: -19.750911712646484
    8. '   ' → logprob: -20.125911712646484
    9. 're' → logprob: -21.000911712646484
    10. '  ' → logprob: -21.625911712646484

Token 413: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -6.153795766294934e-06
    2. '(' → logprob: -12.500005722045898
    3. 'max' → logprob: -13.125005722045898
    4. ' max' → logprob: -16.6250057220459
    5. ' (' → logprob: -16.8750057220459
    6. '	max' → logprob: -17.6250057220459
    7. '((' → logprob: -17.7500057220459
    8. '=max' → logprob: -17.7500057220459
    9. '(min' → logprob: -18.1250057220459
    10. '   ' → logprob: -18.1250057220459

Token 414: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -1.9361264946837764e-07
    2. '_max' → logprob: -16.875
    3. '_x' → logprob: -17.0
    4. 'n' → logprob: -17.25
    5. '_size' → logprob: -18.25
    6. '-' → logprob: -18.25
    7. '_i' → logprob: -18.625
    8. 'max' → logprob: -18.75
    9. '(n' → logprob: -18.75
    10. '(' → logprob: -19.0

Token 415: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2254164218902588
    2. ' -' → logprob: -1.6004164218902588
    3. '   ' → logprob: -13.35041618347168
    4. ',' → logprob: -14.22541618347168
    5. ' ' → logprob: -14.22541618347168
    6. '7' → logprob: -14.97541618347168
    7. '+' → logprob: -15.72541618347168
    8. ')' → logprob: -16.35041618347168
    9. '8' → logprob: -16.60041618347168
    10. '−' → logprob: -16.72541618347168

Token 416: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0002614550176076591
    2. '6' → logprob: -8.250261306762695
    3. '8' → logprob: -15.750261306762695
    4. ' ' → logprob: -19.750261306762695
    5. '```' → logprob: -20.625261306762695
    6. '７' → logprob: -21.625261306762695
    7. '۷' → logprob: -22.000261306762695
    8. '07' → logprob: -22.125261306762695
    9. '   ' → logprob: -22.375261306762695
    10. '1' → logprob: -22.500261306762695

Token 417: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.00861456897109747
    2. '6' → logprob: -4.758614540100098
    3. '8' → logprob: -17.008615493774414
    4. ' ' → logprob: -18.758615493774414
    5. '```' → logprob: -20.258615493774414
    6. '
' → logprob: -21.008615493774414
    7. '７' → logprob: -21.008615493774414
    8. '   ' → logprob: -21.696115493774414
    9. '1' → logprob: -22.258615493774414
    10. '۷' → logprob: -22.446115493774414

Token 418: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4424035847187042
    2. '+' → logprob: -1.3174035549163818
    3. ' +' → logprob: -2.442403554916382
    4. ' ,' → logprob: -5.942403793334961
    5. '   ' → logprob: -9.567403793334961
    6. '+,' → logprob: -10.817403793334961
    7. ',max' → logprob: -11.817403793334961
    8. ' ' → logprob: -13.192403793334961
    9. ',
' → logprob: -14.192403793334961
    10. '  ' → logprob: -14.442403793334961

Token 419: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1637164789135568e-05
    2. ' ' → logprob: -11.375011444091797
    3. '   ' → logprob: -16.250011444091797
    4. '0' → logprob: -18.000011444091797
    5. ',' → logprob: -18.125011444091797
    6. '  ' → logprob: -18.625011444091797
    7. '2' → logprob: -19.125011444091797
    8. '```' → logprob: -19.250011444091797
    9. '１' → logprob: -20.062511444091797
    10. '
' → logprob: -20.187511444091797

Token 420: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.700132997939363e-05
    2. ' ' → logprob: -11.000017166137695
    3. '2' → logprob: -16.625017166137695
    4. '   ' → logprob: -16.875017166137695
    5. '8' → logprob: -17.625017166137695
    6. '0' → logprob: -18.125017166137695
    7. '  ' → logprob: -18.875017166137695
    8. '```' → logprob: -19.125017166137695
    9. ',' → logprob: -19.750017166137695
    10. '7' → logprob: -19.750017166137695

Token 421: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.392202976712724e-06
    2. ' ,' → logprob: -12.000006675720215
    3. ',max' → logprob: -16.6250057220459
    4. '   ' → logprob: -22.5000057220459
    5. ',
' → logprob: -22.8750057220459
    6. 'max' → logprob: -23.8750057220459
    7. '，' → logprob: -24.3750057220459
    8. ',len' → logprob: -24.8750057220459
    9. ',n' → logprob: -25.0000057220459
    10. ',m' → logprob: -25.0000057220459

Token 422: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.00020354038861114532
    2. ' max' → logprob: -8.500203132629395
    3. '   ' → logprob: -17.75020408630371
    4. '(max' → logprob: -18.37520408630371
    5. '	max' → logprob: -19.50020408630371
    6. ',max' → logprob: -19.62520408630371
    7. '=max' → logprob: -20.25020408630371
    8. 'len' → logprob: -20.87520408630371
    9. '[max' → logprob: -20.87520408630371
    10. '_max' → logprob: -22.25020408630371

Token 423: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.00017648482753429562
    2. 'n' → logprob: -8.750176429748535
    3. 'max' → logprob: -11.500176429748535
    4. '+' → logprob: -12.125176429748535
    5. '   ' → logprob: -14.000176429748535
    6. '_max' → logprob: -14.500176429748535
    7. '1' → logprob: -15.250176429748535
    8. 'N' → logprob: -15.250176429748535
    9. ' +' → logprob: -15.375176429748535
    10. ' ' → logprob: -15.750176429748535

Token 424: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.47409749031066895
    2. '+' → logprob: -0.974097490310669
    3. '   ' → logprob: -10.97409725189209
    4. ',' → logprob: -13.84909725189209
    5. '+
' → logprob: -14.34909725189209
    6. ' ' → logprob: -14.47409725189209
    7. ' +
' → logprob: -14.47409725189209
    8. '):
' → logprob: -14.59909725189209
    9. '
' → logprob: -17.224098205566406
    10. ')' → logprob: -17.349098205566406

Token 425: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.541112427134067e-05
    2. ' ' → logprob: -9.500075340270996
    3. '   ' → logprob: -14.750075340270996
    4. '  ' → logprob: -17.375076293945312
    5. '2' → logprob: -19.375076293945312
    6. ')' → logprob: -19.500076293945312
    7. '```' → logprob: -20.187576293945312
    8. '    ' → logprob: -20.375076293945312
    9. '0' → logprob: -20.437576293945312
    10. '
' → logprob: -20.687576293945312

Token 426: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '   ' → logprob: -17.750001907348633
    4. '  ' → logprob: -20.125001907348633
    5. '2' → logprob: -20.375001907348633
    6. '۱' → logprob: -21.250001907348633
    7. '```' → logprob: -21.250001907348633
    8. '0' → logprob: -21.625001907348633
    9. '１' → logprob: -21.750001907348633
    10. '    ' → logprob: -22.125001907348633

Token 427: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.005943255964666605
    2. '):' → logprob: -5.130943298339844
    3. '):
' → logprob: -11.755943298339844
    4. ' ):
' → logprob: -13.005943298339844
    5. '   ' → logprob: -13.630943298339844
    6. ',' → logprob: -13.880943298339844
    7. ':' → logprob: -14.255943298339844
    8. ':
' → logprob: -14.255943298339844
    9. '):

' → logprob: -14.880943298339844
    10. ')' → logprob: -14.880943298339844

Token 428: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014305122196674347
    2. '   ' → logprob: -4.514305114746094
    3. ' max' → logprob: -5.764305114746094
    4. 'max' → logprob: -9.389305114746094
    5. '           ' → logprob: -11.764305114746094
    6. '    ' → logprob: -12.139305114746094
    7. '        
' → logprob: -12.889305114746094
    8. '     ' → logprob: -13.014305114746094
    9. '(max' → logprob: -13.139305114746094
    10. '	max' → logprob: -13.264305114746094

Token 429: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.05715698003768921
    2. '   ' → logprob: -3.307157039642334
    3. ' max' → logprob: -4.057157039642334
    4. '       ' → logprob: -6.432157039642334
    5. '	max' → logprob: -10.932156562805176
    6. ' ' → logprob: -12.682156562805176
    7. '  ' → logprob: -13.557156562805176
    8. '           ' → logprob: -13.682156562805176
    9. '=max' → logprob: -14.182156562805176
    10. '[max' → logprob: -14.432156562805176

Token 430: '_size' (ID: 5044)
  Prédit: '_size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -7.896309739408025e-07
    2. '_max' → logprob: -14.875000953674316
    3. 'size' → logprob: -15.375000953674316
    4. '_s' → logprob: -17.125
    5. '_' → logprob: -17.375
    6. '_SIZE' → logprob: -18.125
    7. '   ' → logprob: -18.5
    8. '_sizes' → logprob: -18.75
    9. '[size' → logprob: -18.875
    10. 's' → logprob: -19.375

Token 431: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -7.3458322731312364e-06
    2. '[' → logprob: -12.000007629394531
    3. '[max' → logprob: -14.750007629394531
    4. ' [' → logprob: -15.125007629394531
    5. '=' → logprob: -16.37500762939453
    6. '\[' → logprob: -16.37500762939453
    7. 'x' → logprob: -17.62500762939453
    8. '[:]' → logprob: -17.75000762939453
    9. '=x' → logprob: -17.87500762939453
    10. '[s' → logprob: -17.87500762939453

Token 432: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008634069003164768
    2. ']=' → logprob: -4.758634090423584
    3. '=' → logprob: -11.008633613586426
    4. ' ]' → logprob: -12.758633613586426
    5. ' =' → logprob: -16.383634567260742
    6. ']+=' → logprob: -17.883634567260742
    7. ']=(' → logprob: -18.383634567260742
    8. ')' → logprob: -18.383634567260742
    9. '[' → logprob: -19.008634567260742
    10. ']={' → logprob: -19.883634567260742

Token 433: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0019330393988639116
    2. ' =' → logprob: -6.2519330978393555
    3. ']=' → logprob: -12.501933097839355
    4. ']' → logprob: -14.501933097839355
    5. '=max' → logprob: -15.626933097839355
    6. ')=' → logprob: -16.87693214416504
    7. '=

' → logprob: -17.12693214416504
    8. '[' → logprob: -17.50193214416504
    9. ')' → logprob: -18.50193214416504
    10. '.=' → logprob: -19.50193214416504

Token 434: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.0001870902779046446
    2. 'max' → logprob: -8.750186920166016
    3. ' current' → logprob: -10.500186920166016
    4. 'cur' → logprob: -14.000186920166016
    5. 'curr' → logprob: -16.125186920166016
    6. ' max' → logprob: -17.250186920166016
    7. '   ' → logprob: -17.250186920166016
    8. '	current' → logprob: -18.000186920166016
    9. ' ' → logprob: -18.500186920166016
    10. 'c' → logprob: -19.250186920166016

Token 435: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.00024120506714098155
    2. 'max' → logprob: -8.37524127960205
    3. '_size' → logprob: -11.50024127960205
    4. 'Max' → logprob: -15.25024127960205
    5. '[max' → logprob: -15.75024127960205
    6. '=max' → logprob: -18.125240325927734
    7. 'size' → logprob: -18.375240325927734
    8. '-max' → logprob: -18.375240325927734
    9. '_MAX' → logprob: -18.500240325927734
    10. '[' → logprob: -18.750240325927734

Token 436: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.039801858365535736
    2. '
' → logprob: -3.539801836013794
    3. 'return' → logprob: -4.664802074432373
    4. '    
' → logprob: -8.289801597595215
    5. ' return' → logprob: -8.414801597595215
    6. '	return' → logprob: -9.914801597595215
    7. '<|end|>' → logprob: -10.164801597595215
    8. '```' → logprob: -12.539801597595215
    9. ':return' → logprob: -12.789801597595215
    10. ')return' → logprob: -13.039801597595215

Token 437: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.038217972964048386
    2. 'return' → logprob: -3.2882180213928223
    3. '
' → logprob: -9.538217544555664
    4. ' return' → logprob: -9.788217544555664
    5. '	return' → logprob: -10.663217544555664
    6. '    
' → logprob: -10.913217544555664
    7. '```' → logprob: -12.288217544555664
    8. '<|end|>' → logprob: -14.288217544555664
    9. ':return' → logprob: -15.038217544555664
    10. '{return' → logprob: -15.663217544555664

Token 438: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.25415289402008057
    2. '   ' → logprob: -1.5041528940200806
    3. '	return' → logprob: -6.754152774810791
    4. ' return' → logprob: -6.879152774810791
    5. '```' → logprob: -12.00415325164795
    6. ':return' → logprob: -12.37915325164795
    7. '<|end|>' → logprob: -12.62915325164795
    8. ')return' → logprob: -12.87915325164795
    9. ' ' → logprob: -13.00415325164795
    10. 'eturn' → logprob: -13.25415325164795

Token 439: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.011048408225178719
    2. ' max' → logprob: -4.511048316955566
    3. '[max' → logprob: -14.636048316955566
    4. '(max' → logprob: -16.261049270629883
    5. '	max' → logprob: -18.636049270629883
    6. '   ' → logprob: -19.386049270629883
    7. ',max' → logprob: -20.136049270629883
    8. '_max' → logprob: -20.386049270629883
    9. '=max' → logprob: -21.136049270629883
    10. ' ' → logprob: -21.886049270629883

Token 440: '_size' (ID: 5044)
  Prédit: '_size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -7.896309739408025e-07
    2. 'size' → logprob: -14.125000953674316
    3. '_' → logprob: -17.875
    4. '_max' → logprob: -18.625
    5. '_s' → logprob: -18.75
    6. '_sizes' → logprob: -19.5
    7. 'max' → logprob: -19.625
    8. '_SIZE' → logprob: -19.75
    9. '[size' → logprob: -19.75
    10. '   ' → logprob: -19.875

Token 441: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 442: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00022272850037552416
    2. 'for' → logprob: -9.000223159790039
    3. '```' → logprob: -9.625223159790039
    4. '<|end|>' → logprob: -10.750223159790039
    5. 'import' → logprob: -11.750223159790039
    6. '#' → logprob: -13.750223159790039
    7. '
' → logprob: -14.375223159790039
    8. 'n' → logprob: -14.625223159790039
    9. '<|end|>' → logprob: -14.875223159790039
    10. '  
' → logprob: -15.000223159790039

Token 443: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.08717131614685059
    2. ' max' → logprob: -3.2121713161468506
    3. 'main' → logprob: -3.7121713161468506
    4. 'max' → logprob: -4.46217155456543
    5. ' find' → logprob: -5.71217155456543
    6. ' solve' → logprob: -6.46217155456543
    7. ' answer' → logprob: -7.33717155456543
    8. 'solve' → logprob: -7.46217155456543
    9. ' quadru' → logprob: -8.33717155456543
    10. ' process' → logprob: -8.96217155456543

Token 444: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -9.567575034452602e-05
    2. ' ():' → logprob: -9.87509536743164
    3. '(' → logprob: -10.62509536743164
    4. '():
' → logprob: -11.50009536743164
    5. '()' → logprob: -11.75009536743164
    6. '():
' → logprob: -14.62509536743164
    7. '()>' → logprob: -14.87509536743164
    8. ':' → logprob: -15.62509536743164
    9. '(:' → logprob: -15.62509536743164
    10. '_' → logprob: -15.75009536743164

Token 445: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08418305963277817
    2. 'import' → logprob: -3.2091829776763916
    3. 'max' → logprob: -3.8341829776763916
    4. ' max' → logprob: -4.584183216094971
    5. ' import' → logprob: -4.834183216094971
    6. 'input' → logprob: -8.709182739257812
    7. 'n' → logprob: -8.709182739257812
    8. ' input' → logprob: -8.834182739257812
    9. '```' → logprob: -9.959182739257812
    10. ' n' → logprob: -11.084182739257812

Token 446: ' input' (ID: 3422)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.48750054836273193
    2. 'input' (adapté à ' input') → logprob: -1.487500548362732
    3. '   ' → logprob: -2.2375006675720215
    4. ' input' → logprob: -3.7375006675720215
    5. ' max' → logprob: -4.3625006675720215
    6. 't' → logprob: -4.6125006675720215
    7. 'import' → logprob: -5.1125006675720215
    8. ' t' → logprob: -8.112500190734863
    9. ' import' → logprob: -8.362500190734863
    10. 'n' → logprob: -9.237500190734863

Token 447: '_numbers' (ID: 76842)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.8080412745475769
    2. '()' → logprob: -1.1830413341522217
    3. '_data' → logprob: -1.9330413341522217
    4. '_lines' → logprob: -2.8080413341522217
    5. '_' → logprob: -3.3080413341522217
    6. 's' → logprob: -5.808041095733643
    7. ' =' → logprob: -7.183041095733643
    8. '_l' → logprob: -7.433041095733643
    9. '_n' → logprob: -7.433041095733643
    10. '_list' → logprob: -8.4330415725708

Token 448: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25888076424598694
    2. '=' → logprob: -1.5088807344436646
    3. '()' → logprob: -5.008880615234375
    4. '_' → logprob: -8.758880615234375
    5. '(' → logprob: -10.383880615234375
    6. ' ' → logprob: -10.633880615234375
    7. '   ' → logprob: -10.883880615234375
    8. '	' → logprob: -11.883880615234375
    9. '=[]' → logprob: -13.133880615234375
    10. '  ' → logprob: -13.883880615234375

Token 449: ' []
' (ID: 8911)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -1.0160952806472778
    2. ' sys' → logprob: -1.2660952806472778
    3. 'list' → logprob: -2.0160951614379883
    4. ' list' → logprob: -2.2660951614379883
    5. '[' → logprob: -2.5160951614379883
    6. ' [' → logprob: -3.6410951614379883
    7. '[list' → logprob: -4.516095161437988
    8. 'map' → logprob: -7.516095161437988
    9. '[]' → logprob: -7.766095161437988
    10. ' map' → logprob: -9.141095161437988

Token 450: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03282364457845688
    2. ' for' → logprob: -4.03282356262207
    3. ' while' → logprob: -4.40782356262207
    4. ' n' → logprob: -7.53282356262207
    5. 'for' → logprob: -7.53282356262207
    6. '    
' → logprob: -8.28282356262207
    7. 'while' → logprob: -8.28282356262207
    8. '
' → logprob: -8.65782356262207
    9. 'n' → logprob: -8.78282356262207
    10. ' try' → logprob: -8.90782356262207

Token 451: ' max' (ID: 2999)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006439199671149254
    2. ' for' → logprob: -5.256439208984375
    3. 'try' → logprob: -7.256439208984375
    4. '   ' → logprob: -7.756439208984375
    5. 't' → logprob: -10.756439208984375
    6. 'n' → logprob: -11.006439208984375
    7. 'while' → logprob: -11.131439208984375
    8. ' try' → logprob: -11.506439208984375
    9. 'line' → logprob: -12.756439208984375
    10. ' t' → logprob: -13.506439208984375

Token 452: '_input' (ID: 12507)
  Prédit: '_n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.005911257583647966
    2. '_' → logprob: -5.880911350250244
    3. '_input' → logprob: -5.880911350250244
    4. '_number' → logprob: -9.255910873413086
    5. '_num' → logprob: -9.505910873413086
    6. '_val' → logprob: -10.755910873413086
    7. '_value' → logprob: -10.755910873413086
    8. '_length' → logprob: -11.130910873413086
    9. '_query' → logprob: -11.255910873413086
    10. '_len' → logprob: -11.380910873413086

Token 453: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.32959142327308655
    2. ' =' → logprob: -1.4545913934707642
    3. '=' → logprob: -3.0795915126800537
    4. '_=' → logprob: -7.579591274261475
    5. '_size' → logprob: -8.454591751098633
    6. ' ' → logprob: -8.704591751098633
    7. ' _' → logprob: -9.454591751098633
    8. '_length' → logprob: -9.454591751098633
    9. '_value' → logprob: -9.829591751098633
    10. '_input' → logprob: -9.829591751098633

Token 454: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10038793087005615
    2. ' ' → logprob: -2.3503880500793457
    3. ' int' → logprob: -9.350387573242188
    4. 'int' → logprob: -9.600387573242188
    5. '   ' → logprob: -10.725387573242188
    6. '  ' → logprob: -13.350387573242188
    7. ' max' → logprob: -13.725387573242188
    8. 'max' → logprob: -14.100387573242188
    9. ' -' → logprob: -15.225387573242188
    10. ' ' → logprob: -15.850387573242188

Token 455: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00046928023220971227
    2. 'int' → logprob: -7.875469207763672
    3. ' ' → logprob: -9.500469207763672
    4. 'max' → logprob: -11.375469207763672
    5. '-' → logprob: -13.750469207763672
    6. ' int' → logprob: -14.000469207763672
    7. '   ' → logprob: -15.125469207763672
    8. '1' → logprob: -15.375469207763672
    9. '100' → logprob: -15.875469207763672
    10. '  ' → logprob: -16.500469207763672

Token 456: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006211274303495884
    2. ' for' → logprob: -5.756211280822754
    3. 'for' → logprob: -6.381211280822754
    4. '
' → logprob: -7.006211280822754
    5. '    
' → logprob: -8.631211280822754
    6. 'while' → logprob: -9.006211280822754
    7. ' while' → logprob: -9.381211280822754
    8. 'n' → logprob: -11.256211280822754
    9. '<|end|>' → logprob: -11.631211280822754
    10. '	for' → logprob: -11.881211280822754

Token 457: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01449489314109087
    2. ' for' → logprob: -4.514494895935059
    3. 'for' → logprob: -6.389494895935059
    4. ' while' → logprob: -7.639494895935059
    5. '
' → logprob: -7.764494895935059
    6. '    
' → logprob: -8.139494895935059
    7. 'n' → logprob: -8.389494895935059
    8. 'while' → logprob: -8.639494895935059
    9. 'try' → logprob: -9.139494895935059
    10. ' try' → logprob: -10.889494895935059

Token 458: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.16884243488311768
    2. ' for' → logprob: -1.9188424348831177
    3. 'try' → logprob: -5.293842315673828
    4. '   ' → logprob: -6.168842315673828
    5. ' try' → logprob: -6.793842315673828
    6. 'n' → logprob: -8.543842315673828
    7. ' n' → logprob: -9.293842315673828
    8. ' t' → logprob: -10.543842315673828
    9. 't' → logprob: -10.668842315673828
    10. 'num' → logprob: -12.543842315673828

Token 459: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.2018347829580307
    2. 'line' → logprob: -1.701834797859192
    3. '_line' → logprob: -8.076834678649902
    4. '_' → logprob: -9.576834678649902
    5. '	line' → logprob: -10.451834678649902
    6. ' ligne' → logprob: -12.076834678649902
    7. 'ligne' → logprob: -13.451834678649902
    8. ' _' → logprob: -13.451834678649902
    9. 'n' → logprob: -13.576834678649902
    10. 'l' → logprob: -13.826834678649902

Token 460: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0017123052384704351
    2. 'in' → logprob: -6.376712322235107
    3. ' ' → logprob: -12.12671184539795
    4. '_' → logprob: -13.37671184539795
    5. '_in' → logprob: -14.00171184539795
    6. 'd' → logprob: -15.50171184539795
    7. 'line' → logprob: -15.68921184539795
    8. 's' → logprob: -15.75171184539795
    9. ' ' → logprob: -15.75171184539795
    10. ' =' → logprob: -15.75171184539795

Token 461: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.005234713666141033
    2. ' sys' → logprob: -5.255234718322754
    3. '=sys' → logprob: -14.755234718322754
    4. '	sys' → logprob: -15.005234718322754
    5. '(sys' → logprob: -17.005233764648438
    6. 'stdin' → logprob: -17.880233764648438
    7. 'input' → logprob: -18.380233764648438
    8. '```' → logprob: -19.505233764648438
    9. '   ' → logprob: -21.005233764648438
    10. '.sys' → logprob: -21.255233764648438

Token 462: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0002726601669564843
    2. 'stdin' → logprob: -8.500272750854492
    3. '.' → logprob: -10.375272750854492
    4. '.readline' → logprob: -10.750272750854492
    5. '(stdin' → logprob: -11.625272750854492
    6. ' stdin' → logprob: -12.250272750854492
    7. '.stdout' → logprob: -13.250272750854492
    8. '.argv' → logprob: -14.500272750854492
    9. 'in' → logprob: -16.000272750854492
    10. '.stderr' → logprob: -16.375272750854492

Token 463: ':
' (ID: 734)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.9808045029640198
    2. '.strip' → logprob: -1.230804443359375
    3. ':' → logprob: -1.480804443359375
    4. ':
' → logprob: -2.605804443359375
    5. '.rstrip' → logprob: -4.605804443359375
    6. '.readline' → logprob: -4.855804443359375
    7. '   ' → logprob: -5.105804443359375
    8. 'in' → logprob: -5.355804443359375
    9. '.' → logprob: -6.605804443359375
    10. '.readlines' → logprob: -7.980804443359375

Token 464: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15413863956928253
    2. '   ' → logprob: -2.0291385650634766
    3. ' line' → logprob: -4.779138565063477
    4. ' n' → logprob: -6.279138565063477
    5. '    
' → logprob: -8.029138565063477
    6. 'n' → logprob: -8.279138565063477
    7. '    ' → logprob: -9.154138565063477
    8. ' input' → logprob: -9.529138565063477
    9. '        
' → logprob: -9.779138565063477
    10. 'line' → logprob: -10.154138565063477

Token 465: ' n' (ID: 297)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.9679802656173706
    2. ' n' → logprob: -1.4679802656173706
    3. 'n' (adapté à ' n') → logprob: -1.7179802656173706
    4. ' line' → logprob: -2.46798038482666
    5. ' num' → logprob: -2.71798038482666
    6. '   ' → logprob: -3.84298038482666
    7. 'line' → logprob: -3.96798038482666
    8. ' number' → logprob: -4.21798038482666
    9. 'number' → logprob: -5.84298038482666
    10. 'val' → logprob: -7.96798038482666

Token 466: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12695415318012238
    2. ' =' → logprob: -2.1269540786743164
    3. '=int' → logprob: -10.626954078674316
    4. '=line' → logprob: -13.376954078674316
    5. '=
' → logprob: -16.501955032348633
    6. '_str' → logprob: -16.626955032348633
    7. '=

' → logprob: -17.251955032348633
    8. '＝' → logprob: -17.751955032348633
    9. '.strip' → logprob: -17.876955032348633
    10. ' ' → logprob: -17.876955032348633

Token 467: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00011284107313258573
    2. ' int' → logprob: -9.250112533569336
    3. 'line' → logprob: -11.000112533569336
    4. '=int' → logprob: -18.250112533569336
    5. ' line' → logprob: -19.125112533569336
    6. '(int' → logprob: -19.250112533569336
    7. '   ' → logprob: -20.500112533569336
    8. '[int' → logprob: -21.750112533569336
    9. ' ' → logprob: -22.250112533569336
    10. '<int' → logprob: -22.375112533569336

Token 468: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.005234713666141033
    2. '(' → logprob: -5.255234718322754
    3. 'line' → logprob: -14.755234718322754
    4. '(n' → logprob: -15.880234718322754
    5. '=line' → logprob: -15.880234718322754
    6. '(
' → logprob: -16.130233764648438
    7. ' line' → logprob: -16.255233764648438
    8. '[line' → logprob: -16.755233764648438
    9. '#line' → logprob: -17.505233764648438
    10. '	line' → logprob: -18.005233764648438

Token 469: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.0027763471007347107
    2. ')' → logprob: -6.002776145935059
    3. '.rstrip' → logprob: -8.252776145935059
    4. '.' → logprob: -10.252776145935059
    5. 'strip' → logprob: -12.502776145935059
    6. '.chomp' → logprob: -15.127776145935059
    7. '.readline' → logprob: -15.377776145935059
    8. '.split' → logprob: -15.752776145935059
    9. '.trim' → logprob: -15.877776145935059
    10. ')
' → logprob: -16.002777099609375

Token 470: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00047821682528592646
    2. '())
' → logprob: -8.25047779083252
    3. ')' → logprob: -8.75047779083252
    4. '()' → logprob: -9.75047779083252
    5. '())

' → logprob: -16.250478744506836
    6. '())
' → logprob: -16.625478744506836
    7. '(' → logprob: -17.000478744506836
    8. '()
' → logprob: -17.000478744506836
    9. '()))' → logprob: -18.000478744506836
    10. ' ())' → logprob: -18.000478744506836

Token 471: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04445997253060341
    2. '   ' → logprob: -3.5444600582122803
    3. ' if' → logprob: -4.919459819793701
    4. 'if' → logprob: -5.919459819793701
    5. '<|end|>' → logprob: -6.294459819793701
    6. '        
' → logprob: -6.669459819793701
    7. '
' → logprob: -7.294459819793701
    8. '    
' → logprob: -8.54446029663086
    9. 'input' → logprob: -8.66946029663086
    10. '	if' → logprob: -9.04446029663086

Token 472: ' if' (ID: 538)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.13158175349235535
    2. 'if' (adapté à ' if') → logprob: -2.1315817832946777
    3. '   ' → logprob: -5.506581783294678
    4. 'max' → logprob: -8.25658130645752
    5. ' if' → logprob: -8.75658130645752
    6. ' input' → logprob: -9.25658130645752
    7. '       ' → logprob: -9.63158130645752
    8. ' ' → logprob: -14.13158130645752
    9. '<input' → logprob: -14.25658130645752
    10. '```' → logprob: -14.25658130645752

Token 473: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.07889628410339355
    2. 'n' → logprob: -2.5788962841033936
    3. ' not' → logprob: -12.203896522521973
    4. '	n' → logprob: -13.578896522521973
    5. 'not' → logprob: -16.078895568847656
    6. ' ' → logprob: -16.953895568847656
    7. 'n't' → logprob: -16.953895568847656
    8. ' ' → logprob: -17.078895568847656
    9. ')n' → logprob: -18.328895568847656
    10. '   ' → logprob: -18.578895568847656

Token 474: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.230956569314003
    2. '==' → logprob: -1.6059565544128418
    3. ' <=' → logprob: -5.605956554412842
    4. '<=' → logprob: -6.605956554412842
    5. ' <' → logprob: -7.855956554412842
    6. '<' → logprob: -9.60595703125
    7. '=' → logprob: -10.98095703125
    8. '>' → logprob: -11.60595703125
    9. ' >' → logprob: -11.98095703125
    10. '===' → logprob: -13.10595703125

Token 475: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018150178715586662
    2. ' ' → logprob: -4.018150329589844
    3. '-' → logprob: -16.268150329589844
    4. ' -' → logprob: -16.768150329589844
    5. ' ' → logprob: -18.018150329589844
    6. '  ' → logprob: -18.143150329589844
    7. '   ' → logprob: -18.518150329589844
    8. '	' → logprob: -18.893150329589844
    9. '=' → logprob: -19.018150329589844
    10. '```' → logprob: -19.143150329589844

Token 476: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.816093228830141e-06
    2. ' ' → logprob: -13.00000286102295
    3. '-' → logprob: -14.50000286102295
    4. ' -' → logprob: -19.250001907348633
    5. '```' → logprob: -20.250001907348633
    6. '   ' → logprob: -20.625001907348633
    7. '=' → logprob: -21.125001907348633
    8. '  ' → logprob: -21.750001907348633
    9. '۰' → logprob: -21.750001907348633
    10. '1' → logprob: -22.250001907348633

Token 477: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1270415037870407
    2. ':
' → logprob: -2.1270415782928467
    3. '       ' → logprob: -9.752041816711426
    4. '   ' → logprob: -10.627041816711426
    5. '           ' → logprob: -10.877041816711426
    6. ':
' → logprob: -11.877041816711426
    7. ':return' → logprob: -12.877041816711426
    8. ' :' → logprob: -13.627041816711426
    9. ':

' → logprob: -14.752041816711426
    10. ' :
' → logprob: -15.127041816711426

Token 478: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0017820450011640787
    2. '       ' → logprob: -6.376781940460205
    3. 'break' → logprob: -9.626782417297363
    4. '		' → logprob: -12.126782417297363
    5. '	       ' → logprob: -13.126782417297363
    6. '   ' → logprob: -13.126782417297363
    7. '
' → logprob: -13.376782417297363
    8. ' break' → logprob: -13.876782417297363
    9. '	break' → logprob: -14.251782417297363
    10. '               ' → logprob: -15.126782417297363

Token 479: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.045927345752716064
    2. ' break' → logprob: -3.6709272861480713
    3. '       ' → logprob: -4.42092752456665
    4. '	break' → logprob: -5.54592752456665
    5. '           ' → logprob: -5.92092752456665
    6. 'return' → logprob: -7.17092752456665
    7. '   ' → logprob: -11.045927047729492
    8. '_break' → logprob: -11.545927047729492
    9. '
' → logprob: -11.920927047729492
    10. '```' → logprob: -12.045927047729492

Token 480: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023613469675183296
    2. '
' → logprob: -3.898613452911377
    3. '<|end|>' → logprob: -6.023613452911377
    4. '        
' → logprob: -7.648613452911377
    5. '<|end|>' → logprob: -9.648613929748535
    6. '  
' → logprob: -10.148613929748535
    7. ' 
' → logprob: -10.898613929748535
    8. '    
' → logprob: -11.273613929748535
    9. ',' → logprob: -11.648613929748535
    10. '
' → logprob: -12.273613929748535

Token 481: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00015002528380136937
    2. '<|end|>' → logprob: -9.500149726867676
    3. '
' → logprob: -10.250149726867676
    4. '   ' → logprob: -10.875149726867676
    5. '        
' → logprob: -11.375149726867676
    6. '  
' → logprob: -13.375149726867676
    7. '<|end|>' → logprob: -13.500149726867676
    8. ',' → logprob: -13.625149726867676
    9. '```' → logprob: -13.875149726867676
    10. '	' → logprob: -14.375149726867676

Token 482: ' input' (ID: 3422)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7517461776733398
    2. ' if' → logprob: -1.0017461776733398
    3. 'input' (adapté à ' input') → logprob: -2.00174617767334
    4. ' input' → logprob: -4.25174617767334
    5. '   ' → logprob: -4.75174617767334
    6. '       ' → logprob: -5.75174617767334
    7. 'max' → logprob: -10.87674617767334
    8. ' ' → logprob: -11.62674617767334
    9. '	if' → logprob: -11.75174617767334
    10. '```' → logprob: -11.87674617767334

Token 483: '_numbers' (ID: 76842)
  Prédit: '_numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_numbers' → logprob: -0.0002165299083571881
    2. '_' → logprob: -8.500216484069824
    3. ')_' → logprob: -12.625216484069824
    4. '_tokens' → logprob: -12.625216484069824
    5. ' _' → logprob: -13.125216484069824
    6. '_n' → logprob: -13.750216484069824
    7. '_values' → logprob: -14.250216484069824
    8. '_
' → logprob: -15.250216484069824
    9. '_number' → logprob: -15.625216484069824
    10. '_lines' → logprob: -15.750216484069824

Token 484: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0003361774142831564
    2. '.' → logprob: -8.000336647033691
    3. '.app' → logprob: -14.625336647033691
    4. ' .' → logprob: -15.875336647033691
    5. 'append' → logprob: -16.125335693359375
    6. '.extend' → logprob: -16.625335693359375
    7. '.ap' → logprob: -17.000335693359375
    8. '.push' → logprob: -18.875335693359375
    9. '.Append' → logprob: -19.000335693359375
    10. '_append' → logprob: -20.250335693359375

Token 485: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -8.180258191714529e-06
    2. 'n' → logprob: -11.750008583068848
    3. '(' → logprob: -15.250008583068848
    4. ' n' → logprob: -17.62500762939453
    5. ' (' → logprob: -18.62500762939453
    6. '((' → logprob: -20.00000762939453
    7. ')n' → logprob: -20.00000762939453
    8. '	n' → logprob: -20.75000762939453
    9. '(
' → logprob: -22.12500762939453
    10. ',n' → logprob: -22.50000762939453

Token 486: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000627014203928411
    2. ')
' → logprob: -7.625627040863037
    3. ' )' → logprob: -9.125626564025879
    4. ')n' → logprob: -10.875626564025879
    5. '       ' → logprob: -12.375626564025879
    6. '<|end|>' → logprob: -13.625626564025879
    7. ')return' → logprob: -14.250626564025879
    8. '
' → logprob: -14.375626564025879
    9. ')\
' → logprob: -14.750626564025879
    10. '),' → logprob: -15.000626564025879

Token 487: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009482608293183148
    2. '   ' → logprob: -7.500948429107666
    3. ' if' → logprob: -8.125947952270508
    4. 'if' → logprob: -9.375947952270508
    5. '```' → logprob: -12.250947952270508
    6. ' ' → logprob: -12.750947952270508
    7. '
' → logprob: -13.625947952270508
    8. '<|end|>' → logprob: -13.750947952270508
    9. '﻿' → logprob: -14.250947952270508
    10. 'max' → logprob: -14.625947952270508

Token 488: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0001887591351987794
    2. ' if' → logprob: -9.500188827514648
    3. 'max' → logprob: -9.750188827514648
    4. '       ' → logprob: -10.000188827514648
    5. '   ' → logprob: -11.500188827514648
    6. '
' → logprob: -16.75018882751465
    7. '           ' → logprob: -17.00018882751465
    8. '	if' → logprob: -18.25018882751465
    9. '```' → logprob: -19.12518882751465
    10. '        
' → logprob: -19.37518882751465

Token 489: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.4740799069404602
    2. 'n' → logprob: -0.9740799069404602
    3. '	n' → logprob: -12.849080085754395
    4. ' ' → logprob: -16.349079132080078
    5. '       ' → logprob: -16.474079132080078
    6. '   ' → logprob: -16.599079132080078
    7. '    ' → logprob: -16.849079132080078
    8. '(n' → logprob: -17.974079132080078
    9. '        ' → logprob: -18.099079132080078
    10. '_n' → logprob: -18.724079132080078

Token 490: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.17975258827209473
    2. '>' → logprob: -1.8047525882720947
    3. ' ' → logprob: -12.304752349853516
    4. '   ' → logprob: -13.554752349853516
    5. '	' → logprob: -14.679752349853516
    6. ' ' → logprob: -14.804752349853516
    7. '  ' → logprob: -15.554752349853516
    8. '[' → logprob: -15.554752349853516
    9. ' >
' → logprob: -15.679752349853516
    10. '    ' → logprob: -15.804752349853516

Token 491: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0019286326132714748
    2. ' max' → logprob: -6.251928806304932
    3. '       ' → logprob: -16.626928329467773
    4. '	max' → logprob: -17.876928329467773
    5. '   ' → logprob: -18.751928329467773
    6. '_max' → logprob: -18.876928329467773
    7. 'maxlength' → logprob: -19.126928329467773
    8. '(max' → logprob: -20.251928329467773
    9. '=max' → logprob: -20.751928329467773
    10. '           ' → logprob: -20.751928329467773

Token 492: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -4.429896944202483e-05
    2. 'max' → logprob: -10.375043869018555
    3. '_max' → logprob: -11.875043869018555
    4. 'input' → logprob: -12.125043869018555
    5. 'Input' → logprob: -14.625043869018555
    6. '   ' → logprob: -18.375043869018555
    7. '_output' → logprob: -18.375043869018555
    8. ' input' → logprob: -18.500043869018555
    9. '_INPUT' → logprob: -18.875043869018555
    10. 'maxlength' → logprob: -19.250043869018555

Token 493: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0901007130742073
    2. ':
' → logprob: -2.8401007652282715
    3. '           ' → logprob: -4.5901007652282715
    4. '       ' → logprob: -5.3401007652282715
    5. '=' → logprob: -6.0901007652282715
    6. ' :' → logprob: -6.0901007652282715
    7. '>' → logprob: -6.4651007652282715
    8. 'n' → logprob: -6.8401007652282715
    9. '=max' → logprob: -6.8401007652282715
    10. ' =' → logprob: -7.0901007652282715

Token 494: '           ' (ID: 352)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.2524869441986084
    2. 'n' → logprob: -1.5024869441986084
    3. '           ' → logprob: -7.5024871826171875
    4. ' max' → logprob: -12.877487182617188
    5. '	n' → logprob: -13.627487182617188
    6. 'max' → logprob: -14.127487182617188
    7. ' ' → logprob: -14.627487182617188
    8. '               ' → logprob: -16.002487182617188
    9. '	       ' → logprob: -16.002487182617188
    10. '(n' → logprob: -16.252487182617188

Token 495: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.2022542953491211
    2. ' max' → logprob: -1.702254295349121
    3. 'n' → logprob: -7.202254295349121
    4. ' n' → logprob: -9.702254295349121
    5. '           ' → logprob: -10.452254295349121
    6. '               ' → logprob: -12.202254295349121
    7. '	max' → logprob: -14.827254295349121
    8. '   ' → logprob: -15.327254295349121
    9. '_max' → logprob: -16.202255249023438
    10. 'maxlength' → logprob: -17.202255249023438

Token 496: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -1.6240566083070007e-06
    2. 'input' → logprob: -13.375001907348633
    3. 'Input' → logprob: -17.375001907348633
    4. '<input' → logprob: -18.250001907348633
    5. '_INPUT' → logprob: -18.375001907348633
    6. '入力' → logprob: -19.250001907348633
    7. '_inputs' → logprob: -19.375001907348633
    8. 'import' → logprob: -19.625001907348633
    9. ' input' → logprob: -19.625001907348633
    10. '_import' → logprob: -19.875001907348633

Token 497: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07888989895582199
    2. ' =' → logprob: -2.578889846801758
    3. '＝' → logprob: -16.703889846801758
    4. '=n' → logprob: -17.078889846801758
    5. '=
' → logprob: -19.203889846801758
    6. '=

' → logprob: -19.328889846801758
    7. '.=' → logprob: -19.703889846801758
    8. '           ' → logprob: -19.828889846801758
    9. '=max' → logprob: -20.203889846801758
    10. '            ' → logprob: -20.203889846801758

Token 498: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4740772247314453
    2. ' n' → logprob: -0.9740772247314453
    3. '	n' → logprob: -15.349077224731445
    4. '_n' → logprob: -18.224077224731445
    5. '$n' → logprob: -18.974077224731445
    6. ')n' → logprob: -19.724077224731445
    7. ' ' → logprob: -20.724077224731445
    8. '```' → logprob: -20.849077224731445
    9. ',n' → logprob: -20.974077224731445
    10. '=n' → logprob: -21.224077224731445

Token 499: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006807499099522829
    2. '    
' → logprob: -5.631807327270508
    3. '
' → logprob: -5.881807327270508
    4. '```' → logprob: -8.631807327270508
    5. '  
' → logprob: -9.881807327270508
    6. '<|end|>' → logprob: -10.131807327270508
    7. '        
' → logprob: -10.381807327270508
    8. 'max' → logprob: -11.131807327270508
    9. '       ' → logprob: -11.256807327270508
    10. '<|end|>' → logprob: -12.006807327270508

Token 500: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.044592682272195816
    2. '
' → logprob: -3.2945926189422607
    3. '    
' → logprob: -5.66959285736084
    4. ' max' → logprob: -6.41959285736084
    5. 'max' → logprob: -6.66959285736084
    6. '```' → logprob: -10.29459285736084
    7. '  
' → logprob: -10.41959285736084
    8. ' 
' → logprob: -10.54459285736084
    9. '	max' → logprob: -10.79459285736084
    10. '        
' → logprob: -10.91959285736084

Token 501: ' #' (ID: 1069)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.564655065536499
    2. ' max' → logprob: -1.564655065536499
    3. '   ' → logprob: -2.189655065536499
    4. '
' → logprob: -2.314655065536499
    5. '    
' → logprob: -4.689655303955078
    6. ' 
' → logprob: -6.814655303955078
    7. '```' → logprob: -7.689655303955078
    8. '  
' → logprob: -8.189655303955078
    9. '   
' → logprob: -8.814655303955078
    10. ' ' → logprob: -9.064655303955078

Token 502: ' Pré' (ID: 86400)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0008142740116454661
    2. ' max' → logprob: -7.125814437866211
    3. '   ' → logprob: -12.375814437866211
    4. 'pre' → logprob: -12.750814437866211
    5. 'if' → logprob: -13.250814437866211
    6. 'result' → logprob: -15.250814437866211
    7. '```' → logprob: -16.00081443786621
    8. 'results' → logprob: -16.37581443786621
    9. ' pre' → logprob: -16.50081443786621
    10. 't' → logprob: -16.50081443786621

Token 503: '-cal' (ID: 84920)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.01949399523437023
    2. 'computed' → logprob: -4.26949405670166
    3. 'max' → logprob: -5.76949405670166
    4. '   ' → logprob: -7.89449405670166
    5. '_compute' → logprob: -8.01949405670166
    6. 'com' → logprob: -8.01949405670166
    7. 'size' → logprob: -8.14449405670166
    8. 'calculate' → logprob: -8.39449405670166
    9. 'comput' → logprob: -8.51949405670166
    10. 'pare' → logprob: -8.64449405670166

Token 504: 'cul' (ID: 2885)
  Prédit: 'cul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cul' → logprob: -0.006726264487951994
    2. 'culation' → logprob: -5.506726264953613
    3. 'c' → logprob: -7.131726264953613
    4. 'culate' → logprob: -7.256726264953613
    5. 'cule' → logprob: -7.881726264953613
    6. 'cular' → logprob: -8.006726264953613
    7. 'culator' → logprob: -8.256726264953613
    8. 'culated' → logprob: -9.631726264953613
    9. 'er' → logprob: -10.381726264953613
    10. 'cut' → logprob: -11.006726264953613

Token 505: 'er' (ID: 259)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24192354083061218
    2. 'max' → logprob: -1.6169235706329346
    3. ' max' → logprob: -4.2419233322143555
    4. '(max' → logprob: -6.6169233322143555
    5. '_max' → logprob: -8.616923332214355
    6. '
' → logprob: -9.241923332214355
    7. 't' → logprob: -9.366923332214355
    8. 'size' → logprob: -10.116923332214355
    9. '    
' → logprob: -10.241923332214355
    10. '  ' → logprob: -10.366923332214355

Token 506: ' pour' (ID: 1930)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.4407598376274109
    2. 'max' → logprob: -1.0657598972320557
    3. '   ' → logprob: -4.440759658813477
    4. '(max' → logprob: -9.315759658813477
    5. '
' → logprob: -9.940759658813477
    6. ' =' → logprob: -11.565759658813477
    7. ' twin' → logprob: -11.815759658813477
    8. ' result' → logprob: -11.815759658813477
    9. ' ' → logprob: -12.190759658813477
    10. 'result' → logprob: -12.440759658813477

Token 507: ' tous' (ID: 10688)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.06232661008834839
    2. ' max' → logprob: -2.812326669692993
    3. 'all' → logprob: -8.937326431274414
    4. '(max' → logprob: -8.937326431274414
    5. ' all' → logprob: -10.687326431274414
    6. 'tout' → logprob: -11.312326431274414
    7. '[max' → logprob: -11.312326431274414
    8. 't' → logprob: -11.437326431274414
    9. '=max' → logprob: -11.562326431274414
    10. ' maximum' → logprob: -12.187326431274414

Token 508: ' les' (ID: 1341)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5620261430740356
    2. 'les' → logprob: -1.5620261430740356
    3. ' les' → logprob: -1.6870261430740356
    4. '(max' → logprob: -4.437026023864746
    5. ' max' → logprob: -4.562026023864746
    6. 'le' → logprob: -4.937026023864746
    7. '_' → logprob: -5.687026023864746
    8. 'la' → logprob: -6.937026023864746
    9. ' le' → logprob: -8.062026023864746
    10. '=' → logprob: -8.812026023864746

Token 509: ' n' (ID: 297)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.04864414036273956
    2. 'input' → logprob: -3.2986440658569336
    3. 'n' → logprob: -4.923644065856934
    4. 'inputs' → logprob: -6.298644065856934
    5. ' max' → logprob: -7.673644065856934
    6. 'numbers' → logprob: -7.798644065856934
    7. 'range' → logprob: -8.923644065856934
    8. ' input' → logprob: -8.923644065856934
    9. '(max' → logprob: -9.548644065856934
    10. 'values' → logprob: -9.548644065856934

Token 510: ' jusqu' (ID: 21961)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.21369488537311554
    2. ' max' → logprob: -1.8386949300765991
    3. '(max' → logprob: -3.5886948108673096
    4. ' jusqu' → logprob: -5.588695049285889
    5. '=' → logprob: -7.338695049285889
    6. ' =' → logprob: -7.588695049285889
    7. '=max' → logprob: -8.46369457244873
    8. '_max' → logprob: -8.96369457244873
    9. '[max' → logprob: -9.33869457244873
    10. ' la' → logprob: -9.58869457244873

Token 511: ''au' (ID: 63689)
  Prédit: ''à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.2507687509059906
    2. 'à' → logprob: -2.5007686614990234
    3. ''au' → logprob: -2.5007686614990234
    4. 'au' → logprob: -2.8757686614990234
    5. '’à' → logprob: -6.875768661499023
    6. '’au' → logprob: -9.375768661499023
    7. 'a' → logprob: -9.500768661499023
    8. 'max' → logprob: -10.000768661499023
    9. '`' → logprob: -10.250768661499023
    10. ' à' → logprob: -10.500768661499023

Token 512: ' maximum' (ID: 10562)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -3.547789674485102e-05
    2. ' max' → logprob: -10.250035285949707
    3. 'maximum' → logprob: -19.125036239624023
    4. '=max' → logprob: -19.500036239624023
    5. '[max' → logprob: -19.875036239624023
    6. '	max' → logprob: -20.375036239624023
    7. '
' → logprob: -20.625036239624023
    8. '_max' → logprob: -20.750036239624023
    9. '(max' → logprob: -21.000036239624023
    10. '   ' → logprob: -22.375036239624023

Token 513: ' d' (ID: 272)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.9803065657615662
    2. '   ' → logprob: -1.105306625366211
    3. ' max' → logprob: -1.230306625366211
    4. '(max' → logprob: -6.730306625366211
    5. '	max' → logprob: -9.605306625366211
    6. '=max' → logprob: -9.855306625366211
    7. '  ' → logprob: -10.230306625366211
    8. ' ' → logprob: -10.605306625366211
    9. '
' → logprob: -10.730306625366211
    10. '[max' → logprob: -10.855306625366211

Token 514: ''entrée' (ID: 115820)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.09027881920337677
    2. '_input' → logprob: -2.9652788639068604
    3. 'input' → logprob: -4.090278625488281
    4. 'u' → logprob: -4.840278625488281
    5. 'e' → logprob: -5.215278625488281
    6. '_max' → logprob: -6.715278625488281
    7. '```' → logprob: -7.215278625488281
    8. '(max' → logprob: -7.465278625488281
    9. ' max' → logprob: -7.965278625488281
    10. '_' → logprob: -7.965278625488281

Token 515: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.270028680562973
    2. ' max' → logprob: -1.6450287103652954
    3. 'max' → logprob: -3.145028591156006
    4. '(max' → logprob: -8.020029067993164
    5. '
' → logprob: -9.645029067993164
    6. '    
' → logprob: -10.020029067993164
    7. ' pre' → logprob: -10.645029067993164
    8. '  ' → logprob: -10.770029067993164
    9. ' ' → logprob: -10.895029067993164
    10. '	max' → logprob: -11.020029067993164

Token 516: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008818893693387508
    2. ' max' → logprob: -5.133819103240967
    3. 'max' → logprob: -5.883819103240967
    4. '
' → logprob: -9.383818626403809
    5. '    
' → logprob: -12.008818626403809
    6. '(max' → logprob: -12.383818626403809
    7. ',' → logprob: -13.383818626403809
    8. '```' → logprob: -13.383818626403809
    9. '	max' → logprob: -14.008818626403809
    10. ',max' → logprob: -14.133818626403809

Token 517: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.5998743176460266
    2. ' max' → logprob: -1.2248742580413818
    3. '   ' → logprob: -1.8498742580413818
    4. '
' → logprob: -11.099874496459961
    5. ' ' → logprob: -11.099874496459961
    6. ' pre' → logprob: -11.349874496459961
    7. '    
' → logprob: -11.599874496459961
    8. 'pre' → logprob: -12.474874496459961
    9. '	max' → logprob: -12.724874496459961
    10. '  ' → logprob: -13.224874496459961

Token 518: '_size' (ID: 5044)
  Prédit: '_size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -8.7689099018462e-05
    2. '_sizes' → logprob: -9.87508773803711
    3. 'size' → logprob: -11.50008773803711
    4. '_' → logprob: -11.87508773803711
    5. '_t' → logprob: -12.00008773803711
    6. '_max' → logprob: -12.25008773803711
    7. 't' → logprob: -13.50008773803711
    8. 'max' → logprob: -13.62508773803711
    9. '_quad' → logprob: -13.62508773803711
    10. '_input' → logprob: -13.75008773803711

Token 519: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25192928314208984
    2. '=' → logprob: -1.5019292831420898
    3. '[' → logprob: -16.626930236816406
    4. 's' → logprob: -16.751930236816406
    5. '＝' → logprob: -17.376930236816406
    6. ',' → logprob: -17.376930236816406
    7. '_' → logprob: -17.626930236816406
    8. ' ' → logprob: -17.626930236816406
    9. ')' → logprob: -18.001930236816406
    10. ' ' → logprob: -19.251930236816406

Token 520: ' pre' (ID: 876)
  Prédit: ' pre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pre' → logprob: -0.16022412478923798
    2. 'pre' → logprob: -1.9102240800857544
    3. '	pre' → logprob: -17.28522491455078
    4. '(pre' → logprob: -17.41022491455078
    5. ' pré' → logprob: -20.03522491455078
    6. ' ' → logprob: -20.03522491455078
    7. '   ' → logprob: -20.16022491455078
    8. '_pre' → logprob: -21.03522491455078
    9. '.pre' → logprob: -21.78522491455078
    10. ' prec' → logprob: -21.91022491455078

Token 521: 'compute' (ID: 54521)
  Prédit: 'compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -5.512236498361744e-07
    2. '_compute' → logprob: -15.250000953674316
    3. 'computer' → logprob: -16.25
    4. 'comput' → logprob: -17.0
    5. ' compute' → logprob: -17.375
    6. 'com' → logprob: -17.5
    7. 'computed' → logprob: -17.75
    8. '.compute' → logprob: -19.5
    9. '_' → logprob: -20.0
    10. 'comp' → logprob: -20.5

Token 522: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -3.128163257315464e-07
    2. 't' → logprob: -15.875
    3. '_tw' → logprob: -17.0
    4. ' _' → logprob: -17.25
    5. '_' → logprob: -17.625
    6. '_quad' → logprob: -17.625
    7. 'max' → logprob: -18.25
    8. 's' → logprob: -18.375
    9. '_max' → logprob: -18.5
    10. '"_' → logprob: -19.375

Token 523: 'win' (ID: 11668)
  Prédit: 'win'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'win' → logprob: -2.1008713702030946e-06
    2. 'w' → logprob: -14.125001907348633
    3. '   ' → logprob: -14.875001907348633
    4. 't' → logprob: -15.500001907348633
    5. 'wins' → logprob: -15.750001907348633
    6. 'wing' → logprob: -16.500001907348633
    7. '_win' → logprob: -16.625001907348633
    8. ' twin' → logprob: -16.750001907348633
    9. 'Twin' → logprob: -17.125001907348633
    10. 'wind' → logprob: -17.500001907348633

Token 524: '_quad' (ID: 180190)
  Prédit: '_quad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_quad' → logprob: -1.981667537620524e-06
    2. '_t' → logprob: -13.875001907348633
    3. '_qu' → logprob: -14.375001907348633
    4. '_' → logprob: -15.750001907348633
    5. ' _' → logprob: -16.125001907348633
    6. 'quad' → logprob: -16.375001907348633
    7. '\' → logprob: -16.875001907348633
    8. '"_' → logprob: -17.500001907348633
    9. '```' → logprob: -17.875001907348633
    10. 't' → logprob: -17.875001907348633

Token 525: 'ru' (ID: 1942)
  Prédit: 'uples'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uples' → logprob: -0.3370210826396942
    2. 'ru' → logprob: -1.4620211124420166
    3. 'ples' → logprob: -3.2120211124420166
    4. 'iples' → logprob: -4.9620208740234375
    5. 'u' → logprob: -5.9620208740234375
    6. 'ip' → logprob: -6.4620208740234375
    7. 'rap' → logprob: -6.7120208740234375
    8. 'uple' → logprob: -7.4620208740234375
    9. 'ap' → logprob: -8.212020874023438
    10. 'tu' → logprob: -8.462020874023438

Token 526: 'ples' (ID: 4524)
  Prédit: 'ples'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ples' → logprob: -8.697387966094539e-05
    2. 'ple' → logprob: -10.000086784362793
    3. 'iples' → logprob: -11.375086784362793
    4. 'uples' → logprob: -11.500086784362793
    5. 'p' → logprob: -11.750086784362793
    6. 'ap' → logprob: -11.875086784362793
    7. 'les' → logprob: -13.750086784362793
    8. 'pl' → logprob: -14.125086784362793
    9. 'bles' → logprob: -14.500086784362793
    10. '_' → logprob: -15.125086784362793

Token 527: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -5.512236498361744e-07
    2. '(' → logprob: -14.875000953674316
    3. ' (' → logprob: -16.75
    4. '(ma' → logprob: -18.0
    5. '(MAX' → logprob: -18.75
    6. 'max' → logprob: -18.75
    7. '(Max' → logprob: -18.75
    8. '[max' → logprob: -19.25
    9. ',max' → logprob: -19.25
    10. '(main' → logprob: -19.5

Token 528: '_input' (ID: 12507)
  Prédit: '_n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.0005595852271653712
    2. '_input' → logprob: -7.5005598068237305
    3. ')' → logprob: -12.87555980682373
    4. ')_' → logprob: -12.87555980682373
    5. 'Input' → logprob: -14.50055980682373
    6. 'n' → logprob: -15.75055980682373
    7. ' _' → logprob: -15.75055980682373
    8. '_i' → logprob: -16.000558853149414
    9. '_inputs' → logprob: -16.250558853149414
    10. '_' → logprob: -16.375558853149414

Token 529: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029763219878077507
    2. ')
' → logprob: -3.5297632217407227
    3. ')
' → logprob: -11.779763221740723
    4. '   ' → logprob: -12.654763221740723
    5. ')

' → logprob: -13.404763221740723
    6. ' )' → logprob: -15.279763221740723
    7. ')`
' → logprob: -16.779762268066406
    8. ' ' → logprob: -17.529762268066406
    9. ' )
' → logprob: -17.529762268066406
    10. ')`' → logprob: -18.404762268066406

Token 530: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04957912489771843
    2. 'for' → logprob: -3.04957914352417
    3. ' for' → logprob: -7.04957914352417
    4. '```' → logprob: -9.299578666687012
    5. '
' → logprob: -10.799578666687012
    6. '    
' → logprob: -12.174578666687012
    7. '	for' → logprob: -12.674578666687012
    8. '<|end|>' → logprob: -12.799578666687012
    9. '``' → logprob: -15.924578666687012
    10. '       ' → logprob: -16.299579620361328

Token 531: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3136802017688751
    2. '   ' → logprob: -1.3136801719665527
    3. ' for' → logprob: -7.813680171966553
    4. '	for' → logprob: -11.563680648803711
    5. '```' → logprob: -12.438680648803711
    6. '
' → logprob: -14.813680648803711
    7. '    
' → logprob: -15.188680648803711
    8. ' ' → logprob: -17.93868064880371
    9. '       ' → logprob: -18.06368064880371
    10. '``' → logprob: -18.81368064880371

Token 532: ' Pour' (ID: 13931)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00034177995985373855
    2. ' for' → logprob: -8.000341415405273
    3. '   ' → logprob: -12.000341415405273
    4. '```' → logprob: -15.500341415405273
    5. '``' → logprob: -18.125341415405273
    6. '	for' → logprob: -21.375341415405273
    7. '
' → logprob: -21.500341415405273
    8. 'For' → logprob: -23.000341415405273
    9. '  ' → logprob: -23.500341415405273
    10. 'import' → logprob: -23.750341415405273

Token 533: ' chaque' (ID: 21194)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.027867671102285385
    2. ' n' → logprob: -3.652867555618286
    3. 'num' → logprob: -6.527867794036865
    4. 'nombre' → logprob: -10.527867317199707
    5. 'number' → logprob: -10.652867317199707
    6. ' num' → logprob: -11.277867317199707
    7. 'each' → logprob: -12.027867317199707
    8. 'x' → logprob: -12.152867317199707
    9. 'line' → logprob: -12.402867317199707
    10. 'val' → logprob: -12.527867317199707

Token 534: ' entrée' (ID: 95590)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.20141927897930145
    2. ' n' → logprob: -1.7014192342758179
    3. '   ' → logprob: -12.32641887664795
    4. ' input' → logprob: -14.57641887664795
    5. '	n' → logprob: -14.82641887664795
    6. 'input' → logprob: -15.07641887664795
    7. '```' → logprob: -15.32641887664795
    8. 'num' → logprob: -15.82641887664795
    9. 'nombre' → logprob: -17.326419830322266
    10. ' ' → logprob: -17.451419830322266

Token 535: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019779682159423828
    2. ',' → logprob: -4.144779682159424
    3. ':' → logprob: -6.019779682159424
    4. ' n' → logprob: -7.144779682159424
    5. 'n' → logprob: -8.394779205322266
    6. '       ' → logprob: -9.394779205322266
    7. ' in' → logprob: -9.519779205322266
    8. ',n' → logprob: -9.894779205322266
    9. '    ' → logprob: -11.019779205322266
    10. ':
' → logprob: -11.394779205322266

Token 536: ' afficher' (ID: 146524)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10253405570983887
    2. 'for' → logprob: -2.852534055709839
    3. ' for' → logprob: -3.227534055709839
    4. '       ' → logprob: -10.102534294128418
    5. 'print' → logprob: -10.227534294128418
    6. '	for' → logprob: -11.477534294128418
    7. '    
' → logprob: -12.977534294128418
    8. '```' → logprob: -12.977534294128418
    9. ' print' → logprob: -13.227534294128418
    10. '    ' → logprob: -13.602534294128418

Token 537: ' la' (ID: 557)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.05418725684285164
    2. '(max' → logprob: -3.179187297821045
    3. ' max' → logprob: -4.929187297821045
    4. 'la' → logprob: -6.054187297821045
    5. '   ' → logprob: -6.929187297821045
    6. ' la' → logprob: -8.054186820983887
    7. 'le' → logprob: -8.554186820983887
    8. 'the' → logprob: -11.304186820983887
    9. 'l' → logprob: -12.054186820983887
    10. 'len' → logprob: -12.179186820983887

Token 538: ' plus' (ID: 2932)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.008576277643442154
    2. 'val' → logprob: -5.633576393127441
    3. 'result' → logprob: -6.383576393127441
    4. ' max' → logprob: -6.758576393127441
    5. 'size' → logprob: -7.633576393127441
    6. 'value' → logprob: -7.633576393127441
    7. '(max' → logprob: -7.758576393127441
    8. 'tail' → logprob: -8.008576393127441
    9. 'plus' → logprob: -9.008576393127441
    10. 'largest' → logprob: -9.633576393127441

Token 539: ' grande' (ID: 10094)
  Prédit: ' grande'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grande' → logprob: -0.025006046518683434
    2. '_large' → logprob: -4.40000581741333
    3. 'grand' → logprob: -5.52500581741333
    4. 'max' → logprob: -6.27500581741333
    5. '```' → logprob: -6.77500581741333
    6. '_gr' → logprob: -6.90000581741333
    7. ' grand' → logprob: -6.90000581741333
    8. 'gr' → logprob: -7.02500581741333
    9. ' large' → logprob: -7.40000581741333
    10. 'large' → logprob: -7.65000581741333

Token 540: ' taille' (ID: 41644)
  Prédit: ' quadru'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' quadru' → logprob: -0.053527913987636566
    2. 'max' → logprob: -4.30352783203125
    3. ' taille' → logprob: -4.55352783203125
    4. 'quad' → logprob: -5.17852783203125
    5. 'size' → logprob: -5.17852783203125
    6. ' quad' → logprob: -5.30352783203125
    7. 'tail' → logprob: -5.55352783203125
    8. ' size' → logprob: -5.55352783203125
    9. ' max' → logprob: -5.80352783203125
    10. '   ' → logprob: -7.67852783203125

Token 541: ' <=' (ID: 5017)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.1815723478794098
    2. '   ' → logprob: -2.681572437286377
    3. ' de' → logprob: -3.306572437286377
    4. '(n' → logprob: -3.431572437286377
    5. 'de' → logprob: -4.556572437286377
    6. '(' → logprob: -4.556572437286377
    7. ' (' → logprob: -5.681572437286377
    8. 'max' → logprob: -6.181572437286377
    9. 'possible' → logprob: -7.931572437286377
    10. '(de' → logprob: -8.181571960449219

Token 542: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.055506568402051926
    2. ' n' → logprob: -2.930506467819214
    3. ' la' → logprob: -8.430506706237793
    4. '   ' → logprob: -9.055506706237793
    5. 'la' → logprob: -9.055506706237793
    6. 'l' → logprob: -9.805506706237793
    7. '```' → logprob: -9.805506706237793
    8. 'a' → logprob: -11.180506706237793
    9. ' ' → logprob: -11.680506706237793
    10. ' l' → logprob: -12.180506706237793

Token 543: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.039926718920469284
    2. '(' → logprob: -4.539926528930664
    3. '
' → logprob: -4.914926528930664
    4. '(n' → logprob: -4.914926528930664
    5. ' for' → logprob: -4.914926528930664
    6. '```' → logprob: -5.914926528930664
    7. '       ' → logprob: -6.414926528930664
    8. 'for' → logprob: -6.664926528930664
    9. ',' → logprob: -8.789926528930664
    10. '\' → logprob: -9.164926528930664

Token 544: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -5.931863051955588e-05
    2. '
' → logprob: -10.250059127807617
    3. '```' → logprob: -11.750059127807617
    4. ' for' → logprob: -11.875059127807617
    5. 'for' → logprob: -11.875059127807617
    6. '    
' → logprob: -13.875059127807617
    7. '	for' → logprob: -14.500059127807617
    8. '       ' → logprob: -15.125059127807617
    9. '<|end|>' → logprob: -16.000059127807617
    10. ',' → logprob: -17.000059127807617

Token 545: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1102176308631897
    2. 'for' (adapté à ' for') → logprob: -2.360217571258545
    3. ' for' → logprob: -4.610217571258545
    4. '	for' → logprob: -11.860218048095703
    5. '```' → logprob: -12.485218048095703
    6. '       ' → logprob: -14.860218048095703
    7. ' ' → logprob: -16.360218048095703
    8. '    
' → logprob: -16.610218048095703
    9. '_for' → logprob: -17.985218048095703
    10. '   ' → logprob: -17.985218048095703

Token 546: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.201453298330307
    2. ' n' → logprob: -1.7014533281326294
    3. '   ' → logprob: -10.20145320892334
    4. '	n' → logprob: -13.32645320892334
    5. 'num' → logprob: -14.07645320892334
    6. ' ' → logprob: -15.82645320892334
    7. ' num' → logprob: -16.451454162597656
    8. '```' → logprob: -16.701454162597656
    9. 'x' → logprob: -16.826454162597656
    10. '       ' → logprob: -17.076454162597656

Token 547: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014164801687002182
    2. 'in' → logprob: -4.264164924621582
    3. '	in' → logprob: -14.764164924621582
    4. '_in' → logprob: -15.139164924621582
    5. ',' → logprob: -15.389164924621582
    6. ' ' → logprob: -15.889164924621582
    7. 'import' → logprob: -16.014163970947266
    8. '   ' → logprob: -16.264163970947266
    9. '  ' → logprob: -17.139163970947266
    10. 'n' → logprob: -17.139163970947266

Token 548: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.014163628220558167
    2. ' input' → logprob: -4.264163494110107
    3. '(input' → logprob: -17.514163970947266
    4. ' ' → logprob: -18.139163970947266
    5. '   ' → logprob: -18.264163970947266
    6. '[input' → logprob: -18.264163970947266
    7. '_input' → logprob: -18.764163970947266
    8. 'in' → logprob: -18.889163970947266
    9. '<input' → logprob: -18.889163970947266
    10. '	input' → logprob: -19.139163970947266

Token 549: '_numbers' (ID: 76842)
  Prédit: '_numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_numbers' → logprob: -0.00022713904036208987
    2. '_' → logprob: -8.875226974487305
    3. ':' → logprob: -10.375226974487305
    4. '_number' → logprob: -11.000226974487305
    5. 's' → logprob: -11.875226974487305
    6. '   ' → logprob: -12.000226974487305
    7. '_size' → logprob: -12.125226974487305
    8. '_n' → logprob: -12.250226974487305
    9. 'numbers' → logprob: -12.875226974487305
    10. '```' → logprob: -13.125226974487305

Token 550: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011078826151788235
    2. ':
' → logprob: -4.511078834533691
    3. ' :' → logprob: -11.761078834533691
    4. '   ' → logprob: -11.886078834533691
    5. ',' → logprob: -12.636078834533691
    6. '       ' → logprob: -12.761078834533691
    7. ':
' → logprob: -13.261078834533691
    8. '):
' → logprob: -13.511078834533691
    9. '=' → logprob: -13.636078834533691
    10. '):' → logprob: -13.636078834533691

Token 551: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00021140782337170094
    2. '<|end|>' → logprob: -9.875211715698242
    3. ' print' → logprob: -10.375211715698242
    4. 'print' → logprob: -10.500211715698242
    5. '```' → logprob: -10.500211715698242
    6. '   ' → logprob: -10.625211715698242
    7. ':' → logprob: -11.125211715698242
    8. ':
' → logprob: -11.875211715698242
    9. '[' → logprob: -12.000211715698242
    10. '{' → logprob: -12.000211715698242

Token 552: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.17673233151435852
    2. ' print' → logprob: -1.9267323017120361
    3. '   ' → logprob: -4.426732540130615
    4. '       ' → logprob: -5.426732540130615
    5. '```' → logprob: -11.051732063293457
    6. '
' → logprob: -13.426732063293457
    7. '	print' → logprob: -13.551732063293457
    8. ' if' → logprob: -14.301732063293457
    9. '           ' → logprob: -14.426732063293457
    10. '``' → logprob: -14.426732063293457

Token 553: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.006033554207533598
    2. '(' → logprob: -5.131033420562744
    3. 'max' → logprob: -9.506033897399902
    4. '(f' → logprob: -11.256033897399902
    5. '("' → logprob: -11.381033897399902
    6. '('' → logprob: -12.881033897399902
    7. ' max' → logprob: -13.131033897399902
    8. ' (' → logprob: -13.881033897399902
    9. '((' → logprob: -15.631033897399902
    10. '=max' → logprob: -15.631033897399902

Token 554: '_size' (ID: 5044)
  Prédit: '_size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -4.320199877838604e-07
    2. '(size' → logprob: -16.625
    3. 'size' → logprob: -16.75
    4. '_' → logprob: -17.625
    5. ' _' → logprob: -18.0
    6. '_s' → logprob: -18.0
    7. '(_' → logprob: -18.0
    8. '_max' → logprob: -18.125
    9. '(' → logprob: -18.25
    10. '   ' → logprob: -18.75

Token 555: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -9.088346359931165e-07
    2. '[' → logprob: -14.625000953674316
    3. 'n' → logprob: -14.875000953674316
    4. ')n' → logprob: -18.25
    5. ' [' → logprob: -18.375
    6. '[
' → logprob: -19.125
    7. ')' → logprob: -20.0
    8. ')[' → logprob: -20.0
    9. ' n' → logprob: -20.625
    10. '][' → logprob: -21.125

Token 556: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0067501855082809925
    2. ')' → logprob: -5.006750106811523
    3. ' ])' → logprob: -10.881750106811523
    4. ']' → logprob: -11.631750106811523
    5. ')])' → logprob: -12.381750106811523
    6. '])
' → logprob: -13.881750106811523
    7. ' )' → logprob: -14.506750106811523
    8. '))' → logprob: -14.631750106811523
    9. '})' → logprob: -15.131750106811523
    10. ')]' → logprob: -15.256750106811523

Token 557: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2248847782611847
    2. '<|end|>' → logprob: -1.7248847484588623
    3. '```' → logprob: -4.349884986877441
    4. '#' → logprob: -5.599884986877441
    5. '
' → logprob: -5.724884986877441
    6. ' if' → logprob: -6.724884986877441
    7. '\n' → logprob: -6.849884986877441
    8. '<|end|>' → logprob: -8.224884986877441
    9. '...' → logprob: -9.099884986877441
    10. '__' → logprob: -9.224884986877441

Token 558: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.026569420471787453
    2. '__' → logprob: -3.651569366455078
    3. '_' → logprob: -8.526569366455078
    4. '_name' → logprob: -10.401569366455078
    5. ' ' → logprob: -11.026569366455078
    6. '___' → logprob: -11.276569366455078
    7. ' _' → logprob: -12.276569366455078
    8. ' ___' → logprob: -12.901569366455078
    9. ' ' → logprob: -13.526569366455078
    10. '﻿' → logprob: -13.776569366455078

Token 559: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.011647765524685383
    2. ' ==' → logprob: -5.011647701263428
    3. '==' → logprob: -6.011647701263428
    4. ' __' → logprob: -6.136647701263428
    5. '__.__' → logprob: -8.886648178100586
    6. '.__' → logprob: -9.011648178100586
    7. '__.' → logprob: -10.886648178100586
    8. '=="' → logprob: -12.261648178100586
    9. '```' → logprob: -12.261648178100586
    10. '____' → logprob: -12.636648178100586

Token 560: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0015186689561232924
    2. '__.__' → logprob: -6.751518726348877
    3. '==' → logprob: -8.251518249511719
    4. ' ==' → logprob: -9.876518249511719
    5. '=="' → logprob: -11.251518249511719
    6. '__.' → logprob: -11.376518249511719
    7. '__["' → logprob: -12.001518249511719
    8. '.__' → logprob: -13.751518249511719
    9. '=='' → logprob: -14.001518249511719
    10. '__('' → logprob: -14.626518249511719

Token 561: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5284719467163086
    2. '==' → logprob: -1.1534719467163086
    3. '__' → logprob: -2.5284719467163086
    4. '=="' → logprob: -4.403471946716309
    5. '=='' → logprob: -5.903471946716309
    6. '[' → logprob: -9.278471946716309
    7. ' =="' → logprob: -10.778471946716309
    8. '==
' → logprob: -11.153471946716309
    9. '===' → logprob: -11.528471946716309
    10. '=' → logprob: -11.653471946716309

Token 562: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.048624493181705475
    2. ''' → logprob: -3.0486245155334473
    3. '__' → logprob: -10.923624038696289
    4. ' "__' → logprob: -10.923624038696289
    5. ' '__' → logprob: -14.298624038696289
    6. '"user' → logprob: -15.673624038696289
    7. '"name' → logprob: -16.42362403869629
    8. ''"' → logprob: -17.67362403869629
    9. '("__' → logprob: -17.67362403869629
    10. '"value' → logprob: -18.17362403869629

Token 563: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0059424289502203465
    2. '__' → logprob: -5.130942344665527
    3. '"' → logprob: -12.255942344665527
    4. 'name' → logprob: -13.255942344665527
    5. '_main' → logprob: -13.255942344665527
    6. '__":
' → logprob: -13.380942344665527
    7. ' main' → logprob: -14.005942344665527
    8. 'built' → logprob: -14.255942344665527
    9. 'ma' → logprob: -14.880942344665527
    10. '主' → logprob: -15.380942344665527

Token 564: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.012310557067394257
    2. '__' → logprob: -4.51231050491333
    3. '__':
' → logprob: -6.76231050491333
    4. '__.' → logprob: -9.637310981750488
    5. '__.__' → logprob: -10.512310981750488
    6. '__["' → logprob: -11.637310981750488
    7. '__
' → logprob: -13.887310981750488
    8. '.' → logprob: -14.137310981750488
    9. '__
' → logprob: -14.262310981750488
    10. '.__' → logprob: -14.512310981750488

Token 565: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.07902374118566513
    2. ' main' → logprob: -2.579023838043213
    3. '	main' → logprob: -9.329023361206055
    4. '__' → logprob: -10.704023361206055
    5. '   ' → logprob: -11.204023361206055
    6. '_main' → logprob: -11.704023361206055
    7. '(main' → logprob: -15.079023361206055
    8. '.main' → logprob: -15.704023361206055
    9. 'Main' → logprob: -16.079023361206055
    10. '_MAIN' → logprob: -16.204023361206055

Token 566: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -2.935296834039036e-06
    2. ' main' → logprob: -12.75000286102295
    3. '	main' → logprob: -19.500003814697266
    4. '   ' → logprob: -22.625003814697266
    5. '.main' → logprob: -24.875003814697266
    6. '_main' → logprob: -25.500003814697266
    7. '(main' → logprob: -26.750003814697266
    8. 'ma' → logprob: -27.750003814697266
    9. ' ' → logprob: -28.000003814697266
    10. 'Main' → logprob: -28.625003814697266

Token 567: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 565
Tokens correctement prédits (1ère position, stricte): 258
Tokens correctement prédits (1ère position, avec adaptation): 274
Tokens correctement prédits (top 10): 472
Précision stricte (1ère position): 45.66%
Précision adaptée (1ère position): 48.50%
Précision (top 10): 83.54%
================================================================================
