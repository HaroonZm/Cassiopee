================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:14:30
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

input = sys.stdin.readline

while True:
    line = input()
    if not line:
        break
    N, M = map(int, line.split())
    idols = []
    for _ in range(N):
        name = input().rstrip('\n')
        C, V, D, L = map(int, input().split())
        idols.append((C, V, D, L))

    # dp[cost] = (voc, dnc, lks) max sums achievable with cost 'cost'
    dp = [(-1, -1, -1)] * (M + 1)
    dp[0] = (0, 0, 0)
    for C, V, D, L in idols:
        for cost in range(C, M + 1):
            prev = dp[cost - C]
            if prev[0] == -1:
                continue
            cand = (prev[0] + V, prev[1] + D, prev[2] + L)
            cur = dp[cost]
            if cur[0] == -1 or max(cand) > max(cur):
                dp[cost] = cand

    ans = 0
    for voc, dnc, lks in dp:
        if voc == -1:
            continue
        ans = max(ans, max(voc, dnc, lks))
    print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'input' (ID: 2586)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.03585657849907875
    2. '\n' → logprob: -4.0358567237854
    3. 'import' → logprob: -4.7858567237854
    4. '<|end|>' → logprob: -5.2858567237854
    5. '\' → logprob: -7.0358567237854
    6. '<|end|>' → logprob: -7.5358567237854
    7. 'newline' → logprob: -7.9108567237854
    8. ',' → logprob: -8.160856246948242
    9. '[' → logprob: -8.285856246948242
    10. '' → logprob: -8.285856246948242

Token 4: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003638796042650938
    2. '.' → logprob: -5.753638744354248
    3. '(
' → logprob: -9.003639221191406
    4. ' (' → logprob: -9.503639221191406
    5. '()' → logprob: -9.503639221191406
    6. ')' → logprob: -10.003639221191406
    7. '_' → logprob: -10.253639221191406
    8. '('' → logprob: -11.253639221191406
    9. ''' → logprob: -11.378639221191406
    10. '[' → logprob: -11.378639221191406

Token 5: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.10248445719480515
    2. 'sys' → logprob: -2.3524844646453857
    3. ' input' → logprob: -6.727484226226807
    4. 'input' → logprob: -6.852484226226807
    5. '=sys' → logprob: -11.852484703063965
    6. ' ' → logprob: -12.227484703063965
    7. '	sys' → logprob: -12.227484703063965
    8. '(sys' → logprob: -13.227484703063965
    9. ' lambda' → logprob: -14.727484703063965
    10. ' system' → logprob: -14.727484703063965

Token 6: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -8.125210297293961e-05
    2. ' .' → logprob: -10.000081062316895
    3. '.readline' → logprob: -11.625081062316895
    4. '.`' → logprob: -12.000081062316895
    5. '.stdin' → logprob: -12.125081062316895
    6. '.import' → logprob: -12.625081062316895
    7. '.input' → logprob: -13.250081062316895
    8. '.")' → logprob: -13.500081062316895
    9. '."""' → logprob: -13.625081062316895
    10. '[' → logprob: -13.875081062316895

Token 7: '.readline' (ID: 74673)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.009866701439023018
    2. '.readline' → logprob: -4.759866714477539
    3. '.read' → logprob: -6.759866714477539
    4. ' .' → logprob: -11.009866714477539
    5. '[' → logprob: -11.384866714477539
    6. '.Read' → logprob: -11.509866714477539
    7. '```' → logprob: -11.509866714477539
    8. 'read' → logprob: -12.009866714477539
    9. '<|end|>' → logprob: -12.384866714477539
    10. '.\' → logprob: -12.759866714477539

Token 8: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.20424258708953857
    2. '(' → logprob: -1.7042425870895386
    3. '(
' → logprob: -6.704242706298828
    4. '()
' → logprob: -7.329242706298828
    5. '().' → logprob: -8.329242706298828
    6. ')' → logprob: -8.454242706298828
    7. '
' → logprob: -9.329242706298828
    8. '()

' → logprob: -9.579242706298828
    9. '(

' → logprob: -9.829242706298828
    10. '()\' → logprob: -9.829242706298828

Token 9: 'while' (ID: 7032)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.011514253914356232
    2. '(' → logprob: -4.511514186859131
    3. '().' → logprob: -7.886514186859131
    4. '()
' → logprob: -10.261514663696289
    5. '()

' → logprob: -11.136514663696289
    6. '()\' → logprob: -11.386514663696289
    7. 'def' → logprob: -11.761514663696289
    8. '(
' → logprob: -12.511514663696289
    9. '()`' → logprob: -12.511514663696289
    10. '();' → logprob: -13.136514663696289

Token 10: ' True' (ID: 6432)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.004701514728367329
    2. ' True' → logprob: -6.004701614379883
    3. ' (' → logprob: -7.379701614379883
    4. '  ' → logprob: -7.879701614379883
    5. ' space' → logprob: -8.754701614379883
    6. ' not' → logprob: -8.754701614379883
    7. ' )' → logprob: -8.879701614379883
    8. ''' → logprob: -9.004701614379883
    9. '(' → logprob: -9.004701614379883
    10. '"' → logprob: -9.379701614379883

Token 11: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004659425176214427
    2. '():' → logprob: -8.125466346740723
    3. ' :' → logprob: -9.000466346740723
    4. ':**' → logprob: -10.625466346740723
    5. '):' → logprob: -12.375466346740723
    6. '(:' → logprob: -12.500466346740723
    7. ':
' → logprob: -12.875466346740723
    8. '':'' → logprob: -13.125466346740723
    9. '":"' → logprob: -13.500466346740723
    10. ':return' → logprob: -13.750466346740723

Token 12: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03488173335790634
    2. '    ' → logprob: -4.159881591796875
    3. '    
' → logprob: -4.409881591796875
    4. ' ' → logprob: -6.534881591796875
    5. 'input' → logprob: -6.784881591796875
    6. ' 
' → logprob: -7.534881591796875
    7. '(' → logprob: -7.659881591796875
    8. ':' → logprob: -7.784881591796875
    9. '  
' → logprob: -8.159881591796875
    10. ' (' → logprob: -8.159881591796875

Token 13: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.05139869451522827
    2. 'line' (adapté à ' line') → logprob: -3.676398754119873
    3. '   ' → logprob: -4.176398754119873
    4. ' user' → logprob: -5.801398754119873
    5. 'user' → logprob: -6.301398754119873
    6. ' inp' → logprob: -6.676398754119873
    7. 'data' → logprob: -6.801398754119873
    8. '    ' → logprob: -7.051398754119873
    9. ' data' → logprob: -7.801398754119873
    10. ' ' → logprob: -8.176398277282715

Token 14: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04863198846578598
    2. '=' → logprob: -3.0486319065093994
    3. '.strip' → logprob: -11.42363166809082
    4. '=line' → logprob: -12.17363166809082
    5. ' ' → logprob: -12.29863166809082
    6. '.startswith' → logprob: -12.54863166809082
    7. ' ==' → logprob: -12.54863166809082
    8. '.readline' → logprob: -13.29863166809082
    9. '<|end|>' → logprob: -13.29863166809082
    10. ')' → logprob: -13.29863166809082

Token 15: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.31329867243766785
    2. 'input' → logprob: -1.3132987022399902
    3. ' sys' → logprob: -10.938298225402832
    4. 'sys' → logprob: -11.188298225402832
    5. '=input' → logprob: -13.563298225402832
    6. '_input' → logprob: -13.688298225402832
    7. '(input' → logprob: -14.063298225402832
    8. '<input' → logprob: -14.938298225402832
    9. ' ' → logprob: -14.938298225402832
    10. '	input' → logprob: -15.188298225402832

Token 16: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0003273600013926625
    2. '().' → logprob: -8.125327110290527
    3. '()
' → logprob: -11.250327110290527
    4. '(' → logprob: -11.750327110290527
    5. '())' → logprob: -12.500327110290527
    6. '()

' → logprob: -13.000327110290527
    7. '()`' → logprob: -14.125327110290527
    8. ' ()' → logprob: -14.125327110290527
    9. '()\' → logprob: -14.750327110290527
    10. '（）' → logprob: -15.000327110290527

Token 17: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00845441222190857
    2. ' if' → logprob: -6.008454322814941
    3. '    ' → logprob: -6.258454322814941
    4. '<|end|>' → logprob: -6.258454322814941
    5. '    
' → logprob: -7.508454322814941
    6. '.rstrip' → logprob: -7.758454322814941
    7. '.strip' → logprob: -7.758454322814941
    8. ' ' → logprob: -8.008454322814941
    9. '<|end|>' → logprob: -8.883454322814941
    10. '  ' → logprob: -9.258454322814941

Token 18: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015255591832101345
    2. '    ' → logprob: -4.640255451202393
    3. ' if' → logprob: -5.765255451202393
    4. '    
' → logprob: -6.390255451202393
    5. ' ' → logprob: -8.51525592803955
    6. '  ' → logprob: -9.01525592803955
    7. '<|end|>' → logprob: -9.39025592803955
    8. '     
' → logprob: -10.14025592803955
    9. 'if' (adapté à ' if') → logprob: -10.26525592803955
    10. ' 
' → logprob: -10.51525592803955

Token 19: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.0005927092279307544
    2. ' line' → logprob: -7.7505927085876465
    3. 'not' → logprob: -8.875593185424805
    4. ' ' → logprob: -10.750593185424805
    5. 'line' → logprob: -14.250593185424805
    6. '  ' → logprob: -17.375593185424805
    7. ' ' → logprob: -17.500593185424805
    8. '	not' → logprob: -17.625593185424805
    9. '#line' → logprob: -19.000593185424805
    10. '   ' → logprob: -19.000593185424805

Token 20: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.0031793788075447083
    2. 'line' → logprob: -5.753179550170898
    3. ' ' → logprob: -13.878179550170898
    4. '	line' → logprob: -14.503179550170898
    5. '(line' → logprob: -16.2531795501709
    6. '=line' → logprob: -17.6281795501709
    7. ' ' → logprob: -17.8781795501709
    8. '#line' → logprob: -18.0031795501709
    9. '[line' → logprob: -18.2531795501709
    10. ' linha' → logprob: -19.1281795501709

Token 21: ':
' (ID: 734)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.16785861551761627
    2. '.' → logprob: -2.167858600616455
    3. '.rstrip' → logprob: -3.917858600616455
    4. ':' → logprob: -4.042858600616455
    5. '.startswith' → logprob: -6.167858600616455
    6. '.readline' → logprob: -8.667859077453613
    7. ':
' → logprob: -9.292859077453613
    8. '.chomp' → logprob: -9.542859077453613
    9. ' .' → logprob: -9.667859077453613
    10. ' or' → logprob: -10.167859077453613

Token 22: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.996708104154095e-05
    2. '   ' → logprob: -9.375100135803223
    3. '    ' → logprob: -12.375100135803223
    4. ' break' → logprob: -13.000100135803223
    5. '     ' → logprob: -13.250100135803223
    6. ' ' → logprob: -13.250100135803223
    7. '      ' → logprob: -13.500100135803223
    8. '           ' → logprob: -13.750100135803223
    9. '<|end|>' → logprob: -14.250100135803223
    10. '```' → logprob: -15.375100135803223

Token 23: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.6550253033638
    2. '       ' → logprob: -0.7800253033638
    3. '   ' → logprob: -4.280025482177734
    4. 'break' (adapté à ' break') → logprob: -4.905025482177734
    5. '           ' → logprob: -8.155025482177734
    6. '	break' → logprob: -8.405025482177734
    7. ' ' → logprob: -8.405025482177734
    8. '    ' → logprob: -9.155025482177734
    9. '_break' → logprob: -10.530025482177734
    10. '  ' → logprob: -11.905025482177734

Token 24: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14772677421569824
    2. '    
' → logprob: -2.0227267742156982
    3. '<|end|>' → logprob: -6.147727012634277
    4. '
' → logprob: -6.772727012634277
    5. '  
' → logprob: -7.647727012634277
    6. 'print' → logprob: -8.022727012634277
    7. '        
' → logprob: -8.522727012634277
    8. '   
' → logprob: -8.647727012634277
    9. '    ' → logprob: -9.397727012634277
    10. ' 
' → logprob: -9.397727012634277

Token 25: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005304669961333275
    2. '    
' → logprob: -5.25530481338501
    3. 'print' → logprob: -10.505304336547852
    4. '    ' → logprob: -11.005304336547852
    5. '        
' → logprob: -11.880304336547852
    6. '   
' → logprob: -12.755304336547852
    7. '<|end|>' → logprob: -12.880304336547852
    8. ' print' → logprob: -13.130304336547852
    9. '    
    
' → logprob: -13.255304336547852
    10. '    

' → logprob: -13.380304336547852

Token 26: ' N' (ID: 478)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01262630894780159
    2. ' print' → logprob: -4.7626261711120605
    3. 'print' → logprob: -6.1376261711120605
    4. '    ' → logprob: -8.012626647949219
    5. ' n' → logprob: -8.137626647949219
    6. 'n' → logprob: -8.387626647949219
    7. 'data' → logprob: -8.637626647949219
    8. '    
' → logprob: -9.012626647949219
    9. ' numbers' → logprob: -9.512626647949219
    10. ' data' → logprob: -9.512626647949219

Token 27: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023706253618001938
    2. '=' → logprob: -3.7737061977386475
    3. '=int' → logprob: -7.773706436157227
    4. ',' → logprob: -10.648706436157227
    5. ' ' → logprob: -11.898706436157227
    6. ')' → logprob: -12.773706436157227
    7. '.' → logprob: -13.523706436157227
    8. ' ,' → logprob: -13.773706436157227
    9. '=line' → logprob: -14.148706436157227
    10. '   ' → logprob: -14.273706436157227

Token 28: ' M' (ID: 391)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.6931918263435364
    2. ' line' → logprob: -1.6931917667388916
    3. ' M' → logprob: -2.3181917667388916
    4. 'M' → logprob: -2.8181917667388916
    5. ' ' → logprob: -2.9431917667388916
    6. 'space' → logprob: -3.5681917667388916
    7. '=' → logprob: -3.9431917667388916
    8. '=line' → logprob: -4.193192005157471
    9. ' =' → logprob: -4.443192005157471
    10. '  ' → logprob: -5.318192005157471

Token 29: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132880926132202
    2. '=' → logprob: -1.3132880926132202
    3. ',' → logprob: -10.688287734985352
    4. ' ' → logprob: -13.563287734985352
    5. '=line' → logprob: -13.813287734985352
    6. ')' → logprob: -14.438287734985352
    7. '=input' → logprob: -15.938287734985352
    8. '    ' → logprob: -16.06328773498535
    9. '=int' → logprob: -16.31328773498535
    10. '   ' → logprob: -16.43828773498535

Token 30: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0036133781541138887
    2. 'map' → logprob: -5.878613471984863
    3. ' line' → logprob: -7.128613471984863
    4. 'line' → logprob: -12.628613471984863
    5. ' ' → logprob: -13.003613471984863
    6. '	map' → logprob: -15.378613471984863
    7. '   ' → logprob: -15.628613471984863
    8. ' ma' → logprob: -16.253612518310547
    9. ' ' → logprob: -16.253612518310547
    10. ' [' → logprob: -16.628612518310547

Token 31: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.023415395990014076
    2. '(' → logprob: -4.023415565490723
    3. '(str' → logprob: -5.273415565490723
    4. '(lambda' → logprob: -9.023415565490723
    5. '(list' → logprob: -13.773415565490723
    6. '[int' → logprob: -13.898415565490723
    7. 'int' → logprob: -14.023415565490723
    8. '(
' → logprob: -14.523415565490723
    9. ' (' → logprob: -15.148415565490723
    10. '(eval' → logprob: -15.273415565490723

Token 32: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09992074221372604
    2. '(line' → logprob: -2.8499207496643066
    3. ',line' → logprob: -3.3499207496643066
    4. 'line' → logprob: -6.599920749664307
    5. ')' → logprob: -8.224920272827148
    6. ' line' → logprob: -8.224920272827148
    7. ' ,' → logprob: -9.599920272827148
    8. '[line' → logprob: -9.974920272827148
    9. '#line' → logprob: -10.349920272827148
    10. '	line' → logprob: -10.599920272827148

Token 33: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.04859623312950134
    2. 'line' → logprob: -3.048596143722534
    3. '	line' → logprob: -12.298596382141113
    4. ')' → logprob: -13.173596382141113
    5. '(line' → logprob: -13.923596382141113
    6. '[line' → logprob: -14.298596382141113
    7. '=line' → logprob: -14.923596382141113
    8. '#line' → logprob: -15.673596382141113
    9. ' input' → logprob: -16.048595428466797
    10. ' ' → logprob: -16.048595428466797

Token 34: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.563010036945343
    2. '.' → logprob: -1.8130099773406982
    3. '.strip' → logprob: -1.8130099773406982
    4. '().' → logprob: -2.3130099773406982
    5. '.rstrip' → logprob: -5.563010215759277
    6. '.readline' → logprob: -7.313010215759277
    7. ')' → logprob: -7.938010215759277
    8. 'split' → logprob: -8.188010215759277
    9. 'rstrip' → logprob: -10.813010215759277
    10. ' .' → logprob: -10.813010215759277

Token 35: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00941368006169796
    2. '()' → logprob: -5.009413719177246
    3. '('' → logprob: -6.134413719177246
    4. ')' → logprob: -7.884413719177246
    5. '()))' → logprob: -9.509413719177246
    6. '(' → logprob: -10.259413719177246
    7. '())
' → logprob: -10.509413719177246
    8. '(','' → logprob: -12.134413719177246
    9. ' ())' → logprob: -13.009413719177246
    10. '("' → logprob: -13.384413719177246

Token 36: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 37: ' idols' (ID: 175139)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3227177560329437
    2. '   ' → logprob: -2.5727176666259766
    3. ' if' → logprob: -3.1977176666259766
    4. '    ' → logprob: -3.4477176666259766
    5. 'if' → logprob: -3.6977176666259766
    6. '#' → logprob: -4.322717666625977
    7. '[' → logprob: -4.322717666625977
    8. ' 
' → logprob: -4.322717666625977
    9. '<|end|>' → logprob: -4.322717666625977
    10. ')' → logprob: -4.697717666625977

Token 38: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23289905488491058
    2. '=' → logprob: -2.2328989505767822
    3. '_' → logprob: -3.1078989505767822
    4. '_count' → logprob: -3.2328989505767822
    5. '_list' → logprob: -5.107899188995361
    6. '_counts' → logprob: -5.232899188995361
    7. 's' → logprob: -7.232899188995361
    8. '_positions' → logprob: -7.357899188995361
    9. '=[]' → logprob: -7.607899188995361
    10. '_set' → logprob: -7.732899188995361

Token 39: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.1897810697555542
    2. ' []' → logprob: -1.6897810697555542
    3. 'list' → logprob: -1.6897810697555542
    4. ' list' → logprob: -1.9397810697555542
    5. ' [' → logprob: -2.5647811889648438
    6. '[' → logprob: -2.5647811889648438
    7. '[list' → logprob: -4.564781188964844
    8. '[input' → logprob: -4.939781188964844
    9. 'set' → logprob: -5.064781188964844
    10. ' set' → logprob: -6.064781188964844

Token 40: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.27417510747909546
    2. ' for' → logprob: -1.8991751670837402
    3. '   ' → logprob: -3.0241751670837402
    4. '<|end|>' → logprob: -3.3991751670837402
    5. ' ' → logprob: -5.77417516708374
    6. '    
' → logprob: -6.77417516708374
    7. '[' → logprob: -6.77417516708374
    8. '	for' → logprob: -7.02417516708374
    9. '    ' → logprob: -8.024174690246582
    10. ' 
' → logprob: -8.149174690246582

Token 41: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.020569102838635445
    2. ' for' → logprob: -3.895569086074829
    3. '   ' → logprob: -11.27056884765625
    4. '	for' → logprob: -11.64556884765625
    5. '[' → logprob: -12.64556884765625
    6. 'count' → logprob: -15.27056884765625
    7. 'while' → logprob: -15.27056884765625
    8. 'data' → logprob: -15.27056884765625
    9. '    ' → logprob: -15.39556884765625
    10. ' ' → logprob: -15.52056884765625

Token 42: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.0018366605509072542
    2. '_' → logprob: -6.376836776733398
    3. ' i' → logprob: -9.001836776733398
    4. ' ' → logprob: -11.501836776733398
    5. ' ' → logprob: -14.501836776733398
    6. '_i' → logprob: -15.126836776733398
    7. 'i' → logprob: -15.751836776733398
    8. ' ‌' → logprob: -16.1268367767334
    9. ' range' → logprob: -16.8768367767334
    10. ' ▁' → logprob: -17.6268367767334

Token 43: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0003062646137550473
    2. 'in' → logprob: -8.250306129455566
    3. ' ' → logprob: -10.625306129455566
    4. 'range' → logprob: -11.625306129455566
    5. 'id' → logprob: -12.625306129455566
    6. '  ' → logprob: -12.625306129455566
    7. 'i' → logprob: -13.625306129455566
    8. ' _' → logprob: -13.625306129455566
    9. '	in' → logprob: -14.375306129455566
    10. ' i' → logprob: -14.375306129455566

Token 44: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0009410003549419343
    2. ' range' → logprob: -7.250940799713135
    3. 'ange' → logprob: -9.125941276550293
    4. 'id' → logprob: -9.250941276550293
    5. '(range' → logprob: -11.750941276550293
    6. '```' → logprob: -12.625941276550293
    7. 'ids' → logprob: -12.750941276550293
    8. 'in' → logprob: -12.750941276550293
    9. 'M' → logprob: -13.625941276550293
    10. ')' → logprob: -13.625941276550293

Token 45: '(N' (ID: 10564)
  Prédit: '(M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.0018888992490246892
    2. '(' → logprob: -6.501888751983643
    3. '(N' → logprob: -7.876888751983643
    4. ' (' → logprob: -12.3768892288208
    5. 'M' → logprob: -13.5018892288208
    6. ' M' → logprob: -13.8768892288208
    7. '(int' → logprob: -15.0018892288208
    8. '(range' → logprob: -16.126888275146484
    9. '(
' → logprob: -17.626888275146484
    10. '(S' → logprob: -18.001888275146484

Token 46: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001245112856850028
    2. '):
' → logprob: -7.001245021820068
    3. ')' → logprob: -8.126245498657227
    4. ' ):' → logprob: -11.126245498657227
    5. '   ' → logprob: -11.626245498657227
    6. ':' → logprob: -11.626245498657227
    7. '):
' → logprob: -12.501245498657227
    8. '():' → logprob: -15.251245498657227
    9. '):

' → logprob: -15.876245498657227
    10. ' ' → logprob: -16.001245498657227

Token 47: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5462080836296082
    2. ' idols' → logprob: -1.546208143234253
    3. '       ' → logprob: -1.671208143234253
    4. '    ' → logprob: -5.046207904815674
    5. '<|end|>' → logprob: -5.671207904815674
    6. ' id' → logprob: -5.796207904815674
    7. 'id' → logprob: -5.921207904815674
    8. ' ids' → logprob: -6.546207904815674
    9. ' ind' → logprob: -7.546207904815674
    10. ' ' → logprob: -8.046208381652832

Token 48: ' name' (ID: 1308)
  Prédit: ' idols'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' idols' → logprob: -0.05068686231970787
    2. 'id' → logprob: -3.925686836242676
    3. 'ids' → logprob: -4.425686836242676
    4. ' ids' → logprob: -4.550686836242676
    5. ' id' → logprob: -6.550686836242676
    6. '   ' → logprob: -6.550686836242676
    7. ' idol' → logprob: -7.175686836242676
    8. 'idol' → logprob: -7.550686836242676
    9. ' line' → logprob: -7.675686836242676
    10. 'line' → logprob: -7.925686836242676

Token 49: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09110482782125473
    2. '=' → logprob: -2.966104745864868
    3. ',' → logprob: -3.341104745864868
    4. 's' → logprob: -9.716104507446289
    5. ' ,' → logprob: -9.716104507446289
    6. ' ' → logprob: -11.091104507446289
    7. ')' → logprob: -11.341104507446289
    8. '   ' → logprob: -11.841104507446289
    9. '<|end|>' → logprob: -12.466104507446289
    10. '=line' → logprob: -12.841104507446289

Token 50: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.06994444131851196
    2. 'input' → logprob: -2.694944381713867
    3. ' sys' → logprob: -12.569944381713867
    4. '=input' → logprob: -13.569944381713867
    5. '	input' → logprob: -14.069944381713867
    6. ' ' → logprob: -14.194944381713867
    7. '(input' → logprob: -14.819944381713867
    8. 'sys' → logprob: -15.069944381713867
    9. 'int' → logprob: -15.319944381713867
    10. ' int' → logprob: -15.757444381713867

Token 51: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.06199133023619652
    2. '()' → logprob: -2.8119912147521973
    3. '())' → logprob: -10.811991691589355
    4. ')' → logprob: -13.436991691589355
    5. '()
' → logprob: -14.561991691589355
    6. ' ().' → logprob: -15.186991691589355
    7. '.strip' → logprob: -15.686991691589355
    8. ' ()' → logprob: -15.686991691589355
    9. '()

' → logprob: -15.936991691589355
    10. '()).' → logprob: -15.936991691589355

Token 52: 'rstrip' (ID: 180429)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.01815052703022957
    2. 'rstrip' → logprob: -4.018150329589844
    3. 'split' → logprob: -14.518150329589844
    4. 'str' → logprob: -16.393150329589844
    5. 'rst' → logprob: -18.018150329589844
    6. ' strip' → logprob: -18.018150329589844
    7. 'startswith' → logprob: -18.268150329589844
    8. '```' → logprob: -18.643150329589844
    9. 'rs' → logprob: -18.768150329589844
    10. '.strip' → logprob: -19.268150329589844

Token 53: '('\' (ID: 24345)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00264379451982677
    2. '()
' → logprob: -6.377643585205078
    3. '()\' → logprob: -7.377643585205078
    4. '('\' → logprob: -8.127643585205078
    5. '(' → logprob: -11.752643585205078
    6. '()
' → logprob: -12.252643585205078
    7. '()

' → logprob: -12.877643585205078
    8. '("\' → logprob: -13.502643585205078
    9. '())' → logprob: -13.627643585205078
    10. '('' → logprob: -14.377643585205078

Token 54: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.816093228830141e-06
    2. '\n' → logprob: -12.87500286102295
    3. 'r' → logprob: -16.250001907348633
    4. ')' → logprob: -17.000001907348633
    5. 'newline' → logprob: -17.500001907348633
    6. 't' → logprob: -18.375001907348633
    7. 'u' → logprob: -19.375001907348633
    8. ' n' → logprob: -19.500001907348633
    9. '\' → logprob: -20.250001907348633
    10. 'name' → logprob: -20.375001907348633

Token 55: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3142002820968628
    2. '')' → logprob: -1.3142002820968628
    3. ')
' → logprob: -7.689200401306152
    4. '')
' → logprob: -7.939200401306152
    5. '()' → logprob: -10.439200401306152
    6. '")' → logprob: -10.564200401306152
    7. '())' → logprob: -10.939200401306152
    8. ')\' → logprob: -11.189200401306152
    9. ')
' → logprob: -11.564200401306152
    10. '')
' → logprob: -11.814200401306152

Token 56: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1094418615102768
    2. '<|end|>' → logprob: -2.7344417572021484
    3. '   ' → logprob: -3.4844417572021484
    4. ')' → logprob: -6.109441757202148
    5. '<|end|>' → logprob: -6.734441757202148
    6. '
' → logprob: -6.734441757202148
    7. 'id' → logprob: -7.734441757202148
    8. ',' → logprob: -7.734441757202148
    9. ' ' → logprob: -7.859441757202148
    10. '        
' → logprob: -7.984441757202148

Token 57: ' C' (ID: 363)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.3881602883338928
    2. ' idols' → logprob: -2.013160228729248
    3. '   ' → logprob: -2.388160228729248
    4. 'ids' → logprob: -3.013160228729248
    5. ' id' → logprob: -4.013160228729248
    6. ' ids' → logprob: -5.388160228729248
    7. 'votes' → logprob: -5.638160228729248
    8. 'age' → logprob: -6.013160228729248
    9. 'score' → logprob: -6.138160228729248
    10. 'idol' → logprob: -6.263160228729248

Token 58: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.36653557419776917
    2. '=' → logprob: -2.1165356636047363
    3. 'ount' → logprob: -2.1165356636047363
    4. 'ost' → logprob: -4.116535663604736
    5. '   ' → logprob: -4.491535663604736
    6. 'ol' → logprob: -4.991535663604736
    7. ',' → logprob: -5.741535663604736
    8. 'count' → logprob: -5.866535663604736
    9. 'h' → logprob: -6.179035663604736
    10. 'olor' → logprob: -6.179035663604736

Token 59: ' V' (ID: 631)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.8459153175354004
    2. '=' → logprob: -2.2209153175354004
    3. ' D' → logprob: -2.5959153175354004
    4. 'D' → logprob: -2.5959153175354004
    5. ' ratings' → logprob: -2.7209153175354004
    6. '_' → logprob: -2.8459153175354004
    7. ' L' → logprob: -3.5959153175354004
    8. 'O' → logprob: -3.8459153175354004
    9. ' K' → logprob: -3.8459153175354004
    10. 's' → logprob: -3.8459153175354004

Token 60: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.34850013256073
    2. ' =' → logprob: -1.22350013256073
    3. ',' → logprob: -10.34850025177002
    4. ' ' → logprob: -11.47350025177002
    5. '=int' → logprob: -12.22350025177002
    6. '   ' → logprob: -12.97350025177002
    7. 's' → logprob: -13.34850025177002
    8. '  ' → logprob: -14.22350025177002
    9. '=input' → logprob: -14.34850025177002
    10. '=line' → logprob: -14.97350025177002

Token 61: ' D' (ID: 415)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.8590021133422852
    2. 'map' → logprob: -1.4840021133422852
    3. ' =' → logprob: -2.234002113342285
    4. '=' → logprob: -3.359002113342285
    5. '_' → logprob: -3.734002113342285
    6. ' P' → logprob: -3.859002113342285
    7. 'int' → logprob: -4.359002113342285
    8. 'I' → logprob: -4.484002113342285
    9. ' _' → logprob: -4.609002113342285
    10. 'P' → logprob: -4.734002113342285

Token 62: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3133809268474579
    2. '=' → logprob: -1.3133809566497803
    3. ',' → logprob: -9.43838119506836
    4. ' ' → logprob: -10.56338119506836
    5. '   ' → logprob: -12.18838119506836
    6. '  ' → logprob: -12.68838119506836
    7. 's' → logprob: -13.93838119506836
    8. ')' → logprob: -13.93838119506836
    9. '=int' → logprob: -14.68838119506836
    10. '    ' → logprob: -14.81338119506836

Token 63: ' L' (ID: 451)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -1.4411250352859497
    2. 'S' → logprob: -2.06612491607666
    3. 'I' → logprob: -2.19112491607666
    4. ' P' → logprob: -2.81612491607666
    5. 'T' → logprob: -3.19112491607666
    6. 'L' → logprob: -3.31612491607666
    7. ' S' → logprob: -3.31612491607666
    8. 'F' → logprob: -3.31612491607666
    9. ' I' → logprob: -3.56612491607666
    10. 'B' → logprob: -3.69112491607666

Token 64: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6934924125671387
    2. ' =' → logprob: -0.6934924125671387
    3. ',' → logprob: -8.068492889404297
    4. ' ' → logprob: -10.693492889404297
    5. '   ' → logprob: -13.193492889404297
    6. '  ' → logprob: -13.693492889404297
    7. '=input' → logprob: -14.068492889404297
    8. '=int' → logprob: -14.193492889404297
    9. '=line' → logprob: -14.443492889404297
    10. 'ist' → logprob: -14.755992889404297

Token 65: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.026326768100261688
    2. 'map' → logprob: -3.6513266563415527
    3. ' ' → logprob: -11.901327133178711
    4. ' input' → logprob: -12.401327133178711
    5. '   ' → logprob: -12.776327133178711
    6. '	map' → logprob: -12.776327133178711
    7. 'm' → logprob: -12.901327133178711
    8. ' list' → logprob: -13.151327133178711
    9. '  ' → logprob: -13.526327133178711
    10. 'input' → logprob: -14.026327133178711

Token 66: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00015693542081862688
    2. '(' → logprob: -8.875157356262207
    3. 'int' → logprob: -11.625157356262207
    4. '[int' → logprob: -12.500157356262207
    5. '<int' → logprob: -13.625157356262207
    6. '(str' → logprob: -14.000157356262207
    7. '(lambda' → logprob: -14.250157356262207
    8. ' (' → logprob: -14.500157356262207
    9. '(float' → logprob: -14.500157356262207
    10. '=int' → logprob: -14.750157356262207

Token 67: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.15326951444149017
    2. '(' → logprob: -2.2782695293426514
    3. ',input' → logprob: -4.278269290924072
    4. ')' → logprob: -4.403269290924072
    5. ',' → logprob: -4.528269290924072
    6. 'input' → logprob: -6.778269290924072
    7. '(),' → logprob: -7.153269290924072
    8. '),' → logprob: -8.15326976776123
    9. ')(' → logprob: -8.90326976776123
    10. ' input' → logprob: -9.40326976776123

Token 68: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.12694533169269562
    2. ' input' → logprob: -2.1269452571868896
    3. ')' → logprob: -11.751945495605469
    4. '(input' → logprob: -12.626945495605469
    5. '   ' → logprob: -13.501945495605469
    6. '	input' → logprob: -13.751945495605469
    7. 'line' → logprob: -13.876945495605469
    8. 'sys' → logprob: -14.626945495605469
    9. '=input' → logprob: -14.626945495605469
    10. ' ' → logprob: -14.626945495605469

Token 69: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -7.3458322731312364e-06
    2. '()' → logprob: -11.875007629394531
    3. ' ().' → logprob: -15.750007629394531
    4. '.' → logprob: -18.00000762939453
    5. '(' → logprob: -18.12500762939453
    6. '()
' → logprob: -18.25000762939453
    7. '.readline' → logprob: -18.50000762939453
    8. '().'' → logprob: -18.50000762939453
    9. ')' → logprob: -18.62500762939453
    10. '())' → logprob: -19.87500762939453

Token 70: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00041172682540491223
    2. 'strip' → logprob: -8.500411987304688
    3. 'rstrip' → logprob: -8.500411987304688
    4. '().' → logprob: -12.750411987304688
    5. ' split' → logprob: -13.625411987304688
    6. '(split' → logprob: -14.500411987304688
    7. 'spl' → logprob: -15.250411987304688
    8. 's' → logprob: -18.000411987304688
    9. '.split' → logprob: -18.250411987304688
    10. '()' → logprob: -18.625411987304688

Token 71: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.37879079580307007
    2. '()' → logprob: -1.6287908554077148
    3. ')' → logprob: -2.128790855407715
    4. '())
' → logprob: -9.253790855407715
    5. '(' → logprob: -9.878790855407715
    6. '()
' → logprob: -12.253790855407715
    7. ')
' → logprob: -12.753790855407715
    8. '())
' → logprob: -13.753790855407715
    9. '(),' → logprob: -13.878790855407715
    10. '')' → logprob: -14.003790855407715

Token 72: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14408758282661438
    2. '<|end|>' → logprob: -2.394087553024292
    3. '   ' → logprob: -3.519087553024292
    4. ')' → logprob: -5.144087791442871
    5. '        
' → logprob: -5.644087791442871
    6. '<|end|>' → logprob: -6.769087791442871
    7. '
' → logprob: -7.269087791442871
    8. ',' → logprob: -7.644087791442871
    9. '    
' → logprob: -7.769087791442871
    10. ' ' → logprob: -8.269087791442871

Token 73: ' idols' (ID: 175139)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29617995023727417
    2. '   ' → logprob: -1.546180009841919
    3. ' idols' → logprob: -4.04617977142334
    4. 'id' → logprob: -5.04617977142334
    5. '<|end|>' → logprob: -5.42117977142334
    6. ')' → logprob: -6.54617977142334
    7. 'ids' → logprob: -6.79617977142334
    8. 'score' → logprob: -7.04617977142334
    9. 'ind' → logprob: -7.10867977142334
    10. ' ids' → logprob: -7.29617977142334

Token 74: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0040793512016534805
    2. '.' → logprob: -5.504079341888428
    3. ' .' → logprob: -15.379079818725586
    4. '.extend' → logprob: -15.504079818725586
    5. '.app' → logprob: -15.629079818725586
    6. '.ap' → logprob: -15.879079818725586
    7. '<|end|>' → logprob: -17.254079818725586
    8. ' =' → logprob: -17.254079818725586
    9. '.add' → logprob: -17.379079818725586
    10. 'append' → logprob: -17.754079818725586

Token 75: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.00474007660523057
    2. '(' → logprob: -5.379740238189697
    3. '(('' → logprob: -9.254739761352539
    4. '({'' → logprob: -11.504739761352539
    5. '(([' → logprob: -12.629739761352539
    6. '(({' → logprob: -12.879739761352539
    7. '([' → logprob: -13.004739761352539
    8. '(("' → logprob: -13.504739761352539
    9. '(name' → logprob: -13.879739761352539
    10. '(
' → logprob: -14.004739761352539

Token 76: 'C' (ID: 34)
  Prédit: 'name'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'name' → logprob: -0.05866425484418869
    2. 'C' → logprob: -2.933664321899414
    3. ' name' → logprob: -6.058664321899414
    4. 'V' → logprob: -7.308664321899414
    5. ' C' → logprob: -7.683664321899414
    6. '   ' → logprob: -9.058664321899414
    7. 'N' → logprob: -9.183664321899414
    8. 'L' → logprob: -10.808664321899414
    9. ' V' → logprob: -11.808664321899414
    10. ' ' → logprob: -11.933664321899414

Token 77: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003729966701939702
    2. ' ,' → logprob: -8.375372886657715
    3. ',V' → logprob: -8.875372886657715
    4. ',
' → logprob: -13.875372886657715
    5. ',v' → logprob: -14.250372886657715
    6. '+' → logprob: -15.625372886657715
    7. ',M' → logprob: -15.750372886657715
    8. ',C' → logprob: -16.37537384033203
    9. ' +' → logprob: -16.50037384033203
    10. '   ' → logprob: -16.50037384033203

Token 78: ' V' (ID: 631)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.009829873219132423
    2. ' V' → logprob: -4.634829998016357
    3. 'name' → logprob: -10.0098295211792
    4. ' ' → logprob: -11.8848295211792
    5. 'L' → logprob: -12.5098295211792
    6. ' name' → logprob: -12.5098295211792
    7. '   ' → logprob: -12.8848295211792
    8. 'M' → logprob: -13.0098295211792
    9. ' ' → logprob: -13.0098295211792
    10. '	V' → logprob: -13.5098295211792

Token 79: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004734486574307084
    2. ',D' → logprob: -8.125473022460938
    3. ' ,' → logprob: -8.875473022460938
    4. 'D' → logprob: -11.500473022460938
    5. '+' → logprob: -12.125473022460938
    6. ',
' → logprob: -12.750473022460938
    7. ',V' → logprob: -12.875473022460938
    8. '),' → logprob: -12.875473022460938
    9. '   ' → logprob: -13.125473022460938
    10. ' +' → logprob: -13.250473022460938

Token 80: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0028172398451715708
    2. ' D' → logprob: -5.877817153930664
    3. '   ' → logprob: -12.502817153930664
    4. ' ' → logprob: -12.502817153930664
    5. '  ' → logprob: -13.752817153930664
    6. '    ' → logprob: -14.127817153930664
    7. ',' → logprob: -14.940317153930664
    8. '0' → logprob: -15.127817153930664
    9. '     ' → logprob: -15.252817153930664
    10. '	D' → logprob: -15.315317153930664

Token 81: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005237233126536012
    2. ' ,' → logprob: -7.875523567199707
    3. ',L' → logprob: -9.000523567199707
    4. ',
' → logprob: -12.000523567199707
    5. 'L' → logprob: -12.250523567199707
    6. '),' → logprob: -13.000523567199707
    7. '))' → logprob: -13.750523567199707
    8. ')' → logprob: -14.125523567199707
    9. ' L' → logprob: -14.125523567199707
    10. ' ' → logprob: -14.375523567199707

Token 82: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.11283092200756073
    2. ' L' → logprob: -2.237830877304077
    3. ' ' → logprob: -12.487831115722656
    4. '    ' → logprob: -13.987831115722656
    5. ')' → logprob: -14.237831115722656
    6. ' ' → logprob: -14.425331115722656
    7. '	L' → logprob: -14.675331115722656
    8. '   ' → logprob: -14.800331115722656
    9. ',L' → logprob: -15.237831115722656
    10. ')L' → logprob: -15.425331115722656

Token 83: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.10119874030351639
    2. ',' → logprob: -2.351198673248291
    3. ')' → logprob: -7.351198673248291
    4. '))
' → logprob: -8.60119915008545
    5. ' ))' → logprob: -9.22619915008545
    6. ' ,' → logprob: -10.47619915008545
    7. '),' → logprob: -11.72619915008545
    8. '))

' → logprob: -12.22619915008545
    9. ')))' → logprob: -12.47619915008545
    10. ',
' → logprob: -12.60119915008545

Token 84: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.9443562626838684
    2. '   ' → logprob: -1.1943562030792236
    3. ' dp' → logprob: -2.4443562030792236
    4. '<|end|>' → logprob: -2.9443562030792236
    5. 'max' → logprob: -3.6943562030792236
    6. 'total' → logprob: -3.9443562030792236
    7. ' max' → logprob: -4.569356441497803
    8. 'scores' → logprob: -4.819356441497803
    9. 'score' → logprob: -4.944356441497803
    10. ' for' → logprob: -5.069356441497803

Token 85: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.06970809400081635
    2. 'max' → logprob: -4.444707870483398
    3. 'selected' → logprob: -5.319707870483398
    4. '#' (adapté à ' #') → logprob: -5.444707870483398
    5. ' dp' → logprob: -5.444707870483398
    6. '   ' → logprob: -5.444707870483398
    7. 'for' → logprob: -5.819707870483398
    8. 'result' → logprob: -6.069707870483398
    9. 'answer' → logprob: -6.194707870483398
    10. 'visited' → logprob: -6.444707870483398

Token 86: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.9057247042655945
    2. ' dp' → logprob: -1.2807247638702393
    3. ' #' → logprob: -2.5307247638702393
    4. '#' → logprob: -2.7807247638702393
    5. ' max' → logprob: -3.6557247638702393
    6. ' for' → logprob: -3.6557247638702393
    7. 'for' → logprob: -3.9057247638702393
    8. 'max' → logprob: -3.9057247638702393
    9. 'rest' → logprob: -4.03072452545166
    10. ' rest' → logprob: -4.65572452545166

Token 87: '[c' (ID: 22840)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10058124363422394
    2. '=' → logprob: -2.350581169128418
    3. '[' → logprob: -8.600581169128418
    4. 'dp' → logprob: -10.225581169128418
    5. '=[' → logprob: -10.350581169128418
    6. '=[]' → logprob: -10.475581169128418
    7. '<|end|>' → logprob: -10.475581169128418
    8. ' ' → logprob: -11.350581169128418
    9. ']' → logprob: -11.475581169128418
    10. ',' → logprob: -11.975581169128418

Token 88: 'ost' (ID: 564)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.27461400628089905
    2. 'ost' → logprob: -1.6496139764785767
    3. 'ap' → logprob: -3.399614095687866
    4. ' =' → logprob: -5.149613857269287
    5. '][' → logprob: -6.024613857269287
    6. 'ount' → logprob: -6.024613857269287
    7. ' ]' → logprob: -7.024613857269287
    8. ']=' → logprob: -7.024613857269287
    9. '=' → logprob: -7.524613857269287
    10. 'p' → logprob: -8.149614334106445

Token 89: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.010911992751061916
    2. '][' → logprob: -4.88591194152832
    3. ' =' → logprob: -6.13591194152832
    4. ']=' → logprob: -7.76091194152832
    5. '=' → logprob: -8.01091194152832
    6. 's' → logprob: -9.01091194152832
    7. ' ]' → logprob: -9.51091194152832
    8. '_max' → logprob: -10.76091194152832
    9. 'max' → logprob: -10.88591194152832
    10. ',' → logprob: -11.01091194152832

Token 90: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029754308983683586
    2. '=' → logprob: -3.529754400253296
    3. ',' → logprob: -13.779754638671875
    4. '[' → logprob: -15.029754638671875
    5. 'dp' → logprob: -15.029754638671875
    6. ']' → logprob: -15.279754638671875
    7. '=[' → logprob: -15.279754638671875
    8. ' =[' → logprob: -15.529754638671875
    9. '=[]' → logprob: -15.529754638671875
    10. 'max' → logprob: -15.779754638671875

Token 91: ' (' (ID: 350)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5268123149871826
    2. '(' → logprob: -2.1518123149871826
    3. ' (' → logprob: -2.4018123149871826
    4. 'max' → logprob: -2.5268123149871826
    5. '[' → logprob: -3.4018123149871826
    6. '(-' → logprob: -3.7768123149871826
    7. 'maximum' → logprob: -4.151812553405762
    8. ' maximum' → logprob: -4.276812553405762
    9. '(max' → logprob: -4.901812553405762
    10. ' max' → logprob: -5.276812553405762

Token 92: 'voc' (ID: 154102)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.9605357646942139
    2. ' max' → logprob: -2.210535764694214
    3. 'maximum' → logprob: -2.335535764694214
    4. ' (' → logprob: -2.710535764694214
    5. ' maximum' → logprob: -2.835535764694214
    6. 'V' → logprob: -3.085535764694214
    7. '0' → logprob: -3.085535764694214
    8. 'value' → logprob: -3.460535764694214
    9. ' total' → logprob: -3.960535764694214
    10. 'total' → logprob: -4.085536003112793

Token 93: ',' (ID: 11)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.17766286432743073
    2. 'a' → logprob: -3.4276628494262695
    3. 'abs' → logprob: -3.4276628494262695
    4. 'als' → logprob: -3.8026628494262695
    5. 'abulary' → logprob: -3.8026628494262695
    6. 'ab' → logprob: -4.1776628494262695
    7. ',' → logprob: -4.4276628494262695
    8. ')' → logprob: -4.8026628494262695
    9. 'alist' → logprob: -5.9276628494262695
    10. 'ability' → logprob: -6.3026628494262695

Token 94: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -2.368048906326294
    2. 'd' → logprob: -2.430548906326294
    3. ' dance' → logprob: -2.430548906326294
    4. ' fun' → logprob: -3.118048906326294
    5. 'pop' → logprob: -3.118048906326294
    6. ' def' → logprob: -3.180548906326294
    7. 'dance' → logprob: -3.180548906326294
    8. 'def' → logprob: -3.243048906326294
    9. ' joy' → logprob: -4.180548667907715
    10. ' dur' → logprob: -4.243048667907715

Token 95: 'nc' (ID: 24825)
  Prédit: 'am'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'am' → logprob: -1.0353658199310303
    2. 'ef' → logprob: -1.5353658199310303
    3. 'amage' → logprob: -1.6603658199310303
    4. ',' → logprob: -2.2853658199310303
    5. 'mg' → logprob: -3.1603658199310303
    6. 'eff' → logprob: -3.9103658199310303
    7. 'ance' → logprob: -4.285366058349609
    8. 'e' → logprob: -4.285366058349609
    9. 'ex' → logprob: -4.910366058349609
    10. 'iff' → logprob: -5.660366058349609

Token 96: ',' (ID: 11)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.014501234516501427
    2. ',' → logprob: -4.389501094818115
    3. ')' → logprob: -6.764501094818115
    4. 'es' → logprob: -8.014501571655273
    5. 'er' → logprob: -8.264501571655273
    6. ',e' → logprob: -10.389501571655273
    7. 'ance' → logprob: -10.389501571655273
    8. 'ease' → logprob: -10.389501571655273
    9. 'y' → logprob: -10.514501571655273
    10. '),' → logprob: -11.389501571655273

Token 97: ' l' (ID: 305)
  Prédit: 'lvl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lvl' → logprob: -2.1567771434783936
    2. 'lif' → logprob: -2.4067771434783936
    3. ' lvl' → logprob: -2.4067771434783936
    4. 'l' → logprob: -2.9067771434783936
    5. ' lov' → logprob: -3.4067771434783936
    6. ' luck' → logprob: -3.5942771434783936
    7. ' l' → logprob: -3.8442771434783936
    8. ' lif' → logprob: -3.9067771434783936
    9. 'lv' → logprob: -3.9692771434783936
    10. ' liv' → logprob: -4.031777381896973

Token 98: 'ks' (ID: 2484)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3191530704498291
    2. 'e' → logprob: -2.694153070449829
    3. 'y' → logprob: -3.569153070449829
    4. 'ry' → logprob: -3.569153070449829
    5. ',' → logprob: -3.694153070449829
    6. 'ay' → logprob: -4.31915283203125
    7. 's' → logprob: -4.31915283203125
    8. 'score' → logprob: -4.69415283203125
    9. 'v' → logprob: -4.81915283203125
    10. 'vl' → logprob: -4.94415283203125

Token 99: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003802692284807563
    2. ',' → logprob: -6.25380277633667
    3. 'ts' → logprob: -7.62880277633667
    4. 't' → logprob: -7.75380277633667
    5. 'ks' → logprob: -8.003802299499512
    6. 's' → logprob: -8.503802299499512
    7. '),' → logprob: -9.378802299499512
    8. 'ty' → logprob: -10.003802299499512
    9. 'y' → logprob: -10.253802299499512
    10. '   ' → logprob: -10.503802299499512

Token 100: ' max' (ID: 2999)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17434640228748322
    2. 'dp' → logprob: -3.674346446990967
    3. ' =' → logprob: -3.924346446990967
    4. '[' → logprob: -4.049346446990967
    5. '    
' → logprob: -4.049346446990967
    6. '   ' → logprob: -4.424346446990967
    7. '<|end|>' → logprob: -4.549346446990967
    8. '\' → logprob: -4.674346446990967
    9. '\n' → logprob: -5.049346446990967
    10. ' 
' → logprob: -5.174346446990967

Token 101: ' sums' (ID: 73121)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5695165395736694
    2. '   ' → logprob: -2.069516658782959
    3. '
' → logprob: -2.194516658782959
    4. 'dp' → logprob: -2.819516658782959
    5. '=' → logprob: -3.444516658782959
    6. '\n' → logprob: -4.069516658782959
    7. '\' → logprob: -4.569516658782959
    8. '_dp' → logprob: -4.569516658782959
    9. '[' → logprob: -4.944516658782959
    10. ' ' → logprob: -5.069516658782959

Token 102: ' achievable' (ID: 118877)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6932973265647888
    2. '
' → logprob: -1.8182973861694336
    3. '   ' → logprob: -1.9432973861694336
    4. '<|end|>' → logprob: -2.9432973861694336
    5. '=' → logprob: -3.4432973861694336
    6. '_' → logprob: -3.5682973861694336
    7. '    
' → logprob: -3.9432973861694336
    8. '\' → logprob: -4.068297386169434
    9. '\n' → logprob: -4.193297386169434
    10. ' 
' → logprob: -5.443297386169434

Token 103: ' with' (ID: 483)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026173492893576622
    2. '
' → logprob: -4.5261735916137695
    3. 'dp' → logprob: -4.9011735916137695
    4. '    
' → logprob: -6.1511735916137695
    5. ' dp' → logprob: -6.2761735916137695
    6. ',' → logprob: -7.2761735916137695
    7. '    ' → logprob: -7.4011735916137695
    8. '_dp' → logprob: -8.15117359161377
    9. ' =' → logprob: -8.27617359161377
    10. '<|end|>' → logprob: -8.40117359161377

Token 104: ' cost' (ID: 3097)
  Prédit: ' cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.21960368752479553
    2. 'cost' → logprob: -2.0946037769317627
    3. ' range' → logprob: -3.9696037769317627
    4. '0' → logprob: -4.594603538513184
    5. '[' → logprob: -4.844603538513184
    6. ' [' → logprob: -5.219603538513184
    7. ' costs' → logprob: -5.219603538513184
    8. ' ' → logprob: -5.594603538513184
    9. ' c' → logprob: -5.969603538513184
    10. ' max' → logprob: -6.094603538513184

Token 105: ' '' (ID: 461)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8274345397949219
    2. '
' → logprob: -1.5774345397949219
    3. ' =' → logprob: -1.9524345397949219
    4. '_' → logprob: -2.577434539794922
    5. 'dp' → logprob: -3.202434539794922
    6. '_dp' → logprob: -3.702434539794922
    7. '=' → logprob: -3.952434539794922
    8. '    
' → logprob: -4.077434539794922
    9. ' dp' → logprob: -4.452434539794922
    10. '[' → logprob: -5.952434539794922

Token 106: 'cost' (ID: 33457)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1993800550699234
    2. ' )' → logprob: -2.5743801593780518
    3. ' =' → logprob: -4.199379920959473
    4. '=' → logprob: -4.324379920959473
    5. '+' → logprob: -4.699379920959473
    6. '')' → logprob: -4.699379920959473
    7. ' ')' → logprob: -4.699379920959473
    8. 's' → logprob: -4.949379920959473
    9. ' ' → logprob: -5.199379920959473
    10. ' +' → logprob: -5.324379920959473

Token 107: ''
' (ID: 2207)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009881336241960526
    2. '   ' → logprob: -5.009881496429443
    3. ')
' → logprob: -6.134881496429443
    4. ' )' → logprob: -7.259881496429443
    5. ',' → logprob: -9.634881019592285
    6. '')' → logprob: -10.134881019592285
    7. ']' → logprob: -10.134881019592285
    8. '_)' → logprob: -11.009881019592285
    9. '")' → logprob: -11.134881019592285
    10. '`)' → logprob: -11.384881019592285

Token 108: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23873986303806305
    2. 'dp' → logprob: -2.3637399673461914
    3. ' dp' → logprob: -2.9887399673461914
    4. '
' → logprob: -2.9887399673461914
    5. '    
' → logprob: -4.738739967346191
    6. ' 
' → logprob: -6.363739967346191
    7. '	dp' → logprob: -6.613739967346191
    8. '\n' → logprob: -6.988739967346191
    9. '<|end|>' → logprob: -6.988739967346191
    10. '    ' → logprob: -7.238739967346191

Token 109: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.07239340990781784
    2. ' dp' → logprob: -2.8223934173583984
    3. '   ' → logprob: -4.572393417358398
    4. '	dp' → logprob: -11.072393417358398
    5. 'import' → logprob: -11.822393417358398
    6. '
' → logprob: -11.947393417358398
    7. '    
' → logprob: -12.572393417358398
    8. 'max' → logprob: -13.322393417358398
    9. '_dp' → logprob: -13.447393417358398
    10. ' ' → logprob: -14.322393417358398

Token 110: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00463078822940588
    2. '=' → logprob: -5.3796305656433105
    3. '[' → logprob: -12.254631042480469
    4. ' =[' → logprob: -12.379631042480469
    5. '=[' → logprob: -14.004631042480469
    6. ' ' → logprob: -15.754631042480469
    7. ')' → logprob: -16.00463104248047
    8. '   ' → logprob: -16.25463104248047
    9. ']' → logprob: -16.75463104248047
    10. ',' → logprob: -16.75463104248047

Token 111: ' [' (ID: 723)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.04941994696855545
    2. '[' → logprob: -3.29941987991333
    3. '{' → logprob: -5.04941987991333
    4. '[-' → logprob: -5.79941987991333
    5. ' [(' → logprob: -6.54941987991333
    6. '[[' → logprob: -8.299420356750488
    7. ' [' → logprob: -8.799420356750488
    8. '[{' → logprob: -11.174420356750488
    9. ' {' → logprob: -11.924420356750488
    10. '[((' → logprob: -12.174420356750488

Token 112: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.18896231055259705
    2. '(' → logprob: -1.9389623403549194
    3. 'None' → logprob: -3.81396222114563
    4. '(None' → logprob: -5.188962459564209
    5. ' (-' → logprob: -8.56396198272705
    6. ' (' → logprob: -8.68896198272705
    7. ' None' → logprob: -8.93896198272705
    8. '[-' → logprob: -9.18896198272705
    9. '-' → logprob: -10.43896198272705
    10. '[' → logprob: -10.56396198272705

Token 113: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007165358401834965
    2. 'float' → logprob: -5.382165431976318
    3. '10' → logprob: -6.132165431976318
    4. '(' → logprob: -8.25716495513916
    5. '100' → logprob: -10.00716495513916
    6. 'sys' → logprob: -10.13216495513916
    7. '999' → logprob: -11.50716495513916
    8. 'int' → logprob: -12.88216495513916
    9. '(float' → logprob: -13.13216495513916
    10. '0' → logprob: -13.25716495513916

Token 114: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.019132809713482857
    2. ',-' → logprob: -4.519132614135742
    3. ',)' → logprob: -5.644132614135742
    4. ')' → logprob: -6.144132614135742
    5. '0' → logprob: -6.769132614135742
    6. ')]' → logprob: -7.894132614135742
    7. '1' → logprob: -8.394132614135742
    8. '000' → logprob: -8.519132614135742
    9. '-' → logprob: -9.269132614135742
    10. '00' → logprob: -9.644132614135742

Token 115: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.036255016922950745
    2. '0' → logprob: -3.411255121231079
    3. ' -' → logprob: -6.0362548828125
    4. ' ' → logprob: -8.6612548828125
    5. ')' → logprob: -10.5362548828125
    6. '(' → logprob: -12.2862548828125
    7. '(-' → logprob: -13.0362548828125
    8. '   ' → logprob: -14.0987548828125
    9. '-v' → logprob: -14.2862548828125
    10. ')-' → logprob: -14.4112548828125

Token 116: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.6776029699249193e-05
    2. '-' → logprob: -11.25002670288086
    3. ' ' → logprob: -12.25002670288086
    4. '0' → logprob: -12.50002670288086
    5. 'sys' → logprob: -13.12502670288086
    6. ' -' → logprob: -13.62502670288086
    7. '2' → logprob: -15.12502670288086
    8. '

' → logprob: -15.25002670288086
    9. 'inf' → logprob: -15.25002670288086
    10. '10' → logprob: -15.31252670288086

Token 117: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013350016670301557
    2. ',-' → logprob: -6.751335144042969
    3. ' ,' → logprob: -9.376335144042969
    4. '-' → logprob: -10.376335144042969
    5. ')' → logprob: -10.876335144042969
    6. ' -' → logprob: -11.501335144042969
    7. ',
' → logprob: -12.876335144042969
    8. '<|end|>' → logprob: -13.251335144042969
    9. '0' → logprob: -13.376335144042969
    10. '1' → logprob: -13.501335144042969

Token 118: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0004911953583359718
    2. ' -' → logprob: -7.625491142272949
    3. ' ' → logprob: -13.25049114227295
    4. '  ' → logprob: -14.87549114227295
    5. '0' → logprob: -14.87549114227295
    6. '   ' → logprob: -15.00049114227295
    7. ')' → logprob: -15.75049114227295
    8. '1' → logprob: -16.375492095947266
    9. '
' → logprob: -16.875492095947266
    10. '

' → logprob: -17.250492095947266

Token 119: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5928495486150496e-05
    2. '-' → logprob: -12.125016212463379
    3. ' ' → logprob: -12.437516212463379
    4. ' -' → logprob: -13.250016212463379
    5. '2' → logprob: -13.437516212463379
    6. '

' → logprob: -14.562516212463379
    7. '0' → logprob: -14.687516212463379
    8. '(-' → logprob: -14.875016212463379
    9. '```' → logprob: -15.375016212463379
    10. '   ' → logprob: -15.437516212463379

Token 120: ')]' (ID: 15710)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5762094855308533
    2. ')]' → logprob: -0.8262094855308533
    3. ' )' → logprob: -9.20120906829834
    4. ']' → logprob: -9.20120906829834
    5. ')
' → logprob: -10.45120906829834
    6. '   ' → logprob: -10.82620906829834
    7. '),' → logprob: -11.57620906829834
    8. '0' → logprob: -12.32620906829834
    9. ')]
' → logprob: -14.07620906829834
    10. ' ' → logprob: -14.32620906829834

Token 121: ' *' (ID: 425)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.13755038380622864
    2. '+' → logprob: -2.5125503540039062
    3. ' *' → logprob: -3.6375503540039062
    4. '*' → logprob: -4.262550354003906
    5. '*(' → logprob: -6.262550354003906
    6. '+[' → logprob: -6.512550354003906
    7. '
' → logprob: -7.137550354003906
    8. ' for' → logprob: -7.387550354003906
    9. '[' → logprob: -7.637550354003906
    10. ']' → logprob: -8.012550354003906

Token 122: ' (' (ID: 350)
  Prédit: '(M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.001004943042062223
    2. ' (' → logprob: -7.376005172729492
    3. '(' → logprob: -8.376005172729492
    4. '0' → logprob: -10.251005172729492
    5. '   ' → logprob: -10.626005172729492
    6. '(m' → logprob: -10.626005172729492
    7. 'M' → logprob: -10.876005172729492
    8. '((' → logprob: -11.251005172729492
    9. '100' → logprob: -11.876005172729492
    10. '(max' → logprob: -12.501005172729492

Token 123: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0017317025922238827
    2. ' M' → logprob: -6.626731872558594
    3. '(M' → logprob: -7.876731872558594
    4. '   ' → logprob: -11.126731872558594
    5. ' (' → logprob: -12.626731872558594
    6. '100' → logprob: -13.126731872558594
    7. 'm' → logprob: -13.501731872558594
    8. ' ' → logprob: -14.251731872558594
    9. '(' → logprob: -14.376731872558594
    10. '101' → logprob: -14.626731872558594

Token 124: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.018151817843317986
    2. ' +' → logprob: -4.018151760101318
    3. '+
' → logprob: -13.393152236938477
    4. ' +
' → logprob: -15.893152236938477
    5. '   ' → logprob: -16.518152236938477
    6. '
' → logprob: -17.018152236938477
    7. ' ' → logprob: -17.018152236938477
    8. '1' → logprob: -17.393152236938477
    9. '＋' → logprob: -17.393152236938477
    10. '```' → logprob: -18.518152236938477

Token 125: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.613945101387799e-05
    2. ' ' → logprob: -9.375085830688477
    3. '   ' → logprob: -13.875085830688477
    4. '
' → logprob: -16.750085830688477
    5. '```' → logprob: -16.875085830688477
    6. '  ' → logprob: -18.187585830688477
    7. ')' → logprob: -18.375085830688477
    8. '    ' → logprob: -18.687585830688477
    9. '2' → logprob: -19.000085830688477
    10. '+' → logprob: -19.187585830688477

Token 126: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.127333340875339e-06
    2. ' ' → logprob: -12.625003814697266
    3. '0' → logprob: -14.875003814697266
    4. '   ' → logprob: -15.125003814697266
    5. '2' → logprob: -17.000003814697266
    6. '
' → logprob: -17.375003814697266
    7. '100' → logprob: -17.375003814697266
    8. '```' → logprob: -17.687503814697266
    9. '10' → logprob: -17.750003814697266
    10. '  ' → logprob: -18.250003814697266

Token 127: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008378617349080741
    2. ')
' → logprob: -7.125837802886963
    3. '<|end|>' → logprob: -11.500838279724121
    4. '
' → logprob: -12.000838279724121
    5. ')

' → logprob: -12.500838279724121
    6. '   ' → logprob: -12.625838279724121
    7. ' )' → logprob: -12.750838279724121
    8. ']' → logprob: -13.375838279724121
    9. '```' → logprob: -14.000838279724121
    10. ')
' → logprob: -14.500838279724121

Token 128: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.03280022740364075
    2. '
' → logprob: -3.9078001976013184
    3. ' dp' → logprob: -5.532800197601318
    4. '[' → logprob: -6.157800197601318
    5. ' 
' → logprob: -6.657800197601318
    6. '(dp' → logprob: -6.782800197601318
    7. '  
' → logprob: -6.907800197601318
    8. '	dp' → logprob: -7.157800197601318
    9. '\n' → logprob: -7.157800197601318
    10. '    
' → logprob: -8.032800674438477

Token 129: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.004226085729897022
    2. ' dp' → logprob: -5.754226207733154
    3. '[' → logprob: -8.504225730895996
    4. ' 
' → logprob: -8.629225730895996
    5. '(dp' → logprob: -8.754225730895996
    6. '  
' → logprob: -9.004225730895996
    7. '    
' → logprob: -9.129225730895996
    8. '	dp' → logprob: -9.504225730895996
    9. '
' → logprob: -10.004225730895996
    10. '_dp' → logprob: -10.129225730895996

Token 130: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.392824874026701e-05
    2. '=' → logprob: -10.75003433227539
    3. ' =' → logprob: -11.50003433227539
    4. '0' → logprob: -14.25003433227539
    5. ' [' → logprob: -14.37503433227539
    6. '=[' → logprob: -14.87503433227539
    7. ' ' → logprob: -15.75003433227539
    8. '[
' → logprob: -15.87503433227539
    9. '```' → logprob: -16.25003433227539
    10. '
' → logprob: -16.87503433227539

Token 131: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.664371848164592e-05
    2. ' ' → logprob: -11.375016212463379
    3. '[' → logprob: -12.625016212463379
    4. '(' → logprob: -14.750016212463379
    5. '   ' → logprob: -15.000016212463379
    6. '```' → logprob: -15.437516212463379
    7. '1' → logprob: -15.562516212463379
    8. '=' → logprob: -15.687516212463379
    9. ')' → logprob: -15.937516212463379
    10. '000' → logprob: -16.375017166137695

Token 132: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07757817953824997
    2. ']' → logprob: -2.702578067779541
    3. ')=' → logprob: -5.702578067779541
    4. '=' → logprob: -5.952578067779541
    5. ']=' → logprob: -7.077578067779541
    6. ' =' → logprob: -7.202578067779541
    7. ']=(' → logprob: -10.0775785446167
    8. ' )' → logprob: -10.3275785446167
    9. '）' → logprob: -12.2025785446167
    10. '])' → logprob: -12.8275785446167

Token 133: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22545313835144043
    2. ' =' → logprob: -1.6004531383514404
    3. '=(' → logprob: -10.22545337677002
    4. ' =(' → logprob: -13.22545337677002
    5. '=
' → logprob: -14.22545337677002
    6. '=

' → logprob: -15.22545337677002
    7. ')' → logprob: -15.35045337677002
    8. '=('' → logprob: -15.72545337677002
    9. ')=' → logprob: -15.85045337677002
    10. ' ' → logprob: -15.85045337677002

Token 134: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0002614550176076591
    2. ' (' → logprob: -8.250261306762695
    3. '0' → logprob: -16.250261306762695
    4. ' ' → logprob: -18.875261306762695
    5. '((' → logprob: -19.500261306762695
    6. '   ' → logprob: -19.750261306762695
    7. '  ' → logprob: -21.750261306762695
    8. '(
' → logprob: -21.875261306762695
    9. '    
' → logprob: -21.875261306762695
    10. '  
' → logprob: -22.250261306762695

Token 135: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3306015716807451e-05
    2. ' ' → logprob: -11.62501335144043
    3. '(' → logprob: -12.37501335144043
    4. '   ' → logprob: -17.50001335144043
    5. ')' → logprob: -18.00001335144043
    6. '000' → logprob: -18.50001335144043
    7. '  
' → logprob: -18.62501335144043
    8. '۰' → logprob: -18.75001335144043
    9. '[' → logprob: -18.87501335144043
    10. '00' → logprob: -19.00001335144043

Token 136: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.29340603761375e-05
    2. ' ,' → logprob: -9.375092506408691
    3. '0' → logprob: -12.375092506408691
    4. ',
' → logprob: -12.875092506408691
    5. ')' → logprob: -14.375092506408691
    6. ',)' → logprob: -14.625092506408691
    7. ' ' → logprob: -16.000093460083008
    8. '  ' → logprob: -17.125093460083008
    9. '   ' → logprob: -17.625093460083008
    10. '‌,' → logprob: -18.125093460083008

Token 137: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00029637437546625733
    2. ' ' → logprob: -8.125296592712402
    3. '   ' → logprob: -15.750296592712402
    4. '  ' → logprob: -16.875295639038086
    5. ')' → logprob: -17.312795639038086
    6. '    ' → logprob: -17.375295639038086
    7. '<|end|>' → logprob: -17.875295639038086
    8. ',' → logprob: -18.312795639038086
    9. '۰' → logprob: -18.375295639038086
    10. '
' → logprob: -18.625295639038086

Token 138: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.2166411478538066e-05
    2. ' ' → logprob: -9.875052452087402
    3. ')' → logprob: -14.875052452087402
    4. ',' → logprob: -15.937552452087402
    5. '
' → logprob: -17.000051498413086
    6. '   ' → logprob: -17.187551498413086
    7. '  ' → logprob: -17.312551498413086
    8. '-' → logprob: -17.687551498413086
    9. '```' → logprob: -18.125051498413086
    10. '1' → logprob: -18.312551498413086

Token 139: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006317823426797986
    2. '0' → logprob: -7.875631809234619
    3. ' ,' → logprob: -8.375631332397461
    4. ')' → logprob: -11.000631332397461
    5. ',
' → logprob: -12.500631332397461
    6. ' ' → logprob: -14.625631332397461
    7. '   ' → logprob: -16.37563133239746
    8. ' )' → logprob: -16.62563133239746
    9. '),' → logprob: -16.87563133239746
    10. '
' → logprob: -17.12563133239746

Token 140: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008089098846539855
    2. ' ' → logprob: -7.1258087158203125
    3. ')' → logprob: -13.375808715820312
    4. '   ' → logprob: -13.688308715820312
    5. '  ' → logprob: -14.750808715820312
    6. '    ' → logprob: -15.063308715820312
    7. '
' → logprob: -16.188308715820312
    8. '     ' → logprob: -16.188308715820312
    9. ',' → logprob: -16.750808715820312
    10. ' ' → logprob: -16.938308715820312

Token 141: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00012749579036608338
    2. ' ' → logprob: -9.000127792358398
    3. ')' → logprob: -13.000127792358398
    4. '   ' → logprob: -14.250127792358398
    5. '  ' → logprob: -15.375127792358398
    6. '
' → logprob: -15.875127792358398
    7. ',' → logprob: -16.1876277923584
    8. '    ' → logprob: -16.5001277923584
    9. '-' → logprob: -16.9376277923584
    10. '```' → logprob: -17.0001277923584

Token 142: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.661626634420827e-05
    2. ')
' → logprob: -9.375086784362793
    3. ' )' → logprob: -14.125086784362793
    4. '   ' → logprob: -14.500086784362793
    5. ')

' → logprob: -15.125086784362793
    6. ')
' → logprob: -17.125085830688477
    7. '),' → logprob: -17.500085830688477
    8. ')#' → logprob: -17.500085830688477
    9. '))' → logprob: -17.750085830688477
    10. ')`' → logprob: -17.875085830688477

Token 143: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3974670171737671
    2. 'for' → logprob: -1.522467017173767
    3. '   ' → logprob: -2.7724671363830566
    4. ' 
' → logprob: -4.147467136383057
    5. '    
' → logprob: -4.397467136383057
    6. '<|end|>' → logprob: -4.897467136383057
    7. '
' → logprob: -5.647467136383057
    8. '  
' → logprob: -5.772467136383057
    9. '\n' → logprob: -6.272467136383057
    10. '	for' → logprob: -7.272467136383057

Token 144: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.07801888138055801
    2. ' for' → logprob: -2.7030189037323
    3. '   ' → logprob: -4.953018665313721
    4. ' 
' → logprob: -8.328019142150879
    5. '    
' → logprob: -8.578019142150879
    6. '
' → logprob: -8.953019142150879
    7. '<|end|>' → logprob: -9.078019142150879
    8. '	for' → logprob: -9.453019142150879
    9. ')' → logprob: -9.578019142150879
    10. ' ' → logprob: -9.828019142150879

Token 145: ' C' (ID: 363)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 146: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6700964570045471
    2. ' in' → logprob: -1.2950963973999023
    3. 'in' → logprob: -1.5450963973999023
    4. ')' → logprob: -7.420096397399902
    5. 'cost' → logprob: -9.670096397399902
    6. ' ,' → logprob: -9.795096397399902
    7. 'i' → logprob: -9.795096397399902
    8. 'idx' → logprob: -9.920096397399902
    9. '_idx' → logprob: -10.045096397399902
    10. '   ' → logprob: -10.420096397399902

Token 147: ' V' (ID: 631)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.03365365043282509
    2. ' V' → logprob: -3.408653736114502
    3. ' ' → logprob: -12.283653259277344
    4. '   ' → logprob: -13.158653259277344
    5. '	V' → logprob: -14.908653259277344
    6. ',' → logprob: -15.408653259277344
    7. '    ' → logprob: -15.783653259277344
    8. '  ' → logprob: -15.908653259277344
    9. 'v' → logprob: -16.033653259277344
    10. ' ' → logprob: -16.533653259277344

Token 148: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002915311371907592
    2. ' ,' → logprob: -5.877915382385254
    3. ' in' → logprob: -9.252915382385254
    4. ',v' → logprob: -12.752915382385254
    5. ',
' → logprob: -13.002915382385254
    6. ',V' → logprob: -13.627915382385254
    7. 'in' → logprob: -13.752915382385254
    8. '   ' → logprob: -14.002915382385254
    9. '```' → logprob: -14.127915382385254
    10. ',c' → logprob: -14.252915382385254

Token 149: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.003620981238782406
    2. ' D' → logprob: -5.6286211013793945
    3. '   ' → logprob: -11.128621101379395
    4. ' ' → logprob: -13.003621101379395
    5. ',' → logprob: -13.628621101379395
    6. '  ' → logprob: -14.378621101379395
    7. ',D' → logprob: -14.503621101379395
    8. '    ' → logprob: -14.878621101379395
    9. '       ' → logprob: -14.878621101379395
    10. '     ' → logprob: -15.878621101379395

Token 150: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000721487682312727
    2. ' ,' → logprob: -7.375721454620361
    3. '   ' → logprob: -9.87572193145752
    4. ' in' → logprob: -10.87572193145752
    5. ',L' → logprob: -11.62572193145752
    6. 'in' → logprob: -12.62572193145752
    7. ',l' → logprob: -13.00072193145752
    8. '```' → logprob: -13.50072193145752
    9. ',
' → logprob: -13.62572193145752
    10. '    ' → logprob: -13.62572193145752

Token 151: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.014204051345586777
    2. ' L' → logprob: -4.264204025268555
    3. '   ' → logprob: -10.389204025268555
    4. ' ' → logprob: -12.389204025268555
    5. '    ' → logprob: -13.389204025268555
    6. '	L' → logprob: -13.764204025268555
    7. '       ' → logprob: -14.139204025268555
    8. '  ' → logprob: -14.139204025268555
    9. ' ' → logprob: -15.139204025268555
    10. '
' → logprob: -15.701704025268555

Token 152: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006774930749088526
    2. 'in' → logprob: -5.00677490234375
    3. '   ' → logprob: -10.13177490234375
    4. '	in' → logprob: -12.13177490234375
    5. ' ' → logprob: -12.50677490234375
    6. '    ' → logprob: -12.63177490234375
    7. ',' → logprob: -12.75677490234375
    8. ':' → logprob: -13.63177490234375
    9. '  ' → logprob: -13.88177490234375
    10. ' ' → logprob: -14.75677490234375

Token 153: ' idols' (ID: 175139)
  Prédit: 'id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'id' → logprob: -0.20705950260162354
    2. ' idols' → logprob: -1.7070595026016235
    3. 'ids' → logprob: -6.332059383392334
    4. 'idol' → logprob: -6.707059383392334
    5. ' ' → logprob: -6.957059383392334
    6. '   ' → logprob: -7.082059383392334
    7. 'range' → logprob: -8.707059860229492
    8. '[id' → logprob: -9.082059860229492
    9. ' id' → logprob: -9.082059860229492
    10. '  ' → logprob: -9.582059860229492

Token 154: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0031917323358356953
    2. ':
' → logprob: -5.753191947937012
    3. '):' → logprob: -11.878191947937012
    4. '   ' → logprob: -12.753191947937012
    5. ':
' → logprob: -13.503191947937012
    6. ',' → logprob: -13.753191947937012
    7. '):
' → logprob: -14.378191947937012
    8. '       ' → logprob: -14.878191947937012
    9. ' :' → logprob: -15.128191947937012
    10. ':

' → logprob: -15.753191947937012

Token 155: '       ' (ID: 309)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.7902076244354248
    2. ' ' → logprob: -1.2902076244354248
    3. '    ' → logprob: -2.165207624435425
    4. '   ' → logprob: -3.540207624435425
    5. ' for' → logprob: -4.040207862854004
    6. ':' → logprob: -4.165207862854004
    7. ' :' → logprob: -4.415207862854004
    8. '<|end|>' → logprob: -4.415207862854004
    9. '  
' → logprob: -4.540207862854004
    10. ' :
' → logprob: -4.665207862854004

Token 156: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.004759053234010935
    2. 'for' (adapté à ' for') → logprob: -5.754758834838867
    3. '   ' → logprob: -6.754758834838867
    4. '    ' → logprob: -8.254758834838867
    5. ' 
' → logprob: -9.379758834838867
    6. ' new' → logprob: -10.754758834838867
    7. ' ' → logprob: -10.754758834838867
    8. '	for' → logprob: -11.754758834838867
    9. '
' → logprob: -12.504758834838867
    10. ' if' → logprob: -12.754758834838867

Token 157: ' cost' (ID: 3097)
  Prédit: ' cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.05551524832844734
    2. 'cost' → logprob: -3.5555152893066406
    3. ' c' → logprob: -3.8055152893066406
    4. ' M' → logprob: -6.180515289306641
    5. 'c' → logprob: -7.680515289306641
    6. ' m' → logprob: -8.80551528930664
    7. 'M' → logprob: -8.80551528930664
    8. ' i' → logprob: -9.18051528930664
    9. ' w' → logprob: -10.18051528930664
    10. ' j' → logprob: -10.18051528930664

Token 158: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003615039400756359
    2. 'in' → logprob: -5.628614902496338
    3. ' ' → logprob: -11.878615379333496
    4. '	in' → logprob: -12.878615379333496
    5. ')' → logprob: -13.503615379333496
    6. '   ' → logprob: -14.003615379333496
    7. '```' → logprob: -14.003615379333496
    8. '_in' → logprob: -14.378615379333496
    9. 'In' → logprob: -15.253615379333496
    10. ' ' → logprob: -15.253615379333496

Token 159: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16029490530490875
    2. ' range' → logprob: -1.9102948904037476
    3. 'M' → logprob: -9.910294532775879
    4. '   ' → logprob: -11.410294532775879
    5. ' reversed' → logprob: -12.285294532775879
    6. 're' → logprob: -13.160294532775879
    7. ' M' → logprob: -13.285294532775879
    8. 'reverse' → logprob: -14.660294532775879
    9. '	range' → logprob: -15.035294532775879
    10. '(range' → logprob: -15.035294532775879

Token 160: '(C' (ID: 5559)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0005182435852475464
    2. ' M' → logprob: -7.625518321990967
    3. '   ' → logprob: -10.875517845153809
    4. '(M' → logprob: -11.875517845153809
    5. '	M' → logprob: -12.875517845153809
    6. 'C' → logprob: -13.500517845153809
    7. '[M' → logprob: -15.125517845153809
    8. '    ' → logprob: -16.875518798828125
    9. ' ' → logprob: -17.125518798828125
    10. ',M' → logprob: -17.250518798828125

Token 161: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010462664067745209
    2. ',M' → logprob: -7.501046180725098
    3. ' ,' → logprob: -8.251046180725098
    4. 'M' → logprob: -8.501046180725098
    5. '   ' → logprob: -11.376046180725098
    6. ',
' → logprob: -11.876046180725098
    7. ' M' → logprob: -12.126046180725098
    8. '           ' → logprob: -13.376046180725098
    9. '       ' → logprob: -13.501046180725098
    10. '，' → logprob: -15.126046180725098

Token 162: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.00029720881138928235
    2. ' M' → logprob: -8.125297546386719
    3. '   ' → logprob: -13.750297546386719
    4. '(M' → logprob: -17.00029754638672
    5. '	M' → logprob: -17.62529754638672
    6. ' ' → logprob: -17.75029754638672
    7. '
' → logprob: -18.50029754638672
    8. '           ' → logprob: -18.62529754638672
    9. '    ' → logprob: -19.00029754638672
    10. '  ' → logprob: -19.12529754638672

Token 163: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.28711509704589844
    2. ' +' → logprob: -1.4121150970458984
    3. ',' → logprob: -5.162115097045898
    4. '-' → logprob: -9.537115097045898
    5. ' -' → logprob: -9.662115097045898
    6. '   ' → logprob: -10.537115097045898
    7. ' ,' → logprob: -11.162115097045898
    8. '
' → logprob: -11.537115097045898
    9. '+
' → logprob: -11.662115097045898
    10. ',
' → logprob: -11.912115097045898

Token 164: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.264322317088954e-05
    2. ' ' → logprob: -9.875052452087402
    3. '   ' → logprob: -14.125052452087402
    4. '
' → logprob: -15.625052452087402
    5. '```' → logprob: -16.81255340576172
    6. ')' → logprob: -17.62505340576172
    7. '  ' → logprob: -17.75005340576172
    8. '    ' → logprob: -18.06255340576172
    9. '     ' → logprob: -18.50005340576172
    10. '

' → logprob: -18.68755340576172

Token 165: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.153795766294934e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -15.000005722045898
    4. '
' → logprob: -16.1250057220459
    5. '```' → logprob: -17.0625057220459
    6. ')' → logprob: -17.5000057220459
    7. '       ' → logprob: -18.3750057220459
    8. '           ' → logprob: -18.6250057220459
    9. '  ' → logprob: -18.6250057220459
    10. '    ' → logprob: -18.8125057220459

Token 166: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.011415248736739159
    2. '):' → logprob: -4.511415481567383
    3. ')[' → logprob: -9.386415481567383
    4. '[::-' → logprob: -9.511415481567383
    5. '       ' → logprob: -9.761415481567383
    6. '):
' → logprob: -9.886415481567383
    7. ',' → logprob: -9.886415481567383
    8. '   ' → logprob: -10.636415481567383
    9. '           ' → logprob: -12.136415481567383
    10. '[' → logprob: -12.136415481567383

Token 167: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06945790350437164
    2. '       ' → logprob: -3.0694580078125
    3. ' if' → logprob: -4.3194580078125
    4. '	       ' → logprob: -6.0694580078125
    5. ',' → logprob: -6.3194580078125
    6. '   ' → logprob: -7.3194580078125
    7. '[' → logprob: -8.1944580078125
    8. '```' → logprob: -8.5694580078125
    9. 'if' → logprob: -8.6944580078125
    10. '	   ' → logprob: -8.6944580078125

Token 168: ' prev' (ID: 10258)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' (adapté à ' prev') → logprob: -1.292014718055725
    2. 'if' → logprob: -1.417014718055725
    3. 'voc' → logprob: -1.417014718055725
    4. '           ' → logprob: -1.917014718055725
    5. ' if' → logprob: -3.2920145988464355
    6. 'v' → logprob: -3.9170145988464355
    7. 'old' → logprob: -4.2920145988464355
    8. ' prev' → logprob: -5.2920145988464355
    9. ' voc' → logprob: -5.5420145988464355
    10. '               ' → logprob: -5.5420145988464355

Token 169: ' =' (ID: 314)
  Prédit: '_v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -0.21219144761562347
    2. ' =' → logprob: -1.8371914625167847
    3. '_val' → logprob: -4.837191581726074
    4. '_dp' → logprob: -4.837191581726074
    5. '=' → logprob: -5.087191581726074
    6. 'voc' → logprob: -5.587191581726074
    7. 'v' → logprob: -6.587191581726074
    8. '_value' → logprob: -7.087191581726074
    9. '_cost' → logprob: -7.337191581726074
    10. '_' → logprob: -7.587191581726074

Token 170: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0052398028783500195
    2. ' dp' → logprob: -5.255239963531494
    3. '           ' → logprob: -12.630239486694336
    4. '   ' → logprob: -13.880239486694336
    5. '	dp' → logprob: -14.005239486694336
    6. '(dp' → logprob: -14.755239486694336
    7. '       ' → logprob: -15.380239486694336
    8. '_dp' → logprob: -15.630239486694336
    9. '               ' → logprob: -17.005239486694336
    10. ' ' → logprob: -17.130239486694336

Token 171: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -6.134509021649137e-05
    2. 'cost' → logprob: -9.75006103515625
    3. '[' → logprob: -13.25006103515625
    4. '[
' → logprob: -14.87506103515625
    5. 'c' → logprob: -15.12506103515625
    6. '(cost' → logprob: -15.50006103515625
    7. ' cost' → logprob: -16.37506103515625
    8. '   ' → logprob: -16.62506103515625
    9. '```' → logprob: -16.75006103515625
    10. '
' → logprob: -17.12506103515625

Token 172: 'ost' (ID: 564)
  Prédit: 'ost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ost' → logprob: -0.0024934951215982437
    2. 'cost' → logprob: -6.002493381500244
    3. ' cost' → logprob: -12.127493858337402
    4. ' ost' → logprob: -12.752493858337402
    5. '   ' → logprob: -13.127493858337402
    6. 'st' → logprob: -13.127493858337402
    7. '_cost' → logprob: -13.127493858337402
    8. '(cost' → logprob: -14.002493858337402
    9. '-cost' → logprob: -14.877493858337402
    10. 'os' → logprob: -15.127493858337402

Token 173: ' -' (ID: 533)
  Prédit: '-C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-C' → logprob: -0.85653156042099
    2. ' -' → logprob: -0.98153156042099
    3. '-' → logprob: -1.6065316200256348
    4. '   ' → logprob: -11.231531143188477
    5. '-
' → logprob: -11.731531143188477
    6. ')' → logprob: -11.856531143188477
    7. ' ' → logprob: -12.106531143188477
    8. 'C' → logprob: -12.356531143188477
    9. ' C' → logprob: -13.606531143188477
    10. '-)' → logprob: -13.981531143188477

Token 174: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -7.941850526549388e-06
    2. ' C' → logprob: -11.750007629394531
    3. '   ' → logprob: -17.87500762939453
    4. '           ' → logprob: -18.62500762939453
    5. '	C' → logprob: -19.37500762939453
    6. ' ' → logprob: -19.87500762939453
    7. '>C' → logprob: -20.37500762939453
    8. ')' → logprob: -20.37500762939453
    9. '       ' → logprob: -20.37500762939453
    10. '*C' → logprob: -20.37500762939453

Token 175: ']
' (ID: 1592)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.053701240569353104
    2. ')' → logprob: -3.053701162338257
    3. '           ' → logprob: -5.553701400756836
    4. '       ' → logprob: -6.928701400756836
    5. ' )
' → logprob: -9.553701400756836
    6. ']
' → logprob: -9.553701400756836
    7. '   ' → logprob: -10.178701400756836
    8. ')
' → logprob: -10.928701400756836
    9. ']' → logprob: -11.303701400756836
    10. '
' → logprob: -12.178701400756836

Token 176: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21574455499649048
    2. ' if' → logprob: -2.3407444953918457
    3. ' =' → logprob: -3.0907444953918457
    4. '=' → logprob: -4.840744495391846
    5. '
' → logprob: -4.840744495391846
    6. 'if' → logprob: -4.965744495391846
    7. ')' → logprob: -4.965744495391846
    8. ',' → logprob: -5.090744495391846
    9. ':' → logprob: -5.965744495391846
    10. ' and' → logprob: -6.090744495391846

Token 177: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6981514096260071
    2. 'if' (adapté à ' if') → logprob: -1.3231513500213623
    3. ' if' → logprob: -1.4481513500213623
    4. '
' → logprob: -7.323151588439941
    5. 'prev' → logprob: -8.698151588439941
    6. ',' → logprob: -8.948151588439941
    7. '            
' → logprob: -9.823151588439941
    8. '(prev' → logprob: -10.448151588439941
    9. 'If' → logprob: -10.948151588439941
    10. '(' → logprob: -11.073151588439941

Token 178: ' prev' (ID: 10258)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.0067190444096922874
    2. ' prev' → logprob: -5.00671911239624
    3. '           ' → logprob: -13.881718635559082
    4. '(prev' → logprob: -13.881718635559082
    5. '	prev' → logprob: -14.006718635559082
    6. '   ' → logprob: -14.881718635559082
    7. '_prev' → logprob: -15.756718635559082
    8. '.prev' → logprob: -16.3817195892334
    9. 'pre' → logprob: -16.6317195892334
    10. ' ' → logprob: -16.8817195892334

Token 179: '[' (ID: 58)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.03585381805896759
    2. '[' → logprob: -3.535853862762451
    3. '!=(' → logprob: -5.285853862762451
    4. ' !=' → logprob: -6.910853862762451
    5. '==' → logprob: -11.535853385925293
    6. '!=-' → logprob: -11.910853385925293
    7. 'and' → logprob: -12.160853385925293
    8. ']!=' → logprob: -14.410853385925293
    9. '==(' → logprob: -14.660853385925293
    10. 'is' → logprob: -15.035853385925293

Token 180: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.4034345187828876e-05
    2. '-' → logprob: -11.12502384185791
    3. '1' → logprob: -12.25002384185791
    4. ' ' → logprob: -13.25002384185791
    5. '
' → logprob: -13.81252384185791
    6. '   ' → logprob: -14.62502384185791
    7. '2' → logprob: -15.43752384185791
    8. '```' → logprob: -15.68752384185791
    9. '

' → logprob: -16.312524795532227
    10. ':' → logprob: -16.875024795532227

Token 181: ']' (ID: 60)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.065461665391922
    2. ')' → logprob: -4.0654616355896
    3. ' !=' → logprob: -4.0654616355896
    4. '>=' → logprob: -4.9404616355896
    5. '!=-' → logprob: -4.9404616355896
    6. ']' → logprob: -5.0654616355896
    7. '==' → logprob: -5.9404616355896
    8. '+' → logprob: -6.4404616355896
    9. ']!=' → logprob: -6.4404616355896
    10. '=' → logprob: -7.1904616355896

Token 182: ' ==' (ID: 951)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.03938191011548042
    2. ' !=' → logprob: -3.914381980895996
    3. '>=' → logprob: -4.164381980895996
    4. '!=-' → logprob: -6.289381980895996
    5. '==' → logprob: -7.539381980895996
    6. '<' → logprob: -8.789381980895996
    7. '+' → logprob: -8.914381980895996
    8. '=' → logprob: -9.039381980895996
    9. ')' → logprob: -9.414381980895996
    10. ' ' → logprob: -9.789381980895996

Token 183: ' -' (ID: 533)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 184: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.375001907348633
    3. '```' → logprob: -16.250001907348633
    4. '

' → logprob: -17.312501907348633
    5. '
' → logprob: -17.750001907348633
    6. '   ' → logprob: -17.937501907348633
    7. ',' → logprob: -18.062501907348633
    8. '2' → logprob: -18.125001907348633
    9. '`' → logprob: -18.312501907348633
    10. ')' → logprob: -18.437501907348633

Token 185: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.8820469975471497
    2. ':' → logprob: -1.0070469379425049
    3. ' or' → logprob: -2.132046937942505
    4. ' and' → logprob: -2.382046937942505
    5. '           ' → logprob: -5.382047176361084
    6. '               ' → logprob: -5.507047176361084
    7. '):
' → logprob: -7.882047176361084
    8. 'and' → logprob: -8.757046699523926
    9. '       ' → logprob: -8.882046699523926
    10. ')' → logprob: -9.382046699523926

Token 186: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.25620904564857483
    2. ' and' → logprob: -1.8812090158462524
    3. ':' → logprob: -3.131209135055542
    4. ' or' → logprob: -4.006208896636963
    5. ':
' → logprob: -4.756208896636963
    6. '           ' → logprob: -6.131208896636963
    7. '<|end|>' → logprob: -8.256209373474121
    8. ',' → logprob: -8.881209373474121
    9. ')' → logprob: -9.256209373474121
    10. 'and' → logprob: -9.506209373474121

Token 187: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.4342300295829773
    2. 'continue' (adapté à ' continue') → logprob: -1.434230089187622
    3. '               ' → logprob: -2.184230089187622
    4. '                   ' → logprob: -6.684229850769043
    5. '           ' → logprob: -9.434229850769043
    6. '	continue' → logprob: -10.559229850769043
    7. '   ' → logprob: -11.934229850769043
    8. '_continue' → logprob: -12.559229850769043
    9. '                       ' → logprob: -13.434229850769043
    10. ' continues' → logprob: -13.934229850769043

Token 188: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.042443614453077316
    2. '            
' → logprob: -3.6674435138702393
    3. '
' → logprob: -6.042443752288818
    4. ' 
' → logprob: -6.292443752288818
    5. '<|end|>' → logprob: -6.292443752288818
    6. '            ' → logprob: -6.417443752288818
    7. '        
' → logprob: -6.667443752288818
    8. '  
' → logprob: -6.792443752288818
    9. '    
' → logprob: -6.792443752288818
    10. '       ' → logprob: -7.167443752288818

Token 189: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0038414057344198227
    2. '            
' → logprob: -6.003841400146484
    3. '       ' → logprob: -7.628841400146484
    4. '
' → logprob: -8.628841400146484
    5. '            ' → logprob: -9.253841400146484
    6. '               ' → logprob: -9.378841400146484
    7. ',' → logprob: -9.628841400146484
    8. '	       ' → logprob: -9.878841400146484
    9. '        
' → logprob: -10.128841400146484
    10. '   ' → logprob: -10.128841400146484

Token 190: ' cand' (ID: 31771)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5103691220283508
    2. 'new' → logprob: -1.885369062423706
    3. ' new' → logprob: -2.010369062423706
    4. 'curr' → logprob: -3.260369062423706
    5. ' curr' → logprob: -3.260369062423706
    6. 'cand' (adapté à ' cand') → logprob: -4.760369300842285
    7. ' cand' → logprob: -5.010369300842285
    8. 'voc' → logprob: -5.260369300842285
    9. 'next' → logprob: -5.885369300842285
    10. 'candidate' → logprob: -6.010369300842285

Token 191: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1603483110666275
    2. '=' → logprob: -1.9103482961654663
    3. '   ' → logprob: -9.535347938537598
    4. '    ' → logprob: -11.535347938537598
    5. 'voc' → logprob: -11.785347938537598
    6. ' =
' → logprob: -12.535347938537598
    7. ',' → logprob: -12.660347938537598
    8. '_v' → logprob: -12.910347938537598
    9. 'v' → logprob: -12.910347938537598
    10. '=v' → logprob: -13.160347938537598

Token 192: ' (' (ID: 350)
  Prédit: '(prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(prev' → logprob: -0.000570667558349669
    2. ' (' → logprob: -7.500570774078369
    3. '   ' → logprob: -12.000570297241211
    4. '(' → logprob: -13.000570297241211
    5. '(previous' → logprob: -13.000570297241211
    6. 'prev' → logprob: -13.375570297241211
    7. '           ' → logprob: -13.625570297241211
    8. '(curr' → logprob: -13.875570297241211
    9. '(
' → logprob: -14.250570297241211
    10. '(pre' → logprob: -14.625570297241211

Token 193: 'prev' (ID: 15969)
  Prédit: 'prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -5.097437315271236e-05
    2. ' prev' → logprob: -10.12505054473877
    3. 'min' → logprob: -12.37505054473877
    4. '(prev' → logprob: -13.12505054473877
    5. '   ' → logprob: -13.50005054473877
    6. '
' → logprob: -13.50005054473877
    7. '	prev' → logprob: -14.37505054473877
    8. '           ' → logprob: -14.50005054473877
    9. 'pre' → logprob: -15.87505054473877
    10. 'max' → logprob: -16.000051498413086

Token 194: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0007266097818501294
    2. '0' → logprob: -7.250726699829102
    3. '
' → logprob: -11.750726699829102
    4. '   ' → logprob: -12.625726699829102
    5. ' [' → logprob: -13.250726699829102
    6. ')' → logprob: -13.875726699829102
    7. '[
' → logprob: -13.875726699829102
    8. '][' → logprob: -14.500726699829102
    9. ' ' → logprob: -15.625726699829102
    10. ')[' → logprob: -16.1882266998291

Token 195: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.23917081207037e-05
    2. '[' → logprob: -10.125041961669922
    3. '
' → logprob: -13.250041961669922
    4. '1' → logprob: -15.625041961669922
    5. '   ' → logprob: -16.750041961669922
    6. '{' → logprob: -17.125041961669922
    7. '(' → logprob: -17.687541961669922
    8. '```' → logprob: -17.812541961669922
    9. '۰' → logprob: -17.937541961669922
    10. '+' → logprob: -18.125041961669922

Token 196: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.38688522577285767
    2. '+' → logprob: -1.136885166168213
    3. '+C' → logprob: -12.261885643005371
    4. ' ' → logprob: -13.011885643005371
    5. ')' → logprob: -14.011885643005371
    6. '[' → logprob: -14.011885643005371
    7. '+c' → logprob: -14.011885643005371
    8. '   ' → logprob: -14.136885643005371
    9. ' plus' → logprob: -14.636885643005371
    10. ' ' → logprob: -14.636885643005371

Token 197: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.632617712020874
    2. ' +' → logprob: -0.757617712020874
    3. '[' → logprob: -11.757617950439453
    4. '+C' → logprob: -13.007617950439453
    5. ' ' → logprob: -13.382617950439453
    6. '   ' → logprob: -13.632617950439453
    7. '+c' → logprob: -13.882617950439453
    8. ',' → logprob: -14.257617950439453
    9. '
' → logprob: -14.257617950439453
    10. '+
' → logprob: -14.382617950439453

Token 198: ' V' (ID: 631)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.00020926215802319348
    2. ' V' → logprob: -8.500208854675293
    3. '   ' → logprob: -13.000208854675293
    4. ' ' → logprob: -14.500208854675293
    5. '
' → logprob: -14.500208854675293
    6. 'v' → logprob: -14.875208854675293
    7. ',' → logprob: -15.125208854675293
    8. '	V' → logprob: -15.125208854675293
    9. ')' → logprob: -15.375208854675293
    10. ')V' → logprob: -15.625208854675293

Token 199: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002273774443892762
    2. ',
' → logprob: -8.500226974487305
    3. ' ,' → logprob: -10.875226974487305
    4. '           ' → logprob: -13.375226974487305
    5. ',

' → logprob: -13.500226974487305
    6. '),' → logprob: -15.125226974487305
    7. ',c' → logprob: -15.125226974487305
    8. '       ' → logprob: -15.250226974487305
    9. '   ' → logprob: -15.375226974487305
    10. 'prev' → logprob: -15.500226974487305

Token 200: ' prev' (ID: 10258)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.014176322147250175
    2. ' prev' → logprob: -4.264176368713379
    3. '(prev' → logprob: -12.514176368713379
    4. '           ' → logprob: -12.639176368713379
    5. '          ' → logprob: -14.014176368713379
    6. '
' → logprob: -14.014176368713379
    7. '	prev' → logprob: -14.139176368713379
    8. '              ' → logprob: -14.264176368713379
    9. '               ' → logprob: -14.764176368713379
    10. '   ' → logprob: -14.889176368713379

Token 201: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00023977462842594832
    2. '1' → logprob: -8.375239372253418
    3. ',' → logprob: -12.500239372253418
    4. '   ' → logprob: -13.375239372253418
    5. ' [' → logprob: -13.875239372253418
    6. '
' → logprob: -14.375239372253418
    7. '```' → logprob: -14.750239372253418
    8. ' ' → logprob: -14.937739372253418
    9. '2' → logprob: -15.125239372253418
    10. '(' → logprob: -15.687739372253418

Token 202: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.292907877039397e-06
    2. '[' → logprob: -13.12500286102295
    3. '
' → logprob: -14.12500286102295
    4. '0' → logprob: -15.00000286102295
    5. '   ' → logprob: -16.875003814697266
    6. '```' → logprob: -17.062503814697266
    7. '2' → logprob: -17.187503814697266
    8. '

' → logprob: -17.437503814697266
    9. '``' → logprob: -17.750003814697266
    10. ']' → logprob: -17.875003814697266

Token 203: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2014765739440918
    2. '+' → logprob: -1.7014765739440918
    3. ',' → logprob: -9.95147705078125
    4. ')' → logprob: -12.57647705078125
    5. ' ' → logprob: -12.70147705078125
    6. ' +
' → logprob: -13.45147705078125
    7. '[' → logprob: -13.57647705078125
    8. ' ,' → logprob: -13.57647705078125
    9. ' ' → logprob: -14.20147705078125
    10. '<|end|>' → logprob: -14.20147705078125

Token 204: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.632821798324585
    2. '+' → logprob: -0.757821798324585
    3. ',' → logprob: -8.632822036743164
    4. '+D' → logprob: -11.382822036743164
    5. '+,' → logprob: -11.632822036743164
    6. ' ' → logprob: -12.257822036743164
    7. '+
' → logprob: -12.382822036743164
    8. ' ,' → logprob: -12.757822036743164
    9. '[' → logprob: -12.882822036743164
    10. '+c' → logprob: -13.007822036743164

Token 205: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0028254427015781403
    2. ' D' → logprob: -5.8778252601623535
    3. 'prev' → logprob: -11.377825736999512
    4. '   ' → logprob: -12.377825736999512
    5. '           ' → logprob: -13.877825736999512
    6. ' ' → logprob: -14.002825736999512
    7. '
' → logprob: -14.627825736999512
    8. '       ' → logprob: -14.752825736999512
    9. 'd' → logprob: -14.752825736999512
    10. '    ' → logprob: -15.127825736999512

Token 206: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005196703714318573
    2. ' ,' → logprob: -8.375519752502441
    3. '           ' → logprob: -8.500519752502441
    4. ',
' → logprob: -10.625519752502441
    5. '          ' → logprob: -11.125519752502441
    6. '       ' → logprob: -11.250519752502441
    7. '   ' → logprob: -11.875519752502441
    8. '         ' → logprob: -12.500519752502441
    9. ',c' → logprob: -12.500519752502441
    10. '        ' → logprob: -12.750519752502441

Token 207: ' prev' (ID: 10258)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.029754776507616043
    2. ' prev' → logprob: -3.529754877090454
    3. '(prev' → logprob: -13.154754638671875
    4. '	prev' → logprob: -13.404754638671875
    5. '    ' → logprob: -15.404754638671875
    6. '           ' → logprob: -15.654754638671875
    7. ' ' → logprob: -16.029754638671875
    8. '   ' → logprob: -16.154754638671875
    9. '     ' → logprob: -16.654754638671875
    10. '.prev' → logprob: -16.904754638671875

Token 208: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00012570773833431304
    2. '1' → logprob: -9.875125885009766
    3. '2' → logprob: -10.000125885009766
    4. '0' → logprob: -10.625125885009766
    5. '
' → logprob: -13.375125885009766
    6. '   ' → logprob: -14.500125885009766
    7. '[
' → logprob: -14.500125885009766
    8. ' [' → logprob: -14.625125885009766
    9. '-' → logprob: -14.750125885009766
    10. ' ' → logprob: -15.125125885009766

Token 209: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.400689305039123e-05
    2. '1' → logprob: -9.375094413757324
    3. '
' → logprob: -13.000094413757324
    4. ' ' → logprob: -13.000094413757324
    5. '[' → logprob: -13.125094413757324
    6. '0' → logprob: -13.375094413757324
    7. '   ' → logprob: -14.750094413757324
    8. '```' → logprob: -15.500094413757324
    9. '-' → logprob: -16.125093460083008
    10. '

' → logprob: -16.875093460083008

Token 210: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.28122225403785706
    2. '+' → logprob: -1.4062222242355347
    3. ')' → logprob: -9.906222343444824
    4. ' ' → logprob: -11.531222343444824
    5. ')+' → logprob: -11.906222343444824
    6. '[' → logprob: -13.531222343444824
    7. ']+' → logprob: -14.281222343444824
    8. ' ' → logprob: -14.281222343444824
    9. ']' → logprob: -14.531222343444824
    10. ' plus' → logprob: -14.531222343444824

Token 211: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6931533813476562
    2. ' +' → logprob: -0.6931533813476562
    3. ')' → logprob: -12.568153381347656
    4. ' ' → logprob: -13.568153381347656
    5. ')+' → logprob: -14.943153381347656
    6. ' ' → logprob: -15.068153381347656
    7. '+
' → logprob: -15.443153381347656
    8. '[' → logprob: -15.693153381347656
    9. ' +
' → logprob: -15.693153381347656
    10. ' plus' → logprob: -15.943153381347656

Token 212: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.011048408225178719
    2. ' L' → logprob: -4.511048316955566
    3. ' ' → logprob: -15.386048316955566
    4. '   ' → logprob: -15.761048316955566
    5. '  ' → logprob: -16.511049270629883
    6. '	L' → logprob: -16.886049270629883
    7. '    ' → logprob: -17.261049270629883
    8. ')' → logprob: -17.386049270629883
    9. '```' → logprob: -17.386049270629883
    10. '
' → logprob: -17.636049270629883

Token 213: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5764675140380859
    2. ')' → logprob: -0.8264675140380859
    3. '           ' → logprob: -7.701467514038086
    4. '       ' → logprob: -9.951467514038086
    5. ')
' → logprob: -11.451467514038086
    6. '   ' → logprob: -12.326467514038086
    7. ' )
' → logprob: -12.451467514038086
    8. ')

' → logprob: -12.701467514038086
    9. ')`
' → logprob: -13.326467514038086
    10. ' )' → logprob: -13.451467514038086

Token 214: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01018607709556818
    2. '<|end|>' → logprob: -5.510186195373535
    3. ')' → logprob: -6.010186195373535
    4. '       ' → logprob: -6.385186195373535
    5. ' if' → logprob: -7.635186195373535
    6. '            
' → logprob: -7.885186195373535
    7. '<|end|>' → logprob: -8.760186195373535
    8. '   ' → logprob: -8.885186195373535
    9. '
' → logprob: -9.135186195373535
    10. '  
' → logprob: -9.385186195373535

Token 215: ' cur' (ID: 4396)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.48864424228668213
    2. '           ' → logprob: -1.1136442422866821
    3. 'if' → logprob: -2.8636441230773926
    4. ')' → logprob: -7.863644123077393
    5. '       ' → logprob: -8.11364459991455
    6. '
' → logprob: -9.11364459991455
    7. '            
' → logprob: -9.86364459991455
    8. '   ' → logprob: -9.98864459991455
    9. '	       ' → logprob: -10.36364459991455
    10. ' existing' → logprob: -10.61364459991455

Token 216: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5760334134101868
    2. ' =' → logprob: -0.8260334134101868
    3. 'if' → logprob: -9.576033592224121
    4. ' if' → logprob: -12.201033592224121
    5. '=
' → logprob: -12.576033592224121
    6. '   ' → logprob: -12.576033592224121
    7. ' ' → logprob: -12.826033592224121
    8. 'cost' → logprob: -12.951033592224121
    9. '  ' → logprob: -13.826033592224121
    10. ')' → logprob: -14.076033592224121

Token 217: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0380435548722744
    2. ' dp' → logprob: -3.28804349899292
    3. '(dp' → logprob: -13.788043975830078
    4. '	dp' → logprob: -14.413043975830078
    5. '   ' → logprob: -14.663043975830078
    6. '_dp' → logprob: -17.413043975830078
    7. '
' → logprob: -17.913043975830078
    8. ' ' → logprob: -18.038043975830078
    9. '.dp' → logprob: -18.163043975830078
    10. 'max' → logprob: -18.288043975830078

Token 218: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -7.684157026233152e-05
    2. 'cost' → logprob: -9.500077247619629
    3. 'c' → logprob: -14.250077247619629
    4. '[' → logprob: -14.625077247619629
    5. '[
' → logprob: -14.625077247619629
    6. '(cost' → logprob: -15.625077247619629
    7. ' cost' → logprob: -16.375076293945312
    8. '```' → logprob: -16.875076293945312
    9. '
' → logprob: -17.125076293945312
    10. '[counter' → logprob: -17.625076293945312

Token 219: 'ost' (ID: 564)
  Prédit: 'ost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ost' → logprob: -0.055035293102264404
    2. 'cost' → logprob: -2.930035352706909
    3. 'st' → logprob: -9.680035591125488
    4. ' cost' → logprob: -10.305035591125488
    5. '(cost' → logprob: -10.930035591125488
    6. '[' → logprob: -11.680035591125488
    7. '   ' → logprob: -12.305035591125488
    8. '_cost' → logprob: -12.430035591125488
    9. '-cost' → logprob: -12.430035591125488
    10. ' ost' → logprob: -12.805035591125488

Token 220: ']
' (ID: 1592)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.6367501020431519
    2. ')' → logprob: -1.5117501020431519
    3. ']' → logprob: -1.7617501020431519
    4. ']
' → logprob: -2.6367502212524414
    5. '])' → logprob: -5.761750221252441
    6. '])
' → logprob: -6.386750221252441
    7. 'if' → logprob: -7.636750221252441
    8. '）
' → logprob: -8.261750221252441
    9. '
' → logprob: -8.761750221252441
    10. '```' → logprob: -8.886750221252441

Token 221: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5928918123245239
    2. ' if' → logprob: -1.342891812324524
    3. ' =' → logprob: -2.8428916931152344
    4. '=' → logprob: -3.2178916931152344
    5. 'if' → logprob: -3.9678916931152344
    6. '<|end|>' → logprob: -3.9678916931152344
    7. '
' → logprob: -4.217891693115234
    8. ')' → logprob: -4.467891693115234
    9. '   ' → logprob: -5.217891693115234
    10. '            
' → logprob: -5.342891693115234

Token 222: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.719120979309082
    2. ' if' → logprob: -0.719120979309082
    3. '           ' → logprob: -3.719120979309082
    4. '=' → logprob: -7.094120979309082
    5. ' =' → logprob: -8.719120979309082
    6. '[' → logprob: -9.094120979309082
    7. '       ' → logprob: -9.094120979309082
    8. '   ' → logprob: -9.219120979309082
    9. ')' → logprob: -10.594120979309082
    10. '```' → logprob: -11.719120979309082

Token 223: ' cur' (ID: 4396)
  Prédit: 'cand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cand' → logprob: -0.2380039542913437
    2. ' cand' → logprob: -1.9880039691925049
    3. '(c' → logprob: -2.738003969192505
    4. ' (' → logprob: -5.238003730773926
    5. '(' → logprob: -5.738003730773926
    6. '(
' → logprob: -7.988003730773926
    7. 'cur' → logprob: -8.238003730773926
    8. '(cur' → logprob: -8.363003730773926
    9. '   ' → logprob: -8.863003730773926
    10. 'c' → logprob: -9.238003730773926

Token 224: '[' (ID: 58)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.3359415531158447
    2. '[' → logprob: -1.4609415531158447
    3. ' <' → logprob: -3.4609415531158447
    4. '==' → logprob: -4.085941314697266
    5. ' ==' → logprob: -5.335941314697266
    6. ' ' → logprob: -10.085941314697266
    7. '<int' → logprob: -10.210941314697266
    8. '```' → logprob: -10.585941314697266
    9. '<c' → logprob: -10.960941314697266
    10. ' is' → logprob: -11.335941314697266

Token 225: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007065945537760854
    2. '-' → logprob: -7.375706672668457
    3. '[' → logprob: -10.125706672668457
    4. '<' → logprob: -10.875706672668457
    5. '(' → logprob: -12.375706672668457
    6. '==' → logprob: -12.625706672668457
    7. ' ' → logprob: -12.750706672668457
    8. '1' → logprob: -12.750706672668457
    9. '
' → logprob: -13.500706672668457
    10. '   ' → logprob: -13.750706672668457

Token 226: ']' (ID: 60)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.026361729949712753
    2. ' <' → logprob: -3.6513617038726807
    3. ')' → logprob: -11.151361465454102
    4. '==-' → logprob: -11.276361465454102
    5. '==' → logprob: -11.401361465454102
    6. ' ==' → logprob: -11.776361465454102
    7. '[' → logprob: -12.276361465454102
    8. '<int' → logprob: -13.401361465454102
    9. ')<' → logprob: -13.651361465454102
    10. '<c' → logprob: -14.026361465454102

Token 227: ' ==' (ID: 951)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.0017033906187862158
    2. ' <' → logprob: -6.376703262329102
    3. '==' → logprob: -14.751703262329102
    4. '<
' → logprob: -15.126703262329102
    5. '[' → logprob: -16.6267032623291
    6. '!=' → logprob: -16.8767032623291
    7. '==-' → logprob: -16.8767032623291
    8. '>=' → logprob: -17.2517032623291
    9. '<class' → logprob: -17.6267032623291
    10. '>' → logprob: -18.0017032623291

Token 228: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0015051016816869378
    2. ' -' → logprob: -6.501504898071289
    3. '   ' → logprob: -13.376504898071289
    4. ' ' → logprob: -14.251504898071289
    5. '  ' → logprob: -15.001504898071289
    6. '0' → logprob: -15.751504898071289
    7. '    ' → logprob: -17.37650489807129
    8. '-c' → logprob: -17.50150489807129
    9. '-cur' → logprob: -17.62650489807129
    10. '```' → logprob: -18.00150489807129

Token 229: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -14.625001907348633
    3. '2' → logprob: -14.937501907348633
    4. '-' → logprob: -15.750001907348633
    5. '11' → logprob: -16.187501907348633
    6. '   ' → logprob: -16.500001907348633
    7. ' -' → logprob: -16.687501907348633
    8. '```' → logprob: -16.750001907348633
    9. '

' → logprob: -17.187501907348633
    10. '  ' → logprob: -17.812501907348633

Token 230: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.012532375752925873
    2. 'or' → logprob: -4.3875322341918945
    3. '           ' → logprob: -11.762532234191895
    4. '               ' → logprob: -12.887532234191895
    5. '	or' → logprob: -13.137532234191895
    6. ')' → logprob: -13.262532234191895
    7. '<|end|>' → logprob: -13.387532234191895
    8. ',' → logprob: -13.387532234191895
    9. ' ' → logprob: -13.637532234191895
    10. '            ' → logprob: -14.012532234191895

Token 231: ' max' (ID: 2999)
  Prédit: 'cand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cand' → logprob: -0.02985265664756298
    2. '(c' → logprob: -4.154852867126465
    3. ' cand' → logprob: -4.404852867126465
    4. '   ' → logprob: -7.904852867126465
    5. '(' → logprob: -8.029852867126465
    6. ' (' → logprob: -8.154852867126465
    7. '(
' → logprob: -9.029852867126465
    8. '(v' → logprob: -9.654852867126465
    9. '           ' → logprob: -9.779852867126465
    10. '    ' → logprob: -10.404852867126465

Token 232: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.12379136681556702
    2. 'cand' → logprob: -2.373791456222534
    3. 'c' → logprob: -4.623791217803955
    4. '(' → logprob: -4.873791217803955
    5. ' cand' → logprob: -5.873791217803955
    6. '(
' → logprob: -6.873791217803955
    7. ' (' → logprob: -7.748791217803955
    8. '(cur' → logprob: -7.998791217803955
    9. '   ' → logprob: -8.248791694641113
    10. 'cur' → logprob: -8.623791694641113

Token 233: 'and' (ID: 427)
  Prédit: 'and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.022773073986172676
    2. '(c' → logprob: -4.772773265838623
    3. 'cand' → logprob: -5.147773265838623
    4. 'ur' → logprob: -6.147773265838623
    5. '[c' → logprob: -6.397773265838623
    6. '(cur' → logprob: -6.897773265838623
    7. '(' → logprob: -7.022773265838623
    8. 'cur' → logprob: -7.272773265838623
    9. ' cand' → logprob: -7.897773265838623
    10. '[cur' → logprob: -8.522772789001465

Token 234: ')' (ID: 8)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.17620812356472015
    2. ')' → logprob: -2.176208019256592
    3. '(c' → logprob: -4.301208019256592
    4. '>' → logprob: -5.051208019256592
    5. ')>' → logprob: -5.176208019256592
    6. ' >' → logprob: -5.426208019256592
    7. '(' → logprob: -5.676208019256592
    8. '(
' → logprob: -5.801208019256592
    9. '[
' → logprob: -5.926208019256592
    10. ',' → logprob: -6.176208019256592

Token 235: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.062191978096961975
    2. '>' → logprob: -2.812191963195801
    3. ',' → logprob: -9.5621919631958
    4. '[' → logprob: -9.8121919631958
    5. ' >
' → logprob: -10.8121919631958
    6. ' ' → logprob: -10.9371919631958
    7. ')>' → logprob: -11.6871919631958
    8. ')' → logprob: -11.8121919631958
    9. '  ' → logprob: -11.9371919631958
    10. '<|end|>' → logprob: -12.0621919631958

Token 236: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.0206720617134124e-05
    2. ' max' → logprob: -11.50001049041748
    3. 'cur' → logprob: -17.125009536743164
    4. 'min' → logprob: -18.375009536743164
    5. '(max' → logprob: -20.000009536743164
    6. '	max' → logprob: -20.000009536743164
    7. '
' → logprob: -21.250009536743164
    8. '   ' → logprob: -21.250009536743164
    9. '0' → logprob: -21.875009536743164
    10. ' ' → logprob: -22.500009536743164

Token 237: '(cur' (ID: 34723)
  Prédit: '(cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cur' → logprob: -0.06535615026950836
    2. '(c' → logprob: -3.1903562545776367
    3. 'cur' → logprob: -3.8153562545776367
    4. 'cand' → logprob: -10.440356254577637
    5. 'c' → logprob: -10.940356254577637
    6. ' cur' → logprob: -11.565356254577637
    7. '(' → logprob: -12.065356254577637
    8. '(curr' → logprob: -12.440356254577637
    9. '	cur' → logprob: -12.690356254577637
    10. '[cur' → logprob: -13.065356254577637

Token 238: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.30776703357696533
    2. ')' → logprob: -1.5577670335769653
    3. '):
' → logprob: -3.057766914367676
    4. 'cand' → logprob: -5.807766914367676
    5. '):

' → logprob: -6.807766914367676
    6. '(c' → logprob: -7.182766914367676
    7. ')c' → logprob: -7.557766914367676
    8. '   ' → logprob: -8.057766914367676
    9. ':' → logprob: -8.182766914367676
    10. ')):' → logprob: -8.557766914367676

Token 239: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.013505710288882256
    2. ':' → logprob: -5.138505935668945
    3. '           ' → logprob: -6.138505935668945
    4. ' :' → logprob: -7.263505935668945
    5. ':
' → logprob: -7.388505935668945
    6. '):' → logprob: -7.513505935668945
    7. ' or' → logprob: -7.513505935668945
    8. '):
' → logprob: -7.513505935668945
    9. '                
' → logprob: -8.013505935668945
    10. ')' → logprob: -8.138505935668945

Token 240: ' dp' (ID: 21546)
  Prédit: ' dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.39001744985580444
    2. 'dp' (adapté à ' dp') → logprob: -1.1400175094604492
    3. '               ' → logprob: -6.015017509460449
    4. '                   ' → logprob: -8.01501750946045
    5. '	dp' → logprob: -8.64001750946045
    6. '                       ' → logprob: -9.26501750946045
    7. '           ' → logprob: -10.14001750946045
    8. '(dp' → logprob: -11.01501750946045
    9. '_dp' → logprob: -11.51501750946045
    10. '   ' → logprob: -11.76501750946045

Token 241: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -1.9361264946837764e-07
    2. 'cost' → logprob: -16.375
    3. '[' → logprob: -17.625
    4. '[
' → logprob: -19.125
    5. '```' → logprob: -19.25
    6. '\[' → logprob: -19.625
    7. '[cur' → logprob: -20.25
    8. '=' → logprob: -20.375
    9. '(cost' → logprob: -20.625
    10. 'c' → logprob: -20.875

Token 242: 'ost' (ID: 564)
  Prédit: 'ost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ost' → logprob: -0.07049006223678589
    2. 'cost' → logprob: -2.6954901218414307
    3. 'st' → logprob: -8.820489883422852
    4. ' cost' → logprob: -8.945489883422852
    5. '[c' → logprob: -9.195489883422852
    6. '[' → logprob: -9.445489883422852
    7. '(cost' → logprob: -10.070489883422852
    8. '   ' → logprob: -11.570489883422852
    9. '.cost' → logprob: -11.695489883422852
    10. '_cost' → logprob: -11.945489883422852

Token 243: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2043127566576004
    2. ' =' → logprob: -1.704312801361084
    3. ']' → logprob: -6.204312801361084
    4. ')' → logprob: -7.079312801361084
    5. ']=' → logprob: -10.829312324523926
    6. ')=' → logprob: -11.579312324523926
    7. '>' → logprob: -13.204312324523926
    8. '=c' → logprob: -14.954312324523926
    9. '=cut' → logprob: -15.454312324523926
    10. '=
' → logprob: -15.954312324523926

Token 244: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.048587486147880554
    2. ' =' → logprob: -3.0485875606536865
    3. ')' → logprob: -17.423587799072266
    4. '＝' → logprob: -17.423587799072266
    5. '=
' → logprob: -17.423587799072266
    6. '=c' → logprob: -18.173587799072266
    7. '=

' → logprob: -18.673587799072266
    8. ')=' → logprob: -18.923587799072266
    9. '=cut' → logprob: -19.048587799072266
    10. ',' → logprob: -19.923587799072266

Token 245: ' cand' (ID: 31771)
  Prédit: 'cand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cand' → logprob: -0.002815455198287964
    2. ' cand' → logprob: -5.877815246582031
    3. 'c' → logprob: -12.377815246582031
    4. '(c' → logprob: -12.627815246582031
    5. 'cant' → logprob: -12.877815246582031
    6. '   ' → logprob: -15.627815246582031
    7. '(' → logprob: -15.877815246582031
    8. 'cad' → logprob: -16.62781524658203
    9. ' (' → logprob: -17.37781524658203
    10. ' ' → logprob: -17.50281524658203

Token 246: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 247: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 248: ' ans' (ID: 3345)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.8994324207305908
    2. 'best' → logprob: -1.2744324207305908
    3. 'result' → logprob: -1.3994324207305908
    4. 'print' → logprob: -4.149432182312012
    5. 'answer' → logprob: -4.274432182312012
    6. 'res' → logprob: -4.899432182312012
    7. 'selected' → logprob: -5.149432182312012
    8. '#' → logprob: -5.274432182312012
    9. 'voc' → logprob: -5.649432182312012
    10. ' max' → logprob: -6.024432182312012

Token 249: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4298376142978668
    2. ' =' → logprob: -1.0548375844955444
    3. ',' → logprob: -7.304837703704834
    4. '[' → logprob: -8.679837226867676
    5. '_' → logprob: -9.054837226867676
    6. ')' → logprob: -10.679837226867676
    7. 's' → logprob: -10.804837226867676
    8. '=[]' → logprob: -10.804837226867676
    9. '```' → logprob: -11.054837226867676
    10. '_cost' → logprob: -11.554837226867676

Token 250: ' ' (ID: 220)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.026414666324853897
    2. ' max' → logprob: -4.15141487121582
    3. '(' → logprob: -4.77641487121582
    4. '(max' → logprob: -6.90141487121582
    5. '0' → logprob: -7.27641487121582
    6. '(-' → logprob: -9.65141487121582
    7. ' (' → logprob: -10.15141487121582
    8. '[' → logprob: -10.65141487121582
    9. '[max' → logprob: -10.77641487121582
    10. 'min' → logprob: -10.90141487121582

Token 251: '0' (ID: 15)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0046382686123251915
    2. '(' → logprob: -5.629638195037842
    3. '(max' → logprob: -7.629638195037842
    4. '0' → logprob: -8.254638671875
    5. ' max' → logprob: -9.129638671875
    6. '(-' → logprob: -9.379638671875
    7. 'dp' → logprob: -9.879638671875
    8. 'min' → logprob: -10.379638671875
    9. '[max' → logprob: -12.379638671875
    10. '[' → logprob: -13.254638671875

Token 252: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.013918546959757805
    2. '   ' → logprob: -5.013918399810791
    3. ' for' → logprob: -5.888918399810791
    4. '<|end|>' → logprob: -7.013918399810791
    5. ' 
' → logprob: -7.138918399810791
    6. '    
' → logprob: -7.138918399810791
    7. 'for' → logprob: -7.263918399810791
    8. '  
' → logprob: -7.263918399810791
    9. '   
' → logprob: -8.88891887664795
    10. '
' → logprob: -9.13891887664795

Token 253: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 254: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.16703037917613983
    2. ' for' → logprob: -1.9170303344726562
    3. '   ' → logprob: -5.042030334472656
    4. 'max' → logprob: -8.417030334472656
    5. ' max' → logprob: -10.292030334472656
    6. '
' → logprob: -11.167030334472656
    7. '```' → logprob: -11.292030334472656
    8. 'range' → logprob: -11.917030334472656
    9. 'min' → logprob: -12.542030334472656
    10. 'dp' → logprob: -12.542030334472656

Token 255: ' voc' (ID: 6353)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.1146950051188469
    2. ' cost' → logprob: -2.2396950721740723
    3. 'i' → logprob: -6.989695072174072
    4. 'c' → logprob: -7.614695072174072
    5. ' i' → logprob: -8.114694595336914
    6. ' c' → logprob: -9.489694595336914
    7. 'v' → logprob: -11.364694595336914
    8. 'dp' → logprob: -11.739694595336914
    9. 'score' → logprob: -11.739694595336914
    10. ' ' → logprob: -11.864694595336914

Token 256: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10999445617198944
    2. 'cost' → logprob: -3.234994411468506
    3. 'in' → logprob: -3.609994411468506
    4. ',' → logprob: -3.859994411468506
    5. '_cost' → logprob: -4.109994411468506
    6. ' cost' → logprob: -9.984994888305664
    7. 'c' → logprob: -10.859994888305664
    8. ',c' → logprob: -10.984994888305664
    9. 'v' → logprob: -11.109994888305664
    10. '   ' → logprob: -11.109994888305664

Token 257: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.31340837478637695
    2. ' d' → logprob: -1.313408374786377
    3. ',' → logprob: -9.938407897949219
    4. '_,' → logprob: -10.438407897949219
    5. ',d' → logprob: -10.688407897949219
    6. '   ' → logprob: -11.438407897949219
    7. ' ' → logprob: -11.563407897949219
    8. 'dn' → logprob: -12.063407897949219
    9. '  ' → logprob: -12.313407897949219
    10. '    ' → logprob: -12.688407897949219

Token 258: 'nc' (ID: 24825)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017006490379571915
    2. 'c' → logprob: -6.5017008781433105
    3. ' ,' → logprob: -10.251700401306152
    4. 'nc' → logprob: -10.501700401306152
    5. 'x' → logprob: -10.876700401306152
    6. ',c' → logprob: -11.001700401306152
    7. 'n' → logprob: -11.001700401306152
    8. ',n' → logprob: -11.251700401306152
    9. 'cs' → logprob: -11.751700401306152
    10. 'p' → logprob: -11.876700401306152

Token 259: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018613664724398404
    2. ' ,' → logprob: -9.2501859664917
    3. ' in' → logprob: -9.7501859664917
    4. 'in' → logprob: -10.5001859664917
    5. ',d' → logprob: -13.7501859664917
    6. '```' → logprob: -14.5001859664917
    7. ',v' → logprob: -14.7501859664917
    8. '   ' → logprob: -15.3751859664917
    9. '_,' → logprob: -15.5001859664917
    10. ',
' → logprob: -15.5001859664917

Token 260: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.00034380643046461046
    2. ' l' → logprob: -8.000344276428223
    3. 'lk' → logprob: -12.625344276428223
    4. 'likes' → logprob: -13.625344276428223
    5. '	l' → logprob: -13.875344276428223
    6. 'L' → logprob: -14.125344276428223
    7. '   ' → logprob: -14.375344276428223
    8. '```' → logprob: -15.375344276428223
    9. 'lts' → logprob: -15.375344276428223
    10. 'lik' → logprob: -15.625344276428223

Token 261: 'ks' (ID: 2484)
  Prédit: 'ks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ks' → logprob: -0.0040204571560025215
    2. ',' → logprob: -6.004020690917969
    3. 'k' → logprob: -7.129020690917969
    4. 's' → logprob: -8.254020690917969
    5. 'ikes' → logprob: -8.379020690917969
    6. ' in' → logprob: -9.629020690917969
    7. 'in' → logprob: -9.754020690917969
    8. 'kes' → logprob: -9.879020690917969
    9. 'iks' → logprob: -10.879020690917969
    10. '```' → logprob: -11.504020690917969

Token 262: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5759978294372559
    2. ' in' → logprob: -0.8259978294372559
    3. ',' → logprob: -10.450998306274414
    4. '   ' → logprob: -10.950998306274414
    5. '
' → logprob: -12.575998306274414
    6. ' ' → logprob: -13.575998306274414
    7. '	in' → logprob: -13.575998306274414
    8. ')' → logprob: -13.700998306274414
    9. '```' → logprob: -13.700998306274414
    10. ':
' → logprob: -14.575998306274414

Token 263: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.005956410430371761
    2. ' dp' → logprob: -5.130956172943115
    3. 'range' → logprob: -11.505956649780273
    4. '(dp' → logprob: -11.755956649780273
    5. '   ' → logprob: -12.755956649780273
    6. ' ' → logprob: -12.880956649780273
    7. ' range' → logprob: -13.630956649780273
    8. '[' → logprob: -14.130956649780273
    9. '
' → logprob: -14.130956649780273
    10. '  ' → logprob: -14.505956649780273

Token 264: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03828222677111626
    2. ':
' → logprob: -3.2882821559906006
    3. '   ' → logprob: -8.66328239440918
    4. ',' → logprob: -10.16328239440918
    5. '=' → logprob: -11.78828239440918
    6. '):' → logprob: -12.16328239440918
    7. '[' → logprob: -12.53828239440918
    8. '):
' → logprob: -12.66328239440918
    9. ':

' → logprob: -13.53828239440918
    10. '       ' → logprob: -13.66328239440918

Token 265: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004389409441500902
    2. '   ' → logprob: -6.12938928604126
    3. ' if' → logprob: -6.50438928604126
    4. '
' → logprob: -8.004389762878418
    5. '```' → logprob: -9.004389762878418
    6. ',' → logprob: -9.379389762878418
    7. '        
' → logprob: -10.254389762878418
    8. '<|end|>' → logprob: -10.629389762878418
    9. 'if' → logprob: -10.754389762878418
    10. '    
' → logprob: -10.879389762878418

Token 266: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3069628179073334
    2. 'if' (adapté à ' if') → logprob: -1.6819628477096558
    3. '   ' → logprob: -2.931962728500366
    4. ' ans' → logprob: -4.556962966918945
    5. 'ans' → logprob: -4.931962966918945
    6. '       ' → logprob: -5.056962966918945
    7. '+' → logprob: -7.806962966918945
    8. '    ' → logprob: -8.806962966918945
    9. '           ' → logprob: -9.181962966918945
    10. ' total' → logprob: -9.431962966918945

Token 267: ' voc' (ID: 6353)
  Prédit: ' voc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' voc' → logprob: -0.5788432955741882
    2. 'voc' → logprob: -0.8288432955741882
    3. '(v' → logprob: -6.828843116760254
    4. ' max' → logprob: -7.828843116760254
    5. '(' → logprob: -7.953843116760254
    6. 'max' → logprob: -8.203843116760254
    7. ' (' → logprob: -8.203843116760254
    8. '   ' → logprob: -8.828843116760254
    9. 'v' → logprob: -9.078843116760254
    10. ' ' → logprob: -9.703843116760254

Token 268: ' ==' (ID: 951)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.8235090374946594
    2. '>=' → logprob: -1.6985089778900146
    3. '>' → logprob: -1.8235089778900146
    4. ' >' → logprob: -1.9485089778900146
    5. '==' → logprob: -3.0735089778900146
    6. ' ==' → logprob: -3.6985089778900146
    7. '   ' → logprob: -6.573509216308594
    8. ' and' → logprob: -7.948509216308594
    9. ',' → logprob: -8.073509216308594
    10. ' !=' → logprob: -8.448509216308594

Token 269: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.05566466227173805
    2. 'M' → logprob: -3.1806647777557373
    3. '0' → logprob: -5.305664539337158
    4. ' -' → logprob: -5.305664539337158
    5. 'max' → logprob: -6.555664539337158
    6. ' M' → logprob: -7.055664539337158
    7. '   ' → logprob: -9.055665016174316
    8. ' ' → logprob: -9.180665016174316
    9. '-M' → logprob: -9.430665016174316
    10. 'V' → logprob: -11.305665016174316

Token 270: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -14.250000953674316
    3. '-' → logprob: -15.125000953674316
    4. '```' → logprob: -15.250000953674316
    5. ' -' → logprob: -17.500001907348633
    6. '   ' → logprob: -17.625001907348633
    7. '
' → logprob: -18.437501907348633
    8. '

' → logprob: -18.437501907348633
    9. '           ' → logprob: -18.687501907348633
    10. '2' → logprob: -18.812501907348633

Token 271: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.2695920765399933
    2. ':
' → logprob: -2.144592046737671
    3. ':' → logprob: -2.394592046737671
    4. '           ' → logprob: -4.14459228515625
    5. 'or' → logprob: -4.89459228515625
    6. '       ' → logprob: -5.64459228515625
    7. ' and' → logprob: -7.51959228515625
    8. ':return' → logprob: -8.14459228515625
    9. 'and' → logprob: -9.26959228515625
    10. '   ' → logprob: -10.14459228515625

Token 272: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.686279296875
    2. '       ' → logprob: -0.936279296875
    3. ' continue' → logprob: -2.561279296875
    4. 'continue' → logprob: -3.811279296875
    5. ' and' → logprob: -5.936279296875
    6. ' or' → logprob: -6.436279296875
    7. ',' → logprob: -7.811279296875
    8. '   ' → logprob: -9.186279296875
    9. '```' → logprob: -9.436279296875
    10. ' continues' → logprob: -10.186279296875

Token 273: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.8490385413169861
    2. 'continue' (adapté à ' continue') → logprob: -1.0990386009216309
    3. '       ' → logprob: -1.4740386009216309
    4. '   ' → logprob: -4.724038600921631
    5. '           ' → logprob: -7.224038600921631
    6. '	continue' → logprob: -8.099038124084473
    7. ' ' → logprob: -10.599038124084473
    8. '               ' → logprob: -11.724038124084473
    9. '```' → logprob: -11.974038124084473
    10. 'contin' → logprob: -12.099038124084473

Token 274: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21136626601219177
    2. ' if' → logprob: -1.8363662958145142
    3. ' and' → logprob: -3.8363661766052246
    4. '   ' → logprob: -5.711366176605225
    5. 'if' → logprob: -5.836366176605225
    6. 'and' → logprob: -6.336366176605225
    7. ',' → logprob: -7.836366176605225
    8. '```' → logprob: -7.836366176605225
    9. '           ' → logprob: -8.461366653442383
    10. ' or' → logprob: -8.586366653442383

Token 275: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3205835223197937
    2. ' if' → logprob: -1.3205835819244385
    3. '   ' → logprob: -5.820583343505859
    4. 'if' → logprob: -5.945583343505859
    5. '```' → logprob: -7.445583343505859
    6. '           ' → logprob: -7.820583343505859
    7. '+' → logprob: -8.57058334350586
    8. ' ans' → logprob: -8.69558334350586
    9. ' and' → logprob: -8.82058334350586
    10. ' total' → logprob: -9.82058334350586

Token 276: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.761821448802948
    2. 'if' → logprob: -1.1368215084075928
    3. '   ' → logprob: -2.5118215084075928
    4. ' if' → logprob: -3.0118215084075928
    5. 'total' → logprob: -3.1368215084075928
    6. ' ans' → logprob: -4.136821269989014
    7. 'sum' → logprob: -4.761821269989014
    8. ' total' → logprob: -5.136821269989014
    9. 'score' → logprob: -5.886821269989014
    10. '       ' → logprob: -6.011821269989014

Token 277: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.742775022983551
    2. ' =' → logprob: -0.867775022983551
    3. '+=' → logprob: -2.6177749633789062
    4. ' +=' → logprob: -3.4927749633789062
    5. '=max' → logprob: -7.242774963378906
    6. '   ' → logprob: -9.117774963378906
    7. 'max' → logprob: -9.617774963378906
    8. '+' → logprob: -10.867774963378906
    9. ' max' → logprob: -11.617774963378906
    10. '<' → logprob: -12.867774963378906

Token 278: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.16022524237632751
    2. 'max' → logprob: -1.91022527217865
    3. '(max' → logprob: -14.535224914550781
    4. '	max' → logprob: -15.910224914550781
    5. 'voc' → logprob: -15.910224914550781
    6. ' voc' → logprob: -16.16022491455078
    7. ' ' → logprob: -17.16022491455078
    8. '   ' → logprob: -17.28522491455078
    9. ' maximum' → logprob: -17.66022491455078
    10. '_max' → logprob: -18.03522491455078

Token 279: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.00019936825265176594
    2. 'ans' → logprob: -9.375199317932129
    3. '(' → logprob: -9.500199317932129
    4. '(max' → logprob: -10.375199317932129
    5. '(v' → logprob: -12.125199317932129
    6. '(
' → logprob: -14.125199317932129
    7. '((' → logprob: -14.375199317932129
    8. ' ans' → logprob: -14.500199317932129
    9. '	ans' → logprob: -14.750199317932129
    10. 'max' → logprob: -14.875199317932129

Token 280: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014370749704539776
    2. ',v' → logprob: -9.250144004821777
    3. ' ,' → logprob: -11.250144004821777
    4. '(ans' → logprob: -11.375144004821777
    5. ',
' → logprob: -11.625144004821777
    6. ',max' → logprob: -11.625144004821777
    7. 'ans' → logprob: -12.750144004821777
    8. '   ' → logprob: -14.625144004821777
    9. 'v' → logprob: -14.750144004821777
    10. 'max' → logprob: -14.875144004821777

Token 281: ' max' (ID: 2999)
  Prédit: ' voc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' voc' → logprob: -0.2227611541748047
    2. 'voc' → logprob: -1.7227611541748047
    3. ' min' → logprob: -4.222761154174805
    4. ' max' → logprob: -5.722761154174805
    5. 'min' → logprob: -6.472761154174805
    6. 'max' → logprob: -7.597761154174805
    7. ' vocab' → logprob: -8.597761154174805
    8. ' ' → logprob: -8.972761154174805
    9. ' vok' → logprob: -9.097761154174805
    10. '   ' → logprob: -9.160261154174805

Token 282: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.00046260483213700354
    2. '(' → logprob: -8.500462532043457
    3. '((' → logprob: -8.500462532043457
    4. '([' → logprob: -9.875462532043457
    5. '(
' → logprob: -13.000462532043457
    6. 'v' → logprob: -14.250462532043457
    7. '(d' → logprob: -14.750462532043457
    8. '(vo' → logprob: -15.250462532043457
    9. '[v' → logprob: -15.500462532043457
    10. ' (' → logprob: -15.750462532043457

Token 283: 'oc' (ID: 432)
  Prédit: 'oc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oc' → logprob: -0.018231302499771118
    2. '(v' → logprob: -4.393231391906738
    3. '(c' → logprob: -6.143231391906738
    4. '(' → logprob: -7.393231391906738
    5. 'voc' → logprob: -7.393231391906738
    6. '[' → logprob: -7.518231391906738
    7. 'ocab' → logprob: -7.768231391906738
    8. '[v' → logprob: -7.893231391906738
    9. '(o' → logprob: -8.768231391906738
    10. '[c' → logprob: -8.768231391906738

Token 284: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005404507741332054
    2. ',d' → logprob: -5.380404472351074
    3. ' ,' → logprob: -7.630404472351074
    4. 'd' → logprob: -9.380404472351074
    5. '(d' → logprob: -9.880404472351074
    6. ',
' → logprob: -10.130404472351074
    7. ')' → logprob: -10.255404472351074
    8. '))' → logprob: -10.255404472351074
    9. '),' → logprob: -11.255404472351074
    10. ',v' → logprob: -11.505404472351074

Token 285: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.054939717054367065
    2. ' d' → logprob: -2.9299397468566895
    3. 'max' → logprob: -10.804939270019531
    4. ' max' → logprob: -11.179939270019531
    5. '   ' → logprob: -11.679939270019531
    6. ' ' → logprob: -12.804939270019531
    7. '	d' → logprob: -13.179939270019531
    8. '  ' → logprob: -13.554939270019531
    9. '    ' → logprob: -13.679939270019531
    10. '
' → logprob: -14.054939270019531

Token 286: 'nc' (ID: 24825)
  Prédit: 'nc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nc' → logprob: -0.006080718245357275
    2. 'c' → logprob: -5.256080627441406
    3. 'd' → logprob: -7.756080627441406
    4. 'n' → logprob: -8.131080627441406
    5. 'nk' → logprob: -9.756080627441406
    6. ',' → logprob: -10.256080627441406
    7. 'cn' → logprob: -11.381080627441406
    8. ')' → logprob: -12.631080627441406
    9. 'sc' → logprob: -12.881080627441406
    10. '_nc' → logprob: -13.131080627441406

Token 287: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006255837506614625
    2. '))' → logprob: -7.8756256103515625
    3. ' ,' → logprob: -8.750625610351562
    4. ',l' → logprob: -10.500625610351562
    5. ',d' → logprob: -10.875625610351562
    6. '),' → logprob: -11.250625610351562
    7. ')' → logprob: -11.250625610351562
    8. ',
' → logprob: -11.875625610351562
    9. ',v' → logprob: -12.875625610351562
    10. '))
' → logprob: -13.750625610351562

Token 288: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.043009236454963684
    2. ' l' → logprob: -3.1680092811584473
    3. 'lk' → logprob: -13.043008804321289
    4. '	l' → logprob: -13.168008804321289
    5. ' ' → logprob: -13.418008804321289
    6. '   ' → logprob: -13.918008804321289
    7. ' ' → logprob: -13.918008804321289
    8. '```' → logprob: -14.168008804321289
    9. '
' → logprob: -14.668008804321289
    10. '  ' → logprob: -14.918008804321289

Token 289: 'ks' (ID: 2484)
  Prédit: 'ks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ks' → logprob: -3.893480243277736e-05
    2. 's' → logprob: -10.750039100646973
    3. ')' → logprob: -11.250039100646973
    4. 'k' → logprob: -13.250039100646973
    5. '[' → logprob: -14.750039100646973
    6. '(' → logprob: -15.000039100646973
    7. 'sk' → logprob: -15.250039100646973
    8. ')
' → logprob: -15.250039100646973
    9. 'KS' → logprob: -15.625039100646973
    10. '```' → logprob: -15.875039100646973

Token 290: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0012924972688779235
    2. ')' → logprob: -7.126292705535889
    3. '))
' → logprob: -7.751292705535889
    4. ')))' → logprob: -10.37629222869873
    5. ' ))' → logprob: -11.00129222869873
    6. '   ' → logprob: -12.00129222869873
    7. '       ' → logprob: -13.87629222869873
    8. ')
' → logprob: -14.37629222869873
    9. ' ' → logprob: -14.75129222869873
    10. '))

' → logprob: -14.87629222869873

Token 291: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00015181333583313972
    2. '   ' → logprob: -9.125151634216309
    3. ' print' → logprob: -10.375151634216309
    4. '
' → logprob: -11.875151634216309
    5. '```' → logprob: -13.125151634216309
    6. '<|end|>' → logprob: -13.500151634216309
    7. ')' → logprob: -14.125151634216309
    8. '    
' → logprob: -16.000152587890625
    9. '	print' → logprob: -16.250152587890625
    10. '\n' → logprob: -16.375152587890625

Token 292: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -2.248469718324486e-05
    2. '   ' → logprob: -11.000022888183594
    3. ' print' → logprob: -12.125022888183594
    4. '```' → logprob: -16.000022888183594
    5. '<|end|>' → logprob: -16.500022888183594
    6. '#print' → logprob: -17.250022888183594
    7. '
' → logprob: -17.750022888183594
    8. ')' → logprob: -17.875022888183594
    9. '(print' → logprob: -18.000022888183594
    10. '	print' → logprob: -18.125022888183594

Token 293: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0005543439765460789
    2. '(' → logprob: -7.50055456161499
    3. '(answer' → logprob: -14.500554084777832
    4. '()' → logprob: -14.875554084777832
    5. '(f' → logprob: -15.125554084777832
    6. '('' → logprob: -15.750554084777832
    7. ' (' → logprob: -16.50055503845215
    8. '(
' → logprob: -17.75055503845215
    9. '(max' → logprob: -17.75055503845215
    10. '(`' → logprob: -18.00055503845215

Token 294: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.3199920178740285e-05
    2. '()' → logprob: -11.500022888183594
    3. '())' → logprob: -11.500022888183594
    4. ' )' → logprob: -13.500022888183594
    5. ')
' → logprob: -13.875022888183594
    6. '))' → logprob: -15.500022888183594
    7. ')`' → logprob: -16.125022888183594
    8. '`)' → logprob: -16.375022888183594
    9. '```' → logprob: -16.625022888183594
    10. '）' → logprob: -17.500022888183594


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 292
Tokens correctement prédits (1ère position, stricte): 125
Tokens correctement prédits (1ère position, avec adaptation): 134
Tokens correctement prédits (top 10): 248
Précision stricte (1ère position): 42.81%
Précision adaptée (1ère position): 45.89%
Précision (top 10): 84.93%
================================================================================
