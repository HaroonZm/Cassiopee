================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:16:21
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Solution pour le problème "A Piece of Cake"

# On a K types de gâteaux, et on reçoit la liste des sommes pour chaque paire de gâteaux.
# Le nombre de sommes est K*(K-1)/2.
# Notre objectif est de retrouver la somme totale des ventes de tous les gâteaux.

# Analyse mathématique :
# Soit les ventes réelles des k gâteaux : x1, x2, ..., xk
# On nous donne toutes les sommes xi + xj pour i<j.
# La somme de toutes ces paires est :
#   S_paires = Σ_{i<j} (xi + xj)
#           = (K - 1) * Σ xi
#
# Car chaque xi apparaît exactement dans (K-1) paires (une avec chaque autre gâteau).
#
# Ainsi:
#   Σ xi = S_paires / (K - 1)
#
# On a donc juste besoin de calculer la somme de tous les ci (les sommes des paires),
# puis diviser par (K - 1).

def main():
    import sys
    
    for line in sys.stdin:
        # On lit K
        K = line.strip()
        if not K:
            continue
        K = int(K)
        if K == 0:
            # Fin des données
            break
        
        # Le nombre de sommes données est K*(K-1)//2
        n_pairs = K * (K - 1) // 2
        
        # On va lire toutes les sommes suivantes, elles peuvent tenir sur plusieurs lignes
        vals = []
        while len(vals) < n_pairs:
            vals_line = sys.stdin.readline()
            if not vals_line:
                break
            vals.extend(map(int, vals_line.strip().split()))
        
        # Calcul du total de ces sommes
        sum_pairs = sum(vals)
        
        # Calcul de la somme totale des ventes (Σ xi)
        total_sales = sum_pairs // (K - 1)
        
        print(total_sales)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Solution' (ID: 20858)
  → Token d'amorce (pas de prédiction)

Token 2: ' pour' (ID: 1930)
  → Token d'amorce (pas de prédiction)

Token 3: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -1.147113561630249
    2. ' résoudre' → logprob: -1.397113561630249
    3. 'l' → logprob: -1.772113561630249
    4. 'le' → logprob: -1.897113561630249
    5. '#' → logprob: -4.022113800048828
    6. 'r' → logprob: -5.022113800048828
    7. 'pro' → logprob: -5.022113800048828
    8. 'rés' → logprob: -5.147113800048828
    9. 'calcul' → logprob: -5.147113800048828
    10. 'python' → logprob: -5.147113800048828

Token 4: ' problème' (ID: 35630)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.055145278573036194
    2. ' problème' → logprob: -4.305145263671875
    3. 'proble' → logprob: -4.680145263671875
    4. 'jour' → logprob: -4.680145263671875
    5. 'code' → logprob: -5.430145263671875
    6. ' prochain' → logprob: -5.930145263671875
    7. ' code' → logprob: -6.305145263671875
    8. 'problem' → logprob: -6.555145263671875
    9. '#' → logprob: -6.805145263671875
    10. ' ' → logprob: -7.055145263671875

Token 5: ' "' (ID: 392)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1953635811805725
    2. ' :' → logprob: -2.1953635215759277
    3. '```' → logprob: -3.4453635215759277
    4. 's' → logprob: -3.8203635215759277
    5. '\n' → logprob: -6.195363521575928
    6. '_' → logprob: -6.570363521575928
    7. '#' → logprob: -6.570363521575928
    8. '\' → logprob: -6.695363521575928
    9. 'def' → logprob: -6.945363521575928
    10. '`' → logprob: -6.945363521575928

Token 6: 'A' (ID: 32)
  Prédit: ' Two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Two' → logprob: -1.7705310583114624
    2. ' "' → logprob: -1.8955310583114624
    3. 'Two' → logprob: -2.270531177520752
    4. ' des' → logprob: -2.770531177520752
    5. ' du' → logprob: -2.770531177520752
    6. ' ABC' → logprob: -2.770531177520752
    7. ' de' → logprob: -3.145531177520752
    8. '"' → logprob: -3.395531177520752
    9. ':' → logprob: -3.520531177520752
    10. '2' → logprob: -3.645531177520752

Token 7: ' Piece' (ID: 48233)
  Prédit: '+B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+B' → logprob: -0.8195271492004395
    2. '"' → logprob: -1.4445271492004395
    3. ' "' → logprob: -2.3195271492004395
    4. ' B' → logprob: -2.9445271492004395
    5. '+' → logprob: -3.0695271492004395
    6. 'B' → logprob: -3.8195271492004395
    7. 'BC' → logprob: -3.8195271492004395
    8. ' +' → logprob: -3.8195271492004395
    9. '"B' → logprob: -4.1945271492004395
    10. ':' → logprob: -5.4445271492004395

Token 8: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.06291838735342026
    2. 'of' → logprob: -2.8129184246063232
    3. ' de' → logprob: -7.437918186187744
    4. '```' → logprob: -9.187918663024902
    5. 's' → logprob: -9.687918663024902
    6. ' ' → logprob: -10.187918663024902
    7. '"' → logprob: -10.687918663024902
    8. 'Of' → logprob: -10.687918663024902
    9. '_of' → logprob: -11.062918663024902
    10. '	of' → logprob: -11.187918663024902

Token 9: ' Cake' (ID: 51982)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' code' → logprob: -0.9823650121688843
    2. ' cake' → logprob: -0.9823650121688843
    3. ' Cake' → logprob: -1.7323650121688843
    4. 'Cake' → logprob: -3.107365131378174
    5. 'cake' → logprob: -4.357365131378174
    6. 'code' → logprob: -4.982365131378174
    7. ' Code' → logprob: -5.857365131378174
    8. 'Code' → logprob: -5.857365131378174
    9. ' C' → logprob: -6.857365131378174
    10. ' text' → logprob: -7.982365131378174

Token 10: '"

' (ID: 2678)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0231647752225399
    2. ':' → logprob: -4.773164749145508
    3. '":' → logprob: -5.523164749145508
    4. '"""' → logprob: -5.898164749145508
    5. '\n' → logprob: -6.273164749145508
    6. 's' → logprob: -6.773164749145508
    7. ' :' → logprob: -6.773164749145508
    8. '#' → logprob: -7.148164749145508
    9. '```' → logprob: -7.148164749145508
    10. '"#' → logprob: -7.523164749145508

Token 11: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.38580214977264404
    2. ':' → logprob: -1.760802149772644
    3. 's' → logprob: -2.5108022689819336
    4. ' :' → logprob: -3.6358022689819336
    5. 'a' → logprob: -4.885802268981934
    6. 'def' → logprob: -4.885802268981934
    7. '#' → logprob: -5.260802268981934
    8. '_' → logprob: -5.385802268981934
    9. '```' → logprob: -5.385802268981934
    10. ' ' → logprob: -5.760802268981934

Token 12: ' On' (ID: 2160)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5725223422050476
    2. ' def' → logprob: -1.4475224018096924
    3. ' ' → logprob: -1.6975224018096924
    4. ' #' → logprob: -5.572522163391113
    5. ' n' → logprob: -5.822522163391113
    6. 'n' → logprob: -5.947522163391113
    7. ' de' → logprob: -6.322522163391113
    8. 'from' → logprob: -6.572522163391113
    9. ' a' → logprob: -6.822522163391113
    10. ' d' → logprob: -7.447522163391113

Token 13: ' a' (ID: 261)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4287184178829193
    2. ' a' → logprob: -1.4287184476852417
    3. ' def' → logprob: -3.178718328475952
    4. 'def' → logprob: -3.803718328475952
    5. ' va' → logprob: -5.053718566894531
    6. ' déf' → logprob: -5.303718566894531
    7. ' continue' → logprob: -5.678718566894531
    8. ' importe' → logprob: -5.803718566894531
    9. ' peut' → logprob: -5.928718566894531
    10. ' doit' → logprob: -5.928718566894531

Token 14: ' K' (ID: 658)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.6220465898513794
    2. ' une' → logprob: -0.8720465898513794
    3. ' ' → logprob: -3.87204647064209
    4. ' reçu' → logprob: -5.62204647064209
    5. ' deux' → logprob: -5.74704647064209
    6. ':' → logprob: -6.24704647064209
    7. ' a' → logprob: -6.49704647064209
    8. ' donné' → logprob: -6.87204647064209
    9. ' trouvé' → logprob: -7.37204647064209
    10. ' la' → logprob: -7.37204647064209

Token 15: ' types' (ID: 6009)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4814686179161072
    2. '=' → logprob: -0.9814686179161072
    3. ' ' → logprob: -5.481468677520752
    4. '_' → logprob: -7.106468677520752
    5. ',' → logprob: -7.356468677520752
    6. ' ' → logprob: -7.481468677520752
    7. ':' → logprob: -8.981468200683594
    8. ''s' → logprob: -9.356468200683594
    9. '#' → logprob: -9.481468200683594
    10. ' pieces' → logprob: -9.606468200683594

Token 16: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.046140238642692566
    2. ' d' → logprob: -3.796140193939209
    3. ' ' → logprob: -4.421140193939209
    4. '<|end|>' → logprob: -5.546140193939209
    5. ',' → logprob: -6.421140193939209
    6. 'd' → logprob: -6.671140193939209
    7. 's' → logprob: -6.671140193939209
    8. 'de' → logprob: -7.046140193939209
    9. ' of' → logprob: -7.171140193939209
    10. '<|end|>' → logprob: -8.671140670776367

Token 17: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -1.125354290008545
    2. ' g' → logprob: -1.125354290008545
    3. ' gâteau' → logprob: -1.625354290008545
    4. ' parts' → logprob: -2.750354290008545
    5. ' cakes' → logprob: -4.250354290008545
    6. ' cake' → logprob: -4.375354290008545
    7. '```' → logprob: -4.375354290008545
    8. 'cakes' → logprob: -4.750354290008545
    9. ' gate' → logprob: -5.000354290008545
    10. 'p' → logprob: -5.375354290008545

Token 18: 'âteaux' (ID: 185889)
  Prédit: 'âteau'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'âteau' → logprob: -0.44420957565307617
    2. 'âteaux' → logprob: -1.1942095756530762
    3. 'ateau' → logprob: -4.194209575653076
    4. 'ate' → logprob: -4.319209575653076
    5. 'â' → logprob: -5.569209575653076
    6. 'âte' → logprob: -5.569209575653076
    7. '{' → logprob: -5.694209575653076
    8. '\' → logprob: -5.944209575653076
    9. 'Â' → logprob: -6.319209575653076
    10. 'a' → logprob: -6.694209575653076

Token 19: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04914624243974686
    2. ' ,' → logprob: -3.9241461753845215
    3. '.' → logprob: -4.2991461753845215
    4. 's' → logprob: -4.5491461753845215
    5. ':' → logprob: -6.1741461753845215
    6. ' ' → logprob: -7.0491461753845215
    7. ' :' → logprob: -7.5491461753845215
    8. ' .' → logprob: -9.92414665222168
    9. ' (' → logprob: -9.92414665222168
    10. '#' → logprob: -10.04914665222168

Token 20: ' et' (ID: 859)
  Prédit: ' chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -1.0299193859100342
    2. ' et' → logprob: -1.4049193859100342
    3. ' chacun' → logprob: -2.279919385910034
    4. 'et' → logprob: -2.904919385910034
    5. ' each' → logprob: -3.029919385910034
    6. ',' → logprob: -3.279919385910034
    7. 'each' → logprob: -3.404919385910034
    8. ' chacune' → logprob: -3.654919385910034
    9. 'ch' → logprob: -4.029919624328613
    10. ' ' → logprob: -4.279919624328613

Token 21: ' on' (ID: 402)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.8290048241615295
    2. ' on' → logprob: -1.8290047645568848
    3. ' K' → logprob: -2.8290047645568848
    4. 'n' → logprob: -3.0790047645568848
    5. ' n' → logprob: -3.0790047645568848
    6. ' ' → logprob: -3.2040047645568848
    7. 'N' → logprob: -3.2040047645568848
    8. ' un' → logprob: -3.3290047645568848
    9. ' chaque' → logprob: -3.8290047645568848
    10. 'on' → logprob: -3.9540047645568848

Token 22: ' reçoit' (ID: 151051)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.870612382888794
    2. 'a' → logprob: -1.495612382888794
    3. ' veut' → logprob: -1.620612382888794
    4. ' souhaite' → logprob: -2.495612382888794
    5. ' doit' → logprob: -3.870612382888794
    6. 've' → logprob: -4.495612144470215
    7. ' veux' → logprob: -4.620612144470215
    8. ' peut' → logprob: -4.995612144470215
    9. 's' → logprob: -5.370612144470215
    10. ' les' → logprob: -6.245612144470215

Token 23: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9095365405082703
    2. ' un' → logprob: -0.9095365405082703
    3. ' une' → logprob: -2.409536600112915
    4. ' K' → logprob: -2.784536600112915
    5. ' la' → logprob: -5.034536361694336
    6. ' des' → logprob: -5.159536361694336
    7. ' ' → logprob: -5.659536361694336
    8. ' N' → logprob: -5.659536361694336
    9. ' les' → logprob: -5.784536361694336
    10. ' n' → logprob: -5.784536361694336

Token 24: ' liste' (ID: 31719)
  Prédit: ' quantité'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' quantité' → logprob: -0.5511126518249512
    2. ' liste' → logprob: -2.176112651824951
    3. ' ' → logprob: -2.426112651824951
    4. ' description' → logprob: -2.926112651824951
    5. ' suite' → logprob: -3.426112651824951
    6. ' recette' → logprob: -3.676112651824951
    7. 's' → logprob: -3.926112651824951
    8. ' hauteur' → logprob: -4.176112651824951
    9. ' suivante' → logprob: -4.926112651824951
    10. ' taille' → logprob: -5.176112651824951

Token 25: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.12044093012809753
    2. ' ' → logprob: -2.99544095993042
    3. ' complète' → logprob: -4.37044095993042
    4. ' s' → logprob: -4.37044095993042
    5. 's' → logprob: -4.49544095993042
    6. ' de' → logprob: -4.62044095993042
    7. ' d' → logprob: -4.99544095993042
    8. ' suivante' → logprob: -5.37044095993042
    9. 'des' → logprob: -7.12044095993042
    10. '[' → logprob: -7.24544095993042

Token 26: ' sommes' (ID: 32024)
  Prédit: ' types'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' types' → logprob: -0.4658854901790619
    2. ' ' → logprob: -2.0908854007720947
    3. ' parts' → logprob: -3.0908854007720947
    4. ' ingrédients' → logprob: -3.8408854007720947
    5. ' morceaux' → logprob: -3.9658854007720947
    6. 'types' → logprob: -4.215885639190674
    7. ' nombres' → logprob: -4.340885639190674
    8. ' tailles' → logprob: -4.340885639190674
    9. ' diam' → logprob: -4.465885639190674
    10. ' portions' → logprob: -4.465885639190674

Token 27: ' pour' (ID: 1930)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.1299801468849182
    2. ' de' → logprob: -3.2549800872802734
    3. 'des' → logprob: -3.2549800872802734
    4. ' ' → logprob: -4.879980087280273
    5. 'de' → logprob: -4.879980087280273
    6. 'tot' → logprob: -5.129980087280273
    7. ' tot' → logprob: -5.504980087280273
    8. ' parti' → logprob: -5.629980087280273
    9. 'd' → logprob: -6.129980087280273
    10. ' à' → logprob: -6.254980087280273

Token 28: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.04339957609772682
    2. ' chacun' → logprob: -3.9183995723724365
    3. ' chacune' → logprob: -4.293399810791016
    4. ' each' → logprob: -5.918399810791016
    5. ' chac' → logprob: -6.668399810791016
    6. 'ces' → logprob: -6.793399810791016
    7. ' les' → logprob: -6.918399810791016
    8. 'each' → logprob: -7.543399810791016
    9. ' ces' → logprob: -7.668399810791016
    10. ' ' → logprob: -7.793399810791016

Token 29: ' paire' (ID: 148856)
  Prédit: ' type'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' type' → logprob: -0.39059945940971375
    2. 'type' → logprob: -1.5155994892120361
    3. ' gâteau' → logprob: -2.390599489212036
    4. '<|end|>' → logprob: -5.390599250793457
    5. 'types' → logprob: -6.265599250793457
    6. 'g' → logprob: -7.140599250793457
    7. 's' → logprob: -7.390599250793457
    8. ' ' → logprob: -7.515599250793457
    9. '"type' → logprob: -7.765599250793457
    10. ' types' → logprob: -7.890599250793457

Token 30: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5461394190788269
    2. ' ,' → logprob: -1.4211394786834717
    3. ' de' → logprob: -2.7961394786834717
    4. ',' → logprob: -2.9211394786834717
    5. 's' → logprob: -3.7961394786834717
    6. '.' → logprob: -4.046139240264893
    7. ' :' → logprob: -4.796139240264893
    8. ' d' → logprob: -5.796139240264893
    9. ' .' → logprob: -6.046139240264893
    10. '_' → logprob: -6.546139240264893

Token 31: ' g' (ID: 329)
  Prédit: ' types'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' types' → logprob: -0.18792805075645447
    2. 'types' → logprob: -2.0629279613494873
    3. ' g' → logprob: -4.062928199768066
    4. 'g' → logprob: -4.562928199768066
    5. ' ' → logprob: -5.312928199768066
    6. ' gâteau' → logprob: -6.187928199768066
    7. ' cakes' → logprob: -6.312928199768066
    8. ' différents' → logprob: -6.687928199768066
    9. ' parts' → logprob: -6.812928199768066
    10. 'cakes' → logprob: -6.937928199768066

Token 32: 'âteaux' (ID: 185889)
  Prédit: 'âteaux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'âteaux' → logprob: -0.7422009110450745
    2. 'âteau' → logprob: -0.8672009110450745
    3. 'ât' → logprob: -3.2422008514404297
    4. 'â' → logprob: -3.2422008514404297
    5. 'à' → logprob: -4.86720085144043
    6. 'âte' → logprob: -5.36720085144043
    7. 'âts' → logprob: -5.49220085144043
    8. '^' → logprob: -5.74220085144043
    9. 'a' → logprob: -6.99220085144043
    10. 'Â' → logprob: -7.11720085144043

Token 33: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7401340007781982
    2. ':' → logprob: -1.6151340007781982
    3. ' :' → logprob: -1.6151340007781982
    4. '.' → logprob: -3.1151340007781982
    5. 's' → logprob: -3.2401340007781982
    6. ' ,' → logprob: -4.490134239196777
    7. '_' → logprob: -4.865134239196777
    8. '#' → logprob: -5.240134239196777
    9. ' =' → logprob: -5.615134239196777
    10. 'n' → logprob: -5.990134239196777

Token 34: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8032130002975464
    2. 'n' → logprob: -2.053213119506836
    3. '_' → logprob: -2.178213119506836
    4. ':' → logprob: -2.928213119506836
    5. ',' → logprob: -3.053213119506836
    6. 'a' → logprob: -3.428213119506836
    7. 's' → logprob: -3.428213119506836
    8. '```' → logprob: -3.678213119506836
    9. '\' → logprob: -3.928213119506836
    10. ' 
' → logprob: -4.053213119506836

Token 35: ' Le' (ID: 2018)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3771916925907135
    2. 'def' → logprob: -2.2521917819976807
    3. '#' → logprob: -2.5021917819976807
    4. ' 

' → logprob: -3.5021917819976807
    5. ' #' → logprob: -4.127191543579102
    6. 's' → logprob: -4.127191543579102
    7. 'n' → logprob: -4.377191543579102
    8. 'd' → logprob: -4.502191543579102
    9. ' ```' → logprob: -5.127191543579102
    10. ' def' → logprob: -5.252191543579102

Token 36: ' nombre' (ID: 9733)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8043445348739624
    2. ' s' → logprob: -2.304344654083252
    3. 's' → logprob: -2.554344654083252
    4. ' code' → logprob: -2.554344654083252
    5. ' #' → logprob: -3.054344654083252
    6. ' K' → logprob: -3.429344654083252
    7. 'u' → logprob: -3.679344654083252
    8. ' problème' → logprob: -4.179344654083252
    9. ' plus' → logprob: -4.304344654083252
    10. ' nombre' → logprob: -4.429344654083252

Token 37: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.7539346218109131
    2. ' d' → logprob: -1.378934621810913
    3. ' total' → logprob: -2.128934621810913
    4. ' ' → logprob: -2.753934621810913
    5. '_' → logprob: -3.378934621810913
    6. 's' → logprob: -4.003934860229492
    7. '_total' → logprob: -4.128934860229492
    8. 'd' → logprob: -5.128934860229492
    9. 'total' → logprob: -5.628934860229492
    10. '_de' → logprob: -5.753934860229492

Token 38: ' sommes' (ID: 32024)
  Prédit: ' g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' g' → logprob: -0.6085731387138367
    2. ' types' → logprob: -1.2335731983184814
    3. ' ' → logprob: -2.1085731983184814
    4. ' gâteau' → logprob: -4.108572959899902
    5. 'g' → logprob: -4.233572959899902
    6. 'types' → logprob: -5.858572959899902
    7. ' cakes' → logprob: -6.358572959899902
    8. ' parts' → logprob: -6.608572959899902
    9. ' p' → logprob: -6.733572959899902
    10. '_' → logprob: -8.108572959899902

Token 39: ' est' (ID: 893)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.13287858664989471
    2. ' =' → logprob: -2.507878541946411
    3. ' de' → logprob: -3.882878541946411
    4. ' d' → logprob: -5.13287878036499
    5. ' s' → logprob: -6.00787878036499
    6. ' est' → logprob: -6.13287878036499
    7. '  ' → logprob: -6.25787878036499
    8. ' des' → logprob: -6.50787878036499
    9. ' total' → logprob: -6.63287878036499
    10. '=' → logprob: -7.00787878036499

Token 40: ' K' (ID: 658)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.041821084916591644
    2. ' K' → logprob: -3.416821002960205
    3. ' (' → logprob: -5.291821002960205
    4. '  ' → logprob: -7.166821002960205
    5. ' =' → logprob: -7.416821002960205
    6. ' n' → logprob: -7.666821002960205
    7. ' ,' → logprob: -8.916821479797363
    8. ' k' → logprob: -9.041821479797363
    9. ' )' → logprob: -9.416821479797363
    10. ' `' → logprob: -9.666821479797363

Token 41: '*(' (ID: 14793)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6714251637458801
    2. ' -' → logprob: -0.9214251637458801
    3. '+' → logprob: -3.9214251041412354
    4. ' +' → logprob: -4.0464253425598145
    5. ' *' → logprob: -4.0464253425598145
    6. ' ' → logprob: -4.1714253425598145
    7. '*' → logprob: -4.5464253425598145
    8. '*(' → logprob: -4.9214253425598145
    9. '```' → logprob: -7.5464253425598145
    10. ' =' → logprob: -8.046424865722656

Token 42: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.03976324945688248
    2. '(K' → logprob: -3.7897632122039795
    3. ' K' → logprob: -4.664763450622559
    4. '-' → logprob: -5.164763450622559
    5. ' (' → logprob: -7.289763450622559
    6. '1' → logprob: -8.164763450622559
    7. ' ' → logprob: -8.789763450622559
    8. '(' → logprob: -10.289763450622559
    9. ' -' → logprob: -10.664763450622559
    10. '<|end|>' → logprob: -10.914763450622559

Token 43: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.002514658262953162
    2. ' -' → logprob: -6.002514839172363
    3. '1' → logprob: -11.252514839172363
    4. ')' → logprob: -11.252514839172363
    5. ' ' → logprob: -12.752514839172363
    6. '-)' → logprob: -13.127514839172363
    7. '<|end|>' → logprob: -13.252514839172363
    8. '*' → logprob: -13.627514839172363
    9. '2' → logprob: -13.752514839172363
    10. '+' → logprob: -13.877514839172363

Token 44: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0024963486939668655
    2. ' ' → logprob: -6.002496242523193
    3. '2' → logprob: -11.377496719360352
    4. ')' → logprob: -12.252496719360352
    5. '```' → logprob: -13.252496719360352
    6. ' )' → logprob: -14.689996719360352
    7. '
' → logprob: -15.189996719360352
    8. '۱' → logprob: -15.314996719360352
    9. '  ' → logprob: -15.439996719360352
    10. '	' → logprob: -15.502496719360352

Token 45: ')/' (ID: 11876)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.767670750617981
    2. ')/' → logprob: -1.017670750617981
    3. ')//' → logprob: -1.767670750617981
    4. '//' → logprob: -5.892670631408691
    5. ' )' → logprob: -7.142670631408691
    6. ' //' → logprob: -9.392670631408691
    7. '/' → logprob: -9.767670631408691
    8. ')#' → logprob: -11.892670631408691
    9. '')' → logprob: -12.142670631408691
    10. '```' → logprob: -12.392670631408691

Token 46: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.001503790495917201
    2. ' ' → logprob: -6.501503944396973
    3. '```' → logprob: -14.876503944396973
    4. '۲' → logprob: -15.376503944396973
    5. '٢' → logprob: -16.189002990722656
    6. '<|end|>' → logprob: -16.251502990722656
    7. '1' → logprob: -16.251502990722656
    8. '２' → logprob: -16.876502990722656
    9. ')' → logprob: -16.939002990722656
    10. '  ' → logprob: -16.939002990722656

Token 47: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0464584827423096
    2. '
' → logprob: -1.4214584827423096
    3. 'n' → logprob: -1.9214584827423096
    4. '#' → logprob: -2.0464584827423096
    5. ' 

' → logprob: -3.5464584827423096
    6. 's' → logprob: -3.5464584827423096
    7. ' 
' → logprob: -4.4214582443237305
    8. '\' → logprob: -4.7964582443237305
    9. 'import' → logprob: -4.9214582443237305
    10. 'k' → logprob: -5.0464582443237305

Token 48: '#' (ID: 2)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.228356957435608
    2. 'n' → logprob: -1.228356957435608
    3. 'def' → logprob: -1.353356957435608
    4. '#' → logprob: -2.2283568382263184
    5. 'k' → logprob: -4.353356838226318
    6. 'K' → logprob: -4.478356838226318
    7. '_' → logprob: -5.353356838226318
    8. 'import' → logprob: -5.478356838226318
    9. 'a' → logprob: -5.603356838226318
    10. ':' → logprob: -5.728356838226318

Token 49: ' Notre' (ID: 41945)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6329671740531921
    2. 'def' → logprob: -1.507967233657837
    3. 'n' → logprob: -1.757967233657837
    4. 'i' → logprob: -4.382966995239258
    5. '#' → logprob: -4.382966995239258
    6. 'a' → logprob: -4.507966995239258
    7. '_' → logprob: -4.882966995239258
    8. ' 
' → logprob: -5.132966995239258
    9. 's' → logprob: -5.257966995239258
    10. 'k' → logprob: -5.382966995239258

Token 50: ' objectif' (ID: 77387)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' code' → logprob: -0.9054296612739563
    2. '_' → logprob: -1.4054296016693115
    3. '_code' → logprob: -2.1554296016693115
    4. 'def' → logprob: -2.6554296016693115
    5. ' _' → logprob: -3.4054296016693115
    6. ' def' → logprob: -4.155429840087891
    7. ' =' → logprob: -4.405429840087891
    8. '_solution' → logprob: -4.530429840087891
    9. ' objectif' → logprob: -4.530429840087891
    10. ' problème' → logprob: -4.655429840087891

Token 51: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.04554998502135277
    2. ' ' → logprob: -3.4205498695373535
    3. ':' → logprob: -5.0455498695373535
    4. ' :' → logprob: -5.9205498695373535
    5. ' is' → logprob: -6.9205498695373535
    6. 'est' → logprob: -7.7955498695373535
    7. 's' → logprob: -7.9205498695373535
    8. ' =' → logprob: -8.170550346374512
    9. '  ' → logprob: -9.045550346374512
    10. ' ' → logprob: -9.420550346374512

Token 52: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.1162169873714447
    2. ' ' → logprob: -2.9912168979644775
    3. ' d' → logprob: -2.9912168979644775
    4. ' ' → logprob: -5.866217136383057
    5. '  ' → logprob: -6.616217136383057
    6. 'd' → logprob: -6.616217136383057
    7. ' to' → logprob: -6.741217136383057
    8. 'de' → logprob: -7.616217136383057
    9. '   ' → logprob: -7.866217136383057
    10. ':' → logprob: -8.241216659545898

Token 53: ' retrouver' (ID: 53435)
  Prédit: ' trouver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' trouver' → logprob: -0.5347129106521606
    2. 'tr' → logprob: -1.9097129106521606
    3. ' retrouver' → logprob: -2.409712791442871
    4. ' reconstru' → logprob: -2.659712791442871
    5. ' déterminer' → logprob: -3.159712791442871
    6. ' ' → logprob: -4.784712791442871
    7. ' re' → logprob: -4.784712791442871
    8. '   ' → logprob: -4.909712791442871
    9. ' résoudre' → logprob: -4.909712791442871
    10. ' récupérer' → logprob: -5.034712791442871

Token 54: ' la' (ID: 557)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.052240606397390366
    2. ' ' → logprob: -4.177240371704102
    3. 'les' → logprob: -4.177240371704102
    4. ' la' → logprob: -4.302240371704102
    5. ' le' → logprob: -6.177240371704102
    6. ' l' → logprob: -6.552240371704102
    7. '_' → logprob: -7.552240371704102
    8. ' K' → logprob: -7.677240371704102
    9. 'le' → logprob: -7.802240371704102
    10. '```' → logprob: -8.177240371704102

Token 55: ' somme' (ID: 64484)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4237213730812073
    2. ' liste' → logprob: -1.1737213134765625
    3. 'liste' → logprob: -3.5487213134765625
    4. ' list' → logprob: -7.1737213134765625
    5. ' taille' → logprob: -7.4237213134765625
    6. 'list' → logprob: -7.5487213134765625
    7. ' ' → logprob: -7.6737213134765625
    8. ' s' → logprob: -7.7987213134765625
    9. ' valeur' → logprob: -7.9237213134765625
    10. ' array' → logprob: -8.173721313476562

Token 56: ' totale' (ID: 52898)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.3650486171245575
    2. ' totale' → logprob: -1.9900486469268799
    3. '<|end|>' → logprob: -3.24004864692688
    4. '_' → logprob: -3.36504864692688
    5. ' de' → logprob: -3.86504864692688
    6. '_total' → logprob: -4.115048408508301
    7. '_des' → logprob: -4.365048408508301
    8. ' total' → logprob: -4.740048408508301
    9. 'des' → logprob: -4.740048408508301
    10. 'total' → logprob: -4.865048408508301

Token 57: ' des' (ID: 731)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1367757320404053
    2. 'def' → logprob: -1.1367757320404053
    3. '_' → logprob: -2.3867757320404053
    4. 's' → logprob: -2.8867757320404053
    5. ',' → logprob: -3.5117757320404053
    6. '#' → logprob: -3.7617757320404053
    7. ' =' → logprob: -3.8867757320404053
    8. '\' → logprob: -4.136775970458984
    9. ':' → logprob: -4.261775970458984
    10. ' :' → logprob: -4.511775970458984

Token 58: ' ventes' (ID: 99004)
  Prédit: ' K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.15139240026474
    2. ' ' → logprob: -2.6513924598693848
    3. 'K' → logprob: -3.0263924598693848
    4. ' g' → logprob: -5.026392459869385
    5. 'g' → logprob: -5.401392459869385
    6. ' gâteau' → logprob: -5.526392459869385
    7. ' k' → logprob: -7.151392459869385
    8. ' cakes' → logprob: -7.276392459869385
    9. '_' → logprob: -7.401392459869385
    10. 'k' → logprob: -7.776392459869385

Token 59: ' de' (ID: 334)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6877153515815735
    2. 's' → logprob: -1.4377152919769287
    3. '#' → logprob: -2.5627152919769287
    4. '\' → logprob: -3.1877152919769287
    5. 'n' → logprob: -3.3127152919769287
    6. '_' → logprob: -3.5627152919769287
    7. 'k' → logprob: -4.312715530395508
    8. ':' → logprob: -4.437715530395508
    9. '\n' → logprob: -4.812715530395508
    10. 'import' → logprob: -5.187715530395508

Token 60: ' tous' (ID: 10688)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9141131639480591
    2. ' tous' → logprob: -1.164113163948059
    3. 't' → logprob: -1.539113163948059
    4. ' t' → logprob: -4.7891130447387695
    5. ' cakes' → logprob: -4.7891130447387695
    6. ' chaque' → logprob: -5.0391130447387695
    7. ' all' → logprob: -5.1641130447387695
    8. ' cake' → logprob: -5.4141130447387695
    9. ' toutes' → logprob: -5.4141130447387695
    10. ' l' → logprob: -5.6641130447387695

Token 61: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.345234751701355
    2. 'les' → logprob: -1.720234751701355
    3. ' ' → logprob: -2.3452348709106445
    4. ' cakes' → logprob: -5.9702348709106445
    5. ' K' → logprob: -6.4702348709106445
    6. 'cakes' → logprob: -6.4702348709106445
    7. 's' → logprob: -6.5952348709106445
    8. ' ' → logprob: -6.7202348709106445
    9. ' #' → logprob: -6.7202348709106445
    10. '#' → logprob: -6.8452348709106445

Token 62: ' g' (ID: 329)
  Prédit: ' g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' g' → logprob: -0.9081012606620789
    2. ' ' → logprob: -1.0331013202667236
    3. ' gâteau' → logprob: -2.2831013202667236
    4. 'g' → logprob: -2.4081013202667236
    5. ' K' → logprob: -4.5331010818481445
    6. ' types' → logprob: -4.5331010818481445
    7. 'cakes' → logprob: -5.0331010818481445
    8. ' cakes' → logprob: -5.2831010818481445
    9. '	g' → logprob: -5.7831010818481445
    10. ' k' → logprob: -6.5331010818481445

Token 63: 'âteaux' (ID: 185889)
  Prédit: 'âteaux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'âteaux' → logprob: -0.24700401723384857
    2. 'â' → logprob: -1.8720040321350098
    3. 'âteau' → logprob: -3.6220040321350098
    4. 'ât' → logprob: -3.9970040321350098
    5. 'âts' → logprob: -4.37200403213501
    6. 'âte' → logprob: -5.74700403213501
    7. '^' → logprob: -6.24700403213501
    8. '|' → logprob: -8.497003555297852
    9. 'å' → logprob: -8.497003555297852
    10. 'ấ' → logprob: -8.747003555297852

Token 64: '.

' (ID: 364)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3746771812438965
    2. ':' → logprob: -1.9996771812438965
    3. 's' → logprob: -2.9996771812438965
    4. '#' → logprob: -2.9996771812438965
    5. 'n' → logprob: -3.2496771812438965
    6. '
' → logprob: -4.3746771812438965
    7. '\' → logprob: -5.2496771812438965
    8. 'import' → logprob: -5.7496771812438965
    9. 'k' → logprob: -5.7496771812438965
    10. '_' → logprob: -5.8746771812438965

Token 65: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.628463864326477
    2. 'def' → logprob: -1.253463864326477
    3. '#' → logprob: -2.8784637451171875
    4. '
' → logprob: -3.1284637451171875
    5. 's' → logprob: -3.5034637451171875
    6. '\' → logprob: -4.5034637451171875
    7. 'd' → logprob: -4.6284637451171875
    8. '```' → logprob: -4.8784637451171875
    9. 'k' → logprob: -5.1284637451171875
    10. 'import' → logprob: -5.6284637451171875

Token 66: ' Analyse' (ID: 91441)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3974364697933197
    2. 'def' → logprob: -1.647436499595642
    3. 'n' → logprob: -3.1474363803863525
    4. ' d' → logprob: -3.7724363803863525
    5. ' def' → logprob: -4.147436618804932
    6. '#' → logprob: -4.397436618804932
    7. ' #' → logprob: -4.522436618804932
    8. 'i' → logprob: -4.522436618804932
    9. 's' → logprob: -4.897436618804932
    10. 'import' → logprob: -5.772436618804932

Token 67: ' math' (ID: 13324)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.671153724193573
    2. ' :' → logprob: -1.4211537837982178
    3. '#' → logprob: -1.5461537837982178
    4. '\' → logprob: -4.296153545379639
    5. '```' → logprob: -5.296153545379639
    6. 's' → logprob: -5.546153545379639
    7. '\n' → logprob: -5.671153545379639
    8. '_' → logprob: -6.546153545379639
    9. 'def' → logprob: -6.546153545379639
    10. '

' → logprob: -7.046153545379639

Token 68: 'ématique' (ID: 127136)
  Prédit: 'ématique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ématique' → logprob: -0.24313399195671082
    2. 'é' → logprob: -1.6181340217590332
    3. 'ématiques' → logprob: -4.743134021759033
    4. 'ém' → logprob: -4.868134021759033
    5. 'éma' → logprob: -6.868134021759033
    6. 'em' → logprob: -10.118133544921875
    7. 'è' → logprob: -10.993133544921875
    8. 'étique' → logprob: -11.243133544921875
    9. ' é' → logprob: -11.743133544921875
    10. '#' → logprob: -11.743133544921875

Token 69: ' :
' (ID: 10039)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.829501748085022
    2. ':' → logprob: -1.079501748085022
    3. '#' → logprob: -1.704501748085022
    4. ' :
' → logprob: -4.704501628875732
    5. ' :

' → logprob: -5.079501628875732
    6. '\' → logprob: -5.079501628875732
    7. ':

' → logprob: -5.329501628875732
    8. ':
' → logprob: -5.829501628875732
    9. '\n' → logprob: -6.204501628875732
    10. 's' → logprob: -6.204501628875732

Token 70: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.039169300347566605
    2. ' #' → logprob: -3.5391693115234375
    3. 'On' → logprob: -6.4141693115234375
    4. ' La' → logprob: -6.4141693115234375
    5. 'La' → logprob: -7.1641693115234375
    6. ' On' → logprob: -7.1641693115234375
    7. '\' → logprob: -7.1641693115234375
    8. 's' → logprob: -8.039169311523438
    9. ' \' → logprob: -8.039169311523438
    10. ' Le' → logprob: -8.039169311523438

Token 71: ' So' (ID: 2632)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.07931901514530182
    2. ' #' → logprob: -3.5793190002441406
    3. ' On' → logprob: -3.9543190002441406
    4. 'On' → logprob: -4.704319000244141
    5. ' La' → logprob: -4.954319000244141
    6. 'La' → logprob: -6.454319000244141
    7. ' K' → logprob: -6.454319000244141
    8. ' Le' → logprob: -7.204319000244141
    9. 'Pour' → logprob: -7.204319000244141
    10. ' Pour' → logprob: -7.329319000244141

Token 72: 'it' (ID: 278)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3407861590385437
    2. 'l' → logprob: -1.3407862186431885
    3. 'm' → logprob: -4.215785980224609
    4. 'u' → logprob: -5.215785980224609
    5. '#' → logprob: -6.090785980224609
    6. 'nne' → logprob: -7.340785980224609
    7. 'nt' → logprob: -7.590785980224609
    8. 'it' → logprob: -7.965785980224609
    9. 'nn' → logprob: -8.21578598022461
    10. 'lut' → logprob: -8.40328598022461

Token 73: ' les' (ID: 1341)
  Prédit: ' S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.9593073129653931
    2. ' ' → logprob: -1.584307312965393
    3. ' T' → logprob: -2.2093071937561035
    4. ' K' → logprob: -2.8343071937561035
    5. ' la' → logprob: -2.9593071937561035
    6. ' x' → logprob: -3.7093071937561035
    7. 'S' → logprob: -3.7093071937561035
    8. ' s' → logprob: -3.8343071937561035
    9. ' A' → logprob: -4.2093071937561035
    10. ' n' → logprob: -4.3343071937561035

Token 74: ' ventes' (ID: 99004)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.6239598989486694
    2. ' K' → logprob: -2.248960018157959
    3. 's' → logprob: -2.373960018157959
    4. ' g' → logprob: -2.498960018157959
    5. ' ' → logprob: -3.373960018157959
    6. ' S' → logprob: -3.498960018157959
    7. ' x' → logprob: -3.998960018157959
    8. ' t' → logprob: -4.248960018157959
    9. 'K' → logprob: -4.248960018157959
    10. 'g' → logprob: -4.373960018157959

Token 75: ' ré' (ID: 3146)
  Prédit: ' tot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tot' → logprob: -0.5620408654212952
    2. ' =' → logprob: -1.3120408058166504
    3. ' des' → logprob: -2.3120408058166504
    4. ' de' → logprob: -3.5620408058166504
    5. 'tot' → logprob: -4.18704080581665
    6. ' ' → logprob: -5.31204080581665
    7. '_tot' → logprob: -5.81204080581665
    8. 'des' → logprob: -6.81204080581665
    9. '=' → logprob: -6.81204080581665
    10. 's' → logprob: -6.93704080581665

Token 76: 'elles' (ID: 8500)
  Prédit: 'elles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elles' → logprob: -0.13326312601566315
    2. 'alis' → logprob: -2.758263111114502
    3. 'part' → logprob: -3.883263111114502
    4. 'v' → logprob: -4.008263111114502
    5. 'el' → logprob: -5.383263111114502
    6. 'é' → logprob: -6.133263111114502
    7. 'él' → logprob: -6.633263111114502
    8. 'els' → logprob: -6.758263111114502
    9. 'elle' → logprob: -6.883263111114502
    10. 'nelles' → logprob: -7.008263111114502

Token 77: ' des' (ID: 731)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.0755282640457153
    2. ' des' → logprob: -1.2005282640457153
    3. ' tot' → logprob: -1.7005282640457153
    4. ' =' → logprob: -2.325528144836426
    5. ' ' → logprob: -4.075528144836426
    6. ' d' → logprob: -4.075528144836426
    7. 'tot' → logprob: -4.950528144836426
    8. ' s' → logprob: -5.075528144836426
    9. 's' → logprob: -5.200528144836426
    10. 'de' → logprob: -5.450528144836426

Token 78: ' k' (ID: 372)
  Prédit: ' g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' g' → logprob: -0.9616658091545105
    2. ' K' → logprob: -0.9616658091545105
    3. 'g' → logprob: -2.2116658687591553
    4. 'K' → logprob: -2.9616658687591553
    5. ' ' → logprob: -3.8366658687591553
    6. ' k' → logprob: -4.461665630340576
    7. ' gâteau' → logprob: -4.461665630340576
    8. 'cakes' → logprob: -4.836665630340576
    9. ' cakes' → logprob: -5.086665630340576
    10. ' différents' → logprob: -5.211665630340576

Token 79: ' g' (ID: 329)
  Prédit: ' cakes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cakes' → logprob: -1.1434745788574219
    2. ' gâteau' → logprob: -1.3934745788574219
    3. 'cakes' → logprob: -2.393474578857422
    4. 'g' → logprob: -2.643474578857422
    5. ' g' → logprob: -2.643474578857422
    6. ' ' → logprob: -2.768474578857422
    7. ' types' → logprob: -3.143474578857422
    8. '_' → logprob: -4.393474578857422
    9. 'i' → logprob: -4.518474578857422
    10. ' k' → logprob: -4.518474578857422

Token 80: 'âteaux' (ID: 185889)
  Prédit: 'âteaux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'âteaux' → logprob: -0.06155123561620712
    2. 'â' → logprob: -3.186551332473755
    3. 'ât' → logprob: -5.061551094055176
    4. 'âteau' → logprob: -5.311551094055176
    5. 'âts' → logprob: -5.936551094055176
    6. 'âte' → logprob: -5.936551094055176
    7. '^' → logprob: -7.186551094055176
    8. 'à' → logprob: -8.186551094055176
    9. 'Â' → logprob: -9.061551094055176
    10. '\' → logprob: -9.311551094055176

Token 81: ' :' (ID: 712)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.5692315697669983
    2. 's' → logprob: -1.3192315101623535
    3. ':' → logprob: -3.0692315101623535
    4. ' ' → logprob: -3.9442315101623535
    5. ' :' → logprob: -4.0692315101623535
    6. ',' → logprob: -4.0692315101623535
    7. ' v' → logprob: -4.1942315101623535
    8. ' a' → logprob: -4.5692315101623535
    9. ' x' → logprob: -4.8192315101623535
    10. 'a' → logprob: -5.0692315101623535

Token 82: ' x' (ID: 1215)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.6638358235359192
    2. ' v' → logprob: -1.6638357639312744
    3. ' x' → logprob: -2.5388357639312744
    4. 's' → logprob: -2.6638357639312744
    5. ' ' → logprob: -3.4138357639312744
    6. 'v' → logprob: -3.5388357639312744
    7. ' [' → logprob: -3.5388357639312744
    8. ' a' → logprob: -4.0388360023498535
    9. 'a' → logprob: -4.0388360023498535
    10. 'x' → logprob: -5.2888360023498535

Token 83: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6481053829193115
    2. '_' → logprob: -1.1481053829193115
    3. ' =' → logprob: -2.3981053829193115
    4. '0' → logprob: -3.1481053829193115
    5. '_i' → logprob: -5.148105621337891
    6. '[' → logprob: -5.273105621337891
    7. 'i' → logprob: -5.273105621337891
    8. '\xe2\x82' → logprob: -5.398105621337891
    9. ' ' → logprob: -6.273105621337891
    10. 's' → logprob: -6.398105621337891

Token 84: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02934611402451992
    2. ' ,' → logprob: -4.154345989227295
    3. ' +' → logprob: -4.529345989227295
    4. ',x' → logprob: -6.654345989227295
    5. '+' → logprob: -7.029345989227295
    6. '+x' → logprob: -8.904346466064453
    7. ' x' → logprob: -10.154346466064453
    8. '1' → logprob: -10.529346466064453
    9. '+,' → logprob: -10.904346466064453
    10. ' ' → logprob: -11.779346466064453

Token 85: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.16155649721622467
    2. 'x' → logprob: -1.9115564823150635
    3. ' ' → logprob: -7.411556720733643
    4. ',' → logprob: -7.536556720733643
    5. ' ,' → logprob: -9.036556243896484
    6. '  ' → logprob: -10.661556243896484
    7. ' =' → logprob: -11.286556243896484
    8. '=' → logprob: -12.036556243896484
    9. ',x' → logprob: -12.411556243896484
    10. '2' → logprob: -12.536556243896484

Token 86: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.031197743490338326
    2. '1' → logprob: -3.6561977863311768
    3. ',' → logprob: -5.406197547912598
    4. '_' → logprob: -8.656197547912598
    5. ' ' → logprob: -9.156197547912598
    6. ' ,' → logprob: -10.031197547912598
    7. '₂' → logprob: -10.281197547912598
    8. 'i' → logprob: -11.531197547912598
    9. '+' → logprob: -11.656197547912598
    10. '=' → logprob: -12.781197547912598

Token 87: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0038912808522582054
    2. ' ,' → logprob: -5.628891468048096
    3. ',x' → logprob: -8.503890991210938
    4. 'x' → logprob: -9.878890991210938
    5. ',...' → logprob: -11.128890991210938
    6. '=' → logprob: -12.128890991210938
    7. ' =' → logprob: -12.128890991210938
    8. ' x' → logprob: -12.253890991210938
    9. ' ' → logprob: -13.503890991210938
    10. '+' → logprob: -14.003890991210938

Token 88: ' ...,' (ID: 126708)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.25204452872276306
    2. 'x' → logprob: -1.5020445585250854
    3. ',' → logprob: -9.502044677734375
    4. ' ' → logprob: -10.752044677734375
    5. ' ,' → logprob: -11.127044677734375
    6. '  ' → logprob: -13.877044677734375
    7. ' ' → logprob: -14.127044677734375
    8. '<|end|>' → logprob: -14.127044677734375
    9. '	x' → logprob: -14.377044677734375
    10. '...' → logprob: -14.877044677734375

Token 89: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.2264847755432129
    2. 'x' → logprob: -1.601484775543213
    3. 'k' → logprob: -7.601484775543213
    4. ' k' → logprob: -8.476484298706055
    5. ' ' → logprob: -8.851484298706055
    6. 'xn' → logprob: -8.976484298706055
    7. ' xn' → logprob: -9.976484298706055
    8. ',' → logprob: -11.226484298706055
    9. '...' → logprob: -11.351484298706055
    10. 'n' → logprob: -12.476484298706055

Token 90: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.14822284877300262
    2. 'K' → logprob: -2.0232229232788086
    3. '2' → logprob: -5.273222923278809
    4. '_k' → logprob: -8.273222923278809
    5. '<|end|>' → logprob: -9.773222923278809
    6. 'n' → logprob: -9.898222923278809
    7. ' K' → logprob: -11.648222923278809
    8. '_K' → logprob: -11.898222923278809
    9. ',' → logprob: -12.148222923278809
    10. ' ' → logprob: -12.398222923278809

Token 91: '
' (ID: 198)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.644649088382721
    2. '
' → logprob: -1.7696490287780762
    3. '
' → logprob: -2.644649028778076
    4. 'x' → logprob: -2.769649028778076
    5. ',' → logprob: -3.269649028778076
    6. '\' → logprob: -4.019649028778076
    7. ' =' → logprob: -4.019649028778076
    8. '.' → logprob: -4.269649028778076
    9. '

' → logprob: -4.269649028778076
    10. ' #' → logprob: -4.769649028778076

Token 92: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.1852501481771469
    2. 'x' → logprob: -2.5602500438690186
    3. '
' → logprob: -3.3102500438690186
    4. ' #' → logprob: -4.185250282287598
    5. '
' → logprob: -4.560250282287598
    6. '\' → logprob: -4.810250282287598
    7. '.' → logprob: -5.685250282287598
    8. ' 
' → logprob: -5.685250282287598
    9. ',' → logprob: -6.060250282287598
    10. '

' → logprob: -6.185250282287598

Token 93: ' On' (ID: 2160)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2605520188808441
    2. 'On' → logprob: -1.8855520486831665
    3. 'x' → logprob: -3.385551929473877
    4. ' On' → logprob: -4.135551929473877
    5. 'La' → logprob: -4.510551929473877
    6. ' #' → logprob: -5.260551929473877
    7. 'Alors' → logprob: -6.135551929473877
    8. ' La' → logprob: -6.510551929473877
    9. 'So' → logprob: -6.635551929473877
    10. ' x' → logprob: -6.760551929473877

Token 94: ' nous' (ID: 6176)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1333073526620865
    2. ' a' → logprob: -2.758307456970215
    3. ' sait' → logprob: -3.258307456970215
    4. 's' → logprob: -3.883307456970215
    5. ' connaît' → logprob: -8.383307456970215
    6. 't' → logprob: -8.758307456970215
    7. 'ait' → logprob: -9.008307456970215
    8. 'know' → logprob: -9.195807456970215
    9. 'voit' → logprob: -9.258307456970215
    10. 'sa' → logprob: -9.508307456970215

Token 95: ' donne' (ID: 30004)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.39935216307640076
    2. 'a' → logprob: -2.2743520736694336
    3. ' donne' → logprob: -2.3993520736694336
    4. 'don' → logprob: -3.5243520736694336
    5. ' ' → logprob: -3.6493520736694336
    6. ' connaît' → logprob: -3.7743520736694336
    7. ' sait' → logprob: -4.149352073669434
    8. ' souhaite' → logprob: -5.649352073669434
    9. ' reçoit' → logprob: -5.774352073669434
    10. ' veut' → logprob: -5.774352073669434

Token 96: ' toutes' (ID: 17502)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.22043713927268982
    2. ' la' → logprob: -2.4704370498657227
    3. 'les' → logprob: -3.2204370498657227
    4. ' ' → logprob: -3.5954370498657227
    5. ' l' → logprob: -4.095437049865723
    6. ' toutes' → logprob: -4.470437049865723
    7. ' des' → logprob: -5.845437049865723
    8. ' une' → logprob: -6.470437049865723
    9. ' ' → logprob: -6.595437049865723
    10. 'l' → logprob: -6.595437049865723

Token 97: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.40384170413017273
    2. 'les' → logprob: -1.6538417339324951
    3. '_' → logprob: -2.653841733932495
    4. ' ' → logprob: -2.903841733932495
    5. 'l' → logprob: -5.778841495513916
    6. ' l' → logprob: -5.778841495513916
    7. ' _' → logprob: -6.278841495513916
    8. ' pair' → logprob: -6.778841495513916
    9. ' ' → logprob: -7.153841495513916
    10. '#' → logprob: -7.403841495513916

Token 98: ' sommes' (ID: 32024)
  Prédit: ' sommes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sommes' → logprob: -0.6809453964233398
    2. 's' → logprob: -1.3059453964233398
    3. ' p' → logprob: -1.6809453964233398
    4. 'p' → logprob: -4.05594539642334
    5. 'som' → logprob: -4.93094539642334
    6. ' ' → logprob: -5.55594539642334
    7. ' som' → logprob: -6.05594539642334
    8. ' pairs' → logprob: -6.80594539642334
    9. '   ' → logprob: -7.43094539642334
    10. ' ' → logprob: -7.68094539642334

Token 99: ' xi' (ID: 26869)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.4482622146606445
    2. ' xi' → logprob: -1.4482622146606445
    3. ' x' → logprob: -1.6982622146606445
    4. 'des' → logprob: -2.0732622146606445
    5. 'x' → logprob: -2.5732622146606445
    6. ' possibles' → logprob: -3.1982622146606445
    7. ' pair' → logprob: -3.8232622146606445
    8. 'xi' → logprob: -3.9482622146606445
    9. ' ' → logprob: -4.5732622146606445
    10. ' parti' → logprob: -4.8232622146606445

Token 100: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.387896329164505
    2. '+' → logprob: -1.1378962993621826
    3. '+x' → logprob: -7.262896537780762
    4. ' ' → logprob: -8.637896537780762
    5. '+j' → logprob: -9.762896537780762
    6. ' ' → logprob: -10.387896537780762
    7. ',' → logprob: -11.012896537780762
    8. ' x' → logprob: -11.887896537780762
    9. ' plus' → logprob: -12.137896537780762
    10. ' ,' → logprob: -12.512896537780762

Token 101: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.1269875317811966
    2. ' x' → logprob: -2.1269874572753906
    3. ' ' → logprob: -10.37698745727539
    4. '	x' → logprob: -11.25198745727539
    5. ' ' → logprob: -12.00198745727539
    6. 'xi' → logprob: -12.25198745727539
    7. ' xi' → logprob: -14.00198745727539
    8. '_x' → logprob: -14.00198745727539
    9. ''x' → logprob: -15.25198745727539
    10. '_' → logprob: -15.37698745727539

Token 102: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00019853383128065616
    2. '_j' → logprob: -8.625198364257812
    3. 'i' → logprob: -11.375198364257812
    4. ' j' → logprob: -12.500198364257812
    5. '$j' → logprob: -13.750198364257812
    6. '	j' → logprob: -14.250198364257812
    7. '1' → logprob: -14.500198364257812
    8. 'ĵ' → logprob: -15.000198364257812
    9. '```' → logprob: -15.500198364257812
    10. '<|end|>' → logprob: -15.625198364257812

Token 103: ' pour' (ID: 1930)
  Prédit: ' pour'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pour' → logprob: -0.8518235683441162
    2. ',' → logprob: -1.1018235683441162
    3. ' ' → logprob: -2.101823568344116
    4. ' (' → logprob: -3.476823568344116
    5. 'pour' → logprob: -3.851823568344116
    6. ' avec' → logprob: -4.101823806762695
    7. ' où' → logprob: -4.226823806762695
    8. '#' → logprob: -4.476823806762695
    9. ' ,' → logprob: -4.976823806762695
    10. ' #' → logprob: -5.476823806762695

Token 104: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.038102418184280396
    2. ' ' → logprob: -3.788102388381958
    3. 'i' → logprob: -5.163102626800537
    4. '1' → logprob: -6.038102626800537
    5. ' chaque' → logprob: -6.413102626800537
    6. ' les' → logprob: -6.538102626800537
    7. ' tous' → logprob: -6.663102626800537
    8. ' toutes' → logprob: -6.788102626800537
    9. ' des' → logprob: -8.163102149963379
    10. ' pairs' → logprob: -8.663102149963379

Token 105: '<' (ID: 27)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.21132168173789978
    2. ' !=' → logprob: -1.8363217115402222
    3. '<' → logprob: -4.211321830749512
    4. '!=' → logprob: -5.211321830749512
    5. ' \xe2\x89' → logprob: -5.711321830749512
    6. '+' → logprob: -6.211321830749512
    7. ' ' → logprob: -6.711321830749512
    8. ' +' → logprob: -7.586321830749512
    9. ' >' → logprob: -7.586321830749512
    10. ' #' → logprob: -7.711321830749512

Token 106: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.12696129083633423
    2. ' j' → logprob: -2.1269612312316895
    3. ' ' → logprob: -10.501961708068848
    4. ' ' → logprob: -12.876961708068848
    5. '	j' → logprob: -13.876961708068848
    6. ',j' → logprob: -14.126961708068848
    7. '_j' → logprob: -15.251961708068848
    8. '$j' → logprob: -15.626961708068848
    9. 'i' → logprob: -15.751961708068848
    10. ',' → logprob: -15.751961708068848

Token 107: '.
' (ID: 558)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.21924817562103271
    2. '.' → logprob: -2.7192482948303223
    3. ',' → logprob: -3.0942482948303223
    4. '
' → logprob: -3.0942482948303223
    5. '\n' → logprob: -4.219248294830322
    6. '\' → logprob: -4.969248294830322
    7. '

' → logprob: -5.844248294830322
    8. '.
' → logprob: -5.844248294830322
    9. 'import' → logprob: -6.094248294830322
    10. '
' → logprob: -6.469248294830322

Token 108: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.009908250533044338
    2. 'x' → logprob: -5.509908199310303
    3. '
' → logprob: -6.009908199310303
    4. '\n' → logprob: -6.884908199310303
    5. '\' → logprob: -7.009908199310303
    6. '#
' → logprob: -7.884908199310303
    7. 'import' → logprob: -8.134908676147461
    8. '\x' → logprob: -8.759908676147461
    9. 'def' → logprob: -9.259908676147461
    10. '

' → logprob: -9.384908676147461

Token 109: ' La' (ID: 3038)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.018415993079543114
    2. 'n' → logprob: -5.018415927886963
    3. 'import' → logprob: -5.518415927886963
    4. 'def' → logprob: -5.518415927886963
    5. '
' → logprob: -7.143415927886963
    6. '\' → logprob: -7.393415927886963
    7. 'x' → logprob: -7.518415927886963
    8. 'from' → logprob: -7.643415927886963
    9. ' #' → logprob: -8.143416404724121
    10. '\n' → logprob: -8.268416404724121

Token 110: ' somme' (ID: 64484)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8103041052818298
    2. ' somme' → logprob: -1.6853041648864746
    3. '#' → logprob: -2.0603041648864746
    4. ' liste' → logprob: -3.1853041648864746
    5. ' question' → logprob: -3.6853041648864746
    6. 'suite' → logprob: -3.6853041648864746
    7. 'prem' → logprob: -4.310304164886475
    8. 'question' → logprob: -4.310304164886475
    9. 'liste' → logprob: -4.435304164886475
    10. 't' → logprob: -4.435304164886475

Token 111: ' de' (ID: 334)
  Prédit: ' totale'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' totale' → logprob: -0.6678270101547241
    2. ' de' → logprob: -1.6678270101547241
    3. ' des' → logprob: -1.7928270101547241
    4. 'de' → logprob: -3.2928271293640137
    5. 'tot' → logprob: -3.4178271293640137
    6. 'des' → logprob: -3.5428271293640137
    7. ' tot' → logprob: -4.667827129364014
    8. ' total' → logprob: -4.917827129364014
    9. 'total' → logprob: -5.042827129364014
    10. '#' → logprob: -6.167827129364014

Token 112: ' toutes' (ID: 17502)
  Prédit: ' toutes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' toutes' → logprob: -0.33370018005371094
    2. 't' → logprob: -1.458700180053711
    3. ' tous' → logprob: -4.458700180053711
    4. 'i' → logprob: -4.583700180053711
    5. ' i' → logprob: -4.708700180053711
    6. ' t' → logprob: -5.583700180053711
    7. ' ' → logprob: -5.958700180053711
    8. ' ces' → logprob: -6.083700180053711
    9. '#' → logprob: -6.208700180053711
    10. 's' → logprob: -6.708700180053711

Token 113: ' ces' (ID: 10532)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.35616931319236755
    2. 'les' → logprob: -1.73116934299469
    3. ' ' → logprob: -3.2311692237854004
    4. 's' → logprob: -4.1061692237854
    5. 'i' → logprob: -4.3561692237854
    6. ' xi' → logprob: -4.3561692237854
    7. ' i' → logprob: -4.8561692237854
    8. '_' → logprob: -5.2311692237854
    9. ' sommes' → logprob: -5.3561692237854
    10. '#' → logprob: -5.7311692237854

Token 114: ' p' (ID: 275)
  Prédit: ' sommes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sommes' → logprob: -0.19781933724880219
    2. 's' → logprob: -2.197819232940674
    3. ' p' → logprob: -3.697819232940674
    4. ' pairs' → logprob: -4.572819232940674
    5. ' ' → logprob: -4.822819232940674
    6. 'som' → logprob: -5.447819232940674
    7. ' somm' → logprob: -5.572819232940674
    8. ' comb' → logprob: -5.822819232940674
    9. ' som' → logprob: -5.947819232940674
    10. ' valeurs' → logprob: -6.322819232940674

Token 115: 'aires' (ID: 8507)
  Prédit: 'aires'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aires' → logprob: -0.04875938594341278
    2. 'a' → logprob: -4.173759460449219
    3. 'ai' → logprob: -4.298759460449219
    4. 'air' → logprob: -4.673759460449219
    5. 'airs' → logprob: -5.673759460449219
    6. 'aire' → logprob: -6.798759460449219
    7. ' a' → logprob: -7.423759460449219
    8. '_' → logprob: -7.861259460449219
    9. 'r' → logprob: -7.986259460449219
    10. '-' → logprob: -8.048759460449219

Token 116: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.19700844585895538
    2. ' vaut' → logprob: -3.0720083713531494
    3. ' ' → logprob: -3.1970083713531494
    4. 'est' → logprob: -3.5720083713531494
    5. '=' → logprob: -3.9470083713531494
    6. ' =' → logprob: -4.3220086097717285
    7. ' (' → logprob: -4.8220086097717285
    8. 's' → logprob: -5.4470086097717285
    9. ' xi' → logprob: -5.5720086097717285
    10. ' s' → logprob: -6.0720086097717285

Token 117: ' :
' (ID: 10039)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5533307194709778
    2. ' ' → logprob: -1.303330659866333
    3. ' la' → logprob: -2.678330659866333
    4. ' k' → logprob: -3.803330659866333
    5. ' \' → logprob: -4.928330898284912
    6. ' ' → logprob: -5.178330898284912
    7. ':' → logprob: -5.303330898284912
    8. ' K' → logprob: -5.428330898284912
    9. ' ég' → logprob: -5.428330898284912
    10. ' =' → logprob: -5.678330898284912

Token 118: '#' (ID: 2)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.892501950263977
    2. ' #' → logprob: -2.1425018310546875
    3. '#' → logprob: -2.2675018310546875
    4. ' \' → logprob: -2.7675018310546875
    5. ' x' → logprob: -2.8925018310546875
    6. ' S' → logprob: -3.2675018310546875
    7. ' ' → logprob: -3.2675018310546875
    8. 'x' → logprob: -3.8925018310546875
    9. ' la' → logprob: -4.0175018310546875
    10. '\' → logprob: -4.1425018310546875

Token 119: '  ' (ID: 256)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.38467592000961304
    2. ' \' → logprob: -1.6346759796142578
    3. ' ((' → logprob: -3.259675979614258
    4. ' ' → logprob: -4.759675979614258
    5. ' S' → logprob: -4.884675979614258
    6. '((' → logprob: -4.884675979614258
    7. ' K' → logprob: -5.009675979614258
    8. '\' → logprob: -5.009675979614258
    9. ' sum' → logprob: -5.259675979614258
    10. 'sum' → logprob: -5.509675979614258

Token 120: ' S' (ID: 336)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.8461379408836365
    2. 'sum' → logprob: -1.9711380004882812
    3. '((' → logprob: -2.5961380004882812
    4. '"' → logprob: -2.8461380004882812
    5. '(sum' → logprob: -2.9711380004882812
    6. 'K' → logprob: -3.3461380004882812
    7. ' sum' → logprob: -3.4711380004882812
    8. '(k' → logprob: -3.5961380004882812
    9. '(' → logprob: -3.7211380004882812
    10. ' K' → logprob: -3.8461380004882812

Token 121: '_p' (ID: 1359)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14692021906375885
    2. '=' → logprob: -2.0219202041625977
    3. 'um' → logprob: -6.521920204162598
    4. '_' → logprob: -7.271920204162598
    5. '(x' → logprob: -7.646920204162598
    6. ' ' → logprob: -8.021920204162598
    7. '_x' → logprob: -8.521920204162598
    8. 'x' → logprob: -8.521920204162598
    9. ' *' → logprob: -8.896920204162598
    10. ' ' → logprob: -9.146920204162598

Token 122: 'aires' (ID: 8507)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17236486077308655
    2. '=' → logprob: -2.1723649501800537
    3. 'um' → logprob: -4.047364711761475
    4. '_' → logprob: -5.422364711761475
    5. '_p' → logprob: -5.547364711761475
    6. 'i' → logprob: -6.297364711761475
    7. 'x' → logprob: -6.297364711761475
    8. '=(' → logprob: -6.672364711761475
    9. 'p' → logprob: -6.797364711761475
    10. 'q' → logprob: -6.922364711761475

Token 123: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029812050983309746
    2. '=' → logprob: -3.5298120975494385
    3. ' ' → logprob: -10.15481185913086
    4. ' *' → logprob: -12.02981185913086
    5. ' #' → logprob: -12.77981185913086
    6. ' ' → logprob: -13.02981185913086
    7. ' =
' → logprob: -13.15481185913086
    8. '*' → logprob: -13.27981185913086
    9. 'x' → logprob: -13.27981185913086
    10. '#' → logprob: -13.65481185913086

Token 124: ' Σ' (ID: 21494)
  Prédit: ' K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.9249497056007385
    2. ' (' → logprob: -1.4249496459960938
    3. '"' → logprob: -2.4249496459960938
    4. ' sum' → logprob: -3.1749496459960938
    5. ' ' → logprob: -3.2999496459960938
    6. ' "' → logprob: -3.2999496459960938
    7. ' \' → logprob: -3.4249496459960938
    8. 'K' → logprob: -3.5499496459960938
    9. 'sum' → logprob: -3.5499496459960938
    10. ''' → logprob: -4.924949645996094

Token 125: '_{' (ID: 22305)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.1042239665985107
    2. '_{' → logprob: -1.1042239665985107
    3. ' i' → logprob: -1.3542239665985107
    4. '_i' → logprob: -3.2292239665985107
    5. ' (' → logprob: -4.22922420501709
    6. '(i' → logprob: -4.47922420501709
    7. '_(' → logprob: -4.85422420501709
    8. '_' → logprob: -6.47922420501709
    9. ' _' → logprob: -6.72922420501709
    10. '(' → logprob: -6.85422420501709

Token 126: 'i' (ID: 72)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.48941898345947266
    2. 'i' → logprob: -0.9894189834594727
    3. ' i' → logprob: -4.739418983459473
    4. ' ' → logprob: -5.114418983459473
    5. '0' → logprob: -8.614418983459473
    6. '   ' → logprob: -10.239418983459473
    7. '_i' → logprob: -10.364418983459473
    8. '(' → logprob: -10.364418983459473
    9. '_{' → logprob: -10.489418983459473
    10. '	i' → logprob: -10.739418983459473

Token 127: '<' (ID: 27)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.140703484416008
    2. '<' → logprob: -2.2657034397125244
    3. ' <' → logprob: -5.0157036781311035
    4. '1' → logprob: -5.5157036781311035
    5. 'i' → logprob: -6.1407036781311035
    6. ',' → logprob: -6.1407036781311035
    7. ' =' → logprob: -6.1407036781311035
    8. '}' → logprob: -6.2657036781311035
    9. 'n' → logprob: -7.0157036781311035
    10. '_{' → logprob: -7.2657036781311035

Token 128: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00462403753772378
    2. ' j' → logprob: -5.379623889923096
    3. '	j' → logprob: -14.004624366760254
    4. ' ' → logprob: -14.004624366760254
    5. ' ' → logprob: -14.254624366760254
    6. '_j' → logprob: -14.754624366760254
    7. ',j' → logprob: -15.004624366760254
    8. 'i' → logprob: -15.379624366760254
    9. '}' → logprob: -16.379623413085938
    10. 'k' → logprob: -16.754623413085938

Token 129: '}' (ID: 92)
  Prédit: '}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.0024030047934502363
    2. ' }' → logprob: -6.1274027824401855
    3. '}(' → logprob: -8.877403259277344
    4. '}{' → logprob: -10.127403259277344
    5. '}}' → logprob: -12.252403259277344
    6. '}\' → logprob: -12.252403259277344
    7. ' ' → logprob: -12.627403259277344
    8. '}^{' → logprob: -12.627403259277344
    9. 'i' → logprob: -12.752403259277344
    10. '}[' → logprob: -13.002403259277344

Token 130: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.3995652198791504
    2. '(x' → logprob: -1.1495652198791504
    3. ' xi' → logprob: -4.89956521987915
    4. 'xi' → logprob: -6.02456521987915
    5. ' x' → logprob: -6.77456521987915
    6. 'x' → logprob: -7.14956521987915
    7. '(' → logprob: -7.27456521987915
    8. ' ' → logprob: -9.399564743041992
    9. ' ' → logprob: -11.274564743041992
    10. '(i' → logprob: -12.649564743041992

Token 131: 'xi' (ID: 22180)
  Prédit: 'xi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xi' → logprob: -0.8802822232246399
    2. 'x' → logprob: -1.0052821636199951
    3. '(x' → logprob: -1.7552821636199951
    4. ' xi' → logprob: -3.880282163619995
    5. ' (' → logprob: -4.130282402038574
    6. ' x' → logprob: -4.755282402038574
    7. '(' → logprob: -7.505282402038574
    8. ')' → logprob: -8.130282402038574
    9. ' ' → logprob: -9.505282402038574
    10. '_x' → logprob: -10.130282402038574

Token 132: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3869155943393707
    2. '+' → logprob: -1.1369155645370483
    3. '+x' → logprob: -10.76191520690918
    4. ' ' → logprob: -11.26191520690918
    5. ' ' → logprob: -12.38691520690918
    6. ' plus' → logprob: -13.38691520690918
    7. ')' → logprob: -13.63691520690918
    8. ' x' → logprob: -14.51191520690918
    9. '+j' → logprob: -14.88691520690918
    10. ',' → logprob: -15.01191520690918

Token 133: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.08896148949861526
    2. ' x' → logprob: -2.463961601257324
    3. ' ' → logprob: -11.838961601257324
    4. ' ' → logprob: -11.963961601257324
    5. '	x' → logprob: -12.838961601257324
    6. ')x' → logprob: -13.588961601257324
    7. ')' → logprob: -13.963961601257324
    8. '   ' → logprob: -13.963961601257324
    9. '{x' → logprob: -14.463961601257324
    10. ',x' → logprob: -15.213961601257324

Token 134: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -9.841743303695694e-05
    2. 'x' → logprob: -9.50009822845459
    3. ' j' → logprob: -11.25009822845459
    4. '_j' → logprob: -12.00009822845459
    5. ')' → logprob: -12.75009822845459
    6. 'jx' → logprob: -14.37509822845459
    7. '	j' → logprob: -14.87509822845459
    8. '```' → logprob: -16.000099182128906
    9. '[j' → logprob: -16.375099182128906
    10. '{' → logprob: -17.250099182128906

Token 135: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004458008799701929
    2. ' )' → logprob: -5.504457950592041
    3. ')=' → logprob: -8.6294584274292
    4. '#' → logprob: -9.1294584274292
    5. ')
' → logprob: -9.8794584274292
    6. ')#' → logprob: -11.1294584274292
    7. ')
' → logprob: -12.0044584274292
    8. '=' → logprob: -12.7544584274292
    9. ')

' → logprob: -12.8794584274292
    10. ' )
' → logprob: -13.3794584274292

Token 136: '#' (ID: 2)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0293973870575428
    2. '=' → logprob: -3.654397487640381
    3. '#' → logprob: -6.654397487640381
    4. ' =
' → logprob: -7.154397487640381
    5. '
' → logprob: -8.404397010803223
    6. ' ' → logprob: -8.779397010803223
    7. '\n' → logprob: -8.904397010803223
    8. '  
' → logprob: -9.154397010803223
    9. '=
' → logprob: -9.154397010803223
    10. ' #' → logprob: -9.404397010803223

Token 137: '          ' (ID: 3550)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5771899223327637
    2. '=' → logprob: -0.9521899223327637
    3. '#' → logprob: -3.0771899223327637
    4. '=
' → logprob: -6.202189922332764
    5. '\n' → logprob: -7.077189922332764
    6. ' #' → logprob: -7.202189922332764
    7. '
' → logprob: -7.452189922332764
    8. '=\' → logprob: -7.577189922332764
    9. ' =
' → logprob: -8.077190399169922
    10. '=S' → logprob: -8.327190399169922

Token 138: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4743262529373169
    2. '=' (adapté à ' =') → logprob: -0.9743262529373169
    3. ' ' → logprob: -8.849326133728027
    4. '#' → logprob: -9.349326133728027
    5. ' #' → logprob: -11.349326133728027
    6. ',' → logprob: -13.849326133728027
    7. ' =
' → logprob: -13.849326133728027
    8. '  ' → logprob: -14.224326133728027
    9. '*' → logprob: -14.661826133728027
    10. '=
' → logprob: -14.724326133728027

Token 139: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.33696964383125305
    2. '(k' → logprob: -2.2119696140289307
    3. '(K' → logprob: -2.7119696140289307
    4. 'Σ' → logprob: -3.5869696140289307
    5. '(S' → logprob: -3.7119696140289307
    6. ' Σ' → logprob: -4.21196985244751
    7. '(n' → logprob: -4.33696985244751
    8. ' ' → logprob: -4.33696985244751
    9. '(x' → logprob: -5.46196985244751
    10. '(' → logprob: -5.71196985244751

Token 140: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.026836615055799484
    2. 'k' → logprob: -4.151836395263672
    3. ' K' → logprob: -5.401836395263672
    4. ' (' → logprob: -6.026836395263672
    5. '(k' → logprob: -6.651836395263672
    6. '(K' → logprob: -6.776836395263672
    7. 'Σ' → logprob: -7.901836395263672
    8. 'x' → logprob: -8.276836395263672
    9. '(x' → logprob: -8.776836395263672
    10. '2' → logprob: -9.526836395263672

Token 141: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.013395973481237888
    2. ' -' → logprob: -4.3883957862854
    3. '*' → logprob: -7.3883957862854
    4. ' *' → logprob: -8.763396263122559
    5. '*(' → logprob: -9.763396263122559
    6. ' ' → logprob: -10.388396263122559
    7. ')' → logprob: -11.388396263122559
    8. '  ' → logprob: -12.638396263122559
    9. '−' → logprob: -13.513396263122559
    10. '(K' → logprob: -13.763396263122559

Token 142: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.38792696595191956
    2. '1' → logprob: -1.1379269361495972
    3. ' ' → logprob: -6.887927055358887
    4. ')' → logprob: -10.887927055358887
    5. '
' → logprob: -12.137927055358887
    6. '  ' → logprob: -13.075427055358887
    7. '```' → logprob: -13.137927055358887
    8. '

' → logprob: -13.450427055358887
    9. ' )' → logprob: -13.575427055358887
    10. '   ' → logprob: -14.075427055358887

Token 143: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01816469244658947
    2. '2' → logprob: -4.01816463470459
    3. ')' → logprob: -12.26816463470459
    4. ' ' → logprob: -12.58066463470459
    5. '3' → logprob: -13.51816463470459
    6. '#' → logprob: -13.89316463470459
    7. '

' → logprob: -14.20566463470459
    8. '
' → logprob: -14.45566463470459
    9. '   ' → logprob: -15.08066463470459
    10. '  ' → logprob: -15.33066463470459

Token 144: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0036617142613977194
    2. ' )' → logprob: -5.628661632537842
    3. ')*' → logprob: -9.753662109375
    4. '*' → logprob: -13.878662109375
    5. '#' → logprob: -13.878662109375
    6. '*)' → logprob: -14.753662109375
    7. ' *' → logprob: -15.503662109375
    8. ' ' → logprob: -15.628662109375
    9. '）' → logprob: -15.628662109375
    10. ' ' → logprob: -16.128662109375

Token 145: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.12718142569065094
    2. '*' → logprob: -2.1271815299987793
    3. ' ' → logprob: -9.127181053161621
    4. ' ×' → logprob: -9.502181053161621
    5. ' ' → logprob: -11.252181053161621
    6. ')' → logprob: -11.252181053161621
    7. '×' → logprob: -11.502181053161621
    8. '#' → logprob: -11.627181053161621
    9. '*(' → logprob: -11.877181053161621
    10. 'times' → logprob: -12.502181053161621

Token 146: ' Σ' (ID: 21494)
  Prédit: ' Σ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Σ' → logprob: -0.8236595392227173
    2. 'Σ' → logprob: -1.3236595392227173
    3. ' (' → logprob: -1.4486595392227173
    4. '(' → logprob: -3.4486594200134277
    5. 'sum' → logprob: -4.448659420013428
    6. ' sum' → logprob: -5.323659420013428
    7. ' ' → logprob: -6.448659420013428
    8. '(x' → logprob: -6.448659420013428
    9. '(sum' → logprob: -6.573659420013428
    10. '(S' → logprob: -6.573659420013428

Token 147: ' xi' (ID: 26869)
  Prédit: ' xi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' xi' → logprob: -0.7459455132484436
    2. 'xi' → logprob: -0.8709455132484436
    3. ' x' → logprob: -3.245945453643799
    4. '_{' → logprob: -3.370945453643799
    5. 'x' → logprob: -3.745945453643799
    6. '_i' → logprob: -5.620945453643799
    7. 'i' → logprob: -6.245945453643799
    8. '_x' → logprob: -6.495945453643799
    9. ' _' → logprob: -6.870945453643799
    10. ' i' → logprob: -7.120945453643799

Token 148: '
' (ID: 198)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7610619068145752
    2. '
' → logprob: -0.8860619068145752
    3. '\n' → logprob: -3.136061906814575
    4. '
' → logprob: -3.636061906814575
    5. '

' → logprob: -4.011061668395996
    6. 'def' → logprob: -5.011061668395996
    7. ',' → logprob: -5.136061668395996
    8. '\' → logprob: -5.636061668395996
    9. 'x' → logprob: -6.136061668395996
    10. '  
' → logprob: -6.136061668395996

Token 149: '#
' (ID: 11240)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.11033005267381668
    2. '\n' → logprob: -2.735330104827881
    3. '
' → logprob: -3.485330104827881
    4. '\' → logprob: -6.485330104827881
    5. ',' → logprob: -6.485330104827881
    6. 'def' → logprob: -7.110330104827881
    7. '

' → logprob: -7.235330104827881
    8. '
' → logprob: -7.235330104827881
    9. 'x' → logprob: -7.860330104827881
    10. '  
' → logprob: -8.110329627990723

Token 150: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.390386164188385
    2. 'def' → logprob: -1.5153861045837402
    3. 'total' → logprob: -3.0153861045837402
    4. 'S' → logprob: -3.7653861045837402
    5. ' S' → logprob: -5.01538610458374
    6. ' total' → logprob: -5.01538610458374
    7. 's' → logprob: -5.76538610458374
    8. ' #' → logprob: -6.14038610458374
    9. '\' → logprob: -6.51538610458374
    10. ' def' → logprob: -6.64038610458374

Token 151: ' Car' (ID: 4004)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6925386786460876
    2. '#' → logprob: -0.8175386786460876
    3. 'Donc' → logprob: -3.8175387382507324
    4. 'from' → logprob: -4.817538738250732
    5. 'Ainsi' → logprob: -4.817538738250732
    6. 'don' → logprob: -4.942538738250732
    7. 'total' → logprob: -5.817538738250732
    8. ' Donc' → logprob: -6.192538738250732
    9. 'La' → logprob: -6.317538738250732
    10. ' #' → logprob: -6.567538738250732

Token 152: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.26088598370552063
    2. 'cha' → logprob: -1.7608859539031982
    3. 'ch' → logprob: -4.385886192321777
    4. ' on' → logprob: -5.260886192321777
    5. ' la' → logprob: -5.385886192321777
    6. 'les' → logprob: -5.385886192321777
    7. 'la' → logprob: -6.010886192321777
    8. 'pour' → logprob: -6.135886192321777
    9. ' les' → logprob: -6.385886192321777
    10. ' (' → logprob: -6.385886192321777

Token 153: ' xi' (ID: 26869)
  Prédit: ' gâteau'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gâteau' → logprob: -0.8724804520606995
    2. ' xi' → logprob: -1.4974803924560547
    3. 'xi' → logprob: -1.8724803924560547
    4. 'g' → logprob: -2.3724803924560547
    5. ' g' → logprob: -2.8724803924560547
    6. 'x' → logprob: -4.372480392456055
    7. 'vente' → logprob: -4.622480392456055
    8. ' vente' → logprob: -5.372480392456055
    9. 'cake' → logprob: -5.497480392456055
    10. ' x' → logprob: -5.747480392456055

Token 154: ' apparaît' (ID: 147656)
  Prédit: ' apparaît'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' apparaît' → logprob: -0.14961668848991394
    2. ' est' → logprob: -2.2746167182922363
    3. 'appar' → logprob: -5.024616718292236
    4. 'ap' → logprob: -5.024616718292236
    5. ' appara' → logprob: -5.149616718292236
    6. ' appar' → logprob: -5.524616718292236
    7. 'appe' → logprob: -5.524616718292236
    8. 'est' → logprob: -6.024616718292236
    9. ' intervient' → logprob: -6.024616718292236
    10. ' appears' → logprob: -6.524616718292236

Token 155: ' exactement' (ID: 108701)
  Prédit: ' K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.38636869192123413
    2. ' exactement' → logprob: -1.761368751525879
    3. ' dans' → logprob: -3.261368751525879
    4. 'K' → logprob: -3.261368751525879
    5. 'exact' → logprob: -3.761368751525879
    6. 'dans' → logprob: -3.886368751525879
    7. '(K' → logprob: -3.886368751525879
    8. ' (' → logprob: -5.136368751525879
    9. ' exactly' → logprob: -7.261368751525879
    10. ' ' → logprob: -8.011368751525879

Token 156: ' dans' (ID: 2671)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.9936038255691528
    2. ' K' → logprob: -1.1186038255691528
    3. '(K' → logprob: -1.3686038255691528
    4. 'dans' → logprob: -3.2436037063598633
    5. ' (' → logprob: -4.993603706359863
    6. ' dans' → logprob: -6.118603706359863
    7. '(' → logprob: -8.618603706359863
    8. 'exact' → logprob: -9.243603706359863
    9. 'à' → logprob: -9.618603706359863
    10. ' ' → logprob: -10.118603706359863

Token 157: ' (' (ID: 350)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.30602726340293884
    2. '(K' → logprob: -2.0560271739959717
    3. ' K' → logprob: -2.1810271739959717
    4. ' (' → logprob: -3.9310271739959717
    5. 'les' → logprob: -6.431027412414551
    6. '(' → logprob: -7.806027412414551
    7. ' ' → logprob: -8.43102741241455
    8. 'la' → logprob: -8.55602741241455
    9. 'exact' → logprob: -9.18102741241455
    10. ' toutes' → logprob: -9.43102741241455

Token 158: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.001869021449238062
    2. ' K' → logprob: -6.626869201660156
    3. '(K' → logprob: -7.626869201660156
    4. 'k' → logprob: -10.626869201660156
    5. ' (' → logprob: -10.876869201660156
    6. '(' → logprob: -12.501869201660156
    7. ' ' → logprob: -12.626869201660156
    8. '(k' → logprob: -14.001869201660156
    9. '1' → logprob: -14.251869201660156
    10. '[K' → logprob: -14.376869201660156

Token 159: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6931492686271667
    2. ' -' → logprob: -0.6931492686271667
    3. ' ' → logprob: -13.44314956665039
    4. ' ' → logprob: -14.94314956665039
    5. ')' → logprob: -15.56814956665039
    6. '−' → logprob: -17.31814956665039
    7. '–' → logprob: -17.94314956665039
    8. '1' → logprob: -17.94314956665039
    9. 'minus' → logprob: -17.94314956665039
    10. ' minus' → logprob: -18.31814956665039

Token 160: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011822503292933106
    2. '2' → logprob: -6.7511820793151855
    3. ' ' → logprob: -11.751182556152344
    4. '-' → logprob: -13.376182556152344
    5. '```' → logprob: -14.001182556152344
    6. '   ' → logprob: -14.126182556152344
    7. ')' → logprob: -15.563682556152344
    8. '
' → logprob: -15.751182556152344
    9. '#' → logprob: -16.001182556152344
    10. '

' → logprob: -16.688682556152344

Token 161: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009424308082088828
    2. ' )' → logprob: -7.250942230224609
    3. ' fois' → logprob: -9.12594223022461
    4. ')#' → logprob: -10.75094223022461
    5. ')*' → logprob: -10.87594223022461
    6. '#' → logprob: -11.12594223022461
    7. ' ' → logprob: -11.25094223022461
    8. ')`' → logprob: -11.75094223022461
    9. 'fois' → logprob: -12.12594223022461
    10. ')p' → logprob: -12.56344223022461

Token 162: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -1.0944745540618896
    2. 'p' → logprob: -1.4694745540618896
    3. ' termes' → logprob: -2.0944745540618896
    4. ' sommes' → logprob: -2.3444745540618896
    5. 's' → logprob: -2.8444745540618896
    6. ' pairs' → logprob: -3.5944745540618896
    7. '#' → logprob: -3.7194745540618896
    8. 'fois' → logprob: -3.8444745540618896
    9. ' fois' → logprob: -3.9694745540618896
    10. 'som' → logprob: -4.594474792480469

Token 163: 'aires' (ID: 8507)
  Prédit: 'aires'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aires' → logprob: -0.19194337725639343
    2. 'art' → logprob: -2.816943407058716
    3. 'ar' → logprob: -3.066943407058716
    4. 'a' → logprob: -4.066943168640137
    5. 'airs' → logprob: -4.441943168640137
    6. 'aris' → logprob: -4.941943168640137
    7. 'lus' → logprob: -4.941943168640137
    8. 'x' → logprob: -5.566943168640137
    9. 'laces' → logprob: -5.816943168640137
    10. 'i' → logprob: -6.066943168640137

Token 164: ' (' (ID: 350)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.371456503868103
    2. '
' → logprob: -1.746456503868103
    3. '

' → logprob: -1.746456503868103
    4. '.' → logprob: -1.996456503868103
    5. '#' → logprob: -2.3714566230773926
    6. ',' → logprob: -2.8714566230773926
    7. '.
' → logprob: -3.4964566230773926
    8. '
' → logprob: -4.496456623077393
    9. '\n' → logprob: -4.496456623077393
    10. '.

' → logprob: -4.746456623077393

Token 165: 'une' (ID: 2561)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16089783608913422
    2. ').' → logprob: -2.660897731781006
    3. '),' → logprob: -4.035897731781006
    4. ' )' → logprob: -4.285897731781006
    5. 'dans' → logprob: -4.285897731781006
    6. ')#' → logprob: -5.160897731781006
    7. '#' → logprob: -5.285897731781006
    8. ',' → logprob: -5.535897731781006
    9. ')

' → logprob: -5.535897731781006
    10. ' dans' → logprob: -5.660897731781006

Token 166: ' avec' (ID: 3937)
  Prédit: 'fois'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fois' → logprob: -0.40411192178726196
    2. ' fois' → logprob: -1.1541118621826172
    3. ' ' → logprob: -5.529111862182617
    4. 'fo' → logprob: -5.904111862182617
    5. '#' → logprob: -6.154111862182617
    6. ' #' → logprob: -6.529111862182617
    7. ' )' → logprob: -6.904111862182617
    8. ')' → logprob: -7.029111862182617
    9. ' pour' → logprob: -7.279111862182617
    10. 'f' → logprob: -7.279111862182617

Token 167: ' chaque' (ID: 21194)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.25917893648147583
    2. 'cha' → logprob: -2.259178876876831
    3. 'les' → logprob: -2.509178876876831
    4. ' chaque' → logprob: -3.884178876876831
    5. 'tout' → logprob: -4.63417911529541
    6. 'ch' → logprob: -4.75917911529541
    7. ' tous' → logprob: -6.63417911529541
    8. 'each' → logprob: -7.25917911529541
    9. ' chacun' → logprob: -7.88417911529541
    10. ' les' → logprob: -7.88417911529541

Token 168: ' autre' (ID: 20278)
  Prédit: ' autre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' autre' → logprob: -0.13304118812084198
    2. 'aut' → logprob: -2.2580411434173584
    3. ' des' → logprob: -4.0080413818359375
    4. ' ' → logprob: -7.8830413818359375
    5. ' aut' → logprob: -8.008041381835938
    6. ''autre' → logprob: -8.008041381835938
    7. 'des' → logprob: -8.258041381835938
    8. ' autres' → logprob: -8.758041381835938
    9. ' other' → logprob: -9.258041381835938
    10. 'other' → logprob: -9.633041381835938

Token 169: ' gâteau' (ID: 182549)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -1.0497363805770874
    2. ' gâteau' → logprob: -1.0497363805770874
    3. ')' → logprob: -1.5497363805770874
    4. ' g' → logprob: -3.424736499786377
    5. ' )' → logprob: -4.299736499786377
    6. 'gate' → logprob: -5.424736499786377
    7. '.' → logprob: -5.799736499786377
    8. '),' → logprob: -5.799736499786377
    9. 'cake' → logprob: -5.924736499786377
    10. ' ' → logprob: -5.924736499786377

Token 170: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.358700692653656
    2. ').' → logprob: -1.3587007522583008
    3. '#' → logprob: -3.858700752258301
    4. '),' → logprob: -4.608700752258301
    5. ' )' → logprob: -5.858700752258301
    6. ')#' → logprob: -5.858700752258301
    7. ')

' → logprob: -6.358700752258301
    8. ')
' → logprob: -6.858700752258301
    9. ').

' → logprob: -6.858700752258301
    10. ').
' → logprob: -7.233700752258301

Token 171: '#
' (ID: 11240)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.23186363279819489
    2. '#' → logprob: -1.7318636178970337
    3. '
' → logprob: -4.856863498687744
    4. '\' → logprob: -5.356863498687744
    5. 'import' → logprob: -5.481863498687744
    6. 'K' → logprob: -5.731863498687744
    7. 'n' → logprob: -5.856863498687744
    8. '#
' → logprob: -6.231863498687744
    9. 'from' → logprob: -6.731863498687744
    10. '\n' → logprob: -6.981863498687744

Token 172: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.036384809762239456
    2. '#' → logprob: -3.4113848209381104
    3. 'K' → logprob: -6.536384582519531
    4. 'n' → logprob: -7.411384582519531
    5. 'import' → logprob: -8.036384582519531
    6. ' def' → logprob: -8.786384582519531
    7. ' K' → logprob: -9.661384582519531
    8. 'from' → logprob: -10.161384582519531
    9. ' #' → logprob: -10.411384582519531
    10. '
' → logprob: -11.161384582519531

Token 173: ' Ainsi' (ID: 65093)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.002895571291446686
    2. '#' → logprob: -6.002895355224609
    3. 'n' → logprob: -8.25289535522461
    4. 'total' → logprob: -9.50289535522461
    5. 'import' → logprob: -10.37789535522461
    6. 'K' → logprob: -10.50289535522461
    7. 'from' → logprob: -11.37789535522461
    8. 'S' → logprob: -12.50289535522461
    9. 'sum' → logprob: -12.87789535522461
    10. '```' → logprob: -13.37789535522461

Token 174: ':
' (ID: 734)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10270091891288757
    2. ':' → logprob: -3.10270094871521
    3. ' la' → logprob: -3.22770094871521
    4. 'la' → logprob: -5.227700710296631
    5. ' on' → logprob: -5.727700710296631
    6. ' ' → logprob: -6.977700710296631
    7. '#' → logprob: -6.977700710296631
    8. ' ,' → logprob: -7.477700710296631
    9. ' :' → logprob: -7.852700710296631
    10. '   ' → logprob: -7.977700710296631

Token 175: '#' (ID: 2)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.9578185677528381
    2. ' total' → logprob: -1.3328185081481934
    3. '#' → logprob: -2.4578185081481934
    4. 'S' → logprob: -2.8328185081481934
    5. 'Σ' → logprob: -2.8328185081481934
    6. ' S' → logprob: -2.9578185081481934
    7. 'sum' → logprob: -3.5828185081481934
    8. ' Σ' → logprob: -3.7078185081481934
    9. '   ' → logprob: -5.207818508148193
    10. ' sum' → logprob: -5.332818508148193

Token 176: '  ' (ID: 256)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.7323914170265198
    2. ' total' → logprob: -1.357391357421875
    3. 'S' → logprob: -2.482391357421875
    4. 'sum' → logprob: -2.857391357421875
    5. ' S' → logprob: -3.107391357421875
    6. 'Σ' → logprob: -3.732391357421875
    7. ' sum' → logprob: -3.982391357421875
    8. ' somme' → logprob: -4.232391357421875
    9. ' Σ' → logprob: -4.732391357421875
    10. 's' → logprob: -6.482391357421875

Token 177: ' Σ' (ID: 21494)
  Prédit: 'Σ'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Σ' (adapté à ' Σ') → logprob: -0.8246663212776184
    2. 'S' → logprob: -1.0746662616729736
    3. 'total' → logprob: -1.9496662616729736
    4. 'sum' → logprob: -3.1996662616729736
    5. 'Som' → logprob: -4.949666500091553
    6. ' Σ' → logprob: -5.074666500091553
    7. 'Total' → logprob: -5.449666500091553
    8. ' total' → logprob: -5.449666500091553
    9. ' S' → logprob: -5.574666500091553
    10. 'Sum' → logprob: -6.074666500091553

Token 178: ' xi' (ID: 26869)
  Prédit: 'xi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xi' → logprob: -0.5288957357406616
    2. ' xi' → logprob: -0.9038957357406616
    3. 'x' → logprob: -5.778895854949951
    4. ' x' → logprob: -6.153895854949951
    5. '_x' → logprob: -7.778895854949951
    6. ' ' → logprob: -10.403895378112793
    7. '_i' → logprob: -11.153895378112793
    8. '_{' → logprob: -11.153895378112793
    9. '   ' → logprob: -11.403895378112793
    10. 'i' → logprob: -11.653895378112793

Token 179: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10021314769983292
    2. '=' → logprob: -2.350213050842285
    3. ' ' → logprob: -12.350213050842285
    4. ' *' → logprob: -14.600213050842285
    5. ' #' → logprob: -15.475213050842285
    6. ' ' → logprob: -15.475213050842285
    7. '*' → logprob: -15.850213050842285
    8. '  ' → logprob: -15.850213050842285
    9. '=S' → logprob: -15.850213050842285
    10. 's' → logprob: -15.975213050842285

Token 180: ' S' (ID: 336)
  Prédit: ' S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.313406378030777
    2. 'S' → logprob: -1.3134063482284546
    3. ' ' → logprob: -9.938405990600586
    4. 's' → logprob: -10.313405990600586
    5. ' s' → logprob: -10.688405990600586
    6. 'SP' → logprob: -11.563405990600586
    7. 'int' → logprob: -12.188405990600586
    8. 'sp' → logprob: -12.438405990600586
    9. '  ' → logprob: -12.438405990600586
    10. '   ' → logprob: -12.813405990600586

Token 181: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.2281252145767212
    2. '_' → logprob: -1.6031252145767212
    3. ' _' → logprob: -5.978125095367432
    4. '_pairs' → logprob: -9.35312557220459
    5. '_total' → logprob: -10.10312557220459
    6. '_s' → logprob: -11.85312557220459
    7. '_{' → logprob: -12.60312557220459
    8. '__' → logprob: -12.72812557220459
    9. '_\' → logprob: -12.72812557220459
    10. 'p' → logprob: -12.85312557220459

Token 182: 'aires' (ID: 8507)
  Prédit: 'aires'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aires' → logprob: -0.0009178895270451903
    2. 'airs' → logprob: -8.125917434692383
    3. 'air' → logprob: -8.375917434692383
    4. 'aire' → logprob: -9.250917434692383
    5. '_' → logprob: -9.625917434692383
    6. 'ares' → logprob: -9.625917434692383
    7. 'a' → logprob: -9.875917434692383
    8. 'ai' → logprob: -10.125917434692383
    9. '   ' → logprob: -11.625917434692383
    10. '>' → logprob: -12.000917434692383

Token 183: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.448079377412796
    2. '#' → logprob: -2.0730793476104736
    3. ' #' → logprob: -2.6980793476104736
    4. 'def' → logprob: -3.4480793476104736
    5. '.' → logprob: -3.9480793476104736
    6. ' =' → logprob: -4.073079586029053
    7. '_total' → logprob: -4.448079586029053
    8. ',' → logprob: -4.698079586029053
    9. '
' → logprob: -4.698079586029053
    10. 's' → logprob: -5.198079586029053

Token 184: ' (' (ID: 350)
  Prédit: '(K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.0627923309803009
    2. '(' → logprob: -3.4377923011779785
    3. ' (' → logprob: -3.5627923011779785
    4. '(k' → logprob: -7.9377923011779785
    5. '((' → logprob: -12.437792778015137
    6. '\(' → logprob: -13.312792778015137
    7. ' ' → logprob: -13.687792778015137
    8. '(
' → logprob: -15.312792778015137
    9. ',' → logprob: -15.562792778015137
    10. '#' → logprob: -15.687792778015137

Token 185: 'K' (ID: 42)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5347666144371033
    2. '(K' → logprob: -0.9097666144371033
    3. '(' → logprob: -4.534766674041748
    4. ' K' → logprob: -7.909766674041748
    5. 'K' → logprob: -8.03476619720459
    6. ' ' → logprob: -9.90976619720459
    7. '(k' → logprob: -9.90976619720459
    8. ')' → logprob: -10.40976619720459
    9. '   ' → logprob: -12.78476619720459
    10. '{' → logprob: -13.22226619720459

Token 186: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.17977309226989746
    2. ' -' → logprob: -1.8047730922698975
    3. ' ' → logprob: -11.054773330688477
    4. 'minus' → logprob: -12.304773330688477
    5. '_minus' → logprob: -12.929773330688477
    6. ')' → logprob: -13.304773330688477
    7. ' ' → logprob: -14.054773330688477
    8. '1' → logprob: -14.304773330688477
    9. ' minus' → logprob: -14.429773330688477
    10. 'Minus' → logprob: -14.679773330688477

Token 187: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002613358374219388
    2. ' ' → logprob: -8.250261306762695
    3. '   ' → logprob: -17.125261306762695
    4. ')' → logprob: -18.375261306762695
    5. '  ' → logprob: -19.250261306762695
    6. '2' → logprob: -19.500261306762695
    7. ' ' → logprob: -19.875261306762695
    8. '	' → logprob: -20.875261306762695
    9. '```' → logprob: -20.875261306762695
    10. '１' → logprob: -21.625261306762695

Token 188: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.700132997939363e-05
    2. ' ' → logprob: -11.000017166137695
    3. '```' → logprob: -16.250017166137695
    4. ')' → logprob: -16.625017166137695
    5. '   ' → logprob: -17.375017166137695
    6. '2' → logprob: -17.625017166137695
    7. '
' → logprob: -17.875017166137695
    8. ' ' → logprob: -18.312517166137695
    9. '۱' → logprob: -18.312517166137695
    10. '  ' → logprob: -18.437517166137695

Token 189: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00021843716967850924
    2. ' )' → logprob: -8.625218391418457
    3. '#' → logprob: -10.875218391418457
    4. ')
' → logprob: -11.375218391418457
    5. ')#' → logprob: -13.375218391418457
    6. '))' → logprob: -13.875218391418457
    7. '}' → logprob: -14.000218391418457
    8. '*' → logprob: -14.125218391418457
    9. '")' → logprob: -14.375218391418457
    10. 'def' → logprob: -14.875218391418457

Token 190: '#
' (ID: 11240)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7479811906814575
    2. 'def' → logprob: -0.8729811906814575
    3. '#' → logprob: -2.622981071472168
    4. '\n' → logprob: -4.872981071472168
    5. '

' → logprob: -4.997981071472168
    6. '\' → logprob: -5.497981071472168
    7. '```' → logprob: -5.622981071472168
    8. 'K' → logprob: -5.622981071472168
    9. ' 
' → logprob: -6.372981071472168
    10. 'import' → logprob: -6.497981071472168

Token 191: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.014916590414941311
    2. 'K' → logprob: -4.26491641998291
    3. '#' → logprob: -7.26491641998291
    4. 'n' → logprob: -11.01491641998291
    5. 'import' → logprob: -11.13991641998291
    6. 'from' → logprob: -11.63991641998291
    7. ' def' → logprob: -12.01491641998291
    8. ' K' → logprob: -13.51491641998291
    9. 'k' → logprob: -13.63991641998291
    10. '```' → logprob: -14.13991641998291

Token 192: ' On' (ID: 2160)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0033731767907738686
    2. 'K' → logprob: -5.753373146057129
    3. '#' → logprob: -9.128373146057129
    4. 'n' → logprob: -9.753373146057129
    5. 'import' → logprob: -11.003373146057129
    6. 'from' → logprob: -12.378373146057129
    7. ' def' → logprob: -13.003373146057129
    8. 'k' → logprob: -13.253373146057129
    9. ' K' → logprob: -13.503373146057129
    10. 'N' → logprob: -13.628373146057129

Token 193: ' a' (ID: 261)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.302314817905426
    2. ' peut' → logprob: -1.6773147583007812
    3. 'a' → logprob: -3.5523147583007812
    4. ' a' → logprob: -5.052314758300781
    5. 'continue' → logprob: -5.177314758300781
    6. 'do' → logprob: -5.177314758300781
    7. 's' → logprob: -5.427314758300781
    8. 'pour' → logprob: -5.552314758300781
    9. 'def' → logprob: -6.302314758300781
    10. 'va' → logprob: -6.552314758300781

Token 194: ' donc' (ID: 14206)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -1.0273795127868652
    2. 'don' → logprob: -1.6523795127868652
    3. ' K' → logprob: -1.7773795127868652
    4. ' donc' → logprob: -2.4023795127868652
    5. 'def' → logprob: -2.9023795127868652
    6. 'une' → logprob: -3.6523795127868652
    7. 'import' → logprob: -3.7773795127868652
    8. 't' → logprob: -4.652379512786865
    9. '#' → logprob: -4.902379512786865
    10. 'bes' → logprob: -5.027379512786865

Token 195: ' juste' (ID: 31553)
  Prédit: 'just'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'just' → logprob: -1.6153674125671387
    2. 'K' → logprob: -1.8653674125671387
    3. 'tout' → logprob: -2.1153674125671387
    4. ' K' → logprob: -2.3653674125671387
    5. ' juste' → logprob: -2.4903674125671387
    6. 'la' → logprob: -2.7403674125671387
    7. 'une' → logprob: -2.9903674125671387
    8. 'le' → logprob: -3.3653674125671387
    9. 's' → logprob: -3.6153674125671387
    10. 'S' → logprob: -3.8653674125671387

Token 196: ' besoin' (ID: 27703)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.19677112996578217
    2. ' à' → logprob: -1.8217711448669434
    3. ' ' → logprob: -5.071771144866943
    4. ' besoin' → logprob: -5.196771144866943
    5. 'a' → logprob: -6.571771144866943
    6. '#' → logprob: -7.071771144866943
    7. '  ' → logprob: -7.446771144866943
    8. '   ' → logprob: -7.821771144866943
    9. 'r' → logprob: -8.071770668029785
    10. 'd' → logprob: -8.571770668029785

Token 197: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.3919138014316559
    2. ' de' → logprob: -1.1419137716293335
    3. 'd' → logprob: -6.016913890838623
    4. 'de' → logprob: -6.766913890838623
    5. '<|end|>' → logprob: -7.891913890838623
    6. ' des' → logprob: -8.516913414001465
    7. 'def' → logprob: -8.516913414001465
    8. '#' → logprob: -8.766913414001465
    9. ' of' → logprob: -9.391913414001465
    10. ' #' → logprob: -9.641913414001465

Token 198: ' calcul' (ID: 7559)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.3888157904148102
    2. ' lire' → logprob: -2.0138158798217773
    3. 's' → logprob: -2.5138158798217773
    4. 'calcul' → logprob: -3.1388158798217773
    5. 'sum' → logprob: -4.388815879821777
    6. 'la' → logprob: -4.638815879821777
    7. ' la' → logprob: -5.013815879821777
    8. 'faire' → logprob: -5.138815879821777
    9. ' sommer' → logprob: -5.263815879821777
    10. 'r' → logprob: -5.388815879821777

Token 199: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.00017183588352054358
    2. 'e' → logprob: -9.125171661376953
    3. '#' → logprob: -10.500171661376953
    4. 'é' → logprob: -11.500171661376953
    5. 'r' → logprob: -11.750171661376953
    6. 'ter' → logprob: -11.750171661376953
    7. '   ' → logprob: -13.875171661376953
    8. '\' → logprob: -14.375171661376953
    9. ' er' → logprob: -14.375171661376953
    10. 'ater' → logprob: -14.500171661376953

Token 200: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.10363923013210297
    2. ' S' → logprob: -2.9786391258239746
    3. ' ' → logprob: -3.9786391258239746
    4. 'S' → logprob: -4.353639125823975
    5. 'la' → logprob: -4.603639125823975
    6. ' l' → logprob: -5.478639125823975
    7. ' ' → logprob: -7.353639125823975
    8. 'l' → logprob: -8.603639602661133
    9. ' le' → logprob: -8.603639602661133
    10. 's' → logprob: -8.603639602661133

Token 201: ' somme' (ID: 64484)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.7215337753295898
    2. 'S' → logprob: -1.3465337753295898
    3. 's' → logprob: -1.4715337753295898
    4. ' somme' → logprob: -4.09653377532959
    5. 'som' → logprob: -6.09653377532959
    6. ' sum' → logprob: -6.59653377532959
    7. 'total' → logprob: -6.84653377532959
    8. '_s' → logprob: -6.97153377532959
    9. ' S' → logprob: -6.97153377532959
    10. 'input' → logprob: -8.84653377532959

Token 202: ' de' (ID: 334)
  Prédit: ' totale'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' totale' → logprob: -0.6318589448928833
    2. ' des' → logprob: -1.7568589448928833
    3. '_' → logprob: -1.8818589448928833
    4. 'des' → logprob: -3.0068588256835938
    5. ' total' → logprob: -3.7568588256835938
    6. '_total' → logprob: -4.006858825683594
    7. '_des' → logprob: -4.381858825683594
    8. ' ' → logprob: -4.756858825683594
    9. 'total' → logprob: -4.756858825683594
    10. '_tot' → logprob: -5.631858825683594

Token 203: ' tous' (ID: 10688)
  Prédit: ' toutes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' toutes' → logprob: -0.12759126722812653
    2. 't' → logprob: -2.377591371536255
    3. ' S' → logprob: -5.502591133117676
    4. 'S' → logprob: -5.627591133117676
    5. 'all' → logprob: -5.627591133117676
    6. 'l' → logprob: -5.627591133117676
    7. 'tout' → logprob: -5.627591133117676
    8. 'la' → logprob: -6.377591133117676
    9. 's' → logprob: -6.627591133117676
    10. ' la' → logprob: -6.752591133117676

Token 204: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.21231427788734436
    2. ' les' → logprob: -1.962314248085022
    3. 'es' → logprob: -4.337314128875732
    4. 's' → logprob: -4.462314128875732
    5. '_' → logprob: -4.587314128875732
    6. ' S' → logprob: -5.462314128875732
    7. 'S' → logprob: -5.837314128875732
    8. '<|end|>' → logprob: -6.337314128875732
    9. ' K' → logprob: -6.962314128875732
    10. ' espaces' → logprob: -7.337314128875732

Token 205: ' ci' (ID: 7405)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.799690842628479
    2. 'S' → logprob: -1.424690842628479
    3. 'p' → logprob: -2.7996907234191895
    4. 'ent' → logprob: -3.0496907234191895
    5. 'val' → logprob: -3.1746907234191895
    6. ' S' → logprob: -3.2996907234191895
    7. 'élé' → logprob: -3.6746907234191895
    8. 'inputs' → logprob: -4.2996907234191895
    9. 'mont' → logprob: -4.7996907234191895
    10. 'K' → logprob: -4.7996907234191895

Token 206: ' (' (ID: 350)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.32284000515937805
    2. 's' → logprob: -2.6978399753570557
    3. 'c' → logprob: -3.6978399753570557
    4. 'nés' → logprob: -3.6978399753570557
    5. 'ci' → logprob: -4.197840213775635
    6. 'n' → logprob: -4.572840213775635
    7. '_c' → logprob: -4.697840213775635
    8. 'sum' → logprob: -4.697840213775635
    9. 'près' → logprob: -4.947840213775635
    10. 'f' → logprob: -5.197840213775635

Token 207: 'les' (ID: 1032)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.049663860350847244
    2. 'i' → logprob: -4.17466402053833
    3. ' )' → logprob: -4.17466402053833
    4. 'c' → logprob: -5.42466402053833
    5. '#' → logprob: -5.79966402053833
    6. 's' → logprob: -6.54966402053833
    7. 'ci' → logprob: -6.67466402053833
    8. '   ' → logprob: -6.92466402053833
    9. '),' → logprob: -6.92466402053833
    10. ')#' → logprob: -7.54966402053833

Token 208: ' sommes' (ID: 32024)
  Prédit: 'ci'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ci' → logprob: -0.4120290279388428
    2. 's' → logprob: -2.0370290279388428
    3. 'c' → logprob: -2.1620290279388428
    4. 'val' → logprob: -3.6620290279388428
    5. 'ent' → logprob: -4.787029266357422
    6. 'K' → logprob: -4.787029266357422
    7. 'S' → logprob: -4.787029266357422
    8. 'som' → logprob: -5.537029266357422
    9. 'p' → logprob: -5.662029266357422
    10. 'rés' → logprob: -5.787029266357422

Token 209: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.5860430598258972
    2. ')' → logprob: -2.086043119430542
    3. ' de' → logprob: -2.336043119430542
    4. ' )' → logprob: -2.461043119430542
    5. 'des' → logprob: -2.586043119430542
    6. 'de' → logprob: -3.461043119430542
    7. ' données' → logprob: -5.336042881011963
    8. ' ' → logprob: -5.461042881011963
    9. ' d' → logprob: -5.961042881011963
    10. ' p' → logprob: -6.211042881011963

Token 210: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.17913667857646942
    2. ' p' → logprob: -1.9291366338729858
    3. 'pairs' → logprob: -5.054136753082275
    4. 'pa' → logprob: -5.804136753082275
    5. 'pai' → logprob: -5.929136753082275
    6. ' pairs' → logprob: -6.804136753082275
    7. ' ' → logprob: -7.304136753082275
    8. 'de' → logprob: -7.554136753082275
    9. 'cou' → logprob: -7.679136753082275
    10. 's' → logprob: -7.804136753082275

Token 211: 'aires' (ID: 8507)
  Prédit: 'aires'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aires' → logprob: -0.019563909620046616
    2. 'ai' → logprob: -4.519563674926758
    3. 'a' → logprob: -5.269563674926758
    4. 'air' → logprob: -6.144563674926758
    5. 'airs' → logprob: -7.269563674926758
    6. 'aire' → logprob: -9.269563674926758
    7. '#' → logprob: -9.769563674926758
    8. '>' → logprob: -10.394563674926758
    9. ')' → logprob: -10.394563674926758
    10. '``' → logprob: -10.644563674926758

Token 212: '),
' (ID: 2313)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.48398658633232117
    2. ' )' → logprob: -0.9839866161346436
    3. '),' → logprob: -5.3589863777160645
    4. ' ),' → logprob: -5.8589863777160645
    5. ',' → logprob: -7.3589863777160645
    6. ').' → logprob: -7.4839863777160645
    7. ' de' → logprob: -8.608986854553223
    8. ' ).' → logprob: -8.733986854553223
    9. ')#' → logprob: -9.233986854553223
    10. 'de' → logprob: -9.233986854553223

Token 213: '#' (ID: 2)
  Prédit: ' puis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' puis' → logprob: -0.5944349765777588
    2. '#' → logprob: -0.8444349765777588
    3. ' et' → logprob: -4.96943473815918
    4. ' #' → logprob: -5.59443473815918
    5. 'et' → logprob: -5.96943473815918
    6. 'p' → logprob: -6.09443473815918
    7. 's' → logprob: -8.21943473815918
    8. 'ens' → logprob: -8.34443473815918
    9. ' Puis' → logprob: -8.34443473815918
    10. ' pour' → logprob: -8.46943473815918

Token 214: ' puis' (ID: 18766)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.012144037522375584
    2. ' puis' → logprob: -5.387144088745117
    3. 'p' → logprob: -5.637144088745117
    4. 'et' → logprob: -6.012144088745117
    5. ' #' → logprob: -6.887144088745117
    6. ' et' → logprob: -8.762144088745117
    7. 's' → logprob: -9.762144088745117
    8. 'ens' → logprob: -9.887144088745117
    9. 'Puis' → logprob: -10.512144088745117
    10. ' K' → logprob: -10.637144088745117

Token 215: ' div' (ID: 4223)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.07483667135238647
    2. ' div' → logprob: -3.1998367309570312
    3. ' de' → logprob: -4.574836730957031
    4. ' la' → logprob: -5.199836730957031
    5. 'de' → logprob: -5.199836730957031
    6. ' faire' → logprob: -5.699836730957031
    7. 'faire' → logprob: -5.949836730957031
    8. 'la' → logprob: -6.074836730957031
    9. '#' → logprob: -7.574836730957031
    10. ' ' → logprob: -8.699836730957031

Token 216: 'iser' (ID: 7466)
  Prédit: 'iser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.004149868618696928
    2. 'er' → logprob: -6.004149913787842
    3. 'isé' → logprob: -6.879149913787842
    4. 'ider' → logprob: -7.754149913787842
    5. 'ise' → logprob: -9.754149436950684
    6. 'ser' → logprob: -10.754149436950684
    7. 'i' → logprob: -10.754149436950684
    8. '#' → logprob: -11.129149436950684
    9. '=' → logprob: -11.379149436950684
    10. 'id' → logprob: -11.629149436950684

Token 217: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.19171124696731567
    2. 'par' → logprob: -1.816711187362671
    3. ' le' → logprob: -5.56671142578125
    4. ' ' → logprob: -5.81671142578125
    5. ' la' → logprob: -6.44171142578125
    6. '_par' → logprob: -7.06671142578125
    7. ' cette' → logprob: -7.19171142578125
    8. 'la' → logprob: -7.44171142578125
    9. 'le' → logprob: -7.94171142578125
    10. ' ' → logprob: -8.81671142578125

Token 218: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5787190794944763
    2. '(K' → logprob: -0.8287190794944763
    3. ' K' → logprob: -6.453719139099121
    4. 'K' → logprob: -6.953719139099121
    5. '(' → logprob: -8.328719139099121
    6. ' ' → logprob: -13.578719139099121
    7. ' ' → logprob: -14.328719139099121
    8. '(k' → logprob: -14.578719139099121
    9. ' \(' → logprob: -14.828719139099121
    10. '#' → logprob: -15.578719139099121

Token 219: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.103601835668087
    2. ' K' → logprob: -2.6036019325256348
    3. '(K' → logprob: -4.103601932525635
    4. ' (' → logprob: -4.853601932525635
    5. '(' → logprob: -9.478601455688477
    6. ')' → logprob: -12.228601455688477
    7. ' ' → logprob: -12.478601455688477
    8. 'k' → logprob: -12.603601455688477
    9. ' ' → logprob: -13.228601455688477
    10. '(k' → logprob: -13.728601455688477

Token 220: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2014150768518448
    2. '-' → logprob: -1.7014150619506836
    3. ' ' → logprob: -14.076415061950684
    4. ')' → logprob: -14.576415061950684
    5. ' ' → logprob: -15.076415061950684
    6. '_minus' → logprob: -15.951415061950684
    7. 'minus' → logprob: -16.701416015625
    8. ' minus' → logprob: -16.826416015625
    9. '  ' → logprob: -17.576416015625
    10. '_' → logprob: -17.701416015625

Token 221: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017038638470694423
    2. ' ' → logprob: -6.37670373916626
    3. '```' → logprob: -14.001704216003418
    4. ' ' → logprob: -14.251704216003418
    5. '
' → logprob: -15.876704216003418
    6. '   ' → logprob: -16.0017032623291
    7. '  ' → logprob: -17.7517032623291
    8. 'space' → logprob: -17.8142032623291
    9. ')' → logprob: -18.0642032623291
    10. '#' → logprob: -18.3142032623291

Token 222: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000915039679966867
    2. ' ' → logprob: -7.000915050506592
    3. '```' → logprob: -12.750914573669434
    4. ' ' → logprob: -15.125914573669434
    5. '   ' → logprob: -17.18841552734375
    6. '`' → logprob: -17.56341552734375
    7. '2' → logprob: -17.56341552734375
    8. '
' → logprob: -17.81341552734375
    9. '１' → logprob: -17.81341552734375
    10. ')' → logprob: -18.06341552734375

Token 223: ').

' (ID: 3991)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0032894168980419636
    2. ')
' → logprob: -6.003289222717285
    3. ').' → logprob: -8.253289222717285
    4. ')

' → logprob: -8.503289222717285
    5. 'def' → logprob: -9.503289222717285
    6. ' )' → logprob: -9.503289222717285
    7. ')\' → logprob: -9.503289222717285
    8. ')
' → logprob: -10.128289222717285
    9. '#' → logprob: -11.128289222717285
    10. ')

' → logprob: -11.503289222717285

Token 224: 'def' (ID: 1314)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.20424579083919525
    2. 'def' → logprob: -1.7042458057403564
    3. 'n' → logprob: -5.954245567321777
    4. ' K' → logprob: -8.954245567321777
    5. '#' → logprob: -9.579245567321777
    6. 'import' → logprob: -11.079245567321777
    7. 'N' → logprob: -11.829245567321777
    8. ' def' → logprob: -12.454245567321777
    9. 'k' → logprob: -12.704245567321777
    10. '```' → logprob: -13.329245567321777

Token 225: ' main' (ID: 2758)
  Prédit: ' solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' solution' → logprob: -1.2676639556884766
    2. ' total' → logprob: -1.3926639556884766
    3. ' main' → logprob: -1.5176639556884766
    4. ' solve' → logprob: -2.7676639556884766
    5. ' calcul' → logprob: -2.8926639556884766
    6. ' somme' → logprob: -3.1426639556884766
    7. 'solution' → logprob: -3.8926639556884766
    8. ' sum' → logprob: -4.142663955688477
    9. ' calculate' → logprob: -4.142663955688477
    10. 'solve' → logprob: -4.517663955688477

Token 226: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00011832444579340518
    2. ' ():' → logprob: -9.500118255615234
    3. '():
' → logprob: -10.625118255615234
    4. '()' → logprob: -10.875118255615234
    5. '(' → logprob: -16.250118255615234
    6. ' ()' → logprob: -17.250118255615234
    7. '():
' → logprob: -17.750118255615234
    8. '()>' → logprob: -17.875118255615234
    9. '(":' → logprob: -18.750118255615234
    10. '().' → logprob: -19.625118255615234

Token 227: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0186720322817564
    2. ' K' → logprob: -4.143671989440918
    3. ' import' → logprob: -6.393671989440918
    4. ' k' → logprob: -7.518671989440918
    5. 'K' → logprob: -8.893671989440918
    6. ' n' → logprob: -9.518671989440918
    7. 'n' → logprob: -9.643671989440918
    8. 'k' → logprob: -10.143671989440918
    9. 'import' → logprob: -10.518671989440918
    10. '	K' → logprob: -11.268671989440918

Token 228: ' import' (ID: 1588)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.032499901950359344
    2. ' K' → logprob: -4.15749979019165
    3. '   ' → logprob: -4.53249979019165
    4. 'import' (adapté à ' import') → logprob: -5.40749979019165
    5. 'k' → logprob: -7.03249979019165
    6. ' import' → logprob: -8.532500267028809
    7. ' k' → logprob: -11.907500267028809
    8. ' ' → logprob: -12.407500267028809
    9. 'n' → logprob: -13.532500267028809
    10. '	K' → logprob: -13.907500267028809

Token 229: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.061988748610019684
    2. ' sys' → logprob: -2.8119888305664062
    3. '=sys' → logprob: -11.186988830566406
    4. 'math' → logprob: -11.936988830566406
    5. ' math' → logprob: -15.061988830566406
    6. '	sys' → logprob: -15.186988830566406
    7. '(sys' → logprob: -15.561988830566406
    8. '_sys' → logprob: -17.311988830566406
    9. '.sys' → logprob: -18.436988830566406
    10. '```' → logprob: -18.686988830566406

Token 230: '
    
' (ID: 15698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.060459233820438385
    2. '
' → logprob: -3.5604591369628906
    3. '    
' → logprob: -3.5604591369628906
    4. 'input' → logprob: -7.185459136962891
    5. ' input' → logprob: -8.06045913696289
    6. '   
' → logprob: -8.81045913696289
    7. 'n' → logprob: -9.18545913696289
    8. ' lines' → logprob: -9.18545913696289
    9. ' readline' → logprob: -9.43545913696289
    10. '  
' → logprob: -9.68545913696289

Token 231: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10817047208547592
    2. 'input' → logprob: -2.358170509338379
    3. ' input' → logprob: -4.858170509338379
    4. 'data' → logprob: -9.358170509338379
    5. 'lines' → logprob: -10.358170509338379
    6. ' lines' → logprob: -11.108170509338379
    7. 'n' → logprob: -11.233170509338379
    8. '	input' → logprob: -11.733170509338379
    9. 'K' → logprob: -11.983170509338379
    10. '  ' → logprob: -13.733170509338379

Token 232: ' for' (ID: 395)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0024181068874895573
    2. 'K' → logprob: -6.252418041229248
    3. 'lines' → logprob: -8.627418518066406
    4. 'data' → logprob: -8.877418518066406
    5. ' input' → logprob: -9.002418518066406
    6. '   ' → logprob: -10.502418518066406
    7. 'read' → logprob: -11.127418518066406
    8. 'n' → logprob: -13.127418518066406
    9. 'reader' → logprob: -14.002418518066406
    10. 'inputs' → logprob: -14.377418518066406

Token 233: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.022541509941220284
    2. ' _' → logprob: -4.022541522979736
    3. ' ligne' → logprob: -6.022541522979736
    4. ' ' → logprob: -7.147541522979736
    5. ' i' → logprob: -8.522541046142578
    6. ' k' → logprob: -8.522541046142578
    7. '_' → logprob: -8.772541046142578
    8. 'line' → logprob: -8.772541046142578
    9. ' l' → logprob: -9.022541046142578
    10. ' K' → logprob: -9.272541046142578

Token 234: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003209680551663041
    2. 'in' → logprob: -5.753209590911865
    3. ' ' → logprob: -10.753210067749023
    4. 's' → logprob: -12.753210067749023
    5. ' ' → logprob: -13.878210067749023
    6. '	in' → logprob: -13.878210067749023
    7. '  ' → logprob: -14.128210067749023
    8. 'n' → logprob: -14.378210067749023
    9. '_' → logprob: -14.628210067749023
    10. 'line' → logprob: -14.753210067749023

Token 235: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.5759668350219727
    2. 'sys' → logprob: -0.8259668350219727
    3. '=sys' → logprob: -10.825966835021973
    4. '	sys' → logprob: -12.700966835021973
    5. '(sys' → logprob: -12.950966835021973
    6. '   ' → logprob: -13.700966835021973
    7. '```' → logprob: -15.575966835021973
    8. 'import' → logprob: -15.700966835021973
    9. ' ' → logprob: -16.075965881347656
    10. 's' → logprob: -16.200965881347656

Token 236: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.17022402584552765
    2. '   ' → logprob: -2.7952239513397217
    3. '.readline' → logprob: -3.0452239513397217
    4. ':' → logprob: -3.9202239513397217
    5. 'stdin' → logprob: -4.545224189758301
    6. 'in' → logprob: -5.170224189758301
    7. '(stdin' → logprob: -6.170224189758301
    8. '.stdout' → logprob: -6.420224189758301
    9. '.readlines' → logprob: -6.670224189758301
    10. ':
' → logprob: -7.420224189758301

Token 237: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0038262063171714544
    2. '.strip' → logprob: -6.878826141357422
    3. '.readline' → logprob: -7.003826141357422
    4. ' in' → logprob: -7.253826141357422
    5. ':
' → logprob: -7.378826141357422
    6. '.rstrip' → logprob: -8.128826141357422
    7. '.readlines' → logprob: -9.628826141357422
    8. '   ' → logprob: -9.878826141357422
    9. 'in' → logprob: -10.378826141357422
    10. '.' → logprob: -10.628826141357422

Token 238: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00045843268162570894
    2. ':' → logprob: -8.625458717346191
    3. '.strip' → logprob: -9.375458717346191
    4. ',' → logprob: -10.000458717346191
    5. '.rstrip' → logprob: -10.375458717346191
    6. '        
' → logprob: -10.500458717346191
    7. '   ' → logprob: -11.000458717346191
    8. 'n' → logprob: -11.375458717346191
    9. ' =' → logprob: -11.750458717346191
    10. '=' → logprob: -11.875458717346191

Token 239: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4456196129322052
    2. ' K' → logprob: -1.5706195831298828
    3. '   ' → logprob: -2.820619583129883
    4. ' k' → logprob: -3.195619583129883
    5. 'k' → logprob: -3.945619583129883
    6. 'K' → logprob: -4.195619583129883
    7. ' if' → logprob: -4.445619583129883
    8. ' line' → logprob: -7.070619583129883
    9. '    ' → logprob: -7.195619583129883
    10. ' n' → logprob: -7.195619583129883

Token 240: ' On' (ID: 2160)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -1.4162356853485107
    2. 'line' → logprob: -1.4162356853485107
    3. ' K' → logprob: -1.7912356853485107
    4. ' line' → logprob: -1.9162356853485107
    5. '       ' → logprob: -2.5412356853485107
    6. ' if' → logprob: -3.0412356853485107
    7. 'if' → logprob: -3.0412356853485107
    8. 'k' → logprob: -4.29123592376709
    9. '   ' → logprob: -5.54123592376709
    10. ' k' → logprob: -6.04123592376709

Token 241: ' lit' (ID: 11980)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9933630228042603
    2. '=' → logprob: -1.2433630228042603
    3. ' if' → logprob: -1.8683630228042603
    4. 's' → logprob: -2.4933629035949707
    5. 'if' → logprob: -2.4933629035949707
    6. '   ' → logprob: -5.743362903594971
    7. '    ' → logprob: -5.993362903594971
    8. 'n' → logprob: -5.993362903594971
    9. ' n' → logprob: -6.493362903594971
    10. ' K' → logprob: -6.868362903594971

Token 242: ' K' (ID: 658)
  Prédit: ' K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.031044863164424896
    2. 'K' → logprob: -5.031044960021973
    3. '    ' → logprob: -5.281044960021973
    4. '   ' → logprob: -5.281044960021973
    5. ' la' → logprob: -5.281044960021973
    6. ' k' → logprob: -5.656044960021973
    7. ' le' → logprob: -5.906044960021973
    8. 'k' → logprob: -7.156044960021973
    9. ' une' → logprob: -7.656044960021973
    10. ' un' → logprob: -8.031044960021973

Token 243: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.002971399575471878
    2. '=' → logprob: -6.002971172332764
    3. ',' → logprob: -8.002971649169922
    4. '   ' → logprob: -9.002971649169922
    5. '       ' → logprob: -10.877971649169922
    6. '=int' → logprob: -11.627971649169922
    7. '    ' → logprob: -12.127971649169922
    8. ' ,' → logprob: -14.127971649169922
    9. ')' → logprob: -14.377971649169922
    10. ' ' → logprob: -14.877971649169922

Token 244: '       ' (ID: 309)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0077542648650705814
    2. '=' → logprob: -5.007754325866699
    3. '       ' → logprob: -7.007754325866699
    4. '   ' → logprob: -9.1327543258667
    5. ',' → logprob: -11.5077543258667
    6. '=int' → logprob: -11.7577543258667
    7. '    ' → logprob: -13.3827543258667
    8. '           ' → logprob: -14.0077543258667
    9. '=k' → logprob: -14.0077543258667
    10. 'int' → logprob: -14.2577543258667

Token 245: ' K' (ID: 658)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3549681007862091
    2. 'K' (adapté à ' K') → logprob: -1.9799680709838867
    3. ' K' → logprob: -2.6049680709838867
    4. 'k' → logprob: -2.6049680709838867
    5. ' k' → logprob: -4.854968070983887
    6. ' if' → logprob: -5.604968070983887
    7. 'if' → logprob: -7.104968070983887
    8. '   ' → logprob: -7.979968070983887
    9. 'n' → logprob: -9.354968070983887
    10. 'line' → logprob: -10.104968070983887

Token 246: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20146869122982025
    2. '=' → logprob: -1.7014687061309814
    3. '=int' → logprob: -9.951468467712402
    4. '   ' → logprob: -11.826468467712402
    5. '    ' → logprob: -15.326468467712402
    6. '=line' → logprob: -16.45146942138672
    7. ' ' → logprob: -17.07646942138672
    8. ',' → logprob: -17.07646942138672
    9. '＝' → logprob: -17.20146942138672
    10. 'int' → logprob: -17.32646942138672

Token 247: ' line' (ID: 2543)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -7.493430894101039e-05
    2. ' int' → logprob: -9.500075340270996
    3. 'line' → logprob: -18.00007438659668
    4. '=int' → logprob: -20.75007438659668
    5. '(int' → logprob: -21.00007438659668
    6. '   ' → logprob: -21.25007438659668
    7. '	int' → logprob: -22.50007438659668
    8. 'in' → logprob: -23.00007438659668
    9. '[int' → logprob: -23.50007438659668
    10. '<int' → logprob: -23.50007438659668

Token 248: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.009702151641249657
    2. '.rstrip' → logprob: -4.884702205657959
    3. '.' → logprob: -7.009702205657959
    4. 'strip' → logprob: -7.259702205657959
    5. '.split' → logprob: -8.0097017288208
    6. '=int' → logprob: -10.0097017288208
    7. '.readline' → logprob: -10.0097017288208
    8. 'int' → logprob: -10.2597017288208
    9. 'rstrip' → logprob: -11.6347017288208
    10. '=' → logprob: -12.1347017288208

Token 249: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6934359073638916
    2. '().' → logprob: -0.6934359073638916
    3. '()
' → logprob: -8.818435668945312
    4. '())' → logprob: -10.318435668945312
    5. '.' → logprob: -10.693435668945312
    6. '.split' → logprob: -10.943435668945312
    7. '(' → logprob: -11.068435668945312
    8. '()

' → logprob: -11.318435668945312
    9. '()).' → logprob: -12.193435668945312
    10. '()
' → logprob: -12.443435668945312

Token 250: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7207413911819458
    2. 'if' → logprob: -2.0957412719726562
    3. ')' → logprob: -2.3457412719726562
    4. '=' → logprob: -2.9707412719726562
    5. ' =' → logprob: -2.9707412719726562
    6. ' 
' → logprob: -3.2207412719726562
    7. ' if' → logprob: -3.5957412719726562
    8. '    
' → logprob: -3.8457412719726562
    9. '.strip' → logprob: -3.9707412719726562
    10. '   ' → logprob: -4.095741271972656

Token 251: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2291485220193863
    2. 'if' (adapté à ' if') → logprob: -1.604148507118225
    3. '
' → logprob: -6.6041483879089355
    4. '        
' → logprob: -7.4791483879089355
    5. '=' → logprob: -7.9791483879089355
    6. '       ' → logprob: -8.104148864746094
    7. ' 
' → logprob: -8.354148864746094
    8. 'int' → logprob: -8.354148864746094
    9. ' =' → logprob: -8.604148864746094
    10. ')' → logprob: -8.604148864746094

Token 252: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.00038169484469108284
    2. 'not' → logprob: -8.000381469726562
    3. ' K' → logprob: -10.000381469726562
    4. ' ' → logprob: -14.250381469726562
    5. 'K' → logprob: -16.000381469726562
    6. ' ' → logprob: -17.625381469726562
    7. '	not' → logprob: -17.750381469726562
    8. ' None' → logprob: -20.000381469726562
    9. '_not' → logprob: -20.875381469726562
    10. '(not' → logprob: -21.875381469726562

Token 253: ' K' (ID: 658)
  Prédit: ' K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.1002354547381401
    2. 'K' → logprob: -2.3502354621887207
    3. ' ' → logprob: -10.475234985351562
    4. ' ' → logprob: -14.850234985351562
    5. '	K' → logprob: -15.600234985351562
    6. '  ' → logprob: -17.725234985351562
    7. '>K' → logprob: -17.725234985351562
    8. '   ' → logprob: -18.100234985351562
    9. 'line' → logprob: -18.225234985351562
    10. '_K' → logprob: -18.350234985351562

Token 254: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03740929812192917
    2. ':
' → logprob: -3.4124093055725098
    3. ' or' → logprob: -5.91240930557251
    4. ':return' → logprob: -7.41240930557251
    5. '.is' → logprob: -8.412408828735352
    6. ' :' → logprob: -9.287408828735352
    7. '.strip' → logprob: -9.912408828735352
    8. '.' → logprob: -10.287408828735352
    9. '   ' → logprob: -10.912408828735352
    10. '=' → logprob: -11.912408828735352

Token 255: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0018667640397325158
    2. '       ' → logprob: -6.626866817474365
    3. ' break' → logprob: -8.626866340637207
    4. ':' → logprob: -8.876866340637207
    5. ' continue' → logprob: -9.876866340637207
    6. 'break' → logprob: -9.876866340637207
    7. 'continue' → logprob: -10.501866340637207
    8. ',' → logprob: -11.251866340637207
    9. ' =' → logprob: -11.501866340637207
    10. '   ' → logprob: -11.501866340637207

Token 256: ' continue' (ID: 4901)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.6931711435317993
    2. 'break' → logprob: -0.6931711435317993
    3. 'return' → logprob: -11.943171501159668
    4. '       ' → logprob: -12.318171501159668
    5. 'continue' (adapté à ' continue') → logprob: -12.443171501159668
    6. '   ' → logprob: -12.693171501159668
    7. '	break' → logprob: -12.943171501159668
    8. ' continue' → logprob: -13.193171501159668
    9. ' return' → logprob: -13.443171501159668
    10. '           ' → logprob: -16.19317054748535

Token 257: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004874369595199823
    2. '        
' → logprob: -6.379874229431152
    3. '
' → logprob: -6.629874229431152
    4. '<|end|>' → logprob: -6.754874229431152
    5. ' K' → logprob: -7.879874229431152
    6. 'K' → logprob: -9.379874229431152
    7. '   ' → logprob: -9.754874229431152
    8. '    
' → logprob: -10.129874229431152
    9. ',' → logprob: -10.504874229431152
    10. '<|end|>' → logprob: -10.754874229431152

Token 258: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007072555832564831
    2. ' K' → logprob: -5.507072448730469
    3. '        
' → logprob: -6.507072448730469
    4. 'K' → logprob: -7.132072448730469
    5. '
' → logprob: -7.632072448730469
    6. '   ' → logprob: -9.507072448730469
    7. '<|end|>' → logprob: -10.382072448730469
    8. '    
' → logprob: -11.257072448730469
    9. 'int' → logprob: -11.257072448730469
    10. ',K' → logprob: -11.382072448730469

Token 259: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' (adapté à ' K') → logprob: -0.1602729707956314
    2. ' K' → logprob: -1.9102729558944702
    3. ' =' → logprob: -10.410272598266602
    4. '=' → logprob: -11.035272598266602
    5. 'int' → logprob: -13.910272598266602
    6. 'k' → logprob: -14.160272598266602
    7. '       ' → logprob: -15.285272598266602
    8. '   ' → logprob: -15.410272598266602
    9. '        
' → logprob: -16.1602725982666
    10. ',' → logprob: -16.1602725982666

Token 260: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4742412269115448
    2. '=' → logprob: -0.9742412567138672
    3. '=int' → logprob: -8.724241256713867
    4. 'int' → logprob: -13.724241256713867
    5. ' ' → logprob: -15.849241256713867
    6. '   ' → logprob: -16.099241256713867
    7. ')' → logprob: -16.724241256713867
    8. '＝' → logprob: -16.849241256713867
    9. '=
' → logprob: -17.599241256713867
    10. '```' → logprob: -17.974241256713867

Token 261: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0005530327325686812
    2. ' int' → logprob: -7.500553131103516
    3. '=int' → logprob: -22.250553131103516
    4. '[int' → logprob: -22.750553131103516
    5. '(int' → logprob: -23.500553131103516
    6. '   ' → logprob: -25.125553131103516
    7. '	int' → logprob: -25.375553131103516
    8. ':int' → logprob: -26.125553131103516
    9. '<int' → logprob: -26.125553131103516
    10. '  ' → logprob: -27.375553131103516

Token 262: '(K' (ID: 28797)
  Prédit: '(K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.00034023032640106976
    2. '(' → logprob: -8.000340461730957
    3. 'K' → logprob: -12.375340461730957
    4. ' (' → logprob: -15.375340461730957
    5. '(k' → logprob: -16.12533950805664
    6. ' K' → logprob: -17.25033950805664
    7. '(
' → logprob: -17.75033950805664
    8. '(KERN' → logprob: -17.87533950805664
    9. ')' → logprob: -18.00033950805664
    10. '('' → logprob: -18.37533950805664

Token 263: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.440506407059729e-05
    2. ' )' → logprob: -10.37503433227539
    3. ')
' → logprob: -13.25003433227539
    4. '<|end|>' → logprob: -14.12503433227539
    5. ')#' → logprob: -16.00003433227539
    6. '#' → logprob: -16.00003433227539
    7. '))' → logprob: -16.12503433227539
    8. '   ' → logprob: -16.50003433227539
    9. '<|end|>' → logprob: -16.62503433227539
    10. ')return' → logprob: -16.75003433227539

Token 264: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00214252807199955
    2. '        
' → logprob: -7.127142429351807
    3. '   ' → logprob: -7.627142429351807
    4. 'pairs' → logprob: -7.877142429351807
    5. 's' → logprob: -8.502142906188965
    6. 'if' → logprob: -9.752142906188965
    7. ' sums' → logprob: -10.002142906188965
    8. ' if' → logprob: -10.002142906188965
    9. '    
' → logprob: -10.502142906188965
    10. ' pairs' → logprob: -10.627142906188965

Token 265: ' if' (ID: 538)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pairs' → logprob: -0.9563261866569519
    2. 's' → logprob: -1.4563262462615967
    3. 'pair' → logprob: -1.7063262462615967
    4. '       ' → logprob: -2.3313262462615967
    5. 'n' → logprob: -3.2063262462615967
    6. 'p' → logprob: -4.331326007843018
    7. 'total' → logprob: -4.331326007843018
    8. 'if' (adapté à ' if') → logprob: -4.706326007843018
    9. '   ' → logprob: -4.706326007843018
    10. 'sum' → logprob: -5.081326007843018

Token 266: ' K' (ID: 658)
  Prédit: ' K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.004623799119144678
    2. 'K' → logprob: -5.379623889923096
    3. ' not' → logprob: -12.754623413085938
    4. ' ' → logprob: -15.004623413085938
    5. '	K' → logprob: -15.129623413085938
    6. ' ' → logprob: -17.004623413085938
    7. '  ' → logprob: -17.129623413085938
    8. '>K' → logprob: -17.379623413085938
    9. '   ' → logprob: -17.504623413085938
    10. '(K' → logprob: -18.004623413085938

Token 267: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -1.2605715990066528
    2. ' <' → logprob: -1.3855715990066528
    3. '==' → logprob: -1.6355715990066528
    4. '<' → logprob: -1.8855715990066528
    5. ' <=' → logprob: -2.5105714797973633
    6. '<=' → logprob: -3.2605714797973633
    7. '>' → logprob: -10.385571479797363
    8. '=' → logprob: -10.385571479797363
    9. ' >' → logprob: -11.260571479797363
    10. '<K' → logprob: -11.385571479797363

Token 268: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0031802060548216105
    2. ' ' → logprob: -5.753180027008057
    3. '1' → logprob: -13.128180503845215
    4. '=' → logprob: -15.628180503845215
    5. '   ' → logprob: -16.1281795501709
    6. '  ' → logprob: -16.3781795501709
    7. '-' → logprob: -17.1281795501709
    8. ' -' → logprob: -18.1281795501709
    9. '```' → logprob: -18.5031795501709
    10. '    ' → logprob: -18.8781795501709

Token 269: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '-' → logprob: -16.750001907348633
    4. '=' → logprob: -18.125001907348633
    5. '1' → logprob: -18.500001907348633
    6. '   ' → logprob: -18.625001907348633
    7. '```' → logprob: -19.250001907348633
    8. '  ' → logprob: -19.750001907348633
    9. ' -' → logprob: -20.125001907348633
    10. ')' → logprob: -20.375001907348633

Token 270: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10045790672302246
    2. ':
' → logprob: -2.3504579067230225
    3. '           ' → logprob: -8.725458145141602
    4. '       ' → logprob: -9.600458145141602
    5. '   ' → logprob: -11.475458145141602
    6. ':
' → logprob: -12.100458145141602
    7. ':return' → logprob: -12.475458145141602
    8. ' :' → logprob: -14.600458145141602
    9. '):
' → logprob: -15.475458145141602
    10. '.' → logprob: -15.850458145141602

Token 271: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006358316168189049
    2. '       ' → logprob: -7.375635623931885
    3. ' break' → logprob: -12.500636100769043
    4. 'break' → logprob: -13.250636100769043
    5. '	       ' → logprob: -13.750636100769043
    6. '   ' → logprob: -13.750636100769043
    7. '               ' → logprob: -15.000636100769043
    8. '          ' → logprob: -15.125636100769043
    9. '		' → logprob: -15.375636100769043
    10. '	break' → logprob: -15.625636100769043

Token 272: ' #' (ID: 1069)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.024053126573562622
    2. 'return' → logprob: -4.27405309677124
    3. ' break' → logprob: -4.77405309677124
    4. '           ' → logprob: -7.02405309677124
    5. '       ' → logprob: -7.64905309677124
    6. '	break' → logprob: -10.899053573608398
    7. ' return' → logprob: -11.774053573608398
    8. '   ' → logprob: -14.149053573608398
    9. '               ' → logprob: -14.274053573608398
    10. '_break' → logprob: -15.524053573608398

Token 273: ' Fin' (ID: 7772)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.00045962471631355584
    2. ' break' → logprob: -8.000459671020508
    3. 'return' → logprob: -9.000459671020508
    4. '   ' → logprob: -14.750459671020508
    5. '       ' → logprob: -15.000459671020508
    6. '	break' → logprob: -16.000459671020508
    7. '           ' → logprob: -18.625459671020508
    8. ' return' → logprob: -18.750459671020508
    9. '#' → logprob: -19.500459671020508
    10. 'Break' → logprob: -21.125459671020508

Token 274: ' des' (ID: 731)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.19313202798366547
    2. '       ' → logprob: -1.8181320428848267
    3. '
' → logprob: -4.818131923675537
    4. '               ' → logprob: -6.193131923675537
    5. 'break' → logprob: -6.818131923675537
    6. '            ' → logprob: -7.818131923675537
    7. '        
' → logprob: -8.068132400512695
    8. '            
' → logprob: -8.318132400512695
    9. '   ' → logprob: -8.318132400512695
    10. '        ' → logprob: -8.818132400512695

Token 275: ' données' (ID: 30580)
  Prédit: 'tests'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tests' → logprob: -0.9223781824111938
    2. 'd' → logprob: -1.4223781824111938
    3. 'program' → logprob: -2.4223780632019043
    4. 'entr' → logprob: -2.5473780632019043
    5. 'trait' → logprob: -3.2973780632019043
    6. 'ex' → logprob: -3.2973780632019043
    7. 'entrée' → logprob: -3.9223780632019043
    8. ' entr' → logprob: -4.047378063201904
    9. ' données' → logprob: -4.422378063201904
    10. 'l' → logprob: -4.797378063201904

Token 276: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007612305693328381
    2. '       ' → logprob: -4.882612228393555
    3. ' break' → logprob: -13.382612228393555
    4. ',' → logprob: -13.882612228393555
    5. '               ' → logprob: -13.882612228393555
    6. 'break' → logprob: -14.007612228393555
    7. '		' → logprob: -14.507612228393555
    8. '   ' → logprob: -14.757612228393555
    9. '	       ' → logprob: -14.757612228393555
    10. '          ' → logprob: -14.882612228393555

Token 277: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005237548612058163
    2. '       ' → logprob: -5.255237579345703
    3. '               ' → logprob: -14.005237579345703
    4. 'break' → logprob: -14.005237579345703
    5. ' break' → logprob: -14.255237579345703
    6. '          ' → logprob: -14.255237579345703
    7. '		' → logprob: -14.630237579345703
    8. '   ' → logprob: -16.005237579345703
    9. '	       ' → logprob: -16.255237579345703
    10. '        ' → logprob: -17.255237579345703

Token 278: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.007604493293911219
    2. ' break' → logprob: -5.507604598999023
    3. 'return' → logprob: -5.757604598999023
    4. '       ' → logprob: -8.257604598999023
    5. '           ' → logprob: -9.257604598999023
    6. '	break' → logprob: -12.382604598999023
    7. ' return' → logprob: -13.132604598999023
    8. '               ' → logprob: -15.507604598999023
    9. '_break' → logprob: -15.757604598999023
    10. '-break' → logprob: -17.382604598999023

Token 279: '
        
' (ID: 20417)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008224117569625378
    2. '        
' → logprob: -5.133224010467529
    3. 'pairs' → logprob: -6.758224010467529
    4. ' sums' → logprob: -7.633224010467529
    5. '    
' → logprob: -8.758224487304688
    6. 's' → logprob: -9.008224487304688
    7. '   ' → logprob: -9.008224487304688
    8. 'sum' → logprob: -9.383224487304688
    9. ' pairs' → logprob: -10.508224487304688
    10. 'total' → logprob: -11.133224487304688

Token 280: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005132715217769146
    2. 's' → logprob: -5.880132675170898
    3. 'pairs' → logprob: -6.755132675170898
    4. ' sums' → logprob: -8.130132675170898
    5. 'sum' → logprob: -8.505132675170898
    6. 'n' → logprob: -8.880132675170898
    7. '   ' → logprob: -8.880132675170898
    8. 'total' → logprob: -9.005132675170898
    9. 'p' → logprob: -9.880132675170898
    10. 'c' → logprob: -10.255132675170898

Token 281: ' #' (ID: 1069)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.848069965839386
    2. 'pairs' → logprob: -1.0980699062347412
    3. 'pair' → logprob: -2.098069906234741
    4. '       ' → logprob: -3.348069906234741
    5. 'n' → logprob: -3.723069906234741
    6. 'total' → logprob: -3.848069906234741
    7. 'p' → logprob: -4.09807014465332
    8. 'sum' → logprob: -4.84807014465332
    9. 'N' → logprob: -6.09807014465332
    10. 'nb' → logprob: -6.84807014465332

Token 282: ' Le' (ID: 2018)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8357749581336975
    2. 's' → logprob: -1.5857748985290527
    3. 'pairs' → logprob: -2.2107748985290527
    4. 'total' → logprob: -2.3357748985290527
    5. 'pair' → logprob: -2.3357748985290527
    6. 'N' → logprob: -3.7107748985290527
    7. 'nb' → logprob: -4.210774898529053
    8. 'p' → logprob: -5.335774898529053
    9. 'sum' → logprob: -5.835774898529053
    10. 'S' → logprob: -5.960774898529053

Token 283: ' nombre' (ID: 9733)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.43924427032470703
    2. '       ' → logprob: -1.189244270324707
    3. ' n' → logprob: -4.564244270324707
    4. 'nb' → logprob: -4.564244270324707
    5. 'num' → logprob: -4.814244270324707
    6. 's' → logprob: -5.189244270324707
    7. 'total' → logprob: -5.439244270324707
    8. 'N' → logprob: -6.189244270324707
    9. 'nombre' → logprob: -6.564244270324707
    10. 'pairs' → logprob: -6.564244270324707

Token 284: ' de' (ID: 334)
  Prédit: '_de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -0.2941722869873047
    2. '_des' → logprob: -2.5441722869873047
    3. '_n' → logprob: -3.0441722869873047
    4. 'de' → logprob: -3.6691722869873047
    5. '_pairs' → logprob: -3.6691722869873047
    6. '_s' → logprob: -3.7941722869873047
    7. '_total' → logprob: -4.169172286987305
    8. '       ' → logprob: -4.794172286987305
    9. '_nombre' → logprob: -5.294172286987305
    10. ' de' → logprob: -5.419172286987305

Token 285: ' sommes' (ID: 32024)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8928364515304565
    2. 'pairs' → logprob: -0.8928364515304565
    3. 'n' → logprob: -2.017836570739746
    4. 'p' → logprob: -3.642836570739746
    5. 'num' → logprob: -5.392836570739746
    6. 'pair' → logprob: -5.767836570739746
    7. 'som' → logprob: -5.892836570739746
    8. 'K' → logprob: -6.767836570739746
    9. 'numbers' → logprob: -7.017836570739746
    10. ' n' → logprob: -7.142836570739746

Token 286: ' données' (ID: 30580)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07234694808721542
    2. '=' → logprob: -3.5723469257354736
    3. '       ' → logprob: -5.072347164154053
    4. '_att' → logprob: -5.197347164154053
    5. '_a' → logprob: -5.322347164154053
    6. 'att' → logprob: -5.572347164154053
    7. 'n' → logprob: -5.947347164154053
    8. 'a' → logprob: -6.197347164154053
    9. '_pairs' → logprob: -6.322347164154053
    10. '_s' → logprob: -6.322347164154053

Token 287: ' est' (ID: 893)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22297169268131256
    2. ' =' → logprob: -2.0979716777801514
    3. 'n' → logprob: -3.3479716777801514
    4. '=' → logprob: -3.3479716777801514
    5. 'num' → logprob: -6.5979719161987305
    6. '=n' → logprob: -7.0979719161987305
    7. ',' → logprob: -7.3479719161987305
    8. ' n' → logprob: -7.5979719161987305
    9. 'expected' → logprob: -7.7229719161987305
    10. ' is' → logprob: -8.09797191619873

Token 288: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.6510840058326721
    2. ' K' → logprob: -0.7760840058326721
    3. ' (' → logprob: -4.401083946228027
    4. '(K' → logprob: -5.401083946228027
    5. '       ' → logprob: -7.276083946228027
    6. '   ' → logprob: -8.026083946228027
    7. 'num' → logprob: -8.526083946228027
    8. 'n' → logprob: -9.401083946228027
    9. ' n' → logprob: -9.526083946228027
    10. ' num' → logprob: -9.901083946228027

Token 289: '*(' (ID: 14793)
  Prédit: '*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.05679585784673691
    2. ' *' → logprob: -3.056795835494995
    3. '*' → logprob: -4.806796073913574
    4. '*K' → logprob: -15.181796073913574
    5. '   ' → logprob: -15.681796073913574
    6. ' ' → logprob: -15.931796073913574
    7. '*((' → logprob: -16.431795120239258
    8. ' ' → logprob: -16.556795120239258
    9. '  ' → logprob: -16.931795120239258
    10. '
' → logprob: -17.431795120239258

Token 290: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.008623320609331131
    2. '(K' → logprob: -4.758623123168945
    3. ' K' → logprob: -11.758623123168945
    4. ' (' → logprob: -14.633623123168945
    5. '	K' → logprob: -15.758623123168945
    6. '(' → logprob: -16.008623123168945
    7. '   ' → logprob: -16.633623123168945
    8. ')' → logprob: -16.883623123168945
    9. ' ' → logprob: -16.883623123168945
    10. '[K' → logprob: -17.883623123168945

Token 291: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.9981420336989686e-05
    2. ' -' → logprob: -11.125020027160645
    3. '*(' → logprob: -13.000020027160645
    4. '1' → logprob: -13.750020027160645
    5. '(' → logprob: -14.000020027160645
    6. '*' → logprob: -14.250020027160645
    7. ')' → logprob: -16.125019073486328
    8. '(K' → logprob: -16.250019073486328
    9. '```' → logprob: -16.250019073486328
    10. ' ' → logprob: -17.250019073486328

Token 292: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -13.250003814697266
    3. '```' → logprob: -13.375003814697266
    4. '-' → logprob: -14.250003814697266
    5. '   ' → logprob: -16.125003814697266
    6. '(' → logprob: -16.500003814697266
    7. ')' → logprob: -17.562503814697266
    8. '
' → logprob: -17.562503814697266
    9. '2' → logprob: -17.625003814697266
    10. '۱' → logprob: -18.062503814697266

Token 293: ')//' (ID: 60375)
  Prédit: ')//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')//' → logprob: -0.00426110764965415
    2. ')' → logprob: -5.504261016845703
    3. '//' → logprob: -8.629261016845703
    4. ')/' → logprob: -13.129261016845703
    5. '   ' → logprob: -14.254261016845703
    6. ' )' → logprob: -15.004261016845703
    7. ' //' → logprob: -15.379261016845703
    8. ')#' → logprob: -15.379261016845703
    9. ')>>' → logprob: -15.879261016845703
    10. '       ' → logprob: -16.004261016845703

Token 294: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '```' → logprob: -17.250001907348633
    4. '   ' → logprob: -17.625001907348633
    5. '
' → logprob: -19.000001907348633
    6. '۲' → logprob: -20.125001907348633
    7. '２' → logprob: -21.000001907348633
    8. '
' → logprob: -21.125001907348633
    9. '  ' → logprob: -21.375001907348633
    10. '=' → logprob: -21.562501907348633

Token 295: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00576014956459403
    2. 'n' → logprob: -5.630760192871094
    3. 's' → logprob: -7.380760192871094
    4. 'sum' → logprob: -7.755760192871094
    5. 'pairs' → logprob: -7.880760192871094
    6. ' n' → logprob: -8.630760192871094
    7. ' sums' → logprob: -9.380760192871094
    8. 'num' → logprob: -9.380760192871094
    9. '        
' → logprob: -9.505760192871094
    10. ',' → logprob: -9.630760192871094

Token 296: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001105683040805161
    2. '        
' → logprob: -7.751105785369873
    3. 'pairs' → logprob: -8.501105308532715
    4. 's' → logprob: -9.251105308532715
    5. ' sums' → logprob: -9.376105308532715
    6. 'n' → logprob: -9.376105308532715
    7. 'sum' → logprob: -9.501105308532715
    8. ' pairs' → logprob: -10.376105308532715
    9. ',' → logprob: -10.501105308532715
    10. '   ' → logprob: -11.251105308532715

Token 297: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.36563292145729065
    2. 'N' → logprob: -1.9906328916549683
    3. '   ' → logprob: -2.615633010864258
    4. ' n' → logprob: -3.240633010864258
    5. 'num' → logprob: -3.990633010864258
    6. 'nb' → logprob: -4.115633010864258
    7. ' N' → logprob: -5.365633010864258
    8. 'pair' → logprob: -5.365633010864258
    9. ' sums' → logprob: -6.240633010864258
    10. 'pairs' → logprob: -6.490633010864258

Token 298: '_pairs' (ID: 90005)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22287419438362122
    2. '_s' → logprob: -2.347874164581299
    3. '_sum' → logprob: -2.847874164581299
    4. '_' → logprob: -3.597874164581299
    5. '=' → logprob: -4.347874164581299
    6. '_pairs' → logprob: -6.097874164581299
    7. '_num' → logprob: -7.347874164581299
    8. '_n' → logprob: -7.472874164581299
    9. '_numbers' → logprob: -7.472874164581299
    10. '_values' → logprob: -7.722874164581299

Token 299: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048589982092380524
    2. '=' → logprob: -3.0485899448394775
    3. '   ' → logprob: -13.423589706420898
    4. '    ' → logprob: -14.423589706420898
    5. ')' → logprob: -15.173589706420898
    6. '=int' → logprob: -15.798589706420898
    7. ' ' → logprob: -16.1735897064209
    8. '       ' → logprob: -17.2985897064209
    9. '        ' → logprob: -17.5485897064209
    10. ' ' → logprob: -17.6735897064209

Token 300: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.02989616058766842
    2. ' K' → logprob: -3.5298962593078613
    3. '(K' → logprob: -8.904895782470703
    4. '   ' → logprob: -12.154895782470703
    5. ' (' → logprob: -12.279895782470703
    6. '(' → logprob: -17.029895782470703
    7. ' ' → logprob: -17.279895782470703
    8. '	K' → logprob: -17.654895782470703
    9. '  ' → logprob: -18.154895782470703
    10. '    ' → logprob: -19.654895782470703

Token 301: ' *' (ID: 425)
  Prédit: '*('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.032064881175756454
    2. ' *' → logprob: -4.032064914703369
    3. '*' → logprob: -4.282064914703369
    4. '*K' → logprob: -12.907064437866211
    5. ' *(' → logprob: -13.282064437866211
    6. '*((' → logprob: -15.657064437866211
    7. ')*(' → logprob: -16.78206443786621
    8. ' ' → logprob: -18.40706443786621
    9. '**' → logprob: -18.40706443786621
    10. '   ' → logprob: -18.78206443786621

Token 302: ' (' (ID: 350)
  Prédit: '(K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.006751612760126591
    2. ' (' → logprob: -5.006751537322998
    3. '   ' → logprob: -11.131752014160156
    4. '(' → logprob: -11.756752014160156
    5. '(k' → logprob: -12.131752014160156
    6. ' ' → logprob: -13.131752014160156
    7. '(Q' → logprob: -13.756752014160156
    8. '
' → logprob: -13.881752014160156
    9. '(KERN' → logprob: -14.006752014160156
    10. '  ' → logprob: -14.131752014160156

Token 303: 'K' (ID: 42)
  Prédit: '(K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -3.91732100979425e-05
    2. ' (' → logprob: -10.375039100646973
    3. '   ' → logprob: -12.875039100646973
    4. '(' → logprob: -13.375039100646973
    5. 'K' → logprob: -13.750039100646973
    6. ')' → logprob: -13.875039100646973
    7. '(k' → logprob: -14.875039100646973
    8. '(
' → logprob: -15.000039100646973
    9. '(KERN' → logprob: -15.125039100646973
    10. ' ' → logprob: -15.250039100646973

Token 304: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0019318510312587023
    2. ' -' → logprob: -6.251931667327881
    3. '1' → logprob: -13.251932144165039
    4. ')' → logprob: -13.876932144165039
    5. ' ' → logprob: -15.626932144165039
    6. '   ' → logprob: -16.12693214416504
    7. '[' → logprob: -16.37693214416504
    8. '-)' → logprob: -17.00193214416504
    9. ')-' → logprob: -17.00193214416504
    10. '–' → logprob: -17.25193214416504

Token 305: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.375001907348633
    3. '   ' → logprob: -15.875001907348633
    4. ')' → logprob: -17.125001907348633
    5. '       ' → logprob: -17.125001907348633
    6. '           ' → logprob: -17.625001907348633
    7. '```' → logprob: -17.750001907348633
    8. '2' → logprob: -19.250001907348633
    9. '  ' → logprob: -20.000001907348633
    10. '۱' → logprob: -20.375001907348633

Token 306: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -13.750000953674316
    3. '   ' → logprob: -16.375001907348633
    4. '```' → logprob: -16.562501907348633
    5. '2' → logprob: -17.062501907348633
    6. ')' → logprob: -17.750001907348633
    7. '۱' → logprob: -17.812501907348633
    8. '

' → logprob: -18.062501907348633
    9. '
' → logprob: -18.250001907348633
    10. '১' → logprob: -18.687501907348633

Token 307: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06209630146622658
    2. ')//' → logprob: -2.812096357345581
    3. '//' → logprob: -9.31209659576416
    4. ' )' → logprob: -10.43709659576416
    5. ' //' → logprob: -12.43709659576416
    6. '   ' → logprob: -13.18709659576416
    7. '       ' → logprob: -14.18709659576416
    8. ')#' → logprob: -14.31209659576416
    9. ')
' → logprob: -14.68709659576416
    10. '()' → logprob: -15.18709659576416

Token 308: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.0011940367985516787
    2. ' //' → logprob: -6.751194000244141
    3. '       ' → logprob: -11.62619400024414
    4. ')' → logprob: -12.25119400024414
    5. '#' → logprob: -12.37619400024414
    6. '()' → logprob: -13.00119400024414
    7. '   ' → logprob: -13.75119400024414
    8. ')//' → logprob: -13.75119400024414
    9. '```' → logprob: -14.50119400024414
    10. '2' → logprob: -14.62619400024414

Token 309: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.107425062713446e-06
    2. ' ' → logprob: -11.875006675720215
    3. '   ' → logprob: -16.62500762939453
    4. '```' → logprob: -18.00000762939453
    5. '
' → logprob: -19.50000762939453
    6. '  ' → logprob: -19.75000762939453
    7. '       ' → logprob: -20.00000762939453
    8. '    ' → logprob: -20.12500762939453
    9. '۲' → logprob: -20.87500762939453
    10. '
' → logprob: -21.25000762939453

Token 310: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '   ' → logprob: -18.625
    4. '۲' → logprob: -18.875
    5. '```' → logprob: -19.375
    6. '２' → logprob: -19.625
    7. '২' → logprob: -20.0625
    8. '२' → logprob: -20.25
    9. '
' → logprob: -20.4375
    10. '1' → logprob: -20.75

Token 311: '
        
' (ID: 20417)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016999129205942154
    2. 'sum' → logprob: -5.266999244689941
    3. 's' → logprob: -5.516999244689941
    4. 'pairs' → logprob: -5.766999244689941
    5. '        
' → logprob: -6.141999244689941
    6. ' sums' → logprob: -6.641999244689941
    7. 'total' → logprob: -7.266999244689941
    8. ' pairs' → logprob: -9.641999244689941
    9. '
' → logprob: -9.641999244689941
    10. '   ' → logprob: -9.891999244689941

Token 312: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022345559671521187
    2. 's' → logprob: -4.147345542907715
    3. 'pairs' → logprob: -5.772345542907715
    4. 'sum' → logprob: -6.272345542907715
    5. ' sums' → logprob: -7.647345542907715
    6. 'total' → logprob: -7.647345542907715
    7. 'pair' → logprob: -8.897345542907715
    8. '   ' → logprob: -10.022345542907715
    9. ' pairs' → logprob: -10.272345542907715
    10. 'p' → logprob: -10.522345542907715

Token 313: ' #' (ID: 1069)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8401286602020264
    2. 'pairs' → logprob: -1.0901286602020264
    3. 'pair' → logprob: -1.7151286602020264
    4. 'total' → logprob: -3.5901286602020264
    5. 'sum' → logprob: -3.8401286602020264
    6. 'p' → logprob: -6.7151288986206055
    7. 'tot' → logprob: -7.4651288986206055
    8. 'values' → logprob: -8.090128898620605
    9. '   ' → logprob: -8.215128898620605
    10. 'som' → logprob: -8.965128898620605

Token 314: ' On' (ID: 2160)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5922853946685791
    2. 'total' → logprob: -1.217285394668579
    3. 'pairs' → logprob: -2.467285394668579
    4. 'pair' → logprob: -3.217285394668579
    5. 'sum' → logprob: -3.717285394668579
    6. ' sums' → logprob: -7.96728515625
    7. ' total' → logprob: -8.21728515625
    8. 'tot' → logprob: -8.21728515625
    9. 'p' → logprob: -8.46728515625
    10. 'values' → logprob: -8.96728515625

Token 315: ' va' (ID: 3423)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025448452681303024
    2. '   ' → logprob: -5.525448322296143
    3. 's' → logprob: -5.775448322296143
    4. 'sum' → logprob: -5.775448322296143
    5. '=' → logprob: -5.900448322296143
    6. 'total' → logprob: -6.025448322296143
    7. ' total' → logprob: -6.025448322296143
    8. ' sums' → logprob: -6.400448322296143
    9. ' sum' → logprob: -6.650448322296143
    10. ' =' → logprob: -6.775448322296143

Token 316: ' lire' (ID: 46082)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8612160682678223
    2. ' accum' → logprob: -0.9862160682678223
    3. ' lire' → logprob: -3.1112160682678223
    4. ' total' → logprob: -3.4862160682678223
    5. '       ' → logprob: -3.7362160682678223
    6. 'sum' → logprob: -3.8612160682678223
    7. ' sum' → logprob: -4.111216068267822
    8. 'acc' → logprob: -4.236216068267822
    9. ' accumulate' → logprob: -4.861216068267822
    10. ' somme' → logprob: -5.111216068267822

Token 317: ' toutes' (ID: 17502)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -1.1013069152832031
    2. ' la' → logprob: -1.8513069152832031
    3. 'sum' → logprob: -1.9763069152832031
    4. 'les' → logprob: -2.101306915283203
    5. ' sums' → logprob: -2.601306915283203
    6. 's' → logprob: -2.851306915283203
    7. 'total' → logprob: -3.476306915283203
    8. ' total' → logprob: -3.851306915283203
    9. '       ' → logprob: -4.351306915283203
    10. ' sum' → logprob: -4.851306915283203

Token 318: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.03916344419121742
    2. 'les' → logprob: -3.91416335105896
    3. '_' → logprob: -4.164163589477539
    4. 's' → logprob: -7.289163589477539
    5. '   ' → logprob: -7.414163589477539
    6. ' ' → logprob: -7.789163589477539
    7. ' _' → logprob: -8.039163589477539
    8. '_sum' → logprob: -8.789163589477539
    9. '()' → logprob: -9.039163589477539
    10. '    ' → logprob: -9.539163589477539

Token 319: ' sommes' (ID: 32024)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8982669711112976
    2. ' sommes' → logprob: -1.5232670307159424
    3. ' p' → logprob: -1.5232670307159424
    4. 'p' → logprob: -2.5232670307159424
    5. 'val' → logprob: -3.6482670307159424
    6. ' valeurs' → logprob: -4.148266792297363
    7. 'som' → logprob: -4.273266792297363
    8. ' ' → logprob: -5.648266792297363
    9. 'pairs' → logprob: -5.773266792297363
    10. ' pairs' → logprob: -6.148266792297363

Token 320: ' suivantes' (ID: 106173)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.76759916334413e-05
    2. ',' → logprob: -11.000077247619629
    3. '        
' → logprob: -11.250077247619629
    4. 's' → logprob: -11.375077247619629
    5. 'sum' → logprob: -11.500077247619629
    6. 'pairs' → logprob: -12.375077247619629
    7. ' sums' → logprob: -12.500077247619629
    8. 'total' → logprob: -13.375077247619629
    9. ' pairs' → logprob: -13.625077247619629
    10. '   ' → logprob: -13.750077247619629

Token 321: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00016551809676457196
    2. ',' → logprob: -9.125165939331055
    3. '        
' → logprob: -11.000165939331055
    4. 's' → logprob: -11.875165939331055
    5. ' sums' → logprob: -12.125165939331055
    6. 'pairs' → logprob: -12.375165939331055
    7. 'sum' → logprob: -12.625165939331055
    8. ' for' → logprob: -13.000165939331055
    9. ' pairs' → logprob: -13.250165939331055
    10. 'for' → logprob: -13.937665939331055

Token 322: ' elles' (ID: 36156)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016662368550896645
    2. ' sums' → logprob: -4.39166259765625
    3. 's' → logprob: -6.51666259765625
    4. 'sum' → logprob: -6.89166259765625
    5. ' pairs' → logprob: -7.76666259765625
    6. 'pairs' → logprob: -8.14166259765625
    7. ' values' → logprob: -8.51666259765625
    8. 'values' → logprob: -8.76666259765625
    9. ' sum' → logprob: -9.01666259765625
    10. ' totals' → logprob: -9.51666259765625

Token 323: ' peuvent' (ID: 21321)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8001992702484131
    2. 's' → logprob: -1.300199270248413
    3. 'are' → logprob: -3.175199270248413
    4. ' =' → logprob: -3.425199270248413
    5. ' sont' → logprob: -3.800199270248413
    6. ' are' → logprob: -3.800199270248413
    7. 'contin' → logprob: -4.050199508666992
    8. '#' → logprob: -4.300199508666992
    9. '=' → logprob: -4.425199508666992
    10. ' seront' → logprob: -4.550199508666992

Token 324: ' tenir' (ID: 57709)
  Prédit: 'être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'être' → logprob: -0.14099165797233582
    2. ' être' → logprob: -2.890991687774658
    3. 's' → logprob: -3.265991687774658
    4. 'êtres' → logprob: -4.265991687774658
    5. 'etre' → logprob: -5.140991687774658
    6. 'êt' → logprob: -5.515991687774658
    7. 'se' → logprob: -6.140991687774658
    8. ' s' → logprob: -6.140991687774658
    9. 'Ê' → logprob: -7.265991687774658
    10. 'venir' → logprob: -7.265991687774658

Token 325: ' sur' (ID: 1512)
  Prédit: 'sur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sur' → logprob: -0.057103049010038376
    2. ' sur' → logprob: -2.932103157043457
    3. 'dans' → logprob: -6.432103157043457
    4. '_sur' → logprob: -8.682103157043457
    5. 'pas' → logprob: -9.432103157043457
    6. 'plus' → logprob: -9.557103157043457
    7. 'import' → logprob: -9.932103157043457
    8. ' dans' → logprob: -10.057103157043457
    9. 'on' → logprob: -10.182103157043457
    10. ' on' → logprob: -11.182103157043457

Token 326: ' plusieurs' (ID: 20875)
  Prédit: ' plusieurs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plusieurs' → logprob: -0.28391242027282715
    2. 'plus' → logprob: -1.5339124202728271
    3. ' plus' → logprob: -3.533912420272827
    4. ' multiple' → logprob: -7.033912658691406
    5. ' une' → logprob: -7.533912658691406
    6. 'multiple' → logprob: -7.908912658691406
    7. '   ' → logprob: -9.033912658691406
    8. 'la' → logprob: -9.158912658691406
    9. ' Plusieurs' → logprob: -9.908912658691406
    10. 'une' → logprob: -9.908912658691406

Token 327: ' lignes' (ID: 81687)
  Prédit: ' lignes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lignes' → logprob: -0.4631757140159607
    2. 'l' → logprob: -1.2131757736206055
    3. ' lines' → logprob: -3.3381757736206055
    4. 'lines' → logprob: -3.4631757736206055
    5. '   ' → logprob: -5.2131757736206055
    6. 'ligne' → logprob: -7.5881757736206055
    7. 'line' → logprob: -9.088175773620605
    8. 'li' → logprob: -9.088175773620605
    9. ' line' → logprob: -9.338175773620605
    10. ' ligne' → logprob: -9.713175773620605

Token 328: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008546437602490187
    2. ',' → logprob: -7.6258544921875
    3. 'total' → logprob: -9.0008544921875
    4. 's' → logprob: -9.6258544921875
    5. 'sum' → logprob: -10.0008544921875
    6. ' sums' → logprob: -10.3758544921875
    7. '        
' → logprob: -10.7508544921875
    8. 'tokens' → logprob: -11.1258544921875
    9. ' total' → logprob: -11.8758544921875
    10. 'pairs' → logprob: -11.8758544921875

Token 329: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.44706009957008e-05
    2. ',' → logprob: -10.25008487701416
    3. '        
' → logprob: -11.25008487701416
    4. 'total' → logprob: -11.50008487701416
    5. 'sum' → logprob: -12.00008487701416
    6. 's' → logprob: -12.25008487701416
    7. '      ' → logprob: -12.75008487701416
    8. ' sums' → logprob: -13.12508487701416
    9. 'tokens' → logprob: -13.37508487701416
    10. '        ' → logprob: -13.50008487701416

Token 330: ' vals' (ID: 58985)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7591191530227661
    2. 's' → logprob: -1.3841191530227661
    3. ' sums' → logprob: -2.0091190338134766
    4. 'sum' → logprob: -3.3841190338134766
    5. 'total' → logprob: -3.6341190338134766
    6. 'pairs' → logprob: -3.7591190338134766
    7. 'values' → logprob: -3.8841190338134766
    8. ' total' → logprob: -4.509119033813477
    9. ' values' → logprob: -4.634119033813477
    10. ' pairs' → logprob: -5.134119033813477

Token 331: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04332013055682182
    2. '=' → logprob: -3.1683201789855957
    3. '=[]' → logprob: -8.168319702148438
    4. '   ' → logprob: -11.043319702148438
    5. '=[]
' → logprob: -11.293319702148438
    6. '=[]
' → logprob: -13.543319702148438
    7. ' ' → logprob: -13.668319702148438
    8. '    ' → logprob: -13.668319702148438
    9. '_sum' → logprob: -13.793319702148438
    10. '       ' → logprob: -14.168319702148438

Token 332: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0009233691962435842
    2. ' []' → logprob: -7.000923156738281
    3. 'list' → logprob: -11.875923156738281
    4. '[]
' → logprob: -12.750923156738281
    5. '[' → logprob: -13.750923156738281
    6. '[]

' → logprob: -15.000923156738281
    7. '[]>' → logprob: -15.375923156738281
    8. '[]}' → logprob: -15.625923156738281
    9. '=[]' → logprob: -16.12592315673828
    10. '[]"' → logprob: -16.12592315673828

Token 333: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008737052557989955
    2. 'while' → logprob: -7.625873565673828
    3. ' while' → logprob: -8.000873565673828
    4. '        
' → logprob: -10.000873565673828
    5. '   ' → logprob: -12.875873565673828
    6. '	while' → logprob: -13.625873565673828
    7. '<|end|>' → logprob: -14.750873565673828
    8. ',' → logprob: -15.750873565673828
    9. '	   ' → logprob: -16.250873565673828
    10. '  
' → logprob: -16.625873565673828

Token 334: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.047460149973630905
    2. '       ' → logprob: -3.5474600791931152
    3. ' while' → logprob: -4.047460079193115
    4. 'total' → logprob: -10.172460556030273
    5. 'count' → logprob: -10.672460556030273
    6. '   ' → logprob: -11.797460556030273
    7. '	while' → logprob: -11.922460556030273
    8. 'for' → logprob: -12.172460556030273
    9. ' total' → logprob: -13.547460556030273
    10. 'read' → logprob: -13.672460556030273

Token 335: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0031793788075447083
    2. ' len' → logprob: -5.753179550170898
    3. '(len' → logprob: -13.628179550170898
    4. '	len' → logprob: -14.878179550170898
    5. 'sum' → logprob: -15.628179550170898
    6. '   ' → logprob: -17.0031795501709
    7. '=len' → logprob: -18.8781795501709
    8. ' ' → logprob: -19.1281795501709
    9. 'n' → logprob: -19.3781795501709
    10. ',len' → logprob: -19.8781795501709

Token 336: '(vals' (ID: 167053)
  Prédit: '(vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(vals' → logprob: -1.0280383548888494e-06
    2. 'vals' → logprob: -14.375000953674316
    3. '(' → logprob: -15.750000953674316
    4. ' vals' → logprob: -16.125001907348633
    5. '(val' → logprob: -16.625001907348633
    6. '(values' → logprob: -19.000001907348633
    7. '_vals' → logprob: -19.750001907348633
    8. '(v' → logprob: -20.125001907348633
    9. 'Vals' → logprob: -20.500001907348633
    10. '(nums' → logprob: -21.000001907348633

Token 337: ')' (ID: 8)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.2050253301858902
    2. ' <' → logprob: -1.705025315284729
    3. ')' → logprob: -5.8300251960754395
    4. ')<' → logprob: -7.4550251960754395
    5. '<n' → logprob: -10.080025672912598
    6. '<K' → logprob: -10.580025672912598
    7. '<len' → logprob: -12.330025672912598
    8. '()<' → logprob: -12.455025672912598
    9. ' ' → logprob: -12.580025672912598
    10. '<num' → logprob: -13.330025672912598

Token 338: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.2522314786911011
    2. ' <' → logprob: -1.502231478691101
    3. '<n' → logprob: -8.25223159790039
    4. '<K' → logprob: -10.50223159790039
    5. '<num' → logprob: -12.37723159790039
    6. '<int' → logprob: -13.25223159790039
    7. '<len' → logprob: -13.37723159790039
    8. ' ' → logprob: -13.50223159790039
    9. '<size' → logprob: -13.50223159790039
    10. '<class' → logprob: -14.00223159790039

Token 339: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.006715370807796717
    2. ' n' → logprob: -5.006715297698975
    3. '	n' → logprob: -18.131715774536133
    4. ')n' → logprob: -19.006715774536133
    5. '(n' → logprob: -19.131715774536133
    6. '[n' → logprob: -19.131715774536133
    7. '_n' → logprob: -19.506715774536133
    8. ' ' → logprob: -21.131715774536133
    9. 'n't' → logprob: -21.756715774536133
    10. '=n' → logprob: -21.881715774536133

Token 340: '_pairs' (ID: 90005)
  Prédit: '_pairs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pairs' → logprob: -4.990154047845863e-05
    2. 'pairs' → logprob: -10.375049591064453
    3. '_' → logprob: -11.125049591064453
    4. '_pair' → logprob: -13.875049591064453
    5. ' _' → logprob: -14.000049591064453
    6. '_vals' → logprob: -14.375049591064453
    7. '_p' → logprob: -15.250049591064453
    8. ' pairs' → logprob: -15.250049591064453
    9. ')_' → logprob: -15.625049591064453
    10. 's' → logprob: -16.125049591064453

Token 341: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007890166714787483
    2. ':
' → logprob: -4.882890224456787
    3. ' :' → logprob: -8.882889747619629
    4. '):' → logprob: -9.257889747619629
    5. ':
' → logprob: -10.882889747619629
    6. '):
' → logprob: -11.632889747619629
    7. '   ' → logprob: -12.007889747619629
    8. '       ' → logprob: -12.632889747619629
    9. ' :
' → logprob: -13.132889747619629
    10. ':

' → logprob: -13.382889747619629

Token 342: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0013708343030884862
    2. '            
' → logprob: -7.251370906829834
    3. ' line' → logprob: -7.501370906829834
    4. 'line' → logprob: -10.626370429992676
    5. 'tokens' → logprob: -11.376370429992676
    6. 's' → logprob: -11.501370429992676
    7. ':' → logprob: -12.126370429992676
    8. '	       ' → logprob: -12.126370429992676
    9. ' s' → logprob: -12.251370429992676
    10. ',' → logprob: -12.376370429992676

Token 343: ' vals' (ID: 58985)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.7370476722717285
    2. ' parts' → logprob: -1.2370476722717285
    3. '           ' → logprob: -1.9870476722717285
    4. 'line' → logprob: -3.2370476722717285
    5. ' vals' → logprob: -3.7370476722717285
    6. 'vals' (adapté à ' vals') → logprob: -4.2370476722717285
    7. 'parts' → logprob: -5.2370476722717285
    8. '       ' → logprob: -6.3620476722717285
    9. ' nums' → logprob: -6.4870476722717285
    10. 'nums' → logprob: -6.4870476722717285

Token 344: '_line' (ID: 14418)
  Prédit: '.extend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.extend' → logprob: -0.011190700344741344
    2. '+=' → logprob: -5.261190891265869
    3. '.' → logprob: -5.761190891265869
    4. ' +=' → logprob: -5.886190891265869
    5. ' .' → logprob: -11.886190414428711
    6. '+' → logprob: -12.511190414428711
    7. 'extend' → logprob: -13.136190414428711
    8. '+.' → logprob: -15.136190414428711
    9. '+=(' → logprob: -15.386190414428711
    10. '_line' → logprob: -15.511190414428711

Token 345: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602722555398941
    2. '=' → logprob: -1.910272240638733
    3. ' +=' → logprob: -10.410272598266602
    4. '+=' → logprob: -11.785272598266602
    5. '.extend' → logprob: -11.910272598266602
    6. '=sys' → logprob: -14.035272598266602
    7. '=line' → logprob: -14.160272598266602
    8. '=input' → logprob: -14.160272598266602
    9. 's' → logprob: -14.285272598266602
    10. '.=' → logprob: -14.910272598266602

Token 346: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0157120730727911
    2. 'list' → logprob: -4.265712261199951
    3. ' sys' → logprob: -6.765712261199951
    4. 'input' → logprob: -7.890712261199951
    5. ' list' → logprob: -11.265711784362793
    6. 'next' → logprob: -11.890711784362793
    7. '   ' → logprob: -14.890711784362793
    8. '(sys' → logprob: -15.265711784362793
    9. '=sys' → logprob: -15.765711784362793
    10. '	sys' → logprob: -16.14071273803711

Token 347: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00010235115041723475
    2. 'stdin' → logprob: -9.500102043151855
    3. '.' → logprob: -11.000102043151855
    4. '.stdout' → logprob: -11.750102043151855
    5. '.readline' → logprob: -13.750102043151855
    6. '.std' → logprob: -13.750102043151855
    7. '.argv' → logprob: -15.250102043151855
    8. ' stdin' → logprob: -15.500102043151855
    9. '.stderr' → logprob: -16.375102996826172
    10. '(stdin' → logprob: -16.750102996826172

Token 348: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -4.596781946020201e-05
    2. '.' → logprob: -10.000045776367188
    3. '.readlines' → logprob: -15.000045776367188
    4. '().' → logprob: -16.500045776367188
    5. '.read' → logprob: -17.000045776367188
    6. ' readline' → logprob: -17.625045776367188
    7. ' .' → logprob: -19.375045776367188
    8. '   ' → logprob: -19.500045776367188
    9. '.stdin' → logprob: -19.625045776367188
    10. '.rstrip' → logprob: -20.125045776367188

Token 349: '()
' (ID: 1234)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.360996485454962e-05
    2. '()' → logprob: -9.7500638961792
    3. '           ' → logprob: -12.7500638961792
    4. '()
' → logprob: -13.0000638961792
    5. '.strip' → logprob: -16.500062942504883
    6. '()).' → logprob: -16.875062942504883
    7. ' ().' → logprob: -17.750062942504883
    8. '.split' → logprob: -17.875062942504883
    9. '.' → logprob: -18.625062942504883
    10. '               ' → logprob: -18.625062942504883

Token 350: '           ' (ID: 352)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0002795703476294875
    2. '           ' → logprob: -9.000279426574707
    3. '.strip' → logprob: -9.250279426574707
    4. '.split' → logprob: -10.375279426574707
    5. '.' → logprob: -11.250279426574707
    6. '.rstrip' → logprob: -11.875279426574707
    7. '()' → logprob: -12.375279426574707
    8. ' .' → logprob: -13.625279426574707
    9. '("").' → logprob: -13.625279426574707
    10. '('').' → logprob: -14.250279426574707

Token 351: ' if' (ID: 538)
  Prédit: ' vals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vals' → logprob: -0.3959229588508606
    2. 'vals' → logprob: -1.2709228992462158
    3. '           ' → logprob: -3.395922899246216
    4. ' if' → logprob: -4.645923137664795
    5. 'if' (adapté à ' if') → logprob: -6.145923137664795
    6. ' values' → logprob: -8.145922660827637
    7. 'values' → logprob: -8.395922660827637
    8. '       ' → logprob: -8.645922660827637
    9. '(vals' → logprob: -8.895922660827637
    10. '_vals' → logprob: -9.645922660827637

Token 352: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.16024941205978394
    2. 'not' → logprob: -1.9102494716644287
    3. 'vals' → logprob: -10.660249710083008
    4. ' vals' → logprob: -13.910249710083008
    5. '	not' → logprob: -14.160249710083008
    6. 'n' → logprob: -17.285249710083008
    7. '```' → logprob: -17.660249710083008
    8. ' ' → logprob: -17.910249710083008
    9. '_not' → logprob: -18.160249710083008
    10. '(not' → logprob: -18.410249710083008

Token 353: ' vals' (ID: 58985)
  Prédit: 'vals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.005234832875430584
    2. ' vals' → logprob: -5.255234718322754
    3. 'val' → logprob: -14.380234718322754
    4. '(vals' → logprob: -14.880234718322754
    5. 'values' → logprob: -16.13023567199707
    6. 'v' → logprob: -17.13023567199707
    7. '_vals' → logprob: -18.00523567199707
    8. 'vall' → logprob: -18.00523567199707
    9. 'Vals' → logprob: -18.13023567199707
    10. ' ' → logprob: -18.25523567199707

Token 354: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -1.7432603272027336e-06
    2. 'line' → logprob: -13.750001907348633
    3. '_LINE' → logprob: -14.875001907348633
    4. ' line' → logprob: -17.250001907348633
    5. '#line' → logprob: -17.250001907348633
    6. '_lines' → logprob: -17.375001907348633
    7. '=' → logprob: -17.375001907348633
    8. 'Line' → logprob: -17.375001907348633
    9. '=line' → logprob: -17.625001907348633
    10. '_' → logprob: -17.750001907348633

Token 355: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.02023586444556713
    2. ':' → logprob: -4.145236015319824
    3. '.strip' → logprob: -5.520236015319824
    4. '               ' → logprob: -8.770236015319824
    5. '):
' → logprob: -12.020236015319824
    6. ':return' → logprob: -12.270236015319824
    7. ' :
' → logprob: -12.520236015319824
    8. '           ' → logprob: -12.645236015319824
    9. '   ' → logprob: -12.770236015319824
    10. ' or' → logprob: -12.895236015319824

Token 356: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -5.347765181795694e-05
    2. ' break' → logprob: -10.125053405761719
    3. '           ' → logprob: -11.625053405761719
    4. ',' → logprob: -14.000053405761719
    5. '                
' → logprob: -14.250053405761719
    6. '	           ' → logprob: -14.250053405761719
    7. ':
' → logprob: -14.875053405761719
    8. 'break' → logprob: -15.000053405761719
    9. '              ' → logprob: -15.250053405761719
    10. '                   ' → logprob: -15.625053405761719

Token 357: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.058370813727378845
    2. 'break' (adapté à ' break') → logprob: -3.30837082862854
    3. '           ' → logprob: -4.433370590209961
    4. '               ' → logprob: -4.808370590209961
    5. '	break' → logprob: -9.433370590209961
    6. '   ' → logprob: -13.183370590209961
    7. '                   ' → logprob: -13.433370590209961
    8. ' ' → logprob: -13.683370590209961
    9. '       ' → logprob: -13.808370590209961
    10. '_break' → logprob: -13.808370590209961

Token 358: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0021460969001054764
    2. '            
' → logprob: -6.877146244049072
    3. '
' → logprob: -7.127146244049072
    4. '    
' → logprob: -9.252145767211914
    5. '  
' → logprob: -9.377145767211914
    6. ' 
' → logprob: -10.377145767211914
    7. '        
' → logprob: -10.502145767211914
    8. '		' → logprob: -11.502145767211914
    9. '       ' → logprob: -11.627145767211914
    10. ',' → logprob: -11.752145767211914

Token 359: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009009773493744433
    2. '            
' → logprob: -7.125900745391846
    3. '
' → logprob: -9.875901222229004
    4. '    
' → logprob: -12.125901222229004
    5. '        
' → logprob: -12.250901222229004
    6. ',' → logprob: -12.375901222229004
    7. '               ' → logprob: -12.500901222229004
    8. '           
' → logprob: -12.750901222229004
    9. '  
' → logprob: -12.875901222229004
    10. '<|end|>' → logprob: -13.000901222229004

Token 360: ' vals' (ID: 58985)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.625660240650177
    2. ' vals' → logprob: -1.2506601810455322
    3. 'vals' (adapté à ' vals') → logprob: -2.1256601810455322
    4. '       ' → logprob: -2.8756601810455322
    5. ' values' → logprob: -6.875660419464111
    6. '   ' → logprob: -7.625660419464111
    7. 'values' → logprob: -8.125659942626953
    8. '(vals' → logprob: -8.625659942626953
    9. '_vals' → logprob: -8.625659942626953
    10. ' parts' → logprob: -9.000659942626953

Token 361: '.extend' (ID: 34151)
  Prédit: '.extend'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.extend' → logprob: -0.09237230569124222
    2. ' +=' → logprob: -3.092372417449951
    3. '+=' → logprob: -3.342372417449951
    4. '.' → logprob: -5.217372417449951
    5. ' .' → logprob: -7.092372417449951
    6. '_vals' → logprob: -7.217372417449951
    7. '           ' → logprob: -8.717371940612793
    8. '.=' → logprob: -9.342371940612793
    9. '=' → logprob: -9.592371940612793
    10. 's' → logprob: -10.467371940612793

Token 362: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.007144290488213301
    2. '(list' → logprob: -5.757144451141357
    3. '(int' → logprob: -6.382144451141357
    4. '(' → logprob: -6.632144451141357
    5. '(vals' → logprob: -7.507144451141357
    6. '([' → logprob: -7.882144451141357
    7. '(val' → logprob: -11.1321439743042
    8. ' map' → logprob: -12.7571439743042
    9. 'map' → logprob: -12.8821439743042
    10. '(
' → logprob: -13.3821439743042

Token 363: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -5.514650183613412e-05
    2. 'int' → logprob: -10.000055313110352
    3. '(' → logprob: -11.625055313110352
    4. '   ' → logprob: -15.375055313110352
    5. '=int' → logprob: -15.625055313110352
    6. ' int' → logprob: -15.750055313110352
    7. ',int' → logprob: -16.12505531311035
    8. '(
' → logprob: -17.12505531311035
    9. '(str' → logprob: -17.37505531311035
    10. '[int' → logprob: -17.50005531311035

Token 364: ',' (ID: 11)
  Prédit: '(vals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(vals' → logprob: -0.006376771721988916
    2. '(' → logprob: -5.13137674331665
    3. ',' → logprob: -8.506377220153809
    4. ' (' → logprob: -8.631377220153809
    5. '(values' → logprob: -10.881377220153809
    6. ' vals' → logprob: -11.006377220153809
    7. '(val' → logprob: -11.506377220153809
    8. 'vals' → logprob: -11.506377220153809
    9. '(
' → logprob: -12.756377220153809
    10. ')' → logprob: -12.881377220153809

Token 365: ' vals' (ID: 58985)
  Prédit: 'vals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.0013591633178293705
    2. ' vals' → logprob: -7.126358985900879
    3. '(vals' → logprob: -7.501358985900879
    4. ')' → logprob: -13.876358985900879
    5. '   ' → logprob: -14.626358985900879
    6. '           ' → logprob: -15.126358985900879
    7. 'val' → logprob: -15.876358985900879
    8. 'values' → logprob: -16.001359939575195
    9. '       ' → logprob: -16.251359939575195
    10. '_vals' → logprob: -16.626359939575195

Token 366: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.18063095211982727
    2. '(vals' → logprob: -2.180630922317505
    3. 'vals' → logprob: -3.180630922317505
    4. '().' → logprob: -5.180631160736084
    5. 's' → logprob: -6.055631160736084
    6. '.readline' → logprob: -7.555631160736084
    7. '_vals' → logprob: -7.680631160736084
    8. ' vals' → logprob: -7.680631160736084
    9. '_.' → logprob: -8.430630683898926
    10. '.' → logprob: -8.680630683898926

Token 367: '.strip' (ID: 40613)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0067310030572116375
    2. '.strip' → logprob: -5.006731033325195
    3. '.split' → logprob: -11.131731033325195
    4. '()' → logprob: -14.631731033325195
    5. 'strip' → logprob: -15.506731033325195
    6. '.' → logprob: -15.631731033325195
    7. '.rstrip' → logprob: -17.006731033325195
    8. ' .' → logprob: -17.631731033325195
    9. '(strip' → logprob: -17.631731033325195
    10. ' ().' → logprob: -18.381731033325195

Token 368: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -7.896309739408025e-07
    2. '()' → logprob: -14.125000953674316
    3. '.split' → logprob: -17.25
    4. ' ().' → logprob: -18.0
    5. 'split' → logprob: -20.75
    6. '().'' → logprob: -20.875
    7. '.' → logprob: -21.5
    8. '(' → logprob: -21.875
    9. '('').' → logprob: -22.0
    10. '()
' → logprob: -22.125

Token 369: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.9361264946837764e-07
    2. ' split' → logprob: -16.0
    3. '.split' → logprob: -19.0
    4. '(split' → logprob: -21.0
    5. 'strip' → logprob: -21.125
    6. 'spl' → logprob: -21.875
    7. '_split' → logprob: -24.625
    8. '().' → logprob: -24.625
    9. 'replace' → logprob: -24.75
    10. ')' → logprob: -25.0

Token 370: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.011681685224175453
    2. '()' → logprob: -4.51168155670166
    3. '())))' → logprob: -8.01168155670166
    4. '())' → logprob: -9.13668155670166
    5. '()))
' → logprob: -9.63668155670166
    6. '(' → logprob: -9.63668155670166
    7. '))' → logprob: -9.88668155670166
    8. '()));' → logprob: -12.38668155670166
    9. '('' → logprob: -13.01168155670166
    10. '()))
' → logprob: -13.51168155670166

Token 371: '        
' (ID: 3564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.589744508266449
    2. '        
' → logprob: -0.839744508266449
    3. '    
' → logprob: -4.589744567871094
    4. '
' → logprob: -5.714744567871094
    5. '       
' → logprob: -9.714744567871094
    6. 'sum' → logprob: -9.964744567871094
    7. '            
' → logprob: -10.089744567871094
    8. '   ' → logprob: -10.464744567871094
    9. '  
' → logprob: -10.589744567871094
    10. '      
' → logprob: -11.214744567871094

Token 372: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011116914451122284
    2. '        
' → logprob: -4.886116981506348
    3. '   ' → logprob: -6.136116981506348
    4. '    
' → logprob: -7.636116981506348
    5. 'total' → logprob: -8.011116981506348
    6. 'sum' → logprob: -8.636116981506348
    7. 's' → logprob: -8.636116981506348
    8. '
' → logprob: -8.761116981506348
    9. '            
' → logprob: -12.636116981506348
    10. '       
' → logprob: -13.136116981506348

Token 373: ' #' (ID: 1069)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.06579568237066269
    2. 's' → logprob: -3.690795660018921
    3. 'sum' → logprob: -4.0657958984375
    4. '   ' → logprob: -4.8157958984375
    5. '       ' → logprob: -5.1907958984375
    6. 'S' → logprob: -5.1907958984375
    7. 'result' → logprob: -7.4407958984375
    8. ' total' → logprob: -7.4407958984375
    9. '        
' → logprob: -7.4407958984375
    10. '    
' → logprob: -8.4407958984375

Token 374: ' Calcul' (ID: 57243)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.1861230880022049
    2. 'S' → logprob: -2.3111231327056885
    3. 's' → logprob: -3.0611231327056885
    4. 'sum' → logprob: -3.8111231327056885
    5. '       ' → logprob: -7.311122894287109
    6. ' total' → logprob: -7.561122894287109
    7. 'result' → logprob: -8.68612289428711
    8. ' S' → logprob: -8.81112289428711
    9. '   ' → logprob: -9.31112289428711
    10. '#' → logprob: -10.68612289428711

Token 375: ' du' (ID: 1462)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009088157676160336
    2. 's' → logprob: -5.884088039398193
    3. ' total' → logprob: -6.134088039398193
    4. 'total' → logprob: -6.634088039398193
    5. '_total' → logprob: -7.509088039398193
    6. ' =' → logprob: -7.759088039398193
    7. 'sum' → logprob: -7.759088039398193
    8. ' s' → logprob: -8.009088516235352
    9. '_sum' → logprob: -8.259088516235352
    10. '_s' → logprob: -8.509088516235352

Token 376: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.8280646204948425
    2. 'S' → logprob: -1.0780646800994873
    3. 's' → logprob: -1.5780646800994873
    4. 'sum' → logprob: -4.328064441680908
    5. 'result' → logprob: -5.828064441680908
    6. ' total' → logprob: -9.328064918518066
    7. ' S' → logprob: -9.578064918518066
    8. 'som' → logprob: -9.828064918518066
    9. 'res' → logprob: -9.953064918518066
    10. 'tot' → logprob: -11.328064918518066

Token 377: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5097411274909973
    2. 'total' → logprob: -1.0097410678863525
    3. ' total' → logprob: -3.5097410678863525
    4. '   ' → logprob: -6.259741306304932
    5. 's' → logprob: -6.634741306304932
    6. 'sum' → logprob: -6.884741306304932
    7. '        
' → logprob: -7.759741306304932
    8. '
' → logprob: -9.259740829467773
    9. 'S' → logprob: -9.509740829467773
    10. ' s' → logprob: -9.759740829467773

Token 378: ' ces' (ID: 10532)
  Prédit: 'vals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.007534817326813936
    2. ' vals' → logprob: -5.132534980773926
    3. 'sum' → logprob: -7.382534980773926
    4. 's' → logprob: -7.632534980773926
    5. 'val' → logprob: -8.507534980773926
    6. '(vals' → logprob: -9.632534980773926
    7. '_vals' → logprob: -9.757534980773926
    8. 'la' → logprob: -9.757534980773926
    9. ' la' → logprob: -10.757534980773926
    10. 'values' → logprob: -11.007534980773926

Token 379: ' sommes' (ID: 32024)
  Prédit: 'vals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.1063360944390297
    2. ' vals' → logprob: -2.3563361167907715
    3. 's' → logprob: -6.1063361167907715
    4. '_vals' → logprob: -6.4813361167907715
    5. 'val' → logprob: -7.2313361167907715
    6. ' sums' → logprob: -7.3563361167907715
    7. 'values' → logprob: -8.356335639953613
    8. '(vals' → logprob: -8.731335639953613
    9. ' values' → logprob: -9.106335639953613
    10. ' valeurs' → logprob: -9.106335639953613

Token 380: '
' (ID: 198)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.541621744632721
    2. '       ' → logprob: -0.916621744632721
    3. ' total' → logprob: -4.416621685028076
    4. 's' → logprob: -6.041621685028076
    5. '   ' → logprob: -6.291621685028076
    6. 'sum' → logprob: -6.541621685028076
    7. '        
' → logprob: -8.041622161865234
    8. '    
' → logprob: -9.791622161865234
    9. 'S' → logprob: -10.041622161865234
    10. ' s' → logprob: -10.416622161865234

Token 381: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18887387216091156
    2. 'total' → logprob: -1.8138738870620728
    3. '   ' → logprob: -5.063873767852783
    4. ' total' → logprob: -6.188873767852783
    5. 's' → logprob: -8.438874244689941
    6. 'sum' → logprob: -8.438874244689941
    7. '        
' → logprob: -8.813874244689941
    8. '    
' → logprob: -9.563874244689941
    9. '
' → logprob: -10.063874244689941
    10. '	total' → logprob: -11.938874244689941

Token 382: ' sum' (ID: 4215)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.006135806906968355
    2. ' total' → logprob: -5.756135940551758
    3. 'sum' (adapté à ' sum') → logprob: -6.756135940551758
    4. '       ' → logprob: -6.881135940551758
    5. 's' → logprob: -7.506135940551758
    6. 'S' → logprob: -8.881135940551758
    7. 'tot' → logprob: -10.381135940551758
    8. '   ' → logprob: -11.131135940551758
    9. ' S' → logprob: -11.881135940551758
    10. '        
' → logprob: -12.006135940551758

Token 383: '_pairs' (ID: 90005)
  Prédit: '_vals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vals' → logprob: -0.23394249379634857
    2. '_pairs' → logprob: -1.7339425086975098
    3. '_' → logprob: -4.10894250869751
    4. '_val' → logprob: -5.35894250869751
    5. '_p' → logprob: -5.48394250869751
    6. '_total' → logprob: -5.60894250869751
    7. '_tot' → logprob: -6.60894250869751
    8. '_sum' → logprob: -7.85894250869751
    9. '_s' → logprob: -7.98394250869751
    10. '_pair' → logprob: -8.233942031860352

Token 384: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25209540128707886
    2. '=' → logprob: -1.5020954608917236
    3. '_' → logprob: -9.127095222473145
    4. '=sum' → logprob: -10.127095222473145
    5. '   ' → logprob: -11.877095222473145
    6. '_val' → logprob: -12.377095222473145
    7. ')' → logprob: -13.627095222473145
    8. ' +=' → logprob: -13.752095222473145
    9. '_=' → logprob: -14.252095222473145
    10. ' ' → logprob: -14.502095222473145

Token 385: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.0007102862582542002
    2. ' sum' → logprob: -7.250710487365723
    3. '   ' → logprob: -14.875710487365723
    4. '(sum' → logprob: -18.250709533691406
    5. '	sum' → logprob: -19.000709533691406
    6. '=sum' → logprob: -19.500709533691406
    7. '0' → logprob: -19.750709533691406
    8. ' ' → logprob: -20.625709533691406
    9. '       ' → logprob: -20.875709533691406
    10. '  ' → logprob: -21.500709533691406

Token 386: '(vals' (ID: 167053)
  Prédit: '(vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(vals' → logprob: -5.8961017202818766e-05
    2. '(' → logprob: -9.750059127807617
    3. 'vals' → logprob: -15.375059127807617
    4. '(val' → logprob: -15.500059127807617
    5. '(values' → logprob: -17.000059127807617
    6. '(
' → logprob: -17.250059127807617
    7. '(nums' → logprob: -17.375059127807617
    8. '(vars' → logprob: -17.625059127807617
    9. '(v' → logprob: -17.750059127807617
    10. ' vals' → logprob: -17.750059127807617

Token 387: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00014489953173324466
    2. ' )' → logprob: -8.875144958496094
    3. ')
' → logprob: -12.500144958496094
    4. '   ' → logprob: -14.000144958496094
    5. ')/' → logprob: -16.125144958496094
    6. ')

' → logprob: -16.250144958496094
    7. ')#' → logprob: -16.375144958496094
    8. '       ' → logprob: -16.750144958496094
    9. ' ' → logprob: -17.250144958496094
    10. '))' → logprob: -17.625144958496094

Token 388: '        
' (ID: 3564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23534069955348969
    2. '        
' → logprob: -1.8603407144546509
    3. '
' → logprob: -2.9853405952453613
    4. '    
' → logprob: -5.985340595245361
    5. '  
' → logprob: -7.860340595245361
    6. '        
        
' → logprob: -9.23534107208252
    7. '       
' → logprob: -9.23534107208252
    8. '   ' → logprob: -9.48534107208252
    9. '<|end|>' → logprob: -9.61034107208252
    10. '
        
' → logprob: -10.23534107208252

Token 389: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022495588287711143
    2. '        
' → logprob: -4.022495746612549
    3. '    
' → logprob: -6.647495746612549
    4. '   ' → logprob: -7.022495746612549
    5. ' total' → logprob: -7.147495746612549
    6. 'total' → logprob: -7.272495746612549
    7. '
' → logprob: -7.647495746612549
    8. 'result' → logprob: -9.02249526977539
    9. 'print' → logprob: -11.14749526977539
    10. ' result' → logprob: -11.39749526977539

Token 390: ' #' (ID: 1069)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.467827707529068
    2. 'result' → logprob: -1.4678276777267456
    3. 'print' → logprob: -2.092827796936035
    4. ' total' → logprob: -4.717827796936035
    5. '       ' → logprob: -5.217827796936035
    6. ' print' → logprob: -6.217827796936035
    7. ' result' → logprob: -6.467827796936035
    8. 'sum' → logprob: -6.717827796936035
    9. 'answer' → logprob: -8.217827796936035
    10. 'res' → logprob: -8.592827796936035

Token 391: ' Calcul' (ID: 57243)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.2277996838092804
    2. 'result' → logprob: -1.977799654006958
    3. 'print' → logprob: -3.352799654006958
    4. ' total' → logprob: -4.102799892425537
    5. 'sum' → logprob: -4.727799892425537
    6. ' result' → logprob: -6.352799892425537
    7. '   ' → logprob: -7.227799892425537
    8. ' print' → logprob: -7.227799892425537
    9. 'res' → logprob: -7.477799892425537
    10. '#' → logprob: -7.977799892425537

Token 392: ' de' (ID: 334)
  Prédit: '_total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -1.3406094312667847
    2. ' =' → logprob: -1.5906094312667847
    3. ' de' → logprob: -1.5906094312667847
    4. ' total' → logprob: -2.340609550476074
    5. 'total' → logprob: -2.965609550476074
    6. 'result' → logprob: -2.965609550476074
    7. '_result' → logprob: -3.590609550476074
    8. '       ' → logprob: -3.840609550476074
    9. '_' → logprob: -4.215609550476074
    10. '=' → logprob: -4.340609550476074

Token 393: ' la' (ID: 557)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.10098563134670258
    2. ' total' → logprob: -3.100985527038574
    3. 'print' → logprob: -3.850985527038574
    4. 'result' → logprob: -3.850985527038574
    5. 'sum' → logprob: -4.975985527038574
    6. ' result' → logprob: -7.600985527038574
    7. ' print' → logprob: -7.975985527038574
    8. ' sum' → logprob: -8.100985527038574
    9. '   ' → logprob: -8.850985527038574
    10. 'res' → logprob: -9.100985527038574

Token 394: ' somme' (ID: 64484)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.24617521464824677
    2. 'print' → logprob: -1.7461751699447632
    3. 'result' → logprob: -3.3711752891540527
    4. 'sum' → logprob: -5.121175289154053
    5. 's' → logprob: -6.746175289154053
    6. ' total' → logprob: -6.746175289154053
    7. 'solution' → logprob: -8.121174812316895
    8. 'res' → logprob: -8.246174812316895
    9. 'answer' → logprob: -8.871174812316895
    10. ' print' → logprob: -9.121174812316895

Token 395: ' totale' (ID: 52898)
  Prédit: '_total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -0.6061822175979614
    2. '_tot' → logprob: -0.8561822175979614
    3. 'tot' → logprob: -4.356182098388672
    4. '_' → logprob: -5.356182098388672
    5. '       ' → logprob: -5.981182098388672
    6. ' =' → logprob: -5.981182098388672
    7. 'total' → logprob: -6.106182098388672
    8. '   ' → logprob: -6.481182098388672
    9. ' totale' → logprob: -6.606182098388672
    10. '_des' → logprob: -6.856182098388672

Token 396: ' des' (ID: 731)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07280325889587402
    2. 'total' → logprob: -3.072803258895874
    3. ' totale' → logprob: -4.572803497314453
    4. ' =' → logprob: -5.447803497314453
    5. 'tot' → logprob: -5.697803497314453
    6. '_total' → logprob: -6.447803497314453
    7. ' total' → logprob: -6.697803497314453
    8. '=' → logprob: -6.947803497314453
    9. 'result' → logprob: -7.197803497314453
    10. '_tot' → logprob: -7.572803497314453

Token 397: ' ventes' (ID: 99004)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.864788830280304
    2. 'vent' → logprob: -1.3647887706756592
    3. 'cakes' → logprob: -1.9897887706756592
    4. ' ventes' → logprob: -2.364788770675659
    5. ' g' → logprob: -2.989788770675659
    6. 'v' → logprob: -4.364789009094238
    7. 'x' → logprob: -4.614789009094238
    8. 'gate' → logprob: -5.614789009094238
    9. 'vente' → logprob: -6.364789009094238
    10. 'vents' → logprob: -6.364789009094238

Token 398: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1252834051847458
    2. 'total' → logprob: -2.2502834796905518
    3. ' total' → logprob: -5.000283241271973
    4. '   ' → logprob: -5.250283241271973
    5. 'result' → logprob: -8.750283241271973
    6. ' =' → logprob: -10.000283241271973
    7. '        
' → logprob: -10.500283241271973
    8. 'sales' → logprob: -10.500283241271973
    9. '	total' → logprob: -10.750283241271973
    10. ',' → logprob: -10.875283241271973

Token 399: 'Σ' (ID: 10720)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.492171049118042
    2. 'sum' → logprob: -0.992171049118042
    3. ')' → logprob: -4.367171287536621
    4. ' )' → logprob: -5.617171287536621
    5. '=sum' → logprob: -7.367171287536621
    6. ' total' → logprob: -8.242171287536621
    7. '(sum' → logprob: -8.492171287536621
    8. ' )
' → logprob: -8.992171287536621
    9. 'total' → logprob: -8.992171287536621
    10. ')
' → logprob: -9.492171287536621

Token 400: ' xi' (ID: 26869)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.8443726897239685
    2. '_' → logprob: -2.0943727493286133
    3. ' xi' → logprob: -2.3443727493286133
    4. 'x' → logprob: -2.7193727493286133
    5. ' vals' → logprob: -2.8443727493286133
    6. 'vals' → logprob: -2.9693727493286133
    7. 'xi' → logprob: -2.9693727493286133
    8. ')' → logprob: -3.5943727493286133
    9. ' x' → logprob: -3.5943727493286133
    10. ' =' → logprob: -4.219372749328613

Token 401: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03667845577001572
    2. ' =' → logprob: -3.7866785526275635
    3. ' )' → logprob: -4.786678314208984
    4. '=' → logprob: -5.536678314208984
    5. ')
' → logprob: -7.036678314208984
    6. ' )
' → logprob: -9.411678314208984
    7. ')=' → logprob: -10.286678314208984
    8. '   ' → logprob: -11.036678314208984
    9. ' ' → logprob: -11.411678314208984
    10. ')

' → logprob: -12.036678314208984

Token 402: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0027147610671818256
    2. 'total' → logprob: -7.00271463394165
    3. ' total' → logprob: -7.12771463394165
    4. '   ' → logprob: -7.75271463394165
    5. '        
' → logprob: -8.627715110778809
    6. 'print' → logprob: -8.877715110778809
    7. 'result' → logprob: -9.127715110778809
    8. ' print' → logprob: -9.627715110778809
    9. ' result' → logprob: -10.377715110778809
    10. '    
' → logprob: -11.002715110778809

Token 403: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.13015589118003845
    2. 'total' (adapté à ' total') → logprob: -2.6301558017730713
    3. ' result' → logprob: -3.2551558017730713
    4. 'result' → logprob: -5.25515604019165
    5. '       ' → logprob: -5.50515604019165
    6. ' sum' → logprob: -7.00515604019165
    7. '   ' → logprob: -7.75515604019165
    8. ' sales' → logprob: -8.505155563354492
    9. 'sum' → logprob: -8.755155563354492
    10. ' answer' → logprob: -9.255155563354492

Token 404: '_sales' (ID: 112516)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.759161114692688
    2. '_sales' → logprob: -0.884161114692688
    3. '_v' → logprob: -3.1341609954833984
    4. '=' → logprob: -3.2591609954833984
    5. ' =' → logprob: -3.6341609954833984
    6. '_sum' → logprob: -4.884160995483398
    7. '_s' → logprob: -7.009160995483398
    8. '_total' → logprob: -7.134160995483398
    9. '_x' → logprob: -7.759160995483398
    10. 'sales' → logprob: -9.009160995483398

Token 405: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020667314529419
    2. '=' → logprob: -2.3502066135406494
    3. '   ' → logprob: -17.47520637512207
    4. ' ' → logprob: -17.97520637512207
    5. ')' → logprob: -18.22520637512207
    6. '＝' → logprob: -18.60020637512207
    7. '=int' → logprob: -18.72520637512207
    8. ' ' → logprob: -19.47520637512207
    9. 's' → logprob: -19.85020637512207
    10. '=sum' → logprob: -20.10020637512207

Token 406: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.3132648468017578
    2. ' sum' → logprob: -1.3132648468017578
    3. '   ' → logprob: -13.063264846801758
    4. ' ' → logprob: -14.188264846801758
    5. '  ' → logprob: -15.813264846801758
    6. '(sum' → logprob: -15.938264846801758
    7. '	sum' → logprob: -16.938264846801758
    8. '    ' → logprob: -18.563264846801758
    9. 'int' → logprob: -19.563264846801758
    10. '       ' → logprob: -20.188264846801758

Token 407: '_pairs' (ID: 90005)
  Prédit: '_pairs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pairs' → logprob: -1.5048530030981055e-06
    2. 'pairs' → logprob: -14.500001907348633
    3. '_' → logprob: -14.875001907348633
    4. 'Pairs' → logprob: -15.125001907348633
    5. '_parts' → logprob: -16.250001907348633
    6. '(_' → logprob: -16.375001907348633
    7. '_p' → logprob: -17.500001907348633
    8. '_pair' → logprob: -17.500001907348633
    9. '(' → logprob: -17.750001907348633
    10. '_vals' → logprob: -18.000001907348633

Token 408: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.26306161284446716
    2. ' /' → logprob: -1.6380616426467896
    3. '//' → logprob: -3.6380615234375
    4. '   ' → logprob: -5.6380615234375
    5. '/' → logprob: -6.0130615234375
    6. ' ' → logprob: -6.6380615234375
    7. ' ' → logprob: -6.8880615234375
    8. '#' → logprob: -7.5130615234375
    9. '/(' → logprob: -7.5130615234375
    10. '    ' → logprob: -7.7630615234375

Token 409: ' (' (ID: 350)
  Prédit: '(K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.008657239377498627
    2. ' (' → logprob: -4.758657455444336
    3. '(' → logprob: -10.258657455444336
    4. '   ' → logprob: -12.258657455444336
    5. '(k' → logprob: -13.383657455444336
    6. '((' → logprob: -13.883657455444336
    7. '(Q' → logprob: -16.383657455444336
    8. ' ' → logprob: -16.883657455444336
    9. '
' → logprob: -16.883657455444336
    10. '(B' → logprob: -17.008657455444336

Token 410: 'K' (ID: 42)
  Prédit: '(K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(K' → logprob: -0.003150027245283127
    2. 'K' → logprob: -5.87814998626709
    3. ' (' → logprob: -8.00314998626709
    4. '   ' → logprob: -12.25314998626709
    5. '(' → logprob: -12.37814998626709
    6. ' K' → logprob: -14.25314998626709
    7. '(k' → logprob: -15.00314998626709
    8. '(
' → logprob: -16.128150939941406
    9. ')' → logprob: -16.253150939941406
    10. '[K' → logprob: -16.253150939941406

Token 411: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.016044458374381065
    2. '-' → logprob: -4.141044616699219
    3. ' ' → logprob: -12.266044616699219
    4. '   ' → logprob: -12.641044616699219
    5. ')' → logprob: -13.391044616699219
    6. '  ' → logprob: -15.766044616699219
    7. '    ' → logprob: -16.01604461669922
    8. '       ' → logprob: -16.14104461669922
    9. '<|end|>' → logprob: -16.64104461669922
    10. ' ' → logprob: -16.89104461669922

Token 412: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.125001907348633
    3. '   ' → logprob: -16.000001907348633
    4. ')' → logprob: -16.625001907348633
    5. '```' → logprob: -18.875001907348633
    6. '[' → logprob: -19.125001907348633
    7. '<|end|>' → logprob: -19.625001907348633
    8. '۱' → logprob: -20.000001907348633
    9. '  ' → logprob: -20.125001907348633
    10. '১' → logprob: -20.812501907348633

Token 413: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '```' → logprob: -18.5
    4. ')' → logprob: -19.25
    5. '<|end|>' → logprob: -19.25
    6. '[' → logprob: -19.375
    7. '   ' → logprob: -19.375
    8. '
' → logprob: -19.875
    9. '১' → logprob: -21.25
    10. '۱' → logprob: -21.625

Token 414: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020606238394975662
    2. ')
' → logprob: -3.895606279373169
    3. '       ' → logprob: -10.02060604095459
    4. '   ' → logprob: -11.89560604095459
    5. ')

' → logprob: -12.14560604095459
    6. ')
' → logprob: -12.27060604095459
    7. ' )' → logprob: -13.39560604095459
    8. ')`' → logprob: -15.02060604095459
    9. ' )
' → logprob: -15.89560604095459
    10. 'print' → logprob: -16.020606994628906

Token 415: '        
' (ID: 3564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08493189513683319
    2. 'print' → logprob: -3.0849318504333496
    3. '   ' → logprob: -3.3349318504333496
    4. '        
' → logprob: -10.334932327270508
    5. '    
' → logprob: -10.709932327270508
    6. '```' → logprob: -11.834932327270508
    7. ' print' → logprob: -11.959932327270508
    8. '
' → logprob: -12.084932327270508
    9. '           ' → logprob: -15.334932327270508
    10. '  
' → logprob: -16.209932327270508

Token 416: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2057001292705536
    2. '   ' → logprob: -1.705700159072876
    3. 'print' → logprob: -5.455699920654297
    4. '    
' → logprob: -12.705699920654297
    5. '        
' → logprob: -13.830699920654297
    6. ' print' → logprob: -14.205699920654297
    7. '```' → logprob: -14.205699920654297
    8. '
' → logprob: -15.455699920654297
    9. '	print' → logprob: -16.955699920654297
    10. '   ' → logprob: -17.830699920654297

Token 417: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -4.246537173457909e-06
    2. '       ' → logprob: -12.500003814697266
    3. ' print' → logprob: -15.000003814697266
    4. '   ' → logprob: -16.500003814697266
    5. '```' → logprob: -19.000003814697266
    6. '	print' → logprob: -22.125003814697266
    7. '``' → logprob: -24.000003814697266
    8. '#print' → logprob: -24.500003814697266
    9. '        
' → logprob: -25.125003814697266
    10. '
' → logprob: -25.875003814697266

Token 418: '(total' (ID: 39744)
  Prédit: '(total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -0.00034392563975416124
    2. '(' → logprob: -8.000344276428223
    3. 'total' → logprob: -11.750344276428223
    4. ' (' → logprob: -15.000344276428223
    5. ' total' → logprob: -15.875344276428223
    6. '()' → logprob: -16.500343322753906
    7. '(
' → logprob: -17.250343322753906
    8. '(t' → logprob: -17.500343322753906
    9. ',total' → logprob: -18.250343322753906
    10. 'Total' → logprob: -19.375343322753906

Token 419: '_sales' (ID: 112516)
  Prédit: '_sales'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sales' → logprob: -2.176947600673884e-05
    2. '_' → logprob: -11.625021934509277
    3. '_total' → logprob: -11.625021934509277
    4. 'sales' → logprob: -12.750021934509277
    5. '_sale' → logprob: -15.375021934509277
    6. 'total' → logprob: -16.25002098083496
    7. '(_' → logprob: -16.37502098083496
    8. '('_' → logprob: -16.37502098083496
    9. '("_' → logprob: -16.50002098083496
    10. 'Sales' → logprob: -16.62502098083496

Token 420: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.200166469876422e-06
    2. ' )' → logprob: -12.500004768371582
    3. ')
' → logprob: -14.375004768371582
    4. '())' → logprob: -14.500004768371582
    5. '()' → logprob: -15.375004768371582
    6. '```' → logprob: -16.6250057220459
    7. '   ' → logprob: -17.1250057220459
    8. ')`' → logprob: -17.8750057220459
    9. '')' → logprob: -18.0000057220459
    10. ')}' → logprob: -18.1250057220459

Token 421: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 422: ' __' (ID: 2516)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.17162561416625977
    2. '__' → logprob: -2.1716256141662598
    3. ' __' → logprob: -3.5466256141662598
    4. ' ' → logprob: -4.67162561416626
    5. '_name' → logprob: -5.79662561416626
    6. ' _' → logprob: -7.42162561416626
    7. ' ' → logprob: -8.046625137329102
    8. '___' → logprob: -8.796625137329102
    9. '_main' → logprob: -8.796625137329102
    10. '_space' → logprob: -8.921625137329102

Token 423: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.05800123140215874
    2. ' ==' → logprob: -2.9330012798309326
    3. '==' → logprob: -6.4330010414123535
    4. ' __' → logprob: -6.5580010414123535
    5. '=="' → logprob: -9.808001518249512
    6. 'name' → logprob: -11.808001518249512
    7. '_' → logprob: -12.183001518249512
    8. '.__' → logprob: -12.933001518249512
    9. '__.__' → logprob: -12.933001518249512
    10. ' =="' → logprob: -13.058001518249512

Token 424: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.306760805164231e-05
    2. '==' → logprob: -11.87501335144043
    3. '__.__' → logprob: -12.75001335144043
    4. '=="' → logprob: -12.87501335144043
    5. ' ==' → logprob: -15.50001335144043
    6. '___' → logprob: -15.75001335144043
    7. '__["' → logprob: -16.50001335144043
    8. '____' → logprob: -16.75001335144043
    9. '__.' → logprob: -17.75001335144043
    10. '__('' → logprob: -18.00001335144043

Token 425: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0003564383659977466
    2. '==' → logprob: -8.750356674194336
    3. '__.__' → logprob: -9.000356674194336
    4. '=="' → logprob: -10.250356674194336
    5. ' ==' → logprob: -11.250356674194336
    6. '.__' → logprob: -11.375356674194336
    7. '__["' → logprob: -12.000356674194336
    8. '__.' → logprob: -12.250356674194336
    9. '___' → logprob: -13.250356674194336
    10. '__("' → logprob: -15.250356674194336

Token 426: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.014165983535349369
    2. ''' → logprob: -4.264165878295898
    3. ' "__' → logprob: -13.014165878295898
    4. '__' → logprob: -15.389165878295898
    5. ' '__' → logprob: -17.2641658782959
    6. '"name' → logprob: -18.0141658782959
    7. '"user' → logprob: -18.0141658782959
    8. '"_' → logprob: -18.3891658782959
    9. '("__' → logprob: -18.7641658782959
    10. ''"' → logprob: -19.0141658782959

Token 427: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.1336197853088379
    2. '__' → logprob: -2.133619785308838
    3. '"' → logprob: -5.133619785308838
    4. ''' → logprob: -7.258619785308838
    5. 'name' → logprob: -9.88361930847168
    6. ' main' → logprob: -12.13361930847168
    7. '_main' → logprob: -12.75861930847168
    8. ' "__' → logprob: -12.88361930847168
    9. '__":
' → logprob: -13.00861930847168
    10. '__
' → logprob: -14.13361930847168

Token 428: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.16071492433547974
    2. '__' → logprob: -1.910714864730835
    3. '__':
' → logprob: -7.785715103149414
    4. '__:' → logprob: -10.035715103149414
    5. '__.' → logprob: -10.785715103149414
    6. '__["' → logprob: -12.160715103149414
    7. '__.__' → logprob: -12.785715103149414
    8. '__
' → logprob: -14.285715103149414
    9. '__",' → logprob: -14.535715103149414
    10. '__
' → logprob: -14.660715103149414

Token 429: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21178939938545227
    2. 'main' → logprob: -2.21178936958313
    3. ' main' → logprob: -2.71178936958313
    4. '	main' → logprob: -4.211789608001709
    5. '_main' → logprob: -9.46178913116455
    6. '   ' → logprob: -11.46178913116455
    7. '(main' → logprob: -11.96178913116455
    8. '    
' → logprob: -12.33678913116455
    9. '```' → logprob: -12.58678913116455
    10. '  ' → logprob: -12.58678913116455

Token 430: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -6.2729995988775045e-06
    2. ' main' → logprob: -12.000006675720215
    3. '	main' → logprob: -19.7500057220459
    4. '_main' → logprob: -24.1250057220459
    5. '   ' → logprob: -24.1250057220459
    6. '.main' → logprob: -24.7500057220459
    7. '(main' → logprob: -25.5000057220459
    8. 'Main' → logprob: -26.2500057220459
    9. 'import' → logprob: -27.1250057220459
    10. '    
' → logprob: -28.1250057220459

Token 431: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 429
Tokens correctement prédits (1ère position, stricte): 161
Tokens correctement prédits (1ère position, avec adaptation): 168
Tokens correctement prédits (top 10): 323
Précision stricte (1ère position): 37.53%
Précision adaptée (1ère position): 39.16%
Précision (top 10): 75.29%
================================================================================
