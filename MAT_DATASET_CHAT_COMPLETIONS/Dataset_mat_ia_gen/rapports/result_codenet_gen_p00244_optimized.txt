================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:21:10
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import heapq

input = sys.stdin.readline

while True:
    n, m = map(int, input().split())
    if n == 0 and m == 0:
        break
    graph = [[] for _ in range(n + 1)]
    for _ in range(m):
        a, b, c = map(int, input().split())
        graph[a].append((b, c))
        graph[b].append((a, c))

    # dist[node][state]: minimal cost to reach node with state (0:not used free ticket, 1:used free ticket)
    dist = [[float('inf')] * 2 for _ in range(n + 1)]
    dist[1][0] = 0
    hq = [(0, 1, 0)]  # cost, node, state

    while hq:
        cost, u, used = heapq.heappop(hq)
        if dist[u][used] < cost:
            continue
        if u == n:
            print(cost)
            break
        if used == 0:
            # Try to use the free ticket on two consecutive edges
            for v1, c1 in graph[u]:
                if v1 == n:
                    continue  # Cannot use free ticket if destination on intermediate step
                for v2, c2 in graph[v1]:
                    if v2 == n:
                        continue
                    new_cost = cost
                    if dist[v2][1] > new_cost:
                        dist[v2][1] = new_cost
                        heapq.heappush(hq, (new_cost, v2, 1))
        # Normal movement without free ticket or after using it
        for v, c in graph[u]:
            new_cost = cost + c
            if dist[v][used] > new_cost:
                dist[v][used] = new_cost
                heapq.heappush(hq, (new_cost, v, used))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6975938677787781
    2. '\n' → logprob: -0.8225938677787781
    3. '<|end|>' → logprob: -3.572593927383423
    4. '\' → logprob: -4.322593688964844
    5. 'newline' → logprob: -5.072593688964844
    6. 'import' → logprob: -5.322593688964844
    7. '<|end|>' → logprob: -5.947593688964844
    8. '```' → logprob: -6.572593688964844
    9. '' → logprob: -6.697593688964844
    10. '
' → logprob: -6.947593688964844

Token 4: ' heap' (ID: 37237)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -7.755678961984813e-05
    2. 'os' → logprob: -9.500077247619629
    3. ' math' → logprob: -13.625077247619629
    4. ' re' → logprob: -14.500077247619629
    5. ' json' → logprob: -15.125077247619629
    6. '"os' → logprob: -15.375077247619629
    7. '_os' → logprob: -16.125078201293945
    8. ' io' → logprob: -16.375078201293945
    9. ' ' → logprob: -16.375078201293945
    10. '	os' → logprob: -17.000078201293945

Token 5: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.0087516784551553e-05
    2. '.' → logprob: -12.37501049041748
    3. '=' → logprob: -13.75001049041748
    4. '_' → logprob: -13.87501049041748
    5. 'ify' → logprob: -14.00001049041748
    6. '#' → logprob: -14.25001049041748
    7. '[' → logprob: -15.12501049041748
    8. 'u' → logprob: -15.25001049041748
    9. 'p' → logprob: -15.25001049041748
    10. 'space' → logprob: -15.50001049041748

Token 6: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5876707434654236
    2. '
' → logprob: -1.4626708030700684
    3. '\n' → logprob: -2.0876708030700684
    4. '\' → logprob: -3.0876708030700684
    5. '<|end|>' → logprob: -4.337670803070068
    6. '

' → logprob: -4.962670803070068
    7. '```' → logprob: -5.587670803070068
    8. 'import' → logprob: -5.587670803070068
    9. '.
' → logprob: -5.587670803070068
    10. '' → logprob: -5.587670803070068

Token 7: 'input' (ID: 2586)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7021071314811707
    2. 'def' → logprob: -1.7021071910858154
    3. '
' → logprob: -2.3271071910858154
    4. '\' → logprob: -3.2021071910858154
    5. '```' → logprob: -3.3271071910858154
    6. 'class' → logprob: -3.4521071910858154
    7. '\n' → logprob: -3.8271071910858154
    8. 'import' → logprob: -4.077106952667236
    9. 'from' → logprob: -4.077106952667236
    10. '' → logprob: -4.327106952667236

Token 8: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.033907774835824966
    2. '.' → logprob: -3.408907890319824
    3. ')' → logprob: -8.908907890319824
    4. '()' → logprob: -10.533907890319824
    5. '(.)' → logprob: -10.533907890319824
    6. '```' → logprob: -11.283907890319824
    7. ' (' → logprob: -11.283907890319824
    8. '[' → logprob: -12.158907890319824
    9. '<|end|>' → logprob: -12.158907890319824
    10. '(
' → logprob: -12.283907890319824

Token 9: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.13686507940292358
    2. ' sys' → logprob: -2.1368651390075684
    3. 'input' → logprob: -4.636865139007568
    4. ' input' → logprob: -8.76186466217041
    5. 'lambda' → logprob: -10.63686466217041
    6. '	sys' → logprob: -11.26186466217041
    7. '=sys' → logprob: -12.76186466217041
    8. ' lambda' → logprob: -13.38686466217041
    9. '```' → logprob: -13.76186466217041
    10. '(sys' → logprob: -14.51186466217041

Token 10: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3511665165424347
    2. '.stdin' → logprob: -1.2261664867401123
    3. '.readline' → logprob: -7.101166725158691
    4. '.stdout' → logprob: -7.226166725158691
    5. '.input' → logprob: -8.101166725158691
    6. ' .' → logprob: -8.226166725158691
    7. '.argv' → logprob: -8.726166725158691
    8. '.path' → logprob: -9.226166725158691
    9. '.std' → logprob: -9.976166725158691
    10. '.next' → logprob: -10.351166725158691

Token 11: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0027220139745622873
    2. '.read' → logprob: -6.127721786499023
    3. '.' → logprob: -7.627721786499023
    4. '.readlines' → logprob: -10.127721786499023
    5. 'read' → logprob: -12.252721786499023
    6. '.buffer' → logprob: -12.877721786499023
    7. ' readline' → logprob: -14.252721786499023
    8. '```' → logprob: -14.377721786499023
    9. '.Read' → logprob: -14.377721786499023
    10. ' .' → logprob: -15.502721786499023

Token 12: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.44360849261283875
    2. '()' → logprob: -1.0686085224151611
    3. '(
' → logprob: -4.693608283996582
    4. '
' → logprob: -6.318608283996582
    5. '()
' → logprob: -6.318608283996582
    6. '()

' → logprob: -7.818608283996582
    7. '()\' → logprob: -7.818608283996582
    8. '\n' → logprob: -8.568608283996582
    9. 'def' → logprob: -8.693608283996582
    10. '

' → logprob: -8.943608283996582

Token 13: 'while' (ID: 7032)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.31369125843048096
    2. 'def' → logprob: -1.313691258430481
    3. '(n' → logprob: -8.188691139221191
    4. 'N' → logprob: -9.438691139221191
    5. '(' → logprob: -10.438691139221191
    6. 'for' → logprob: -11.313691139221191
    7. 'd' → logprob: -11.313691139221191
    8. '\' → logprob: -12.938691139221191
    9. 'num' → logprob: -12.938691139221191
    10. 'data' → logprob: -13.313691139221191

Token 14: ' True' (ID: 6432)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03242374211549759
    2. ' True' → logprob: -3.532423734664917
    3. '  ' → logprob: -7.032423973083496
    4. ' not' → logprob: -7.532423973083496
    5. ' (' → logprob: -7.657423973083496
    6. ' )' → logprob: -8.032423973083496
    7. '<|end|>' → logprob: -9.407423973083496
    8. '(' → logprob: -9.657423973083496
    9. '    ' → logprob: -9.657423973083496
    10. ' space' → logprob: -10.157423973083496

Token 15: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007230373448692262
    2. '():' → logprob: -7.375722885131836
    3. ' :' → logprob: -9.875722885131836
    4. ':**' → logprob: -10.250722885131836
    5. '(:' → logprob: -13.125722885131836
    6. ':
' → logprob: -13.250722885131836
    7. '):' → logprob: -13.375722885131836
    8. ' ():' → logprob: -13.875722885131836
    9. ':return' → logprob: -14.750722885131836
    10. '(' → logprob: -14.875722885131836

Token 16: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0069110943004488945
    2. '    
' → logprob: -5.131911277770996
    3. '    ' → logprob: -7.756911277770996
    4. ' ' → logprob: -9.131911277770996
    5. ' 
' → logprob: -9.131911277770996
    6. '```' → logprob: -9.756911277770996
    7. '  
' → logprob: -9.881911277770996
    8. '    
    
' → logprob: -10.006911277770996
    9. '     
' → logprob: -10.381911277770996
    10. ' readline' → logprob: -11.006911277770996

Token 17: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.5528404712677002
    2. ' n' → logprob: -1.3028404712677002
    3. 'x' → logprob: -3.8028404712677
    4. 'num' → logprob: -3.8028404712677
    5. ' line' → logprob: -3.8028404712677
    6. '   ' → logprob: -4.052840232849121
    7. 'data' → logprob: -4.052840232849121
    8. ' num' → logprob: -4.552840232849121
    9. 'line' → logprob: -4.802840232849121
    10. ' data' → logprob: -5.302840232849121

Token 18: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10052506625652313
    2. '=' → logprob: -2.350525140762329
    3. ' ==' → logprob: -8.60052490234375
    4. ' ' → logprob: -9.22552490234375
    5. '=int' → logprob: -11.10052490234375
    6. ' >' → logprob: -12.97552490234375
    7. '==' → logprob: -13.10052490234375
    8. '.' → logprob: -13.22552490234375
    9. 'space' → logprob: -13.35052490234375
    10. ' =)' → logprob: -13.35052490234375

Token 19: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.18120504915714264
    2. ' m' → logprob: -1.8062050342559814
    3. 'k' → logprob: -7.9312052726745605
    4. ' =' → logprob: -8.306204795837402
    5. 'w' → logprob: -8.306204795837402
    6. '=' → logprob: -8.681204795837402
    7. ' ' → logprob: -8.931204795837402
    8. ' k' → logprob: -9.806204795837402
    9. '*' → logprob: -9.931204795837402
    10. '_' → logprob: -10.431204795837402

Token 20: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014167606830597
    2. '=' → logprob: -1.7014167308807373
    3. ' ' → logprob: -13.201416969299316
    4. ',' → logprob: -14.326416969299316
    5. '=input' → logprob: -14.701416969299316
    6. ')' → logprob: -15.451416969299316
    7. '=line' → logprob: -16.326416015625
    8. '    ' → logprob: -16.701416015625
    9. '   ' → logprob: -16.826416015625
    10. '=int' → logprob: -17.451416015625

Token 21: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.014328975230455399
    2. 'map' → logprob: -4.514328956604004
    3. ' input' → logprob: -5.764328956604004
    4. 'input' → logprob: -9.014328956604004
    5. ' ' → logprob: -11.389328956604004
    6. ' [' → logprob: -13.014328956604004
    7. '	map' → logprob: -14.514328956604004
    8. ' list' → logprob: -14.639328956604004
    9. '   ' → logprob: -15.014328956604004
    10. ' int' → logprob: -15.139328956604004

Token 22: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.16208671033382416
    2. '(' → logprob: -2.2870867252349854
    3. '(str' → logprob: -3.5370867252349854
    4. '(input' → logprob: -4.287086486816406
    5. '(lambda' → logprob: -5.287086486816406
    6. '(eval' → logprob: -9.662086486816406
    7. '(list' → logprob: -10.912086486816406
    8. '()' → logprob: -11.162086486816406
    9. '(tuple' → logprob: -11.162086486816406
    10. ' (' → logprob: -11.537086486816406

Token 23: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15847915410995483
    2. ',input' → logprob: -2.0334792137145996
    3. '(input' → logprob: -4.5334792137146
    4. '(' → logprob: -5.6584792137146
    5. 'input' → logprob: -6.9084792137146
    6. ' ,' → logprob: -8.283478736877441
    7. '(sys' → logprob: -9.908478736877441
    8. '(),' → logprob: -10.033478736877441
    9. ',int' → logprob: -10.283478736877441
    10. ')' → logprob: -11.033478736877441

Token 24: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.07890069484710693
    2. ' input' → logprob: -2.5789008140563965
    3. 'sys' → logprob: -12.453900337219238
    4. ' sys' → logprob: -12.828900337219238
    5. ')' → logprob: -13.078900337219238
    6. ' ' → logprob: -13.578900337219238
    7. ',input' → logprob: -14.578900337219238
    8. '(input' → logprob: -15.703900337219238
    9. '=input' → logprob: -15.953900337219238
    10. '	input' → logprob: -16.453901290893555

Token 25: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.288163083605468e-05
    2. '()' → logprob: -9.875052452087402
    3. '())' → logprob: -14.000052452087402
    4. ' ().' → logprob: -14.875052452087402
    5. '()
' → logprob: -17.12505340576172
    6. ')' → logprob: -17.50005340576172
    7. '(' → logprob: -17.87505340576172
    8. '()

' → logprob: -18.75005340576172
    9. '()))' → logprob: -18.87505340576172
    10. '.' → logprob: -19.12505340576172

Token 26: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0033370524179190397
    2. 'strip' → logprob: -5.7533369064331055
    3. 'rstrip' → logprob: -8.753336906433105
    4. '(split' → logprob: -14.253336906433105
    5. ' split' → logprob: -15.003336906433105
    6. 'read' → logprob: -15.503336906433105
    7. 'spl' → logprob: -16.753337860107422
    8. ')' → logprob: -17.503337860107422
    9. 'rs' → logprob: -17.503337860107422
    10. '_split' → logprob: -17.753337860107422

Token 27: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012579113245010376
    2. '())' → logprob: -4.887578964233398
    3. '))' → logprob: -5.512578964233398
    4. '()' → logprob: -7.012578964233398
    5. '()))' → logprob: -11.762578964233398
    6. ')
' → logprob: -12.262578964233398
    7. '),' → logprob: -12.762578964233398
    8. '(' → logprob: -13.137578964233398
    9. ')`' → logprob: -13.137578964233398
    10. '())
' → logprob: -14.012578964233398

Token 28: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11987610906362534
    2. '<|end|>' → logprob: -3.1198761463165283
    3. '```' → logprob: -4.244875907897949
    4. '    
' → logprob: -4.494875907897949
    5. ' ' → logprob: -4.744875907897949
    6. ':' → logprob: -4.869875907897949
    7. ' if' → logprob: -4.994875907897949
    8. '\n' → logprob: -5.244875907897949
    9. '
' → logprob: -5.619875907897949
    10. ' 
' → logprob: -5.994875907897949

Token 29: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5391557812690735
    2. ' if' → logprob: -1.6641557216644287
    3. '<|end|>' → logprob: -2.1641557216644287
    4. 'if' (adapté à ' if') → logprob: -2.5391557216644287
    5. ' ' → logprob: -4.164155960083008
    6. '\n' → logprob: -4.664155960083008
    7. '  ' → logprob: -6.039155960083008
    8. '    ' → logprob: -6.914155960083008
    9. ' 
' → logprob: -7.039155960083008
    10. ')' → logprob: -7.414155960083008

Token 30: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.02374199405312538
    2. ' not' → logprob: -3.8987419605255127
    3. 'n' → logprob: -5.773742198944092
    4. 'not' → logprob: -9.523741722106934
    5. ' ' → logprob: -11.273741722106934
    6. '	n' → logprob: -14.523741722106934
    7. ' ' → logprob: -15.398741722106934
    8. '0' → logprob: -16.77374267578125
    9. ' n't' → logprob: -17.02374267578125
    10. ' (' → logprob: -17.14874267578125

Token 31: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.04863210767507553
    2. '==' → logprob: -3.0486321449279785
    3. '=' → logprob: -11.04863166809082
    4. ')' → logprob: -11.54863166809082
    5. ' <=' → logprob: -12.17363166809082
    6. ' ' → logprob: -12.67363166809082
    7. ')==' → logprob: -13.17363166809082
    8. ' =' → logprob: -13.42363166809082
    9. ' ' → logprob: -13.54863166809082
    10. ' <' → logprob: -13.54863166809082

Token 32: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015056940028443933
    2. ' ' → logprob: -6.5015058517456055
    3. '   ' → logprob: -13.751505851745605
    4. '  ' → logprob: -14.876505851745605
    5. '    ' → logprob: -15.189005851745605
    6. 'm' → logprob: -15.314005851745605
    7. '۰' → logprob: -15.501505851745605
    8. '```' → logprob: -15.689005851745605
    9. '=' → logprob: -15.814005851745605
    10. '_' → logprob: -16.50150489807129

Token 33: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002319071936653927
    2. ' ' → logprob: -8.375231742858887
    3. 'm' → logprob: -15.437731742858887
    4. '```' → logprob: -15.750231742858887
    5. '۰' → logprob: -16.000232696533203
    6. 'and' → logprob: -16.250232696533203
    7. '   ' → logprob: -16.250232696533203
    8. '  ' → logprob: -16.625232696533203
    9. 'q' → logprob: -17.125232696533203
    10. '-' → logprob: -17.375232696533203

Token 34: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.009719845838844776
    2. 'and' → logprob: -4.8847198486328125
    3. ':' → logprob: -6.2597198486328125
    4. '   ' → logprob: -9.509719848632812
    5. ' ' → logprob: -9.634719848632812
    6. ' or' → logprob: -10.259719848632812
    7. '    ' → logprob: -12.009719848632812
    8. ' :' → logprob: -12.134719848632812
    9. '  ' → logprob: -12.384719848632812
    10. '	and' → logprob: -12.509719848632812

Token 35: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.25193455815315247
    2. 'm' → logprob: -1.50193452835083
    3. ' ' → logprob: -13.001935005187988
    4. '   ' → logprob: -13.251935005187988
    5. '	m' → logprob: -14.126935005187988
    6. ' ' → logprob: -14.501935005187988
    7. '    ' → logprob: -16.001934051513672
    8. '  ' → logprob: -16.001934051513672
    9. '0' → logprob: -19.126934051513672
    10. '&m' → logprob: -19.376934051513672

Token 36: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.016452612355351448
    2. '==' → logprob: -4.141452789306641
    3. '<|end|>' → logprob: -8.64145278930664
    4. ' ' → logprob: -8.76645278930664
    5. '0' → logprob: -11.01645278930664
    6. '<|end|>' → logprob: -11.26645278930664
    7. '  ' → logprob: -11.51645278930664
    8. ' ' → logprob: -11.64145278930664
    9. ')' → logprob: -11.76645278930664
    10. '   ' → logprob: -12.01645278930664

Token 37: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2254139631986618
    2. ' ' → logprob: -1.6004139184951782
    3. ' ' → logprob: -13.975414276123047
    4. '  ' → logprob: -15.225414276123047
    5. '   ' → logprob: -15.725414276123047
    6. '	' → logprob: -17.162914276123047
    7. '۰' → logprob: -17.912914276123047
    8. '<|end|>' → logprob: -18.225414276123047
    9. '```' → logprob: -18.412914276123047
    10. '​' → logprob: -18.725414276123047

Token 38: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002615742268972099
    2. ' ' → logprob: -8.250261306762695
    3. '۰' → logprob: -16.250261306762695
    4. '০' → logprob: -17.875261306762695
    5. '   ' → logprob: -18.125261306762695
    6. '<|end|>' → logprob: -18.125261306762695
    7. '  ' → logprob: -18.187761306762695
    8. '```' → logprob: -18.437761306762695
    9. '०' → logprob: -18.500261306762695
    10. ' ' → logprob: -18.937761306762695

Token 39: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0011742709903046489
    2. '   ' → logprob: -7.251174449920654
    3. ':
' → logprob: -7.876174449920654
    4. '       ' → logprob: -9.501173973083496
    5. ' :' → logprob: -12.376173973083496
    6. '.' → logprob: -12.751173973083496
    7. ':return' → logprob: -14.126173973083496
    8. '):' → logprob: -14.251173973083496
    9. '	break' → logprob: -15.376173973083496
    10. ',' → logprob: -15.626173973083496

Token 40: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002950243651866913
    2. '   ' → logprob: -6.002950191497803
    3. ':' → logprob: -8.127950668334961
    4. '	' → logprob: -9.002950668334961
    5. ':
' → logprob: -11.002950668334961
    6. '	break' → logprob: -11.502950668334961
    7. '	   ' → logprob: -12.127950668334961
    8. '```' → logprob: -13.127950668334961
    9. '   ' → logprob: -13.252950668334961
    10. '<|end|>' → logprob: -13.252950668334961

Token 41: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.22881610691547394
    2. 'break' (adapté à ' break') → logprob: -1.9788161516189575
    3. '   ' → logprob: -2.728816032409668
    4. '       ' → logprob: -7.228816032409668
    5. '	break' → logprob: -8.228816032409668
    6. '```' → logprob: -13.603816032409668
    7. '_break' → logprob: -13.853816032409668
    8. '           ' → logprob: -15.228816032409668
    9. '    
' → logprob: -15.353816032409668
    10. '-break' → logprob: -15.353816032409668

Token 42: '
' (ID: 198)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.46003854274749756
    2. '
' → logprob: -1.8350385427474976
    3. '   ' → logprob: -1.9600385427474976
    4. '    
' → logprob: -3.460038661956787
    5. ' graph' → logprob: -4.460038661956787
    6. 'heap' → logprob: -5.585038661956787
    7. '```' → logprob: -5.960038661956787
    8. 'distance' → logprob: -6.085038661956787
    9. '\n' → logprob: -6.210038661956787
    10. ' 
' → logprob: -6.335038661956787

Token 43: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1474669873714447
    2. '    
' → logprob: -2.6474668979644775
    3. '
' → logprob: -3.1474668979644775
    4. '\n' → logprob: -5.022467136383057
    5. 'graph' → logprob: -5.272467136383057
    6. '```' → logprob: -5.522467136383057
    7. '<|end|>' → logprob: -6.147467136383057
    8. 'heap' → logprob: -6.272467136383057
    9. ' 
' → logprob: -7.647467136383057
    10. '' → logprob: -8.272466659545898

Token 44: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.03771711885929108
    2. ' graph' → logprob: -3.53771710395813
    3. '   ' → logprob: -6.287717342376709
    4. '    
' → logprob: -6.287717342376709
    5. '
' → logprob: -6.912717342376709
    6. 'distance' → logprob: -7.162717342376709
    7. 'dist' → logprob: -7.162717342376709
    8. 'edges' → logprob: -8.03771686553955
    9. ' 
' → logprob: -8.16271686553955
    10. '	graph' → logprob: -8.78771686553955

Token 45: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009885353036224842
    2. '=' → logprob: -4.634885311126709
    3. '[' → logprob: -9.009885787963867
    4. ' ' → logprob: -13.259885787963867
    5. '[]' → logprob: -14.134885787963867
    6. ']' → logprob: -14.259885787963867
    7. ',' → logprob: -14.384885787963867
    8. ' =[' → logprob: -14.384885787963867
    9. '=[]' → logprob: -14.509885787963867
    10. ')' → logprob: -14.759885787963867

Token 46: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5250593423843384
    2. ' [[]' → logprob: -1.2750593423843384
    3. '{' → logprob: -2.275059223175049
    4. '{}' → logprob: -4.400059223175049
    5. ' {' → logprob: -5.025059223175049
    6. ' [' → logprob: -5.150059223175049
    7. '[]' → logprob: -6.900059223175049
    8. 'default' → logprob: -8.525059700012207
    9. ' defaultdict' → logprob: -8.900059700012207
    10. ' {}' → logprob: -9.025059700012207

Token 47: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.11485559493303299
    2. 'for' → logprob: -2.2398555278778076
    3. ')' → logprob: -6.614855766296387
    4. ']' → logprob: -7.739855766296387
    5. ',' → logprob: -8.489855766296387
    6. '	for' → logprob: -11.364855766296387
    7. '   ' → logprob: -11.989855766296387
    8. '<|end|>' → logprob: -12.239855766296387
    9. ' ' → logprob: -12.364855766296387
    10. '
' → logprob: -12.989855766296387

Token 48: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.37482166290283203
    2. ' range' → logprob: -1.624821662902832
    3. 'range' → logprob: -2.374821662902832
    4. '(range' → logprob: -4.499821662902832
    5. ' in' → logprob: -5.749821662902832
    6. 'in' → logprob: -5.874821662902832
    7. '(' → logprob: -5.999821662902832
    8. '_range' → logprob: -6.874821662902832
    9. ' _' → logprob: -7.124821662902832
    10. ' ' → logprob: -7.249821662902832

Token 49: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.32381096482276917
    2. ' in' → logprob: -1.3238109350204468
    3. 'range' → logprob: -4.573811054229736
    4. 'i' → logprob: -9.323810577392578
    5. ' range' → logprob: -10.323810577392578
    6. ' ' → logprob: -10.323810577392578
    7. 'n' → logprob: -11.823810577392578
    8. '_' → logprob: -12.323810577392578
    9. 'x' → logprob: -13.198810577392578
    10. ')' → logprob: -13.323810577392578

Token 50: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04859123006463051
    2. ' range' → logprob: -3.048591136932373
    3. '(range' → logprob: -12.548591613769531
    4. '	range' → logprob: -15.548591613769531
    5. '   ' → logprob: -16.42359161376953
    6. ' ' → logprob: -16.92359161376953
    7. ')' → logprob: -17.29859161376953
    8. ']' → logprob: -18.04859161376953
    9. '  ' → logprob: -19.42359161376953
    10. 'r' → logprob: -19.79859161376953

Token 51: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -7.505351095460355e-05
    2. '(' → logprob: -9.500075340270996
    3. 'n' → logprob: -16.75007438659668
    4. ' (' → logprob: -17.12507438659668
    5. ')n' → logprob: -18.37507438659668
    6. '(N' → logprob: -19.12507438659668
    7. '((' → logprob: -19.75007438659668
    8. '(
' → logprob: -19.87507438659668
    9. '(nx' → logprob: -19.87507438659668
    10. ')' → logprob: -20.00007438659668

Token 52: ' +' (ID: 659)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -2.339278580620885e-06
    2. ')' → logprob: -14.375001907348633
    3. ']' → logprob: -14.500001907348633
    4. ')]
' → logprob: -14.625001907348633
    5. ' )' → logprob: -14.750001907348633
    6. '+' → logprob: -15.500001907348633
    7. ')]

' → logprob: -17.750001907348633
    8. '))' → logprob: -18.250001907348633
    9. '')]' → logprob: -18.250001907348633
    10. '   ' → logprob: -18.375001907348633

Token 53: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004886920796707273
    2. ' ' → logprob: -7.625488758087158
    3. '2' → logprob: -14.37548828125
    4. ')' → logprob: -16.50048828125
    5. '   ' → logprob: -17.37548828125
    6. '(' → logprob: -17.50048828125
    7. '7' → logprob: -17.50048828125
    8. '  ' → logprob: -18.12548828125
    9. '```' → logprob: -18.87548828125
    10. '１' → logprob: -19.25048828125

Token 54: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5094070477061905e-05
    2. ' ' → logprob: -11.125015258789062
    3. '```' → logprob: -16.375015258789062
    4. '2' → logprob: -16.500015258789062
    5. '１' → logprob: -17.250015258789062
    6. '   ' → logprob: -17.500015258789062
    7. '0' → logprob: -17.687515258789062
    8. '  ' → logprob: -18.937515258789062
    9. ')' → logprob: -18.937515258789062
    10. '۱' → logprob: -18.937515258789062

Token 55: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.12720945477485657
    2. ']' → logprob: -2.377209424972534
    3. ')' → logprob: -3.627209424972534
    4. '   ' → logprob: -10.752209663391113
    5. ' ]' → logprob: -11.627209663391113
    6. '])' → logprob: -11.752209663391113
    7. ' )' → logprob: -12.627209663391113
    8. ']
' → logprob: -12.752209663391113
    9. ')])' → logprob: -13.752209663391113
    10. ')
' → logprob: -13.877209663391113

Token 56: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9103125333786011
    2. 'for' → logprob: -1.035312533378601
    3. ' for' → logprob: -1.910312533378601
    4. '    
' → logprob: -3.2853126525878906
    5. '
' → logprob: -3.5353126525878906
    6. ' 
' → logprob: -4.785312652587891
    7. '  
' → logprob: -5.285312652587891
    8. '<|end|>' → logprob: -5.660312652587891
    9. '	for' → logprob: -5.785312652587891
    10. '   
' → logprob: -6.285312652587891

Token 57: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.01643502712249756
    2. ' for' → logprob: -4.516435146331787
    3. '   ' → logprob: -5.391435146331787
    4. ' ' → logprob: -8.391434669494629
    5. '    
' → logprob: -8.391434669494629
    6. '	for' → logprob: -8.891434669494629
    7. '    ' → logprob: -9.891434669494629
    8. '  
' → logprob: -10.141434669494629
    9. '  ' → logprob: -10.266434669494629
    10. ' 
' → logprob: -10.391434669494629

Token 58: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.023249322548508644
    2. '_' → logprob: -3.773249387741089
    3. ' ' → logprob: -13.023249626159668
    4. ' i' → logprob: -13.773249626159668
    5. ' ‌' → logprob: -15.398249626159668
    6. '_i' → logprob: -15.523249626159668
    7. ' _
' → logprob: -17.14824867248535
    8. ' ' → logprob: -17.52324867248535
    9. ' ▁' → logprob: -17.52324867248535
    10. ' __' → logprob: -17.64824867248535

Token 59: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.055002566426992416
    2. 'in' → logprob: -2.930002450942993
    3. ' ' → logprob: -9.305002212524414
    4. '_' → logprob: -12.055002212524414
    5. '  ' → logprob: -12.055002212524414
    6. '	in' → logprob: -12.555002212524414
    7. '<|end|>' → logprob: -12.555002212524414
    8. ' _' → logprob: -12.930002212524414
    9. 'n' → logprob: -13.180002212524414
    10. '```' → logprob: -13.555002212524414

Token 60: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0003360582049936056
    2. ' range' → logprob: -8.000335693359375
    3. '(range' → logprob: -15.750335693359375
    4. 'ran' → logprob: -16.250335693359375
    5. '	range' → logprob: -16.250335693359375
    6. 'rang' → logprob: -16.375335693359375
    7. 'r' → logprob: -16.750335693359375
    8. 'ange' → logprob: -17.000335693359375
    9. ')' → logprob: -17.625335693359375
    10. '```' → logprob: -17.750335693359375

Token 61: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.008874905295670033
    2. 'm' → logprob: -4.758874893188477
    3. ' m' → logprob: -9.258874893188477
    4. '(' → logprob: -9.383874893188477
    5. ' (' → logprob: -9.508874893188477
    6. '   ' → logprob: -12.133874893188477
    7. '	m' → logprob: -14.008874893188477
    8. ',m' → logprob: -15.133874893188477
    9. ')m' → logprob: -15.508874893188477
    10. '(M' → logprob: -16.633874893188477

Token 62: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0005270573310554028
    2. ' ):' → logprob: -8.000527381896973
    3. '):
' → logprob: -9.125527381896973
    4. ':' → logprob: -9.750527381896973
    5. ')' → logprob: -11.500527381896973
    6. ',' → logprob: -12.375527381896973
    7. '   ' → logprob: -12.375527381896973
    8. '():' → logprob: -13.375527381896973
    9. '):
' → logprob: -13.875527381896973
    10. ' :' → logprob: -14.375527381896973

Token 63: '       ' (ID: 309)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.219451904296875
    2. 'u' → logprob: -1.844451904296875
    3. '   ' → logprob: -3.594451904296875
    4. '       ' → logprob: -4.969451904296875
    5. '	u' → logprob: -6.219451904296875
    6. '    ' → logprob: -6.844451904296875
    7. 'a' → logprob: -7.969451904296875
    8. ',u' → logprob: -8.219451904296875
    9. ' ' → logprob: -8.469451904296875
    10. ',' → logprob: -9.469451904296875

Token 64: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.19075411558151245
    2. 'u' → logprob: -1.8157541751861572
    3. ' a' → logprob: -5.065753936767578
    4. ' u' → logprob: -5.815753936767578
    5. 's' → logprob: -6.815753936767578
    6. '   ' → logprob: -7.940753936767578
    7. 'from' → logprob: -9.940753936767578
    8. 'x' → logprob: -10.190753936767578
    9. 'start' → logprob: -10.315753936767578
    10. ' s' → logprob: -10.940753936767578

Token 65: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0033188804518431425
    2. ' ,' → logprob: -5.878318786621094
    3. ',b' → logprob: -7.628318786621094
    4. 'b' → logprob: -10.628318786621094
    5. ' b' → logprob: -13.003318786621094
    6. ' ' → logprob: -14.878318786621094
    7. ',
' → logprob: -16.253318786621094
    8. '‌,' → logprob: -16.628318786621094
    9. ',a' → logprob: -17.003318786621094
    10. ',v' → logprob: -17.003318786621094

Token 66: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.3133006691932678
    2. ' b' → logprob: -1.313300609588623
    3. ' ' → logprob: -10.313301086425781
    4. '<|end|>' → logprob: -12.688301086425781
    5. '    ' → logprob: -14.438301086425781
    6. ',' → logprob: -14.688301086425781
    7. ',b' → logprob: -14.688301086425781
    8. '  ' → logprob: -15.313301086425781
    9. '   ' → logprob: -15.563301086425781
    10. 'space' → logprob: -15.563301086425781

Token 67: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13671047985553741
    2. '=' → logprob: -2.1367104053497314
    3. ' =' → logprob: -4.7617106437683105
    4. ' ,' → logprob: -6.7617106437683105
    5. '   ' → logprob: -11.386710166931152
    6. ' ' → logprob: -13.011710166931152
    7. ',c' → logprob: -13.136710166931152
    8. '    ' → logprob: -13.261710166931152
    9. '  ' → logprob: -13.636710166931152
    10. ')' → logprob: -14.136710166931152

Token 68: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.014245656318962574
    2. 'w' → logprob: -5.014245510101318
    3. 't' → logprob: -5.764245510101318
    4. 'cost' → logprob: -6.389245510101318
    5. 'd' → logprob: -6.764245510101318
    6. ' c' → logprob: -7.014245510101318
    7. '1' → logprob: -8.639245986938477
    8. 'l' → logprob: -9.014245986938477
    9. 'p' → logprob: -9.639245986938477
    10. '0' → logprob: -10.139245986938477

Token 69: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931501030921936
    2. ' =' → logprob: -0.6931501030921936
    3. ' ' → logprob: -13.693150520324707
    4. '   ' → logprob: -14.443150520324707
    5. ',' → logprob: -14.818150520324707
    6. ')' → logprob: -14.943150520324707
    7. '  ' → logprob: -16.06814956665039
    8. '＝' → logprob: -17.19314956665039
    9. '=int' → logprob: -17.19314956665039
    10. '=

' → logprob: -17.19314956665039

Token 70: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.014164566993713379
    2. 'map' → logprob: -4.264164447784424
    3. '	map' → logprob: -14.014164924621582
    4. ' ' → logprob: -15.639164924621582
    5. ' ' → logprob: -16.264163970947266
    6. ' list' → logprob: -18.139163970947266
    7. '   ' → logprob: -18.264163970947266
    8. '  ' → logprob: -18.264163970947266
    9. ' ma' → logprob: -18.264163970947266
    10. 'm' → logprob: -18.389163970947266

Token 71: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.004638861399143934
    2. '(' → logprob: -5.379638671875
    3. '(input' → logprob: -11.629638671875
    4. '<int' → logprob: -12.254638671875
    5. 'int' → logprob: -13.879638671875
    6. '<|end|>' → logprob: -13.879638671875
    7. '(str' → logprob: -14.004638671875
    8. '=int' → logprob: -14.754638671875
    9. '[int' → logprob: -14.879638671875
    10. '(
' → logprob: -14.879638671875

Token 72: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013052455149590969
    2. '(' → logprob: -5.013052463531494
    3. ',input' → logprob: -5.263052463531494
    4. '(input' → logprob: -7.138052463531494
    5. ')' → logprob: -8.388051986694336
    6. ' ,' → logprob: -9.888051986694336
    7. '<|end|>' → logprob: -11.013051986694336
    8. 'input' → logprob: -11.388051986694336
    9. '<|end|>' → logprob: -12.013051986694336
    10. '(),' → logprob: -12.013051986694336

Token 73: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5759398937225342
    2. 'input' → logprob: -0.8259398937225342
    3. '	input' → logprob: -15.825940132141113
    4. '<input' → logprob: -16.325939178466797
    5. ' ' → logprob: -16.825939178466797
    6. '=input' → logprob: -16.825939178466797
    7. '_input' → logprob: -17.075939178466797
    8. '(input' → logprob: -17.325939178466797
    9. ',input' → logprob: -17.700939178466797
    10. ')' → logprob: -17.825939178466797

Token 74: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.5941604690160602e-05
    2. '()' → logprob: -10.625025749206543
    3. ')' → logprob: -14.000025749206543
    4. '())' → logprob: -14.875025749206543
    5. '(' → logprob: -15.625025749206543
    6. '.' → logprob: -16.75002670288086
    7. ' ().' → logprob: -16.75002670288086
    8. '());' → logprob: -17.87502670288086
    9. '().__' → logprob: -18.00002670288086
    10. '.readline' → logprob: -18.12502670288086

Token 75: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.054500666621607e-06
    2. 'strip' → logprob: -13.12500286102295
    3. ')' → logprob: -14.75000286102295
    4. 'rstrip' → logprob: -15.50000286102295
    5. '(split' → logprob: -15.75000286102295
    6. 'spl' → logprob: -16.375003814697266
    7. ' split' → logprob: -16.500003814697266
    8. 's' → logprob: -17.125003814697266
    9. '```' → logprob: -17.625003814697266
    10. 'plit' → logprob: -17.750003814697266

Token 76: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.3676733690081164e-05
    2. '()' → logprob: -11.37502384185791
    3. ')
' → logprob: -12.50002384185791
    4. ' )' → logprob: -13.00002384185791
    5. '))' → logprob: -13.12502384185791
    6. '())' → logprob: -13.25002384185791
    7. '(' → logprob: -14.25002384185791
    8. '   ' → logprob: -14.87502384185791
    9. '`)' → logprob: -15.00002384185791
    10. ')`' → logprob: -15.00002384185791

Token 77: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5690432786941528
    2. ')' → logprob: -1.9440432786941528
    3. '    
' → logprob: -2.3190431594848633
    4. '
' → logprob: -2.4440431594848633
    5. '<|end|>' → logprob: -2.9440431594848633
    6. ' 
' → logprob: -3.6940431594848633
    7. '\n' → logprob: -4.819043159484863
    8. '  
' → logprob: -4.819043159484863
    9. '   
' → logprob: -5.944043159484863
    10. '	graph' → logprob: -6.569043159484863

Token 78: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.6562895774841309
    2. ' graph' → logprob: -0.7812895774841309
    3. '   ' → logprob: -4.531289577484131
    4. ' 
' → logprob: -5.656289577484131
    5. '	graph' → logprob: -5.656289577484131
    6. '
' → logprob: -5.781289577484131
    7. ' ' → logprob: -7.531289577484131
    8. '(graph' → logprob: -7.781289577484131
    9. '    
' → logprob: -7.906289577484131
    10. '    ' → logprob: -8.281290054321289

Token 79: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.00017433916218578815
    2. '[' → logprob: -8.750174522399902
    3. '[b' → logprob: -11.250174522399902
    4. 'a' → logprob: -13.250174522399902
    5. '[c' → logprob: -14.250174522399902
    6. '```' → logprob: -15.750174522399902
    7. ' [' → logprob: -16.125173568725586
    8. '[A' → logprob: -16.875173568725586
    9. '[u' → logprob: -17.375173568725586
    10. '   ' → logprob: -18.000173568725586

Token 80: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.032865289598703384
    2. ').' → logprob: -3.907865285873413
    3. '.' → logprob: -4.657865524291992
    4. '.append' → logprob: -6.657865524291992
    5. ']' → logprob: -7.157865524291992
    6. '[' → logprob: -7.782865524291992
    7. ')' → logprob: -8.657865524291992
    8. ' ].' → logprob: -10.032865524291992
    9. '   ' → logprob: -10.407865524291992
    10. '}.' → logprob: -11.907865524291992

Token 81: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -9.968312951968983e-06
    2. 'push' → logprob: -11.750009536743164
    3. '.append' → logprob: -14.250009536743164
    4. ' append' → logprob: -14.625009536743164
    5. 'app' → logprob: -14.750009536743164
    6. 'appen' → logprob: -15.125009536743164
    7. ' ' → logprob: -16.250009536743164
    8. '```' → logprob: -16.250009536743164
    9. '_append' → logprob: -16.375009536743164
    10. 'Append' → logprob: -17.250009536743164

Token 82: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.014189479872584343
    2. '(' → logprob: -4.26418924331665
    3. '(b' → logprob: -10.639189720153809
    4. ' (' → logprob: -13.514189720153809
    5. '(B' → logprob: -15.014189720153809
    6. '([' → logprob: -15.764189720153809
    7. ' ((' → logprob: -16.389188766479492
    8. '(
' → logprob: -17.264188766479492
    9. '(a' → logprob: -17.889188766479492
    10. '```' → logprob: -17.889188766479492

Token 83: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.007607100997120142
    2. ' b' → logprob: -4.8826069831848145
    3. 'c' → logprob: -14.132607460021973
    4. ' ' → logprob: -15.632607460021973
    5. '   ' → logprob: -16.382606506347656
    6. ')b' → logprob: -16.757606506347656
    7. '	b' → logprob: -17.507606506347656
    8. ' c' → logprob: -18.132606506347656
    9. ',b' → logprob: -18.507606506347656
    10. '  ' → logprob: -18.632606506347656

Token 84: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001991682220250368
    2. ' ,' → logprob: -6.5019917488098145
    3. ',c' → logprob: -7.6269917488098145
    4. 'c' → logprob: -14.126991271972656
    5. '`,' → logprob: -14.876991271972656
    6. ',
' → logprob: -15.001991271972656
    7. '‌,' → logprob: -15.251991271972656
    8. '```' → logprob: -16.251991271972656
    9. ' ' → logprob: -16.501991271972656
    10. '),' → logprob: -16.751991271972656

Token 85: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.2257860153913498
    2. 'c' → logprob: -1.6007859706878662
    3. ' ' → logprob: -8.475786209106445
    4. ' ' → logprob: -8.975786209106445
    5. ')c' → logprob: -10.600786209106445
    6. ' )' → logprob: -12.350786209106445
    7. ')' → logprob: -12.350786209106445
    8. '	c' → logprob: -13.850786209106445
    9. ' 
' → logprob: -13.850786209106445
    10. ',c' → logprob: -14.600786209106445

Token 86: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0014489218592643738
    2. ')' → logprob: -6.751449108123779
    3. '))
' → logprob: -8.626448631286621
    4. ' ))' → logprob: -9.751448631286621
    5. ',' → logprob: -10.501448631286621
    6. ')))' → logprob: -12.126448631286621
    7. '),' → logprob: -12.626448631286621
    8. '   ' → logprob: -13.751448631286621
    9. ' ' → logprob: -14.001448631286621
    10. ' )' → logprob: -14.251448631286621

Token 87: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 88: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.0736972913146019
    2. ' graph' → logprob: -2.698697328567505
    3. '	graph' → logprob: -6.073697090148926
    4. '   ' → logprob: -7.698697090148926
    5. '       ' → logprob: -7.698697090148926
    6. '(graph' → logprob: -8.698697090148926
    7. '<|end|>' → logprob: -8.823697090148926
    8. ' ' → logprob: -9.448697090148926
    9. ')' → logprob: -10.948697090148926
    10. '    ' → logprob: -11.073697090148926

Token 89: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -1.282920129597187e-05
    2. '[' → logprob: -12.000012397766113
    3. '[a' → logprob: -12.500012397766113
    4. 'b' → logprob: -13.125012397766113
    5. ' [' → logprob: -15.250012397766113
    6. '```' → logprob: -15.375012397766113
    7. '[B' → logprob: -16.00001335144043
    8. '[c' → logprob: -16.00001335144043
    9. '[s' → logprob: -16.37501335144043
    10. '	b' → logprob: -17.50001335144043

Token 90: '].' (ID: 1651)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.6898868680000305
    2. ',' → logprob: -0.8148868680000305
    3. '.' → logprob: -3.5648868083953857
    4. ')' → logprob: -4.064887046813965
    5. '.append' → logprob: -5.439887046813965
    6. '].' → logprob: -6.314887046813965
    7. '       ' → logprob: -6.689887046813965
    8. ' ,' → logprob: -7.064887046813965
    9. '   ' → logprob: -7.564887046813965
    10. '<|end|>' → logprob: -7.814887046813965

Token 91: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.1472419600977446e-06
    2. ' append' → logprob: -14.500000953674316
    3. 'appen' → logprob: -15.000000953674316
    4. '	append' → logprob: -15.750000953674316
    5. '.append' → logprob: -16.125001907348633
    6. 'app' → logprob: -18.750001907348633
    7. 'Append' → logprob: -19.000001907348633
    8. 'prepend' → logprob: -19.500001907348633
    9. '```' → logprob: -19.500001907348633
    10. '_append' → logprob: -19.750001907348633

Token 92: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.028124086558818817
    2. '(' → logprob: -3.6531240940093994
    3. ' (' → logprob: -6.40312385559082
    4. '(
' → logprob: -9.15312385559082
    5. ' ((' → logprob: -9.90312385559082
    6. '<|end|>' → logprob: -11.77812385559082
    7. '(a' → logprob: -14.40312385559082
    8. ' ' → logprob: -14.52812385559082
    9. '(b' → logprob: -15.40312385559082
    10. '(
' → logprob: -16.02812385559082

Token 93: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00023047674039844424
    2. ' a' → logprob: -8.87523078918457
    3. '(a' → logprob: -9.37523078918457
    4. ',a' → logprob: -12.50023078918457
    5. ' (' → logprob: -14.25023078918457
    6. '	a' → logprob: -15.12523078918457
    7. ')a' → logprob: -15.12523078918457
    8. ',' → logprob: -15.25023078918457
    9. '(' → logprob: -15.37523078918457
    10. '<|end|>' → logprob: -15.50023078918457

Token 94: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010425841173855588
    2. ' ,' → logprob: -9.250103950500488
    3. ',c' → logprob: -12.000103950500488
    4. '`,' → logprob: -14.375103950500488
    5. '‌,' → logprob: -14.750103950500488
    6. '<|end|>' → logprob: -14.750103950500488
    7. ',
' → logprob: -15.500103950500488
    8. '),' → logprob: -15.875103950500488
    9. '```' → logprob: -16.875104904174805
    10. ' ' → logprob: -16.875104904174805

Token 95: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.005238856188952923
    2. 'c' → logprob: -5.255239009857178
    3. ' ' → logprob: -12.50523853302002
    4. ' ' → logprob: -14.38023853302002
    5. '<|end|>' → logprob: -15.25523853302002
    6. ')c' → logprob: -15.63023853302002
    7. ' )' → logprob: -15.75523853302002
    8. '	c' → logprob: -16.005239486694336
    9. ' 
' → logprob: -16.005239486694336
    10. ')' → logprob: -18.130239486694336

Token 96: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16140060126781464
    2. '))' → logprob: -1.911400556564331
    3. ')
' → logprob: -6.91140079498291
    4. '))
' → logprob: -8.66140079498291
    5. ' )' → logprob: -13.03640079498291
    6. ')))' → logprob: -13.66140079498291
    7. ')

' → logprob: -14.41140079498291
    8. ')
' → logprob: -14.91140079498291
    9. '   ' → logprob: -15.16140079498291
    10. ' ))' → logprob: -15.28640079498291

Token 97: '   ' (ID: 271)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.2801700532436371
    2. 'def' → logprob: -2.28016996383667
    3. 'distance' → logprob: -3.03016996383667
    4. '   ' → logprob: -3.65516996383667
    5. '
' → logprob: -3.90516996383667
    6. 'd' → logprob: -4.03016996383667
    7. '    
' → logprob: -4.15516996383667
    8. 'visited' → logprob: -5.28016996383667
    9. ' dist' → logprob: -6.28016996383667
    10. 'start' → logprob: -6.65516996383667

Token 98: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.05397731438279152
    2. 'def' → logprob: -3.3039772510528564
    3. 'distance' → logprob: -4.3039774894714355
    4. '
' → logprob: -7.3039774894714355
    5. 'start' → logprob: -7.8039774894714355
    6. 'import' → logprob: -8.178977012634277
    7. '   ' → logprob: -8.178977012634277
    8. 'INF' → logprob: -9.053977012634277
    9. 'visited' → logprob: -9.303977012634277
    10. ' dist' → logprob: -9.428977012634277

Token 99: ' dist' (ID: 3601)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6716205477714539
    2. 'def' → logprob: -1.9216206073760986
    3. 'dist' → logprob: -1.9216206073760986
    4. '#' → logprob: -2.2966206073760986
    5. 'distance' → logprob: -3.4216206073760986
    6. 'visited' → logprob: -3.9216206073760986
    7. 'h' → logprob: -5.2966203689575195
    8. 'v' → logprob: -5.4216203689575195
    9. 'start' → logprob: -5.5466203689575195
    10. '   ' → logprob: -5.6716203689575195

Token 100: '[node' (ID: 67268)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23375603556632996
    2. 'ances' → logprob: -2.4837560653686523
    3. '=' → logprob: -2.7337560653686523
    4. 'ance' → logprob: -3.1087560653686523
    5. '[' → logprob: -4.483756065368652
    6. ' ' → logprob: -6.858756065368652
    7. 'a' → logprob: -7.108756065368652
    8. ',' → logprob: -7.733756065368652
    9. 'an' → logprob: -7.733756065368652
    10. '[]' → logprob: -7.983756065368652

Token 101: '][' (ID: 2696)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07373660802841187
    2. 's' → logprob: -3.4487366676330566
    3. ',' → logprob: -3.6987366676330566
    4. ')' → logprob: -4.323736667633057
    5. ']=' → logprob: -7.948736667633057
    6. '])' → logprob: -8.448736190795898
    7. ' ]' → logprob: -8.448736190795898
    8. ' =' → logprob: -8.698736190795898
    9. '[' → logprob: -8.948736190795898
    10. '=' → logprob: -9.323736190795898

Token 102: 'state' (ID: 5294)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10992344468832016
    2. '2' → logprob: -2.3599233627319336
    3. '1' → logprob: -5.109923362731934
    4. 'k' → logprob: -6.734923362731934
    5. 'used' → logprob: -7.109923362731934
    6. 'state' → logprob: -8.359923362731934
    7. 'removed' → logprob: -8.359923362731934
    8. ' ' → logprob: -8.609923362731934
    9. 'mask' → logprob: -9.109923362731934
    10. '3' → logprob: -9.234923362731934

Token 103: ']:' (ID: 12433)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0006812188657931983
    2. ' ]' → logprob: -7.375681400299072
    3. ']=' → logprob: -10.375680923461914
    4. '][' → logprob: -12.000680923461914
    5. 's' → logprob: -12.125680923461914
    6. '[' → logprob: -12.750680923461914
    7. '=' → logprob: -13.375680923461914
    8. ' ' → logprob: -13.625680923461914
    9. ']
' → logprob: -13.875680923461914
    10. '])' → logprob: -14.000680923461914

Token 104: ' minimal' (ID: 19957)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.396950602531433
    2. 'minimum' → logprob: -1.896950602531433
    3. 'distance' → logprob: -2.1469507217407227
    4. ' minimum' → logprob: -2.2719507217407227
    5. 'float' → logprob: -2.6469507217407227
    6. 'min' → logprob: -2.8969507217407227
    7. '[min' → logprob: -2.8969507217407227
    8. ' float' → logprob: -3.3969507217407227
    9. ' min' → logprob: -3.8969507217407227
    10. ' minimal' → logprob: -3.8969507217407227

Token 105: ' cost' (ID: 3097)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1724802255630493
    2. '_' → logprob: -1.6724802255630493
    3. ' distance' → logprob: -1.6724802255630493
    4. ' cost' → logprob: -1.7974802255630493
    5. ' _' → logprob: -3.2974801063537598
    6. 'distance' → logprob: -3.2974801063537598
    7. '_distance' → logprob: -3.5474801063537598
    8. '_cost' → logprob: -4.29748010635376
    9. 'cost' → logprob: -4.42248010635376
    10. '<|end|>' → logprob: -5.79748010635376

Token 106: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7891032099723816
    2. ' =' → logprob: -1.1641032695770264
    3. ' ' → logprob: -2.2891032695770264
    4. '[' → logprob: -2.7891032695770264
    5. '=' → logprob: -3.5391032695770264
    6. '<|end|>' → logprob: -4.789103031158447
    7. '  ' → logprob: -5.039103031158447
    8. ' to' → logprob: -5.039103031158447
    9. ' for' → logprob: -5.289103031158447
    10. ',' → logprob: -5.914103031158447

Token 107: ' reach' (ID: 7627)
  Prédit: ' reach'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reach' → logprob: -0.08054719865322113
    2. 'reach' → logprob: -2.7055470943450928
    3. ' get' → logprob: -6.080547332763672
    4. 're' → logprob: -6.205547332763672
    5. ' visit' → logprob: -6.580547332763672
    6. '   ' → logprob: -6.580547332763672
    7. 'visit' → logprob: -6.580547332763672
    8. ' ' → logprob: -6.705547332763672
    9. 'get' → logprob: -8.580547332763672
    10. '  ' → logprob: -8.955547332763672

Token 108: ' node' (ID: 4596)
  Prédit: ' node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.050886623561382294
    2. 'node' → logprob: -3.175886631011963
    3. '[node' → logprob: -4.925886631011963
    4. ' the' → logprob: -7.925886631011963
    5. '(node' → logprob: -9.175886154174805
    6. 'the' → logprob: -10.550886154174805
    7. ' a' → logprob: -10.800886154174805
    8. ',node' → logprob: -11.175886154174805
    9. ' `' → logprob: -11.300886154174805
    10. '```' → logprob: -11.550886154174805

Token 109: ' with' (ID: 483)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10584839433431625
    2. ' with' → logprob: -2.9808483123779297
    3. '   ' → logprob: -3.6058483123779297
    4. ' [' → logprob: -4.98084831237793
    5. 'with' → logprob: -5.60584831237793
    6. ' =' → logprob: -5.73084831237793
    7. ' ' → logprob: -6.10584831237793
    8. ',' → logprob: -6.48084831237793
    9. '[state' → logprob: -6.48084831237793
    10. '  ' → logprob: -7.60584831237793

Token 110: ' state' (ID: 2608)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.31172990798950195
    2. '2' → logprob: -2.311729907989502
    3. '0' → logprob: -2.686729907989502
    4. ' state' → logprob: -2.936729907989502
    5. '1' → logprob: -3.436729907989502
    6. ' ' → logprob: -4.686729907989502
    7. 'the' → logprob: -6.936729907989502
    8. ' a' → logprob: -7.061729907989502
    9. 'a' → logprob: -7.186729907989502
    10. ' the' → logprob: -7.561729907989502

Token 111: ' (' (ID: 350)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5571880340576172
    2. '_' → logprob: -1.4321880340576172
    3. ' =' → logprob: -2.057188034057617
    4. ' ' → logprob: -3.432188034057617
    5. '=' → logprob: -4.057188034057617
    6. ' _' → logprob: -6.182188034057617
    7. '   ' → logprob: -6.307188034057617
    8. ',' → logprob: -6.432188034057617
    9. '0' → logprob: -6.432188034057617
    10. '[
' → logprob: -7.307188034057617

Token 112: '0' (ID: 15)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.43096664547920227
    2. '0' → logprob: -2.05596661567688
    3. '2' → logprob: -3.05596661567688
    4. ' visited' → logprob: -3.05596661567688
    5. ')' → logprob: -3.43096661567688
    6. 'visited' → logprob: -3.93096661567688
    7. ' the' → logprob: -4.430966854095459
    8. '1' → logprob: -4.930966854095459
    9. ' two' → logprob: -4.930966854095459
    10. ' a' → logprob: -5.305966854095459

Token 113: ':not' (ID: 152506)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.029497280716896057
    2. 'or' → logprob: -3.7794973850250244
    3. ')' → logprob: -5.529497146606445
    4. ',' → logprob: -7.279497146606445
    5. ':' → logprob: -7.529497146606445
    6. ' for' → logprob: -7.779497146606445
    7. '/' → logprob: -8.654497146606445
    8. ' ' → logprob: -9.154497146606445
    9. ' )' → logprob: -9.279497146606445
    10. '=' → logprob: -9.779497146606445

Token 114: ' used' (ID: 2061)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.20266972482204437
    2. ' visited' → logprob: -2.452669620513916
    3. 'used' → logprob: -2.702669620513916
    4. ' used' → logprob: -5.327669620513916
    5. 'removed' → logprob: -6.202669620513916
    6. 'destroy' → logprob: -6.452669620513916
    7. '_' → logprob: -6.577669620513916
    8. 'deleted' → logprob: -6.702669620513916
    9. 'cut' → logprob: -6.952669620513916
    10. ' ' → logprob: -6.952669620513916

Token 115: ' free' (ID: 2240)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.8294568061828613
    2. 'special' → logprob: -2.4544568061828613
    3. 'bomb' → logprob: -2.4544568061828613
    4. 'tele' → logprob: -2.7044568061828613
    5. ' teleport' → logprob: -2.8294568061828613
    6. 'magic' → logprob: -3.0794568061828613
    7. ' ' → logprob: -3.2044568061828613
    8. 'jump' → logprob: -3.3294568061828613
    9. 'dash' → logprob: -3.5794568061828613
    10. '_special' → logprob: -3.5794568061828613

Token 116: ' ticket' (ID: 16681)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.8113325834274292
    2. 'ticket' → logprob: -1.5613325834274292
    3. '_pass' → logprob: -2.4363327026367188
    4. ' ticket' → logprob: -2.5613327026367188
    5. '_ticket' → logprob: -2.6863327026367188
    6. 'ride' → logprob: -3.4363327026367188
    7. 'bie' → logprob: -3.9363327026367188
    8. ' pass' → logprob: -4.686332702636719
    9. ')' → logprob: -4.936332702636719
    10. 'edge' → logprob: -5.061332702636719

Token 117: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015376612544059753
    2. ')' → logprob: -4.890376567840576
    3. ' ,' → logprob: -5.390376567840576
    4. ',
' → logprob: -6.515376567840576
    5. '),' → logprob: -7.140376567840576
    6. ' yet' → logprob: -7.640376567840576
    7. ' or' → logprob: -9.265377044677734
    8. ';' → logprob: -9.515377044677734
    9. '   ' → logprob: -9.640377044677734
    10. ' ' → logprob: -9.640377044677734

Token 118: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10025843977928162
    2. ' ' → logprob: -2.3502583503723145
    3. '<|end|>' → logprob: -11.100258827209473
    4. ')' → logprob: -11.600258827209473
    5. '    ' → logprob: -11.850258827209473
    6. ' 
' → logprob: -12.100258827209473
    7. '   ' → logprob: -12.475258827209473
    8. '  ' → logprob: -12.850258827209473
    9. ' or' → logprob: -13.600258827209473
    10. 'space' → logprob: -13.850258827209473

Token 119: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006719282828271389
    2. ' ' → logprob: -5.00671911239624
    3. '   ' → logprob: -13.631719589233398
    4. '  ' → logprob: -14.131719589233398
    5. '
' → logprob: -14.756719589233398
    6. '    ' → logprob: -14.881719589233398
    7. ')' → logprob: -15.131719589233398
    8. ' or' → logprob: -15.131719589233398
    9. ' 
' → logprob: -15.881719589233398
    10. 'space' → logprob: -16.5067195892334

Token 120: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.027284592390060425
    2. ' :' → logprob: -3.652284622192383
    3. ' used' → logprob: -7.902284622192383
    4. ':not' → logprob: -8.277284622192383
    5. 'used' → logprob: -8.652284622192383
    6. '):' → logprob: -9.527284622192383
    7. ')' → logprob: -10.402284622192383
    8. '=' → logprob: -10.652284622192383
    9. '_used' → logprob: -11.152284622192383
    10. ' =' → logprob: -11.652284622192383

Token 121: 'used' (ID: 4943)
  Prédit: 'used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.330549418926239
    2. ' used' → logprob: -1.3305494785308838
    3. '1' → logprob: -4.080549240112305
    4. ' ' → logprob: -9.455549240112305
    5. ' free' → logprob: -9.830549240112305
    6. 'free' → logprob: -10.580549240112305
    7. '_used' → logprob: -11.080549240112305
    8. 'using' → logprob: -11.330549240112305
    9. 'use' → logprob: -11.830549240112305
    10. '
' → logprob: -12.205549240112305

Token 122: ' free' (ID: 2240)
  Prédit: ' free'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' free' → logprob: -0.3663596212863922
    2. ')' → logprob: -1.9913595914840698
    3. 'free' → logprob: -2.3663597106933594
    4. ' )' → logprob: -3.1163597106933594
    5. '_free' → logprob: -3.9913597106933594
    6. ' ' → logprob: -4.866359710693359
    7. ' ticket' → logprob: -6.491359710693359
    8. 'ticket' → logprob: -7.116359710693359
    9. '_' → logprob: -7.741359710693359
    10. '_ticket' → logprob: -7.991359710693359

Token 123: ' ticket' (ID: 16681)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.2814517617225647
    2. ')' → logprob: -1.78145170211792
    3. ' ticket' → logprob: -2.90645170211792
    4. '_ticket' → logprob: -4.65645170211792
    5. 'ticket' → logprob: -4.78145170211792
    6. '_' → logprob: -6.03145170211792
    7. ' ' → logprob: -6.78145170211792
    8. ')_' → logprob: -9.156452178955078
    9. ' ' → logprob: -9.281452178955078
    10. '_t' → logprob: -9.781452178955078

Token 124: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.6776029699249193e-05
    2. ' )' → logprob: -11.37502670288086
    3. '）' → logprob: -11.87502670288086
    4. ']' → logprob: -13.50002670288086
    5. '])' → logprob: -13.87502670288086
    6. ')]' → logprob: -13.87502670288086
    7. ')
' → logprob: -14.00002670288086
    8. ')`' → logprob: -14.00002670288086
    9. '`)' → logprob: -14.25002670288086
    10. '))' → logprob: -14.50002670288086

Token 125: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21603727340698242
    2. 'dist' → logprob: -1.8410372734069824
    3. '   ' → logprob: -3.4660372734069824
    4. '    
' → logprob: -6.466037273406982
    5. ' dist' → logprob: -6.966037273406982
    6. 'd' → logprob: -7.466037273406982
    7. '	dist' → logprob: -8.21603775024414
    8. ' 
' → logprob: -8.46603775024414
    9. '```' → logprob: -8.59103775024414
    10. '
' → logprob: -8.71603775024414

Token 126: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -4.429896944202483e-05
    2. ' dist' → logprob: -10.250043869018555
    3. '   ' → logprob: -12.875043869018555
    4. '
' → logprob: -13.125043869018555
    5. 'distance' → logprob: -13.250043869018555
    6. 'INF' → logprob: -14.125043869018555
    7. 'import' → logprob: -14.375043869018555
    8. 'inf' → logprob: -15.250043869018555
    9. '	dist' → logprob: -15.250043869018555
    10. 'd' → logprob: -15.625043869018555

Token 127: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11300279200077057
    2. '=' → logprob: -2.2380027770996094
    3. '[' → logprob: -8.86300277709961
    4. '=[' → logprob: -11.48800277709961
    5. '=[[' → logprob: -11.86300277709961
    6. ' =[' → logprob: -11.98800277709961
    7. ')' → logprob: -12.48800277709961
    8. ' ' → logprob: -12.86300277709961
    9. '```' → logprob: -12.98800277709961
    10. ' =
' → logprob: -13.23800277709961

Token 128: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.0031856747809797525
    2. ' [[' → logprob: -5.753185749053955
    3. '[' → logprob: -11.753185272216797
    4. ' [' → logprob: -16.128185272216797
    5. '[
' → logprob: -18.378185272216797
    6. '[['' → logprob: -18.378185272216797
    7. '([[' → logprob: -19.628185272216797
    8. '[(' → logprob: -19.753185272216797
    9. '[n' → logprob: -19.878185272216797
    10. '[node' → logprob: -20.753185272216797

Token 129: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.009729759767651558
    2. 'int' → logprob: -5.259729862213135
    3. '10' → logprob: -5.509729862213135
    4. ' float' → logprob: -8.259729385375977
    5. '1' → logprob: -8.884729385375977
    6. 'sys' → logprob: -11.259729385375977
    7. '   ' → logprob: -11.384729385375977
    8. '100' → logprob: -12.384729385375977
    9. '0' → logprob: -12.509729385375977
    10. 'inf' → logprob: -12.884729385375977

Token 130: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.000891928793862462
    2. '(' → logprob: -8.37589168548584
    3. ''s' → logprob: -9.00089168548584
    4. '   ' → logprob: -9.00089168548584
    5. ''' → logprob: -9.25089168548584
    6. ''in' → logprob: -9.25089168548584
    7. 'inf' → logprob: -9.37589168548584
    8. '("' → logprob: -10.25089168548584
    9. ' ('' → logprob: -10.75089168548584
    10. ' ' → logprob: -11.25089168548584

Token 131: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -3.173704271830502e-06
    2. 'in' → logprob: -12.75000286102295
    3. ''' → logprob: -16.375003814697266
    4. ''in' → logprob: -16.750003814697266
    5. ' inf' → logprob: -17.125003814697266
    6. 'INF' → logprob: -18.625003814697266
    7. 'Inf' → logprob: -18.625003814697266
    8. '_inf' → logprob: -19.250003814697266
    9. '[in' → logprob: -19.625003814697266
    10. 'i' → logprob: -19.750003814697266

Token 132: '')]' (ID: 94377)
  Prédit: '')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')]' → logprob: -0.1858445703983307
    2. ''),' → logprob: -1.9358445405960083
    3. '')' → logprob: -4.310844421386719
    4. ')]' → logprob: -5.560844421386719
    5. ']' → logprob: -5.685844421386719
    6. ')' → logprob: -6.560844421386719
    7. ',' → logprob: -6.560844421386719
    8. '),' → logprob: -7.185844421386719
    9. '],' → logprob: -7.935844421386719
    10. '('' → logprob: -8.685844421386719

Token 133: ' *' (ID: 425)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05795140564441681
    2. ' for' → logprob: -2.9329514503479004
    3. ' ,' → logprob: -6.3079514503479
    4. 'for' → logprob: -7.0579514503479
    5. ']' → logprob: -8.807950973510742
    6. ',
' → logprob: -8.932950973510742
    7. '	for' → logprob: -10.432950973510742
    8. ')' → logprob: -10.807950973510742
    9. ' ' → logprob: -11.182950973510742
    10. ',float' → logprob: -11.307950973510742

Token 134: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.01105442550033331
    2. ' ' → logprob: -4.511054515838623
    3. '   ' → logprob: -12.886054039001465
    4. '(' → logprob: -13.011054039001465
    5. '    ' → logprob: -14.511054039001465
    6. '
' → logprob: -14.886054039001465
    7. '  ' → logprob: -15.011054039001465
    8. ' (' → logprob: -16.51105499267578
    9. '```' → logprob: -16.51105499267578
    10. ')' → logprob: -16.57355499267578

Token 135: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0002659847668837756
    2. ' ' → logprob: -8.250266075134277
    3. '   ' → logprob: -13.000266075134277
    4. '(' → logprob: -13.875266075134277
    5. '
' → logprob: -14.250266075134277
    6. '    ' → logprob: -15.250266075134277
    7. '  ' → logprob: -15.375266075134277
    8. '۲' → logprob: -17.18776512145996
    9. '	' → logprob: -17.25026512145996
    10. '```' → logprob: -17.31276512145996

Token 136: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.03166940063238144
    2. ']' → logprob: -3.7816693782806396
    3. 'for' → logprob: -4.906669616699219
    4. ' ]' → logprob: -7.031669616699219
    5. '   ' → logprob: -10.406669616699219
    6. ' ' → logprob: -10.406669616699219
    7. ',' → logprob: -11.156669616699219
    8. ')' → logprob: -11.281669616699219
    9. '	for' → logprob: -11.531669616699219
    10. '    ' → logprob: -12.531669616699219

Token 137: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.7110875248908997
    2. ' ' → logprob: -0.8360875248908997
    3. ' _' → logprob: -3.711087465286255
    4. '_' → logprob: -3.836087465286255
    5. ' (' → logprob: -4.086087703704834
    6. '<|end|>' → logprob: -4.836087703704834
    7. 'range' → logprob: -7.086087703704834
    8. ' i' → logprob: -7.336087703704834
    9. '(range' → logprob: -7.336087703704834
    10. ' xrange' → logprob: -7.461087703704834

Token 138: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04278471693396568
    2. 'in' → logprob: -3.2927846908569336
    3. 'range' → logprob: -5.417784690856934
    4. ' range' → logprob: -8.292784690856934
    5. ' ' → logprob: -10.167784690856934
    6. '(range' → logprob: -12.792784690856934
    7. 'n' → logprob: -13.792784690856934
    8. '  ' → logprob: -13.917784690856934
    9. '(' → logprob: -14.542784690856934
    10. 'ange' → logprob: -15.417784690856934

Token 139: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5759763121604919
    2. ' range' → logprob: -0.8259763121604919
    3. '(range' → logprob: -10.325976371765137
    4. '	range' → logprob: -13.075976371765137
    5. ' ' → logprob: -13.825976371765137
    6. '   ' → logprob: -15.325976371765137
    7. '[' → logprob: -15.575976371765137
    8. ' xrange' → logprob: -15.700976371765137
    9. 'r' → logprob: -16.70097541809082
    10. 'rang' → logprob: -16.82597541809082

Token 140: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.011541464366018772
    2. '(' → logprob: -4.511541366577148
    3. ' (' → logprob: -7.636541366577148
    4. '(range' → logprob: -11.886541366577148
    5. ' range' → logprob: -13.511541366577148
    6. ' n' → logprob: -14.511541366577148
    7. 'range' → logprob: -14.511541366577148
    8. '(
' → logprob: -14.511541366577148
    9. '((' → logprob: -14.761541366577148
    10. 'n' → logprob: -15.136541366577148

Token 141: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.252167284488678
    2. ' +' → logprob: -1.5021672248840332
    3. '+
' → logprob: -9.002167701721191
    4. ' +
' → logprob: -9.252167701721191
    5. ' ' → logprob: -12.252167701721191
    6. ')' → logprob: -12.377167701721191
    7. '
' → logprob: -13.002167701721191
    8. '<|end|>' → logprob: -13.252167701721191
    9. '＋' → logprob: -13.877167701721191
    10. ')+' → logprob: -14.002167701721191

Token 142: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003420183784328401
    2. ' ' → logprob: -8.00034236907959
    3. '   ' → logprob: -12.25034236907959
    4. ')' → logprob: -14.50034236907959
    5. '<|end|>' → logprob: -14.87534236907959
    6. '  ' → logprob: -15.37534236907959
    7. '```' → logprob: -15.62534236907959
    8. '
' → logprob: -16.187841415405273
    9. '0' → logprob: -16.250341415405273
    10. '    ' → logprob: -16.437841415405273

Token 143: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.47495681833243e-05
    2. ' ' → logprob: -10.625024795532227
    3. 'range' → logprob: -16.375024795532227
    4. ')' → logprob: -16.625024795532227
    5. '   ' → logprob: -16.875024795532227
    6. '0' → logprob: -17.250024795532227
    7. '```' → logprob: -17.500024795532227
    8. '(' → logprob: -17.500024795532227
    9. '2' → logprob: -17.625024795532227
    10. ')]' → logprob: -18.375024795532227

Token 144: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0015496177366003394
    2. ']' → logprob: -6.62654972076416
    3. ')' → logprob: -8.50154972076416
    4. '])' → logprob: -11.50154972076416
    5. '])]' → logprob: -12.12654972076416
    6. ' )' → logprob: -13.62654972076416
    7. ' ]' → logprob: -14.00154972076416
    8. ')])' → logprob: -14.00154972076416
    9. ')],' → logprob: -14.62654972076416
    10. '   ' → logprob: -14.75154972076416

Token 145: '   ' (ID: 271)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.39763376116752625
    2. '
' → logprob: -1.1476337909698486
    3. '   ' → logprob: -4.8976335525512695
    4. '    
' → logprob: -6.8976335525512695
    5. ' dist' → logprob: -6.8976335525512695
    6. ' 
' → logprob: -8.02263355255127
    7. '	dist' → logprob: -8.02263355255127
    8. '
' → logprob: -8.14763355255127
    9. '_dist' → logprob: -9.52263355255127
    10. '  
' → logprob: -9.64763355255127

Token 146: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.028560714796185493
    2. ' dist' → logprob: -3.6535606384277344
    3. '
' → logprob: -6.403560638427734
    4. ' 
' → logprob: -7.778560638427734
    5. '	dist' → logprob: -9.653560638427734
    6. '   ' → logprob: -9.778560638427734
    7. '    
' → logprob: -10.028560638427734
    8. '_dist' → logprob: -12.153560638427734
    9. '  
' → logprob: -12.528560638427734
    10. '   
' → logprob: -13.028560638427734

Token 147: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.128163257315464e-07
    2. ' [' → logprob: -16.625
    3. '```' → logprob: -16.625
    4. '\[' → logprob: -17.0
    5. '[start' → logprob: -17.625
    6. '[n' → logprob: -17.875
    7. '[
' → logprob: -17.875
    8. '][' → logprob: -18.0
    9. '0' → logprob: -18.25
    10. '1' → logprob: -18.875

Token 148: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018649426056072116
    2. '][' → logprob: -9.500186920166016
    3. '0' → logprob: -9.875186920166016
    4. '[' → logprob: -10.625186920166016
    5. ']' → logprob: -10.750186920166016
    6. ' ' → logprob: -12.000186920166016
    7. 'start' → logprob: -13.125186920166016
    8. ')' → logprob: -13.375186920166016
    9. '   ' → logprob: -14.125186920166016
    10. 's' → logprob: -14.250186920166016

Token 149: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0010124455438926816
    2. ' ][' → logprob: -7.251012325286865
    3. ']' → logprob: -8.126012802124023
    4. '[' → logprob: -12.251012802124023
    5. '   ' → logprob: -14.626012802124023
    6. ' ]' → logprob: -14.626012802124023
    7. ')][' → logprob: -15.001012802124023
    8. '()][' → logprob: -15.501012802124023
    9. '"][' → logprob: -15.876012802124023
    10. ' ' → logprob: -16.251012802124023

Token 150: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.534558552724775e-05
    2. ' ' → logprob: -10.625025749206543
    3. '1' → logprob: -13.875025749206543
    4. '   ' → logprob: -18.000024795532227
    5. '۰' → logprob: -18.625024795532227
    6. '```' → logprob: -19.000024795532227
    7. '０' → logprob: -20.062524795532227
    8. '
' → logprob: -20.750024795532227
    9. '  ' → logprob: -21.062524795532227
    10. '০' → logprob: -21.062524795532227

Token 151: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0017320599872618914
    2. ' ]' → logprob: -6.376731872558594
    3. ']=' → logprob: -10.626731872558594
    4. '=' → logprob: -12.251731872558594
    5. ' =' → logprob: -14.376731872558594
    6. '`]' → logprob: -16.001731872558594
    7. ')' → logprob: -16.376731872558594
    8. ' ' → logprob: -17.376731872558594
    9. ')]' → logprob: -17.501731872558594
    10. '   ' → logprob: -17.626731872558594

Token 152: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1002078503370285
    2. ' =' → logprob: -2.350207805633545
    3. '=
' → logprob: -14.600208282470703
    4. ' =
' → logprob: -14.725208282470703
    5. ' ' → logprob: -16.475208282470703
    6. '=

' → logprob: -16.850208282470703
    7. '＝' → logprob: -17.225208282470703
    8. '=int' → logprob: -17.475208282470703
    9. ')=' → logprob: -17.475208282470703
    10. ',' → logprob: -17.725208282470703

Token 153: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.5597102396423e-05
    2. ' ' → logprob: -10.250035285949707
    3. '   ' → logprob: -16.625036239624023
    4. '  ' → logprob: -18.125036239624023
    5. ' ' → logprob: -18.250036239624023
    6. '۰' → logprob: -18.250036239624023
    7. '    ' → logprob: -19.812536239624023
    8. '00' → logprob: -20.000036239624023
    9. '000' → logprob: -20.187536239624023
    10. '０' → logprob: -20.375036239624023

Token 154: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '۰' → logprob: -19.125001907348633
    4. '   ' → logprob: -20.375001907348633
    5. '０' → logprob: -21.250001907348633
    6. '000' → logprob: -21.312501907348633
    7. '00' → logprob: -21.437501907348633
    8. ' ' → logprob: -21.500001907348633
    9. '০' → logprob: -21.562501907348633
    10. '  ' → logprob: -21.937501907348633

Token 155: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17062081396579742
    2. 'pq' → logprob: -2.170620918273926
    3. '   ' → logprob: -3.420620918273926
    4. '    
' → logprob: -5.295620918273926
    5. 'heap' → logprob: -5.420620918273926
    6. '
' → logprob: -8.795620918273926
    7. 'priority' → logprob: -8.795620918273926
    8. 'queue' → logprob: -8.920620918273926
    9. '  
' → logprob: -9.545620918273926
    10. 'hq' → logprob: -10.295620918273926

Token 156: '   ' (ID: 271)
  Prédit: 'pq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pq' → logprob: -0.11782381683588028
    2. '   ' → logprob: -3.117823839187622
    3. 'heap' → logprob: -3.617823839187622
    4. 'hq' → logprob: -3.867823839187622
    5. '
' → logprob: -4.492823600769043
    6. 'queue' → logprob: -5.742823600769043
    7. '    
' → logprob: -5.992823600769043
    8. 'q' → logprob: -6.242823600769043
    9. 'priority' → logprob: -8.867823600769043
    10. 'h' → logprob: -9.742823600769043

Token 157: ' h' (ID: 312)
  Prédit: 'pq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pq' → logprob: -0.05723995342850685
    2. 'hq' → logprob: -3.5572400093078613
    3. 'heap' → logprob: -3.8072400093078613
    4. 'queue' → logprob: -5.557240009307861
    5. 'q' → logprob: -7.307240009307861
    6. '   ' → logprob: -8.682239532470703
    7. '
' → logprob: -9.307239532470703
    8. '    
' → logprob: -9.807239532470703
    9. 'priority' → logprob: -10.682239532470703
    10. 'h' (adapté à ' h') → logprob: -11.057239532470703

Token 158: 'q' (ID: 80)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.25862041115760803
    2. 'q' → logprob: -1.6336203813552856
    3. 'p' → logprob: -4.133620262145996
    4. ' =' → logprob: -4.383620262145996
    5. '=' → logprob: -6.008620262145996
    6. ',' → logprob: -6.883620262145996
    7. '   ' → logprob: -8.758620262145996
    8. ' ' → logprob: -9.133620262145996
    9. 'heap' → logprob: -9.508620262145996
    10. 'eep' → logprob: -9.508620262145996

Token 159: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0017968006432056427
    2. '=' → logprob: -6.376796722412109
    3. ' ' → logprob: -9.50179672241211
    4. '.' → logprob: -11.50179672241211
    5. '=[]' → logprob: -12.37679672241211
    6. '.append' → logprob: -13.25179672241211
    7. 'q' → logprob: -14.00179672241211
    8. ',' → logprob: -14.25179672241211
    9. ' =[' → logprob: -14.75179672241211
    10. ')' → logprob: -14.87679672241211

Token 160: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.006404843181371689
    2. ' [(' → logprob: -5.256404876708984
    3. '[]' → logprob: -6.756404876708984
    4. '[]
' → logprob: -12.631404876708984
    5. ' []' → logprob: -12.756404876708984
    6. '[' → logprob: -14.256404876708984
    7. '[((' → logprob: -16.381404876708984
    8. '([(' → logprob: -17.256404876708984
    9. ' []
' → logprob: -18.256404876708984
    10. '[]

' → logprob: -18.381404876708984

Token 161: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00014537633978761733
    2. '(' → logprob: -9.000144958496094
    3. ' ' → logprob: -10.750144958496094
    4. ' (' → logprob: -15.500144958496094
    5. '   ' → logprob: -15.500144958496094
    6. ')' → logprob: -16.750144958496094
    7. '```' → logprob: -17.625144958496094
    8. 'dist' → logprob: -18.000144958496094
    9. ',' → logprob: -18.125144958496094
    10. '  ' → logprob: -18.250144958496094

Token 162: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016039233014453202
    2. ' ,' → logprob: -8.750160217285156
    3. ',
' → logprob: -13.625160217285156
    4. ' ' → logprob: -15.875160217285156
    5. '0' → logprob: -16.500160217285156
    6. '```' → logprob: -16.625160217285156
    7. ')' → logprob: -16.750160217285156
    8. '‌,' → logprob: -17.000160217285156
    9. ',int' → logprob: -17.125160217285156
    10. '   ' → logprob: -17.625160217285156

Token 163: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.506661833962426e-05
    2. ' ' → logprob: -9.37508487701416
    3. '0' → logprob: -16.375085830688477
    4. '<|end|>' → logprob: -18.500085830688477
    5. ',' → logprob: -19.000085830688477
    6. '   ' → logprob: -19.625085830688477
    7. '  ' → logprob: -19.750085830688477
    8. '    ' → logprob: -21.000085830688477
    9. '```' → logprob: -21.000085830688477
    10. '[' → logprob: -21.250085830688477

Token 164: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.8206473871250637e-05
    2. ' ' → logprob: -10.500028610229492
    3. '0' → logprob: -14.875028610229492
    4. ',' → logprob: -16.500028610229492
    5. '   ' → logprob: -16.875028610229492
    6. '  ' → logprob: -17.312528610229492
    7. '```' → logprob: -17.750028610229492
    8. '<|end|>' → logprob: -17.812528610229492
    9. '
' → logprob: -18.375028610229492
    10. '

' → logprob: -18.937528610229492

Token 165: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.3438327843905427e-05
    2. ' ,' → logprob: -10.75002384185791
    3. '0' → logprob: -13.50002384185791
    4. ')' → logprob: -15.62502384185791
    5. ')]' → logprob: -15.75002384185791
    6. ',
' → logprob: -16.375022888183594
    7. ' ' → logprob: -17.125022888183594
    8. '   ' → logprob: -18.750022888183594
    9. '),' → logprob: -18.750022888183594
    10. '```' → logprob: -18.875022888183594

Token 166: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010329303331673145
    2. ' ' → logprob: -6.876032829284668
    3. '   ' → logprob: -16.251033782958984
    4. 'False' → logprob: -18.751033782958984
    5. '  ' → logprob: -19.501033782958984
    6. '    ' → logprob: -19.751033782958984
    7. '۰' → logprob: -19.876033782958984
    8. ' False' → logprob: -20.126033782958984
    9. ')' → logprob: -20.251033782958984
    10. '
' → logprob: -20.376033782958984

Token 167: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. 'False' → logprob: -17.500017166137695
    4. '   ' → logprob: -18.500017166137695
    5. '۰' → logprob: -19.125017166137695
    6. ')' → logprob: -20.000017166137695
    7. '  ' → logprob: -20.687517166137695
    8. '０' → logprob: -20.812517166137695
    9. '
' → logprob: -20.812517166137695
    10. ' False' → logprob: -21.125017166137695

Token 168: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.02981378696858883
    2. ')' → logprob: -3.529813766479492
    3. ')]
' → logprob: -10.279813766479492
    4. ']' → logprob: -11.529813766479492
    5. ')
' → logprob: -12.404813766479492
    6. ' )' → logprob: -12.404813766479492
    7. ')]
' → logprob: -12.904813766479492
    8. '))' → logprob: -13.029813766479492
    9. ')])' → logprob: -13.154813766479492
    10. ')]

' → logprob: -13.404813766479492

Token 169: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0020266619976609945
    2. '
' → logprob: -6.877026557922363
    3. '   ' → logprob: -7.627026557922363
    4. '  
' → logprob: -8.502026557922363
    5. '    
' → logprob: -9.502026557922363
    6. '\n' → logprob: -9.627026557922363
    7. '' → logprob: -9.627026557922363
    8. ' 
' → logprob: -10.252026557922363
    9. '```' → logprob: -11.252026557922363
    10. '<|end|>' → logprob: -11.377026557922363

Token 170: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.004015122540295124
    2. '\n' → logprob: -6.25401496887207
    3. '
' → logprob: -6.87901496887207
    4. ')' → logprob: -7.87901496887207
    5. '  
' → logprob: -8.50401496887207
    6. '' → logprob: -8.62901496887207
    7. ' 
' → logprob: -9.12901496887207
    8. '    
' → logprob: -9.62901496887207
    9. '   ' → logprob: -10.50401496887207
    10. 'while' → logprob: -10.50401496887207

Token 171: ' cost' (ID: 3097)
  Prédit: '(cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cost' → logprob: -0.8140671253204346
    2. 'cost' → logprob: -0.9390671253204346
    3. '(' → logprob: -2.4390671253204346
    4. '0' → logprob: -3.9390671253204346
    5. ' (' → logprob: -4.0640668869018555
    6. '<|end|>' → logprob: -4.3140668869018555
    7. '(distance' → logprob: -4.8140668869018555
    8. ' cost' → logprob: -4.9390668869018555
    9. '#' → logprob: -5.0640668869018555
    10. 'distance' → logprob: -5.9390668869018555

Token 172: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.682846287731081e-05
    2. ' ,' → logprob: -10.125066757202148
    3. ',node' → logprob: -11.250066757202148
    4. '<|end|>' → logprob: -12.875066757202148
    5. ',n' → logprob: -13.250066757202148
    6. ',user' → logprob: -13.250066757202148
    7. ',
' → logprob: -13.375066757202148
    8. ',int' → logprob: -13.500066757202148
    9. ',state' → logprob: -14.125066757202148
    10. ',index' → logprob: -14.250066757202148

Token 173: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.03805331513285637
    2. ' node' → logprob: -3.288053274154663
    3. 'start' → logprob: -12.288053512573242
    4. '<|end|>' → logprob: -12.538053512573242
    5. 'current' → logprob: -14.163053512573242
    6. 'vertex' → logprob: -14.663053512573242
    7. ',node' → logprob: -15.038053512573242
    8. '	node' → logprob: -15.288053512573242
    9. '```' → logprob: -15.413053512573242
    10. '_node' → logprob: -15.538053512573242

Token 174: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015185497468337417
    2. ')' → logprob: -6.751518726348877
    3. '<|end|>' → logprob: -8.626518249511719
    4. ' ,' → logprob: -9.126518249511719
    5. '   ' → logprob: -11.251518249511719
    6. ',
' → logprob: -11.751518249511719
    7. '
' → logprob: -11.751518249511719
    8. ',state' → logprob: -12.251518249511719
    9. '<|end|>' → logprob: -12.501518249511719
    10. '```' → logprob: -12.751518249511719

Token 175: ' state' (ID: 2608)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.042619552463293076
    2. 'state' → logprob: -4.417619705200195
    3. 'free' → logprob: -4.417619705200195
    4. ' used' → logprob: -4.542619705200195
    5. ' free' → logprob: -5.417619705200195
    6. 'ticket' → logprob: -6.417619705200195
    7. ' state' → logprob: -7.667619705200195
    8. ' ticket' → logprob: -8.542619705200195
    9. '0' → logprob: -9.542619705200195
    10. 'use' → logprob: -9.917619705200195

Token 176: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.00382217182777822
    2. '
' → logprob: -5.878822326660156
    3. '' → logprob: -8.128822326660156
    4. '  
' → logprob: -8.378822326660156
    5. '\n' → logprob: -8.503822326660156
    6. ')' → logprob: -9.253822326660156
    7. '   ' → logprob: -9.753822326660156
    8. '    
' → logprob: -9.753822326660156
    9. ' 
' → logprob: -10.628822326660156
    10. '<|end|>' → logprob: -11.503822326660156

Token 177: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6716452836990356
    2. '
' → logprob: -0.7966452836990356
    3. 'while' → logprob: -3.796645164489746
    4. '    
' → logprob: -5.046645164489746
    5. ' while' → logprob: -5.921645164489746
    6. ')' → logprob: -6.046645164489746
    7. ',' → logprob: -6.546645164489746
    8. '	while' → logprob: -7.296645164489746
    9. '  
' → logprob: -7.296645164489746
    10. '' → logprob: -7.796645164489746

Token 178: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -8.983476436696947e-05
    2. ' while' → logprob: -9.750089645385742
    3. '   ' → logprob: -10.500089645385742
    4. 'heap' → logprob: -12.625089645385742
    5. '	while' → logprob: -14.625089645385742
    6. '
' → logprob: -16.000089645385742
    7. 'While' → logprob: -16.000089645385742
    8. '    
' → logprob: -17.125089645385742
    9. 'wh' → logprob: -19.250089645385742
    10. 'w' → logprob: -19.500089645385742

Token 179: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.25237348675727844
    2. 'hq' → logprob: -1.502373456954956
    3. 'h' → logprob: -7.877373695373535
    4. '	h' → logprob: -10.002373695373535
    5. ' ' → logprob: -11.127373695373535
    6. '(h' → logprob: -13.127373695373535
    7. '   ' → logprob: -14.127373695373535
    8. ' ' → logprob: -14.127373695373535
    9. '<h' → logprob: -15.127373695373535
    10. '[h' → logprob: -15.502373695373535

Token 180: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.1398757123970427e-05
    2. 'Q' → logprob: -12.000011444091797
    3. ' ' → logprob: -14.000011444091797
    4. 'p' → logprob: -14.250011444091797
    5. '   ' → logprob: -14.250011444091797
    6. ' q' → logprob: -14.625011444091797
    7. '       ' → logprob: -15.250011444091797
    8. '[' → logprob: -15.437511444091797
    9. '  ' → logprob: -15.875011444091797
    10. '
' → logprob: -15.937511444091797

Token 181: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0016754218377172947
    2. '):' → logprob: -6.876675605773926
    3. ':
' → logprob: -7.876675605773926
    4. 'and' → logprob: -9.126675605773926
    5. ' and' → logprob: -9.876675605773926
    6. ',' → logprob: -10.126675605773926
    7. '>:' → logprob: -10.376675605773926
    8. '):
' → logprob: -12.126675605773926
    9. ':**' → logprob: -12.251675605773926
    10. ']:' → logprob: -12.626675605773926

Token 182: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08064024150371552
    2. ',' → logprob: -2.5806403160095215
    3. ':' → logprob: -7.5806403160095215
    4. ' ,' → logprob: -8.830639839172363
    5. '   ' → logprob: -8.830639839172363
    6. '    ' → logprob: -9.330639839172363
    7. '        
' → logprob: -9.455639839172363
    8. '(heap' → logprob: -9.455639839172363
    9. '     ' → logprob: -9.705639839172363
    10. ')' → logprob: -9.705639839172363

Token 183: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' (adapté à ' cost') → logprob: -0.05801023170351982
    2. 'c' → logprob: -3.0580103397369385
    3. ' cost' → logprob: -5.933010101318359
    4. 'cur' → logprob: -5.933010101318359
    5. '   ' → logprob: -6.058010101318359
    6. '0' → logprob: -7.683010101318359
    7. ',' → logprob: -8.05801010131836
    8. 'd' → logprob: -8.93301010131836
    9. ' c' → logprob: -8.93301010131836
    10. '
' → logprob: -9.05801010131836

Token 184: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.696889623621246e-06
    2. ',
' → logprob: -13.00000286102295
    3. ' ,' → logprob: -15.25000286102295
    4. '‌,' → logprob: -17.000001907348633
    5. ',c' → logprob: -17.500001907348633
    6. ',

' → logprob: -17.625001907348633
    7. ',\
' → logprob: -17.625001907348633
    8. ',user' → logprob: -17.750001907348633
    9. ',n' → logprob: -18.000001907348633
    10. ',
' → logprob: -18.375001907348633

Token 185: ' u' (ID: 337)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.39139077067375183
    2. 'u' → logprob: -1.6413908004760742
    3. ' node' → logprob: -2.141390800476074
    4. ' u' → logprob: -4.391390800476074
    5. 'cur' → logprob: -9.766390800476074
    6. 'current' → logprob: -9.766390800476074
    7. 'v' → logprob: -10.141390800476074
    8. ' current' → logprob: -10.391390800476074
    9. ' now' → logprob: -10.516390800476074
    10. 'now' → logprob: -10.516390800476074

Token 186: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5332478142227046e-05
    2. ' ,' → logprob: -11.500015258789062
    3. '=' → logprob: -12.750015258789062
    4. ' =' → logprob: -13.875015258789062
    5. '_,' → logprob: -14.250015258789062
    6. ')' → logprob: -15.125015258789062
    7. '‌,' → logprob: -16.250015258789062
    8. '   ' → logprob: -16.375015258789062
    9. ',state' → logprob: -17.187515258789062
    10. ',)' → logprob: -17.375015258789062

Token 187: ' used' (ID: 2061)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.011097692884504795
    2. 's' → logprob: -5.2610979080200195
    3. 'used' → logprob: -5.8860979080200195
    4. ' state' → logprob: -6.0110979080200195
    5. 'st' → logprob: -8.13609790802002
    6. ' s' → logprob: -8.88609790802002
    7. ' used' → logprob: -9.38609790802002
    8. '```' → logprob: -10.51109790802002
    9. 'f' → logprob: -10.88609790802002
    10. 'stat' → logprob: -11.88609790802002

Token 188: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1404084861278534
    2. '=' → logprob: -2.765408515930176
    3. '_free' → logprob: -3.140408515930176
    4. '_' → logprob: -3.890408515930176
    5. '_ticket' → logprob: -5.890408515930176
    6. '_state' → logprob: -7.265408515930176
    7. ')' → logprob: -8.265408515930176
    8. 'free' → logprob: -8.890408515930176
    9. ' ' → logprob: -9.390408515930176
    10. '_f' → logprob: -9.640408515930176

Token 189: ' heap' (ID: 37237)
  Prédit: ' heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.11412853002548218
    2. 'heap' → logprob: -2.239128589630127
    3. ' he' → logprob: -6.989128589630127
    4. ' ' → logprob: -8.614128112792969
    5. 'he' → logprob: -8.614128112792969
    6. '(heap' → logprob: -11.114128112792969
    7. '.heap' → logprob: -13.864128112792969
    8. '_heap' → logprob: -13.864128112792969
    9. ' h' → logprob: -14.239128112792969
    10. '   ' → logprob: -14.364128112792969

Token 190: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -6.749814019713085e-06
    2. 'p' → logprob: -13.000006675720215
    3. ')' → logprob: -13.375006675720215
    4. ',' → logprob: -13.750006675720215
    5. '```' → logprob: -14.250006675720215
    6. ' ' → logprob: -15.375006675720215
    7. '	q' → logprob: -15.625006675720215
    8. '   ' → logprob: -16.12500762939453
    9. '}' → logprob: -16.25000762939453
    10. 'queue' → logprob: -16.37500762939453

Token 191: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.00017827287956606597
    2. '.' → logprob: -8.750178337097168
    3. 'he' → logprob: -11.750178337097168
    4. 'q' → logprob: -12.375178337097168
    5. '.heap' → logprob: -12.375178337097168
    6. '.q' → logprob: -14.000178337097168
    7. '.pop' → logprob: -14.375178337097168
    8. ' .' → logprob: -14.500178337097168
    9. ' he' → logprob: -14.750178337097168
    10. '.p' → logprob: -15.125178337097168

Token 192: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -1.981667537620524e-06
    2. 'ap' → logprob: -13.500001907348633
    3. 'pp' → logprob: -14.625001907348633
    4. '[' → logprob: -17.625001907348633
    5. '```' → logprob: -17.875001907348633
    6. ' app' → logprob: -18.125001907348633
    7. 'push' → logprob: -18.625001907348633
    8. '(app' → logprob: -19.250001907348633
    9. 'appen' → logprob: -19.375001907348633
    10. 'pop' → logprob: -20.000001907348633

Token 193: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.5858234763145447
    2. 'ush' → logprob: -0.8358234763145447
    3. 'p' → logprob: -5.4608235359191895
    4. 'app' → logprob: -6.2108235359191895
    5. 'q' → logprob: -6.4608235359191895
    6. 'uf' → logprob: -7.2108235359191895
    7. 'ap' → logprob: -7.4608235359191895
    8. 'push' → logprob: -8.335823059082031
    9. 'pp' → logprob: -8.460823059082031
    10. '```' → logprob: -9.835823059082031

Token 194: '(h' (ID: 8120)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25238755345344543
    2. '(h' → logprob: -1.502387523651123
    3. '(heap' → logprob: -8.252388000488281
    4. '(q' → logprob: -9.377388000488281
    5. '(
' → logprob: -9.877388000488281
    6. ')' → logprob: -10.627388000488281
    7. ' (' → logprob: -10.877388000488281
    8. '(

' → logprob: -12.752388000488281
    9. '(ht' → logprob: -12.877388000488281
    10. '((' → logprob: -13.252388000488281

Token 195: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -2.339278580620885e-06
    2. ')' → logprob: -13.125001907348633
    3. 'p' → logprob: -16.125001907348633
    4. 'Q' → logprob: -16.500001907348633
    5. '	q' → logprob: -18.000001907348633
    6. '[' → logprob: -18.125001907348633
    7. '])' → logprob: -18.625001907348633
    8. '_q' → logprob: -18.875001907348633
    9. ' q' → logprob: -19.000001907348633
    10. ',' → logprob: -19.250001907348633

Token 196: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.729906196298543e-06
    2. ')
' → logprob: -11.625009536743164
    3. ' )' → logprob: -14.500009536743164
    4. '   ' → logprob: -16.125009536743164
    5. ')`' → logprob: -16.500009536743164
    6. '       ' → logprob: -16.750009536743164
    7. ')

' → logprob: -17.250009536743164
    8. '))' → logprob: -18.000009536743164
    9. ')
' → logprob: -18.375009536743164
    10. '),' → logprob: -18.500009536743164

Token 197: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5192695260047913
    2. '
' → logprob: -1.0192694664001465
    3. '<|end|>' → logprob: -3.5192694664001465
    4. '        
' → logprob: -5.2692694664001465
    5. '   ' → logprob: -5.7692694664001465
    6. ' 
' → logprob: -6.7692694664001465
    7. '    
' → logprob: -6.7692694664001465
    8. '  
' → logprob: -7.1442694664001465
    9. '        ' → logprob: -7.5192694664001465
    10. '\n' → logprob: -7.6442694664001465

Token 198: ' if' (ID: 538)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1603189706802368
    2. '   ' → logprob: -1.2853189706802368
    3. ' if' → logprob: -2.1603188514709473
    4. 'if' (adapté à ' if') → logprob: -2.4103188514709473
    5. '    
' → logprob: -2.7853188514709473
    6. '       ' → logprob: -3.0353188514709473
    7. '    ' → logprob: -3.7853188514709473
    8. ' 
' → logprob: -3.7853188514709473
    9. '<|end|>' → logprob: -4.410318851470947
    10. '        
' → logprob: -4.910318851470947

Token 199: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.47446706891059875
    2. 'dist' → logprob: -0.9744670391082764
    3. 'cost' → logprob: -8.474467277526855
    4. ' cost' → logprob: -8.724467277526855
    5. '	dist' → logprob: -11.099467277526855
    6. '   ' → logprob: -13.474467277526855
    7. ' ' → logprob: -13.599467277526855
    8. '(dist' → logprob: -14.724467277526855
    9. ' u' → logprob: -15.474467277526855
    10. '_dist' → logprob: -15.974467277526855

Token 200: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -1.9146995327901095e-05
    2. '[' → logprob: -10.875019073486328
    3. '[c' → logprob: -16.875019073486328
    4. '[user' → logprob: -17.375019073486328
    5. 'u' → logprob: -17.750019073486328
    6. ' [' → logprob: -17.875019073486328
    7. 'cost' → logprob: -19.750019073486328
    8. '[node' → logprob: -20.000019073486328
    9. '[cur' → logprob: -20.250019073486328
    10. '   ' → logprob: -20.875019073486328

Token 201: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.38894835114479065
    2. '][' → logprob: -1.1389483213424683
    3. '[u' → logprob: -6.263948440551758
    4. ']' → logprob: -9.638948440551758
    5. '   ' → logprob: -10.513948440551758
    6. ' ][' → logprob: -11.013948440551758
    7. ' [' → logprob: -11.513948440551758
    8. '[state' → logprob: -11.513948440551758
    9. ')[' → logprob: -11.638948440551758
    10. '[user' → logprob: -12.138948440551758

Token 202: 'used' (ID: 4943)
  Prédit: 'used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -2.15310683415737e-05
    2. ' used' → logprob: -10.750021934509277
    3. ' ' → logprob: -20.12502098083496
    4. '.used' → logprob: -20.37502098083496
    5. '_used' → logprob: -21.50002098083496
    6. '-used' → logprob: -21.50002098083496
    7. '   ' → logprob: -21.62502098083496
    8. 'us' → logprob: -23.12502098083496
    9. 'Used' → logprob: -23.75002098083496
    10. 'use' → logprob: -24.25002098083496

Token 203: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08757461607456207
    2. ']<' → logprob: -3.3375747203826904
    3. '<' → logprob: -3.4625747203826904
    4. ' <' → logprob: -4.087574481964111
    5. ' ]' → logprob: -9.58757495880127
    6. '<u' → logprob: -10.46257495880127
    7. ']!=' → logprob: -10.96257495880127
    8. '   ' → logprob: -11.33757495880127
    9. ' ' → logprob: -11.58757495880127
    10. '[' → logprob: -11.71257495880127

Token 204: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.14284536242485046
    2. ' <' → logprob: -2.017845392227173
    3. '<u' → logprob: -10.142845153808594
    4. '<v' → logprob: -10.642845153808594
    5. '<n' → logprob: -11.142845153808594
    6. '<c' → logprob: -11.142845153808594
    7. '<=' → logprob: -11.267845153808594
    8. '>' → logprob: -11.267845153808594
    9. '<int' → logprob: -11.517845153808594
    10. '<m' → logprob: -11.642845153808594

Token 205: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.048587486147880554
    2. ' cost' → logprob: -3.0485875606536865
    3. '(cost' → logprob: -16.548587799072266
    4. '_cost' → logprob: -17.548587799072266
    5. ' ' → logprob: -18.673587799072266
    6. ' ' → logprob: -19.798587799072266
    7. '.cost' → logprob: -19.798587799072266
    8. '
' → logprob: -20.048587799072266
    9. 'Cost' → logprob: -20.048587799072266
    10. ' kost' → logprob: -20.298587799072266

Token 206: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.034031882882118225
    2. ':
' → logprob: -3.659031867980957
    3. '       ' → logprob: -5.159031867980957
    4. ' continue' → logprob: -7.034031867980957
    5. 'continue' → logprob: -7.284031867980957
    6. '   ' → logprob: -8.409031867980957
    7. '	continue' → logprob: -9.284031867980957
    8. '           ' → logprob: -9.909031867980957
    9. ' continues' → logprob: -12.034031867980957
    10. '_continue' → logprob: -12.409031867980957

Token 207: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09217751771211624
    2. 'continue' → logprob: -3.342177629470825
    3. ' continue' → logprob: -3.342177629470825
    4. '           ' → logprob: -4.217177391052246
    5. '	continue' → logprob: -6.092177391052246
    6. ':' → logprob: -9.092177391052246
    7. '   ' → logprob: -9.217177391052246
    8. '	' → logprob: -10.092177391052246
    9. '_continue' → logprob: -10.342177391052246
    10. ':
' → logprob: -11.217177391052246

Token 208: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.23293901979923248
    2. 'continue' (adapté à ' continue') → logprob: -1.7329390048980713
    3. '       ' → logprob: -3.4829390048980713
    4. '	continue' → logprob: -8.357938766479492
    5. '           ' → logprob: -9.982938766479492
    6. '   ' → logprob: -10.607938766479492
    7. '_continue' → logprob: -11.607938766479492
    8. 'contin' → logprob: -13.857938766479492
    9. 'continu' → logprob: -15.107938766479492
    10. 'Continue' → logprob: -15.482938766479492

Token 209: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1413971185684204
    2. '
' → logprob: -2.516396999359131
    3. '        
' → logprob: -3.391396999359131
    4. ' 
' → logprob: -4.891396999359131
    5. '\n' → logprob: -5.766396999359131
    6. '' → logprob: -6.641396999359131
    7. '    
' → logprob: -7.016396999359131
    8. '  
' → logprob: -7.141396999359131
    9. '   ' → logprob: -7.391396999359131
    10. '        ' → logprob: -7.516396999359131

Token 210: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029012545943260193
    2. '   ' → logprob: -4.404012680053711
    3. '        
' → logprob: -4.779012680053711
    4. '    ' → logprob: -5.904012680053711
    5. ' 
' → logprob: -6.654012680053711
    6. ')' → logprob: -6.904012680053711
    7. '    
' → logprob: -7.154012680053711
    8. '        ' → logprob: -7.529012680053711
    9. ' )' → logprob: -8.529012680053711
    10. ' for' → logprob: -8.654012680053711

Token 211: ' if' (ID: 538)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2429846078157425
    2. '       ' → logprob: -1.742984652519226
    3. '   ' → logprob: -3.4929845333099365
    4. 'for' → logprob: -4.867984771728516
    5. '        
' → logprob: -6.617984771728516
    6. ' 
' → logprob: -7.492984771728516
    7. '    ' → logprob: -8.617984771728516
    8. '    
' → logprob: -8.742984771728516
    9. '	for' → logprob: -9.367984771728516
    10. '      ' → logprob: -10.242984771728516

Token 212: ' u' (ID: 337)
  Prédit: ' u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.47407862544059753
    2. 'u' → logprob: -0.9740786552429199
    3. '	u' → logprob: -13.724078178405762
    4. '   ' → logprob: -14.974078178405762
    5. ' ' → logprob: -16.099079132080078
    6. ' ' → logprob: -16.474079132080078
    7. '    ' → logprob: -18.349079132080078
    8. '[u' → logprob: -19.099079132080078
    9. '
' → logprob: -19.224079132080078
    10. '(u' → logprob: -19.349079132080078

Token 213: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.016053490340709686
    2. '==' → logprob: -4.141053676605225
    3. ' ' → logprob: -12.016053199768066
    4. '=' → logprob: -12.141053199768066
    5. ' =' → logprob: -12.766053199768066
    6. ')' → logprob: -13.641053199768066
    7. ']==' → logprob: -13.766053199768066
    8. ' ' → logprob: -13.766053199768066
    9. ')==' → logprob: -13.891053199768066
    10. '   ' → logprob: -16.016054153442383

Token 214: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.048587825149297714
    2. 'n' → logprob: -3.0485877990722656
    3. '	n' → logprob: -15.173587799072266
    4. ' ' → logprob: -16.173587799072266
    5. ' ' → logprob: -16.548587799072266
    6. '   ' → logprob: -18.423587799072266
    7. '    ' → logprob: -18.423587799072266
    8. ' 
' → logprob: -18.423587799072266
    9. '_n' → logprob: -18.673587799072266
    10. '<|end|>' → logprob: -19.548587799072266

Token 215: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06327686458826065
    2. ' and' → logprob: -2.813276767730713
    3. 'and' → logprob: -7.438276767730713
    4. ':
' → logprob: -7.438276767730713
    5. ' :' → logprob: -9.188277244567871
    6. '   ' → logprob: -11.438277244567871
    7. '<|end|>' → logprob: -12.063277244567871
    8. ',' → logprob: -12.563277244567871
    9. ':return' → logprob: -13.063277244567871
    10. '):' → logprob: -13.563277244567871

Token 216: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015636618481948972
    2. '           ' → logprob: -6.876563549041748
    3. '
' → logprob: -8.001564025878906
    4. '   ' → logprob: -9.501564025878906
    5. '        
' → logprob: -9.876564025878906
    6. ' break' → logprob: -10.626564025878906
    7. '    
' → logprob: -11.501564025878906
    8. 'break' → logprob: -11.501564025878906
    9. 'print' → logprob: -11.626564025878906
    10. '      ' → logprob: -12.626564025878906

Token 217: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0004444931691978127
    2. ' print' → logprob: -8.000444412231445
    3. '       ' → logprob: -9.625444412231445
    4. '   ' → logprob: -10.375444412231445
    5. '           ' → logprob: -12.125444412231445
    6. 'break' → logprob: -12.250444412231445
    7. '
' → logprob: -14.125444412231445
    8. '```' → logprob: -14.750444412231445
    9. '    
' → logprob: -15.125444412231445
    10. '        
' → logprob: -15.875444412231445

Token 218: '(cost' (ID: 133554)
  Prédit: '(cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cost' → logprob: -0.0004528374411165714
    2. 'cost' → logprob: -7.750452995300293
    3. ' cost' → logprob: -11.250452995300293
    4. '(' → logprob: -11.625452995300293
    5. '(dist' → logprob: -15.875452995300293
    6. ' (' → logprob: -17.375452041625977
    7. '(c' → logprob: -18.125452041625977
    8. '(
' → logprob: -19.125452041625977
    9. 'Cost' → logprob: -19.625452041625977
    10. '_cost' → logprob: -20.125452041625977

Token 219: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10022909194231033
    2. ')
' → logprob: -2.350229024887085
    3. '       ' → logprob: -11.850229263305664
    4. ')
' → logprob: -11.975229263305664
    5. ' )' → logprob: -12.475229263305664
    6. '   ' → logprob: -12.725229263305664
    7. '           ' → logprob: -14.225229263305664
    8. ' )
' → logprob: -14.850229263305664
    9. ')return' → logprob: -14.975229263305664
    10. ')

' → logprob: -15.475229263305664

Token 220: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6332046389579773
    2. '           ' → logprob: -0.7582046389579773
    3. '   ' → logprob: -8.008204460144043
    4. '		' → logprob: -9.508204460144043
    5. '	' → logprob: -9.633204460144043
    6. '<|end|>' → logprob: -10.758204460144043
    7. '    
' → logprob: -11.008204460144043
    8. '
' → logprob: -11.133204460144043
    9. '        
' → logprob: -11.258204460144043
    10. '               ' → logprob: -11.508204460144043

Token 221: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.021028071641921997
    2. '           ' → logprob: -4.2710280418396
    3. ' break' → logprob: -5.0210280418396
    4. '       ' → logprob: -8.771028518676758
    5. '   ' → logprob: -9.771028518676758
    6. '	break' → logprob: -10.396028518676758
    7. '
' → logprob: -16.146028518676758
    8. '```' → logprob: -16.521028518676758
    9. ' ' → logprob: -16.771028518676758
    10. '_break' → logprob: -17.146028518676758

Token 222: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002040583174675703
    2. '   ' → logprob: -6.627040386199951
    3. 'for' → logprob: -7.502040386199951
    4. ' for' → logprob: -9.00204086303711
    5. '        
' → logprob: -10.62704086303711
    6. '
' → logprob: -11.87704086303711
    7. '    
' → logprob: -12.50204086303711
    8. '           ' → logprob: -13.62704086303711
    9. '	for' → logprob: -14.37704086303711
    10. '     ' → logprob: -14.50204086303711

Token 223: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015654681250452995
    2. '   ' → logprob: -5.015654563903809
    3. 'for' → logprob: -5.140654563903809
    4. ' for' → logprob: -6.265654563903809
    5. '        
' → logprob: -7.640654563903809
    6. '
' → logprob: -8.015654563903809
    7. '    
' → logprob: -8.265654563903809
    8. ')' → logprob: -11.640654563903809
    9. '  
' → logprob: -11.640654563903809
    10. '<|end|>' → logprob: -11.640654563903809

Token 224: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.039604686200618744
    2. ' for' → logprob: -3.289604663848877
    3. '   ' → logprob: -6.664604663848877
    4. '       ' → logprob: -8.289605140686035
    5. '	for' → logprob: -10.539605140686035
    6. '        
' → logprob: -12.289605140686035
    7. '    
' → logprob: -12.539605140686035
    8. ' 
' → logprob: -15.039605140686035
    9. '  ' → logprob: -15.664605140686035
    10. ' ' → logprob: -15.664605140686035

Token 225: ' used' (ID: 2061)
  Prédit: ' used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' used' → logprob: -0.2671342194080353
    2. ' not' → logprob: -1.892134189605713
    3. 'used' → logprob: -2.517134189605713
    4. 'not' → logprob: -6.392134189605713
    5. ' u' → logprob: -7.767134189605713
    6. ' ' → logprob: -8.017134666442871
    7. ' dist' → logprob: -9.267134666442871
    8. 'u' → logprob: -9.392134666442871
    9. ' cost' → logprob: -10.017134666442871
    10. ' graph' → logprob: -10.142134666442871

Token 226: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.31377312541007996
    2. ' ==' → logprob: -1.3137731552124023
    3. ')' → logprob: -9.063773155212402
    4. ':' → logprob: -9.313773155212402
    5. '=' → logprob: -9.313773155212402
    6. ']==' → logprob: -9.438773155212402
    7. ')==' → logprob: -10.063773155212402
    8. ' ' → logprob: -10.563773155212402
    9. ']' → logprob: -10.938773155212402
    10. '0' → logprob: -11.563773155212402

Token 227: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00044556602369993925
    2. ' ' → logprob: -7.750445365905762
    3. '1' → logprob: -11.125445365905762
    4. '   ' → logprob: -16.750446319580078
    5. ' ' → logprob: -18.000446319580078
    6. '  ' → logprob: -18.625446319580078
    7. '
' → logprob: -19.187946319580078
    8. '    ' → logprob: -19.562946319580078
    9. '=' → logprob: -19.687946319580078
    10. '	' → logprob: -20.187946319580078

Token 228: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.991464786347933e-05
    2. '1' → logprob: -10.250060081481934
    3. ' ' → logprob: -10.625060081481934
    4. '   ' → logprob: -16.375059127807617
    5. ' ' → logprob: -18.875059127807617
    6. '  ' → logprob: -19.187559127807617
    7. '
' → logprob: -19.187559127807617
    8. '    ' → logprob: -19.500059127807617
    9. '	' → logprob: -19.875059127807617
    10. '```' → logprob: -19.937559127807617

Token 229: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25196021795272827
    2. ':
' → logprob: -1.501960277557373
    3. '       ' → logprob: -11.376959800720215
    4. ' :
' → logprob: -11.876959800720215
    5. '   ' → logprob: -12.251959800720215
    6. ' and' → logprob: -13.001959800720215
    7. ':
' → logprob: -13.126959800720215
    8. ' :' → logprob: -13.126959800720215
    9. ':

' → logprob: -14.251959800720215
    10. '           ' → logprob: -14.751959800720215

Token 230: '           ' (ID: 352)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.06554675102233887
    2. '       ' → logprob: -3.065546751022339
    3. '           ' → logprob: -4.565546989440918
    4. 'for' → logprob: -5.065546989440918
    5. '        ' → logprob: -10.190546989440918
    6. '   ' → logprob: -11.065546989440918
    7. '	for' → logprob: -11.190546989440918
    8. ' ' → logprob: -11.940546989440918
    9. '	       ' → logprob: -12.190546989440918
    10. ',' → logprob: -12.315546989440918

Token 231: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12723329663276672
    2. ' for' → logprob: -2.1272332668304443
    3. '       ' → logprob: -9.127233505249023
    4. '
' → logprob: -9.627233505249023
    5. '           ' → logprob: -9.877233505249023
    6. '   ' → logprob: -10.252233505249023
    7. 'heap' → logprob: -11.252233505249023
    8. ' heap' → logprob: -11.377233505249023
    9. '	for' → logprob: -11.877233505249023
    10. '               ' → logprob: -12.502233505249023

Token 232: ' Try' (ID: 14720)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0003464289184194058
    2. 'heap' → logprob: -8.375346183776855
    3. ' for' → logprob: -10.000346183776855
    4. '   ' → logprob: -10.250346183776855
    5. '#' → logprob: -10.375346183776855
    6. '       ' → logprob: -13.125346183776855
    7. '           ' → logprob: -15.000346183776855
    8. 'if' → logprob: -15.125346183776855
    9. 'cost' → logprob: -15.375346183776855
    10. '
' → logprob: -16.000347137451172

Token 233: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.562134027481079
    2. 'using' → logprob: -1.562134027481079
    3. ':' → logprob: -1.812134027481079
    4. 'to' → logprob: -2.562134027481079
    5. ':
' → logprob: -2.687134027481079
    6. ' using' → logprob: -2.687134027481079
    7. '               ' → logprob: -2.812134027481079
    8. ' to' → logprob: -3.312134027481079
    9. '           ' → logprob: -3.687134027481079
    10. 'free' → logprob: -3.812134027481079

Token 234: ' use' (ID: 1199)
  Prédit: 'use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'use' → logprob: -0.25455620884895325
    2. ' use' → logprob: -1.5045561790466309
    3. 'skip' → logprob: -6.629556179046631
    4. ' skip' → logprob: -7.504556179046631
    5. 'heap' → logprob: -8.004556655883789
    6. 'for' → logprob: -9.254556655883789
    7. 'push' → logprob: -9.504556655883789
    8. '   ' → logprob: -9.504556655883789
    9. '
' → logprob: -10.379556655883789
    10. 'Use' → logprob: -10.379556655883789

Token 235: ' the' (ID: 290)
  Prédit: 'free'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'free' → logprob: -0.8509234189987183
    2. ' free' → logprob: -1.9759234189987183
    3. 'the' → logprob: -1.9759234189987183
    4. ' the' → logprob: -2.100923538208008
    5. 'heap' → logprob: -2.600923538208008
    6. ' a' → logprob: -3.475923538208008
    7. 'a' → logprob: -3.850923538208008
    8. 'edge' → logprob: -4.100923538208008
    9. ' heap' → logprob: -4.975923538208008
    10. ' edge' → logprob: -5.100923538208008

Token 236: ' free' (ID: 2240)
  Prédit: 'free'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'free' → logprob: -0.09213011711835861
    2. ' free' → logprob: -3.342130184173584
    3. 'next' → logprob: -3.842130184173584
    4. ' next' → logprob: -4.217130184173584
    5. 'c' → logprob: -4.467130184173584
    6. '0' → logprob: -6.842130184173584
    7. 'cost' → logprob: -6.842130184173584
    8. ' c' → logprob: -6.967130184173584
    9. 'edge' → logprob: -7.842130184173584
    10. 'ticket' → logprob: -8.217129707336426

Token 237: ' ticket' (ID: 16681)
  Prédit: ' ticket'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ticket' → logprob: -0.20559434592723846
    2. 'ticket' → logprob: -1.8305943012237549
    3. ' ' → logprob: -3.955594301223755
    4. 'token' → logprob: -6.580594539642334
    5. ' token' → logprob: -6.580594539642334
    6. ',' → logprob: -6.955594539642334
    7. ' ,' → logprob: -7.205594539642334
    8. '  ' → logprob: -7.705594539642334
    9. '_ticket' → logprob: -7.705594539642334
    10. ' )' → logprob: -8.330594062805176

Token 238: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8590850830078125
    2. ' for' → logprob: -0.9840850830078125
    3. '
' → logprob: -2.4840850830078125
    4. '           ' → logprob: -3.2340850830078125
    5. ',' → logprob: -3.2340850830078125
    6. 'for' → logprob: -3.6090850830078125
    7. '        
' → logprob: -5.2340850830078125
    8. '            
' → logprob: -6.1090850830078125
    9. ',
' → logprob: -7.1090850830078125
    10. ' ,' → logprob: -7.3590850830078125

Token 239: ' two' (ID: 1920)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edge' → logprob: -1.287248969078064
    2. ' the' → logprob: -1.412248969078064
    3. 'c' → logprob: -2.1622490882873535
    4. 'the' → logprob: -2.4122490882873535
    5. ' edge' → logprob: -3.1622490882873535
    6. 'each' → logprob: -3.4122490882873535
    7. 'cost' → logprob: -3.5372490882873535
    8. ' each' → logprob: -3.6622490882873535
    9. 'neighbor' → logprob: -3.6622490882873535
    10. 'u' → logprob: -4.5372490882873535

Token 240: ' consecutive' (ID: 40840)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6515371203422546
    2. ',' → logprob: -1.5265371799468994
    3. ' ,' → logprob: -2.2765371799468994
    4. ' )' → logprob: -2.2765371799468994
    5. 'edges' → logprob: -4.40153694152832
    6. ' ' → logprob: -4.77653694152832
    7. ' edges' → logprob: -4.90153694152832
    8. '*' → logprob: -5.52653694152832
    9. 'spaces' → logprob: -6.15153694152832
    10. ' *' → logprob: -6.27653694152832

Token 241: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.16051159799098969
    2. ' edges' → logprob: -1.9105116128921509
    3. 'edge' → logprob: -9.41051197052002
    4. ' roads' → logprob: -9.66051197052002
    5. '_edges' → logprob: -10.16051197052002
    6. 'roads' → logprob: -10.41051197052002
    7. 'paths' → logprob: -11.41051197052002
    8. '   ' → logprob: -11.53551197052002
    9. 'steps' → logprob: -11.91051197052002
    10. ' ' → logprob: -12.03551197052002

Token 242: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1828073114156723
    2. '
' → logprob: -2.307807207107544
    3. '<|end|>' → logprob: -3.932807207107544
    4. ' and' → logprob: -4.557807445526123
    5. ',' → logprob: -4.682807445526123
    6. '           ' → logprob: -5.182807445526123
    7. '        
' → logprob: -5.307807445526123
    8. ' for' → logprob: -5.557807445526123
    9. ':' → logprob: -5.807807445526123
    10. '   ' → logprob: -5.932807445526123

Token 243: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02173789031803608
    2. '
' → logprob: -4.771738052368164
    3. '        
' → logprob: -5.771738052368164
    4. '           ' → logprob: -5.896738052368164
    5. '<|end|>' → logprob: -6.396738052368164
    6. ',' → logprob: -6.646738052368164
    7. '   ' → logprob: -7.396738052368164
    8. ')' → logprob: -7.521738052368164
    9. ' for' → logprob: -7.771738052368164
    10. ' and' → logprob: -7.771738052368164

Token 244: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.542631983757019
    2. ' for' → logprob: -1.292631983757019
    3. 'if' → logprob: -2.6676321029663086
    4. ' if' → logprob: -3.2926321029663086
    5. '   ' → logprob: -4.667632102966309
    6. 'pass' → logprob: -5.292632102966309
    7. ' pass' → logprob: -5.417632102966309
    8. 'prev' → logprob: -5.792632102966309
    9. '       ' → logprob: -6.042632102966309
    10. 'u' → logprob: -6.042632102966309

Token 245: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.6759130358695984
    2. ' v' → logprob: -1.4259130954742432
    3. 'i' → logprob: -2.175913095474243
    4. ' i' → logprob: -2.175913095474243
    5. 'idx' → logprob: -4.425912857055664
    6. ' idx' → logprob: -4.550912857055664
    7. 'u' → logprob: -7.800912857055664
    8. 'index' → logprob: -8.550912857055664
    9. '(v' → logprob: -8.800912857055664
    10. ' u' → logprob: -8.925912857055664

Token 246: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05900301784276962
    2. ' ,' → logprob: -3.1840031147003174
    3. ' in' → logprob: -4.184002876281738
    4. 'in' → logprob: -7.934002876281738
    5. ' ' → logprob: -8.934002876281738
    6. ',v' → logprob: -9.559002876281738
    7. '  ' → logprob: -11.309002876281738
    8. '<|end|>' → logprob: -11.309002876281738
    9. ')' → logprob: -11.559002876281738
    10. '1' → logprob: -11.934002876281738

Token 247: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01818985491991043
    2. ' ,' → logprob: -4.518189907073975
    3. ' in' → logprob: -5.018189907073975
    4. ',v' → logprob: -8.643189430236816
    5. 'in' → logprob: -8.893189430236816
    6. ' ' → logprob: -9.518189430236816
    7. ')' → logprob: -10.018189430236816
    8. ',)' → logprob: -11.393189430236816
    9. ' )' → logprob: -11.893189430236816
    10. ',
' → logprob: -11.893189430236816

Token 248: ' c' (ID: 274)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.9203420877456665
    2. 'c' → logprob: -1.0453420877456665
    3. ' w' → logprob: -1.7953420877456665
    4. ' c' → logprob: -2.545341968536377
    5. 'cost' → logprob: -5.420341968536377
    6. ' cost' → logprob: -6.920341968536377
    7. 'd' → logprob: -10.295342445373535
    8. ' d' → logprob: -11.670342445373535
    9. ')' → logprob: -11.795342445373535
    10. 'weight' → logprob: -11.920342445373535

Token 249: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.15014968812465668
    2. 'ost' → logprob: -2.1501495838165283
    3. ',' → logprob: -4.525149822235107
    4. '2' → logprob: -5.025149822235107
    5. ' in' → logprob: -6.150149822235107
    6. 'v' → logprob: -6.525149822235107
    7. '```' → logprob: -7.900149822235107
    8. '=' → logprob: -8.27514934539795
    9. ')' → logprob: -8.40014934539795
    10. 'c' → logprob: -8.77514934539795

Token 250: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2813129425048828
    2. 'in' → logprob: -1.4063129425048828
    3. ',' → logprob: -9.406312942504883
    4. ' ' → logprob: -10.031312942504883
    5. ')' → logprob: -11.156312942504883
    6. '  ' → logprob: -12.531312942504883
    7. '	in' → logprob: -12.906312942504883
    8. '_in' → logprob: -13.031312942504883
    9. '```' → logprob: -13.281312942504883
    10. '   ' → logprob: -13.281312942504883

Token 251: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.04301174357533455
    2. ' graph' → logprob: -3.1680116653442383
    3. '	graph' → logprob: -11.668011665344238
    4. '(graph' → logprob: -13.293011665344238
    5. ' ' → logprob: -14.293011665344238
    6. '   ' → logprob: -14.793011665344238
    7. '```' → logprob: -14.918011665344238
    8. '  ' → logprob: -15.793011665344238
    9. 'raph' → logprob: -15.793011665344238
    10. '[' → logprob: -15.918011665344238

Token 252: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -6.392202976712724e-06
    2. 'u' → logprob: -12.250006675720215
    3. '[v' → logprob: -14.000006675720215
    4. '[' → logprob: -14.375006675720215
    5. ' [' → logprob: -17.2500057220459
    6. '
' → logprob: -17.5000057220459
    7. '   ' → logprob: -17.6250057220459
    8. '```' → logprob: -18.0000057220459
    9. '[s' → logprob: -18.6250057220459
    10. '

' → logprob: -18.7500057220459

Token 253: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.00012535012501757592
    2. ']' → logprob: -9.87512493133545
    3. ']:
' → logprob: -10.12512493133545
    4. ':' → logprob: -11.00012493133545
    5. '):' → logprob: -11.37512493133545
    6. '>:' → logprob: -13.75012493133545
    7. ' ]' → logprob: -13.87512493133545
    8. ']:
' → logprob: -14.00012493133545
    9. ']:

' → logprob: -14.12512493133545
    10. '}:' → logprob: -15.00012493133545

Token 254: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.034464895725250244
    2. '       ' → logprob: -4.2844648361206055
    3. ':' → logprob: -4.4094648361206055
    4. ' for' → logprob: -5.9094648361206055
    5. '<|end|>' → logprob: -6.2844648361206055
    6. '           ' → logprob: -7.1594648361206055
    7. ':
' → logprob: -7.4094648361206055
    8. ',' → logprob: -7.6594648361206055
    9. ' :' → logprob: -7.9094648361206055
    10. '   ' → logprob: -7.9094648361206055

Token 255: ' if' (ID: 538)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5014967322349548
    2. '           ' → logprob: -1.8764967918395996
    3. ' ' → logprob: -2.5014967918395996
    4. '       ' → logprob: -3.1264967918395996
    5. 'for' → logprob: -3.1264967918395996
    6. '        ' → logprob: -4.0014967918396
    7. '   ' → logprob: -4.2514967918396
    8. '    ' → logprob: -4.5014967918396
    9. '                   ' → logprob: -5.0014967918396
    10. '               ' → logprob: -5.3764967918396

Token 256: ' v' (ID: 323)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.7597271800041199
    2. ' used' → logprob: -1.3847272396087646
    3. 'dist' → logprob: -2.0097272396087646
    4. ' dist' → logprob: -2.6347272396087646
    5. 'v' → logprob: -3.7597272396087646
    6. ' v' → logprob: -4.0097270011901855
    7. ' not' → logprob: -4.8847270011901855
    8. 'u' → logprob: -5.2597270011901855
    9. ' u' → logprob: -5.5097270011901855
    10. 'True' → logprob: -5.6347270011901855

Token 257: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003887719241902232
    2. 'v' → logprob: -7.25388765335083
    3. '[' → logprob: -7.37888765335083
    4. '_' → logprob: -7.37888765335083
    5. ' ' → logprob: -7.37888765335083
    6. '2' → logprob: -7.75388765335083
    7. '=' → logprob: -8.753888130187988
    8. '[v' → logprob: -8.878888130187988
    9. ' in' → logprob: -9.878888130187988
    10. 's' → logprob: -9.878888130187988

Token 258: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -1.1836742162704468
    2. ' !=' → logprob: -1.5586742162704468
    3. ' not' → logprob: -1.5586742162704468
    4. '<|end|>' → logprob: -2.1836743354797363
    5. ' in' → logprob: -2.6836743354797363
    6. ':' → logprob: -3.4336743354797363
    7. '==' → logprob: -3.6836743354797363
    8. ' ' → logprob: -4.558674335479736
    9. '!=' → logprob: -4.808674335479736
    10. ')' → logprob: -5.433674335479736

Token 259: ' n' (ID: 297)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.3839193880558014
    2. 'n' → logprob: -1.758919358253479
    3. ' u' → logprob: -2.2589194774627686
    4. ' n' → logprob: -3.7589194774627686
    5. '1' → logprob: -4.6339192390441895
    6. ' ' → logprob: -5.1339192390441895
    7. 'v' → logprob: -6.2589192390441895
    8. '0' → logprob: -7.2589192390441895
    9. ' v' → logprob: -8.008919715881348
    10. '-' → logprob: -9.883919715881348

Token 260: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06772305816411972
    2. ':
' → logprob: -3.192723035812378
    3. ' or' → logprob: -4.317723274230957
    4. ' and' → logprob: -4.692723274230957
    5. '               ' → logprob: -7.567723274230957
    6. '                   ' → logprob: -7.692723274230957
    7. '           ' → logprob: -7.942723274230957
    8. ' :' → logprob: -8.317723274230957
    9. 'and' → logprob: -9.442723274230957
    10. '                       ' → logprob: -9.567723274230957

Token 261: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.003928318154066801
    2. ':' → logprob: -6.128928184509277
    3. '               ' → logprob: -7.753928184509277
    4. '                       ' → logprob: -8.128928184509277
    5. ':
' → logprob: -8.253928184509277
    6. ' continue' → logprob: -8.378928184509277
    7. ',' → logprob: -9.128928184509277
    8. '   ' → logprob: -9.253928184509277
    9. '           ' → logprob: -9.503928184509277
    10. '				' → logprob: -9.878928184509277

Token 262: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.718711793422699
    2. ' continue' → logprob: -1.0937118530273438
    3. 'heap' → logprob: -2.7187118530273438
    4. '               ' → logprob: -2.9687118530273438
    5. ' heap' → logprob: -3.0937118530273438
    6. 'print' → logprob: -5.843711853027344
    7. '           ' → logprob: -5.968711853027344
    8. '                   ' → logprob: -6.093711853027344
    9. 'dist' → logprob: -6.218711853027344
    10. '   ' → logprob: -6.468711853027344

Token 263: ' ' (ID: 220)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05914077162742615
    2. '<|end|>' → logprob: -4.434140682220459
    3. '                ' → logprob: -4.559140682220459
    4. '                   ' → logprob: -4.934140682220459
    5. '                
' → logprob: -4.934140682220459
    6. ')' → logprob: -5.059140682220459
    7. '
' → logprob: -5.434140682220459
    8. '           ' → logprob: -5.559140682220459
    9. ' 
' → logprob: -7.059140682220459
    10. ',' → logprob: -7.309140682220459

Token 264: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.056276168674230576
    2. '
' → logprob: -3.0562760829925537
    3. '           ' → logprob: -5.931276321411133
    4. '                   ' → logprob: -6.556276321411133
    5. '                
' → logprob: -7.056276321411133
    6. ' for' → logprob: -7.681276321411133
    7. '<|end|>' → logprob: -8.056276321411133
    8. ')' → logprob: -8.181276321411133
    9. '       ' → logprob: -8.306276321411133
    10. '                ' → logprob: -8.431276321411133

Token 265: ' Cannot' (ID: 68113)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.26507723331451416
    2. ' for' → logprob: -2.2650771141052246
    3. 'for' → logprob: -2.6400771141052246
    4. '
' → logprob: -3.5150771141052246
    5. '                   ' → logprob: -4.390077114105225
    6. '           ' → logprob: -4.515077114105225
    7. 'continue' → logprob: -6.765077114105225
    8. '                
' → logprob: -7.015077114105225
    9. ' continue' → logprob: -7.265077114105225
    10. '       ' → logprob: -7.640077114105225

Token 266: ' use' (ID: 1199)
  Prédit: ' use'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' use' → logprob: -0.2554178237915039
    2. 'use' → logprob: -1.505417823791504
    3. 'skip' → logprob: -6.630417823791504
    4. ' skip' → logprob: -7.005417823791504
    5. 'continue' → logprob: -7.880417823791504
    6. 'apply' → logprob: -7.880417823791504
    7. ' apply' → logprob: -8.755417823791504
    8. ' continue' → logprob: -8.755417823791504
    9. 'pass' → logprob: -10.380417823791504
    10. '   ' → logprob: -10.880417823791504

Token 267: ' free' (ID: 2240)
  Prédit: ' free'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' free' → logprob: -0.9230329394340515
    2. ' the' → logprob: -1.1730329990386963
    3. 'the' → logprob: -1.5480329990386963
    4. 'free' → logprob: -2.9230329990386963
    5. ' two' → logprob: -4.298032760620117
    6. 'two' → logprob: -5.048032760620117
    7. ' ' → logprob: -5.923032760620117
    8. ' a' → logprob: -6.298032760620117
    9. '
' → logprob: -6.673032760620117
    10. 'a' → logprob: -8.798032760620117

Token 268: ' ticket' (ID: 16681)
  Prédit: ' ticket'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ticket' → logprob: -0.21083442866802216
    2. 'ticket' → logprob: -1.7108343839645386
    3. ' ' → logprob: -5.710834503173828
    4. 'token' → logprob: -6.335834503173828
    5. '_ticket' → logprob: -6.835834503173828
    6. ' token' → logprob: -7.085834503173828
    7. 'pass' → logprob: -7.585834503173828
    8. ' pass' → logprob: -8.585834503173828
    9. '
' → logprob: -8.585834503173828
    10. ')' → logprob: -8.585834503173828

Token 269: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09782017767429352
    2. ' on' → logprob: -2.472820281982422
    3. '<|end|>' → logprob: -5.347820281982422
    4. ' for' → logprob: -6.222820281982422
    5. ' at' → logprob: -7.847820281982422
    6. ',' → logprob: -7.847820281982422
    7. '                   ' → logprob: -8.347820281982422
    8. '.' → logprob: -8.472820281982422
    9. '                
' → logprob: -8.847820281982422
    10. ')' → logprob: -8.972820281982422

Token 270: ' destination' (ID: 13330)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.30373087525367737
    2. 'u' → logprob: -3.1787309646606445
    3. ' v' → logprob: -3.1787309646606445
    4. 'there' → logprob: -3.3037309646606445
    5. 'we' → logprob: -3.4287309646606445
    6. 'using' → logprob: -3.9287309646606445
    7. 'the' → logprob: -4.3037309646606445
    8. ' there' → logprob: -4.3037309646606445
    9. ' we' → logprob: -4.4287309646606445
    10. 'next' → logprob: -4.6787309646606445

Token 271: ' on' (ID: 402)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.5557942986488342
    2. 'is' → logprob: -1.1807942390441895
    3. ' reached' → logprob: -2.8057942390441895
    4. '==' → logprob: -3.9307942390441895
    5. ',' → logprob: -5.1807942390441895
    6. ' node' → logprob: -5.5557942390441895
    7. 'node' → logprob: -5.6807942390441895
    8. '.' → logprob: -5.8057942390441895
    9. '<|end|>' → logprob: -5.8057942390441895
    10. ' ==' → logprob: -5.9307942390441895

Token 272: ' intermediate' (ID: 47388)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.8836471438407898
    2. 'first' → logprob: -1.1336472034454346
    3. ' the' → logprob: -2.6336472034454346
    4. ' first' → logprob: -2.8836472034454346
    5. 'one' → logprob: -3.2586472034454346
    6. 'this' → logprob: -3.3836472034454346
    7. 'single' → logprob: -4.3836469650268555
    8. 'a' → logprob: -4.6336469650268555
    9. ' this' → logprob: -4.8836469650268555
    10. 'two' → logprob: -5.2586469650268555

Token 273: ' step' (ID: 5983)
  Prédit: ' node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -1.0846682786941528
    2. 'edge' → logprob: -1.2096682786941528
    3. 'node' → logprob: -1.7096682786941528
    4. ' edge' → logprob: -1.8346682786941528
    5. 'vertex' → logprob: -4.459668159484863
    6. 'v' → logprob: -5.834668159484863
    7. 'edges' → logprob: -5.834668159484863
    8. ' vertex' → logprob: -6.709668159484863
    9. ' step' → logprob: -6.834668159484863
    10. ' edges' → logprob: -6.834668159484863

Token 274: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002752926666289568
    2. '<|end|>' → logprob: -6.627752780914307
    3. ')' → logprob: -8.377753257751465
    4. '                
' → logprob: -8.502753257751465
    5. ' for' → logprob: -8.502753257751465
    6. ',' → logprob: -8.627753257751465
    7. '                ' → logprob: -9.127753257751465
    8. '.' → logprob: -9.127753257751465
    9. '
' → logprob: -9.377753257751465
    10. '                   ' → logprob: -9.627753257751465

Token 275: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.017129797488451004
    2. '<|end|>' → logprob: -5.642129898071289
    3. '                
' → logprob: -5.767129898071289
    4. ')' → logprob: -6.017129898071289
    5. '
' → logprob: -6.017129898071289
    6. ' for' → logprob: -6.892129898071289
    7. '           ' → logprob: -7.517129898071289
    8. '                ' → logprob: -7.767129898071289
    9. ',' → logprob: -7.892129898071289
    10. '       ' → logprob: -7.892129898071289

Token 276: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6665274500846863
    2. '               ' → logprob: -0.7915274500846863
    3. 'for' (adapté à ' for') → logprob: -3.541527509689331
    4. '           ' → logprob: -6.166527271270752
    5. '       ' → logprob: -6.916527271270752
    6. '                   ' → logprob: -7.916527271270752
    7. ' ' → logprob: -8.41652774810791
    8. '                ' → logprob: -8.79152774810791
    9. ' ' → logprob: -8.79152774810791
    10. '   ' → logprob: -9.04152774810791

Token 277: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.6326143741607666
    2. ' v' → logprob: -0.7576143741607666
    3. '	v' → logprob: -11.507614135742188
    4. ' ' → logprob: -13.382614135742188
    5. ',' → logprob: -14.382614135742188
    6. ',v' → logprob: -14.382614135742188
    7. '   ' → logprob: -14.632614135742188
    8. '  ' → logprob: -14.632614135742188
    9. ' ' → logprob: -15.257614135742188
    10. '_v' → logprob: -15.257614135742188

Token 278: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1892143040895462
    2. '2' → logprob: -1.9392143487930298
    3. ',' → logprob: -3.5642142295837402
    4. ' ,' → logprob: -8.814214706420898
    5. ',v' → logprob: -9.564214706420898
    6. '_,' → logprob: -11.564214706420898
    7. ' ' → logprob: -12.064214706420898
    8. 'v' → logprob: -12.564214706420898
    9. ',_' → logprob: -12.814214706420898
    10. '0' → logprob: -13.064214706420898

Token 279: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.349075556499884e-05
    2. ' ,' → logprob: -9.8750638961792
    3. ',v' → logprob: -11.5000638961792
    4. ',c' → logprob: -13.5000638961792
    5. '‌,' → logprob: -15.6250638961792
    6. ',
' → logprob: -16.500062942504883
    7. ' ' → logprob: -16.875062942504883
    8. ',n' → logprob: -17.375062942504883
    9. ',s' → logprob: -17.500062942504883
    10. '<|end|>' → logprob: -17.875062942504883

Token 280: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.033866748213768005
    2. 'c' → logprob: -3.5338666439056396
    3. '<|end|>' → logprob: -5.783866882324219
    4. ' ' → logprob: -6.908866882324219
    5. ' ' → logprob: -11.408866882324219
    6. '_c' → logprob: -12.408866882324219
    7. ' 
' → logprob: -12.533866882324219
    8. ')c' → logprob: -13.033866882324219
    9. 's' → logprob: -13.158866882324219
    10. '<|end|>' → logprob: -13.783866882324219

Token 281: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03427070379257202
    2. '1' → logprob: -3.534270763397217
    3. ',' → logprob: -5.409270763397217
    4. ' ,' → logprob: -10.909270286560059
    5. ' ' → logprob: -11.534270286560059
    6. ',v' → logprob: -12.534270286560059
    7. 'v' → logprob: -13.409270286560059
    8. '0' → logprob: -14.409270286560059
    9. ' in' → logprob: -15.284270286560059
    10. '```' → logprob: -15.534270286560059

Token 282: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03377029672265053
    2. 'in' → logprob: -3.4087703227996826
    3. ',' → logprob: -9.283770561218262
    4. ' ' → logprob: -10.533770561218262
    5. '<|end|>' → logprob: -13.283770561218262
    6. ' ,' → logprob: -13.783770561218262
    7. ')' → logprob: -13.908770561218262
    8. '	in' → logprob: -14.908770561218262
    9. ' ' → logprob: -15.658770561218262
    10. 'In' → logprob: -15.721270561218262

Token 283: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.14270563423633575
    2. ' graph' → logprob: -2.0177056789398193
    3. '	graph' → logprob: -10.892705917358398
    4. '(graph' → logprob: -11.642705917358398
    5. ' ' → logprob: -13.892705917358398
    6. 'Graph' → logprob: -14.892705917358398
    7. 'graphql' → logprob: -14.892705917358398
    8. '_graph' → logprob: -15.017705917358398
    9. '```' → logprob: -15.142705917358398
    10. 'raph' → logprob: -15.517705917358398

Token 284: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.11327500641345978
    2. '[u' → logprob: -2.2382750511169434
    3. 'v' → logprob: -8.238274574279785
    4. '[' → logprob: -9.113274574279785
    5. 'graph' → logprob: -9.613274574279785
    6. '1' → logprob: -12.488274574279785
    7. 'u' → logprob: -13.363274574279785
    8. '[node' → logprob: -13.988274574279785
    9. '[[' → logprob: -14.488274574279785
    10. '_graph' → logprob: -14.613274574279785

Token 285: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07231201976537704
    2. '2' → logprob: -2.697312116622925
    3. 'v' → logprob: -6.197311878204346
    4. '[v' → logprob: -8.447312355041504
    5. '[' → logprob: -10.322312355041504
    6. ']' → logprob: -10.697312355041504
    7. '[u' → logprob: -11.197312355041504
    8. '][' → logprob: -11.697312355041504
    9. '```' → logprob: -11.697312355041504
    10. 's' → logprob: -12.322312355041504

Token 286: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.23105856776237488
    2. '):' → logprob: -1.6060585975646973
    3. ':' → logprob: -5.606058597564697
    4. ']' → logprob: -7.231058597564697
    5. ']):' → logprob: -7.731058597564697
    6. ']:
' → logprob: -8.356058120727539
    7. '):
' → logprob: -9.231058120727539
    8. '"]:' → logprob: -9.481058120727539
    9. ' ):' → logprob: -9.606058120727539
    10. '']:' → logprob: -9.606058120727539

Token 287: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.008226483128964901
    2. '               ' → logprob: -5.88322639465332
    3. '           ' → logprob: -6.13322639465332
    4. ' if' → logprob: -6.88322639465332
    5. '<|end|>' → logprob: -7.25822639465332
    6. '                       ' → logprob: -7.38322639465332
    7. '                ' → logprob: -8.50822639465332
    8. '                           ' → logprob: -8.88322639465332
    9. '                    ' → logprob: -9.00822639465332
    10. '   ' → logprob: -9.00822639465332

Token 288: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.10793742537498474
    2. 'if' (adapté à ' if') → logprob: -2.3579373359680176
    3. '                       ' → logprob: -5.732937335968018
    4. ' ' → logprob: -6.607937335968018
    5. '                   ' → logprob: -6.857937335968018
    6. '               ' → logprob: -7.482937335968018
    7. '                        ' → logprob: -8.357937812805176
    8. '                ' → logprob: -8.732937812805176
    9. '           ' → logprob: -8.982937812805176
    10. '    ' → logprob: -8.982937812805176

Token 289: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.027072984725236893
    2. ' v' → logprob: -3.6520729064941406
    3. 'dist' → logprob: -7.777072906494141
    4. ' dist' → logprob: -9.40207290649414
    5. 'True' → logprob: -9.52707290649414
    6. 'u' → logprob: -10.27707290649414
    7. 'not' → logprob: -10.40207290649414
    8. ' True' → logprob: -10.65207290649414
    9. 'n' → logprob: -10.77707290649414
    10. 'used' → logprob: -10.90207290649414

Token 290: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00021486106561496854
    2. '1' → logprob: -8.750214576721191
    3. 'n' → logprob: -10.625214576721191
    4. ' ' → logprob: -10.625214576721191
    5. ' n' → logprob: -12.375214576721191
    6. 'u' → logprob: -13.875214576721191
    7. '==' → logprob: -14.750214576721191
    8. ' ==' → logprob: -15.062714576721191
    9. 'v' → logprob: -15.125214576721191
    10. '```' → logprob: -15.500214576721191

Token 291: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.07705439627170563
    2. ' !=' → logprob: -3.202054500579834
    3. '==' → logprob: -3.452054500579834
    4. '!=' → logprob: -6.577054500579834
    5. ' not' → logprob: -8.577054023742676
    6. ' ' → logprob: -9.077054023742676
    7. '<|end|>' → logprob: -9.577054023742676
    8. ' n' → logprob: -11.202054023742676
    9. 'n' → logprob: -12.202054023742676
    10. ' ' → logprob: -12.327054023742676

Token 292: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.16189135611057281
    2. 'u' → logprob: -1.9118913412094116
    3. ' n' → logprob: -6.911891460418701
    4. ' u' → logprob: -7.786891460418701
    5. 'v' → logprob: -9.286890983581543
    6. '1' → logprob: -9.661890983581543
    7. '<|end|>' → logprob: -10.911890983581543
    8. '   ' → logprob: -11.036890983581543
    9. '[u' → logprob: -11.536890983581543
    10. ' ' → logprob: -11.536890983581543

Token 293: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3373742699623108
    2. ':' → logprob: -1.337374210357666
    3. ' or' → logprob: -4.212374210357666
    4. 'and' → logprob: -4.962374210357666
    5. '                       ' → logprob: -7.712374210357666
    6. '<|end|>' → logprob: -7.837374210357666
    7. '):' → logprob: -8.462374687194824
    8. ':
' → logprob: -8.462374687194824
    9. ' :' → logprob: -8.587374687194824
    10. ')' → logprob: -8.587374687194824

Token 294: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.008813577704131603
    2. ' and' → logprob: -5.883813381195068
    3. '                           ' → logprob: -6.633813381195068
    4. '                   ' → logprob: -7.008813381195068
    5. ' or' → logprob: -7.258813381195068
    6. ':' → logprob: -7.258813381195068
    7. ' continue' → logprob: -7.508813381195068
    8. 'continue' → logprob: -7.633813381195068
    9. '               ' → logprob: -7.758813381195068
    10. '                               ' → logprob: -8.633813858032227

Token 295: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.8431198596954346
    2. ' continue' → logprob: -1.2181198596954346
    3. '                           ' → logprob: -1.7181198596954346
    4. '                               ' → logprob: -3.0931198596954346
    5. '                       ' → logprob: -3.2181198596954346
    6. '
' → logprob: -5.9681196212768555
    7. '               ' → logprob: -6.9681196212768555
    8. '                   ' → logprob: -6.9681196212768555
    9. ',' → logprob: -7.5931196212768555
    10. '#' → logprob: -7.7181196212768555

Token 296: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.03201281279325485
    2. '                       ' → logprob: -4.657012939453125
    3. '<|end|>' → logprob: -5.157012939453125
    4. '               ' → logprob: -5.282012939453125
    5. ')' → logprob: -6.032012939453125
    6. ',' → logprob: -6.282012939453125
    7. '                    
' → logprob: -6.532012939453125
    8. '                        
' → logprob: -6.532012939453125
    9. '                    ' → logprob: -6.782012939453125
    10. ' and' → logprob: -7.532012939453125

Token 297: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.03454160317778587
    2. '                       ' → logprob: -3.534541606903076
    3. '               ' → logprob: -5.784541606903076
    4. '<|end|>' → logprob: -8.034541130065918
    5. '           ' → logprob: -8.159541130065918
    6. '                    ' → logprob: -8.284541130065918
    7. '                        
' → logprob: -8.909541130065918
    8. '                           ' → logprob: -8.909541130065918
    9. '                    
' → logprob: -9.534541130065918
    10. '       ' → logprob: -9.784541130065918

Token 298: ' new' (ID: 620)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.024829387664795
    2. 'new' (adapté à ' new') → logprob: -1.399829387664795
    3. 'total' → logprob: -1.774829387664795
    4. '                   ' → logprob: -2.524829387664795
    5. ' if' → logprob: -2.524829387664795
    6. 'next' → logprob: -4.024829387664795
    7. ' total' → logprob: -4.149829387664795
    8. ' new' → logprob: -4.274829387664795
    9. 'cost' → logprob: -5.274829387664795
    10. '                       ' → logprob: -5.524829387664795

Token 299: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.004156875889748335
    2. 'cost' → logprob: -5.504157066345215
    3. '_' → logprob: -9.879157066345215
    4. ' cost' → logprob: -11.754157066345215
    5. '_dist' → logprob: -11.754157066345215
    6. '_c' → logprob: -12.629157066345215
    7. ' _' → logprob: -12.629157066345215
    8. 'Cost' → logprob: -13.004157066345215
    9. '_COST' → logprob: -13.629157066345215
    10. '-cost' → logprob: -15.254157066345215

Token 300: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03804619982838631
    2. '=' → logprob: -3.28804612159729
    3. ' ' → logprob: -13.163045883178711
    4. ',' → logprob: -13.663045883178711
    5. '    ' → logprob: -14.038045883178711
    6. ')' → logprob: -15.288045883178711
    7. '        ' → logprob: -16.41304588317871
    8. ' =
' → logprob: -16.66304588317871
    9. '   ' → logprob: -16.91304588317871
    10. '            ' → logprob: -16.91304588317871

Token 301: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.48143139481544495
    2. ' cost' → logprob: -0.9814313650131226
    3. '0' → logprob: -4.981431484222412
    4. ' ' → logprob: -8.606431007385254
    5. ' dist' → logprob: -9.356431007385254
    6. 'dist' → logprob: -9.606431007385254
    7. ' c' → logprob: -10.231431007385254
    8. 'c' → logprob: -10.356431007385254
    9. '
' → logprob: -11.231431007385254
    10. '(cost' → logprob: -11.356431007385254

Token 302: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.47728389501571655
    2. ' +' → logprob: -1.1022839546203613
    3. '<|end|>' → logprob: -3.1022839546203613
    4. '+c' → logprob: -6.227283954620361
    5. ' ' → logprob: -8.352283477783203
    6. '<|end|>' → logprob: -9.477283477783203
    7. ',' → logprob: -10.602283477783203
    8. ')' → logprob: -10.602283477783203
    9. '[' → logprob: -10.977283477783203
    10. '
' → logprob: -11.102283477783203

Token 303: '                   ' (ID: 699)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 304: ' if' (ID: 538)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -1.5598268508911133
    2. '                   ' → logprob: -2.0598268508911133
    3. 'if' (adapté à ' if') → logprob: -2.3098268508911133
    4. ' if' → logprob: -2.3098268508911133
    5. '<|end|>' → logprob: -2.5598268508911133
    6. ' heap' → logprob: -2.6848268508911133
    7. '+' → logprob: -2.8098268508911133
    8. ' +' → logprob: -3.0598268508911133
    9. '
' → logprob: -3.1848268508911133
    10. '#' → logprob: -3.4348268508911133

Token 305: ' dist' (ID: 3601)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.8900413513183594
    2. ' new' → logprob: -1.1400413513183594
    3. 'new' → logprob: -2.2650413513183594
    4. 'c' → logprob: -2.3900413513183594
    5. ' not' → logprob: -3.6400413513183594
    6. ' dist' → logprob: -4.890041351318359
    7. ' u' → logprob: -5.140041351318359
    8. ' v' → logprob: -5.390041351318359
    9. 'dist' → logprob: -5.515041351318359
    10. 'cost' → logprob: -5.515041351318359

Token 306: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -8.756989700486884e-05
    2. '[u' → logprob: -9.37508773803711
    3. 'v' → logprob: -13.75008773803711
    4. '[' → logprob: -14.12508773803711
    5. ' [' → logprob: -15.25008773803711
    6. ' v' → logprob: -15.37508773803711
    7. '][' → logprob: -16.12508773803711
    8. '[n' → logprob: -16.25008773803711
    9. '```' → logprob: -16.37508773803711
    10. '<v' → logprob: -17.12508773803711

Token 307: '2' (ID: 17)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.21429796516895294
    2. '1' → logprob: -1.9642980098724365
    3. '2' → logprob: -3.0892980098724365
    4. '[v' → logprob: -5.714297771453857
    5. '][' → logprob: -6.089297771453857
    6. '[' → logprob: -7.589297771453857
    7. 'u' → logprob: -7.839297771453857
    8. ']' → logprob: -9.089298248291016
    9. '```' → logprob: -9.464298248291016
    10. '[n' → logprob: -9.714298248291016

Token 308: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.4289516508579254
    2. '[' → logprob: -1.053951621055603
    3. '0' → logprob: -8.928951263427734
    4. ']' → logprob: -10.178951263427734
    5. ' [' → logprob: -11.053951263427734
    6. ')[' → logprob: -11.303951263427734
    7. '}[' → logprob: -11.553951263427734
    8. '```' → logprob: -11.553951263427734
    9. '"][' → logprob: -12.178951263427734
    10. '>[' → logprob: -12.303951263427734

Token 309: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017161124851554632
    2. '0' → logprob: -6.376716136932373
    3. ' ' → logprob: -11.501715660095215
    4. '   ' → logprob: -12.876715660095215
    5. '
' → logprob: -14.439215660095215
    6. '    ' → logprob: -15.751715660095215
    7. '```' → logprob: -16.37671661376953
    8. '  ' → logprob: -17.12671661376953
    9. '    
' → logprob: -17.18921661376953
    10. '`' → logprob: -17.31421661376953

Token 310: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0019488678080961108
    2. ']>' → logprob: -6.501948833465576
    3. '>' → logprob: -7.876948833465576
    4. ' ]' → logprob: -9.751949310302734
    5. ' >' → logprob: -12.251949310302734
    6. '[' → logprob: -14.376949310302734
    7. ']<=' → logprob: -14.501949310302734
    8. ']==' → logprob: -14.626949310302734
    9. '']' → logprob: -14.751949310302734
    10. '>]' → logprob: -14.876949310302734

Token 311: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.04862404614686966
    2. '>' → logprob: -3.048624038696289
    3. ' <=' → logprob: -11.048624038696289
    4. ' ' → logprob: -11.423624038696289
    5. ' ==' → logprob: -12.923624038696289
    6. ' >
' → logprob: -13.423624038696289
    7. '<=' → logprob: -13.548624038696289
    8. '   ' → logprob: -13.798624038696289
    9. '==' → logprob: -14.423624038696289
    10. ' >
' → logprob: -14.548624038696289

Token 312: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.354913592338562
    2. ' new' → logprob: -1.229913592338562
    3. 'cost' → logprob: -5.229913711547852
    4. ' cost' → logprob: -6.854913711547852
    5. '	new' → logprob: -11.479913711547852
    6. '0' → logprob: -12.542413711547852
    7. ' ' → logprob: -12.604913711547852
    8. '   ' → logprob: -12.792413711547852
    9. '```' → logprob: -12.792413711547852
    10. '[new' → logprob: -13.104913711547852

Token 313: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.00012582694762386382
    2. '_' → logprob: -9.750125885009766
    3. ' _' → logprob: -10.500125885009766
    4. 'cost' → logprob: -11.250125885009766
    5. '_c' → logprob: -11.375125885009766
    6. '_cos' → logprob: -12.250125885009766
    7. '_
' → logprob: -12.500125885009766
    8. ' cost' → logprob: -13.625125885009766
    9. '_co' → logprob: -13.750125885009766
    10. '_C' → logprob: -14.375125885009766

Token 314: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0033100813161581755
    2. ':
' → logprob: -5.753310203552246
    3. ' :' → logprob: -9.753310203552246
    4. '):' → logprob: -10.003310203552246
    5. ']:' → logprob: -11.003310203552246
    6. '   ' → logprob: -12.378310203552246
    7. '       ' → logprob: -13.503310203552246
    8. '):
' → logprob: -13.628310203552246
    9. ':
' → logprob: -14.003310203552246
    10. ' :
' → logprob: -14.003310203552246

Token 315: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.016654277220368385
    2. ':' → logprob: -4.3916544914245605
    3. ':
' → logprob: -7.0166544914245605
    4. '                           ' → logprob: -7.0166544914245605
    5. '                   ' → logprob: -7.1416544914245605
    6. '               ' → logprob: -7.5166544914245605
    7. ',' → logprob: -8.641654014587402
    8. '):' → logprob: -9.141654014587402
    9. '):
' → logprob: -9.141654014587402
    10. '                        
' → logprob: -9.516654014587402

Token 316: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.5759761333465576
    2. ' dist' → logprob: -0.8259761333465576
    3. '	dist' → logprob: -10.950976371765137
    4. '                       ' → logprob: -11.450976371765137
    5. '                           ' → logprob: -13.075976371765137
    6. '```' → logprob: -13.700976371765137
    7. '           ' → logprob: -13.825976371765137
    8. '               ' → logprob: -13.825976371765137
    9. 'Dist' → logprob: -13.950976371765137
    10. '                   ' → logprob: -14.075976371765137

Token 317: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.25
    3. 'v' → logprob: -16.125
    4. '```' → logprob: -18.25
    5. '[val' → logprob: -18.75
    6. '[u' → logprob: -18.75
    7. '<v' → logprob: -19.75
    8. '\[' → logprob: -19.875
    9. '[node' → logprob: -20.125
    10. '[
' → logprob: -20.25

Token 318: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.500000953674316
    3. '[' → logprob: -16.125
    4. '```' → logprob: -16.25
    5. '
' → logprob: -16.75
    6. '   ' → logprob: -17.5625
    7. '₂' → logprob: -17.625
    8. '۲' → logprob: -17.6875
    9. '[v' → logprob: -18.3125
    10. '২' → logprob: -18.5625

Token 319: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.06201092526316643
    2. '[' → logprob: -2.8120110034942627
    3. ']' → logprob: -11.562010765075684
    4. '"][' → logprob: -11.687010765075684
    5. ' ][' → logprob: -11.687010765075684
    6. ''][' → logprob: -12.187010765075684
    7. '>[' → logprob: -12.437010765075684
    8. '<|end|>' → logprob: -13.187010765075684
    9. '}[' → logprob: -13.437010765075684
    10. ' [' → logprob: -14.062010765075684

Token 320: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.500003814697266
    3. '[' → logprob: -15.625003814697266
    4. '   ' → logprob: -16.250003814697266
    5. '
' → logprob: -17.250003814697266
    6. ']' → logprob: -17.375003814697266
    7. '0' → logprob: -18.187503814697266
    8. '```' → logprob: -18.187503814697266
    9. '

' → logprob: -18.375003814697266
    10. '  ' → logprob: -18.500003814697266

Token 321: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12613525986671448
    2. ' =' → logprob: -3.0011353492736816
    3. '=' → logprob: -3.1261353492736816
    4. ']=' → logprob: -3.7511353492736816
    5. ' ]' → logprob: -7.001135349273682
    6. ')' → logprob: -7.751135349273682
    7. ')=' → logprob: -10.876134872436523
    8. '[' → logprob: -10.876134872436523
    9. ',' → logprob: -12.376134872436523
    10. ' )' → logprob: -13.376134872436523

Token 322: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326204538345337
    2. ' =' → logprob: -1.3132619857788086
    3. '[' → logprob: -15.938261985778809
    4. '＝' → logprob: -16.938262939453125
    5. ',' → logprob: -17.313262939453125
    6. ']=' → logprob: -17.313262939453125
    7. '.=' → logprob: -17.813262939453125
    8. '=

' → logprob: -18.313262939453125
    9. ']' → logprob: -18.438262939453125
    10. ' ' → logprob: -18.563262939453125

Token 323: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.004078639671206474
    2. ' new' → logprob: -5.5040788650512695
    3. '
' → logprob: -16.504077911376953
    4. '0' → logprob: -16.879077911376953
    5. '	new' → logprob: -17.004077911376953
    6. 'cost' → logprob: -17.754077911376953
    7. '_new' → logprob: -17.879077911376953
    8. '
' → logprob: -17.879077911376953
    9. 'New' → logprob: -18.129077911376953
    10. '新' → logprob: -18.879077911376953

Token 324: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -2.451116051815916e-05
    2. 'cost' → logprob: -10.625024795532227
    3. ' cost' → logprob: -17.375024795532227
    4. '_COST' → logprob: -18.125024795532227
    5. '_c' → logprob: -18.250024795532227
    6. '_' → logprob: -18.250024795532227
    7. 'Cost' → logprob: -18.375024795532227
    8. '_code' → logprob: -18.875024795532227
    9. '_cos' → logprob: -19.125024795532227
    10. '_co' → logprob: -19.625024795532227

Token 325: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0006285638664849102
    2. '                           ' → logprob: -8.250628471374512
    3. 'heap' → logprob: -9.000628471374512
    4. '					' → logprob: -9.875628471374512
    5. '                   ' → logprob: -10.000628471374512
    6. ',' → logprob: -10.000628471374512
    7. '               ' → logprob: -10.500628471374512
    8. '                        ' → logprob: -10.750628471374512
    9. '           ' → logprob: -11.375628471374512
    10. '                        
' → logprob: -11.625628471374512

Token 326: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0009442188893444836
    2. '                           ' → logprob: -7.625944137573242
    3. 'heap' → logprob: -8.375944137573242
    4. '                   ' → logprob: -9.750944137573242
    5. '               ' → logprob: -10.125944137573242
    6. '           ' → logprob: -10.500944137573242
    7. '                        
' → logprob: -10.625944137573242
    8. '					' → logprob: -10.875944137573242
    9. '```' → logprob: -11.000944137573242
    10. '                        ' → logprob: -11.125944137573242

Token 327: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.0004311460361350328
    2. ' heap' → logprob: -7.750431060791016
    3. '                       ' → logprob: -14.875431060791016
    4. '                   ' → logprob: -17.000431060791016
    5. '                           ' → logprob: -17.125431060791016
    6. '   ' → logprob: -17.250431060791016
    7. '           ' → logprob: -17.250431060791016
    8. 'he' → logprob: -17.625431060791016
    9. '(heap' → logprob: -18.000431060791016
    10. '```' → logprob: -18.125431060791016

Token 328: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -2.2200749754119897e-06
    2. 'p' → logprob: -13.125001907348633
    3. 'push' → logprob: -16.375001907348633
    4. 'h' → logprob: -17.250001907348633
    5. '```' → logprob: -18.375001907348633
    6. 'f' → logprob: -18.750001907348633
    7. '.push' → logprob: -19.000001907348633
    8. 'g' → logprob: -19.500001907348633
    9. 'app' → logprob: -19.500001907348633
    10. '.he' → logprob: -19.875001907348633

Token 329: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -1.4855663721391466e-05
    2. '.push' → logprob: -11.500015258789062
    3. '.' → logprob: -13.250015258789062
    4. '.heap' → logprob: -13.625015258789062
    5. 'he' → logprob: -14.125015258789062
    6. 'q' → logprob: -14.750015258789062
    7. ' .' → logprob: -14.875015258789062
    8. ' he' → logprob: -16.750015258789062
    9. 'push' → logprob: -17.000015258789062
    10. '.p' → logprob: -17.125015258789062

Token 330: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -1.5213274309644476e-05
    2. 'ap' → logprob: -11.125015258789062
    3. 'pp' → logprob: -14.875015258789062
    4. 'push' → logprob: -17.375015258789062
    5. 'a' → logprob: -18.375015258789062
    6. '```' → logprob: -18.750015258789062
    7. ' app' → logprob: -19.250015258789062
    8. 'appen' → logprob: -19.750015258789062
    9. 'ап' → logprob: -19.750015258789062
    10. 'q' → logprob: -20.250015258789062

Token 331: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -6.897412822581828e-05
    2. 'push' → logprob: -9.875068664550781
    3. 'p' → logprob: -11.375068664550781
    4. 'sh' → logprob: -12.625068664550781
    5. 'app' → logprob: -13.875068664550781
    6. 'q' → logprob: -14.000068664550781
    7. 'pp' → logprob: -15.625068664550781
    8. 'op' → logprob: -15.625068664550781
    9. 'u' → logprob: -15.750068664550781
    10. '```' → logprob: -16.25006866455078

Token 332: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -1.1472419600977446e-06
    2. '(' → logprob: -13.750000953674316
    3. '(q' → logprob: -18.125001907348633
    4. 'h' → logprob: -18.250001907348633
    5. '((' → logprob: -18.625001907348633
    6. ' (' → logprob: -19.125001907348633
    7. '(n' → logprob: -19.375001907348633
    8. '(
' → logprob: -19.500001907348633
    9. '(heap' → logprob: -19.875001907348633
    10. '	h' → logprob: -20.625001907348633

Token 333: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -3.8889261304575484e-06
    2. 'qh' → logprob: -13.500003814697266
    3. '(h' → logprob: -13.875003814697266
    4. '(q' → logprob: -14.500003814697266
    5. 'hq' → logprob: -15.875003814697266
    6. 'Q' → logprob: -16.125003814697266
    7. 'qs' → logprob: -16.375003814697266
    8. '_q' → logprob: -16.625003814697266
    9. ')' → logprob: -16.750003814697266
    10. 'sq' → logprob: -16.875003814697266

Token 334: ',' (ID: 11)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.5071702003479004
    2. '(' → logprob: -1.0071702003479004
    3. '((' → logprob: -3.6321702003479004
    4. ' (' → logprob: -5.2571702003479
    5. ',' → logprob: -8.007169723510742
    6. ')' → logprob: -8.257169723510742
    7. '   ' → logprob: -9.757169723510742
    8. ' ' → logprob: -9.882169723510742
    9. '(
' → logprob: -10.132169723510742
    10. '(heap' → logprob: -10.257169723510742

Token 335: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.028237665072083473
    2. ' (' → logprob: -4.278237819671631
    3. '(new' → logprob: -4.278237819671631
    4. '(cost' → logprob: -9.278237342834473
    5. '(c' → logprob: -11.528237342834473
    6. '   ' → logprob: -12.903237342834473
    7. ' ' → logprob: -13.778237342834473
    8. '((' → logprob: -14.778237342834473
    9. '(New' → logprob: -15.028237342834473
    10. '  ' → logprob: -15.028237342834473

Token 336: 'new' (ID: 1389)
  Prédit: 'new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.04430067539215088
    2. '0' → logprob: -3.1693005561828613
    3. ' new' → logprob: -6.669300556182861
    4. ' ' → logprob: -11.04430103302002
    5. '   ' → logprob: -11.66930103302002
    6. '(new' → logprob: -13.41930103302002
    7. '(' → logprob: -13.54430103302002
    8. 'cost' → logprob: -14.04430103302002
    9. 'dist' → logprob: -14.54430103302002
    10. '	new' → logprob: -14.66930103302002

Token 337: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.00012320445966906846
    2. 'cost' → logprob: -9.500123023986816
    3. ',' → logprob: -10.875123023986816
    4. ' cost' → logprob: -12.000123023986816
    5. '_' → logprob: -12.125123023986816
    6. '_,' → logprob: -12.250123023986816
    7. ',_' → logprob: -12.625123023986816
    8. ' _' → logprob: -13.000123023986816
    9. '0' → logprob: -13.875123023986816
    10. '_COST' → logprob: -13.875123023986816

Token 338: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0206720617134124e-05
    2. ' ,' → logprob: -11.62501049041748
    3. ',
' → logprob: -14.12501049041748
    4. ',v' → logprob: -14.87501049041748
    5. ',u' → logprob: -17.125009536743164
    6. '```' → logprob: -17.250009536743164
    7. '   ' → logprob: -17.750009536743164
    8. '‌,' → logprob: -18.250009536743164
    9. '`,' → logprob: -18.625009536743164
    10. ')' → logprob: -19.125009536743164

Token 339: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.00015860427811276168
    2. ' v' → logprob: -8.750158309936523
    3. '	v' → logprob: -16.625158309936523
    4. '   ' → logprob: -19.000158309936523
    5. ')v' → logprob: -19.750158309936523
    6. '[v' → logprob: -21.125158309936523
    7. '```' → logprob: -21.500158309936523
    8. '(v' → logprob: -22.250158309936523
    9. ' ' → logprob: -22.375158309936523
    10. '$v' → logprob: -22.375158309936523

Token 340: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.173704271830502e-06
    2. '_' → logprob: -13.62500286102295
    3. ' ' → logprob: -14.12500286102295
    4. ',' → logprob: -14.50000286102295
    5. '₂' → logprob: -14.87500286102295
    6. '```' → logprob: -15.62500286102295
    7. '[' → logprob: -17.125003814697266
    8. '
' → logprob: -17.250003814697266
    9. '' → logprob: -17.500003814697266
    10. '２' → logprob: -17.625003814697266

Token 341: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3306015716807451e-05
    2. ' ,' → logprob: -11.25001335144043
    3. ',
' → logprob: -16.00001335144043
    4. '```' → logprob: -16.62501335144043
    5. '   ' → logprob: -17.25001335144043
    6. '	' → logprob: -18.25001335144043
    7. '0' → logprob: -18.50001335144043
    8. '1' → logprob: -18.62501335144043
    9. '`,' → logprob: -19.50001335144043
    10. ' ' → logprob: -19.50001335144043

Token 342: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1756367712223437e-05
    2. ' ' → logprob: -11.375011444091797
    3. '   ' → logprob: -15.250011444091797
    4. '  ' → logprob: -18.250011444091797
    5. '                           ' → logprob: -18.875011444091797
    6. '                   ' → logprob: -19.500011444091797
    7. '                       ' → logprob: -19.500011444091797
    8. '```' → logprob: -19.500011444091797
    9. '                               ' → logprob: -19.625011444091797
    10. '
' → logprob: -20.375011444091797

Token 343: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '   ' → logprob: -17.625001907348633
    4. '  ' → logprob: -20.000001907348633
    5. '```' → logprob: -21.375001907348633
    6. '                   ' → logprob: -22.125001907348633
    7. '    ' → logprob: -22.375001907348633
    8. '       ' → logprob: -22.750001907348633
    9. '
' → logprob: -22.750001907348633
    10. '     ' → logprob: -22.875001907348633

Token 344: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00011152983643114567
    2. '))
' → logprob: -9.12511157989502
    3. ' ))' → logprob: -13.75011157989502
    4. ')' → logprob: -13.87511157989502
    5. ')))' → logprob: -14.75011157989502
    6. '))

' → logprob: -16.625110626220703
    7. '))
' → logprob: -17.500110626220703
    8. '   ' → logprob: -18.000110626220703
    9. '       ' → logprob: -19.000110626220703
    10. '));' → logprob: -19.625110626220703

Token 345: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05498868599534035
    2. ')' → logprob: -3.3049886226654053
    3. '               ' → logprob: -5.429988861083984
    4. '        ' → logprob: -5.679988861083984
    5. '           ' → logprob: -5.804988861083984
    6. '        
' → logprob: -6.429988861083984
    7. '   ' → logprob: -6.929988861083984
    8. ' )' → logprob: -7.554988861083984
    9. '    ' → logprob: -7.804988861083984
    10. '      ' → logprob: -8.179988861083984

Token 346: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003537470940500498
    2. 'for' → logprob: -6.128537654876709
    3. ' for' → logprob: -7.378537654876709
    4. '   ' → logprob: -7.878537654876709
    5. '        
' → logprob: -8.50353717803955
    6. 'else' → logprob: -9.37853717803955
    7. '           ' → logprob: -11.37853717803955
    8. '    ' → logprob: -11.75353717803955
    9. '    
' → logprob: -12.00353717803955
    10. ')' → logprob: -12.37853717803955

Token 347: ' Normal' (ID: 29591)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14280454814434052
    2. ' for' → logprob: -2.0178046226501465
    3. '   ' → logprob: -9.392804145812988
    4. '       ' → logprob: -10.142804145812988
    5. '	for' → logprob: -13.517804145812988
    6. '        
' → logprob: -13.642804145812988
    7. ' ' → logprob: -13.892804145812988
    8. '
' → logprob: -14.017804145812988
    9. '    
' → logprob: -14.642804145812988
    10. ' 
' → logprob: -14.767804145812988

Token 348: ' movement' (ID: 12772)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.553908109664917
    2. 'for' → logprob: -0.928908109664917
    3. '       ' → logprob: -3.553908109664917
    4. '           ' → logprob: -7.178908348083496
    5. '   ' → logprob: -7.428908348083496
    6. '        ' → logprob: -9.178908348083496
    7. '    ' → logprob: -9.553908348083496
    8. '               ' → logprob: -9.678908348083496
    9. '        
' → logprob: -10.678908348083496
    10. ',' → logprob: -11.178908348083496

Token 349: ' without' (ID: 2935)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008132955059409142
    2. ' for' → logprob: -4.8831329345703125
    3. '   ' → logprob: -8.258132934570312
    4. 'for' → logprob: -8.508132934570312
    5. '        
' → logprob: -11.258132934570312
    6. '           ' → logprob: -11.383132934570312
    7. '	' → logprob: -11.633132934570312
    8. '	for' → logprob: -12.008132934570312
    9. '<|end|>' → logprob: -12.258132934570312
    10. '      ' → logprob: -13.008132934570312

Token 350: ' free' (ID: 2240)
  Prédit: 'free'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'free' → logprob: -0.8538722991943359
    2. 'using' → logprob: -0.9788722991943359
    3. ' free' → logprob: -2.353872299194336
    4. ' using' → logprob: -2.853872299194336
    5. 'used' → logprob: -3.353872299194336
    6. ' used' → logprob: -5.103872299194336
    7. ' the' → logprob: -6.853872299194336
    8. 'the' → logprob: -6.978872299194336
    9. ' a' → logprob: -7.103872299194336
    10. 'a' → logprob: -7.603872299194336

Token 351: ' ticket' (ID: 16681)
  Prédit: ' ticket'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ticket' → logprob: -0.12159810960292816
    2. 'ticket' → logprob: -2.3715980052948
    3. '_ticket' → logprob: -3.8715980052948
    4. '-ticket' → logprob: -9.871598243713379
    5. 'token' → logprob: -10.371598243713379
    6. '       ' → logprob: -10.371598243713379
    7. ' token' → logprob: -10.621598243713379
    8. 't' → logprob: -10.871598243713379
    9. '_' → logprob: -10.996598243713379
    10. '   ' → logprob: -10.996598243713379

Token 352: ' or' (ID: 503)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07738975435495377
    2. ' for' → logprob: -2.702389717102051
    3. 'for' → logprob: -4.952389717102051
    4. '   ' → logprob: -8.07738971710205
    5. '	for' → logprob: -10.95238971710205
    6. '	' → logprob: -11.32738971710205
    7. '        
' → logprob: -12.70238971710205
    8. '<|end|>' → logprob: -12.82738971710205
    9. '           ' → logprob: -12.95238971710205
    10. ',' → logprob: -12.95238971710205

Token 353: ' after' (ID: 1934)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.24549195170402527
    2. ' used' → logprob: -1.8704919815063477
    3. ' with' → logprob: -3.6204919815063477
    4. 'with' → logprob: -3.9954919815063477
    5. '(' → logprob: -4.620491981506348
    6. ' (' → logprob: -5.495491981506348
    7. 'using' → logprob: -6.495491981506348
    8. 'if' → logprob: -6.745491981506348
    9. '   ' → logprob: -7.370491981506348
    10. ' if' → logprob: -7.495491981506348

Token 354: ' using' (ID: 2360)
  Prédit: 'using'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'using' → logprob: -0.7337613701820374
    2. 'used' → logprob: -0.7337613701820374
    3. ' used' → logprob: -3.7337613105773926
    4. ' using' → logprob: -4.233761310577393
    5. 'use' → logprob: -7.108761310577393
    6. '   ' → logprob: -8.60876178741455
    7. 'free' → logprob: -9.23376178741455
    8. 'usage' → logprob: -9.60876178741455
    9. ' use' → logprob: -9.73376178741455
    10. 'having' → logprob: -10.10876178741455

Token 355: ' it' (ID: 480)
  Prédit: ' free'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' free' → logprob: -0.9553407430648804
    2. ' the' → logprob: -1.4553407430648804
    3. 'free' → logprob: -1.8303407430648804
    4. 'the' → logprob: -2.45534086227417
    5. ' ticket' → logprob: -3.45534086227417
    6. 'ticket' → logprob: -3.58034086227417
    7. ' it' → logprob: -3.83034086227417
    8. '       ' → logprob: -4.20534086227417
    9. '   ' → logprob: -4.83034086227417
    10. '=' → logprob: -5.20534086227417

Token 356: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01853465475142002
    2. ' for' → logprob: -4.2685346603393555
    3. '   ' → logprob: -6.0185346603393555
    4. 'for' → logprob: -6.2685346603393555
    5. '	for' → logprob: -11.893534660339355
    6. '           ' → logprob: -12.393534660339355
    7. ':' → logprob: -12.393534660339355
    8. '    ' → logprob: -12.518534660339355
    9. '      ' → logprob: -12.893534660339355
    10. ',' → logprob: -13.018534660339355

Token 357: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005500668194144964
    2. ' for' → logprob: -5.755500793457031
    3. '   ' → logprob: -6.505500793457031
    4. 'for' → logprob: -7.380500793457031
    5. '<|end|>' → logprob: -9.630500793457031
    6. '	for' → logprob: -10.005500793457031
    7. '	' → logprob: -10.130500793457031
    8. '        
' → logprob: -11.255500793457031
    9. '```' → logprob: -11.255500793457031
    10. '    
' → logprob: -12.755500793457031

Token 358: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.20520147681236267
    2. ' for' → logprob: -1.705201506614685
    3. '       ' → logprob: -5.580201625823975
    4. '   ' → logprob: -12.330201148986816
    5. '	for' → logprob: -12.330201148986816
    6. '```' → logprob: -15.830201148986816
    7. '        
' → logprob: -16.580202102661133
    8. '    ' → logprob: -17.455202102661133
    9. ' ' → logprob: -17.455202102661133
    10. ' ' → logprob: -17.580202102661133

Token 359: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.3868902027606964
    2. 'v' → logprob: -1.136890172958374
    3. '(v' → logprob: -11.011890411376953
    4. '	v' → logprob: -13.261890411376953
    5. ' (' → logprob: -15.761890411376953
    6. '   ' → logprob: -15.761890411376953
    7. 'vv' → logprob: -15.886890411376953
    8. ' ' → logprob: -16.011890411376953
    9. '  ' → logprob: -16.636890411376953
    10. '```' → logprob: -16.761890411376953

Token 360: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007226797170005739
    2. ',v' → logprob: -7.750722885131836
    3. ' ,' → logprob: -8.750722885131836
    4. '1' → logprob: -9.000722885131836
    5. '2' → logprob: -13.250722885131836
    6. '_,' → logprob: -13.375722885131836
    7. ',w' → logprob: -14.375722885131836
    8. 'v' → logprob: -14.625722885131836
    9. ',n' → logprob: -14.625722885131836
    10. ',s' → logprob: -14.625722885131836

Token 361: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0006759775569662452
    2. ' c' → logprob: -7.375676155090332
    3. 'cost' → logprob: -10.000676155090332
    4. 'w' → logprob: -12.750676155090332
    5. ',' → logprob: -14.750676155090332
    6. '	c' → logprob: -14.875676155090332
    7. ',c' → logprob: -15.750676155090332
    8. ' ' → logprob: -15.875676155090332
    9. ')c' → logprob: -16.000675201416016
    10. ' cost' → logprob: -16.875675201416016

Token 362: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005980816204100847
    2. 'in' → logprob: -5.130980968475342
    3. ' ' → logprob: -10.505980491638184
    4. ',' → logprob: -11.130980491638184
    5. '	in' → logprob: -12.630980491638184
    6. '1' → logprob: -13.130980491638184
    7. 's' → logprob: -13.630980491638184
    8. '  ' → logprob: -13.630980491638184
    9. ' ,' → logprob: -14.880980491638184
    10. '2' → logprob: -14.880980491638184

Token 363: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.005236956290900707
    2. ' graph' → logprob: -5.255237102508545
    3. '	graph' → logprob: -13.005236625671387
    4. '(graph' → logprob: -14.130236625671387
    5. ' ' → logprob: -17.130237579345703
    6. '_graph' → logprob: -17.755237579345703
    7. 'raph' → logprob: -18.130237579345703
    8. 'graphql' → logprob: -18.255237579345703
    9. 'Graph' → logprob: -18.630237579345703
    10. '.graph' → logprob: -18.755237579345703

Token 364: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -2.1008713702030946e-06
    2. 'u' → logprob: -13.125001907348633
    3. '[v' → logprob: -16.750001907348633
    4. '[' → logprob: -16.875001907348633
    5. ',u' → logprob: -17.375001907348633
    6. ',' → logprob: -18.000001907348633
    7. ' [' → logprob: -18.375001907348633
    8. ' u' → logprob: -18.875001907348633
    9. '(u' → logprob: -19.000001907348633
    10. '   ' → logprob: -19.375001907348633

Token 365: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.11416171491146088
    2. ']:
' → logprob: -2.239161729812622
    3. ']' → logprob: -6.864161491394043
    4. ']:
' → logprob: -8.864161491394043
    5. ' ]' → logprob: -9.489161491394043
    6. '       ' → logprob: -9.989161491394043
    7. ']:

' → logprob: -11.364161491394043
    8. '):' → logprob: -12.614161491394043
    9. '   ' → logprob: -12.614161491394043
    10. '],' → logprob: -12.739161491394043

Token 366: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013571803458034992
    2. '       ' → logprob: -4.638571739196777
    3. ':' → logprob: -6.263571739196777
    4. ' if' → logprob: -7.263571739196777
    5. '<|end|>' → logprob: -7.513571739196777
    6. '   ' → logprob: -9.263571739196777
    7. '	       ' → logprob: -9.263571739196777
    8. 'if' → logprob: -9.513571739196777
    9. ',' → logprob: -9.513571739196777
    10. '               ' → logprob: -9.763571739196777

Token 367: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.0685034766793251
    2. ' new' → logprob: -3.0685033798217773
    3. 'if' → logprob: -4.068503379821777
    4. ' if' → logprob: -6.818503379821777
    5. 'next' → logprob: -6.943503379821777
    6. '           ' → logprob: -8.318503379821777
    7. '   ' → logprob: -9.318503379821777
    8. 'nc' → logprob: -9.318503379821777
    9. '```' → logprob: -10.068503379821777
    10. ' next' → logprob: -10.193503379821777

Token 368: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -2.1054253011243418e-05
    2. 'cost' → logprob: -11.625020980834961
    3. '_' → logprob: -12.125020980834961
    4. '_c' → logprob: -12.125020980834961
    5. ' _' → logprob: -15.500020980834961
    6. '_COST' → logprob: -15.625020980834961
    7. '_cos' → logprob: -15.875020980834961
    8. '_code' → logprob: -15.875020980834961
    9. '_dist' → logprob: -16.37502098083496
    10. ' cost' → logprob: -16.50002098083496

Token 369: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.386874258518219
    2. ' =' → logprob: -1.1368741989135742
    3. ')' → logprob: -13.636874198913574
    4. ',' → logprob: -14.261874198913574
    5. ' =
' → logprob: -15.261874198913574
    6. ' ' → logprob: -15.636874198913574
    7. '	' → logprob: -15.636874198913574
    8. '=
' → logprob: -16.01187515258789
    9. '＝' → logprob: -16.13687515258789
    10. ')=' → logprob: -16.13687515258789

Token 370: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.10020678490400314
    2. ' cost' → logprob: -2.3502068519592285
    3. '(cost' → logprob: -16.35020637512207
    4. '   ' → logprob: -17.47520637512207
    5. ' ' → logprob: -17.85020637512207
    6. 'c' → logprob: -17.97520637512207
    7. '_cost' → logprob: -18.22520637512207
    8. 'Cost' → logprob: -19.35020637512207
    9. ' ' → logprob: -19.60020637512207
    10. ' kost' → logprob: -20.10020637512207

Token 371: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.38835880160331726
    2. '+' → logprob: -1.1383588314056396
    3. '+c' → logprob: -6.5133585929870605
    4. '   ' → logprob: -14.388359069824219
    5. '+
' → logprob: -14.388359069824219
    6. ' +
' → logprob: -14.763359069824219
    7. '+C' → logprob: -14.763359069824219
    8. ' ' → logprob: -15.138359069824219
    9. '    ' → logprob: -15.263359069824219
    10. ' ' → logprob: -15.513359069824219

Token 372: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0031777136027812958
    2. ' c' → logprob: -5.753177642822266
    3. '	c' → logprob: -17.753177642822266
    4. '   ' → logprob: -19.628177642822266
    5. ' ' → logprob: -20.628177642822266
    6. ')c' → logprob: -21.253177642822266
    7. '_c' → logprob: -21.378177642822266
    8. '$c' → logprob: -21.628177642822266
    9. ' ' → logprob: -21.878177642822266
    10. '*c' → logprob: -22.003177642822266

Token 373: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2789434790611267
    2. '<|end|>' → logprob: -1.6539435386657715
    3. '
' → logprob: -3.5289435386657715
    4. ' if' → logprob: -4.6539435386657715
    5. '       ' → logprob: -5.6539435386657715
    6. ' 
' → logprob: -6.2789435386657715
    7. '<|end|>' → logprob: -6.6539435386657715
    8. '            
' → logprob: -6.7789435386657715
    9. ')' → logprob: -7.0289435386657715
    10. '          ' → logprob: -7.2789435386657715

Token 374: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1919177770614624
    2. '
' → logprob: -2.441917896270752
    3. '<|end|>' → logprob: -2.691917896270752
    4. ' if' → logprob: -4.816917896270752
    5. 'if' → logprob: -5.941917896270752
    6. '       ' → logprob: -6.066917896270752
    7. '            
' → logprob: -6.191917896270752
    8. ' 
' → logprob: -6.816917896270752
    9. '  
' → logprob: -7.316917896270752
    10. '\n' → logprob: -7.441917896270752

Token 375: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0006764543941244483
    2. ' if' → logprob: -7.50067663192749
    3. '           ' → logprob: -9.000676155090332
    4. '       ' → logprob: -16.37567710876465
    5. '            
' → logprob: -16.75067710876465
    6. '
' → logprob: -17.00067710876465
    7. '   ' → logprob: -17.12567710876465
    8. '               ' → logprob: -18.12567710876465
    9. '```' → logprob: -18.37567710876465
    10. '            ' → logprob: -19.62567710876465

Token 376: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.014179732650518417
    2. ' dist' → logprob: -4.264179706573486
    3. 'new' → logprob: -11.264180183410645
    4. ' new' → logprob: -13.264180183410645
    5. '	dist' → logprob: -13.764180183410645
    6. '(dist' → logprob: -15.014180183410645
    7. '   ' → logprob: -15.764180183410645
    8. ' ' → logprob: -16.889179229736328
    9. '  ' → logprob: -18.014179229736328
    10. '_dist' → logprob: -18.139179229736328

Token 377: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.04859009385108948
    2. '[u' → logprob: -3.0485901832580566
    3. 'v' → logprob: -12.923589706420898
    4. '[' → logprob: -15.798589706420898
    5. 'u' → logprob: -16.6735897064209
    6. '```' → logprob: -17.5485897064209
    7. '[val' → logprob: -18.5485897064209
    8. '	v' → logprob: -18.5485897064209
    9. '(v' → logprob: -19.0485897064209
    10. ' [' → logprob: -19.5485897064209

Token 378: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.005592898931354284
    2. '][' → logprob: -5.2555928230285645
    3. '[v' → logprob: -8.380593299865723
    4. '[u' → logprob: -10.130593299865723
    5. '[new' → logprob: -10.880593299865723
    6. '[state' → logprob: -10.880593299865723
    7. ' [' → logprob: -11.505593299865723
    8. '   ' → logprob: -11.880593299865723
    9. ')[' → logprob: -11.880593299865723
    10. '[val' → logprob: -12.880593299865723

Token 379: 'used' (ID: 4943)
  Prédit: 'used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -1.8624639324116288e-06
    2. ' used' → logprob: -13.250001907348633
    3. '.used' → logprob: -18.000001907348633
    4. '_used' → logprob: -18.875001907348633
    5. '
' → logprob: -19.250001907348633
    6. '   ' → logprob: -20.125001907348633
    7. '-used' → logprob: -20.250001907348633
    8. 'Used' → logprob: -22.000001907348633
    9. ' ' → logprob: -22.375001907348633
    10. '
' → logprob: -23.125001907348633

Token 380: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006449966691434383
    2. ']>' → logprob: -5.506450176239014
    3. '>' → logprob: -6.631450176239014
    4. ' >' → logprob: -7.256450176239014
    5. ' ]' → logprob: -8.006449699401855
    6. '[' → logprob: -11.631449699401855
    7. '>]' → logprob: -13.881449699401855
    8. '   ' → logprob: -14.756449699401855
    9. '][' → logprob: -15.131449699401855
    10. '']' → logprob: -15.381449699401855

Token 381: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.06196846812963486
    2. ' >' → logprob: -2.8119685649871826
    3. '">' → logprob: -14.811968803405762
    4. ' ' → logprob: -16.061967849731445
    5. ' ' → logprob: -16.936967849731445
    6. '   ' → logprob: -17.061967849731445
    7. '&gt' → logprob: -17.561967849731445
    8. '[' → logprob: -17.686967849731445
    9. '＞' → logprob: -17.686967849731445
    10. '>`' → logprob: -17.811967849731445

Token 382: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.20141343772411346
    2. ' new' → logprob: -1.7014133930206299
    3. '	new' → logprob: -15.82641315460205
    4. '_new' → logprob: -17.951414108276367
    5. '[new' → logprob: -18.826414108276367
    6. '新' → logprob: -19.201414108276367
    7. '(new' → logprob: -19.451414108276367
    8. '   ' → logprob: -19.576414108276367
    9. ')new' → logprob: -19.576414108276367
    10. 'New' → logprob: -19.951414108276367

Token 383: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.000488811288960278
    2. 'cost' → logprob: -7.625488758087158
    3. 'new' → logprob: -15.375489234924316
    4. ' cost' → logprob: -15.500489234924316
    5. 'Cost' → logprob: -15.500489234924316
    6. '_COST' → logprob: -16.87548828125
    7. '_c' → logprob: -17.12548828125
    8. 'ost' → logprob: -17.62548828125
    9. '-cost' → logprob: -17.87548828125
    10. '_new' → logprob: -18.62548828125

Token 384: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.023342261090874672
    2. ':
' → logprob: -3.7733423709869385
    3. '):' → logprob: -10.52334213256836
    4. ' :' → logprob: -10.89834213256836
    5. '):
' → logprob: -11.27334213256836
    6. ' :
' → logprob: -11.27334213256836
    7. '           ' → logprob: -11.77334213256836
    8. ':

' → logprob: -12.64834213256836
    9. ':
' → logprob: -12.64834213256836
    10. '               ' → logprob: -12.64834213256836

Token 385: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.016068505123257637
    2. '           ' → logprob: -4.266068458557129
    3. '```' → logprob: -7.891068458557129
    4. '                   ' → logprob: -8.391068458557129
    5. '                
' → logprob: -8.516068458557129
    6. '            
' → logprob: -9.141068458557129
    7. '                ' → logprob: -9.141068458557129
    8. '            ' → logprob: -9.266068458557129
    9. '                       ' → logprob: -9.391068458557129
    10. '              ' → logprob: -9.391068458557129

Token 386: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.018451927229762077
    2. 'dist' (adapté à ' dist') → logprob: -4.018451690673828
    3. '               ' → logprob: -8.143451690673828
    4. '	dist' → logprob: -11.893451690673828
    5. '                   ' → logprob: -13.018451690673828
    6. '```' → logprob: -14.018451690673828
    7. '_dist' → logprob: -14.268451690673828
    8. 'Dist' → logprob: -15.518451690673828
    9. '(dist' → logprob: -15.768451690673828
    10. '.dist' → logprob: -15.893451690673828

Token 387: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -3.128163257315464e-07
    2. '[u' → logprob: -15.875
    3. '[' → logprob: -16.625
    4. '[val' → logprob: -17.0
    5. 'v' → logprob: -17.125
    6. ')[' → logprob: -17.5
    7. '```' → logprob: -18.625
    8. '[var' → logprob: -18.875
    9. '][' → logprob: -19.5
    10. '<v' → logprob: -19.625

Token 388: '][' (ID: 2696)
  Prédit: '[v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.10025627166032791
    2. '][' → logprob: -2.3502562046051025
    3. '[' → logprob: -10.725255966186523
    4. ')[' → logprob: -11.600255966186523
    5. '[u' → logprob: -11.850255966186523
    6. 'v' → logprob: -12.725255966186523
    7. ']' → logprob: -13.475255966186523
    8. '	v' → logprob: -14.225255966186523
    9. ' ][' → logprob: -14.225255966186523
    10. '}[' → logprob: -14.225255966186523

Token 389: 'used' (ID: 4943)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.016115307807922363
    2. 'used' → logprob: -4.141115188598633
    3. '[v' → logprob: -10.266115188598633
    4. ' v' → logprob: -10.891115188598633
    5. 'new' → logprob: -10.891115188598633
    6. 'u' → logprob: -13.266115188598633
    7. '```' → logprob: -13.391115188598633
    8. ' used' → logprob: -13.641115188598633
    9. '   ' → logprob: -14.016115188598633
    10. '[' → logprob: -14.016115188598633

Token 390: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.027992991730570793
    2. ']=' → logprob: -4.152993202209473
    3. '=' → logprob: -5.152993202209473
    4. ' =' → logprob: -5.277993202209473
    5. ' ]' → logprob: -7.027993202209473
    6. '               ' → logprob: -9.777993202209473
    7. ')' → logprob: -11.277993202209473
    8. '                   ' → logprob: -11.527993202209473
    9. '           ' → logprob: -11.652993202209473
    10. '[' → logprob: -11.777993202209473

Token 391: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1002068892121315
    2. ' =' → logprob: -2.3502068519592285
    3. '[' → logprob: -15.600207328796387
    4. '＝' → logprob: -17.85020637512207
    5. '.=' → logprob: -17.85020637512207
    6. '=new' → logprob: -18.72520637512207
    7. '=

' → logprob: -18.85020637512207
    8. '>' → logprob: -19.10020637512207
    9. '=
' → logprob: -19.22520637512207
    10. ')' → logprob: -19.47520637512207

Token 392: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.3132617771625519
    2. ' new' → logprob: -1.3132617473602295
    3. '	new' → logprob: -17.563261032104492
    4. '_new' → logprob: -17.813261032104492
    5. ' ' → logprob: -18.563261032104492
    6. 'n' → logprob: -18.563261032104492
    7. 'New' → logprob: -19.563261032104492
    8. '```' → logprob: -19.938261032104492
    9. '
' → logprob: -20.188261032104492
    10. '   ' → logprob: -20.313261032104492

Token 393: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -1.1875571544806007e-05
    2. 'cost' → logprob: -11.375011444091797
    3. 'Cost' → logprob: -16.125011444091797
    4. '_c' → logprob: -16.375011444091797
    5. '_COST' → logprob: -17.500011444091797
    6. '_new' → logprob: -17.875011444091797
    7. '_code' → logprob: -18.000011444091797
    8. ' cost' → logprob: -18.375011444091797
    9. 'new' → logprob: -18.500011444091797
    10. '_cos' → logprob: -18.875011444091797

Token 394: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005828189896419644
    2. 'heap' → logprob: -7.875582695007324
    3. '                
' → logprob: -9.625582695007324
    4. '(heap' → logprob: -10.250582695007324
    5. '```' → logprob: -10.750582695007324
    6. '                ' → logprob: -10.875582695007324
    7. ' heap' → logprob: -11.250582695007324
    8. '                   ' → logprob: -11.375582695007324
    9. '              ' → logprob: -11.625582695007324
    10. '           ' → logprob: -11.750582695007324

Token 395: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0018831811612471938
    2. 'heap' → logprob: -7.126883029937744
    3. '(heap' → logprob: -7.876883029937744
    4. '```' → logprob: -8.001883506774902
    5. '                
' → logprob: -8.626883506774902
    6. ' heap' → logprob: -10.251883506774902
    7. '                   ' → logprob: -10.376883506774902
    8. '                ' → logprob: -10.376883506774902
    9. '              ' → logprob: -10.751883506774902
    10. '                       ' → logprob: -11.001883506774902

Token 396: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -1.676292231422849e-05
    2. ' heap' → logprob: -11.000017166137695
    3. 'he' → logprob: -18.000017166137695
    4. '(heap' → logprob: -19.500017166137695
    5. 'heat' → logprob: -20.500017166137695
    6. '.heap' → logprob: -21.625017166137695
    7. '_heap' → logprob: -22.125017166137695
    8. '```' → logprob: -23.000017166137695
    9. '               ' → logprob: -23.250017166137695
    10. '   ' → logprob: -23.250017166137695

Token 397: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.00011188744247192517
    2. 'p' → logprob: -9.12511157989502
    3. '.he' → logprob: -14.25011157989502
    4. 'h' → logprob: -14.37511157989502
    5. 'app' → logprob: -14.62511157989502
    6. '[' → logprob: -14.87511157989502
    7. 'ush' → logprob: -15.12511157989502
    8. 'u' → logprob: -15.87511157989502
    9. 'he' → logprob: -16.250112533569336
    10. 'hq' → logprob: -16.375112533569336

Token 398: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.16301119327545166
    2. 'ush' → logprob: -1.9130111932754517
    3. 'he' → logprob: -6.288011074066162
    4. 'q' → logprob: -7.288011074066162
    5. 'app' → logprob: -8.91301155090332
    6. '.heap' → logprob: -10.28801155090332
    7. 'heap' → logprob: -10.78801155090332
    8. 'p' → logprob: -11.28801155090332
    9. '```' → logprob: -11.78801155090332
    10. '.' → logprob: -11.91301155090332

Token 399: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.001095330691896379
    2. 'ap' → logprob: -7.126095294952393
    3. 'pp' → logprob: -8.25109577178955
    4. 'p' → logprob: -11.37609577178955
    5. 'q' → logprob: -11.37609577178955
    6. 'e' → logprob: -13.00109577178955
    7. 'push' → logprob: -13.25109577178955
    8. '[' → logprob: -14.25109577178955
    9. 'qp' → logprob: -14.37609577178955
    10. 'aph' → logprob: -15.37609577178955

Token 400: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -1.4021237802808173e-05
    2. 'q' → logprob: -12.000014305114746
    3. 'sh' → logprob: -13.000014305114746
    4. 'op' → logprob: -13.500014305114746
    5. 'u' → logprob: -13.875014305114746
    6. 'push' → logprob: -13.875014305114746
    7. 'p' → logprob: -14.250014305114746
    8. 'app' → logprob: -14.250014305114746
    9. '```' → logprob: -15.500014305114746
    10. '   ' → logprob: -15.625014305114746

Token 401: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -6.2729995988775045e-06
    2. '(' → logprob: -12.000006675720215
    3. '(
' → logprob: -17.2500057220459
    4. ' (' → logprob: -18.5000057220459
    5. '(q' → logprob: -18.6250057220459
    6. 'h' → logprob: -19.8750057220459
    7. '(H' → logprob: -20.6250057220459
    8. '```' → logprob: -21.5000057220459
    9. '(hr' → logprob: -21.8750057220459
    10. '(s' → logprob: -22.0000057220459

Token 402: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0001596771035110578
    2. '(h' → logprob: -8.75015926361084
    3. 'qh' → logprob: -14.50015926361084
    4. '(q' → logprob: -15.12515926361084
    5. 'h' → logprob: -15.62515926361084
    6. 'hq' → logprob: -16.125160217285156
    7. '```' → logprob: -17.125160217285156
    8. ' (' → logprob: -17.500160217285156
    9. 'c' → logprob: -17.625160217285156
    10. 'qs' → logprob: -18.000160217285156

Token 403: ',' (ID: 11)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.00023917861108202487
    2. ',' → logprob: -8.875239372253418
    3. ',h' → logprob: -9.375239372253418
    4. ' (' → logprob: -11.875239372253418
    5. ')' → logprob: -13.000239372253418
    6. ',(' → logprob: -13.500239372253418
    7. ')(' → logprob: -13.625239372253418
    8. '(q' → logprob: -14.125239372253418
    9. 'h' → logprob: -14.500239372253418
    10. '/h' → logprob: -14.875239372253418

Token 404: ' (' (ID: 350)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.011259548366069794
    2. 'hq' → logprob: -4.51125955581665
    3. ' (' → logprob: -8.511259078979492
    4. ' h' → logprob: -11.511259078979492
    5. 'h' → logprob: -15.136259078979492
    6. '(' → logprob: -16.636259078979492
    7. '	h' → logprob: -17.261259078979492
    8. ' ' → logprob: -17.261259078979492
    9. '(
' → logprob: -17.636259078979492
    10. '[h' → logprob: -18.136259078979492

Token 405: 'new' (ID: 1389)
  Prédit: 'new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -1.700132997939363e-05
    2. ' new' → logprob: -11.000017166137695
    3. '(new' → logprob: -15.625017166137695
    4. '   ' → logprob: -17.750017166137695
    5. '_new' → logprob: -17.750017166137695
    6. '	new' → logprob: -17.875017166137695
    7. 'New' → logprob: -18.750017166137695
    8. ')new' → logprob: -19.250017166137695
    9. '[new' → logprob: -19.500017166137695
    10. '```' → logprob: -19.750017166137695

Token 406: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -6.027225754223764e-05
    2. 'v' → logprob: -11.375060081481934
    3. 'cost' → logprob: -11.500060081481934
    4. ',' → logprob: -12.000060081481934
    5. '_' → logprob: -12.125060081481934
    6. ',v' → logprob: -12.375060081481934
    7. '_COST' → logprob: -12.375060081481934
    8. '_new' → logprob: -12.625060081481934
    9. '_,' → logprob: -12.750060081481934
    10. 'new' → logprob: -12.750060081481934

Token 407: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.037835580878891e-05
    2. ',h' → logprob: -10.00005054473877
    3. ',v' → logprob: -12.87505054473877
    4. ' ,' → logprob: -13.12505054473877
    5. ',
' → logprob: -15.87505054473877
    6. ')' → logprob: -16.750049591064453
    7. '(h' → logprob: -17.250049591064453
    8. '‌,' → logprob: -17.750049591064453
    9. '),' → logprob: -17.875049591064453
    10. '<|end|>' → logprob: -18.250049591064453

Token 408: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0015023599844425917
    2. ' v' → logprob: -6.501502513885498
    3. '	v' → logprob: -17.751502990722656
    4. 'vq' → logprob: -17.751502990722656
    5. ')v' → logprob: -18.251502990722656
    6. '(v' → logprob: -20.376502990722656
    7. '[v' → logprob: -21.126502990722656
    8. '   ' → logprob: -21.501502990722656
    9. '```' → logprob: -21.876502990722656
    10. '' → logprob: -22.626502990722656

Token 409: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.8624639324116288e-06
    2. ' ,' → logprob: -13.875001907348633
    3. '`,' → logprob: -15.500001907348633
    4. '[' → logprob: -16.125001907348633
    5. ',
' → logprob: -16.375001907348633
    6. '‌,' → logprob: -16.500001907348633
    7. ')' → logprob: -16.625001907348633
    8. ',v' → logprob: -16.625001907348633
    9. '),' → logprob: -17.000001907348633
    10. '```' → logprob: -17.625001907348633

Token 410: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.0007100477814674377
    2. ' used' → logprob: -7.2507100105285645
    3. '   ' → logprob: -18.125709533691406
    4. 'v' → logprob: -18.250709533691406
    5. '.used' → logprob: -18.750709533691406
    6. 'u' → logprob: -18.875709533691406
    7. '_used' → logprob: -19.250709533691406
    8. 'us' → logprob: -19.625709533691406
    9. ' ' → logprob: -19.750709533691406
    10. '-used' → logprob: -20.250709533691406

Token 411: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -4.739826181321405e-05
    2. ')' → logprob: -10.12504768371582
    3. '))
' → logprob: -11.87504768371582
    4. ' ))' → logprob: -15.12504768371582
    5. ')))' → logprob: -16.87504768371582
    6. '))
' → logprob: -18.75004768371582
    7. '))

' → logprob: -19.00004768371582
    8. '));' → logprob: -19.75004768371582
    9. '),' → logprob: -20.12504768371582
    10. '   ' → logprob: -20.12504768371582


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 409
Tokens correctement prédits (1ère position, stricte): 195
Tokens correctement prédits (1ère position, avec adaptation): 216
Tokens correctement prédits (top 10): 359
Précision stricte (1ère position): 47.68%
Précision adaptée (1ère position): 52.81%
Précision (top 10): 87.78%
================================================================================
