================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:17:22
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

def cross(o, a, b):
    return (a[0]-o[0])*(b[1]-o[1]) - (a[1]-o[1])*(b[0]-o[0])

def convex_hull(points):
    points = sorted(points)
    lower = []
    for p in points:
        while len(lower) >= 2 and cross(lower[-2], lower[-1], p) < 0:
            lower.pop()
        lower.append(p)
    upper = []
    for p in reversed(points):
        while len(upper) >= 2 and cross(upper[-2], upper[-1], p) < 0:
            upper.pop()
        upper.append(p)
    hull = lower[:-1] + upper[:-1]
    return hull

def main():
    input_lines = sys.stdin.read().strip().split('\n')
    idx = 0
    while True:
        if idx >= len(input_lines):
            break
        n_line = input_lines[idx].strip()
        idx += 1
        if not n_line:
            continue
        n = int(n_line)
        if n == 0:
            break
        points = []
        for _ in range(n):
            line = input_lines[idx].strip()
            idx += 1
            x_str, y_str = line.split(',')
            x = float(x_str)
            y = float(y_str)
            points.append((x,y))
        hull = convex_hull(points)
        result = n - len(hull)
        print(result)

if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.044441498816013336
    2. '\n' → logprob: -3.9194414615631104
    3. 'import' → logprob: -4.5444416999816895
    4. '<|end|>' → logprob: -5.0444416999816895
    5. '\' → logprob: -6.4194416999816895
    6. 'newline' → logprob: -6.7944416999816895
    7. '<|end|>' → logprob: -7.2944416999816895
    8. '' → logprob: -7.6694416999816895
    9. '[' → logprob: -7.6694416999816895
    10. ',' → logprob: -7.9194416999816895

Token 4: ' cross' (ID: 8088)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.021233972162008286
    2. ' main' → logprob: -5.646234035491943
    3. ' ' → logprob: -5.771234035491943
    4. ' space' → logprob: -6.021234035491943
    5. ' process' → logprob: -6.396234035491943
    6. ' sys' → logprob: -6.896234035491943
    7. '  ' → logprob: -7.021234035491943
    8. '_' → logprob: -7.271234035491943
    9. '<|end|>' → logprob: -7.396234035491943
    10. ' a' → logprob: -7.521234035491943

Token 5: '(o' (ID: 18928)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.004396648146212101
    2. ' _' → logprob: -5.629396438598633
    3. '_import' → logprob: -8.129396438598633
    4. '-' → logprob: -8.879396438598633
    5. '_val' → logprob: -9.879396438598633
    6. ' -' → logprob: -10.004396438598633
    7. '_validate' → logprob: -10.004396438598633
    8. '_entropy' → logprob: -10.129396438598633
    9. '_c' → logprob: -10.879396438598633
    10. '_ing' → logprob: -11.129396438598633

Token 6: ',' (ID: 11)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.35737770795822144
    2. ',' → logprob: -1.4823777675628662
    3. ',r' → logprob: -2.982377767562866
    4. 'm' → logprob: -4.982377529144287
    5. ',p' → logprob: -5.107377529144287
    6. ' ,' → logprob: -5.232377529144287
    7. ',m' → logprob: -6.607377529144287
    8. 'rd' → logprob: -7.107377529144287
    9. 'p' → logprob: -7.232377529144287
    10. ',b' → logprob: -7.857377529144287

Token 7: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07024329155683517
    2. ' a' → logprob: -2.6952433586120605
    3. 'p' → logprob: -9.070242881774902
    4. 'b' → logprob: -9.320242881774902
    5. ' p' → logprob: -10.195242881774902
    6. 'f' → logprob: -10.820242881774902
    7. 'k' → logprob: -11.070242881774902
    8. ' b' → logprob: -11.945242881774902
    9. '	a' → logprob: -12.070242881774902
    10. 'c' → logprob: -12.195242881774902

Token 8: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016144849359989166
    2. ' ,' → logprob: -6.501614570617676
    3. ',b' → logprob: -9.126614570617676
    4. 'b' → logprob: -12.876614570617676
    5. ',p' → logprob: -15.376614570617676
    6. ',c' → logprob: -15.501614570617676
    7. ' b' → logprob: -15.751614570617676
    8. ',r' → logprob: -16.62661361694336
    9. 'r' → logprob: -17.00161361694336
    10. 'p' → logprob: -17.25161361694336

Token 9: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.20142066478729248
    2. ' b' → logprob: -1.7014206647872925
    3. ' ' → logprob: -11.951420783996582
    4. 'd' → logprob: -15.326420783996582
    5. '	b' → logprob: -16.201419830322266
    6. '  ' → logprob: -16.451419830322266
    7. '```' → logprob: -16.701419830322266
    8. 'p' → logprob: -16.826419830322266
    9. '_b' → logprob: -16.826419830322266
    10. ' ' → logprob: -16.951419830322266

Token 10: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006433341186493635
    2. ')' → logprob: -7.500643253326416
    3. '):
' → logprob: -9.375643730163574
    4. ':' → logprob: -12.750643730163574
    5. ' ):' → logprob: -14.375643730163574
    6. ',' → logprob: -14.500643730163574
    7. '):
' → logprob: -14.750643730163574
    8. '):

' → logprob: -15.000643730163574
    9. ''):' → logprob: -15.125643730163574
    10. '}:' → logprob: -15.875643730163574

Token 11: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0068471431732178
    2. '   ' → logprob: -1.1318471431732178
    3. '):' → logprob: -1.7568471431732178
    4. '):
' → logprob: -2.1318471431732178
    5. ':
' → logprob: -4.006847381591797
    6. ':return' → logprob: -7.381847381591797
    7. '```' → logprob: -7.756847381591797
    8. ' ' → logprob: -7.756847381591797
    9. '':' → logprob: -8.006847381591797
    10. '`:' → logprob: -8.756847381591797

Token 12: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15795019268989563
    2. ' return' → logprob: -2.7829501628875732
    3. ' ' → logprob: -3.2829501628875732
    4. 'return' (adapté à ' return') → logprob: -4.032950401306152
    5. ':' → logprob: -4.157950401306152
    6. '    ' → logprob: -5.657950401306152
    7. '"' → logprob: -6.282950401306152
    8. '  ' → logprob: -6.407950401306152
    9. ':return' → logprob: -6.657950401306152
    10. ''' → logprob: -6.782950401306152

Token 13: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.006868940312415361
    2. '(a' → logprob: -5.006868839263916
    3. '(o' → logprob: -8.881869316101074
    4. ' ' → logprob: -11.381869316101074
    5. '(' → logprob: -13.506869316101074
    6. '   ' → logprob: -14.256869316101074
    7. '(abs' → logprob: -14.381869316101074
    8. '  ' → logprob: -15.381869316101074
    9. '(ax' → logprob: -15.881869316101074
    10. '(x' → logprob: -16.006868362426758

Token 14: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.8193366486229934e-05
    2. '(a' → logprob: -11.000018119812012
    3. ' a' → logprob: -13.500018119812012
    4. '   ' → logprob: -17.375019073486328
    5. '	a' → logprob: -17.625019073486328
    6. '  ' → logprob: -20.375019073486328
    7. ')a' → logprob: -20.500019073486328
    8. ' (' → logprob: -20.625019073486328
    9. ' ' → logprob: -21.125019073486328
    10. 'x' → logprob: -21.250019073486328

Token 15: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03433636203408241
    2. '.x' → logprob: -3.5343363285064697
    3. '.' → logprob: -5.409336566925049
    4. 'x' → logprob: -9.53433609008789
    5. ' ' → logprob: -11.28433609008789
    6. ' .' → logprob: -12.40933609008789
    7. '-' → logprob: -12.90933609008789
    8. ' [' → logprob: -13.15933609008789
    9. '.y' → logprob: -13.15933609008789
    10. '[x' → logprob: -13.28433609008789

Token 16: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '
' → logprob: -18.625
    4. '1' → logprob: -18.875
    5. 'x' → logprob: -19.0
    6. '   ' → logprob: -19.375
    7. ']' → logprob: -19.375
    8. '[' → logprob: -19.625
    9. '```' → logprob: -19.75
    10. '][' → logprob: -20.625

Token 17: ']-' (ID: 27107)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5240334868431091
    2. ' -' → logprob: -0.8990334868431091
    3. '[' → logprob: -7.649033546447754
    4. ' ' → logprob: -7.899033546447754
    5. ' ' → logprob: -10.899033546447754
    6. ')' → logprob: -11.149033546447754
    7. '   ' → logprob: -11.899033546447754
    8. '  ' → logprob: -12.774033546447754
    9. '```' → logprob: -12.774033546447754
    10. '	' → logprob: -12.899033546447754

Token 18: 'o' (ID: 78)
  Prédit: 'o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -7.672236824873835e-05
    2. ' o' → logprob: -9.500076293945312
    3. '	o' → logprob: -13.250076293945312
    4. '.o' → logprob: -17.875076293945312
    5. ' ' → logprob: -18.750076293945312
    6. ''o' → logprob: -18.750076293945312
    7. ',o' → logprob: -19.000076293945312
    8. ')o' → logprob: -19.000076293945312
    9. '[o' → logprob: -19.375076293945312
    10. '{o' → logprob: -19.500076293945312

Token 19: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.033647771924734116
    2. '0' → logprob: -3.4086477756500244
    3. '][' → logprob: -14.158647537231445
    4. ' ' → logprob: -14.283647537231445
    5. ' [' → logprob: -15.033647537231445
    6. '```' → logprob: -16.033647537231445
    7. '\[' → logprob: -16.658647537231445
    8. 'x' → logprob: -17.033647537231445
    9. '[
' → logprob: -17.908647537231445
    10. '   ' → logprob: -18.283647537231445

Token 20: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.796184723294573e-06
    2. ' ' → logprob: -12.125005722045898
    3. '۰' → logprob: -16.3125057220459
    4. '```' → logprob: -16.3125057220459
    5. '[' → logprob: -17.1250057220459
    6. '   ' → logprob: -17.3750057220459
    7. '০' → logprob: -17.3750057220459
    8. '
' → logprob: -17.9375057220459
    9. '1' → logprob: -18.0625057220459
    10. '０' → logprob: -18.1875057220459

Token 21: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004865007475018501
    2. ')*(' → logprob: -5.3798651695251465
    3. ')*' → logprob: -8.379864692687988
    4. ' )' → logprob: -11.504864692687988
    5. ')**' → logprob: -12.754864692687988
    6. ')(' → logprob: -14.504864692687988
    7. '   ' → logprob: -14.504864692687988
    8. '')' → logprob: -15.254864692687988
    9. '*)' → logprob: -15.504864692687988
    10. '),' → logprob: -15.629864692687988

Token 22: '*(' (ID: 14793)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.143297478556633
    2. '*(' → logprob: -2.2682974338531494
    3. '*' → logprob: -3.5182974338531494
    4. ' *(' → logprob: -9.01829719543457
    5. ')*(' → logprob: -9.14329719543457
    6. ')' → logprob: -9.14329719543457
    7. '(' → logprob: -11.76829719543457
    8. ' ' → logprob: -12.14329719543457
    9. '```' → logprob: -12.76829719543457
    10. ' ' → logprob: -13.01829719543457

Token 23: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.0325924449716695e-05
    2. '(b' → logprob: -12.12501049041748
    3. ' b' → logprob: -12.25001049041748
    4. '	b' → logprob: -16.625009536743164
    5. '   ' → logprob: -17.750009536743164
    6. 'a' → logprob: -19.625009536743164
    7. ')b' → logprob: -20.000009536743164
    8. '(' → logprob: -22.000009536743164
    9. ' (' → logprob: -22.125009536743164
    10. '  ' → logprob: -22.500009536743164

Token 24: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.061054359131958e-06
    2. '1' → logprob: -12.875007629394531
    3. ' [' → logprob: -13.375007629394531
    4. '][' → logprob: -13.875007629394531
    5. 'y' → logprob: -14.125007629394531
    6. '0' → logprob: -14.250007629394531
    7. ''[' → logprob: -14.375007629394531
    8. ',' → logprob: -16.00000762939453
    9. '[
' → logprob: -16.00000762939453
    10. '```' → logprob: -16.00000762939453

Token 25: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.6656825866666622e-05
    2. '0' → logprob: -10.62502670288086
    3. '[' → logprob: -13.37502670288086
    4. ' ' → logprob: -14.62502670288086
    5. '
' → logprob: -16.50002670288086
    6. '```' → logprob: -17.00002670288086
    7. '

' → logprob: -17.31252670288086
    8. '   ' → logprob: -17.68752670288086
    9. '-' → logprob: -18.50002670288086
    10. '' → logprob: -18.62502670288086

Token 26: ']-' (ID: 27107)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.14321939647197723
    2. ' -' → logprob: -2.018219470977783
    3. '-o' → logprob: -8.143218994140625
    4. ']-' → logprob: -9.643218994140625
    5. ')-' → logprob: -10.018218994140625
    6. '[' → logprob: -10.518218994140625
    7. '-a' → logprob: -10.768218994140625
    8. '()-' → logprob: -11.268218994140625
    9. ')-(' → logprob: -11.393218994140625
    10. '-)' → logprob: -11.893218994140625

Token 27: 'o' (ID: 78)
  Prédit: 'o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -7.672236824873835e-05
    2. '	o' → logprob: -10.375076293945312
    3. ' o' → logprob: -10.750076293945312
    4. '<|end|>' → logprob: -11.000076293945312
    5. '<|end|>' → logprob: -12.875076293945312
    6. '{o' → logprob: -13.625076293945312
    7. 'a' → logprob: -13.750076293945312
    8. ''o' → logprob: -14.500076293945312
    9. ')o' → logprob: -14.625076293945312
    10. ' ' → logprob: -14.875076293945312

Token 28: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.661626634420827e-05
    2. '0' → logprob: -9.375086784362793
    3. '1' → logprob: -13.500086784362793
    4. '][' → logprob: -15.625086784362793
    5. ' [' → logprob: -16.375085830688477
    6. ')' → logprob: -17.500085830688477
    7. '```' → logprob: -17.500085830688477
    8. ']' → logprob: -17.625085830688477
    9. '[
' → logprob: -17.875085830688477
    10. ')[' → logprob: -18.625085830688477

Token 29: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018899753922596574
    2. '0' → logprob: -8.625188827514648
    3. '[' → logprob: -11.625188827514648
    4. ']' → logprob: -15.625188827514648
    5. ' ' → logprob: -16.37518882751465
    6. '```' → logprob: -17.00018882751465
    7. '	' → logprob: -17.25018882751465
    8. '   ' → logprob: -17.37518882751465
    9. '' → logprob: -17.81268882751465
    10. '3' → logprob: -18.25018882751465

Token 30: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000727921025827527
    2. ')-(' → logprob: -7.750728130340576
    3. ' )' → logprob: -8.375727653503418
    4. ')-' → logprob: -9.750727653503418
    5. '')' → logprob: -13.250727653503418
    6. '}' → logprob: -13.750727653503418
    7. '-' → logprob: -13.750727653503418
    8. '-)' → logprob: -14.125727653503418
    9. ')}' → logprob: -14.625727653503418
    10. ')
' → logprob: -14.625727653503418

Token 31: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.474481999874115
    2. ' -' → logprob: -0.974481999874115
    3. '-(' → logprob: -8.599481582641602
    4. ')' → logprob: -9.224481582641602
    5. ' ' → logprob: -10.349481582641602
    6. ')-(' → logprob: -11.099481582641602
    7. ' -(' → logprob: -11.099481582641602
    8. '(' → logprob: -11.349481582641602
    9. '-
' → logprob: -11.724481582641602
    10. '```' → logprob: -11.849481582641602

Token 32: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.01423238031566143
    2. '(a' → logprob: -4.264232158660889
    3. '(b' → logprob: -10.139232635498047
    4. '   ' → logprob: -10.889232635498047
    5. '(' → logprob: -11.889232635498047
    6. '(o' → logprob: -13.014232635498047
    7. ' ' → logprob: -14.014232635498047
    8. '  ' → logprob: -14.389232635498047
    9. '    ' → logprob: -16.389232635498047
    10. '(c' → logprob: -16.389232635498047

Token 33: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.005352705251425505
    2. '(a' → logprob: -5.25535249710083
    3. 'b' → logprob: -9.130352973937988
    4. ' a' → logprob: -11.755352973937988
    5. '(b' → logprob: -13.130352973937988
    6. 'o' → logprob: -14.880352973937988
    7. '	a' → logprob: -15.880352973937988
    8. ' (' → logprob: -15.880352973937988
    9. '   ' → logprob: -17.130352020263672
    10. ')a' → logprob: -17.130352020263672

Token 34: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9361264946837764e-07
    2. '<|end|>' → logprob: -17.25
    3. '[
' → logprob: -17.625
    4. '<|end|>' → logprob: -17.75
    5. ')[' → logprob: -18.625
    6. '1' → logprob: -18.75
    7. '['' → logprob: -18.75
    8. 'Answer' → logprob: -18.875
    9. ' [' → logprob: -19.125
    10. '```' → logprob: -19.125

Token 35: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07891743630170822
    2. '[' → logprob: -2.5789175033569336
    3. '0' → logprob: -10.703917503356934
    4. '```' → logprob: -13.453917503356934
    5. ']' → logprob: -13.828917503356934
    6. '<|end|>' → logprob: -15.078917503356934
    7. ')' → logprob: -15.203917503356934
    8. '][' → logprob: -15.203917503356934
    9. ' ' → logprob: -15.328917503356934
    10. '[
' → logprob: -15.328917503356934

Token 36: ']-' (ID: 27107)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1079779714345932
    2. ' -' → logprob: -2.732977867126465
    3. '[' → logprob: -3.857977867126465
    4. '<|end|>' → logprob: -4.232977867126465
    5. '-o' → logprob: -7.107977867126465
    6. '<|end|>' → logprob: -7.857977867126465
    7. '-user' → logprob: -9.982977867126465
    8. '-python' → logprob: -10.107977867126465
    9. ']-' → logprob: -10.482977867126465
    10. ')' → logprob: -10.857977867126465

Token 37: 'o' (ID: 78)
  Prédit: 'o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -1.2664456789934775e-06
    2. '<|end|>' → logprob: -13.875000953674316
    3. '	o' → logprob: -16.250001907348633
    4. ' o' → logprob: -16.625001907348633
    5. 'os' → logprob: -17.125001907348633
    6. '<|end|>' → logprob: -17.875001907348633
    7. '{o' → logprob: -18.500001907348633
    8. '0' → logprob: -18.875001907348633
    9. 'о' → logprob: -18.875001907348633
    10. ''o' → logprob: -19.125001907348633

Token 38: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.5048530030981055e-06
    2. '1' → logprob: -13.625001907348633
    3. '][' → logprob: -15.875001907348633
    4. ')[' → logprob: -16.750001907348633
    5. '0' → logprob: -17.875001907348633
    6. '[
' → logprob: -18.125001907348633
    7. ')' → logprob: -18.125001907348633
    8. ' [' → logprob: -18.500001907348633
    9. '```' → logprob: -18.625001907348633
    10. ']' → logprob: -19.125001907348633

Token 39: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.306760805164231e-05
    2. '[' → logprob: -11.62501335144043
    3. ' ' → logprob: -13.75001335144043
    4. '0' → logprob: -13.87501335144043
    5. '<|end|>' → logprob: -14.25001335144043
    6. '<|end|>' → logprob: -14.37501335144043
    7. ')' → logprob: -14.75001335144043
    8. ']' → logprob: -15.50001335144043
    9. '' → logprob: -16.87501335144043
    10. '```' → logprob: -17.00001335144043

Token 40: '])' (ID: 4636)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.13965632021427155
    2. '][' → logprob: -3.0146563053131104
    3. '0' → logprob: -3.1396563053131104
    4. '])' → logprob: -4.1396565437316895
    5. '])*' → logprob: -4.1396565437316895
    6. '1' → logprob: -6.0146565437316895
    7. ')' → logprob: -7.0146565437316895
    8. ')[' → logprob: -7.1396565437316895
    9. ']*' → logprob: -7.6396565437316895
    10. '])[' → logprob: -7.7646565437316895

Token 41: '*(' (ID: 14793)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.0015893694944679737
    2. '*(' → logprob: -6.876589298248291
    3. 'b' → logprob: -8.12658977508545
    4. '[b' → logprob: -9.37658977508545
    5. '(o' → logprob: -9.87658977508545
    6. '(' → logprob: -10.25158977508545
    7. '[' → logprob: -10.25158977508545
    8. '(a' → logprob: -10.75158977508545
    9. '*b' → logprob: -11.37658977508545
    10. ' (' → logprob: -11.62658977508545

Token 42: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -5.512236498361744e-07
    2. ' b' → logprob: -14.625000953674316
    3. ')b' → logprob: -17.75
    4. '(b' → logprob: -18.625
    5. '	b' → logprob: -19.25
    6. '[b' → logprob: -20.5
    7. '   ' → logprob: -21.375
    8. '<b' → logprob: -21.5
    9. '  ' → logprob: -21.625
    10. 'a' → logprob: -21.625

Token 43: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.190178904333152e-05
    2. '0' → logprob: -10.375031471252441
    3. '[
' → logprob: -15.250031471252441
    4. '][' → logprob: -16.125032424926758
    5. ')' → logprob: -17.250032424926758
    6. 'import' → logprob: -17.375032424926758
    7. ']' → logprob: -17.375032424926758
    8. ')[' → logprob: -17.500032424926758
    9. '<|end|>' → logprob: -17.875032424926758
    10. '```' → logprob: -18.000032424926758

Token 44: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. '[' → logprob: -13.500001907348633
    3. '1' → logprob: -16.750001907348633
    4. '۰' → logprob: -17.687501907348633
    5. '   ' → logprob: -17.750001907348633
    6. ' ' → logprob: -18.187501907348633
    7. '
' → logprob: -18.437501907348633
    8. '０' → logprob: -18.750001907348633
    9. '	' → logprob: -18.812501907348633
    10. '```' → logprob: -19.000001907348633

Token 45: ']-' (ID: 27107)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.6177356839179993
    2. '0' → logprob: -1.3677356243133545
    3. ']' → logprob: -2.1177356243133545
    4. '[' → logprob: -2.6177356243133545
    5. '-' → logprob: -4.742735862731934
    6. '][' → logprob: -5.992735862731934
    7. ']-' → logprob: -7.117735862731934
    8. ' ' → logprob: -8.367735862731934
    9. '])-' → logprob: -8.992735862731934
    10. '])[' → logprob: -9.117735862731934

Token 46: 'o' (ID: 78)
  Prédit: 'o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -1.9981420336989686e-05
    2. '0' → logprob: -11.375020027160645
    3. ' o' → logprob: -11.750020027160645
    4. '	o' → logprob: -14.625020027160645
    5. '[o' → logprob: -17.250019073486328
    6. '{o' → logprob: -17.375019073486328
    7. ')o' → logprob: -17.500019073486328
    8. ',o' → logprob: -17.750019073486328
    9. '_o' → logprob: -18.250019073486328
    10. '$o' → logprob: -18.500019073486328

Token 47: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.8206473871250637e-05
    2. '][' → logprob: -11.000028610229492
    3. '0' → logprob: -11.625028610229492
    4. ']' → logprob: -13.125028610229492
    5. '```' → logprob: -15.750028610229492
    6. '-' → logprob: -16.125028610229492
    7. '[
' → logprob: -16.375028610229492
    8. '])' → logprob: -16.750028610229492
    9. '1' → logprob: -17.000028610229492
    10. '   ' → logprob: -17.875028610229492

Token 48: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -16.0
    3. '   ' → logprob: -16.125
    4. '[' → logprob: -16.1875
    5. '
' → logprob: -16.875
    6. '```' → logprob: -17.1875
    7. '1' → logprob: -17.375
    8. '``' → logprob: -17.6875
    9. '  ' → logprob: -17.875
    10. '۰' → logprob: -18.0625

Token 49: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.030045285820961
    2. ')' → logprob: -3.5300452709198
    3. ']' → logprob: -9.155045509338379
    4. ')])' → logprob: -9.155045509338379
    5. ']))' → logprob: -10.030045509338379
    6. '))' → logprob: -11.280045509338379
    7. '])]' → logprob: -11.280045509338379
    8. ')]' → logprob: -11.780045509338379
    9. ' ])' → logprob: -13.280045509338379
    10. '})' → logprob: -13.405045509338379

Token 50: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.030637264251708984
    2. '
' → logprob: -3.905637264251709
    3. '```' → logprob: -5.155637264251709
    4. '

' → logprob: -5.780637264251709
    5. '\' → logprob: -7.280637264251709
    6. '\n' → logprob: -8.280637741088867
    7. 'd' → logprob: -9.530637741088867
    8. 'newline' → logprob: -9.655637741088867
    9. '#' → logprob: -11.280637741088867
    10. '``' → logprob: -11.405637741088867

Token 51: ' convex' (ID: 142423)
  Prédit: ' convex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' convex' → logprob: -0.005526034627109766
    2. ' monot' → logprob: -5.630526065826416
    3. 'conv' → logprob: -6.880526065826416
    4. ' conv' → logprob: -8.630525588989258
    5. ' main' → logprob: -8.880525588989258
    6. 'mon' → logprob: -9.380525588989258
    7. ' hull' → logprob: -9.505525588989258
    8. ' polygon' → logprob: -9.755525588989258
    9. ' mon' → logprob: -9.880525588989258
    10. ' solve' → logprob: -9.880525588989258

Token 52: '_h' (ID: 3434)
  Prédit: '_h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_h' → logprob: -1.0564331205387134e-05
    2. 'h' → logprob: -12.12501049041748
    3. '_' → logprob: -13.12501049041748
    4. '_polygon' → logprob: -13.62501049041748
    5. '_layer' → logprob: -15.00001049041748
    6. '_point' → logprob: -15.12501049041748
    7. '_hint' → logprob: -15.62501049041748
    8. '_wrap' → logprob: -15.87501049041748
    9. 'Hull' → logprob: -16.000011444091797
    10. '(h' → logprob: -16.250011444091797

Token 53: 'ull' (ID: 754)
  Prédit: 'ull'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ull' → logprob: -0.00021676832693628967
    2. 'ul' → logprob: -8.625216484069824
    3. '_' → logprob: -11.750216484069824
    4. 'u' → logprob: -12.125216484069824
    5. ' ull' → logprob: -12.250216484069824
    6. '```' → logprob: -12.625216484069824
    7. '(' → logprob: -13.125216484069824
    8. 'a' → logprob: -13.375216484069824
    9. 'ulls' → logprob: -13.625216484069824
    10. 'all' → logprob: -13.750216484069824

Token 54: '(points' (ID: 72131)
  Prédit: '(points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: -0.019199470058083534
    2. '(' → logprob: -4.019199371337891
    3. '(point' → logprob: -8.01919937133789
    4. ' (' → logprob: -8.89419937133789
    5. '(coords' → logprob: -8.89419937133789
    6. '(Point' → logprob: -9.26919937133789
    7. '(lst' → logprob: -9.39419937133789
    8. '(p' → logprob: -10.51919937133789
    9. '(vertices' → logprob: -10.51919937133789
    10. '(nums' → logprob: -10.64419937133789

Token 55: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00018125296628568321
    2. ')' → logprob: -9.375181198120117
    3. ':' → logprob: -9.375181198120117
    4. ']:' → logprob: -11.875181198120117
    5. ' ):' → logprob: -13.375181198120117
    6. '[]):' → logprob: -13.625181198120117
    7. '):
' → logprob: -13.750181198120117
    8. '}:' → logprob: -15.875181198120117
    9. ':)' → logprob: -15.875181198120117
    10. '   ' → logprob: -16.250181198120117

Token 56: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030830705538392067
    2. ' points' → logprob: -3.6558306217193604
    3. '	points' → logprob: -6.4058308601379395
    4. '(points' → logprob: -6.6558308601379395
    5. 'points' → logprob: -7.5308308601379395
    6. ':' → logprob: -7.5308308601379395
    7. '_points' → logprob: -8.655830383300781
    8. '    ' → logprob: -9.655830383300781
    9. ' sorted' → logprob: -9.655830383300781
    10. '    
' → logprob: -9.905830383300781

Token 57: ' points' (ID: 5571)
  Prédit: ' points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.026178598403930664
    2. '   ' → logprob: -3.7761785984039307
    3. 'points' (adapté à ' points') → logprob: -6.026178359985352
    4. ' if' → logprob: -8.401178359985352
    5. ' sorted' → logprob: -8.776178359985352
    6. '	points' → logprob: -10.026178359985352
    7. ' pts' → logprob: -10.151178359985352
    8. ' #' → logprob: -11.401178359985352
    9. '(points' → logprob: -11.401178359985352
    10. '#' → logprob: -12.276178359985352

Token 58: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3065646290779114
    2. '.sort' → logprob: -2.1815645694732666
    3. ' =' → logprob: -2.5565645694732666
    4. '.' → logprob: -2.6815645694732666
    5. '[:]' → logprob: -5.681564807891846
    6. 'sorted' → logprob: -7.431564807891846
    7. '.=' → logprob: -7.681564807891846
    8. '_sorted' → logprob: -7.806564807891846
    9. 'sort' → logprob: -9.431564331054688
    10. '.sorted' → logprob: -9.681564331054688

Token 59: ' sorted' (ID: 20099)
  Prédit: ' sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sorted' → logprob: -0.06197071075439453
    2. 'sorted' → logprob: -2.8119707107543945
    3. '   ' → logprob: -13.561970710754395
    4. ' ' → logprob: -14.436970710754395
    5. '(sorted' → logprob: -14.686970710754395
    6. ' list' → logprob: -14.811970710754395
    7. 's' → logprob: -15.186970710754395
    8. '.sorted' → logprob: -15.811970710754395
    9. ' ' → logprob: -16.311969757080078
    10. '[' → logprob: -17.686969757080078

Token 60: '(points' (ID: 72131)
  Prédit: '(points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: -1.4021237802808173e-05
    2. '(' → logprob: -11.500014305114746
    3. '(set' → logprob: -12.625014305114746
    4. 'points' → logprob: -15.000014305114746
    5. '(point' → logprob: -16.00001335144043
    6. ' points' → logprob: -17.12501335144043
    7. '	points' → logprob: -17.12501335144043
    8. '_points' → logprob: -17.62501335144043
    9. ' (' → logprob: -18.37501335144043
    10. '(list' → logprob: -18.87501335144043

Token 61: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011343709047650918
    2. ',key' → logprob: -9.625113487243652
    3. ' )' → logprob: -11.500113487243652
    4. '())' → logprob: -11.500113487243652
    5. ')set' → logprob: -11.500113487243652
    6. ')#' → logprob: -12.500113487243652
    7. '))' → logprob: -12.750113487243652
    8. ',' → logprob: -13.250113487243652
    9. ')
' → logprob: -13.375113487243652
    10. '()' → logprob: -13.625113487243652

Token 62: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.048233151435852
    2. ':' → logprob: -1.173233151435852
    3. '    
' → logprob: -1.798233151435852
    4. '<|end|>' → logprob: -2.7982330322265625
    5. '
' → logprob: -3.4232330322265625
    6. '#' → logprob: -4.5482330322265625
    7. '  
' → logprob: -4.5482330322265625
    8. '_' → logprob: -5.1732330322265625
    9. 'def' → logprob: -5.1732330322265625
    10. '	
' → logprob: -5.4232330322265625

Token 63: ' lower' (ID: 6931)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.06663738936185837
    2. '   ' → logprob: -3.6916372776031494
    3. 'lower' (adapté à ' lower') → logprob: -4.0666375160217285
    4. 'n' → logprob: -4.5666375160217285
    5. ' #' → logprob: -5.6916375160217285
    6. ' lower' → logprob: -6.0666375160217285
    7. ' n' → logprob: -6.4416375160217285
    8. '    
' → logprob: -6.4416375160217285
    9. ' if' → logprob: -7.6916375160217285
    10. ' ' → logprob: -7.6916375160217285

Token 64: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11307156831026077
    2. '=' → logprob: -2.4880716800689697
    3. '=[]' → logprob: -3.7380716800689697
    4. '[]' → logprob: -10.86307144165039
    5. '[:]' → logprob: -11.98807144165039
    6. '=[]
' → logprob: -12.23807144165039
    7. ' ' → logprob: -12.23807144165039
    8. '=[]
' → logprob: -12.98807144165039
    9. '_' → logprob: -13.48807144165039
    10. '.append' → logprob: -13.48807144165039

Token 65: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.2113979209971149e-05
    2. ' []' → logprob: -11.875012397766113
    3. '[]
' → logprob: -13.000012397766113
    4. '[' → logprob: -13.375012397766113
    5. '[]

' → logprob: -14.250012397766113
    6. '[]}' → logprob: -14.875012397766113
    7. '[]>' → logprob: -15.125012397766113
    8. '[]"' → logprob: -17.875011444091797
    9. '[])' → logprob: -18.000011444091797
    10. '=[]' → logprob: -18.250011444091797

Token 66: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13664236664772034
    2. ' for' → logprob: -2.2616424560546875
    3. '   ' → logprob: -3.7616424560546875
    4. '    
' → logprob: -9.011642456054688
    5. '	for' → logprob: -9.886642456054688
    6. '[]' → logprob: -10.886642456054688
    7. ' 
' → logprob: -11.136642456054688
    8. '[' → logprob: -11.386642456054688
    9. ' ' → logprob: -11.511642456054688
    10. ')' → logprob: -11.511642456054688

Token 67: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0002108118060277775
    2. ' for' → logprob: -8.500210762023926
    3. '   ' → logprob: -12.000210762023926
    4. '	for' → logprob: -13.625210762023926
    5. '    
' → logprob: -19.625211715698242
    6. '```' → logprob: -19.750211715698242
    7. '  ' → logprob: -20.250211715698242
    8. '       ' → logprob: -20.375211715698242
    9. ')' → logprob: -20.625211715698242
    10. ' ' → logprob: -20.625211715698242

Token 68: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.38693177700042725
    2. 'p' → logprob: -1.1369317770004272
    3. 'point' → logprob: -10.136931419372559
    4. ' point' → logprob: -10.886931419372559
    5. '   ' → logprob: -14.136931419372559
    6. 'pt' → logprob: -14.136931419372559
    7. '	p' → logprob: -15.011931419372559
    8. ' pt' → logprob: -15.386931419372559
    9. ' ' → logprob: -15.636931419372559
    10. '```' → logprob: -15.761931419372559

Token 69: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00744607113301754
    2. 'in' → logprob: -5.0074462890625
    3. ' ' → logprob: -7.6324462890625
    4. '  ' → logprob: -8.3824462890625
    5. '	in' → logprob: -12.1324462890625
    6. ' i' → logprob: -13.3824462890625
    7. '   ' → logprob: -13.3824462890625
    8. 'n' → logprob: -13.7574462890625
    9. ')' → logprob: -13.7574462890625
    10. ' ' → logprob: -14.2574462890625

Token 70: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.4747094213962555
    2. ' points' → logprob: -0.9747093915939331
    3. 'oints' → logprob: -7.474709510803223
    4. '(points' → logprob: -10.349709510803223
    5. '	points' → logprob: -10.599709510803223
    6. '.points' → logprob: -12.474709510803223
    7. '_points' → logprob: -12.974709510803223
    8. ' ' → logprob: -13.849709510803223
    9. 'p' → logprob: -14.974709510803223
    10. '   ' → logprob: -15.599709510803223

Token 71: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010192327899858356
    2. ':
' → logprob: -7.50101900100708
    3. '   ' → logprob: -7.87601900100708
    4. ' :' → logprob: -9.751019477844238
    5. '):' → logprob: -11.501019477844238
    6. ',' → logprob: -12.376019477844238
    7. '<|end|>' → logprob: -12.626019477844238
    8. '       ' → logprob: -13.376019477844238
    9. '    ' → logprob: -13.376019477844238
    10. ' ' → logprob: -13.751019477844238

Token 72: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05878026783466339
    2. '    ' → logprob: -3.8087801933288574
    3. '   ' → logprob: -3.9337801933288574
    4. ' if' → logprob: -4.683780193328857
    5. ' lower' → logprob: -6.308780193328857
    6. '        
' → logprob: -6.808780193328857
    7. '    
' → logprob: -7.183780193328857
    8. ' while' → logprob: -7.433780193328857
    9. 'lower' → logprob: -7.933780193328857
    10. ' 
' → logprob: -8.058780670166016

Token 73: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.0018236928153783083
    2. 'while' (adapté à ' while') → logprob: -6.376823902130127
    3. '       ' → logprob: -9.751823425292969
    4. '    ' → logprob: -10.751823425292969
    5. ' 
' → logprob: -11.501823425292969
    6. '   ' → logprob: -11.501823425292969
    7. '	while' → logprob: -12.126823425292969
    8. '        
' → logprob: -12.126823425292969
    9. ' ' → logprob: -12.376823425292969
    10. '        ' → logprob: -12.751823425292969

Token 74: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.20725825428962708
    2. ' lower' → logprob: -1.7072582244873047
    3. 'len' → logprob: -5.582258224487305
    4. 'lower' → logprob: -6.207258224487305
    5. '(len' → logprob: -10.832258224487305
    6. ' ' → logprob: -10.957258224487305
    7. '(lower' → logprob: -11.707258224487305
    8. '	len' → logprob: -13.832258224487305
    9. '<len' → logprob: -14.332258224487305
    10. '.lower' → logprob: -14.707258224487305

Token 75: '(lower' (ID: 146857)
  Prédit: '(lower'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lower' → logprob: -0.0002715873415581882
    2. '(' → logprob: -9.125271797180176
    3. 'lower' → logprob: -9.375271797180176
    4. ' lower' → logprob: -9.500271797180176
    5. ' (' → logprob: -13.250271797180176
    6. '(low' → logprob: -14.750271797180176
    7. '(l' → logprob: -15.375271797180176
    8. ' ' → logprob: -15.625271797180176
    9. '.lower' → logprob: -15.750271797180176
    10. '<|end|>' → logprob: -15.750271797180176

Token 76: ')' (ID: 8)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.5290151834487915
    2. '>' → logprob: -1.1540151834487915
    3. ' >=' → logprob: -2.654015064239502
    4. ' >' → logprob: -4.529015064239502
    5. ')>=' → logprob: -5.029015064239502
    6. 'and' → logprob: -5.154015064239502
    7. ' and' → logprob: -7.279015064239502
    8. ')' → logprob: -7.529015064239502
    9. ')>' → logprob: -8.27901554107666
    10. ']>=' → logprob: -8.27901554107666

Token 77: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.006854262202978134
    2. ' >=' → logprob: -5.006854057312012
    3. '>' → logprob: -9.506854057312012
    4. 'and' → logprob: -10.631854057312012
    5. ')>=' → logprob: -10.756854057312012
    6. '≥' → logprob: -11.756854057312012
    7. ']>=' → logprob: -12.006854057312012
    8. 'ge' → logprob: -13.006854057312012
    9. ' ' → logprob: -13.381854057312012
    10. ' ' → logprob: -14.881854057312012

Token 78: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004621661268174648
    2. ' ' → logprob: -5.379621505737305
    3. '  ' → logprob: -15.129621505737305
    4. '   ' → logprob: -15.379621505737305
    5. '```' → logprob: -15.379621505737305
    6. '

' → logprob: -15.504621505737305
    7. '۲' → logprob: -15.629621505737305
    8. '２' → logprob: -17.004621505737305
    9. ' ' → logprob: -17.317121505737305
    10. '٢' → logprob: -17.504621505737305

Token 79: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00038074489566497505
    2. ' ' → logprob: -7.875380516052246
    3. '```' → logprob: -15.750380516052246
    4. '

' → logprob: -16.375381469726562
    5. '۲' → logprob: -16.437881469726562
    6. '   ' → logprob: -16.562881469726562
    7. '  ' → logprob: -17.250381469726562
    8. '２' → logprob: -17.562881469726562
    9. '٢' → logprob: -17.625381469726562
    10. ')' → logprob: -17.812881469726562

Token 80: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.004629126749932766
    2. 'and' → logprob: -5.379629135131836
    3. '    ' → logprob: -12.129629135131836
    4. ' ' → logprob: -13.004629135131836
    5. '	and' → logprob: -14.754629135131836
    6. '   ' → logprob: -15.379629135131836
    7. '        ' → logprob: -15.379629135131836
    8. ' ' → logprob: -16.004629135131836
    9. ' и' → logprob: -16.879629135131836
    10. '  ' → logprob: -17.004629135131836

Token 81: ' cross' (ID: 8088)
  Prédit: ' cross'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cross' → logprob: -0.07889232039451599
    2. 'cross' → logprob: -2.578892230987549
    3. ' ' → logprob: -13.453892707824707
    4. '   ' → logprob: -14.828892707824707
    5. ' ' → logprob: -15.578892707824707
    6. 'c' → logprob: -15.578892707824707
    7. '	c' → logprob: -16.07889175415039
    8. '  ' → logprob: -16.82889175415039
    9. ' c' → logprob: -16.82889175415039
    10. '.cross' → logprob: -16.95389175415039

Token 82: '(lower' (ID: 146857)
  Prédit: '(lower'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lower' → logprob: -0.0019330393988639116
    2. '(' → logprob: -6.2519330978393555
    3. '(low' → logprob: -13.126933097839355
    4. 'lower' → logprob: -13.876933097839355
    5. ' lower' → logprob: -14.126933097839355
    6. '(
' → logprob: -15.251933097839355
    7. '(l' → logprob: -15.626933097839355
    8. '.lower' → logprob: -15.876933097839355
    9. '(len' → logprob: -16.62693214416504
    10. '(-' → logprob: -17.12693214416504

Token 83: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.0009980365866795182
    2. '-' → logprob: -7.375998020172119
    3. '(-' → logprob: -8.000998497009277
    4. ' -' → logprob: -11.250998497009277
    5. '   ' → logprob: -11.875998497009277
    6. '][-' → logprob: -12.000998497009277
    7. '```' → logprob: -13.125998497009277
    8. ' [-' → logprob: -13.250998497009277
    9. '[len' → logprob: -13.250998497009277
    10. ' ' → logprob: -13.750998497009277

Token 84: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -15.000000953674316
    3. '1' → logprob: -15.125000953674316
    4. '

' → logprob: -15.875000953674316
    5. '   ' → logprob: -16.000001907348633
    6. '```' → logprob: -16.500001907348633
    7. '-' → logprob: -17.312501907348633
    8. '２' → logprob: -17.437501907348633
    9. '' → logprob: -17.625001907348633
    10. '  ' → logprob: -17.812501907348633

Token 85: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0020437943749129772
    2. '],' → logprob: -6.252043724060059
    3. ' ,' → logprob: -9.627043724060059
    4. ']' → logprob: -10.252043724060059
    5. '‌,' → logprob: -12.752043724060059
    6. '},' → logprob: -13.627043724060059
    7. ',p' → logprob: -13.627043724060059
    8. '<|end|>' → logprob: -13.627043724060059
    9. '>,' → logprob: -13.752043724060059
    10. ' ' → logprob: -13.877043724060059

Token 86: ' lower' (ID: 6931)
  Prédit: 'lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lower' → logprob: -0.02977258712053299
    2. ' lower' → logprob: -3.5297725200653076
    3. '(lower' → logprob: -11.154772758483887
    4. '.lower' → logprob: -11.904772758483887
    5. '<|end|>' → logprob: -14.279772758483887
    6. '_lower' → logprob: -15.279772758483887
    7. ' ' → logprob: -16.52977180480957
    8. ')' → logprob: -16.90477180480957
    9. 'Lower' → logprob: -17.65477180480957
    10. 'upper' → logprob: -17.77977180480957

Token 87: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.25361180305480957
    2. '-' → logprob: -1.5036118030548096
    3. '2' → logprob: -6.6286115646362305
    4. '1' → logprob: -8.37861156463623
    5. '(-' → logprob: -10.37861156463623
    6. '][-' → logprob: -10.50361156463623
    7. ' -' → logprob: -11.25361156463623
    8. '[' → logprob: -12.00361156463623
    9. '[:-' → logprob: -12.00361156463623
    10. '<|end|>' → logprob: -12.25361156463623

Token 88: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.514650183613412e-05
    2. ' ' → logprob: -10.375055313110352
    3. '2' → logprob: -11.000055313110352
    4. '   ' → logprob: -13.312555313110352
    5. ']' → logprob: -13.375055313110352
    6. '  ' → logprob: -14.125055313110352
    7. '    ' → logprob: -15.187555313110352
    8. '```' → logprob: -15.500055313110352
    9. '])' → logprob: -15.687555313110352
    10. ' ]' → logprob: -16.00005531311035

Token 89: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008225775323808193
    2. '),' → logprob: -5.008225917816162
    3. '],' → logprob: -6.633225917816162
    4. ' ,' → logprob: -9.133225440979004
    5. '},' → logprob: -10.133225440979004
    6. ')' → logprob: -11.008225440979004
    7. '>,' → logprob: -11.133225440979004
    8. ',p' → logprob: -12.258225440979004
    9. '`,' → logprob: -12.758225440979004
    10. 'p' → logprob: -13.258225440979004

Token 90: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.1602262556552887
    2. ' p' → logprob: -1.9102262258529663
    3. ')p' → logprob: -13.910225868225098
    4. ')' → logprob: -14.160225868225098
    5. '(p' → logprob: -15.160225868225098
    6. '	p' → logprob: -16.785226821899414
    7. ' ' → logprob: -17.035226821899414
    8. ''p' → logprob: -17.035226821899414
    9. '   ' → logprob: -17.160226821899414
    10. '<p' → logprob: -18.160226821899414

Token 91: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.008129963040119e-06
    2. ' )' → logprob: -12.875003814697266
    3. ')<' → logprob: -13.875003814697266
    4. ')<=' → logprob: -14.750003814697266
    5. ')
' → logprob: -17.375003814697266
    6. ')>=' → logprob: -18.250003814697266
    7. '）' → logprob: -18.500003814697266
    8. ')>' → logprob: -18.625003814697266
    9. ')`' → logprob: -18.875003814697266
    10. ')

' → logprob: -20.250003814697266

Token 92: ' <' (ID: 464)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.386891633272171
    2. ' <=' → logprob: -1.1368916034698486
    3. '<' → logprob: -11.01189136505127
    4. ' <' → logprob: -13.63689136505127
    5. '>=' → logprob: -13.76189136505127
    6. ')<=' → logprob: -13.88689136505127
    7. ' >=' → logprob: -15.38689136505127
    8. ' ' → logprob: -15.63689136505127
    9. ')' → logprob: -15.76189136505127
    10. '[' → logprob: -15.88689136505127

Token 93: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6003512144088745
    2. ' ' → logprob: -0.8503512144088745
    3. '=' → logprob: -3.725351333618164
    4. ' =' → logprob: -11.600351333618164
    5. '1' → logprob: -13.600351333618164
    6. '  ' → logprob: -14.475351333618164
    7. ')' → logprob: -15.600351333618164
    8. '=(' → logprob: -16.225351333618164
    9. '   ' → logprob: -16.350351333618164
    10. ' ' → logprob: -16.850351333618164

Token 94: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017563373548910022
    2. ' ' → logprob: -6.626756191253662
    3. '=' → logprob: -7.751756191253662
    4. '1' → logprob: -15.37675666809082
    5. ' =' → logprob: -16.12675666809082
    6. '۰' → logprob: -18.12675666809082
    7. '=
' → logprob: -18.37675666809082
    8. '```' → logprob: -19.00175666809082
    9. '=

' → logprob: -19.12675666809082
    10. '   ' → logprob: -19.37675666809082

Token 95: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03717903420329094
    2. ' :' → logprob: -3.9121789932250977
    3. ':
' → logprob: -4.412178993225098
    4. '):' → logprob: -6.662178993225098
    5. ' :
' → logprob: -6.662178993225098
    6. ')' → logprob: -7.037178993225098
    7. ' ' → logprob: -7.662178993225098
    8. '):
' → logprob: -8.162178993225098
    9. ' )' → logprob: -10.412178993225098
    10. ' ):
' → logprob: -10.662178993225098

Token 96: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13082818686962128
    2. '           ' → logprob: -2.7558281421661377
    3. ' ' → logprob: -4.130828380584717
    4. '    ' → logprob: -4.505828380584717
    5. '   ' → logprob: -4.755828380584717
    6. '-' → logprob: -5.630828380584717
    7. '        ' → logprob: -5.630828380584717
    8. '\' → logprob: -6.005828380584717
    9. '            ' → logprob: -6.505828380584717
    10. ' 
' → logprob: -6.630828380584717

Token 97: ' lower' (ID: 6931)
  Prédit: ' lower'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lower' → logprob: -0.01252778060734272
    2. 'lower' (adapté à ' lower') → logprob: -4.387527942657471
    3. '.lower' → logprob: -11.512527465820312
    4. '(lower' → logprob: -12.012527465820312
    5. '    ' → logprob: -14.637527465820312
    6. '_lower' → logprob: -14.762527465820312
    7. '            ' → logprob: -15.262527465820312
    8. ' 
' → logprob: -15.262527465820312
    9. '           ' → logprob: -15.262527465820312
    10. ' ' → logprob: -15.637527465820312

Token 98: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.0015024791937321424
    2. '.' → logprob: -6.501502513885498
    3. 'pop' → logprob: -16.251502990722656
    4. '.p' → logprob: -16.876502990722656
    5. ' .' → logprob: -17.376502990722656
    6. '.remove' → logprob: -17.501502990722656
    7. '.Pop' → logprob: -17.626502990722656
    8. '.po' → logprob: -18.751502990722656
    9. '	pop' → logprob: -18.751502990722656
    10. ').' → logprob: -19.626502990722656

Token 99: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.5213274309644476e-05
    2. '()
' → logprob: -11.250015258789062
    3. '()

' → logprob: -13.375015258789062
    4. '(' → logprob: -15.750015258789062
    5. ' ()' → logprob: -16.375015258789062
    6. '()`' → logprob: -16.875015258789062
    7. '()]' → logprob: -17.125015258789062
    8. '()
' → logprob: -17.375015258789062
    9. '())' → logprob: -17.500015258789062
    10. '()\' → logprob: -17.500015258789062

Token 100: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07522384822368622
    2. ' 
' → logprob: -3.075223922729492
    3. '        
' → logprob: -4.075223922729492
    4. '    
' → logprob: -6.200223922729492
    5. ' lower' → logprob: -6.325223922729492
    6. '  
' → logprob: -6.700223922729492
    7. '   
' → logprob: -7.200223922729492
    8. ')' → logprob: -7.450223922729492
    9. '   ' → logprob: -7.700223922729492
    10. ' ' → logprob: -7.700223922729492

Token 101: ' lower' (ID: 6931)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6693902611732483
    2. ' lower' → logprob: -0.7943902611732483
    3. 'lower' (adapté à ' lower') → logprob: -4.5443902015686035
    4. '        
' → logprob: -5.0443902015686035
    5. '.lower' → logprob: -5.1693902015686035
    6. '   ' → logprob: -6.1693902015686035
    7. ' ' → logprob: -6.1693902015686035
    8. ' 
' → logprob: -6.5443902015686035
    9. ')' → logprob: -6.6693902015686035
    10. '(lower' → logprob: -6.7943902015686035

Token 102: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.004124349914491177
    2. '.' → logprob: -5.504124164581299
    3. ' .' → logprob: -10.254124641418457
    4. '.app' → logprob: -12.629124641418457
    5. '.push' → logprob: -13.129124641418457
    6. '.ap' → logprob: -13.129124641418457
    7. '.extend' → logprob: -13.379124641418457
    8. '.add' → logprob: -14.504124641418457
    9. '.py' → logprob: -14.754124641418457
    10. '       ' → logprob: -15.254124641418457

Token 103: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.00015860427811276168
    2. '(' → logprob: -8.750158309936523
    3. '(
' → logprob: -17.875158309936523
    4. '((' → logprob: -19.000158309936523
    5. '()' → logprob: -19.625158309936523
    6. '(P' → logprob: -19.750158309936523
    7. ' (' → logprob: -20.375158309936523
    8. '(pl' → logprob: -20.625158309936523
    9. '(

' → logprob: -21.500158309936523
    10. '(x' → logprob: -21.750158309936523

Token 104: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0048150536604225636
    2. ')
' → logprob: -5.379815101623535
    3. '   ' → logprob: -8.629815101623535
    4. '
' → logprob: -12.004815101623535
    5. ')return' → logprob: -12.629815101623535
    6. ' )' → logprob: -13.129815101623535
    7. ')

' → logprob: -13.254815101623535
    8. '<|end|>' → logprob: -14.129815101623535
    9. ' ' → logprob: -14.379815101623535
    10. ')n' → logprob: -14.504815101623535

Token 105: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004501804243773222
    2. '    
' → logprob: -5.629501819610596
    3. '
' → logprob: -7.879501819610596
    4. '  
' → logprob: -8.754501342773438
    5. '   
' → logprob: -9.379501342773438
    6. 'upper' → logprob: -9.379501342773438
    7. ' upper' → logprob: -9.629501342773438
    8. '<|end|>' → logprob: -10.004501342773438
    9. ' 
' → logprob: -10.254501342773438
    10. '        
' → logprob: -10.629501342773438

Token 106: ' upper' (ID: 13057)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6917256116867065
    2. 'upper' (adapté à ' upper') → logprob: -1.0667256116867065
    3. ' upper' → logprob: -2.566725730895996
    4. '    
' → logprob: -2.816725730895996
    5. '  
' → logprob: -4.941725730895996
    6. '
' → logprob: -4.941725730895996
    7. '.upper' → logprob: -6.816725730895996
    8. '   
' → logprob: -6.941725730895996
    9. ' 
' → logprob: -6.941725730895996
    10. ' ' → logprob: -8.066725730895996

Token 107: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0036024407017976046
    2. '=' → logprob: -5.628602504730225
    3. '=[]' → logprob: -13.253602027893066
    4. ' ' → logprob: -14.628602027893066
    5. '   ' → logprob: -16.253602981567383
    6. '  ' → logprob: -17.878602981567383
    7. '=[]
' → logprob: -18.003602981567383
    8. ' =
' → logprob: -18.628602981567383
    9. ' =[' → logprob: -18.628602981567383
    10. '    ' → logprob: -19.003602981567383

Token 108: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.019632291048765182
    2. ' []' → logprob: -4.269632339477539
    3. '[]
' → logprob: -5.269632339477539
    4. ' []
' → logprob: -8.144632339477539
    5. '[]

' → logprob: -11.269632339477539
    6. '   ' → logprob: -13.144632339477539
    7. ' []
' → logprob: -13.394632339477539
    8. '[' → logprob: -14.894632339477539
    9. '[]>' → logprob: -14.894632339477539
    10. ' ' → logprob: -15.019632339477539

Token 109: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5040808916091919
    2. 'for' → logprob: -1.504080891609192
    3. '   ' → logprob: -1.754080891609192
    4. '	for' → logprob: -7.379080772399902
    5. '    
' → logprob: -11.129080772399902
    6. '
' → logprob: -12.129080772399902
    7. ' ' → logprob: -12.629080772399902
    8. ' 
' → logprob: -14.254080772399902
    9. '[' → logprob: -14.379080772399902
    10. '<|end|>' → logprob: -14.504080772399902

Token 110: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0009125363430939615
    2. ' for' → logprob: -7.000912666320801
    3. '   ' → logprob: -14.2509126663208
    4. '	for' → logprob: -14.8759126663208
    5. 'from' → logprob: -20.125911712646484
    6. 'For' → logprob: -20.250911712646484
    7. ' ' → logprob: -20.500911712646484
    8. '<|end|>' → logprob: -20.875911712646484
    9. '.for' → logprob: -21.500911712646484
    10. '[' → logprob: -21.875911712646484

Token 111: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.474077433347702
    2. ' p' → logprob: -0.9740774631500244
    3. ' ' → logprob: -15.849077224731445
    4. 'pt' → logprob: -16.349077224731445
    5. '   ' → logprob: -16.974077224731445
    6. '	p' → logprob: -16.974077224731445
    7. 'point' → logprob: -16.974077224731445
    8. ' point' → logprob: -17.724077224731445
    9. '  ' → logprob: -18.599077224731445
    10. 'pp' → logprob: -18.974077224731445

Token 112: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005932589527219534
    2. 'in' → logprob: -5.130932807922363
    3. 'points' → logprob: -13.630932807922363
    4. ' ' → logprob: -14.130932807922363
    5. 's' → logprob: -14.255932807922363
    6. '   ' → logprob: -15.130932807922363
    7. 'n' → logprob: -15.255932807922363
    8. ' points' → logprob: -15.755932807922363
    9. 'import' → logprob: -16.193431854248047
    10. 'reverse' → logprob: -16.318431854248047

Token 113: ' reversed' (ID: 57184)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.30053749680519104
    2. ' reversed' → logprob: -1.5505374670028687
    3. 'points' → logprob: -3.175537586212158
    4. ' points' → logprob: -5.175537586212158
    5. '   ' → logprob: -12.050537109375
    6. 'reverse' → logprob: -12.550537109375
    7. ' ' → logprob: -12.925537109375
    8. '	re' → logprob: -13.050537109375
    9. 'sorted' → logprob: -13.050537109375
    10. '	points' → logprob: -13.050537109375

Token 114: '(points' (ID: 72131)
  Prédit: '(points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: -3.128163257315464e-07
    2. 'points' → logprob: -15.5
    3. ' points' → logprob: -17.625
    4. '	points' → logprob: -19.0
    5. '(sorted' → logprob: -20.375
    6. 'Points' → logprob: -20.75
    7. '_points' → logprob: -21.0
    8. '(parts' → logprob: -21.0
    9. '(point' → logprob: -21.125
    10. '.points' → logprob: -22.375

Token 115: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.027148976922035217
    2. '):
' → logprob: -3.652148962020874
    3. ':' → logprob: -7.902149200439453
    4. '   ' → logprob: -8.277149200439453
    5. '       ' → logprob: -8.902149200439453
    6. ')' → logprob: -9.527149200439453
    7. '():' → logprob: -12.402149200439453
    8. '):
' → logprob: -13.277149200439453
    9. ':
' → logprob: -13.402149200439453
    10. '}:' → logprob: -13.402149200439453

Token 116: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006661131512373686
    2. ' while' → logprob: -5.2566609382629395
    3. '   ' → logprob: -6.8816609382629395
    4. 'while' → logprob: -7.8816609382629395
    5. '	while' → logprob: -11.631661415100098
    6. '	' → logprob: -12.381661415100098
    7. '	   ' → logprob: -12.756661415100098
    8. '    ' → logprob: -13.756661415100098
    9. ' ' → logprob: -13.756661415100098
    10. '      ' → logprob: -14.506661415100098

Token 117: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.05808549374341965
    2. 'while' (adapté à ' while') → logprob: -2.9330854415893555
    3. '       ' → logprob: -5.8080854415893555
    4. '	while' → logprob: -9.308085441589355
    5. '   ' → logprob: -9.933085441589355
    6. ' ' → logprob: -10.183085441589355
    7. 'While' → logprob: -12.308085441589355
    8. '    ' → logprob: -12.433085441589355
    9. ' ' → logprob: -13.308085441589355
    10. '  ' → logprob: -13.683085441589355

Token 118: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.014187720604240894
    2. 'len' → logprob: -4.264187812805176
    3. '(len' → logprob: -10.639187812805176
    4. '[len' → logprob: -15.764187812805176
    5. '	len' → logprob: -16.51418685913086
    6. ' ' → logprob: -17.01418685913086
    7. '<len' → logprob: -17.76418685913086
    8. '=len' → logprob: -18.26418685913086
    9. ',len' → logprob: -19.01418685913086
    10. '.len' → logprob: -19.51418685913086

Token 119: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.128163257315464e-07
    2. 'upper' → logprob: -16.5
    3. ' (' → logprob: -16.75
    4. '(lower' → logprob: -18.375
    5. ' upper' → logprob: -18.5
    6. '<|end|>' → logprob: -20.875
    7. '.upper' → logprob: -21.0
    8. '(
' → logprob: -21.75
    9. ' ' → logprob: -22.0
    10. '(up' → logprob: -22.5

Token 120: 'upper' (ID: 26119)
  Prédit: 'upper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'upper' → logprob: -0.01771378330886364
    2. ' upper' → logprob: -4.14271354675293
    3. '(' → logprob: -6.39271354675293
    4. '.upper' → logprob: -13.01771354675293
    5. '<|end|>' → logprob: -14.26771354675293
    6. '_upper' → logprob: -14.51771354675293
    7. ' ' → logprob: -15.26771354675293
    8. '   ' → logprob: -15.39271354675293
    9. ')' → logprob: -16.14271354675293
    10. 'uppercase' → logprob: -16.14271354675293

Token 121: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013242934830486774
    2. ' >=' → logprob: -4.763242721557617
    3. ')>=' → logprob: -5.513242721557617
    4. '>=' → logprob: -7.763242721557617
    5. '<|end|>' → logprob: -9.638242721557617
    6. ']>=' → logprob: -10.388242721557617
    7. '   ' → logprob: -10.763242721557617
    8. ' )' → logprob: -10.763242721557617
    9. ' ' → logprob: -11.763242721557617
    10. '[' → logprob: -12.013242721557617

Token 122: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.0012189284898340702
    2. '>=' → logprob: -6.751218795776367
    3. '<|end|>' → logprob: -10.376218795776367
    4. ')>=' → logprob: -11.626218795776367
    5. ' ' → logprob: -12.501218795776367
    6. ']>=' → logprob: -13.251218795776367
    7. '   ' → logprob: -13.501218795776367
    8. ')' → logprob: -14.126218795776367
    9. '[' → logprob: -15.001218795776367
    10. ' ≥' → logprob: -15.251218795776367

Token 123: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0699479952454567
    2. ' ' → logprob: -2.6949479579925537
    3. '   ' → logprob: -11.444948196411133
    4. '  ' → logprob: -14.444948196411133
    5. '<|end|>' → logprob: -15.569948196411133
    6. '```' → logprob: -16.382448196411133
    7. 'def' → logprob: -16.882448196411133
    8. ' two' → logprob: -17.007448196411133
    9. '    ' → logprob: -17.069948196411133
    10. '<|end|>' → logprob: -17.944948196411133

Token 124: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0004897649050690234
    2. ' ' → logprob: -7.625489711761475
    3. '   ' → logprob: -14.000490188598633
    4. '<|end|>' → logprob: -14.625490188598633
    5. '```' → logprob: -16.000490188598633
    6. 'def' → logprob: -16.125490188598633
    7. '  ' → logprob: -16.625490188598633
    8. ' two' → logprob: -16.750490188598633
    9. 'two' → logprob: -17.187990188598633
    10. '<|end|>' → logprob: -17.687990188598633

Token 125: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0028053484857082367
    2. 'and' → logprob: -5.877805233001709
    3. '<|end|>' → logprob: -14.877805709838867
    4. ' ' → logprob: -16.377805709838867
    5. '	and' → logprob: -18.252805709838867
    6. ' &&' → logprob: -18.252805709838867
    7. '        ' → logprob: -18.502805709838867
    8. '   ' → logprob: -18.877805709838867
    9. '       ' → logprob: -19.002805709838867
    10. '```' → logprob: -19.127805709838867

Token 126: ' cross' (ID: 8088)
  Prédit: ' cross'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cross' → logprob: -0.023245712742209435
    2. 'cross' → logprob: -3.7732458114624023
    3. ' ' → logprob: -15.898245811462402
    4. '.cross' → logprob: -16.523244857788086
    5. '_cross' → logprob: -18.148244857788086
    6. '   ' → logprob: -19.148244857788086
    7. ' ' → logprob: -19.398244857788086
    8. '  ' → logprob: -19.523244857788086
    9. 'Cross' → logprob: -20.023244857788086
    10. '-cross' → logprob: -21.023244857788086

Token 127: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.128163257315464e-07
    2. 'upper' → logprob: -15.875
    3. ' (' → logprob: -16.0
    4. '(lower' → logprob: -16.875
    5. '(
' → logprob: -18.875
    6. '.upper' → logprob: -19.0
    7. ' upper' → logprob: -19.0
    8. '<|end|>' → logprob: -19.375
    9. '(up' → logprob: -20.75
    10. '((' → logprob: -20.75

Token 128: 'upper' (ID: 26119)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011052774265408516
    2. 'upper' → logprob: -4.51105260848999
    3. ' upper' → logprob: -12.261053085327148
    4. '(lower' → logprob: -16.13605308532715
    5. '.upper' → logprob: -16.76105308532715
    6. ' (' → logprob: -17.63605308532715
    7. '<|end|>' → logprob: -17.88605308532715
    8. '[' → logprob: -18.38605308532715
    9. 'lower' → logprob: -18.38605308532715
    10. '_upper' → logprob: -19.01105308532715

Token 129: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -9.088346359931165e-07
    2. '-' → logprob: -14.625000953674316
    3. '[:-' → logprob: -16.625
    4. ' [-' → logprob: -16.625
    5. '(-' → logprob: -16.75
    6. '][-' → logprob: -17.125
    7. '```' → logprob: -17.625
    8. '   ' → logprob: -17.625
    9. '[' → logprob: -17.75
    10. ' ' → logprob: -18.5

Token 130: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0445127372804563e-05
    2. ' ' → logprob: -11.75001049041748
    3. '-' → logprob: -13.00001049041748
    4. ' -' → logprob: -15.75001049041748
    5. '  ' → logprob: -16.375009536743164
    6. '   ' → logprob: -16.500009536743164
    7. '[-' → logprob: -17.000009536743164
    8. '[' → logprob: -17.375009536743164
    9. '۲' → logprob: -18.250009536743164
    10. '２' → logprob: -19.250009536743164

Token 131: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017785917734727263
    2. ' ,' → logprob: -6.376778602600098
    3. '),' → logprob: -9.876778602600098
    4. '],' → logprob: -11.251778602600098
    5. ')' → logprob: -12.251778602600098
    6. '   ' → logprob: -13.251778602600098
    7. ' ' → logprob: -13.376778602600098
    8. '<|end|>' → logprob: -13.751778602600098
    9. '(),' → logprob: -13.876778602600098
    10. '>,' → logprob: -14.751778602600098

Token 132: ' upper' (ID: 13057)
  Prédit: 'upper'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'upper' → logprob: -0.048594068735837936
    2. ' upper' → logprob: -3.0485939979553223
    3. '.upper' → logprob: -12.42359447479248
    4. '<|end|>' → logprob: -13.17359447479248
    5. '_upper' → logprob: -15.54859447479248
    6. 'uper' → logprob: -15.67359447479248
    7. ' ' → logprob: -15.79859447479248
    8. 'uppercase' → logprob: -16.048593521118164
    9. '   ' → logprob: -17.298593521118164
    10. 'upp' → logprob: -17.673593521118164

Token 133: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.01815216802060604
    2. '-' → logprob: -4.018152236938477
    3. ' -' → logprob: -14.268152236938477
    4. '][-' → logprob: -14.393152236938477
    5. ' [-' → logprob: -14.768152236938477
    6. '[:-' → logprob: -15.893152236938477
    7. '−' → logprob: -16.143152236938477
    8. '(-' → logprob: -16.143152236938477
    9. '[' → logprob: -16.393152236938477
    10. '-[' → logprob: -17.393152236938477

Token 134: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -13.12500286102295
    3. '[' → logprob: -15.00000286102295
    4. '2' → logprob: -15.81250286102295
    5. '<|end|>' → logprob: -15.81250286102295
    6. '   ' → logprob: -16.500003814697266
    7. ']' → logprob: -16.562503814697266
    8. 'def' → logprob: -16.562503814697266
    9. '۱' → logprob: -17.375003814697266
    10. '```' → logprob: -17.500003814697266

Token 135: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002636006975080818
    2. ' ,' → logprob: -8.625263214111328
    3. ',p' → logprob: -9.500263214111328
    4. 'p' → logprob: -11.750263214111328
    5. '),' → logprob: -13.750263214111328
    6. '(),' → logprob: -15.875263214111328
    7. ' p' → logprob: -16.875263214111328
    8. ')' → logprob: -17.625263214111328
    9. '`,' → logprob: -17.625263214111328
    10. '],' → logprob: -18.000263214111328

Token 136: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.07889165729284286
    2. ' p' → logprob: -2.5788917541503906
    3. '<|end|>' → logprob: -13.82889175415039
    4. ')' → logprob: -14.82889175415039
    5. ' ' → logprob: -15.20389175415039
    6. ')p' → logprob: -16.45389175415039
    7. '   ' → logprob: -17.07889175415039
    8. '<p' → logprob: -17.07889175415039
    9. '(p' → logprob: -17.07889175415039
    10. ''p' → logprob: -17.95389175415039

Token 137: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001329791557509452
    2. ')<' → logprob: -9.50013256072998
    3. ')<=' → logprob: -10.00013256072998
    4. ')>' → logprob: -11.62513256072998
    5. ' )' → logprob: -13.25013256072998
    6. ')>=' → logprob: -13.75013256072998
    7. '<=' → logprob: -15.37513256072998
    8. '[' → logprob: -15.75013256072998
    9. '   ' → logprob: -15.87513256072998
    10. '<' → logprob: -16.000133514404297

Token 138: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.19425389170646667
    2. '<' → logprob: -2.194253921508789
    3. ' <=' → logprob: -3.194253921508789
    4. ' >' → logprob: -4.319253921508789
    5. '>' → logprob: -5.194253921508789
    6. '<=' → logprob: -5.319253921508789
    7. ')' → logprob: -8.319253921508789
    8. ' ' → logprob: -10.319253921508789
    9. ' >=' → logprob: -10.569253921508789
    10. '[' → logprob: -11.319253921508789

Token 139: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06414393335580826
    2. '=' → logprob: -2.9391438961029053
    3. ' ' → logprob: -4.689144134521484
    4. '1' → logprob: -11.439144134521484
    5. ' =' → logprob: -12.189144134521484
    6. '   ' → logprob: -12.939144134521484
    7. ')' → logprob: -13.439144134521484
    8. '  ' → logprob: -13.814144134521484
    9. '=
' → logprob: -14.564144134521484
    10. ':' → logprob: -15.189144134521484

Token 140: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007865179213695228
    2. ' ' → logprob: -7.375786304473877
    3. '=' → logprob: -8.750786781311035
    4. '1' → logprob: -14.125786781311035
    5. ')' → logprob: -14.875786781311035
    6. '   ' → logprob: -16.18828582763672
    7. ' =' → logprob: -16.25078582763672
    8. '```' → logprob: -16.56328582763672
    9. '۰' → logprob: -16.62578582763672
    10. '`' → logprob: -17.37578582763672

Token 141: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.877480149269104
    2. ':
' → logprob: -1.127480149269104
    3. '       ' → logprob: -1.377480149269104
    4. '):
' → logprob: -5.3774800300598145
    5. '           ' → logprob: -6.1274800300598145
    6. '):' → logprob: -8.002480506896973
    7. ')' → logprob: -8.502480506896973
    8. '	' → logprob: -8.752480506896973
    9. ',' → logprob: -8.877480506896973
    10. '   ' → logprob: -8.877480506896973

Token 142: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6364887356758118
    2. '       ' → logprob: -0.7614887356758118
    3. ' upper' → logprob: -5.761488914489746
    4. 'upper' → logprob: -7.511488914489746
    5. '   ' → logprob: -9.011488914489746
    6. '	       ' → logprob: -11.886488914489746
    7. '               ' → logprob: -12.011488914489746
    8. '     ' → logprob: -12.136488914489746
    9. '      ' → logprob: -12.261488914489746
    10. '          ' → logprob: -12.261488914489746

Token 143: ' upper' (ID: 13057)
  Prédit: ' upper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' upper' → logprob: -0.47407954931259155
    2. 'upper' (adapté à ' upper') → logprob: -0.9740795493125916
    3. '           ' → logprob: -13.599079132080078
    4. '.upper' → logprob: -14.099079132080078
    5. 'Upper' → logprob: -14.974079132080078
    6. '_upper' → logprob: -16.349079132080078
    7. '   ' → logprob: -16.849079132080078
    8. '       ' → logprob: -17.474079132080078
    9. ' ' → logprob: -18.474079132080078
    10. ' верх' → logprob: -19.474079132080078

Token 144: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -9.805981972021982e-05
    2. '.' → logprob: -9.50009822845459
    3. '.append' → logprob: -10.75009822845459
    4. ' .' → logprob: -13.50009822845459
    5. 'pop' → logprob: -15.50009822845459
    6. '.p' → logprob: -18.500097274780273
    7. '.push' → logprob: -18.750097274780273
    8. '	pop' → logprob: -19.375097274780273
    9. '.Pop' → logprob: -19.625097274780273
    10. '_pop' → logprob: -19.750097274780273

Token 145: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0009130131802521646
    2. '()
' → logprob: -7.000913143157959
    3. '()
' → logprob: -14.3759126663208
    4. ')' → logprob: -14.8759126663208
    5. '()

' → logprob: -14.8759126663208
    6. '       ' → logprob: -16.750913619995117
    7. '()`' → logprob: -17.000913619995117
    8. '()\' → logprob: -17.000913619995117
    9. '(' → logprob: -17.375913619995117
    10. '())' → logprob: -17.625913619995117

Token 146: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009864849271252751
    2. '	' → logprob: -7.250986576080322
    3. '   ' → logprob: -8.375986099243164
    4. '<|end|>' → logprob: -10.875986099243164
    5. 'upper' → logprob: -11.750986099243164
    6. ' upper' → logprob: -12.125986099243164
    7. '	   ' → logprob: -13.375986099243164
    8. '      ' → logprob: -13.375986099243164
    9. ' ' → logprob: -13.750986099243164
    10. '    ' → logprob: -13.750986099243164

Token 147: ' upper' (ID: 13057)
  Prédit: 'upper'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'upper' (adapté à ' upper') → logprob: -0.008631822653114796
    2. ' upper' → logprob: -4.758631706237793
    3. '       ' → logprob: -11.258631706237793
    4. '   ' → logprob: -13.008631706237793
    5. '.upper' → logprob: -13.258631706237793
    6. 'Upper' → logprob: -15.383631706237793
    7. '           ' → logprob: -17.25863265991211
    8. '[' → logprob: -17.38363265991211
    9. '    ' → logprob: -18.00863265991211
    10. ' ' → logprob: -18.00863265991211

Token 148: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00023929782037157565
    2. '.' → logprob: -8.375239372253418
    3. ' .' → logprob: -12.250239372253418
    4. '.pop' → logprob: -13.625239372253418
    5. 'append' → logprob: -14.000239372253418
    6. '.app' → logprob: -14.000239372253418
    7. '.ap' → logprob: -15.000239372253418
    8. '.push' → logprob: -15.125239372253418
    9. ').' → logprob: -16.6252384185791
    10. '.add' → logprob: -16.6252384185791

Token 149: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -6.2729995988775045e-06
    2. '(' → logprob: -12.000006675720215
    3. '(point' → logprob: -18.0000057220459
    4. '(points' → logprob: -18.3750057220459
    5. ' (' → logprob: -19.0000057220459
    6. '(pl' → logprob: -20.5000057220459
    7. '(pt' → logprob: -20.6250057220459
    8. '(
' → logprob: -21.1250057220459
    9. '((' → logprob: -21.1250057220459
    10. '(P' → logprob: -21.2500057220459

Token 150: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16878844797611237
    2. '(p' → logprob: -2.168788433074951
    3. 'p' → logprob: -3.418788433074951
    4. ')
' → logprob: -5.543788433074951
    5. ')p' → logprob: -5.668788433074951
    6. '(' → logprob: -7.793788433074951
    7. ' p' → logprob: -8.04378890991211
    8. '   ' → logprob: -9.66878890991211
    9. '()' → logprob: -10.66878890991211
    10. ')

' → logprob: -10.79378890991211

Token 151: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05894693732261658
    2. '[:-' → logprob: -3.1839468479156494
    3. '[' → logprob: -4.6839470863342285
    4. ' return' → logprob: -5.1839470863342285
    5. ' ' → logprob: -8.43394660949707
    6. '    
' → logprob: -8.55894660949707
    7. ' 
' → logprob: -8.80894660949707
    8. '```' → logprob: -9.43394660949707
    9. 'return' → logprob: -9.68394660949707
    10. '  ' → logprob: -9.80894660949707

Token 152: ' hull' (ID: 74912)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.04947124049067497
    2. ' return' → logprob: -3.049471139907837
    3. '   ' → logprob: -7.049471378326416
    4. '#' → logprob: -11.924470901489258
    5. '
' → logprob: -12.549470901489258
    6. '    
' → logprob: -13.674470901489258
    7. '[:-' → logprob: -13.799470901489258
    8. '	return' → logprob: -13.799470901489258
    9. '```' → logprob: -14.799470901489258
    10. 'result' → logprob: -14.924470901489258

Token 153: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12693104147911072
    2. '=' → logprob: -2.1269309520721436
    3. ' ' → logprob: -13.751931190490723
    4. '[:-' → logprob: -15.126931190490723
    5. '[' → logprob: -15.251931190490723
    6. '[:]' → logprob: -15.376931190490723
    7. ' =
' → logprob: -15.501931190490723
    8. '   ' → logprob: -15.501931190490723
    9. '＝' → logprob: -16.001930236816406
    10. '.' → logprob: -16.001930236816406

Token 154: ' lower' (ID: 6931)
  Prédit: 'lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lower' → logprob: -0.02325037121772766
    2. ' lower' → logprob: -3.7732503414154053
    3. '(lower' → logprob: -12.523250579833984
    4. '   ' → logprob: -14.148250579833984
    5. 'list' → logprob: -15.648250579833984
    6. ' ' → logprob: -15.898250579833984
    7. 'upper' → logprob: -16.273250579833984
    8. '.lower' → logprob: -16.773250579833984
    9. '_lower' → logprob: -17.898250579833984
    10. 'Lower' → logprob: -17.898250579833984

Token 155: '[:-' (ID: 63556)
  Prédit: '[:-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:-' → logprob: -4.1318875446449965e-05
    2. '+' → logprob: -10.125041007995605
    3. '[' → logprob: -13.875041007995605
    4. ' +' → logprob: -15.750041007995605
    5. '[-' → logprob: -16.000041961669922
    6. '[:]' → logprob: -18.500041961669922
    7. '
' → logprob: -19.500041961669922
    8. '+[' → logprob: -20.125041961669922
    9. '[
' → logprob: -20.375041961669922
    10. '```' → logprob: -20.375041961669922

Token 156: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. '-' → logprob: -15.375
    3. '１' → logprob: -17.0
    4. '
' → logprob: -17.625
    5. ' ' → logprob: -18.125
    6. '```' → logprob: -18.375
    7. '   ' → logprob: -18.875
    8. '

' → logprob: -19.625
    9. '``' → logprob: -19.875
    10. '(' → logprob: -20.125

Token 157: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005914454348385334
    2. '+' → logprob: -5.380914688110352
    3. ' +' → logprob: -7.630914688110352
    4. ' ]' → logprob: -7.755914688110352
    5. ']+' → logprob: -7.880914688110352
    6. ' ' → logprob: -14.130914688110352
    7. '   ' → logprob: -14.130914688110352
    8. '    ' → logprob: -15.630914688110352
    9. ']
' → logprob: -15.880914688110352
    10. '+]' → logprob: -16.75591468811035

Token 158: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.38687241077423096
    2. ' +' → logprob: -1.136872410774231
    3. '   ' → logprob: -13.761872291564941
    4. '+
' → logprob: -16.636873245239258
    5. '+[' → logprob: -16.886873245239258
    6. '[:-' → logprob: -17.136873245239258
    7. '＋' → logprob: -17.136873245239258
    8. '+self' → logprob: -17.511873245239258
    9. '    ' → logprob: -17.761873245239258
    10. '+p' → logprob: -18.261873245239258

Token 159: ' upper' (ID: 13057)
  Prédit: 'upper'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'upper' → logprob: -0.01814994215965271
    2. ' upper' → logprob: -4.0181498527526855
    3. 'uppercase' → logprob: -17.893150329589844
    4. '   ' → logprob: -18.018150329589844
    5. 'Upper' → logprob: -18.518150329589844
    6. '.upper' → logprob: -18.643150329589844
    7. ' ' → logprob: -19.393150329589844
    8. 'lower' → logprob: -19.643150329589844
    9. '  ' → logprob: -20.643150329589844
    10. '_upper' → logprob: -20.768150329589844

Token 160: '[:-' (ID: 63556)
  Prédit: '[:-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:-' → logprob: -0.3132622241973877
    2. '[' → logprob: -1.3132622241973877
    3. '[-' → logprob: -14.938261985778809
    4. '1' → logprob: -16.313262939453125
    5. '[:' → logprob: -17.438262939453125
    6. '```' → logprob: -17.938262939453125
    7. '
' → logprob: -18.938262939453125
    8. '[::-' → logprob: -19.063262939453125
    9. '   ' → logprob: -20.813262939453125
    10. '[len' → logprob: -21.688262939453125

Token 161: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.531315314830863e-06
    2. '-' → logprob: -12.875003814697266
    3. ' ' → logprob: -15.125003814697266
    4. '11' → logprob: -15.500003814697266
    5. '```' → logprob: -16.437503814697266
    6. '１' → logprob: -16.562503814697266
    7. '(' → logprob: -17.250003814697266
    8. '۱' → logprob: -17.250003814697266
    9. '
' → logprob: -17.500003814697266
    10. '])' → logprob: -17.562503814697266

Token 162: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.23626823723316193
    2. ']
' → logprob: -1.8612682819366455
    3. ')' → logprob: -3.3612682819366455
    4. ')
' → logprob: -3.9862682819366455
    5. '   ' → logprob: -6.611268043518066
    6. 'return' → logprob: -8.111268043518066
    7. ')return' → logprob: -11.486268043518066
    8. ']
' → logprob: -11.861268043518066
    9. '])' → logprob: -12.486268043518066
    10. '<|end|>' → logprob: -12.736268043518066

Token 163: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01436234638094902
    2. 'return' → logprob: -4.264362335205078
    3. ' return' → logprob: -8.889362335205078
    4. '
' → logprob: -10.139362335205078
    5. '    
' → logprob: -11.389362335205078
    6. '	return' → logprob: -12.389362335205078
    7. ':return' → logprob: -12.889362335205078
    8. '```' → logprob: -14.264362335205078
    9. '  
' → logprob: -14.639362335205078
    10. ')' → logprob: -14.889362335205078

Token 164: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.007697483524680138
    2. '   ' → logprob: -5.257697582244873
    3. ' return' → logprob: -6.007697582244873
    4. ' ' → logprob: -14.632697105407715
    5. '	return' → logprob: -15.132697105407715
    6. '  ' → logprob: -16.13269805908203
    7. 'def' → logprob: -17.88269805908203
    8. ':return' → logprob: -17.88269805908203
    9. '
' → logprob: -18.00769805908203
    10. '```' → logprob: -18.63269805908203

Token 165: ' hull' (ID: 74912)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -1.0325924449716695e-05
    2. ' hull' → logprob: -11.50001049041748
    3. 'hul' → logprob: -16.875009536743164
    4. '	h' → logprob: -17.875009536743164
    5. '[h' → logprob: -18.375009536743164
    6. 'list' → logprob: -19.000009536743164
    7. '   ' → logprob: -19.000009536743164
    8. ' ' → logprob: -19.625009536743164
    9. '```' → logprob: -21.500009536743164
    10. '(h' → logprob: -21.500009536743164

Token 166: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 167: 'def' (ID: 1314)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.21663038432598114
    2. '#' → logprob: -2.466630458831787
    3. 'def' → logprob: -3.091630458831787
    4. ' if' → logprob: -3.341630458831787
    5. '<|end|>' → logprob: -4.841630458831787
    6. 'print' → logprob: -5.341630458831787
    7. 'for' → logprob: -5.466630458831787
    8. '
' → logprob: -5.966630458831787
    9. '```' → logprob: -6.341630458831787
    10. 'points' → logprob: -6.466630458831787

Token 168: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0006080791936255991
    2. 'main' → logprob: -7.625607967376709
    3. ' solve' → logprob: -9.250608444213867
    4. '	main' → logprob: -11.875608444213867
    5. ' diameter' → logprob: -12.750608444213867
    6. ' perimeter' → logprob: -13.125608444213867
    7. ' area' → logprob: -13.250608444213867
    8. ' distance' → logprob: -13.250608444213867
    9. 'solve' → logprob: -13.625608444213867
    10. ' gra' → logprob: -13.750608444213867

Token 169: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -3.6789137084269896e-05
    2. '():
' → logprob: -10.50003719329834
    3. '(' → logprob: -12.25003719329834
    4. ' ():' → logprob: -13.12503719329834
    5. '()' → logprob: -13.25003719329834
    6. '(args' → logprob: -15.37503719329834
    7. '(:' → logprob: -16.125036239624023
    8. '(argv' → logprob: -16.625036239624023
    9. '():
' → logprob: -16.875036239624023
    10. ':' → logprob: -17.000036239624023

Token 170: '   ' (ID: 271)
  Prédit: ' points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.7193830013275146
    2. '   ' → logprob: -0.8443830013275146
    3. ' import' → logprob: -3.7193830013275146
    4. ' n' → logprob: -3.7193830013275146
    5. ' lines' → logprob: -4.469383239746094
    6. ' input' → logprob: -4.469383239746094
    7. 'n' → logprob: -5.469383239746094
    8. 'import' → logprob: -6.344383239746094
    9. ' for' → logprob: -6.719383239746094
    10. ' data' → logprob: -6.969383239746094

Token 171: ' input' (ID: 3422)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5046719312667847
    2. 'input' (adapté à ' input') → logprob: -1.5046719312667847
    3. ' input' → logprob: -2.004672050476074
    4. ' n' → logprob: -3.379672050476074
    5. '   ' → logprob: -5.254672050476074
    6. 'N' → logprob: -9.129672050476074
    7. 'import' → logprob: -9.754672050476074
    8. ' N' → logprob: -11.254672050476074
    9. 'data' → logprob: -11.254672050476074
    10. ' import' → logprob: -12.254672050476074

Token 172: '_lines' (ID: 42980)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.27330803871154785
    2. '_data' → logprob: -2.023308038711548
    3. '_line' → logprob: -3.023308038711548
    4. '_lines' → logprob: -3.023308038711548
    5. ' =' → logprob: -5.273307800292969
    6. '_' → logprob: -6.523307800292969
    7. '=' → logprob: -7.023307800292969
    8. 'data' → logprob: -7.273307800292969
    9. '_points' → logprob: -7.898307800292969
    10. '().' → logprob: -8.523307800292969

Token 173: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8121107816696167
    2. '=' → logprob: -0.9371107816696167
    3. '()' → logprob: -1.8121107816696167
    4. '=sys' → logprob: -7.312110900878906
    5. '=[]' → logprob: -9.062110900878906
    6. '[:]' → logprob: -9.687110900878906
    7. '(' → logprob: -10.187110900878906
    8. '   ' → logprob: -10.812110900878906
    9. '[' → logprob: -11.062110900878906
    10. ' ' → logprob: -11.187110900878906

Token 174: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.6931506395339966
    2. 'sys' → logprob: -0.6931506395339966
    3. '[' → logprob: -13.443150520324707
    4. ' [' → logprob: -13.818150520324707
    5. '=sys' → logprob: -14.693150520324707
    6. '	sys' → logprob: -15.068150520324707
    7. '(sys' → logprob: -15.693150520324707
    8. 'list' → logprob: -16.568151473999023
    9. ' ' → logprob: -17.693151473999023
    10. ' list' → logprob: -17.818151473999023

Token 175: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -5.6457742175552994e-05
    2. '.argv' → logprob: -10.125056266784668
    3. '.' → logprob: -11.375056266784668
    4. '.stdout' → logprob: -12.750056266784668
    5. '.std' → logprob: -13.875056266784668
    6. 'stdin' → logprob: -14.375056266784668
    7. '.input' → logprob: -15.875056266784668
    8. ' .' → logprob: -16.125057220458984
    9. '.readline' → logprob: -16.500057220458984
    10. '.st' → logprob: -16.625057220458984

Token 176: '.read' (ID: 7211)
  Prédit: '.readlines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readlines' → logprob: -0.28088727593421936
    2. '.readline' → logprob: -1.530887246131897
    3. '.read' → logprob: -3.9058873653411865
    4. 'read' → logprob: -4.905887126922607
    5. '.' → logprob: -6.905887126922607
    6. '_read' → logprob: -11.530887603759766
    7. ' .' → logprob: -13.780887603759766
    8. '().' → logprob: -14.030887603759766
    9. '	read' → logprob: -14.155887603759766
    10. '```' → logprob: -14.655887603759766

Token 177: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.014168680645525455
    2. '()' → logprob: -4.264168739318848
    3. ' ().' → logprob: -13.514168739318848
    4. '(' → logprob: -13.764168739318848
    5. '_lines' → logprob: -13.889168739318848
    6. 'lines' → logprob: -14.764168739318848
    7. '()

' → logprob: -15.514168739318848
    8. '()
' → logprob: -15.514168739318848
    9. ' ()' → logprob: -15.764168739318848
    10. '()).' → logprob: -16.01416778564453

Token 178: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.201437309384346
    2. 'split' → logprob: -1.7014373540878296
    3. 'rstrip' → logprob: -10.701436996459961
    4. 'decode' → logprob: -14.201436996459961
    5. ' split' → logprob: -14.576436996459961
    6. ' strip' → logprob: -16.20143699645996
    7. 'plit' → logprob: -16.70143699645996
    8. '(split' → logprob: -16.82643699645996
    9. 'replace' → logprob: -17.07643699645996
    10. 'read' → logprob: -17.57643699645996

Token 179: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0009126556105911732
    2. '()' → logprob: -7.000912666320801
    3. '(' → logprob: -14.5009126663208
    4. ' ().' → logprob: -15.7509126663208
    5. 'split' → logprob: -15.8759126663208
    6. '()
' → logprob: -16.000911712646484
    7. '.split' → logprob: -16.625911712646484
    8. '('' → logprob: -16.750911712646484
    9. '().'' → logprob: -17.125911712646484
    10. '.' → logprob: -18.000911712646484

Token 180: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: 0.0
    2. ' split' → logprob: -17.125
    3. '(split' → logprob: -19.375
    4. 'spl' → logprob: -20.125
    5. 'plit' → logprob: -21.25
    6. 'decode' → logprob: -21.375
    7. 'strip' → logprob: -21.625
    8. 'sp' → logprob: -21.625
    9. 's' → logprob: -22.125
    10. 'rstrip' → logprob: -22.25

Token 181: '('\' (ID: 24345)
  Prédit: '('\'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('\' → logprob: -0.4440125823020935
    2. '()' → logprob: -1.1940126419067383
    3. 'lines' → logprob: -2.9440126419067383
    4. '('' → logprob: -6.444012641906738
    5. '("\' → logprob: -7.069012641906738
    6. '(' → logprob: -8.194012641906738
    7. '()
' → logprob: -9.319012641906738
    8. '()\' → logprob: -9.819012641906738
    9. ''\' → logprob: -11.944012641906738
    10. '```' → logprob: -13.069012641906738

Token 182: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.000182921823579818
    2. '\n' → logprob: -8.62518310546875
    3. '
' → logprob: -13.25018310546875
    4. '\' → logprob: -14.25018310546875
    5. 'newline' → logprob: -15.37518310546875
    6. ' n' → logprob: -15.50018310546875
    7. ''\' → logprob: -15.75018310546875
    8. 'lines' → logprob: -16.00018310546875
    9. '	n' → logprob: -16.75018310546875
    10. ')n' → logprob: -16.87518310546875

Token 183: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1606079488992691
    2. '')' → logprob: -1.910607933998108
    3. '')
' → logprob: -8.785608291625977
    4. ')
' → logprob: -9.160608291625977
    5. '   ' → logprob: -9.285608291625977
    6. ']' → logprob: -11.410608291625977
    7. ' )' → logprob: -12.035608291625977
    8. '")' → logprob: -12.035608291625977
    9. '`)' → logprob: -12.785608291625977
    10. '']' → logprob: -13.410608291625977

Token 184: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39381855726242065
    2. ' n' → logprob: -1.2688186168670654
    3. 'n' → logprob: -3.1438186168670654
    4. ' num' → logprob: -7.518818378448486
    5. ' for' → logprob: -8.018818855285645
    6. 'num' → logprob: -8.143818855285645
    7. 'for' → logprob: -10.768818855285645
    8. ' N' → logprob: -11.018818855285645
    9. 'N' → logprob: -12.143818855285645
    10. '	n' → logprob: -12.393818855285645

Token 185: ' idx' (ID: 14016)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.05556170642375946
    2. ' n' → logprob: -3.1805617809295654
    3. '   ' → logprob: -4.555561542510986
    4. 'num' → logprob: -6.305561542510986
    5. ' num' → logprob: -9.180562019348145
    6. 'N' → logprob: -11.555562019348145
    7. '```' → logprob: -11.680562019348145
    8. '    
' → logprob: -11.930562019348145
    9. 'idx' (adapté à ' idx') → logprob: -12.055562019348145
    10. 't' → logprob: -12.805562019348145

Token 186: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0624268501996994
    2. '=' → logprob: -2.812426805496216
    3. ' +=' → logprob: -7.812427043914795
    4. ' ' → logprob: -10.437426567077637
    5. '+=' → logprob: -11.437426567077637
    6. ')' → logprob: -11.937426567077637
    7. '_' → logprob: -12.437426567077637
    8. '  ' → logprob: -14.062426567077637
    9. ' =)' → logprob: -14.312426567077637
    10. ' ' → logprob: -14.562426567077637

Token 187: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0049863550812006
    2. ' ' → logprob: -5.50498628616333
    3. '1' → logprob: -7.00498628616333
    4. '   ' → logprob: -16.254985809326172
    5. '2' → logprob: -17.004985809326172
    6. 'int' → logprob: -17.504985809326172
    7. '  ' → logprob: -17.879985809326172
    8. '```' → logprob: -18.504985809326172
    9. '<|end|>' → logprob: -18.879985809326172
    10. '۰' → logprob: -18.942485809326172

Token 188: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004099773708730936
    2. '1' → logprob: -5.5040998458862305
    3. ' ' → logprob: -10.75409984588623
    4. 'int' → logprob: -17.504098892211914
    5. '2' → logprob: -17.754098892211914
    6. '   ' → logprob: -18.754098892211914
    7. '```' → logprob: -19.129098892211914
    8. '-' → logprob: -19.441598892211914
    9. '+' → logprob: -19.629098892211914
    10. '  ' → logprob: -20.441598892211914

Token 189: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005608303938060999
    2. '
' → logprob: -5.630608081817627
    3. '    
' → logprob: -6.755608081817627
    4. '<|end|>' → logprob: -7.630608081817627
    5. 'n' → logprob: -9.130608558654785
    6. ',' → logprob: -9.880608558654785
    7. 'while' → logprob: -10.505608558654785
    8. '    ' → logprob: -10.630608558654785
    9. '```' → logprob: -10.755608558654785
    10. ' while' → logprob: -10.755608558654785

Token 190: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002576370956376195
    2. 'n' → logprob: -6.3775763511657715
    3. ' n' → logprob: -7.5025763511657715
    4. 'num' → logprob: -9.12757682800293
    5. ' while' → logprob: -9.50257682800293
    6. 'while' → logprob: -9.75257682800293
    7. '    
' → logprob: -10.62757682800293
    8. ' num' → logprob: -11.37757682800293
    9. 't' → logprob: -11.62757682800293
    10. '```' → logprob: -12.25257682800293

Token 191: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8961836695671082
    2. ' while' → logprob: -1.771183729171753
    3. 'n' → logprob: -2.146183729171753
    4. 'while' (adapté à ' while') → logprob: -2.146183729171753
    5. 't' → logprob: -2.521183729171753
    6. ' t' → logprob: -2.771183729171753
    7. ' n' → logprob: -3.521183729171753
    8. ' T' → logprob: -4.521183490753174
    9. 'T' → logprob: -6.146183490753174
    10. 'num' → logprob: -6.771183490753174

Token 192: ' True' (ID: 6432)
  Prédit: ' idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.005807805340737104
    2. 'idx' → logprob: -5.380807876586914
    3. ' True' → logprob: -6.755807876586914
    4. 'True' → logprob: -10.880807876586914
    5. '	idx' → logprob: -13.255807876586914
    6. '   ' → logprob: -13.380807876586914
    7. '(idx' → logprob: -15.255807876586914
    8. ' ' → logprob: -15.505807876586914
    9. '  ' → logprob: -17.130807876586914
    10. '    ' → logprob: -17.255807876586914

Token 193: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0318242609500885
    2. ':
' → logprob: -3.5318243503570557
    3. '   ' → logprob: -6.531824111938477
    4. ' and' → logprob: -8.156824111938477
    5. ' :' → logprob: -8.656824111938477
    6. ',' → logprob: -10.156824111938477
    7. 'and' → logprob: -10.406824111938477
    8. ' :
' → logprob: -10.531824111938477
    9. '       ' → logprob: -10.656824111938477
    10. '):' → logprob: -12.031824111938477

Token 194: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08129767328500748
    2. '   ' → logprob: -2.5812976360321045
    3. ' if' → logprob: -6.581297874450684
    4. '    ' → logprob: -7.706297874450684
    5. 'if' → logprob: -8.956297874450684
    6. '    
' → logprob: -9.206297874450684
    7. ' ' → logprob: -9.456297874450684
    8. '      ' → logprob: -9.956297874450684
    9. ',' → logprob: -10.331297874450684
    10. '        
' → logprob: -10.456297874450684

Token 195: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.28581058979034424
    2. 'if' (adapté à ' if') → logprob: -2.2858104705810547
    3. 'n' → logprob: -2.9108104705810547
    4. ' n' → logprob: -2.9108104705810547
    5. '   ' → logprob: -3.2858104705810547
    6. ' i' → logprob: -9.035810470581055
    7. 'i' → logprob: -9.160810470581055
    8. ' line' → logprob: -9.285810470581055
    9. '    ' → logprob: -9.410810470581055
    10. ' try' → logprob: -9.785810470581055

Token 196: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.0040874239057302475
    2. 'idx' → logprob: -5.504087448120117
    3. ' not' → logprob: -12.254087448120117
    4. '	idx' → logprob: -12.504087448120117
    5. ' ' → logprob: -15.129087448120117
    6. '(idx' → logprob: -16.504087448120117
    7. '   ' → logprob: -16.629087448120117
    8. ' ' → logprob: -17.129087448120117
    9. '_idx' → logprob: -17.504087448120117
    10. '[idx' → logprob: -18.254087448120117

Token 197: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.3133217394351959
    2. '>=' → logprob: -1.3133217096328735
    3. ' ' → logprob: -10.688322067260742
    4. ']>=' → logprob: -10.938322067260742
    5. ')>=' → logprob: -11.438322067260742
    6. '==' → logprob: -12.438322067260742
    7. ' ==' → logprob: -13.313322067260742
    8. '=' → logprob: -13.563322067260742
    9. ' <' → logprob: -14.813322067260742
    10. ')' → logprob: -15.188322067260742

Token 198: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -4.5491004129871726e-05
    2. ' len' → logprob: -10.000045776367188
    3. '(len' → logprob: -19.500045776367188
    4. '   ' → logprob: -20.375045776367188
    5. '       ' → logprob: -20.625045776367188
    6. '=len' → logprob: -21.625045776367188
    7. 'int' → logprob: -21.750045776367188
    8. '	len' → logprob: -22.250045776367188
    9. '<len' → logprob: -22.500045776367188
    10. ',len' → logprob: -22.625045776367188

Token 199: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.00015920029545668513
    2. 'input' → logprob: -8.75015926361084
    3. ' input' → logprob: -14.62515926361084
    4. ' (' → logprob: -16.000158309936523
    5. '=input' → logprob: -16.750158309936523
    6. '(' → logprob: -17.750158309936523
    7. ',input' → logprob: -18.000158309936523
    8. '<input' → logprob: -19.375158309936523
    9. '[input' → logprob: -19.750158309936523
    10. '_input' → logprob: -20.375158309936523

Token 200: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -6.869017852295656e-06
    2. '_' → logprob: -12.125006675720215
    3. ')' → logprob: -14.500006675720215
    4. 'lines' → logprob: -15.500006675720215
    5. '_)' → logprob: -15.500006675720215
    6. '_LINES' → logprob: -16.12500762939453
    7. ')_' → logprob: -16.87500762939453
    8. '_
' → logprob: -17.00000762939453
    9. ' lines' → logprob: -17.12500762939453
    10. ' _' → logprob: -17.37500762939453

Token 201: '):
' (ID: 1883)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.13155072927474976
    2. '):' → logprob: -3.0065507888793945
    3. ':' → logprob: -3.3815507888793945
    4. '):
' → logprob: -4.2565507888793945
    5. ')' → logprob: -4.3815507888793945
    6. ':
' → logprob: -4.5065507888793945
    7. 'or' → logprob: -7.1315507888793945
    8. '   ' → logprob: -7.3815507888793945
    9. '       ' → logprob: -7.6315507888793945
    10. '           ' → logprob: -9.881550788879395

Token 202: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00018971276585943997
    2. '       ' → logprob: -8.625189781188965
    3. '   ' → logprob: -12.000189781188965
    4. '          ' → logprob: -13.875189781188965
    5. ' break' → logprob: -14.000189781188965
    6. ' ' → logprob: -14.750189781188965
    7. 'break' → logprob: -15.375189781188965
    8. '<|end|>' → logprob: -15.375189781188965
    9. '```' → logprob: -15.625189781188965
    10. '               ' → logprob: -15.875189781188965

Token 203: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.18043948709964752
    2. '           ' → logprob: -2.4304394721984863
    3. ' break' → logprob: -2.6804394721984863
    4. 'return' → logprob: -4.805439472198486
    5. ' return' → logprob: -8.430439949035645
    6. '       ' → logprob: -9.180439949035645
    7. '	break' → logprob: -10.305439949035645
    8. '               ' → logprob: -11.305439949035645
    9. '   ' → logprob: -12.055439949035645
    10. '```' → logprob: -12.430439949035645

Token 204: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009180770255625248
    2. '        
' → logprob: -5.259180545806885
    3. '    
' → logprob: -6.759180545806885
    4. '  
' → logprob: -6.884180545806885
    5. '
' → logprob: -7.509180545806885
    6. '   ' → logprob: -7.634180545806885
    7. '<|end|>' → logprob: -8.509181022644043
    8. ',' → logprob: -8.759181022644043
    9. '\n' → logprob: -9.259181022644043
    10. '            
' → logprob: -9.759181022644043

Token 205: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004100246820598841
    2. '   ' → logprob: -6.004100322723389
    3. '        
' → logprob: -7.004100322723389
    4. '    
' → logprob: -8.12909984588623
    5. '  
' → logprob: -8.87909984588623
    6. ',' → logprob: -9.87909984588623
    7. ' ' → logprob: -10.12909984588623
    8. 'n' → logprob: -10.37909984588623
    9. '```' → logprob: -10.62909984588623
    10. '    ' → logprob: -10.87909984588623

Token 206: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.28895723819732666
    2. 'n' (adapté à ' n') → logprob: -1.4139572381973267
    3. '       ' → logprob: -5.413957118988037
    4. ' line' → logprob: -6.288957118988037
    5. '   ' → logprob: -6.913957118988037
    6. 'line' → logprob: -8.413957595825195
    7. ' num' → logprob: -9.163957595825195
    8. 'num' → logprob: -10.163957595825195
    9. ' count' → logprob: -10.913957595825195
    10. ' parts' → logprob: -10.913957595825195

Token 207: '_line' (ID: 14418)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3870309293270111
    2. '=' → logprob: -1.1370309591293335
    3. '=int' → logprob: -8.762030601501465
    4. '   ' → logprob: -13.637030601501465
    5. ' ' → logprob: -14.387030601501465
    6. ')' → logprob: -15.137030601501465
    7. ' =
' → logprob: -15.137030601501465
    8. '=line' → logprob: -15.262030601501465
    9. ',' → logprob: -16.26203155517578
    10. 'int' → logprob: -16.26203155517578

Token 208: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25194114446640015
    2. '=' → logprob: -1.501941204071045
    3. 's' → logprob: -11.751940727233887
    4. ' ' → logprob: -12.876940727233887
    5. '   ' → logprob: -14.376940727233887
    6. '  ' → logprob: -15.251940727233887
    7. ' =
' → logprob: -15.751940727233887
    8. ',' → logprob: -16.001941680908203
    9. '    ' → logprob: -16.251941680908203
    10. '=n' → logprob: -16.501941680908203

Token 209: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.20151127874851227
    2. ' input' → logprob: -1.701511263847351
    3. 'int' → logprob: -9.32651138305664
    4. ' int' → logprob: -11.70151138305664
    5. '   ' → logprob: -14.82651138305664
    6. '=input' → logprob: -16.07651138305664
    7. ' ' → logprob: -16.32651138305664
    8. '(input' → logprob: -16.57651138305664
    9. '	input' → logprob: -16.95151138305664
    10. '<input' → logprob: -17.57651138305664

Token 210: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -1.0564331205387134e-05
    2. 'lines' → logprob: -12.50001049041748
    3. 'Lines' → logprob: -13.25001049041748
    4. '_tokens' → logprob: -13.25001049041748
    5. '_LINES' → logprob: -13.75001049041748
    6. '```' → logprob: -14.37501049041748
    7. '[_' → logprob: -14.75001049041748
    8. '_line' → logprob: -14.87501049041748
    9. '[' → logprob: -15.25001049041748
    10. '()' → logprob: -15.87501049041748

Token 211: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.0002422779070911929
    2. '[' → logprob: -8.375242233276367
    3. ' [' → logprob: -12.875242233276367
    4. '   ' → logprob: -13.250242233276367
    5. 'idx' → logprob: -13.375242233276367
    6. '[
' → logprob: -13.625242233276367
    7. '][' → logprob: -13.875242233276367
    8. '```' → logprob: -14.000242233276367
    9. ']' → logprob: -14.500242233276367
    10. '[id' → logprob: -14.875242233276367

Token 212: '].' (ID: 1651)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05406653881072998
    2. ']
' → logprob: -3.4290666580200195
    3. '].' → logprob: -4.0540666580200195
    4. ')' → logprob: -6.4290666580200195
    5. '];' → logprob: -7.8040666580200195
    6. '.strip' → logprob: -7.8040666580200195
    7. ')
' → logprob: -9.05406665802002
    8. '])' → logprob: -9.42906665802002
    9. ' ]' → logprob: -9.55406665802002
    10. ').' → logprob: -10.17906665802002

Token 213: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -2.935296834039036e-06
    2. 'rstrip' → logprob: -12.75000286102295
    3. 'split' → logprob: -17.000003814697266
    4. 'str' → logprob: -19.000003814697266
    5. 'isdigit' → logprob: -20.375003814697266
    6. ' strip' → logprob: -21.000003814697266
    7. '_strip' → logprob: -21.125003814697266
    8. '.strip' → logprob: -21.625003814697266
    9. 'trim' → logprob: -22.500003814697266
    10. '-strip' → logprob: -22.500003814697266

Token 214: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0015054593095555902
    2. '()
' → logprob: -6.501505374908447
    3. '(' → logprob: -13.876505851745605
    4. '();' → logprob: -14.501505851745605
    5. '()\' → logprob: -14.501505851745605
    6. '()`' → logprob: -15.126505851745605
    7. '()

' → logprob: -15.251505851745605
    8. '())' → logprob: -15.251505851745605
    9. '()
' → logprob: -15.876505851745605
    10. '():' → logprob: -16.25150489807129

Token 215: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.052753694355487823
    2. '\n' → logprob: -4.052753925323486
    3. '        
' → logprob: -4.802753925323486
    4. '
' → logprob: -5.427753925323486
    5. '   ' → logprob: -5.427753925323486
    6. ' if' → logprob: -5.427753925323486
    7. '<|end|>' → logprob: -5.427753925323486
    8. 'if' → logprob: -5.552753925323486
    9. '\' → logprob: -6.552753925323486
    10. '    
' → logprob: -7.552753925323486

Token 216: ' idx' (ID: 14016)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.20842698216438293
    2. 'idx' (adapté à ' idx') → logprob: -2.4584269523620605
    3. ' if' → logprob: -2.4584269523620605
    4. 'n' → logprob: -4.2084269523620605
    5. '\n' → logprob: -6.7084269523620605
    6. ' idx' → logprob: -7.3334269523620605
    7. ' 
' → logprob: -10.083427429199219
    8. '\' → logprob: -10.083427429199219
    9. '
' → logprob: -10.458427429199219
    10. ' n' → logprob: -10.458427429199219

Token 217: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.2020946741104126
    2. ' +=' → logprob: -1.7020946741104126
    3. '+' → logprob: -7.327094554901123
    4. '=' → logprob: -10.827095031738281
    5. '++' → logprob: -13.577095031738281
    6. ']+=' → logprob: -14.827095031738281
    7. ' =' → logprob: -14.827095031738281
    8. '+='' → logprob: -14.952095031738281
    9. '```' → logprob: -15.077095031738281
    10. ' +' → logprob: -15.077095031738281

Token 218: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.611323624383658e-05
    2. ' ' → logprob: -9.625065803527832
    3. '0' → logprob: -21.37506675720215
    4. '```' → logprob: -21.62506675720215
    5. '
' → logprob: -22.12506675720215
    6. '１' → logprob: -22.37506675720215
    7. ' 
' → logprob: -22.62506675720215
    8. '`' → logprob: -23.37506675720215
    9. '   ' → logprob: -23.75006675720215
    10. 'int' → logprob: -24.00006675720215

Token 219: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '0' → logprob: -18.625
    4. '```' → logprob: -19.625
    5. '１' → logprob: -20.5
    6. '
' → logprob: -20.75
    7. '   ' → logprob: -20.875
    8. 'len' → logprob: -21.375
    9. '`' → logprob: -21.8125
    10. '``' → logprob: -22.1875

Token 220: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0019799028523266315
    2. ' if' → logprob: -7.501979827880859
    3. 'n' → logprob: -7.626979827880859
    4. 'if' → logprob: -7.751979827880859
    5. '<|end|>' → logprob: -7.751979827880859
    6. '   ' → logprob: -10.37697982788086
    7. '        
' → logprob: -10.75197982788086
    8. ' n' → logprob: -12.25197982788086
    9. '```' → logprob: -12.37697982788086
    10. 'If' → logprob: -12.75197982788086

Token 221: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.46811455488204956
    2. 'if' → logprob: -1.3431146144866943
    3. ' if' → logprob: -2.2181146144866943
    4. 'n' → logprob: -5.593114376068115
    5. ' n' → logprob: -9.218114852905273
    6. '<|end|>' → logprob: -9.843114852905273
    7. '   ' → logprob: -10.093114852905273
    8. '```' → logprob: -10.843114852905273
    9. '        
' → logprob: -11.468114852905273
    10. 'If' → logprob: -11.968114852905273

Token 222: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.002567098941653967
    2. ' if' → logprob: -6.252567291259766
    3. 'n' → logprob: -7.377567291259766
    4. '       ' → logprob: -11.502567291259766
    5. '```' → logprob: -13.627567291259766
    6. '   ' → logprob: -13.752567291259766
    7. ' n' → logprob: -14.877567291259766
    8. 'i' → logprob: -15.752567291259766
    9. '
' → logprob: -16.127567291259766
    10. 'try' → logprob: -16.252567291259766

Token 223: ' not' (ID: 625)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.14787104725837708
    2. ' not' → logprob: -2.1478710174560547
    3. 'n' → logprob: -3.8978710174560547
    4. 'not' → logprob: -7.772871017456055
    5. ' ' → logprob: -11.272871017456055
    6. 'n't' → logprob: -12.647871017456055
    7. '   ' → logprob: -13.772871017456055
    8. '	n' → logprob: -14.272871017456055
    9. ' ' → logprob: -15.272871017456055
    10. '0' → logprob: -15.272871017456055

Token 224: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10020699352025986
    2. ' n' → logprob: -2.3502070903778076
    3. '	n' → logprob: -15.475207328796387
    4. ' ' → logprob: -16.35020637512207
    5. ')n' → logprob: -17.10020637512207
    6. '(n' → logprob: -17.47520637512207
    7. '
' → logprob: -17.85020637512207
    8. '_n' → logprob: -17.85020637512207
    9. '$n' → logprob: -17.97520637512207
    10. ' н' → logprob: -18.10020637512207

Token 225: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.00018422940047457814
    2. '_' → logprob: -8.625184059143066
    3. 'line' → logprob: -13.375184059143066
    4. '_lin' → logprob: -13.375184059143066
    5. '_l' → logprob: -14.125184059143066
    6. ' _' → logprob: -15.875184059143066
    7. '_li' → logprob: -16.000185012817383
    8. '_LINE' → logprob: -16.125185012817383
    9. '_lines' → logprob: -16.250185012817383
    10. 'ine' → logprob: -16.500185012817383

Token 226: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.5812731385231018
    2. ':' → logprob: -0.8312731385231018
    3. ':
' → logprob: -5.706273078918457
    4. 'or' → logprob: -6.706273078918457
    5. '.strip' → logprob: -7.956273078918457
    6. '.is' → logprob: -8.206273078918457
    7. '.' → logprob: -9.581273078918457
    8. ':return' → logprob: -10.581273078918457
    9. '.startswith' → logprob: -11.581273078918457
    10. '=' → logprob: -12.081273078918457

Token 227: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.050066132098436356
    2. ' or' → logprob: -3.0500662326812744
    3. '       ' → logprob: -7.300065994262695
    4. ':' → logprob: -7.925065994262695
    5. '   ' → logprob: -8.675065994262695
    6. ':
' → logprob: -8.800065994262695
    7. ' continue' → logprob: -10.675065994262695
    8. ' break' → logprob: -10.925065994262695
    9. '0' → logprob: -11.300065994262695
    10. '          ' → logprob: -11.300065994262695

Token 228: ' continue' (ID: 4901)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.2903589904308319
    2. ' break' → logprob: -2.0403590202331543
    3. 'continue' (adapté à ' continue') → logprob: -2.5403590202331543
    4. '           ' → logprob: -3.7903590202331543
    5. ' continue' → logprob: -3.9153590202331543
    6. '       ' → logprob: -7.415359020233154
    7. '```' → logprob: -10.790358543395996
    8. '   ' → logprob: -10.915358543395996
    9. '	break' → logprob: -11.415358543395996
    10. 'return' → logprob: -12.290358543395996

Token 229: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002134556183591485
    2. 'n' → logprob: -6.252134323120117
    3. '
' → logprob: -9.127134323120117
    4. '        
' → logprob: -9.877134323120117
    5. '<|end|>' → logprob: -10.502134323120117
    6. ' n' → logprob: -11.627134323120117
    7. '   ' → logprob: -13.002134323120117
    8. '  
' → logprob: -13.752134323120117
    9. '0' → logprob: -13.877134323120117
    10. ',' → logprob: -14.252134323120117

Token 230: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22912311553955078
    2. 'n' → logprob: -1.7291231155395508
    3. ' n' → logprob: -3.604123115539551
    4. '   ' → logprob: -9.47912311553955
    5. 'if' → logprob: -11.22912311553955
    6. ' if' → logprob: -11.35412311553955
    7. '```' → logprob: -11.72912311553955
    8. '	n' → logprob: -12.47912311553955
    9. 'try' → logprob: -13.72912311553955
    10. '        
' → logprob: -14.10412311553955

Token 231: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.0001684981834841892
    2. ' n' → logprob: -8.750168800354004
    3. 'if' → logprob: -12.000168800354004
    4. 'try' → logprob: -13.250168800354004
    5. ' if' → logprob: -14.125168800354004
    6. '       ' → logprob: -14.875168800354004
    7. '```' → logprob: -15.000168800354004
    8. '   ' → logprob: -15.125168800354004
    9. 'num' → logprob: -15.375168800354004
    10. '
' → logprob: -16.250167846679688

Token 232: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02327343262732029
    2. '=' → logprob: -3.773273468017578
    3. '=int' → logprob: -10.773273468017578
    4. ' ' → logprob: -12.773273468017578
    5. ',' → logprob: -13.023273468017578
    6. ' =
' → logprob: -14.273273468017578
    7. ')' → logprob: -14.523273468017578
    8. ' ==' → logprob: -15.398273468017578
    9. ' =)' → logprob: -16.398273468017578
    10. '   ' → logprob: -16.523273468017578

Token 233: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.011047814972698689
    2. ' int' → logprob: -4.511047840118408
    3. '(int' → logprob: -20.88604736328125
    4. '=int' → logprob: -21.63604736328125
    5. '[int' → logprob: -21.63604736328125
    6. '<int' → logprob: -23.01104736328125
    7. ' ' → logprob: -23.26104736328125
    8. '	int' → logprob: -23.38604736328125
    9. ':int' → logprob: -24.26104736328125
    10. '   ' → logprob: -24.26104736328125

Token 234: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0007124318508431315
    2. '(' → logprob: -7.2507123947143555
    3. 'n' → logprob: -13.250712394714355
    4. ' (' → logprob: -15.000712394714355
    5. '(
' → logprob: -15.500712394714355
    6. ' n' → logprob: -16.000713348388672
    7. '((' → logprob: -19.625713348388672
    8. ')n' → logprob: -19.750713348388672
    9. '	n' → logprob: -19.750713348388672
    10. ')' → logprob: -20.125713348388672

Token 235: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -9.329167369287461e-05
    2. 'line' → logprob: -10.125093460083008
    3. ')' → logprob: -10.250093460083008
    4. '_l' → logprob: -12.000093460083008
    5. '[line' → logprob: -13.125093460083008
    6. '_LINE' → logprob: -13.250093460083008
    7. 'Line' → logprob: -13.500093460083008
    8. '_' → logprob: -13.625093460083008
    9. '_lin' → logprob: -13.625093460083008
    10. '_lines' → logprob: -14.125093460083008

Token 236: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008121283026412129
    2. ')
' → logprob: -7.12581205368042
    3. '       ' → logprob: -12.750812530517578
    4. '<|end|>' → logprob: -13.000812530517578
    5. ' )' → logprob: -13.625812530517578
    6. ')#' → logprob: -15.750812530517578
    7. '<|end|>' → logprob: -16.000812530517578
    8. '   ' → logprob: -16.125812530517578
    9. ')>' → logprob: -16.125812530517578
    10. ')return' → logprob: -16.250812530517578

Token 237: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027105232700705528
    2. ' if' → logprob: -3.7771053314208984
    3. 'if' → logprob: -5.652105331420898
    4. '<|end|>' → logprob: -8.277105331420898
    5. '   ' → logprob: -10.277105331420898
    6. '        
' → logprob: -11.152105331420898
    7. '```' → logprob: -11.652105331420898
    8. '	if' → logprob: -11.652105331420898
    9. 'If' → logprob: -12.527105331420898
    10. '<|end|>' → logprob: -12.652105331420898

Token 238: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6017762422561646
    2. 'if' (adapté à ' if') → logprob: -0.8517762422561646
    3. '       ' → logprob: -3.976776123046875
    4. 'points' → logprob: -5.476776123046875
    5. ' points' → logprob: -5.976776123046875
    6. '   ' → logprob: -11.101776123046875
    7. '	if' → logprob: -12.101776123046875
    8. 'If' → logprob: -12.476776123046875
    9. '        
' → logprob: -12.851776123046875
    10. '```' → logprob: -12.976776123046875

Token 239: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0067156096920371056
    2. 'n' → logprob: -5.006715774536133
    3. ' not' → logprob: -15.631715774536133
    4. '0' → logprob: -16.381715774536133
    5. ' ' → logprob: -17.006715774536133
    6. '	n' → logprob: -18.256715774536133
    7. ' ' → logprob: -18.506715774536133
    8. '   ' → logprob: -19.881715774536133
    9. ' н' → logprob: -19.881715774536133
    10. 'n't' → logprob: -20.506715774536133

Token 240: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.08025986701250076
    2. '==' → logprob: -2.5802597999572754
    3. ' <=' → logprob: -6.705259799957275
    4. '<=' → logprob: -9.955260276794434
    5. '=' → logprob: -10.080260276794434
    6. ')' → logprob: -10.580260276794434
    7. ' =' → logprob: -10.955260276794434
    8. ' ' → logprob: -12.205260276794434
    9. ')==' → logprob: -13.205260276794434
    10. '0' → logprob: -13.205260276794434

Token 241: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000488110730657354
    2. ' ' → logprob: -7.62548828125
    3. '۰' → logprob: -18.12548828125
    4. '   ' → logprob: -18.87548828125
    5. '-' → logprob: -19.12548828125
    6. '  ' → logprob: -19.37548828125
    7. '_' → logprob: -20.06298828125
    8. '０' → logprob: -20.12548828125
    9. ' -' → logprob: -20.43798828125
    10. '٠' → logprob: -20.43798828125

Token 242: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. '-' → logprob: -19.12501335144043
    4. '۰' → logprob: -19.12501335144043
    5. '```' → logprob: -19.37501335144043
    6. ')' → logprob: -20.56251335144043
    7. '  ' → logprob: -21.25001335144043
    8. ' -' → logprob: -21.37501335144043
    9. '   ' → logprob: -21.43751335144043
    10. '０' → logprob: -21.43751335144043

Token 243: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16030007600784302
    2. ':
' → logprob: -1.9103000164031982
    3. '       ' → logprob: -10.160300254821777
    4. '   ' → logprob: -10.910300254821777
    5. '           ' → logprob: -11.410300254821777
    6. ':return' → logprob: -12.160300254821777
    7. ':
' → logprob: -14.535300254821777
    8. ' :' → logprob: -14.660300254821777
    9. '):
' → logprob: -14.785300254821777
    10. ' :
' → logprob: -14.910300254821777

Token 244: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.935296834039036e-06
    2. '       ' → logprob: -13.87500286102295
    3. '          ' → logprob: -14.37500286102295
    4. ' break' → logprob: -14.50000286102295
    5. '		' → logprob: -15.00000286102295
    6. '               ' → logprob: -15.75000286102295
    7. '   ' → logprob: -16.250003814697266
    8. '	       ' → logprob: -16.500003814697266
    9. 'break' → logprob: -16.625003814697266
    10. '            ' → logprob: -16.875003814697266

Token 245: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.2200000286102295
    2. 'break' (adapté à ' break') → logprob: -1.7200000286102295
    3. '           ' → logprob: -4.220000267028809
    4. 'return' → logprob: -6.220000267028809
    5. '       ' → logprob: -6.720000267028809
    6. ' return' → logprob: -7.970000267028809
    7. '	break' → logprob: -8.720000267028809
    8. '   ' → logprob: -12.095000267028809
    9. '               ' → logprob: -12.470000267028809
    10. '_break' → logprob: -14.345000267028809

Token 246: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01575126126408577
    2. '<|end|>' → logprob: -4.390751361846924
    3. '        
' → logprob: -6.265751361846924
    4. '   ' → logprob: -7.765751361846924
    5. '    
' → logprob: -8.765750885009766
    6. ',' → logprob: -8.765750885009766
    7. '	' → logprob: -9.515750885009766
    8. '
' → logprob: -9.515750885009766
    9. '<|end|>' → logprob: -9.640750885009766
    10. ' points' → logprob: -9.765750885009766

Token 247: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4227339029312134
    2. ' points' → logprob: -1.1727339029312134
    3. 'points' → logprob: -3.547733783721924
    4. '	points' → logprob: -5.547733783721924
    5. '   ' → logprob: -6.297733783721924
    6. '_points' → logprob: -8.922734260559082
    7. '```' → logprob: -9.047734260559082
    8. '(points' → logprob: -9.172734260559082
    9. '        
' → logprob: -9.547734260559082
    10. ' pts' → logprob: -9.797734260559082

Token 248: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' (adapté à ' points') → logprob: -0.4426501989364624
    2. ' points' → logprob: -1.0676501989364624
    3. '       ' → logprob: -4.317650318145752
    4. '	points' → logprob: -8.567649841308594
    5. 'pts' → logprob: -8.692649841308594
    6. '   ' → logprob: -9.817649841308594
    7. ' pts' → logprob: -10.192649841308594
    8. '(points' → logprob: -10.692649841308594
    9. '```' → logprob: -10.942649841308594
    10. '_points' → logprob: -11.067649841308594

Token 249: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38688066601753235
    2. '=' → logprob: -1.13688063621521
    3. '=[]' → logprob: -11.636880874633789
    4. '.' → logprob: -15.386880874633789
    5. '<|end|>' → logprob: -15.761880874633789
    6. ')' → logprob: -16.13688087463379
    7. ',' → logprob: -16.38688087463379
    8. '=[]
' → logprob: -16.76188087463379
    9. ' ' → logprob: -16.88688087463379
    10. '.append' → logprob: -17.38688087463379

Token 250: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0005993809318169951
    2. '[' → logprob: -7.500599384307861
    3. ' []' → logprob: -10.500598907470703
    4. '[]
' → logprob: -11.625598907470703
    5. '[int' → logprob: -13.125598907470703
    6. '[]>' → logprob: -13.500598907470703
    7. '[]}' → logprob: -13.750598907470703
    8. '[p' → logprob: -14.250598907470703
    9. '[]=' → logprob: -14.250598907470703
    10. '[user' → logprob: -14.375598907470703

Token 251: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7764848470687866
    2. ' for' → logprob: -1.2764848470687866
    3. '<|end|>' → logprob: -1.5264848470687866
    4. '   ' → logprob: -3.901484966278076
    5. 'for' → logprob: -4.151484966278076
    6. '	for' → logprob: -5.276484966278076
    7. ' ' → logprob: -7.151484966278076
    8. '<|end|>' → logprob: -7.526484966278076
    9. '  ' → logprob: -8.651484489440918
    10. '        
' → logprob: -8.776484489440918

Token 252: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.12776869535446167
    2. ' for' → logprob: -2.1277687549591064
    3. '       ' → logprob: -7.377768516540527
    4. '	for' → logprob: -8.627768516540527
    5. '   ' → logprob: -10.252768516540527
    6. ' ' → logprob: -14.752768516540527
    7. '```' → logprob: -15.627768516540527
    8. '	' → logprob: -15.877768516540527
    9. '
' → logprob: -16.252769470214844
    10. '<|end|>' → logprob: -17.252769470214844

Token 253: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0025288143660873175
    2. '_i' → logprob: -6.002528667449951
    3. ' _' → logprob: -10.00252914428711
    4. 'i' → logprob: -11.87752914428711
    5. ' i' → logprob: -14.12752914428711
    6. '_in' → logprob: -16.00252914428711
    7. '_line' → logprob: -18.25252914428711
    8. '_j' → logprob: -18.62752914428711
    9. '_range' → logprob: -18.87752914428711
    10. '_token' → logprob: -19.25252914428711

Token 254: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023311281576752663
    2. 'in' → logprob: -3.7733113765716553
    3. 'range' → logprob: -9.773311614990234
    4. 'i' → logprob: -12.398311614990234
    5. ' ' → logprob: -13.273311614990234
    6. ' range' → logprob: -13.398311614990234
    7. '  ' → logprob: -14.148311614990234
    8. '	in' → logprob: -15.773311614990234
    9. '0' → logprob: -15.898311614990234
    10. ' i' → logprob: -16.148311614990234

Token 255: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0002715873415581882
    2. ' range' → logprob: -8.250271797180176
    3. 'points' → logprob: -11.500271797180176
    4. '	range' → logprob: -16.25027084350586
    5. '(range' → logprob: -17.00027084350586
    6. 'ange' → logprob: -17.62527084350586
    7. '```' → logprob: -17.62527084350586
    8. '   ' → logprob: -18.00027084350586
    9. ')' → logprob: -18.12527084350586
    10. ' ' → logprob: -18.62527084350586

Token 256: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0018531967652961612
    2. 'n' → logprob: -6.626852989196777
    3. '(' → logprob: -8.126852989196777
    4. ' n' → logprob: -8.876852989196777
    5. ' (' → logprob: -9.376852989196777
    6. '(range' → logprob: -13.376852989196777
    7. ' range' → logprob: -13.501852989196777
    8. '	n' → logprob: -13.751852989196777
    9. '(
' → logprob: -13.751852989196777
    10. 'range' → logprob: -14.376852989196777

Token 257: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6934124827384949
    2. '):' → logprob: -0.6934124827384949
    3. '   ' → logprob: -9.443412780761719
    4. '       ' → logprob: -9.568412780761719
    5. ':' → logprob: -9.943412780761719
    6. ':
' → logprob: -10.818412780761719
    7. '):
' → logprob: -11.193412780761719
    8. '<|end|>' → logprob: -11.568412780761719
    9. '():
' → logprob: -12.068412780761719
    10. ',' → logprob: -12.818412780761719

Token 258: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7444818615913391
    2. '       ' → logprob: -0.8694818615913391
    3. '   ' → logprob: -2.7444818019866943
    4. '<|end|>' → logprob: -3.3694818019866943
    5. ' points' → logprob: -6.369482040405273
    6. '<|end|>' → logprob: -6.744482040405273
    7. '	   ' → logprob: -7.494482040405273
    8. '```' → logprob: -7.494482040405273
    9. '    
' → logprob: -7.619482040405273
    10. '	       ' → logprob: -7.869482040405273

Token 259: ' line' (ID: 2543)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.20280705392360687
    2. 'x' → logprob: -1.702807068824768
    3. '           ' → logprob: -7.3278069496154785
    4. ' line' → logprob: -7.9528069496154785
    5. 'xy' → logprob: -8.827807426452637
    6. ' xy' → logprob: -9.452807426452637
    7. 'line' (adapté à ' line') → logprob: -10.202807426452637
    8. ' parts' → logprob: -10.327807426452637
    9. ' coords' → logprob: -10.952807426452637
    10. '       ' → logprob: -11.327807426452637

Token 260: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.002193563850596547
    2. '=' → logprob: -6.127193450927734
    3. 'tokens' → logprob: -13.002193450927734
    4. '_tokens' → logprob: -13.127193450927734
    5. '=line' → logprob: -13.502193450927734
    6. ' ' → logprob: -14.127193450927734
    7. '<|end|>' → logprob: -14.502193450927734
    8. 's' → logprob: -14.627193450927734
    9. ' =
' → logprob: -14.877193450927734
    10. '   ' → logprob: -15.627193450927734

Token 261: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.31326186656951904
    2. 'input' → logprob: -1.313261866569519
    3. '   ' → logprob: -16.813261032104492
    4. '	input' → logprob: -17.063261032104492
    5. ' ' → logprob: -18.063261032104492
    6. '=input' → logprob: -18.438261032104492
    7. '(input' → logprob: -18.563261032104492
    8. '    ' → logprob: -19.438261032104492
    9. '_input' → logprob: -19.563261032104492
    10. ',input' → logprob: -20.188261032104492

Token 262: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -4.723352049040841e-06
    2. 'lines' → logprob: -12.625004768371582
    3. '(lines' → logprob: -14.750004768371582
    4. '_line' → logprob: -14.875004768371582
    5. 'Lines' → logprob: -15.000004768371582
    6. '_' → logprob: -16.375003814697266
    7. '_LINES' → logprob: -16.500003814697266
    8. ' lines' → logprob: -16.875003814697266
    9. '	lines' → logprob: -16.875003814697266
    10. '_points' → logprob: -17.000003814697266

Token 263: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -6.988221684878226e-06
    2. 'idx' → logprob: -12.750006675720215
    3. '[' → logprob: -13.125006675720215
    4. ' [' → logprob: -14.000006675720215
    5. '[index' → logprob: -14.500006675720215
    6. '[id' → logprob: -15.250006675720215
    7. ' idx' → logprob: -15.375006675720215
    8. '[ind' → logprob: -16.12500762939453
    9. '(idx' → logprob: -16.50000762939453
    10. '   ' → logprob: -17.25000762939453

Token 264: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0006463141762651503
    2. ']' → logprob: -7.375646114349365
    3. '.strip' → logprob: -11.375646591186523
    4. ' ].' → logprob: -12.000646591186523
    5. ']
' → logprob: -14.000646591186523
    6. '()].' → logprob: -14.875646591186523
    7. '().' → logprob: -15.125646591186523
    8. ''].' → logprob: -15.500646591186523
    9. '"].' → logprob: -16.000646591186523
    10. ').' → logprob: -16.125646591186523

Token 265: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -5.512236498361744e-07
    2. 'split' → logprob: -14.500000953674316
    3. 'rstrip' → logprob: -17.125
    4. ' strip' → logprob: -18.375
    5. '.strip' → logprob: -18.5
    6. '_strip' → logprob: -20.625
    7. 'str' → logprob: -22.0
    8. '(strip' → logprob: -22.875
    9. 'trim' → logprob: -23.25
    10. 'stripe' → logprob: -23.625

Token 266: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0030129998922348022
    2. '()
' → logprob: -6.1280131340026855
    3. '       ' → logprob: -8.128012657165527
    4. ')' → logprob: -8.628012657165527
    5. '<|end|>' → logprob: -8.753012657165527
    6. '           ' → logprob: -9.128012657165527
    7. '()\' → logprob: -10.878012657165527
    8. '())' → logprob: -11.003012657165527
    9. '();' → logprob: -11.253012657165527
    10. '<|end|>' → logprob: -12.003012657165527

Token 267: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.26264962553977966
    2. '<|end|>' → logprob: -1.637649655342102
    3. '       ' → logprob: -4.2626495361328125
    4. '<|end|>' → logprob: -5.2626495361328125
    5. '   ' → logprob: -5.5126495361328125
    6. ' 
' → logprob: -5.8876495361328125
    7. ' idx' → logprob: -5.8876495361328125
    8. ' ' → logprob: -6.5126495361328125
    9. 'idx' → logprob: -6.5126495361328125
    10. '            
' → logprob: -6.7626495361328125

Token 268: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.1196928471326828
    2. ' idx' → logprob: -2.369692802429199
    3. 'points' → logprob: -4.119692802429199
    4. ' points' → logprob: -6.119692802429199
    5. 'x' → logprob: -7.869692802429199
    6. '       ' → logprob: -8.6196928024292
    7. '   ' → logprob: -9.3696928024292
    8. '	idx' → logprob: -9.7446928024292
    9. '           ' → logprob: -10.2446928024292
    10. 'p' → logprob: -10.4946928024292

Token 269: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.20142006874084473
    2. ' +=' → logprob: -1.7014200687408447
    3. '   ' → logprob: -12.951419830322266
    4. ']+=' → logprob: -13.451419830322266
    5. '=' → logprob: -14.326419830322266
    6. '+' → logprob: -14.326419830322266
    7. '```' → logprob: -14.576419830322266
    8. '           ' → logprob: -15.076419830322266
    9. ')' → logprob: -15.076419830322266
    10. '       ' → logprob: -15.076419830322266

Token 270: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019286326132714748
    2. ' ' → logprob: -6.251928806304932
    3. '```' → logprob: -17.126928329467773
    4. '   ' → logprob: -18.501928329467773
    5. '           ' → logprob: -18.751928329467773
    6. '１' → logprob: -19.126928329467773
    7. '0' → logprob: -19.251928329467773
    8. ')' → logprob: -19.251928329467773
    9. ' )' → logprob: -19.376928329467773
    10. ' ' → logprob: -19.564428329467773

Token 271: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '```' → logprob: -18.625009536743164
    4. '   ' → logprob: -20.250009536743164
    5. '１' → logprob: -20.250009536743164
    6. '
' → logprob: -21.375009536743164
    7. '0' → logprob: -22.062509536743164
    8. '۱' → logprob: -22.437509536743164
    9. '2' → logprob: -22.812509536743164
    10. '3' → logprob: -22.937509536743164

Token 272: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08215838670730591
    2. '       ' → logprob: -3.332158327102661
    3. '   ' → logprob: -4.08215856552124
    4. ',' → logprob: -4.58215856552124
    5. '<|end|>' → logprob: -5.33215856552124
    6. ' points' → logprob: -5.45715856552124
    7. ' ,' → logprob: -5.95715856552124
    8. ' parts' → logprob: -7.45715856552124
    9. 'points' → logprob: -7.58215856552124
    10. '	points' → logprob: -7.70715856552124

Token 273: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6768065094947815
    2. '           ' → logprob: -1.5518064498901367
    3. ' points' → logprob: -2.5518064498901367
    4. '<|end|>' → logprob: -2.8018064498901367
    5. ',' → logprob: -3.0518064498901367
    6. 'points' → logprob: -3.6768064498901367
    7. ' ,' → logprob: -3.9268064498901367
    8. '   ' → logprob: -4.301806449890137
    9. ' coordinates' → logprob: -4.926806449890137
    10. '	points' → logprob: -5.051806449890137

Token 274: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.0026681653689593077
    2. ' x' → logprob: -6.127668380737305
    3. 'points' → logprob: -7.752668380737305
    4. 'parts' → logprob: -10.627668380737305
    5. ' points' → logprob: -11.627668380737305
    6. '       ' → logprob: -12.252668380737305
    7. '           ' → logprob: -12.252668380737305
    8. ' parts' → logprob: -12.627668380737305
    9. 'coords' → logprob: -12.627668380737305
    10. 'xy' → logprob: -13.877668380737305

Token 275: '_str' (ID: 6182)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005691178957931697
    2. ',y' → logprob: -7.5005693435668945
    3. ' ,' → logprob: -11.375569343566895
    4. ',int' → logprob: -14.000569343566895
    5. '<|end|>' → logprob: -14.375569343566895
    6. '‌,' → logprob: -14.750569343566895
    7. ',
' → logprob: -15.000569343566895
    8. ',x' → logprob: -15.000569343566895
    9. 'y' → logprob: -15.500569343566895
    10. ',num' → logprob: -15.625569343566895

Token 276: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017672323156148195
    2. ',x' → logprob: -9.625176429748535
    3. ' ,' → logprob: -10.000176429748535
    4. ',y' → logprob: -10.500176429748535
    5. '=' → logprob: -10.750176429748535
    6. ',s' → logprob: -13.250176429748535
    7. ',v' → logprob: -13.375176429748535
    8. ',n' → logprob: -13.625176429748535
    9. ',p' → logprob: -13.750176429748535
    10. ',t' → logprob: -13.750176429748535

Token 277: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.061967797577381134
    2. ' y' → logprob: -2.8119678497314453
    3. '	y' → logprob: -15.811967849731445
    4. ' ' → logprob: -16.936967849731445
    5. ',y' → logprob: -17.811967849731445
    6. ''y' → logprob: -18.186967849731445
    7. '<|end|>' → logprob: -18.561967849731445
    8. 'space' → logprob: -18.811967849731445
    9. '_y' → logprob: -18.936967849731445
    10. 'yb' → logprob: -19.061967849731445

Token 278: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.2522212862968445
    2. '=' → logprob: -1.6272213459014893
    3. '_' → logprob: -4.37722110748291
    4. ' =' → logprob: -4.50222110748291
    5. '<|end|>' → logprob: -7.00222110748291
    6. '_=' → logprob: -7.12722110748291
    7. ',' → logprob: -8.12722110748291
    8. 'str' → logprob: -8.25222110748291
    9. '=line' → logprob: -9.12722110748291
    10. '_token' → logprob: -9.62722110748291

Token 279: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.009756443090736866
    2. ' =' → logprob: -4.634756565093994
    3. ' ' → logprob: -16.134756088256836
    4. '=
' → logprob: -16.259756088256836
    5. ',' → logprob: -16.634756088256836
    6. '<|end|>' → logprob: -16.634756088256836
    7. '=line' → logprob: -17.009756088256836
    8. ')=' → logprob: -18.009756088256836
    9. '=}' → logprob: -18.009756088256836
    10. '=

' → logprob: -18.134756088256836

Token 280: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.3868718445301056
    2. ' line' → logprob: -1.1368718147277832
    3. '=line' → logprob: -14.261872291564941
    4. '	line' → logprob: -16.636871337890625
    5. '(line' → logprob: -16.636871337890625
    6. '[line' → logprob: -16.886871337890625
    7. ' ' → logprob: -19.386871337890625
    8. '#line' → logprob: -20.011871337890625
    9. 'Line' → logprob: -20.011871337890625
    10. 'x' → logprob: -20.136871337890625

Token 281: '.split' (ID: 10347)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -8.518582762917504e-05
    2. ' =' → logprob: -9.37508487701416
    3. '=
' → logprob: -15.25008487701416
    4. '=}' → logprob: -18.125085830688477
    5. '=line' → logprob: -18.750085830688477
    6. '=

' → logprob: -18.750085830688477
    7. ')=' → logprob: -18.875085830688477
    8. '.=' → logprob: -19.875085830688477
    9. '＝' → logprob: -20.000085830688477
    10. 'split' → logprob: -20.250085830688477

Token 282: '(',')
' (ID: 161318)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0005359939532354474
    2. '(' → logprob: -8.12553596496582
    3. '('' → logprob: -8.62553596496582
    4. '()
' → logprob: -10.87553596496582
    5. '()]' → logprob: -11.00053596496582
    6. '())' → logprob: -11.87553596496582
    7. '(',' → logprob: -12.50053596496582
    8. '()

' → logprob: -13.12553596496582
    9. '()='' → logprob: -13.12553596496582
    10. '(None' → logprob: -14.00053596496582

Token 283: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5121501088142395
    2. '<|end|>' → logprob: -1.2621500492095947
    3. 'x' → logprob: -3.0121500492095947
    4. ' x' → logprob: -4.012150287628174
    5. ',' → logprob: -4.387150287628174
    6. ' ' → logprob: -5.137150287628174
    7. '       ' → logprob: -5.262150287628174
    8. '            
' → logprob: -5.262150287628174
    9. '<|end|>' → logprob: -5.637150287628174
    10. ',x' → logprob: -5.887150287628174

Token 284: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.0183558389544487
    2. 'x' (adapté à ' x') → logprob: -4.018355846405029
    3. ' points' → logprob: -9.143355369567871
    4. '       ' → logprob: -10.018355369567871
    5. '           ' → logprob: -10.393355369567871
    6. 'points' → logprob: -11.143355369567871
    7. '   ' → logprob: -12.268355369567871
    8. ' 
' → logprob: -13.768355369567871
    9. ' ' → logprob: -14.018355369567871
    10. '    ' → logprob: -14.268355369567871

Token 285: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14597870409488678
    2. ' =' → logprob: -2.1459786891937256
    3. ',' → logprob: -4.020978927612305
    4. '=int' → logprob: -7.020978927612305
    5. '<|end|>' → logprob: -10.895978927612305
    6. ')' → logprob: -12.145978927612305
    7. ' ' → logprob: -12.270978927612305
    8. ' ,' → logprob: -12.395978927612305
    9. '=float' → logprob: -13.645978927612305
    10. ',int' → logprob: -13.645978927612305

Token 286: ' float' (ID: 4428)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0009716100175864995
    2. ' int' → logprob: -7.250971794128418
    3. 'float' → logprob: -8.250971794128418
    4. ' float' → logprob: -14.250971794128418
    5. '   ' → logprob: -20.8759708404541
    6. '[int' → logprob: -21.6259708404541
    7. '	int' → logprob: -22.0009708404541
    8. '(int' → logprob: -22.2509708404541
    9. '  ' → logprob: -22.5009708404541
    10. '<int' → logprob: -22.7509708404541

Token 287: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0009182471549138427
    2. '(' → logprob: -7.000918388366699
    3. 'x' → logprob: -12.7509183883667
    4. '(
' → logprob: -13.1259183883667
    5. ' (' → logprob: -13.2509183883667
    6. '(y' → logprob: -16.375917434692383
    7. ')' → logprob: -18.375917434692383
    8. '
' → logprob: -19.000917434692383
    9. '((' → logprob: -19.000917434692383
    10. ' x' → logprob: -19.625917434692383

Token 288: '_str' (ID: 6182)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.011103594675660133
    2. 'x' → logprob: -4.886103630065918
    3. ')' → logprob: -6.011103630065918
    4. '(' → logprob: -7.011103630065918
    5. ')x' → logprob: -9.886103630065918
    6. '(
' → logprob: -10.636103630065918
    7. ')(' → logprob: -11.011103630065918
    8. ',' → logprob: -11.511103630065918
    9. ' x' → logprob: -11.636103630065918
    10. ',x' → logprob: -12.011103630065918

Token 289: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004822697374038398
    2. ')
' → logprob: -7.750482082366943
    3. ',' → logprob: -10.625482559204102
    4. '<|end|>' → logprob: -11.000482559204102
    5. ' )' → logprob: -12.125482559204102
    6. '),' → logprob: -13.500482559204102
    7. ')x' → logprob: -13.625482559204102
    8. '   ' → logprob: -14.875482559204102
    9. '           ' → logprob: -15.125482559204102
    10. '<|end|>' → logprob: -15.625482559204102

Token 290: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 291: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.3132643401622772
    2. ' y' → logprob: -1.3132643699645996
    3. ' ' → logprob: -13.688263893127441
    4. ',y' → logprob: -14.688263893127441
    5. '<|end|>' → logprob: -14.938263893127441
    6. '	y' → logprob: -15.188263893127441
    7. ' ' → logprob: -15.938263893127441
    8. ')y' → logprob: -16.688264846801758
    9. 'x' → logprob: -16.938264846801758
    10. ' 
' → logprob: -16.938264846801758

Token 292: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02567516453564167
    2. ')' → logprob: -4.275675296783447
    3. ' =' → logprob: -5.025675296783447
    4. '<|end|>' → logprob: -5.400675296783447
    5. ',' → logprob: -8.150674819946289
    6. ')=' → logprob: -10.650674819946289
    7. '<|end|>' → logprob: -11.275674819946289
    8. '=float' → logprob: -11.400674819946289
    9. '=True' → logprob: -11.775674819946289
    10. '_' → logprob: -12.775674819946289

Token 293: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.029751643538475037
    2. ' float' → logprob: -3.5297515392303467
    3. '=float' → logprob: -14.529751777648926
    4. '	float' → logprob: -15.279751777648926
    5. '(float' → logprob: -15.279751777648926
    6. '<float' → logprob: -15.779751777648926
    7. ',float' → logprob: -17.52975082397461
    8. '.float' → logprob: -18.02975082397461
    9. '_float' → logprob: -18.40475082397461
    10. 'loat' → logprob: -19.52975082397461

Token 294: '(y' (ID: 14684)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.04249182716012001
    2. '(float' → logprob: -3.292491912841797
    3. ' float' → logprob: -5.917491912841797
    4. '(y' → logprob: -6.417491912841797
    5. ' y' → logprob: -9.792491912841797
    6. 'y' → logprob: -10.417491912841797
    7. '=float' → logprob: -10.917491912841797
    8. ')' → logprob: -13.167491912841797
    9. ',float' → logprob: -13.167491912841797
    10. '<float' → logprob: -13.292491912841797

Token 295: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.0001984146365430206
    2. ')' → logprob: -8.875198364257812
    3. 'str' → logprob: -9.875198364257812
    4. '-str' → logprob: -13.375198364257812
    5. '_STR' → logprob: -14.000198364257812
    6. '<|end|>' → logprob: -14.000198364257812
    7. 'Str' → logprob: -14.125198364257812
    8. ')_' → logprob: -14.375198364257812
    9. '```' → logprob: -14.625198364257812
    10. '-' → logprob: -15.000198364257812

Token 296: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004497381451074034
    2. ')
' → logprob: -7.8754496574401855
    3. '           ' → logprob: -9.750450134277344
    4. '       ' → logprob: -12.125450134277344
    5. '<|end|>' → logprob: -12.500450134277344
    6. ' )' → logprob: -14.875450134277344
    7. '   ' → logprob: -15.375450134277344
    8. '),' → logprob: -15.500450134277344
    9. '               ' → logprob: -15.500450134277344
    10. '<|end|>' → logprob: -15.750450134277344

Token 297: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06749453395605087
    2. '<|end|>' → logprob: -3.6924946308135986
    3. '       ' → logprob: -3.9424946308135986
    4. ')' → logprob: -5.0674943923950195
    5. ',' → logprob: -5.3174943923950195
    6. '   ' → logprob: -6.1924943923950195
    7. '(points' → logprob: -6.3174943923950195
    8. ' points' → logprob: -6.6924943923950195
    9. '	points' → logprob: -6.6924943923950195
    10. 'points' → logprob: -7.3174943923950195

Token 298: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' (adapté à ' points') → logprob: -0.25203490257263184
    2. ' points' → logprob: -1.5020349025726318
    3. '           ' → logprob: -9.377035140991211
    4. '       ' → logprob: -11.627035140991211
    5. '	points' → logprob: -11.627035140991211
    6. '(points' → logprob: -12.877035140991211
    7. '_points' → logprob: -15.127035140991211
    8. '   ' → logprob: -15.627035140991211
    9. '.points' → logprob: -15.752035140991211
    10. 'point' → logprob: -16.50203514099121

Token 299: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0007115975022315979
    2. '.' → logprob: -7.250711441040039
    3. '.push' → logprob: -14.750711441040039
    4. 'append' → logprob: -14.750711441040039
    5. '.Append' → logprob: -14.875711441040039
    6. '.extend' → logprob: -15.750711441040039
    7. '.app' → logprob: -16.00071144104004
    8. '.add' → logprob: -16.50071144104004
    9. '.ap' → logprob: -16.62571144104004
    10. ').' → logprob: -17.87571144104004

Token 300: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0011720098555088043
    2. '(' → logprob: -6.751172065734863
    3. '(x' → logprob: -13.251172065734863
    4. '([' → logprob: -16.876171112060547
    5. '(
' → logprob: -18.876171112060547
    6. ' ((' → logprob: -18.876171112060547
    7. ' (' → logprob: -19.251171112060547
    8. '(('' → logprob: -19.751171112060547
    9. '[(' → logprob: -20.001171112060547
    10. ' ' → logprob: -20.626171112060547

Token 301: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -5.512236498361744e-07
    2. ' x' → logprob: -14.500000953674316
    3. '(x' → logprob: -19.375
    4. '   ' → logprob: -19.875
    5. ')x' → logprob: -21.125
    6. ' ' → logprob: -21.75
    7. '	x' → logprob: -22.0
    8. 'float' → logprob: -22.125
    9. ')' → logprob: -22.5
    10. '
' → logprob: -22.75

Token 302: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.23917081207037e-05
    2. ',y' → logprob: -10.375041961669922
    3. ' ,' → logprob: -11.875041961669922
    4. ',
' → logprob: -12.500041961669922
    5. '<|end|>' → logprob: -15.750041961669922
    6. ',x' → logprob: -16.000041961669922
    7. '‌,' → logprob: -16.875041961669922
    8. ')' → logprob: -17.125041961669922
    9. ',

' → logprob: -18.000041961669922
    10. ',user' → logprob: -18.250041961669922

Token 303: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02324908785521984
    2. '))' → logprob: -3.7732491493225098
    3. ')
' → logprob: -12.648248672485352
    4. '))
' → logprob: -15.148248672485352
    5. ')))' → logprob: -16.39824867248535
    6. ')}' → logprob: -17.02324867248535
    7. ' )' → logprob: -17.27324867248535
    8. '),' → logprob: -18.64824867248535
    9. ')**' → logprob: -19.14824867248535
    10. '       ' → logprob: -19.27324867248535

Token 304: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 305: ' hull' (ID: 74912)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.06395697593688965
    2. ' hull' → logprob: -2.8139569759368896
    3. '   ' → logprob: -7.188957214355469
    4. '       ' → logprob: -7.563957214355469
    5. ' h' → logprob: -8.563957214355469
    6. '```' → logprob: -8.813957214355469
    7. 'ch' → logprob: -9.813957214355469
    8. '	h' → logprob: -9.813957214355469
    9. 'hul' → logprob: -9.813957214355469
    10. ' if' → logprob: -10.563957214355469

Token 306: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06196846812963486
    2. '=' → logprob: -2.8119685649871826
    3. ')' → logprob: -14.436968803405762
    4. '_points' → logprob: -16.436967849731445
    5. 's' → logprob: -16.811967849731445
    6. ' ' → logprob: -17.186967849731445
    7. ' =
' → logprob: -17.561967849731445
    8. '_' → logprob: -17.686967849731445
    9. 'points' → logprob: -18.186967849731445
    10. '   ' → logprob: -18.186967849731445

Token 307: ' convex' (ID: 142423)
  Prédit: 'conv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'conv' → logprob: -0.0024764856789261103
    2. ' convex' → logprob: -6.002476692199707
    3. ' conv' → logprob: -15.002476692199707
    4. '   ' → logprob: -15.377476692199707
    5. '(conv' → logprob: -15.502476692199707
    6. 'Conv' → logprob: -16.75247573852539
    7. 'conc' → logprob: -17.00247573852539
    8. '.conv' → logprob: -17.37747573852539
    9. 'cross' → logprob: -17.62747573852539
    10. 'con' → logprob: -18.12747573852539

Token 308: '_h' (ID: 3434)
  Prédit: '_h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_h' → logprob: -5.5577775128767826e-06
    2. '_' → logprob: -12.375005722045898
    3. 'h' → logprob: -13.625005722045898
    4. ' _' → logprob: -17.3750057220459
    5. '(h' → logprob: -17.3750057220459
    6. ')_' → logprob: -18.7500057220459
    7. '_points' → logprob: -19.2500057220459
    8. ')' → logprob: -19.5000057220459
    9. '(' → logprob: -19.6250057220459
    10. '(_' → logprob: -19.6250057220459

Token 309: 'ull' (ID: 754)
  Prédit: 'ull'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ull' → logprob: -0.0430758073925972
    2. '_h' → logprob: -3.4180757999420166
    3. 'h' → logprob: -4.918076038360596
    4. 'ul' → logprob: -6.543076038360596
    5. '_' → logprob: -7.918076038360596
    6. 'uld' → logprob: -9.793075561523438
    7. ' hull' → logprob: -10.668075561523438
    8. 'all' → logprob: -11.168075561523438
    9. 'u' → logprob: -11.418075561523438
    10. 'ulf' → logprob: -11.543075561523438

Token 310: '(points' (ID: 72131)
  Prédit: '(points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: -6.704273118884885e-07
    2. '(h' → logprob: -14.750000953674316
    3. 'points' → logprob: -16.75
    4. '(point' → logprob: -16.875
    5. '(' → logprob: -17.75
    6. 'h' → logprob: -19.375
    7. ' (' → logprob: -19.5
    8. ' points' → logprob: -19.625
    9. '(parts' → logprob: -19.625
    10. '	points' → logprob: -19.625

Token 311: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07960616797208786
    2. ')
' → logprob: -2.579606056213379
    3. '   ' → logprob: -7.829606056213379
    4. 'print' → logprob: -8.954606056213379
    5. '<|end|>' → logprob: -9.704606056213379
    6. '(points' → logprob: -10.329606056213379
    7. '
' → logprob: -10.454606056213379
    8. '()' → logprob: -10.954606056213379
    9. ' ' → logprob: -12.079606056213379
    10. '()
' → logprob: -12.454606056213379

Token 312: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4164493680000305
    2. '       ' → logprob: -1.6664493083953857
    3. ' for' → logprob: -2.6664493083953857
    4. 'for' → logprob: -3.2914493083953857
    5. ' print' → logprob: -3.6664493083953857
    6. '   ' → logprob: -4.166449546813965
    7. '
' → logprob: -6.791449546813965
    8. '<|end|>' → logprob: -6.791449546813965
    9. '```' → logprob: -7.541449546813965
    10. '        
' → logprob: -7.666449546813965

Token 313: ' result' (ID: 1534)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06916370242834091
    2. 'for' → logprob: -2.9441637992858887
    3. '       ' → logprob: -4.694163799285889
    4. ' print' → logprob: -6.444163799285889
    5. 'area' → logprob: -6.944163799285889
    6. ' for' → logprob: -7.194163799285889
    7. 'per' → logprob: -7.319163799285889
    8. 'output' → logprob: -8.19416332244873
    9. 'result' (adapté à ' result') → logprob: -8.31916332244873
    10. 'min' → logprob: -8.56916332244873

Token 314: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02282271347939968
    2. '_points' → logprob: -4.397822856903076
    3. '=' → logprob: -4.647822856903076
    4. ':' → logprob: -8.647822380065918
    5. '_area' → logprob: -9.647822380065918
    6. 'points' → logprob: -9.897822380065918
    7. '_str' → logprob: -10.022822380065918
    8. '_len' → logprob: -10.147822380065918
    9. '_' → logprob: -10.272822380065918
    10. '_length' → logprob: -10.272822380065918

Token 315: ' n' (ID: 297)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '""' → logprob: -0.9833297729492188
    2. 'len' → logprob: -1.3583297729492188
    3. '"' → logprob: -2.3583297729492188
    4. '[]' → logprob: -3.2333297729492188
    5. 'f' → logprob: -3.3583297729492188
    6. 'str' → logprob: -3.3583297729492188
    7. 'sorted' → logprob: -4.108329772949219
    8. '0' → logprob: -4.233329772949219
    9. 'max' → logprob: -4.233329772949219
    10. '[' → logprob: -4.233329772949219

Token 316: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2534956932067871
    2. '-' → logprob: -1.503495693206787
    3. '
' → logprob: -8.003496170043945
    4. '>' → logprob: -8.628496170043945
    5. '*' → logprob: -9.128496170043945
    6. '<|end|>' → logprob: -9.128496170043945
    7. '+' → logprob: -9.378496170043945
    8. '-l' → logprob: -9.503496170043945
    9. '"' → logprob: -9.628496170043945
    10. ')' → logprob: -9.628496170043945

Token 317: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00016349162615370005
    2. ' len' → logprob: -8.750163078308105
    3. '(len' → logprob: -12.250163078308105
    4. '[len' → logprob: -16.625164031982422
    5. '=len' → logprob: -16.625164031982422
    6. '
' → logprob: -17.250164031982422
    7. '	len' → logprob: -17.375164031982422
    8. '<len' → logprob: -19.750164031982422
    9. ',len' → logprob: -20.250164031982422
    10. '<|end|>' → logprob: -20.250164031982422

Token 318: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -1.3425219549390022e-05
    2. '(' → logprob: -11.25001335144043
    3. 'h' → logprob: -15.25001335144043
    4. ' (' → logprob: -17.12501335144043
    5. '(
' → logprob: -17.50001335144043
    6. '(set' → logprob: -17.50001335144043
    7. '(s' → logprob: -20.12501335144043
    8. '((' → logprob: -20.25001335144043
    9. ' hull' → logprob: -20.37501335144043
    10. '```' → logprob: -20.37501335144043

Token 319: 'ull' (ID: 754)
  Prédit: 'ull'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ull' → logprob: -0.00021093101531732827
    2. 'ul' → logprob: -8.500210762023926
    3. 'ulk' → logprob: -13.625210762023926
    4. 'ulls' → logprob: -13.625210762023926
    5. 'uil' → logprob: -13.750210762023926
    6. 'uller' → logprob: -14.125210762023926
    7. 'll' → logprob: -14.250210762023926
    8. 'ulling' → logprob: -14.875210762023926
    9. 'ully' → logprob: -15.250210762023926
    10. 'ult' → logprob: -15.250210762023926

Token 320: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014707171358168125
    2. '<|end|>' → logprob: -4.264707088470459
    3. '
' → logprob: -8.514707565307617
    4. ')
' → logprob: -9.139707565307617
    5. '<|end|>' → logprob: -9.514707565307617
    6. ')}' → logprob: -10.264707565307617
    7. ' )' → logprob: -11.139707565307617
    8. ')return' → logprob: -11.264707565307617
    9. '[' → logprob: -11.264707565307617
    10. '```' → logprob: -11.264707565307617

Token 321: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07092046737670898
    2. 'print' → logprob: -2.820920467376709
    3. '
' → logprob: -5.445920467376709
    4. '<|end|>' → logprob: -5.945920467376709
    5. ' print' → logprob: -6.445920467376709
    6. '   ' → logprob: -8.320920944213867
    7. '        
' → logprob: -9.695920944213867
    8. '	print' → logprob: -10.445920944213867
    9. '```' → logprob: -10.945920944213867
    10. ')' → logprob: -12.320920944213867

Token 322: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.012334581464529037
    2. '       ' → logprob: -5.01233434677124
    3. ' print' → logprob: -5.26233434677124
    4. '
' → logprob: -8.137334823608398
    5. '```' → logprob: -9.387334823608398
    6. '   ' → logprob: -10.137334823608398
    7. '	print' → logprob: -13.762334823608398
    8. '        
' → logprob: -13.887334823608398
    9. '``' → logprob: -14.387334823608398
    10. '<|end|>' → logprob: -14.387334823608398

Token 323: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.20806176960468292
    2. '(' → logprob: -1.7080618143081665
    3. '('' → logprob: -5.458061695098877
    4. '("' → logprob: -6.583061695098877
    5. '(f' → logprob: -7.083061695098877
    6. '()' → logprob: -8.958062171936035
    7. 'result' → logprob: -11.583062171936035
    8. '(results' → logprob: -14.333062171936035
    9. '(res' → logprob: -14.458062171936035
    10. '((' → logprob: -14.958062171936035

Token 324: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ' )' → logprob: -15.75
    3. ')`' → logprob: -16.375
    4. ')
' → logprob: -17.125
    5. ')}' → logprob: -17.5
    6. '))' → logprob: -17.625
    7. ')}}' → logprob: -18.25
    8. '`)' → logprob: -19.0
    9. '()' → logprob: -19.5
    10. ')#' → logprob: -19.625

Token 325: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3752218186855316
    2. '<|end|>' → logprob: -1.625221848487854
    3. '
' → logprob: -2.2502217292785645
    4. ' if' → logprob: -5.0002217292785645
    5. '```' → logprob: -6.6252217292785645
    6. ')' → logprob: -7.1252217292785645
    7. '<|end|>' → logprob: -7.7502217292785645
    8. '[' → logprob: -8.000222206115723
    9. '#' → logprob: -8.000222206115723
    10. '\n' → logprob: -8.125222206115723

Token 326: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0623687207698822
    2. '__' → logprob: -2.812368631362915
    3. '_' → logprob: -8.312368392944336
    4. ' ' → logprob: -9.062368392944336
    5. '_name' → logprob: -10.562368392944336
    6. '___' → logprob: -11.812368392944336
    7. ' ' → logprob: -12.812368392944336
    8. 'name' → logprob: -14.062368392944336
    9. ' _' → logprob: -14.187368392944336
    10. ' ___' → logprob: -14.812368392944336

Token 327: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.13083906471729279
    2. ' __' → logprob: -2.1308391094207764
    3. '.__' → logprob: -5.755838871002197
    4. '__.__' → logprob: -8.130839347839355
    5. ' ==' → logprob: -9.005839347839355
    6. '```' → logprob: -9.630839347839355
    7. '__.' → logprob: -9.755839347839355
    8. '==' → logprob: -10.630839347839355
    9. '.' → logprob: -10.755839347839355
    10. '.py' → logprob: -10.880839347839355

Token 328: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0001450187264708802
    2. '__.__' → logprob: -9.000144958496094
    3. '==' → logprob: -10.875144958496094
    4. '__.' → logprob: -13.625144958496094
    5. '=="' → logprob: -15.000144958496094
    6. '__["' → logprob: -15.250144958496094
    7. '___' → logprob: -15.500144958496094
    8. ' ==' → logprob: -15.500144958496094
    9. '_' → logprob: -16.000144958496094
    10. '```' → logprob: -16.750144958496094

Token 329: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.029299801215529442
    2. ' ==' → logprob: -3.779299736022949
    3. '==' → logprob: -5.279299736022949
    4. '=="' → logprob: -7.904299736022949
    5. '__.__' → logprob: -9.02929973602295
    6. '=='' → logprob: -9.40429973602295
    7. '___' → logprob: -9.52929973602295
    8. '_' → logprob: -9.52929973602295
    9. '__["' → logprob: -9.65429973602295
    10. '__.' → logprob: -10.27929973602295

Token 330: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.10021033883094788
    2. ''' → logprob: -2.350210428237915
    3. '__' → logprob: -13.350210189819336
    4. ' "__' → logprob: -13.350210189819336
    5. '"user' → logprob: -16.475210189819336
    6. ' "' → logprob: -16.600210189819336
    7. ''"' → logprob: -16.600210189819336
    8. ' '__' → logprob: -16.725210189819336
    9. '"name' → logprob: -16.725210189819336
    10. '"_' → logprob: -17.600210189819336

Token 331: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.014285974204540253
    2. '__' → logprob: -4.264286041259766
    3. 'name' → logprob: -9.014286041259766
    4. '_main' → logprob: -15.264286041259766
    5. '__
' → logprob: -15.764286041259766
    6. '__.' → logprob: -15.764286041259766
    7. '__':
' → logprob: -16.014286041259766
    8. 'm' → logprob: -16.764286041259766
    9. 'py' → logprob: -17.514286041259766
    10. '```' → logprob: -17.514286041259766

Token 332: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.07920073717832565
    2. '__' → logprob: -2.5792007446289062
    3. '__:' → logprob: -8.704200744628906
    4. '__":
' → logprob: -9.704200744628906
    5. '':' → logprob: -9.829200744628906
    6. ':' → logprob: -11.454200744628906
    7. '_' → logprob: -11.579200744628906
    8. '__.' → logprob: -12.579200744628906
    9. ''' → logprob: -13.204200744628906
    10. '':
' → logprob: -13.579200744628906

Token 333: '   ' (ID: 271)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.474222868680954
    2. 'main' → logprob: -0.9742228984832764
    3. '	main' → logprob: -8.974223136901855
    4. '   ' → logprob: -10.974223136901855
    5. '_main' → logprob: -13.724223136901855
    6. '(main' → logprob: -13.974223136901855
    7. '.main' → logprob: -16.97422218322754
    8. '__' → logprob: -17.09922218322754
    9. '```' → logprob: -17.97422218322754
    10. ' mains' → logprob: -18.47422218322754

Token 334: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.676292231422849e-05
    2. ' main' → logprob: -11.000017166137695
    3. '	main' → logprob: -20.000017166137695
    4. '   ' → logprob: -23.250017166137695
    5. '.main' → logprob: -25.125017166137695
    6. '_main' → logprob: -25.250017166137695
    7. '(main' → logprob: -27.250017166137695
    8. 'Main' → logprob: -27.500017166137695
    9. ' ' → logprob: -27.625017166137695
    10. 'ma' → logprob: -27.750017166137695

Token 335: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 333
Tokens correctement prédits (1ère position, stricte): 178
Tokens correctement prédits (1ère position, avec adaptation): 193
Tokens correctement prédits (top 10): 309
Précision stricte (1ère position): 53.45%
Précision adaptée (1ère position): 57.96%
Précision (top 10): 92.79%
================================================================================
