================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:57:30
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class Fence:
    def __init__(self, width: int):
        self.width = width
        self.occupied_spaces = IntervalManager(width)

    def try_sleep(self, cat_id: int, cat_width: int) -> int | None:
        position = self.occupied_spaces.find_gap(cat_width)
        if position is not None:
            self.occupied_spaces.occupy(position, position + cat_width, cat_id)
        return position

    def wake_up(self, cat_id: int):
        self.occupied_spaces.release_cat(cat_id)

class IntervalManager:
    def __init__(self, width: int):
        self.width = width
        self.intervals: list[Interval] = []  # list of occupied intervals sorted by start

    def find_gap(self, required_width: int) -> int | None:
        if not self.intervals:
            if required_width <= self.width:
                return 0
            return None

        # check before first interval
        if self.intervals[0].start >= required_width:
            return 0

        # check gaps between intervals
        for i in range(len(self.intervals) - 1):
            gap_start = self.intervals[i].end
            gap_end = self.intervals[i + 1].start
            gap_size = gap_end - gap_start
            if gap_size >= required_width:
                return gap_start

        # check after last interval
        last_end = self.intervals[-1].end
        if self.width - last_end >= required_width:
            return last_end

        return None

    def occupy(self, start: int, end: int, cat_id: int):
        new_interval = Interval(start, end, cat_id)
        # insert keeping sorted order by start
        import bisect
        positions = [iv.start for iv in self.intervals]
        pos = bisect.bisect_left(positions, new_interval.start)
        self.intervals.insert(pos, new_interval)

    def release_cat(self, cat_id: int):
        # remove interval with that cat_id
        for i, interval in enumerate(self.intervals):
            if interval.cat_id == cat_id:
                self.intervals.pop(i)
                break

class Interval:
    __slots__ = ('start', 'end', 'cat_id')
    def __init__(self, start: int, end: int, cat_id: int):
        self.start = start
        self.end = end
        self.cat_id = cat_id

class ObservationRecord:
    def __init__(self, fence: Fence):
        self.fence = fence
        self.cats_sleeping: dict[int, int] = {}

    def process_sleep(self, cat_id: int, cat_width: int) -> str:
        position = self.fence.try_sleep(cat_id, cat_width)
        if position is None:
            return "impossible"
        self.cats_sleeping[cat_id] = position
        return str(position)

    def process_wakeup(self, cat_id: int):
        if cat_id in self.cats_sleeping:
            self.fence.wake_up(cat_id)
            del self.cats_sleeping[cat_id]

class InputParser:
    def __init__(self):
        self.current_observation: ObservationRecord | None = None

    def parse_line(self, line: str) -> str | None:
        parts = line.split()
        if len(parts) == 2 and parts[0].isdigit() and parts[1].isdigit():
            # New dataset
            W, Q = map(int, parts)
            if W == 0 and Q == 0:
                # end of all datasets
                return None
            self.current_observation = ObservationRecord(Fence(W))
            self.remaining_queries = Q
            return "NEW"  # special signal
        elif self.current_observation is None:
            return None
        elif parts[0] == 's':
            _, cat_id_str, cat_width_str = parts
            cat_id = int(cat_id_str)
            cat_width = int(cat_width_str)
            self.remaining_queries -= 1
            return self.current_observation.process_sleep(cat_id, cat_width)
        elif parts[0] == 'w':
            _, cat_id_str = parts
            cat_id = int(cat_id_str)
            self.current_observation.process_wakeup(cat_id)
            self.remaining_queries -= 1
            return None
        else:
            return None

def main():
    import sys
    parser = InputParser()
    end_of_all = False
    first_dataset = True
    for line in sys.stdin:
        line = line.strip()
        if not line:
            continue
        result = parser.parse_line(line)
        if result is None:
            if parser.current_observation is None:
                continue
        elif result == "NEW":
            if not first_dataset:
                print("END")
            else:
                first_dataset = False
            # start new dataset; just continue
            continue
        else:
            print(result)
    # after all inputs, print END for last dataset if any
    if not first_dataset:
        print("END")

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Fence' (ID: 144245)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01484412420541048
    2. '(' → logprob: -4.764843940734863
    3. '```' → logprob: -5.389843940734863
    4. '   ' → logprob: -7.139843940734863
    5. ':
' → logprob: -8.139843940734863
    6. ''' → logprob: -8.514843940734863
    7. '():' → logprob: -9.014843940734863
    8. '.' → logprob: -10.264843940734863
    9. '`' → logprob: -10.264843940734863
    10. '``' → logprob: -10.389843940734863

Token 4: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -1.426398515701294
    2. '```' → logprob: -1.551398515701294
    3. 'def' (adapté à ' def') → logprob: -1.801398515701294
    4. '   ' → logprob: -1.801398515701294
    5. '    ' → logprob: -2.426398515701294
    6. ' pass' → logprob: -3.176398515701294
    7. ' ' → logprob: -3.926398515701294
    8. '\' → logprob: -3.926398515701294
    9. ' ```' → logprob: -4.551398277282715
    10. 'pass' → logprob: -5.176398277282715

Token 5: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.2830080986022949
    2. '__' → logprob: -1.408008098602295
    3. ' ' → logprob: -7.158008098602295
    4. ' init' → logprob: -7.783008098602295
    5. ' ' → logprob: -8.408008575439453
    6. 'init' → logprob: -9.283008575439453
    7. ' add' → logprob: -9.658008575439453
    8. ' fence' → logprob: -10.283008575439453
    9. '_' → logprob: -10.658008575439453
    10. '  ' → logprob: -10.783008575439453

Token 6: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.8624639324116288e-06
    2. 'ini' → logprob: -14.000001907348633
    3. ' init' → logprob: -14.750001907348633
    4. 'in' → logprob: -14.875001907348633
    5. '_init' → logprob: -16.125001907348633
    6. 'i' → logprob: -16.250001907348633
    7. '	init' → logprob: -17.750001907348633
    8. 'int' → logprob: -18.250001907348633
    9. 'inti' → logprob: -18.250001907348633
    10. 'inite' → logprob: -18.250001907348633

Token 7: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.2528328001499176
    2. '__' → logprob: -1.5028327703475952
    3. '__(
' → logprob: -7.877832889556885
    4. '(' → logprob: -8.627832412719727
    5. '_' → logprob: -8.877832412719727
    6. '__((' → logprob: -9.002832412719727
    7. '__('' → logprob: -10.252832412719727
    8. '(self' → logprob: -11.127832412719727
    9. '___' → logprob: -11.502832412719727
    10. '__(*' → logprob: -12.002832412719727

Token 8: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0013545217225328088
    2. ' self' → logprob: -6.626354694366455
    3. ')' → logprob: -10.626354217529297
    4. '(self' → logprob: -13.626354217529297
    5. ' )' → logprob: -13.626354217529297
    6. 'f' → logprob: -14.376354217529297
    7. ' ' → logprob: -15.001354217529297
    8. '	self' → logprob: -16.251354217529297
    9. '       ' → logprob: -16.376354217529297
    10. ''s' → logprob: -16.501354217529297

Token 9: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1972959190607071
    2. 'self' → logprob: -1.947295904159546
    3. ' ,' → logprob: -4.447296142578125
    4. ')' → logprob: -4.572296142578125
    5. '<|end|>' → logprob: -5.072296142578125
    6. '):' → logprob: -6.322296142578125
    7. ' self' → logprob: -6.447296142578125
    8. '(self' → logprob: -6.572296142578125
    9. '<|end|>' → logprob: -7.697296142578125
    10. ' )' → logprob: -7.697296142578125

Token 10: ' width' (ID: 4345)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2874809205532074
    2. ' self' → logprob: -1.4124809503555298
    3. 'height' → logprob: -6.16248083114624
    4. 'width' → logprob: -6.28748083114624
    5. 'length' → logprob: -7.03748083114624
    6. ')' → logprob: -8.037481307983398
    7. ' width' → logprob: -8.162481307983398
    8. ' height' → logprob: -8.162481307983398
    9. ' length' → logprob: -8.537481307983398
    10. ' fence' → logprob: -8.662481307983398

Token 11: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08161567896604538
    2. '):' → logprob: -2.581615686416626
    3. ' ,' → logprob: -6.456615447998047
    4. '=' → logprob: -7.956615447998047
    5. ':' → logprob: -8.081615447998047
    6. '   ' → logprob: -8.706615447998047
    7. ',width' → logprob: -8.831615447998047
    8. ')' → logprob: -9.081615447998047
    9. ' ):' → logprob: -10.706615447998047
    10. '):
' → logprob: -12.456615447998047

Token 12: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4294523000717163
    2. ' int' → logprob: -1.0544523000717163
    3. ' ' → logprob: -8.429451942443848
    4. '=int' → logprob: -8.554451942443848
    5. ':int' → logprob: -9.179451942443848
    6. '(int' → logprob: -9.804451942443848
    7. ' )' → logprob: -10.054451942443848
    8. ')' → logprob: -10.804451942443848
    9. '<int' → logprob: -10.804451942443848
    10. 'space' → logprob: -10.804451942443848

Token 13: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007531032431870699
    2. '):' → logprob: -5.00753116607666
    3. ')' → logprob: -7.75753116607666
    4. ',width' → logprob: -8.25753116607666
    5. '   ' → logprob: -10.13253116607666
    6. ' ,' → logprob: -10.13253116607666
    7. '):
' → logprob: -11.38253116607666
    8. ',
' → logprob: -11.50753116607666
    9. ',int' → logprob: -11.88253116607666
    10. '<|end|>' → logprob: -12.63253116607666

Token 14: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00150212156586349
    2. '<|end|>' → logprob: -7.12650203704834
    3. 'self' → logprob: -8.37650203704834
    4. '   ' → logprob: -8.87650203704834
    5. ' self' → logprob: -9.12650203704834
    6. '    ' → logprob: -9.87650203704834
    7. '        
' → logprob: -10.25150203704834
    8. '        ' → logprob: -10.75150203704834
    9. ' ' → logprob: -10.87650203704834
    10. '```' → logprob: -11.12650203704834

Token 15: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.15709394216537476
    2. '       ' → logprob: -2.2820940017700195
    3. ' self' → logprob: -3.1570940017700195
    4. ' ' → logprob: -8.40709400177002
    5. '```' → logprob: -8.78209400177002
    6. '           ' → logprob: -9.03209400177002
    7. ' ' → logprob: -9.90709400177002
    8. '   ' → logprob: -10.03209400177002
    9. '<|end|>' → logprob: -10.78209400177002
    10. '_self' → logprob: -10.90709400177002

Token 16: '.width' (ID: 11038)
  Prédit: '.width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.width' → logprob: -0.5238403677940369
    2. '.' → logprob: -0.8988403677940369
    3. '.height' → logprob: -7.773840427398682
    4. ' .' → logprob: -9.523839950561523
    5. 'width' → logprob: -9.648839950561523
    6. '._' → logprob: -10.023839950561523
    7. '_width' → logprob: -10.023839950561523
    8. ' width' → logprob: -11.023839950561523
    9. '.w' → logprob: -11.523839950561523
    10. '   ' → logprob: -11.773839950561523

Token 17: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20143713057041168
    2. ' =' → logprob: -1.7014371156692505
    3. '<|end|>' → logprob: -11.076436996459961
    4. ' ' → logprob: -13.076436996459961
    5. ')' → logprob: -13.451436996459961
    6. '   ' → logprob: -13.826436996459961
    7. '       ' → logprob: -14.451436996459961
    8. '_' → logprob: -14.701436996459961
    9. ' =
' → logprob: -15.201436996459961
    10. '.' → logprob: -15.201436996459961

Token 18: ' width' (ID: 4345)
  Prédit: ' width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' width' → logprob: -0.10021431744098663
    2. 'width' → logprob: -2.3502142429351807
    3. '(width' → logprob: -12.100214004516602
    4. '	width' → logprob: -13.975214004516602
    5. ' ' → logprob: -14.725214004516602
    6. ',width' → logprob: -14.850214004516602
    7. '_width' → logprob: -15.725214004516602
    8. '.width' → logprob: -16.2252140045166
    9. ';width' → logprob: -16.4752140045166
    10. '0' → logprob: -17.1002140045166

Token 19: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9021143317222595
    2. '<|end|>' → logprob: -1.6521143913269043
    3. '   ' → logprob: -2.2771143913269043
    4. '\' → logprob: -2.4021143913269043
    5. '    
' → logprob: -2.6521143913269043
    6. '\n' → logprob: -3.1521143913269043
    7. '.' → logprob: -3.4021143913269043
    8. '```' → logprob: -4.402114391326904
    9. ' 
' → logprob: -4.527114391326904
    10. '  
' → logprob: -5.277114391326904

Token 20: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 21: ' self' (ID: 1051)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6348845958709717
    2. '\n' → logprob: -1.2598845958709717
    3. '\' → logprob: -2.6348845958709717
    4. '   ' → logprob: -2.8848845958709717
    5. '    
' → logprob: -4.259884834289551
    6. ':' → logprob: -4.634884834289551
    7. '```' → logprob: -5.134884834289551
    8. '<|end|>' → logprob: -5.384884834289551
    9. '.' → logprob: -6.009884834289551
    10. 'def' → logprob: -6.134884834289551

Token 22: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.10618505626916885
    2. '._' → logprob: -2.856184959411621
    3. '.height' → logprob: -3.481184959411621
    4. '.f' → logprob: -5.731184959411621
    5. '_height' → logprob: -6.356184959411621
    6. ' .' → logprob: -6.481184959411621
    7. '_' → logprob: -6.731184959411621
    8. '.width' → logprob: -7.106184959411621
    9. '.length' → logprob: -7.231184959411621
    10. '.is' → logprob: -8.106184959411621

Token 23: 'occupied' (ID: 98229)
  Prédit: 'height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'height' → logprob: -0.04513246566057205
    2. 'length' → logprob: -3.4201323986053467
    3. 'posts' → logprob: -5.045132637023926
    4. 'he' → logprob: -6.545132637023926
    5. 'pl' → logprob: -7.420132637023926
    6. 'paint' → logprob: -7.545132637023926
    7. 'boards' → logprob: -7.670132637023926
    8. 'color' → logprob: -8.170132637023926
    9. 'f' → logprob: -8.670132637023926
    10. 'post' → logprob: -8.920132637023926

Token 24: '_spaces' (ID: 180762)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0052090901881456375
    2. '=' → logprob: -5.380208969116211
    3. '[' → logprob: -8.755208969116211
    4. '_' → logprob: -8.880208969116211
    5. '[:]' → logprob: -9.380208969116211
    6. ' ' → logprob: -9.630208969116211
    7. '_space' → logprob: -10.380208969116211
    8. '[]' → logprob: -10.630208969116211
    9. ' +=' → logprob: -11.005208969116211
    10. '  ' → logprob: -11.005208969116211

Token 25: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0022493419237434864
    2. '=' → logprob: -6.127249240875244
    3. ' ' → logprob: -10.752249717712402
    4. '[' → logprob: -11.252249717712402
    5. ' +=' → logprob: -12.002249717712402
    6. '=[]' → logprob: -12.127249717712402
    7. '[:]' → logprob: -12.252249717712402
    8. '[]' → logprob: -12.627249717712402
    9. '_' → logprob: -12.752249717712402
    10. ' =
' → logprob: -13.502249717712402

Token 26: ' Interval' (ID: 80693)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.6050992608070374
    2. 'set' → logprob: -1.8550992012023926
    3. ' []' → logprob: -1.8550992012023926
    4. ' set' → logprob: -2.3550992012023926
    5. '0' → logprob: -3.3550992012023926
    6. ' ' → logprob: -5.355099201202393
    7. '[' → logprob: -6.105099201202393
    8. '{}' → logprob: -6.105099201202393
    9. ' [' → logprob: -6.480099201202393
    10. ' {}' → logprob: -7.605099201202393

Token 27: 'Manager' (ID: 2774)
  Prédit: 'Set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Set' → logprob: -0.8514898419380188
    2. 's' → logprob: -1.101489782333374
    3. '(' → logprob: -1.851489782333374
    4. '()' → logprob: -2.851489782333374
    5. 'List' → logprob: -4.101490020751953
    6. '[]' → logprob: -5.226490020751953
    7. '[' → logprob: -7.101490020751953
    8. 'Tree' → logprob: -7.351490020751953
    9. '([]' → logprob: -7.476490020751953
    10. 'Array' → logprob: -7.726490020751953

Token 28: '(width' (ID: 32972)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08177266269922256
    2. '()' → logprob: -2.706772565841675
    3. '.' → logprob: -4.456772804260254
    4. '().' → logprob: -9.581772804260254
    5. '(
' → logprob: -9.956772804260254
    6. '(

' → logprob: -11.456772804260254
    7. '('' → logprob: -11.831772804260254
    8. '```' → logprob: -12.081772804260254
    9. ')' → logprob: -12.706772804260254
    10. '("("' → logprob: -12.706772804260254

Token 29: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. ' )' → logprob: -15.125000953674316
    3. '.' → logprob: -15.250000953674316
    4. '.)' → logprob: -15.875000953674316
    5. '   ' → logprob: -16.000001907348633
    6. ')
' → logprob: -16.750001907348633
    7. '       ' → logprob: -16.750001907348633
    8. '))' → logprob: -17.625001907348633
    9. ').' → logprob: -18.125001907348633
    10. '(' → logprob: -18.125001907348633

Token 30: '   ' (ID: 271)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0513790026307106
    2. '   ' → logprob: -4.301379203796387
    3. '
' → logprob: -4.676379203796387
    4. '<|end|>' → logprob: -4.676379203796387
    5. '```' → logprob: -5.551379203796387
    6. '\' → logprob: -6.301379203796387
    7. 'def' → logprob: -6.301379203796387
    8. '\n' → logprob: -6.551379203796387
    9. '.
' → logprob: -6.801379203796387
    10. ',' → logprob: -6.926379203796387

Token 31: ' def' (ID: 1056)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.12071734666824341
    2. 'def' (adapté à ' def') → logprob: -2.8707172870635986
    3. '_' → logprob: -3.8707172870635986
    4. '   ' → logprob: -4.620717525482178
    5. '
' → logprob: -5.120717525482178
    6. '<|end|>' → logprob: -5.870717525482178
    7. '\' → logprob: -5.995717525482178
    8. ' def' → logprob: -5.995717525482178
    9. '```' → logprob: -5.995717525482178
    10. '.
' → logprob: -6.120717525482178

Token 32: ' try' (ID: 2075)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9279454946517944
    2. ' space' → logprob: -0.9279454946517944
    3. ' add' → logprob: -1.6779454946517944
    4. ' is' → logprob: -4.677945613861084
    5. ' create' → logprob: -6.177945613861084
    6. ' get' → logprob: -6.427945613861084
    7. 'space' → logprob: -6.552945613861084
    8. ' check' → logprob: -6.927945613861084
    9. '_space' → logprob: -6.927945613861084
    10. ' set' → logprob: -7.552945613861084

Token 33: '_sleep' (ID: 125884)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.08663353323936462
    2. '_put' → logprob: -3.7116334438323975
    3. '_add' → logprob: -4.086633682250977
    4. '_to' → logprob: -4.211633682250977
    5. '_space' → logprob: -5.086633682250977
    6. '_place' → logprob: -5.711633682250977
    7. '_res' → logprob: -5.961633682250977
    8. '_insert' → logprob: -6.086633682250977
    9. '_allocate' → logprob: -6.211633682250977
    10. '_claim' → logprob: -6.336633682250977

Token 34: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.594438374042511
    2. '_in' → logprob: -1.4694383144378662
    3. '_' → logprob: -1.9694383144378662
    4. 'ing' → logprob: -3.219438314437866
    5. ' (' → logprob: -4.469438552856445
    6. '_at' → logprob: -4.719438552856445
    7. '_on' → logprob: -5.094438552856445
    8. '(self' → logprob: -5.594438552856445
    9. '()' → logprob: -6.219438552856445
    10. 'in' → logprob: -6.594438552856445

Token 35: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01234988309442997
    2. 'self' → logprob: -5.137350082397461
    3. ' ,' → logprob: -5.887350082397461
    4. '):' → logprob: -6.262350082397461
    5. ')' → logprob: -8.012350082397461
    6. '_' → logprob: -8.137350082397461
    7. '_at' → logprob: -8.512350082397461
    8. ' ):' → logprob: -8.887350082397461
    9. '_,' → logprob: -9.137350082397461
    10. 'ing' → logprob: -9.262350082397461

Token 36: ' cat' (ID: 9059)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.9495013952255249
    2. ' person' → logprob: -1.199501395225525
    3. ' position' → logprob: -1.574501395225525
    4. ' space' → logprob: -3.5745015144348145
    5. 'self' → logprob: -3.6995015144348145
    6. ' start' → logprob: -5.0745015144348145
    7. ' )' → logprob: -5.1995015144348145
    8. ' user' → logprob: -5.4495015144348145
    9. ' pos' → logprob: -5.5745015144348145
    10. ' index' → logprob: -5.5745015144348145

Token 37: '_id' (ID: 1537)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.452426552772522
    2. ')' → logprob: -1.952426552772522
    3. ' ):' → logprob: -2.0774264335632324
    4. ',' → logprob: -3.2024264335632324
    5. ' )' → logprob: -3.3274264335632324
    6. ':' → logprob: -5.202426433563232
    7. 's' → logprob: -5.702426433563232
    8. ' ,' → logprob: -5.702426433563232
    9. '_space' → logprob: -6.452426433563232
    10. '_positions' → logprob: -6.452426433563232

Token 38: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011010919697582722
    2. ' ,' → logprob: -4.886011123657227
    3. ':' → logprob: -5.886011123657227
    4. '):' → logprob: -7.886011123657227
    5. ')' → logprob: -8.636011123657227
    6. ' ):' → logprob: -10.761011123657227
    7. ' )' → logprob: -11.386011123657227
    8. ' :' → logprob: -11.636011123657227
    9. '   ' → logprob: -12.011011123657227
    10. ':int' → logprob: -12.386011123657227

Token 39: ' int' (ID: 677)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.979314923286438
    2. ' ' → logprob: -1.354314923286438
    3. ' cat' → logprob: -1.604314923286438
    4. ')' → logprob: -2.7293148040771484
    5. ' int' → logprob: -3.4793148040771484
    6. ' ):' → logprob: -3.7293148040771484
    7. ' space' → logprob: -5.104314804077148
    8. ' ,' → logprob: -5.354314804077148
    9. ' position' → logprob: -5.479314804077148
    10. ',' → logprob: -5.729314804077148

Token 40: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00091050990158692
    2. '):' → logprob: -7.87591028213501
    3. ' ,' → logprob: -8.000910758972168
    4. ')' → logprob: -8.625910758972168
    5. ':' → logprob: -12.500910758972168
    6. ',int' → logprob: -13.375910758972168
    7. ',
' → logprob: -13.500910758972168
    8. '   ' → logprob: -13.625910758972168
    9. ' ):' → logprob: -13.625910758972168
    10. 'self' → logprob: -13.750910758972168

Token 41: ' cat' (ID: 9059)
  Prédit: ' start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.7017743587493896
    2. ' space' → logprob: -1.5767743587493896
    3. ' position' → logprob: -2.2017743587493896
    4. ' interval' → logprob: -2.5767743587493896
    5. ' length' → logprob: -4.076774597167969
    6. 'start' → logprob: -4.201774597167969
    7. 'space' → logprob: -4.201774597167969
    8. ' requested' → logprob: -4.576774597167969
    9. ' left' → logprob: -4.701774597167969
    10. 'interval' → logprob: -4.826774597167969

Token 42: '_width' (ID: 17595)
  Prédit: '_width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_width' → logprob: -0.9279412031173706
    2. '_spaces' → logprob: -2.30294132232666
    3. '_space' → logprob: -2.42794132232666
    4. '_position' → logprob: -2.67794132232666
    5. '_size' → logprob: -2.80294132232666
    6. '_length' → logprob: -2.80294132232666
    7. '_x' → logprob: -2.92794132232666
    8. '_positions' → logprob: -3.17794132232666
    9. '_location' → logprob: -4.17794132232666
    10. '_pos' → logprob: -4.42794132232666

Token 43: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4387032985687256
    2. ':' → logprob: -1.0637032985687256
    3. ',' → logprob: -5.063703536987305
    4. ')' → logprob: -6.063703536987305
    5. ' ):' → logprob: -6.813703536987305
    6. ' :' → logprob: -9.063703536987305
    7. '):
' → logprob: -10.688703536987305
    8. ':int' → logprob: -10.938703536987305
    9. ' ' → logprob: -11.813703536987305
    10. ' ,' → logprob: -12.063703536987305

Token 44: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.42965060472488403
    2. 'int' → logprob: -1.0546505451202393
    3. ')' → logprob: -7.554650783538818
    4. ':int' → logprob: -8.80465030670166
    5. ' )' → logprob: -8.92965030670166
    6. '):' → logprob: -9.80465030670166
    7. ' ):' → logprob: -9.92965030670166
    8. '[int' → logprob: -11.67965030670166
    9. '):
' → logprob: -12.05465030670166
    10. ' ' → logprob: -12.05465030670166

Token 45: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.022857442498207092
    2. ',' → logprob: -4.272857666015625
    3. ')' → logprob: -4.772857666015625
    4. ' ):' → logprob: -9.022857666015625
    5. '):
' → logprob: -10.522857666015625
    6. ':' → logprob: -10.647857666015625
    7. '   ' → logprob: -11.272857666015625
    8. ' ,' → logprob: -12.147857666015625
    9. ')->' → logprob: -12.647857666015625
    10. ' )' → logprob: -12.772857666015625

Token 46: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008886834606528282
    2. '):' → logprob: -4.758886814117432
    3. ' :' → logprob: -8.50888729095459
    4. ')' → logprob: -10.75888729095459
    5. ':return' → logprob: -11.13388729095459
    6. '       ' → logprob: -11.50888729095459
    7. '():' → logprob: -12.00888729095459
    8. ' ->' → logprob: -12.25888729095459
    9. '->' → logprob: -12.88388729095459
    10. ':**' → logprob: -13.38388729095459

Token 47: ' int' (ID: 677)
  Prédit: ' bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bool' → logprob: -0.5848206877708435
    2. 'bool' → logprob: -0.8348206877708435
    3. 'int' → logprob: -5.209820747375488
    4. ' int' → logprob: -6.334820747375488
    5. ' ' → logprob: -6.959820747375488
    6. ' None' → logprob: -8.584820747375488
    7. '	bool' → logprob: -9.334820747375488
    8. 'None' → logprob: -9.522320747375488
    9. '  ' → logprob: -9.772320747375488
    10. '<bool' → logprob: -10.522320747375488

Token 48: ' |' (ID: 1022)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00044544681441038847
    2. '):' → logprob: -7.875445365905762
    3. ' :' → logprob: -10.000445365905762
    4. '():' → logprob: -12.000445365905762
    5. ':return' → logprob: -12.000445365905762
    6. ':**' → logprob: -13.250445365905762
    7. ':
' → logprob: -13.500445365905762
    8. ',' → logprob: -13.750445365905762
    9. '':' → logprob: -14.375445365905762
    10. '<|end|>' → logprob: -14.500445365905762

Token 49: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.020603667944669724
    2. 'None' → logprob: -3.895603656768799
    3. ' bool' → logprob: -10.145604133605957
    4. ' type' → logprob: -11.895604133605957
    5. ' ' → logprob: -12.520604133605957
    6. 'bool' → logprob: -12.645604133605957
    7. ' float' → logprob: -13.145604133605957
    8. '  ' → logprob: -13.395604133605957
    9. '   ' → logprob: -13.395604133605957
    10. ' ' → logprob: -13.895604133605957

Token 50: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0018140594474971294
    2. '):' → logprob: -6.376813888549805
    3. '():' → logprob: -9.626813888549805
    4. '<|end|>' → logprob: -11.251813888549805
    5. ':
' → logprob: -11.876813888549805
    6. ',' → logprob: -11.876813888549805
    7. '       ' → logprob: -12.126813888549805
    8. ' :' → logprob: -12.376813888549805
    9. ':**' → logprob: -13.376813888549805
    10. ')' → logprob: -13.501813888549805

Token 51: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.642207145690918
    2. '       ' → logprob: -0.767207145690918
    3. '<|end|>' → logprob: -5.142207145690918
    4. '):' → logprob: -7.267207145690918
    5. '   ' → logprob: -7.642207145690918
    6. ':
' → logprob: -7.892207145690918
    7. ',' → logprob: -8.267207145690918
    8. ')' → logprob: -8.267207145690918
    9. ' :' → logprob: -8.267207145690918
    10. '<|end|>' → logprob: -8.517207145690918

Token 52: ' position' (ID: 4010)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8142620921134949
    2. '       ' → logprob: -1.3142621517181396
    3. '#' → logprob: -1.8142621517181396
    4. '        ' → logprob: -3.5642621517181396
    5. '_' → logprob: -4.1892619132995605
    6. ' #' → logprob: -4.4392619132995605
    7. ' ' → logprob: -5.0642619132995605
    8. 'self' → logprob: -5.3142619132995605
    9. 'space' → logprob: -5.3142619132995605
    10. 'return' → logprob: -5.5642619132995605

Token 53: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10046426951885223
    2. '=' → logprob: -2.600464344024658
    3. '_' → logprob: -4.100464344024658
    4. ' ' → logprob: -5.475464344024658
    5. '<|end|>' → logprob: -7.975464344024658
    6. ')' → logprob: -9.6004638671875
    7. '<|end|>' → logprob: -10.1004638671875
    8. ' =)' → logprob: -10.6004638671875
    9. 's' → logprob: -10.7254638671875
    10. '_space' → logprob: -10.9754638671875

Token 54: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.16038213670253754
    2. 'self' → logprob: -1.9103821516036987
    3. '<|end|>' → logprob: -9.410382270812988
    4. ' ' → logprob: -10.535382270812988
    5. ' ' → logprob: -10.910382270812988
    6. '	self' → logprob: -11.285382270812988
    7. '0' → logprob: -11.785382270812988
    8. ' None' → logprob: -13.285382270812988
    9. '<|end|>' → logprob: -13.285382270812988
    10. '(self' → logprob: -13.285382270812988

Token 55: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -7.85104202805087e-05
    2. '.find' → logprob: -10.500078201293945
    3. ' .' → logprob: -11.125078201293945
    4. '.available' → logprob: -11.250078201293945
    5. '`.' → logprob: -11.875078201293945
    6. '.get' → logprob: -12.750078201293945
    7. '.try' → logprob: -13.125078201293945
    8. '.next' → logprob: -13.375078201293945
    9. '.f' → logprob: -13.750078201293945
    10. 'occupied' → logprob: -14.125078201293945

Token 56: 'occupied' (ID: 98229)
  Prédit: 'occupied'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occupied' → logprob: -9.088346359931165e-07
    2. 'occup' → logprob: -14.500000953674316
    3. ' occupied' → logprob: -15.750000953674316
    4. 'Occupied' → logprob: -16.375
    5. 'available' → logprob: -16.625
    6. 'try' → logprob: -17.125
    7. '```' → logprob: -18.25
    8. 'attempt' → logprob: -18.25
    9. 'ocup' → logprob: -18.375
    10. '.' → logprob: -18.5

Token 57: '_spaces' (ID: 180762)
  Prédit: '_spaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_spaces' → logprob: -1.0280383548888494e-06
    2. '_' → logprob: -14.750000953674316
    3. '_places' → logprob: -15.250000953674316
    4. '_positions' → logprob: -15.750000953674316
    5. 'spaces' → logprob: -17.250001907348633
    6. '._' → logprob: -17.625001907348633
    7. '_space' → logprob: -17.750001907348633
    8. '_ranges' → logprob: -17.750001907348633
    9. '_states' → logprob: -17.750001907348633
    10. '_sp' → logprob: -18.250001907348633

Token 58: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -0.03217316418886185
    2. '.try' → logprob: -3.9071731567382812
    3. '.get' → logprob: -5.407173156738281
    4. '.findall' → logprob: -6.657173156738281
    5. '.next' → logprob: -6.907173156738281
    6. '.search' → logprob: -6.907173156738281
    7. '.' → logprob: -7.282173156738281
    8. '.insert' → logprob: -7.782173156738281
    9. '.setdefault' → logprob: -7.907173156738281
    10. '.allocate' → logprob: -7.907173156738281

Token 59: '_gap' (ID: 131234)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6905412077903748
    2. '_free' → logprob: -0.9405412077903748
    3. '_position' → logprob: -3.3155412673950195
    4. '_available' → logprob: -3.5655412673950195
    5. '(' → logprob: -4.9405412673950195
    6. '_next' → logprob: -5.3155412673950195
    7. '_first' → logprob: -5.3155412673950195
    8. '_best' → logprob: -5.4405412673950195
    9. '_space' → logprob: -5.5655412673950195
    10. '_empty' → logprob: -5.8155412673950195

Token 60: '(cat' (ID: 107890)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010422403924167156
    2. '_' → logprob: -5.635422229766846
    3. '((' → logprob: -5.885422229766846
    4. '_between' → logprob: -7.010422229766846
    5. '_(' → logprob: -7.260422229766846
    6. '_for' → logprob: -8.135422706604004
    7. '("("' → logprob: -8.260422706604004
    8. '_at' → logprob: -8.260422706604004
    9. '(()' → logprob: -8.510422706604004
    10. ' (' → logprob: -8.635422706604004

Token 61: '_width' (ID: 17595)
  Prédit: '_width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_width' → logprob: -0.0013176199281588197
    2. '_' → logprob: -6.751317501068115
    3. '_id' → logprob: -9.251317977905273
    4. '_w' → logprob: -10.501317977905273
    5. '   ' → logprob: -13.126317977905273
    6. ' _' → logprob: -13.251317977905273
    7. '_

' → logprob: -13.251317977905273
    8. ')_' → logprob: -13.251317977905273
    9. '_)' → logprob: -13.501317977905273
    10. ')' → logprob: -13.751317977905273

Token 62: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00034595211036503315
    2. ' )' → logprob: -8.000346183776855
    3. ')
' → logprob: -11.625346183776855
    4. ')

' → logprob: -14.375346183776855
    5. '       ' → logprob: -15.250346183776855
    6. ',' → logprob: -15.625346183776855
    7. ' ' → logprob: -16.50034523010254
    8. '))' → logprob: -16.75034523010254
    9. ')#' → logprob: -16.75034523010254
    10. '),' → logprob: -17.00034523010254

Token 63: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20712296664714813
    2. ')' → logprob: -2.207123041152954
    3. '
' → logprob: -3.707123041152954
    4. '<|end|>' → logprob: -4.082122802734375
    5. ' if' → logprob: -4.207122802734375
    6. '        ' → logprob: -5.707122802734375
    7. '\n' → logprob: -5.707122802734375
    8. '        
' → logprob: -6.082122802734375
    9. ')
' → logprob: -6.207122802734375
    10. '()' → logprob: -6.582122802734375

Token 64: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.09612230211496353
    2. '       ' → logprob: -2.7211222648620605
    3. '        ' → logprob: -4.7211222648620605
    4. '
' → logprob: -4.8461222648620605
    5. 'if' (adapté à ' if') → logprob: -5.3461222648620605
    6. ' ' → logprob: -6.0961222648620605
    7. ' 
' → logprob: -7.7211222648620605
    8. ')' → logprob: -7.9711222648620605
    9. '<|end|>' → logprob: -7.9711222648620605
    10. '        
' → logprob: -8.471122741699219

Token 65: ' position' (ID: 4010)
  Prédit: ' position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' position' → logprob: -0.00012654215970542282
    2. 'position' → logprob: -9.000126838684082
    3. ' ' → logprob: -12.875126838684082
    4. ' ' → logprob: -15.500126838684082
    5. '	position' → logprob: -15.625126838684082
    6. ' not' → logprob: -16.250125885009766
    7. '(position' → logprob: -17.625125885009766
    8. ' posit' → logprob: -18.625125885009766
    9. ' pos' → logprob: -18.750125885009766
    10. ' positions' → logprob: -19.125125885009766

Token 66: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.0003121056070085615
    2. 'is' → logprob: -8.125311851501465
    3. ' ' → logprob: -11.125311851501465
    4. '<|end|>' → logprob: -14.875311851501465
    5. ' ==' → logprob: -15.125311851501465
    6. '	is' → logprob: -15.500311851501465
    7. ' ' → logprob: -16.25031280517578
    8. '==' → logprob: -16.50031280517578
    9. ' !=' → logprob: -16.62531280517578
    10. ':' → logprob: -16.62531280517578

Token 67: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.5336825847625732
    2. ' None' → logprob: -0.9086825847625732
    3. 'None' → logprob: -4.783682823181152
    4. 'not' → logprob: -6.158682823181152
    5. ' ' → logprob: -11.408682823181152
    6. 'Not' → logprob: -12.908682823181152
    7. '	not' → logprob: -12.908682823181152
    8. '_None' → logprob: -13.158682823181152
    9. ' none' → logprob: -13.783682823181152
    10. '(None' → logprob: -13.908682823181152

Token 68: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.6931535601615906
    2. 'None' → logprob: -0.6931535601615906
    3. '_None' → logprob: -12.318153381347656
    4. '_none' → logprob: -13.943153381347656
    5. '=None' → logprob: -15.193153381347656
    6. ' ' → logprob: -15.193153381347656
    7. '(None' → logprob: -15.568153381347656
    8. '.None' → logprob: -16.818153381347656
    9. 'none' → logprob: -17.193153381347656
    10. ',None' → logprob: -17.318153381347656

Token 69: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010693699587136507
    2. ':
' → logprob: -6.87606954574585
    3. ' :' → logprob: -10.376069068908691
    4. '):' → logprob: -13.751069068908691
    5. ' and' → logprob: -14.126069068908691
    6. ',' → logprob: -14.126069068908691
    7. ':return' → logprob: -14.251069068908691
    8. ' :
' → logprob: -14.626069068908691
    9. '       ' → logprob: -14.751069068908691
    10. ':

' → logprob: -15.251069068908691

Token 70: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.42478349804878235
    2. '           ' → logprob: -1.17478346824646
    3. '       ' → logprob: -4.674783706665039
    4. ':
' → logprob: -4.799783706665039
    5. ',' → logprob: -4.924783706665039
    6. '        ' → logprob: -5.424783706665039
    7. '<|end|>' → logprob: -6.549783706665039
    8. '            ' → logprob: -7.049783706665039
    9. '            
' → logprob: -7.049783706665039
    10. '```' → logprob: -7.549783706665039

Token 71: ' self' (ID: 1051)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.6974214315414429
    2. ' ' → logprob: -0.9474214315414429
    3. ' self' → logprob: -3.4474215507507324
    4. '               ' → logprob: -3.5724215507507324
    5. ' ' → logprob: -3.9474215507507324
    6. '            ' → logprob: -4.822421550750732
    7. '                ' → logprob: -5.072421550750732
    8. '           ' → logprob: -5.197421550750732
    9. '<|end|>' → logprob: -5.322421550750732
    10. '                
' → logprob: -5.822421550750732

Token 72: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -6.980854959692806e-05
    2. ' .' → logprob: -9.625069618225098
    3. 'occupied' → logprob: -14.500069618225098
    4. '`.' → logprob: -14.625069618225098
    5. '```' → logprob: -14.875069618225098
    6. '.add' → logprob: -15.750069618225098
    7. '.write' → logprob: -16.125070571899414
    8. '.oc' → logprob: -16.125070571899414
    9. '.used' → logprob: -16.375070571899414

Token 73: 'occupied' (ID: 98229)
  Prédit: 'occupied'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occupied' → logprob: -4.4849443838757e-06
    2. 'occup' → logprob: -12.625004768371582
    3. ' occupied' → logprob: -14.000004768371582
    4. 'ocup' → logprob: -16.875003814697266
    5. '.' → logprob: -17.000003814697266
    6. '_' → logprob: -17.375003814697266
    7. '-' → logprob: -17.500003814697266
    8. 'cc' → logprob: -17.625003814697266
    9. 'Occupied' → logprob: -18.000003814697266
    10. '```' → logprob: -18.500003814697266

Token 74: '_spaces' (ID: 180762)
  Prédit: '_spaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_spaces' → logprob: -0.00022976152831688523
    2. '_' → logprob: -9.000229835510254
    3. '_positions' → logprob: -10.250229835510254
    4. '._' → logprob: -10.750229835510254
    5. '_places' → logprob: -11.125229835510254
    6. '.' → logprob: -11.375229835510254
    7. '_.' → logprob: -12.125229835510254
    8. '_space' → logprob: -12.750229835510254
    9. 'spaces' → logprob: -12.750229835510254
    10. '_ranges' → logprob: -13.000229835510254

Token 75: '.' (ID: 13)
  Prédit: '.add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.10293678194284439
    2. '.' → logprob: -2.6029367446899414
    3. '.insert' → logprob: -3.8529367446899414
    4. '.place' → logprob: -7.227936744689941
    5. '.allocate' → logprob: -7.852936744689941
    6. '.reserve' → logprob: -7.977936744689941
    7. '.mark' → logprob: -8.602936744689941
    8. '.fill' → logprob: -8.727936744689941
    9. ' .' → logprob: -8.977936744689941
    10. '.save' → logprob: -9.602936744689941

Token 76: 'occup' (ID: 37913)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.4347613453865051
    2. 'occup' → logprob: -1.6847612857818604
    3. 'insert' → logprob: -1.9347612857818604
    4. 'reserve' → logprob: -3.9347612857818604
    5. 'allocate' → logprob: -7.6847615242004395
    6. 'mark' → logprob: -7.9347615242004395
    7. 'book' → logprob: -7.9347615242004395
    8. 'fill' → logprob: -8.434761047363281
    9. 'claim' → logprob: -8.559761047363281
    10. 'place' → logprob: -8.559761047363281

Token 77: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -1.9623810658231378e-05
    2. 'py' → logprob: -11.750020027160645
    3. '```' → logprob: -11.750020027160645
    4. 'ied' → logprob: -13.250020027160645
    5. 'ying' → logprob: -14.500020027160645
    6. 'upy' → logprob: -14.625020027160645
    7. 'ypy' → logprob: -15.125020027160645
    8. '   ' → logprob: -15.625020027160645
    9. 'yp' → logprob: -16.000019073486328
    10. '
' → logprob: -16.375019073486328

Token 78: '(position' (ID: 22246)
  Prédit: '(position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(position' → logprob: -0.011927202343940735
    2. '(' → logprob: -4.511927127838135
    3. '_space' → logprob: -7.886927127838135
    4. '_range' → logprob: -9.261927604675293
    5. '_position' → logprob: -9.261927604675293
    6. '(interval' → logprob: -9.386927604675293
    7. '(space' → logprob: -9.636927604675293
    8. '_interval' → logprob: -9.761927604675293
    9. 'position' → logprob: -10.636927604675293
    10. '(pos' → logprob: -10.886927604675293

Token 79: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.802049756515771e-05
    2. ' ,' → logprob: -10.125067710876465
    3. '+' → logprob: -11.500067710876465
    4. ' +' → logprob: -12.125067710876465
    5. 'position' → logprob: -12.375067710876465
    6. '   ' → logprob: -12.875067710876465
    7. ' cat' → logprob: -14.000067710876465
    8. ')' → logprob: -14.000067710876465
    9. '           ' → logprob: -14.125067710876465
    10. 'cat' → logprob: -14.125067710876465

Token 80: ' position' (ID: 4010)
  Prédit: ' cat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cat' → logprob: -0.011183394119143486
    2. 'cat' → logprob: -4.511183261871338
    3. ' position' → logprob: -9.261183738708496
    4. 'position' → logprob: -10.636183738708496
    5. ' ' → logprob: -12.011183738708496
    6. ' ' → logprob: -12.636183738708496
    7. '(cat' → logprob: -12.886183738708496
    8. '    ' → logprob: -13.386183738708496
    9. '```' → logprob: -14.761183738708496
    10. '<|end|>' → logprob: -14.761183738708496

Token 81: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.10021486133337021
    2. '+' → logprob: -2.350214958190918
    3. ' ' → logprob: -11.850214958190918
    4. ' ' → logprob: -15.475214958190918
    5. '+self' → logprob: -15.475214958190918
    6. ' +
' → logprob: -15.975214958190918
    7. '+
' → logprob: -16.8502140045166
    8. ')' → logprob: -16.8502140045166
    9. '+n' → logprob: -16.9752140045166
    10. '+xml' → logprob: -17.3502140045166

Token 82: ' cat' (ID: 9059)
  Prédit: ' cat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cat' → logprob: -0.005950841121375561
    2. 'cat' → logprob: -5.130950927734375
    3. ' ' → logprob: -10.880950927734375
    4. '(cat' → logprob: -13.380950927734375
    5. '```' → logprob: -15.380950927734375
    6. '<|end|>' → logprob: -15.505950927734375
    7. '_cat' → logprob: -15.630950927734375
    8. '    ' → logprob: -15.630950927734375
    9. 'c' → logprob: -16.005950927734375
    10. '0' → logprob: -16.005950927734375

Token 83: '_width' (ID: 17595)
  Prédit: '_width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_width' → logprob: -2.963691804325208e-05
    2. 'idth' → logprob: -11.750029563903809
    3. 'width' → logprob: -12.000029563903809
    4. 'Width' → logprob: -12.250029563903809
    5. '_id' → logprob: -12.750029563903809
    6. '_WIDTH' → logprob: -12.875029563903809
    7. '-width' → logprob: -13.125029563903809
    8. '_w' → logprob: -14.250029563903809
    9. '_' → logprob: -14.625029563903809
    10. '-' → logprob: -14.750029563903809

Token 84: ',' (ID: 11)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.38794612884521484
    2. ')' → logprob: -1.1379461288452148
    3. ' )
' → logprob: -7.262946128845215
    4. ' )' → logprob: -8.512946128845215
    5. ')
' → logprob: -8.762946128845215
    6. '       ' → logprob: -11.637946128845215
    7. ')

' → logprob: -13.262946128845215
    8. '           ' → logprob: -13.387946128845215
    9. ',' → logprob: -13.512946128845215
    10. ')return' → logprob: -13.637946128845215

Token 85: ' cat' (ID: 9059)
  Prédit: ' cat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cat' → logprob: -0.006810702849179506
    2. 'cat' → logprob: -5.006810665130615
    3. ' ' → logprob: -10.006811141967773
    4. ' True' → logprob: -10.881811141967773
    5. ')' → logprob: -11.631811141967773
    6. '(cat' → logprob: -11.881811141967773
    7. ' ' → logprob: -13.006811141967773
    8. 'True' → logprob: -13.319311141967773
    9. ' f' → logprob: -13.756811141967773
    10. '    ' → logprob: -13.819311141967773

Token 86: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -2.5941604690160602e-05
    2. '_' → logprob: -10.625025749206543
    3. '_width' → logprob: -13.625025749206543
    4. ')' → logprob: -16.00002670288086
    5. '_i' → logprob: -16.25002670288086
    6. 'idth' → logprob: -17.25002670288086
    7. '   ' → logprob: -17.25002670288086
    8. ' _' → logprob: -17.37502670288086
    9. '_
' → logprob: -17.62502670288086
    10. '_)' → logprob: -18.12502670288086

Token 87: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011786778923124075
    2. ')
' → logprob: -6.751178741455078
    3. ' )' → logprob: -11.876178741455078
    4. '       ' → logprob: -14.126178741455078
    5. ')
' → logprob: -15.001178741455078
    6. ')return' → logprob: -15.126178741455078
    7. ')

' → logprob: -16.251178741455078
    8. ' )
' → logprob: -16.501178741455078
    9. '           ' → logprob: -17.001178741455078
    10. ')`' → logprob: -17.751178741455078

Token 88: '       ' (ID: 309)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0025049131363630295
    2. 'return' → logprob: -6.502504825592041
    3. '
' → logprob: -7.752504825592041
    4. '            
' → logprob: -7.877504825592041
    5. '               ' → logprob: -9.5025053024292
    6. ' return' → logprob: -10.0025053024292
    7. '```' → logprob: -11.2525053024292
    8. '		' → logprob: -11.3775053024292
    9. '  
' → logprob: -11.7525053024292
    10. '       ' → logprob: -11.8775053024292

Token 89: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1290232539176941
    2. 'return' (adapté à ' return') → logprob: -2.629023313522339
    3. '           ' → logprob: -3.129023313522339
    4. ' return' → logprob: -5.62902307510376
    5. '   ' → logprob: -6.75402307510376
    6. '	return' → logprob: -8.504023551940918
    7. '
' → logprob: -9.379023551940918
    8. ' ' → logprob: -10.629023551940918
    9. '        
' → logprob: -11.254023551940918
    10. '    
' → logprob: -11.879023551940918

Token 90: ' position' (ID: 4010)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.1269969791173935
    2. ' position' → logprob: -2.1269969940185547
    3. ' None' → logprob: -10.126996994018555
    4. 'None' → logprob: -10.501996994018555
    5. '(position' → logprob: -14.626996994018555
    6. ' ' → logprob: -15.126996994018555
    7. '[position' → logprob: -15.376996994018555
    8. 'pos' → logprob: -15.501996994018555
    9. '	position' → logprob: -15.876996994018555
    10. ' ' → logprob: -16.251996994018555

Token 91: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 92: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 93: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 94: ' wake' (ID: 20580)
  Prédit: ' free'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' free' → logprob: -0.7970585227012634
    2. ' try' → logprob: -1.6720585823059082
    3. ' release' → logprob: -1.7970585823059082
    4. ' leave' → logprob: -3.422058582305908
    5. ' remove' → logprob: -3.422058582305908
    6. ' wake' → logprob: -3.547058582305908
    7. 'release' → logprob: -3.547058582305908
    8. 'try' → logprob: -4.047058582305908
    9. 'def' → logprob: -4.547058582305908
    10. 'free' → logprob: -4.672058582305908

Token 95: '_up' (ID: 18721)
  Prédit: '_up'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_up' → logprob: -0.06747794896364212
    2. '(self' → logprob: -2.9424779415130615
    3. '_' → logprob: -4.567478179931641
    4. 'up' → logprob: -6.442478179931641
    5. '(' → logprob: -7.817478179931641
    6. '()' → logprob: -10.31747817993164
    7. '_(' → logprob: -10.56747817993164
    8. '_self' → logprob: -11.19247817993164
    9. '(up' → logprob: -11.19247817993164
    10. 'self' → logprob: -11.81747817993164

Token 96: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0007129086880013347
    2. '(' → logprob: -7.875712871551514
    3. 'self' → logprob: -8.125713348388672
    4. ' self' → logprob: -11.375713348388672
    5. '(
' → logprob: -11.500713348388672
    6. '   ' → logprob: -12.125713348388672
    7. ' (' → logprob: -12.625713348388672
    8. '(cat' → logprob: -13.125713348388672
    9. 'cat' → logprob: -13.375713348388672
    10. '(s' → logprob: -13.750713348388672

Token 97: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007732145953923464
    2. 'self' → logprob: -4.882731914520264
    3. ' ,' → logprob: -9.382732391357422
    4. '   ' → logprob: -10.757732391357422
    5. ' self' → logprob: -11.507732391357422
    6. '       ' → logprob: -12.757732391357422
    7. 'cat' → logprob: -12.882732391357422
    8. ',self' → logprob: -13.757732391357422
    9. ' ' → logprob: -13.882732391357422
    10. ' cat' → logprob: -14.007732391357422

Token 98: ' cat' (ID: 9059)
  Prédit: ' cat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cat' → logprob: -0.331341952085495
    2. ' self' → logprob: -1.8313419818878174
    3. 'self' → logprob: -2.5813419818878174
    4. 'cat' → logprob: -3.0813419818878174
    5. '   ' → logprob: -8.706341743469238
    6. '    ' → logprob: -9.956341743469238
    7. ' ' → logprob: -11.081341743469238
    8. '       ' → logprob: -11.206341743469238
    9. '```' → logprob: -12.331341743469238
    10. '	self' → logprob: -12.768841743469238

Token 99: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -2.7133641196996905e-05
    2. '_ids' → logprob: -11.37502670288086
    3. ')_' → logprob: -12.00002670288086
    4. '_' → logprob: -12.62502670288086
    5. ' _' → logprob: -13.25002670288086
    6. '_i' → logprob: -14.00002670288086
    7. ')' → logprob: -14.00002670288086
    8. 's' → logprob: -14.75002670288086
    9. '}_' → logprob: -14.75002670288086
    10. 'id' → logprob: -14.75002670288086

Token 100: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09344875067472458
    2. '):' → logprob: -2.4684486389160156
    3. ')' → logprob: -5.593448638916016
    4. ' ):' → logprob: -7.718448638916016
    5. '):
' → logprob: -8.843448638916016
    6. '   ' → logprob: -9.843448638916016
    7. ' :' → logprob: -9.843448638916016
    8. 'self' → logprob: -10.468448638916016
    9. ':int' → logprob: -10.718448638916016
    10. ' )' → logprob: -11.093448638916016

Token 101: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.28246650099754333
    2. 'int' → logprob: -1.4074665307998657
    3. ' ' → logprob: -7.532466411590576
    4. ')' → logprob: -8.157466888427734
    5. ' )' → logprob: -8.407466888427734
    6. '   ' → logprob: -9.657466888427734
    7. ' cat' → logprob: -9.907466888427734
    8. '    ' → logprob: -10.657466888427734
    9. ' self' → logprob: -10.657466888427734
    10. ' ):
' → logprob: -10.657466888427734

Token 102: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7991530895233154
    2. '):' → logprob: -0.7991530895233154
    3. '):
' → logprob: -2.2991530895233154
    4. '   ' → logprob: -9.049153327941895
    5. ':' → logprob: -10.174153327941895
    6. '):
' → logprob: -10.424153327941895
    7. ' ):' → logprob: -10.549153327941895
    8. ' )' → logprob: -11.299153327941895
    9. ' ):
' → logprob: -12.049153327941895
    10. '):

' → logprob: -13.049153327941895

Token 103: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11529133468866348
    2. ' self' → logprob: -2.2402913570404053
    3. 'self' → logprob: -6.240291118621826
    4. '   ' → logprob: -7.615291118621826
    5. '```' → logprob: -11.240291595458984
    6. '	self' → logprob: -12.615291595458984
    7. ' for' → logprob: -13.615291595458984
    8. '           ' → logprob: -13.615291595458984
    9. ' ' → logprob: -13.990291595458984
    10. ' ' → logprob: -14.115291595458984

Token 104: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.09449540823698044
    2. 'self' (adapté à ' self') → logprob: -2.7194952964782715
    3. '       ' → logprob: -3.7194952964782715
    4. '   ' → logprob: -11.84449577331543
    5. '	self' → logprob: -12.71949577331543
    6. '```' → logprob: -13.59449577331543
    7. ' ' → logprob: -14.21949577331543
    8. ' for' → logprob: -14.84449577331543
    9. ' return' → logprob: -15.21949577331543
    10. ' ' → logprob: -15.34449577331543

Token 105: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -9.088346359931165e-07
    2. ' .' → logprob: -14.000000953674316
    3. '   ' → logprob: -18.125
    4. '.oc' → logprob: -18.25
    5. '​.' → logprob: -18.375
    6. '.available' → logprob: -18.75
    7. '._' → logprob: -19.0
    8. 'occupied' → logprob: -19.5
    9. '```' → logprob: -19.5
    10. '.used' → logprob: -19.75

Token 106: 'occupied' (ID: 98229)
  Prédit: 'occupied'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occupied' → logprob: -4.320199877838604e-07
    2. 'occup' → logprob: -15.25
    3. ' occupied' → logprob: -15.625
    4. '.' → logprob: -19.5
    5. 'ocup' → logprob: -19.5
    6. '   ' → logprob: -19.875
    7. 'Occupied' → logprob: -20.0
    8. 'owned' → logprob: -20.125
    9. ' ' → logprob: -20.25
    10. '```' → logprob: -21.625

Token 107: '_spaces' (ID: 180762)
  Prédit: '_spaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_spaces' → logprob: -1.6240566083070007e-06
    2. '_' → logprob: -14.125001907348633
    3. '_places' → logprob: -15.625001907348633
    4. '_space' → logprob: -16.000001907348633
    5. '_ranges' → logprob: -16.125001907348633
    6. 'spaces' → logprob: -16.500001907348633
    7. '_sp' → logprob: -16.625001907348633
    8. '_states' → logprob: -16.750001907348633
    9. '_s' → logprob: -16.875001907348633
    10. '_positions' → logprob: -17.125001907348633

Token 108: '.release' (ID: 50070)
  Prédit: '.release'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.release' → logprob: -0.25429168343544006
    2. '.remove' → logprob: -1.7542916536331177
    3. '.free' → logprob: -3.0042917728424072
    4. '.clear' → logprob: -6.879291534423828
    5. '.' → logprob: -7.629291534423828
    6. '.v' → logprob: -9.504291534423828
    7. '.leave' → logprob: -9.504291534423828
    8. '.erase' → logprob: -10.129291534423828
    9. '.delete' → logprob: -10.129291534423828
    10. '.de' → logprob: -10.254291534423828

Token 109: '_cat' (ID: 50384)
  Prédit: '(cat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cat' → logprob: -0.0003160393098369241
    2. '(c' → logprob: -8.75031566619873
    3. '(' → logprob: -8.87531566619873
    4. '_cat' → logprob: -11.50031566619873
    5. '(car' → logprob: -13.25031566619873
    6. 'cat' → logprob: -13.37531566619873
    7. '_by' → logprob: -13.50031566619873
    8. '(id' → logprob: -14.50031566619873
    9. '(lambda' → logprob: -15.12531566619873
    10. '_id' → logprob: -15.37531566619873

Token 110: '(cat' (ID: 107890)
  Prédit: '(cat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cat' → logprob: -4.036524842376821e-05
    2. '(' → logprob: -10.250040054321289
    3. '(c' → logprob: -12.875040054321289
    4. '(id' → logprob: -13.750040054321289
    5. '_cat' → logprob: -14.625040054321289
    6. '_id' → logprob: -15.500040054321289
    7. '(cap' → logprob: -15.500040054321289
    8. '(car' → logprob: -15.625040054321289
    9. '_(' → logprob: -15.875040054321289
    10. '_positions' → logprob: -16.50004005432129

Token 111: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -7.465036105713807e-06
    2. '_' → logprob: -12.750007629394531
    3. 'id' → logprob: -12.875007629394531
    4. ')' → logprob: -14.250007629394531
    5. ')_' → logprob: -14.625007629394531
    6. '_i' → logprob: -14.875007629394531
    7. '_ids' → logprob: -15.625007629394531
    8. ' _' → logprob: -15.875007629394531
    9. 'd' → logprob: -17.25000762939453
    10. '_)' → logprob: -17.75000762939453

Token 112: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.60414821645827e-06
    2. ')
' → logprob: -12.375004768371582
    3. ' )' → logprob: -15.250004768371582
    4. '   ' → logprob: -17.375003814697266
    5. ')

' → logprob: -17.500003814697266
    6. '<|end|>' → logprob: -17.875003814697266
    7. '())' → logprob: -18.250003814697266
    8. '       ' → logprob: -18.875003814697266
    9. '()' → logprob: -19.125003814697266
    10. '))' → logprob: -19.125003814697266

Token 113: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.12065206468105316
    2. '<|end|>' → logprob: -2.370651960372925
    3. '```' → logprob: -4.620652198791504
    4. '<|end|>' → logprob: -5.620652198791504
    5. ' class' → logprob: -5.995652198791504
    6. '
' → logprob: -6.370652198791504
    7. '.' → logprob: -6.495652198791504
    8. '#' → logprob: -7.620652198791504
    9. ':' → logprob: -9.120652198791504
    10. 'c' → logprob: -9.370652198791504

Token 114: ' Interval' (ID: 80693)
  Prédit: ' Interval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Interval' → logprob: -0.0017072015907615423
    2. 'Interval' → logprob: -6.751707077026367
    3. ' ' → logprob: -7.876707077026367
    4. ' Space' → logprob: -9.501707077026367
    5. ' ' → logprob: -10.376707077026367
    6. ' Cat' → logprob: -11.251707077026367
    7. ' interval' → logprob: -11.876707077026367
    8. ' Fence' → logprob: -12.001707077026367
    9. '  ' → logprob: -12.501707077026367
    10. '_interval' → logprob: -12.626707077026367

Token 115: 'Manager' (ID: 2774)
  Prédit: 'Manager'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Manager' → logprob: -1.5928495486150496e-05
    2. '_manager' → logprob: -11.750016212463379
    3. '_Manager' → logprob: -11.875016212463379
    4. 'manager' → logprob: -14.500016212463379
    5. ' Manager' → logprob: -15.375016212463379
    6. ':' → logprob: -16.750015258789062
    7. '_MANAGER' → logprob: -16.750015258789062
    8. 'Man' → logprob: -17.000015258789062
    9. ' manager' → logprob: -17.125015258789062
    10. 'Manage' → logprob: -17.625015258789062

Token 116: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005423080874606967
    2. ':
' → logprob: -7.625542163848877
    3. '(' → logprob: -10.375542640686035
    4. '(object' → logprob: -11.500542640686035
    5. ' :' → logprob: -12.125542640686035
    6. ':def' → logprob: -12.250542640686035
    7. '():' → logprob: -14.375542640686035
    8. ':

' → logprob: -14.500542640686035
    9. '   ' → logprob: -15.000542640686035
    10. '):' → logprob: -15.625542640686035

Token 117: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09439171105623245
    2. ' def' → logprob: -2.4693918228149414
    3. 'def' → logprob: -5.219391822814941
    4. '```' → logprob: -11.844391822814941
    5. ':' → logprob: -12.344391822814941
    6. '	def' → logprob: -12.594391822814941
    7. '<|end|>' → logprob: -12.844391822814941
    8. '    ' → logprob: -13.469391822814941
    9. '    
' → logprob: -13.469391822814941
    10. 'class' → logprob: -13.719391822814941

Token 118: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.12714479863643646
    2. 'def' (adapté à ' def') → logprob: -2.1271448135375977
    3. '   ' → logprob: -8.502144813537598
    4. 'class' → logprob: -12.002144813537598
    5. ' ' → logprob: -12.627144813537598
    6. 'from' → logprob: -13.502144813537598
    7. '	def' → logprob: -13.877144813537598
    8. '```' → logprob: -14.252144813537598
    9. 'import' → logprob: -14.502144813537598
    10. ' class' → logprob: -15.127144813537598

Token 119: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.005299692507833242
    2. '__' → logprob: -5.3802995681762695
    3. ' ' → logprob: -7.3802995681762695
    4. '_init' → logprob: -11.25529956817627
    5. ' ___' → logprob: -11.75529956817627
    6. ' init' → logprob: -11.75529956817627
    7. ' ' → logprob: -12.13029956817627
    8. '_' → logprob: -12.13029956817627
    9. ' def' → logprob: -12.63029956817627
    10. '().__' → logprob: -12.88029956817627

Token 120: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -5.319370302458992e-06
    2. ' init' → logprob: -12.250005722045898
    3. '   ' → logprob: -15.500005722045898
    4. '```' → logprob: -16.0000057220459
    5. ' ' → logprob: -17.5000057220459
    6. '
' → logprob: -17.6250057220459
    7. '  ' → logprob: -18.0000057220459
    8. '	init' → logprob: -18.0000057220459
    9. 'ini' → logprob: -18.2500057220459
    10. '    ' → logprob: -18.2500057220459

Token 121: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.07077087461948395
    2. '(self' → logprob: -2.6957709789276123
    3. ' (' → logprob: -8.195771217346191
    4. '_(' → logprob: -8.695771217346191
    5. '(' → logprob: -8.820771217346191
    6. 'self' → logprob: -9.070771217346191
    7. '__(
' → logprob: -9.570771217346191
    8. '__' → logprob: -11.195771217346191
    9. ' ' → logprob: -11.320771217346191
    10. '>(' → logprob: -12.320771217346191

Token 122: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.002808202290907502
    2. ' self' → logprob: -5.877808094024658
    3. '   ' → logprob: -14.002808570861816
    4. ' ' → logprob: -14.252808570861816
    5. '
' → logprob: -14.377808570861816
    6. '0' → logprob: -15.002808570861816
    7. 'elf' → logprob: -15.502808570861816
    8. '(self' → logprob: -15.502808570861816
    9. ',' → logprob: -15.752808570861816
    10. 's' → logprob: -16.0028076171875

Token 123: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010303239338099957
    2. 'self' → logprob: -5.010303020477295
    3. ' ,' → logprob: -6.010303020477295
    4. '(self' → logprob: -7.635303020477295
    5. ' self' → logprob: -7.760303020477295
    6. ' (' → logprob: -8.760303497314453
    7. '<|end|>' → logprob: -10.760303497314453
    8. ',self' → logprob: -11.135303497314453
    9. ' ' → logprob: -11.260303497314453
    10. ')' → logprob: -12.885303497314453

Token 124: ' width' (ID: 4345)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -1.040867805480957
    2. ' max' → logprob: -1.415867805480957
    3. ' width' → logprob: -1.415867805480957
    4. ' length' → logprob: -2.665867805480957
    5. ' size' → logprob: -3.040867805480957
    6. ' capacity' → logprob: -3.665867805480957
    7. 'total' → logprob: -5.040867805480957
    8. 'max' → logprob: -5.165867805480957
    9. 'width' → logprob: -6.165867805480957
    10. 'length' → logprob: -6.290867805480957

Token 125: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.38921624422073364
    2. '):' → logprob: -1.1392161846160889
    3. ' ):' → logprob: -6.264216423034668
    4. ' :' → logprob: -8.139216423034668
    5. ':int' → logprob: -9.264216423034668
    6. '):
' → logprob: -10.514216423034668
    7. ')' → logprob: -10.764216423034668
    8. '   ' → logprob: -14.264216423034668
    9. ' )' → logprob: -14.514216423034668
    10. '}:' → logprob: -14.514216423034668

Token 126: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4295421540737152
    2. ' int' → logprob: -1.0545421838760376
    3. 'self' → logprob: -7.429542064666748
    4. ' self' → logprob: -8.554542541503906
    5. 'width' → logprob: -11.304542541503906
    6. ')' → logprob: -11.429542541503906
    7. '   ' → logprob: -11.804542541503906
    8. ':int' → logprob: -11.929542541503906
    9. ' width' → logprob: -11.929542541503906
    10. ' ' → logprob: -12.679542541503906

Token 127: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4749707579612732
    2. '):' → logprob: -0.9749707579612732
    3. ')' → logprob: -7.099970817565918
    4. '):
' → logprob: -10.224970817565918
    5. ' ):
' → logprob: -11.224970817565918
    6. ' ):' → logprob: -11.974970817565918
    7. '   ' → logprob: -12.099970817565918
    8. ':' → logprob: -12.474970817565918
    9. '):

' → logprob: -13.724970817565918
    10. '       ' → logprob: -14.349970817565918

Token 128: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0023769615218043327
    2. ' self' → logprob: -6.752377033233643
    3. 'self' → logprob: -6.752377033233643
    4. '):
' → logprob: -11.252376556396484
    5. '   ' → logprob: -12.127376556396484
    6. ',' → logprob: -12.502376556396484
    7. ':' → logprob: -13.002376556396484
    8. '
' → logprob: -13.127376556396484
    9. '):' → logprob: -13.252376556396484
    10. '(self' → logprob: -13.377376556396484

Token 129: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.033819157630205154
    2. ' self' → logprob: -3.5338191986083984
    3. '       ' → logprob: -5.533819198608398
    4. 'from' → logprob: -9.283819198608398
    5. '   ' → logprob: -11.408819198608398
    6. '	self' → logprob: -12.908819198608398
    7. ' from' → logprob: -14.033819198608398
    8. 'super' → logprob: -14.533819198608398
    9. 'import' → logprob: -14.658819198608398
    10. '#' → logprob: -15.033819198608398

Token 130: '.width' (ID: 11038)
  Prédit: '.width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.width' → logprob: -0.1624075025320053
    2. '.' → logprob: -1.9124075174331665
    3. ' .' → logprob: -6.412407398223877
    4. 'width' → logprob: -8.787407875061035
    5. '.available' → logprob: -8.912407875061035
    6. '.w' → logprob: -9.537407875061035
    7. '.capacity' → logprob: -11.287407875061035
    8. '.positions' → logprob: -11.787407875061035
    9. ' width' → logprob: -11.912407875061035
    10. '._' → logprob: -12.037407875061035

Token 131: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47411301732063293
    2. '=' → logprob: -0.9741129875183105
    3. ' ' → logprob: -10.849113464355469
    4. '   ' → logprob: -11.724113464355469
    5. ')' → logprob: -12.724113464355469
    6. ':' → logprob: -13.099113464355469
    7. ',' → logprob: -13.349113464355469
    8. '=int' → logprob: -14.349113464355469
    9. '    ' → logprob: -15.349113464355469
    10. '<|end|>' → logprob: -15.724113464355469

Token 132: ' width' (ID: 4345)
  Prédit: 'width'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'width' → logprob: -0.38687485456466675
    2. ' width' → logprob: -1.1368749141693115
    3. '	width' → logprob: -13.63687515258789
    4. '   ' → logprob: -13.76187515258789
    5. '(width' → logprob: -14.38687515258789
    6. '    ' → logprob: -15.26187515258789
    7. ' ' → logprob: -15.38687515258789
    8. '
' → logprob: -15.76187515258789
    9. ';width' → logprob: -16.26187515258789
    10. '       ' → logprob: -16.51187515258789

Token 133: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004928223788738251
    2. 'self' → logprob: -5.629928112030029
    3. '
' → logprob: -7.379928112030029
    4. ' self' → logprob: -7.879928112030029
    5. ',' → logprob: -8.129928588867188
    6. '<|end|>' → logprob: -11.754928588867188
    7. '   ' → logprob: -12.254928588867188
    8. '	self' → logprob: -12.879928588867188
    9. ',self' → logprob: -12.879928588867188
    10. '(self' → logprob: -13.254928588867188

Token 134: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.688504695892334
    2. 'self' → logprob: -0.813504695892334
    3. ' self' → logprob: -2.938504695892334
    4. '
' → logprob: -7.563504695892334
    5. 'from' → logprob: -7.688504695892334
    6. '	self' → logprob: -9.188505172729492
    7. 'import' → logprob: -9.188505172729492
    8. ',' → logprob: -9.813505172729492
    9. '#' → logprob: -10.063505172729492
    10. '```' → logprob: -10.688505172729492

Token 135: ' self' (ID: 1051)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.05532149225473404
    2. '[]
' → logprob: -3.055321455001831
    3. 'self' (adapté à ' self') → logprob: -5.05532169342041
    4. '{}' → logprob: -8.18032169342041
    5. ' []' → logprob: -10.93032169342041
    6. '[]

' → logprob: -11.68032169342041
    7. 'set' → logprob: -12.18032169342041
    8. '{}
' → logprob: -12.18032169342041
    9. '[' → logprob: -12.55532169342041
    10. '[],' → logprob: -13.30532169342041

Token 136: '.inter' (ID: 19028)
  Prédit: '.inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.inter' → logprob: -0.5392435789108276
    2. '.' → logprob: -1.4142435789108276
    3. 'occupied' → logprob: -2.789243698120117
    4. 'interval' → logprob: -3.414243698120117
    5. '_inter' → logprob: -4.039243698120117
    6. ' intervals' → logprob: -4.164243698120117
    7. 'inter' → logprob: -4.414243698120117
    8. '.cat' → logprob: -4.539243698120117
    9. 'cats' → logprob: -5.789243698120117
    10. 'cat' → logprob: -5.914243698120117

Token 137: 'vals' (ID: 44567)
  Prédit: 'vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.004735803231596947
    2. 'als' → logprob: -6.254735946655273
    3. ' vals' → logprob: -6.504735946655273
    4. 'val' → logprob: -7.379735946655273
    5. '```' → logprob: -8.379735946655273
    6. '   ' → logprob: -9.942235946655273
    7. 'interval' → logprob: -10.192235946655273
    8. '#' → logprob: -10.567235946655273
    9. 'erv' → logprob: -10.629735946655273
    10. ' intervals' → logprob: -10.629735946655273

Token 138: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01723291352391243
    2. '=' → logprob: -4.142232894897461
    3. ':' → logprob: -6.767232894897461
    4. '=[]' → logprob: -10.392232894897461
    5. ' ' → logprob: -11.642232894897461
    6. ' :' → logprob: -12.517232894897461
    7. '   ' → logprob: -14.017232894897461
    8. 's' → logprob: -14.517232894897461
    9. '  ' → logprob: -14.767232894897461
    10. '[' → logprob: -14.892232894897461

Token 139: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.26318359375
    2. ' list' → logprob: -1.88818359375
    3. 'dict' → logprob: -2.63818359375
    4. ' dict' → logprob: -4.76318359375
    5. 'List' → logprob: -12.13818359375
    6. 'set' → logprob: -12.26318359375
    7. '	list' → logprob: -12.76318359375
    8. '   ' → logprob: -13.01318359375
    9. '[list' → logprob: -13.26318359375
    10. ' ' → logprob: -13.38818359375

Token 140: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.003458229824900627
    2. '[int' → logprob: -6.378458023071289
    3. '=' → logprob: -6.878458023071289
    4. ' =' → logprob: -7.628458023071289
    5. '[list' → logprob: -9.128458023071289
    6. '[(' → logprob: -9.753458023071289
    7. '=[]' → logprob: -10.253458023071289
    8. '(tuple' → logprob: -11.503458023071289
    9. '[type' → logprob: -12.128458023071289
    10. '[
' → logprob: -12.128458023071289

Token 141: 'Interval' (ID: 13947)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.013130230829119682
    2. ' tuple' → logprob: -4.388130187988281
    3. '(tuple' → logprob: -8.013130187988281
    4. '   ' → logprob: -9.513130187988281
    5. 'Interval' → logprob: -9.763130187988281
    6. '[' → logprob: -9.888130187988281
    7. 'interval' → logprob: -10.388130187988281
    8. ' ' → logprob: -10.888130187988281
    9. ']' → logprob: -10.888130187988281
    10. 'Tuple' → logprob: -11.138130187988281

Token 142: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -6.659005157416686e-05
    2. '[' → logprob: -9.875066757202148
    3. '[int' → logprob: -11.250066757202148
    4. ']=' → logprob: -13.625066757202148
    5. ' ]' → logprob: -14.750066757202148
    6. '[Any' → logprob: -15.875066757202148
    7. ']
' → logprob: -16.75006675720215
    8. ']]' → logprob: -16.75006675720215
    9. '`]' → logprob: -17.12506675720215
    10. ']int' → logprob: -17.37506675720215

Token 143: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25196078419685364
    2. ' =' → logprob: -1.5019607543945312
    3. '=[]' → logprob: -10.876960754394531
    4. '<|end|>' → logprob: -11.751960754394531
    5. ' ' → logprob: -13.001960754394531
    6. '[' → logprob: -13.251960754394531
    7. ']' → logprob: -15.001960754394531
    8. '[]' → logprob: -15.251960754394531
    9. ')' → logprob: -15.251960754394531
    10. '<|end|>' → logprob: -16.75196075439453

Token 144: ' []' (ID: 6126)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.018167732283473015
    2. ' []' → logprob: -4.018167495727539
    3. '[]
' → logprob: -12.018167495727539
    4. '[' → logprob: -12.143167495727539
    5. '[]}' → logprob: -12.268167495727539
    6. ' ' → logprob: -14.393167495727539
    7. '[]

' → logprob: -14.893167495727539
    8. '[]>' → logprob: -14.893167495727539
    9. '[:]' → logprob: -15.393167495727539
    10. '[])' → logprob: -15.643167495727539

Token 145: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.39850738644599915
    2. '<|end|>' → logprob: -1.2735073566436768
    3. '   ' → logprob: -3.2735073566436768
    4. 'class' → logprob: -5.898507595062256
    5. '<|end|>' → logprob: -6.023507595062256
    6. '    
' → logprob: -6.398507595062256
    7. ' 
' → logprob: -7.023507595062256
    8. '

' → logprob: -7.273507595062256
    9. 'def' → logprob: -7.523507595062256
    10. '  
' → logprob: -8.023507118225098

Token 146: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15230749547481537
    2. '<|end|>' → logprob: -2.0273075103759766
    3. 'class' → logprob: -5.777307510375977
    4. '   ' → logprob: -6.277307510375977
    5. '

' → logprob: -6.402307510375977
    6. 'def' → logprob: -6.652307510375977
    7. '<|end|>' → logprob: -7.152307510375977
    8. '    
' → logprob: -8.152307510375977
    9. '       ' → logprob: -8.902307510375977
    10. ',' → logprob: -9.402307510375977

Token 147: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -1.204955816268921
    2. 'list' → logprob: -2.454955816268921
    3. ' free' → logprob: -2.454955816268921
    4. 'sorted' → logprob: -2.454955816268921
    5. ' sorted' → logprob: -2.579955816268921
    6. 'occupied' → logprob: -2.704955816268921
    7. '[]' → logprob: -3.079955816268921
    8. 'free' → logprob: -3.329955816268921
    9. ' stores' → logprob: -3.454955816268921
    10. ' intervals' → logprob: -3.829955816268921

Token 148: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.223772794008255
    2. '[' → logprob: -1.7237727642059326
    3. '<|end|>' → logprob: -4.223773002624512
    4. 'of' → logprob: -5.098773002624512
    5. '[
' → logprob: -7.223773002624512
    6. '<|end|>' → logprob: -7.973773002624512
    7. '[Index' → logprob: -9.098773002624512
    8. '[int' → logprob: -9.598773002624512
    9. '[]' → logprob: -11.223773002624512
    10. '	of' → logprob: -11.223773002624512

Token 149: ' occupied' (ID: 46186)
  Prédit: 'Interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Interval' → logprob: -0.07619515806436539
    2. ' Interval' → logprob: -3.701195240020752
    3. '(' → logprob: -4.326195240020752
    4. ' intervals' → logprob: -4.701195240020752
    5. 'Intervals' → logprob: -4.951195240020752
    6. ' tuples' → logprob: -5.076195240020752
    7. 'occupied' → logprob: -5.326195240020752
    8. ' (' → logprob: -5.576195240020752
    9. 'interval' → logprob: -6.826195240020752
    10. ' occupied' → logprob: -7.576195240020752

Token 150: ' intervals' (ID: 49900)
  Prédit: ' intervals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' intervals' → logprob: -0.05101826414465904
    2. '<|end|>' → logprob: -3.301018238067627
    3. 'interval' → logprob: -4.801018238067627
    4. 'Intervals' → logprob: -6.801018238067627
    5. ',' → logprob: -6.926018238067627
    6. ' spaces' → logprob: -7.426018238067627
    7. ' (' → logprob: -8.051018714904785
    8. '<|end|>' → logprob: -8.176018714904785
    9. '```' → logprob: -8.426018714904785
    10. 'spaces' → logprob: -8.676018714904785

Token 151: ' sorted' (ID: 20099)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 152: ' by' (ID: 656)
  Prédit: 'by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -0.428739458322525
    2. ' by' → logprob: -1.0537394285202026
    3. ',' → logprob: -11.678739547729492
    4. 'key' → logprob: -12.178739547729492
    5. 'def' → logprob: -12.303739547729492
    6. '(key' → logprob: -12.553739547729492
    7. '[' → logprob: -12.553739547729492
    8. '<|end|>' → logprob: -12.553739547729492
    9. 'from' → logprob: -13.303739547729492
    10. ',key' → logprob: -13.428739547729492

Token 153: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.527508556842804
    2. ' start' → logprob: -0.902508556842804
    3. ' lambda' → logprob: -6.527508735656738
    4. 'lambda' → logprob: -6.652508735656738
    5. ' their' → logprob: -7.652508735656738
    6. '.start' → logprob: -7.777508735656738
    7. 'interval' → logprob: -8.527508735656738
    8. 'begin' → logprob: -8.777508735656738
    9. 'left' → logprob: -9.527508735656738
    10. ' interval' → logprob: -9.902508735656738

Token 154: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 155: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29889535903930664
    2. 'class' → logprob: -1.5488953590393066
    3. '<|end|>' → logprob: -3.9238953590393066
    4. '
' → logprob: -4.298895359039307
    5. 'def' → logprob: -5.173895359039307
    6. '    
' → logprob: -6.298895359039307
    7. 'from' → logprob: -6.798895359039307
    8. ' class' → logprob: -7.173895359039307
    9. '<|end|>' → logprob: -7.298895359039307
    10. 'import' → logprob: -7.923895359039307

Token 156: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.11526637524366379
    2. 'class' → logprob: -2.3652663230895996
    3. ' def' → logprob: -4.2402663230896
    4. '   ' → logprob: -8.365266799926758
    5. ' class' → logprob: -8.365266799926758
    6. '
' → logprob: -10.615266799926758
    7. 'import' → logprob: -10.615266799926758
    8. 'from' → logprob: -10.865266799926758
    9. '```' → logprob: -12.990266799926758
    10. '@dat' → logprob: -12.990266799926758

Token 157: ' find' (ID: 1646)
  Prédit: 'find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'find' → logprob: -0.387371301651001
    2. ' find' → logprob: -1.137371301651001
    3. 'def' → logprob: -8.387371063232422
    4. '_find' → logprob: -8.887371063232422
    5. ' def' → logprob: -9.262371063232422
    6. 'add' → logprob: -11.887371063232422
    7. ' ' → logprob: -12.137371063232422
    8. '	find' → logprob: -12.137371063232422
    9. ' add' → logprob: -12.637371063232422
    10. '.find' → logprob: -13.074871063232422

Token 158: '_gap' (ID: 131234)
  Prédit: '_gap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_gap' → logprob: -0.0024839844554662704
    2. '_' → logprob: -6.00248384475708
    3. '_g' → logprob: -11.752484321594238
    4. ' _' → logprob: -16.252483367919922
    5. '_space' → logprob: -16.877483367919922
    6. '_
' → logprob: -17.377483367919922
    7. '_a' → logprob: -17.502483367919922
    8. '__' → logprob: -17.627483367919922
    9. 'gap' → logprob: -17.627483367919922
    10. '_

' → logprob: -17.627483367919922

Token 159: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.005308231338858604
    2. '(' → logprob: -5.255308151245117
    3. '(
' → logprob: -9.630308151245117
    4. 'self' → logprob: -12.130308151245117
    5. ' (' → logprob: -13.130308151245117
    6. '(

' → logprob: -15.255308151245117
    7. '(s' → logprob: -15.505308151245117
    8. 'def' → logprob: -15.630308151245117
    9. ' self' → logprob: -15.880308151245117
    10. '<|end|>' → logprob: -15.880308151245117

Token 160: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.039373889565467834
    2. 'self' → logprob: -4.414373874664307
    3. '(' → logprob: -4.914373874664307
    4. ')' → logprob: -4.914373874664307
    5. ',' → logprob: -5.039373874664307
    6. ' (' → logprob: -5.789373874664307
    7. ')(' → logprob: -6.414373874664307
    8. ' self' → logprob: -8.414374351501465
    9. '(
' → logprob: -9.539374351501465
    10. 'def' → logprob: -9.664374351501465

Token 161: ' required' (ID: 3759)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5939539670944214
    2. ' self' → logprob: -1.7189539670944214
    3. ' cat' → logprob: -1.9689539670944214
    4. 'cat' → logprob: -3.468954086303711
    5. 'size' → logprob: -3.593954086303711
    6. ' size' → logprob: -3.843954086303711
    7. ' required' → logprob: -4.593954086303711
    8. 'required' → logprob: -4.968954086303711
    9. 'length' → logprob: -5.093954086303711
    10. 'width' → logprob: -5.218954086303711

Token 162: '_width' (ID: 17595)
  Prédit: '_width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_width' → logprob: -0.062083080410957336
    2. '_length' → logprob: -3.3120830059051514
    3. '_' → logprob: -4.1870832443237305
    4. '_size' → logprob: -5.3120832443237305
    5. '):' → logprob: -6.0620832443237305
    6. '_space' → logprob: -8.18708324432373
    7. ':' → logprob: -8.43708324432373
    8. '_len' → logprob: -8.43708324432373
    9. '_:' → logprob: -8.68708324432373
    10. 'width' → logprob: -8.93708324432373

Token 163: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09612273424863815
    2. '):' → logprob: -2.5961227416992188
    3. ',' → logprob: -4.596122741699219
    4. ')' → logprob: -5.346122741699219
    5. 'self' → logprob: -6.846122741699219
    6. '):
' → logprob: -7.346122741699219
    7. '   ' → logprob: -8.221122741699219
    8. ':int' → logprob: -9.096122741699219
    9. ' :' → logprob: -10.096122741699219
    10. ' ):' → logprob: -10.596122741699219

Token 164: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.038534145802259445
    2. ' int' → logprob: -3.288534164428711
    3. ')' → logprob: -7.913534164428711
    4. '   ' → logprob: -9.913534164428711
    5. '):
' → logprob: -10.788534164428711
    6. '):' → logprob: -11.163534164428711
    7. ' ' → logprob: -11.538534164428711
    8. ':int' → logprob: -11.913534164428711
    9. ' )' → logprob: -12.538534164428711
    10. '[int' → logprob: -12.663534164428711

Token 165: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04980961233377457
    2. '):' → logprob: -3.049809694290161
    3. '):
' → logprob: -6.799809455871582
    4. ' )' → logprob: -9.424809455871582
    5. ' ):' → logprob: -11.174809455871582
    6. '   ' → logprob: -12.299809455871582
    7. '):
' → logprob: -12.549809455871582
    8. ')->' → logprob: -13.049809455871582
    9. '):

' → logprob: -14.299809455871582
    10. ' ):
' → logprob: -14.799809455871582

Token 166: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0028972364962100983
    2. ':
' → logprob: -6.002897262573242
    3. '):' → logprob: -8.752897262573242
    4. ')' → logprob: -9.502897262573242
    5. '->' → logprob: -9.752897262573242
    6. '       ' → logprob: -9.877897262573242
    7. ' ->' → logprob: -10.127897262573242
    8. '   ' → logprob: -10.752897262573242
    9. '):
' → logprob: -12.002897262573242
    10. '():' → logprob: -12.502897262573242

Token 167: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.12725995481014252
    2. ' int' → logprob: -2.1272599697113037
    3. 'None' → logprob: -8.502260208129883
    4. ' None' → logprob: -9.002260208129883
    5. ' ' → logprob: -13.627260208129883
    6. 'Optional' → logprob: -13.752260208129883
    7. '0' → logprob: -13.877260208129883
    8. ' Optional' → logprob: -14.127260208129883
    9. '	int' → logprob: -14.877260208129883
    10. '   ' → logprob: -15.002260208129883

Token 168: ' |' (ID: 1022)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00195515644736588
    2. ':
' → logprob: -6.376955032348633
    3. '       ' → logprob: -8.626955032348633
    4. '):' → logprob: -10.126955032348633
    5. ' :' → logprob: -10.876955032348633
    6. '   ' → logprob: -11.876955032348633
    7. '):
' → logprob: -12.626955032348633
    8. ',' → logprob: -14.001955032348633
    9. '():' → logprob: -14.251955032348633
    10. ' :
' → logprob: -14.376955032348633

Token 169: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.006717267446219921
    2. ' None' → logprob: -5.006717205047607
    3. '   ' → logprob: -13.756717681884766
    4. '_None' → logprob: -14.631717681884766
    5. '(None' → logprob: -15.881717681884766
    6. ' ' → logprob: -16.131717681884766
    7. '  ' → logprob: -17.506717681884766
    8. 'Optional' → logprob: -17.631717681884766
    9. '
' → logprob: -17.756717681884766
    10. '.None' → logprob: -18.131717681884766

Token 170: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03047158010303974
    2. '       ' → logprob: -4.0304718017578125
    3. ':
' → logprob: -4.5304718017578125
    4. '):' → logprob: -7.4054718017578125
    5. '   ' → logprob: -7.6554718017578125
    6. '):
' → logprob: -8.905471801757812
    7. '():' → logprob: -8.905471801757812
    8. ',' → logprob: -10.530471801757812
    9. '():
' → logprob: -10.780471801757812
    10. '(self' → logprob: -11.280471801757812

Token 171: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001090447069145739
    2. ' if' → logprob: -7.2510905265808105
    3. ' current' → logprob: -9.251090049743652
    4. 'if' → logprob: -10.001090049743652
    5. '   ' → logprob: -10.001090049743652
    6. '#' → logprob: -10.376090049743652
    7. 'current' → logprob: -10.501090049743652
    8. 'start' → logprob: -10.626090049743652
    9. 'prev' → logprob: -11.001090049743652
    10. '        
' → logprob: -11.376090049743652

Token 172: ' if' (ID: 538)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -1.2019973993301392
    2. 'start' → logprob: -1.4519973993301392
    3. 'current' → logprob: -1.4519973993301392
    4. 'if' (adapté à ' if') → logprob: -1.9519973993301392
    5. ' if' → logprob: -3.5769972801208496
    6. ' current' → logprob: -3.7019972801208496
    7. '       ' → logprob: -4.20199728012085
    8. 'last' → logprob: -4.57699728012085
    9. ' start' → logprob: -5.57699728012085
    10. ' prev' → logprob: -5.70199728012085

Token 173: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.008783798664808273
    2. 'not' → logprob: -4.88378381729126
    3. ' self' → logprob: -7.13378381729126
    4. ' len' → logprob: -8.633783340454102
    5. ' required' → logprob: -9.383783340454102
    6. 'self' → logprob: -9.883783340454102
    7. ' ' → logprob: -10.008783340454102
    8. 'len' → logprob: -11.758783340454102
    9. 'required' → logprob: -11.758783340454102
    10. ' ' → logprob: -13.508783340454102

Token 174: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.38687777519226074
    2. ' self' → logprob: -1.1368777751922607
    3. '	self' → logprob: -13.38687801361084
    4. '
' → logprob: -13.88687801361084
    5. '(self' → logprob: -14.13687801361084
    6. ' ' → logprob: -14.69937801361084
    7. 's' → logprob: -14.94937801361084
    8. 'Self' → logprob: -14.94937801361084
    9. ' ' → logprob: -15.01187801361084
    10. '0' → logprob: -15.13687801361084

Token 175: '.inter' (ID: 19028)
  Prédit: '.inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.inter' → logprob: -0.0006405997555702925
    2. '.' → logprob: -7.375640392303467
    3. ' .' → logprob: -12.125640869140625
    4. 'inter' → logprob: -12.750640869140625
    5. '.in' → logprob: -13.625640869140625
    6. 'self' → logprob: -14.125640869140625
    7. 'interval' → logprob: -14.250640869140625
    8. '_inter' → logprob: -14.375640869140625
    9. '.interval' → logprob: -14.875640869140625
    10. '.int' → logprob: -15.250640869140625

Token 176: 'vals' (ID: 44567)
  Prédit: 'vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.024292251095175743
    2. 'als' → logprob: -4.024292469024658
    3. 'val' → logprob: -5.399292469024658
    4. 'erv' → logprob: -7.899292469024658
    5. '```' → logprob: -8.0242919921875
    6. '   ' → logprob: -8.1492919921875
    7. 'al' → logprob: -8.7742919921875
    8. '[' → logprob: -9.3992919921875
    9. 't' → logprob: -9.3992919921875
    10. 's' → logprob: -9.7742919921875

Token 177: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0034640561789274216
    2. ' or' → logprob: -5.878464221954346
    3. ':
' → logprob: -7.378464221954346
    4. 'or' → logprob: -10.878463745117188
    5. ':return' → logprob: -11.753463745117188
    6. ' :' → logprob: -12.253463745117188
    7. '[' → logprob: -13.378463745117188
    8. ' and' → logprob: -14.128463745117188
    9. ':

' → logprob: -15.628463745117188
    10. 'and' → logprob: -15.878463745117188

Token 178: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6565000414848328
    2. ':' → logprob: -1.1565001010894775
    3. ':
' → logprob: -2.5315001010894775
    4. '0' → logprob: -2.7815001010894775
    5. '           ' → logprob: -4.031499862670898
    6. ' return' → logprob: -6.156499862670898
    7. ':return' → logprob: -6.531499862670898
    8. ' and' → logprob: -6.906499862670898
    9. 'return' → logprob: -7.531499862670898
    10. ' or' → logprob: -7.656499862670898

Token 179: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.031358107924461365
    2. ' return' → logprob: -3.531358003616333
    3. '0' → logprob: -6.656358242034912
    4. '           ' → logprob: -8.156357765197754
    5. 'if' (adapté à ' if') → logprob: -10.906357765197754
    6. '       ' → logprob: -12.281357765197754
    7. ' if' → logprob: -12.531357765197754
    8. '```' → logprob: -12.781357765197754
    9. '               ' → logprob: -13.781357765197754
    10. '
' → logprob: -13.906357765197754

Token 180: ' required' (ID: 3759)
  Prédit: 'required'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'required' → logprob: -0.3871743679046631
    2. ' required' → logprob: -1.137174367904663
    3. '	required' → logprob: -9.137174606323242
    4. 'self' → logprob: -9.137174606323242
    5. '(required' → logprob: -10.012174606323242
    6. ' self' → logprob: -10.262174606323242
    7. '0' → logprob: -12.762174606323242
    8. '   ' → logprob: -13.137174606323242
    9. '_required' → logprob: -13.387174606323242
    10. ' ' → logprob: -14.262174606323242

Token 181: '_width' (ID: 17595)
  Prédit: '_width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_width' → logprob: -5.5861724831629544e-05
    2. '<=' → logprob: -10.125056266784668
    3. '_' → logprob: -11.375056266784668
    4. ' <=' → logprob: -13.250056266784668
    5. ' _' → logprob: -14.250056266784668
    6. '_w' → logprob: -14.625056266784668
    7. 'width' → logprob: -14.875056266784668
    8. '_length' → logprob: -15.125056266784668
    9. '   ' → logprob: -15.500056266784668
    10. '_WIDTH' → logprob: -15.875056266784668

Token 182: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.31326258182525635
    2. ' <=' → logprob: -1.3132625818252563
    3. ']<=' → logprob: -14.938262939453125
    4. ')<=' → logprob: -15.063262939453125
    5. '>' → logprob: -16.563262939453125
    6. ' ' → logprob: -16.813262939453125
    7. ' ' → logprob: -16.813262939453125
    8. '<' → logprob: -16.938262939453125
    9. '```' → logprob: -17.938262939453125
    10. '=' → logprob: -18.063262939453125

Token 183: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07889232039451599
    2. ' self' → logprob: -2.578892230987549
    3. '(self' → logprob: -14.078892707824707
    4. '=self' → logprob: -14.328892707824707
    5. '0' → logprob: -15.203892707824707
    6. '	self' → logprob: -15.328892707824707
    7. '[self' → logprob: -15.703892707824707
    8. '
' → logprob: -15.703892707824707
    9. '<|end|>' → logprob: -16.45389175415039
    10. ' ' → logprob: -17.07889175415039

Token 184: '.width' (ID: 11038)
  Prédit: '.width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.width' → logprob: -0.0026650733780115843
    2. '.' → logprob: -6.002665042877197
    3. 'width' → logprob: -8.877665519714355
    4. ' .' → logprob: -10.127665519714355
    5. ' width' → logprob: -11.877665519714355
    6. 'self' → logprob: -13.502665519714355
    7. '.w' → logprob: -15.002665519714355
    8. '.
' → logprob: -15.377665519714355
    9. '	width' → logprob: -15.377665519714355
    10. '
' → logprob: -15.752665519714355

Token 185: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.04887416586279869
    2. ':' → logprob: -3.0488741397857666
    3. ':return' → logprob: -8.673873901367188
    4. ' :
' → logprob: -9.173873901367188
    5. '):
' → logprob: -12.298873901367188
    6. ':
' → logprob: -12.548873901367188
    7. ' :' → logprob: -13.298873901367188
    8. '           ' → logprob: -14.298873901367188
    9. ':

' → logprob: -14.548873901367188
    10. '
' → logprob: -15.298873901367188

Token 186: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6334068775177002
    2. '               ' → logprob: -1.1334068775177002
    3. ':
' → logprob: -2.8834068775177
    4. '0' → logprob: -3.6334068775177
    5. ':' → logprob: -3.6334068775177
    6. 'return' → logprob: -4.258406639099121
    7. ' return' → logprob: -4.383406639099121
    8. ':return' → logprob: -4.633406639099121
    9. '
' → logprob: -6.883406639099121
    10. ' 
' → logprob: -8.008406639099121

Token 187: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0639818012714386
    2. '0' → logprob: -2.813981771469116
    3. ' return' → logprob: -6.313982009887695
    4. '               ' → logprob: -9.063982009887695
    5. '           ' → logprob: -9.438982009887695
    6. '
' → logprob: -12.688982009887695
    7. '                   ' → logprob: -13.313982009887695
    8. ' ' → logprob: -14.938982009887695
    9. '   ' → logprob: -15.438982009887695
    10. ':return' → logprob: -15.563982009887695

Token 188: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '
' → logprob: -21.250001907348633
    4. '   ' → logprob: -21.500001907348633
    5. '۰' → logprob: -21.500001907348633
    6. '```' → logprob: -22.375001907348633
    7. ' ' → logprob: -23.250001907348633
    8. '00' → logprob: -23.250001907348633
    9. '

' → logprob: -23.500001907348633
    10. '０' → logprob: -23.750001907348633

Token 189: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '۰' → logprob: -20.875
    4. '   ' → logprob: -21.25
    5. '```' → logprob: -21.75
    6. '
' → logprob: -21.875
    7. '00' → logprob: -22.125
    8. '000' → logprob: -22.125
    9. '０' → logprob: -22.25
    10. ' ' → logprob: -23.4375

Token 190: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5671022534370422
    2. '       ' → logprob: -0.9421022534370422
    3. '        
' → logprob: -3.6921021938323975
    4. '\n' → logprob: -4.317102432250977
    5. '
' → logprob: -7.067102432250977
    6. '' → logprob: -7.567102432250977
    7. '	' → logprob: -7.692102432250977
    8. '        ' → logprob: -8.192102432250977
    9. '           ' → logprob: -8.317102432250977
    10. '		
' → logprob: -8.317102432250977

Token 191: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008865218609571457
    2. '
' → logprob: -4.8838653564453125
    3. '        
' → logprob: -7.0088653564453125
    4. '           ' → logprob: -9.508865356445312
    5. '   ' → logprob: -9.883865356445312
    6. ' for' → logprob: -10.133865356445312
    7. 'for' → logprob: -10.508865356445312
    8. 'return' → logprob: -10.883865356445312
    9. '
' → logprob: -10.883865356445312
    10. '    
' → logprob: -11.383865356445312

Token 192: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0705777108669281
    2. '
' → logprob: -2.945577621459961
    3. 'return' (adapté à ' return') → logprob: -4.570577621459961
    4. ' return' → logprob: -6.820577621459961
    5. '\n' → logprob: -7.195577621459961
    6. '           ' → logprob: -7.445577621459961
    7. '        
' → logprob: -7.570577621459961
    8. 'else' → logprob: -7.695577621459961
    9. '   ' → logprob: -7.695577621459961
    10. '	' → logprob: -8.195577621459961

Token 193: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.00861456897109747
    2. ' None' → logprob: -4.758614540100098
    3. '(None' → logprob: -18.383615493774414
    4. '_None' → logprob: -18.508615493774414
    5. ',None' → logprob: -19.008615493774414
    6. '
' → logprob: -19.133615493774414
    7. '=None' → logprob: -19.258615493774414
    8. 'none' → logprob: -20.633615493774414
    9. '.None' → logprob: -22.133615493774414
    10. '```' → logprob: -22.258615493774414

Token 194: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016166450455784798
    2. '
' → logprob: -5.016166687011719
    3. '        
' → logprob: -5.391166687011719
    4. ' for' → logprob: -6.766166687011719
    5. ' current' → logprob: -7.016166687011719
    6. 'start' → logprob: -7.391166687011719
    7. 'current' → logprob: -7.516166687011719
    8. 'for' → logprob: -8.141166687011719
    9. 'prev' → logprob: -8.391166687011719
    10. ',' → logprob: -8.516166687011719

Token 195: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7717554569244385
    2. 'prev' → logprob: -1.5217554569244385
    3. 'current' → logprob: -2.2717554569244385
    4. ' current' → logprob: -2.3967554569244385
    5. ' prev' → logprob: -2.5217554569244385
    6. 'last' → logprob: -4.771755218505859
    7. 'start' → logprob: -4.771755218505859
    8. ' last' → logprob: -4.896755218505859
    9. ' gap' → logprob: -5.521755218505859
    10. '
' → logprob: -5.646755218505859

Token 196: ' #' (ID: 1069)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.036646630614995956
    2. 'current' → logprob: -4.286646842956543
    3. 'previous' → logprob: -4.786646842956543
    4. 'last' → logprob: -5.036646842956543
    5. 'start' → logprob: -5.411646842956543
    6. 'if' → logprob: -6.536646842956543
    7. '#' (adapté à ' #') → logprob: -7.286646842956543
    8. ' prev' → logprob: -7.786646842956543
    9. '       ' → logprob: -8.161646842956543
    10. '   ' → logprob: -10.411646842956543

Token 197: ' check' (ID: 2371)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.052692633122205734
    2. 'previous' → logprob: -4.427692413330078
    3. '#' → logprob: -4.677692413330078
    4. 'start' → logprob: -4.677692413330078
    5. 'current' → logprob: -4.927692413330078
    6. 'if' → logprob: -4.927692413330078
    7. ' prev' → logprob: -5.427692413330078
    8. 'last' → logprob: -6.552692413330078
    9. ' previous' → logprob: -9.052692413330078
    10. ' if' → logprob: -9.177692413330078

Token 198: ' before' (ID: 2254)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.5075109004974365
    2. ' between' → logprob: -2.1325109004974365
    3. ' before' → logprob: -2.6325109004974365
    4. ' if' → logprob: -2.8825109004974365
    5. ' for' → logprob: -2.8825109004974365
    6. ' space' → logprob: -3.3825109004974365
    7. ' self' → logprob: -4.132511138916016
    8. ' ' → logprob: -4.507511138916016
    9. 'between' → logprob: -5.007511138916016
    10. 'before' → logprob: -5.507511138916016

Token 199: ' first' (ID: 1577)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.2470712512731552
    2. ' self' → logprob: -1.9970712661743164
    3. 'self' → logprob: -2.8720712661743164
    4. 'the' → logprob: -3.7470712661743164
    5. ' first' → logprob: -5.872071266174316
    6. 'first' → logprob: -8.872071266174316
    7. ' ' → logprob: -10.497071266174316
    8. ' intervals' → logprob: -11.997071266174316
    9. '   ' → logprob: -12.122071266174316
    10. ' any' → logprob: -12.497071266174316

Token 200: ' interval' (ID: 17116)
  Prédit: ' interval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' interval' → logprob: -0.15645650029182434
    2. '_interval' → logprob: -3.031456470489502
    3. 'interval' → logprob: -3.031456470489502
    4. 'self' → logprob: -3.906456470489502
    5. ' self' → logprob: -4.281456470489502
    6. '_' → logprob: -4.531456470489502
    7. ' ' → logprob: -6.406456470489502
    8. '_inter' → logprob: -7.281456470489502
    9. '   ' → logprob: -8.53145694732666
    10. 'space' → logprob: -8.65645694732666

Token 201: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15515311062335968
    2. ' if' → logprob: -2.0301530361175537
    3. '        
' → logprob: -5.530153274536133
    4. 'if' → logprob: -6.280153274536133
    5. ':' → logprob: -7.030153274536133
    6. '0' → logprob: -7.280153274536133
    7. ',' → logprob: -7.405153274536133
    8. ' start' → logprob: -7.405153274536133
    9. 'start' → logprob: -7.655153274536133
    10. '
' → logprob: -7.655153274536133

Token 202: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020500900223851204
    2. ' if' → logprob: -4.645501136779785
    3. ' start' → logprob: -5.270501136779785
    4. 'start' → logprob: -5.645501136779785
    5. 'if' → logprob: -6.645501136779785
    6. '        
' → logprob: -8.770501136779785
    7. '```' → logprob: -9.145501136779785
    8. '
' → logprob: -9.520501136779785
    9. ' first' → logprob: -9.770501136779785
    10. '   ' → logprob: -9.770501136779785

Token 203: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4818134009838104
    2. 'if' (adapté à ' if') → logprob: -0.9818134307861328
    3. 'start' → logprob: -5.606813430786133
    4. ' start' → logprob: -6.231813430786133
    5. '       ' → logprob: -6.356813430786133
    6. '
' → logprob: -9.606813430786133
    7. '        
' → logprob: -9.856813430786133
    8. ' first' → logprob: -9.981813430786133
    9. 'first' → logprob: -9.981813430786133
    10. 'prev' → logprob: -10.356813430786133

Token 204: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.1603076010942459
    2. 'self' → logprob: -1.9103076457977295
    3. ' required' → logprob: -9.535307884216309
    4. 'required' → logprob: -11.535307884216309
    5. '0' → logprob: -14.535307884216309
    6. '   ' → logprob: -14.785307884216309
    7. '(self' → logprob: -15.160307884216309
    8. '	self' → logprob: -16.035306930541992
    9. ' ' → logprob: -16.410306930541992
    10. ' ' → logprob: -18.660306930541992

Token 205: '.inter' (ID: 19028)
  Prédit: '.inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.inter' → logprob: -1.7120533811976202e-05
    2. '.' → logprob: -11.250017166137695
    3. 'inter' → logprob: -13.625017166137695
    4. '_inter' → logprob: -14.500017166137695
    5. '.int' → logprob: -14.500017166137695
    6. '.can' → logprob: -14.875017166137695
    7. ' .' → logprob: -15.000017166137695
    8. '.indices' → logprob: -15.000017166137695
    9. '.interval' → logprob: -15.750017166137695
    10. '   ' → logprob: -16.375017166137695

Token 206: 'vals' (ID: 44567)
  Prédit: 'vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.8204285502433777
    2. 'erv' → logprob: -1.0704286098480225
    3. 'ter' → logprob: -2.3204286098480225
    4. 'val' → logprob: -2.9454286098480225
    5. 'erval' → logprob: -3.5704286098480225
    6. 't' → logprob: -4.820428371429443
    7. 'er' → logprob: -5.070428371429443
    8. 'als' → logprob: -5.195428371429443
    9. '[' → logprob: -5.195428371429443
    10. '   ' → logprob: -5.820428371429443

Token 207: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0002682496269699186
    2. ' and' → logprob: -8.75026798248291
    3. 'and' → logprob: -9.12526798248291
    4. '   ' → logprob: -15.25026798248291
    5. '```' → logprob: -15.87526798248291
    6. ' [' → logprob: -16.000268936157227
    7. 'def' → logprob: -16.500268936157227
    8. ':' → logprob: -16.875268936157227
    9. '[
' → logprob: -16.875268936157227
    10. '==' → logprob: -17.250268936157227

Token 208: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.327856630785391e-05
    2. '[' → logprob: -9.625082969665527
    3. ' ' → logprob: -11.000082969665527
    4. '][' → logprob: -16.000083923339844
    5. '   ' → logprob: -16.125083923339844
    6. '
' → logprob: -16.125083923339844
    7. ']' → logprob: -16.250083923339844
    8. ')' → logprob: -17.125083923339844
    9. 'def' → logprob: -17.687583923339844
    10. ':' → logprob: -18.187583923339844

Token 209: '].' (ID: 1651)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8147218227386475
    2. '.start' → logprob: -0.8147218227386475
    3. ' .' → logprob: -2.5647218227386475
    4. '].' → logprob: -3.5647218227386475
    5. '[' → logprob: -5.314722061157227
    6. ').' → logprob: -5.689722061157227
    7. '}.' → logprob: -8.564722061157227
    8. ' ].' → logprob: -8.564722061157227
    9. '.startswith' → logprob: -9.189722061157227
    10. 'start' → logprob: -9.689722061157227

Token 210: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -2.534558552724775e-05
    2. ' start' → logprob: -10.625025749206543
    3. ' ' → logprob: -15.375025749206543
    4. '0' → logprob: -15.625025749206543
    5. '
' → logprob: -16.000024795532227
    6. '.start' → logprob: -16.125024795532227
    7. '   ' → logprob: -16.375024795532227
    8. 'star' → logprob: -16.500024795532227
    9. 's' → logprob: -17.000024795532227
    10. 'st' → logprob: -17.000024795532227

Token 211: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.03479376807808876
    2. '>=' → logprob: -4.034793853759766
    3. ' >' → logprob: -4.159793853759766
    4. '>' → logprob: -7.284793853759766
    5. ' ' → logprob: -8.534793853759766
    6. ')>=' → logprob: -12.284793853759766
    7. ']>=' → logprob: -12.909793853759766
    8. ' ' → logprob: -13.159793853759766
    9. ' !=' → logprob: -13.909793853759766
    10. ' -' → logprob: -14.534793853759766

Token 212: ' required' (ID: 3759)
  Prédit: 'required'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'required' → logprob: -0.01815415732562542
    2. ' required' → logprob: -4.018154144287109
    3. '	required' → logprob: -13.14315414428711
    4. '(required' → logprob: -13.39315414428711
    5. '_required' → logprob: -14.51815414428711
    6. '.required' → logprob: -15.76815414428711
    7. 'Required' → logprob: -18.14315414428711
    8. '-required' → logprob: -18.51815414428711
    9. '           ' → logprob: -19.01815414428711
    10. '|required' → logprob: -19.26815414428711

Token 213: '_width' (ID: 17595)
  Prédit: '_width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_width' → logprob: -0.044637951999902725
    2. '_required' → logprob: -3.66963791847229
    3. 'required' → logprob: -4.044638156890869
    4. ' required' → logprob: -7.544638156890869
    5. '_' → logprob: -9.544637680053711
    6. '(required' → logprob: -10.419637680053711
    7. 'width' → logprob: -11.419637680053711
    8. ' _' → logprob: -12.294637680053711
    9. '	required' → logprob: -13.669637680053711
    10. '_needed' → logprob: -14.044637680053711

Token 214: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06261229515075684
    2. ':
' → logprob: -2.812612295150757
    3. ':return' → logprob: -7.562612533569336
    4. '       ' → logprob: -9.687612533569336
    5. '           ' → logprob: -10.312612533569336
    6. ' :' → logprob: -11.312612533569336
    7. '):
' → logprob: -12.437612533569336
    8. ' :
' → logprob: -12.562612533569336
    9. '):' → logprob: -12.687612533569336
    10. ':
' → logprob: -13.062612533569336

Token 215: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9222112894058228
    2. '           ' → logprob: -1.0472112894058228
    3. ':
' → logprob: -1.5472112894058228
    4. ':return' → logprob: -3.422211170196533
    5. ' return' → logprob: -6.297211170196533
    6. '       ' → logprob: -6.297211170196533
    7. 'return' → logprob: -6.422211170196533
    8. '               ' → logprob: -7.922211170196533
    9. '
' → logprob: -9.922211647033691
    10. '[' → logprob: -10.047211647033691

Token 216: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.827599823474884
    2. '           ' → logprob: -1.4525997638702393
    3. ' return' → logprob: -1.4525997638702393
    4. '0' → logprob: -2.4525997638702393
    5. '               ' → logprob: -4.827600002288818
    6. ':return' → logprob: -8.32759952545166
    7. ' 
' → logprob: -8.45259952545166
    8. ' ' → logprob: -8.95259952545166
    9. ' ' → logprob: -9.70259952545166
    10. '            
' → logprob: -9.70259952545166

Token 217: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001584850688232109
    2. ' ' → logprob: -8.750158309936523
    3. ' ' → logprob: -20.875158309936523
    4. '۰' → logprob: -21.125158309936523
    5. '           ' → logprob: -21.500158309936523
    6. '   ' → logprob: -21.750158309936523
    7. '00' → logprob: -22.750158309936523
    8. '
' → logprob: -22.875158309936523
    9. '```' → logprob: -22.875158309936523
    10. '       ' → logprob: -23.312658309936523

Token 218: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. '۰' → logprob: -19.875
    4. '   ' → logprob: -21.25
    5. '```' → logprob: -21.375
    6. '00' → logprob: -21.5
    7. '０' → logprob: -21.875
    8. '000' → logprob: -22.0625
    9. '
' → logprob: -22.125
    10. '০' → logprob: -23.0625

Token 219: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06481429934501648
    2. '       ' → logprob: -2.939814329147339
    3. '<|end|>' → logprob: -5.31481409072876
    4. '        
' → logprob: -5.81481409072876
    5. '

' → logprob: -7.56481409072876
    6. '\n' → logprob: -8.064814567565918
    7. '    
' → logprob: -8.814814567565918
    8. '```' → logprob: -8.814814567565918
    9. '<|end|>' → logprob: -8.814814567565918
    10. '   ' → logprob: -8.814814567565918

Token 220: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004641353618353605
    2. ' for' → logprob: -6.629641532897949
    3. '
' → logprob: -6.754641532897949
    4. '        
' → logprob: -7.379641532897949
    5. 'for' → logprob: -7.504641532897949
    6. 'prev' → logprob: -7.879641532897949
    7. '```' → logprob: -8.12964153289795
    8. '   ' → logprob: -9.37964153289795
    9. '      ' → logprob: -10.25464153289795
    10. ',' → logprob: -10.50464153289795

Token 221: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5690050721168518
    2. ' for' → logprob: -1.319005012512207
    3. '       ' → logprob: -1.819005012512207
    4. '
' → logprob: -5.819005012512207
    5. 'prev' → logprob: -7.319005012512207
    6. '   ' → logprob: -8.194005012512207
    7. '```' → logprob: -8.444005012512207
    8. ' prev' → logprob: -8.944005012512207
    9. '        
' → logprob: -10.819005012512207
    10. 'i' → logprob: -11.819005012512207

Token 222: ' check' (ID: 2371)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07951214909553528
    2. ' for' → logprob: -2.579512119293213
    3. 'prev' → logprob: -7.579512119293213
    4. ' prev' → logprob: -9.954512596130371
    5. 'previous' → logprob: -10.954512596130371
    6. '       ' → logprob: -11.079512596130371
    7. '#' → logprob: -11.204512596130371
    8. '   ' → logprob: -12.079512596130371
    9. ' previous' → logprob: -12.204512596130371
    10. ' #' → logprob: -13.579512596130371

Token 223: ' gaps' (ID: 52008)
  Prédit: ' between'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' between' → logprob: -0.0903790220618248
    2. 'between' → logprob: -2.465378999710083
    3. ' after' → logprob: -7.215379238128662
    4. ' for' → logprob: -8.840378761291504
    5. ' in' → logprob: -8.965378761291504
    6. '_between' → logprob: -9.715378761291504
    7. ' self' → logprob: -9.840378761291504
    8. 'self' → logprob: -9.840378761291504
    9. ' the' → logprob: -9.840378761291504
    10. '   ' → logprob: -9.965378761291504

Token 224: ' between' (ID: 2870)
  Prédit: ' between'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' between' → logprob: -0.4502062201499939
    2. 'between' → logprob: -1.0752062797546387
    3. '   ' → logprob: -4.075206279754639
    4. '       ' → logprob: -5.700206279754639
    5. '_between' → logprob: -7.450206279754639
    6. ' ' → logprob: -9.32520580291748
    7. ',' → logprob: -9.82520580291748
    8. 'Between' → logprob: -10.07520580291748
    9. '[' → logprob: -10.57520580291748
    10. '```' → logprob: -10.70020580291748

Token 225: ' intervals' (ID: 49900)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.09881226718425751
    2. 'interval' → logprob: -2.9738123416900635
    3. ' self' → logprob: -3.7238123416900635
    4. ' intervals' → logprob: -3.9738123416900635
    5. '(self' → logprob: -11.223812103271484
    6. 'existing' → logprob: -12.598812103271484
    7. 'the' → logprob: -12.848812103271484
    8. 'Intervals' → logprob: -12.848812103271484
    9. 'adj' → logprob: -13.098812103271484
    10. ' the' → logprob: -13.348812103271484

Token 226: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03508835658431053
    2. ' for' → logprob: -3.785088300704956
    3. 'for' → logprob: -4.785088539123535
    4. '
' → logprob: -5.910088539123535
    5. '        
' → logprob: -7.910088539123535
    6. '   ' → logprob: -8.785088539123535
    7. ',' → logprob: -9.285088539123535
    8. '    
' → logprob: -11.285088539123535
    9. '\n' → logprob: -11.410088539123535
    10. '```' → logprob: -11.660088539123535

Token 227: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008824806660413742
    2. '
' → logprob: -5.258824825286865
    3. ' for' → logprob: -6.008824825286865
    4. 'for' → logprob: -6.883824825286865
    5. '```' → logprob: -10.633824348449707
    6. '   ' → logprob: -10.883824348449707
    7. ',' → logprob: -10.883824348449707
    8. '        
' → logprob: -11.258824348449707
    9. '\n' → logprob: -11.633824348449707
    10. '
' → logprob: -12.008824348449707

Token 228: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.634357213973999
    2. 'for' (adapté à ' for') → logprob: -1.384357213973999
    3. '       ' → logprob: -1.634357213973999
    4. '
' → logprob: -3.759357213973999
    5. '   ' → logprob: -7.384357452392578
    6. '	for' → logprob: -9.509357452392578
    7. '        
' → logprob: -10.009357452392578
    8. '\n' → logprob: -10.259357452392578
    9. '```' → logprob: -10.384357452392578
    10. '
' → logprob: -11.134357452392578

Token 229: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.10021249949932098
    2. 'i' → logprob: -2.350212574005127
    3. '   ' → logprob: -12.850212097167969
    4. ' ' → logprob: -13.350212097167969
    5. ' idx' → logprob: -14.475212097167969
    6. 'index' → logprob: -14.725212097167969
    7. 'idx' → logprob: -15.850212097167969
    8. '	i' → logprob: -15.850212097167969
    9. ' index' → logprob: -16.10021209716797
    10. '  ' → logprob: -16.72521209716797

Token 230: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011530619114637375
    2. 'in' → logprob: -4.51153039932251
    3. ' ' → logprob: -8.386530876159668
    4. '+' → logprob: -9.011530876159668
    5. ',' → logprob: -9.261530876159668
    6. ' ,' → logprob: -11.136530876159668
    7. '  ' → logprob: -12.136530876159668
    8. '	in' → logprob: -12.511530876159668
    9. '1' → logprob: -12.886530876159668
    10. '0' → logprob: -13.136530876159668

Token 231: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4740873873233795
    2. ' range' → logprob: -0.9740873575210571
    3. ' ' → logprob: -11.849087715148926
    4. '   ' → logprob: -13.349087715148926
    5. '	range' → logprob: -14.474087715148926
    6. '  ' → logprob: -14.974087715148926
    7. '1' → logprob: -15.099087715148926
    8. '(range' → logprob: -15.099087715148926
    9. '0' → logprob: -15.724087715148926
    10. '
' → logprob: -17.22408676147461

Token 232: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.2521185576915741
    2. '(' → logprob: -1.5021185874938965
    3. 'len' → logprob: -9.627118110656738
    4. ' len' → logprob: -9.627118110656738
    5. ' (' → logprob: -10.752118110656738
    6. '1' → logprob: -10.877118110656738
    7. ' ' → logprob: -11.127118110656738
    8. '   ' → logprob: -13.377118110656738
    9. '(
' → logprob: -14.752118110656738
    10. '	len' → logprob: -14.752118110656738

Token 233: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.8219583075260743e-05
    2. '(' → logprob: -10.625038146972656
    3. 'self' → logprob: -11.750038146972656
    4. '-' → logprob: -12.625038146972656
    5. ')' → logprob: -13.750038146972656
    6. ' -' → logprob: -14.625038146972656
    7. '(
' → logprob: -15.000038146972656
    8. ' self' → logprob: -15.500038146972656
    9. ' (' → logprob: -15.875038146972656
    10. 's' → logprob: -16.125038146972656

Token 234: '.inter' (ID: 19028)
  Prédit: '.inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.inter' → logprob: -5.8126592193730175e-05
    2. '.' → logprob: -10.1250581741333
    3. 'interval' → logprob: -11.7500581741333
    4. ' .' → logprob: -11.8750581741333
    5. 'inter' → logprob: -14.0000581741333
    6. '.interval' → logprob: -14.2500581741333
    7. '   ' → logprob: -14.3750581741333
    8. '-' → logprob: -14.7500581741333
    9. '_inter' → logprob: -16.000057220458984
    10. ' ' → logprob: -16.125057220458984

Token 235: 'vals' (ID: 44567)
  Prédit: 'vals'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.06048358604311943
    2. 'als' → logprob: -3.310483694076538
    3. 'erv' → logprob: -4.435483455657959
    4. '   ' → logprob: -5.935483455657959
    5. 's' → logprob: -6.560483455657959
    6. ')' → logprob: -6.560483455657959
    7. '[' → logprob: -6.560483455657959
    8. 'val' → logprob: -6.935483455657959
    9. '```' → logprob: -7.810483455657959
    10. '       ' → logprob: -8.685483932495117

Token 236: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.030428677797317505
    2. '-' → logprob: -4.280428886413574
    3. ' -' → logprob: -4.280428886413574
    4. ')-' → logprob: -6.280428886413574
    5. '1' → logprob: -9.405428886413574
    6. ' )' → logprob: -9.405428886413574
    7. '   ' → logprob: -9.780428886413574
    8. '):' → logprob: -10.155428886413574
    9. '[' → logprob: -10.405428886413574
    10. '):
' → logprob: -10.530428886413574

Token 237: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.430408775806427
    2. '-' → logprob: -1.0554087162017822
    3. ')' → logprob: -7.180408954620361
    4. '):
' → logprob: -7.680408954620361
    5. '):' → logprob: -8.305408477783203
    6. ' ' → logprob: -9.430408477783203
    7. '1' → logprob: -9.805408477783203
    8. '   ' → logprob: -10.680408477783203
    9. '()' → logprob: -10.805408477783203
    10. ')-' → logprob: -10.930408477783203

Token 238: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002185118617489934
    2. ' ' → logprob: -6.127185344696045
    3. '   ' → logprob: -17.627185821533203
    4. '0' → logprob: -17.752185821533203
    5. ')' → logprob: -18.252185821533203
    6. '```' → logprob: -18.627185821533203
    7. '2' → logprob: -19.752185821533203
    8. '  ' → logprob: -19.752185821533203
    9. '
' → logprob: -20.002185821533203
    10. '۱' → logprob: -20.502185821533203

Token 239: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.600714161526412e-05
    2. ' ' → logprob: -9.500076293945312
    3. '
' → logprob: -14.750076293945312
    4. '   ' → logprob: -15.375076293945312
    5. '```' → logprob: -15.375076293945312
    6. ')' → logprob: -16.625076293945312
    7. '0' → logprob: -17.375076293945312
    8. '2' → logprob: -17.625076293945312
    9. '  ' → logprob: -18.562576293945312
    10. '

' → logprob: -18.687576293945312

Token 240: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5762712359428406
    2. '):' → logprob: -0.8262712359428406
    3. ' ):' → logprob: -8.826271057128906
    4. ' ):
' → logprob: -9.326271057128906
    5. '):
' → logprob: -9.451271057128906
    6. '):

' → logprob: -12.326271057128906
    7. ':' → logprob: -12.451271057128906
    8. ')' → logprob: -13.326271057128906
    9. ' ' → logprob: -13.701271057128906
    10. '()):
' → logprob: -13.701271057128906

Token 241: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.054871443659067154
    2. '
' → logprob: -3.9298715591430664
    3. ',' → logprob: -4.429871559143066
    4. '           ' → logprob: -4.679871559143066
    5. '   ' → logprob: -6.054871559143066
    6. ' if' → logprob: -6.304871559143066
    7. ':' → logprob: -6.554871559143066
    8. '        
' → logprob: -6.554871559143066
    9. ' 
' → logprob: -7.054871559143066
    10. ':
' → logprob: -7.679871559143066

Token 242: ' gap' (ID: 19953)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.725452721118927
    2. ' next' → logprob: -1.3504526615142822
    3. ' gap' → logprob: -2.1004526615142822
    4. ' if' → logprob: -2.9754526615142822
    5. '           ' → logprob: -3.4754526615142822
    6. 'current' → logprob: -4.225452899932861
    7. 'next' → logprob: -4.350452899932861
    8. ' start' → logprob: -5.100452899932861
    9. 'gap' (adapté à ' gap') → logprob: -5.100452899932861
    10. '       ' → logprob: -5.475452899932861

Token 243: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.5935361385345459
    2. '_end' → logprob: -0.9685361385345459
    3. '_' → logprob: -3.343536138534546
    4. '_size' → logprob: -3.843536138534546
    5. ' =' → logprob: -5.093536376953125
    6. '_width' → logprob: -5.593536376953125
    7. '=' → logprob: -7.218536376953125
    8. '_length' → logprob: -8.218536376953125
    9. ' ' → logprob: -9.218536376953125
    10. 'end' → logprob: -9.468536376953125

Token 244: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31394898891448975
    2. '=' → logprob: -1.3139489889144897
    3. ',' → logprob: -7.313949108123779
    4. ' ,' → logprob: -11.813948631286621
    5. '=self' → logprob: -12.563948631286621
    6. '+' → logprob: -13.188948631286621
    7. ')' → logprob: -13.313948631286621
    8. ' +' → logprob: -13.688948631286621
    9. ' ' → logprob: -14.438948631286621
    10. '=

' → logprob: -14.688948631286621

Token 245: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0017029138980433345
    2. ' self' → logprob: -6.376702785491943
    3. '(self' → logprob: -14.376703262329102
    4. '	self' → logprob: -16.5017032623291
    5. '           ' → logprob: -17.3767032623291
    6. '[self' → logprob: -17.8767032623291
    7. '=self' → logprob: -18.0017032623291
    8. '   ' → logprob: -18.5017032623291
    9. 'interval' → logprob: -18.6267032623291
    10. '       ' → logprob: -18.8767032623291

Token 246: '.inter' (ID: 19028)
  Prédit: '.inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.inter' → logprob: -0.002215084619820118
    2. '[i' → logprob: -7.0022149085998535
    3. 'inter' → logprob: -7.1272149085998535
    4. '_inter' → logprob: -9.252215385437012
    5. '].' → logprob: -9.252215385437012
    6. '.' → logprob: -9.502215385437012
    7. 'interval' → logprob: -9.877215385437012
    8. ']' → logprob: -10.252215385437012
    9. 'i' → logprob: -10.627215385437012
    10. '[' → logprob: -10.752215385437012

Token 247: 'vals' (ID: 44567)
  Prédit: 'als'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'als' → logprob: -0.20057587325572968
    2. 'vals' → logprob: -1.825575828552246
    3. 'val' → logprob: -5.325575828552246
    4. 'al' → logprob: -5.700575828552246
    5. '[' → logprob: -6.075575828552246
    6. '   ' → logprob: -6.325575828552246
    7. 's' → logprob: -6.325575828552246
    8. ')' → logprob: -7.450575828552246
    9. '```' → logprob: -7.450575828552246
    10. 'erv' → logprob: -7.575575828552246

Token 248: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.5048530030981055e-06
    2. '[' → logprob: -14.375001907348633
    3. 's' → logprob: -15.125001907348633
    4. '[
' → logprob: -15.375001907348633
    5. ' [' → logprob: -16.625001907348633
    6. '][' → logprob: -16.875001907348633
    7. '[I' → logprob: -17.375001907348633
    8. '   ' → logprob: -17.500001907348633
    9. 'i' → logprob: -17.500001907348633
    10. '
' → logprob: -17.625001907348633

Token 249: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0001242772996192798
    2. ']' → logprob: -9.375123977661133
    3. '.end' → logprob: -10.750123977661133
    4. ' ].' → logprob: -12.250123977661133
    5. '[' → logprob: -12.375123977661133
    6. '.' → logprob: -12.750123977661133
    7. '}.' → logprob: -13.125123977661133
    8. '+' → logprob: -14.000123977661133
    9. '.right' → logprob: -14.500123977661133
    10. ').' → logprob: -14.500123977661133

Token 250: 'end' (ID: 419)
  Prédit: 'end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -7.481510692741722e-05
    2. 'stop' → logprob: -10.00007438659668
    3. ' end' → logprob: -10.87507438659668
    4. 'start' → logprob: -11.87507438659668
    5. '.end' → logprob: -13.37507438659668
    6. 'finish' → logprob: -13.62507438659668
    7. 'End' → logprob: -16.12507438659668
    8. '	end' → logprob: -16.25007438659668
    9. '(end' → logprob: -16.75007438659668
    10. 'en' → logprob: -16.87507438659668

Token 251: '
' (ID: 198)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.22451607882976532
    2. '
' → logprob: -1.9745160341262817
    3. '+' → logprob: -2.9745161533355713
    4. ' 
' → logprob: -5.224515914916992
    5. '           ' → logprob: -5.724515914916992
    6. '    
' → logprob: -7.599515914916992
    7. '       ' → logprob: -7.849515914916992
    8. '   ' → logprob: -7.974515914916992
    9. '            
' → logprob: -8.474515914916992
    10. '+
' → logprob: -8.474515914916992

Token 252: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.1678826808929443
    2. ' +' → logprob: -1.2928826808929443
    3. ' 
' → logprob: -1.4178826808929443
    4. '+' → logprob: -2.5428826808929443
    5. '       ' → logprob: -3.2928826808929443
    6. '
' → logprob: -3.5428826808929443
    7. '        
' → logprob: -5.042882919311523
    8. '  
' → logprob: -5.167882919311523
    9. ' ' → logprob: -6.167882919311523
    10. '            
' → logprob: -6.167882919311523

Token 253: ' gap' (ID: 19953)
  Prédit: 'gap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gap' (adapté à ' gap') → logprob: -0.6993861198425293
    2. ' gap' → logprob: -1.0743861198425293
    3. '           ' → logprob: -1.8243861198425293
    4. '       ' → logprob: -8.574386596679688
    5. '   ' → logprob: -10.699386596679688
    6. ' if' → logprob: -11.074386596679688
    7. 'if' → logprob: -11.699386596679688
    8. '            ' → logprob: -11.699386596679688
    9. '               ' → logprob: -11.949386596679688
    10. '
' → logprob: -11.949386596679688

Token 254: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.16832192242145538
    2. '_next' → logprob: -2.6683218479156494
    3. '_start' → logprob: -2.9183218479156494
    4. ' =' → logprob: -4.6683220863342285
    5. '+' → logprob: -4.7933220863342285
    6. '=' → logprob: -5.4183220863342285
    7. '_' → logprob: -6.1683220863342285
    8. '           ' → logprob: -6.6683220863342285
    9. '_stop' → logprob: -6.6683220863342285
    10. ' +' → logprob: -7.0433220863342285

Token 255: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03394315764307976
    2. '=' → logprob: -3.4089431762695312
    3. ' ' → logprob: -8.533943176269531
    4. '<|end|>' → logprob: -10.033943176269531
    5. ' +' → logprob: -10.783943176269531
    6. '           ' → logprob: -12.283943176269531
    7. '            ' → logprob: -12.533943176269531
    8. ',' → logprob: -12.658943176269531
    9. '                ' → logprob: -12.908943176269531
    10. ')' → logprob: -13.158943176269531

Token 256: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.014165272004902363
    2. ' self' → logprob: -4.26416540145874
    3. '           ' → logprob: -14.139164924621582
    4. '(self' → logprob: -14.889164924621582
    5. '=self' → logprob: -15.514164924621582
    6. '[self' → logprob: -15.764164924621582
    7. '	self' → logprob: -16.1391658782959
    8. '
' → logprob: -16.5141658782959
    9. 'Self' → logprob: -18.2641658782959
    10. '       ' → logprob: -18.3891658782959

Token 257: '.inter' (ID: 19028)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.0391463193809614e-05
    2. 's' → logprob: -10.750060081481934
    3. '[' → logprob: -11.625060081481934
    4. 'inter' → logprob: -11.750060081481934
    5. 'i' → logprob: -12.000060081481934
    6. '(i' → logprob: -12.250060081481934
    7. '[
' → logprob: -13.125060081481934
    8. '+' → logprob: -13.375060081481934
    9. ' [' → logprob: -13.750060081481934
    10. '.' → logprob: -13.875060081481934

Token 258: 'vals' (ID: 44567)
  Prédit: 'als'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'als' → logprob: -0.11954814940690994
    2. 'vals' → logprob: -2.2445480823516846
    3. 's' → logprob: -5.369548320770264
    4. 'val' → logprob: -7.119548320770264
    5. '[' → logprob: -7.994548320770264
    6. '[
' → logprob: -8.244547843933105
    7. '[i' → logprob: -9.119547843933105
    8. 'al' → logprob: -9.369547843933105
    9. '```' → logprob: -9.869547843933105
    10. ']' → logprob: -10.119547843933105

Token 259: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.09542578458786011
    2. '+' → logprob: -2.470425844192505
    3. '[' → logprob: -5.095425605773926
    4. '[j' → logprob: -9.345425605773926
    5. '1' → logprob: -9.470425605773926
    6. '[next' → logprob: -9.720425605773926
    7. 'plus' → logprob: -10.470425605773926
    8. '[
' → logprob: -10.845425605773926
    9. ' +' → logprob: -11.220425605773926
    10. 'Next' → logprob: -11.470425605773926

Token 260: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.002805467927828431
    2. ' +' → logprob: -5.877805233001709
    3. '].' → logprob: -15.252805709838867
    4. '+i' → logprob: -16.127805709838867
    5. '1' → logprob: -16.377805709838867
    6. '   ' → logprob: -17.002805709838867
    7. '[i' → logprob: -17.127805709838867
    8. '[' → logprob: -17.627805709838867
    9. ' ' → logprob: -17.877805709838867
    10. 's' → logprob: -18.377805709838867

Token 261: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001617035741219297
    2. ' ' → logprob: -8.750162124633789
    3. '0' → logprob: -13.625162124633789
    4. '   ' → logprob: -14.125162124633789
    5. '
' → logprob: -14.875162124633789
    6. 'start' → logprob: -15.250162124633789
    7. '```' → logprob: -15.875162124633789
    8. '  ' → logprob: -15.937662124633789
    9. '<|end|>' → logprob: -17.37516212463379
    10. ']' → logprob: -17.56266212463379

Token 262: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005117765627801418
    2. 'start' → logprob: -5.880117893218994
    3. '0' → logprob: -6.630117893218994
    4. ' ' → logprob: -7.630117893218994
    5. '
' → logprob: -8.630117416381836
    6. 'end' → logprob: -8.880117416381836
    7. 'i' → logprob: -10.005117416381836
    8. 'def' → logprob: -10.880117416381836
    9. '   ' → logprob: -11.005117416381836
    10. '.start' → logprob: -11.317617416381836

Token 263: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -1.0196397304534912
    2. '.start' → logprob: -1.0196397304534912
    3. ').' → logprob: -1.3946397304534912
    4. '.end' → logprob: -3.644639730453491
    5. ' .' → logprob: -6.51963996887207
    6. '}.' → logprob: -6.64463996887207
    7. '.' → logprob: -7.01963996887207
    8. '>.' → logprob: -8.51963996887207
    9. '.s' → logprob: -9.76963996887207
    10. ')' → logprob: -10.14463996887207

Token 264: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -4.60414821645827e-06
    2. ' start' → logprob: -12.375004768371582
    3. '.start' → logprob: -15.000004768371582
    4. '	start' → logprob: -19.500003814697266
    5. 'Start' → logprob: -20.125003814697266
    6. '_start' → logprob: -20.375003814697266
    7. '
' → logprob: -21.000003814697266
    8. ' ' → logprob: -21.125003814697266
    9. '(start' → logprob: -21.250003814697266
    10. '[start' → logprob: -21.375003814697266

Token 265: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3637409508228302
    2. '
' → logprob: -1.6137409210205078
    3. '       ' → logprob: -2.488740921020508
    4. '<|end|>' → logprob: -5.113740921020508
    5. ' 
' → logprob: -5.363740921020508
    6. ' if' → logprob: -5.988740921020508
    7. '            
' → logprob: -6.488740921020508
    8. '        
' → logprob: -6.613740921020508
    9. '  
' → logprob: -6.613740921020508
    10. '<|end|>' → logprob: -6.988740921020508

Token 266: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0015971031971275806
    2. '       ' → logprob: -6.751596927642822
    3. ' if' → logprob: -8.87659740447998
    4. '<|end|>' → logprob: -9.37659740447998
    5. ',' → logprob: -10.00159740447998
    6. '
' → logprob: -10.50159740447998
    7. '            
' → logprob: -11.12659740447998
    8. '	       ' → logprob: -11.37659740447998
    9. '  
' → logprob: -11.37659740447998
    10. '               ' → logprob: -11.50159740447998

Token 267: ' gap' (ID: 19953)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014693068340420723
    2. ' if' → logprob: -4.764693260192871
    3. 'if' → logprob: -5.139693260192871
    4. '
' → logprob: -8.639693260192871
    5. '            
' → logprob: -12.014693260192871
    6. 'gap' (adapté à ' gap') → logprob: -12.139693260192871
    7. '       ' → logprob: -12.264693260192871
    8. '          ' → logprob: -13.014693260192871
    9. '               ' → logprob: -13.889693260192871
    10. ' gap' → logprob: -14.139693260192871

Token 268: '_size' (ID: 5044)
  Prédit: '_width'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_width' → logprob: -0.07861631363630295
    2. '_size' → logprob: -3.0786163806915283
    3. '_' → logprob: -3.9536163806915283
    4. '           ' → logprob: -5.828616142272949
    5. '_length' → logprob: -6.203616142272949
    6. ' =' → logprob: -6.328616142272949
    7. '=' → logprob: -6.328616142272949
    8. '_end' → logprob: -6.953616142272949
    9. '_start' → logprob: -8.20361614227295
    10. '   ' → logprob: -9.07861614227295

Token 269: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020667314529419
    2. '=' → logprob: -2.3502066135406494
    3. '>' → logprob: -17.72520637512207
    4. ' ==' → logprob: -18.10020637512207
    5. ' ' → logprob: -18.35020637512207
    6. ' >=' → logprob: -18.72520637512207
    7. ':' → logprob: -18.85020637512207
    8. ' =
' → logprob: -18.97520637512207
    9. '＝' → logprob: -19.35020637512207
    10. '=g' → logprob: -19.47520637512207

Token 270: ' gap' (ID: 19953)
  Prédit: ' gap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gap' → logprob: -0.011047814972698689
    2. 'gap' → logprob: -4.511047840118408
    3. '           ' → logprob: -16.76104736328125
    4. '_gap' → logprob: -18.01104736328125
    5. ' ' → logprob: -18.76104736328125
    6. '
' → logprob: -19.26104736328125
    7. ' ' → logprob: -19.76104736328125
    8. '            ' → logprob: -19.76104736328125
    9. '-gap' → logprob: -19.88604736328125
    10. 'g' → logprob: -20.76104736328125

Token 271: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -1.8074162653647363e-05
    2. '_start' → logprob: -12.500018119812012
    3. '_' → logprob: -12.625018119812012
    4. '[' → logprob: -13.250018119812012
    5. 'end' → logprob: -13.250018119812012
    6. ' ' → logprob: -13.375018119812012
    7. 'End' → logprob: -13.875018119812012
    8. '   ' → logprob: -13.875018119812012
    9. ')' → logprob: -14.000018119812012
    10. '_END' → logprob: -14.250018119812012

Token 272: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0021874953527003527
    2. '-' → logprob: -6.127187728881836
    3. ' ' → logprob: -13.502187728881836
    4. '-gap' → logprob: -15.002187728881836
    5. ')' → logprob: -15.752187728881836
    6. ' ' → logprob: -15.877187728881836
    7. '           ' → logprob: -16.752187728881836
    8. ' –' → logprob: -16.877187728881836
    9. ' gap' → logprob: -17.127187728881836
    10. '<|end|>' → logprob: -17.252187728881836

Token 273: ' gap' (ID: 19953)
  Prédit: 'gap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gap' → logprob: -0.00671809446066618
    2. ' gap' → logprob: -5.006718158721924
    3. '1' → logprob: -14.256717681884766
    4. '
' → logprob: -14.256717681884766
    5. '           ' → logprob: -14.631717681884766
    6. '_gap' → logprob: -14.631717681884766
    7. 'interval' → logprob: -15.256717681884766
    8. 'g' → logprob: -16.256717681884766
    9. 'gate' → logprob: -16.631717681884766
    10. '-gap' → logprob: -16.756717681884766

Token 274: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -0.11686841398477554
    2. '[i' → logprob: -2.241868495941162
    3. '_end' → logprob: -6.366868495941162
    4. 'start' → logprob: -7.116868495941162
    5. 'i' → logprob: -7.366868495941162
    6. 'Start' → logprob: -8.366868019104004
    7. '_size' → logprob: -8.741868019104004
    8. '(i' → logprob: -8.991868019104004
    9. '[' → logprob: -9.741868019104004
    10. '_i' → logprob: -9.991868019104004

Token 275: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0492904931306839
    2. '
' → logprob: -3.799290418624878
    3. '<|end|>' → logprob: -4.174290657043457
    4. '       ' → logprob: -5.424290657043457
    5. ' if' → logprob: -6.549290657043457
    6. '<|end|>' → logprob: -6.674290657043457
    7. ' 
' → logprob: -7.049290657043457
    8. '               ' → logprob: -7.674290657043457
    9. ' >=' → logprob: -8.549290657043457
    10. '>' → logprob: -8.674290657043457

Token 276: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0029214953538030386
    2. '<|end|>' → logprob: -6.6279215812683105
    3. '       ' → logprob: -6.7529215812683105
    4. '		' → logprob: -9.252921104431152
    5. ' if' → logprob: -9.502921104431152
    6. ' ' → logprob: -9.877921104431152
    7. '<|end|>' → logprob: -9.877921104431152
    8. '          ' → logprob: -10.502921104431152
    9. '   ' → logprob: -10.502921104431152
    10. '            ' → logprob: -11.002921104431152

Token 277: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02114981785416603
    2. ' if' → logprob: -3.8961498737335205
    3. 'if' (adapté à ' if') → logprob: -7.521149635314941
    4. '       ' → logprob: -10.396149635314941
    5. '		' → logprob: -11.521149635314941
    6. ' ' → logprob: -11.771149635314941
    7. '   ' → logprob: -12.396149635314941
    8. ' ' → logprob: -13.146149635314941
    9. 'If' → logprob: -13.146149635314941
    10. '	       ' → logprob: -13.271149635314941

Token 278: ' gap' (ID: 19953)
  Prédit: 'gap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gap' → logprob: -0.475787490606308
    2. ' gap' → logprob: -0.9757875204086304
    3. ' required' → logprob: -6.72578763961792
    4. 'required' → logprob: -7.60078763961792
    5. '           ' → logprob: -11.725787162780762
    6. '_gap' → logprob: -14.600787162780762
    7. 'g' → logprob: -15.725787162780762
    8. '   ' → logprob: -15.850787162780762
    9. '(required' → logprob: -15.850787162780762
    10. ' ' → logprob: -16.225788116455078

Token 279: '_size' (ID: 5044)
  Prédit: '_size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -0.0005107374745421112
    2. ' >=' → logprob: -8.250511169433594
    3. '_start' → logprob: -8.875511169433594
    4. '>=' → logprob: -9.625511169433594
    5. '_' → logprob: -10.750511169433594
    6. '           ' → logprob: -11.750511169433594
    7. '   ' → logprob: -12.625511169433594
    8. '_SIZE' → logprob: -12.875511169433594
    9. 'size' → logprob: -13.500511169433594
    10. ' ' → logprob: -14.000511169433594

Token 280: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.061979226768016815
    2. '>=' → logprob: -2.811979293823242
    3. ' ' → logprob: -11.936979293823242
    4. ']>=' → logprob: -13.561979293823242
    5. '    ' → logprob: -13.936979293823242
    6. '   ' → logprob: -14.061979293823242
    7. ')>=' → logprob: -14.186979293823242
    8. '           ' → logprob: -15.311979293823242
    9. '[' → logprob: -15.311979293823242
    10. ' ' → logprob: -15.561979293823242

Token 281: ' required' (ID: 3759)
  Prédit: 'required'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'required' → logprob: -0.20141635835170746
    2. ' required' → logprob: -1.7014163732528687
    3. '(required' → logprob: -13.451416015625
    4. '	required' → logprob: -13.951416015625
    5. 'requested' → logprob: -14.951416015625
    6. '_required' → logprob: -16.326416015625
    7. '           ' → logprob: -16.451416015625
    8. ' requested' → logprob: -16.576416015625
    9. '
' → logprob: -16.826416015625
    10. '.required' → logprob: -16.951416015625

Token 282: '_width' (ID: 17595)
  Prédit: '_width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_width' → logprob: -3.368984107510187e-05
    2. '_required' → logprob: -11.375033378601074
    3. 'required' → logprob: -11.375033378601074
    4. '_' → logprob: -12.000033378601074
    5. '_size' → logprob: -14.000033378601074
    6. ' required' → logprob: -14.000033378601074
    7. 'width' → logprob: -14.000033378601074
    8. '_WIDTH' → logprob: -15.375033378601074
    9. 'cat' → logprob: -15.375033378601074
    10. '   ' → logprob: -15.500033378601074

Token 283: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03870859369635582
    2. ':
' → logprob: -3.2887086868286133
    3. ':return' → logprob: -7.913708686828613
    4. '               ' → logprob: -8.663708686828613
    5. '           ' → logprob: -9.163708686828613
    6. '       ' → logprob: -12.538708686828613
    7. '):
' → logprob: -12.663708686828613
    8. ' and' → logprob: -12.788708686828613
    9. ' :' → logprob: -12.913708686828613
    10. '):' → logprob: -13.163708686828613

Token 284: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.017440512776374817
    2. ' return' → logprob: -4.142440319061279
    3. ' 
' → logprob: -7.267440319061279
    4. 'return' → logprob: -8.267440795898438
    5. '                
' → logprob: -8.642440795898438
    6. '           ' → logprob: -8.767440795898438
    7. ' ' → logprob: -10.767440795898438
    8. '  
' → logprob: -11.392440795898438
    9. '                   ' → logprob: -11.392440795898438
    10. '
' → logprob: -11.642440795898438

Token 285: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.34844788908958435
    2. 'return' (adapté à ' return') → logprob: -1.5984479188919067
    3. '               ' → logprob: -2.473447799682617
    4. ' 
' → logprob: -5.223447799682617
    5. '                ' → logprob: -6.598447799682617
    6. '           ' → logprob: -8.348447799682617
    7. '                   ' → logprob: -8.348447799682617
    8. ' ' → logprob: -9.223447799682617
    9. ' gap' → logprob: -9.348447799682617
    10. ' ' → logprob: -9.723447799682617

Token 286: ' gap' (ID: 19953)
  Prédit: ' gap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gap' → logprob: -0.029750484973192215
    2. 'gap' → logprob: -3.5297505855560303
    3. '_gap' → logprob: -16.90475082397461
    4. 'Gap' → logprob: -18.77975082397461
    5. '-gap' → logprob: -18.77975082397461
    6. 'g' → logprob: -19.52975082397461
    7. '
' → logprob: -20.40475082397461
    8. ' ' → logprob: -20.52975082397461
    9. ' 
' → logprob: -20.52975082397461
    10. ' gaps' → logprob: -20.65475082397461

Token 287: '_start' (ID: 10949)
  Prédit: '_start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_start' → logprob: -2.093505099765025e-05
    2. '_end' → logprob: -11.000020980834961
    3. ' _' → logprob: -13.375020980834961
    4. '_START' → logprob: -14.125020980834961
    5. 'Start' → logprob: -14.375020980834961
    6. '_' → logprob: -14.375020980834961
    7. '_i' → logprob: -16.12502098083496
    8. '[i' → logprob: -16.12502098083496
    9. '+' → logprob: -16.50002098083496
    10. '_size' → logprob: -16.50002098083496

Token 288: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4201611578464508
    2. '
' → logprob: -1.7951611280441284
    3. '<|end|>' → logprob: -2.170161247253418
    4. '        
' → logprob: -3.795161247253418
    5. '\n' → logprob: -4.920161247253418
    6. '```' → logprob: -5.170161247253418
    7. '#' → logprob: -5.670161247253418
    8. '' → logprob: -6.045161247253418
    9. '<|end|>' → logprob: -6.170161247253418
    10. 'newline' → logprob: -6.170161247253418

Token 289: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008787699043750763
    2. '<|end|>' → logprob: -5.758787631988525
    3. '   ' → logprob: -6.008787631988525
    4. '
' → logprob: -6.258787631988525
    5. '        
' → logprob: -7.383787631988525
    6. '           ' → logprob: -8.758788108825684
    7. '```' → logprob: -9.133788108825684
    8. '<|end|>' → logprob: -9.633788108825684
    9. 'class' → logprob: -10.383788108825684
    10. 'return' → logprob: -10.508788108825684

Token 290: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.2825855016708374
    2. '       ' → logprob: -1.6575855016708374
    3. 'if' → logprob: -3.032585620880127
    4. 'last' → logprob: -5.157585620880127
    5. 'return' → logprob: -7.657585620880127
    6. '
' → logprob: -7.907585620880127
    7. 'gap' → logprob: -8.282585144042969
    8. ' #' → logprob: -9.032585144042969
    9. 'next' → logprob: -9.032585144042969
    10. '```' → logprob: -9.782585144042969

Token 291: ' check' (ID: 2371)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8837457895278931
    2. 'if' → logprob: -1.883745789527893
    3. ' last' → logprob: -1.883745789527893
    4. ' if' → logprob: -2.1337456703186035
    5. 'last' → logprob: -2.6337456703186035
    6. ' #' → logprob: -2.7587456703186035
    7. ' check' → logprob: -4.5087456703186035
    8. 'check' → logprob: -5.1337456703186035
    9. '       ' → logprob: -5.3837456703186035
    10. 'end' → logprob: -6.0087456703186035

Token 292: ' after' (ID: 1934)
  Prédit: ' after'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' after' → logprob: -0.5197239518165588
    2. 'after' → logprob: -1.269723892211914
    3. 'if' → logprob: -2.519723892211914
    4. ' if' → logprob: -3.144723892211914
    5. 'self' → logprob: -7.894723892211914
    6. '_after' → logprob: -8.894723892211914
    7. ' self' → logprob: -9.144723892211914
    8. ' at' → logprob: -9.644723892211914
    9. 'for' → logprob: -10.144723892211914
    10. ' for' → logprob: -10.769723892211914

Token 293: ' last' (ID: 2174)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.05529622361063957
    2. ' self' → logprob: -2.9302961826324463
    3. 'the' → logprob: -8.555295944213867
    4. ' the' → logprob: -8.680295944213867
    5. 'last' → logprob: -10.680295944213867
    6. ' last' → logprob: -10.930295944213867
    7. '(self' → logprob: -12.430295944213867
    8. '   ' → logprob: -13.555295944213867
    9. '=self' → logprob: -14.055295944213867
    10. '[self' → logprob: -14.055295944213867

Token 294: ' interval' (ID: 17116)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.081054925918579
    2. ' self' → logprob: -1.206054925918579
    3. 'interval' → logprob: -1.456054925918579
    4. ' interval' → logprob: -2.456054925918579
    5. '_interval' → logprob: -3.331054925918579
    6. '_inter' → logprob: -5.7060546875
    7. '   ' → logprob: -7.3310546875
    8. 'Interval' → logprob: -7.7060546875
    9. '(self' → logprob: -8.0810546875
    10. '
' → logprob: -8.0810546875

Token 295: '
' (ID: 198)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6735847592353821
    2. 'if' → logprob: -1.0485846996307373
    3. '       ' → logprob: -2.2985846996307373
    4. 'last' → logprob: -3.6735846996307373
    5. ' last' → logprob: -5.048584938049316
    6. 'gap' → logprob: -5.798584938049316
    7. 'end' → logprob: -6.173584938049316
    8. '```' → logprob: -6.548584938049316
    9. ' gap' → logprob: -7.423584938049316
    10. '
' → logprob: -9.298584938049316

Token 296: '       ' (ID: 309)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8839631676673889
    2. '       ' → logprob: -1.1339631080627441
    3. 'if' → logprob: -1.8839631080627441
    4. 'last' → logprob: -2.758963108062744
    5. ' last' → logprob: -3.008963108062744
    6. 'end' → logprob: -8.883963584899902
    7. '```' → logprob: -9.133963584899902
    8. 'start' → logprob: -10.008963584899902
    9. 'gap' → logprob: -10.633963584899902
    10. ' gap' → logprob: -10.883963584899902

Token 297: ' last' (ID: 2174)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.1089630126953125
    2. 'if' → logprob: -1.3589630126953125
    3. 'last' (adapté à ' last') → logprob: -1.3589630126953125
    4. ' last' → logprob: -1.8589630126953125
    5. '       ' → logprob: -8.733963012695312
    6. 'gap' → logprob: -8.983963012695312
    7. ' gap' → logprob: -9.733963012695312
    8. 'end' → logprob: -9.983963012695312
    9. '   ' → logprob: -11.733963012695312
    10. ' end' → logprob: -12.483963012695312

Token 298: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.017815781757235527
    2. ' =' → logprob: -4.267815589904785
    3. '_position' → logprob: -7.142815589904785
    4. '_interval' → logprob: -7.267815589904785
    5. '_pos' → logprob: -7.767815589904785
    6. '.' → logprob: -7.892815589904785
    7. '_token' → logprob: -8.017815589904785
    8. '=' → logprob: -8.517815589904785
    9. '_start' → logprob: -8.517815589904785
    10. '_' → logprob: -8.642815589904785

Token 299: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038042180240154266
    2. '=' → logprob: -3.2880420684814453
    3. ' ' → logprob: -14.788042068481445
    4. '=self' → logprob: -15.788042068481445
    5. '   ' → logprob: -16.663042068481445
    6. ' ' → logprob: -16.788042068481445
    7. '=end' → logprob: -17.288042068481445
    8. ':' → logprob: -18.038042068481445
    9. '=
' → logprob: -18.288042068481445
    10. ' =
' → logprob: -18.663042068481445

Token 300: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.02324594371020794
    2. ' self' → logprob: -3.7732460498809814
    3. '       ' → logprob: -16.02324676513672
    4. '(self' → logprob: -16.27324676513672
    5. '	self' → logprob: -16.39824676513672
    6. '
' → logprob: -16.77324676513672
    7. '   ' → logprob: -17.02324676513672
    8. '=self' → logprob: -17.64824676513672
    9. '[self' → logprob: -17.77324676513672
    10. '           ' → logprob: -18.89824676513672

Token 301: '.inter' (ID: 19028)
  Prédit: '.inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.inter' → logprob: -0.0003939728485420346
    2. '.' → logprob: -7.875393867492676
    3. ' .' → logprob: -12.250393867492676
    4. '   ' → logprob: -13.000393867492676
    5. 'interval' → logprob: -13.000393867492676
    6. 'inter' → logprob: -13.000393867492676
    7. '.interval' → logprob: -13.875393867492676
    8. 'self' → logprob: -14.625393867492676
    9. '_inter' → logprob: -15.125393867492676
    10. '.in' → logprob: -15.500393867492676

Token 302: 'vals' (ID: 44567)
  Prédit: 'erv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'erv' → logprob: -0.9593666195869446
    2. 'als' → logprob: -1.0843665599822998
    3. 'vals' → logprob: -1.9593665599822998
    4. 's' → logprob: -2.3343665599823
    5. 'ter' → logprob: -3.8343665599823
    6. 'interval' → logprob: -4.584366798400879
    7. 't' → logprob: -6.209366798400879
    8. 'er' → logprob: -6.459366798400879
    9. 'erval' → logprob: -6.459366798400879
    10. '[' → logprob: -7.334366798400879

Token 303: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -3.128163257315464e-07
    2. '.' → logprob: -15.875
    3. '[len' → logprob: -17.5
    4. '[' → logprob: -17.5
    5. '   ' → logprob: -18.25
    6. '-' → logprob: -18.5
    7. '
' → logprob: -18.875
    8. '][-' → logprob: -19.5
    9. '```' → logprob: -19.625
    10. ' [-' → logprob: -19.625

Token 304: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004947714623995125
    2. ' ' → logprob: -8.000494956970215
    3. '.' → logprob: -9.500494956970215
    4. '].' → logprob: -9.625494956970215
    5. 'end' → logprob: -11.875494956970215
    6. '.end' → logprob: -12.125494956970215
    7. ' .' → logprob: -13.125494956970215
    8. '   ' → logprob: -13.625494956970215
    9. ']' → logprob: -14.375494956970215
    10. '  ' → logprob: -14.875494956970215

Token 305: '].' (ID: 1651)
  Prédit: '.end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.end' → logprob: -0.01634894125163555
    2. '.' → logprob: -4.266348838806152
    3. '].' → logprob: -6.766348838806152
    4. ').' → logprob: -7.141348838806152
    5. '}.' → logprob: -9.141348838806152
    6. '.inter' → logprob: -9.891348838806152
    7. ' .' → logprob: -10.516348838806152
    8. '>.' → logprob: -11.141348838806152
    9. '.start' → logprob: -11.391348838806152
    10. '.END' → logprob: -12.641348838806152

Token 306: 'end' (ID: 419)
  Prédit: 'end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -6.2729995988775045e-06
    2. ' end' → logprob: -12.000006675720215
    3. 'endt' → logprob: -17.5000057220459
    4. '.end' → logprob: -17.7500057220459
    5. 'start' → logprob: -18.5000057220459
    6. '(end' → logprob: -18.6250057220459
    7. '	end' → logprob: -19.0000057220459
    8. '
' → logprob: -19.1250057220459
    9. ' ' → logprob: -19.3750057220459
    10. 'e' → logprob: -19.3750057220459

Token 307: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.48949190974235535
    2. ' if' → logprob: -1.6144919395446777
    3. '   ' → logprob: -2.4894919395446777
    4. '
' → logprob: -2.9894919395446777
    5. 'if' → logprob: -3.3644919395446777
    6. ',' → logprob: -5.239491939544678
    7. ' +' → logprob: -5.739491939544678
    8. '+' → logprob: -5.989491939544678
    9. '           ' → logprob: -6.239491939544678
    10. '<|end|>' → logprob: -6.239491939544678

Token 308: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01048362534493208
    2. ' if' → logprob: -4.635483741760254
    3. '   ' → logprob: -7.760483741760254
    4. 'if' → logprob: -8.385483741760254
    5. '```' → logprob: -10.260483741760254
    6. '        ' → logprob: -11.760483741760254
    7. '        
' → logprob: -11.760483741760254
    8. '           ' → logprob: -12.010483741760254
    9. '    ' → logprob: -12.885483741760254
    10. '+' → logprob: -13.135483741760254

Token 309: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1277313381433487
    2. ' if' → logprob: -2.1277313232421875
    3. '       ' → logprob: -7.1277313232421875
    4. '   ' → logprob: -14.877731323242188
    5. '```' → logprob: -15.877731323242188
    6. '	if' → logprob: -17.627731323242188
    7. 'If' → logprob: -17.627731323242188
    8. 'return' → logprob: -18.752731323242188
    9. '
' → logprob: -19.877731323242188
    10. '        ' → logprob: -20.002731323242188

Token 310: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.13308480381965637
    2. ' self' → logprob: -2.258084774017334
    3. 'last' → logprob: -4.258084774017334
    4. ' last' → logprob: -5.133084774017334
    5. '(self' → logprob: -12.508085250854492
    6. '(last' → logprob: -12.508085250854492
    7. ' ' → logprob: -13.508085250854492
    8. ' (' → logprob: -13.883085250854492
    9. '	self' → logprob: -14.633085250854492
    10. '   ' → logprob: -15.133085250854492

Token 311: '.width' (ID: 11038)
  Prédit: '.width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.width' → logprob: -8.911954500945285e-05
    2. '.' → logprob: -9.625088691711426
    3. 'width' → logprob: -10.875088691711426
    4. ' ' → logprob: -13.875088691711426
    5. '	width' → logprob: -13.875088691711426
    6. '.length' → logprob: -14.750088691711426
    7. '   ' → logprob: -15.250088691711426
    8. ' width' → logprob: -15.500088691711426
    9. ',width' → logprob: -15.625088691711426
    10. '
' → logprob: -15.750088691711426

Token 312: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.012558743357658386
    2. '-' → logprob: -4.387558937072754
    3. ' >=' → logprob: -10.887558937072754
    4. '>' → logprob: -11.262558937072754
    5. '>=' → logprob: -11.887558937072754
    6. ' >' → logprob: -12.262558937072754
    7. '-last' → logprob: -13.137558937072754
    8. ' ' → logprob: -13.262558937072754
    9. '   ' → logprob: -13.512558937072754
    10. ' ' → logprob: -15.262558937072754

Token 313: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.25192928314208984
    2. ' last' → logprob: -1.5019292831420898
    3. '(last' → logprob: -16.251930236816406
    4. '[last' → logprob: -16.876930236816406
    5. 'self' → logprob: -17.126930236816406
    6. '	last' → logprob: -17.376930236816406
    7. '_last' → logprob: -18.001930236816406
    8. '.last' → logprob: -18.251930236816406
    9. '
' → logprob: -19.876930236816406
    10. ',last' → logprob: -20.001930236816406

Token 314: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -5.9153885558771435e-06
    2. 'end' → logprob: -12.625005722045898
    3. '.end' → logprob: -14.250005722045898
    4. 'End' → logprob: -14.375005722045898
    5. '._' → logprob: -14.375005722045898
    6. '[-' → logprob: -14.500005722045898
    7. '.' → logprob: -16.2500057220459
    8. '_END' → logprob: -16.7500057220459
    9. '_' → logprob: -16.8750057220459
    10. '_last' → logprob: -17.0000057220459

Token 315: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.6931503415107727
    2. '>=' → logprob: -0.6931503415107727
    3. ' ' → logprob: -13.443150520324707
    4. ')>=' → logprob: -13.943150520324707
    5. ']>=' → logprob: -15.193150520324707
    6. '   ' → logprob: -15.568150520324707
    7. '    ' → logprob: -16.06814956665039
    8. '≥' → logprob: -16.19314956665039
    9. ' ' → logprob: -17.06814956665039
    10. '[' → logprob: -17.69314956665039

Token 316: ' required' (ID: 3759)
  Prédit: ' required'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' required' → logprob: -0.4740842878818512
    2. 'required' → logprob: -0.9740842580795288
    3. '(required' → logprob: -12.47408390045166
    4. '	required' → logprob: -12.84908390045166
    5. 'requested' → logprob: -15.59908390045166
    6. ' requested' → logprob: -15.72408390045166
    7. '.required' → logprob: -15.97408390045166
    8. '_required' → logprob: -15.97408390045166
    9. '```' → logprob: -16.724084854125977
    10. '   ' → logprob: -16.974084854125977

Token 317: '_width' (ID: 17595)
  Prédit: '_width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_width' → logprob: -1.8624639324116288e-06
    2. 'width' → logprob: -13.625001907348633
    3. '_size' → logprob: -15.250001907348633
    4. '_required' → logprob: -16.625001907348633
    5. 'Width' → logprob: -17.125001907348633
    6. '_' → logprob: -17.125001907348633
    7. '_WIDTH' → logprob: -17.250001907348633
    8. '_length' → logprob: -17.625001907348633
    9. '_w' → logprob: -17.750001907348633
    10. ':' → logprob: -18.000001907348633

Token 318: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2522483468055725
    2. ':
' → logprob: -1.5022482872009277
    3. ':return' → logprob: -8.627248764038086
    4. '       ' → logprob: -9.127248764038086
    5. '           ' → logprob: -11.002248764038086
    6. ' :
' → logprob: -12.252248764038086
    7. '):
' → logprob: -12.752248764038086
    8. ':
' → logprob: -12.752248764038086
    9. ' :' → logprob: -13.252248764038086
    10. '):' → logprob: -14.502248764038086

Token 319: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1490783840417862
    2. 'return' → logprob: -2.149078369140625
    3. ' return' → logprob: -4.524078369140625
    4. '       ' → logprob: -4.649078369140625
    5. '
' → logprob: -6.524078369140625
    6. '               ' → logprob: -11.399078369140625
    7. '   ' → logprob: -12.649078369140625
    8. '```' → logprob: -12.899078369140625
    9. '	return' → logprob: -13.399078369140625
    10. '
' → logprob: -13.649078369140625

Token 320: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0015646155225113034
    2. ' return' → logprob: -6.7515645027160645
    3. '           ' → logprob: -8.001564979553223
    4. '
' → logprob: -9.751564979553223
    5. 'last' → logprob: -14.376564979553223
    6. '            
' → logprob: -15.126564979553223
    7. '               ' → logprob: -16.001564025878906
    8. '       ' → logprob: -16.876564025878906
    9. '	return' → logprob: -17.501564025878906
    10. '{return' → logprob: -17.626564025878906

Token 321: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.03804149478673935
    2. ' last' → logprob: -3.288041591644287
    3. '(last' → logprob: -18.413042068481445
    4. '	last' → logprob: -19.038042068481445
    5. '[last' → logprob: -19.788042068481445
    6. 'Last' → logprob: -20.288042068481445
    7. '_last' → logprob: -20.663042068481445
    8. '.last' → logprob: -21.038042068481445
    9. '
' → logprob: -21.413042068481445
    10. ':last' → logprob: -22.538042068481445

Token 322: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -5.68153518543113e-05
    2. '._' → logprob: -10.000057220458984
    3. '_' → logprob: -12.375057220458984
    4. 'end' → logprob: -13.375057220458984
    5. '```' → logprob: -13.500057220458984
    6. ' _' → logprob: -13.750057220458984
    7. '_out' → logprob: -14.250057220458984
    8. '_start' → logprob: -14.375057220458984
    9. '"_' → logprob: -15.250057220458984
    10. 'End' → logprob: -15.250057220458984

Token 323: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019062750041484833
    2. 'return' → logprob: -4.144062519073486
    3. '   ' → logprob: -7.019062519073486
    4. 'None' → logprob: -7.144062519073486
    5. '
' → logprob: -7.394062519073486
    6. ' return' → logprob: -8.144062995910645
    7. '	return' → logprob: -8.644062995910645
    8. '	' → logprob: -9.644062995910645
    9. '           ' → logprob: -9.644062995910645
    10. '        
' → logprob: -10.019062995910645

Token 324: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34520435333251953
    2. '       ' → logprob: -1.4702043533325195
    3. '
' → logprob: -3.5952043533325195
    4. '<|end|>' → logprob: -3.7202043533325195
    5. 'None' → logprob: -6.2202043533325195
    6. '    
' → logprob: -6.3452043533325195
    7. '<|end|>' → logprob: -6.4702043533325195
    8. 'def' → logprob: -6.4702043533325195
    9. 'return' → logprob: -6.7202043533325195
    10. '```' → logprob: -7.0952043533325195

Token 325: ' return' (ID: 622)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.4784178137779236
    2. 'return' (adapté à ' return') → logprob: -0.9784178137779236
    3. '       ' → logprob: -5.478417873382568
    4. '   ' → logprob: -9.72841739654541
    5. '
' → logprob: -10.10341739654541
    6. ' None' → logprob: -10.35341739654541
    7. ' return' → logprob: -11.22841739654541
    8. '```' → logprob: -11.85341739654541
    9. '        
' → logprob: -14.10341739654541
    10. '	return' → logprob: -14.47841739654541

Token 326: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -2.15310683415737e-05
    2. ' None' → logprob: -10.750021934509277
    3. '_None' → logprob: -20.00002098083496
    4. '(None' → logprob: -20.75002098083496
    5. ',None' → logprob: -23.62502098083496
    6. '0' → logprob: -23.87502098083496
    7. 'none' → logprob: -23.87502098083496
    8. '=None' → logprob: -24.50002098083496
    9. '   ' → logprob: -25.12502098083496
    10. 'No' → logprob: -25.25002098083496

Token 327: '

' (ID: 279)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.2683783173561096
    2. 'class' → logprob: -1.7683782577514648
    3. '   ' → logprob: -2.768378257751465
    4. '
' → logprob: -7.018378257751465
    5. '@dat' → logprob: -7.643378257751465
    6. 'import' → logprob: -8.143378257751465
    7. ' from' → logprob: -8.643378257751465
    8. '```' → logprob: -9.268378257751465
    9. '    
' → logprob: -11.018378257751465
    10. 'def' → logprob: -11.143378257751465

Token 328: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05767124891281128
    2. 'class' → logprob: -3.182671308517456
    3. 'from' → logprob: -4.432671070098877
    4. '```' → logprob: -6.307671070098877
    5. '@dat' → logprob: -8.182671546936035
    6. '
' → logprob: -8.432671546936035
    7. 'def' → logprob: -8.432671546936035
    8. '    
' → logprob: -10.057671546936035
    9. ' from' → logprob: -10.682671546936035
    10. ' class' → logprob: -10.682671546936035

Token 329: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.005593256559222937
    2. '   ' → logprob: -5.755593299865723
    3. 'class' → logprob: -6.505593299865723
    4. 'from' → logprob: -7.005593299865723
    5. ' def' → logprob: -11.630593299865723
    6. '```' → logprob: -14.505593299865723
    7. '@dat' → logprob: -14.755593299865723
    8. '
' → logprob: -14.880593299865723
    9. '	def' → logprob: -15.255593299865723
    10. '    
' → logprob: -15.630593299865723

Token 330: ' occupy' (ID: 89046)
  Prédit: ' occupy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' occupy' → logprob: -0.2812296152114868
    2. 'occup' → logprob: -1.4062296152114868
    3. 'def' → logprob: -9.656229972839355
    4. ' ' → logprob: -12.406229972839355
    5. 'Occup' → logprob: -12.906229972839355
    6. '   ' → logprob: -13.531229972839355
    7. 'occupied' → logprob: -13.656229972839355
    8. '#' → logprob: -14.031229972839355
    9. 'find' → logprob: -14.031229972839355
    10. '_' → logprob: -14.281229972839355

Token 331: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00024025145103223622
    2. '(' → logprob: -8.375240325927734
    3. 'self' → logprob: -11.875240325927734
    4. '(
' → logprob: -13.250240325927734
    5. ' (' → logprob: -14.375240325927734
    6. '   ' → logprob: -15.750240325927734
    7. 'def' → logprob: -16.625240325927734
    8. ' self' → logprob: -16.875240325927734
    9. '(s' → logprob: -17.250240325927734
    10. ' ' → logprob: -18.000240325927734

Token 332: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0016976762562990189
    2. '(' → logprob: -6.501697540283203
    3. 'self' → logprob: -8.751697540283203
    4. '(
' → logprob: -11.626697540283203
    5. '   ' → logprob: -11.751697540283203
    6. ')' → logprob: -11.751697540283203
    7. ' (' → logprob: -12.251697540283203
    8. ' self' → logprob: -13.626697540283203
    9. '(position' → logprob: -13.626697540283203
    10. '       ' → logprob: -13.751697540283203

Token 333: ' start' (ID: 1604)
  Prédit: ' start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.5108276009559631
    2. 'start' → logprob: -1.0108275413513184
    3. 'self' → logprob: -3.6358275413513184
    4. ' self' → logprob: -4.635827541351318
    5. '   ' → logprob: -11.010828018188477
    6. ' ' → logprob: -13.010828018188477
    7. '       ' → logprob: -13.510828018188477
    8. 'def' → logprob: -14.010828018188477
    9. 'position' → logprob: -15.010828018188477
    10. '    ' → logprob: -15.135828018188477

Token 334: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.9040898880339228e-05
    2. ' ,' → logprob: -11.250028610229492
    3. 'self' → logprob: -12.000028610229492
    4. '=' → logprob: -12.125028610229492
    5. ',self' → logprob: -13.750028610229492
    6. '       ' → logprob: -14.250028610229492
    7. ',
' → logprob: -14.375028610229492
    8. ':' → logprob: -14.375028610229492
    9. '   ' → logprob: -14.625028610229492
    10. '(self' → logprob: -14.875028610229492

Token 335: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.21541008353233337
    2. 'start' → logprob: -2.215409994125366
    3. ' int' → logprob: -2.590409994125366
    4. ' start' → logprob: -4.840410232543945
    5. ',' → logprob: -6.840410232543945
    6. 'end' → logprob: -8.715410232543945
    7. '<|end|>' → logprob: -8.715410232543945
    8. ':int' → logprob: -9.340410232543945
    9. ',int' → logprob: -9.465410232543945
    10. 'self' → logprob: -9.840410232543945

Token 336: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.91732100979425e-05
    2. ' ,' → logprob: -10.250039100646973
    3. ',
' → logprob: -13.500039100646973
    4. ',start' → logprob: -13.750039100646973
    5. ',int' → logprob: -14.375039100646973
    6. '   ' → logprob: -15.125039100646973
    7. ',end' → logprob: -15.250039100646973
    8. '       ' → logprob: -16.50004005432129
    9. '‌,' → logprob: -17.00004005432129
    10. '<|end|>' → logprob: -17.37504005432129

Token 337: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.20141451060771942
    2. ' end' → logprob: -1.7014144659042358
    3. '   ' → logprob: -13.951414108276367
    4. '	end' → logprob: -15.076414108276367
    5. '(end' → logprob: -17.451414108276367
    6. ' ' → logprob: -17.576414108276367
    7. 'stop' → logprob: -18.451414108276367
    8. '=end' → logprob: -18.576414108276367
    9. '.end' → logprob: -18.701414108276367
    10. '  ' → logprob: -18.951414108276367

Token 338: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00028648413717746735
    2. ':' → logprob: -9.125286102294922
    3. '):' → logprob: -9.375286102294922
    4. ' ,' → logprob: -9.750286102294922
    5. ')' → logprob: -10.875286102294922
    6. ',int' → logprob: -12.125286102294922
    7. ':int' → logprob: -13.125286102294922
    8. ',
' → logprob: -13.375286102294922
    9. '   ' → logprob: -13.375286102294922
    10. '):
' → logprob: -13.375286102294922

Token 339: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.4740971028804779
    2. 'int' → logprob: -0.9740971326828003
    3. ')' → logprob: -11.72409725189209
    4. ',' → logprob: -12.34909725189209
    5. '   ' → logprob: -12.72409725189209
    6. ':int' → logprob: -13.59909725189209
    7. ' end' → logprob: -14.22409725189209
    8. ' ' → logprob: -14.34909725189209
    9. ' )' → logprob: -14.47409725189209
    10. ',int' → logprob: -14.84909725189209

Token 340: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.6789137084269896e-05
    2. ' ,' → logprob: -10.25003719329834
    3. '   ' → logprob: -15.12503719329834
    4. ',int' → logprob: -15.50003719329834
    5. ' cat' → logprob: -15.87503719329834
    6. '‌,' → logprob: -16.000036239624023
    7. ')' → logprob: -16.375036239624023
    8. 'cat' → logprob: -16.375036239624023
    9. ',
' → logprob: -16.375036239624023
    10. '[],' → logprob: -16.625036239624023

Token 341: ' cat' (ID: 9059)
  Prédit: 'cat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cat' → logprob: -0.6971238851547241
    2. ' cat' → logprob: -0.6971238851547241
    3. ' owner' → logprob: -6.572124004364014
    4. 'owner' → logprob: -6.572124004364014
    5. 'id' → logprob: -7.447124004364014
    6. ' id' → logprob: -8.822123527526855
    7. ' occupant' → logprob: -8.822123527526855
    8. 'occup' → logprob: -9.572123527526855
    9. 'interval' → logprob: -10.072123527526855
    10. '   ' → logprob: -10.072123527526855

Token 342: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -1.5048530030981055e-06
    2. 'id' → logprob: -14.875001907348633
    3. '_' → logprob: -15.500001907348633
    4. '   ' → logprob: -15.875001907348633
    5. '_ids' → logprob: -16.125001907348633
    6. ':' → logprob: -16.125001907348633
    7. '):' → logprob: -16.375001907348633
    8. ')' → logprob: -16.500001907348633
    9. 'Id' → logprob: -16.625001907348633
    10. '```' → logprob: -16.625001907348633

Token 343: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002361974911764264
    2. '):' → logprob: -6.50236177444458
    3. ')' → logprob: -7.12736177444458
    4. '):
' → logprob: -10.127362251281738
    5. '   ' → logprob: -11.752362251281738
    6. ':int' → logprob: -12.127362251281738
    7. ' :' → logprob: -13.377362251281738
    8. ' ):' → logprob: -14.252362251281738
    9. ' )' → logprob: -14.877362251281738
    10. ':)' → logprob: -16.002361297607422

Token 344: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.01815052703022957
    2. ' int' → logprob: -4.018150329589844
    3. ')' → logprob: -14.768150329589844
    4. '   ' → logprob: -16.018150329589844
    5. ' ' → logprob: -16.268150329589844
    6. 'cat' → logprob: -17.018150329589844
    7. '	int' → logprob: -17.518150329589844
    8. ':int' → logprob: -17.768150329589844
    9. '  ' → logprob: -18.393150329589844
    10. '
' → logprob: -19.143150329589844

Token 345: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.09033577144145966
    2. '):' → logprob: -2.4653358459472656
    3. ')' → logprob: -6.965335845947266
    4. '):
' → logprob: -8.840335845947266
    5. ' ):
' → logprob: -8.965335845947266
    6. '   ' → logprob: -9.465335845947266
    7. '       ' → logprob: -9.590335845947266
    8. ' ):' → logprob: -11.090335845947266
    9. '):

' → logprob: -11.340335845947266
    10. ':' → logprob: -12.715335845947266

Token 346: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02476789988577366
    2. ' self' → logprob: -3.8997678756713867
    3. ' new' → logprob: -6.399767875671387
    4. 'self' → logprob: -6.649767875671387
    5. ' index' → logprob: -7.899767875671387
    6. '```' → logprob: -8.274767875671387
    7. ' from' → logprob: -8.774767875671387
    8. ' interval' → logprob: -9.024767875671387
    9. ' idx' → logprob: -9.399767875671387
    10. '   ' → logprob: -10.149767875671387

Token 347: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.4322085380554199
    2. '       ' → logprob: -2.55720853805542
    3. 'interval' → logprob: -2.55720853805542
    4. 'from' → logprob: -2.80720853805542
    5. ' new' → logprob: -2.93220853805542
    6. 'import' → logprob: -3.43220853805542
    7. 'self' → logprob: -3.68220853805542
    8. 'index' → logprob: -4.05720853805542
    9. ' interval' → logprob: -6.18220853805542
    10. ' from' → logprob: -6.80720853805542

Token 348: '_interval' (ID: 49009)
  Prédit: '_interval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_interval' → logprob: -0.000294586323434487
    2. '_inter' → logprob: -8.87529468536377
    3. ' =' → logprob: -9.62529468536377
    4. '_' → logprob: -10.00029468536377
    5. '_start' → logprob: -11.12529468536377
    6. 'Interval' → logprob: -11.87529468536377
    7. 'interval' → logprob: -12.00029468536377
    8. ' _' → logprob: -12.50029468536377
    9. '_space' → logprob: -12.75029468536377
    10. '=' → logprob: -12.87529468536377

Token 349: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.002186307217925787
    2. '=' → logprob: -6.127186298370361
    3. ' ' → logprob: -14.12718677520752
    4. 's' → logprob: -16.127185821533203
    5. ')' → logprob: -16.502185821533203
    6. ' =
' → logprob: -16.502185821533203
    7. '.append' → logprob: -16.877185821533203
    8. '.' → logprob: -17.127185821533203
    9. '   ' → logprob: -17.127185821533203
    10. ',' → logprob: -17.127185821533203

Token 350: ' Interval' (ID: 80693)
  Prédit: 'Interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Interval' → logprob: -0.5759400725364685
    2. ' Interval' → logprob: -0.8259400725364685
    3. '   ' → logprob: -15.700940132141113
    4. '.Interval' → logprob: -15.700940132141113
    5. 'interval' → logprob: -15.950940132141113
    6. '_interval' → logprob: -16.700939178466797
    7. '       ' → logprob: -17.575939178466797
    8. ' interval' → logprob: -17.950939178466797
    9. 'Intervals' → logprob: -18.700939178466797
    10. ' ' → logprob: -18.825939178466797

Token 351: '(start' (ID: 20008)
  Prédit: '(start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.008688795380294323
    2. 'start' → logprob: -4.758688926696777
    3. '(' → logprob: -9.633688926696777
    4. '(
' → logprob: -11.758688926696777
    5. ' start' → logprob: -15.258688926696777
    6. '[start' → logprob: -15.758688926696777
    7. '=start' → logprob: -15.758688926696777
    8. '   ' → logprob: -15.883688926696777
    9. '```' → logprob: -16.13368797302246
    10. '	start' → logprob: -17.00868797302246

Token 352: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008128436165861785
    2. ',end' → logprob: -7.625813007354736
    3. ')' → logprob: -9.000812530517578
    4. ',start' → logprob: -9.250812530517578
    5. '=' → logprob: -10.000812530517578
    6. ',
' → logprob: -10.875812530517578
    7. 'end' → logprob: -12.000812530517578
    8. ' ,' → logprob: -12.000812530517578
    9. 'start' → logprob: -12.000812530517578
    10. '<|end|>' → logprob: -12.125812530517578

Token 353: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.07888989895582199
    2. ' end' → logprob: -2.578889846801758
    3. '	end' → logprob: -16.578889846801758
    4. '       ' → logprob: -16.953889846801758
    5. '(end' → logprob: -17.703889846801758
    6. ',end' → logprob: -17.828889846801758
    7. '   ' → logprob: -17.828889846801758
    8. 'End' → logprob: -18.828889846801758
    9. '=end' → logprob: -18.828889846801758
    10. '[end' → logprob: -19.078889846801758

Token 354: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1875571544806007e-05
    2. ')' → logprob: -12.125011444091797
    3. ' ,' → logprob: -12.125011444091797
    4. '       ' → logprob: -15.125011444091797
    5. '‌,' → logprob: -15.875011444091797
    6. ',
' → logprob: -16.125011444091797
    7. '   ' → logprob: -16.250011444091797
    8. '<|end|>' → logprob: -16.500011444091797
    9. '),' → logprob: -16.875011444091797
    10. ',user' → logprob: -17.125011444091797

Token 355: ' cat' (ID: 9059)
  Prédit: 'cat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cat' → logprob: -0.5759409666061401
    2. ' cat' → logprob: -0.8259409666061401
    3. '   ' → logprob: -14.57594108581543
    4. '(cat' → logprob: -15.32594108581543
    5. ' ' → logprob: -15.57594108581543
    6. '    ' → logprob: -15.95094108581543
    7. '
' → logprob: -16.20094108581543
    8. '       ' → logprob: -16.45094108581543
    9. ' ' → logprob: -16.70094108581543
    10. 'c' → logprob: -16.82594108581543

Token 356: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -2.45848218582978e-06
    2. 'id' → logprob: -13.37500286102295
    3. '_' → logprob: -14.75000286102295
    4. ')' → logprob: -15.50000286102295
    5. '   ' → logprob: -16.375001907348633
    6. 'd' → logprob: -17.250001907348633
    7. 'cat' → logprob: -17.250001907348633
    8. '_cat' → logprob: -17.500001907348633
    9. '```' → logprob: -17.875001907348633
    10. 'Id' → logprob: -18.000001907348633

Token 357: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1269545704126358
    2. ')
' → logprob: -2.1269545555114746
    3. '       ' → logprob: -10.876955032348633
    4. ')
' → logprob: -12.376955032348633
    5. ')

' → logprob: -13.251955032348633
    6. '   ' → logprob: -15.251955032348633
    7. '),' → logprob: -15.376955032348633
    8. '<|end|>' → logprob: -15.376955032348633
    9. ' )' → logprob: -15.751955032348633
    10. ')\
' → logprob: -16.126955032348633

Token 358: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013170238817110658
    2. ',' → logprob: -7.501317024230957
    3. 'self' → logprob: -8.001317024230957
    4. '
' → logprob: -8.626317024230957
    5. 'import' → logprob: -9.751317024230957
    6. '#' → logprob: -10.126317024230957
    7. ' self' → logprob: -10.251317024230957
    8. '        
' → logprob: -10.501317024230957
    9. 'from' → logprob: -11.251317024230957
    10. '	' → logprob: -11.501317024230957

Token 359: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8114067912101746
    2. 'import' → logprob: -1.0614068508148193
    3. 'index' → logprob: -2.3114068508148193
    4. 'from' → logprob: -2.5614068508148193
    5. 'self' → logprob: -4.18640661239624
    6. '#' (adapté à ' #') → logprob: -4.93640661239624
    7. 'insert' → logprob: -4.93640661239624
    8. 'for' → logprob: -6.43640661239624
    9. 'left' → logprob: -6.93640661239624
    10. 'i' → logprob: -7.93640661239624

Token 360: ' insert' (ID: 10898)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.4555574357509613
    2. 'from' → logprob: -1.8305574655532837
    3. 'index' → logprob: -1.9555574655532837
    4. '#' → logprob: -3.705557346343994
    5. 'insert' → logprob: -3.955557346343994
    6. 'left' → logprob: -4.330557346343994
    7. 'pos' → logprob: -6.080557346343994
    8. 'idx' → logprob: -6.455557346343994
    9. 'for' → logprob: -6.580557346343994
    10. 'i' → logprob: -6.830557346343994

Token 361: ' keeping' (ID: 13958)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.38066646456718445
    2. '       ' → logprob: -1.8806664943695068
    3. 'index' → logprob: -2.755666494369507
    4. ' index' → logprob: -3.755666494369507
    5. ' for' → logprob: -4.255666255950928
    6. '_index' → logprob: -4.505666255950928
    7. ' i' → logprob: -4.630666255950928
    8. 'pos' → logprob: -5.380666255950928
    9. ' import' → logprob: -5.630666255950928
    10. 'idx' → logprob: -5.755666255950928

Token 362: ' sorted' (ID: 20099)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3461809456348419
    2. 'sorted' → logprob: -1.7211809158325195
    3. ' the' → logprob: -2.9711809158325195
    4. 'the' → logprob: -3.0961809158325195
    5. ' self' → logprob: -4.7211809158325195
    6. ' sorted' → logprob: -5.4711809158325195
    7. 'import' → logprob: -5.5961809158325195
    8. 'index' → logprob: -9.84618091583252
    9. '_sorted' → logprob: -9.84618091583252
    10. 'from' → logprob: -9.84618091583252

Token 363: ' order' (ID: 2569)
  Prédit: '_index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_index' → logprob: -1.389752745628357
    2. '_idx' → logprob: -2.1397528648376465
    3. ' i' → logprob: -2.2647528648376465
    4. ' for' → logprob: -2.2647528648376465
    5. 'index' → logprob: -2.6397528648376465
    6. ' index' → logprob: -2.7647528648376465
    7. 'idx' → logprob: -3.0147528648376465
    8. ' self' → logprob: -3.3897528648376465
    9. ' idx' → logprob: -3.5147528648376465
    10. 'self' → logprob: -3.7647528648376465

Token 364: ' by' (ID: 656)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14064662158489227
    2. ',' → logprob: -2.5156466960906982
    3. ' for' → logprob: -3.8906466960906982
    4. 'import' → logprob: -4.515646457672119
    5. '
' → logprob: -4.890646457672119
    6. ' in' → logprob: -6.390646457672119
    7. 'for' → logprob: -6.640646457672119
    8. ':' → logprob: -6.765646457672119
    9. 'index' → logprob: -7.015646457672119
    10. ')' → logprob: -7.390646457672119

Token 365: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.09018993377685547
    2. ' start' → logprob: -2.9651899337768555
    3. 'new' → logprob: -3.7151899337768555
    4. ' new' → logprob: -4.5901899337768555
    5. 'lambda' → logprob: -9.340189933776855
    6. ' lambda' → logprob: -9.715189933776855
    7. '.start' → logprob: -10.465189933776855
    8. 'interval' → logprob: -12.840189933776855
    9. ''s' → logprob: -13.090189933776855
    10. ' .' → logprob: -13.090189933776855

Token 366: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.035534150898456573
    2. ' for' → logprob: -3.910534143447876
    3. ',' → logprob: -5.910534381866455
    4. ' i' → logprob: -6.035534381866455
    5. 'import' → logprob: -6.285534381866455
    6. ' index' → logprob: -6.285534381866455
    7. 'index' → logprob: -6.535534381866455
    8. 'for' → logprob: -6.910534381866455
    9. ' idx' → logprob: -7.285534381866455
    10. 'i' → logprob: -7.285534381866455

Token 367: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04912842437624931
    2. ' for' → logprob: -3.299128532409668
    3. ' i' → logprob: -6.174128532409668
    4. ' index' → logprob: -6.299128532409668
    5. ',' → logprob: -6.674128532409668
    6. ' idx' → logprob: -6.674128532409668
    7. 'for' → logprob: -6.924128532409668
    8. 'import' → logprob: -7.549128532409668
    9. 'index' → logprob: -7.674128532409668
    10. 'i' → logprob: -7.924128532409668

Token 368: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' (adapté à ' import') → logprob: -0.6059332489967346
    2. 'index' → logprob: -0.9809332489967346
    3. '       ' → logprob: -3.10593318939209
    4. 'i' → logprob: -4.60593318939209
    5. ' index' → logprob: -5.23093318939209
    6. 'for' → logprob: -5.35593318939209
    7. 'from' → logprob: -5.48093318939209
    8. 'left' → logprob: -6.10593318939209
    9. 'idx' → logprob: -6.23093318939209
    10. 'pos' → logprob: -6.73093318939209

Token 369: ' bis' (ID: 7204)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.0024756586644798517
    2. ' bis' → logprob: -6.002475738525391
    3. 'b' → logprob: -18.50247573852539
    4. '```' → logprob: -19.12747573852539
    5. 'Bis' → logprob: -19.75247573852539
    6. '	b' → logprob: -20.00247573852539
    7. '
' → logprob: -20.00247573852539
    8. 'ins' → logprob: -20.87747573852539
    9. '   ' → logprob: -21.62747573852539
    10. ',b' → logprob: -21.75247573852539

Token 370: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.0012036849511787295
    2. '       ' → logprob: -7.501203536987305
    3. 't' → logprob: -8.001203536987305
    4. 'ection' → logprob: -8.751203536987305
    5. 'ects' → logprob: -9.751203536987305
    6. 'ected' → logprob: -10.876203536987305
    7. 'import' → logprob: -10.876203536987305
    8. 'ections' → logprob: -11.751203536987305
    9. 'ector' → logprob: -11.876203536987305
    10. 'pl' → logprob: -12.001203536987305

Token 371: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09196756035089493
    2. '       ' → logprob: -2.4669675827026367
    3. '        
' → logprob: -6.966967582702637
    4. '
' → logprob: -7.216967582702637
    5. '.b' → logprob: -8.091967582702637
    6. '<|end|>' → logprob: -8.341967582702637
    7. '  
' → logprob: -8.841967582702637
    8. 'self' → logprob: -8.966967582702637
    9. ' 
' → logprob: -9.716967582702637
    10. '.pyplot' → logprob: -9.966967582702637

Token 372: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.040052592754364014
    2. '
' → logprob: -3.415052652359009
    3. '.b' → logprob: -6.16505241394043
    4. ' bis' → logprob: -6.66505241394043
    5. 'self' → logprob: -7.29005241394043
    6. 'bis' → logprob: -7.66505241394043
    7. 'b' → logprob: -8.29005241394043
    8. ' self' → logprob: -8.66505241394043
    9. 'index' → logprob: -9.04005241394043
    10. '        
' → logprob: -9.04005241394043

Token 373: ' positions' (ID: 15897)
  Prédit: 'bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bis' → logprob: -0.13210520148277283
    2. ' bis' → logprob: -2.6321051120758057
    3. 'index' → logprob: -3.5071051120758057
    4. '       ' → logprob: -4.882105350494385
    5. 'pos' → logprob: -5.007105350494385
    6. 'positions' (adapté à ' positions') → logprob: -5.882105350494385
    7. 'idx' → logprob: -6.257105350494385
    8. ' index' → logprob: -7.132105350494385
    9. 'position' → logprob: -7.257105350494385
    10. ' positions' → logprob: -7.882105350494385

Token 374: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.045881237834692
    2. '=' → logprob: -3.9208812713623047
    3. '.b' → logprob: -4.795881271362305
    4. '.ins' → logprob: -5.170881271362305
    5. 'ins' → logprob: -6.420881271362305
    6. '.' → logprob: -6.420881271362305
    7. '.insert' → logprob: -6.545881271362305
    8. '_positions' → logprob: -6.795881271362305
    9. '_pos' → logprob: -7.045881271362305
    10. '_left' → logprob: -7.170881271362305

Token 375: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.17081530392169952
    2. '[self' → logprob: -1.920815348625183
    3. ' [' → logprob: -5.170815467834473
    4. '[pos' → logprob: -6.795815467834473
    5. '[position' → logprob: -6.920815467834473
    6. '[b' → logprob: -7.670815467834473
    7. '[start' → logprob: -7.670815467834473
    8. '[int' → logprob: -7.795815467834473
    9. '[list' → logprob: -7.920815467834473
    10. '[item' → logprob: -8.795815467834473

Token 376: 'iv' (ID: 349)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.023947563022375107
    2. 'iv' → logprob: -3.7739474773406982
    3. 'i' → logprob: -7.398947715759277
    4. 'ival' → logprob: -9.773947715759277
    5. ' interval' → logprob: -11.273947715759277
    6. 'x' → logprob: -11.773947715759277
    7. 'int' → logprob: -12.273947715759277
    8. ' iv' → logprob: -12.773947715759277
    9. 'intr' → logprob: -13.273947715759277
    10. 'it' → logprob: -13.398947715759277

Token 377: '.start' (ID: 10181)
  Prédit: '.start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.start' → logprob: -0.018153805285692215
    2. 'al' → logprob: -4.018153667449951
    3. 'start' → logprob: -13.76815414428711
    4. '.end' → logprob: -14.26815414428711
    5. '.interval' → logprob: -14.26815414428711
    6. '.Start' → logprob: -15.39315414428711
    7. '.al' → logprob: -15.39315414428711
    8. '.' → logprob: -15.39315414428711
    9. 'iew' → logprob: -15.51815414428711
    10. 'er' → logprob: -15.89315414428711

Token 378: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.04858794063329697
    2. 'for' → logprob: -3.0485880374908447
    3. ']' → logprob: -15.923587799072266
    4. ' ' → logprob: -15.923587799072266
    5. '	for' → logprob: -16.048587799072266
    6. '        ' → logprob: -17.173587799072266
    7. '
' → logprob: -17.298587799072266
    8. '   ' → logprob: -17.673587799072266
    9. '    ' → logprob: -17.923587799072266
    10. '         ' → logprob: -18.673587799072266

Token 379: ' iv' (ID: 20801)
  Prédit: 'iv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iv' → logprob: -0.006019333843141794
    2. ' iv' → logprob: -5.131019115447998
    3. 'self' → logprob: -9.381019592285156
    4. 'interval' → logprob: -13.381019592285156
    5. '_iv' → logprob: -14.006019592285156
    6. 'ip' → logprob: -14.381019592285156
    7. ' ' → logprob: -14.631019592285156
    8. ' self' → logprob: -14.756019592285156
    9. 'v' → logprob: -14.756019592285156
    10. 'ival' → logprob: -15.131019592285156

Token 380: ' in' (ID: 306)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.05492730811238289
    2. ' self' → logprob: -2.929927349090576
    3. 'elf' → logprob: -10.929926872253418
    4. '	self' → logprob: -12.304926872253418
    5. '(self' → logprob: -12.304926872253418
    6. '=self' → logprob: -12.929926872253418
    7. 'iv' → logprob: -13.054926872253418
    8. ' ' → logprob: -13.054926872253418
    9. ' in' → logprob: -13.179926872253418
    10. '
' → logprob: -13.304926872253418

Token 381: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.001703983056358993
    2. ' self' → logprob: -6.376704216003418
    3. '
' → logprob: -13.626704216003418
    4. '(self' → logprob: -15.501704216003418
    5. '   ' → logprob: -15.751704216003418
    6. '	self' → logprob: -16.8767032623291
    7. '       ' → logprob: -16.8767032623291
    8. ' ' → logprob: -17.0017032623291
    9. '  ' → logprob: -17.5017032623291
    10. '=self' → logprob: -17.6267032623291

Token 382: '.inter' (ID: 19028)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.47247931361198425
    2. 'self' → logprob: -1.2224793434143066
    3. '.inter' → logprob: -2.5974793434143066
    4. 'inter' → logprob: -4.972479343414307
    5. ' intervals' → logprob: -7.597479343414307
    6. ' self' → logprob: -9.097478866577148
    7. '_inter' → logprob: -10.972478866577148
    8. '.' → logprob: -12.222478866577148
    9. '.interval' → logprob: -12.347478866577148
    10. 'Intervals' → logprob: -12.472478866577148

Token 383: 'vals' (ID: 44567)
  Prédit: 'als'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'als' → logprob: -0.4595087766647339
    2. 'vals' → logprob: -1.2095087766647339
    3. 'al' → logprob: -3.3345088958740234
    4. 'erv' → logprob: -3.7095088958740234
    5. 'val' → logprob: -5.834508895874023
    6. 'erval' → logprob: -6.709508895874023
    7. 'interval' → logprob: -6.959508895874023
    8. '```' → logprob: -7.334508895874023
    9. 't' → logprob: -7.709508895874023
    10. 'manager' → logprob: -7.834508895874023

Token 384: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.47496405243873596
    2. ']
' → logprob: -0.9749640226364136
    3. ' ]' → logprob: -8.099964141845703
    4. ']
' → logprob: -8.349964141845703
    5. ' ]
' → logprob: -8.474964141845703
    6. '       ' → logprob: -8.974964141845703
    7. ']

' → logprob: -11.724964141845703
    8. '   ' → logprob: -13.724964141845703
    9. ' ]
' → logprob: -14.474964141845703
    10. ' ' → logprob: -15.974964141845703

Token 385: '       ' (ID: 309)
  Prédit: ' bis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bis' → logprob: -0.5073366165161133
    2. '       ' → logprob: -1.2573366165161133
    3. ' pos' → logprob: -3.5073366165161133
    4. 'bis' → logprob: -3.5073366165161133
    5. 'pos' → logprob: -4.257336616516113
    6. ' index' → logprob: -4.507336616516113
    7. ' position' → logprob: -4.632336616516113
    8. ' idx' → logprob: -5.007336616516113
    9. ' insert' → logprob: -5.132336616516113
    10. 'index' → logprob: -6.882336616516113

Token 386: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' (adapté à ' pos') → logprob: -0.41335904598236084
    2. ' bis' → logprob: -2.5383591651916504
    3. 'bis' → logprob: -2.5383591651916504
    4. ' pos' → logprob: -2.6633591651916504
    5. 'index' → logprob: -2.7883591651916504
    6. ' index' → logprob: -3.7883591651916504
    7. 'idx' → logprob: -4.03835916519165
    8. ' idx' → logprob: -4.91335916519165
    9. 'insert' → logprob: -7.16335916519165
    10. '       ' → logprob: -8.163358688354492

Token 387: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011211925186216831
    2. '=' → logprob: -4.51121187210083
    3. 'ition' → logprob: -9.011212348937988
    4. 'itions' → logprob: -11.261212348937988
    5. '       ' → logprob: -11.886212348937988
    6. ' ' → logprob: -12.386212348937988
    7. 'osition' → logprob: -12.761212348937988
    8. '   ' → logprob: -13.261212348937988
    9. 's' → logprob: -13.511212348937988
    10. '_idx' → logprob: -14.011212348937988

Token 388: ' bis' (ID: 7204)
  Prédit: ' bis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bis' → logprob: -0.3132627606391907
    2. 'bis' → logprob: -1.313262701034546
    3. 'b' → logprob: -13.938262939453125
    4. 'import' → logprob: -16.188262939453125
    5. 'bs' → logprob: -17.438262939453125
    6. 'Bis' → logprob: -18.313262939453125
    7. '0' → logprob: -18.813262939453125
    8. '	b' → logprob: -18.813262939453125
    9. '   ' → logprob: -20.063262939453125
    10. ' ' → logprob: -20.063262939453125

Token 389: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.006846207659691572
    2. 'sect' → logprob: -5.0068464279174805
    3. 'ct' → logprob: -9.13184642791748
    4. 'lect' → logprob: -11.75684642791748
    5. 'ects' → logprob: -12.63184642791748
    6. 'c' → logprob: -13.13184642791748
    7. 'ce' → logprob: -13.50684642791748
    8. 'e' → logprob: -13.75684642791748
    9. 'ectl' → logprob: -13.88184642791748
    10. 'bis' → logprob: -14.00684642791748

Token 390: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.006041138432919979
    2. '.ins' → logprob: -5.381041049957275
    3. '_left' → logprob: -6.881041049957275
    4. '.' → logprob: -7.881041049957275
    5. '_right' → logprob: -11.506041526794434
    6. '.pos' → logprob: -13.131041526794434
    7. '.left' → logprob: -14.631041526794434
    8. 'ins' → logprob: -14.756041526794434
    9. '_ins' → logprob: -14.881041526794434
    10. ' .' → logprob: -15.006041526794434

Token 391: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -4.7159857786027715e-05
    2. 'ist' → logprob: -10.250046730041504
    3. 'ect' → logprob: -11.750046730041504
    4. 'sect' → logprob: -13.250046730041504
    5. 's' → logprob: -14.250046730041504
    6. 'ins' → logprob: -14.500046730041504
    7. 'in' → logprob: -15.375046730041504
    8. 'ise' → logprob: -15.875046730041504
    9. 'n' → logprob: -16.37504768371582
    10. '   ' → logprob: -17.12504768371582

Token 392: 'ect' (ID: 534)
  Prédit: 'ct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ct' → logprob: -0.003770270384848118
    2. 'n' → logprob: -5.878770351409912
    3. 'ect' → logprob: -7.003770351409912
    4. 'ns' → logprob: -10.503769874572754
    5. 's' → logprob: -11.503769874572754
    6. 'sect' → logprob: -12.253769874572754
    7. '   ' → logprob: -13.378769874572754
    8. 'с' → logprob: -13.628769874572754
    9. '
' → logprob: -13.628769874572754
    10. 't' → logprob: -13.878769874572754

Token 393: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.009745344519615173
    2. '(' → logprob: -4.759745121002197
    3. '_right' → logprob: -7.384745121002197
    4. 'left' → logprob: -8.009745597839355
    5. 'Left' → logprob: -9.884745597839355
    6. 'positions' → logprob: -10.134745597839355
    7. '(pos' → logprob: -10.134745597839355
    8. ' positions' → logprob: -10.884745597839355
    9. '(position' → logprob: -11.634745597839355
    10. '_positions' → logprob: -12.009745597839355

Token 394: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0008220185991376638
    2. 'positions' → logprob: -7.250822067260742
    3. '(self' → logprob: -9.125822067260742
    4. '(pos' → logprob: -13.500822067260742
    5. ' positions' → logprob: -14.250822067260742
    6. '(position' → logprob: -14.875822067260742
    7. ' (' → logprob: -14.875822067260742
    8. 'self' → logprob: -15.000822067260742
    9. '(
' → logprob: -15.500822067260742
    10. 'Positions' → logprob: -17.750822067260742

Token 395: 'positions' (ID: 32297)
  Prédit: 'positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -6.704273118884885e-07
    2. ' positions' → logprob: -14.250000953674316
    3. 'self' → logprob: -18.875
    4. 'pos' → logprob: -20.0
    5. '(' → logprob: -20.125
    6. 'position' → logprob: -21.375
    7. 'posit' → logprob: -21.375
    8. '.positions' → logprob: -21.5
    9. '
' → logprob: -21.625
    10. '   ' → logprob: -22.25

Token 396: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008501344360411167
    2. ',start' → logprob: -5.2585015296936035
    3. ' ,' → logprob: -6.3835015296936035
    4. ',new' → logprob: -6.6335015296936035
    5. '(start' → logprob: -8.508501052856445
    6. 'new' → logprob: -10.883501052856445
    7. ',end' → logprob: -11.008501052856445
    8. '(new' → logprob: -11.258501052856445
    9. 'start' → logprob: -12.883501052856445
    10. ' new' → logprob: -13.508501052856445

Token 397: ' new' (ID: 620)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.2755559980869293
    2. 'new' → logprob: -1.775555968284607
    3. ' start' → logprob: -3.0255560874938965
    4. ' new' → logprob: -3.7755560874938965
    5. ' ' → logprob: -13.525555610656738
    6. '   ' → logprob: -13.525555610656738
    7. '	start' → logprob: -14.525555610656738
    8. 'end' → logprob: -14.775555610656738
    9. '  ' → logprob: -15.150555610656738
    10. '
' → logprob: -15.150555610656738

Token 398: '_interval' (ID: 49009)
  Prédit: '_interval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_interval' → logprob: -2.2200749754119897e-06
    2. 'interval' → logprob: -13.375001907348633
    3. 'start' → logprob: -15.375001907348633
    4. '_inter' → logprob: -15.500001907348633
    5. 'Interval' → logprob: -16.250001907348633
    6. '_INTERVAL' → logprob: -17.750001907348633
    7. '.interval' → logprob: -18.500001907348633
    8. 'new' → logprob: -18.625001907348633
    9. '.Interval' → logprob: -19.125001907348633
    10. '.start' → logprob: -19.250001907348633

Token 399: '.start' (ID: 10181)
  Prédit: '.start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.start' → logprob: -7.703443770878948e-06
    2. '.' → logprob: -12.500007629394531
    3. 'start' → logprob: -12.625007629394531
    4. ' .' → logprob: -14.500007629394531
    5. '.end' → logprob: -16.87500762939453
    6. ').' → logprob: -17.37500762939453
    7. '.st' → logprob: -17.50000762939453
    8. ' start' → logprob: -18.12500762939453
    9. '	start' → logprob: -19.25000762939453
    10. '.star' → logprob: -19.87500762939453

Token 400: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25195467472076416
    2. ')
' → logprob: -1.5019546747207642
    3. '       ' → logprob: -11.751955032348633
    4. ')
' → logprob: -12.001955032348633
    5. ' )
' → logprob: -12.126955032348633
    6. ' )' → logprob: -12.501955032348633
    7. ')

' → logprob: -13.501955032348633
    8. '   ' → logprob: -14.501955032348633
    9. ',' → logprob: -15.626955032348633
    10. ')new' → logprob: -16.001955032348633

Token 401: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09941576421260834
    2. 'self' → logprob: -2.4744157791137695
    3. ' self' → logprob: -4.8494157791137695
    4. '
' → logprob: -6.5994157791137695
    5. '<|end|>' → logprob: -7.4744157791137695
    6. '```' → logprob: -8.22441577911377
    7. '        
' → logprob: -9.09941577911377
    8. '(self' → logprob: -10.09941577911377
    9. ')
' → logprob: -10.09941577911377
    10. '[self' → logprob: -10.34941577911377

Token 402: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.018263613805174828
    2. ' self' → logprob: -4.018263816833496
    3. '       ' → logprob: -9.143263816833496
    4. '```' → logprob: -12.393263816833496
    5. '
' → logprob: -13.518263816833496
    6. '``' → logprob: -14.518263816833496
    7. '	self' → logprob: -15.268263816833496
    8. '        
' → logprob: -15.518263816833496
    9. '[self' → logprob: -16.51826286315918
    10. '(self' → logprob: -16.76826286315918

Token 403: '.inter' (ID: 19028)
  Prédit: '.inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.inter' → logprob: -2.2200749754119897e-06
    2. '.' → logprob: -13.375001907348633
    3. '.in' → logprob: -15.750001907348633
    4. ' .' → logprob: -15.875001907348633
    5. 'inter' → logprob: -16.000001907348633
    6. '_inter' → logprob: -16.875001907348633
    7. '.interval' → logprob: -17.500001907348633
    8. '.ind' → logprob: -17.500001907348633
    9. '`.' → logprob: -17.750001907348633
    10. 'interval' → logprob: -17.750001907348633

Token 404: 'vals' (ID: 44567)
  Prédit: 'erv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'erv' → logprob: -0.5038388967514038
    2. 'vals' → logprob: -1.2538388967514038
    3. 'als' → logprob: -2.3788390159606934
    4. 'ter' → logprob: -5.378839015960693
    5. 'r' → logprob: -5.628839015960693
    6. 'interval' → logprob: -6.003839015960693
    7. '```' → logprob: -6.253839015960693
    8. 'er' → logprob: -7.253839015960693
    9. '   ' → logprob: -7.253839015960693
    10. 't' → logprob: -7.503839015960693

Token 405: '.insert' (ID: 13222)
  Prédit: '.insert'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.insert' → logprob: -0.0019300628919154406
    2. '.' → logprob: -6.251930236816406
    3. 'insert' → logprob: -14.001930236816406
    4. ' .' → logprob: -14.876930236816406
    5. '.Insert' → logprob: -16.126930236816406
    6. '[pos' → logprob: -17.126930236816406
    7. '.append' → logprob: -17.376930236816406
    8. '   ' → logprob: -17.376930236816406
    9. '_insert' → logprob: -17.501930236816406
    10. '.splice' → logprob: -18.251930236816406

Token 406: '(pos' (ID: 24566)
  Prédit: '(pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pos' → logprob: -1.5928495486150496e-05
    2. '(' → logprob: -11.250016212463379
    3. 'pos' → logprob: -13.000016212463379
    4. '(
' → logprob: -15.000016212463379
    5. ' pos' → logprob: -15.625016212463379
    6. ',pos' → logprob: -16.750015258789062
    7. ' (' → logprob: -17.000015258789062
    8. '	pos' → logprob: -17.875015258789062
    9. '(Pos' → logprob: -18.375015258789062
    10. '[pos' → logprob: -18.375015258789062

Token 407: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07931659370660782
    2. ',new' → logprob: -2.5793166160583496
    3. ' ,' → logprob: -7.95431661605835
    4. 'new' → logprob: -9.829316139221191
    5. ' new' → logprob: -11.704316139221191
    6. '(new' → logprob: -12.079316139221191
    7. ')' → logprob: -12.204316139221191
    8. ')new' → logprob: -13.204316139221191
    9. ',n' → logprob: -14.704316139221191
    10. '),' → logprob: -16.079317092895508

Token 408: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.01416350994259119
    2. ' new' → logprob: -4.264163494110107
    3. ')new' → logprob: -17.889163970947266
    4. '	new' → logprob: -18.264163970947266
    5. '   ' → logprob: -19.389163970947266
    6. '_new' → logprob: -19.639163970947266
    7. ')' → logprob: -19.889163970947266
    8. '(new' → logprob: -19.889163970947266
    9. 'New' → logprob: -19.889163970947266
    10. '
' → logprob: -20.139163970947266

Token 409: '_interval' (ID: 49009)
  Prédit: '_interval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_interval' → logprob: -3.531315314830863e-06
    2. 'interval' → logprob: -12.625003814697266
    3. '_inter' → logprob: -16.000003814697266
    4. 'Interval' → logprob: -17.875003814697266
    5. '_INTERVAL' → logprob: -18.625003814697266
    6. ' interval' → logprob: -18.875003814697266
    7. '_' → logprob: -19.375003814697266
    8. '.interval' → logprob: -20.750003814697266
    9. '(interval' → logprob: -21.375003814697266
    10. '
' → logprob: -22.000003814697266

Token 410: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.9292415749514475e-05
    2. ')
' → logprob: -10.375039100646973
    3. ' )' → logprob: -12.000039100646973
    4. '<|end|>' → logprob: -13.500039100646973
    5. ')return' → logprob: -15.250039100646973
    6. ')#' → logprob: -16.75004005432129
    7. '),' → logprob: -17.25004005432129
    8. ')}' → logprob: -17.25004005432129
    9. ')

' → logprob: -17.25004005432129
    10. ')view' → logprob: -17.87504005432129

Token 411: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05263189971446991
    2. 'def' → logprob: -3.0526318550109863
    3. ' def' → logprob: -6.177631855010986
    4. '```' → logprob: -7.052631855010986
    5. '<|end|>' → logprob: -7.177631855010986
    6. '
' → logprob: -9.052632331848145
    7. '    
' → logprob: -9.177632331848145
    8. '	def' → logprob: -10.052632331848145
    9. '<|end|>' → logprob: -11.052632331848145
    10. '  ' → logprob: -11.427632331848145

Token 412: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0035462589003145695
    2. '   ' → logprob: -6.378546237945557
    3. ' def' → logprob: -6.878546237945557
    4. '
' → logprob: -7.253546237945557
    5. 'class' → logprob: -9.503546714782715
    6. '```' → logprob: -11.378546714782715
    7. '	def' → logprob: -11.503546714782715
    8. '    
' → logprob: -12.628546714782715
    9. 'from' → logprob: -12.753546714782715
    10. 'Def' → logprob: -14.503546714782715

Token 413: ' release' (ID: 8232)
  Prédit: 'release'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'release' → logprob: -0.001506409258581698
    2. ' release' → logprob: -6.501506328582764
    3. '   ' → logprob: -13.501506805419922
    4. 'def' → logprob: -13.751506805419922
    5. 'remove' → logprob: -13.876506805419922
    6. '_release' → logprob: -15.376506805419922
    7. '  ' → logprob: -16.001506805419922
    8. '.release' → logprob: -16.126506805419922
    9. 'find' → logprob: -16.376506805419922
    10. ' ' → logprob: -16.501506805419922

Token 414: '_cat' (ID: 50384)
  Prédit: '_cat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cat' → logprob: -0.4750805199146271
    2. '(self' → logprob: -1.4750804901123047
    3. '_' → logprob: -2.6000804901123047
    4. '(' → logprob: -2.8500804901123047
    5. 'self' → logprob: -4.350080490112305
    6. 'cat' → logprob: -5.600080490112305
    7. '_(' → logprob: -7.725080490112305
    8. 'Cat' → logprob: -9.350080490112305
    9. '   ' → logprob: -9.725080490112305
    10. '(_' → logprob: -10.725080490112305

Token 415: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -5.300083648762666e-05
    2. '(' → logprob: -10.625053405761719
    3. 'self' → logprob: -10.625053405761719
    4. ' (' → logprob: -12.750053405761719
    5. '(cat' → logprob: -14.250053405761719
    6. ' self' → logprob: -15.250053405761719
    7. '(s' → logprob: -15.875053405761719
    8. '   ' → logprob: -15.875053405761719
    9. 'def' → logprob: -16.12505340576172
    10. '(
' → logprob: -16.25005340576172

Token 416: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00716868182644248
    2. 'self' → logprob: -5.007168769836426
    3. '(self' → logprob: -7.882168769836426
    4. 'cat' → logprob: -9.882168769836426
    5. ' ,' → logprob: -11.507168769836426
    6. ' self' → logprob: -12.132168769836426
    7. ',self' → logprob: -13.132168769836426
    8. '(cat' → logprob: -13.132168769836426
    9. ' cat' → logprob: -13.382168769836426
    10. '(' → logprob: -13.632168769836426

Token 417: ' cat' (ID: 9059)
  Prédit: 'cat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cat' → logprob: -0.10429947823286057
    2. 'self' → logprob: -2.604299545288086
    3. ' cat' → logprob: -3.729299545288086
    4. ' self' → logprob: -6.854299545288086
    5. '   ' → logprob: -10.729299545288086
    6. '       ' → logprob: -13.104299545288086
    7. 'Cat' → logprob: -15.479299545288086
    8. '_cat' → logprob: -15.604299545288086
    9. '    ' → logprob: -16.104299545288086
    10. '(cat' → logprob: -16.229299545288086

Token 418: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -9.088346359931165e-07
    2. 'id' → logprob: -14.625000953674316
    3. '_ids' → logprob: -15.125000953674316
    4. '_' → logprob: -16.875
    5. ')_' → logprob: -17.125
    6. 'd' → logprob: -17.5
    7. ''_' → logprob: -17.625
    8. ' _' → logprob: -17.75
    9. '_i' → logprob: -18.125
    10. '   ' → logprob: -18.5

Token 419: ':' (ID: 25)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.013579229824244976
    2. '   ' → logprob: -5.138579368591309
    3. ' self' → logprob: -5.763579368591309
    4. '       ' → logprob: -6.138579368591309
    5. ':' → logprob: -6.388579368591309
    6. ',' → logprob: -8.263579368591309
    7. '(self' → logprob: -8.388579368591309
    8. '):
' → logprob: -10.013579368591309
    9. '):' → logprob: -10.013579368591309
    10. ')' → logprob: -10.513579368591309

Token 420: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.030036840587854385
    2. ' int' → logprob: -3.5300369262695312
    3. 'self' → logprob: -8.530036926269531
    4. ')' → logprob: -10.780036926269531
    5. 'cat' → logprob: -10.905036926269531
    6. '   ' → logprob: -10.905036926269531
    7. ' self' → logprob: -10.905036926269531
    8. ' cat' → logprob: -11.530036926269531
    9. '[int' → logprob: -13.905036926269531
    10. ' ' → logprob: -14.905036926269531

Token 421: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.12525080144405365
    2. 'self' → logprob: -2.625250816345215
    3. '):' → logprob: -3.125250816345215
    4. ')' → logprob: -7.375250816345215
    5. '   ' → logprob: -8.000250816345215
    6. ' self' → logprob: -8.625250816345215
    7. '       ' → logprob: -8.875250816345215
    8. '):
' → logprob: -10.125250816345215
    9. ' ):
' → logprob: -10.750250816345215
    10. ')
' → logprob: -11.375250816345215

Token 422: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.039482422173023224
    2. ' for' → logprob: -3.289482355117798
    3. 'for' → logprob: -7.164482593536377
    4. ' i' → logprob: -7.539482593536377
    5. ' self' → logprob: -10.039482116699219
    6. ' to' → logprob: -10.289482116699219
    7. 'i' → logprob: -10.789482116699219
    8. ' indices' → logprob: -11.539482116699219
    9. 'self' → logprob: -11.789482116699219
    10. '   ' → logprob: -12.539482116699219

Token 423: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.017519118264317513
    2. '       ' → logprob: -4.267518997192383
    3. ' self' → logprob: -6.017518997192383
    4. 'for' → logprob: -7.017518997192383
    5. ' for' → logprob: -11.392518997192383
    6. '   ' → logprob: -12.392518997192383
    7. 'i' → logprob: -12.892518997192383
    8. ' i' → logprob: -15.392518997192383
    9. '	self' → logprob: -16.767518997192383
    10. 'index' → logprob: -16.767518997192383

Token 424: ' remove' (ID: 6234)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0008209457155317068
    2. 'for' → logprob: -7.500821113586426
    3. ' self' → logprob: -9.000821113586426
    4. '       ' → logprob: -9.875821113586426
    5. '   ' → logprob: -10.000821113586426
    6. 'i' → logprob: -10.000821113586426
    7. 'index' → logprob: -13.500821113586426
    8. ' for' → logprob: -15.000821113586426
    9. ' i' → logprob: -15.375821113586426
    10. 'idx' → logprob: -15.375821113586426

Token 425: ' interval' (ID: 17116)
  Prédit: 'iv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iv' → logprob: -0.4765247106552124
    2. 'interval' → logprob: -1.3515247106552124
    3. 'self' → logprob: -2.351524829864502
    4. ' iv' → logprob: -4.226524829864502
    5. 'i' → logprob: -4.726524829864502
    6. ' interval' → logprob: -6.976524829864502
    7. '   ' → logprob: -8.726524353027344
    8. 'for' → logprob: -9.226524353027344
    9. '[i' → logprob: -9.226524353027344
    10. ' self' → logprob: -9.601524353027344

Token 426: ' with' (ID: 483)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.1095683574676514
    2. '=' → logprob: -1.3595683574676514
    3. 'for' → logprob: -1.6095683574676514
    4. ' =' → logprob: -2.4845683574676514
    5. 'self' → logprob: -3.3595683574676514
    6. '       ' → logprob: -3.4845683574676514
    7. 's' → logprob: -4.2345685958862305
    8. 'i' → logprob: -4.2345685958862305
    9. ' i' → logprob: -4.3595685958862305
    10. '   ' → logprob: -4.8595685958862305

Token 427: ' that' (ID: 484)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.5211954712867737
    2. 'cat' → logprob: -1.146195411682129
    3. 'iv' → logprob: -2.646195411682129
    4. ' iv' → logprob: -4.521195411682129
    5. ' interval' → logprob: -5.771195411682129
    6. ' cat' → logprob: -5.771195411682129
    7. '.iv' → logprob: -9.521195411682129
    8. 'lambda' → logprob: -9.521195411682129
    9. 'ival' → logprob: -10.771195411682129
    10. 'attr' → logprob: -10.896195411682129

Token 428: ' cat' (ID: 9059)
  Prédit: ' cat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cat' → logprob: -0.4748900234699249
    2. 'cat' → logprob: -1.0998899936676025
    3. '.cat' → logprob: -3.0998899936676025
    4. '(cat' → logprob: -10.724889755249023
    5. 'interval' → logprob: -11.099889755249023
    6. ' .' → logprob: -11.224889755249023
    7. '.' → logprob: -11.349889755249023
    8. ' for' → logprob: -11.849889755249023
    9. 'for' → logprob: -12.849889755249023
    10. '   ' → logprob: -12.849889755249023

Token 429: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.018187053501605988
    2. ' for' → logprob: -4.268187046051025
    3. '   ' → logprob: -6.018187046051025
    4. 'for' → logprob: -7.268187046051025
    5. 'id' → logprob: -8.143187522888184
    6. '       ' → logprob: -8.268187522888184
    7. ' id' → logprob: -9.143187522888184
    8. ' =' → logprob: -9.518187522888184
    9. ' ' → logprob: -10.393187522888184
    10. ':' → logprob: -10.518187522888184

Token 430: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7856331467628479
    2. ' for' → logprob: -0.9106331467628479
    3. '
' → logprob: -2.410633087158203
    4. 'for' → logprob: -3.035633087158203
    5. 'self' → logprob: -5.910633087158203
    6. ' self' → logprob: -7.285633087158203
    7. ',' → logprob: -8.910633087158203
    8. '(self' → logprob: -9.410633087158203
    9. ' i' → logprob: -9.660633087158203
    10. ' =' → logprob: -9.785633087158203

Token 431: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.074958436191082
    2. ' for' → logprob: -2.699958324432373
    3. 'for' → logprob: -5.324958324432373
    4. ' i' → logprob: -10.324958801269531
    5. 'i' → logprob: -10.449958801269531
    6. '   ' → logprob: -10.699958801269531
    7. '
' → logprob: -11.074958801269531
    8. '```' → logprob: -11.449958801269531
    9. 'self' → logprob: -11.699958801269531
    10. ' to' → logprob: -12.199958801269531

Token 432: ' for' (ID: 395)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.12283103168010712
    2. 'for' (adapté à ' for') → logprob: -2.622831106185913
    3. '       ' → logprob: -3.872831106185913
    4. ' self' → logprob: -4.122830867767334
    5. ' for' → logprob: -5.122830867767334
    6. 'i' → logprob: -10.997831344604492
    7. ' i' → logprob: -11.497831344604492
    8. '   ' → logprob: -12.497831344604492
    9. '```' → logprob: -14.247831344604492
    10. '
' → logprob: -14.872831344604492

Token 433: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2519475221633911
    2. ' i' → logprob: -1.5019475221633911
    3. ' idx' → logprob: -11.501947402954102
    4. 'idx' → logprob: -12.001947402954102
    5. 'index' → logprob: -13.251947402954102
    6. ' index' → logprob: -15.001947402954102
    7. '	i' → logprob: -16.6269474029541
    8. ' ' → logprob: -16.7519474029541
    9. '   ' → logprob: -18.2519474029541
    10. '  ' → logprob: -18.7519474029541

Token 434: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07244929671287537
    2. ' in' → logprob: -2.822449207305908
    3. 'in' → logprob: -4.572449207305908
    4. ' ,' → logprob: -9.697449684143066
    5. ',in' → logprob: -10.572449684143066
    6. 'i' → logprob: -13.947449684143066
    7. ',line' → logprob: -14.072449684143066
    8. ',value' → logprob: -14.322449684143066
    9. ',i' → logprob: -14.447449684143066
    10. '_,' → logprob: -14.572449684143066

Token 435: ' interval' (ID: 17116)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.036110032349824905
    2. 'iv' → logprob: -3.4111099243164062
    3. ' interval' → logprob: -6.161109924316406
    4. ' iv' → logprob: -8.036109924316406
    5. 'ival' → logprob: -10.661109924316406
    6. '(interval' → logprob: -13.536109924316406
    7. '_interval' → logprob: -14.411109924316406
    8. '(iv' → logprob: -14.411109924316406
    9. 'Interval' → logprob: -15.036109924316406
    10. 'int' → logprob: -15.411109924316406

Token 436: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04859180003404617
    2. 'in' → logprob: -3.0485918521881104
    3. '	in' → logprob: -12.673591613769531
    4. ',' → logprob: -14.048591613769531
    5. '
' → logprob: -15.673591613769531
    6. 'import' → logprob: -17.04859161376953
    7. '_in' → logprob: -17.04859161376953
    8. ' ' → logprob: -17.04859161376953
    9. '```' → logprob: -17.04859161376953
    10. 'n' → logprob: -17.17359161376953

Token 437: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.3132616877555847
    2. 'enumer' → logprob: -1.3132617473602295
    3. '```' → logprob: -19.313261032104492
    4. '.enumer' → logprob: -19.438261032104492
    5. 'range' → logprob: -19.563261032104492
    6. 'en' → logprob: -19.563261032104492
    7. 'enum' → logprob: -19.688261032104492
    8. 'Enumer' → logprob: -20.063261032104492
    9. ' enumer' → logprob: -20.313261032104492
    10. '(en' → logprob: -21.188261032104492

Token 438: '(self' (ID: 2402)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.060431621968746185
    2. ' self' → logprob: -3.310431718826294
    3. '(self' → logprob: -3.810431718826294
    4. '(' → logprob: -13.435431480407715
    5. ' (' → logprob: -13.810431480407715
    6. '	self' → logprob: -15.435431480407715
    7. '[self' → logprob: -17.56043243408203
    8. '
' → logprob: -17.81043243408203
    9. '       ' → logprob: -17.93543243408203
    10. ' ' → logprob: -17.93543243408203

Token 439: '.inter' (ID: 19028)
  Prédit: '.inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.inter' → logprob: -0.0013608321314677596
    2. 'self' → logprob: -6.626360893249512
    3. 'interval' → logprob: -11.251360893249512
    4. ' .' → logprob: -11.501360893249512
    5. '.' → logprob: -12.501360893249512
    6. '.self' → logprob: -12.626360893249512
    7. '.interval' → logprob: -13.001360893249512
    8. '.in' → logprob: -14.626360893249512
    9. 'inter' → logprob: -15.001360893249512
    10. 'Intervals' → logprob: -15.501360893249512

Token 440: 'vals' (ID: 44567)
  Prédit: 'als'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'als' → logprob: -0.2629753053188324
    2. 'vals' → logprob: -1.5129753351211548
    3. 'al' → logprob: -5.012975215911865
    4. 'val' → logprob: -6.387975215911865
    5. '   ' → logprob: -7.262975215911865
    6. 's' → logprob: -7.387975215911865
    7. '```' → logprob: -7.887975215911865
    8. 'erv' → logprob: -8.637975692749023
    9. 'ls' → logprob: -9.762975692749023
    10. ')' → logprob: -9.887975692749023

Token 441: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.7189576625823975
    2. ':
' → logprob: -0.8439576625823975
    3. '():
' → logprob: -2.7189576625823975
    4. ':' → logprob: -4.218957901000977
    5. ' :
' → logprob: -6.968957901000977
    6. '       ' → logprob: -7.093957901000977
    7. ' ):
' → logprob: -8.968957901000977
    8. '):' → logprob: -10.218957901000977
    9. ' :' → logprob: -10.343957901000977
    10. '   ' → logprob: -10.468957901000977

Token 442: '           ' (ID: 352)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4383493959903717
    2. '       ' → logprob: -1.6883493661880493
    3. '           ' → logprob: -1.8133493661880493
    4. 'if' → logprob: -5.18834924697876
    5. ':' → logprob: -8.063349723815918
    6. '<|end|>' → logprob: -8.063349723815918
    7. '   ' → logprob: -8.688349723815918
    8. ':
' → logprob: -8.813349723815918
    9. '<|end|>' → logprob: -9.563349723815918
    10. '```' → logprob: -9.813349723815918

Token 443: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.41015321016311646
    2. 'if' (adapté à ' if') → logprob: -1.1601531505584717
    3. '           ' → logprob: -3.7851531505584717
    4. '               ' → logprob: -8.41015338897705
    5. '	       ' → logprob: -10.41015338897705
    6. '       ' → logprob: -10.78515338897705
    7. '	if' → logprob: -11.03515338897705
    8. '   ' → logprob: -11.41015338897705
    9. 'If' → logprob: -13.16015338897705
    10. '	           ' → logprob: -13.78515338897705

Token 444: ' interval' (ID: 17116)
  Prédit: ' interval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' interval' → logprob: -0.25193482637405396
    2. 'interval' → logprob: -1.5019347667694092
    3. '(interval' → logprob: -12.376935005187988
    4. '           ' → logprob: -13.876935005187988
    5. '.interval' → logprob: -15.251935005187988
    6. ' intervalo' → logprob: -15.501935005187988
    7. '    ' → logprob: -16.876934051513672
    8. '   ' → logprob: -17.001934051513672
    9. '            ' → logprob: -17.876934051513672
    10. 'inter' → logprob: -18.001934051513672

Token 445: '.cat' (ID: 59261)
  Prédit: '.cat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cat' → logprob: -2.3080716346157715e-05
    2. '.' → logprob: -11.500022888183594
    3. '.id' → logprob: -11.750022888183594
    4. '.pet' → logprob: -13.250022888183594
    5. ' .' → logprob: -13.750022888183594
    6. '.car' → logprob: -14.250022888183594
    7. '.cid' → logprob: -15.250022888183594
    8. '.col' → logprob: -15.250022888183594
    9. ' cat' → logprob: -16.250022888183594
    10. '   ' → logprob: -16.375022888183594

Token 446: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -3.128163257315464e-07
    2. 'id' → logprob: -16.25
    3. '_' → logprob: -16.75
    4. ' _' → logprob: -16.875
    5. '_ids' → logprob: -17.125
    6. '._' → logprob: -17.75
    7. '_i' → logprob: -19.0
    8. '   ' → logprob: -19.25
    9. '_cat' → logprob: -19.375
    10. '\' → logprob: -19.5

Token 447: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.01815205067396164
    2. '==' → logprob: -4.018152236938477
    3. ' ' → logprob: -13.643152236938477
    4. ')==' → logprob: -14.893152236938477
    5. '=' → logprob: -15.768152236938477
    6. ' ==
' → logprob: -16.268152236938477
    7. '===' → logprob: -16.393152236938477
    8. ']==' → logprob: -16.518152236938477
    9. '==
' → logprob: -16.643152236938477
    10. ' ===' → logprob: -17.018152236938477

Token 448: ' cat' (ID: 9059)
  Prédit: 'cat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cat' → logprob: -0.20141392946243286
    2. ' cat' → logprob: -1.701413869857788
    3. '   ' → logprob: -14.576414108276367
    4. '(cat' → logprob: -16.076414108276367
    5. 'cats' → logprob: -18.201414108276367
    6. '_cat' → logprob: -18.451414108276367
    7. '    ' → logprob: -18.951414108276367
    8. '
' → logprob: -19.076414108276367
    9. '猫' → logprob: -19.451414108276367
    10. ' ' → logprob: -19.451414108276367

Token 449: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -4.1318875446449965e-05
    2. 'id' → logprob: -10.125041007995605
    3. '_i' → logprob: -14.875041007995605
    4. '   ' → logprob: -15.000041007995605
    5. 'd' → logprob: -15.500041007995605
    6. '_' → logprob: -16.000041961669922
    7. 'i' → logprob: -16.250041961669922
    8. ')' → logprob: -17.250041961669922
    9. '._' → logprob: -18.000041961669922
    10. '```' → logprob: -18.125041961669922

Token 450: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.1306026726961136
    2. ':' → logprob: -2.1306025981903076
    3. '):
' → logprob: -6.005602836608887
    4. '               ' → logprob: -7.005602836608887
    5. '():
' → logprob: -8.755602836608887
    6. '           ' → logprob: -10.755602836608887
    7. ' and' → logprob: -11.005602836608887
    8. ' :
' → logprob: -11.130602836608887
    9. '):' → logprob: -11.255602836608887
    10. '<|end|>' → logprob: -11.255602836608887

Token 451: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0009306333377026021
    2. '           ' → logprob: -7.8759307861328125
    3. '<|end|>' → logprob: -8.500930786132812
    4. ':
' → logprob: -9.250930786132812
    5. '
' → logprob: -9.500930786132812
    6. ' return' → logprob: -10.500930786132812
    7. '):
' → logprob: -11.000930786132812
    8. ':' → logprob: -11.000930786132812
    9. ',' → logprob: -11.000930786132812
    10. '<|end|>' → logprob: -11.125930786132812

Token 452: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.9738747477531433
    2. ' del' → logprob: -1.223874807357788
    3. ' self' → logprob: -1.223874807357788
    4. '               ' → logprob: -4.098874568939209
    5. 'del' → logprob: -4.098874568939209
    6. '           ' → logprob: -7.098874568939209
    7. '	del' → logprob: -8.848875045776367
    8. '	self' → logprob: -10.223875045776367
    9. '_del' → logprob: -12.223875045776367
    10. '   ' → logprob: -12.848875045776367

Token 453: '.inter' (ID: 19028)
  Prédit: '.inter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.inter' → logprob: -0.0002217748697148636
    2. '.' → logprob: -8.500222206115723
    3. 'inter' → logprob: -12.125222206115723
    4. '.ind' → logprob: -12.125222206115723
    5. '.interval' → logprob: -13.125222206115723
    6. 'interval' → logprob: -13.250222206115723
    7. ' .' → logprob: -13.750222206115723
    8. '.indices' → logprob: -14.750222206115723
    9. '.im' → logprob: -15.000222206115723
    10. '.in' → logprob: -15.125222206115723

Token 454: 'vals' (ID: 44567)
  Prédit: 'erv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'erv' → logprob: -1.0240809917449951
    2. 'vals' → logprob: -1.6490809917449951
    3. 'als' → logprob: -1.7740809917449951
    4. 'ter' → logprob: -1.7740809917449951
    5. 'interval' → logprob: -3.524080991744995
    6. 'erval' → logprob: -3.649080991744995
    7. 't' → logprob: -4.024081230163574
    8. '```' → logprob: -4.149081230163574
    9. ' intervals' → logprob: -5.399081230163574
    10. 'r' → logprob: -5.524081230163574

Token 455: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -8.470901229884475e-05
    2. 'pop' → logprob: -9.50008487701416
    3. '.' → logprob: -11.62508487701416
    4. '	pop' → logprob: -15.37508487701416
    5. ' pop' → logprob: -15.75008487701416
    6. '.remove' → logprob: -16.000083923339844
    7. '           ' → logprob: -16.125083923339844
    8. '.del' → logprob: -16.375083923339844
    9. '.__' → logprob: -16.750083923339844
    10. ' .' → logprob: -17.500083923339844

Token 456: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -5.512236498361744e-07
    2. '(' → logprob: -15.000000953674316
    3. '(
' → logprob: -16.375
    4. 'i' → logprob: -17.0
    5. '   ' → logprob: -18.625
    6. '[i' → logprob: -20.625
    7. '       ' → logprob: -20.625
    8. ' (' → logprob: -20.75
    9. '(ii' → logprob: -21.5
    10. '(idx' → logprob: -21.625

Token 457: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5668867230415344
    2. ')
' → logprob: -1.3168866634368896
    3. '               ' → logprob: -1.8168866634368896
    4. ')return' → logprob: -7.191886901855469
    5. '<|end|>' → logprob: -7.441886901855469
    6. '           ' → logprob: -8.441886901855469
    7. '()' → logprob: -8.566886901855469
    8. '                   ' → logprob: -8.816886901855469
    9. '()
' → logprob: -9.691886901855469
    10. '       ' → logprob: -9.941886901855469

Token 458: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.000555416801944375
    2. '<|end|>' → logprob: -8.125555038452148
    3. 'return' → logprob: -9.375555038452148
    4. '()' → logprob: -9.750555038452148
    5. '       ' → logprob: -10.125555038452148
    6. ' return' → logprob: -10.250555038452148
    7. '                
' → logprob: -11.250555038452148
    8. '           ' → logprob: -12.500555038452148
    9. '<|end|>' → logprob: -12.875555038452148
    10. '		       ' → logprob: -13.000555038452148

Token 459: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001707659917883575
    2. 'return' → logprob: -6.501707553863525
    3. ' return' → logprob: -9.251708030700684
    4. 'break' (adapté à ' break') → logprob: -9.251708030700684
    5. ' break' → logprob: -11.251708030700684
    6. '       ' → logprob: -16.376707077026367
    7. '              ' → logprob: -16.376707077026367
    8. '                
' → logprob: -17.126707077026367
    9. '                ' → logprob: -17.251707077026367
    10. '           ' → logprob: -17.376707077026367

Token 460: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.31289413571357727
    2. 'class' → logprob: -1.8128941059112549
    3. 'from' → logprob: -2.312894105911255
    4. '@dat' → logprob: -5.062894344329834
    5. '

' → logprob: -8.812893867492676
    6. '@class' → logprob: -11.562893867492676
    7. '    
' → logprob: -11.562893867492676
    8. '```' → logprob: -12.187893867492676
    9. '  
' → logprob: -12.562893867492676
    10. '<class' → logprob: -12.812893867492676

Token 461: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.7597905993461609
    2. 'from' → logprob: -0.7597905993461609
    3. '@dat' → logprob: -2.7597906589508057
    4. '
' → logprob: -6.759790420532227
    5. '@class' → logprob: -13.134790420532227
    6. '```' → logprob: -13.509790420532227
    7. '    
' → logprob: -14.009790420532227
    8. '<class' → logprob: -14.134790420532227
    9. ' from' → logprob: -14.509790420532227
    10. ' 
' → logprob: -15.009790420532227

Token 462: ' Interval' (ID: 80693)
  Prédit: ' Interval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Interval' → logprob: -0.1269317865371704
    2. 'Interval' → logprob: -2.126931667327881
    3. '_interval' → logprob: -13.001932144165039
    4. '.Interval' → logprob: -13.876932144165039
    5. 'class' → logprob: -15.501932144165039
    6. 'interval' → logprob: -16.37693214416504
    7. ' interval' → logprob: -17.00193214416504
    8. '@dat' → logprob: -17.25193214416504
    9. '```' → logprob: -17.37693214416504
    10. '_INTERVAL' → logprob: -17.62693214416504

Token 463: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.020932581275701523
    2. ':
' → logprob: -3.895932674407959
    3. '(' → logprob: -7.895932674407959
    4. ':def' → logprob: -12.1459321975708
    5. ':

' → logprob: -12.3959321975708
    6. 'def' → logprob: -12.8959321975708
    7. '<|end|>' → logprob: -13.2709321975708
    8. '@dat' → logprob: -14.0209321975708
    9. '   ' → logprob: -14.3959321975708
    10. '(
' → logprob: -14.5209321975708

Token 464: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0058401646092534065
    2. 'def' → logprob: -5.880840301513672
    3. 'class' → logprob: -6.005840301513672
    4. ':' → logprob: -8.130840301513672
    5. '@dat' → logprob: -8.755840301513672
    6. '(' → logprob: -10.255840301513672
    7. ' def' → logprob: -10.380840301513672
    8. '```' → logprob: -10.880840301513672
    9. '    ' → logprob: -11.630840301513672
    10. ' class' → logprob: -12.130840301513672

Token 465: ' __' (ID: 2516)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.36644870042800903
    2. 'class' → logprob: -1.4914486408233643
    3. '@dat' → logprob: -3.1164486408233643
    4. 'from' → logprob: -3.9914486408233643
    5. '   ' → logprob: -4.491448879241943
    6. '__' (adapté à ' __') → logprob: -5.116448879241943
    7. '```' → logprob: -6.866448879241943
    8. ' def' → logprob: -7.741448879241943
    9. '@' → logprob: -8.616448402404785
    10. ':' → logprob: -10.491448402404785

Token 466: 'slots' (ID: 101916)
  Prédit: 'slots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'slots' → logprob: -0.0011872532777488232
    2. 'init' → logprob: -6.751187324523926
    3. ' slots' → logprob: -11.376187324523926
    4. 'slot' → logprob: -12.251187324523926
    5. '_slots' → logprob: -14.876187324523926
    6. '```' → logprob: -15.251187324523926
    7. '
' → logprob: -16.12618637084961
    8. 'Slots' → logprob: -17.75118637084961
    9. '__' → logprob: -17.87618637084961
    10. 'dat' → logprob: -18.00118637084961

Token 467: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -4.008129963040119e-06
    2. '=' → logprob: -13.250003814697266
    3. '__('' → logprob: -13.375003814697266
    4. '___' → logprob: -14.875003814697266
    5. ' =' → logprob: -16.125003814697266
    6. '__[' → logprob: -16.875003814697266
    7. '__["' → logprob: -17.125003814697266
    8. '__.' → logprob: -17.250003814697266
    9. '__:' → logprob: -17.375003814697266
    10. '____' → logprob: -17.500003814697266

Token 468: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1836717575788498
    2. '__' → logprob: -2.308671712875366
    3. ' =' → logprob: -2.683671712875366
    4. '['' → logprob: -10.308671951293945
    5. '=['' → logprob: -10.558671951293945
    6. '__('' → logprob: -11.308671951293945
    7. '=('' → logprob: -11.933671951293945
    8. '('' → logprob: -12.933671951293945
    9. '___' → logprob: -13.183671951293945
    10. '_=' → logprob: -14.183671951293945

Token 469: ' ('' (ID: 9906)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.624526858329773
    2. '('' → logprob: -0.874526858329773
    3. '["' → logprob: -3.2495269775390625
    4. '("' → logprob: -4.8745269775390625
    5. ''s' → logprob: -7.7495269775390625
    6. '('_' → logprob: -7.9995269775390625
    7. ''' → logprob: -9.874526977539062
    8. ' ('' → logprob: -10.249526977539062
    9. '('__' → logprob: -10.624526977539062
    10. '("_' → logprob: -10.749526977539062

Token 470: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -4.320199877838604e-07
    2. ' start' → logprob: -14.875
    3. '_start' → logprob: -18.875
    4. '   ' → logprob: -20.75
    5. '__' → logprob: -21.375
    6. '	start' → logprob: -21.5
    7. ' ' → logprob: -22.25
    8. '.start' → logprob: -22.5
    9. '  ' → logprob: -22.875
    10. '_' → logprob: -23.5

Token 471: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -8.363617962459102e-05
    2. ',' → logprob: -9.500083923339844
    3. '','' → logprob: -11.750083923339844
    4. '',
' → logprob: -14.500083923339844
    5. ' ',' → logprob: -15.750083923339844
    6. '",' → logprob: -15.875083923339844
    7. ''' → logprob: -16.250083923339844
    8. ','' → logprob: -18.000083923339844
    9. 'start' → logprob: -19.250083923339844
    10. '   ' → logprob: -19.625083923339844

Token 472: ' '' (ID: 461)
  Prédit: ''end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''end' → logprob: -0.004551996476948261
    2. ' '' → logprob: -5.504551887512207
    3. ''' → logprob: -8.254551887512207
    4. 'end' → logprob: -9.004551887512207
    5. ' end' → logprob: -9.629551887512207
    6. '   ' → logprob: -10.754551887512207
    7. ' ' → logprob: -13.379551887512207
    8. '’end' → logprob: -13.879551887512207
    9. '	end' → logprob: -15.379551887512207
    10. '  ' → logprob: -15.879551887512207

Token 473: 'end' (ID: 419)
  Prédit: 'end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.00010235115041723475
    2. ''end' → logprob: -9.250102043151855
    3. ' end' → logprob: -12.000102043151855
    4. '	end' → logprob: -17.625102996826172
    5. '   ' → logprob: -17.750102996826172
    6. '_end' → logprob: -18.875102996826172
    7. '’end' → logprob: -19.125102996826172
    8. ''' → logprob: -20.375102996826172
    9. '(end' → logprob: -20.625102996826172
    10. '@end' → logprob: -20.875102996826172

Token 474: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.0009126556105911732
    2. ',' → logprob: -7.000912666320801
    3. '','' → logprob: -14.2509126663208
    4. ' ',' → logprob: -15.3759126663208
    5. ''' → logprob: -16.500911712646484
    6. ' ,' → logprob: -16.625911712646484
    7. ','' → logprob: -16.750911712646484
    8. '',
' → logprob: -16.750911712646484
    9. '",' → logprob: -17.000911712646484
    10. '   ' → logprob: -17.875911712646484

Token 475: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.02978774718940258
    2. ' '' → logprob: -3.52978777885437
    3. ''s' → logprob: -11.27978801727295
    4. ' cat' → logprob: -11.52978801727295
    5. '   ' → logprob: -11.77978801727295
    6. ' ' → logprob: -13.40478801727295
    7. 'cat' → logprob: -13.52978801727295
    8. ''name' → logprob: -14.52978801727295
    9. ''end' → logprob: -14.52978801727295
    10. ''t' → logprob: -14.90478801727295

Token 476: 'cat' (ID: 8837)
  Prédit: 'cat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cat' → logprob: -1.318681188422488e-05
    2. ' cat' → logprob: -11.25001335144043
    3. '   ' → logprob: -16.87501335144043
    4. ''' → logprob: -18.87501335144043
    5. ' ' → logprob: -19.25001335144043
    6. '_cat' → logprob: -19.50001335144043
    7. '  ' → logprob: -20.25001335144043
    8. '(cat' → logprob: -20.25001335144043
    9. '.cat' → logprob: -20.50001335144043
    10. 'c' → logprob: -21.00001335144043

Token 477: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -3.128163257315464e-07
    2. ''_' → logprob: -15.625
    3. ' _' → logprob: -16.625
    4. '_' → logprob: -17.5
    5. '_start' → logprob: -18.375
    6. '_ids' → logprob: -18.375
    7. '   ' → logprob: -18.5
    8. 'id' → logprob: -19.0
    9. '_i' → logprob: -19.875
    10. '__' → logprob: -20.0

Token 478: '')
' (ID: 2515)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.18200044333934784
    2. '')' → logprob: -2.1820003986358643
    3. '')
' → logprob: -2.9320003986358643
    4. ')' → logprob: -8.682000160217285
    5. ',' → logprob: -10.307000160217285
    6. '')

' → logprob: -10.432000160217285
    7. '',
' → logprob: -10.932000160217285
    8. '','' → logprob: -11.057000160217285
    9. '(',' → logprob: -11.432000160217285
    10. ''' → logprob: -12.057000160217285

Token 479: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006607729475945234
    2. 'def' → logprob: -5.381607532501221
    3. ' def' → logprob: -7.131607532501221
    4. '
' → logprob: -7.506607532501221
    5. '	def' → logprob: -8.131608009338379
    6. '    
' → logprob: -8.131608009338379
    7. ':' → logprob: -11.756608009338379
    8. ',' → logprob: -12.006608009338379
    9. ' =' → logprob: -12.131608009338379
    10. '<|end|>' → logprob: -12.131608009338379

Token 480: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6959537863731384
    2. 'def' (adapté à ' def') → logprob: -0.9459537863731384
    3. ' def' → logprob: -2.195953845977783
    4. '
' → logprob: -6.445953845977783
    5. '	def' → logprob: -8.570953369140625
    6. '    
' → logprob: -9.945953369140625
    7. ':def' → logprob: -12.320953369140625
    8. ':' → logprob: -12.320953369140625
    9. '    ' → logprob: -13.570953369140625
    10. '```' → logprob: -13.570953369140625

Token 481: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.002476016292348504
    2. '__' → logprob: -6.002476215362549
    3. ' ' → logprob: -15.62747573852539
    4. '  ' → logprob: -16.62747573852539
    5. ' ' → logprob: -16.75247573852539
    6. '_init' → logprob: -18.62747573852539
    7. '___' → logprob: -18.62747573852539
    8. ' def' → logprob: -18.62747573852539
    9. '```' → logprob: -18.62747573852539
    10. '.__' → logprob: -19.00247573852539

Token 482: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -2.339278580620885e-06
    2. ' init' → logprob: -13.500001907348633
    3. '_init' → logprob: -15.000001907348633
    4. 'def' → logprob: -15.250001907348633
    5. 'new' → logprob: -15.750001907348633
    6. '	init' → logprob: -18.000001907348633
    7. '   ' → logprob: -18.125001907348633
    8. '__' → logprob: -18.375001907348633
    9. 'ini' → logprob: -19.125001907348633
    10. ' ' → logprob: -19.125001907348633

Token 483: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.201516255736351
    2. '__(' → logprob: -1.7015162706375122
    3. '(' → logprob: -10.076516151428223
    4. '_(' → logprob: -10.326516151428223
    5. 'self' → logprob: -10.826516151428223
    6. ' (' → logprob: -12.576516151428223
    7. '__' → logprob: -12.951516151428223
    8. '__(
' → logprob: -13.326516151428223
    9. '=self' → logprob: -15.076516151428223
    10. '   ' → logprob: -15.951516151428223

Token 484: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -8.77627644513268e-06
    2. ' self' → logprob: -11.750008583068848
    3. '   ' → logprob: -14.500008583068848
    4. '(self' → logprob: -15.750008583068848
    5. 'start' → logprob: -16.625009536743164
    6. '	self' → logprob: -17.375009536743164
    7. '
' → logprob: -17.625009536743164
    8. '       ' → logprob: -18.500009536743164
    9. '0' → logprob: -19.500009536743164
    10. ',self' → logprob: -19.750009536743164

Token 485: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.4082825183868408
    2. 'self' → logprob: -1.4082825183868408
    3. ',' → logprob: -2.408282518386841
    4. ' (' → logprob: -7.908282279968262
    5. ' self' → logprob: -8.408282279968262
    6. ',self' → logprob: -10.033282279968262
    7. '(' → logprob: -11.283282279968262
    8. '   ' → logprob: -11.658282279968262
    9. 'start' → logprob: -12.158282279968262
    10. '__(' → logprob: -12.158282279968262

Token 486: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.006746751256287098
    2. ' start' → logprob: -5.006746768951416
    3. 'self' → logprob: -10.381746292114258
    4. '   ' → logprob: -16.131746292114258
    5. ' self' → logprob: -16.131746292114258
    6. '	start' → logprob: -16.506746292114258
    7. ' ' → logprob: -18.256746292114258
    8. 'star' → logprob: -19.506746292114258
    9. ',start' → logprob: -19.631746292114258
    10. '_start' → logprob: -19.881746292114258

Token 487: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05824868008494377
    2. ':' → logprob: -3.05824875831604
    3. ':int' → logprob: -4.683248519897461
    4. ',int' → logprob: -8.308248519897461
    5. 'int' → logprob: -9.558248519897461
    6. ' ,' → logprob: -10.808248519897461
    7. '   ' → logprob: -11.058248519897461
    8. '=' → logprob: -12.933248519897461
    9. '=int' → logprob: -12.933248519897461
    10. ' :' → logprob: -13.558248519897461

Token 488: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.006743200588971376
    2. ' int' → logprob: -5.006743431091309
    3. 'start' → logprob: -10.506743431091309
    4. ' start' → logprob: -14.631743431091309
    5. '   ' → logprob: -17.006742477416992
    6. 'self' → logprob: -17.631742477416992
    7. ':int' → logprob: -17.631742477416992
    8. ',' → logprob: -17.756742477416992
    9. '0' → logprob: -19.006742477416992
    10. '       ' → logprob: -19.256742477416992

Token 489: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1637164789135568e-05
    2. ' ,' → logprob: -12.000011444091797
    3. ',end' → logprob: -12.875011444091797
    4. ',start' → logprob: -13.125011444091797
    5. ',int' → logprob: -14.250011444091797
    6. ',
' → logprob: -16.000011444091797
    7. '‌,' → logprob: -17.375011444091797
    8. '   ' → logprob: -17.625011444091797
    9. '<|end|>' → logprob: -17.750011444091797
    10. 'end' → logprob: -18.375011444091797

Token 490: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.0031777136027812958
    2. ' end' → logprob: -5.753177642822266
    3. '   ' → logprob: -16.753177642822266
    4. '	end' → logprob: -18.378177642822266
    5. '=end' → logprob: -18.503177642822266
    6. '(end' → logprob: -19.003177642822266
    7. '       ' → logprob: -19.003177642822266
    8. ',end' → logprob: -19.753177642822266
    9. '[end' → logprob: -20.128177642822266
    10. ' ' → logprob: -20.628177642822266

Token 491: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2113979209971149e-05
    2. ',int' → logprob: -12.125012397766113
    3. ' ,' → logprob: -12.375012397766113
    4. ':' → logprob: -13.125012397766113
    5. ':int' → logprob: -15.375012397766113
    6. '   ' → logprob: -16.625011444091797
    7. ',
' → logprob: -18.625011444091797
    8. 'int' → logprob: -18.750011444091797
    9. '‌,' → logprob: -19.625011444091797
    10. ',start' → logprob: -19.625011444091797

Token 492: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.018150296062231064
    2. ' int' → logprob: -4.018150329589844
    3. 'start' → logprob: -15.393150329589844
    4. '   ' → logprob: -16.643150329589844
    5. 'end' → logprob: -17.893150329589844
    6. ' ' → logprob: -18.018150329589844
    7. ':int' → logprob: -18.018150329589844
    8. ' start' → logprob: -19.143150329589844
    9. '	int' → logprob: -19.518150329589844
    10. '(int' → logprob: -19.768150329589844

Token 493: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.173704271830502e-06
    2. ' ,' → logprob: -12.75000286102295
    3. ',int' → logprob: -15.75000286102295
    4. ' cat' → logprob: -17.625003814697266
    5. ',
' → logprob: -18.000003814697266
    6. ',start' → logprob: -18.125003814697266
    7. '   ' → logprob: -18.625003814697266
    8. '       ' → logprob: -19.250003814697266
    9. '‌,' → logprob: -19.500003814697266
    10. 'cat' → logprob: -19.625003814697266

Token 494: ' cat' (ID: 9059)
  Prédit: ' cat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cat' → logprob: -0.47407761216163635
    2. 'cat' → logprob: -0.974077582359314
    3. '   ' → logprob: -15.224077224731445
    4. '    ' → logprob: -15.474077224731445
    5. '       ' → logprob: -16.224077224731445
    6. '        ' → logprob: -16.724077224731445
    7. ' ' → logprob: -16.974077224731445
    8. '(cat' → logprob: -17.724077224731445
    9. '_cat' → logprob: -18.724077224731445
    10. '  ' → logprob: -18.849077224731445

Token 495: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -5.512236498361744e-07
    2. ' _' → logprob: -15.750000953674316
    3. '   ' → logprob: -16.0
    4. '_ids' → logprob: -17.0
    5. '._' → logprob: -17.125
    6. '_start' → logprob: -17.25
    7. '_cat' → logprob: -17.625
    8. ',' → logprob: -18.25
    9. '_i' → logprob: -18.625
    10. '_' → logprob: -19.125

Token 496: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25242850184440613
    2. '):' → logprob: -1.5024285316467285
    3. '):
' → logprob: -7.7524285316467285
    4. ')' → logprob: -10.12742805480957
    5. ':int' → logprob: -11.25242805480957
    6. ' :' → logprob: -12.62742805480957
    7. ' ):' → logprob: -12.75242805480957
    8. '   ' → logprob: -12.87742805480957
    9. ',' → logprob: -12.87742805480957
    10. '=None' → logprob: -13.00242805480957

Token 497: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.1269364058971405
    2. ' int' → logprob: -2.126936435699463
    3. 'cat' → logprob: -12.376935958862305
    4. ' cat' → logprob: -12.501935958862305
    5. ':int' → logprob: -15.751935958862305
    6. '   ' → logprob: -16.251935958862305
    7. '(int' → logprob: -17.501935958862305
    8. ' ' → logprob: -17.876935958862305
    9. '[int' → logprob: -18.126935958862305
    10. 'Optional' → logprob: -18.751935958862305

Token 498: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01816106028854847
    2. '):
' → logprob: -4.018161296844482
    3. ')' → logprob: -11.768160820007324
    4. '):
' → logprob: -13.018160820007324
    5. ':' → logprob: -13.893160820007324
    6. '):

' → logprob: -16.01816177368164
    7. '   ' → logprob: -16.51816177368164
    8. ' ):' → logprob: -16.89316177368164
    9. ''):' → logprob: -17.14316177368164
    10. '       ' → logprob: -17.51816177368164

Token 499: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007804407272487879
    2. 'self' → logprob: -4.8828043937683105
    3. ' self' → logprob: -8.757804870605469
    4. '	self' → logprob: -10.757804870605469
    5. '	' → logprob: -11.257804870605469
    6. '   ' → logprob: -12.507804870605469
    7. '    ' → logprob: -14.632804870605469
    8. '	   ' → logprob: -14.632804870605469
    9. '      ' → logprob: -14.882804870605469
    10. '	       ' → logprob: -15.507804870605469

Token 500: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0007563813705928624
    2. ' self' → logprob: -7.50075626373291
    3. '       ' → logprob: -8.50075626373291
    4. '	self' → logprob: -17.375757217407227
    5. '   ' → logprob: -17.875757217407227
    6. '        ' → logprob: -21.000757217407227
    7. '           ' → logprob: -21.875757217407227
    8. 'start' → logprob: -21.875757217407227
    9. '        
' → logprob: -22.250757217407227
    10. '    ' → logprob: -22.875757217407227

Token 501: '.start' (ID: 10181)
  Prédit: '.start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.start' → logprob: -0.0015610468108206987
    2. '.' → logprob: -6.501561164855957
    3. 'start' → logprob: -9.751561164855957
    4. ' .' → logprob: -15.126561164855957
    5. ' start' → logprob: -16.25156021118164
    6. '	start' → logprob: -17.12656021118164
    7. '=start' → logprob: -17.37656021118164
    8. '_start' → logprob: -18.75156021118164
    9. '.Start' → logprob: -19.00156021118164
    10. 'Start' → logprob: -19.25156021118164

Token 502: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04861631989479065
    2. ' =' → logprob: -3.048616409301758
    3. '=start' → logprob: -10.548616409301758
    4. ',' → logprob: -13.048616409301758
    5. '<|end|>' → logprob: -15.423616409301758
    6. '=end' → logprob: -16.548616409301758
    7. ' ' → logprob: -16.673616409301758
    8. '    ' → logprob: -17.298616409301758
    9. '=self' → logprob: -17.548616409301758
    10. ')' → logprob: -17.923616409301758

Token 503: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.03804149478673935
    2. ' start' → logprob: -3.288041591644287
    3. '	start' → logprob: -20.913042068481445
    4. 'star' → logprob: -21.413042068481445
    5. '=start' → logprob: -21.663042068481445
    6. '(start' → logprob: -22.163042068481445
    7. '[start' → logprob: -22.288042068481445
    8. 'end' → logprob: -22.538042068481445
    9. ' ' → logprob: -23.788042068481445
    10. '_start' → logprob: -23.913042068481445

Token 504: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30845582485198975
    2. '<|end|>' → logprob: -1.5584558248519897
    3. '        
' → logprob: -3.8084559440612793
    4. 'self' → logprob: -4.183455944061279
    5. '
' → logprob: -4.433455944061279
    6. '<|end|>' → logprob: -6.558455944061279
    7. ' 
' → logprob: -7.058455944061279
    8. 'end' → logprob: -7.183455944061279
    9. '  
' → logprob: -7.433455944061279
    10. '        ' → logprob: -8.058455467224121

Token 505: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.05812305212020874
    2. ' self' → logprob: -3.0581231117248535
    3. '       ' → logprob: -4.8081231117248535
    4. 'end' → logprob: -6.6831231117248535
    5. ' end' → logprob: -9.558122634887695
    6. '
' → logprob: -13.308122634887695
    7. '   ' → logprob: -13.683122634887695
    8. '        
' → logprob: -15.183122634887695
    9. '(self' → logprob: -15.308122634887695
    10. ',end' → logprob: -15.308122634887695

Token 506: ' self' (ID: 1051)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -6.2729995988775045e-06
    2. ' end' → logprob: -12.000006675720215
    3. 'self' (adapté à ' self') → logprob: -16.5000057220459
    4. '       ' → logprob: -21.3750057220459
    5. '   ' → logprob: -22.8750057220459
    6. '	end' → logprob: -23.3750057220459
    7. '(end' → logprob: -23.5000057220459
    8. '=end' → logprob: -24.2500057220459
    9. ''end' → logprob: -24.7500057220459
    10. '
' → logprob: -24.8750057220459

Token 507: '.end' (ID: 10289)
  Prédit: '.end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.end' → logprob: -0.038118261843919754
    2. 'end' → logprob: -3.288118362426758
    3. '.' → logprob: -9.913118362426758
    4. '=end' → logprob: -11.663118362426758
    5. ' end' → logprob: -12.038118362426758
    6. '_end' → logprob: -12.288118362426758
    7. ',end' → logprob: -12.913118362426758
    8. '	end' → logprob: -13.288118362426758
    9. '[end' → logprob: -13.538118362426758
    10. ':end' → logprob: -14.038118362426758

Token 508: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 509: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.2014133334159851
    2. ' end' → logprob: -1.7014133930206299
    3. '(end' → logprob: -18.951414108276367
    4. '	end' → logprob: -19.076414108276367
    5. '=end' → logprob: -20.576414108276367
    6. 'End' → logprob: -20.951414108276367
    7. '_end' → logprob: -22.076414108276367
    8. '[end' → logprob: -22.201414108276367
    9. ''end' → logprob: -22.451414108276367
    10. ',end' → logprob: -22.576414108276367

Token 510: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0207100510597229
    2. 'self' → logprob: -4.270709991455078
    3. ' self' → logprob: -5.770709991455078
    4. '
' → logprob: -5.895709991455078
    5. '        
' → logprob: -7.770709991455078
    6. ' cat' → logprob: -10.020709991455078
    7. '   ' → logprob: -10.145709991455078
    8. ' 
' → logprob: -10.395709991455078
    9. '<|end|>' → logprob: -10.395709991455078
    10. ',' → logprob: -10.770709991455078

Token 511: '       ' (ID: 309)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6513854265213013
    2. '       ' → logprob: -1.1513854265213013
    3. ' cat' → logprob: -2.4013853073120117
    4. 'self' → logprob: -2.9013853073120117
    5. ' 
' → logprob: -4.526385307312012
    6. '        
' → logprob: -5.776385307312012
    7. '
' → logprob: -6.776385307312012
    8. '        ' → logprob: -7.526385307312012
    9. 'cat' → logprob: -8.276385307312012
    10. ' ' → logprob: -8.526385307312012

Token 512: ' self' (ID: 1051)
  Prédit: 'cat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cat' → logprob: -0.07896789163351059
    2. 'self' (adapté à ' self') → logprob: -2.578967809677124
    3. ' cat' → logprob: -9.578968048095703
    4. ' self' → logprob: -12.078968048095703
    5. '       ' → logprob: -12.703968048095703
    6. '   ' → logprob: -16.328968048095703
    7. 'cats' → logprob: -16.828968048095703
    8. '(cat' → logprob: -18.203968048095703
    9. '.cat' → logprob: -18.953968048095703
    10. 'car' → logprob: -19.078968048095703

Token 513: '.cat' (ID: 59261)
  Prédit: '.cat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cat' → logprob: -2.816093228830141e-06
    2. '.' → logprob: -13.25000286102295
    3. 'cat' → logprob: -13.87500286102295
    4. ' .' → logprob: -17.250001907348633
    5. ' cat' → logprob: -17.625001907348633
    6. '_cat' → logprob: -19.750001907348633
    7. '(cat' → logprob: -19.875001907348633
    8. '.car' → logprob: -20.125001907348633
    9. '-cat' → logprob: -20.375001907348633
    10. '.c' → logprob: -20.625001907348633

Token 514: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -1.9361264946837764e-07
    2. ' _' → logprob: -16.25
    3. '._' → logprob: -18.75
    4. '_ids' → logprob: -19.375
    5. '   ' → logprob: -19.75
    6. '=_' → logprob: -19.875
    7. '_' → logprob: -20.375
    8. '```' → logprob: -20.625
    9. 'id' → logprob: -20.875
    10. ''_' → logprob: -21.0

Token 515: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020678490400314
    2. ' =' → logprob: -2.3502068519592285
    3. '=
' → logprob: -16.47520637512207
    4. '<|end|>' → logprob: -17.35020637512207
    5. '=id' → logprob: -17.72520637512207
    6. ')' → logprob: -17.72520637512207
    7. ' cat' → logprob: -18.35020637512207
    8. ' ' → logprob: -18.47520637512207
    9. ' =
' → logprob: -18.97520637512207
    10. '==' → logprob: -19.35020637512207

Token 516: ' cat' (ID: 9059)
  Prédit: 'cat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cat' → logprob: -0.16022412478923798
    2. ' cat' → logprob: -1.9102240800857544
    3. ' ' → logprob: -19.16022491455078
    4. '(cat' → logprob: -19.16022491455078
    5. '_cat' → logprob: -21.03522491455078
    6. '   ' → logprob: -21.03522491455078
    7. 'cats' → logprob: -21.28522491455078
    8. 'c' → logprob: -21.53522491455078
    9. '-cat' → logprob: -22.53522491455078
    10. ' ' → logprob: -23.03522491455078

Token 517: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -1.2664456789934775e-06
    2. 'id' → logprob: -13.625000953674316
    3. '\' → logprob: -19.500001907348633
    4. '_i' → logprob: -20.000001907348633
    5. '__' → logprob: -20.000001907348633
    6. 'int' → logprob: -20.375001907348633
    7. '_' → logprob: -20.500001907348633
    8. 'd' → logprob: -20.750001907348633
    9. '   ' → logprob: -21.250001907348633
    10. ' _' → logprob: -21.375001907348633

Token 518: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 519: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 520: ' Observation' (ID: 143762)
  Prédit: 'Cat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Cat' → logprob: -0.24900199472904205
    2. 'Fence' → logprob: -2.249001979827881
    3. ' Cat' → logprob: -2.749001979827881
    4. ' Fence' → logprob: -3.999001979827881
    5. 'Test' → logprob: -4.624001979827881
    6. 'Scheduler' → logprob: -5.624001979827881
    7. 'House' → logprob: -6.124001979827881
    8. 'Room' → logprob: -6.124001979827881
    9. 'Cats' → logprob: -6.124001979827881
    10. 'Shel' → logprob: -6.249001979827881

Token 521: 'Record' (ID: 6721)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.058916136622428894
    2. ':
' → logprob: -2.9339160919189453
    3. '(F' → logprob: -5.683916091918945
    4. '(' → logprob: -7.933916091918945
    5. 'Fence' → logprob: -9.683916091918945
    6. ':F' → logprob: -10.183916091918945
    7. ' :' → logprob: -10.308916091918945
    8. 'F' → logprob: -11.058916091918945
    9. 'Manager' → logprob: -11.558916091918945
    10. 'Observer' → logprob: -11.683916091918945

Token 522: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0019489870173856616
    2. ':
' → logprob: -6.251948833465576
    3. ' :' → logprob: -11.001949310302734
    4. '(' → logprob: -13.251949310302734
    5. ':def' → logprob: -14.626949310302734
    6. ':
' → logprob: -15.001949310302734
    7. ' :
' → logprob: -15.126949310302734
    8. ':

' → logprob: -15.126949310302734
    9. '):' → logprob: -15.626949310302734
    10. '(object' → logprob: -16.126949310302734

Token 523: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0014184460742399096
    2. ':' → logprob: -6.876418590545654
    3. ':
' → logprob: -8.251418113708496
    4. 'def' → logprob: -9.626418113708496
    5. '(' → logprob: -10.251418113708496
    6. '<|end|>' → logprob: -12.376418113708496
    7. 'class' → logprob: -12.876418113708496
    8. '__' → logprob: -13.001418113708496
    9. '):
' → logprob: -13.376418113708496
    10. '```' → logprob: -13.376418113708496

Token 524: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.007015860173851252
    2. ' def' → logprob: -5.632015705108643
    3. '__' → logprob: -6.007015705108643
    4. '   ' → logprob: -7.132015705108643
    5. 'class' → logprob: -9.2570161819458
    6. ' __' → logprob: -10.7570161819458
    7. 'from' → logprob: -11.1320161819458
    8. '...' → logprob: -11.5070161819458
    9. '___' → logprob: -13.5070161819458
    10. '	def' → logprob: -13.5070161819458

Token 525: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.3726646602153778
    2. 'init' → logprob: -1.3726646900177002
    3. '__' → logprob: -2.9976646900177
    4. '```' → logprob: -5.622664451599121
    5. '_init' → logprob: -6.372664451599121
    6. 'def' → logprob: -7.372664451599121
    7. ' init' → logprob: -7.372664451599121
    8. 'int' → logprob: -8.122664451599121
    9. '___' → logprob: -8.122664451599121
    10. ' def' → logprob: -9.247664451599121

Token 526: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.1472419600977446e-06
    2. 'slots' → logprob: -13.750000953674316
    3. ' init' → logprob: -18.500001907348633
    4. '(init' → logprob: -18.875001907348633
    5. 'int' → logprob: -19.750001907348633
    6. '```' → logprob: -19.750001907348633
    7. 'ini' → logprob: -20.125001907348633
    8. 'in' → logprob: -20.250001907348633
    9. 'slot' → logprob: -20.250001907348633
    10. 'class' → logprob: -20.625001907348633

Token 527: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.00019984507525805384
    2. '_(' → logprob: -9.500200271606445
    3. '__' → logprob: -9.750200271606445
    4. '(self' → logprob: -9.750200271606445
    5. '__(
' → logprob: -11.750200271606445
    6. '__((' → logprob: -16.125200271606445
    7. 'self' → logprob: -16.125200271606445
    8. ' (' → logprob: -16.500200271606445
    9. '(' → logprob: -16.625200271606445
    10. '_' → logprob: -16.750200271606445

Token 528: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.240481914370321e-05
    2. ' self' → logprob: -10.625052452087402
    3. '   ' → logprob: -11.625052452087402
    4. '       ' → logprob: -11.875052452087402
    5. '(self' → logprob: -12.500052452087402
    6. 'cat' → logprob: -13.125052452087402
    7. '):
' → logprob: -13.375052452087402
    8. ')' → logprob: -13.500052452087402
    9. '
' → logprob: -13.875052452087402
    10. '0' → logprob: -14.125052452087402

Token 529: ',' (ID: 11)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.05528900399804115
    2. ',' → logprob: -3.8052890300750732
    3. '(self' → logprob: -4.055288791656494
    4. '   ' → logprob: -5.055288791656494
    5. ' self' → logprob: -5.930288791656494
    6. '__(' → logprob: -5.930288791656494
    7. '       ' → logprob: -6.305288791656494
    8. ' (' → logprob: -7.680288791656494
    9. '):
' → logprob: -9.680289268493652
    10. ')' → logprob: -10.180289268493652

Token 530: ' fence' (ID: 42166)
  Prédit: 'cat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cat' → logprob: -1.0146005153656006
    2. ' cat' → logprob: -1.2646005153656006
    3. ' fence' → logprob: -3.0146005153656006
    4. 'timestamp' → logprob: -3.1396005153656006
    5. 'time' → logprob: -3.3896005153656006
    6. 'f' → logprob: -3.7646005153656006
    7. 'position' → logprob: -3.8896005153656006
    8. ' timestamp' → logprob: -4.01460075378418
    9. 'self' → logprob: -4.13960075378418
    10. ' position' → logprob: -4.51460075378418

Token 531: ':' (ID: 25)
  Prédit: '_width'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_width' → logprob: -0.37737518548965454
    2. ':' → logprob: -1.8773751258850098
    3. ',' → logprob: -2.3773751258850098
    4. '_id' → logprob: -2.7523751258850098
    5. '):' → logprob: -6.37737512588501
    6. 'width' → logprob: -6.62737512588501
    7. '_size' → logprob: -7.87737512588501
    8. '   ' → logprob: -8.002375602722168
    9. '):
' → logprob: -8.127375602722168
    10. '_length' → logprob: -9.127375602722168

Token 532: ' Fence' (ID: 144245)
  Prédit: 'Fence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Fence' → logprob: -0.0097878472879529
    2. ' Fence' → logprob: -4.6347880363464355
    3. ')' → logprob: -10.759787559509277
    4. '   ' → logprob: -12.009787559509277
    5. 'int' → logprob: -13.384787559509277
    6. ''' → logprob: -14.009787559509277
    7. ' ' → logprob: -14.259787559509277
    8. 'f' → logprob: -14.759787559509277
    9. ',' → logprob: -15.884787559509277
    10. '`' → logprob: -16.009788513183594

Token 533: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2754270136356354
    2. ',' → logprob: -1.900426983833313
    3. '):' → logprob: -2.4004271030426025
    4. '   ' → logprob: -8.525426864624023
    5. '):
' → logprob: -8.650426864624023
    6. ')' → logprob: -8.775426864624023
    7. ' ):
' → logprob: -11.525426864624023
    8. '       ' → logprob: -11.650426864624023
    9. ':' → logprob: -11.900426864624023
    10. '  ' → logprob: -12.900426864624023

Token 534: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008669407106935978
    2. '   ' → logprob: -4.883669376373291
    3. 'self' → logprob: -7.383669376373291
    4. ' self' → logprob: -8.13366985321045
    5. 'def' → logprob: -9.00866985321045
    6. '	self' → logprob: -11.50866985321045
    7. '(self' → logprob: -12.75866985321045
    8. ' def' → logprob: -13.13366985321045
    9. ',' → logprob: -13.25866985321045
    10. '     ' → logprob: -13.38366985321045

Token 535: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.31349873542785645
    2. '       ' → logprob: -1.3134987354278564
    3. ' self' → logprob: -8.438498497009277
    4. '	self' → logprob: -11.063498497009277
    5. '   ' → logprob: -12.563498497009277
    6. 'import' → logprob: -14.438498497009277
    7. '(self' → logprob: -14.938498497009277
    8. '           ' → logprob: -15.938498497009277
    9. '	' → logprob: -15.938498497009277
    10. '      ' → logprob: -17.063499450683594

Token 536: '.f' (ID: 1196)
  Prédit: '.f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.f' → logprob: -0.027681827545166016
    2. '.' → logprob: -3.652681827545166
    3. '._' → logprob: -7.902681827545166
    4. '.ob' → logprob: -7.902681827545166
    5. '.cat' → logprob: -9.402681350708008
    6. ' .' → logprob: -9.402681350708008
    7. '.s' → logprob: -10.027681350708008
    8. '.records' → logprob: -10.027681350708008
    9. 'f' → logprob: -10.152681350708008
    10. '.events' → logprob: -10.402681350708008

Token 537: 'ence' (ID: 1082)
  Prédit: 'ence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ence' → logprob: -3.249780638725497e-05
    2. 'ance' → logprob: -11.250032424926758
    3. 'ense' → logprob: -11.875032424926758
    4. 'ences' → logprob: -12.250032424926758
    5. 'e' → logprob: -13.375032424926758
    6. '   ' → logprob: -13.750032424926758
    7. 'Fence' → logprob: -14.375032424926758
    8. 'ENCE' → logprob: -14.500032424926758
    9. 'enc' → logprob: -14.625032424926758
    10. '#' → logprob: -14.625032424926758

Token 538: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3133765459060669
    2. '=' → logprob: -1.313376545906067
    3. '   ' → logprob: -9.438376426696777
    4. '=f' → logprob: -10.938376426696777
    5. 's' → logprob: -11.938376426696777
    6. '.' → logprob: -13.063376426696777
    7. 'f' → logprob: -13.188376426696777
    8. '_width' → logprob: -13.313376426696777
    9. '    ' → logprob: -14.188376426696777
    10. ' ' → logprob: -14.188376426696777

Token 539: ' fence' (ID: 42166)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.04313689097762108
    2. ' fence' → logprob: -3.1681368350982666
    3. 'Fence' → logprob: -9.168136596679688
    4. ' f' → logprob: -11.543136596679688
    5. '	f' → logprob: -12.168136596679688
    6. ' Fence' → logprob: -12.293136596679688
    7. ' fenced' → logprob: -12.418136596679688
    8. ' ' → logprob: -12.668136596679688
    9. '_f' → logprob: -13.668136596679688
    10. ' fences' → logprob: -13.793136596679688

Token 540: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00023107275774236768
    2. '   ' → logprob: -8.50023078918457
    3. '
' → logprob: -11.50023078918457
    4. '<|end|>' → logprob: -11.50023078918457
    5. 'self' → logprob: -13.37523078918457
    6. 'def' → logprob: -13.50023078918457
    7. ',' → logprob: -13.50023078918457
    8. '      ' → logprob: -14.37523078918457
    9. ' self' → logprob: -14.75023078918457
    10. ' ' → logprob: -14.87523078918457

Token 541: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00010866894444916397
    2. '   ' → logprob: -9.25010871887207
    3. 'self' → logprob: -11.62510871887207
    4. ' self' → logprob: -13.12510871887207
    5. 'def' → logprob: -13.87510871887207
    6. '
' → logprob: -15.50010871887207
    7. '           ' → logprob: -15.87510871887207
    8. '      ' → logprob: -16.12510871887207
    9. '	self' → logprob: -16.50010871887207
    10. '<|end|>' → logprob: -16.87510871887207

Token 542: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.006087934598326683
    2. '       ' → logprob: -5.131087779998779
    3. ' self' → logprob: -9.006088256835938
    4. 'def' → logprob: -10.756088256835938
    5. 'from' → logprob: -11.631088256835938
    6. '   ' → logprob: -12.756088256835938
    7. 'import' → logprob: -13.881088256835938
    8. '#' → logprob: -13.881088256835938
    9. '	self' → logprob: -14.131088256835938
    10. '@property' → logprob: -15.631088256835938

Token 543: '.c' (ID: 1081)
  Prédit: '.ob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ob' → logprob: -1.0997271537780762
    2. '.records' → logprob: -1.2247271537780762
    3. '.cat' → logprob: -2.224727153778076
    4. '.events' → logprob: -2.974727153778076
    5. '.c' → logprob: -3.099727153778076
    6. '.current' → logprob: -3.224727153778076
    7. '.active' → logprob: -3.849727153778076
    8. '.next' → logprob: -4.099727153778076
    9. '.' → logprob: -4.599727153778076
    10. '.history' → logprob: -4.849727153778076

Token 544: 'ats' (ID: 1838)
  Prédit: 'ats'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ats' → logprob: -0.32932499051094055
    2. 'at' → logprob: -1.3293249607086182
    3. 'urrent' → logprob: -4.704325199127197
    4. 'on' → logprob: -6.704325199127197
    5. 'positions' → logprob: -7.579325199127197
    6. 'ont' → logprob: -7.704325199127197
    7. 'ount' → logprob: -7.704325199127197
    8. 'om' → logprob: -7.829325199127197
    9. 'ons' → logprob: -7.954325199127197
    10. 'cats' → logprob: -8.391824722290039

Token 545: '_sleep' (ID: 125884)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15300950407981873
    2. '=' → logprob: -2.9030094146728516
    3. '_positions' → logprob: -3.6530094146728516
    4. '_in' → logprob: -4.028009414672852
    5. ':' → logprob: -4.403009414672852
    6. '_present' → logprob: -4.903009414672852
    7. '_sleep' → logprob: -5.403009414672852
    8. '_at' → logprob: -5.528009414672852
    9. '_inside' → logprob: -5.653009414672852
    10. '_on' → logprob: -5.778009414672852

Token 546: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.049128539860248566
    2. '_positions' → logprob: -3.174128532409668
    3. 'positions' → logprob: -5.924128532409668
    4. 'ed' → logprob: -6.299128532409668
    5. '_position' → logprob: -7.549128532409668
    6. '=' → logprob: -7.924128532409668
    7. 'position' → logprob: -8.549128532409668
    8. '_locations' → logprob: -9.424128532409668
    9. ' =' → logprob: -10.174128532409668
    10. '   ' → logprob: -10.174128532409668

Token 547: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.39781326055526733
    2. ' =' → logprob: -1.147813320159912
    3. ':' → logprob: -4.522813320159912
    4. ' ' → logprob: -11.897812843322754
    5. ' :' → logprob: -12.022812843322754
    6. '_ids' → logprob: -12.772812843322754
    7. 'd' → logprob: -13.647812843322754
    8. '_' → logprob: -13.897812843322754
    9. '  ' → logprob: -14.272812843322754
    10. '_at' → logprob: -14.522812843322754

Token 548: ' dict' (ID: 11878)
  Prédit: 'dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dict' → logprob: -0.00037144700763747096
    2. 'set' → logprob: -8.500370979309082
    3. 'list' → logprob: -8.875370979309082
    4. ' dict' → logprob: -10.750370979309082
    5. '{}' → logprob: -12.125370979309082
    6. '   ' → logprob: -14.625370979309082
    7. '{' → logprob: -14.875370979309082
    8. '(dict' → logprob: -15.375370979309082
    9. '=dict' → logprob: -15.750370979309082
    10. '[list' → logprob: -16.6253719329834

Token 549: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.0008777545881457627
    2. '<int' → logprob: -7.625877857208252
    3. ' =' → logprob: -8.500877380371094
    4. '[' → logprob: -9.500877380371094
    5. '=int' → logprob: -10.750877380371094
    6. '(int' → logprob: -10.875877380371094
    7. 'int' → logprob: -10.875877380371094
    8. '=' → logprob: -11.625877380371094
    9. '   ' → logprob: -12.000877380371094
    10. '={' → logprob: -12.000877380371094

Token 550: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020985817536711693
    2. ',int' → logprob: -8.50020980834961
    3. ' ,' → logprob: -12.12520980834961
    4. '   ' → logprob: -14.62520980834961
    5. ',float' → logprob: -15.37520980834961
    6. 'int' → logprob: -16.12520980834961
    7. '[int' → logprob: -16.75020980834961
    8. ':int' → logprob: -17.25020980834961
    9. ',str' → logprob: -17.62520980834961
    10. '    ' → logprob: -18.00020980834961

Token 551: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.2526536285877228
    2. 'tuple' → logprob: -1.5026535987854004
    3. 'Interval' → logprob: -8.127654075622559
    4. 'list' → logprob: -9.127654075622559
    5. '(int' → logprob: -9.627654075622559
    6. ' tuple' → logprob: -9.877654075622559
    7. '(tuple' → logprob: -9.877654075622559
    8. 'interval' → logprob: -10.127654075622559
    9. 'Tuple' → logprob: -10.127654075622559
    10. ' int' → logprob: -10.752654075622559

Token 552: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00024001303245313466
    2. ' ]' → logprob: -8.500240325927734
    3. '[int' → logprob: -10.500240325927734
    4. '[' → logprob: -12.875240325927734
    5. '   ' → logprob: -13.500240325927734
    6. ']=' → logprob: -13.625240325927734
    7. ',' → logprob: -13.875240325927734
    8. '|' → logprob: -14.000240325927734
    9. '[str' → logprob: -14.500240325927734
    10. ']int' → logprob: -14.625240325927734

Token 553: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2526737153530121
    2. '=' → logprob: -1.5026737451553345
    3. '|' → logprob: -7.877673625946045
    4. 'cat' → logprob: -8.877674102783203
    5. ']' → logprob: -9.127674102783203
    6. '[' → logprob: -10.752674102783203
    7. '[int' → logprob: -10.752674102783203
    8. ' ' → logprob: -10.877674102783203
    9. ' |' → logprob: -11.002674102783203
    10. ' cat' → logprob: -11.877674102783203

Token 554: ' {}

' (ID: 21724)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.0027547108475118876
    2. 'dict' → logprob: -6.2527546882629395
    3. ' {}' → logprob: -7.6277546882629395
    4. '{}
' → logprob: -8.127755165100098
    5. ' dict' → logprob: -10.752755165100098
    6. 'int' → logprob: -11.752755165100098
    7. '{' → logprob: -12.127755165100098
    8. '{}

' → logprob: -12.252755165100098
    9. '{})' → logprob: -13.252755165100098
    10. '[int' → logprob: -14.002755165100098

Token 555: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000630947935860604
    2. 'def' → logprob: -7.500630855560303
    3. ' def' → logprob: -10.125631332397461
    4. '
' → logprob: -10.625631332397461
    5. '    
' → logprob: -11.500631332397461
    6. '	def' → logprob: -12.875631332397461
    7. '<|end|>' → logprob: -14.750631332397461
    8. '        
' → logprob: -15.500631332397461
    9. '       ' → logprob: -15.875631332397461
    10. '```' → logprob: -16.00063133239746

Token 556: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0006626377580687404
    2. '   ' → logprob: -7.375662803649902
    3. ' def' → logprob: -10.250662803649902
    4. '	def' → logprob: -14.750662803649902
    5. '
' → logprob: -15.375662803649902
    6. '```' → logprob: -16.250661849975586
    7. ' ' → logprob: -17.125661849975586
    8. 'from' → logprob: -17.250661849975586
    9. '  ' → logprob: -18.125661849975586
    10. '       ' → logprob: -18.750661849975586

Token 557: ' process' (ID: 2273)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'try' → logprob: -0.4668581485748291
    2. ' try' → logprob: -1.466858148574829
    3. 'observe' → logprob: -2.841858148574829
    4. 'def' → logprob: -3.841858148574829
    5. 'record' → logprob: -3.966858148574829
    6. ' record' → logprob: -4.09185791015625
    7. ' observe' → logprob: -4.34185791015625
    8. ' def' → logprob: -5.21685791015625
    9. 'cat' → logprob: -5.71685791015625
    10. 'sleep' → logprob: -6.71685791015625

Token 558: '_sleep' (ID: 125884)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0005361131625249982
    2. '(' → logprob: -7.62553596496582
    3. '_event' → logprob: -11.12553596496582
    4. '_line' → logprob: -11.87553596496582
    5. ' (' → logprob: -12.25053596496582
    6. '_sleep' → logprob: -12.37553596496582
    7. '_(' → logprob: -12.50053596496582
    8. '_ob' → logprob: -12.75053596496582
    9. '_cat' → logprob: -12.75053596496582
    10. 'self' → logprob: -13.75053596496582

Token 559: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -5.438573680294212e-06
    2. '(' → logprob: -12.250005722045898
    3. ' (' → logprob: -15.375005722045898
    4. 'self' → logprob: -15.375005722045898
    5. '(cat' → logprob: -15.750005722045898
    6. '   ' → logprob: -16.5000057220459
    7. '_request' → logprob: -16.8750057220459
    8. '_(' → logprob: -17.7500057220459
    9. '_cat' → logprob: -18.6250057220459
    10. 'cat' → logprob: -19.1250057220459

Token 560: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -5.5027299822540954e-05
    2. '(' → logprob: -10.500055313110352
    3. ' (' → logprob: -11.750055313110352
    4. '(cat' → logprob: -11.875055313110352
    5. ')(' → logprob: -12.375055313110352
    6. 'self' → logprob: -12.875055313110352
    7. '   ' → logprob: -13.375055313110352
    8. '       ' → logprob: -14.250055313110352
    9. '_(' → logprob: -14.250055313110352
    10. ',' → logprob: -14.250055313110352

Token 561: ' cat' (ID: 9059)
  Prédit: 'cat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cat' → logprob: -0.08703671395778656
    2. ' cat' → logprob: -2.587036609649658
    3. 'self' → logprob: -4.962036609649658
    4. ' self' → logprob: -7.462036609649658
    5. '   ' → logprob: -7.587036609649658
    6. '       ' → logprob: -10.837037086486816
    7. ' ' → logprob: -13.212037086486816
    8. '    ' → logprob: -13.337037086486816
    9. '_cat' → logprob: -13.337037086486816
    10. 'cats' → logprob: -13.462037086486816

Token 562: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.0004927450208924711
    2. 'self' → logprob: -8.625493049621582
    3. '(self' → logprob: -8.875493049621582
    4. ',' → logprob: -10.000493049621582
    5. '   ' → logprob: -10.375493049621582
    6. ')' → logprob: -10.625493049621582
    7. '(_' → logprob: -10.875493049621582
    8. '(id' → logprob: -11.250493049621582
    9. '       ' → logprob: -11.500493049621582
    10. '(' → logprob: -12.125493049621582

Token 563: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005714401137083769
    2. 'self' → logprob: -5.630714416503906
    3. ':' → logprob: -7.130714416503906
    4. '   ' → logprob: -7.380714416503906
    5. ' ,' → logprob: -7.505714416503906
    6. '       ' → logprob: -9.130714416503906
    7. ' self' → logprob: -11.255714416503906
    8. '(self' → logprob: -12.130714416503906
    9. ':int' → logprob: -12.630714416503906
    10. ',int' → logprob: -13.005714416503906

Token 564: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.06204767897725105
    2. ' int' → logprob: -2.8120477199554443
    3. ',' → logprob: -10.687047958374023
    4. 'cat' → logprob: -10.687047958374023
    5. ' cat' → logprob: -11.562047958374023
    6. '   ' → logprob: -11.562047958374023
    7. 'self' → logprob: -11.937047958374023
    8. ',int' → logprob: -12.562047958374023
    9. ':int' → logprob: -12.937047958374023
    10. '(int' → logprob: -14.062047958374023

Token 565: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1756367712223437e-05
    2. ' ,' → logprob: -11.375011444091797
    3. '   ' → logprob: -15.500011444091797
    4. ',int' → logprob: -17.500011444091797
    5. 'self' → logprob: -18.125011444091797
    6. '       ' → logprob: -18.625011444091797
    7. 'cat' → logprob: -19.125011444091797
    8. ',
' → logprob: -19.125011444091797
    9. '_,' → logprob: -20.000011444091797
    10. '‌,' → logprob: -20.250011444091797

Token 566: ' cat' (ID: 9059)
  Prédit: 'cat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cat' → logprob: -0.08959624171257019
    2. ' cat' → logprob: -2.4645962715148926
    3. 'width' → logprob: -7.589596271514893
    4. ' width' → logprob: -9.339595794677734
    5. '   ' → logprob: -10.339595794677734
    6. ' ' → logprob: -11.089595794677734
    7. '  ' → logprob: -13.089595794677734
    8. 'sleep' → logprob: -13.214595794677734
    9. '```' → logprob: -13.339595794677734
    10. 'cats' → logprob: -13.839595794677734

Token 567: '_width' (ID: 17595)
  Prédit: '_width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_width' → logprob: -1.4021237802808173e-05
    2. 'width' → logprob: -12.000014305114746
    3. '_id' → logprob: -12.750014305114746
    4. '_w' → logprob: -13.250014305114746
    5. '_size' → logprob: -13.250014305114746
    6. '   ' → logprob: -14.000014305114746
    7. '_WIDTH' → logprob: -15.875014305114746
    8. '_length' → logprob: -16.75001335144043
    9. ' width' → logprob: -16.75001335144043
    10. 'Width' → logprob: -16.87501335144043

Token 568: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005065653240308166
    2. '):' → logprob: -8.125506401062012
    3. ')' → logprob: -8.750506401062012
    4. ',' → logprob: -10.000506401062012
    5. ' :' → logprob: -12.500506401062012
    6. '):
' → logprob: -13.500506401062012
    7. ':int' → logprob: -14.125506401062012
    8. '   ' → logprob: -14.875506401062012
    9. '_:' → logprob: -15.250506401062012
    10. ' ):' → logprob: -15.625506401062012

Token 569: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.06198235973715782
    2. ' int' → logprob: -2.8119823932647705
    3. ')' → logprob: -11.561982154846191
    4. ':int' → logprob: -12.811982154846191
    5. ' ' → logprob: -14.061982154846191
    6. '   ' → logprob: -14.561982154846191
    7. '(int' → logprob: -15.186982154846191
    8. '	int' → logprob: -15.811982154846191
    9. '[int' → logprob: -15.811982154846191
    10. '<int' → logprob: -16.311983108520508

Token 570: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008869222365319729
    2. '):
' → logprob: -7.125886917114258
    3. '):' → logprob: -9.625886917114258
    4. '   ' → logprob: -11.875886917114258
    5. ' )' → logprob: -12.000886917114258
    6. '):
' → logprob: -13.000886917114258
    7. ',' → logprob: -15.250886917114258
    8. ')->' → logprob: -15.250886917114258
    9. '):

' → logprob: -15.750886917114258
    10. ':' → logprob: -16.000886917114258

Token 571: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.8757238388061523
    2. ')' → logprob: -1.2507238388061523
    3. '   ' → logprob: -1.8757238388061523
    4. '->' → logprob: -2.1257238388061523
    5. ':' → logprob: -4.250723838806152
    6. '       ' → logprob: -5.250723838806152
    7. ':
' → logprob: -6.000723838806152
    8. '()' → logprob: -7.375723838806152
    9. '):
' → logprob: -7.500723838806152
    10. ')->' → logprob: -7.625723838806152

Token 572: ' str' (ID: 989)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.010892652906477451
    2. 'None' → logprob: -4.635892868041992
    3. ' int' → logprob: -6.885892868041992
    4. ' None' → logprob: -9.385892868041992
    5. 'bool' → logprob: -10.635892868041992
    6. '   ' → logprob: -12.385892868041992
    7. ' ' → logprob: -13.760892868041992
    8. '  ' → logprob: -15.510892868041992
    9. '[int' → logprob: -16.010892868041992
    10. '       ' → logprob: -16.385892868041992

Token 573: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23158128559589386
    2. ':
' → logprob: -1.6065813302993774
    3. '       ' → logprob: -5.731581211090088
    4. '():
' → logprob: -6.356581211090088
    5. '():' → logprob: -6.981581211090088
    6. '   ' → logprob: -8.856581687927246
    7. '):
' → logprob: -9.481581687927246
    8. '):' → logprob: -11.606581687927246
    9. ':
' → logprob: -12.981581687927246
    10. ':

' → logprob: -13.106581687927246

Token 574: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008997661992907524
    2. 'position' → logprob: -5.508997440338135
    3. ' position' → logprob: -5.758997440338135
    4. 'pos' → logprob: -6.633997440338135
    5. '```' → logprob: -8.633997917175293
    6. '   ' → logprob: -8.758997917175293
    7. ' pos' → logprob: -9.508997917175293
    8. 'space' → logprob: -11.633997917175293
    9. '        
' → logprob: -12.508997917175293
    10. '	position' → logprob: -12.883997917175293

Token 575: ' position' (ID: 4010)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' (adapté à ' position') → logprob: -0.06709454208612442
    2. ' position' → logprob: -3.317094564437866
    3. 'pos' → logprob: -3.567094564437866
    4. '       ' → logprob: -8.317094802856445
    5. ' pos' → logprob: -8.817094802856445
    6. '```' → logprob: -12.942094802856445
    7. 'space' → logprob: -13.442094802856445
    8. 'result' → logprob: -15.442094802856445
    9. 'sleep' → logprob: -15.692094802856445
    10. '``' → logprob: -15.817094802856445

Token 576: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029750604182481766
    2. '=' → logprob: -3.5297505855560303
    3. ' ' → logprob: -16.77975082397461
    4. '_' → logprob: -19.02975082397461
    5. ' =
' → logprob: -19.65475082397461
    6. '=self' → logprob: -19.77975082397461
    7. ' ' → logprob: -19.90475082397461
    8. ' =)' → logprob: -20.65475082397461
    9. '＝' → logprob: -20.65475082397461
    10. ' =
' → logprob: -20.77975082397461

Token 577: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.0788901224732399
    2. 'self' → logprob: -2.578890085220337
    3. '	self' → logprob: -15.578889846801758
    4. '(self' → logprob: -16.703889846801758
    5. '       ' → logprob: -16.828889846801758
    6. '=self' → logprob: -16.828889846801758
    7. '[self' → logprob: -18.703889846801758
    8. '        ' → logprob: -19.953889846801758
    9. ' ' → logprob: -19.953889846801758
    10. ' ' → logprob: -20.453889846801758

Token 578: '.f' (ID: 1196)
  Prédit: '.f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.f' → logprob: -0.0001725511101540178
    2. '.' → logprob: -8.75017261505127
    3. 'f' → logprob: -11.37517261505127
    4. ' .' → logprob: -13.50017261505127
    5. '.try' → logprob: -14.87517261505127
    6. '	f' → logprob: -15.50017261505127
    7. '.s' → logprob: -16.125171661376953
    8. '
' → logprob: -16.250171661376953
    9. '.cat' → logprob: -16.500171661376953
    10. '..' → logprob: -16.500171661376953

Token 579: 'ence' (ID: 1082)
  Prédit: 'ence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ence' → logprob: -0.0013427316443994641
    2. 'ense' → logprob: -7.1263427734375
    3. 'self' → logprob: -9.0013427734375
    4. 'loor' → logprob: -9.1263427734375
    5. 'alse' → logprob: -9.8763427734375
    6. 'ance' → logprob: -10.2513427734375
    7. 'f' → logprob: -10.5013427734375
    8. 'enced' → logprob: -10.6263427734375
    9. 'e' → logprob: -10.8763427734375
    10. 'ences' → logprob: -11.0013427734375

Token 580: '.try' (ID: 85688)
  Prédit: '.try'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.try' → logprob: -3.976922744186595e-05
    2. 'try' → logprob: -10.250040054321289
    3. '.' → logprob: -12.500040054321289
    4. ' .' → logprob: -14.625040054321289
    5. ' try' → logprob: -17.37504005432129
    6. '   ' → logprob: -17.62504005432129
    7. '_try' → logprob: -18.37504005432129
    8. '	try' → logprob: -18.87504005432129
    9. '.Try' → logprob: -19.50004005432129
    10. '```' → logprob: -19.75004005432129

Token 581: '_sleep' (ID: 125884)
  Prédit: '_sleep'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sleep' → logprob: -9.088346359931165e-07
    2. '_' → logprob: -14.750000953674316
    3. 'sleep' → logprob: -14.875000953674316
    4. '_SLEEP' → logprob: -17.625
    5. '.sleep' → logprob: -18.75
    6. ' _' → logprob: -18.75
    7. '_s' → logprob: -19.75
    8. '_to' → logprob: -20.0
    9. '_space' → logprob: -20.0
    10. 'Sleep' → logprob: -20.125

Token 582: '(cat' (ID: 107890)
  Prédit: '(cat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cat' → logprob: -2.816093228830141e-06
    2. '(' → logprob: -13.12500286102295
    3. ' cat' → logprob: -15.00000286102295
    4. 'cat' → logprob: -15.87500286102295
    5. '(c' → logprob: -15.87500286102295
    6. ' (' → logprob: -16.500001907348633
    7. '(car' → logprob: -16.625001907348633
    8. '(
' → logprob: -19.750001907348633
    9. '猫' → logprob: -20.250001907348633
    10. '_cat' → logprob: -20.500001907348633

Token 583: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.038057442754507065
    2. '_width' → logprob: -3.288057327270508
    3. '   ' → logprob: -12.288057327270508
    4. '_' → logprob: -12.538057327270508
    5. 'width' → logprob: -13.288057327270508
    6. 'idth' → logprob: -13.913057327270508
    7. '_ids' → logprob: -14.163057327270508
    8. '```' → logprob: -14.163057327270508
    9. ')' → logprob: -14.663057327270508
    10. ',' → logprob: -14.913057327270508

Token 584: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010819212911883369
    2. ' ,' → logprob: -9.250107765197754
    3. ' cat' → logprob: -11.750107765197754
    4. '(cat' → logprob: -13.125107765197754
    5. ',c' → logprob: -14.125107765197754
    6. '   ' → logprob: -14.375107765197754
    7. ',
' → logprob: -15.125107765197754
    8. '=' → logprob: -15.375107765197754
    9. 'cat' → logprob: -15.375107765197754
    10. '‌,' → logprob: -17.37510871887207

Token 585: ' cat' (ID: 9059)
  Prédit: ' cat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cat' → logprob: -0.02324792370200157
    2. 'cat' → logprob: -3.7732479572296143
    3. '(cat' → logprob: -13.148247718811035
    4. ' ' → logprob: -16.27324867248535
    5. ')' → logprob: -16.39824867248535
    6. ' 
' → logprob: -16.52324867248535
    7. '
' → logprob: -16.52324867248535
    8. ' ' → logprob: -17.02324867248535
    9. '_cat' → logprob: -17.64824867248535
    10. '.cat' → logprob: -18.77324867248535

Token 586: '_width' (ID: 17595)
  Prédit: '_width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_width' → logprob: -1.7432603272027336e-06
    2. 'width' → logprob: -14.250001907348633
    3. '   ' → logprob: -15.375001907348633
    4. '_' → logprob: -15.875001907348633
    5. 'idth' → logprob: -15.875001907348633
    6. '_id' → logprob: -16.250001907348633
    7. '_WIDTH' → logprob: -16.250001907348633
    8. '_w' → logprob: -16.375001907348633
    9. ' _' → logprob: -16.625001907348633
    10. 'Width' → logprob: -17.000001907348633

Token 587: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.1270112693309784
    2. ')' → logprob: -2.127011299133301
    3. '       ' → logprob: -9.5020112991333
    4. ')
' → logprob: -12.0020112991333
    5. ' )
' → logprob: -13.3770112991333
    6. '   ' → logprob: -15.1270112991333
    7. ')

' → logprob: -15.3770112991333
    8. ' )' → logprob: -15.6270112991333
    9. ')`
' → logprob: -16.752010345458984
    10. ' ' → logprob: -18.752010345458984

Token 588: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.043843384832143784
    2. ' if' → logprob: -3.1688432693481445
    3. 'if' → logprob: -7.1688432693481445
    4. '
' → logprob: -10.918843269348145
    5. '```' → logprob: -11.293843269348145
    6. '	if' → logprob: -11.543843269348145
    7. '        
' → logprob: -11.668843269348145
    8. '   ' → logprob: -11.793843269348145
    9. ' 
' → logprob: -12.918843269348145
    10. ' ' → logprob: -13.043843269348145

Token 589: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.038113780319690704
    2. ' if' → logprob: -3.538113832473755
    3. '       ' → logprob: -4.788113594055176
    4. '	if' → logprob: -15.663113594055176
    5. '   ' → logprob: -16.538114547729492
    6. '```' → logprob: -17.663114547729492
    7. 'If' → logprob: -18.288114547729492
    8. '        ' → logprob: -19.288114547729492
    9. ' ' → logprob: -19.663114547729492
    10. '
' → logprob: -19.663114547729492

Token 590: ' position' (ID: 4010)
  Prédit: ' position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' position' → logprob: -0.0031777136027812958
    2. 'position' → logprob: -5.753177642822266
    3. '(position' → logprob: -17.003177642822266
    4. '[position' → logprob: -17.878177642822266
    5. '	position' → logprob: -18.128177642822266
    6. ' not' → logprob: -18.628177642822266
    7. ' ' → logprob: -19.503177642822266
    8. '    ' → logprob: -19.753177642822266
    9. 'Position' → logprob: -20.378177642822266
    10. ' ' → logprob: -20.503177642822266

Token 591: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.0010338802821934223
    2. 'is' → logprob: -6.876033782958984
    3. ' ' → logprob: -13.876033782958984
    4. '==' → logprob: -17.001033782958984
    5. '	is' → logprob: -18.251033782958984
    6. ')' → logprob: -18.376033782958984
    7. '=' → logprob: -18.501033782958984
    8. ' )' → logprob: -18.751033782958984
    9. ' ==' → logprob: -19.626033782958984
    10. 'in' → logprob: -19.751033782958984

Token 592: ' None' (ID: 4662)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.007447252050042152
    2. 'not' → logprob: -5.507447242736816
    3. ' None' → logprob: -5.757447242736816
    4. 'None' → logprob: -8.507447242736816
    5. '        ' → logprob: -14.507447242736816
    6. '=None' → logprob: -15.007447242736816
    7. '	not' → logprob: -15.132447242736816
    8. ' ' → logprob: -15.382447242736816
    9. '    ' → logprob: -15.882447242736816
    10. 'Not' → logprob: -16.257448196411133

Token 593: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.03235148638486862
    2. ':' → logprob: -3.532351493835449
    3. '           ' → logprob: -6.282351493835449
    4. ':return' → logprob: -7.282351493835449
    5. '       ' → logprob: -11.15735149383545
    6. ' return' → logprob: -11.78235149383545
    7. ' or' → logprob: -12.15735149383545
    8. ':
' → logprob: -12.65735149383545
    9. 'return' → logprob: -13.03235149383545
    10. ':

' → logprob: -13.03235149383545

Token 594: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007811977528035641
    2. 'return' → logprob: -5.382812023162842
    3. ' return' → logprob: -5.757812023162842
    4. '       ' → logprob: -11.007811546325684
    5. '   ' → logprob: -12.382811546325684
    6. '
' → logprob: -12.382811546325684
    7. '          ' → logprob: -13.382811546325684
    8. '```' → logprob: -14.882811546325684
    9. '               ' → logprob: -15.132811546325684
    10. '            
' → logprob: -15.382811546325684

Token 595: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.02167397178709507
    2. ' return' → logprob: -4.271674156188965
    3. '           ' → logprob: -4.896674156188965
    4. '       ' → logprob: -11.896674156188965
    5. '   ' → logprob: -13.396674156188965
    6. '	return' → logprob: -13.896674156188965
    7. ' ' → logprob: -14.896674156188965
    8. '{return' → logprob: -14.896674156188965
    9. '               ' → logprob: -15.271674156188965
    10. '
' → logprob: -15.771674156188965

Token 596: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.03808281198143959
    2. '"No' → logprob: -3.7880828380584717
    3. ''' → logprob: -4.413082599639893
    4. '"-' → logprob: -6.413082599639893
    5. ' "' → logprob: -8.53808307647705
    6. '"N' → logprob: -8.66308307647705
    7. 'f' → logprob: -9.41308307647705
    8. '"C' → logprob: -9.53808307647705
    9. ''-' → logprob: -9.78808307647705
    10. '"K' → logprob: -9.91308307647705

Token 597: 'im' (ID: 321)
  Prédit: 'No'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -1.0810385942459106
    2. '-' → logprob: -1.8310385942459106
    3. 'FAIL' → logprob: -2.456038475036621
    4. 'im' → logprob: -2.706038475036621
    5. 'fail' → logprob: -2.831038475036621
    6. 'None' → logprob: -2.831038475036621
    7. 'Cannot' → logprob: -3.206038475036621
    8. 'no' → logprob: -3.331038475036621
    9. 'NO' → logprob: -3.331038475036621
    10. 'none' → logprob: -4.206038475036621

Token 598: 'possible' (ID: 50714)
  Prédit: 'possible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.0006068871589377522
    2. 'pos' → logprob: -7.875607013702393
    3. 'poss' → logprob: -9.000606536865234
    4. 'p' → logprob: -9.875606536865234
    5. '_possible' → logprob: -10.625606536865234
    6. 'm' → logprob: -11.125606536865234
    7. 'pass' → logprob: -12.500606536865234
    8. 'Possible' → logprob: -13.000606536865234
    9. ' possible' → logprob: -13.125606536865234
    10. 'possibly' → logprob: -13.250606536865234

Token 599: '"
' (ID: 1092)
  Prédit: '"
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"
' → logprob: -0.12393818795681
    2. '"' → logprob: -2.6239380836486816
    3. '\n' → logprob: -3.1239380836486816
    4. '"
' → logprob: -10.24893856048584
    5. '"

' → logprob: -11.12393856048584
    6. ' to' → logprob: -11.49893856048584
    7. '"\' → logprob: -12.87393856048584
    8. '"`
' → logprob: -14.62393856048584
    9. ' "
' → logprob: -14.87393856048584
    10. '```' → logprob: -15.49893856048584

Token 600: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006655688397586346
    2. '
' → logprob: -5.256655693054199
    3. '        
' → logprob: -7.506655693054199
    4. ' self' → logprob: -8.3816556930542
    5. '  
' → logprob: -8.6316556930542
    6. '```' → logprob: -9.1316556930542
    7. 'self' → logprob: -9.3816556930542
    8. '    
' → logprob: -9.6316556930542
    9. '   ' → logprob: -9.6316556930542
    10. '​' → logprob: -11.1316556930542

Token 601: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03936139866709709
    2. ' self' → logprob: -4.039361476898193
    3. '
' → logprob: -4.164361476898193
    4. 'self' (adapté à ' self') → logprob: -5.414361476898193
    5. '        
' → logprob: -7.039361476898193
    6. '   ' → logprob: -10.414361000061035
    7. '    
' → logprob: -10.914361000061035
    8. ' 
' → logprob: -11.039361000061035
    9. '	self' → logprob: -11.164361000061035
    10. '```' → logprob: -11.414361000061035

Token 602: '.c' (ID: 1081)
  Prédit: '.c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.c' → logprob: -0.04867423325777054
    2. '.' → logprob: -3.0486743450164795
    3. ' .' → logprob: -9.798674583435059
    4. '```' → logprob: -11.423674583435059
    5. '`.' → logprob: -12.923674583435059
    6. '.s' → logprob: -13.048674583435059
    7. '       ' → logprob: -13.298674583435059
    8. '​.' → logprob: -13.798674583435059
    9. '.space' → logprob: -13.923674583435059
    10. '..' → logprob: -14.048674583435059

Token 603: 'ats' (ID: 1838)
  Prédit: 'ats'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ats' → logprob: -0.00021855637896806002
    2. '.' → logprob: -8.750218391418457
    3. '   ' → logprob: -11.875218391418457
    4. '.position' → logprob: -12.000218391418457
    5. 'cats' → logprob: -12.250218391418457
    6. '```' → logprob: -12.500218391418457
    7. '       ' → logprob: -12.750218391418457
    8. '#' → logprob: -12.750218391418457
    9. '_' → logprob: -12.750218391418457
    10. '
' → logprob: -12.750218391418457

Token 604: '_sleep' (ID: 125884)
  Prédit: '_sleep'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sleep' → logprob: -1.6047699318733066e-05
    2. 'sleep' → logprob: -11.375016212463379
    3. '_s' → logprob: -13.375016212463379
    4. '.sleep' → logprob: -14.000016212463379
    5. '_SLEEP' → logprob: -14.750016212463379
    6. '_c' → logprob: -15.000016212463379
    7. '._' → logprob: -15.000016212463379
    8. 'c' → logprob: -16.000015258789062
    9. 'leep' → logprob: -16.000015258789062
    10. 's' → logprob: -16.000015258789062

Token 605: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.012816044501960278
    2. '       ' → logprob: -5.387815952301025
    3. 'ping' → logprob: -5.762815952301025
    4. 'ng' → logprob: -6.137815952301025
    5. 'pping' → logprob: -7.637815952301025
    6. 'g' → logprob: -7.887815952301025
    7. '_ing' → logprob: -7.887815952301025
    8. '           ' → logprob: -8.387816429138184
    9. 'eping' → logprob: -8.387816429138184
    10. '_sleep' → logprob: -8.637816429138184

Token 606: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.372294698550832e-06
    2. '[col' → logprob: -12.375009536743164
    3. '[c' → logprob: -13.125009536743164
    4. '[cell' → logprob: -13.750009536743164
    5. '   ' → logprob: -15.125009536743164
    6. ' cat' → logprob: -15.375009536743164
    7. '[cur' → logprob: -16.000009536743164
    8. '
' → logprob: -16.000009536743164
    9. '```' → logprob: -16.000009536743164
    10. ' [' → logprob: -16.000009536743164

Token 607: 'cat' (ID: 8837)
  Prédit: 'cat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cat' → logprob: -2.816093228830141e-06
    2. ' cat' → logprob: -12.87500286102295
    3. '(cat' → logprob: -16.750001907348633
    4. 'cats' → logprob: -17.125001907348633
    5. '[' → logprob: -17.750001907348633
    6. '   ' → logprob: -17.750001907348633
    7. '```' → logprob: -18.125001907348633
    8. 'position' → logprob: -18.500001907348633
    9. '
' → logprob: -18.500001907348633
    10. 'c' → logprob: -19.625001907348633

Token 608: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -2.6537622034084052e-05
    2. 'ing' → logprob: -11.50002670288086
    3. '   ' → logprob: -11.62502670288086
    4. '       ' → logprob: -12.37502670288086
    5. '```' → logprob: -13.75002670288086
    6. '           ' → logprob: -14.37502670288086
    7. ']' → logprob: -15.62502670288086
    8. '[' → logprob: -15.75002670288086
    9. 'id' → logprob: -15.75002670288086
    10. 'd' → logprob: -16.00002670288086

Token 609: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0006303519476205111
    2. ' ]' → logprob: -7.3756303787231445
    3. ']=' → logprob: -12.500630378723145
    4. ')' → logprob: -17.500629425048828
    5. ' =' → logprob: -18.250629425048828
    6. '=' → logprob: -19.125629425048828
    7. '`]' → logprob: -19.750629425048828
    8. '']' → logprob: -19.875629425048828
    9. ' ' → logprob: -20.125629425048828
    10. '   ' → logprob: -20.750629425048828

Token 610: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740770161151886
    2. '=' → logprob: -0.9740769863128662
    3. ' ' → logprob: -17.349077224731445
    4. ']=' → logprob: -18.599077224731445
    5. ')' → logprob: -18.724077224731445
    6. ')=' → logprob: -18.849077224731445
    7. '＝' → logprob: -18.974077224731445
    8. ']' → logprob: -19.099077224731445
    9. ' =)' → logprob: -20.599077224731445
    10. '=}' → logprob: -21.599077224731445

Token 611: ' position' (ID: 4010)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.0015023599844425917
    2. ' position' → logprob: -6.501502513885498
    3. '	position' → logprob: -19.626502990722656
    4. 'pos' → logprob: -19.751502990722656
    5. '[position' → logprob: -20.376502990722656
    6. '(position' → logprob: -20.751502990722656
    7. '   ' → logprob: -21.876502990722656
    8. 'positions' → logprob: -22.501502990722656
    9. 'posit' → logprob: -22.626502990722656
    10. '
' → logprob: -22.751502990722656

Token 612: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005227696383371949
    2. 'return' → logprob: -8.12552261352539
    3. ' return' → logprob: -8.87552261352539
    4. '
' → logprob: -10.50052261352539
    5. '<|end|>' → logprob: -10.75052261352539
    6. '        
' → logprob: -11.25052261352539
    7. ',' → logprob: -11.62552261352539
    8. '   ' → logprob: -12.00052261352539
    9. '           ' → logprob: -12.50052261352539
    10. '  
' → logprob: -13.87552261352539

Token 613: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.65101717156358e-05
    2. 'return' → logprob: -10.000096321105957
    3. ' return' → logprob: -10.375096321105957
    4. '   ' → logprob: -11.250096321105957
    5. '        
' → logprob: -12.875096321105957
    6. '           ' → logprob: -13.250096321105957
    7. '```' → logprob: -13.750096321105957
    8. '	' → logprob: -15.000096321105957
    9. '
' → logprob: -15.375096321105957
    10. '<|end|>' → logprob: -15.750096321105957

Token 614: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.051681071519851685
    2. '       ' → logprob: -3.3016810417175293
    3. ' return' → logprob: -4.301681041717529
    4. '	return' → logprob: -13.926681518554688
    5. '   ' → logprob: -15.676681518554688
    6. '           ' → logprob: -16.051681518554688
    7. '
' → logprob: -16.426681518554688
    8. '```' → logprob: -17.801681518554688
    9. 'eturn' → logprob: -17.926681518554688
    10. ' ' → logprob: -18.051681518554688

Token 615: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.4715679883956909
    2. ' f' → logprob: -1.721567988395691
    3. ' str' → logprob: -2.2215681076049805
    4. 'f' → logprob: -2.4715681076049805
    5. '"' → logprob: -5.4715681076049805
    6. ' "' → logprob: -9.59656810760498
    7. ' ' → logprob: -11.72156810760498
    8. ''' → logprob: -11.97156810760498
    9. '(str' → logprob: -12.22156810760498
    10. '   ' → logprob: -13.09656810760498

Token 616: '(position' (ID: 22246)
  Prédit: '(position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(position' → logprob: -9.960946772480384e-05
    2. 'position' → logprob: -9.250099182128906
    3. '(' → logprob: -12.625099182128906
    4. '[position' → logprob: -16.375099182128906
    5. ' (' → logprob: -19.000099182128906
    6. '(pos' → logprob: -19.750099182128906
    7. '(
' → logprob: -20.250099182128906
    8. ' position' → logprob: -20.250099182128906
    9. '	position' → logprob: -20.375099182128906
    10. '(Position' → logprob: -21.125099182128906

Token 617: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006843181326985359
    2. '<|end|>' → logprob: -7.5006842613220215
    3. ')
' → logprob: -9.37568473815918
    4. '
' → logprob: -10.87568473815918
    5. '```' → logprob: -12.25068473815918
    6. '       ' → logprob: -12.25068473815918
    7. '()' → logprob: -12.87568473815918
    8. ' )' → logprob: -12.87568473815918
    9. '())' → logprob: -13.12568473815918
    10. ')return' → logprob: -13.37568473815918

Token 618: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3131170868873596
    2. '```' → logprob: -1.4381170272827148
    3. '<|end|>' → logprob: -3.688117027282715
    4. '
' → logprob: -5.688117027282715
    5. 'def' → logprob: -7.063117027282715
    6. '    
' → logprob: -7.313117027282715
    7. '``' → logprob: -8.063117027282715
    8. ' 
' → logprob: -8.438117027282715
    9. ' ' → logprob: -8.563117027282715
    10. '  ' → logprob: -8.688117027282715

Token 619: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.05041950196027756
    2. '   ' → logprob: -3.050419569015503
    3. ' def' → logprob: -6.550419330596924
    4. '
' → logprob: -8.050419807434082
    5. '```' → logprob: -9.800419807434082
    6. '	def' → logprob: -10.800419807434082
    7. '    
' → logprob: -13.050419807434082
    8. '<|end|>' → logprob: -13.675419807434082
    9. 'python' → logprob: -14.175419807434082
    10. '  ' → logprob: -15.050419807434082

Token 620: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' → logprob: -0.00104305159766227
    2. ' process' → logprob: -6.87604284286499
    3. 'def' → logprob: -11.626043319702148
    4. '.process' → logprob: -14.876043319702148
    5. 'remove' → logprob: -15.001043319702148
    6. '	process' → logprob: -15.501043319702148
    7. 'wake' → logprob: -16.50104331970215
    8. '   ' → logprob: -16.62604331970215
    9. '_process' → logprob: -16.87604331970215
    10. 'proces' → logprob: -16.87604331970215

Token 621: '_w' (ID: 3567)
  Prédit: '_w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -0.0011518864193931222
    2. 'wake' → logprob: -7.626152038574219
    3. '_release' → logprob: -7.751152038574219
    4. '_aw' → logprob: -8.751152038574219
    5. 'w' → logprob: -10.626152038574219
    6. '```' → logprob: -12.001152038574219
    7. '_' → logprob: -12.251152038574219
    8. 'Wake' → logprob: -12.501152038574219
    9. '_WAKE' → logprob: -12.501152038574219
    10. ' wake' → logprob: -12.751152038574219

Token 622: 'akeup' (ID: 150728)
  Prédit: 'ake'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ake' → logprob: -0.023307321593165398
    2. 'akeup' → logprob: -3.7733073234558105
    3. 'ak' → logprob: -10.523306846618652
    4. 'ait' → logprob: -11.148306846618652
    5. '_' → logprob: -12.148306846618652
    6. 'a' → logprob: -12.648306846618652
    7. 'e' → logprob: -12.898306846618652
    8. '
' → logprob: -13.273306846618652
    9. 'oke' → logprob: -13.398306846618652
    10. ' ake' → logprob: -14.023306846618652

Token 623: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00020246754866093397
    2. '(' → logprob: -8.875202178955078
    3. ' (' → logprob: -9.875202178955078
    4. 'self' → logprob: -11.750202178955078
    5. '   ' → logprob: -13.500202178955078
    6. '(cat' → logprob: -14.500202178955078
    7. ' self' → logprob: -15.125202178955078
    8. '(s' → logprob: -15.625202178955078
    9. 'def' → logprob: -15.750202178955078
    10. ' ' → logprob: -16.000202178955078

Token 624: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.019357789307832718
    2. ',' → logprob: -4.019357681274414
    3. '(' → logprob: -7.269357681274414
    4. ' (' → logprob: -8.394357681274414
    5. 'self' → logprob: -9.019357681274414
    6. '   ' → logprob: -9.769357681274414
    7. ',self' → logprob: -10.019357681274414
    8. ')' → logprob: -11.144357681274414
    9. ' ,' → logprob: -11.269357681274414
    10. ')(' → logprob: -11.519357681274414

Token 625: ' cat' (ID: 9059)
  Prédit: 'cat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cat' → logprob: -0.07915977388620377
    2. ' cat' → logprob: -2.579159736633301
    3. 'self' → logprob: -9.0791597366333
    4. '       ' → logprob: -9.2041597366333
    5. '   ' → logprob: -10.3291597366333
    6. ' self' → logprob: -11.2041597366333
    7. '    ' → logprob: -13.0791597366333
    8. '        ' → logprob: -13.5791597366333
    9. ' ' → logprob: -13.7041597366333
    10. '(cat' → logprob: -14.2041597366333

Token 626: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.0004842962371185422
    2. '_up' → logprob: -7.875484466552734
    3. 'id' → logprob: -9.750484466552734
    4. 'up' → logprob: -10.125484466552734
    5. 'd' → logprob: -13.375484466552734
    6. '   ' → logprob: -14.125484466552734
    7. '_ids' → logprob: -14.250484466552734
    8. 's' → logprob: -14.375484466552734
    9. 'p' → logprob: -14.375484466552734
    10. 'Up' → logprob: -14.750484466552734

Token 627: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07899488508701324
    2. 'self' → logprob: -3.2039949893951416
    3. '   ' → logprob: -3.8289949893951416
    4. ':' → logprob: -4.7039947509765625
    5. '       ' → logprob: -5.8289947509765625
    6. '):' → logprob: -7.3289947509765625
    7. '(self' → logprob: -7.7039947509765625
    8. '):
' → logprob: -8.578994750976562
    9. ' self' → logprob: -8.828994750976562
    10. ' ' → logprob: -9.828994750976562

Token 628: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3224632143974304
    2. ')' → logprob: -1.8224632740020752
    3. ' int' → logprob: -2.447463274002075
    4. '   ' → logprob: -4.697463035583496
    5. 'self' → logprob: -4.697463035583496
    6. '):
' → logprob: -6.072463035583496
    7. ' self' → logprob: -6.447463035583496
    8. ' cat' → logprob: -6.697463035583496
    9. '       ' → logprob: -7.447463035583496
    10. 'def' → logprob: -7.572463035583496

Token 629: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00024048985505942255
    2. '):
' → logprob: -9.125240325927734
    3. 'self' → logprob: -9.750240325927734
    4. '   ' → logprob: -9.750240325927734
    5. '       ' → logprob: -11.875240325927734
    6. '):' → logprob: -12.750240325927734
    7. '`)' → logprob: -13.500240325927734
    8. ':' → logprob: -13.875240325927734
    9. ' )' → logprob: -14.000240325927734
    10. ' ' → logprob: -14.375240325927734

Token 630: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24483472108840942
    2. '   ' → logprob: -1.7448346614837646
    3. 'self' → logprob: -3.4948346614837646
    4. ' self' → logprob: -4.619834899902344
    5. 'if' → logprob: -6.619834899902344
    6. ' if' → logprob: -6.994834899902344
    7. 'del' → logprob: -11.119834899902344
    8. ' del' → logprob: -11.369834899902344
    9. '	self' → logprob: -12.744834899902344
    10. ' ' → logprob: -13.244834899902344

Token 631: ' if' (ID: 538)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.08301945775747299
    2. 'if' (adapté à ' if') → logprob: -2.583019495010376
    3. '       ' → logprob: -5.708019256591797
    4. 'del' → logprob: -7.333019256591797
    5. ' self' → logprob: -9.333019256591797
    6. '   ' → logprob: -10.333019256591797
    7. ' if' → logprob: -10.708019256591797
    8. '	self' → logprob: -13.958019256591797
    9. 'position' → logprob: -14.083019256591797
    10. ' del' → logprob: -14.583019256591797

Token 632: ' cat' (ID: 9059)
  Prédit: ' cat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cat' → logprob: -0.0380416102707386
    2. 'cat' → logprob: -3.288041591644287
    3. '   ' → logprob: -16.538042068481445
    4. '(cat' → logprob: -16.663042068481445
    5. '       ' → logprob: -17.163042068481445
    6. '	c' → logprob: -18.663042068481445
    7. ' cats' → logprob: -18.663042068481445
    8. 'self' → logprob: -18.913042068481445
    9. 'cats' → logprob: -19.413042068481445
    10. '    ' → logprob: -19.538042068481445

Token 633: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -3.128163257315464e-07
    2. 'id' → logprob: -16.0
    3. '_cat' → logprob: -16.875
    4. '_' → logprob: -18.625
    5. '```' → logprob: -19.125
    6. 'cat' → logprob: -19.375
    7. '   ' → logprob: -20.0
    8. 'd' → logprob: -20.125
    9. 'in' → logprob: -20.875
    10. '\' → logprob: -21.125

Token 634: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004726076032966375
    2. 'in' → logprob: -5.379725933074951
    3. ' not' → logprob: -9.25472640991211
    4. ')' → logprob: -12.12972640991211
    5. 'not' → logprob: -12.87972640991211
    6. ' ' → logprob: -13.62972640991211
    7. ' i' → logprob: -15.25472640991211
    8. ' ' → logprob: -15.75472640991211
    9. '	in' → logprob: -15.75472640991211
    10. ' )' → logprob: -16.00472640991211

Token 635: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0007102862582542002
    2. ' self' → logprob: -7.250710487365723
    3. '(self' → logprob: -16.125709533691406
    4. '
' → logprob: -16.500709533691406
    5. '       ' → logprob: -16.750709533691406
    6. '[self' → logprob: -17.750709533691406
    7. '=self' → logprob: -18.000709533691406
    8. '	self' → logprob: -18.375709533691406
    9. 'this' → logprob: -19.125709533691406
    10. '```' → logprob: -20.000709533691406

Token 636: '.c' (ID: 1081)
  Prédit: '.c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.c' → logprob: -7.896309739408025e-07
    2. '.' → logprob: -15.000000953674316
    3. ' .' → logprob: -15.375000953674316
    4. '.f' → logprob: -15.875000953674316
    5. 'cats' → logprob: -16.75
    6. ' cats' → logprob: -17.875
    7. '
' → logprob: -18.625
    8. '.cat' → logprob: -19.0
    9. 'Cats' → logprob: -19.5
    10. 'c' → logprob: -19.75

Token 637: 'ats' (ID: 1838)
  Prédit: 'ats'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ats' → logprob: -0.0007556661730632186
    2. 'cats' → logprob: -7.375755786895752
    3. '.c' → logprob: -10.000755310058594
    4. 's' → logprob: -11.000755310058594
    5. '   ' → logprob: -11.125755310058594
    6. '.' → logprob: -11.375755310058594
    7. '
' → logprob: -11.500755310058594
    8. '       ' → logprob: -12.125755310058594
    9. ' cats' → logprob: -12.500755310058594
    10. '{' → logprob: -13.000755310058594

Token 638: '_sleep' (ID: 125884)
  Prédit: '_sleep'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sleep' → logprob: -0.0010612714104354382
    2. 'sleep' → logprob: -6.87606143951416
    3. '_s' → logprob: -10.87606143951416
    4. 'leep' → logprob: -12.50106143951416
    5. 'Sleeping' → logprob: -13.62606143951416
    6. ' sleeping' → logprob: -13.62606143951416
    7. '   ' → logprob: -14.25106143951416
    8. '.sleep' → logprob: -14.50106143951416
    9. '       ' → logprob: -14.62606143951416
    10. '_SLEEP' → logprob: -14.87606143951416

Token 639: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.3380674719810486
    2. 'leep' → logprob: -1.9630675315856934
    3. 'ping' → logprob: -2.7130675315856934
    4. 'sleep' → logprob: -3.3380675315856934
    5. 'eping' → logprob: -3.3380675315856934
    6. 'Sleeping' → logprob: -5.838067531585693
    7. 'ng' → logprob: -6.338067531585693
    8. ' sleeping' → logprob: -6.588067531585693
    9. 'pping' → logprob: -6.963067531585693
    10. 'g' → logprob: -7.713067531585693

Token 640: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.20419399440288544
    2. ':' → logprob: -1.7041939496994019
    3. '):
' → logprob: -5.954194068908691
    4. '       ' → logprob: -9.579194068908691
    5. '):' → logprob: -9.704194068908691
    6. '           ' → logprob: -10.579194068908691
    7. ']:
' → logprob: -11.579194068908691
    8. ' :
' → logprob: -12.079194068908691
    9. '():
' → logprob: -12.704194068908691
    10. ':

' → logprob: -13.454194068908691

Token 641: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11338378489017487
    2. '           ' → logprob: -2.2383837699890137
    3. 'self' → logprob: -7.988383769989014
    4. ' self' → logprob: -8.988384246826172
    5. '   ' → logprob: -10.363384246826172
    6. '```' → logprob: -10.988384246826172
    7. '	       ' → logprob: -11.363384246826172
    8. '
' → logprob: -11.363384246826172
    9. ' del' → logprob: -11.988384246826172
    10. ':
' → logprob: -12.488384246826172

Token 642: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.010613974183797836
    2. '       ' → logprob: -5.260613918304443
    3. ' self' → logprob: -5.510613918304443
    4. 'position' → logprob: -7.260613918304443
    5. '           ' → logprob: -8.010614395141602
    6. 'pos' → logprob: -8.760614395141602
    7. 'del' → logprob: -9.260614395141602
    8. ' del' → logprob: -11.135614395141602
    9. '   ' → logprob: -11.510614395141602
    10. ' position' → logprob: -11.635614395141602

Token 643: '.f' (ID: 1196)
  Prédit: '.f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.f' → logprob: -0.0012324919225648046
    2. '.c' → logprob: -7.251232624053955
    3. '.' → logprob: -7.751232624053955
    4. 'f' → logprob: -9.751232147216797
    5. '
' → logprob: -11.251232147216797
    6. '.w' → logprob: -12.001232147216797
    7. ' .' → logprob: -12.126232147216797
    8. 'c' → logprob: -13.001232147216797
    9. ').' → logprob: -13.376232147216797
    10. 's' → logprob: -13.876232147216797

Token 644: 'ence' (ID: 1082)
  Prédit: 'ence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ence' → logprob: -0.6769209504127502
    2. 'ats' → logprob: -1.0519208908081055
    3. 'ets' → logprob: -2.0519208908081055
    4. 'ens' → logprob: -4.8019208908081055
    5. 'ents' → logprob: -6.8019208908081055
    6. 'ate' → logprob: -6.9269208908081055
    7. 'e' → logprob: -7.1769208908081055
    8. 'ance' → logprob: -7.8019208908081055
    9. 'cats' → logprob: -7.8019208908081055
    10. 'f' → logprob: -8.051920890808105

Token 645: '.w' (ID: 2234)
  Prédit: '.w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.w' → logprob: -8.2994620242971e-06
    2. '.' → logprob: -11.750008583068848
    3. ' .' → logprob: -15.375008583068848
    4. 'wake' → logprob: -16.62500762939453
    5. '   ' → logprob: -16.87500762939453
    6. '```' → logprob: -17.00000762939453
    7. '
' → logprob: -17.50000762939453
    8. '       ' → logprob: -17.87500762939453
    9. '#w' → logprob: -18.12500762939453
    10. '<w' → logprob: -18.12500762939453

Token 646: 'ake' (ID: 814)
  Prédit: 'ake'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ake' → logprob: -0.0006086751818656921
    2. 'akeup' → logprob: -7.500608444213867
    3. 'ak' → logprob: -10.125608444213867
    4. 'a' → logprob: -12.250608444213867
    5. 'oke' → logprob: -12.625608444213867
    6. '_' → logprob: -13.125608444213867
    7. 'e' → logprob: -13.875608444213867
    8. 'ait' → logprob: -14.375608444213867
    9. '   ' → logprob: -15.000608444213867
    10. '
' → logprob: -15.125608444213867

Token 647: '_up' (ID: 18721)
  Prédit: '_up'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_up' → logprob: -2.816093228830141e-06
    2. '_' → logprob: -13.12500286102295
    3. ' _' → logprob: -14.75000286102295
    4. '_UP' → logprob: -15.75000286102295
    5. '   ' → logprob: -16.125001907348633
    6. '_u' → logprob: -17.375001907348633
    7. '_down' → logprob: -18.375001907348633
    8. '       ' → logprob: -18.750001907348633
    9. 'up' → logprob: -18.750001907348633
    10. '
' → logprob: -19.000001907348633

Token 648: '(cat' (ID: 107890)
  Prédit: '(cat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cat' → logprob: -2.816093228830141e-06
    2. '(' → logprob: -13.37500286102295
    3. '(c' → logprob: -14.12500286102295
    4. 'cat' → logprob: -14.75000286102295
    5. ' cat' → logprob: -17.125001907348633
    6. ' (' → logprob: -17.250001907348633
    7. '(car' → logprob: -17.500001907348633
    8. '(
' → logprob: -18.750001907348633
    9. '_cat' → logprob: -19.000001907348633
    10. '(chat' → logprob: -19.000001907348633

Token 649: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -1.9361264946837764e-07
    2. 'id' → logprob: -16.0
    3. '   ' → logprob: -18.125
    4. 'd' → logprob: -19.125
    5. 's' → logprob: -20.25
    6. '_ids' → logprob: -20.25
    7. 'cat' → logprob: -20.375
    8. '_cat' → logprob: -20.5
    9. '_' → logprob: -20.625
    10. '_i' → logprob: -20.75

Token 650: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.13372303545475006
    2. '           ' → logprob: -2.633723020553589
    3. ')' → logprob: -3.258723020553589
    4. '(cat' → logprob: -4.258723258972168
    5. '       ' → logprob: -7.883723258972168
    6. '               ' → logprob: -8.508723258972168
    7. 'cat' → logprob: -9.758723258972168
    8. ',' → logprob: -10.383723258972168
    9. ')
' → logprob: -10.633723258972168
    10. ' cat' → logprob: -10.883723258972168

Token 651: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18567638099193573
    2. '       ' → logprob: -2.060676336288452
    3. 'del' → logprob: -3.685676336288452
    4. ' del' → logprob: -4.185676574707031
    5. '
' → logprob: -6.810676574707031
    6. '	del' → logprob: -7.935676574707031
    7. '```' → logprob: -9.310676574707031
    8. '        
' → logprob: -9.310676574707031
    9. '   ' → logprob: -9.560676574707031
    10. 'self' → logprob: -10.560676574707031

Token 652: ' del' (ID: 1083)
  Prédit: 'del'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'del' (adapté à ' del') → logprob: -0.005998828914016485
    2. ' del' → logprob: -5.255998611450195
    3. '           ' → logprob: -7.255998611450195
    4. 'self' → logprob: -9.755998611450195
    5. '	del' → logprob: -14.130998611450195
    6. ' self' → logprob: -16.380998611450195
    7. '       ' → logprob: -18.255998611450195
    8. '               ' → logprob: -18.755998611450195
    9. '_del' → logprob: -20.005998611450195
    10. '   ' → logprob: -20.130998611450195

Token 653: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.20141568779945374
    2. 'self' → logprob: -1.7014156579971313
    3. '(self' → logprob: -13.201416015625
    4. '	self' → logprob: -15.201416015625
    5. '[self' → logprob: -15.326416015625
    6. ' ' → logprob: -18.201416015625
    7. '=self' → logprob: -18.576416015625
    8. '       ' → logprob: -18.701416015625
    9. ' ' → logprob: -19.201416015625
    10. '```' → logprob: -19.451416015625

Token 654: '.c' (ID: 1081)
  Prédit: '.c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.c' → logprob: -0.0002812391903717071
    2. ' .' → logprob: -8.37528133392334
    3. '.' → logprob: -10.00028133392334
    4. 'cats' → logprob: -13.37528133392334
    5. '._' → logprob: -13.50028133392334
    6. 's' → logprob: -14.62528133392334
    7. '.cat' → logprob: -14.87528133392334
    8. '```' → logprob: -15.25028133392334
    9. ').' → logprob: -15.50028133392334
    10. '`.' → logprob: -15.75028133392334

Token 655: 'ats' (ID: 1838)
  Prédit: 'ats'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ats' → logprob: -0.03431931138038635
    2. 'cats' → logprob: -3.4093194007873535
    3. ' cats' → logprob: -8.159318923950195
    4. 's' → logprob: -8.534318923950195
    5. '   ' → logprob: -9.534318923950195
    6. '_' → logprob: -10.784318923950195
    7. '       ' → logprob: -10.784318923950195
    8. 'at' → logprob: -11.909318923950195
    9. '```' → logprob: -11.909318923950195
    10. '_c' → logprob: -12.034318923950195

Token 656: '_sleep' (ID: 125884)
  Prédit: '_sleep'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sleep' → logprob: -0.0003914695407729596
    2. 'sleep' → logprob: -8.000391006469727
    3. '_s' → logprob: -10.500391006469727
    4. 'leep' → logprob: -10.625391006469727
    5. 'Sleeping' → logprob: -13.375391006469727
    6. 's' → logprob: -14.000391006469727
    7. '.sleep' → logprob: -14.625391006469727
    8. '_SLEEP' → logprob: -14.750391006469727
    9. ' sleeping' → logprob: -15.500391006469727
    10. '   ' → logprob: -15.500391006469727

Token 657: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.06024397909641266
    2. 'g' → logprob: -2.935244083404541
    3. 'ng' → logprob: -5.935244083404541
    4. '_g' → logprob: -7.060244083404541
    5. 'ping' → logprob: -7.310244083404541
    6. '_sleep' → logprob: -7.435244083404541
    7. '_ing' → logprob: -8.935243606567383
    8. '[' → logprob: -9.435243606567383
    9. 'eping' → logprob: -9.685243606567383
    10. 'cat' → logprob: -10.060243606567383

Token 658: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.8624639324116288e-06
    2. '[c' → logprob: -14.375001907348633
    3. ' [' → logprob: -14.625001907348633
    4. '   ' → logprob: -15.250001907348633
    5. 'cat' → logprob: -15.500001907348633
    6. '[
' → logprob: -16.000001907348633
    7. '
' → logprob: -16.375001907348633
    8. '[self' → logprob: -17.000001907348633
    9. '```' → logprob: -17.250001907348633
    10. '\[' → logprob: -17.500001907348633

Token 659: 'cat' (ID: 8837)
  Prédit: 'cat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cat' → logprob: -1.282920129597187e-05
    2. '[' → logprob: -12.000012397766113
    3. ' cat' → logprob: -12.000012397766113
    4. 'cats' → logprob: -15.625012397766113
    5. '   ' → logprob: -15.875012397766113
    6. '(cat' → logprob: -16.50001335144043
    7. '```' → logprob: -17.75001335144043
    8. '       ' → logprob: -18.50001335144043
    9. '_cat' → logprob: -19.62501335144043
    10. '           ' → logprob: -19.75001335144043

Token 660: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.00030697984038852155
    2. 'id' → logprob: -8.125307083129883
    3. 'cat' → logprob: -11.875307083129883
    4. 'd' → logprob: -12.750307083129883
    5. ' cat' → logprob: -14.250307083129883
    6. '_cat' → logprob: -15.000307083129883
    7. 'Id' → logprob: -16.250307083129883
    8. '   ' → logprob: -17.250307083129883
    9. '
' → logprob: -18.125307083129883
    10. ' id' → logprob: -18.750307083129883

Token 661: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08046679198741913
    2. '<|end|>' → logprob: -2.5804667472839355
    3. ']' → logprob: -7.0804667472839355
    4. '}' → logprob: -7.4554667472839355
    5. '```' → logprob: -9.455467224121094
    6. '<|end|>' → logprob: -10.455467224121094
    7. ')
' → logprob: -11.455467224121094
    8. '()' → logprob: -11.580467224121094
    9. ')return' → logprob: -11.580467224121094
    10. '）' → logprob: -12.330467224121094

Token 662: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.045858122408390045
    2. '<|end|>' → logprob: -3.545858144760132
    3. '#' → logprob: -4.670857906341553
    4. '```' → logprob: -5.420857906341553
    5. 'import' → logprob: -6.545857906341553
    6. '<|end|>' → logprob: -8.420858383178711
    7. 'from' → logprob: -9.170858383178711
    8. 'class' → logprob: -9.420858383178711
    9. 'if' → logprob: -9.420858383178711
    10. '
' → logprob: -9.670858383178711

Token 663: ' Input' (ID: 10090)
  Prédit: ' Observation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Observation' → logprob: -0.2357347160577774
    2. 'Observation' → logprob: -2.235734701156616
    3. ' Solution' → logprob: -3.485734701156616
    4. ' Cat' → logprob: -4.360734939575195
    5. ' Solver' → logprob: -4.485734939575195
    6. ' Fence' → logprob: -4.610734939575195
    7. 'Solution' → logprob: -4.860734939575195
    8. ' Observer' → logprob: -5.110734939575195
    9. ' Simulator' → logprob: -5.735734939575195
    10. 'Observer' → logprob: -5.860734939575195

Token 664: 'Parser' (ID: 9231)
  Prédit: 'Reader'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Reader' → logprob: -0.7639405131340027
    2. 'Handler' → logprob: -1.1389405727386475
    3. 'Processor' → logprob: -2.0139405727386475
    4. 'Parser' → logprob: -2.6389405727386475
    5. ':' → logprob: -5.388940334320068
    6. 'Data' → logprob: -6.263940334320068
    7. 'Tokenizer' → logprob: -7.888940334320068
    8. 'Output' → logprob: -8.138940811157227
    9. 'Manager' → logprob: -8.138940811157227
    10. 'Line' → logprob: -8.388940811157227

Token 665: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01105937734246254
    2. ':
' → logprob: -4.511059284210205
    3. ':def' → logprob: -12.136059761047363
    4. '<|end|>' → logprob: -13.011059761047363
    5. ':

' → logprob: -14.261059761047363
    6. '):' → logprob: -14.261059761047363
    7. 'def' → logprob: -14.386059761047363
    8. '(object' → logprob: -15.011059761047363
    9. '():' → logprob: -15.386059761047363
    10. ' :' → logprob: -15.511059761047363

Token 666: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22627440094947815
    2. ' def' → logprob: -1.6012743711471558
    3. ' class' → logprob: -7.726274490356445
    4. ' import' → logprob: -8.726274490356445
    5. 'def' → logprob: -9.101274490356445
    6. '	def' → logprob: -9.601274490356445
    7. '```' → logprob: -10.601274490356445
    8. 'import' → logprob: -10.851274490356445
    9. 'class' → logprob: -11.476274490356445
    10. '    ' → logprob: -12.476274490356445

Token 667: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.10029767453670502
    2. 'def' (adapté à ' def') → logprob: -2.350297689437866
    3. '   ' → logprob: -9.350297927856445
    4. 'class' → logprob: -12.725297927856445
    5. ' class' → logprob: -14.975297927856445
    6. 'import' → logprob: -15.350297927856445
    7. '	def' → logprob: -15.600297927856445
    8. ' @' → logprob: -15.850297927856445
    9. '```' → logprob: -16.100297927856445
    10. '@' → logprob: -16.475297927856445

Token 668: ' __' (ID: 2516)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0399572849273682
    2. ' def' → logprob: -1.2899572849273682
    3. ' __' → logprob: -1.4149572849273682
    4. '__' → logprob: -2.164957284927368
    5. 'staticmethod' → logprob: -4.539957046508789
    6. '___' → logprob: -7.289957046508789
    7. 'classmethod' → logprob: -7.539957046508789
    8. 'object' → logprob: -7.664957046508789
    9. '```' → logprob: -7.789957046508789
    10. 'init' → logprob: -9.164957046508789

Token 669: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.9361264946837764e-07
    2. ' init' → logprob: -16.5
    3. 'inite' → logprob: -17.875
    4. '_init' → logprob: -18.25
    5. 'ini' → logprob: -18.5
    6. 'def' → logprob: -18.875
    7. 'in' → logprob: -19.625
    8. 'int' → logprob: -19.625
    9. '	init' → logprob: -19.625
    10. '(init' → logprob: -20.0

Token 670: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.00308430939912796
    2. '(self' → logprob: -6.003084182739258
    3. '__' → logprob: -7.503084182739258
    4. '__(
' → logprob: -10.128084182739258
    5. '(' → logprob: -11.503084182739258
    6. '__((' → logprob: -13.003084182739258
    7. 'self' → logprob: -13.378084182739258
    8. '_(' → logprob: -13.628084182739258
    9. ' (' → logprob: -14.003084182739258
    10. '__('' → logprob: -15.378084182739258

Token 671: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00029363270732574165
    2. ')' → logprob: -8.500293731689453
    3. '   ' → logprob: -10.000293731689453
    4. '):
' → logprob: -10.625293731689453
    5. ' self' → logprob: -11.250293731689453
    6. '
' → logprob: -12.375293731689453
    7. '(self' → logprob: -14.125293731689453
    8. 'def' → logprob: -14.625293731689453
    9. 'f' → logprob: -14.875293731689453
    10. 'width' → logprob: -14.875293731689453

Token 672: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11716584861278534
    2. 'self' → logprob: -2.3671658039093018
    3. '):' → logprob: -4.867166042327881
    4. '):
' → logprob: -4.992166042327881
    5. '   ' → logprob: -7.117166042327881
    6. ' self' → logprob: -7.242166042327881
    7. ')' → logprob: -8.367165565490723
    8. '(self' → logprob: -8.742165565490723
    9. ',self' → logprob: -8.742165565490723
    10. '
' → logprob: -9.867165565490723

Token 673: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0004119616060052067
    2. '       ' → logprob: -8.500411987304688
    3. '   ' → logprob: -9.125411987304688
    4. ' self' → logprob: -9.250411987304688
    5. '
' → logprob: -13.000411987304688
    6. '	self' → logprob: -14.375411987304688
    7. '(self' → logprob: -15.125411987304688
    8. 'def' → logprob: -15.375411987304688
    9. '0' → logprob: -17.250411987304688
    10. '    ' → logprob: -17.625411987304688

Token 674: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.045036979019641876
    2. '       ' → logprob: -3.170037031173706
    3. ' self' → logprob: -6.670036792755127
    4. 'import' → logprob: -7.545036792755127
    5. 'pass' → logprob: -9.295037269592285
    6. '	self' → logprob: -9.420037269592285
    7. 'from' → logprob: -10.670037269592285
    8. 'class' → logprob: -10.795037269592285
    9. '   ' → logprob: -12.045037269592285
    10. 'def' → logprob: -12.170037269592285

Token 675: '.current' (ID: 8357)
  Prédit: '.f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.f' → logprob: -0.012309849262237549
    2. '.width' → logprob: -4.887310028076172
    3. '.buffer' → logprob: -6.012310028076172
    4. '.input' → logprob: -7.137310028076172
    5. '.lines' → logprob: -7.512310028076172
    6. '.data' → logprob: -8.512310028076172
    7. '.commands' → logprob: -8.637310028076172
    8. '.' → logprob: -9.387310028076172
    9. '.inputs' → logprob: -9.512310028076172
    10. '._' → logprob: -10.387310028076172

Token 676: '_ob' (ID: 46416)
  Prédit: '_f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.1400568187236786
    2. '_width' → logprob: -2.890056848526001
    3. '=' → logprob: -3.140056848526001
    4. '_line' → logprob: -4.765056610107422
    5. 'f' → logprob: -4.890056610107422
    6. ' =' → logprob: -5.265056610107422
    7. '_position' → logprob: -6.390056610107422
    8. '_id' → logprob: -6.640056610107422
    9. '_input' → logprob: -6.765056610107422
    10. '_' → logprob: -7.015056610107422

Token 677: 'servation' (ID: 27602)
  Prédit: 'servation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'servation' → logprob: -0.000761745497584343
    2. 'server' → logprob: -7.25076150894165
    3. 'serv' → logprob: -10.375761985778809
    4. 's' → logprob: -12.000761985778809
    5. 'f' → logprob: -12.625761985778809
    6. 'servable' → logprob: -12.750761985778809
    7. 'ervation' → logprob: -13.125761985778809
    8. 'servers' → logprob: -13.250761985778809
    9. 'ject' → logprob: -13.500761985778809
    10. 'versation' → logprob: -13.625761985778809

Token 678: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08188043534755707
    2. '=' → logprob: -2.5818803310394287
    3. 's' → logprob: -6.581880569458008
    4. '=None' → logprob: -6.956880569458008
    5. '_record' → logprob: -8.081880569458008
    6. '_id' → logprob: -8.456880569458008
    7. ':' → logprob: -10.206880569458008
    8. 'Observation' → logprob: -10.831880569458008
    9. '_records' → logprob: -11.206880569458008
    10. '_f' → logprob: -11.956880569458008

Token 679: ' Observation' (ID: 143762)
  Prédit: 'Observation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Observation' → logprob: -0.016626957803964615
    2. 'None' → logprob: -4.141626834869385
    3. ' Observation' → logprob: -7.641626834869385
    4. 'Fence' → logprob: -9.391627311706543
    5. 'Input' → logprob: -11.516627311706543
    6. ' None' → logprob: -11.766627311706543
    7. 'int' → logprob: -13.016627311706543
    8. 'dict' → logprob: -13.391627311706543
    9. '   ' → logprob: -13.641627311706543
    10. 'list' → logprob: -13.891627311706543

Token 680: 'Record' (ID: 6721)
  Prédit: 'Record'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Record' → logprob: -0.00016778295685071498
    2. 'Observation' → logprob: -9.875167846679688
    3. ' =' → logprob: -10.625167846679688
    4. '=' → logprob: -10.875167846679688
    5. '   ' → logprob: -11.000167846679688
    6. '<Record' → logprob: -11.750167846679688
    7. '=None' → logprob: -12.000167846679688
    8. 'Records' → logprob: -12.000167846679688
    9. '_record' → logprob: -12.125167846679688
    10. 'record' → logprob: -12.125167846679688

Token 681: ' |' (ID: 1022)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31362366676330566
    2. ' =' → logprob: -1.3136236667633057
    3. '=None' → logprob: -7.938623428344727
    4. ' ' → logprob: -13.313623428344727
    5. 'None' → logprob: -13.313623428344727
    6. ' None' → logprob: -14.313623428344727
    7. ' is' → logprob: -14.563623428344727
    8. '<|end|>' → logprob: -14.938623428344727
    9. '   ' → logprob: -16.188623428344727
    10. ':' → logprob: -16.688623428344727

Token 682: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -3.5120287066092715e-05
    2. ' None' → logprob: -10.375035285949707
    3. 'Fence' → logprob: -12.875035285949707
    4. '   ' → logprob: -13.875035285949707
    5. 'list' → logprob: -15.875035285949707
    6. 'none' → logprob: -16.25003433227539
    7. '=None' → logprob: -17.00003433227539
    8. ' ' → logprob: -17.12503433227539
    9. 'null' → logprob: -17.62503433227539
    10. '       ' → logprob: -17.87503433227539

Token 683: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005273718852549791
    2. ' =' → logprob: -5.255273818969727
    3. '=None' → logprob: -10.130273818969727
    4. '<|end|>' → logprob: -16.880273818969727
    5. 'None' → logprob: -17.255273818969727
    6. '(None' → logprob: -17.880273818969727
    7. '=False' → logprob: -18.130273818969727
    8. ' None' → logprob: -18.255273818969727
    9. ' ' → logprob: -18.630273818969727
    10. '=
' → logprob: -19.130273818969727

Token 684: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.003178306156769395
    2. ' None' → logprob: -5.753178119659424
    3. '   ' → logprob: -14.378178596496582
    4. '(None' → logprob: -18.378177642822266
    5. '=None' → logprob: -18.503177642822266
    6. '_None' → logprob: -18.628177642822266
    7. 'No' → logprob: -19.128177642822266
    8. '       ' → logprob: -19.128177642822266
    9. 'null' → logprob: -19.128177642822266
    10. 'none' → logprob: -19.628177642822266

Token 685: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3279913663864136
    2. '
' → logprob: -1.3279913663864136
    3. 'def' → logprob: -5.202991485595703
    4. ' def' → logprob: -5.327991485595703
    5. '<|end|>' → logprob: -6.202991485595703
    6. '    
' → logprob: -6.327991485595703
    7. '	def' → logprob: -9.327991485595703
    8. ',' → logprob: -9.452991485595703
    9. '<|end|>' → logprob: -9.452991485595703
    10. '

' → logprob: -9.577991485595703

Token 686: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018771132454276085
    2. 'def' → logprob: -4.518771171569824
    3. ' def' → logprob: -4.893771171569824
    4. '
' → logprob: -8.643771171569824
    5. '	def' → logprob: -10.893771171569824
    6. '    
' → logprob: -13.143771171569824
    7. '<|end|>' → logprob: -13.393771171569824
    8. '```' → logprob: -14.018771171569824
    9. 'import' → logprob: -14.518771171569824
    10. ',' → logprob: -15.393771171569824

Token 687: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00016897499153856188
    2. ' def' → logprob: -9.000168800354004
    3. '   ' → logprob: -10.000168800354004
    4. '	def' → logprob: -16.75016975402832
    5. '
' → logprob: -19.62516975402832
    6. 'import' → logprob: -20.00016975402832
    7. 'de' → logprob: -20.62516975402832
    8. 'class' → logprob: -21.12516975402832
    9. ' ' → logprob: -21.25016975402832
    10. '```' → logprob: -21.62516975402832

Token 688: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.09784989804029465
    2. ' parse' → logprob: -3.2228498458862305
    3. 'process' → logprob: -3.3478498458862305
    4. 'def' → logprob: -4.4728498458862305
    5. ' process' → logprob: -5.5978498458862305
    6. ' def' → logprob: -6.7228498458862305
    7. 'read' → logprob: -6.7228498458862305
    8. 'handle' → logprob: -8.22284984588623
    9. 'feed' → logprob: -8.84784984588623
    10. 'start' → logprob: -9.84784984588623

Token 689: '_line' (ID: 14418)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.28501009941101074
    2. '_line' → logprob: -1.4100100994110107
    3. '(' → logprob: -6.16001033782959
    4. '_input' → logprob: -7.03501033782959
    5. 'self' → logprob: -7.78501033782959
    6. 'line' → logprob: -8.41001033782959
    7. '_' → logprob: -9.78501033782959
    8. '_command' → logprob: -10.16001033782959
    9. ' (' → logprob: -10.78501033782959
    10. ' line' → logprob: -10.91001033782959

Token 690: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -7.815280696377158e-05
    2. '(' → logprob: -9.500078201293945
    3. ' (' → logprob: -13.250078201293945
    4. '(line' → logprob: -13.625078201293945
    5. 'self' → logprob: -15.625078201293945
    6. '(
' → logprob: -17.125078201293945
    7. '(s' → logprob: -17.250078201293945
    8. '   ' → logprob: -18.375078201293945
    9. '(sel' → logprob: -18.500078201293945
    10. '       ' → logprob: -19.250078201293945

Token 691: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.417976379045285e-05
    2. 'self' → logprob: -10.375043869018555
    3. ',line' → logprob: -11.875043869018555
    4. ' ,' → logprob: -12.250043869018555
    5. ',self' → logprob: -14.125043869018555
    6. '(self' → logprob: -16.500043869018555
    7. ',
' → logprob: -16.625043869018555
    8. 's' → logprob: -16.625043869018555
    9. ',s' → logprob: -16.625043869018555
    10. '   ' → logprob: -16.875043869018555

Token 692: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.701488196849823
    2. 'self' → logprob: -0.951488196849823
    3. ' line' → logprob: -2.4514882564544678
    4. ' self' → logprob: -3.4514882564544678
    5. '   ' → logprob: -9.076488494873047
    6. '       ' → logprob: -12.701488494873047
    7. ')' → logprob: -13.451488494873047
    8. ' ' → logprob: -13.701488494873047
    9. '	line' → logprob: -13.951488494873047
    10. 'text' → logprob: -14.701488494873047

Token 693: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016163522377610207
    2. 'self' → logprob: -4.516163349151611
    3. '       ' → logprob: -6.516163349151611
    4. '   ' → logprob: -6.641163349151611
    5. ')' → logprob: -7.141163349151611
    6. '(self' → logprob: -7.516163349151611
    7. '):
' → logprob: -7.641163349151611
    8. '):' → logprob: -8.39116382598877
    9. ' :' → logprob: -9.51616382598877
    10. ':str' → logprob: -9.64116382598877

Token 694: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.14296895265579224
    2. ' str' → logprob: -2.0179688930511475
    3. ')' → logprob: -8.267969131469727
    4. '   ' → logprob: -10.892969131469727
    5. '[str' → logprob: -12.267969131469727
    6. 'self' → logprob: -12.642969131469727
    7. '(str' → logprob: -12.892969131469727
    8. 'line' → logprob: -13.142969131469727
    9. ':str' → logprob: -13.642969131469727
    10. '):
' → logprob: -13.892969131469727

Token 695: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002100965939462185
    2. '):' → logprob: -9.00020980834961
    3. '):
' → logprob: -9.37520980834961
    4. ' )' → logprob: -14.25020980834961
    5. '   ' → logprob: -14.50020980834961
    6. ')->' → logprob: -15.00020980834961
    7. '):
' → logprob: -15.50020980834961
    8. ':' → logprob: -16.00020980834961
    9. '）' → logprob: -18.62520980834961
    10. '):

' → logprob: -18.75020980834961

Token 696: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.641640305519104
    2. ':' → logprob: -1.141640305519104
    3. ' ->' → logprob: -1.891640305519104
    4. '   ' → logprob: -6.5166401863098145
    5. ':
' → logprob: -7.1416401863098145
    6. '       ' → logprob: -7.6416401863098145
    7. ')' → logprob: -8.266640663146973
    8. '()->' → logprob: -8.516640663146973
    9. ')->' → logprob: -8.766640663146973
    10. '->____' → logprob: -10.891640663146973

Token 697: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.01123656053096056
    2. 'None' → logprob: -4.636236667633057
    3. ' str' → logprob: -6.761236667633057
    4. 'list' → logprob: -8.261236190795898
    5. ' None' → logprob: -9.886236190795898
    6. 'tuple' → logprob: -12.136236190795898
    7. '[str' → logprob: -12.636236190795898
    8. '(str' → logprob: -13.636236190795898
    9. ' ' → logprob: -14.011236190795898
    10. '   ' → logprob: -14.136236190795898

Token 698: ' |' (ID: 1022)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5676336884498596
    2. '       ' → logprob: -0.9426336884498596
    3. ':
' → logprob: -3.192633628845215
    4. '():
' → logprob: -6.817633628845215
    5. ',' → logprob: -7.692633628845215
    6. '():' → logprob: -7.692633628845215
    7. '):
' → logprob: -8.442633628845215
    8. '<|end|>' → logprob: -10.317633628845215
    9. '   ' → logprob: -10.442633628845215
    10. '):' → logprob: -11.067633628845215

Token 699: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0001613459608051926
    2. ' None' → logprob: -8.750161170959473
    3. 'list' → logprob: -12.875161170959473
    4. '   ' → logprob: -16.00016212463379
    5. '_None' → logprob: -16.87516212463379
    6. 'int' → logprob: -17.25016212463379
    7. ' ' → logprob: -17.75016212463379
    8. 'tuple' → logprob: -17.87516212463379
    9. '(None' → logprob: -17.87516212463379
    10. 'bool' → logprob: -18.12516212463379

Token 700: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05553114786744118
    2. '       ' → logprob: -3.1805312633514404
    3. ':
' → logprob: -4.430531024932861
    4. '():' → logprob: -8.55553150177002
    5. '():
' → logprob: -9.18053150177002
    6. '):' → logprob: -9.43053150177002
    7. '   ' → logprob: -9.55553150177002
    8. '):
' → logprob: -9.68053150177002
    9. ',' → logprob: -11.55553150177002
    10. '{' → logprob: -12.43053150177002

Token 701: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004366294015198946
    2. ' if' → logprob: -8.875436782836914
    3. '   ' → logprob: -9.125436782836914
    4. ' parts' → logprob: -9.500436782836914
    5. 'tokens' → logprob: -9.750436782836914
    6. ' tokens' → logprob: -10.125436782836914
    7. ' line' → logprob: -12.500436782836914
    8. '```' → logprob: -12.875436782836914
    9. 'parts' → logprob: -13.375436782836914
    10. '    ' → logprob: -13.500436782836914

Token 702: ' parts' (ID: 7881)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.016936669126152992
    2. 'parts' (adapté à ' parts') → logprob: -5.016936779022217
    3. 'if' → logprob: -5.516936779022217
    4. ' line' → logprob: -5.766936779022217
    5. 'tokens' → logprob: -6.141936779022217
    6. '       ' → logprob: -7.391936779022217
    7. ' if' → logprob: -9.266936302185059
    8. ' tokens' → logprob: -9.766936302185059
    9. ' parts' → logprob: -9.766936302185059
    10. 'command' → logprob: -11.016936302185059

Token 703: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25193002820014954
    2. ' =' → logprob: -1.5019299983978271
    3. '＝' → logprob: -14.626930236816406
    4. '=line' → logprob: -15.376930236816406
    5. 'tokens' → logprob: -16.626930236816406
    6. '   ' → logprob: -17.126930236816406
    7. '[' → logprob: -17.376930236816406
    8. '       ' → logprob: -17.751930236816406
    9. ' ' → logprob: -17.876930236816406
    10. '=[]' → logprob: -18.001930236816406

Token 704: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.061967797577381134
    2. ' line' → logprob: -2.8119678497314453
    3. '	line' → logprob: -16.311967849731445
    4. '=line' → logprob: -18.561967849731445
    5. '   ' → logprob: -18.686967849731445
    6. '[line' → logprob: -18.811967849731445
    7. '(line' → logprob: -19.811967849731445
    8. '#line' → logprob: -20.311967849731445
    9. '       ' → logprob: -20.811967849731445
    10. 'Line' → logprob: -21.061967849731445

Token 705: '.split' (ID: 10347)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.007893005385994911
    2. ' =' → logprob: -5.257893085479736
    3. '.split' → logprob: -6.382893085479736
    4. '.' → logprob: -7.757893085479736
    5. '.strip' → logprob: -7.757893085479736
    6. '=line' → logprob: -9.382892608642578
    7. '.=' → logprob: -11.132892608642578
    8. ' .' → logprob: -11.757892608642578
    9. 'split' → logprob: -13.132892608642578
    10. '.rstrip' → logprob: -14.257892608642578

Token 706: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00041113083716481924
    2. '('' → logprob: -7.875411033630371
    3. '()
' → logprob: -10.875411033630371
    4. '("' → logprob: -12.000411033630371
    5. '(' → logprob: -12.625411033630371
    6. '())' → logprob: -14.375411033630371
    7. '();' → logprob: -14.625411033630371
    8. ' ()' → logprob: -14.750411033630371
    9. '()

' → logprob: -15.500411033630371
    10. '(None' → logprob: -15.500411033630371

Token 707: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.059824131429195404
    2. ' if' → logprob: -3.059824228286743
    3. 'if' → logprob: -4.559823989868164
    4. '[' → logprob: -8.059823989868164
    5. '<|end|>' → logprob: -9.184823989868164
    6. '        
' → logprob: -9.309823989868164
    7. '   ' → logprob: -9.934823989868164
    8. '	if' → logprob: -10.184823989868164
    9. '      ' → logprob: -10.934823989868164
    10. ' ' → logprob: -11.059823989868164

Token 708: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.05889299511909485
    2. 'cmd' → logprob: -3.0588929653167725
    3. 'command' → logprob: -5.183893203735352
    4. '       ' → logprob: -5.558893203735352
    5. ' if' → logprob: -7.683893203735352
    6. 'action' → logprob: -8.433893203735352
    7. 'match' → logprob: -10.183893203735352
    8. 'keyword' → logprob: -10.308893203735352
    9. 'opcode' → logprob: -11.433893203735352
    10. 'verb' → logprob: -11.683893203735352

Token 709: ' len' (ID: 4631)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.5930576324462891
    2. 'not' → logprob: -0.8430576324462891
    3. ' not' → logprob: -4.468057632446289
    4. 'len' → logprob: -5.343057632446289
    5. ' parts' → logprob: -7.343057632446289
    6. '   ' → logprob: -10.093057632446289
    7. '       ' → logprob: -11.468057632446289
    8. '(parts' → logprob: -11.843057632446289
    9. ' len' → logprob: -12.093057632446289
    10. 'lines' → logprob: -12.843057632446289

Token 710: '(parts' (ID: 102573)
  Prédit: '(parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -0.042521193623542786
    2. '==' → logprob: -3.7925212383270264
    3. ' ==' → logprob: -4.417520999908447
    4. 'parts' → logprob: -5.417520999908447
    5. ' parts' → logprob: -6.042520999908447
    6. '=' → logprob: -9.542521476745605
    7. '(' → logprob: -10.042521476745605
    8. ')' → logprob: -10.667521476745605
    9. '()==' → logprob: -10.917521476745605
    10. ' (' → logprob: -11.042521476745605

Token 711: ')' (ID: 8)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.16700798273086548
    2. ' ==' → logprob: -1.9170079231262207
    3. ')' → logprob: -5.167007923126221
    4. ')==' → logprob: -7.667007923126221
    5. '<' → logprob: -7.792007923126221
    6. ' <' → logprob: -9.667008399963379
    7. '[' → logprob: -10.042008399963379
    8. '===' → logprob: -10.792008399963379
    9. '=' → logprob: -11.042008399963379
    10. '>=' → logprob: -11.292008399963379

Token 712: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.016279399394989014
    2. ' ==' → logprob: -4.516279220581055
    3. '<' → logprob: -5.266279220581055
    4. ' <' → logprob: -11.016279220581055
    5. '>=' → logprob: -11.141279220581055
    6. '===' → logprob: -11.391279220581055
    7. '=' → logprob: -12.391279220581055
    8. 'and' → logprob: -12.516279220581055
    9. '[' → logprob: -13.391279220581055
    10. '0' → logprob: -14.016279220581055

Token 713: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4305037260055542
    2. '2' → logprob: -1.4305037260055542
    3. '0' → logprob: -2.5555038452148438
    4. '3' → logprob: -3.4305038452148438
    5. ' ' → logprob: -7.805503845214844
    6. '4' → logprob: -8.555503845214844
    7. '5' → logprob: -12.993003845214844
    8. '   ' → logprob: -13.493003845214844
    9. '=' → logprob: -14.493003845214844
    10. '  ' → logprob: -14.743003845214844

Token 714: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6954586505889893
    2. '1' → logprob: -1.1954586505889893
    3. '2' → logprob: -1.6954586505889893
    4. '3' → logprob: -4.19545841217041
    5. '4' → logprob: -12.19545841217041
    6. ' ' → logprob: -12.32045841217041
    7. '```' → logprob: -15.63295841217041
    8. '=' → logprob: -15.75795841217041
    9. '   ' → logprob: -16.132959365844727
    10. '5' → logprob: -16.132959365844727

Token 715: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.24876146018505096
    2. ':
' → logprob: -1.8737614154815674
    3. ':' → logprob: -2.7487614154815674
    4. 'and' → logprob: -6.3737616539001465
    5. '       ' → logprob: -7.3737616539001465
    6. ',' → logprob: -8.623761177062988
    7. '           ' → logprob: -10.123761177062988
    8. '<|end|>' → logprob: -10.123761177062988
    9. '):
' → logprob: -10.248761177062988
    10. ':

' → logprob: -11.873761177062988

Token 716: ' parts' (ID: 7881)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.024627627804875374
    2. ' parts' → logprob: -3.774627685546875
    3. 'all' → logprob: -7.149627685546875
    4. '   ' → logprob: -8.524627685546875
    5. ' all' → logprob: -8.649627685546875
    6. '(parts' → logprob: -9.649627685546875
    7. 'self' → logprob: -9.774627685546875
    8. ' ' → logprob: -10.024627685546875
    9. '  ' → logprob: -11.274627685546875
    10. '
' → logprob: -11.774627685546875

Token 717: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0002545448951423168
    2. '==' → logprob: -8.37525463104248
    3. ' ==' → logprob: -11.00025463104248
    4. '[
' → logprob: -13.50025463104248
    5. '[-' → logprob: -13.62525463104248
    6. ' [' → logprob: -13.62525463104248
    7. 'and' → logprob: -14.00025463104248
    8. ' and' → logprob: -14.87525463104248
    9. '```' → logprob: -15.00025463104248
    10. '==
' → logprob: -15.25025463104248

Token 718: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000920869642868638
    2. '1' → logprob: -7.00092077255249
    3. '
' → logprob: -12.500921249389648
    4. '[' → logprob: -13.250921249389648
    5. ':' → logprob: -14.125921249389648
    6. ' ' → logprob: -14.250921249389648
    7. '   ' → logprob: -14.375921249389648
    8. 'parts' → logprob: -14.750921249389648
    9. '2' → logprob: -15.000921249389648
    10. ']' → logprob: -15.500921249389648

Token 719: '].' (ID: 1651)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.03870997205376625
    2. ' ==' → logprob: -3.413709878921509
    3. '=='' → logprob: -6.163710117340088
    4. '=="' → logprob: -6.663710117340088
    5. ']==' → logprob: -7.163710117340088
    6. ']' → logprob: -8.41370964050293
    7. '[' → logprob: -8.53870964050293
    8. '===' → logprob: -8.91370964050293
    9. '==
' → logprob: -9.41370964050293
    10. ')==' → logprob: -9.66370964050293

Token 720: 'isdigit' (ID: 187412)
  Prédit: 'isdigit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isdigit' → logprob: -0.04907871410250664
    2. 'startswith' → logprob: -3.4240787029266357
    3. 'lower' → logprob: -4.299078941345215
    4. 'is' → logprob: -7.174078941345215
    5. 'strip' → logprob: -7.924078941345215
    6. 'upper' → logprob: -8.174078941345215
    7. 'start' → logprob: -9.174078941345215
    8. 'isl' → logprob: -10.049078941345215
    9. 'digit' → logprob: -10.299078941345215
    10. 'new' → logprob: -10.924078941345215

Token 721: '()' (ID: 416)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.03074534982442856
    2. 'and' → logprob: -3.780745267868042
    3. '()' → logprob: -5.655745506286621
    4. ':' → logprob: -6.530745506286621
    5. ':
' → logprob: -6.655745506286621
    6. '():
' → logprob: -6.905745506286621
    7. '():' → logprob: -8.655745506286621
    8. '       ' → logprob: -11.030745506286621
    9. ')' → logprob: -12.030745506286621
    10. '<|end|>' → logprob: -12.155745506286621

Token 722: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.23149968683719635
    2. ':
' → logprob: -2.481499671936035
    3. 'and' → logprob: -2.731499671936035
    4. ':' → logprob: -2.856499671936035
    5. '       ' → logprob: -8.606499671936035
    6. '<|end|>' → logprob: -9.481499671936035
    7. '):
' → logprob: -9.731499671936035
    8. '           ' → logprob: -10.856499671936035
    9. '   ' → logprob: -10.856499671936035
    10. '=' → logprob: -11.106499671936035

Token 723: ' parts' (ID: 7881)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.0025965843815356493
    2. ' parts' → logprob: -6.377596378326416
    3. 'int' → logprob: -7.127596378326416
    4. '(parts' → logprob: -10.502596855163574
    5. 'self' → logprob: -11.377596855163574
    6. '   ' → logprob: -11.377596855163574
    7. 'line' → logprob: -11.377596855163574
    8. 'len' → logprob: -11.752596855163574
    9. 'not' → logprob: -12.127596855163574
    10. 'all' → logprob: -12.502596855163574

Token 724: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.051066520740278e-05
    2. '1' → logprob: -10.125060081481934
    3. '
' → logprob: -11.875060081481934
    4. '==' → logprob: -12.625060081481934
    5. 'and' → logprob: -13.500060081481934
    6. '```' → logprob: -13.625060081481934
    7. '[
' → logprob: -13.625060081481934
    8. 'def' → logprob: -13.750060081481934
    9. ' [' → logprob: -14.500060081481934
    10. '#' → logprob: -14.562560081481934

Token 725: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010485442908247933
    2. '0' → logprob: -9.375104904174805
    3. ' ' → logprob: -11.750104904174805
    4. '   ' → logprob: -12.375104904174805
    5. '[' → logprob: -12.500104904174805
    6. '
' → logprob: -13.625104904174805
    7. 'parts' → logprob: -14.500104904174805
    8. '  ' → logprob: -14.875104904174805
    9. 'isdigit' → logprob: -15.375104904174805
    10. 'is' → logprob: -15.625104904174805

Token 726: '].' (ID: 1651)
  Prédit: '.is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.0058477348648011684
    2. 'isdigit' → logprob: -5.380847930908203
    3. '].' → logprob: -7.630847930908203
    4. '.' → logprob: -7.755847930908203
    5. '==' → logprob: -8.630847930908203
    6. ' .' → logprob: -9.880847930908203
    7. ').' → logprob: -10.255847930908203
    8. ' ==' → logprob: -10.380847930908203
    9. '().' → logprob: -11.380847930908203
    10. '}.' → logprob: -13.505847930908203

Token 727: 'isdigit' (ID: 187412)
  Prédit: 'isdigit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isdigit' → logprob: -3.128163257315464e-07
    2. ' is' → logprob: -15.75
    3. 'isd' → logprob: -17.75
    4. 'digit' → logprob: -18.875
    5. 'strip' → logprob: -19.375
    6. 'startswith' → logprob: -19.5
    7. '  ' → logprob: -20.125
    8. '   ' → logprob: -20.25
    9. 'rstrip' → logprob: -20.625
    10. 'is' → logprob: -20.875

Token 728: '():
' (ID: 8595)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6992554664611816
    2. ':' → logprob: -0.9492554664611816
    3. '():
' → logprob: -2.5742554664611816
    4. ' and' → logprob: -3.4492554664611816
    5. '():' → logprob: -5.574255466461182
    6. '       ' → logprob: -5.949255466461182
    7. 'and' → logprob: -7.199255466461182
    8. '):
' → logprob: -7.574255466461182
    9. '()' → logprob: -9.699254989624023
    10. '           ' → logprob: -9.824254989624023

Token 729: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030628129839897156
    2. ':' → logprob: -3.655628204345703
    3. '
' → logprob: -7.030628204345703
    4. ':
' → logprob: -7.155628204345703
    5. ',' → logprob: -7.405628204345703
    6. '<|end|>' → logprob: -7.530628204345703
    7. '```' → logprob: -7.780628204345703
    8. '        
' → logprob: -7.905628204345703
    9. '           ' → logprob: -9.030628204345703
    10. ' and' → logprob: -9.155628204345703

Token 730: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.19241073727607727
    2. ' self' → logprob: -2.817410707473755
    3. '           ' → logprob: -3.067410707473755
    4. 'width' → logprob: -3.192410707473755
    5. ' fence' → logprob: -4.442410945892334
    6. 'f' → logprob: -4.942410945892334
    7. ' width' → logprob: -5.192410945892334
    8. '       ' → logprob: -6.317410945892334
    9. 'n' → logprob: -7.567410945892334
    10. 'length' → logprob: -8.692410469055176

Token 731: ' New' (ID: 2036)
  Prédit: 'width'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'width' → logprob: -0.014832498505711555
    2. 'self' → logprob: -4.514832496643066
    3. 'f' → logprob: -6.014832496643066
    4. ' width' → logprob: -7.764832496643066
    5. '           ' → logprob: -7.889832496643066
    6. 'return' → logprob: -8.764832496643066
    7. '#' → logprob: -8.889832496643066
    8. 'n' → logprob: -9.764832496643066
    9. 'length' → logprob: -9.889832496643066
    10. 'w' → logprob: -10.139832496643066

Token 732: ' dataset' (ID: 20830)
  Prédit: '_ob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_ob' → logprob: -1.4110798835754395
    2. 'self' → logprob: -1.5360798835754395
    3. 'Observation' → logprob: -1.5360798835754395
    4. 'f' → logprob: -1.6610798835754395
    5. 'ob' → logprob: -2.2860798835754395
    6. ' observation' → logprob: -3.9110798835754395
    7. ' self' → logprob: -5.7860798835754395
    8. 'width' → logprob: -5.9110798835754395
    9. ' fence' → logprob: -6.2860798835754395
    10. 'Fence' → logprob: -6.4110798835754395

Token 733: '
' (ID: 198)
  Prédit: 'width'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'width' → logprob: -0.9861223697662354
    2. '           ' → logprob: -1.1111223697662354
    3. 'f' → logprob: -1.9861223697662354
    4. 'self' → logprob: -2.6111223697662354
    5. ' width' → logprob: -3.4861223697662354
    6. ' fence' → logprob: -3.4861223697662354
    7. ' self' → logprob: -5.111122131347656
    8. '
' → logprob: -5.236122131347656
    9. '               ' → logprob: -5.611122131347656
    10. '=' → logprob: -5.611122131347656

Token 734: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02581655979156494
    2. '       ' → logprob: -4.775816440582275
    3. 'self' → logprob: -4.900816440582275
    4. '
' → logprob: -5.400816440582275
    5. 'f' → logprob: -6.275816440582275
    6. 'width' → logprob: -6.400816440582275
    7. ' self' → logprob: -7.525816440582275
    8. ' fence' → logprob: -8.150816917419434
    9. ',' → logprob: -8.650816917419434
    10. ' width' → logprob: -9.275816917419434

Token 735: ' W' (ID: 486)
  Prédit: 'width'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'width' → logprob: -0.36114028096199036
    2. 'self' → logprob: -1.236140251159668
    3. ' width' → logprob: -4.861140251159668
    4. ' self' → logprob: -5.736140251159668
    5. '       ' → logprob: -7.111140251159668
    6. 'f' → logprob: -7.736140251159668
    7. 'return' → logprob: -8.861140251159668
    8. 'w' → logprob: -9.361140251159668
    9. 'n' → logprob: -9.861140251159668
    10. 'length' → logprob: -10.486140251159668

Token 736: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4320652186870575
    2. ',' → logprob: -1.4320652484893799
    3. 'idth' → logprob: -2.30706524848938
    4. '=' → logprob: -4.432065010070801
    5. 'IDTH' → logprob: -7.682065010070801
    6. '=int' → logprob: -9.8070650100708
    7. '   ' → logprob: -11.3070650100708
    8. 'id' → logprob: -11.6820650100708
    9. ' ,' → logprob: -11.6820650100708
    10. '       ' → logprob: -12.1820650100708

Token 737: ' Q' (ID: 1486)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.137961283326149
    2. 'n' → logprob: -2.6379613876342773
    3. 'H' → logprob: -3.7629613876342773
    4. ' N' → logprob: -3.8879613876342773
    5. ' n' → logprob: -5.262961387634277
    6. ' =' → logprob: -6.512961387634277
    7. '=' → logprob: -6.887961387634277
    8. 'C' → logprob: -7.012961387634277
    9. ' H' → logprob: -7.262961387634277
    10. 'L' → logprob: -7.512961387634277

Token 738: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868715465068817
    2. '=' → logprob: -1.136871576309204
    3. ',' → logprob: -15.261871337890625
    4. '=int' → logprob: -15.511871337890625
    5. ' ' → logprob: -17.761871337890625
    6. '=
' → logprob: -18.011871337890625
    7. 'w' → logprob: -18.261871337890625
    8. '＝' → logprob: -18.386871337890625
    9. 'W' → logprob: -18.761871337890625
    10. '=W' → logprob: -18.761871337890625

Token 739: ' map' (ID: 4014)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.005319731775671244
    2. ' int' → logprob: -5.255319595336914
    3. 'map' → logprob: -9.505319595336914
    4. ' map' → logprob: -11.380319595336914
    5. '[int' → logprob: -16.505319595336914
    6. '(int' → logprob: -17.630319595336914
    7. '=int' → logprob: -18.255319595336914
    8. '   ' → logprob: -18.505319595336914
    9. '<int' → logprob: -19.255319595336914
    10. ' ' → logprob: -19.255319595336914

Token 740: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0004307884373702109
    2. 'int' → logprob: -7.750430583953857
    3. ' int' → logprob: -16.875431060791016
    4. '[int' → logprob: -17.375431060791016
    5. '=int' → logprob: -18.125431060791016
    6. '(' → logprob: -18.250431060791016
    7. '<int' → logprob: -19.000431060791016
    8. ',int' → logprob: -19.375431060791016
    9. '```' → logprob: -20.500431060791016
    10. '
' → logprob: -20.625431060791016

Token 741: ',' (ID: 11)
  Prédit: '(parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parts' → logprob: -0.009454065933823586
    2. ',' → logprob: -5.384454250335693
    3. 'parts' → logprob: -5.384454250335693
    4. '(line' → logprob: -8.759453773498535
    5. ' parts' → logprob: -10.634453773498535
    6. 'line' → logprob: -10.759453773498535
    7. ',line' → logprob: -11.134453773498535
    8. ')' → logprob: -11.384453773498535
    9. '(' → logprob: -13.759453773498535
    10. '(lines' → logprob: -14.009453773498535

Token 742: ' parts' (ID: 7881)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.0015348586020991206
    2. ' parts' → logprob: -6.501534938812256
    3. '(parts' → logprob: -10.376534461975098
    4. '
' → logprob: -14.876534461975098
    5. '   ' → logprob: -15.001534461975098
    6. '           ' → logprob: -15.501534461975098
    7. 'part' → logprob: -16.501535415649414
    8. '       ' → logprob: -16.626535415649414
    9. '[' → logprob: -16.751535415649414
    10. 'Parts' → logprob: -16.876535415649414

Token 743: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06199289485812187
    2. ')
' → logprob: -2.811992883682251
    3. ')
' → logprob: -11.686992645263672
    4. '())' → logprob: -12.436992645263672
    5. ')`' → logprob: -12.936992645263672
    6. '(' → logprob: -13.311992645263672
    7. ')`
' → logprob: -13.311992645263672
    8. '())
' → logprob: -13.311992645263672
    9. ' )' → logprob: -13.936992645263672
    10. ')return' → logprob: -14.186992645263672

Token 744: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09960030764341354
    2. '           ' → logprob: -2.599600315093994
    3. '
' → logprob: -3.974600315093994
    4. '<|end|>' → logprob: -7.349600315093994
    5. '        
' → logprob: -7.974600315093994
    6. '	       ' → logprob: -8.724599838256836
    7. ',' → logprob: -8.849599838256836
    8. 'self' → logprob: -9.349599838256836
    9. '               ' → logprob: -9.724599838256836
    10. '```' → logprob: -9.849599838256836

Token 745: ' if' (ID: 538)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0021039829589426517
    2. ' self' → logprob: -6.877103805541992
    3. '           ' → logprob: -7.377103805541992
    4. '       ' → logprob: -7.752103805541992
    5. '
' → logprob: -11.252103805541992
    6. '	self' → logprob: -14.377103805541992
    7. '```' → logprob: -14.627103805541992
    8. '   ' → logprob: -14.877103805541992
    9. '               ' → logprob: -15.002103805541992
    10. '          ' → logprob: -15.752103805541992

Token 746: ' W' (ID: 486)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.02137540467083454
    2. 'W' → logprob: -4.5213751792907715
    3. ' self' → logprob: -4.6463751792907715
    4. ' W' → logprob: -7.5213751792907715
    5. 'Q' → logprob: -9.14637565612793
    6. '           ' → logprob: -11.02137565612793
    7. '   ' → logprob: -12.64637565612793
    8. '	self' → logprob: -13.27137565612793
    9. 'not' → logprob: -13.27137565612793
    10. ' ' → logprob: -13.77137565612793

Token 747: ' ==' (ID: 951)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.6303597092628479
    2. ' ==' → logprob: -1.7553596496582031
    3. ' >' → logprob: -1.8803596496582031
    4. '==' → logprob: -2.005359649658203
    5. ' <=' → logprob: -5.505359649658203
    6. '<=' → logprob: -5.755359649658203
    7. ' <' → logprob: -9.130359649658203
    8. '<' → logprob: -9.255359649658203
    9. 'and' → logprob: -10.130359649658203
    10. '   ' → logprob: -10.630359649658203

Token 748: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00014072739577386528
    2. ' ' → logprob: -8.875141143798828
    3. '   ' → logprob: -15.375141143798828
    4. '
' → logprob: -16.125141143798828
    5. '-' → logprob: -16.437641143798828
    6. '  ' → logprob: -16.562641143798828
    7. '۰' → logprob: -16.625141143798828
    8. '           ' → logprob: -17.000141143798828
    9. ' -' → logprob: -17.250141143798828
    10. '    ' → logprob: -17.625141143798828

Token 749: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00033784625702537596
    2. ' ' → logprob: -8.000337600708008
    3. '-' → logprob: -14.125337600708008
    4. 'Q' → logprob: -14.375337600708008
    5. '   ' → logprob: -15.437837600708008
    6. '  ' → logprob: -15.687837600708008
    7. ' -' → logprob: -16.000337600708008
    8. 'W' → logprob: -16.312837600708008
    9. ' Q' → logprob: -16.562837600708008
    10. ' W' → logprob: -16.687837600708008

Token 750: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.251963347196579
    2. 'and' → logprob: -1.5019633769989014
    3. '           ' → logprob: -11.25196361541748
    4. ' or' → logprob: -11.37696361541748
    5. ':' → logprob: -12.00196361541748
    6. ':
' → logprob: -13.50196361541748
    7. '       ' → logprob: -14.50196361541748
    8. '	and' → logprob: -14.50196361541748
    9. '   ' → logprob: -14.75196361541748
    10. ' ' → logprob: -15.25196361541748

Token 751: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.00033558503491804004
    2. ' Q' → logprob: -8.000335693359375
    3. '	Q' → logprob: -16.375335693359375
    4. '   ' → logprob: -16.750335693359375
    5. ' ' → logprob: -17.750335693359375
    6. '  ' → logprob: -18.875335693359375
    7. '    ' → logprob: -21.250335693359375
    8. 'W' → logprob: -21.500335693359375
    9. 'q' → logprob: -21.625335693359375
    10. ',Q' → logprob: -21.875335693359375

Token 752: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.038060080260038376
    2. ' ==' → logprob: -3.288060188293457
    3. '0' → logprob: -11.538060188293457
    4. '=' → logprob: -12.288060188293457
    5. '<|end|>' → logprob: -13.538060188293457
    6. ' ' → logprob: -13.788060188293457
    7. '===' → logprob: -14.288060188293457
    8. ')==' → logprob: -14.538060188293457
    9. '==
' → logprob: -14.788060188293457
    10. '()==' → logprob: -16.16305923461914

Token 753: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.611323624383658e-05
    2. ' ' → logprob: -9.625065803527832
    3. '  ' → logprob: -19.50006675720215
    4. '<|end|>' → logprob: -19.87506675720215
    5. '۰' → logprob: -20.00006675720215
    6. '   ' → logprob: -20.12506675720215
    7. '<|end|>' → logprob: -20.25006675720215
    8. '00' → logprob: -21.06256675720215
    9. '=' → logprob: -21.50006675720215
    10. '০' → logprob: -22.00006675720215

Token 754: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. '<|end|>' → logprob: -18.12501335144043
    4. '  ' → logprob: -19.37501335144043
    5. '۰' → logprob: -19.62501335144043
    6. '   ' → logprob: -19.75001335144043
    7. '<|end|>' → logprob: -19.87501335144043
    8. '00' → logprob: -20.62501335144043
    9. '০' → logprob: -21.18751335144043
    10. '
' → logprob: -21.56251335144043

Token 755: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.010976484976708889
    2. ':' → logprob: -4.635976314544678
    3. '           ' → logprob: -7.135976314544678
    4. ':return' → logprob: -7.885976314544678
    5. '               ' → logprob: -10.885976791381836
    6. '       ' → logprob: -11.260976791381836
    7. '):
' → logprob: -12.135976791381836
    8. ':
' → logprob: -13.010976791381836
    9. ' and' → logprob: -13.135976791381836
    10. '   ' → logprob: -13.510976791381836

Token 756: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.018507158383727074
    2. '           ' → logprob: -4.01850700378418
    3. 'return' → logprob: -8.64350700378418
    4. ' return' → logprob: -9.01850700378418
    5. '	           ' → logprob: -10.89350700378418
    6. '		       ' → logprob: -11.76850700378418
    7. '<|end|>' → logprob: -12.01850700378418
    8. ':return' → logprob: -12.51850700378418
    9. '                   ' → logprob: -12.64350700378418
    10. '	       ' → logprob: -12.76850700378418

Token 757: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0016418576706200838
    2. ' return' → logprob: -7.001641750335693
    3. '               ' → logprob: -7.251641750335693
    4. '                   ' → logprob: -11.251642227172852
    5. '           ' → logprob: -12.001642227172852
    6. ':return' → logprob: -14.126642227172852
    7. '	return' → logprob: -14.251642227172852
    8. '
' → logprob: -15.001642227172852
    9. '                       ' → logprob: -16.87664222717285
    10. 'None' → logprob: -17.12664222717285

Token 758: ' end' (ID: 1268)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -4.4656579120783135e-05
    2. '               ' → logprob: -10.500044822692871
    3. ' return' → logprob: -11.000044822692871
    4. '           ' → logprob: -15.125044822692871
    5. 'import' → logprob: -16.750043869018555
    6. '                   ' → logprob: -17.625043869018555
    7. '	return' → logprob: -18.500043869018555
    8. 'Return' → logprob: -20.250043869018555
    9. 'raise' → logprob: -20.500043869018555
    10. ':return' → logprob: -20.750043869018555

Token 759: ' of' (ID: 328)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4484027326107025
    2. 'of' → logprob: -1.823402762413025
    3. '
' → logprob: -2.5734026432037354
    4. ' of' → logprob: -3.0734026432037354
    5. '           ' → logprob: -3.1984026432037354
    6. '               ' → logprob: -3.8234026432037354
    7. 'if' → logprob: -5.0734028816223145
    8. '_of' → logprob: -6.1984028816223145
    9. ' return' → logprob: -6.3234028816223145
    10. '       ' → logprob: -6.8234028816223145

Token 760: ' all' (ID: 722)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.010025215335190296
    2. 'program' → logprob: -5.5100250244140625
    3. ' input' → logprob: -5.8850250244140625
    4. 'file' → logprob: -6.0100250244140625
    5. '_input' → logprob: -8.635025024414062
    6. 'processing' → logprob: -8.635025024414062
    7. 'process' → logprob: -9.635025024414062
    8. 'execution' → logprob: -10.135025024414062
    9. 'inputs' → logprob: -10.260025024414062
    10. 'parse' → logprob: -10.385025024414062

Token 761: ' datasets' (ID: 57711)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.015362059697508812
    2. 'inputs' → logprob: -4.89036226272583
    3. 'program' → logprob: -5.51536226272583
    4. ' input' → logprob: -5.89036226272583
    5. '_input' → logprob: -7.76536226272583
    6. 'processing' → logprob: -8.015361785888672
    7. 'datasets' → logprob: -9.765361785888672
    8. 'data' → logprob: -10.640361785888672
    9. 'tests' → logprob: -11.015361785888672
    10. 'process' → logprob: -11.515361785888672

Token 762: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02520134672522545
    2. '               ' → logprob: -3.9002013206481934
    3. '
' → logprob: -6.025201320648193
    4. 'return' → logprob: -6.275201320648193
    5. '\n' → logprob: -9.275201797485352
    6. ' return' → logprob: -9.400201797485352
    7. '		' → logprob: -9.525201797485352
    8. '                   ' → logprob: -9.775201797485352
    9. ':return' → logprob: -11.400201797485352
    10. '       ' → logprob: -11.775201797485352

Token 763: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4747917056083679
    2. '               ' → logprob: -0.9747917056083679
    3. '                   ' → logprob: -7.474791526794434
    4. '
' → logprob: -9.474791526794434
    5. 'return' → logprob: -10.099791526794434
    6. ' return' → logprob: -11.724791526794434
    7. '            
' → logprob: -12.724791526794434
    8. '                       ' → logprob: -12.724791526794434
    9. '              ' → logprob: -12.974791526794434
    10. '<|end|>' → logprob: -13.349791526794434

Token 764: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.003457991173490882
    2. ' return' → logprob: -5.753458023071289
    3. '               ' → logprob: -8.503458023071289
    4. '                   ' → logprob: -9.753458023071289
    5. '           ' → logprob: -11.378458023071289
    6. '	return' → logprob: -12.003458023071289
    7. '
' → logprob: -14.253458023071289
    8. ':return' → logprob: -14.503458023071289
    9. '   ' → logprob: -15.503458023071289
    10. '                       ' → logprob: -15.628458023071289

Token 765: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.13569463789463043
    2. ' None' → logprob: -2.260694742202759
    3. '
' → logprob: -4.51069450378418
    4. '""' → logprob: -4.88569450378418
    5. '"' → logprob: -5.63569450378418
    6. '''' → logprob: -8.88569450378418
    7. '"\' → logprob: -9.63569450378418
    8. '
' → logprob: -10.01069450378418
    9. '''
' → logprob: -10.01069450378418
    10. ' ' → logprob: -10.38569450378418

Token 766: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4750896990299225
    2. '           ' → logprob: -0.9750896692276001
    3. '        
' → logprob: -7.8500895500183105
    4. '       ' → logprob: -8.475090026855469
    5. '            
' → logprob: -8.475090026855469
    6. '\n' → logprob: -9.600090026855469
    7. '		' → logprob: -10.225090026855469
    8. '    
' → logprob: -10.350090026855469
    9. '
' → logprob: -11.100090026855469
    10. '

' → logprob: -11.225090026855469

Token 767: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003383272560313344
    2. '
' → logprob: -5.753383159637451
    3. '       ' → logprob: -9.25338363647461
    4. 'self' → logprob: -9.75338363647461
    5. '            
' → logprob: -10.75338363647461
    6. '        
' → logprob: -11.25338363647461
    7. '		' → logprob: -12.50338363647461
    8. '               ' → logprob: -12.62838363647461
    9. '	       ' → logprob: -13.00338363647461
    10. ' self' → logprob: -13.25338363647461

Token 768: ' self' (ID: 1051)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12900377810001373
    2. '       ' → logprob: -2.5040037631988525
    3. 'self' (adapté à ' self') → logprob: -3.2540037631988525
    4. ' self' → logprob: -7.379004001617432
    5. '
' → logprob: -11.504003524780273
    6. '   ' → logprob: -11.879003524780273
    7. '               ' → logprob: -12.254003524780273
    8. '          ' → logprob: -13.254003524780273
    9. '		' → logprob: -13.379003524780273
    10. '         ' → logprob: -14.129003524780273

Token 769: '.current' (ID: 8357)
  Prédit: '.current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.current' → logprob: -0.000341541541274637
    2. 'current' → logprob: -8.000341415405273
    3. '.' → logprob: -12.875341415405273
    4. ' current' → logprob: -13.500341415405273
    5. '
' → logprob: -14.375341415405273
    6. ' .' → logprob: -14.500341415405273
    7. '           ' → logprob: -14.625341415405273
    8. '   ' → logprob: -15.125341415405273
    9. '	current' → logprob: -16.000341415405273
    10. '       ' → logprob: -16.500341415405273

Token 770: '_ob' (ID: 46416)
  Prédit: '_ob'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ob' → logprob: -1.7432603272027336e-06
    2. '
' → logprob: -14.750001907348633
    3. 'ob' → logprob: -15.000001907348633
    4. 'Observation' → logprob: -15.125001907348633
    5. '_' → logprob: -15.625001907348633
    6. '_obs' → logprob: -15.875001907348633
    7. '._' → logprob: -16.750001907348633
    8. '\' → logprob: -16.750001907348633
    9. '_f' → logprob: -17.125001907348633
    10. '_space' → logprob: -17.250001907348633

Token 771: 'servation' (ID: 27602)
  Prédit: 'servation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'servation' → logprob: -0.0011142584262415767
    2. 'ervation' → logprob: -7.001114368438721
    3. 'serv' → logprob: -9.501113891601562
    4. 'server' → logprob: -10.376113891601562
    5. '   ' → logprob: -10.751113891601562
    6. 'versation' → logprob: -10.751113891601562
    7. 's' → logprob: -11.251113891601562
    8. '       ' → logprob: -11.501113891601562
    9. '           ' → logprob: -11.876113891601562
    10. '
' → logprob: -11.876113891601562

Token 772: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2014133334159851
    2. ' =' → logprob: -1.7014133930206299
    3. ' ' → logprob: -17.451414108276367
    4. '.=' → logprob: -18.576414108276367
    5. '＝' → logprob: -18.576414108276367
    6. '   ' → logprob: -18.826414108276367
    7. '=
' → logprob: -19.326414108276367
    8. '=create' → logprob: -19.326414108276367
    9. '.' → logprob: -19.576414108276367
    10. '=

' → logprob: -19.951414108276367

Token 773: ' Observation' (ID: 143762)
  Prédit: 'Observation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Observation' → logprob: -0.061968810856342316
    2. ' Observation' → logprob: -2.8119688034057617
    3. 'Observ' → logprob: -14.186968803405762
    4. 'ob' → logprob: -16.436969757080078
    5. 'Observable' → logprob: -16.561969757080078
    6. '   ' → logprob: -16.561969757080078
    7. ' observation' → logprob: -17.061969757080078
    8. 'Obs' → logprob: -17.561969757080078
    9. 'Ob' → logprob: -17.686969757080078
    10. ' Observ' → logprob: -18.061969757080078

Token 774: 'Record' (ID: 6721)
  Prédit: 'Record'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Record' → logprob: -1.9361264946837764e-07
    2. 'record' → logprob: -15.75
    3. '(' → logprob: -17.625
    4. 'Observation' → logprob: -17.625
    5. '_record' → logprob: -19.375
    6. '=' → logprob: -20.125
    7. '
' → logprob: -20.25
    8. '<Record' → logprob: -20.375
    9. '   ' → logprob: -20.875
    10. 'Request' → logprob: -21.125

Token 775: '(F' (ID: 12044)
  Prédit: '(F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(F' → logprob: -0.0013821403263136744
    2. 'Fence' → logprob: -6.626382350921631
    3. 'F' → logprob: -10.126381874084473
    4. '(
' → logprob: -12.001381874084473
    5. '(f' → logprob: -12.126381874084473
    6. ' Fence' → logprob: -13.126381874084473
    7. '(' → logprob: -13.501381874084473
    8. '```' → logprob: -14.876381874084473
    9. '   ' → logprob: -15.501381874084473
    10. 'f' → logprob: -15.751381874084473

Token 776: 'ence' (ID: 1082)
  Prédit: 'ence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ence' → logprob: -2.5776860184123507e-06
    2. 'Fence' → logprob: -13.00000286102295
    3. 'ance' → logprob: -16.500001907348633
    4. 'e' → logprob: -16.500001907348633
    5. 'ense' → logprob: -16.625001907348633
    6. ' Fence' → logprob: -17.500001907348633
    7. 'ENCE' → logprob: -18.000001907348633
    8. '
' → logprob: -18.375001907348633
    9. ' fence' → logprob: -18.750001907348633
    10. 'enced' → logprob: -19.250001907348633

Token 777: '(W' (ID: 26031)
  Prédit: '(W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -1.9266199160483666e-05
    2. 'W' → logprob: -10.875019073486328
    3. '(' → logprob: -16.625019073486328
    4. ' W' → logprob: -17.000019073486328
    5. ')' → logprob: -17.250019073486328
    6. ')(' → logprob: -17.500019073486328
    7. '(
' → logprob: -17.750019073486328
    8. ' (' → logprob: -17.750019073486328
    9. '(w' → logprob: -18.375019073486328
    10. '((' → logprob: -18.375019073486328

Token 778: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.2519790232181549
    2. '))
' → logprob: -1.5019789934158325
    3. '))

' → logprob: -11.001978874206543
    4. '       ' → logprob: -11.376978874206543
    5. '           ' → logprob: -12.001978874206543
    6. ' ))' → logprob: -12.376978874206543
    7. '))
' → logprob: -12.501978874206543
    8. ' ))
' → logprob: -13.001978874206543
    9. ')' → logprob: -13.626978874206543
    10. '));' → logprob: -14.001978874206543

Token 779: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06249728798866272
    2. 'return' → logprob: -2.81249737739563
    3. ' return' → logprob: -8.31249713897705
    4. '		' → logprob: -8.93749713897705
    5. '       ' → logprob: -9.06249713897705
    6. '	return' → logprob: -11.18749713897705
    7. '   ' → logprob: -11.43749713897705
    8. '               ' → logprob: -11.93749713897705
    9. '	       ' → logprob: -12.93749713897705
    10. '		   ' → logprob: -14.43749713897705

Token 780: ' self' (ID: 1051)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.018222520127892494
    2. '           ' → logprob: -4.018222332000732
    3. ' return' → logprob: -9.64322280883789
    4. '	return' → logprob: -13.01822280883789
    5. 'self' (adapté à ' self') → logprob: -13.51822280883789
    6. '               ' → logprob: -13.76822280883789
    7. '       ' → logprob: -14.14322280883789
    8. '		' → logprob: -14.64322280883789
    9. '                   ' → logprob: -14.76822280883789
    10. '   ' → logprob: -14.76822280883789

Token 781: '.remaining' (ID: 173829)
  Prédit: '.current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.current' → logprob: -0.5718316435813904
    2. 'return' → logprob: -1.9468317031860352
    3. 'current' → logprob: -2.446831703186035
    4. 'output' → logprob: -2.821831703186035
    5. '.remaining' → logprob: -2.821831703186035
    6. '.output' → logprob: -4.196831703186035
    7. 'buffer' → logprob: -4.571831703186035
    8. 'remaining' → logprob: -4.696831703186035
    9. 'outputs' → logprob: -4.946831703186035
    10. '.pending' → logprob: -5.071831703186035

Token 782: '_queries' (ID: 172558)
  Prédit: '_queries'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_queries' → logprob: -0.1413358598947525
    2. '=' → logprob: -2.266335964202881
    3. '_questions' → logprob: -5.016335964202881
    4. ' =' → logprob: -5.016335964202881
    5. '_requests' → logprob: -5.141335964202881
    6. '_lines' → logprob: -6.141335964202881
    7. '_commands' → logprob: -6.766335964202881
    8. '_q' → logprob: -6.891335964202881
    9. 'queries' → logprob: -7.266335964202881
    10. 'Q' → logprob: -7.266335964202881

Token 783: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47408726811408997
    2. '=' → logprob: -0.9740872383117676
    3. ' -=' → logprob: -11.599087715148926
    4. '-=' → logprob: -13.849087715148926
    5. ' ' → logprob: -16.47408676147461
    6. ' +=' → logprob: -17.34908676147461
    7. '＝' → logprob: -17.97408676147461
    8. '=int' → logprob: -18.22408676147461
    9. '=q' → logprob: -18.22408676147461
    10. '+=' → logprob: -18.72408676147461

Token 784: ' Q' (ID: 1486)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.00023107275774236768
    2. ' Q' → logprob: -8.37523078918457
    3. 'int' → logprob: -14.87523078918457
    4. '	Q' → logprob: -16.25023078918457
    5. '   ' → logprob: -18.12523078918457
    6. 'q' → logprob: -19.50023078918457
    7. '<Q' → logprob: -20.00023078918457
    8. 'Qs' → logprob: -20.50023078918457
    9. '_Q' → logprob: -20.87523078918457
    10. ' int' → logprob: -21.00023078918457

Token 785: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006787012796849012
    2. '       ' → logprob: -5.131786823272705
    3. '
' → logprob: -7.631786823272705
    4. 'return' → logprob: -8.006787300109863
    5. ' return' → logprob: -11.381787300109863
    6. '               ' → logprob: -11.506787300109863
    7. '   ' → logprob: -11.881787300109863
    8. ';' → logprob: -12.881787300109863
    9. '                   ' → logprob: -13.506787300109863
    10. 'elif' → logprob: -13.506787300109863

Token 786: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007815409451723099
    2. '       ' → logprob: -4.882815361022949
    3. '		' → logprob: -9.38281536102295
    4. 'return' → logprob: -9.88281536102295
    5. '   ' → logprob: -10.50781536102295
    6. '	       ' → logprob: -10.63281536102295
    7. '	   ' → logprob: -11.50781536102295
    8. '	' → logprob: -12.63281536102295
    9. '	return' → logprob: -12.63281536102295
    10. '		   ' → logprob: -13.00781536102295

Token 787: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.314242422580719
    2. '           ' → logprob: -1.3142423629760742
    3. ' return' → logprob: -6.939242362976074
    4. 'self' → logprob: -12.439242362976074
    5. '       ' → logprob: -12.689242362976074
    6. '	return' → logprob: -13.564242362976074
    7. '
' → logprob: -13.689242362976074
    8. '   ' → logprob: -14.064242362976074
    9. '		' → logprob: -15.064242362976074
    10. '               ' → logprob: -15.189242362976074

Token 788: ' "' (ID: 392)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '""' → logprob: -0.1803838312625885
    2. '''' → logprob: -1.9303838014602661
    3. '"' → logprob: -3.9303839206695557
    4. ''' → logprob: -8.180383682250977
    5. 'None' → logprob: -11.055383682250977
    6. ' ""' → logprob: -12.180383682250977
    7. '"""' → logprob: -12.555383682250977
    8. '''
' → logprob: -13.305383682250977
    9. '<|end|>' → logprob: -13.430383682250977
    10. '"",' → logprob: -13.555383682250977

Token 789: 'NEW' (ID: 33569)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '""' → logprob: -0.3342505991458893
    2. '"' → logprob: -1.334250569343567
    3. '")' → logprob: -4.959250450134277
    4. '''' → logprob: -5.834250450134277
    5. 'OK' → logprob: -5.959250450134277
    6. '\n' → logprob: -6.084250450134277
    7. '"""' → logprob: -6.459250450134277
    8. '"\' → logprob: -6.584250450134277
    9. '"#' → logprob: -7.709250450134277
    10. ''' → logprob: -8.084250450134277

Token 790: '"' (ID: 1)
  Prédit: 'DATA'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DATA' → logprob: -0.23869356513023376
    2. ' DATA' → logprob: -2.9886934757232666
    3. 'OBS' → logprob: -3.1136934757232666
    4. '_OB' → logprob: -3.2386934757232666
    5. '"' → logprob: -3.8636934757232666
    6. ' OBS' → logprob: -4.363693714141846
    7. '_DATA' → logprob: -4.613693714141846
    8. 'dataset' → logprob: -5.363693714141846
    9. 'LINE' → logprob: -5.488693714141846
    10. 'INPUT' → logprob: -5.488693714141846

Token 791: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 792: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 793: ' special' (ID: 3582)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0667538195848465
    2. 'elif' → logprob: -3.44175386428833
    3. 'None' → logprob: -4.56675386428833
    4. '\n' → logprob: -4.56675386428833
    5. '        
' → logprob: -6.06675386428833
    6. '<|end|>' → logprob: -6.31675386428833
    7. 'newline' → logprob: -6.56675386428833
    8. '       ' → logprob: -6.81675386428833
    9. '```' → logprob: -6.94175386428833
    10. 'else' → logprob: -7.31675386428833

Token 794: ' signal' (ID: 12884)
  Prédit: 'token'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'token' → logprob: -0.105736643075943
    2. '_token' → logprob: -3.35573673248291
    3. '<|end|>' → logprob: -3.60573673248291
    4. ' token' → logprob: -4.48073673248291
    5. '<|end|>' → logprob: -4.48073673248291
    6. 'marker' → logprob: -5.10573673248291
    7. '_marker' → logprob: -5.60573673248291
    8. '-token' → logprob: -5.73073673248291
    9. 'indicator' → logprob: -7.60573673248291
    10. ' marker' → logprob: -7.85573673248291

Token 795: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 796: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005665563978254795
    2. '   ' → logprob: -5.5056657791137695
    3. 'elif' → logprob: -6.8806657791137695
    4. '	' → logprob: -8.25566577911377
    5. '<|end|>' → logprob: -9.00566577911377
    6. '.' → logprob: -9.63066577911377
    7. '	   ' → logprob: -11.00566577911377
    8. ')' → logprob: -11.13066577911377
    9. '	elif' → logprob: -11.13066577911377
    10. '```' → logprob: -11.25566577911377

Token 797: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2329217493534088
    2. 'elif' (adapté à ' elif') → logprob: -1.6079217195510864
    3. '   ' → logprob: -5.607921600341797
    4. 'if' → logprob: -5.857921600341797
    5. ' elif' → logprob: -7.482921600341797
    6. '```' → logprob: -9.107921600341797
    7. ' if' → logprob: -9.607921600341797
    8. 'else' → logprob: -9.857921600341797
    9. '	elif' → logprob: -9.982921600341797
    10. '	' → logprob: -10.482921600341797

Token 798: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -1.380096673965454
    2. 'self' → logprob: -1.380096673965454
    3. ' parts' → logprob: -1.630096673965454
    4. 'len' → logprob: -1.880096673965454
    5. 'parts' → logprob: -2.505096673965454
    6. ' len' → logprob: -2.755096673965454
    7. '       ' → logprob: -6.380096435546875
    8. '   ' → logprob: -7.255096435546875
    9. 'line' → logprob: -8.255096435546875
    10. ' line' → logprob: -9.130096435546875

Token 799: '.current' (ID: 8357)
  Prédit: '.current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.current' → logprob: -0.1789930760860443
    2. 'current' → logprob: -2.178992986679077
    3. '.parts' → logprob: -3.928992986679077
    4. '.' → logprob: -4.178993225097656
    5. ' current' → logprob: -5.053993225097656
    6. '.remaining' → logprob: -5.678993225097656
    7. 'parts' → logprob: -6.178993225097656
    8. ' and' → logprob: -7.053993225097656
    9. 'def' → logprob: -7.053993225097656
    10. 'and' → logprob: -7.428993225097656

Token 800: '_ob' (ID: 46416)
  Prédit: '_ob'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ob' → logprob: -0.004496939014643431
    2. '._' → logprob: -5.504497051239014
    3. '_line' → logprob: -8.129496574401855
    4. '.' → logprob: -10.254496574401855
    5. 'ob' → logprob: -10.629496574401855
    6. 'Observation' → logprob: -11.254496574401855
    7. '_' → logprob: -11.379496574401855
    8. 'line' → logprob: -11.379496574401855
    9. ' ' → logprob: -12.629496574401855
    10. '_instruction' → logprob: -13.254496574401855

Token 801: 'servation' (ID: 27602)
  Prédit: 'servation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'servation' → logprob: -0.006974659860134125
    2. 'serv' → logprob: -5.631974697113037
    3. 'ervation' → logprob: -5.881974697113037
    4. 's' → logprob: -8.381974220275879
    5. 'server' → logprob: -8.881974220275879
    6. 'versation' → logprob: -9.506974220275879
    7. 'serve' → logprob: -9.631974220275879
    8. 'erv' → logprob: -10.256974220275879
    9. 'served' → logprob: -11.256974220275879
    10. 'service' → logprob: -12.506974220275879

Token 802: ' is' (ID: 382)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.37357449531555176
    2. ' is' → logprob: -1.4985744953155518
    3. 'and' → logprob: -2.4985744953155518
    4. 'is' → logprob: -5.123574256896973
    5. '       ' → logprob: -9.998574256896973
    6. '   ' → logprob: -10.623574256896973
    7. '           ' → logprob: -11.248574256896973
    8. '	and' → logprob: -11.873574256896973
    9. '	is' → logprob: -11.873574256896973
    10. '        ' → logprob: -12.373574256896973

Token 803: ' None' (ID: 4662)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.030385317280888557
    2. ' not' → logprob: -3.5303852558135986
    3. 'None' → logprob: -7.655385494232178
    4. '           ' → logprob: -8.90538501739502
    5. '       ' → logprob: -10.90538501739502
    6. '   ' → logprob: -12.90538501739502
    7. ' None' → logprob: -13.03038501739502
    8. '               ' → logprob: -14.40538501739502
    9. '	not' → logprob: -14.78038501739502
    10. '    ' → logprob: -15.15538501739502

Token 804: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.45616504549980164
    2. '       ' → logprob: -1.706165075302124
    3. 'and' → logprob: -2.706165075302124
    4. ':' → logprob: -2.956165075302124
    5. ':
' → logprob: -3.331165075302124
    6. ' or' → logprob: -3.831165075302124
    7. '           ' → logprob: -4.956164836883545
    8. '   ' → logprob: -7.081164836883545
    9. ' is' → logprob: -9.081165313720703
    10. ':return' → logprob: -9.331165313720703

Token 805: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4989083707332611
    2. '       ' → logprob: -0.9989084005355835
    3. 'return' → logprob: -3.998908281326294
    4. ' return' → logprob: -5.498908519744873
    5. '   ' → logprob: -6.748908519744873
    6. '	       ' → logprob: -8.248908042907715
    7. ' ' → logprob: -8.748908042907715
    8. '		' → logprob: -8.873908042907715
    9. '	   ' → logprob: -9.248908042907715
    10. '               ' → logprob: -9.373908042907715

Token 806: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.006823116447776556
    2. ' return' → logprob: -5.2568230628967285
    3. '           ' → logprob: -6.5068230628967285
    4. '       ' → logprob: -9.381823539733887
    5. 'raise' → logprob: -11.881823539733887
    6. '
' → logprob: -13.756823539733887
    7. '   ' → logprob: -13.756823539733887
    8. '	return' → logprob: -14.506823539733887
    9. '               ' → logprob: -15.381823539733887
    10. ' ' → logprob: -15.631823539733887

Token 807: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0007717476109974086
    2. ' None' → logprob: -7.750771522521973
    3. '""' → logprob: -8.625771522521973
    4. '"' → logprob: -9.375771522521973
    5. '
' → logprob: -9.500771522521973
    6. '"\' → logprob: -14.500771522521973
    7. '(None' → logprob: -14.750771522521973
    8. '''' → logprob: -15.000771522521973
    9. '_None' → logprob: -15.750771522521973
    10. '   ' → logprob: -16.37577247619629

Token 808: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0032793101854622364
    2. '        
' → logprob: -6.128279209136963
    3. '
' → logprob: -7.753279209136963
    4. 'elif' → logprob: -8.253279685974121
    5. '   ' → logprob: -9.253279685974121
    6. ' if' → logprob: -9.503279685974121
    7. ' elif' → logprob: -9.628279685974121
    8. ' ' → logprob: -10.128279685974121
    9. ' and' → logprob: -10.378279685974121
    10. '    
' → logprob: -11.378279685974121

Token 809: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02704664319753647
    2. '   ' → logprob: -3.7770466804504395
    3. 'elif' → logprob: -6.2770466804504395
    4. ' elif' → logprob: -6.6520466804504395
    5. ' if' → logprob: -8.402046203613281
    6. '        
' → logprob: -9.402046203613281
    7. '	' → logprob: -9.527046203613281
    8. '    
' → logprob: -9.777046203613281
    9. ' ' → logprob: -9.777046203613281
    10. '    ' → logprob: -10.277046203613281

Token 810: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007250106893479824
    2. 'if' → logprob: -5.3822503089904785
    3. 'elif' (adapté à ' elif') → logprob: -6.6322503089904785
    4. '   ' → logprob: -7.1322503089904785
    5. ' if' → logprob: -7.8822503089904785
    6. '        
' → logprob: -10.13224983215332
    7. '
' → logprob: -10.25724983215332
    8. ' elif' → logprob: -10.88224983215332
    9. '	' → logprob: -11.25724983215332
    10. 'else' → logprob: -11.63224983215332

Token 811: ' parts' (ID: 7881)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.045244697481393814
    2. ' parts' → logprob: -3.2952446937561035
    3. '       ' → logprob: -5.1702446937561035
    4. 'len' → logprob: -7.1702446937561035
    5. 'line' → logprob: -7.9202446937561035
    6. '   ' → logprob: -8.295245170593262
    7. ' ' → logprob: -11.170245170593262
    8. '     ' → logprob: -11.170245170593262
    9. '(parts' → logprob: -11.170245170593262
    10. ' len' → logprob: -11.295245170593262

Token 812: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.005586259998381138
    2. 'and' → logprob: -5.38058614730835
    3. ' and' → logprob: -7.00558614730835
    4. '==' → logprob: -10.380586624145508
    5. ':' → logprob: -11.630586624145508
    6. '       ' → logprob: -12.005586624145508
    7. '   ' → logprob: -12.630586624145508
    8. '[
' → logprob: -12.755586624145508
    9. '=' → logprob: -13.755586624145508
    10. 'def' → logprob: -13.880586624145508

Token 813: '0' (ID: 15)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.12723423540592194
    2. '0' → logprob: -2.1272342205047607
    3. '1' → logprob: -8.75223445892334
    4. 'and' → logprob: -10.37723445892334
    5. ' ' → logprob: -10.87723445892334
    6. '   ' → logprob: -10.87723445892334
    7. '==' → logprob: -11.25223445892334
    8. ' and' → logprob: -11.25223445892334
    9. '=' → logprob: -11.62723445892334
    10. '
' → logprob: -11.75223445892334

Token 814: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4776473641395569
    2. '==' → logprob: -0.9776473641395569
    3. '[' → logprob: -6.477647304534912
    4. '=='' → logprob: -7.102647304534912
    5. ']==' → logprob: -7.727647304534912
    6. ')' → logprob: -8.85264778137207
    7. ']' → logprob: -9.22764778137207
    8. '=="' → logprob: -9.47764778137207
    9. '()==' → logprob: -9.47764778137207
    10. '=' → logprob: -9.97764778137207

Token 815: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1777324080467224
    2. ' ==' → logprob: -1.9277324676513672
    3. '[' → logprob: -4.427732467651367
    4. '=='' → logprob: -5.677732467651367
    5. '=="' → logprob: -6.427732467651367
    6. '==
' → logprob: -8.927732467651367
    7. '===' → logprob: -10.177732467651367
    8. '   ' → logprob: -10.302732467651367
    9. '()==' → logprob: -10.802732467651367
    10. '[]' → logprob: -11.052732467651367

Token 816: ' '' (ID: 461)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -1.0889195203781128
    2. ''s' → logprob: -1.0889195203781128
    3. '"s' → logprob: -1.8389195203781128
    4. '"S' → logprob: -2.5889196395874023
    5. ''S' → logprob: -2.9639196395874023
    6. ''' → logprob: -3.9639196395874023
    7. '"C' → logprob: -5.463919639587402
    8. '"I' → logprob: -5.963919639587402
    9. '"L' → logprob: -5.963919639587402
    10. '"A' → logprob: -6.338919639587402

Token 817: 's' (ID: 82)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.8451555371284485
    2. 's' → logprob: -1.5951554775238037
    3. 'sleep' → logprob: -1.7201554775238037
    4. '+' → logprob: -3.2201554775238037
    5. 'C' → logprob: -3.9701554775238037
    6. 'Z' → logprob: -4.095155715942383
    7. 'W' → logprob: -4.095155715942383
    8. 'try' → logprob: -4.220155715942383
    9. 'd' → logprob: -5.220155715942383
    10. 'A' → logprob: -5.470155715942383

Token 818: '':
' (ID: 7669)
  Prédit: 'leep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'leep' → logprob: -0.0009227732080034912
    2. 'le' → logprob: -7.875922679901123
    3. 'eep' → logprob: -8.125923156738281
    4. 'l' → logprob: -8.875923156738281
    5. 'LEEP' → logprob: -10.125923156738281
    6. 'lee' → logprob: -10.500923156738281
    7. 'lep' → logprob: -11.125923156738281
    8. 'e' → logprob: -11.875923156738281
    9. 'sleep' → logprob: -12.625923156738281
    10. '')' → logprob: -12.750923156738281

Token 819: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41738685965538025
    2. ' and' → logprob: -1.1673868894577026
    3. ':' → logprob: -3.917386770248413
    4. ':
' → logprob: -5.417387008666992
    5. '   ' → logprob: -5.792387008666992
    6. '           ' → logprob: -6.792387008666992
    7. '        ' → logprob: -8.667387008666992
    8. '    ' → logprob: -8.792387008666992
    9. '     ' → logprob: -8.792387008666992
    10. ' ' → logprob: -8.917387008666992

Token 820: ' _,' (ID: 18042)
  Prédit: 'cat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cat' → logprob: -0.21619842946529388
    2. ' cat' → logprob: -2.216198444366455
    3. '       ' → logprob: -2.466198444366455
    4. 'return' → logprob: -8.216197967529297
    5. '_cat' → logprob: -9.466197967529297
    6. 'position' → logprob: -10.091197967529297
    7. 'if' → logprob: -10.716197967529297
    8. '           ' → logprob: -11.091197967529297
    9. 'id' → logprob: -11.341197967529297
    10. '   ' → logprob: -11.716197967529297

Token 821: ' cat' (ID: 9059)
  Prédit: 'cat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cat' → logprob: -0.006838868372142315
    2. ' cat' → logprob: -5.006838798522949
    3. 'cid' → logprob: -9.25683879852295
    4. 'id' → logprob: -11.25683879852295
    5. 'c' → logprob: -11.88183879852295
    6. '   ' → logprob: -12.75683879852295
    7. '_cat' → logprob: -13.63183879852295
    8. 'k' → logprob: -14.25683879852295
    9. 'cats' → logprob: -14.25683879852295
    10. 'x' → logprob: -14.63183879852295

Token 822: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.0013282144209370017
    2. 'id' → logprob: -6.626327991485596
    3. '_' → logprob: -13.751328468322754
    4. ',' → logprob: -15.126328468322754
    5. 'Id' → logprob: -15.501328468322754
    6. 'idth' → logprob: -15.501328468322754
    7. '_i' → logprob: -16.001327514648438
    8. 'ID' → logprob: -16.376327514648438
    9. ' ' → logprob: -16.626327514648438
    10. '  ' → logprob: -16.751327514648438

Token 823: '_str' (ID: 6182)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008189192740246654
    2. 'str' → logprob: -7.875818729400635
    3. '_str' → logprob: -7.875818729400635
    4. 's' → logprob: -10.625819206237793
    5. '=' → logprob: -10.750819206237793
    6. '_,' → logprob: -11.875819206237793
    7. ' ,' → logprob: -12.500819206237793
    8. '_s' → logprob: -14.000819206237793
    9. ',s' → logprob: -14.125819206237793
    10. ',str' → logprob: -15.750819206237793

Token 824: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0023174879606813192
    2. '=' → logprob: -6.502317428588867
    3. ' =' → logprob: -7.752317428588867
    4. ' ,' → logprob: -7.877317428588867
    5. ' cat' → logprob: -12.377317428588867
    6. 'cat' → logprob: -14.502317428588867
    7. ' ' → logprob: -15.627317428588867
    8. '   ' → logprob: -15.627317428588867
    9. '           ' → logprob: -15.627317428588867
    10. '    ' → logprob: -15.627317428588867

Token 825: ' cat' (ID: 9059)
  Prédit: 'cat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cat' → logprob: -0.00856504775583744
    2. 'width' → logprob: -4.8835649490356445
    3. ' cat' → logprob: -7.0085649490356445
    4. ' width' → logprob: -10.883564949035645
    5. '   ' → logprob: -11.383564949035645
    6. 'w' → logprob: -12.258564949035645
    7. 'cats' → logprob: -12.508564949035645
    8. '       ' → logprob: -13.258564949035645
    9. '           ' → logprob: -13.383564949035645
    10. 'c' → logprob: -13.633564949035645

Token 826: '_width' (ID: 17595)
  Prédit: '_width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_width' → logprob: -0.638715922832489
    2. '_id' → logprob: -0.763715922832489
    3. '_' → logprob: -5.138715744018555
    4. 'width' → logprob: -9.138715744018555
    5. ''_' → logprob: -10.763715744018555
    6. ' _' → logprob: -11.013715744018555
    7. 'Width' → logprob: -11.013715744018555
    8. '_size' → logprob: -11.138715744018555
    9. 'id' → logprob: -11.388715744018555
    10. '_w' → logprob: -11.513715744018555

Token 827: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.10967199504375458
    2. 'str' → logprob: -2.3596720695495605
    3. ' =' → logprob: -5.3596720695495605
    4. '=' → logprob: -5.3596720695495605
    5. ',' → logprob: -11.984671592712402
    6. 'Str' → logprob: -12.109671592712402
    7. 's' → logprob: -12.859671592712402
    8. '=str' → logprob: -13.984671592712402
    9. 'string' → logprob: -15.484671592712402
    10. '	str' → logprob: -16.98467254638672

Token 828: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519674599170685
    2. '=' → logprob: -1.501967430114746
    3. '       ' → logprob: -11.001967430114746
    4. ',' → logprob: -11.876967430114746
    5. '           ' → logprob: -12.126967430114746
    6. '   ' → logprob: -12.501967430114746
    7. ' ' → logprob: -13.126967430114746
    8. '    ' → logprob: -13.876967430114746
    9. '        ' → logprob: -14.001967430114746
    10. '            ' → logprob: -15.001967430114746

Token 829: ' parts' (ID: 7881)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.005419326946139336
    2. ' parts' → logprob: -5.2554192543029785
    3. 'line' → logprob: -8.630419731140137
    4. '   ' → logprob: -12.130419731140137
    5. '(parts' → logprob: -14.880419731140137
    6. 'lines' → logprob: -15.005419731140137
    7. ' line' → logprob: -15.130419731140137
    8. 'points' → logprob: -15.880419731140137
    9. 'part' → logprob: -16.13041877746582
    10. '       ' → logprob: -16.25541877746582

Token 830: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1567380279302597
    2. '       ' → logprob: -2.656738042831421
    3. ' cat' → logprob: -3.531738042831421
    4. '
' → logprob: -4.281737804412842
    5. ',' → logprob: -4.781737804412842
    6. '	       ' → logprob: -5.281737804412842
    7. '            
' → logprob: -5.531737804412842
    8. '		' → logprob: -5.656737804412842
    9. '               ' → logprob: -6.281737804412842
    10. '        
' → logprob: -6.656737804412842

Token 831: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14920757710933685
    2. '       ' → logprob: -2.649207592010498
    3. ' cat' → logprob: -2.899207592010498
    4. 'cat' → logprob: -4.399207592010498
    5. 'return' → logprob: -8.14920711517334
    6. ' return' → logprob: -9.02420711517334
    7. '   ' → logprob: -9.64920711517334
    8. '	       ' → logprob: -10.39920711517334
    9. '	   ' → logprob: -12.02420711517334
    10. 'position' → logprob: -12.02420711517334

Token 832: ' cat' (ID: 9059)
  Prédit: 'cat'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cat' (adapté à ' cat') → logprob: -0.05793723091483116
    2. ' cat' → logprob: -3.9329371452331543
    3. 'return' → logprob: -4.057937145233154
    4. '           ' → logprob: -4.182937145233154
    5. '       ' → logprob: -5.557937145233154
    6. ' return' → logprob: -8.307937622070312
    7. 'position' → logprob: -10.557937622070312
    8. 'id' → logprob: -11.432937622070312
    9. 'pos' → logprob: -12.057937622070312
    10. 'self' → logprob: -12.182937622070312

Token 833: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -5.145118848304264e-05
    2. '_' → logprob: -10.125051498413086
    3. 'id' → logprob: -11.625051498413086
    4. '_width' → logprob: -14.500051498413086
    5. '_ids' → logprob: -15.000051498413086
    6. '=_' → logprob: -15.125051498413086
    7. '_idx' → logprob: -15.625051498413086
    8. '=' → logprob: -16.000051498413086
    9. '_i' → logprob: -16.000051498413086
    10. '_
' → logprob: -16.000051498413086

Token 834: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.313503235578537
    2. ' =' → logprob: -1.3135032653808594
    3. ',' → logprob: -8.68850326538086
    4. '=int' → logprob: -9.56350326538086
    5. ' ' → logprob: -13.93850326538086
    6. ' ,' → logprob: -14.93850326538086
    7. '_id' → logprob: -15.06350326538086
    8. 'int' → logprob: -15.18850326538086
    9. '  ' → logprob: -15.68850326538086
    10. '.' → logprob: -16.06350326538086

Token 835: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.9361264946837764e-07
    2. ' int' → logprob: -15.75
    3. '   ' → logprob: -22.75
    4. '[int' → logprob: -24.875
    5. '=int' → logprob: -25.25
    6. '  ' → logprob: -25.875
    7. '<int' → logprob: -26.125
    8. '	int' → logprob: -26.875
    9. '    ' → logprob: -27.875
    10. ' ' → logprob: -28.125

Token 836: '(cat' (ID: 107890)
  Prédit: '(cat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cat' → logprob: -4.572941179503687e-05
    2. 'cat' → logprob: -10.000045776367188
    3. ' cat' → logprob: -15.500045776367188
    4. '_cat' → logprob: -19.625045776367188
    5. '(' → logprob: -20.250045776367188
    6. '.cat' → logprob: -20.500045776367188
    7. 'Cat' → logprob: -20.625045776367188
    8. '猫' → logprob: -21.500045776367188
    9. '-cat' → logprob: -21.750045776367188
    10. '(
' → logprob: -22.375045776367188

Token 837: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -3.2020991056924686e-05
    2. '_cat' → logprob: -11.125032424926758
    3. 'cat' → logprob: -11.250032424926758
    4. 'id' → logprob: -12.750032424926758
    5. '(cat' → logprob: -14.250032424926758
    6. ' cat' → logprob: -14.875032424926758
    7. '_' → logprob: -16.625032424926758
    8. 'Cat' → logprob: -17.125032424926758
    9. ' _' → logprob: -17.250032424926758
    10. '   ' → logprob: -17.375032424926758

Token 838: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.09381718188524246
    2. ')' → logprob: -2.7188172340393066
    3. 'str' → logprob: -4.218817234039307
    4. '_id' → logprob: -5.468817234039307
    5. '   ' → logprob: -6.468817234039307
    6. '(cat' → logprob: -6.593817234039307
    7. '[' → logprob: -7.468817234039307
    8. 'cat' → logprob: -8.468816757202148
    9. '  ' → logprob: -8.718816757202148
    10. ' ' → logprob: -8.843816757202148

Token 839: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.313296914100647
    2. ')' → logprob: -1.313296914100647
    3. '           ' → logprob: -11.188297271728516
    4. ')
' → logprob: -11.813297271728516
    5. ')

' → logprob: -12.438297271728516
    6. '),' → logprob: -12.563297271728516
    7. ' )
' → logprob: -12.813297271728516
    8. ');' → logprob: -14.438297271728516
    9. '<|end|>' → logprob: -14.438297271728516
    10. '<|end|>' → logprob: -14.438297271728516

Token 840: '           ' (ID: 352)
  Prédit: ' cat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cat' → logprob: -0.6056203246116638
    2. 'cat' → logprob: -0.8556203246116638
    3. '           ' → logprob: -3.6056203842163086
    4. '       ' → logprob: -7.355620384216309
    5. ',' → logprob: -7.980620384216309
    6. '		' → logprob: -8.105620384216309
    7. '_cat' → logprob: -8.355620384216309
    8. '   ' → logprob: -8.730620384216309
    9. '.cat' → logprob: -9.730620384216309
    10. '(cat' → logprob: -9.855620384216309

Token 841: ' cat' (ID: 9059)
  Prédit: 'cat'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cat' (adapté à ' cat') → logprob: -3.166338137816638e-05
    2. ' cat' → logprob: -10.375031471252441
    3. '           ' → logprob: -14.875031471252441
    4. '       ' → logprob: -17.125032424926758
    5. '   ' → logprob: -17.875032424926758
    6. 'cats' → logprob: -19.500032424926758
    7. '_cat' → logprob: -19.500032424926758
    8. '(cat' → logprob: -20.500032424926758
    9. '         ' → logprob: -20.625032424926758
    10. '     ' → logprob: -20.875032424926758

Token 842: '_width' (ID: 17595)
  Prédit: '_width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_width' → logprob: -0.00010151672904612496
    2. '_id' → logprob: -10.000101089477539
    3. '_' → logprob: -10.250101089477539
    4. 'width' → logprob: -11.375101089477539
    5. '_w' → logprob: -12.000101089477539
    6. '   ' → logprob: -14.625101089477539
    7. '_
' → logprob: -14.625101089477539
    8. ' _' → logprob: -14.875101089477539
    9. '_size' → logprob: -15.000101089477539
    10. '_WIDTH' → logprob: -15.500101089477539

Token 843: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0619683600962162
    2. ' =' → logprob: -2.8119683265686035
    3. '=int' → logprob: -14.436968803405762
    4. ' ' → logprob: -16.311967849731445
    5. '   ' → logprob: -18.811967849731445
    6. ',' → logprob: -18.811967849731445
    7. '=
' → logprob: -19.186967849731445
    8. ')' → logprob: -19.436967849731445
    9. 'int' → logprob: -19.561967849731445
    10. '＝' → logprob: -20.061967849731445

Token 844: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -2.15310683415737e-05
    2. ' int' → logprob: -10.750021934509277
    3. '=int' → logprob: -19.87502098083496
    4. '(int' → logprob: -20.00002098083496
    5. '[int' → logprob: -20.37502098083496
    6. '<int' → logprob: -22.25002098083496
    7. '	int' → logprob: -23.37502098083496
    8. ':int' → logprob: -23.87502098083496
    9. ']int' → logprob: -25.25002098083496
    10. '   ' → logprob: -25.87502098083496

Token 845: '(cat' (ID: 107890)
  Prédit: 'cat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cat' → logprob: -0.20151430368423462
    2. '(cat' → logprob: -1.7015142440795898
    3. ' cat' → logprob: -9.20151424407959
    4. '
' → logprob: -16.451515197753906
    5. '.cat' → logprob: -17.326515197753906
    6. 'int' → logprob: -18.326515197753906
    7. '_cat' → logprob: -19.201515197753906
    8. '           ' → logprob: -19.326515197753906
    9. '(
' → logprob: -19.451515197753906
    10. '-cat' → logprob: -19.701515197753906

Token 846: '_width' (ID: 17595)
  Prédit: '_width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_width' → logprob: -0.0020332036074250937
    2. '(cat' → logprob: -6.752033233642578
    3. '_cat' → logprob: -7.877033233642578
    4. '_str' → logprob: -8.127033233642578
    5. 'cat' → logprob: -9.252033233642578
    6. ')' → logprob: -10.252033233642578
    7. ' cat' → logprob: -10.502033233642578
    8. 'width' → logprob: -11.877033233642578
    9. '_w' → logprob: -12.127033233642578
    10. 'Width' → logprob: -12.877033233642578

Token 847: '_str' (ID: 6182)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07827432453632355
    2. ')
' → logprob: -2.7032742500305176
    3. '_str' → logprob: -4.828274250030518
    4. 'str' → logprob: -8.703274726867676
    5. 'Str' → logprob: -10.453274726867676
    6. '   ' → logprob: -10.703274726867676
    7. '_)' → logprob: -10.828274726867676
    8. '[' → logprob: -11.203274726867676
    9. '_)
' → logprob: -11.203274726867676
    10. ' )' → logprob: -11.703274726867676

Token 848: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.07904335111379623
    2. ')' → logprob: -2.579043388366699
    3. '       ' → logprob: -9.0790433883667
    4. ')
' → logprob: -10.3290433883667
    5. '           ' → logprob: -12.8290433883667
    6. '   ' → logprob: -13.2040433883667
    7. ' )
' → logprob: -13.8290433883667
    8. ')

' → logprob: -14.3290433883667
    9. ')`
' → logprob: -15.4540433883667
    10. '               ' → logprob: -15.8290433883667

Token 849: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.584770679473877
    2. '           ' → logprob: -0.834770679473877
    3. 'return' → logprob: -4.834770679473877
    4. ' return' → logprob: -7.334770679473877
    5. 'position' → logprob: -8.834770202636719
    6. '   ' → logprob: -10.209770202636719
    7. ' position' → logprob: -12.459770202636719
    8. '
' → logprob: -13.459770202636719
    9. 'result' → logprob: -14.084770202636719
    10. '               ' → logprob: -14.209770202636719

Token 850: ' self' (ID: 1051)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.003628461854532361
    2. '           ' → logprob: -6.003628253936768
    3. ' return' → logprob: -7.003628253936768
    4. 'result' → logprob: -8.503628730773926
    5. '       ' → logprob: -10.253628730773926
    6. 'response' → logprob: -12.628628730773926
    7. 'output' → logprob: -14.003628730773926
    8. '	return' → logprob: -15.003628730773926
    9. ' result' → logprob: -15.253628730773926
    10. 'answer' → logprob: -15.628628730773926

Token 851: '.remaining' (ID: 173829)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.49369221925735474
    2. 'current' → logprob: -0.9936922192573547
    3. 'process' → logprob: -4.993692398071289
    4. '.current' → logprob: -5.243692398071289
    5. ' return' → logprob: -6.493692398071289
    6. '
' → logprob: -6.618692398071289
    7. ' current' → logprob: -6.868692398071289
    8. 'result' → logprob: -6.993692398071289
    9. 'eturn' → logprob: -7.493692398071289
    10. 'output' → logprob: -7.993692398071289

Token 852: '_queries' (ID: 172558)
  Prédit: '_queries'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_queries' → logprob: -3.292907877039397e-06
    2. '_' → logprob: -14.25000286102295
    3. ' -=' → logprob: -14.37500286102295
    4. 'queries' → logprob: -14.50000286102295
    5. '_query' → logprob: -14.87500286102295
    6. '
' → logprob: -15.00000286102295
    7. '-=' → logprob: -15.75000286102295
    8. '_questions' → logprob: -15.87500286102295
    9. 'Queries' → logprob: -16.500003814697266
    10. ' queries' → logprob: -16.625003814697266

Token 853: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.6933261752128601
    2. '-=' → logprob: -0.6933261752128601
    3. '-' → logprob: -8.693325996398926
    4. '   ' → logprob: -11.693325996398926
    5. '=' → logprob: -13.568325996398926
    6. ' -' → logprob: -14.068325996398926
    7. '+=' → logprob: -14.693325996398926
    8. ' +=' → logprob: -16.193326950073242
    9. ' ' → logprob: -16.443326950073242
    10. '  ' → logprob: -16.443326950073242

Token 854: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '   ' → logprob: -19.25000762939453
    4. '```' → logprob: -20.62500762939453
    5. '
' → logprob: -22.25000762939453
    6. '<|end|>' → logprob: -22.37500762939453
    7. '۱' → logprob: -22.87500762939453
    8. '=' → logprob: -23.00000762939453
    9. '１' → logprob: -23.25000762939453
    10. '0' → logprob: -23.37500762939453

Token 855: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '   ' → logprob: -19.375001907348633
    4. '```' → logprob: -20.875001907348633
    5. '           ' → logprob: -22.125001907348633
    6. '۱' → logprob: -22.375001907348633
    7. '=' → logprob: -22.375001907348633
    8. '       ' → logprob: -22.625001907348633
    9. '-' → logprob: -22.812501907348633
    10. '0' → logprob: -22.812501907348633

Token 856: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6683139204978943
    2. 'return' → logprob: -0.9183139204978943
    3. '       ' → logprob: -2.793313980102539
    4. '
' → logprob: -4.293313980102539
    5. ' return' → logprob: -4.418313980102539
    6. 'result' → logprob: -6.793313980102539
    7. 'output' → logprob: -10.043313980102539
    8. '   ' → logprob: -10.293313980102539
    9. ' result' → logprob: -10.668313980102539
    10. '
' → logprob: -10.668313980102539

Token 857: '           ' (ID: 352)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.20823128521442413
    2. ' return' → logprob: -1.9582313299179077
    3. '           ' → logprob: -3.583231210708618
    4. '       ' → logprob: -4.333231449127197
    5. '
' → logprob: -5.208231449127197
    6. 'position' → logprob: -8.208230972290039
    7. 'result' → logprob: -9.583230972290039
    8. '	return' → logprob: -9.958230972290039
    9. '   ' → logprob: -10.333230972290039
    10. ' position' → logprob: -11.083230972290039

Token 858: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0011879685334861279
    2. 'result' → logprob: -6.751187801361084
    3. 'position' → logprob: -11.501188278198242
    4. 'response' → logprob: -12.751188278198242
    5. 'output' → logprob: -13.001188278198242
    6. '           ' → logprob: -13.251188278198242
    7. ' return' → logprob: -15.126188278198242
    8. 'res' → logprob: -15.126188278198242
    9. 'answer' → logprob: -16.126188278198242
    10. '       ' → logprob: -17.501188278198242

Token 859: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00861456897109747
    2. ' self' → logprob: -4.758614540100098
    3. '           ' → logprob: -17.383615493774414
    4. '(self' → logprob: -18.133615493774414
    5. '	self' → logprob: -19.258615493774414
    6. '
' → logprob: -19.758615493774414
    7. '[self' → logprob: -20.258615493774414
    8. '               ' → logprob: -20.508615493774414
    9. 'Self' → logprob: -20.758615493774414
    10. 'str' → logprob: -20.758615493774414

Token 860: '.current' (ID: 8357)
  Prédit: '.current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.current' → logprob: -0.00014561474381480366
    2. 'current' → logprob: -9.37514591217041
    3. '.' → logprob: -9.75014591217041
    4. '.user' → logprob: -14.12514591217041
    5. ' .' → logprob: -14.25014591217041
    6. 'urrent' → logprob: -15.00014591217041
    7. '._' → logprob: -15.37514591217041
    8. '_.' → logprob: -16.125144958496094
    9. '	current' → logprob: -16.125144958496094
    10. ' current' → logprob: -16.500144958496094

Token 861: '_ob' (ID: 46416)
  Prédit: '_ob'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ob' → logprob: -2.2127087504486553e-05
    2. '._' → logprob: -10.875021934509277
    3. '_answer' → logprob: -14.000021934509277
    4. 'ob' → logprob: -14.000021934509277
    5. '_ass' → logprob: -14.375021934509277
    6. 'Observation' → logprob: -15.875021934509277
    7. '.ob' → logprob: -16.000022888183594
    8. '_obs' → logprob: -16.375022888183594
    9. '_inter' → logprob: -16.750022888183594
    10. '_OB' → logprob: -16.875022888183594

Token 862: 'servation' (ID: 27602)
  Prédit: 'servation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'servation' → logprob: -0.0017813296290114522
    2. 's' → logprob: -7.001781463623047
    3. 'ervation' → logprob: -7.126781463623047
    4. 'server' → logprob: -10.876781463623047
    5. 'serv' → logprob: -11.001781463623047
    6. 'versation' → logprob: -11.501781463623047
    7. 'ers' → logprob: -12.001781463623047
    8. 'vation' → logprob: -12.376781463623047
    9. '   ' → logprob: -12.876781463623047
    10. '       ' → logprob: -13.626781463623047

Token 863: '.process' (ID: 28604)
  Prédit: '.process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.process' → logprob: -0.00011081460979767144
    2. '.' → logprob: -9.125110626220703
    3. 'process' → logprob: -13.875110626220703
    4. ' .' → logprob: -14.625110626220703
    5. '.parse' → logprob: -15.875110626220703
    6. '.handle' → logprob: -16.250110626220703
    7. '.try' → logprob: -17.000110626220703
    8. '.
' → logprob: -17.125110626220703
    9. '.pro' → logprob: -17.250110626220703
    10. '.perform' → logprob: -17.625110626220703

Token 864: '_sleep' (ID: 125884)
  Prédit: '_sleep'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sleep' → logprob: -1.8624639324116288e-06
    2. 'sleep' → logprob: -13.250001907348633
    3. '_' → logprob: -18.500001907348633
    4. 'Sleep' → logprob: -18.625001907348633
    5. ' sleep' → logprob: -19.000001907348633
    6. '_SLEEP' → logprob: -20.000001907348633
    7. '_s' → logprob: -20.625001907348633
    8. '_process' → logprob: -21.625001907348633
    9. '_cat' → logprob: -22.125001907348633
    10. '_sn' → logprob: -22.500001907348633

Token 865: '(cat' (ID: 107890)
  Prédit: '(cat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cat' → logprob: -1.735893965815194e-05
    2. '(' → logprob: -11.000017166137695
    3. '(
' → logprob: -15.375017166137695
    4. ' (' → logprob: -15.750017166137695
    5. '(car' → logprob: -16.250017166137695
    6. ' cat' → logprob: -16.250017166137695
    7. 'cat' → logprob: -16.375017166137695
    8. '(c' → logprob: -18.500017166137695
    9. '_cat' → logprob: -19.250017166137695
    10. '(cid' → logprob: -20.000017166137695

Token 866: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.002216988243162632
    2. '_' → logprob: -6.127216815948486
    3. ' _' → logprob: -10.752217292785645
    4. 'id' → logprob: -12.627217292785645
    5. '```' → logprob: -13.002217292785645
    6. ' ' → logprob: -13.627217292785645
    7. '_token' → logprob: -14.002217292785645
    8. ')' → logprob: -14.377217292785645
    9. '`' → logprob: -14.502217292785645
    10. '   ' → logprob: -14.877217292785645

Token 867: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.203409844194539e-05
    2. ' ,' → logprob: -10.375041961669922
    3. '(cat' → logprob: -12.000041961669922
    4. ' cat' → logprob: -12.750041961669922
    5. ',
' → logprob: -14.375041961669922
    6. ',c' → logprob: -14.625041961669922
    7. 'cat' → logprob: -14.750041961669922
    8. '   ' → logprob: -16.125041961669922
    9. '‌,' → logprob: -16.875041961669922
    10. ',int' → logprob: -17.500041961669922

Token 868: ' cat' (ID: 9059)
  Prédit: ' cat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cat' → logprob: -0.313262403011322
    2. 'cat' → logprob: -1.3132624626159668
    3. '(cat' → logprob: -14.188261985778809
    4. ' ' → logprob: -19.563262939453125
    5. '   ' → logprob: -19.688262939453125
    6. '_cat' → logprob: -19.813262939453125
    7. '    ' → logprob: -20.563262939453125
    8. '.cat' → logprob: -20.563262939453125
    9. 'cats' → logprob: -20.813262939453125
    10. '-cat' → logprob: -21.188262939453125

Token 869: '_width' (ID: 17595)
  Prédit: '_width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_width' → logprob: -8.65707261255011e-06
    2. 'width' → logprob: -12.375008583068848
    3. '_' → logprob: -13.375008583068848
    4. ' _' → logprob: -13.375008583068848
    5. '   ' → logprob: -15.500008583068848
    6. '_WIDTH' → logprob: -15.500008583068848
    7. '_id' → logprob: -15.750008583068848
    8. '_
' → logprob: -15.875008583068848
    9. ')_' → logprob: -16.250009536743164
    10. '_w' → logprob: -16.375009536743164

Token 870: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002330992283532396
    2. ')
' → logprob: -8.375232696533203
    3. '       ' → logprob: -13.500232696533203
    4. ' )' → logprob: -14.125232696533203
    5. ')

' → logprob: -15.125232696533203
    6. '   ' → logprob: -16.250232696533203
    7. ')+' → logprob: -17.625232696533203
    8. ')return' → logprob: -17.750232696533203
    9. '),' → logprob: -18.375232696533203
    10. ')
' → logprob: -18.375232696533203

Token 871: '       ' (ID: 309)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.35601311922073364
    2. '   ' → logprob: -1.8560130596160889
    3. ' elif' → logprob: -1.9810130596160889
    4. '	elif' → logprob: -5.981013298034668
    5. ' ' → logprob: -6.856013298034668
    6. '
' → logprob: -7.731013298034668
    7. '       ' → logprob: -7.981013298034668
    8. '    
' → logprob: -8.231013298034668
    9. '\n' → logprob: -8.481013298034668
    10. '<|end|>' → logprob: -8.856013298034668

Token 872: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.007449256256222725
    2. '       ' → logprob: -5.007449150085449
    3. '   ' → logprob: -7.507449150085449
    4. ' elif' → logprob: -8.63244915008545
    5. 'el' → logprob: -12.25744915008545
    6. '```' → logprob: -14.38244915008545
    7. '
' → logprob: -14.75744915008545
    8. '	elif' → logprob: -15.25744915008545
    9. ' ' → logprob: -15.75744915008545
    10. 'else' → logprob: -16.632450103759766

Token 873: ' parts' (ID: 7881)
  Prédit: ' parts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parts' → logprob: -0.28118446469306946
    2. 'parts' → logprob: -1.406184434890747
    3. ' ' → logprob: -11.781184196472168
    4. '   ' → logprob: -11.906184196472168
    5. '(parts' → logprob: -12.156184196472168
    6. '    ' → logprob: -12.531184196472168
    7. '       ' → logprob: -12.781184196472168
    8. '.parts' → logprob: -13.281184196472168
    9. '        ' → logprob: -14.281184196472168
    10. '           ' → logprob: -14.281184196472168

Token 874: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.91732100979425e-05
    2. '==' → logprob: -10.750039100646973
    3. ' ==' → logprob: -11.375039100646973
    4. ' [' → logprob: -12.875039100646973
    5. '=' → logprob: -13.375039100646973
    6. ' =' → logprob: -14.000039100646973
    7. '[
' → logprob: -14.750039100646973
    8. '0' → logprob: -15.500039100646973
    9. '   ' → logprob: -15.750039100646973
    10. '       ' → logprob: -16.25004005432129

Token 875: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006080791936255991
    2. ''' → logprob: -7.875607967376709
    3. '[' → logprob: -8.875608444213867
    4. ' ' → logprob: -9.625608444213867
    5. '
' → logprob: -11.500608444213867
    6. ''s' → logprob: -13.125608444213867
    7. '   ' → logprob: -13.375608444213867
    8. ' '' → logprob: -13.625608444213867
    9. '-' → logprob: -13.750608444213867
    10. '1' → logprob: -14.125608444213867

Token 876: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3870539963245392
    2. ' ==' → logprob: -1.1370539665222168
    3. '=='' → logprob: -9.012054443359375
    4. '===' → logprob: -11.012054443359375
    5. '[' → logprob: -11.137054443359375
    6. '=' → logprob: -11.387054443359375
    7. ']==' → logprob: -12.012054443359375
    8. '       ' → logprob: -12.887054443359375
    9. ')==' → logprob: -13.137054443359375
    10. '==
' → logprob: -13.762054443359375

Token 877: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6931717991828918
    2. ' ==' → logprob: -0.6931717991828918
    3. '=='' → logprob: -11.318171501159668
    4. '=' → logprob: -12.068171501159668
    5. '[' → logprob: -12.818171501159668
    6. '===' → logprob: -13.068171501159668
    7. '==
' → logprob: -14.818171501159668
    8. ' =='' → logprob: -14.818171501159668
    9. '=="' → logprob: -15.068171501159668
    10. ' =' → logprob: -15.818171501159668

Token 878: ' '' (ID: 461)
  Prédit: ''w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''w' → logprob: -0.000997082912363112
    2. ''d' → logprob: -7.875997066497803
    3. ''u' → logprob: -8.750997543334961
    4. ' '' → logprob: -8.750997543334961
    5. 'w' → logprob: -9.750997543334961
    6. ''' → logprob: -10.125997543334961
    7. ''f' → logprob: -10.250997543334961
    8. '"' → logprob: -10.500997543334961
    9. ''l' → logprob: -10.875997543334961
    10. ''e' → logprob: -10.875997543334961

Token 879: 'w' (ID: 86)
  Prédit: ''w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''w' → logprob: -0.39031508564949036
    2. 'w' → logprob: -1.140315055847168
    3. ''' → logprob: -5.765315055847168
    4. '"' → logprob: -9.515315055847168
    5. ''u' → logprob: -10.140315055847168
    6. ''l' → logprob: -10.265315055847168
    7. ''d' → logprob: -10.390315055847168
    8. ''f' → logprob: -11.265315055847168
    9. ''a' → logprob: -11.390315055847168
    10. ''t' → logprob: -11.515315055847168

Token 880: '':
' (ID: 7669)
  Prédit: 'akeup'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'akeup' → logprob: -0.3404691219329834
    2. 'ake' → logprob: -2.2154691219329834
    3. ''' → logprob: -2.3404691219329834
    4. 'w' → logprob: -3.3404691219329834
    5. 'a' → logprob: -3.5904691219329834
    6. '<|end|>' → logprob: -5.3404693603515625
    7. ''u' → logprob: -6.3404693603515625
    8. 'u' → logprob: -6.5904693603515625
    9. ''a' → logprob: -6.7154693603515625
    10. ':
' → logprob: -6.8404693603515625

Token 881: '           ' (ID: 352)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0488357543945312
    2. '       ' → logprob: -1.4238357543945312
    3. '_,' → logprob: -1.6738357543945312
    4. '           ' → logprob: -2.2988357543945312
    5. ' _,' → logprob: -2.7988357543945312
    6. '   ' → logprob: -3.6738357543945312
    7. ' ,' → logprob: -4.423835754394531
    8. ' ' → logprob: -4.798835754394531
    9. '	       ' → logprob: -6.048835754394531
    10. ',w' → logprob: -6.173835754394531

Token 882: ' _,' (ID: 18042)
  Prédit: '_,'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_,' (adapté à ' _,') → logprob: -0.028491660952568054
    2. ' _,' → logprob: -3.778491735458374
    3. '           ' → logprob: -6.528491497039795
    4. ' w' → logprob: -7.028491497039795
    5. ',w' → logprob: -7.153491497039795
    6. '       ' → logprob: -7.278491497039795
    7. 'w' → logprob: -7.903491497039795
    8. ',' → logprob: -7.903491497039795
    9. '__,' → logprob: -8.153491973876953
    10. '_w' → logprob: -8.528491973876953

Token 883: ' cat' (ID: 9059)
  Prédit: 'cat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cat' → logprob: -0.03804149478673935
    2. ' cat' → logprob: -3.288041591644287
    3. '_cat' → logprob: -17.913042068481445
    4. 'cats' → logprob: -17.913042068481445
    5. '(cat' → logprob: -18.288042068481445
    6. '   ' → logprob: -18.913042068481445
    7. '
' → logprob: -19.288042068481445
    8. ',' → logprob: -19.288042068481445
    9. '           ' → logprob: -19.413042068481445
    10. ' ' → logprob: -19.538042068481445

Token 884: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -2.696889623621246e-06
    2. 'id' → logprob: -13.25000286102295
    3. ',' → logprob: -15.12500286102295
    4. '_ids' → logprob: -15.50000286102295
    5. '           ' → logprob: -16.625001907348633
    6. '   ' → logprob: -16.625001907348633
    7. 'w' → logprob: -16.750001907348633
    8. ' _' → logprob: -17.125001907348633
    9. ''_' → logprob: -17.750001907348633
    10. '_,' → logprob: -17.875001907348633

Token 885: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.0021313487086445093
    2. 'str' → logprob: -6.752131462097168
    3. '_id' → logprob: -7.002131462097168
    4. 'id' → logprob: -10.127131462097168
    5. 's' → logprob: -13.252131462097168
    6. '_' → logprob: -13.377131462097168
    7. '<|end|>' → logprob: -13.627131462097168
    8. 'w' → logprob: -14.127131462097168
    9. 'string' → logprob: -14.377131462097168
    10. '=' → logprob: -14.377131462097168

Token 886: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.21301670372486115
    2. ',' → logprob: -1.7130167484283447
    3. ' =' → logprob: -4.463016510009766
    4. ' ,' → logprob: -12.088016510009766
    5. ' cat' → logprob: -14.338016510009766
    6. 'cat' → logprob: -14.588016510009766
    7. '       ' → logprob: -14.588016510009766
    8. '           ' → logprob: -15.463016510009766
    9. '   ' → logprob: -15.588016510009766
    10. ' ' → logprob: -15.713016510009766

Token 887: ' parts' (ID: 7881)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.3868843913078308
    2. ' parts' → logprob: -1.1368844509124756
    3. '(parts' → logprob: -11.511884689331055
    4. 'lines' → logprob: -13.761884689331055
    5. 'user' → logprob: -14.136884689331055
    6. '[' → logprob: -15.011884689331055
    7. '.parts' → logprob: -15.011884689331055
    8. 'pieces' → logprob: -15.261884689331055
    9. '_parts' → logprob: -15.511884689331055
    10. 'line' → logprob: -15.511884689331055

Token 888: '
' (ID: 198)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4336097836494446
    2. ' =' → logprob: -1.0586097240447998
    3. '       ' → logprob: -6.933609962463379
    4. '           ' → logprob: -7.308609962463379
    5. '=
' → logprob: -7.433609962463379
    6. '=int' → logprob: -7.683609962463379
    7. '   ' → logprob: -7.808609962463379
    8. '[' → logprob: -8.183609962463379
    9. ',' → logprob: -8.683609962463379
    10. '
' → logprob: -8.683609962463379

Token 889: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.047403544187545776
    2. ' cat' → logprob: -3.172403573989868
    3. 'cat' → logprob: -5.547403335571289
    4. '       ' → logprob: -7.797403335571289
    5. '   ' → logprob: -9.922403335571289
    6. '(cat' → logprob: -11.422403335571289
    7. ',' → logprob: -11.547403335571289
    8. '          ' → logprob: -11.922403335571289
    9. '_cat' → logprob: -13.047403335571289
    10. '         ' → logprob: -13.797403335571289

Token 890: ' cat' (ID: 9059)
  Prédit: 'cat'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cat' (adapté à ' cat') → logprob: -0.17573583126068115
    2. ' cat' → logprob: -1.9257358312606812
    3. '           ' → logprob: -4.175735950469971
    4. '       ' → logprob: -10.675735473632812
    5. '(cat' → logprob: -12.925735473632812
    6. '   ' → logprob: -14.175735473632812
    7. '
' → logprob: -14.675735473632812
    8. '_cat' → logprob: -14.675735473632812
    9. '          ' → logprob: -15.050735473632812
    10. '.cat' → logprob: -15.800735473632812

Token 891: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -7.896309739408025e-07
    2. 'id' → logprob: -14.250000953674316
    3. '=' → logprob: -18.125
    4. '           ' → logprob: -18.125
    5. 'int' → logprob: -18.375
    6. '   ' → logprob: -18.375
    7. ' =' → logprob: -18.625
    8. '_' → logprob: -19.0
    9. '```' → logprob: -19.0
    10. '=_' → logprob: -19.125

Token 892: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868734836578369
    2. ' =' → logprob: -1.136873483657837
    3. '=int' → logprob: -13.011873245239258
    4. ' ' → logprob: -15.761873245239258
    5. '=
' → logprob: -17.511873245239258
    6. '   ' → logprob: -18.261873245239258
    7. '           ' → logprob: -18.386873245239258
    8. '	' → logprob: -19.011873245239258
    9. '＝' → logprob: -19.011873245239258
    10. '        ' → logprob: -19.386873245239258

Token 893: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0001234428636962548
    2. ' int' → logprob: -9.000123023986816
    3. '=int' → logprob: -19.750123977661133
    4. '[int' → logprob: -20.625123977661133
    5. '(int' → logprob: -21.625123977661133
    6. '<int' → logprob: -22.875123977661133
    7. '	int' → logprob: -23.375123977661133
    8. '   ' → logprob: -24.125123977661133
    9. ':int' → logprob: -24.375123977661133
    10. '           ' → logprob: -24.750123977661133

Token 894: '(cat' (ID: 107890)
  Prédit: '(cat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cat' → logprob: -1.688212614681106e-05
    2. 'cat' → logprob: -11.000017166137695
    3. ' cat' → logprob: -16.625017166137695
    4. '.cat' → logprob: -20.375017166137695
    5. '(car' → logprob: -20.500017166137695
    6. 'Cat' → logprob: -21.500017166137695
    7. '_cat' → logprob: -21.875017166137695
    8. '(cart' → logprob: -22.375017166137695
    9. '(
' → logprob: -22.875017166137695
    10. '(cid' → logprob: -22.875017166137695

Token 895: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.012548385187983513
    2. '(cat' → logprob: -4.387548446655273
    3. 'cat' → logprob: -10.262548446655273
    4. ' cat' → logprob: -13.762548446655273
    5. '_cat' → logprob: -14.137548446655273
    6. 'int' → logprob: -14.637548446655273
    7. '_str' → logprob: -14.762548446655273
    8. 'id' → logprob: -14.887548446655273
    9. '(c' → logprob: -15.137548446655273
    10. '.cat' → logprob: -16.137548446655273

Token 896: '_str' (ID: 6182)
  Prédit: '(cat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cat' → logprob: -0.3878399729728699
    2. '_str' → logprob: -1.1378400325775146
    3. 'Str' → logprob: -8.012840270996094
    4. 'str' → logprob: -8.137840270996094
    5. 'cat' → logprob: -9.387840270996094
    6. ')' → logprob: -9.387840270996094
    7. '_id' → logprob: -10.137840270996094
    8. '()' → logprob: -11.012840270996094
    9. '(id' → logprob: -11.012840270996094
    10. '(car' → logprob: -11.137840270996094

Token 897: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.08053652942180634
    2. ')' → logprob: -2.5805366039276123
    3. '           ' → logprob: -6.455536365509033
    4. '       ' → logprob: -10.330536842346191
    5. ')
' → logprob: -10.705536842346191
    6. '=' → logprob: -12.205536842346191
    7. 'self' → logprob: -13.080536842346191
    8. ')return' → logprob: -13.080536842346191
    9. '               ' → logprob: -13.580536842346191
    10. '   ' → logprob: -13.830536842346191

Token 898: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0018417751416563988
    2. '       ' → logprob: -6.5018415451049805
    3. 'self' → logprob: -8.12684154510498
    4. '   ' → logprob: -10.50184154510498
    5. ' self' → logprob: -11.87684154510498
    6. '	       ' → logprob: -12.75184154510498
    7. '               ' → logprob: -13.62684154510498
    8. '
' → logprob: -14.25184154510498
    9. '<|end|>' → logprob: -14.25184154510498
    10. '	self' → logprob: -14.37684154510498

Token 899: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.02341434918344021
    2. '           ' → logprob: -3.773414373397827
    3. ' self' → logprob: -8.898414611816406
    4. '       ' → logprob: -11.023414611816406
    5. '   ' → logprob: -11.273414611816406
    6. '	self' → logprob: -12.773414611816406
    7. '(self' → logprob: -16.148414611816406
    8. '
' → logprob: -16.523414611816406
    9. ' ' → logprob: -16.898414611816406
    10. 'return' → logprob: -17.523414611816406

Token 900: '.current' (ID: 8357)
  Prédit: '.remaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.remaining' → logprob: -0.0005981888971291482
    2. '.current' → logprob: -8.000597953796387
    3. 'remaining' → logprob: -8.250597953796387
    4. 'current' → logprob: -14.375597953796387
    5. '.' → logprob: -14.750597953796387
    6. ' .' → logprob: -15.000597953796387
    7. '_remaining' → logprob: -15.750597953796387
    8. 'Remaining' → logprob: -16.375598907470703
    9. ' remaining' → logprob: -17.250598907470703
    10. '.user' → logprob: -17.500598907470703

Token 901: '_ob' (ID: 46416)
  Prédit: '_ob'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ob' → logprob: -0.0009789824252948165
    2. '_queries' → logprob: -7.250978946685791
    3. '_query' → logprob: -9.25097942352295
    4. 'ob' → logprob: -9.25097942352295
    5. '_id' → logprob: -10.12597942352295
    6. '._' → logprob: -11.62597942352295
    7. 'Observation' → logprob: -12.00097942352295
    8. '_' → logprob: -12.37597942352295
    9. '_ids' → logprob: -13.12597942352295
    10. '_tokens' → logprob: -13.50097942352295

Token 902: 'servation' (ID: 27602)
  Prédit: 'servation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'servation' → logprob: -0.3375779092311859
    2. '_ob' → logprob: -2.5875778198242188
    3. 'ission' → logprob: -2.8375778198242188
    4. 'ob' → logprob: -3.8375778198242188
    5. '_id' → logprob: -4.337577819824219
    6. 'Observation' → logprob: -4.837577819824219
    7. 'parison' → logprob: -5.087577819824219
    8. 'itting' → logprob: -5.212577819824219
    9. 'ervation' → logprob: -5.337577819824219
    10. 'aining' → logprob: -5.337577819824219

Token 903: '.process' (ID: 28604)
  Prédit: '.process'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.process' → logprob: -1.2664456789934775e-06
    2. '.' → logprob: -14.500000953674316
    3. 'process' → logprob: -14.875000953674316
    4. '.w' → logprob: -15.750000953674316
    5. '   ' → logprob: -16.250001907348633
    6. ' .' → logprob: -16.875001907348633
    7. '.parse' → logprob: -18.375001907348633
    8. '       ' → logprob: -18.875001907348633
    9. '	process' → logprob: -19.125001907348633
    10. '.perform' → logprob: -19.625001907348633

Token 904: '_w' (ID: 3567)
  Prédit: '_w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -1.0325924449716695e-05
    2. 'w' → logprob: -11.50001049041748
    3. 'wake' → logprob: -15.75001049041748
    4. '_sleep' → logprob: -17.625009536743164
    5. '_WAKE' → logprob: -18.000009536743164
    6. ' wake' → logprob: -18.625009536743164
    7. 'Wake' → logprob: -20.250009536743164
    8. '_' → logprob: -21.000009536743164
    9. '_wait' → logprob: -21.000009536743164
    10. 'sleep' → logprob: -21.250009536743164

Token 905: 'akeup' (ID: 150728)
  Prédit: 'akeup'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'akeup' → logprob: -0.048602137714624405
    2. 'ake' → logprob: -3.0486021041870117
    3. 'akey' → logprob: -11.923602104187012
    4. 'ak' → logprob: -12.173602104187012
    5. 'a' → logprob: -13.173602104187012
    6. 'oke' → logprob: -14.173602104187012
    7. 'akes' → logprob: -16.173603057861328
    8. 'akeun' → logprob: -16.298603057861328
    9. 'aket' → logprob: -17.423603057861328
    10. '
' → logprob: -17.673603057861328

Token 906: '(cat' (ID: 107890)
  Prédit: '(cat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cat' → logprob: -1.1875571544806007e-05
    2. '(' → logprob: -12.500011444091797
    3. '(int' → logprob: -13.125011444091797
    4. '(car' → logprob: -13.250011444091797
    5. '(c' → logprob: -13.250011444091797
    6. '(
' → logprob: -13.875011444091797
    7. ' (' → logprob: -14.000011444091797
    8. ' cat' → logprob: -14.750011444091797
    9. 'cat' → logprob: -16.500011444091797
    10. '(token' → logprob: -16.625011444091797

Token 907: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.018880276009440422
    2. '(cat' → logprob: -4.268880367279053
    3. 'id' → logprob: -6.018880367279053
    4. 'cat' → logprob: -6.268880367279053
    5. 'd' → logprob: -8.518879890441895
    6. ' cat' → logprob: -8.768879890441895
    7. 'at' → logprob: -11.893879890441895
    8. '   ' → logprob: -12.268879890441895
    9. ')' → logprob: -12.768879890441895
    10. '(id' → logprob: -13.393879890441895

Token 908: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6135767698287964
    2. '(cat' → logprob: -0.8635767698287964
    3. '()
' → logprob: -4.738576889038086
    4. ')
' → logprob: -5.238576889038086
    5. '(' → logprob: -5.363576889038086
    6. ')' → logprob: -5.863576889038086
    7. '(self' → logprob: -5.863576889038086
    8. '
' → logprob: -5.988576889038086
    9. 'self' → logprob: -6.113576889038086
    10. ' cat' → logprob: -6.613576889038086

Token 909: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00027182576013728976
    2. 'self' → logprob: -8.500271797180176
    3. '       ' → logprob: -9.625271797180176
    4. '   ' → logprob: -14.125271797180176
    5. ' self' → logprob: -14.500271797180176
    6. '               ' → logprob: -14.750271797180176
    7. '		' → logprob: -14.875271797180176
    8. '                   ' → logprob: -16.250272750854492
    9. '	       ' → logprob: -16.500272750854492
    10. '	self' → logprob: -16.750272750854492

Token 910: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.07894255965948105
    2. '           ' → logprob: -2.5789425373077393
    3. ' self' → logprob: -10.57894229888916
    4. '       ' → logprob: -11.07894229888916
    5. 'return' → logprob: -11.57894229888916
    6. '		' → logprob: -13.82894229888916
    7. '	self' → logprob: -13.82894229888916
    8. '   ' → logprob: -14.95394229888916
    9. '               ' → logprob: -16.328943252563477
    10. '	       ' → logprob: -16.828943252563477

Token 911: '.remaining' (ID: 173829)
  Prédit: '.remaining'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.remaining' → logprob: -0.0008496518130414188
    2. 'remaining' → logprob: -7.250849723815918
    3. '.' → logprob: -9.625849723815918
    4. '           ' → logprob: -10.625849723815918
    5. '   ' → logprob: -10.750849723815918
    6. 'self' → logprob: -12.125849723815918
    7. ' .' → logprob: -12.125849723815918
    8. '       ' → logprob: -12.125849723815918
    9. '
' → logprob: -12.250849723815918
    10. '_remaining' → logprob: -12.625849723815918

Token 912: '_queries' (ID: 172558)
  Prédit: '_queries'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_queries' → logprob: -2.1008713702030946e-06
    2. 'queries' → logprob: -13.625001907348633
    3. 'Queries' → logprob: -14.375001907348633
    4. '_questions' → logprob: -16.125001907348633
    5. '-=' → logprob: -17.000001907348633
    6. '_requests' → logprob: -17.375001907348633
    7. ' -=' → logprob: -17.625001907348633
    8. '
' → logprob: -18.125001907348633
    9. ' Queries' → logprob: -18.125001907348633
    10. '-_' → logprob: -18.250001907348633

Token 913: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.03872993588447571
    2. ' -=' → logprob: -3.2887299060821533
    3. '-' → logprob: -7.288730144500732
    4. '+=' → logprob: -12.538729667663574
    5. '=' → logprob: -14.413729667663574
    6. '   ' → logprob: -15.038729667663574
    7. ' -' → logprob: -15.288729667663574
    8. '    ' → logprob: -15.663729667663574
    9. '        ' → logprob: -16.53873062133789
    10. ' +=' → logprob: -17.28873062133789

Token 914: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006715370807796717
    2. ' ' → logprob: -5.006715297698975
    3. '   ' → logprob: -18.506715774536133
    4. '```' → logprob: -18.756715774536133
    5. '0' → logprob: -19.381715774536133
    6. ' ' → logprob: -20.631715774536133
    7. '           ' → logprob: -21.131715774536133
    8. '(' → logprob: -21.256715774536133
    9. '
' → logprob: -21.506715774536133
    10. '=' → logprob: -22.006715774536133

Token 915: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '```' → logprob: -19.500001907348633
    4. '   ' → logprob: -19.875001907348633
    5. '0' → logprob: -21.000001907348633
    6. '[' → logprob: -21.375001907348633
    7. '(' → logprob: -21.625001907348633
    8. '=' → logprob: -21.750001907348633
    9. '-' → logprob: -21.875001907348633
    10. 'int' → logprob: -22.250001907348633

Token 916: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004749337211251259
    2. '       ' → logprob: -5.754749298095703
    3. 'return' → logprob: -6.504749298095703
    4. '   ' → logprob: -9.879749298095703
    5. ' return' → logprob: -11.629749298095703
    6. '
' → logprob: -12.379749298095703
    7. '               ' → logprob: -12.504749298095703
    8. '	       ' → logprob: -13.629749298095703
    9. '<|end|>' → logprob: -14.004749298095703
    10. '		' → logprob: -14.254749298095703

Token 917: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16604861617088318
    2. 'return' → logprob: -2.166048526763916
    3. '       ' → logprob: -3.416048526763916
    4. '   ' → logprob: -5.541048526763916
    5. ' return' → logprob: -7.291048526763916
    6. '	return' → logprob: -7.416048526763916
    7. '		' → logprob: -8.916049003601074
    8. '               ' → logprob: -9.541049003601074
    9. '	       ' → logprob: -10.291049003601074
    10. '<|end|>' → logprob: -11.541049003601074

Token 918: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0019394654082134366
    2. '           ' → logprob: -6.251939296722412
    3. ' return' → logprob: -11.75193977355957
    4. '       ' → logprob: -12.75193977355957
    5. '   ' → logprob: -16.37693977355957
    6. '	return' → logprob: -17.50193977355957
    7. '               ' → logprob: -19.00193977355957
    8. '		' → logprob: -20.87693977355957
    9. '```' → logprob: -20.87693977355957
    10. '         ' → logprob: -21.00193977355957

Token 919: ' None' (ID: 4662)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '""' → logprob: -0.002379569225013256
    2. '"' → logprob: -7.002379417419434
    3. 'None' → logprob: -7.002379417419434
    4. '''' → logprob: -7.502379417419434
    5. ' ""' → logprob: -12.377379417419434
    6. '"":' → logprob: -14.377379417419434
    7. ''' → logprob: -15.252379417419434
    8. '"",' → logprob: -15.252379417419434
    9. ' None' → logprob: -16.50238037109375
    10. '"""' → logprob: -16.62738037109375

Token 920: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 921: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35410234332084656
    2. '<|end|>' → logprob: -1.229102373123169
    3. '<|end|>' → logprob: -5.97910213470459
    4. '```' → logprob: -7.60410213470459
    5. '   ' → logprob: -7.72910213470459
    6. '#' → logprob: -7.85410213470459
    7. 'elif' → logprob: -8.22910213470459
    8. '...' → logprob: -8.35410213470459
    9. '        
' → logprob: -8.47910213470459
    10. 'def' → logprob: -9.10410213470459

Token 922: ' else' (ID: 1203)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 923: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1351081132888794
    2. '       ' → logprob: -1.2601081132888794
    3. 'return' → logprob: -1.7601081132888794
    4. '           ' → logprob: -1.8851081132888794
    5. ':
' → logprob: -3.13510799407959
    6. ':return' → logprob: -4.63510799407959
    7. ' return' → logprob: -4.76010799407959
    8. '   ' → logprob: -5.76010799407959
    9. '        ' → logprob: -6.51010799407959
    10. '        
' → logprob: -7.76010799407959

Token 924: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16809119284152985
    2. 'return' → logprob: -1.9180911779403687
    3. '           ' → logprob: -4.918091297149658
    4. ' return' → logprob: -7.668091297149658
    5. '   ' → logprob: -10.4180908203125
    6. 'None' → logprob: -11.9180908203125
    7. '	return' → logprob: -11.9180908203125
    8. '               ' → logprob: -12.4180908203125
    9. '	' → logprob: -13.5430908203125
    10. '	   ' → logprob: -13.7930908203125

Token 925: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0009716100175864995
    2. '           ' → logprob: -7.000971794128418
    3. ' return' → logprob: -10.250971794128418
    4. '       ' → logprob: -11.250971794128418
    5. 'raise' → logprob: -11.500971794128418
    6. 'None' → logprob: -13.875971794128418
    7. 'pass' → logprob: -14.500971794128418
    8. 'self' → logprob: -16.1259708404541
    9. '	return' → logprob: -17.6259708404541
    10. '   ' → logprob: -18.1259708404541

Token 926: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.05372586473822594
    2. '""' → logprob: -3.0537259578704834
    3. '"' → logprob: -5.303725719451904
    4. ' None' → logprob: -9.053726196289062
    5. '''' → logprob: -10.428726196289062
    6. '"""' → logprob: -13.553726196289062
    7. '   ' → logprob: -13.553726196289062
    8. '           ' → logprob: -14.303726196289062
    9. ''' → logprob: -14.553726196289062
    10. ' ""' → logprob: -14.553726196289062

Token 927: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2114652544260025
    2. '<|end|>' → logprob: -1.7114652395248413
    3. '#' → logprob: -5.336465358734131
    4. 'import' → logprob: -6.086465358734131
    5. '```' → logprob: -6.211465358734131
    6. '<|end|>' → logprob: -7.836465358734131
    7. 'from' → logprob: -8.336464881896973
    8. 'if' → logprob: -9.961464881896973
    9. '...' → logprob: -10.211464881896973
    10. ' def' → logprob: -10.211464881896973

Token 928: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 929: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.5759593844413757
    2. 'main' → logprob: -0.8259593844413757
    3. 'run' → logprob: -11.575959205627441
    4. ' run' → logprob: -11.575959205627441
    5. 'process' → logprob: -14.575959205627441
    6. ' solve' → logprob: -14.950959205627441
    7. 'solve' → logprob: -15.450959205627441
    8. ' process' → logprob: -16.325960159301758
    9. 'def' → logprob: -16.950960159301758
    10. 'read' → logprob: -18.325960159301758

Token 930: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -3.47626737493556e-05
    2. '():
' → logprob: -10.37503433227539
    3. ' ():' → logprob: -13.25003433227539
    4. '()' → logprob: -13.37503433227539
    5. 'def' → logprob: -16.87503433227539
    6. ':' → logprob: -17.12503433227539
    7. '(' → logprob: -17.25003433227539
    8. '():
' → logprob: -17.87503433227539
    9. '()>' → logprob: -18.62503433227539
    10. '():

' → logprob: -19.50003433227539

Token 931: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07913190126419067
    2. 'import' → logprob: -2.829131841659546
    3. ' import' → logprob: -4.079132080078125
    4. '	import' → logprob: -9.579132080078125
    5. ' parser' → logprob: -10.954132080078125
    6. '```' → logprob: -12.079132080078125
    7. '   ' → logprob: -13.329132080078125
    8. ' while' → logprob: -14.954132080078125
    9. ' from' → logprob: -15.204132080078125
    10. '	parser' → logprob: -15.454132080078125

Token 932: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' (adapté à ' import') → logprob: -5.049755782238208e-05
    2. ' import' → logprob: -10.00005054473877
    3. 'parser' → logprob: -12.50005054473877
    4. '```' → logprob: -14.25005054473877
    5. '   ' → logprob: -14.37505054473877
    6. 'from' → logprob: -16.125049591064453
    7. '	import' → logprob: -18.375049591064453
    8. ' parser' → logprob: -19.125049591064453
    9. 'f' → logprob: -21.875049591064453
    10. '``' → logprob: -22.000049591064453

Token 933: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -2.339278580620885e-06
    2. ' sys' → logprob: -13.000001907348633
    3. '=sys' → logprob: -20.750001907348633
    4. '	sys' → logprob: -22.250001907348633
    5. '(sys' → logprob: -22.625001907348633
    6. '.sys' → logprob: -23.250001907348633
    7. '```' → logprob: -23.750001907348633
    8. '_sys' → logprob: -23.750001907348633
    9. 'io' → logprob: -24.375001907348633
    10. 'stdin' → logprob: -24.625001907348633

Token 934: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27478599548339844
    2. 'for' → logprob: -1.8997859954833984
    3. ' for' → logprob: -2.5247859954833984
    4. '
' → logprob: -4.649785995483398
    5. ' lines' → logprob: -7.524785995483398
    6. '    
' → logprob: -8.149785995483398
    7. '```' → logprob: -8.774785995483398
    8. 'input' → logprob: -11.399785995483398
    9. 'lines' → logprob: -11.524785995483398
    10. ' readline' → logprob: -12.274785995483398

Token 935: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4159255921840668
    2. 'for' → logprob: -1.4159256219863892
    3. ' for' → logprob: -2.7909255027770996
    4. 'f' → logprob: -3.5409255027770996
    5. ' fence' → logprob: -5.6659255027771
    6. ' f' → logprob: -6.2909255027771
    7. ' lines' → logprob: -6.6659255027771
    8. 'lines' → logprob: -8.790925979614258
    9. ' fences' → logprob: -9.165925979614258
    10. '```' → logprob: -9.665925979614258

Token 936: ' parser' (ID: 14216)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006855915766209364
    2. 'lines' → logprob: -5.2568559646606445
    3. '   ' → logprob: -6.7568559646606445
    4. 'current' → logprob: -8.381855964660645
    5. 'input' → logprob: -9.256855964660645
    6. ' for' → logprob: -9.381855964660645
    7. 'line' → logprob: -10.756855964660645
    8. 'f' → logprob: -11.006855964660645
    9. ' lines' → logprob: -12.006855964660645
    10. 'stdin' → logprob: -13.131855964660645

Token 937: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2256561666727066
    2. '=' → logprob: -1.6006561517715454
    3. '   ' → logprob: -9.100656509399414
    4. '=line' → logprob: -10.225656509399414
    5. '=sys' → logprob: -11.225656509399414
    6. '=
' → logprob: -11.475656509399414
    7. '=parse' → logprob: -11.600656509399414
    8. ' ' → logprob: -11.725656509399414
    9. '.readline' → logprob: -11.975656509399414
    10. 'for' → logprob: -12.225656509399414

Token 938: ' Input' (ID: 10090)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -4.320199877838604e-07
    2. ' Input' → logprob: -14.875
    3. '<Input' → logprob: -19.375
    4. '	Input' → logprob: -20.5
    5. '_input' → logprob: -20.625
    6. '_Input' → logprob: -21.0
    7. 'input' → logprob: -21.25
    8. '\Input' → logprob: -22.0
    9. '
' → logprob: -22.25
    10. '.Input' → logprob: -23.125

Token 939: 'Parser' (ID: 9231)
  Prédit: 'Parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parser' → logprob: -1.5213274309644476e-05
    2. 'parser' → logprob: -11.125015258789062
    3. '_parser' → logprob: -15.250015258789062
    4. '   ' → logprob: -16.875015258789062
    5. 'Processor' → logprob: -16.875015258789062
    6. '(Parser' → logprob: -17.375015258789062
    7. '.Parser' → logprob: -17.625015258789062
    8. '
' → logprob: -18.000015258789062
    9. '```' → logprob: -18.000015258789062
    10. '=' → logprob: -18.250015258789062

Token 940: '()
' (ID: 1234)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11990498751401901
    2. '   ' → logprob: -3.1199049949645996
    3. ' for' → logprob: -3.3699049949645996
    4. '
' → logprob: -3.3699049949645996
    5. '    
' → logprob: -10.119904518127441
    6. '	for' → logprob: -13.244904518127441
    7. 'line' → logprob: -13.369904518127441
    8. '
' → logprob: -14.244904518127441
    9. '```' → logprob: -14.244904518127441
    10. 'lines' → logprob: -14.494904518127441

Token 941: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5779711008071899
    2. '   ' → logprob: -0.8279711008071899
    3. ' for' → logprob: -6.2029709815979
    4. '	for' → logprob: -13.452971458435059
    5. '```' → logprob: -13.452971458435059
    6. '
' → logprob: -13.577971458435059
    7. '    
' → logprob: -13.827971458435059
    8. 'while' → logprob: -14.827971458435059
    9. ' ' → logprob: -15.202971458435059
    10. '  ' → logprob: -15.952971458435059

Token 942: ' end' (ID: 1268)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1637164789135568e-05
    2. '   ' → logprob: -11.750011444091797
    3. ' for' → logprob: -12.500011444091797
    4. 'lines' → logprob: -18.375011444091797
    5. '
' → logprob: -18.750011444091797
    6. '	for' → logprob: -19.250011444091797
    7. 'while' → logprob: -20.750011444091797
    8. '    
' → logprob: -20.875011444091797
    9. '```' → logprob: -21.625011444091797
    10. 'line' → logprob: -21.750011444091797

Token 943: '_of' (ID: 8023)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8819493055343628
    2. ' =' → logprob: -1.2569493055343628
    3. '_of' → logprob: -1.6319493055343628
    4. 'for' → logprob: -2.5069494247436523
    5. 'of' → logprob: -5.006949424743652
    6. 'line' → logprob: -5.131949424743652
    7. '   ' → logprob: -5.631949424743652
    8. '_line' → logprob: -5.756949424743652
    9. '=False' → logprob: -6.881949424743652
    10. 'point' → logprob: -7.381949424743652

Token 944: '_all' (ID: 13305)
  Prédit: 'file'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'file' → logprob: -0.27201616764068604
    2. 'input' → logprob: -1.897016167640686
    3. '_file' → logprob: -3.2720160484313965
    4. 'sys' → logprob: -3.8970160484313965
    5. '_input' → logprob: -4.7720160484313965
    6. '=False' → logprob: -4.8970160484313965
    7. 'False' → logprob: -5.5220160484313965
    8. '=sys' → logprob: -5.8970160484313965
    9. '=' → logprob: -6.0220160484313965
    10. '=True' → logprob: -7.0220160484313965

Token 945: ' =' (ID: 314)
  Prédit: '_input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.179693341255188
    2. '_data' → logprob: -3.3046932220458984
    3. '_d' → logprob: -3.4296932220458984
    4. 'input' → logprob: -3.4296932220458984
    5. '_file' → logprob: -4.054693222045898
    6. ' =' → logprob: -4.179693222045898
    7. '=' → logprob: -4.679693222045898
    8. '_files' → logprob: -4.679693222045898
    9. '_' → logprob: -5.929693222045898
    10. '_dataset' → logprob: -6.179693222045898

Token 946: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0031777136027812958
    2. ' False' → logprob: -5.753177642822266
    3. '   ' → logprob: -18.253177642822266
    4. 'True' → logprob: -18.878177642822266
    5. '(False' → logprob: -19.003177642822266
    6. '=False' → logprob: -19.378177642822266
    7. 'false' → logprob: -22.503177642822266
    8. 'F' → logprob: -22.628177642822266
    9. '  ' → logprob: -23.128177642822266
    10. ' ' → logprob: -23.253177642822266

Token 947: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08029530197381973
    2. '   ' → logprob: -2.5802953243255615
    3. ' for' → logprob: -6.705295085906982
    4. '
' → logprob: -9.08029556274414
    5. 'while' → logprob: -10.08029556274414
    6. '	for' → logprob: -11.20529556274414
    7. '    
' → logprob: -12.08029556274414
    8. '```' → logprob: -12.58029556274414
    9. 'line' → logprob: -15.08029556274414
    10. '  
' → logprob: -15.58029556274414

Token 948: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2521524727344513
    2. 'for' → logprob: -1.502152442932129
    3. ' for' → logprob: -9.002152442932129
    4. 'while' → logprob: -9.252152442932129
    5. '
' → logprob: -12.752152442932129
    6. '	for' → logprob: -14.252152442932129
    7. '    
' → logprob: -15.127152442932129
    8. '```' → logprob: -15.127152442932129
    9. ' while' → logprob: -17.252153396606445
    10. '       ' → logprob: -17.627153396606445

Token 949: ' first' (ID: 1577)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00045259902253746986
    2. '   ' → logprob: -8.000452995300293
    3. 'while' → logprob: -9.250452995300293
    4. ' for' → logprob: -11.000452995300293
    5. '
' → logprob: -12.375452995300293
    6. '```' → logprob: -16.500452041625977
    7. '	for' → logprob: -17.125452041625977
    8. '    
' → logprob: -17.625452041625977
    9. ' while' → logprob: -19.375452041625977
    10. 'line' → logprob: -19.750452041625977

Token 950: '_dataset' (ID: 40568)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.09000147134065628
    2. '_' → logprob: -3.2150015830993652
    3. '=' → logprob: -3.9650015830993652
    4. ' =' → logprob: -4.090001583099365
    5. '_input' → logprob: -5.090001583099365
    6. '_token' → logprob: -6.215001583099365
    7. '=True' → logprob: -7.465001583099365
    8. '_output' → logprob: -7.715001583099365
    9. '_=' → logprob: -8.090001106262207
    10. 'line' → logprob: -9.090001106262207

Token 951: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3133715093135834
    2. '=' → logprob: -1.3133715391159058
    3. '=True' → logprob: -9.188371658325195
    4. '   ' → logprob: -12.563371658325195
    5. ' =
' → logprob: -13.688371658325195
    6. '=False' → logprob: -13.813371658325195
    7. ',' → logprob: -14.063371658325195
    8. ' ' → logprob: -14.563371658325195
    9. '=
' → logprob: -15.688371658325195
    10. '  ' → logprob: -15.938371658325195

Token 952: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.01815696805715561
    2. ' True' → logprob: -4.018157005310059
    3. '   ' → logprob: -11.893157005310059
    4. '=True' → logprob: -16.393156051635742
    5. 'False' → logprob: -16.768156051635742
    6. '(True' → logprob: -17.018156051635742
    7. 'None' → logprob: -19.643156051635742
    8. '1' → logprob: -20.643156051635742
    9. '    ' → logprob: -21.143156051635742
    10. ' ' → logprob: -21.268156051635742

Token 953: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11870964616537094
    2. 'for' → logprob: -2.3687095642089844
    3. ' for' → logprob: -4.118709564208984
    4. '
' → logprob: -6.368709564208984
    5. '    
' → logprob: -8.618709564208984
    6. '```' → logprob: -9.118709564208984
    7. '	for' → logprob: -10.493709564208984
    8. 'while' → logprob: -10.868709564208984
    9. '<|end|>' → logprob: -12.743709564208984
    10. ' while' → logprob: -12.868709564208984

Token 954: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002582677872851491
    2. 'for' → logprob: -6.002582550048828
    3. ' for' → logprob: -9.377582550048828
    4. '
' → logprob: -11.627582550048828
    5. 'while' → logprob: -11.877582550048828
    6. '```' → logprob: -12.002582550048828
    7. '    
' → logprob: -15.877582550048828
    8. ' while' → logprob: -16.127582550048828
    9. '	for' → logprob: -16.877582550048828
    10. 'with' → logprob: -18.002582550048828

Token 955: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.22057539224624634
    2. '   ' → logprob: -1.7205753326416016
    3. 'while' → logprob: -3.9705753326416016
    4. ' for' → logprob: -9.095575332641602
    5. ' while' → logprob: -12.970575332641602
    6. 'line' → logprob: -14.095575332641602
    7. '
' → logprob: -14.095575332641602
    8. '	for' → logprob: -14.220575332641602
    9. '```' → logprob: -15.595575332641602
    10. '	while' → logprob: -16.3455753326416

Token 956: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.5759413838386536
    2. ' line' → logprob: -0.8259413838386536
    3. '	line' → logprob: -13.70094108581543
    4. '   ' → logprob: -14.45094108581543
    5. '(line' → logprob: -15.95094108581543
    6. '_line' → logprob: -17.07594108581543
    7. '=line' → logprob: -17.20094108581543
    8. ' ' → logprob: -18.45094108581543
    9. '#line' → logprob: -18.57594108581543
    10. ',line' → logprob: -18.82594108581543

Token 957: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0019404153572395444
    2. 'in' → logprob: -6.2519402503967285
    3. '   ' → logprob: -12.126940727233887
    4. '	in' → logprob: -12.876940727233887
    5. '_in' → logprob: -13.876940727233887
    6. ' ' → logprob: -14.501940727233887
    7. 'import' → logprob: -15.126940727233887
    8. '    ' → logprob: -15.376940727233887
    9. '```' → logprob: -15.376940727233887
    10. '[line' → logprob: -15.501940727233887

Token 958: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.03804366663098335
    2. ' sys' → logprob: -3.288043737411499
    3. '(sys' → logprob: -13.288043975830078
    4. '=sys' → logprob: -15.038043975830078
    5. '	sys' → logprob: -16.038043975830078
    6. 'import' → logprob: -16.913043975830078
    7. 'stdin' → logprob: -17.538043975830078
    8. 'in' → logprob: -18.038043975830078
    9. '.sys' → logprob: -18.538043975830078
    10. ' in' → logprob: -18.788043975830078

Token 959: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0007734165410511196
    2. 'stdin' → logprob: -7.5007734298706055
    3. '.' → logprob: -8.625773429870605
    4. '.stdout' → logprob: -10.625773429870605
    5. ' stdin' → logprob: -11.750773429870605
    6. '(stdin' → logprob: -12.500773429870605
    7. '.argv' → logprob: -13.375773429870605
    8. '.readline' → logprob: -13.750773429870605
    9. '   ' → logprob: -14.125773429870605
    10. '.stderr' → logprob: -14.250773429870605

Token 960: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9249868988990784
    2. ':
' → logprob: -1.2999868392944336
    3. '       ' → logprob: -1.4249868392944336
    4. ' in' → logprob: -3.2999868392944336
    5. '.strip' → logprob: -3.7999868392944336
    6. '.rstrip' → logprob: -4.049986839294434
    7. '   ' → logprob: -4.799986839294434
    8. '.readline' → logprob: -6.174986839294434
    9. '        
' → logprob: -6.674986839294434
    10. '():
' → logprob: -8.424986839294434

Token 961: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002457238151691854
    2. ' line' → logprob: -8.875246047973633
    3. '```' → logprob: -9.750246047973633
    4. '   ' → logprob: -11.000246047973633
    5. '=line' → logprob: -11.875246047973633
    6. '        
' → logprob: -12.000246047973633
    7. '(line' → logprob: -12.750246047973633
    8. '	line' → logprob: -12.875246047973633
    9. 'line' → logprob: -13.125246047973633
    10. '#line' → logprob: -13.375246047973633

Token 962: ' line' (ID: 2543)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017219437286257744
    2. ' line' → logprob: -4.142219543457031
    3. 'line' (adapté à ' line') → logprob: -7.017219543457031
    4. '   ' → logprob: -8.517219543457031
    5. '	line' → logprob: -9.642219543457031
    6. '           ' → logprob: -11.767219543457031
    7. '=line' → logprob: -11.892219543457031
    8. '#line' → logprob: -12.892219543457031
    9. '[line' → logprob: -13.392219543457031
    10. '(line' → logprob: -13.392219543457031

Token 963: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.731856644153595
    2. ' =' → logprob: -1.2318565845489502
    3. '=line' → logprob: -1.4818565845489502
    4. '.strip' → logprob: -11.606856346130371
    5. '.rstrip' → logprob: -12.481856346130371
    6. '_strip' → logprob: -12.981856346130371
    7. '=str' → logprob: -13.231856346130371
    8. 'rstrip' → logprob: -14.231856346130371
    9. '＝' → logprob: -14.981856346130371
    10. '[line' → logprob: -15.231856346130371

Token 964: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -2.935296834039036e-06
    2. ' line' → logprob: -12.75000286102295
    3. '=line' → logprob: -18.875003814697266
    4. '#line' → logprob: -20.750003814697266
    5. '	line' → logprob: -21.125003814697266
    6. '(line' → logprob: -21.375003814697266
    7. '_line' → logprob: -23.500003814697266
    8. '[line' → logprob: -23.750003814697266
    9. 'Line' → logprob: -24.125003814697266
    10. 'lines' → logprob: -25.125003814697266

Token 965: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.3873046934604645
    2. '.rstrip' → logprob: -1.137304663658142
    3. '.' → logprob: -7.887304782867432
    4. 'rstrip' → logprob: -10.387304306030273
    5. 'strip' → logprob: -10.762304306030273
    6. '.readline' → logprob: -12.637304306030273
    7. '.chomp' → logprob: -13.887304306030273
    8. ' .' → logprob: -14.887304306030273
    9. '_strip' → logprob: -15.012304306030273
    10. '(strip' → logprob: -15.262304306030273

Token 966: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000764479860663414
    2. '<|end|>' → logprob: -7.5007643699646
    3. 'if' → logprob: -9.875764846801758
    4. ' if' → logprob: -10.000764846801758
    5. '<|end|>' → logprob: -10.125764846801758
    6. '        
' → logprob: -10.500764846801758
    7. '
' → logprob: -11.625764846801758
    8. '           ' → logprob: -11.875764846801758
    9. '()' → logprob: -12.250764846801758
    10. ',' → logprob: -12.250764846801758

Token 967: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006404805462807417
    2. 'if' → logprob: -7.375640392303467
    3. ' if' → logprob: -11.750640869140625
    4. '   ' → logprob: -12.250640869140625
    5. '```' → logprob: -14.125640869140625
    6. '           ' → logprob: -14.875640869140625
    7. '	' → logprob: -16.500640869140625
    8. '	if' → logprob: -17.500640869140625
    9. '<|end|>' → logprob: -17.625640869140625
    10. '	   ' → logprob: -18.250640869140625

Token 968: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.002812601625919342
    2. 'result' → logprob: -6.252812385559082
    3. '       ' → logprob: -7.252812385559082
    4. 'res' → logprob: -9.627812385559082
    5. ' if' → logprob: -9.877812385559082
    6. 'output' → logprob: -10.127812385559082
    7. 'response' → logprob: -11.002812385559082
    8. 'ret' → logprob: -13.502812385559082
    9. 'out' → logprob: -16.3778133392334
    10. 'resp' → logprob: -16.5028133392334

Token 969: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.05499500036239624
    2. 'line' → logprob: -3.054995059967041
    3. ' not' → logprob: -5.054995059967041
    4. ' line' → logprob: -11.554994583129883
    5. '	not' → logprob: -18.054994583129883
    6. '```' → logprob: -18.054994583129883
    7. '   ' → logprob: -18.179994583129883
    8. '	line' → logprob: -18.804994583129883
    9. '(line' → logprob: -18.804994583129883
    10. '
' → logprob: -18.804994583129883

Token 970: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -9.615255839889869e-05
    2. ' line' → logprob: -9.250096321105957
    3. '
' → logprob: -18.37509536743164
    4. '(line' → logprob: -18.62509536743164
    5. '	line' → logprob: -18.75009536743164
    6. 'len' → logprob: -19.87509536743164
    7. '   ' → logprob: -20.12509536743164
    8. '#line' → logprob: -21.25009536743164
    9. '[line' → logprob: -21.37509536743164
    10. '```' → logprob: -21.75009536743164

Token 971: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6995636224746704
    2. ':
' → logprob: -0.6995636224746704
    3. ' or' → logprob: -5.824563503265381
    4. '           ' → logprob: -6.449563503265381
    5. '       ' → logprob: -7.574563503265381
    6. '.startswith' → logprob: -7.824563503265381
    7. 'continue' → logprob: -7.949563503265381
    8. ':return' → logprob: -8.199563980102539
    9. '   ' → logprob: -8.949563980102539
    10. 'or' → logprob: -9.449563980102539

Token 972: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006589485798031092
    2. ':' → logprob: -5.881589412689209
    3. 'continue' → logprob: -6.256589412689209
    4. '       ' → logprob: -6.756589412689209
    5. ' continue' → logprob: -7.506589412689209
    6. ':
' → logprob: -9.506589889526367
    7. '          ' → logprob: -10.756589889526367
    8. '               ' → logprob: -11.381589889526367
    9. '   ' → logprob: -11.506589889526367
    10. '		' → logprob: -12.381589889526367

Token 973: ' continue' (ID: 4901)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6956062316894531
    2. 'continue' (adapté à ' continue') → logprob: -0.6956062316894531
    3. ' continue' → logprob: -6.195606231689453
    4. '       ' → logprob: -8.695606231689453
    5. 'break' → logprob: -8.695606231689453
    6. '               ' → logprob: -9.570606231689453
    7. '   ' → logprob: -12.070606231689453
    8. 'if' → logprob: -12.445606231689453
    9. '	continue' → logprob: -13.695606231689453
    10. '_continue' → logprob: -13.945606231689453

Token 974: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.4974866644479334e-05
    2. '   ' → logprob: -12.000015258789062
    3. 'if' → logprob: -12.750015258789062
    4. '        
' → logprob: -13.500015258789062
    5. '           ' → logprob: -13.625015258789062
    6. '
' → logprob: -13.750015258789062
    7. '<|end|>' → logprob: -14.125015258789062
    8. '```' → logprob: -14.375015258789062
    9. 'token' → logprob: -15.125015258789062
    10. ' if' → logprob: -15.250015258789062

Token 975: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.069664333248511e-05
    2. 'if' → logprob: -11.625020980834961
    3. '           ' → logprob: -12.750020980834961
    4. '```' → logprob: -12.750020980834961
    5. '   ' → logprob: -13.125020980834961
    6. 'token' → logprob: -13.500020980834961
    7. '<|end|>' → logprob: -14.000020980834961
    8. ' if' → logprob: -14.125020980834961
    9. 'tokens' → logprob: -15.250020980834961
    10. ',' → logprob: -15.500020980834961

Token 976: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.20035657286643982
    2. 'res' → logprob: -2.4503564834594727
    3. 'output' → logprob: -2.4503564834594727
    4. 'response' → logprob: -5.450356483459473
    5. 'if' → logprob: -5.825356483459473
    6. 'ret' → logprob: -7.075356483459473
    7. '       ' → logprob: -7.450356483459473
    8. 'out' → logprob: -8.575356483459473
    9. 'token' → logprob: -9.450356483459473
    10. 'resp' → logprob: -10.200356483459473

Token 977: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022585332393646
    2. ' =' → logprob: -1.9102258682250977
    3. '<|end|>' → logprob: -15.035225868225098
    4. '=line' → logprob: -15.410225868225098
    5. ' ' → logprob: -15.535225868225098
    6. ' =)' → logprob: -15.785225868225098
    7. '＝' → logprob: -15.910225868225098
    8. '   ' → logprob: -15.910225868225098
    9. '    ' → logprob: -16.78522491455078
    10. '=
' → logprob: -16.78522491455078

Token 978: ' parser' (ID: 14216)
  Prédit: 'parser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parser' → logprob: -0.018150296062231064
    2. ' parser' → logprob: -4.018150329589844
    3. '	parser' → logprob: -15.268150329589844
    4. '(parser' → logprob: -15.768150329589844
    5. '.parser' → logprob: -18.893150329589844
    6. '   ' → logprob: -19.518150329589844
    7. 'parse' → logprob: -19.643150329589844
    8. 'Parser' → logprob: -20.643150329589844
    9. '       ' → logprob: -20.643150329589844
    10. '_parser' → logprob: -20.768150329589844

Token 979: '.parse' (ID: 7259)
  Prédit: '.parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parse' → logprob: -0.06200263649225235
    2. 'parse' → logprob: -2.812002658843994
    3. '.' → logprob: -10.437002182006836
    4. ' parse' → logprob: -13.062002182006836
    5. '=parse' → logprob: -13.562002182006836
    6. '_parse' → logprob: -13.812002182006836
    7. '	parse' → logprob: -14.187002182006836
    8. ' .' → logprob: -15.562002182006836
    9. '```' → logprob: -15.937002182006836
    10. '.process' → logprob: -16.437002182006836

Token 980: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.0004026673559565097
    2. 'line' → logprob: -7.875402450561523
    3. '(line' → logprob: -10.875402450561523
    4. 'Line' → logprob: -13.625402450561523
    5. '```' → logprob: -14.500402450561523
    6. '[line' → logprob: -14.750402450561523
    7. 'result' → logprob: -15.000402450561523
    8. '_' → logprob: -15.000402450561523
    9. ' line' → logprob: -15.375402450561523
    10. '#line' → logprob: -15.875402450561523

Token 981: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.00020401719666551799
    2. '(' → logprob: -8.500204086303711
    3. '(
' → logprob: -14.875204086303711
    4. '[line' → logprob: -16.75020408630371
    5. '(result' → logprob: -17.12520408630371
    6. '=line' → logprob: -17.50020408630371
    7. '(Line' → logprob: -17.62520408630371
    8. '#line' → logprob: -17.75020408630371
    9. ' (' → logprob: -18.12520408630371
    10. '(token' → logprob: -18.25020408630371

Token 982: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03960251063108444
    2. '       ' → logprob: -3.289602518081665
    3. ')
' → logprob: -6.539602279663086
    4. ' )' → logprob: -10.164602279663086
    5. '<|end|>' → logprob: -10.664602279663086
    6. ' if' → logprob: -11.289602279663086
    7. 'if' → logprob: -12.039602279663086
    8. '<|end|>' → logprob: -12.289602279663086
    9. '):
' → logprob: -13.039602279663086
    10. '   ' → logprob: -13.039602279663086

Token 983: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005404626950621605
    2. ' if' → logprob: -6.380404472351074
    3. 'if' → logprob: -6.380404472351074
    4. '```' → logprob: -7.255404472351074
    5. '   ' → logprob: -7.505404472351074
    6. '           ' → logprob: -7.630404472351074
    7. '<|end|>' → logprob: -8.630404472351074
    8. '        ' → logprob: -11.505404472351074
    9. '<|end|>' → logprob: -11.630404472351074
    10. '``' → logprob: -12.130404472351074

Token 984: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.006345849949866533
    2. '       ' → logprob: -5.756345748901367
    3. ' if' → logprob: -5.756345748901367
    4. '```' → logprob: -15.756345748901367
    5. '   ' → logprob: -16.006345748901367
    6. '           ' → logprob: -16.631345748901367
    7. '	if' → logprob: -16.881345748901367
    8. 'continue' → logprob: -17.131345748901367
    9. 'while' → logprob: -18.881345748901367
    10. ';if' → logprob: -19.006345748901367

Token 985: ' result' (ID: 1534)
  Prédit: ' result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.6931471824645996
    2. 'result' → logprob: -0.6931471824645996
    3. '(result' → logprob: -16.693147659301758
    4. '    ' → logprob: -18.568147659301758
    5. '	result' → logprob: -19.068147659301758
    6. '=result' → logprob: -19.818147659301758
    7. '$result' → logprob: -20.068147659301758
    8. ' ' → logprob: -20.068147659301758
    9. '   ' → logprob: -20.193147659301758
    10. '       ' → logprob: -20.568147659301758

Token 986: ' is' (ID: 382)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1134985089302063
    2. '==' → logprob: -2.2384984493255615
    3. ' is' → logprob: -7.613498687744141
    4. '=="' → logprob: -9.36349868774414
    5. '=='' → logprob: -9.98849868774414
    6. 'is' → logprob: -10.73849868774414
    7. '===' → logprob: -12.11349868774414
    8. '=' → logprob: -12.11349868774414
    9. '==
' → logprob: -12.48849868774414
    10. ' in' → logprob: -12.73849868774414

Token 987: ' None' (ID: 4662)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.002301793312653899
    2. 'not' → logprob: -6.6273016929626465
    3. 'None' → logprob: -7.8773016929626465
    4. ''' → logprob: -8.502302169799805
    5. ' not' → logprob: -8.502302169799805
    6. 'NEW' → logprob: -8.752302169799805
    7. ' "' → logprob: -10.627302169799805
    8. '   ' → logprob: -13.002302169799805
    9. ' None' → logprob: -13.377302169799805
    10. '=="' → logprob: -14.127302169799805

Token 988: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01066575851291418
    2. ':' → logprob: -4.6356658935546875
    3. ' or' → logprob: -8.010665893554688
    4. ':
' → logprob: -8.135665893554688
    5. '               ' → logprob: -9.385665893554688
    6. 'continue' → logprob: -9.385665893554688
    7. ' and' → logprob: -10.135665893554688
    8. '       ' → logprob: -10.385665893554688
    9. ' continue' → logprob: -10.885665893554688
    10. '		' → logprob: -12.010665893554688

Token 989: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00029494395130313933
    2. 'continue' → logprob: -8.75029468536377
    3. '       ' → logprob: -10.00029468536377
    4. '               ' → logprob: -10.12529468536377
    5. ' continue' → logprob: -10.25029468536377
    6. '		' → logprob: -12.25029468536377
    7. '   ' → logprob: -13.37529468536377
    8. '	       ' → logprob: -13.62529468536377
    9. ':' → logprob: -13.75029468536377
    10. '<|end|>' → logprob: -14.12529468536377

Token 990: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0815899670124054
    2. 'continue' → logprob: -2.581589937210083
    3. '       ' → logprob: -6.706590175628662
    4. ' continue' → logprob: -7.081590175628662
    5. '               ' → logprob: -7.831590175628662
    6. 'if' (adapté à ' if') → logprob: -8.706589698791504
    7. '   ' → logprob: -9.956589698791504
    8. ' if' → logprob: -11.706589698791504
    9. '	continue' → logprob: -12.456589698791504
    10. '		' → logprob: -12.831589698791504

Token 991: ' parser' (ID: 14216)
  Prédit: 'parser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parser' → logprob: -0.09295568615198135
    2. ' parser' → logprob: -3.2179555892944336
    3. ' not' → logprob: -3.7179555892944336
    4. 'not' → logprob: -3.7179555892944336
    5. 'result' → logprob: -9.967955589294434
    6. '   ' → logprob: -10.092955589294434
    7. '	parser' → logprob: -10.092955589294434
    8. '(parser' → logprob: -11.217955589294434
    9. 'first' → logprob: -12.842955589294434
    10. 'end' → logprob: -12.967955589294434

Token 992: '.current' (ID: 8357)
  Prédit: '.remaining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.remaining' → logprob: -0.00014406509581021965
    2. '.current' → logprob: -9.000144004821777
    3. 'remaining' → logprob: -12.000144004821777
    4. '.first' → logprob: -12.500144004821777
    5. '   ' → logprob: -12.750144004821777
    6. '.' → logprob: -12.875144004821777
    7. '       ' → logprob: -13.500144004821777
    8. ' .' → logprob: -14.375144004821777
    9. '           ' → logprob: -14.500144004821777
    10. '
' → logprob: -15.000144004821777

Token 993: '_ob' (ID: 46416)
  Prédit: '_ob'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ob' → logprob: -4.5252596464706585e-05
    2. 'ob' → logprob: -10.750044822692871
    3. '_result' → logprob: -11.750044822692871
    4. '._' → logprob: -12.000044822692871
    5. 'Observation' → logprob: -12.250044822692871
    6. '_' → logprob: -14.125044822692871
    7. '.ob' → logprob: -14.625044822692871
    8. '   ' → logprob: -14.750044822692871
    9. '
' → logprob: -14.750044822692871
    10. 'result' → logprob: -15.125044822692871

Token 994: 'servation' (ID: 27602)
  Prédit: 'servation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'servation' → logprob: -0.01738007739186287
    2. 'server' → logprob: -4.642380237579346
    3. 's' → logprob: -5.642380237579346
    4. 'serv' → logprob: -6.517380237579346
    5. '_spaces' → logprob: -6.892380237579346
    6. '   ' → logprob: -8.142379760742188
    7. 'spaces' → logprob: -8.392379760742188
    8. '_' → logprob: -9.142379760742188
    9. 'ervation' → logprob: -9.142379760742188
    10. 'servers' → logprob: -9.267379760742188

Token 995: ' is' (ID: 382)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.6400826573371887
    2. ' is' → logprob: -1.265082597732544
    3. ' and' → logprob: -2.265082597732544
    4. 'is' → logprob: -2.515082597732544
    5. '.current' → logprob: -5.890082836151123
    6. '.remaining' → logprob: -6.015082836151123
    7. '.is' → logprob: -8.265082359313965
    8. '   ' → logprob: -8.640082359313965
    9. '       ' → logprob: -9.640082359313965
    10. 'current' → logprob: -9.890082359313965

Token 996: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.06282782554626465
    2. 'not' → logprob: -2.8128278255462646
    3. ' None' → logprob: -7.312828063964844
    4. ' not' → logprob: -8.562828063964844
    5. 'none' → logprob: -14.562828063964844
    6. '   ' → logprob: -14.562828063964844
    7. 'Not' → logprob: -14.687828063964844
    8. '(None' → logprob: -15.812828063964844
    9. '_None' → logprob: -15.937828063964844
    10. '=None' → logprob: -16.562828063964844

Token 997: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.856836199760437
    2. '           ' → logprob: -1.356836199760437
    3. 'and' → logprob: -1.481836199760437
    4. '               ' → logprob: -2.6068363189697266
    5. ':' → logprob: -4.981836318969727
    6. '       ' → logprob: -5.606836318969727
    7. ' or' → logprob: -5.731836318969727
    8. ':
' → logprob: -5.856836318969727
    9. 'continue' → logprob: -9.356836318969727
    10. '                       ' → logprob: -9.481836318969727

Token 998: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010614801198244095
    2. '           ' → logprob: -4.76061487197876
    3. '                       ' → logprob: -7.38561487197876
    4. ' and' → logprob: -7.51061487197876
    5. '                   ' → logprob: -7.63561487197876
    6. 'and' → logprob: -8.510614395141602
    7. 'break' → logprob: -9.635614395141602
    8. '       ' → logprob: -10.135614395141602
    9. '```' → logprob: -11.260614395141602
    10. ' or' → logprob: -12.135614395141602

Token 999: ' continue' (ID: 4901)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.31506964564323425
    2. '               ' → logprob: -1.3150696754455566
    3. ' break' → logprob: -7.065069675445557
    4. '           ' → logprob: -7.565069675445557
    5. '                   ' → logprob: -8.190069198608398
    6. 'continue' (adapté à ' continue') → logprob: -8.940069198608398
    7. '                       ' → logprob: -11.690069198608398
    8. 'return' → logprob: -12.190069198608398
    9. '       ' → logprob: -12.190069198608398
    10. '	break' → logprob: -12.940069198608398

Token 1000: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.033730410039424896
    2. '           ' → logprob: -3.4087305068969727
    3. '```' → logprob: -10.283730506896973
    4. '<|end|>' → logprob: -11.033730506896973
    5. '
' → logprob: -11.408730506896973
    6. 'elif' → logprob: -12.158730506896973
    7. '               ' → logprob: -12.158730506896973
    8. ',' → logprob: -12.533730506896973
    9. '   ' → logprob: -12.783730506896973
    10. 'if' → logprob: -13.408730506896973

Token 1001: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0022067588288336992
    2. '           ' → logprob: -6.127206802368164
    3. '
' → logprob: -11.127206802368164
    4. '```' → logprob: -12.127206802368164
    5. '               ' → logprob: -14.252206802368164
    6. '   ' → logprob: -15.127206802368164
    7. '        
' → logprob: -15.502206802368164
    8. 'if' → logprob: -15.502206802368164
    9. '<|end|>' → logprob: -16.002206802368164
    10. 'elif' → logprob: -16.877206802368164

Token 1002: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017868020804598927
    2. 'if' → logprob: -6.501786708831787
    3. '           ' → logprob: -9.001787185668945
    4. '   ' → logprob: -9.626787185668945
    5. ' if' → logprob: -9.626787185668945
    6. '```' → logprob: -11.251787185668945
    7. 'elif' (adapté à ' elif') → logprob: -11.376787185668945
    8. '
' → logprob: -12.501787185668945
    9. '               ' → logprob: -15.126787185668945
    10. 'print' → logprob: -15.876787185668945

Token 1003: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.0008017649524845183
    2. ' result' → logprob: -7.2508015632629395
    3. 'first' → logprob: -9.375802040100098
    4. 'not' → logprob: -12.375802040100098
    5. ' first' → logprob: -13.375802040100098
    6. '(result' → logprob: -15.125802040100098
    7. ' not' → logprob: -15.250802040100098
    8. '       ' → logprob: -15.625802040100098
    9. '   ' → logprob: -15.750802040100098
    10. '           ' → logprob: -15.875802040100098

Token 1004: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.20211629569530487
    2. ' ==' → logprob: -1.7021162509918213
    3. '=="' → logprob: -7.7021164894104
    4. '=='' → logprob: -8.952116012573242
    5. '[' → logprob: -10.077116012573242
    6. '.startswith' → logprob: -10.327116012573242
    7. '==
' → logprob: -11.202116012573242
    8. '===' → logprob: -11.577116012573242
    9. '```' → logprob: -11.577116012573242
    10. 'startswith' → logprob: -12.827116012573242

Token 1005: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.00023572170175611973
    2. ''' → logprob: -8.750235557556152
    3. ' "' → logprob: -9.625235557556152
    4. 'NEW' → logprob: -11.625235557556152
    5. '
' → logprob: -14.000235557556152
    6. '   ' → logprob: -14.125235557556152
    7. 'new' → logprob: -15.250235557556152
    8. ' ' → logprob: -15.750235557556152
    9. '```' → logprob: -16.75023651123047
    10. '       ' → logprob: -16.87523651123047

Token 1006: 'NEW' (ID: 33569)
  Prédit: 'NEW'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NEW' → logprob: -4.320199877838604e-07
    2. '"' → logprob: -15.625
    3. 'new' → logprob: -16.75
    4. 'NE' → logprob: -17.75
    5. '
' → logprob: -18.25
    6. 'newline' → logprob: -18.25
    7. '.NEW' → logprob: -18.375
    8. '_NEW' → logprob: -18.75
    9. ' NEW' → logprob: -18.875
    10. '```' → logprob: -19.25

Token 1007: '":
' (ID: 9213)
  Prédit: '":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":
' → logprob: -0.37291428446769714
    2. '":' → logprob: -1.3729143142700195
    3. '\n' → logprob: -3.1229143142700195
    4. '       ' → logprob: -5.1229143142700195
    5. ':' → logprob: -6.3729143142700195
    6. '"' → logprob: -6.4979143142700195
    7. '":
' → logprob: -6.7479143142700195
    8. ':
' → logprob: -6.8729143142700195
    9. '"):
' → logprob: -6.8729143142700195
    10. '):
' → logprob: -7.6229143142700195

Token 1008: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3902982473373413
    2. '       ' → logprob: -1.1402982473373413
    3. 'print' → logprob: -5.765298366546631
    4. ' print' → logprob: -8.890297889709473
    5. '```' → logprob: -9.140297889709473
    6. '	       ' → logprob: -11.390297889709473
    7. '               ' → logprob: -11.640297889709473
    8. '   ' → logprob: -12.265297889709473
    9. ':' → logprob: -12.390297889709473
    10. '	print' → logprob: -13.265297889709473

Token 1009: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.33440205454826355
    2. 'if' (adapté à ' if') → logprob: -1.834402084350586
    3. '       ' → logprob: -2.584402084350586
    4. '           ' → logprob: -3.084402084350586
    5. ' if' → logprob: -6.084402084350586
    6. ' print' → logprob: -6.959402084350586
    7. '   ' → logprob: -10.209402084350586
    8. '```' → logprob: -10.459402084350586
    9. '               ' → logprob: -10.709402084350586
    10. 'import' → logprob: -11.834402084350586

Token 1010: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.20149414241313934
    2. ' not' → logprob: -1.7014940977096558
    3. 'first' → logprob: -9.701494216918945
    4. '   ' → logprob: -11.701494216918945
    5. ' first' → logprob: -11.701494216918945
    6. '           ' → logprob: -13.326494216918945
    7. '(not' → logprob: -14.326494216918945
    8. '       ' → logprob: -14.576494216918945
    9. '	not' → logprob: -15.451494216918945
    10. '               ' → logprob: -16.701494216918945

Token 1011: ' first' (ID: 1577)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -5.836499985889532e-05
    2. ' first' → logprob: -9.7500581741333
    3. '[first' → logprob: -18.250059127807617
    4. '	first' → logprob: -18.625059127807617
    5. '   ' → logprob: -18.750059127807617
    6. '(first' → logprob: -19.875059127807617
    7. ':first' → logprob: -20.000059127807617
    8. '
' → logprob: -20.625059127807617
    9. '.first' → logprob: -21.250059127807617
    10. 'First' → logprob: -21.375059127807617

Token 1012: '_dataset' (ID: 40568)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1543932557106018
    2. '
' → logprob: -2.779393196105957
    3. '\n' → logprob: -4.029393196105957
    4. '_print' → logprob: -4.154393196105957
    5. '        
' → logprob: -4.904393196105957
    6. '   ' → logprob: -5.029393196105957
    7. '    
' → logprob: -5.654393196105957
    8. '_' → logprob: -5.779393196105957
    9. '       ' → logprob: -6.029393196105957
    10. '            
' → logprob: -6.279393196105957

Token 1013: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5547863841056824
    2. ':' → logprob: -1.6797864437103271
    3. '               ' → logprob: -2.179786443710327
    4. ':
' → logprob: -2.429786443710327
    5. 'print' → logprob: -3.929786443710327
    6. ' and' → logprob: -5.054786205291748
    7. '       ' → logprob: -5.679786205291748
    8. '   ' → logprob: -5.929786205291748
    9. '==' → logprob: -6.179786205291748
    10. 'and' → logprob: -6.304786205291748

Token 1014: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13590942323207855
    2. 'print' → logprob: -2.13590931892395
    3. '               ' → logprob: -5.010909557342529
    4. ' print' → logprob: -6.260909557342529
    5. '       ' → logprob: -8.510909080505371
    6. '   ' → logprob: -8.760909080505371
    7. '                   ' → logprob: -12.385909080505371
    8. '	print' → logprob: -13.260909080505371
    9. '```' → logprob: -13.760909080505371
    10. '	       ' → logprob: -14.885909080505371

Token 1015: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -3.881560041918419e-05
    2. '           ' → logprob: -10.750039100646973
    3. ' print' → logprob: -11.625039100646973
    4. '               ' → logprob: -11.875039100646973
    5. '                   ' → logprob: -14.250039100646973
    6. '
' → logprob: -14.250039100646973
    7. '	print' → logprob: -16.375038146972656
    8. '       ' → logprob: -16.500038146972656
    9. '   ' → logprob: -17.250038146972656
    10. '```' → logprob: -17.500038146972656

Token 1016: '("' (ID: 568)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0024914760142564774
    2. '()
' → logprob: -6.002491474151611
    3. '("")' → logprob: -11.62749195098877
    4. '""' → logprob: -12.25249195098877
    5. '()

' → logprob: -13.75249195098877
    6. '()
' → logprob: -15.00249195098877
    7. '()\' → logprob: -15.37749195098877
    8. '(' → logprob: -15.62749195098877
    9. ' ()' → logprob: -16.002490997314453
    10. '();' → logprob: -16.502490997314453

Token 1017: 'END' (ID: 7671)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.01517456490546465
    2. '")
' → logprob: -4.265174388885498
    3. '""' → logprob: -7.265174388885498
    4. '"' → logprob: -8.390174865722656
    5. '')' → logprob: -10.765174865722656
    6. ')' → logprob: -11.390174865722656
    7. '()' → logprob: -11.390174865722656
    8. '",' → logprob: -11.515174865722656
    9. '");' → logprob: -12.140174865722656
    10. '")

' → logprob: -12.765174865722656

Token 1018: '")
' (ID: 1896)
  Prédit: '")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.5272052884101868
    2. '")' → logprob: -0.9022052884101868
    3. '\n' → logprob: -5.527205467224121
    4. '")

' → logprob: -10.152205467224121
    5. '")
' → logprob: -11.027205467224121
    6. 'OF' → logprob: -11.777205467224121
    7. 'of' → logprob: -11.777205467224121
    8. '_OF' → logprob: -12.652205467224121
    9. '"' → logprob: -13.152205467224121
    10. ')' → logprob: -13.152205467224121

Token 1019: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00535980612039566
    2. 'print' → logprob: -6.255359649658203
    3. 'else' → logprob: -6.755359649658203
    4. '       ' → logprob: -7.005359649658203
    5. '<|end|>' → logprob: -7.505359649658203
    6. '```' → logprob: -7.755359649658203
    7. '
' → logprob: -8.630359649658203
    8. '               ' → logprob: -9.880359649658203
    9. '<|end|>' → logprob: -10.380359649658203
    10. '            
' → logprob: -11.005359649658203

Token 1020: ' else' (ID: 1203)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.1436232179403305
    2. 'print' → logprob: -2.768623113632202
    3. ' first' → logprob: -3.018623113632202
    4. '           ' → logprob: -4.018623352050781
    5. '   ' → logprob: -6.143623352050781
    6. '       ' → logprob: -6.268623352050781
    7. ' print' → logprob: -9.893623352050781
    8. 'else' (adapté à ' else') → logprob: -10.393623352050781
    9. '               ' → logprob: -10.518623352050781
    10. '```' → logprob: -11.643623352050781

Token 1021: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5045501589775085
    2. ' first' → logprob: -1.3795502185821533
    3. '           ' → logprob: -2.0045502185821533
    4. '
' → logprob: -6.129549980163574
    5. ':
' → logprob: -6.379549980163574
    6. 'first' → logprob: -6.504549980163574
    7. 'First' → logprob: -6.754549980163574
    8. '[first' → logprob: -7.504549980163574
    9. '(first' → logprob: -7.879549980163574
    10. '=True' → logprob: -8.004549980163574

Token 1022: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.31244808435440063
    2. '               ' → logprob: -1.6874480247497559
    3. ' first' → logprob: -2.937448024749756
    4. 'first' → logprob: -3.562448024749756
    5. '       ' → logprob: -7.062448024749756
    6. '                   ' → logprob: -7.687448024749756
    7. '[first' → logprob: -8.187448501586914
    8. '	first' → logprob: -9.437448501586914
    9. '   ' → logprob: -9.562448501586914
    10. '
' → logprob: -9.562448501586914

Token 1023: ' first' (ID: 1577)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' (adapté à ' first') → logprob: -0.02073398418724537
    2. '           ' → logprob: -4.520733833312988
    3. ' first' → logprob: -4.770733833312988
    4. '               ' → logprob: -6.770733833312988
    5. '	first' → logprob: -11.270733833312988
    6. '   ' → logprob: -13.645733833312988
    7. '[first' → logprob: -13.645733833312988
    8. ':first' → logprob: -13.770733833312988
    9. '       ' → logprob: -13.895733833312988
    10. '                   ' → logprob: -14.895733833312988

Token 1024: '_dataset' (ID: 40568)
  Prédit: '_dataset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dataset' → logprob: -0.004042902495712042
    2. '_' → logprob: -5.879043102264404
    3. '=' → logprob: -6.754043102264404
    4. '_=' → logprob: -10.754042625427246
    5. '_d' → logprob: -10.879042625427246
    6. ' =' → logprob: -11.379042625427246
    7. '_data' → logprob: -11.629042625427246
    8. '=False' → logprob: -13.254042625427246
    9. 'dataset' → logprob: -13.379042625427246
    10. 'Dataset' → logprob: -13.504042625427246

Token 1025: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00017004783148877323
    2. ' =' → logprob: -8.75016975402832
    3. '=False' → logprob: -11.37516975402832
    4. '=True' → logprob: -16.75016975402832
    5. '=false' → logprob: -18.62516975402832
    6. '=
' → logprob: -19.12516975402832
    7. '           ' → logprob: -19.75016975402832
    8. '               ' → logprob: -20.50016975402832
    9. '   ' → logprob: -20.62516975402832
    10. '=

' → logprob: -21.37516975402832

Token 1026: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0001584850688232109
    2. ' False' → logprob: -8.750158309936523
    3. 'True' → logprob: -16.750158309936523
    4. '(False' → logprob: -20.875158309936523
    5. 'F' → logprob: -22.125158309936523
    6. '=False' → logprob: -22.375158309936523
    7. '   ' → logprob: -23.500158309936523
    8. ' True' → logprob: -24.750158309936523
    9. 'false' → logprob: -24.875158309936523
    10. '_false' → logprob: -25.000158309936523

Token 1027: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007417303277179599
    2. '       ' → logprob: -8.000741958618164
    3. '<|end|>' → logprob: -8.000741958618164
    4. 'continue' → logprob: -10.750741958618164
    5. '<|end|>' → logprob: -11.500741958618164
    6. '               ' → logprob: -11.500741958618164
    7. '
' → logprob: -11.750741958618164
    8. '```' → logprob: -11.875741958618164
    9. ',' → logprob: -12.750741958618164
    10. '   ' → logprob: -13.500741958618164

Token 1028: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0068894196301698685
    2. '       ' → logprob: -5.006889343261719
    3. 'continue' → logprob: -8.881889343261719
    4. '```' → logprob: -10.881889343261719
    5. '               ' → logprob: -12.131889343261719
    6. ' continue' → logprob: -12.381889343261719
    7. '   ' → logprob: -12.381889343261719
    8. '<|end|>' → logprob: -14.256889343261719
    9. 'print' → logprob: -14.381889343261719
    10. '	       ' → logprob: -15.756889343261719

Token 1029: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.135670468211174
    2. '       ' → logprob: -2.2606704235076904
    3. 'continue' → logprob: -3.8856704235076904
    4. ' continue' → logprob: -6.2606706619262695
    5. 'print' → logprob: -9.26067066192627
    6. '   ' → logprob: -10.38567066192627
    7. '               ' → logprob: -11.63567066192627
    8. '```' → logprob: -12.38567066192627
    9. '	continue' → logprob: -13.63567066192627
    10. 'contin' → logprob: -14.26067066192627

Token 1030: ' start' (ID: 1604)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.12381085753440857
    2. '           ' → logprob: -2.7488107681274414
    3. 'print' → logprob: -3.1238107681274414
    4. ' continue' → logprob: -4.873810768127441
    5. '       ' → logprob: -7.373810768127441
    6. '#' → logprob: -9.373810768127441
    7. ' print' → logprob: -9.873810768127441
    8. '   ' → logprob: -10.248810768127441
    9. '	continue' → logprob: -12.498810768127441
    10. '               ' → logprob: -12.998810768127441

Token 1031: ' new' (ID: 620)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04336566850543022
    2. 'continue' → logprob: -3.668365716934204
    3. '<|end|>' → logprob: -4.793365478515625
    4. '       ' → logprob: -4.918365478515625
    5. 'print' → logprob: -7.293365478515625
    6. '<|end|>' → logprob: -8.793365478515625
    7. '   ' → logprob: -9.043365478515625
    8. '               ' → logprob: -9.543365478515625
    9. 'continued' → logprob: -10.543365478515625
    10. ' continue' → logprob: -10.543365478515625

Token 1032: ' dataset' (ID: 20830)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1033: ';' (ID: 26)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00044437398901209235
    2. '       ' → logprob: -8.375444412231445
    3. 'continue' → logprob: -8.500444412231445
    4. ' continue' → logprob: -11.750444412231445
    5. '<|end|>' → logprob: -14.250444412231445
    6. '               ' → logprob: -14.375444412231445
    7. 'print' → logprob: -14.500444412231445
    8. '```' → logprob: -15.125444412231445
    9. '   ' → logprob: -16.125444412231445
    10. '#' → logprob: -16.500444412231445

Token 1034: ' just' (ID: 1327)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.4390772581100464
    2. ' continue' → logprob: -1.6890772581100464
    3. '           ' → logprob: -2.439077377319336
    4. 'print' → logprob: -2.689077377319336
    5. '       ' → logprob: -4.564077377319336
    6. ' print' → logprob: -5.439077377319336
    7. '   ' → logprob: -7.689077377319336
    8. 'pass' → logprob: -8.814077377319336
    9. '#' → logprob: -10.814077377319336
    10. ' pass' → logprob: -10.939077377319336

Token 1035: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.00040636269841343164
    2. ' continue' → logprob: -8.375406265258789
    3. '   ' → logprob: -9.125406265258789
    4. 'print' → logprob: -10.125406265258789
    5. '       ' → logprob: -10.625406265258789
    6. '           ' → logprob: -14.125406265258789
    7. 'pass' → logprob: -14.250406265258789
    8. '	continue' → logprob: -14.625406265258789
    9. '```' → logprob: -15.000406265258789
    10. 'contin' → logprob: -16.50040626525879

Token 1036: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03826799988746643
    2. '       ' → logprob: -3.2882680892944336
    3. 'continue' → logprob: -8.538268089294434
    4. '<|end|>' → logprob: -11.038268089294434
    5. ' continue' → logprob: -12.288268089294434
    6. '		' → logprob: -12.663268089294434
    7. '               ' → logprob: -12.788268089294434
    8. '	       ' → logprob: -14.288268089294434
    9. '<|end|>' → logprob: -14.288268089294434
    10. '   ' → logprob: -14.788268089294434

Token 1037: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00191399990580976
    2. '       ' → logprob: -6.876914024353027
    3. 'continue' → logprob: -7.126914024353027
    4. '		' → logprob: -10.001914024353027
    5. ' continue' → logprob: -11.251914024353027
    6. '               ' → logprob: -12.001914024353027
    7. '	continue' → logprob: -12.501914024353027
    8. '	       ' → logprob: -12.751914024353027
    9. '```' → logprob: -12.876914024353027
    10. '   ' → logprob: -13.376914024353027

Token 1038: ' continue' (ID: 4901)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002399912802502513
    2. 'continue' (adapté à ' continue') → logprob: -6.377399921417236
    3. '       ' → logprob: -7.377399921417236
    4. ' continue' → logprob: -9.752399444580078
    5. '               ' → logprob: -12.002399444580078
    6. '		' → logprob: -12.127399444580078
    7. '	       ' → logprob: -14.127399444580078
    8. '	continue' → logprob: -14.502399444580078
    9. '   ' → logprob: -14.752399444580078
    10. '_continue' → logprob: -15.002399444580078

Token 1039: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.506661833962426e-05
    2. 'if' → logprob: -10.50008487701416
    3. 'elif' → logprob: -11.12508487701416
    4. '   ' → logprob: -11.25008487701416
    5. '```' → logprob: -11.25008487701416
    6. 'for' → logprob: -12.00008487701416
    7. 'else' → logprob: -12.62508487701416
    8. 'print' → logprob: -12.62508487701416
    9. '           ' → logprob: -13.50008487701416
    10. 'import' → logprob: -14.12508487701416

Token 1040: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00016432604752480984
    2. '   ' → logprob: -9.500164031982422
    3. '```' → logprob: -10.250164031982422
    4. 'print' → logprob: -10.875164031982422
    5. 'if' → logprob: -11.125164031982422
    6. 'for' → logprob: -11.500164031982422
    7. '<|end|>' → logprob: -12.500164031982422
    8. '           ' → logprob: -12.750164031982422
    9. 'while' → logprob: -14.250164031982422
    10. 'elif' → logprob: -14.375164031982422

Token 1041: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02132522314786911
    2. 'if' → logprob: -4.39632511138916
    3. 'print' → logprob: -4.77132511138916
    4. 'elif' → logprob: -8.77132511138916
    5. '   ' → logprob: -9.89632511138916
    6. 'else' (adapté à ' else') → logprob: -10.02132511138916
    7. '```' → logprob: -11.14632511138916
    8. ' if' → logprob: -11.27132511138916
    9. 'for' → logprob: -11.39632511138916
    10. 'while' → logprob: -11.89632511138916

Token 1042: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.017355000600218773
    2. '       ' → logprob: -4.517354965209961
    3. ':' → logprob: -5.642354965209961
    4. ':
' → logprob: -6.517354965209961
    5. 'print' → logprob: -7.392354965209961
    6. ' print' → logprob: -7.517354965209961
    7. '               ' → logprob: -11.142354965209961
    8. '(print' → logprob: -11.142354965209961
    9. '():
' → logprob: -11.267354965209961
    10. '(' → logprob: -11.392354965209961

Token 1043: '           ' (ID: 352)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.11689238250255585
    2. '       ' → logprob: -2.3668923377990723
    3. '           ' → logprob: -4.116892337799072
    4. '   ' → logprob: -8.86689281463623
    5. ' print' → logprob: -9.11689281463623
    6. '               ' → logprob: -13.86689281463623
    7. '```' → logprob: -14.99189281463623
    8. '	print' → logprob: -15.74189281463623
    9. '	       ' → logprob: -17.491891860961914
    10. '                   ' → logprob: -17.616891860961914

Token 1044: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00010151672904612496
    2. '           ' → logprob: -9.500101089477539
    3. ' print' → logprob: -10.750101089477539
    4. '       ' → logprob: -12.750101089477539
    5. '   ' → logprob: -13.000101089477539
    6. '	print' → logprob: -19.00010108947754
    7. '               ' → logprob: -20.00010108947754
    8. '```' → logprob: -20.25010108947754
    9. '         ' → logprob: -22.00010108947754
    10. ' ' → logprob: -22.12510108947754

Token 1045: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -1.4259644558478612e-05
    2. 'result' → logprob: -11.500014305114746
    3. '(' → logprob: -12.500014305114746
    4. '(f' → logprob: -14.875014305114746
    5. '(results' → logprob: -18.62501335144043
    6. '=result' → logprob: -18.87501335144043
    7. ',result' → logprob: -20.50001335144043
    8. ' result' → logprob: -20.87501335144043
    9. '(line' → logprob: -21.25001335144043
    10. '[result' → logprob: -21.37501335144043

Token 1046: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00015038289711810648
    2. '<|end|>' → logprob: -8.875150680541992
    3. ')
' → logprob: -12.625150680541992
    4. '")' → logprob: -13.375150680541992
    5. '<|end|>' → logprob: -13.375150680541992
    6. ' )' → logprob: -13.375150680541992
    7. '')' → logprob: -14.000150680541992
    8. '())' → logprob: -14.250150680541992
    9. ')}' → logprob: -15.125150680541992
    10. '```' → logprob: -16.000150680541992

Token 1047: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -5.383526149671525e-05
    2. ' if' → logprob: -10.625053405761719
    3. '<|end|>' → logprob: -11.125053405761719
    4. '```' → logprob: -11.750053405761719
    5. '   ' → logprob: -12.875053405761719
    6. '
' → logprob: -13.375053405761719
    7. 'for' → logprob: -14.250053405761719
    8. '#' → logprob: -14.375053405761719
    9. '...' → logprob: -15.000053405761719
    10. 'print' → logprob: -15.250053405761719

Token 1048: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02357480861246586
    2. 'print' → logprob: -3.7735748291015625
    3. '   ' → logprob: -8.023574829101562
    4. '```' → logprob: -13.898574829101562
    5. ' if' → logprob: -14.273574829101562
    6. '#' (adapté à ' #') → logprob: -17.273574829101562
    7. '  ' → logprob: -18.023574829101562
    8. '
' → logprob: -18.148574829101562
    9. '...' → logprob: -18.148574829101562
    10. ' print' → logprob: -18.648574829101562

Token 1049: ' after' (ID: 1934)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.008635370060801506
    2. '   ' → logprob: -5.008635520935059
    3. 'if' → logprob: -6.258635520935059
    4. ' print' → logprob: -12.633635520935059
    5. '	print' → logprob: -15.258635520935059
    6. ' if' → logprob: -15.258635520935059
    7. '#print' → logprob: -15.383635520935059
    8. '#' → logprob: -15.883635520935059
    9. '```' → logprob: -16.758634567260742
    10. '  ' → logprob: -16.758634567260742

Token 1050: ' all' (ID: 722)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.005261510610580444
    2. '   ' → logprob: -5.255261421203613
    3. ' print' → logprob: -10.505261421203613
    4. 'if' → logprob: -15.880261421203613
    5. '  ' → logprob: -16.63026237487793
    6. '    ' → logprob: -16.63026237487793
    7. ' ' → logprob: -17.75526237487793
    8. '	print' → logprob: -17.75526237487793
    9. 'printing' → logprob: -18.13026237487793
    10. '```' → logprob: -18.63026237487793

Token 1051: ' inputs' (ID: 21963)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0010723463492468
    2. '   ' → logprob: -7.251072406768799
    3. 'prints' → logprob: -8.37607192993164
    4. 'datasets' → logprob: -9.00107192993164
    5. ' print' → logprob: -12.25107192993164
    6. '(print' → logprob: -14.12607192993164
    7. 'data' → logprob: -14.87607192993164
    8. ' datasets' → logprob: -15.00107192993164
    9. '  ' → logprob: -15.12607192993164
    10. ' prints' → logprob: -15.25107192993164

Token 1052: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005664954078383744
    2. 'if' → logprob: -8.000566482543945
    3. 'print' → logprob: -8.375566482543945
    4. '       ' → logprob: -15.250566482543945
    5. ' if' → logprob: -15.375566482543945
    6. '```' → logprob: -16.250566482543945
    7. ' print' → logprob: -18.375566482543945
    8. 'import' → logprob: -18.625566482543945
    9. '           ' → logprob: -19.250566482543945
    10. 'If' → logprob: -19.375566482543945

Token 1053: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0017231308156624436
    2. '   ' → logprob: -6.751723289489746
    3. 'if' → logprob: -7.501723289489746
    4. ' print' → logprob: -14.251723289489746
    5. ' if' → logprob: -18.25172233581543
    6. '	print' → logprob: -18.50172233581543
    7. '```' → logprob: -18.50172233581543
    8. '       ' → logprob: -19.00172233581543
    9. '  ' → logprob: -19.50172233581543
    10. '    ' → logprob: -21.25172233581543

Token 1054: ' END' (ID: 22374)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.050915397703647614
    2. 'END' → logprob: -3.800915479660034
    3. '"' → logprob: -4.300915241241455
    4. 'print' → logprob: -4.300915241241455
    5. '('' → logprob: -9.050915718078613
    6. '   ' → logprob: -10.300915718078613
    7. 'if' → logprob: -11.050915718078613
    8. '(' → logprob: -11.675915718078613
    9. ''' → logprob: -14.425915718078613
    10. '.END' → logprob: -14.800915718078613

Token 1055: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16023224592208862
    2. 'print' → logprob: -1.9102323055267334
    3. '```' → logprob: -11.910232543945312
    4. ' print' → logprob: -13.785232543945312
    5. '	print' → logprob: -15.285232543945312
    6. '       ' → logprob: -16.410232543945312
    7. '
' → logprob: -18.160232543945312
    8. '`' → logprob: -18.285232543945312
    9. '``' → logprob: -18.410232543945312
    10. 'Print' → logprob: -18.535232543945312

Token 1056: ' last' (ID: 2174)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.17964184284210205
    2. 'the' → logprob: -2.5546417236328125
    3. 'first' → logprob: -3.0546417236328125
    4. 'last' → logprob: -4.0546417236328125
    5. ' not' → logprob: -4.4296417236328125
    6. 'True' → logprob: -4.8046417236328125
    7. 'False' → logprob: -6.5546417236328125
    8. ' the' → logprob: -8.679641723632812
    9. ' True' → logprob: -9.054641723632812
    10. 'final' → logprob: -9.179641723632812

Token 1057: ' dataset' (ID: 20830)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.023565959185361862
    2. '("' → logprob: -4.648565769195557
    3. 'END' → logprob: -4.898565769195557
    4. '()' → logprob: -5.523565769195557
    5. '   ' → logprob: -6.898565769195557
    6. '(' → logprob: -7.023565769195557
    7. '```' → logprob: -8.898566246032715
    8. '('' → logprob: -9.523566246032715
    9. '(print' → logprob: -9.523566246032715
    10. '"' → logprob: -11.148566246032715

Token 1058: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006722352933138609
    2. 'print' → logprob: -5.006722450256348
    3. '```' → logprob: -12.006722450256348
    4. ' print' → logprob: -15.006722450256348
    5. '       ' → logprob: -15.131722450256348
    6. '	print' → logprob: -15.756722450256348
    7. 'if' → logprob: -16.00672149658203
    8. '
' → logprob: -16.88172149658203
    9. '``' → logprob: -17.25672149658203
    10. '(print' → logprob: -18.63172149658203

Token 1059: ' any' (ID: 1062)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.00021867557370569557
    2. ' not' → logprob: -8.500218391418457
    3. 'parser' → logprob: -11.125218391418457
    4. '(not' → logprob: -14.750218391418457
    5. '	not' → logprob: -19.375219345092773
    6. '!' → logprob: -19.500219345092773
    7. '   ' → logprob: -19.625219345092773
    8. ':not' → logprob: -19.750219345092773
    9. ' parser' → logprob: -20.500219345092773
    10. '(parser' → logprob: -20.750219345092773

Token 1060: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.055518634617328644
    2. 'if' → logprob: -3.055518627166748
    3. 'print' → logprob: -5.055518627166748
    4. '```' → logprob: -7.555518627166748
    5. '``' → logprob: -12.180519104003906
    6. ' if' → logprob: -12.430519104003906
    7. '`' → logprob: -15.430519104003906
    8. '	if' → logprob: -15.555519104003906
    9. ' print' → logprob: -16.055519104003906
    10. '	print' → logprob: -16.555519104003906

Token 1061: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7792130708694458
    2. 'print' → logprob: -0.7792130708694458
    3. '   ' → logprob: -2.5292129516601562
    4. ' if' → logprob: -6.404212951660156
    5. '```' → logprob: -7.029212951660156
    6. 'END' → logprob: -9.154212951660156
    7. ' print' → logprob: -9.904212951660156
    8. '``' → logprob: -10.654212951660156
    9. '	if' → logprob: -11.779212951660156
    10. '	print' → logprob: -12.279212951660156

Token 1062: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2539554834365845
    2. 'if' (adapté à ' if') → logprob: -1.5039554834365845
    3. '   ' → logprob: -6.253955364227295
    4. '```' → logprob: -9.253955841064453
    5. ' if' → logprob: -12.628955841064453
    6. '``' → logprob: -13.253955841064453
    7. ' print' → logprob: -14.128955841064453
    8. '	print' → logprob: -17.878955841064453
    9. '`' → logprob: -18.003955841064453
    10. '	if' → logprob: -18.878955841064453

Token 1063: ' not' (ID: 625)
  Prédit: 'parser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parser' → logprob: -0.31331589818000793
    2. 'not' → logprob: -1.3133158683776855
    3. ' not' → logprob: -10.313316345214844
    4. ' parser' → logprob: -11.313316345214844
    5. '(not' → logprob: -12.313316345214844
    6. '(parser' → logprob: -12.563316345214844
    7. '   ' → logprob: -15.188316345214844
    8. '	parser' → logprob: -15.813316345214844
    9. 'parse' → logprob: -15.938316345214844
    10. 'Not' → logprob: -16.688316345214844

Token 1064: ' first' (ID: 1577)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -1.318681188422488e-05
    2. ' first' → logprob: -11.25001335144043
    3. '   ' → logprob: -16.37501335144043
    4. '(first' → logprob: -18.00001335144043
    5. '	first' → logprob: -19.50001335144043
    6. 'parser' → logprob: -20.25001335144043
    7. '[first' → logprob: -20.75001335144043
    8. ' ' → logprob: -21.75001335144043
    9. '  ' → logprob: -22.25001335144043
    10. 'First' → logprob: -22.50001335144043

Token 1065: '_dataset' (ID: 40568)
  Prédit: '_dataset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dataset' → logprob: -5.908022285439074e-05
    2. 'dataset' → logprob: -9.750059127807617
    3. 'ataset' → logprob: -14.750059127807617
    4. '_d' → logprob: -15.875059127807617
    5. '   ' → logprob: -16.500059127807617
    6. ' dataset' → logprob: -16.875059127807617
    7. ':' → logprob: -17.000059127807617
    8. 'Dataset' → logprob: -17.250059127807617
    9. '_' → logprob: -17.375059127807617
    10. '_data' → logprob: -18.125059127807617

Token 1066: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19313271343708038
    2. ':
' → logprob: -1.943132758140564
    3. '   ' → logprob: -3.4431326389312744
    4. '       ' → logprob: -7.8181328773498535
    5. '):
' → logprob: -13.568132400512695
    6. '==' → logprob: -14.068132400512695
    7. ' and' → logprob: -14.318132400512695
    8. '):' → logprob: -14.318132400512695
    9. '():
' → logprob: -14.693132400512695
    10. '```' → logprob: -14.818132400512695

Token 1067: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00031770815257914364
    2. 'print' → logprob: -8.250317573547363
    3. ' print' → logprob: -10.500317573547363
    4. '       ' → logprob: -10.500317573547363
    5. '	print' → logprob: -13.750317573547363
    6. '```' → logprob: -15.125317573547363
    7. '    ' → logprob: -19.37531852722168
    8. '  ' → logprob: -19.50031852722168
    9. '
' → logprob: -19.50031852722168
    10. '(print' → logprob: -20.00031852722168

Token 1068: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5760015845298767
    2. 'print' (adapté à ' print') → logprob: -0.8260015845298767
    3. ' print' → logprob: -9.826001167297363
    4. '       ' → logprob: -11.826001167297363
    5. '	print' → logprob: -14.451001167297363
    6. '```' → logprob: -15.201001167297363
    7. '           ' → logprob: -19.20100212097168
    8. '  ' → logprob: -19.57600212097168
    9. '.print' → logprob: -19.70100212097168
    10. ' ' → logprob: -19.70100212097168

Token 1069: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -4.990154047845863e-05
    2. '('' → logprob: -10.000049591064453
    3. 'END' → logprob: -13.250049591064453
    4. '"' → logprob: -13.375049591064453
    5. '(' → logprob: -13.750049591064453
    6. '(("' → logprob: -17.625049591064453
    7. ' ("' → logprob: -18.500049591064453
    8. '()' → logprob: -19.125049591064453
    9. '(
' → logprob: -20.250049591064453
    10. '-END' → logprob: -20.625049591064453

Token 1070: 'END' (ID: 7671)
  Prédit: 'END'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'END' → logprob: -0.0001422770437784493
    2. '"' → logprob: -8.875142097473145
    3. '("' → logprob: -13.000142097473145
    4. '-END' → logprob: -17.25014305114746
    5. '.END' → logprob: -17.62514305114746
    6. '(' → logprob: -17.75014305114746
    7. ' END' → logprob: -17.87514305114746
    8. ''' → logprob: -18.25014305114746
    9. '('' → logprob: -19.62514305114746
    10. '_END' → logprob: -19.62514305114746

Token 1071: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.03859642893075943
    2. ')' → logprob: -3.2885963916778564
    3. ')")' → logprob: -8.038596153259277
    4. '()' → logprob: -9.038596153259277
    5. '")
' → logprob: -9.788596153259277
    6. '}")' → logprob: -10.663596153259277
    7. '   ' → logprob: -11.413596153259277
    8. '())' → logprob: -11.538596153259277
    9. '```' → logprob: -12.663596153259277
    10. '')' → logprob: -13.038596153259277

Token 1072: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.007954031229019165
    2. '<|end|>' → logprob: -5.132954120635986
    3. '```' → logprob: -6.757954120635986
    4. '#' → logprob: -7.257954120635986
    5. ' if' → logprob: -9.257953643798828
    6. '<|end|>' → logprob: -10.882953643798828
    7. '@if' → logprob: -11.632953643798828
    8. '...' → logprob: -12.257953643798828
    9. '
' → logprob: -12.382953643798828
    10. '__' → logprob: -12.382953643798828

Token 1073: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0005561320576816797
    2. ' __' → logprob: -7.500555992126465
    3. 'name' → logprob: -13.125555992126465
    4. 'True' → logprob: -14.000555992126465
    5. '___' → logprob: -16.50055694580078
    6. '/__' → logprob: -16.50055694580078
    7. '```' → logprob: -16.75055694580078
    8. '_name' → logprob: -16.75055694580078
    9. ' True' → logprob: -18.00055694580078
    10. ' name' → logprob: -18.62555694580078

Token 1074: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0032591153867542744
    2. 'if' → logprob: -7.378259181976318
    3. '.__' → logprob: -7.378259181976318
    4. '__.__' → logprob: -7.503259181976318
    5. '```' → logprob: -7.753259181976318
    6. '==' → logprob: -8.00325870513916
    7. ' ==' → logprob: -8.25325870513916
    8. 'name' → logprob: -9.50325870513916
    9. ' __' → logprob: -9.75325870513916
    10. '__":
' → logprob: -9.87825870513916

Token 1075: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0006557276356033981
    2. '__.__' → logprob: -7.750655651092529
    3. '==' → logprob: -9.125656127929688
    4. '=="' → logprob: -10.250656127929688
    5. '__":
' → logprob: -11.000656127929688
    6. '__["' → logprob: -11.250656127929688
    7. '```' → logprob: -11.250656127929688
    8. '__.' → logprob: -11.625656127929688
    9. ' ==' → logprob: -12.250656127929688
    10. '__[' → logprob: -12.375656127929688

Token 1076: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.2837841808795929
    2. '==' → logprob: -1.5337841510772705
    3. ' ==' → logprob: -3.6587841510772705
    4. '=='' → logprob: -6.53378438949585
    5. '=="' → logprob: -6.78378438949585
    6. '```' → logprob: -7.15878438949585
    7. '__.__' → logprob: -7.15878438949585
    8. '.__' → logprob: -8.158783912658691
    9. '[' → logprob: -8.783783912658691
    10. '__":
' → logprob: -9.033783912658691

Token 1077: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.6931681036949158
    2. ''' → logprob: -0.6931681036949158
    3. '__' → logprob: -11.068167686462402
    4. ' "__' → logprob: -12.568167686462402
    5. ' '__' → logprob: -14.193167686462402
    6. ''name' → logprob: -15.693167686462402
    7. '   ' → logprob: -15.818167686462402
    8. '"name' → logprob: -15.818167686462402
    9. ''"' → logprob: -16.19316864013672
    10. '"class' → logprob: -16.31816864013672

Token 1078: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0019750266801565886
    2. '__' → logprob: -6.251975059509277
    3. '"' → logprob: -10.376975059509277
    4. ''' → logprob: -11.751975059509277
    5. 'name' → logprob: -12.876975059509277
    6. '_main' → logprob: -13.126975059509277
    7. ' main' → logprob: -14.126975059509277
    8. 'built' → logprob: -14.501975059509277
    9. '(main' → logprob: -15.251975059509277
    10. '==' → logprob: -15.376975059509277

Token 1079: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.025712113827466965
    2. '__' → logprob: -3.775712013244629
    3. '__':
' → logprob: -6.025712013244629
    4. '__.' → logprob: -10.775712013244629
    5. '__.__' → logprob: -11.775712013244629
    6. '__["' → logprob: -12.150712013244629
    7. '.' → logprob: -12.275712013244629
    8. '__
' → logprob: -13.275712013244629
    9. '__
' → logprob: -13.275712013244629
    10. '.__' → logprob: -13.650712013244629

Token 1080: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.009334908798336983
    2. '   ' → logprob: -4.759335041046143
    3. '	main' → logprob: -7.384335041046143
    4. ' main' → logprob: -9.759334564208984
    5. 'import' → logprob: -10.259334564208984
    6. '(main' → logprob: -13.509334564208984
    7. '```' → logprob: -13.634334564208984
    8. '_main' → logprob: -13.759334564208984
    9. '    
' → logprob: -14.009334564208984
    10. '
' → logprob: -14.509334564208984

Token 1081: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -4.320199877838604e-07
    2. 'import' → logprob: -15.5
    3. ' main' → logprob: -16.25
    4. '   ' → logprob: -16.75
    5. '	main' → logprob: -18.25
    6. '(main' → logprob: -21.625
    7. '_main' → logprob: -23.125
    8. '.main' → logprob: -23.375
    9. '```' → logprob: -25.25
    10. '
' → logprob: -26.25

Token 1082: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1080
Tokens correctement prédits (1ère position, stricte): 492
Tokens correctement prédits (1ère position, avec adaptation): 545
Tokens correctement prédits (top 10): 961
Précision stricte (1ère position): 45.56%
Précision adaptée (1ère position): 50.46%
Précision (top 10): 88.98%
================================================================================
