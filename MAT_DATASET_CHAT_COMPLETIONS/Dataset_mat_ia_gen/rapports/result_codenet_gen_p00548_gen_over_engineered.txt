================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:31:26
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class OrangePackagingCostOptimizer:
    class OrangeBatch:
        def __init__(self, oranges):
            self.oranges = oranges
            self.size = len(oranges)
            self.max_size = max(oranges)
            self.min_size = min(oranges)

        def cost(self, K):
            return K + self.size * (self.max_size - self.min_size)

    class OrangeConveyorBelt:
        def __init__(self, sizes):
            self.sizes = sizes
            self.N = len(sizes)

        def get_subbatch(self, start, end):
            return OrangePackagingCostOptimizer.OrangeBatch(self.sizes[start:end])

    def __init__(self, N, M, K, sizes):
        self.N = N
        self.M = M
        self.K = K
        self.conveyor = self.OrangeConveyorBelt(sizes)
        self.dp_cache = [None] * (N + 1)
        self.dp_cache[0] = 0

    def optimize(self):
        from collections import deque
        import sys

        # To avoid recalculating min and max repeatedly, we use a sliding window approach with deque
        dp = [sys.maxsize] * (self.N + 1)
        dp[0] = 0

        for i in range(1, self.N + 1):
            max_deque = deque()
            min_deque = deque()
            for j in range(i, max(i - self.M, 0), -1):
                x = self.conveyor.sizes[j - 1]
                while max_deque and max_deque[0] < x:
                    max_deque.popleft()
                max_deque.appendleft(x)
                while min_deque and min_deque[0] > x:
                    min_deque.popleft()
                min_deque.appendleft(x)
                max_orange = max_deque[-1]
                min_orange = min_deque[-1]
                size = i - j + 1
                cost = self.K + size * (max_orange - min_orange)
                if dp[j - 1] + cost < dp[i]:
                    dp[i] = dp[j - 1] + cost
                    
        return dp[self.N]

def main():
    import sys
    input = sys.stdin.readline

    N, M, K = map(int, input().split())
    sizes = [int(input()) for _ in range(N)]

    optimizer = OrangePackagingCostOptimizer(N, M, K, sizes)
    result = optimizer.optimize()
    print(result)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Orange' (ID: 31490)
  → Token d'amorce (pas de prédiction)

Token 2: 'Packaging' (ID: 134013)
  → Token d'amorce (pas de prédiction)

Token 3: 'Cost' (ID: 16815)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.8866976499557495
    2. '(' → logprob: -1.0116976499557495
    3. ':' → logprob: -1.7616976499557495
    4. ' {' → logprob: -3.011697769165039
    5. '.' → logprob: -5.886697769165039
    6. '```' → logprob: -8.886697769165039
    7. ' ' → logprob: -9.136697769165039
    8. '(:' → logprob: -9.261697769165039
    9. ' :' → logprob: -9.386697769165039
    10. ' (' → logprob: -9.886697769165039

Token 4: 'Optimizer' (ID: 120293)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.37412548065185547
    2. '(' → logprob: -1.4991254806518555
    3. ' {' → logprob: -2.4991254806518555
    4. ':' → logprob: -5.2491254806518555
    5. '.' → logprob: -6.9991254806518555
    6. '```' → logprob: -8.874125480651855
    7. ' (' → logprob: -9.124125480651855
    8. ' ' → logprob: -9.374125480651855
    9. ' :' → logprob: -10.374125480651855
    10. '[' → logprob: -11.124125480651855

Token 5: ':
' (ID: 734)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5249311327934265
    2. '{' → logprob: -1.1499311923980713
    3. ':' → logprob: -2.8999311923980713
    4. '.' → logprob: -3.3999311923980713
    5. ' {' → logprob: -5.774930953979492
    6. '[' → logprob: -9.774930953979492
    7. ' ' → logprob: -10.149930953979492
    8. '```' → logprob: -10.149930953979492
    9. ' (' → logprob: -10.399930953979492
    10. '(:' → logprob: -11.274930953979492

Token 6: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4934701919555664
    2. ':' → logprob: -0.9934701919555664
    3. '```' → logprob: -4.618470191955566
    4. '   ' → logprob: -6.118470191955566
    5. '(
' → logprob: -6.118470191955566
    6. ' (' → logprob: -6.618470191955566
    7. '\' → logprob: -7.493470191955566
    8. '():' → logprob: -7.618470191955566
    9. ' ' → logprob: -7.743470191955566
    10. '()' → logprob: -7.993470191955566

Token 7: ' class' (ID: 744)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.628886878490448
    2. '(' → logprob: -1.0038869380950928
    3. ':' → logprob: -3.5038869380950928
    4. ' ' → logprob: -3.8788869380950928
    5. '```' → logprob: -3.8788869380950928
    6. ' (' → logprob: -5.003886699676514
    7. '\' → logprob: -5.253886699676514
    8. ' def' → logprob: -5.753886699676514
    9. '_' → logprob: -5.878886699676514
    10. '    ' → logprob: -6.378886699676514

Token 8: ' Orange' (ID: 31490)
  Prédit: ' Packaging'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Packaging' → logprob: -0.7165060639381409
    2. ' ' → logprob: -1.216506004333496
    3. '   ' → logprob: -3.591506004333496
    4. ' Product' → logprob: -3.591506004333496
    5. ' Orange' → logprob: -3.841506004333496
    6. ' Optim' → logprob: -3.841506004333496
    7. ' Method' → logprob: -4.466506004333496
    8. ' Fruit' → logprob: -4.591506004333496
    9. ' Pack' → logprob: -4.716506004333496
    10. '  ' → logprob: -4.716506004333496

Token 9: 'Batch' (ID: 22276)
  Prédit: 'Packaging'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Packaging' → logprob: -0.062251899391412735
    2. ':' → logprob: -3.3122518062591553
    3. 'Pack' → logprob: -5.062252044677734
    4. 'Packing' → logprob: -5.437252044677734
    5. 'Pe' → logprob: -5.562252044677734
    6. 'Package' → logprob: -6.437252044677734
    7. '):' → logprob: -6.437252044677734
    8. ' Packaging' → logprob: -6.937252044677734
    9. 's' → logprob: -7.062252044677734
    10. '():' → logprob: -7.312252044677734

Token 10: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09236763417720795
    2. '(' → logprob: -2.467367649078369
    3. ' :' → logprob: -7.092367649078369
    4. '<|end|>' → logprob: -7.092367649078369
    5. '.' → logprob: -7.842367649078369
    6. '    ' → logprob: -8.342367172241211
    7. '   ' → logprob: -8.467367172241211
    8. ' (' → logprob: -8.842367172241211
    9. '```' → logprob: -8.842367172241211
    10. '[' → logprob: -9.342367172241211

Token 11: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22985100746154785
    2. '   ' → logprob: -2.729851007461548
    3. '(' → logprob: -2.854851007461548
    4. '    ' → logprob: -3.479851007461548
    5. '(n' → logprob: -3.604851007461548
    6. ' (' → logprob: -5.979850769042969
    7. '\' → logprob: -5.979850769042969
    8. '<|end|>' → logprob: -5.979850769042969
    9. '(
' → logprob: -6.104850769042969
    10. '        ' → logprob: -6.229850769042969

Token 12: ' def' (ID: 1056)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4559516906738281
    2. '        ' → logprob: -2.205951690673828
    3. '(' → logprob: -2.830951690673828
    4. '            ' → logprob: -3.205951690673828
    5. '       ' → logprob: -3.455951690673828
    6. '(n' → logprob: -3.455951690673828
    7. ' ' → logprob: -4.080951690673828
    8. 'n' → logprob: -4.205951690673828
    9. ' (' → logprob: -4.580951690673828
    10. '   ' → logprob: -4.955951690673828

Token 13: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0007966428529471159
    2. '__' → logprob: -7.250796794891357
    3. ' init' → logprob: -10.1257963180542
    4. ' calculate' → logprob: -10.7507963180542
    5. 'init' → logprob: -11.2507963180542
    6. '_init' → logprob: -12.1257963180542
    7. ' _' → logprob: -13.3757963180542
    8. ' ' → logprob: -13.3757963180542
    9. 'calculate' → logprob: -13.7507963180542
    10. ' ' → logprob: -14.6257963180542

Token 14: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -9.491498531133402e-06
    2. 'ini' → logprob: -11.750009536743164
    3. 'i' → logprob: -13.750009536743164
    4. ' init' → logprob: -15.500009536743164
    5. 'in' → logprob: -15.875009536743164
    6. 'int' → logprob: -17.000009536743164
    7. 'inti' → logprob: -17.750009536743164
    8. '	init' → logprob: -17.875009536743164
    9. '_init' → logprob: -18.000009536743164
    10. '   ' → logprob: -18.000009536743164

Token 15: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.10841211676597595
    2. '(' → logprob: -2.483412027359009
    3. '__' → logprob: -4.233412265777588
    4. '(self' → logprob: -6.233412265777588
    5. '__(
' → logprob: -6.483412265777588
    6. ' (' → logprob: -6.983412265777588
    7. '__((' → logprob: -9.35841178894043
    8. ')(' → logprob: -9.98341178894043
    9. '```' → logprob: -9.98341178894043
    10. '__('' → logprob: -10.10841178894043

Token 16: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.033952489495277405
    2. ' self' → logprob: -3.408952474594116
    3. '(self' → logprob: -8.283952713012695
    4. ')' → logprob: -10.533952713012695
    5. '       ' → logprob: -11.908952713012695
    6. '_self' → logprob: -12.533952713012695
    7. ' )' → logprob: -12.783952713012695
    8. ' ' → logprob: -13.283952713012695
    9. ',self' → logprob: -13.283952713012695
    10. 's' → logprob: -13.408952713012695

Token 17: ',' (ID: 11)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.8549627661705017
    2. '(self' → logprob: -1.3549628257751465
    3. ',' → logprob: -2.2299628257751465
    4. '(' → logprob: -2.6049628257751465
    5. ')' → logprob: -2.7299628257751465
    6. '<|end|>' → logprob: -3.8549628257751465
    7. ' (' → logprob: -3.9799628257751465
    8. ' self' → logprob: -4.6049628257751465
    9. '_' → logprob: -4.8549628257751465
    10. '_self' → logprob: -5.9799628257751465

Token 18: ' oranges' (ID: 120311)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.047385916113853455
    2. 'self' → logprob: -3.4223859310150146
    3. ' batch' → logprob: -4.9223856925964355
    4. ' quantity' → logprob: -6.2973856925964355
    5. ' oranges' → logprob: -6.4223856925964355
    6. ' weight' → logprob: -7.5473856925964355
    7. ' orange' → logprob: -7.7973856925964355
    8. ' size' → logprob: -8.297386169433594
    9. 'quantity' → logprob: -8.422386169433594
    10. '        ' → logprob: -8.547386169433594

Token 19: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2528063952922821
    2. ',' → logprob: -1.6278064250946045
    3. '_count' → logprob: -4.627806186676025
    4. '_size' → logprob: -5.002806186676025
    5. ':' → logprob: -5.377806186676025
    6. ' ):' → logprob: -6.502806186676025
    7. ' ,' → logprob: -6.752806186676025
    8. '_quantity' → logprob: -7.752806186676025
    9. '_ids' → logprob: -7.877806186676025
    10. '):
' → logprob: -7.877806186676025

Token 20: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07236369699239731
    2. '            ' → logprob: -3.6973636150360107
    3. ',' → logprob: -4.07236385345459
    4. '):' → logprob: -4.44736385345459
    5. ':' → logprob: -5.07236385345459
    6. '       ' → logprob: -6.44736385345459
    7. '```' → logprob: -6.57236385345459
    8. '               ' → logprob: -6.69736385345459
    9. ')' → logprob: -7.19736385345459
    10. '.' → logprob: -7.32236385345459

Token 21: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.2553189992904663
    2. '               ' → logprob: -1.8803189992904663
    3. ' self' → logprob: -2.755319118499756
    4. '           ' → logprob: -4.755319118499756
    5. '   ' → logprob: -8.505318641662598
    6. '             ' → logprob: -9.005318641662598
    7. '       ' → logprob: -9.380318641662598
    8. '            ' → logprob: -9.880318641662598
    9. '                   ' → logprob: -10.630318641662598
    10. ' ' → logprob: -11.005318641662598

Token 22: '.or' (ID: 18041)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4762462079524994
    2. '.or' → logprob: -0.9762462377548218
    3. ' .' → logprob: -6.351246356964111
    4. '_or' → logprob: -8.976245880126953
    5. '.orange' → logprob: -9.101245880126953
    6. 'or' → logprob: -9.851245880126953
    7. ' oranges' → logprob: -10.976245880126953
    8. '._' → logprob: -11.226245880126953
    9. '.Or' → logprob: -11.226245880126953
    10. '.ap' → logprob: -11.601245880126953

Token 23: 'anges' (ID: 8273)
  Prédit: 'anges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anges' → logprob: -0.0004834617720916867
    2. 'ages' → logprob: -8.500483512878418
    3. '   ' → logprob: -9.375483512878418
    4. 'an' → logprob: -9.750483512878418
    5. 'ang' → logprob: -10.625483512878418
    6. 'ange' → logprob: -11.250483512878418
    7. 'ges' → logprob: -11.375483512878418
    8. 'anes' → logprob: -11.500483512878418
    9. '```' → logprob: -11.500483512878418
    10. 'angles' → logprob: -11.625483512878418

Token 24: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012911133468151093
    2. '=' → logprob: -4.387911319732666
    3. ')' → logprob: -8.887910842895508
    4. '.' → logprob: -9.262910842895508
    5. '<|end|>' → logprob: -9.637910842895508
    6. '.append' → logprob: -10.512910842895508
    7. '<|end|>' → logprob: -11.137910842895508
    8. '=[]' → logprob: -11.637910842895508
    9. '[' → logprob: -12.012910842895508
    10. '_' → logprob: -12.387910842895508

Token 25: ' oranges' (ID: 120311)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.11306369304656982
    2. ' oranges' → logprob: -2.2380638122558594
    3. ' or' → logprob: -8.61306381225586
    4. 'orph' → logprob: -11.11306381225586
    5. '[]' → logprob: -11.23806381225586
    6. ' ' → logprob: -11.36306381225586
    7. 'orange' → logprob: -12.11306381225586
    8. '	or' → logprob: -12.61306381225586
    9. ' []' → logprob: -13.48806381225586
    10. '   ' → logprob: -13.86306381225586

Token 26: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 27: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 28: ' self' (ID: 1051)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 29: '.size' (ID: 4463)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.06084920093417168
    2. ' .' → logprob: -3.810849189758301
    3. '._' → logprob: -4.560849189758301
    4. '.size' → logprob: -5.060849189758301
    5. '.count' → logprob: -5.185849189758301
    6. '.cost' → logprob: -5.810849189758301
    7. '.is' → logprob: -6.685849189758301
    8. '.length' → logprob: -6.685849189758301
    9. '.weight' → logprob: -7.185849189758301
    10. '.max' → logprob: -7.560849189758301

Token 30: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05894738808274269
    2. '=' → logprob: -2.9339473247528076
    3. '<|end|>' → logprob: -6.308947563171387
    4. '_' → logprob: -6.933947563171387
    5. ' ' → logprob: -7.433947563171387
    6. ')' → logprob: -7.933947563171387
    7. '<|end|>' → logprob: -9.183947563171387
    8. ',' → logprob: -10.558947563171387
    9. '.' → logprob: -10.683947563171387
    10. 's' → logprob: -10.933947563171387

Token 31: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.000204851632588543
    2. 'len' → logprob: -8.500205039978027
    3. '(len' → logprob: -14.000205039978027
    4. '=len' → logprob: -15.375205039978027
    5. ' ' → logprob: -16.37520408630371
    6. '	len' → logprob: -17.00020408630371
    7. ' sum' → logprob: -17.25020408630371
    8. ',len' → logprob: -17.37520408630371
    9. '[len' → logprob: -17.62520408630371
    10. ' ' → logprob: -17.75020408630371

Token 32: '(or' (ID: 144036)
  Prédit: '(or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(or' → logprob: -0.07529880851507187
    2. '(self' → logprob: -2.82529878616333
    3. '(' → logprob: -4.32529878616333
    4. '(of' → logprob: -12.325299263000488
    5. '(
' → logprob: -13.450299263000488
    6. 'self' → logprob: -13.450299263000488
    7. 'or' → logprob: -13.700299263000488
    8. '(o' → logprob: -13.950299263000488
    9. '(

' → logprob: -14.075299263000488
    10. '(ob' → logprob: -14.325299263000488

Token 33: 'anges' (ID: 8273)
  Prédit: '(or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(or' → logprob: -0.8177904486656189
    2. '(self' → logprob: -1.0677905082702637
    3. 'anges' → logprob: -1.9427905082702637
    4. 'or' → logprob: -2.9427905082702637
    5. 'self' → logprob: -4.817790508270264
    6. '(' → logprob: -4.817790508270264
    7. 'ages' → logprob: -7.317790508270264
    8. 'ang' → logprob: -7.442790508270264
    9. 'ange' → logprob: -8.067790031433105
    10. 'angles' → logprob: -8.192790031433105

Token 34: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.7697225252486533e-06
    2. ' )' → logprob: -14.125003814697266
    3. '       ' → logprob: -14.250003814697266
    4. ')
' → logprob: -14.500003814697266
    5. '           ' → logprob: -14.625003814697266
    6. '))' → logprob: -15.875003814697266
    7. ')return' → logprob: -16.000003814697266
    8. ')))' → logprob: -16.250003814697266
    9. '<|end|>' → logprob: -16.250003814697266
    10. '`)' → logprob: -16.250003814697266

Token 35: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7609170079231262
    2. '<|end|>' → logprob: -1.5109169483184814
    3. '       ' → logprob: -2.3859169483184814
    4. '    
' → logprob: -2.5109169483184814
    5. '   ' → logprob: -2.6359169483184814
    6. ' 
' → logprob: -4.1359171867370605
    7. '\n' → logprob: -4.7609171867370605
    8. '        
' → logprob: -4.7609171867370605
    9. ' ' → logprob: -5.1359171867370605
    10. '    ' → logprob: -5.2609171867370605

Token 36: ' self' (ID: 1051)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6236578822135925
    2. '       ' → logprob: -1.1236579418182373
    3. '<|end|>' → logprob: -2.9986579418182373
    4. '        
' → logprob: -3.6236579418182373
    5. '    
' → logprob: -3.9986579418182373
    6. '   ' → logprob: -4.748657703399658
    7. '\n' → logprob: -4.748657703399658
    8. '```' → logprob: -4.873657703399658
    9. 'newline' → logprob: -5.248657703399658
    10. '\' → logprob: -5.998657703399658

Token 37: '.max' (ID: 11883)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.008075246587395668
    2. ' .' → logprob: -6.25807523727417
    3. '.cost' → logprob: -6.75807523727417
    4. '._' → logprob: -7.25807523727417
    5. '.total' → logprob: -7.50807523727417
    6. '.weight' → logprob: -7.63307523727417
    7. '.is' → logprob: -7.75807523727417
    8. '.color' → logprob: -7.88307523727417
    9. '.size' → logprob: -8.008075714111328
    10. '.value' → logprob: -8.258075714111328

Token 38: '_size' (ID: 5044)
  Prédit: '_weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weight' → logprob: -0.05809100717306137
    2. '_size' → logprob: -3.058090925216675
    3. '_' → logprob: -5.558091163635254
    4. '_price' → logprob: -6.683091163635254
    5. '_weights' → logprob: -7.183091163635254
    6. '_cost' → logprob: -7.433091163635254
    7. '_w' → logprob: -7.558091163635254
    8. '_quality' → logprob: -7.933091163635254
    9. '_or' → logprob: -8.183091163635254
    10. '_count' → logprob: -8.433091163635254

Token 39: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18017201125621796
    2. '=' → logprob: -1.8051719665527344
    3. '<|end|>' → logprob: -8.430171966552734
    4. '_' → logprob: -9.305171966552734
    5. ' ' → logprob: -10.180171966552734
    6. ',' → logprob: -10.805171966552734
    7. ')' → logprob: -10.930171966552734
    8. '=None' → logprob: -11.930171966552734
    9. 's' → logprob: -12.180171966552734
    10. '  ' → logprob: -12.305171966552734

Token 40: ' max' (ID: 2999)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.041161421686410904
    2. ' max' → logprob: -4.16616153717041
    3. '10' → logprob: -5.04116153717041
    4. ' self' → logprob: -5.29116153717041
    5. '20' → logprob: -5.29116153717041
    6. '100' → logprob: -5.79116153717041
    7. '50' → logprob: -6.79116153717041
    8. '15' → logprob: -7.29116153717041
    9. 'max' → logprob: -7.66616153717041
    10. ' len' → logprob: -7.66616153717041

Token 41: '(or' (ID: 144036)
  Prédit: '(or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(or' → logprob: -0.0815756767988205
    2. '(self' → logprob: -2.956575632095337
    3. '(' → logprob: -3.706575632095337
    4. '(len' → logprob: -6.456575870513916
    5. '(o' → logprob: -9.831575393676758
    6. '([' → logprob: -10.706575393676758
    7. '(ord' → logprob: -11.081575393676758
    8. '(s' → logprob: -11.206575393676758
    9. '_size' → logprob: -11.331575393676758
    10. '(
' → logprob: -11.456575393676758

Token 42: 'anges' (ID: 8273)
  Prédit: 'anges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anges' → logprob: -0.11761149019002914
    2. 'ages' → logprob: -2.7426114082336426
    3. '(self' → logprob: -3.8676114082336426
    4. '(or' → logprob: -4.867611408233643
    5. 'or' → logprob: -4.992611408233643
    6. 'self' → logprob: -5.117611408233643
    7. 'age' → logprob: -6.867611408233643
    8. 'ge' → logprob: -6.992611408233643
    9. 'angles' → logprob: -7.617611408233643
    10. 'ange' → logprob: -7.742611408233643

Token 43: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003190193965565413
    2. ' )' → logprob: -8.500319480895996
    3. ',' → logprob: -9.875319480895996
    4. '       ' → logprob: -10.625319480895996
    5. '           ' → logprob: -11.625319480895996
    6. ')
' → logprob: -11.750319480895996
    7. ' if' → logprob: -11.750319480895996
    8. '))' → logprob: -13.000319480895996
    9. '               ' → logprob: -13.125319480895996
    10. '[' → logprob: -13.750319480895996

Token 44: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7380123734474182
    2. '<|end|>' → logprob: -0.9880123734474182
    3. '       ' → logprob: -2.2380123138427734
    4. ' 
' → logprob: -4.863012313842773
    5. '    
' → logprob: -4.863012313842773
    6. '<|end|>' → logprob: -4.988012313842773
    7. '```' → logprob: -5.363012313842773
    8. '        
' → logprob: -5.488012313842773
    9. '           ' → logprob: -6.238012313842773
    10. ',' → logprob: -6.488012313842773

Token 45: ' self' (ID: 1051)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 46: '.min' (ID: 8649)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.18039029836654663
    2. ' .' → logprob: -2.4303903579711914
    3. '_cost' → logprob: -4.305390357971191
    4. '_max' → logprob: -4.555390357971191
    5. '.max' → logprob: -4.680390357971191
    6. '_size' → logprob: -4.805390357971191
    7. '._' → logprob: -5.055390357971191
    8. '_' → logprob: -5.805390357971191
    9. '.size' → logprob: -6.055390357971191
    10. 'def' → logprob: -6.430390357971191

Token 47: '_size' (ID: 5044)
  Prédit: '_size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -0.005517615471035242
    2. '_' → logprob: -5.255517482757568
    3. '_or' → logprob: -9.880517959594727
    4. ' =' → logprob: -9.880517959594727
    5. '_value' → logprob: -10.255517959594727
    6. '_s' → logprob: -10.505517959594727
    7. 'size' → logprob: -10.505517959594727
    8. '()' → logprob: -10.630517959594727
    9. '(' → logprob: -11.255517959594727
    10. '_SIZE' → logprob: -11.505517959594727

Token 48: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05488758534193039
    2. '=' → logprob: -2.929887533187866
    3. '<|end|>' → logprob: -13.554887771606445
    4. ' ' → logprob: -13.679887771606445
    5. ' =
' → logprob: -14.304887771606445
    6. ',' → logprob: -14.304887771606445
    7. 's' → logprob: -14.554887771606445
    8. '=min' → logprob: -15.054887771606445
    9. ')' → logprob: -15.429887771606445
    10. '=max' → logprob: -15.804887771606445

Token 49: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.35070905089378357
    2. 'min' → logprob: -1.225709080696106
    3. '(min' → logprob: -6.100708961486816
    4. '=min' → logprob: -12.475708961486816
    5. '	min' → logprob: -12.725708961486816
    6. '(' → logprob: -13.100708961486816
    7. ' or' → logprob: -13.225708961486816
    8. ',min' → logprob: -13.225708961486816
    9. '[min' → logprob: -13.600708961486816
    10. '.min' → logprob: -13.725708961486816

Token 50: '(or' (ID: 144036)
  Prédit: '(or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(or' → logprob: -0.034259065985679626
    2. '(self' → logprob: -3.534259080886841
    3. '(' → logprob: -5.409258842468262
    4. 'self' → logprob: -11.909258842468262
    5. '(of' → logprob: -12.409258842468262
    6. ' (' → logprob: -12.909258842468262
    7. 'or' → logprob: -13.034258842468262
    8. '(
' → logprob: -13.159258842468262
    9. '(

' → logprob: -13.409258842468262
    10. '(and' → logprob: -14.159258842468262

Token 51: 'anges' (ID: 8273)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.08141954243183136
    2. 'anges' → logprob: -2.7064194679260254
    3. '(or' → logprob: -4.581419467926025
    4. 'ages' → logprob: -8.081419944763184
    5. ' oranges' → logprob: -8.081419944763184
    6. '(self' → logprob: -8.956419944763184
    7. ')' → logprob: -9.706419944763184
    8. 'angles' → logprob: -9.956419944763184
    9. 'ang' → logprob: -10.331419944763184
    10. 'sizes' → logprob: -10.331419944763184

Token 52: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.1888679839321412e-05
    2. ')
' → logprob: -12.000021934509277
    3. ' )' → logprob: -12.125021934509277
    4. '       ' → logprob: -12.750021934509277
    5. '           ' → logprob: -13.000021934509277
    6. '))' → logprob: -13.375021934509277
    7. '),' → logprob: -14.250021934509277
    8. '()' → logprob: -14.625021934509277
    9. ')}' → logprob: -14.750021934509277
    10. '}' → logprob: -14.875021934509277

Token 53: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.027095720171928406
    2. '   ' → logprob: -4.027095794677734
    3. '<|end|>' → logprob: -5.777095794677734
    4. '    
' → logprob: -6.152095794677734
    5. '       ' → logprob: -6.277095794677734
    6. 'def' → logprob: -7.152095794677734
    7. '        
' → logprob: -7.902095794677734
    8. '

' → logprob: -8.902095794677734
    9. '<|end|>' → logprob: -8.902095794677734
    10. '```' → logprob: -9.777095794677734

Token 54: ' def' (ID: 1056)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.214738130569458
    2. 'def' (adapté à ' def') → logprob: -1.964738130569458
    3. '   ' → logprob: -3.714738130569458
    4. '       ' → logprob: -4.339737892150879
    5. '    
' → logprob: -4.839737892150879
    6. '        
' → logprob: -5.464737892150879
    7. ' def' → logprob: -6.714737892150879
    8. '<|end|>' → logprob: -7.339737892150879
    9. '

' → logprob: -7.714737892150879
    10. '```' → logprob: -8.464737892150879

Token 55: ' cost' (ID: 3097)
  Prédit: ' calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' calculate' → logprob: -0.3975858688354492
    2. ' get' → logprob: -2.022585868835449
    3. ' average' → logprob: -2.772585868835449
    4. '_' → logprob: -3.022585868835449
    5. ' _' → logprob: -3.897585868835449
    6. ' optimize' → logprob: -4.022585868835449
    7. '_average' → logprob: -4.522585868835449
    8. ' compute' → logprob: -4.772585868835449
    9. ' def' → logprob: -4.897585868835449
    10. ' total' → logprob: -5.147585868835449

Token 56: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.14325131475925446
    2. '(' → logprob: -2.018251419067383
    3. '_' → logprob: -8.893251419067383
    4. 'self' → logprob: -9.643251419067383
    5. 's' → logprob: -9.768251419067383
    6. '_per' → logprob: -10.018251419067383
    7. '_self' → logprob: -10.143251419067383
    8. '(
' → logprob: -10.268251419067383
    9. '_(' → logprob: -10.393251419067383
    10. ' (' → logprob: -10.643251419067383

Token 57: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7032780647277832
    2. '):' → logprob: -0.9532780647277832
    3. ' ):' → logprob: -3.328278064727783
    4. ' ,' → logprob: -3.328278064727783
    5. '[' → logprob: -3.703278064727783
    6. ')' → logprob: -4.453278064727783
    7. ' )' → logprob: -5.828278064727783
    8. '.' → logprob: -5.953278064727783
    9. ',size' → logprob: -6.828278064727783
    10. '.size' → logprob: -7.328278064727783

Token 58: ' K' (ID: 658)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.3079896569252014
    2. ' max' → logprob: -1.5579895973205566
    3. ' size' → logprob: -4.182989597320557
    4. ')' → logprob: -4.932989597320557
    5. ' )' → logprob: -4.932989597320557
    6. 'self' → logprob: -5.182989597320557
    7. ' batch' → logprob: -5.807989597320557
    8. ' threshold' → logprob: -5.807989597320557
    9. ' package' → logprob: -6.182989597320557
    10. ' capacity' → logprob: -6.307989597320557

Token 59: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03385614976286888
    2. ' ):' → logprob: -3.533856153488159
    3. ',' → logprob: -6.40885591506958
    4. ')' → logprob: -6.53385591506958
    5. '):
' → logprob: -7.78385591506958
    6. '=' → logprob: -9.033856391906738
    7. '   ' → logprob: -9.033856391906738
    8. ' )' → logprob: -9.408856391906738
    9. ' ' → logprob: -9.533856391906738
    10. '  ' → logprob: -10.283856391906738

Token 60: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.17748987674713135
    2. '(self' → logprob: -3.177489757537842
    3. '       ' → logprob: -3.552489757537842
    4. '(' → logprob: -3.552489757537842
    5. '):' → logprob: -4.427489757537842
    6. '           ' → logprob: -4.677489757537842
    7. '```' → logprob: -4.927489757537842
    8. '=' → logprob: -5.052489757537842
    9. ' :' → logprob: -5.427489757537842
    10. ' =' → logprob: -5.427489757537842

Token 61: ' return' (ID: 622)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -1.1015574932098389
    2. ' return' → logprob: -1.4765574932098389
    3. '           ' → logprob: -1.7265574932098389
    4. ' if' → logprob: -2.476557493209839
    5. 'return' (adapté à ' return') → logprob: -3.101557493209839
    6. ' ' → logprob: -3.226557493209839
    7. '       ' → logprob: -3.351557493209839
    8. 'max' → logprob: -4.101557731628418
    9. '        ' → logprob: -4.601557731628418
    10. 'if' → logprob: -5.851557731628418

Token 62: ' K' (ID: 658)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.14242282509803772
    2. ' self' → logprob: -2.392422914505005
    3. 'max' → logprob: -3.517422914505005
    4. 'self' → logprob: -5.142422676086426
    5. ' sum' → logprob: -6.517422676086426
    6. '(max' → logprob: -6.517422676086426
    7. ' (' → logprob: -7.017422676086426
    8. ' abs' → logprob: -7.017422676086426
    9. ' min' → logprob: -7.892422676086426
    10. ' K' → logprob: -8.267422676086426

Token 63: ' +' (ID: 659)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0359913632273674
    2. ' +' → logprob: -3.9109914302825928
    3. '*' → logprob: -4.285991191864014
    4. '+' → logprob: -6.660991191864014
    5. ' -' → logprob: -9.160991668701172
    6. ' **' → logprob: -10.535991668701172
    7. ' /' → logprob: -10.535991668701172
    8. ' ' → logprob: -10.660991668701172
    9. '*self' → logprob: -10.910991668701172
    10. ' *
' → logprob: -11.535991668701172

Token 64: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.47328808903694153
    2. ' max' → logprob: -1.5982880592346191
    3. 'self' → logprob: -2.223288059234619
    4. 'max' → logprob: -3.598288059234619
    5. ' sum' → logprob: -3.973288059234619
    6. ' (' → logprob: -5.098288059234619
    7. 'sum' → logprob: -5.098288059234619
    8. '(self' → logprob: -5.223288059234619
    9. '(max' → logprob: -6.098288059234619
    10. '(sum' → logprob: -8.598288536071777

Token 65: '.size' (ID: 4463)
  Prédit: '.size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -0.4472786486148834
    2. '.max' → logprob: -1.197278618812561
    3. '.or' → logprob: -3.4472787380218506
    4. '.' → logprob: -3.8222787380218506
    5. '.cost' → logprob: -6.1972784996032715
    6. ' .' → logprob: -6.6972784996032715
    7. '.min' → logprob: -7.5722784996032715
    8. '`.' → logprob: -8.32227897644043
    9. '.s' → logprob: -9.32227897644043
    10. '._' → logprob: -9.44727897644043

Token 66: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.06415556371212006
    2. '*' → logprob: -2.9391555786132812
    3. ' ' → logprob: -5.564155578613281
    4. '<|end|>' → logprob: -5.689155578613281
    5. ' *
' → logprob: -8.189155578613281
    6. ' -' → logprob: -8.439155578613281
    7. '*self' → logprob: -8.939155578613281
    8. '    ' → logprob: -8.939155578613281
    9. '   ' → logprob: -9.064155578613281
    10. '```' → logprob: -9.314155578613281

Token 67: ' (' (ID: 350)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.7819803357124329
    2. 'self' → logprob: -0.7819803357124329
    3. ' max' → logprob: -2.906980276107788
    4. 'max' → logprob: -4.281980514526367
    5. '(self' → logprob: -4.906980514526367
    6. ' (' → logprob: -5.031980514526367
    7. '(' → logprob: -6.781980514526367
    8. '(max' → logprob: -6.906980514526367
    9. ' ' → logprob: -9.156980514526367
    10. ' abs' → logprob: -9.656980514526367

Token 68: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07529593259096146
    2. ' self' → logprob: -2.700295925140381
    3. 'max' → logprob: -5.700295925140381
    4. ' max' → logprob: -6.575295925140381
    5. '(self' → logprob: -8.450296401977539
    6. '           ' → logprob: -8.825296401977539
    7. 'K' → logprob: -9.450296401977539
    8. ' (' → logprob: -10.325296401977539
    9. ' K' → logprob: -10.700296401977539
    10. '   ' → logprob: -10.825296401977539

Token 69: '.max' (ID: 11883)
  Prédit: '.max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.max' → logprob: -0.009696951135993004
    2. '.' → logprob: -4.884696960449219
    3. '_max' → logprob: -7.259696960449219
    4. 'max' → logprob: -7.884696960449219
    5. ' .' → logprob: -8.009696960449219
    6. '_.' → logprob: -8.384696960449219
    7. '._' → logprob: -9.134696960449219
    8. '.size' → logprob: -9.759696960449219
    9. '       ' → logprob: -9.884696960449219
    10. '[' → logprob: -10.509696960449219

Token 70: '_size' (ID: 5044)
  Prédit: '_size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -0.014859631657600403
    2. '_' → logprob: -4.389859676361084
    3. '-' → logprob: -7.264859676361084
    4. ' -' → logprob: -7.389859676361084
    5. ')' → logprob: -8.139859199523926
    6. 'size' → logprob: -8.764859199523926
    7. '-size' → logprob: -9.139859199523926
    8. '(' → logprob: -9.264859199523926
    9. '_SIZE' → logprob: -9.764859199523926
    10. '-_' → logprob: -10.014859199523926

Token 71: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.00656901067122817
    2. '-' → logprob: -5.256568908691406
    3. ' ' → logprob: -6.631568908691406
    4. ' ' → logprob: -11.381568908691406
    5. '<|end|>' → logprob: -13.256568908691406
    6. '  ' → logprob: -14.006568908691406
    7. ' -
' → logprob: -14.131568908691406
    8. ' –' → logprob: -14.506568908691406
    9. ')' → logprob: -14.756568908691406
    10. ' -

' → logprob: -15.756568908691406

Token 72: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.28170132637023926
    2. ' self' → logprob: -1.4067013263702393
    3. 'K' → logprob: -8.28170108795166
    4. ' K' → logprob: -8.53170108795166
    5. '           ' → logprob: -10.90670108795166
    6. '(self' → logprob: -11.03170108795166
    7. ' ' → logprob: -11.40670108795166
    8. ')' → logprob: -11.53170108795166
    9. '	self' → logprob: -11.53170108795166
    10. '<|end|>' → logprob: -11.90670108795166

Token 73: '.min' (ID: 8649)
  Prédit: '.min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.min' → logprob: -0.01001046597957611
    2. '.max' → logprob: -5.260010242462158
    3. 'in' → logprob: -5.760010242462158
    4. '.size' → logprob: -6.760010242462158
    5. 'min' → logprob: -8.635010719299316
    6. '.in' → logprob: -10.260010719299316
    7. '.n' → logprob: -10.260010719299316
    8. '.' → logprob: -10.510010719299316
    9. '_min' → logprob: -10.635010719299316
    10. 'inz' → logprob: -11.010010719299316

Token 74: '_size' (ID: 5044)
  Prédit: '_size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -0.0015304554253816605
    2. '_' → logprob: -6.626530647277832
    3. ')' → logprob: -9.251530647277832
    4. '_)' → logprob: -10.001530647277832
    5. 'size' → logprob: -11.001530647277832
    6. 'ize' → logprob: -12.001530647277832
    7. ')_' → logprob: -12.251530647277832
    8. ' _' → logprob: -12.376530647277832
    9. '+' → logprob: -12.501530647277832
    10. '_s' → logprob: -12.501530647277832

Token 75: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.6696149840718135e-05
    2. '       ' → logprob: -11.125056266784668
    3. ' )' → logprob: -11.125056266784668
    4. '))' → logprob: -11.250056266784668
    5. ')
' → logprob: -12.375056266784668
    6. '   ' → logprob: -13.250056266784668
    7. ')**' → logprob: -13.500056266784668
    8. ')}' → logprob: -14.250056266784668
    9. ')`' → logprob: -14.375056266784668
    10. '```' → logprob: -14.500056266784668

Token 76: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3997213542461395
    2. '<|end|>' → logprob: -1.149721384048462
    3. '<|end|>' → logprob: -5.024721145629883
    4. '   ' → logprob: -6.024721145629883
    5. '    
' → logprob: -6.774721145629883
    6. '```' → logprob: -6.774721145629883
    7. '

' → logprob: -8.524721145629883
    8. ' 
' → logprob: -8.524721145629883
    9. '' → logprob: -8.649721145629883
    10. '
' → logprob: -8.774721145629883

Token 77: ' class' (ID: 744)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1048673614859581
    2. 'def' → logprob: -2.854867458343506
    3. '   ' → logprob: -3.979867458343506
    4. '    
' → logprob: -4.479867458343506
    5. ' 
' → logprob: -5.354867458343506
    6. ' def' → logprob: -5.604867458343506
    7. '

' → logprob: -6.854867458343506
    8. '        
' → logprob: -7.479867458343506
    9. '' → logprob: -8.479866981506348
    10. '
    
' → logprob: -8.479866981506348

Token 78: ' Orange' (ID: 31490)
  Prédit: ' Green'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Green' → logprob: -0.8362590670585632
    2. ' Lemon' → logprob: -1.586259126663208
    3. ' Apple' → logprob: -2.211259126663208
    4. ' Orange' → logprob: -2.336259126663208
    5. ' Blue' → logprob: -3.711259126663208
    6. ' Banana' → logprob: -3.836259126663208
    7. 'Green' → logprob: -4.211258888244629
    8. 'L' → logprob: -4.461258888244629
    9. 'Apple' → logprob: -4.836258888244629
    10. ' Red' → logprob: -4.836258888244629

Token 79: 'Con' (ID: 909)
  Prédit: 'Batch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Batch' → logprob: -0.010197760537266731
    2. 'Packaging' → logprob: -4.635197639465332
    3. 'Packing' → logprob: -8.260197639465332
    4. 'Bag' → logprob: -10.135197639465332
    5. 'Pack' → logprob: -10.760197639465332
    6. ' Batch' → logprob: -10.760197639465332
    7. '_batch' → logprob: -11.635197639465332
    8. 'Pricing' → logprob: -11.760197639465332
    9. 'Basket' → logprob: -11.760197639465332
    10. 'Package' → logprob: -12.385197639465332

Token 80: 'veyor' (ID: 99834)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.09655178338289261
    2. 's' → logprob: -2.4715518951416016
    3. 'solid' → logprob: -5.221551895141602
    4. 'veyor' → logprob: -7.471551895141602
    5. 'verter' → logprob: -7.721551895141602
    6. 'centr' → logprob: -7.846551895141602
    7. 'd' → logprob: -9.096551895141602
    8. 'n' → logprob: -9.346551895141602
    9. 'tent' → logprob: -9.971551895141602
    10. 'sum' → logprob: -10.096551895141602

Token 81: 'B' (ID: 33)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000227496653678827
    2. 'belt' → logprob: -9.500227928161621
    3. ':
' → logprob: -9.875227928161621
    4. '):' → logprob: -11.125227928161621
    5. 'B' → logprob: -11.250227928161621
    6. '():' → logprob: -11.625227928161621
    7. ',' → logprob: -11.750227928161621
    8. 'Line' → logprob: -11.875227928161621
    9. 'Cost' → logprob: -12.250227928161621
    10. 'Bel' → logprob: -12.375227928161621

Token 82: 'elt' (ID: 3292)
  Prédit: 'elt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elt' → logprob: -0.0426487997174263
    2. 'atch' → logprob: -3.4176487922668457
    3. 'elts' → logprob: -5.042648792266846
    4. 'atches' → logprob: -6.917648792266846
    5. 'ox' → logprob: -8.042649269104004
    6. 'atching' → logprob: -8.417649269104004
    7. 'el' → logprob: -8.792649269104004
    8. 'oard' → logprob: -8.792649269104004
    9. 'atcher' → logprob: -9.292649269104004
    10. 'o' → logprob: -9.292649269104004

Token 83: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001612267515156418
    2. ':
' → logprob: -9.000161170959473
    3. '(' → logprob: -10.625161170959473
    4. '<|end|>' → logprob: -12.625161170959473
    5. ':def' → logprob: -12.625161170959473
    6. '(object' → logprob: -13.125161170959473
    7. ' :' → logprob: -13.625161170959473
    8. '):' → logprob: -13.750161170959473
    9. '():' → logprob: -14.250161170959473
    10. '>:' → logprob: -15.125161170959473

Token 84: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 85: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9344083666801453
    2. 'def' (adapté à ' def') → logprob: -1.30940842628479
    3. '       ' → logprob: -2.18440842628479
    4. ':' → logprob: -2.55940842628479
    5. ':
' → logprob: -2.93440842628479
    6. ' def' → logprob: -3.05940842628479
    7. '
' → logprob: -3.68440842628479
    8. '(' → logprob: -5.309408187866211
    9. '    ' → logprob: -6.184408187866211
    10. '<|end|>' → logprob: -6.184408187866211

Token 86: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.007144648116081953
    2. '_' → logprob: -5.132144451141357
    3. '__' → logprob: -7.382144451141357
    4. ' _' → logprob: -7.882144451141357
    5. ' ' → logprob: -8.757144927978516
    6. '_init' → logprob: -10.882144927978516
    7. ' ___' → logprob: -11.007144927978516
    8. ' def' → logprob: -12.632144927978516
    9. ' `' → logprob: -12.632144927978516
    10. ' ____' → logprob: -13.007144927978516

Token 87: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.002212704159319401
    2. 'i' → logprob: -6.5022125244140625
    3. 'ini' → logprob: -7.8772125244140625
    4. 'in' → logprob: -8.127212524414062
    5. 'int' → logprob: -11.627212524414062
    6. 'nit' → logprob: -11.627212524414062
    7. '   ' → logprob: -12.877212524414062
    8. 'n' → logprob: -13.127212524414062
    9. 'innit' → logprob: -13.127212524414062
    10. ' init' → logprob: -13.502212524414062

Token 88: '__(' (ID: 8241)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04322286322712898
    2. ' (' → logprob: -3.2932229042053223
    3. '(self' → logprob: -5.918222904205322
    4. '<|end|>' → logprob: -6.543222904205322
    5. '__(' → logprob: -7.293222904205322
    6. ',' → logprob: -9.168222427368164
    7. ' ' → logprob: -9.668222427368164
    8. ')(' → logprob: -10.293222427368164
    9. '_(' → logprob: -10.543222427368164
    10. 'self' → logprob: -10.668222427368164

Token 89: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005242652725428343
    2. ')' → logprob: -5.630242824554443
    3. ' self' → logprob: -6.505242824554443
    4. '):
' → logprob: -10.255242347717285
    5. ',' → logprob: -10.505242347717285
    6. '       ' → logprob: -11.380242347717285
    7. '),' → logprob: -11.880242347717285
    8. '0' → logprob: -11.880242347717285
    9. 'length' → logprob: -12.130242347717285
    10. 's' → logprob: -12.255242347717285

Token 90: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014458700083196163
    2. ' ,' → logprob: -4.264458656311035
    3. '<|end|>' → logprob: -8.264458656311035
    4. ')' → logprob: -11.139458656311035
    5. '[],' → logprob: -11.889458656311035
    6. '<|end|>' → logprob: -13.264458656311035
    7. ' (' → logprob: -13.514458656311035
    8. '_,' → logprob: -13.514458656311035
    9. ' ' → logprob: -13.639458656311035
    10. '[' → logprob: -13.764458656311035

Token 91: ' sizes' (ID: 16174)
  Prédit: ' oranges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' oranges' → logprob: -0.8562148213386536
    2. ' self' → logprob: -1.3562147617340088
    3. 'self' → logprob: -1.7312147617340088
    4. 'or' → logprob: -2.606214761734009
    5. ' or' → logprob: -3.356214761734009
    6. ' batches' → logprob: -4.981215000152588
    7. ' orange' → logprob: -5.106215000152588
    8. ' lengths' → logprob: -5.731215000152588
    9. 'orange' → logprob: -6.106215000152588
    10. ')' → logprob: -6.106215000152588

Token 92: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2263014018535614
    2. '):' → logprob: -1.6013014316558838
    3. ')' → logprob: -7.226301193237305
    4. '):
' → logprob: -10.351301193237305
    5. ' ,' → logprob: -10.726301193237305
    6. '_list' → logprob: -10.976301193237305
    7. ' ' → logprob: -10.976301193237305
    8. '=[]' → logprob: -11.351301193237305
    9. ' ):' → logprob: -11.601301193237305
    10. '[]):' → logprob: -12.101301193237305

Token 93: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09693032503128052
    2. '           ' → logprob: -3.2219302654266357
    3. '<|end|>' → logprob: -3.4719302654266357
    4. ':' → logprob: -4.346930503845215
    5. ',' → logprob: -5.721930503845215
    6. '   ' → logprob: -6.846930503845215
    7. '<|end|>' → logprob: -7.221930503845215
    8. ' ' → logprob: -7.346930503845215
    9. '        ' → logprob: -7.596930503845215
    10. '
' → logprob: -8.096930503845215

Token 94: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.05553092807531357
    2. 'self' (adapté à ' self') → logprob: -2.9305310249328613
    3. '       ' → logprob: -7.430531024932861
    4. ' from' → logprob: -11.055530548095703
    5. '        ' → logprob: -11.680530548095703
    6. '	self' → logprob: -11.930530548095703
    7. '   ' → logprob: -12.055530548095703
    8. 'from' → logprob: -12.305530548095703
    9. '    ' → logprob: -12.305530548095703
    10. 'import' → logprob: -12.930530548095703

Token 95: '.s' (ID: 640)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.610249400138855
    2. ' .' → logprob: -1.360249400138855
    3. '.s' → logprob: -1.610249400138855
    4. 'sizes' → logprob: -8.735249519348145
    5. 's' → logprob: -9.235249519348145
    6. ' ' → logprob: -10.110249519348145
    7. '_sizes' → logprob: -10.610249519348145
    8. ' =' → logprob: -12.610249519348145
    9. '.or' → logprob: -12.860249519348145
    10. '   ' → logprob: -13.235249519348145

Token 96: 'izes' (ID: 6370)
  Prédit: 'izes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'izes' → logprob: -0.0002964935847558081
    2. 'iz' → logprob: -8.375296592712402
    3. 'i' → logprob: -10.125296592712402
    4. 'ize' → logprob: -10.625296592712402
    5. 'IZES' → logprob: -13.750296592712402
    6. '_sizes' → logprob: -16.125295639038086
    7. ' ' → logprob: -16.250295639038086
    8. '   ' → logprob: -16.750295639038086
    9. 'sizes' → logprob: -16.750295639038086
    10. 'ixes' → logprob: -17.750295639038086

Token 97: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04300136864185333
    2. '=' → logprob: -3.168001413345337
    3. ' ' → logprob: -14.293001174926758
    4. ')' → logprob: -14.918001174926758
    5. ' =
' → logprob: -15.168001174926758
    6. '.' → logprob: -15.543001174926758
    7. '=[]' → logprob: -15.668001174926758
    8. 's' → logprob: -16.043001174926758
    9. ',' → logprob: -16.168001174926758
    10. ' =[' → logprob: -16.543001174926758

Token 98: ' sizes' (ID: 16174)
  Prédit: ' sizes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sizes' → logprob: -0.38688725233078003
    2. 'sizes' → logprob: -1.1368873119354248
    3. '[]' → logprob: -12.511887550354004
    4. 's' → logprob: -13.011887550354004
    5. '_sizes' → logprob: -13.261887550354004
    6. '[' → logprob: -13.386887550354004
    7. ' []' → logprob: -13.511887550354004
    8. ' ' → logprob: -13.636887550354004
    9. '	s' → logprob: -13.761887550354004
    10. 'size' → logprob: -14.011887550354004

Token 99: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4756002128124237
    2. '<|end|>' → logprob: -0.9756002426147461
    3. '<|end|>' → logprob: -6.850600242614746
    4. ' ' → logprob: -9.350600242614746
    5. ')' → logprob: -9.975600242614746
    6. '       ' → logprob: -9.975600242614746
    7. '

' → logprob: -10.100600242614746
    8. '\n' → logprob: -10.600600242614746
    9. '    
' → logprob: -10.600600242614746
    10. ' 
' → logprob: -10.600600242614746

Token 100: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18236349523067474
    2. '<|end|>' → logprob: -1.807363510131836
    3. '       ' → logprob: -6.932363510131836
    4. '<|end|>' → logprob: -7.432363510131836
    5. '           ' → logprob: -8.682363510131836
    6. ' ' → logprob: -8.807363510131836
    7. '   ' → logprob: -9.057363510131836
    8. '

' → logprob: -9.057363510131836
    9. '    
' → logprob: -9.057363510131836
    10. 'def' → logprob: -9.432363510131836

Token 101: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5823337435722351
    2. 'self' (adapté à ' self') → logprob: -0.8323337435722351
    3. '       ' → logprob: -5.957333564758301
    4. '   ' → logprob: -6.707333564758301
    5. 'from' → logprob: -7.332333564758301
    6. '           ' → logprob: -7.707333564758301
    7. 'n' → logprob: -7.832333564758301
    8. 'def' → logprob: -8.2073335647583
    9. ' from' → logprob: -8.5823335647583
    10. ' ' → logprob: -8.8323335647583

Token 102: '.N' (ID: 4439)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.05868550390005112
    2. '_length' → logprob: -3.808685541152954
    3. '_len' → logprob: -4.183685302734375
    4. '_' → logprob: -4.933685302734375
    5. ' n' → logprob: -6.058685302734375
    6. '_n' → logprob: -6.308685302734375
    7. ' .' → logprob: -6.558685302734375
    8. '_size' → logprob: -6.558685302734375
    9. ' length' → logprob: -6.808685302734375
    10. '_lengths' → logprob: -7.058685302734375

Token 103: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0013778526335954666
    2. '=' → logprob: -6.751378059387207
    3. '<|end|>' → logprob: -9.251378059387207
    4. ' ' → logprob: -9.626378059387207
    5. '=len' → logprob: -10.376378059387207
    6. ' =
' → logprob: -11.251378059387207
    7. '<|end|>' → logprob: -14.376378059387207
    8. '=int' → logprob: -15.751378059387207
    9. 'len' → logprob: -15.751378059387207
    10. ' =
' → logprob: -16.12637710571289

Token 104: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.005234713666141033
    2. 'len' → logprob: -5.255234718322754
    3. '(len' → logprob: -14.880234718322754
    4. '=len' → logprob: -15.380234718322754
    5. '[len' → logprob: -15.505234718322754
    6. '	len' → logprob: -16.130233764648438
    7. ',len' → logprob: -17.255233764648438
    8. ' ' → logprob: -18.380233764648438
    9. '<len' → logprob: -18.505233764648438
    10. '<|end|>' → logprob: -20.380233764648438

Token 105: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0010391215328127146
    2. '(' → logprob: -6.876039028167725
    3. '(self' → logprob: -12.251039505004883
    4. ' (' → logprob: -14.126039505004883
    5. 'sizes' → logprob: -14.751039505004883
    6. '(
' → logprob: -15.626039505004883
    7. 's' → logprob: -15.876039505004883
    8. '(size' → logprob: -17.251039505004883
    9. ' ' → logprob: -17.751039505004883
    10. '(scores' → logprob: -17.751039505004883

Token 106: 'izes' (ID: 6370)
  Prédit: 'izes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'izes' → logprob: -1.1041145626222715e-05
    2. 'IZES' → logprob: -12.500011444091797
    3. 'ize' → logprob: -13.375011444091797
    4. '(self' → logprob: -13.500011444091797
    5. 'iz' → logprob: -13.750011444091797
    6. 'elf' → logprob: -14.000011444091797
    7. ')' → logprob: -14.125011444091797
    8. 'sizes' → logprob: -14.625011444091797
    9. '(' → logprob: -14.750011444091797
    10. '```' → logprob: -15.250011444091797

Token 107: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006265374249778688
    2. '<|end|>' → logprob: -7.500626564025879
    3. ')
' → logprob: -10.125626564025879
    4. ' )' → logprob: -11.125626564025879
    5. '<|end|>' → logprob: -11.125626564025879
    6. ' ' → logprob: -14.125626564025879
    7. '       ' → logprob: -14.250626564025879
    8. '),' → logprob: -14.875626564025879
    9. '   ' → logprob: -15.000626564025879
    10. '}' → logprob: -15.000626564025879

Token 108: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.26292508840560913
    2. '       ' → logprob: -2.262925148010254
    3. '<|end|>' → logprob: -2.887925148010254
    4. 'def' → logprob: -3.262925148010254
    5. ' def' → logprob: -4.262925148010254
    6. '   ' → logprob: -4.887925148010254
    7. '        
' → logprob: -5.137925148010254
    8. ' ' → logprob: -6.262925148010254
    9. '    
' → logprob: -7.387925148010254
    10. ' 
' → logprob: -7.637925148010254

Token 109: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.005528642795979977
    2. '   ' → logprob: -5.505528450012207
    3. ' def' → logprob: -6.755528450012207
    4. 'from' → logprob: -8.630528450012207
    5. '
' → logprob: -9.880528450012207
    6. '       ' → logprob: -10.005528450012207
    7. 'import' → logprob: -12.255528450012207
    8. '	def' → logprob: -13.505528450012207
    9. ' ' → logprob: -13.755528450012207
    10. '  ' → logprob: -14.380528450012207

Token 110: ' get' (ID: 717)
  Prédit: ' optimize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' optimize' → logprob: -1.4731922149658203
    2. ' min' → logprob: -1.7231922149658203
    3. 'min' → logprob: -1.8481922149658203
    4. ' minimize' → logprob: -2.3481922149658203
    5. 'opt' → logprob: -2.4731922149658203
    6. ' calculate' → logprob: -3.0981922149658203
    7. ' minimum' → logprob: -3.3481922149658203
    8. ' compute' → logprob: -3.4731922149658203
    9. 'calculate' → logprob: -3.7231922149658203
    10. ' solve' → logprob: -4.09819221496582

Token 111: '_sub' (ID: 11572)
  Prédit: '_min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.29387032985687256
    2. '_opt' → logprob: -2.293870449066162
    3. '_cost' → logprob: -2.793870449066162
    4. '_batches' → logprob: -3.418870449066162
    5. '_' → logprob: -4.543870449066162
    6. '_best' → logprob: -4.668870449066162
    7. '_max' → logprob: -4.793870449066162
    8. '_batch' → logprob: -5.043870449066162
    9. '_pack' → logprob: -5.543870449066162
    10. '_dp' → logprob: -5.668870449066162

Token 112: 'batch' (ID: 29427)
  Prédit: 'arrays'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arrays' → logprob: -0.5325271487236023
    2. 'array' → logprob: -1.032527208328247
    3. '_batches' → logprob: -4.157526969909668
    4. 'b' → logprob: -4.407526969909668
    5. '_arrays' → logprob: -4.907526969909668
    6. '_b' → logprob: -5.032526969909668
    7. 'arr' → logprob: -5.407526969909668
    8. '_array' → logprob: -5.782526969909668
    9. 'sequence' → logprob: -6.157526969909668
    10. 'batch' → logprob: -6.657526969909668

Token 113: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.07831157743930817
    2. '(' → logprob: -2.7033116817474365
    3. 's' → logprob: -5.453311443328857
    4. 'self' → logprob: -6.203311443328857
    5. '(
' → logprob: -7.703311443328857
    6. '_sizes' → logprob: -7.828311443328857
    7. '_s' → logprob: -7.953311443328857
    8. '_' → logprob: -8.453311920166016
    9. '(s' → logprob: -8.578311920166016
    10. '_size' → logprob: -8.828311920166016

Token 114: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003416607796680182
    2. ' ,' → logprob: -8.250341415405273
    3. 'self' → logprob: -9.875341415405273
    4. 's' → logprob: -11.375341415405273
    5. ',s' → logprob: -12.625341415405273
    6. ',self' → logprob: -13.125341415405273
    7. ',index' → logprob: -13.125341415405273
    8. ',start' → logprob: -13.500341415405273
    9. '_,' → logprob: -13.625341415405273
    10. ',i' → logprob: -13.875341415405273

Token 115: ' start' (ID: 1604)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.0985834002494812
    2. 'self' → logprob: -2.848583459854126
    3. ' start' → logprob: -3.473583459854126
    4. 'start' → logprob: -5.348583221435547
    5. ' i' → logprob: -9.098583221435547
    6. 'i' → logprob: -10.223583221435547
    7. 's' → logprob: -10.598583221435547
    8. ' s' → logprob: -11.723583221435547
    9. 'l' → logprob: -13.098583221435547
    10. ' ' → logprob: -13.473583221435547

Token 116: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.935296834039036e-06
    2. ' ,' → logprob: -12.87500286102295
    3. ',
' → logprob: -15.37500286102295
    4. ',int' → logprob: -17.000003814697266
    5. ',end' → logprob: -17.500003814697266
    6. ',size' → logprob: -17.875003814697266
    7. '‌,' → logprob: -17.875003814697266
    8. ',start' → logprob: -18.375003814697266
    9. ',length' → logprob: -18.500003814697266
    10. ',n' → logprob: -18.625003814697266

Token 117: ' end' (ID: 1268)
  Prédit: ' end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.004624749533832073
    2. 'end' → logprob: -5.379624843597412
    3. ' stop' → logprob: -13.129624366760254
    4. ' ' → logprob: -14.629624366760254
    5. ',end' → logprob: -14.754624366760254
    6. 'stop' → logprob: -15.254624366760254
    7. ',' → logprob: -15.254624366760254
    8. '   ' → logprob: -15.379624366760254
    9. '	end' → logprob: -15.504624366760254
    10. ' length' → logprob: -15.504624366760254

Token 118: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0007399422465823591
    2. '):
' → logprob: -7.250740051269531
    3. ' ):' → logprob: -11.375740051269531
    4. ')' → logprob: -11.500740051269531
    5. '):
' → logprob: -12.500740051269531
    6. '+' → logprob: -12.625740051269531
    7. '       ' → logprob: -15.000740051269531
    8. '   ' → logprob: -15.250740051269531
    9. ':' → logprob: -15.375740051269531
    10. '):

' → logprob: -16.00074005126953

Token 119: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.142019122838974
    2. '       ' → logprob: -3.017019033432007
    3. '           ' → logprob: -3.892019033432007
    4. ':
' → logprob: -3.892019033432007
    5. '  
' → logprob: -4.642019271850586
    6. '<|end|>' → logprob: -4.892019271850586
    7. ' 
' → logprob: -5.017019271850586
    8. '
' → logprob: -5.392019271850586
    9. ',' → logprob: -5.642019271850586
    10. '    
' → logprob: -6.642019271850586

Token 120: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.10021162778139114
    2. 'return' (adapté à ' return') → logprob: -2.4752116203308105
    3. '           ' → logprob: -4.7252116203308105
    4. '       ' → logprob: -6.8502116203308105
    5. ' sizes' → logprob: -8.350212097167969
    6. ' ' → logprob: -8.850212097167969
    7. '               ' → logprob: -8.850212097167969
    8. 'sizes' → logprob: -8.975212097167969
    9. '
' → logprob: -9.225212097167969
    10. ' oranges' → logprob: -9.225212097167969

Token 121: ' Orange' (ID: 31490)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.12492375075817108
    2. 'self' → logprob: -2.7499237060546875
    3. ' Orange' → logprob: -2.9999237060546875
    4. 'Orange' → logprob: -6.2499237060546875
    5. ' [' → logprob: -7.1249237060546875
    6. ' ' → logprob: -8.374923706054688
    7. ' list' → logprob: -8.499923706054688
    8. '[' → logprob: -8.749923706054688
    9. '	self' → logprob: -9.374923706054688
    10. '[self' → logprob: -9.812423706054688

Token 122: 'Packaging' (ID: 134013)
  Prédit: 'Packaging'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Packaging' → logprob: -0.01276143454015255
    2. 'Batch' → logprob: -4.38776159286499
    3. 'Packing' → logprob: -9.012761116027832
    4. 'Pack' → logprob: -9.387761116027832
    5. 'Package' → logprob: -11.387761116027832
    6. ' Packaging' → logprob: -12.137761116027832
    7. ' packaging' → logprob: -12.387761116027832
    8. 'Pricing' → logprob: -12.637761116027832
    9. 'Processing' → logprob: -13.075261116027832
    10. 'batch' → logprob: -13.137761116027832

Token 123: 'Cost' (ID: 16815)
  Prédit: 'Cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Cost' → logprob: -5.180879816180095e-05
    2. 'Optimizer' → logprob: -10.125051498413086
    3. 'Orange' → logprob: -12.625051498413086
    4. 'cost' → logprob: -12.625051498413086
    5. '_cost' → logprob: -13.875051498413086
    6. ' Cost' → logprob: -14.125051498413086
    7. 'Costs' → logprob: -14.375051498413086
    8. '_COST' → logprob: -14.500051498413086
    9. ' cost' → logprob: -14.750051498413086
    10. 'Optimization' → logprob: -15.375051498413086

Token 124: 'Optimizer' (ID: 120293)
  Prédit: 'Optimizer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Optimizer' → logprob: -0.14273004233837128
    2. 'Cost' → logprob: -2.0177299976348877
    3. 'optimizer' → logprob: -11.517729759216309
    4. 'Opt' → logprob: -12.142729759216309
    5. 'Optimization' → logprob: -12.267729759216309
    6. '_optimizer' → logprob: -12.392729759216309
    7. '.optimizer' → logprob: -12.392729759216309
    8. 'Optim' → logprob: -12.892729759216309
    9. 'Orange' → logprob: -13.142729759216309
    10. 'Optimize' → logprob: -13.142729759216309

Token 125: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0004418743774294853
    2. '.Or' → logprob: -8.375441551208496
    3. ' .' → logprob: -9.000441551208496
    4. '   ' → logprob: -9.875441551208496
    5. '.orange' → logprob: -11.000441551208496
    6. '.OR' → logprob: -11.750441551208496
    7. 'Orange' → logprob: -13.500441551208496
    8. '.​' → logprob: -13.875441551208496
    9. '.An' → logprob: -14.000441551208496
    10. '​.' → logprob: -14.000441551208496

Token 126: 'Orange' (ID: 64615)
  Prédit: 'Orange'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Orange' → logprob: -2.1054253011243418e-05
    2. 'Or' → logprob: -11.375020980834961
    3. ' Orange' → logprob: -12.125020980834961
    4. 'class' → logprob: -13.875020980834961
    5. '   ' → logprob: -14.125020980834961
    6. 'O' → logprob: -14.875020980834961
    7. 'orange' → logprob: -14.875020980834961
    8. '_or' → logprob: -15.250020980834961
    9. '  ' → logprob: -15.375020980834961
    10. '```' → logprob: -16.12502098083496

Token 127: 'Batch' (ID: 22276)
  Prédit: 'Batch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Batch' → logprob: -3.128163257315464e-07
    2. 'Packaging' → logprob: -16.125
    3. 'batch' → logprob: -16.625
    4. '_batch' → logprob: -17.25
    5. 'Bat' → logprob: -17.625
    6. ' Batch' → logprob: -18.75
    7. '.Batch' → logprob: -18.75
    8. 'B' → logprob: -18.75
    9. '_BATCH' → logprob: -19.875
    10. 'Bath' → logprob: -20.25

Token 128: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0007293514790944755
    2. '(' → logprob: -7.375729560852051
    3. '(s' → logprob: -9.37572956085205
    4. '(
' → logprob: -11.00072956085205
    5. '([' → logprob: -14.25072956085205
    6. '((' → logprob: -15.25072956085205
    7. 'self' → logprob: -15.50072956085205
    8. ' (' → logprob: -16.250728607177734
    9. '[self' → logprob: -16.500728607177734
    10. '(

' → logprob: -16.750728607177734

Token 129: '.s' (ID: 640)
  Prédit: '.s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -0.00048751471331343055
    2. '.' → logprob: -8.000487327575684
    3. ' .' → logprob: -9.250487327575684
    4. ').' → logprob: -10.500487327575684
    5. 'sizes' → logprob: -10.750487327575684
    6. 's' → logprob: -13.250487327575684
    7. '[' → logprob: -14.125487327575684
    8. '_sizes' → logprob: -14.250487327575684
    9. '   ' → logprob: -14.375487327575684
    10. ')' → logprob: -14.500487327575684

Token 130: 'izes' (ID: 6370)
  Prédit: 'izes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'izes' → logprob: -0.035206787288188934
    2. 'zes' → logprob: -3.5352067947387695
    3. 'sizes' → logprob: -5.7852067947387695
    4. 'iz' → logprob: -7.4102067947387695
    5. 's' → logprob: -7.9102067947387695
    6. 'ices' → logprob: -8.53520679473877
    7. 'lf' → logprob: -8.53520679473877
    8. 'IZES' → logprob: -8.91020679473877
    9. '   ' → logprob: -9.16020679473877
    10. 'ize' → logprob: -9.28520679473877

Token 131: '[start' (ID: 62179)
  Prédit: '[start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[start' → logprob: -1.676292231422849e-05
    2. '[' → logprob: -11.000017166137695
    3. '[
' → logprob: -17.875017166137695
    4. ' [' → logprob: -18.000017166137695
    5. 'start' → logprob: -18.625017166137695
    6. '[s' → logprob: -18.750017166137695
    7. '[end' → logprob: -20.375017166137695
    8. ')[' → logprob: -21.250017166137695
    9. '[int' → logprob: -21.500017166137695
    10. ' start' → logprob: -22.000017166137695

Token 132: ':end' (ID: 63990)
  Prédit: ':end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':end' → logprob: -0.001499387202784419
    2. ':' → logprob: -6.626499176025391
    3. ' :' → logprob: -9.00149917602539
    4. ',end' → logprob: -10.25149917602539
    5. ',' → logprob: -11.75149917602539
    6. 'end' → logprob: -12.87649917602539
    7. '	end' → logprob: -13.25149917602539
    8. ' ' → logprob: -13.62649917602539
    9. ' ,' → logprob: -14.87649917602539
    10. ' end' → logprob: -14.87649917602539

Token 133: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.00922979973256588
    2. '+' → logprob: -5.00922966003418
    3. ')' → logprob: -6.50922966003418
    4. ' ])' → logprob: -7.25922966003418
    5. ']' → logprob: -8.38422966003418
    6. ' +' → logprob: -10.13422966003418
    7. ' )' → logprob: -10.50922966003418
    8. ' ' → logprob: -11.88422966003418
    9. '])
' → logprob: -12.38422966003418
    10. '1' → logprob: -13.00922966003418

Token 134: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.28949010372161865
    2. '<|end|>' → logprob: -1.5394901037216187
    3. 'def' → logprob: -4.289490222930908
    4. '   ' → logprob: -4.539490222930908
    5. '<|end|>' → logprob: -5.289490222930908
    6. '```' → logprob: -6.664490222930908
    7. '    
' → logprob: -6.664490222930908
    8. '       ' → logprob: -7.164490222930908
    9. ' def' → logprob: -7.289490222930908
    10. ' 
' → logprob: -7.539490222930908

Token 135: ' def' (ID: 1056)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8511991500854492
    2. 'def' (adapté à ' def') → logprob: -1.1011991500854492
    3. '   ' → logprob: -1.6011991500854492
    4. ' def' → logprob: -3.351199150085449
    5. '    
' → logprob: -6.226199150085449
    6. '       ' → logprob: -7.351199150085449
    7. ' 
' → logprob: -7.476199150085449
    8. '	def' → logprob: -8.35119915008545
    9. ' ' → logprob: -9.10119915008545
    10. '<|end|>' → logprob: -9.22619915008545

Token 136: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.5845907330513
    2. ' optimize' → logprob: -0.8345907330513
    3. ' minimize' → logprob: -5.834590911865234
    4. ' ' → logprob: -6.209590911865234
    5. ' calculate' → logprob: -6.459590911865234
    6. ' find' → logprob: -7.584590911865234
    7. ' compute' → logprob: -7.709590911865234
    8. ' _' → logprob: -8.459590911865234
    9. ' get' → logprob: -9.084590911865234
    10. '__' → logprob: -9.084590911865234

Token 137: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -4.417976379045285e-05
    2. '_init' → logprob: -10.500043869018555
    3. ' init' → logprob: -11.375043869018555
    4. 'i' → logprob: -12.500043869018555
    5. 'ini' → logprob: -14.250043869018555
    6. '_' → logprob: -15.500043869018555
    7. '__' → logprob: -15.500043869018555
    8. 'in' → logprob: -16.375043869018555
    9. ' ' → logprob: -16.875043869018555
    10. '   ' → logprob: -16.875043869018555

Token 138: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.009961126372218132
    2. '__' → logprob: -4.634961128234863
    3. '__(
' → logprob: -8.634961128234863
    4. '__((' → logprob: -10.884961128234863
    5. '__(*' → logprob: -12.884961128234863
    6. '__('' → logprob: -13.384961128234863
    7. '__("' → logprob: -13.509961128234863
    8. '___' → logprob: -14.259961128234863
    9. '_' → logprob: -14.509961128234863
    10. '_(' → logprob: -14.759961128234863

Token 139: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0006628761766478419
    2. ' self' → logprob: -7.375662803649902
    3. '
' → logprob: -10.500662803649902
    4. '       ' → logprob: -12.625662803649902
    5. '   ' → logprob: -13.000662803649902
    6. '0' → logprob: -14.375662803649902
    7. 's' → logprob: -14.625662803649902
    8. 'elf' → logprob: -14.625662803649902
    9. ' ' → logprob: -14.750662803649902
    10. ')' → logprob: -14.875662803649902

Token 140: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00037442712346091866
    2. ' ,' → logprob: -8.000374794006348
    3. 's' → logprob: -11.000374794006348
    4. 'self' → logprob: -11.750374794006348
    5. ',s' → logprob: -12.250374794006348
    6. ',self' → logprob: -12.875374794006348
    7. ',
' → logprob: -13.000374794006348
    8. '‌,' → logprob: -13.750374794006348
    9. ')' → logprob: -13.875374794006348
    10. ' ' → logprob: -14.000374794006348

Token 141: ' N' (ID: 478)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.9731594920158386
    2. 'self' → logprob: -0.9731594920158386
    3. ' sizes' → logprob: -1.7231595516204834
    4. 'sizes' → logprob: -3.0981595516204834
    5. ' oranges' → logprob: -4.473159313201904
    6. ' orange' → logprob: -5.348159313201904
    7. '   ' → logprob: -6.973159313201904
    8. ' ' → logprob: -7.223159313201904
    9. 'orange' → logprob: -7.348159313201904
    10. 's' → logprob: -7.473159313201904

Token 142: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.286852345103398e-05
    2. ' ,' → logprob: -10.125042915344238
    3. ',s' → logprob: -14.250042915344238
    4. '):' → logprob: -14.375042915344238
    5. ',
' → logprob: -14.500042915344238
    6. '‌,' → logprob: -14.500042915344238
    7. 's' → logprob: -16.250041961669922
    8. ',size' → logprob: -16.500041961669922
    9. ',int' → logprob: -17.000041961669922
    10. 'sizes' → logprob: -17.375041961669922

Token 143: ' M' (ID: 391)
  Prédit: ' sizes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sizes' → logprob: -0.17086261510849
    2. 'sizes' → logprob: -1.9208626747131348
    3. 's' → logprob: -5.420862674713135
    4. ' oranges' → logprob: -5.795862674713135
    5. ' orange' → logprob: -7.170862674713135
    6. ' ' → logprob: -7.795862674713135
    7. ' K' → logprob: -8.170862197875977
    8. '   ' → logprob: -8.420862197875977
    9. ' or' → logprob: -8.545862197875977
    10. '_sizes' → logprob: -8.545862197875977

Token 144: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000646433443762362
    2. '):' → logprob: -7.375646591186523
    3. ' ,' → logprob: -11.125646591186523
    4. ' ):' → logprob: -13.500646591186523
    5. ')' → logprob: -14.125646591186523
    6. ',K' → logprob: -14.375646591186523
    7. ':' → logprob: -14.625646591186523
    8. '   ' → logprob: -15.313146591186523
    9. '):
' → logprob: -15.375646591186523
    10. '=' → logprob: -15.688146591186523

Token 145: ' K' (ID: 658)
  Prédit: ' sizes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sizes' → logprob: -0.12614955008029938
    2. 'sizes' → logprob: -2.2511496543884277
    3. ' orange' → logprob: -5.126149654388428
    4. ' oranges' → logprob: -5.751149654388428
    5. '   ' → logprob: -7.376149654388428
    6. ' K' → logprob: -7.376149654388428
    7. ' ' → logprob: -7.751149654388428
    8. 'orange' → logprob: -7.751149654388428
    9. 's' → logprob: -8.00114917755127
    10. ' or' → logprob: -8.12614917755127

Token 146: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04864833876490593
    2. '):' → logprob: -3.0486483573913574
    3. '):
' → logprob: -10.4236478805542
    4. ')' → logprob: -11.5486478805542
    5. ' ,' → logprob: -12.0486478805542
    6. ' ):' → logprob: -12.0486478805542
    7. ':' → logprob: -12.2986478805542
    8. ',
' → logprob: -13.2986478805542
    9. '<|end|>' → logprob: -14.6736478805542
    10. ',s' → logprob: -15.4236478805542

Token 147: ' sizes' (ID: 16174)
  Prédit: ' sizes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sizes' → logprob: -0.10454722493886948
    2. 'sizes' → logprob: -2.3545472621917725
    3. ' orange' → logprob: -6.229547023773193
    4. ' ' → logprob: -7.354547023773193
    5. 's' → logprob: -7.729547023773193
    6. '   ' → logprob: -7.854547023773193
    7. ' oranges' → logprob: -7.854547023773193
    8. 'orange' → logprob: -8.729547500610352
    9. '  ' → logprob: -9.792047500610352
    10. '    ' → logprob: -9.979547500610352

Token 148: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0010024434886872768
    2. '):
' → logprob: -7.001002311706543
    3. ',' → logprob: -9.501002311706543
    4. ' ):' → logprob: -12.001002311706543
    5. ':' → logprob: -12.251002311706543
    6. ')' → logprob: -12.501002311706543
    7. '):
' → logprob: -13.876002311706543
    8. ']:' → logprob: -16.12600326538086
    9. '   ' → logprob: -16.50100326538086
    10. '):

' → logprob: -16.62600326538086

Token 149: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.023191312327980995
    2. ':
' → logprob: -4.398191452026367
    3. '):
' → logprob: -5.773191452026367
    4. '):' → logprob: -5.898191452026367
    5. '       ' → logprob: -6.398191452026367
    6. ',' → logprob: -6.773191452026367
    7. '<|end|>' → logprob: -6.773191452026367
    8. ')' → logprob: -8.023191452026367
    9. '   ' → logprob: -8.148191452026367
    10. '<|end|>' → logprob: -9.773191452026367

Token 150: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.07696014642715454
    2. '       ' → logprob: -3.0769600868225098
    3. ' self' → logprob: -3.5769600868225098
    4. '   ' → logprob: -11.826960563659668
    5. '	self' → logprob: -12.326960563659668
    6. ' ' → logprob: -14.076960563659668
    7. 'super' → logprob: -15.451960563659668
    8. '
' → logprob: -15.701960563659668
    9. '      ' → logprob: -15.826960563659668
    10. '(self' → logprob: -16.32695960998535

Token 151: '.N' (ID: 4439)
  Prédit: '.N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.N' → logprob: -0.1433931291103363
    2. '.' → logprob: -2.018393039703369
    3. ' .' → logprob: -7.518393039703369
    4. ' =' → logprob: -10.143393516540527
    5. '.M' → logprob: -10.268393516540527
    6. '.K' → logprob: -10.393393516540527
    7. '.n' → logprob: -10.893393516540527
    8. 'N' → logprob: -11.393393516540527
    9. '=' → logprob: -11.518393516540527
    10. '.I' → logprob: -12.768393516540527

Token 152: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0035321286413818598
    2. '=' → logprob: -5.8785319328308105
    3. ',' → logprob: -7.2535319328308105
    4. ' ,' → logprob: -11.503532409667969
    5. ' ' → logprob: -11.878532409667969
    6. ' =
' → logprob: -13.253532409667969
    7. '   ' → logprob: -16.37853240966797
    8. '<|end|>' → logprob: -16.50353240966797
    9. '=N' → logprob: -16.62853240966797
    10. '    ' → logprob: -16.87853240966797

Token 153: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.10020710527896881
    2. ' N' → logprob: -2.3502070903778076
    3. '	N' → logprob: -14.725207328796387
    4. ' ' → logprob: -17.97520637512207
    5. '
' → logprob: -18.22520637512207
    6. ' ' → logprob: -18.22520637512207
    7. '<|end|>' → logprob: -18.60020637512207
    8. ' 
' → logprob: -18.72520637512207
    9. '>N' → logprob: -19.10020637512207
    10. ',N' → logprob: -19.60020637512207

Token 154: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02319108135998249
    2. '       ' → logprob: -4.648190975189209
    3. '<|end|>' → logprob: -4.773190975189209
    4. ',' → logprob: -6.273190975189209
    5. '        
' → logprob: -6.773190975189209
    6. '  
' → logprob: -7.273190975189209
    7. ' 
' → logprob: -7.398190975189209
    8. '    
' → logprob: -8.773191452026367
    9. '<|end|>' → logprob: -8.773191452026367
    10. 'self' → logprob: -9.398191452026367

Token 155: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.040949076414108276
    2. '
' → logprob: -3.2909491062164307
    3. '<|end|>' → logprob: -6.665948867797852
    4. ',' → logprob: -7.415948867797852
    5. 'self' → logprob: -7.540948867797852
    6. '        
' → logprob: -8.165948867797852
    7. ' self' → logprob: -9.540948867797852
    8. ' 
' → logprob: -9.915948867797852
    9. '  
' → logprob: -10.790948867797852
    10. '   ' → logprob: -11.040948867797852

Token 156: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0132555291056633
    2. 'M' → logprob: -4.763255596160889
    3. ' self' → logprob: -5.388255596160889
    4. ' M' → logprob: -10.26325511932373
    5. '       ' → logprob: -11.01325511932373
    6. '   ' → logprob: -11.76325511932373
    7. '	self' → logprob: -14.88825511932373
    8. ' ' → logprob: -15.63825511932373
    9. '
' → logprob: -15.63825511932373
    10. '    ' → logprob: -16.013256072998047

Token 157: '.M' (ID: 2015)
  Prédit: '.M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.M' → logprob: -0.06312958896160126
    2. '.' → logprob: -2.8131296634674072
    3. '.K' → logprob: -7.063129425048828
    4. '.N' → logprob: -9.063129425048828
    5. ' .' → logprob: -9.688129425048828
    6. '.S' → logprob: -10.188129425048828
    7. '   ' → logprob: -11.313129425048828
    8. ',' → logprob: -11.563129425048828
    9. '.I' → logprob: -11.688129425048828
    10. '.T' → logprob: -12.063129425048828

Token 158: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2611676752567291
    2. '=' → logprob: -1.5111676454544067
    3. ',' → logprob: -5.261167526245117
    4. '<|end|>' → logprob: -5.761167526245117
    5. ' ' → logprob: -7.636167526245117
    6. ' ,' → logprob: -8.136167526245117
    7. ' =
' → logprob: -10.636167526245117
    8. '<|end|>' → logprob: -10.886167526245117
    9. '
' → logprob: -12.011167526245117
    10. ',
' → logprob: -12.136167526245117

Token 159: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.5759395360946655
    2. 'M' → logprob: -0.8259395360946655
    3. ' ' → logprob: -16.325939178466797
    4. ' ' → logprob: -17.325939178466797
    5. '	M' → logprob: -18.200939178466797
    6. 'm' → logprob: -18.950939178466797
    7. ' М' → logprob: -19.200939178466797
    8. '=M' → logprob: -19.200939178466797
    9. '    ' → logprob: -19.325939178466797
    10. '   ' → logprob: -19.825939178466797

Token 160: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0351727195084095
    2. 'self' → logprob: -3.910172700881958
    3. '
' → logprob: -4.410172939300537
    4. ',' → logprob: -6.285172939300537
    5. '        
' → logprob: -8.535172462463379
    6. ' self' → logprob: -9.035172462463379
    7. '<|end|>' → logprob: -10.160172462463379
    8. '   ' → logprob: -10.410172462463379
    9. ' 
' → logprob: -10.535172462463379
    10. ',
' → logprob: -10.785172462463379

Token 161: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0488855205476284
    2. 'self' → logprob: -3.0488855838775635
    3. ' self' → logprob: -8.298885345458984
    4. '	self' → logprob: -11.298885345458984
    5. '   ' → logprob: -11.548885345458984
    6. '
' → logprob: -11.673885345458984
    7. ',' → logprob: -11.798885345458984
    8. '        
' → logprob: -12.923885345458984
    9. ',self' → logprob: -12.923885345458984
    10. '           ' → logprob: -13.173885345458984

Token 162: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -1.5928495486150496e-05
    2. ' self' → logprob: -11.375016212463379
    3. 'K' → logprob: -12.375016212463379
    4. '       ' → logprob: -16.875015258789062
    5. '	self' → logprob: -17.500015258789062
    6. '
' → logprob: -17.875015258789062
    7. '   ' → logprob: -19.000015258789062
    8. '[self' → logprob: -20.875015258789062
    9. '(self' → logprob: -21.000015258789062
    10. ' ' → logprob: -21.250015258789062

Token 163: '.K' (ID: 14475)
  Prédit: '.K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.K' → logprob: -0.0024626946542412043
    2. ' .' → logprob: -6.377462863922119
    3. '.' → logprob: -7.252462863922119
    4. 'K' → logprob: -10.627462387084961
    5. ' K' → logprob: -10.752462387084961
    6. '.k' → logprob: -13.877462387084961
    7. '.S' → logprob: -14.002462387084961
    8. '.К' → logprob: -14.002462387084961
    9. ' ' → logprob: -14.252462387084961
    10. ' =' → logprob: -15.002462387084961

Token 164: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022595763206482
    2. '=' → logprob: -1.9102259874343872
    3. ' ' → logprob: -13.410225868225098
    4. '<|end|>' → logprob: -15.410225868225098
    5. ' =
' → logprob: -17.035226821899414
    6. '  ' → logprob: -17.285226821899414
    7. ',' → logprob: -17.535226821899414
    8. ')' → logprob: -19.160226821899414
    9. '=
' → logprob: -19.410226821899414
    10. '=k' → logprob: -19.535226821899414

Token 165: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.38687241077423096
    2. ' K' → logprob: -1.136872410774231
    3. '	K' → logprob: -14.261872291564941
    4. ' ' → logprob: -14.761872291564941
    5. ' ' → logprob: -16.011873245239258
    6. '
' → logprob: -16.636873245239258
    7. '<|end|>' → logprob: -17.011873245239258
    8. '>K' → logprob: -17.386873245239258
    9. ' ' → logprob: -17.511873245239258
    10. '​' → logprob: -17.886873245239258

Token 166: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.045656468719244
    2. 'self' → logprob: -3.170656442642212
    3. ' self' → logprob: -6.170656681060791
    4. '   ' → logprob: -7.670656681060791
    5. '
' → logprob: -10.295656204223633
    6. ',' → logprob: -10.920656204223633
    7. ' ' → logprob: -11.045656204223633
    8. '	self' → logprob: -11.795656204223633
    9. '           ' → logprob: -12.420656204223633
    10. '        
' → logprob: -12.545656204223633

Token 167: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008366815745830536
    2. 'self' → logprob: -4.883366584777832
    3. ' self' → logprob: -7.508366584777832
    4. '   ' → logprob: -9.008366584777832
    5. '
' → logprob: -9.633366584777832
    6. '           ' → logprob: -11.133366584777832
    7. '      ' → logprob: -13.258366584777832
    8. ' ' → logprob: -13.758366584777832
    9. '	self' → logprob: -13.883366584777832
    10. '        
' → logprob: -14.008366584777832

Token 168: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -7.822646693966817e-06
    2. '       ' → logprob: -12.250007629394531
    3. ' self' → logprob: -13.125007629394531
    4. 'sizes' → logprob: -14.125007629394531
    5. 's' → logprob: -16.50000762939453
    6. '   ' → logprob: -16.62500762939453
    7. 'super' → logprob: -17.25000762939453
    8. '        
' → logprob: -18.37500762939453
    9. '
' → logprob: -18.37500762939453
    10. '           ' → logprob: -18.87500762939453

Token 169: '.con' (ID: 5162)
  Prédit: '.s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -0.001351306913420558
    2. ' .' → logprob: -6.751351356506348
    3. '.' → logprob: -8.876351356506348
    4. 'sizes' → logprob: -10.251351356506348
    5. ' sizes' → logprob: -13.251351356506348
    6. '_sizes' → logprob: -13.751351356506348
    7. 's' → logprob: -14.001351356506348
    8. '.con' → logprob: -14.751351356506348
    9. '.size' → logprob: -14.751351356506348
    10. 'Sizes' → logprob: -15.751351356506348

Token 170: 'veyor' (ID: 99834)
  Prédit: 'veyor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'veyor' → logprob: -0.00019007037917617708
    2. 'vey' → logprob: -9.250189781188965
    3. 's' → logprob: -9.750189781188965
    4. 'veys' → logprob: -11.500189781188965
    5. 'sizes' → logprob: -11.750189781188965
    6. 've' → logprob: -12.250189781188965
    7. 'v' → logprob: -12.625189781188965
    8. 't' → logprob: -12.750189781188965
    9. '   ' → logprob: -13.500189781188965
    10. 'very' → logprob: -13.875189781188965

Token 171: ' =' (ID: 314)
  Prédit: '_b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.07316751033067703
    2. 'B' → logprob: -3.073167562484741
    3. ' =' → logprob: -4.073167324066162
    4. '=' → logprob: -5.323167324066162
    5. 'belt' → logprob: -7.073167324066162
    6. '=B' → logprob: -7.448167324066162
    7. '_' → logprob: -7.698167324066162
    8. '_B' → logprob: -8.44816780090332
    9. 's' → logprob: -9.32316780090332
    10. ' belt' → logprob: -9.69816780090332

Token 172: ' self' (ID: 1051)
  Prédit: 'Orange'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Orange' → logprob: -0.10207541286945343
    2. ' Orange' → logprob: -2.6020753383636475
    3. ' self' → logprob: -4.352075576782227
    4. 'self' → logprob: -4.602075576782227
    5. 'Or' → logprob: -12.477075576782227
    6. ' orange' → logprob: -13.727075576782227
    7. ' ' → logprob: -14.227075576782227
    8. 'Self' → logprob: -14.477075576782227
    9. 'orange' → logprob: -14.727075576782227
    10. ' Orang' → logprob: -14.852075576782227

Token 173: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.006055355537682772
    2. '.Or' → logprob: -5.8810553550720215
    3. '.Con' → logprob: -6.0060553550720215
    4. ' .' → logprob: -8.25605583190918
    5. 's' → logprob: -8.50605583190918
    6. 'Orange' → logprob: -9.13105583190918
    7. '.O' → logprob: -9.63105583190918
    8. '.con' → logprob: -10.38105583190918
    9. 't' → logprob: -10.38105583190918
    10. '.orange' → logprob: -10.63105583190918

Token 174: 'Orange' (ID: 64615)
  Prédit: 'Orange'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Orange' → logprob: -3.273621405242011e-05
    2. 'Or' → logprob: -11.000032424926758
    3. ' Orange' → logprob: -11.375032424926758
    4. 's' → logprob: -14.250032424926758
    5. 'con' → logprob: -14.375032424926758
    6. 'n' → logprob: -14.625032424926758
    7. 'O' → logprob: -15.125032424926758
    8. 'orange' → logprob: -15.250032424926758
    9. '_or' → logprob: -15.250032424926758
    10. 'r' → logprob: -16.000032424926758

Token 175: 'Con' (ID: 909)
  Prédit: 'Con'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Con' → logprob: -0.20250102877616882
    2. 'B' → logprob: -1.7025010585784912
    3. 'C' → logprob: -7.202500820159912
    4. 'con' → logprob: -8.07750129699707
    5. ' conveyor' → logprob: -11.82750129699707
    6. ' Conveyor' → logprob: -11.82750129699707
    7. 'Packaging' → logprob: -11.82750129699707
    8. 'belt' → logprob: -12.32750129699707
    9. '_con' → logprob: -12.95250129699707
    10. 'Batch' → logprob: -14.45250129699707

Token 176: 'veyor' (ID: 99834)
  Prédit: 'veyor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'veyor' → logprob: -0.0013697614194825292
    2. 'vey' → logprob: -7.501369953155518
    3. 've' → logprob: -8.37636947631836
    4. 'v' → logprob: -8.75136947631836
    5. 'ey' → logprob: -9.12636947631836
    6. '   ' → logprob: -9.62636947631836
    7. '       ' → logprob: -10.37636947631836
    8. 'belt' → logprob: -10.50136947631836
    9. '```' → logprob: -10.87636947631836
    10. 'very' → logprob: -11.12636947631836

Token 177: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -3.47626737493556e-05
    2. 'belt' → logprob: -10.37503433227539
    3. ' Belt' → logprob: -13.25003433227539
    4. ' belt' → logprob: -13.75003433227539
    5. 'Bel' → logprob: -15.00003433227539
    6. '_B' → logprob: -15.12503433227539
    7. '_b' → logprob: -17.00003433227539
    8. '_' → logprob: -17.87503433227539
    9. 's' → logprob: -18.00003433227539
    10. '```' → logprob: -18.25003433227539

Token 178: 'elt' (ID: 3292)
  Prédit: 'elt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elt' → logprob: -0.00014656837447546422
    2. 'e' → logprob: -9.125146865844727
    3. 'el' → logprob: -11.625146865844727
    4. 'elts' → logprob: -11.750146865844727
    5. 'belt' → logprob: -12.125146865844727
    6. 'alt' → logprob: -12.375146865844727
    7. ' elt' → logprob: -13.250146865844727
    8. '```' → logprob: -13.625146865844727
    9. 'lt' → logprob: -13.875146865844727
    10. 'elf' → logprob: -14.500146865844727

Token 179: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -1.318681188422488e-05
    2. '(' → logprob: -11.37501335144043
    3. 'sizes' → logprob: -14.00001335144043
    4. 's' → logprob: -15.00001335144043
    5. ' (' → logprob: -15.50001335144043
    6. '(
' → logprob: -16.37501335144043
    7. '(size' → logprob: -16.37501335144043
    8. '(self' → logprob: -17.25001335144043
    9. ' sizes' → logprob: -17.87501335144043
    10. '(scores' → logprob: -18.37501335144043

Token 180: 'izes' (ID: 6370)
  Prédit: 'izes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'izes' → logprob: -4.320199877838604e-07
    2. 'iz' → logprob: -15.625
    3. 'ize' → logprob: -15.875
    4. 'IZES' → logprob: -16.75
    5. 'ices' → logprob: -19.5
    6. 'sizes' → logprob: -19.625
    7. 'zes' → logprob: -19.875
    8. '_sizes' → logprob: -20.125
    9. 'i' → logprob: -20.375
    10. 'ises' → logprob: -21.0

Token 181: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ' )' → logprob: -14.875000953674316
    3. ')
' → logprob: -15.375000953674316
    4. '))' → logprob: -15.750000953674316
    5. ')}' → logprob: -17.5
    6. '}' → logprob: -18.125
    7. '<|end|>' → logprob: -18.125
    8. '),' → logprob: -18.375
    9. '   ' → logprob: -18.5
    10. '）' → logprob: -19.0

Token 182: '       ' (ID: 309)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4379298985004425
    2. '
' → logprob: -1.8129298686981201
    3. '<|end|>' → logprob: -2.06292986869812
    4. '   ' → logprob: -3.06292986869812
    5. ' def' → logprob: -4.437930107116699
    6. '<|end|>' → logprob: -5.687930107116699
    7. '       ' → logprob: -7.062930107116699
    8. '    
' → logprob: -7.562930107116699
    9. 'self' → logprob: -8.5629301071167
    10. '	def' → logprob: -8.6879301071167

Token 183: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.49148139357566833
    2. 'def' → logprob: -0.9914814233779907
    3. '       ' → logprob: -4.241481304168701
    4. '
' → logprob: -6.991481304168701
    5. '   ' → logprob: -7.241481304168701
    6. ' self' → logprob: -7.241481304168701
    7. 'import' → logprob: -8.86648178100586
    8. 'from' → logprob: -9.11648178100586
    9. ' def' → logprob: -9.86648178100586
    10. 'pass' → logprob: -10.11648178100586

Token 184: '.dp' (ID: 77268)
  Prédit: '.dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dp' → logprob: -0.0028186701238155365
    2. '.cost' → logprob: -6.752818584442139
    3. '.memo' → logprob: -7.877818584442139
    4. '.D' → logprob: -8.502819061279297
    5. '.optim' → logprob: -8.627819061279297
    6. '.' → logprob: -9.002819061279297
    7. '.M' → logprob: -9.627819061279297
    8. '.best' → logprob: -9.627819061279297
    9. '.d' → logprob: -9.752819061279297
    10. ' .' → logprob: -9.877819061279297

Token 185: '_cache' (ID: 27045)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0005879410891793668
    2. '=' → logprob: -7.5005879402160645
    3. ' ' → logprob: -10.750588417053223
    4. '[' → logprob: -11.875588417053223
    5. ' =[' → logprob: -12.375588417053223
    6. '  ' → logprob: -14.125588417053223
    7. '=[' → logprob: -14.875588417053223
    8. '_' → logprob: -15.000588417053223
    9. '	' → logprob: -15.625588417053223
    10. '   ' → logprob: -16.000587463378906

Token 186: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.000583653396461159
    2. '=' → logprob: -7.500583648681641
    3. ' ' → logprob: -10.62558364868164
    4. ' =[' → logprob: -12.25058364868164
    5. '[' → logprob: -14.37558364868164
    6. ' =
' → logprob: -14.62558364868164
    7. '  ' → logprob: -15.75058364868164
    8. '   ' → logprob: -16.37558364868164
    9. '=[]' → logprob: -16.62558364868164
    10. ' ={' → logprob: -16.87558364868164

Token 187: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7134428024291992
    2. ' [' → logprob: -0.9634428024291992
    3. '{}' → logprob: -2.463442802429199
    4. '[[' → logprob: -4.088442802429199
    5. ' [[' → logprob: -4.463442802429199
    6. ' {}' → logprob: -4.463442802429199
    7. '[-' → logprob: -5.713442802429199
    8. ' [-' → logprob: -9.3384428024292
    9. '{' → logprob: -10.4634428024292
    10. '[n' → logprob: -10.7134428024292

Token 188: 'None' (ID: 8505)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.09308386594057083
    2. '0' → logprob: -2.4680838584899902
    3. '[' → logprob: -5.59308385848999
    4. 'None' → logprob: -8.468084335327148
    5. ' float' → logprob: -9.218084335327148
    6. '(float' → logprob: -9.843084335327148
    7. ' [' → logprob: -11.718084335327148
    8. 'inf' → logprob: -11.718084335327148
    9. '-' → logprob: -11.843084335327148
    10. ' ' → logprob: -12.468084335327148

Token 189: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0004108924185857177
    2. ' ]' → logprob: -8.750411033630371
    3. ' for' → logprob: -8.875411033630371
    4. ']*' → logprob: -9.750411033630371
    5. ']*(' → logprob: -9.875411033630371
    6. ']+' → logprob: -13.500411033630371
    7. 'for' → logprob: -13.750411033630371
    8. '][' → logprob: -16.125410079956055
    9. ' ' → logprob: -16.625410079956055
    10. ',' → logprob: -16.625410079956055

Token 190: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.08606558293104172
    2. '*' → logprob: -3.7110655307769775
    3. '*(' → logprob: -3.7110655307769775
    4. ' for' → logprob: -3.8360655307769775
    5. ']' → logprob: -5.336065769195557
    6. '[' → logprob: -6.711065769195557
    7. ']*(' → logprob: -6.711065769195557
    8. ' (' → logprob: -7.211065769195557
    9. ' +' → logprob: -7.336065769195557
    10. '+' → logprob: -7.461065769195557

Token 191: ' (' (ID: 350)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.06429585814476013
    2. ' (' → logprob: -3.314295768737793
    3. '(M' → logprob: -3.689295768737793
    4. '(self' → logprob: -7.189295768737793
    5. '(n' → logprob: -9.064295768737793
    6. '(' → logprob: -10.814295768737793
    7. '   ' → logprob: -11.189295768737793
    8. '((' → logprob: -11.689295768737793
    9. '(len' → logprob: -12.814295768737793
    10. '(m' → logprob: -13.689295768737793

Token 192: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.08514901250600815
    2. '(N' → logprob: -2.835149049758911
    3. ' (' → logprob: -4.710148811340332
    4. ' N' → logprob: -4.710148811340332
    5. 'self' → logprob: -5.585148811340332
    6. '(self' → logprob: -7.960148811340332
    7. '   ' → logprob: -7.960148811340332
    8. ' self' → logprob: -8.585148811340332
    9. '(M' → logprob: -9.085148811340332
    10. 'M' → logprob: -9.710148811340332

Token 193: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.25204193592071533
    2. ' +' → logprob: -1.5020419359207153
    3. ')' → logprob: -9.127041816711426
    4. ' +
' → logprob: -13.752041816711426
    5. ' )' → logprob: -14.002041816711426
    6. '+
' → logprob: -14.252041816711426
    7. '+)' → logprob: -14.627041816711426
    8. '1' → logprob: -15.002041816711426
    9. ' ' → logprob: -15.752041816711426
    10. '+self' → logprob: -16.002042770385742

Token 194: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023095356300473213
    2. ' ' → logprob: -8.37523078918457
    3. '2' → logprob: -15.12523078918457
    4. '   ' → logprob: -16.37523078918457
    5. '
' → logprob: -17.75023078918457
    6. '```' → logprob: -18.25023078918457
    7. '  ' → logprob: -19.50023078918457
    8. '       ' → logprob: -19.50023078918457
    9. '[' → logprob: -19.87523078918457
    10. '0' → logprob: -20.37523078918457

Token 195: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.096126576769166e-05
    2. ' ' → logprob: -10.125041007995605
    3. '2' → logprob: -15.000041007995605
    4. '0' → logprob: -15.500041007995605
    5. '   ' → logprob: -15.625041007995605
    6. '```' → logprob: -17.50004005432129
    7. '  ' → logprob: -17.87504005432129
    8. '
' → logprob: -17.93754005432129
    9. '[' → logprob: -18.50004005432129
    10. '7' → logprob: -19.50004005432129

Token 196: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9623810658231378e-05
    2. ')
' → logprob: -11.250020027160645
    3. ' )' → logprob: -12.125020027160645
    4. '<|end|>' → logprob: -14.500020027160645
    5. ')

' → logprob: -15.750020027160645
    6. ']' → logprob: -16.375019073486328
    7. '),' → logprob: -17.000019073486328
    8. '```' → logprob: -17.375019073486328
    9. ')}' → logprob: -17.625019073486328
    10. '}' → logprob: -17.625019073486328

Token 197: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 198: ' self' (ID: 1051)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11076980829238892
    2. '   ' → logprob: -3.110769748687744
    3. '
' → logprob: -3.860769748687744
    4. 'self' (adapté à ' self') → logprob: -4.360769748687744
    5. '<|end|>' → logprob: -4.360769748687744
    6. '       ' → logprob: -4.735769748687744
    7. ' def' → logprob: -5.485769748687744
    8. ' self' → logprob: -8.235770225524902
    9. '<|end|>' → logprob: -8.735770225524902
    10. '```' → logprob: -9.235770225524902

Token 199: '.dp' (ID: 77268)
  Prédit: '.M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.M' → logprob: -1.1160469055175781
    2. '.dp' → logprob: -1.2410469055175781
    3. '.' → logprob: -1.6160469055175781
    4. ' .' → logprob: -1.7410469055175781
    5. '.def' → logprob: -6.116046905517578
    6. '.D' → logprob: -6.991046905517578
    7. '.best' → logprob: -7.116046905517578
    8. '.
' → logprob: -7.616046905517578
    9. '.cost' → logprob: -7.866046905517578
    10. '.m' → logprob: -7.991046905517578

Token 200: '_cache' (ID: 27045)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.49111461639404297
    2. '_cache' → logprob: -1.741114616394043
    3. '_cost' → logprob: -2.491114616394043
    4. '=' → logprob: -2.991114616394043
    5. '_' → logprob: -3.116114616394043
    6. '_values' → logprob: -4.616114616394043
    7. 'def' → logprob: -4.741114616394043
    8. '[' → logprob: -5.116114616394043
    9. '_value' → logprob: -5.991114616394043
    10. '   ' → logprob: -6.741114616394043

Token 201: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.6087021473795176e-05
    2. ' =' → logprob: -10.500045776367188
    3. ' [' → logprob: -11.125045776367188
    4. '=' → logprob: -13.625045776367188
    5. ' ' → logprob: -14.625045776367188
    6. '[
' → logprob: -14.875045776367188
    7. '[-' → logprob: -14.875045776367188
    8. '
' → logprob: -15.500045776367188
    9. '0' → logprob: -15.750045776367188
    10. 'def' → logprob: -16.000045776367188

Token 202: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.491498531133402e-06
    2. '[' → logprob: -11.750009536743164
    3. ' ' → logprob: -13.375009536743164
    4. '=' → logprob: -18.000009536743164
    5. '
' → logprob: -18.375009536743164
    6. '1' → logprob: -18.375009536743164
    7. '<|end|>' → logprob: -18.625009536743164
    8. ']' → logprob: -19.000009536743164
    9. ')' → logprob: -19.000009536743164
    10. '-' → logprob: -19.500009536743164

Token 203: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005664614494889975
    2. ' ]' → logprob: -5.255664825439453
    3. ']=' → logprob: -7.755664825439453
    4. '=' → logprob: -13.630664825439453
    5. ' =' → logprob: -14.755664825439453
    6. ']={' → logprob: -16.380664825439453
    7. ' ' → logprob: -16.380664825439453
    8. '`]' → logprob: -16.380664825439453
    9. ')' → logprob: -16.630664825439453
    10. '[' → logprob: -17.130664825439453

Token 204: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31328505277633667
    2. '=' → logprob: -1.3132851123809814
    3. ' ' → logprob: -11.063284873962402
    4. '[' → logprob: -12.188284873962402
    5. '0' → logprob: -13.563284873962402
    6. ' =
' → logprob: -14.813284873962402
    7. ' =[' → logprob: -15.688284873962402
    8. ',' → logprob: -15.938284873962402
    9. '=[' → logprob: -16.06328582763672
    10. '=
' → logprob: -16.43828582763672

Token 205: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00021450345229823142
    2. '[' → logprob: -9.000214576721191
    3. '(' → logprob: -10.000214576721191
    4. ' ' → logprob: -10.125214576721191
    5. '[]' → logprob: -12.375214576721191
    6. '[]
' → logprob: -14.625214576721191
    7. '[(' → logprob: -15.125214576721191
    8. ' (' → logprob: -15.750214576721191
    9. ' [' → logprob: -16.125213623046875
    10. '   ' → logprob: -16.625213623046875

Token 206: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.040457421680912e-05
    2. '[' → logprob: -10.125070571899414
    3. '(' → logprob: -10.875070571899414
    4. ' ' → logprob: -12.000070571899414
    5. '[]' → logprob: -12.250070571899414
    6. '[(' → logprob: -15.625070571899414
    7. '[]
' → logprob: -15.625070571899414
    8. '{' → logprob: -17.250070571899414
    9. '[int' → logprob: -17.625070571899414
    10. ' (' → logprob: -17.875070571899414

Token 207: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10991328954696655
    2. '<|end|>' → logprob: -2.3599133491516113
    3. '   ' → logprob: -5.109913349151611
    4. 'def' → logprob: -6.484913349151611
    5. '<|end|>' → logprob: -6.609913349151611
    6. ' def' → logprob: -8.359912872314453
    7. '    
' → logprob: -8.609912872314453
    8. '

' → logprob: -9.234912872314453
    9. '```' → logprob: -9.609912872314453
    10. ' 
' → logprob: -10.234912872314453

Token 208: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3724353015422821
    2. '   ' → logprob: -1.6224353313446045
    3. ' def' → logprob: -3.1224353313446045
    4. '<|end|>' → logprob: -3.1224353313446045
    5. '
' → logprob: -3.7474353313446045
    6. ')' → logprob: -7.372435092926025
    7. '<|end|>' → logprob: -8.122435569763184
    8. '	def' → logprob: -8.247435569763184
    9. ' for' → logprob: -8.497435569763184
    10. 'for' → logprob: -8.872435569763184

Token 209: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -8.125210297293961e-05
    2. ' def' → logprob: -9.500081062316895
    3. '   ' → logprob: -12.000081062316895
    4. '	def' → logprob: -16.87508201599121
    5. 'de' → logprob: -17.50008201599121
    6. 'for' → logprob: -17.50008201599121
    7. 'from' → logprob: -18.87508201599121
    8. '```' → logprob: -20.00008201599121
    9. ' ' → logprob: -20.12508201599121
    10. '
' → logprob: -20.62508201599121

Token 210: ' optimize' (ID: 40398)
  Prédit: ' optimize'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' optimize' → logprob: -0.20881733298301697
    2. ' solve' → logprob: -2.58381724357605
    3. ' compute' → logprob: -2.83381724357605
    4. ' minimize' → logprob: -3.83381724357605
    5. ' dp' → logprob: -4.458817481994629
    6. ' def' → logprob: -4.708817481994629
    7. ' calculate' → logprob: -5.833817481994629
    8. ' get' → logprob: -6.083817481994629
    9. ' min' → logprob: -6.458817481994629
    10. ' ' → logprob: -6.958817481994629

Token 211: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.005882337223738432
    2. '(' → logprob: -5.255882263183594
    3. '_pack' → logprob: -8.255882263183594
    4. '_batches' → logprob: -8.380882263183594
    5. '_cost' → logprob: -10.255882263183594
    6. '_batch' → logprob: -10.505882263183594
    7. 'self' → logprob: -11.130882263183594
    8. '_packages' → logprob: -11.380882263183594
    9. '(s' → logprob: -11.630882263183594
    10. '(
' → logprob: -11.755882263183594

Token 212: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011112901382148266
    2. ' ,' → logprob: -4.511112689971924
    3. 'self' → logprob: -10.511113166809082
    4. '_,' → logprob: -11.261113166809082
    5. '):' → logprob: -11.386113166809082
    6. '):
' → logprob: -12.886113166809082
    7. '   ' → logprob: -13.261113166809082
    8. ',
' → logprob: -13.511113166809082
    9. 's' → logprob: -13.886113166809082
    10. ',n' → logprob: -14.261113166809082

Token 213: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4335280954837799
    2. '       ' → logprob: -1.1835280656814575
    3. 'for' → logprob: -3.808528184890747
    4. ' i' → logprob: -4.433527946472168
    5. '   ' → logprob: -5.058527946472168
    6. 'def' → logprob: -6.933527946472168
    7. '    ' → logprob: -6.933527946472168
    8. '
' → logprob: -7.183527946472168
    9. 'n' → logprob: -7.683527946472168
    10. 'i' → logprob: -7.683527946472168

Token 214: ' from' (ID: 591)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.25350624322891235
    2. ' for' → logprob: -1.5035061836242676
    3. '       ' → logprob: -6.753506183624268
    4. 'import' → logprob: -8.628506660461426
    5. 'def' → logprob: -8.753506660461426
    6. 'from' (adapté à ' from') → logprob: -10.003506660461426
    7. ' import' → logprob: -11.378506660461426
    8. '   ' → logprob: -12.003506660461426
    9. ' def' → logprob: -12.378506660461426
    10. ' from' → logprob: -12.753506660461426

Token 215: ' collections' (ID: 22690)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.6992825865745544
    2. 'collections' → logprob: -1.6992826461791992
    3. ' functools' → logprob: -2.199282646179199
    4. ' math' → logprob: -2.324282646179199
    5. 'fun' → logprob: -2.574282646179199
    6. 'heap' → logprob: -4.199282646179199
    7. ' collections' → logprob: -4.324282646179199
    8. 'sys' → logprob: -6.199282646179199
    9. 'bis' → logprob: -6.199282646179199
    10. ' heap' → logprob: -7.199282646179199

Token 216: ' import' (ID: 1588)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.05823361873626709
    2. 'import' → logprob: -3.0582337379455566
    3. 'rc' → logprob: -6.183233737945557
    4. 'rs' → logprob: -6.683233737945557
    5. 'd' → logprob: -7.058233737945557
    6. 'rt' → logprob: -7.308233737945557
    7. 'ations' → logprob: -7.308233737945557
    8. 'g' → logprob: -7.683233737945557
    9. 'port' → logprob: -7.683233737945557
    10. 'ertools' → logprob: -7.808233737945557

Token 217: ' deque' (ID: 90347)
  Prédit: ' deque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.20218253135681152
    2. 'deque' → logprob: -1.7021825313568115
    3. ' defaultdict' → logprob: -7.202182769775391
    4. 'de' → logprob: -10.70218276977539
    5. 'default' → logprob: -14.07718276977539
    6. 'collections' → logprob: -14.70218276977539
    7. 'named' → logprob: -16.20218276977539
    8. ' functools' → logprob: -16.70218276977539
    9. ' named' → logprob: -17.20218276977539
    10. ' de' → logprob: -17.57718276977539

Token 218: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.045755088329315186
    2. '       ' → logprob: -3.42075514793396
    3. '<|end|>' → logprob: -4.920754909515381
    4. '        
' → logprob: -5.795754909515381
    5. ' 
' → logprob: -7.420754909515381
    6. '<|end|>' → logprob: -8.545755386352539
    7. '  
' → logprob: -8.670755386352539
    8. 'for' → logprob: -9.170755386352539
    9. ',' → logprob: -9.170755386352539
    10. ' for' → logprob: -9.420755386352539

Token 219: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04201335087418556
    2. '
' → logprob: -3.41701340675354
    3. '        
' → logprob: -5.542013168334961
    4. '<|end|>' → logprob: -6.167013168334961
    5. ' for' → logprob: -7.042013168334961
    6. 'for' → logprob: -8.042013168334961
    7. ' 
' → logprob: -8.292013168334961
    8. '        ' → logprob: -8.667013168334961
    9. 'def' → logprob: -8.792013168334961
    10. ',' → logprob: -9.292013168334961

Token 220: ' import' (ID: 1588)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3389143645763397
    2. ' for' → logprob: -1.588914394378662
    3. '       ' → logprob: -2.588914394378662
    4. 'dp' → logprob: -4.963914394378662
    5. 'def' → logprob: -7.213914394378662
    6. ' dp' → logprob: -7.838914394378662
    7. 'import' (adapté à ' import') → logprob: -10.588913917541504
    8. '        
' → logprob: -10.713913917541504
    9. '   ' → logprob: -11.213913917541504
    10. ' def' → logprob: -12.463913917541504

Token 221: ' sys' (ID: 12228)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.5397019982337952
    2. 'math' → logprob: -1.0397019386291504
    3. 'heap' → logprob: -3.2897019386291504
    4. ' heap' → logprob: -4.28970193862915
    5. ' sys' → logprob: -5.16470193862915
    6. 'bis' → logprob: -5.66470193862915
    7. 'sys' → logprob: -5.91470193862915
    8. ' bis' → logprob: -7.53970193862915
    9. ' itertools' → logprob: -9.289702415466309
    10. 'copy' → logprob: -11.164702415466309

Token 222: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.32756441831588745
    2. '       ' → logprob: -1.3275644779205322
    3. '<|end|>' → logprob: -4.827564239501953
    4. '        
' → logprob: -5.202564239501953
    5. '<|end|>' → logprob: -8.452564239501953
    6. '

' → logprob: -8.952564239501953
    7. ',' → logprob: -9.452564239501953
    8. ' for' → logprob: -10.202564239501953
    9. '```' → logprob: -10.452564239501953
    10. ',
' → logprob: -10.827564239501953

Token 223: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017952315509319305
    2. ' for' → logprob: -4.6429524421691895
    3. '        ' → logprob: -5.2679524421691895
    4. 'for' → logprob: -6.5179524421691895
    5. '        
' → logprob: -7.1429524421691895
    6. '    ' → logprob: -9.142951965332031
    7. 'dp' → logprob: -9.392951965332031
    8. '   ' → logprob: -9.517951965332031
    9. 'def' → logprob: -9.517951965332031
    10. ' dp' → logprob: -9.642951965332031

Token 224: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0605957955121994
    2. 'dp' → logprob: -3.185595750808716
    3. '       ' → logprob: -4.685595989227295
    4. 'def' → logprob: -5.435595989227295
    5. ' for' → logprob: -5.810595989227295
    6. 'INF' → logprob: -7.560595989227295
    7. 'sys' → logprob: -8.810595512390137
    8. 'self' → logprob: -10.435595512390137
    9. ' dp' → logprob: -10.685595512390137
    10. '   ' → logprob: -10.935595512390137

Token 225: ' To' (ID: 2514)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02166685275733471
    2. ' for' → logprob: -4.521667003631592
    3. 'dp' → logprob: -5.146667003631592
    4. 'def' → logprob: -5.521667003631592
    5. '       ' → logprob: -7.771667003631592
    6. '#' → logprob: -9.396666526794434
    7. 'INF' → logprob: -9.771666526794434
    8. 'import' → logprob: -10.271666526794434
    9. 'sys' → logprob: -10.396666526794434
    10. 'For' → logprob: -10.771666526794434

Token 226: ' avoid' (ID: 8397)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6994699239730835
    2. 'for' → logprob: -2.074470043182373
    3. 'def' → logprob: -2.324470043182373
    4. ' def' → logprob: -2.699470043182373
    5. ' optimize' → logprob: -2.949470043182373
    6. ' sys' → logprob: -3.199470043182373
    7. '   ' → logprob: -4.199470043182373
    8. 'f' → logprob: -4.574470043182373
    9. 'maximize' → logprob: -4.574470043182373
    10. '       ' → logprob: -4.699470043182373

Token 227: ' recal' (ID: 147248)
  Prédit: ' recursion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' recursion' → logprob: -0.4381532073020935
    2. ' sys' → logprob: -1.3131532669067383
    3. 'sys' → logprob: -3.5631532669067383
    4. ' max' → logprob: -4.063153266906738
    5. ' maximum' → logprob: -4.688153266906738
    6. 'max' → logprob: -4.938153266906738
    7. ' stack' → logprob: -5.188153266906738
    8. ' overflow' → logprob: -5.813153266906738
    9. '   ' → logprob: -5.938153266906738
    10. ' index' → logprob: -6.313153266906738

Token 228: 'cul' (ID: 2885)
  Prédit: 'culation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'culation' → logprob: -0.21029627323150635
    2. 'cul' → logprob: -1.8352962732315063
    3. 'culate' → logprob: -4.460296154022217
    4. 'culated' → logprob: -5.085296154022217
    5. 'ulating' → logprob: -5.460296154022217
    6. '   ' → logprob: -5.710296154022217
    7. '       ' → logprob: -6.710296154022217
    8. 'ulation' → logprob: -6.835296154022217
    9. 'c' → logprob: -8.210296630859375
    10. 'l' → logprob: -8.335296630859375

Token 229: 'ating' (ID: 1365)
  Prédit: 'ation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.3154808580875397
    2. 'ating' → logprob: -1.3154808282852173
    3. 'ations' → logprob: -7.190480709075928
    4. 'ate' → logprob: -7.315480709075928
    5. 'lation' → logprob: -7.815480709075928
    6. 'ated' → logprob: -9.315481185913086
    7. '   ' → logprob: -9.940481185913086
    8. 'culation' → logprob: -10.565481185913086
    9. 'tion' → logprob: -10.815481185913086
    10. '#' → logprob: -10.815481185913086

Token 230: ' min' (ID: 1349)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7068042755126953
    2. ' max' → logprob: -1.7068042755126953
    3. 'max' → logprob: -2.0818042755126953
    4. ' the' → logprob: -2.8318042755126953
    5. 'for' → logprob: -2.9568042755126953
    6. ' maximum' → logprob: -3.7068042755126953
    7. '<|end|>' → logprob: -3.7068042755126953
    8. ' ranges' → logprob: -4.831804275512695
    9. 'ranges' → logprob: -5.706804275512695
    10. 'dp' → logprob: -5.706804275512695

Token 231: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2052600234746933
    2. 'and' → logprob: -2.0802600383758545
    3. '_' → logprob: -3.2052600383758545
    4. ',' → logprob: -5.205259799957275
    5. 'max' → logprob: -5.455259799957275
    6. '_max' → logprob: -5.455259799957275
    7. '_and' → logprob: -6.205259799957275
    8. 'imum' → logprob: -6.955259799957275
    9. '/max' → logprob: -7.080259799957275
    10. '_size' → logprob: -7.830259799957275

Token 232: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.007610770873725414
    2. ' max' → logprob: -4.88261079788208
    3. '	max' → logprob: -14.007610321044922
    4. '(max' → logprob: -14.132610321044922
    5. '```' → logprob: -14.757610321044922
    6. '_max' → logprob: -15.007610321044922
    7. '[max' → logprob: -15.007610321044922
    8. '
' → logprob: -15.132610321044922
    9. 'maxlength' → logprob: -15.132610321044922
    10. '#' → logprob: -15.757610321044922

Token 233: ' repeatedly' (ID: 45605)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3367592394351959
    2. ' values' → logprob: -2.336759328842163
    3. ' sizes' → logprob: -2.586759328842163
    4. ' for' → logprob: -2.586759328842163
    5. ' in' → logprob: -4.586759090423584
    6. 'sizes' → logprob: -4.711759090423584
    7. 's' → logprob: -5.461759090423584
    8. '<|end|>' → logprob: -5.961759090423584
    9. ' ranges' → logprob: -6.461759090423584
    10. '   ' → logprob: -6.586759090423584

Token 234: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.030823076143860817
    2. '<|end|>' → logprob: -3.780822992324829
    3. '       ' → logprob: -5.905823230743408
    4. '<|end|>' → logprob: -6.405823230743408
    5. ',
' → logprob: -6.530823230743408
    6. '
' → logprob: -7.280823230743408
    7. ' for' → logprob: -7.280823230743408
    8. ' ,' → logprob: -9.28082275390625
    9. '        
' → logprob: -9.78082275390625
    10. ' in' → logprob: -10.40582275390625

Token 235: ' we' (ID: 581)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4659641981124878
    2. ' we' → logprob: -1.5909641981124878
    3. '<|end|>' → logprob: -2.5909643173217773
    4. 'we' → logprob: -3.2159643173217773
    5. ' use' → logprob: -4.465964317321777
    6. ' continue' → logprob: -5.090964317321777
    7. ' I'll' → logprob: -5.340964317321777
    8. ' we'll' → logprob: -5.340964317321777
    9. ' let's' → logprob: -5.465964317321777
    10. ' for' → logprob: -5.840964317321777

Token 236: ' use' (ID: 1199)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.44243982434272766
    2. ' use' → logprob: -1.8174397945404053
    3. ' will' → logprob: -2.5674397945404053
    4. ''ll' → logprob: -3.1924397945404053
    5. 'use' → logprob: -3.3174397945404053
    6. 'can' → logprob: -4.692440032958984
    7. '       ' → logprob: -5.067440032958984
    8. 'def' → logprob: -5.442440032958984
    9. 'will' → logprob: -5.567440032958984
    10. ' continue' → logprob: -6.192440032958984

Token 237: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.0426286458969116
    2. 'deque' → logprob: -1.2926286458969116
    3. 'two' → logprob: -2.042628765106201
    4. ' a' → logprob: -2.792628765106201
    5. ' two' → logprob: -3.042628765106201
    6. 'de' → logprob: -3.167628765106201
    7. 'mon' → logprob: -3.667628765106201
    8. '   ' → logprob: -3.792628765106201
    9. 'for' → logprob: -3.917628765106201
    10. '       ' → logprob: -4.667628765106201

Token 238: ' sliding' (ID: 53853)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.02763821929693222
    2. 'mon' → logprob: -4.2776384353637695
    3. 'for' → logprob: -5.2776384353637695
    4. ' deque' → logprob: -5.4026384353637695
    5. ' monot' → logprob: -7.1526384353637695
    6. 'def' → logprob: -7.6526384353637695
    7. 'sl' → logprob: -7.7776384353637695
    8. 'double' → logprob: -7.9026384353637695
    9. 'de' → logprob: -7.9026384353637695
    10. ' for' → logprob: -8.15263843536377

Token 239: ' window' (ID: 5734)
  Prédit: 'window'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'window' → logprob: -0.029786715283989906
    2. ' window' → logprob: -3.5297868251800537
    3. '_window' → logprob: -10.404787063598633
    4. '
' → logprob: -13.029787063598633
    5. '-window' → logprob: -13.904787063598633
    6. 'max' → logprob: -14.154787063598633
    7. 'win' → logprob: -14.779787063598633
    8. '   ' → logprob: -15.029787063598633
    9. 'deque' → logprob: -15.154787063598633
    10. 'windows' → logprob: -15.279787063598633

Token 240: ' approach' (ID: 7139)
  Prédit: ' technique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' technique' → logprob: -0.47673365473747253
    2. ' approach' → logprob: -1.101733684539795
    3. '       ' → logprob: -3.976733684539795
    4. ' for' → logprob: -5.226733684539795
    5. 'max' → logprob: -5.351733684539795
    6. ' deque' → logprob: -6.101733684539795
    7. 'min' → logprob: -6.226733684539795
    8. ' data' → logprob: -6.351733684539795
    9. '        
' → logprob: -6.726733684539795
    10. 'appro' → logprob: -6.726733684539795

Token 241: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22057844698429108
    2. '<|end|>' → logprob: -1.7205784320831299
    3. '
' → logprob: -5.095578670501709
    4. '<|end|>' → logprob: -5.220578670501709
    5. ' for' → logprob: -5.970578670501709
    6. ',' → logprob: -6.345578670501709
    7. '        
' → logprob: -6.595578670501709
    8. ' to' → logprob: -7.595578670501709
    9. ' and' → logprob: -7.595578670501709
    10. '.' → logprob: -8.34557819366455

Token 242: ' deque' (ID: 90347)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.49055641889572144
    2. ' two' → logprob: -1.2405564785003662
    3. 'deque' → logprob: -2.990556478500366
    4. 'de' → logprob: -3.490556478500366
    5. 'mon' → logprob: -4.865556240081787
    6. 'min' → logprob: -5.615556240081787
    7. ' monot' → logprob: -6.115556240081787
    8. ' deque' → logprob: -6.240556240081787
    9. ' de' → logprob: -6.740556240081787
    10. 'max' → logprob: -8.240556716918945

Token 243: '
' (ID: 198)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.019713763147592545
    2. '       ' → logprob: -4.144713878631592
    3. '<|end|>' → logprob: -6.144713878631592
    4. ' s' → logprob: -7.019713878631592
    5. '.' → logprob: -9.019713401794434
    6. '        
' → logprob: -9.144713401794434
    7. ' for' → logprob: -9.519713401794434
    8. ',' → logprob: -9.519713401794434
    9. '<|end|>' → logprob: -9.644713401794434
    10. '(s' → logprob: -9.894713401794434

Token 244: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 245: ' dp' (ID: 21546)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0901959240436554
    2. ' for' → logprob: -3.215195894241333
    3. ' dp' → logprob: -4.715196132659912
    4. 'dp' (adapté à ' dp') → logprob: -4.840196132659912
    5. ' result' → logprob: -4.965196132659912
    6. 'result' → logprob: -4.965196132659912
    7. 'for' → logprob: -5.090196132659912
    8. 'def' → logprob: -6.465196132659912
    9. '        ' → logprob: -6.715196132659912
    10. '    ' → logprob: -6.840196132659912

Token 246: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00807276088744402
    2. '=' → logprob: -4.883072853088379
    3. '_' → logprob: -7.883072853088379
    4. ' ' → logprob: -9.508072853088379
    5. '[' → logprob: -12.633072853088379
    6. '_cache' → logprob: -12.633072853088379
    7. '   ' → logprob: -12.883072853088379
    8. '_=' → logprob: -13.758072853088379
    9. ',' → logprob: -13.883072853088379
    10. ' =[' → logprob: -13.883072853088379

Token 247: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.23265385627746582
    2. ' [' → logprob: -1.7326538562774658
    3. '[self' → logprob: -3.482653856277466
    4. 'self' → logprob: -10.982653617858887
    5. ' self' → logprob: -11.857653617858887
    6. '   ' → logprob: -12.857653617858887
    7. '[-' → logprob: -13.232653617858887
    8. '[len' → logprob: -13.982653617858887
    9. '[n' → logprob: -14.857653617858887
    10. ' ' → logprob: -14.857653617858887

Token 248: 'sys' (ID: 17324)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.053575482219457626
    2. '0' → logprob: -3.4285755157470703
    3. 'sys' → logprob: -3.9285755157470703
    4. ' float' → logprob: -10.17857551574707
    5. '(float' → logprob: -12.17857551574707
    6. ' sys' → logprob: -12.42857551574707
    7. '[' → logprob: -12.92857551574707
    8. 'self' → logprob: -13.05357551574707
    9. 'None' → logprob: -13.55357551574707
    10. '(sys' → logprob: -13.67857551574707

Token 249: '.max' (ID: 11883)
  Prédit: '.max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.max' → logprob: -7.684157026233152e-05
    2. 'max' → logprob: -9.500077247619629
    3. ' max' → logprob: -13.875077247619629
    4. '_max' → logprob: -14.875077247619629
    5. 'Max' → logprob: -15.125077247619629
    6. '.Max' → logprob: -16.375076293945312
    7. ',max' → logprob: -16.375076293945312
    8. '	max' → logprob: -17.000076293945312
    9. '   ' → logprob: -17.500076293945312
    10. '.float' → logprob: -17.750076293945312

Token 250: 'size' (ID: 4461)
  Prédit: 'size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -4.0722858102526516e-05
    2. 'int' → logprob: -10.125041007995605
    3. 'siz' → logprob: -14.875041007995605
    4. ' size' → logprob: -15.750041007995605
    5. '   ' → logprob: -16.62504005432129
    6. 'max' → logprob: -18.00004005432129
    7. 'ize' → logprob: -18.12504005432129
    8. 'sizes' → logprob: -18.37504005432129
    9. '```' → logprob: -18.87504005432129
    10. '       ' → logprob: -18.87504005432129

Token 251: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -4.096126576769166e-05
    2. ']*(' → logprob: -10.875041007995605
    3. ' for' → logprob: -11.375041007995605
    4. ' ]' → logprob: -12.000041007995605
    5. ']*' → logprob: -13.500041007995605
    6. ']+' → logprob: -14.000041007995605
    7. '   ' → logprob: -14.000041007995605
    8. 'for' → logprob: -14.500041007995605
    9. ' if' → logprob: -15.125041007995605
    10. '()]' → logprob: -16.00004005432129

Token 252: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0004108924185857177
    2. ']*(' → logprob: -8.500411033630371
    3. ' for' → logprob: -8.625411033630371
    4. 'for' → logprob: -11.000411033630371
    5. ']*' → logprob: -12.000411033630371
    6. ' ]' → logprob: -12.875411033630371
    7. '   ' → logprob: -13.625411033630371
    8. ']+' → logprob: -14.250411033630371
    9. ',' → logprob: -15.625411033630371
    10. '```' → logprob: -15.625411033630371

Token 253: ' (' (ID: 350)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00016361083544325083
    2. ' (' → logprob: -8.750164031982422
    3. '(len' → logprob: -12.875164031982422
    4. '(N' → logprob: -14.375164031982422
    5. '(n' → logprob: -14.500164031982422
    6. '(this' → logprob: -14.625164031982422
    7. '   ' → logprob: -14.875164031982422
    8. '
' → logprob: -15.625164031982422
    9. '((' → logprob: -16.000164031982422
    10. 'self' → logprob: -16.500164031982422

Token 254: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04902423545718193
    2. '(self' → logprob: -3.0490243434906006
    3. ' self' → logprob: -7.9240241050720215
    4. '
' → logprob: -9.79902458190918
    5. '       ' → logprob: -11.79902458190918
    6. '   ' → logprob: -12.17402458190918
    7. '[self' → logprob: -12.79902458190918
    8. ' (' → logprob: -13.17402458190918
    9. '=self' → logprob: -14.54902458190918
    10. '           ' → logprob: -14.92402458190918

Token 255: '.N' (ID: 4439)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.15400926768779755
    2. ' (' → logprob: -3.0290093421936035
    3. '.N' → logprob: -3.1540093421936035
    4. 'N' → logprob: -3.2790093421936035
    5. '
' → logprob: -4.5290093421936035
    6. 'self' → logprob: -6.5290093421936035
    7. '       ' → logprob: -7.7790093421936035
    8. '   ' → logprob: -7.7790093421936035
    9. '(self' → logprob: -8.279008865356445
    10. '(' → logprob: -8.779008865356445

Token 256: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12693576514720917
    2. ' +' → logprob: -2.1269357204437256
    3. '+
' → logprob: -12.251935958862305
    4. ' +
' → logprob: -13.251935958862305
    5. '
' → logprob: -14.876935958862305
    6. '1' → logprob: -15.251935958862305
    7. ' ' → logprob: -15.376935958862305
    8. ')' → logprob: -15.626935958862305
    9. '   ' → logprob: -17.001935958862305
    10. '```' → logprob: -17.501935958862305

Token 257: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009134899592027068
    2. ' ' → logprob: -7.000913619995117
    3. '   ' → logprob: -13.500913619995117
    4. '```' → logprob: -15.125913619995117
    5. '       ' → logprob: -16.000913619995117
    6. '
' → logprob: -16.625913619995117
    7. '  ' → logprob: -17.125913619995117
    8. ')' → logprob: -17.438413619995117
    9. '           ' → logprob: -17.500913619995117
    10. '     ' → logprob: -17.688413619995117

Token 258: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.1424973713001236e-05
    2. ' ' → logprob: -10.375031471252441
    3. '   ' → logprob: -16.625030517578125
    4. '```' → logprob: -17.625030517578125
    5. '
' → logprob: -17.875030517578125
    6. 'self' → logprob: -18.750030517578125
    7. '  ' → logprob: -19.312530517578125
    8. ')' → logprob: -19.875030517578125
    9. '2' → logprob: -19.937530517578125
    10. '0' → logprob: -19.937530517578125

Token 259: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2520339787006378
    2. ')
' → logprob: -1.5020339488983154
    3. '       ' → logprob: -10.252034187316895
    4. ')
' → logprob: -10.377034187316895
    5. ')

' → logprob: -10.752034187316895
    6. ' )
' → logprob: -12.252034187316895
    7. '
' → logprob: -12.252034187316895
    8. ' )' → logprob: -12.377034187316895
    9. ']' → logprob: -14.002034187316895
    10. '   ' → logprob: -14.752034187316895

Token 260: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03616223856806755
    2. 'dp' → logprob: -3.6611621379852295
    3. '       ' → logprob: -5.411162376403809
    4. ' dp' → logprob: -5.786162376403809
    5. '	dp' → logprob: -6.786162376403809
    6. '        
' → logprob: -7.786162376403809
    7. '(dp' → logprob: -7.911162376403809
    8. '<|end|>' → logprob: -9.036162376403809
    9. ' 
' → logprob: -9.161162376403809
    10. '_dp' → logprob: -10.411162376403809

Token 261: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -5.9153885558771435e-06
    2. ' dp' → logprob: -12.125005722045898
    3. '_dp' → logprob: -15.375005722045898
    4. '	dp' → logprob: -15.500005722045898
    5. '(dp' → logprob: -18.2500057220459
    6. '
' → logprob: -18.3750057220459
    7. '       ' → logprob: -19.0000057220459
    8. '.dp' → logprob: -19.5000057220459
    9. 'dc' → logprob: -20.7500057220459
    10. '[' → logprob: -20.8750057220459

Token 262: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.584239938296378e-06
    2. '[
' → logprob: -12.500007629394531
    3. ' [' → logprob: -13.000007629394531
    4. '][' → logprob: -14.500007629394531
    5. '
' → logprob: -15.000007629394531
    6. '0' → logprob: -15.875007629394531
    7. '[self' → logprob: -16.00000762939453
    8. '```' → logprob: -16.25000762939453
    9. ' ' → logprob: -16.75000762939453
    10. '<|end|>' → logprob: -16.87500762939453

Token 263: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.292907877039397e-06
    2. ' ' → logprob: -12.75000286102295
    3. '
' → logprob: -16.500003814697266
    4. '   ' → logprob: -16.625003814697266
    5. ']' → logprob: -17.000003814697266
    6. 'self' → logprob: -17.000003814697266
    7. '[' → logprob: -17.250003814697266
    8. '```' → logprob: -17.375003814697266
    9. ')' → logprob: -17.625003814697266
    10. '       ' → logprob: -17.875003814697266

Token 264: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0019713386427611113
    2. ' ]' → logprob: -6.251971244812012
    3. ']=' → logprob: -10.126971244812012
    4. '=' → logprob: -13.501971244812012
    5. ')' → logprob: -14.001971244812012
    6. ']
' → logprob: -15.501971244812012
    7. ' =' → logprob: -15.751971244812012
    8. '`]' → logprob: -17.376972198486328
    9. '[' → logprob: -17.626972198486328
    10. ')]' → logprob: -18.251972198486328

Token 265: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.474077433347702
    2. ' =' → logprob: -0.9740774631500244
    3. ' ' → logprob: -14.724077224731445
    4. '.=' → logprob: -17.099077224731445
    5. '=int' → logprob: -17.849077224731445
    6. ' =
' → logprob: -17.849077224731445
    7. '＝' → logprob: -18.099077224731445
    8. '=
' → logprob: -18.224077224731445
    9. ')=' → logprob: -18.724077224731445
    10. '=

' → logprob: -18.724077224731445

Token 266: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '   ' → logprob: -18.750001907348633
    4. '۰' → logprob: -20.500001907348633
    5. ' ' → logprob: -21.500001907348633
    6. '```' → logprob: -21.625001907348633
    7. '  ' → logprob: -21.750001907348633
    8. '    ' → logprob: -22.000001907348633
    9. '     ' → logprob: -22.375001907348633
    10. '[' → logprob: -22.500001907348633

Token 267: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '۰' → logprob: -20.125
    4. '   ' → logprob: -22.25
    5. '０' → logprob: -22.5
    6. '000' → logprob: -23.625
    7. '٠' → logprob: -23.75
    8. '০' → logprob: -24.0
    9. '00' → logprob: -24.0
    10. '  ' → logprob: -24.0

Token 268: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.48173579573631287
    2. '
' → logprob: -0.9817358255386353
    3. ' for' → logprob: -5.231735706329346
    4. '<|end|>' → logprob: -7.231735706329346
    5. '        
' → logprob: -7.606735706329346
    6. ' 
' → logprob: -8.231736183166504
    7. 'for' → logprob: -8.356736183166504
    8. '   ' → logprob: -8.731736183166504
    9. '    
' → logprob: -9.106736183166504
    10. '\n' → logprob: -9.481736183166504

Token 269: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07652107626199722
    2. '
' → logprob: -3.326521158218384
    3. ' for' → logprob: -3.451521158218384
    4. 'for' → logprob: -5.576520919799805
    5. '   ' → logprob: -6.576520919799805
    6. '        
' → logprob: -8.076520919799805
    7. '	for' → logprob: -8.451520919799805
    8. '<|end|>' → logprob: -9.201520919799805
    9. '    
' → logprob: -9.576520919799805
    10. ' 
' → logprob: -10.201520919799805

Token 270: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0007150543970055878
    2. '       ' → logprob: -7.500715255737305
    3. ' for' → logprob: -8.750715255737305
    4. 'from' → logprob: -13.250715255737305
    5. '   ' → logprob: -13.500715255737305
    6. 'def' → logprob: -14.875715255737305
    7. '	for' → logprob: -16.000715255737305
    8. '```' → logprob: -16.750715255737305
    9. '        
' → logprob: -18.000715255737305
    10. '
' → logprob: -18.500715255737305

Token 271: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.02175363525748253
    2. 'i' → logprob: -4.021753787994385
    3. ' end' → logprob: -5.771753787994385
    4. ' length' → logprob: -8.021753311157227
    5. 'end' → logprob: -9.271753311157227
    6. ' batch' → logprob: -11.021753311157227
    7. ' partition' → logprob: -11.396753311157227
    8. ' j' → logprob: -12.146753311157227
    9. ' m' → logprob: -12.396753311157227
    10. '	i' → logprob: -12.521753311157227

Token 272: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02981390617787838
    2. 'in' → logprob: -3.5298140048980713
    3. ' ' → logprob: -10.029813766479492
    4. ',' → logprob: -11.904813766479492
    5. '1' → logprob: -12.154813766479492
    6. '  ' → logprob: -13.779813766479492
    7. ' i' → logprob: -14.279813766479492
    8. 'n' → logprob: -14.279813766479492
    9. '	in' → logprob: -14.279813766479492
    10. '+' → logprob: -14.404813766479492

Token 273: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2014189064502716
    2. ' range' → logprob: -1.7014188766479492
    3. ' ' → logprob: -12.82641887664795
    4. '   ' → logprob: -13.20141887664795
    5. '  ' → logprob: -14.45141887664795
    6. '1' → logprob: -14.70141887664795
    7. '    ' → logprob: -16.826419830322266
    8. '	range' → logprob: -16.826419830322266
    9. '(range' → logprob: -17.451419830322266
    10. ' in' → logprob: -17.701419830322266

Token 274: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1472419600977446e-06
    2. '(self' → logprob: -13.875000953674316
    3. ' (' → logprob: -16.500001907348633
    4. '1' → logprob: -16.500001907348633
    5. '(
' → logprob: -18.625001907348633
    6. ',' → logprob: -20.375001907348633
    7. '   ' → logprob: -21.375001907348633
    8. '       ' → logprob: -22.250001907348633
    9. '(

' → logprob: -22.625001907348633
    10. 'self' → logprob: -22.750001907348633

Token 275: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. 'self' → logprob: -13.500001907348633
    3. ' ' → logprob: -15.375001907348633
    4. '   ' → logprob: -16.625001907348633
    5. '(' → logprob: -20.750001907348633
    6. '       ' → logprob: -20.875001907348633
    7. ' self' → logprob: -21.125001907348633
    8. '
' → logprob: -21.375001907348633
    9. '0' → logprob: -21.625001907348633
    10. '2' → logprob: -21.750001907348633

Token 276: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.541112427134067e-05
    2. ' ,' → logprob: -9.500075340270996
    3. ',self' → logprob: -15.000075340270996
    4. ',
' → logprob: -16.000076293945312
    5. '

' → logprob: -18.375076293945312
    6. '   ' → logprob: -18.625076293945312
    7. '       ' → logprob: -18.625076293945312
    8. '
' → logprob: -18.625076293945312
    9. 'self' → logprob: -19.375076293945312
    10. '```' → logprob: -19.750076293945312

Token 277: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.029751529917120934
    2. ' self' → logprob: -3.5297515392303467
    3. '   ' → logprob: -14.779751777648926
    4. '       ' → logprob: -14.779751777648926
    5. '
' → logprob: -15.904751777648926
    6. '           ' → logprob: -16.65475082397461
    7. '(self' → logprob: -17.02975082397461
    8. ' ' → logprob: -17.90475082397461
    9. '    ' → logprob: -18.27975082397461
    10. '[self' → logprob: -18.27975082397461

Token 278: '.N' (ID: 4439)
  Prédit: '.N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.N' → logprob: -8.137130498653278e-05
    2. 'N' → logprob: -9.500081062316895
    3. '+' → logprob: -12.625081062316895
    4. '   ' → logprob: -14.125081062316895
    5. '.' → logprob: -14.375081062316895
    6. ' .' → logprob: -14.625081062316895
    7. '	N' → logprob: -14.750081062316895
    8. '.M' → logprob: -14.750081062316895
    9. '<N' → logprob: -16.00008201599121
    10. '_N' → logprob: -16.12508201599121

Token 279: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.575940728187561
    2. '+' → logprob: -0.825940728187561
    3. ' +
' → logprob: -14.70094108581543
    4. '):' → logprob: -15.07594108581543
    5. '+
' → logprob: -15.32594108581543
    6. '):
' → logprob: -15.70094108581543
    7. '   ' → logprob: -16.70094108581543
    8. '1' → logprob: -16.82594108581543
    9. '+i' → logprob: -17.45094108581543
    10. '+self' → logprob: -17.45094108581543

Token 280: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00017970333283301443
    2. ' ' → logprob: -8.625179290771484
    3. '   ' → logprob: -16.125179290771484
    4. ')' → logprob: -17.875179290771484
    5. '
' → logprob: -18.500179290771484
    6. '```' → logprob: -18.750179290771484
    7. '  ' → logprob: -19.500179290771484
    8. 'self' → logprob: -20.250179290771484
    9. '    ' → logprob: -20.750179290771484
    10. '       ' → logprob: -21.000179290771484

Token 281: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. '
' → logprob: -18.50001335144043
    4. '   ' → logprob: -18.87501335144043
    5. 'i' → logprob: -19.37501335144043
    6. ')' → logprob: -19.37501335144043
    7. 'self' → logprob: -19.75001335144043
    8. '```' → logprob: -20.81251335144043
    9. '۱' → logprob: -20.93751335144043
    10. '  ' → logprob: -20.93751335144043

Token 282: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01618087850511074
    2. '):
' → logprob: -4.141180992126465
    3. ':' → logprob: -8.891180992126465
    4. '       ' → logprob: -12.891180992126465
    5. '):
' → logprob: -13.141180992126465
    6. ' ):' → logprob: -13.141180992126465
    7. ')' → logprob: -13.391180992126465
    8. ',' → logprob: -15.266180992126465
    9. ':
' → logprob: -15.516180992126465
    10. '):

' → logprob: -15.641180992126465

Token 283: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0035244061145931482
    2. '        ' → logprob: -7.003524303436279
    3. '       ' → logprob: -7.003524303436279
    4. ' for' → logprob: -7.378524303436279
    5. '            ' → logprob: -8.253524780273438
    6. '	       ' → logprob: -8.253524780273438
    7. '            
' → logprob: -8.878524780273438
    8. '               ' → logprob: -9.628524780273438
    9. '```' → logprob: -9.753524780273438
    10. '   ' → logprob: -10.003524780273438

Token 284: ' max' (ID: 2999)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7601101398468018
    2. 'for' → logprob: -1.2601101398468018
    3. '           ' → logprob: -1.6351101398468018
    4. 'min' → logprob: -3.6351101398468018
    5. ' min' → logprob: -4.510109901428223
    6. 'max' (adapté à ' max') → logprob: -5.135109901428223
    7. ' max' → logprob: -6.135109901428223
    8. '   ' → logprob: -6.385109901428223
    9. ' deque' → logprob: -6.510109901428223
    10. '       ' → logprob: -6.760109901428223

Token 285: '_de' (ID: 5047)
  Prédit: '_de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -0.20863214135169983
    2. '_d' → logprob: -2.208632230758667
    3. '_queue' → logprob: -2.708632230758667
    4. '_q' → logprob: -5.083631992340088
    5. '_val' → logprob: -5.458631992340088
    6. 'd' → logprob: -7.833631992340088
    7. 'dq' → logprob: -8.333632469177246
    8. 'Deque' → logprob: -8.708632469177246
    9. '_vals' → logprob: -8.833632469177246
    10. 's' → logprob: -9.083632469177246

Token 286: 'que' (ID: 1126)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.5761376023292542
    2. 'que' → logprob: -0.8261376023292542
    3. 'queue' → logprob: -9.45113754272461
    4. 'ques' → logprob: -9.82613754272461
    5. 'qu' → logprob: -10.45113754272461
    6. 'uq' → logprob: -11.32613754272461
    7. 'c' → logprob: -11.45113754272461
    8. 'qe' → logprob: -12.95113754272461
    9. 'cq' → logprob: -13.07613754272461
    10. 'p' → logprob: -13.45113754272461

Token 287: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07892470806837082
    2. '=' → logprob: -2.5789246559143066
    3. ',' → logprob: -10.578925132751465
    4. ' ' → logprob: -12.578925132751465
    5. '<|end|>' → logprob: -13.328925132751465
    6. '=[]' → logprob: -13.453925132751465
    7. ')' → logprob: -13.578925132751465
    8. 's' → logprob: -15.078925132751465
    9. '.' → logprob: -15.328925132751465
    10. '.append' → logprob: -15.578925132751465

Token 288: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.008620485663414001
    2. ' deque' → logprob: -4.758620262145996
    3. 'de' → logprob: -12.133620262145996
    4. 'Deque' → logprob: -14.758620262145996
    5. '[]' → logprob: -16.008621215820312
    6. ' ' → logprob: -16.883621215820312
    7. '	de' → logprob: -17.008621215820312
    8. 'collections' → logprob: -17.633621215820312
    9. ' de' → logprob: -18.633621215820312
    10. ' []' → logprob: -18.883621215820312

Token 289: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0036132587119936943
    2. '()
' → logprob: -5.628613471984863
    3. '()

' → logprob: -12.503613471984863
    4. '([' → logprob: -12.878613471984863
    5. '([]' → logprob: -13.128613471984863
    6. '[]' → logprob: -13.878613471984863
    7. '([(' → logprob: -13.878613471984863
    8. '=[]' → logprob: -14.128613471984863
    9. '()]' → logprob: -14.753613471984863
    10. '(),' → logprob: -15.003613471984863

Token 290: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.41213393211364746
    2. ' min' → logprob: -1.2871339321136475
    3. 'min' → logprob: -3.4121339321136475
    4. '<|end|>' → logprob: -4.537134170532227
    5. '            ' → logprob: -4.912134170532227
    6. ' ' → logprob: -5.287134170532227
    7. ' max' → logprob: -6.287134170532227
    8. ' for' → logprob: -7.037134170532227
    9. '[min' → logprob: -7.412134170532227
    10. '    ' → logprob: -7.412134170532227

Token 291: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -0.02539871446788311
    2. ' min' → logprob: -3.7753987312316895
    3. '           ' → logprob: -6.1503987312316895
    4. '	min' → logprob: -11.650398254394531
    5. '[min' → logprob: -12.275398254394531
    6. '_min' → logprob: -13.400398254394531
    7. 'max' → logprob: -14.400398254394531
    8. '(min' → logprob: -14.400398254394531
    9. '            ' → logprob: -14.775398254394531
    10. '   ' → logprob: -14.900398254394531

Token 292: '_de' (ID: 5047)
  Prédit: '_de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -4.1080467781284824e-05
    2. '_' → logprob: -10.250041007995605
    3. 'deque' → logprob: -12.500041007995605
    4. '_d' → logprob: -14.625041007995605
    5. ' _' → logprob: -14.750041007995605
    6. 'de' → logprob: -15.125041007995605
    7. '\' → logprob: -15.250041007995605
    8. 'Deque' → logprob: -15.500041007995605
    9. '_queue' → logprob: -16.250041961669922
    10. '_DE' → logprob: -17.250041961669922

Token 293: 'que' (ID: 1126)
  Prédit: 'que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.0001766040368238464
    2. 'q' → logprob: -9.125176429748535
    3. 'ques' → logprob: -10.750176429748535
    4. 'deque' → logprob: -10.875176429748535
    5. 'queue' → logprob: -11.125176429748535
    6. 'qu' → logprob: -12.500176429748535
    7. 'ue' → logprob: -12.750176429748535
    8. 'uq' → logprob: -12.750176429748535
    9. ' que' → logprob: -14.750176429748535
    10. '```' → logprob: -14.875176429748535

Token 294: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023246755823493004
    2. '=' → logprob: -3.7732467651367188
    3. ' ' → logprob: -14.148246765136719
    4. ' =
' → logprob: -15.773246765136719
    5. '<|end|>' → logprob: -15.773246765136719
    6. ')' → logprob: -16.02324676513672
    7. '()' → logprob: -16.89824676513672
    8. 's' → logprob: -17.52324676513672
    9. '        ' → logprob: -18.27324676513672
    10. '    ' → logprob: -18.27324676513672

Token 295: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.04858759790658951
    2. ' deque' → logprob: -3.0485875606536865
    3. 'de' → logprob: -16.173587799072266
    4. 'Deque' → logprob: -16.423587799072266
    5. '	de' → logprob: -19.923587799072266
    6. '(de' → logprob: -20.298587799072266
    7. 'collections' → logprob: -20.423587799072266
    8. ' ' → logprob: -20.548587799072266
    9. ' dequeue' → logprob: -20.673587799072266
    10. '   ' → logprob: -22.048587799072266

Token 296: '()
' (ID: 1234)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 297: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003478666767477989
    2. ' for' → logprob: -5.878478527069092
    3. '       ' → logprob: -8.87847900390625
    4. 'for' → logprob: -8.87847900390625
    5. '   ' → logprob: -9.25347900390625
    6. '<|end|>' → logprob: -9.50347900390625
    7. ' ' → logprob: -9.62847900390625
    8. ',' → logprob: -9.75347900390625
    9. '         ' → logprob: -11.00347900390625
    10. '            
' → logprob: -11.25347900390625

Token 298: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5851894617080688
    2. 'for' (adapté à ' for') → logprob: -0.8351894617080688
    3. '           ' → logprob: -4.710189342498779
    4. 'j' → logprob: -8.960189819335938
    5. '   ' → logprob: -10.210189819335938
    6. '       ' → logprob: -10.960189819335938
    7. ' j' → logprob: -11.710189819335938
    8. ' ' → logprob: -11.960189819335938
    9. '    ' → logprob: -13.335189819335938
    10. '	for' → logprob: -13.835189819335938

Token 299: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0021893989760428667
    2. ' j' → logprob: -6.127189636230469
    3. '	j' → logprob: -13.502189636230469
    4. 'k' → logprob: -14.502189636230469
    5. 'start' → logprob: -14.627189636230469
    6. '```' → logprob: -14.627189636230469
    7. '   ' → logprob: -14.752189636230469
    8. '_j' → logprob: -14.877189636230469
    9. '$j' → logprob: -16.00218963623047
    10. ' ' → logprob: -16.25218963623047

Token 300: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005502560641616583
    2. 'in' → logprob: -5.255502700805664
    3. ' ' → logprob: -8.255502700805664
    4. '	in' → logprob: -13.005502700805664
    5. ' i' → logprob: -13.380502700805664
    6. '<|end|>' → logprob: -13.630502700805664
    7. ')' → logprob: -14.255502700805664
    8. ' j' → logprob: -14.755502700805664
    9. 'range' → logprob: -14.880502700805664
    10. 's' → logprob: -14.880502700805664

Token 301: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.048670027405023575
    2. ' range' → logprob: -3.0486700534820557
    3. '   ' → logprob: -9.798669815063477
    4. 're' → logprob: -11.798669815063477
    5. '(range' → logprob: -12.423669815063477
    6. ' ' → logprob: -12.673669815063477
    7. 'i' → logprob: -12.798669815063477
    8. '  ' → logprob: -12.923669815063477
    9. '	range' → logprob: -12.923669815063477
    10. 'reverse' → logprob: -14.048669815063477

Token 302: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -8.554343366995454e-05
    2. '(' → logprob: -9.375085830688477
    3. '(j' → logprob: -14.875085830688477
    4. ' (' → logprob: -15.875085830688477
    5. '(
' → logprob: -16.625085830688477
    6. '=i' → logprob: -16.875085830688477
    7. ' i' → logprob: -17.125085830688477
    8. '	i' → logprob: -18.000085830688477
    9. '[i' → logprob: -18.000085830688477
    10. '{i' → logprob: -18.000085830688477

Token 303: ',' (ID: 11)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.062132369726896286
    2. ' -' → logprob: -2.8121323585510254
    3. ',' → logprob: -8.812132835388184
    4. ' ,' → logprob: -11.312132835388184
    5. ' ' → logprob: -13.437132835388184
    6. '   ' → logprob: -14.437132835388184
    7. '):
' → logprob: -15.187132835388184
    8. ',-' → logprob: -15.187132835388184
    9. '-,' → logprob: -15.187132835388184
    10. ')' → logprob: -15.687132835388184

Token 304: ' max' (ID: 2999)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009446957265026867
    2. ' ' → logprob: -7.0009446144104
    3. 'i' → logprob: -10.500945091247559
    4. '
' → logprob: -13.375945091247559
    5. 'max' → logprob: -13.500945091247559
    6. ' i' → logprob: -14.500945091247559
    7. '-' → logprob: -15.125945091247559
    8. '           ' → logprob: -15.125945091247559
    9. ' 
' → logprob: -15.375945091247559
    10. 'j' → logprob: -15.500945091247559

Token 305: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.03804241120815277
    2. '(' → logprob: -3.2880423069000244
    3. '(
' → logprob: -14.538042068481445
    4. '(-' → logprob: -14.788042068481445
    5. ' (' → logprob: -17.038042068481445
    6. 'i' → logprob: -17.413042068481445
    7. ' ' → logprob: -18.038042068481445
    8. '-' → logprob: -18.038042068481445
    9. '(self' → logprob: -18.163042068481445
    10. '(I' → logprob: -18.913042068481445

Token 306: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6221168637275696
    2. '-' → logprob: -0.9971168637275696
    3. '-self' → logprob: -2.372116804122925
    4. '-M' → logprob: -7.622117042541504
    5. '-i' → logprob: -7.997117042541504
    6. '   ' → logprob: -10.372117042541504
    7. ' self' → logprob: -11.122117042541504
    8. 'self' → logprob: -11.122117042541504
    9. ' ' → logprob: -11.747117042541504
    10. '-m' → logprob: -11.747117042541504

Token 307: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0003242607053834945
    2. ' self' → logprob: -8.250324249267578
    3. '1' → logprob: -9.875324249267578
    4. '           ' → logprob: -12.500324249267578
    5. '       ' → logprob: -12.750324249267578
    6. '   ' → logprob: -13.375324249267578
    7. '
' → logprob: -14.125324249267578
    8. '               ' → logprob: -14.375324249267578
    9. '                   ' → logprob: -14.500324249267578
    10. 'min' → logprob: -15.000324249267578

Token 308: '.M' (ID: 2015)
  Prédit: '.M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.M' → logprob: -0.030233129858970642
    2. 'self' → logprob: -4.030232906341553
    3. '.self' → logprob: -5.780232906341553
    4. '.' → logprob: -5.905232906341553
    5. '.m' → logprob: -6.530232906341553
    6. '.S' → logprob: -6.780232906341553
    7. '       ' → logprob: -7.280232906341553
    8. '.max' → logprob: -8.155233383178711
    9. '[' → logprob: -8.405233383178711
    10. '               ' → logprob: -8.530233383178711

Token 309: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20656687021255493
    2. ' -' → logprob: -1.9565668106079102
    3. '-' → logprob: -3.20656681060791
    4. ' ,' → logprob: -5.45656681060791
    5. ' ' → logprob: -9.08156681060791
    6. ',-' → logprob: -9.20656681060791
    7. '   ' → logprob: -9.70656681060791
    8. '1' → logprob: -10.20656681060791
    9. '(i' → logprob: -10.20656681060791
    10. '0' → logprob: -10.83156681060791

Token 310: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3564396798610687
    2. '-' → logprob: -1.2314397096633911
    3. ' -' → logprob: -5.231439590454102
    4. ' ' → logprob: -5.981439590454102
    5. '           ' → logprob: -9.981439590454102
    6. ',' → logprob: -11.231439590454102
    7. '            ' → logprob: -12.481439590454102
    8. 'i' → logprob: -12.606439590454102
    9. '               ' → logprob: -12.856439590454102
    10. '          ' → logprob: -13.106439590454102

Token 311: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0021010141354054213
    2. '-' → logprob: -6.252100944519043
    3. ' ' → logprob: -8.877100944519043
    4. ' -' → logprob: -10.752100944519043
    5. 'i' → logprob: -11.752100944519043
    6. '
' → logprob: -13.127100944519043
    7. '           ' → logprob: -15.002100944519043
    8. ',' → logprob: -15.002100944519043
    9. '   ' → logprob: -15.252100944519043
    10. '     ' → logprob: -16.37710189819336

Token 312: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07413119077682495
    2. ',-' → logprob: -2.6991312503814697
    3. '-' → logprob: -5.574131011962891
    4. ' ,' → logprob: -9.07413101196289
    5. ' -' → logprob: -9.57413101196289
    6. '),' → logprob: -9.69913101196289
    7. '   ' → logprob: -9.94913101196289
    8. '-,' → logprob: -10.57413101196289
    9. ' ,-' → logprob: -10.69913101196289
    10. '           ' → logprob: -11.32413101196289

Token 313: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.01603648066520691
    2. ' -' → logprob: -4.141036510467529
    3. '-step' → logprob: -14.266036033630371
    4. '   ' → logprob: -14.516036033630371
    5. ' ' → logprob: -14.891036033630371
    6. '           ' → logprob: -15.516036033630371
    7. '-
' → logprob: -16.516036987304688
    8. '  ' → logprob: -16.516036987304688
    9. '    ' → logprob: -16.641036987304688
    10. ',-' → logprob: -16.766036987304688

Token 314: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '   ' → logprob: -17.0
    4. '
' → logprob: -18.625
    5. '  ' → logprob: -18.75
    6. ')' → logprob: -19.5
    7. '```' → logprob: -19.75
    8. '１' → logprob: -20.8125
    9. '-' → logprob: -20.9375
    10. '    ' → logprob: -21.0625

Token 315: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.34971147775650024
    2. '):
' → logprob: -1.2247114181518555
    3. '-' → logprob: -7.3497114181518555
    4. ':' → logprob: -7.8497114181518555
    5. ')' → logprob: -9.099711418151855
    6. '):
' → logprob: -9.974711418151855
    7. '           ' → logprob: -10.974711418151855
    8. ' ):' → logprob: -11.474711418151855
    9. '1' → logprob: -11.599711418151855
    10. ' -' → logprob: -11.849711418151855

Token 316: '               ' (ID: 506)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.468843936920166
    2. '               ' → logprob: -1.093843936920166
    3. ' 
' → logprob: -4.218843936920166
    4. '           ' → logprob: -4.593843936920166
    5. ')' → logprob: -5.593843936920166
    6. '            ' → logprob: -5.718843936920166
    7. ' ' → logprob: -6.468843936920166
    8. '                
' → logprob: -6.468843936920166
    9. '                ' → logprob: -7.093843936920166
    10. '             
' → logprob: -7.343843936920166

Token 317: ' x' (ID: 1215)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.4391417503356934
    2. ' size' → logprob: -1.4391417503356934
    3. '                   ' → logprob: -1.5641417503356934
    4. '           ' → logprob: -2.8141417503356934
    5. ' if' → logprob: -3.0641417503356934
    6. ' or' → logprob: -3.4391417503356934
    7. 'size' → logprob: -3.5641417503356934
    8. '   ' → logprob: -3.8141417503356934
    9. ' while' → logprob: -3.8141417503356934
    10. ' s' → logprob: -3.9391417503356934

Token 318: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00222590658813715
    2. '=' → logprob: -6.502225875854492
    3. '_size' → logprob: -7.627225875854492
    4. '_val' → logprob: -9.127225875854492
    5. 'size' → logprob: -10.627225875854492
    6. '=size' → logprob: -11.127225875854492
    7. '_sizes' → logprob: -11.252225875854492
    8. 's' → logprob: -11.377225875854492
    9. 'j' → logprob: -11.627225875854492
    10. ' ' → logprob: -12.127225875854492

Token 319: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.006747581530362368
    2. ' self' → logprob: -5.006747722625732
    3. '           ' → logprob: -11.256747245788574
    4. '   ' → logprob: -11.881747245788574
    5. '               ' → logprob: -12.506747245788574
    6. 'j' → logprob: -12.756747245788574
    7. '	self' → logprob: -13.756747245788574
    8. '(self' → logprob: -14.381747245788574
    9. '[self' → logprob: -14.381747245788574
    10. 's' → logprob: -14.506747245788574

Token 320: '.con' (ID: 5162)
  Prédit: '.s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -0.6934611797332764
    2. '.con' → logprob: -0.6934611797332764
    3. ' .' → logprob: -8.943461418151855
    4. '.N' → logprob: -9.818461418151855
    5. 'con' → logprob: -9.943461418151855
    6. '.' → logprob: -10.943461418151855
    7. 'sizes' → logprob: -11.193461418151855
    8. '   ' → logprob: -11.568461418151855
    9. '.c' → logprob: -12.193461418151855
    10. 'N' → logprob: -12.193461418151855

Token 321: 'veyor' (ID: 99834)
  Prédit: 'veyor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'veyor' → logprob: -8.061054359131958e-06
    2. 'vey' → logprob: -12.375007629394531
    3. 've' → logprob: -13.375007629394531
    4. 't' → logprob: -14.000007629394531
    5. '   ' → logprob: -15.625007629394531
    6. 'v' → logprob: -15.750007629394531
    7. ' conveyor' → logprob: -15.750007629394531
    8. 's' → logprob: -15.875007629394531
    9. '.ve' → logprob: -16.12500762939453
    10. 'ey' → logprob: -16.25000762939453

Token 322: '.s' (ID: 640)
  Prédit: '.s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -0.000204851632588543
    2. ' .' → logprob: -8.625205039978027
    3. 'sizes' → logprob: -11.125205039978027
    4. 's' → logprob: -12.750205039978027
    5. '.size' → logprob: -12.875205039978027
    6. '.' → logprob: -13.000205039978027
    7. '   ' → logprob: -14.125205039978027
    8. '_sizes' → logprob: -14.375205039978027
    9. 'Sizes' → logprob: -14.625205039978027
    10. '
' → logprob: -15.125205039978027

Token 323: 'izes' (ID: 6370)
  Prédit: 'izes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'izes' → logprob: -1.3856492842023727e-06
    2. 'IZES' → logprob: -14.000000953674316
    3. 'sizes' → logprob: -15.000000953674316
    4. '_sizes' → logprob: -16.875001907348633
    5. 'iz' → logprob: -17.000001907348633
    6. 'ize' → logprob: -17.250001907348633
    7. 'ixes' → logprob: -17.375001907348633
    8. '```' → logprob: -18.125001907348633
    9. 'ices' → logprob: -18.500001907348633
    10. 'j' → logprob: -18.875001907348633

Token 324: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -14.625000953674316
    3. 'j' → logprob: -16.5
    4. '
' → logprob: -16.75
    5. '[
' → logprob: -16.875
    6. '   ' → logprob: -17.5
    7. '[i' → logprob: -18.75
    8. ' [' → logprob: -19.25
    9. '       ' → logprob: -19.625
    10. '```' → logprob: -20.125

Token 325: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.023246292024850845
    2. ' -' → logprob: -3.7732462882995605
    3. ' ' → logprob: -14.398246765136719
    4. '   ' → logprob: -15.648246765136719
    5. '−' → logprob: -17.02324676513672
    6. '-
' → logprob: -17.14824676513672
    7. '1' → logprob: -17.27324676513672
    8. '
' → logprob: -17.39824676513672
    9. '```' → logprob: -17.52324676513672
    10. '  ' → logprob: -17.77324676513672

Token 326: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. ']' → logprob: -16.875001907348633
    4. '   ' → logprob: -17.375001907348633
    5. '```' → logprob: -18.000001907348633
    6. ')' → logprob: -18.750001907348633
    7. '۱' → logprob: -19.000001907348633
    8. '-' → logprob: -19.750001907348633
    9. '           ' → logprob: -20.187501907348633
    10. '１' → logprob: -20.187501907348633

Token 327: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.961759259458631e-06
    2. ' ' → logprob: -12.250004768371582
    3. '```' → logprob: -16.2500057220459
    4. '   ' → logprob: -17.0000057220459
    5. ']' → logprob: -17.3750057220459
    6. ')' → logprob: -18.0625057220459
    7. '۱' → logprob: -18.9375057220459
    8. '
' → logprob: -19.0000057220459
    9. '１' → logprob: -19.3750057220459
    10. '           ' → logprob: -19.3750057220459

Token 328: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21423417329788208
    2. ')
' → logprob: -1.7142341136932373
    3. ']' → logprob: -4.839234352111816
    4. '])' → logprob: -6.089234352111816
    5. '               ' → logprob: -6.589234352111816
    6. ')

' → logprob: -7.339234352111816
    7. ']
' → logprob: -8.839234352111816
    8. '           ' → logprob: -9.214234352111816
    9. '])
' → logprob: -9.214234352111816
    10. ' )' → logprob: -9.714234352111816

Token 329: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.16255028545856476
    2. '                
' → logprob: -2.662550210952759
    3. ' 
' → logprob: -2.912550210952759
    4. '<|end|>' → logprob: -5.162550449371338
    5. ' ' → logprob: -5.412550449371338
    6. ' while' → logprob: -5.537550449371338
    7. '                ' → logprob: -5.662550449371338
    8. '
' → logprob: -5.912550449371338
    9. '  
' → logprob: -6.912550449371338
    10. '               
' → logprob: -7.037550449371338

Token 330: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.3174298405647278
    2. ' while' → logprob: -1.317429780960083
    3. '           ' → logprob: -6.067430019378662
    4. '               ' → logprob: -7.442430019378662
    5. '            
' → logprob: -7.692430019378662
    6. '#' → logprob: -8.192429542541504
    7. ' 
' → logprob: -8.317429542541504
    8. '                
' → logprob: -9.442429542541504
    9. '<|end|>' → logprob: -9.817429542541504
    10. '	while' → logprob: -10.317429542541504

Token 331: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.029760096222162247
    2. 'max' → logprob: -3.5297601222991943
    3. '(max' → logprob: -11.904760360717773
    4. ' min' → logprob: -13.529760360717773
    5. '	max' → logprob: -15.029760360717773
    6. 'len' → logprob: -15.029760360717773
    7. '[max' → logprob: -15.029760360717773
    8. ' len' → logprob: -15.279760360717773
    9. '   ' → logprob: -15.654760360717773
    10. 'min' → logprob: -15.904760360717773

Token 332: '_de' (ID: 5047)
  Prédit: '_de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -4.6087021473795176e-05
    2. 'deque' → logprob: -10.125045776367188
    3. 'de' → logprob: -12.750045776367188
    4. 'Deque' → logprob: -14.500045776367188
    5. 'and' → logprob: -14.750045776367188
    6. '	de' → logprob: -14.875045776367188
    7. 's' → logprob: -15.000045776367188
    8. '_d' → logprob: -15.750045776367188
    9. 'max' → logprob: -15.750045776367188
    10. '_' → logprob: -15.875045776367188

Token 333: 'que' (ID: 1126)
  Prédit: 'que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.0019038895843550563
    2. 'deque' → logprob: -6.876904010772705
    3. '_de' → logprob: -8.126903533935547
    4. 'q' → logprob: -8.126903533935547
    5. 'ques' → logprob: -8.876903533935547
    6. 'ue' → logprob: -10.376903533935547
    7. 'e' → logprob: -10.501903533935547
    8. ' deque' → logprob: -11.001903533935547
    9. 'qu' → logprob: -11.251903533935547
    10. 'de' → logprob: -11.376903533935547

Token 334: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.002806894714012742
    2. 'and' → logprob: -5.877806663513184
    3. ' ' → logprob: -13.627806663513184
    4. 'a' → logprob: -15.252806663513184
    5. '	and' → logprob: -15.377806663513184
    6. ' и' → logprob: -16.6278076171875
    7. ' a' → logprob: -16.7528076171875
    8. '   ' → logprob: -17.1278076171875
    9. 'len' → logprob: -17.2528076171875
    10. '    ' → logprob: -17.3778076171875

Token 335: ' max' (ID: 2999)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.10804111510515213
    2. ' x' → logprob: -2.3580410480499268
    3. ' max' → logprob: -5.983041286468506
    4. 'self' → logprob: -6.108041286468506
    5. 'max' → logprob: -6.108041286468506
    6. ' self' → logprob: -7.108041286468506
    7. ' ' → logprob: -12.733040809631348
    8. '   ' → logprob: -12.858040809631348
    9. '	x' → logprob: -13.358040809631348
    10. ' ' → logprob: -13.920540809631348

Token 336: '_de' (ID: 5047)
  Prédit: '_de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -2.9040898880339228e-05
    2. 'deque' → logprob: -11.000028610229492
    3. 'Deque' → logprob: -12.125028610229492
    4. 'de' → logprob: -13.625028610229492
    5. '_con' → logprob: -14.000028610229492
    6. '[max' → logprob: -14.625028610229492
    7. '[' → logprob: -14.750028610229492
    8. 's' → logprob: -14.875028610229492
    9. '[-' → logprob: -15.000028610229492
    10. '```' → logprob: -15.125028610229492

Token 337: 'que' (ID: 1126)
  Prédit: 'que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.0006665678229182959
    2. 'q' → logprob: -7.625666618347168
    3. 'qu' → logprob: -9.750666618347168
    4. 'deque' → logprob: -10.250666618347168
    5. 'ue' → logprob: -10.750666618347168
    6. 'ques' → logprob: -11.250666618347168
    7. 'uq' → logprob: -11.750666618347168
    8. '_de' → logprob: -12.250666618347168
    9. 'Que' → logprob: -12.500666618347168
    10. '```' → logprob: -12.500666618347168

Token 338: '[' (ID: 58)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.00010247035970678553
    2. ' and' → logprob: -9.250102043151855
    3. 'and' → logprob: -12.375102043151855
    4. '[' → logprob: -13.125102043151855
    5. '][-' → logprob: -18.250102996826172
    6. '```' → logprob: -19.375102996826172
    7. '0' → logprob: -19.500102996826172
    8. ' ' → logprob: -19.625102996826172
    9. ' [-' → logprob: -20.250102996826172
    10. '[
' → logprob: -20.250102996826172

Token 339: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.003324103308841586
    2. '[-' → logprob: -6.503324031829834
    3. ' -' → logprob: -7.253324031829834
    4. '0' → logprob: -7.253324031829834
    5. '][-' → logprob: -8.253324508666992
    6. ' ' → logprob: -10.378324508666992
    7. ']' → logprob: -10.503324508666992
    8. '   ' → logprob: -11.003324508666992
    9. 'len' → logprob: -11.378324508666992
    10. '
' → logprob: -11.628324508666992

Token 340: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02411806769669056
    2. ']<' → logprob: -4.649117946624756
    3. '[' → logprob: -5.274117946624756
    4. '<' → logprob: -5.399117946624756
    5. 'x' → logprob: -5.649117946624756
    6. '<x' → logprob: -7.649117946624756
    7. ' <' → logprob: -8.524118423461914
    8. ' ' → logprob: -8.774118423461914
    9. '][' → logprob: -9.149118423461914
    10. ' ]' → logprob: -10.149118423461914

Token 341: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.2883136570453644
    2. ' <' → logprob: -1.413313627243042
    3. '<x' → logprob: -5.038313865661621
    4. '[' → logprob: -7.788313865661621
    5. '<size' → logprob: -10.038313865661621
    6. ' ' → logprob: -10.413313865661621
    7. '<data' → logprob: -10.663313865661621
    8. 'x' → logprob: -10.663313865661621
    9. ']' → logprob: -10.913313865661621
    10. ']<' → logprob: -11.038313865661621

Token 342: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.012287121266126633
    2. ' x' → logprob: -4.637287139892578
    3. 'j' → logprob: -6.012287139892578
    4. '>x' → logprob: -11.012287139892578
    5. ' j' → logprob: -11.387287139892578
    6. '=x' → logprob: -11.387287139892578
    7. '
' → logprob: -11.762287139892578
    8. '=' → logprob: -12.262287139892578
    9. ')x' → logprob: -12.887287139892578
    10. '	x' → logprob: -12.887287139892578

Token 343: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5108435750007629
    2. ':' → logprob: -1.2608435153961182
    3. '):
' → logprob: -2.635843515396118
    4. 'max' → logprob: -3.635843515396118
    5. '):' → logprob: -5.260843753814697
    6. '():
' → logprob: -5.635843753814697
    7. ' max' → logprob: -6.510843753814697
    8. ',' → logprob: -6.635843753814697
    9. '   ' → logprob: -6.885843753814697
    10. ']:
' → logprob: -7.010843753814697

Token 344: '                   ' (ID: 699)
  Prédit: '.pop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.16556887328624725
    2. '                   ' → logprob: -2.7905688285827637
    3. ':' → logprob: -3.6655688285827637
    4. '               ' → logprob: -3.7905688285827637
    5. 'pop' → logprob: -4.165568828582764
    6. ':
' → logprob: -4.165568828582764
    7. ' pop' → logprob: -5.290568828582764
    8. '.p' → logprob: -6.540568828582764
    9. ')' → logprob: -7.165568828582764
    10. ',' → logprob: -7.415568828582764

Token 345: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.2532583475112915
    2. ' max' → logprob: -1.5032583475112915
    3. '                   ' → logprob: -7.003258228302002
    4. 'pop' → logprob: -8.62825870513916
    5. '                       ' → logprob: -9.62825870513916
    6. '               ' → logprob: -10.12825870513916
    7. '(max' → logprob: -10.50325870513916
    8. '   ' → logprob: -10.75325870513916
    9. '=max' → logprob: -11.50325870513916
    10. '           ' → logprob: -11.50325870513916

Token 346: '_de' (ID: 5047)
  Prédit: '_de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -0.0024895723909139633
    2. 'deque' → logprob: -6.1274895668029785
    3. 'de' → logprob: -8.502490043640137
    4. 'max' → logprob: -9.752490043640137
    5. 'pop' → logprob: -10.502490043640137
    6. 'Deque' → logprob: -13.127490043640137
    7. 'p' → logprob: -13.377490043640137
    8. '.pop' → logprob: -13.502490043640137
    9. '   ' → logprob: -13.502490043640137
    10. '[' → logprob: -13.877490043640137

Token 347: 'que' (ID: 1126)
  Prédit: 'que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -4.0126840758603066e-05
    2. 'q' → logprob: -10.625040054321289
    3. 'qu' → logprob: -11.750040054321289
    4. 'ques' → logprob: -12.250040054321289
    5. 'deque' → logprob: -13.625040054321289
    6. 'ue' → logprob: -14.750040054321289
    7. 'Que' → logprob: -15.375040054321289
    8. '[' → logprob: -15.500040054321289
    9. 'uq' → logprob: -16.00004005432129
    10. 'queue' → logprob: -16.12504005432129

Token 348: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.00012880703434348106
    2. '.' → logprob: -9.125128746032715
    3. '.pop' → logprob: -10.875128746032715
    4. 'p' → logprob: -14.250128746032715
    5. ' .' → logprob: -17.00012969970703
    6. '>.' → logprob: -17.12512969970703
    7. '[' → logprob: -17.50012969970703
    8. 'pop' → logprob: -17.75012969970703
    9. '.clear' → logprob: -17.87512969970703
    10. '=' → logprob: -17.87512969970703

Token 349: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.007757934741675854
    2. 'op' → logprob: -5.507758140563965
    3. 'opl' → logprob: -6.132758140563965
    4. 'ople' → logprob: -6.507758140563965
    5. 'opt' → logprob: -12.257758140563965
    6. 'oplevel' → logprob: -13.007758140563965
    7. 'opf' → logprob: -14.007758140563965
    8. 'oph' → logprob: -14.257758140563965
    9. '0' → logprob: -15.007758140563965
    10. 'opy' → logprob: -15.257758140563965

Token 350: '()
' (ID: 1234)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04055582731962204
    2. ')' → logprob: -3.290555715560913
    3. '<|end|>' → logprob: -6.415555953979492
    4. '()' → logprob: -7.540555953979492
    5. ')
' → logprob: -9.790555953979492
    6. '<|end|>' → logprob: -9.915555953979492
    7. ',' → logprob: -10.665555953979492
    8. '()
' → logprob: -10.915555953979492
    9. '                ' → logprob: -10.915555953979492
    10. '                
' → logprob: -11.040555953979492

Token 351: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0008259449969045818
    2. '.pop' → logprob: -8.125825881958008
    3. '              ' → logprob: -8.750825881958008
    4. '           ' → logprob: -9.375825881958008
    5. ')' → logprob: -9.375825881958008
    6. '                ' → logprob: -10.250825881958008
    7. '                   ' → logprob: -10.750825881958008
    8. '[' → logprob: -10.750825881958008
    9. '       ' → logprob: -10.875825881958008
    10. '[::-' → logprob: -11.125825881958008

Token 352: ' max' (ID: 2999)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.24631620943546295
    2. ' while' → logprob: -2.2463161945343018
    3. 'while' → logprob: -2.6213161945343018
    4. ' max' → logprob: -4.246316432952881
    5. 'max' (adapté à ' max') → logprob: -4.246316432952881
    6. '                
' → logprob: -5.996316432952881
    7. 'pop' → logprob: -6.746316432952881
    8. ')' → logprob: -6.746316432952881
    9. '           ' → logprob: -6.871316432952881
    10. '[max' → logprob: -7.246316432952881

Token 353: '_de' (ID: 5047)
  Prédit: '_de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -0.00026205103495158255
    2. 'deque' → logprob: -8.375262260437012
    3. 'de' → logprob: -10.625262260437012
    4. 'Deque' → logprob: -12.625262260437012
    5. '_' → logprob: -13.875262260437012
    6. 'max' → logprob: -14.250262260437012
    7. 's' → logprob: -15.250262260437012
    8. '	de' → logprob: -15.375262260437012
    9. 'De' → logprob: -15.875262260437012
    10. '   ' → logprob: -16.000261306762695

Token 354: 'que' (ID: 1126)
  Prédit: 'que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.0010153028415516019
    2. 'q' → logprob: -7.2510151863098145
    3. 'deque' → logprob: -9.126015663146973
    4. 'qu' → logprob: -9.626015663146973
    5. 'de' → logprob: -9.751015663146973
    6. 'ue' → logprob: -10.626015663146973
    7. 'ques' → logprob: -10.626015663146973
    8. '_de' → logprob: -11.751015663146973
    9. 'queue' → logprob: -12.626015663146973
    10. '[' → logprob: -12.876015663146973

Token 355: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -7.97024549683556e-05
    2. '.' → logprob: -9.625080108642578
    3. 'append' → logprob: -11.625080108642578
    4. '=' → logprob: -13.375080108642578
    5. ' and' → logprob: -13.500080108642578
    6. 'and' → logprob: -14.000080108642578
    7. ' .' → logprob: -15.500080108642578
    8. '.clear' → logprob: -15.625080108642578
    9. ',' → logprob: -16.375080108642578
    10. '].' → logprob: -16.500080108642578

Token 356: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -6.704273118884885e-07
    2. '(x' → logprob: -14.250000953674316
    3. 'lef' → logprob: -18.75
    4. 'Left' → logprob: -19.75
    5. '(left' → logprob: -21.0
    6. ' left' → logprob: -21.25
    7. 'LEFT' → logprob: -21.625
    8. 'right' → logprob: -22.375
    9. '_left' → logprob: -22.625
    10. 'le' → logprob: -23.125

Token 357: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -1.0683535037969705e-05
    2. '(' → logprob: -11.50001049041748
    3. ' (' → logprob: -15.00001049041748
    4. '(
' → logprob: -16.500011444091797
    5. 'x' → logprob: -16.625011444091797
    6. '(j' → logprob: -17.625011444091797
    7. '((' → logprob: -18.625011444091797
    8. ',x' → logprob: -19.625011444091797
    9. ' x' → logprob: -20.125011444091797
    10. 'left' → logprob: -20.250011444091797

Token 358: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5461682677268982
    2. '               ' → logprob: -0.9211682677268982
    3. ')
' → logprob: -3.796168327331543
    4. '<|end|>' → logprob: -8.546168327331543
    5. '           ' → logprob: -10.421168327331543
    6. '
' → logprob: -10.546168327331543
    7. '                
' → logprob: -10.671168327331543
    8. '```' → logprob: -12.171168327331543
    9. ')\
' → logprob: -12.296168327331543
    10. ',' → logprob: -12.421168327331543

Token 359: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -8.537868779967539e-06
    2. '<|end|>' → logprob: -12.750008583068848
    3. '              ' → logprob: -12.875008583068848
    4. '                
' → logprob: -14.000008583068848
    5. '                ' → logprob: -14.125008583068848
    6. '```' → logprob: -14.750008583068848
    7. '           ' → logprob: -14.875008583068848
    8. '             ' → logprob: -16.37500762939453
    9. '		       ' → logprob: -16.75000762939453
    10. '               
' → logprob: -17.00000762939453

Token 360: ' while' (ID: 2049)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.048696715384721756
    2. ' while' → logprob: -3.298696756362915
    3. 'while' (adapté à ' while') → logprob: -4.548696517944336
    4. '           ' → logprob: -11.923696517944336
    5. '                ' → logprob: -12.923696517944336
    6. '	while' → logprob: -13.048696517944336
    7. 'While' → logprob: -13.423696517944336
    8. '              ' → logprob: -13.673696517944336
    9. '       ' → logprob: -13.673696517944336
    10. ' ' → logprob: -14.298696517944336

Token 361: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.47413867712020874
    2. ' min' → logprob: -0.9741386771202087
    3. '(min' → logprob: -9.724138259887695
    4. '[min' → logprob: -13.724138259887695
    5. '	min' → logprob: -15.099138259887695
    6. 'max' → logprob: -15.724138259887695
    7. ' ' → logprob: -15.974138259887695
    8. ' max' → logprob: -16.724138259887695
    9. 'len' → logprob: -17.099138259887695
    10. '_min' → logprob: -17.099138259887695

Token 362: '_de' (ID: 5047)
  Prédit: '_de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -3.440506407059729e-05
    2. 'deque' → logprob: -10.50003433227539
    3. 'min' → logprob: -12.75003433227539
    4. '(min' → logprob: -12.87503433227539
    5. 'Deque' → logprob: -14.25003433227539
    6. 'de' → logprob: -15.25003433227539
    7. ' deque' → logprob: -16.00003433227539
    8. '_DE' → logprob: -16.62503433227539
    9. ' min' → logprob: -17.37503433227539
    10. '[min' → logprob: -17.50003433227539

Token 363: 'que' (ID: 1126)
  Prédit: 'que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.1281171441078186
    2. 'deque' → logprob: -2.128117084503174
    3. 'q' → logprob: -7.503117084503174
    4. 'ques' → logprob: -8.378117561340332
    5. 'qu' → logprob: -8.503117561340332
    6. 'de' → logprob: -9.253117561340332
    7. 'queue' → logprob: -10.378117561340332
    8. ' deque' → logprob: -11.003117561340332
    9. 'min' → logprob: -11.503117561340332
    10. '```' → logprob: -11.753117561340332

Token 364: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.04858771339058876
    2. 'and' → logprob: -3.0485877990722656
    3. '()' → logprob: -16.423587799072266
    4. ' ' → logprob: -17.173587799072266
    5. '[]' → logprob: -17.423587799072266
    6. '...' → logprob: -17.423587799072266
    7. '	and' → logprob: -17.548587799072266
    8. '<|end|>' → logprob: -17.923587799072266
    9. '
' → logprob: -18.048587799072266
    10. '        ' → logprob: -18.173587799072266

Token 365: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0001242772996192798
    2. ' min' → logprob: -9.000123977661133
    3. '[min' → logprob: -14.500123977661133
    4. '(min' → logprob: -14.750123977661133
    5. 'max' → logprob: -18.375123977661133
    6. '=min' → logprob: -18.875123977661133
    7. ' ' → logprob: -19.500123977661133
    8. '	min' → logprob: -19.500123977661133
    9. '.min' → logprob: -20.000123977661133
    10. ',min' → logprob: -20.250123977661133

Token 366: '_de' (ID: 5047)
  Prédit: '_de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -0.004469285253435373
    2. 'deque' → logprob: -6.004469394683838
    3. '(min' → logprob: -7.004469394683838
    4. 'de' → logprob: -7.129469394683838
    5. 'min' → logprob: -8.62946891784668
    6. 'Deque' → logprob: -9.75446891784668
    7. '[min' → logprob: -11.12946891784668
    8. '_' → logprob: -12.00446891784668
    9. '[' → logprob: -12.12946891784668
    10. '<' → logprob: -12.87946891784668

Token 367: 'que' (ID: 1126)
  Prédit: 'que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.0026334458962082863
    2. 'deque' → logprob: -6.002633571624756
    3. 'q' → logprob: -9.877633094787598
    4. 'qu' → logprob: -10.627633094787598
    5. 'ques' → logprob: -10.752633094787598
    6. 'de' → logprob: -11.127633094787598
    7. 'e' → logprob: -11.377633094787598
    8. 'min' → logprob: -11.752633094787598
    9. '[' → logprob: -12.002633094787598
    10. 'le' → logprob: -12.377633094787598

Token 368: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.026989664882421494
    2. 'and' → logprob: -3.776989698410034
    3. ' and' → logprob: -5.651989459991455
    4. '[-' → logprob: -8.401989936828613
    5. ' ' → logprob: -13.651989936828613
    6. '0' → logprob: -14.526989936828613
    7. '[
' → logprob: -16.151988983154297
    8. '   ' → logprob: -16.401988983154297
    9. ' [' → logprob: -16.401988983154297
    10. 'min' → logprob: -16.776988983154297

Token 369: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.021248914301395416
    2. '[' → logprob: -3.8962488174438477
    3. 'min' → logprob: -7.396248817443848
    4. '[-' → logprob: -9.896248817443848
    5. '[min' → logprob: -11.646248817443848
    6. '-' → logprob: -11.646248817443848
    7. 'and' → logprob: -11.896248817443848
    8. '
' → logprob: -12.146248817443848
    9. 'max' → logprob: -12.396248817443848
    10. ' ' → logprob: -12.646248817443848

Token 370: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.03805044665932655
    2. ' >' → logprob: -3.288050413131714
    3. '>x' → logprob: -12.163050651550293
    4. ' ' → logprob: -12.788050651550293
    5. ']' → logprob: -14.538050651550293
    6. 'x' → logprob: -16.038049697875977
    7. '>
' → logprob: -16.288049697875977
    8. '   ' → logprob: -16.288049697875977
    9. ']>' → logprob: -16.413049697875977
    10. '[' → logprob: -16.538049697875977

Token 371: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.0036105208564549685
    2. ' >' → logprob: -5.628610610961914
    3. '>x' → logprob: -11.503610610961914
    4. '>
' → logprob: -15.878610610961914
    5. '>

' → logprob: -16.628610610961914
    6. '()>' → logprob: -16.753610610961914
    7. ' ' → logprob: -16.753610610961914
    8. '>`' → logprob: -17.503610610961914
    9. '>=' → logprob: -17.878610610961914
    10. '>b' → logprob: -18.253610610961914

Token 372: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.10020678490400314
    2. ' x' → logprob: -2.3502068519592285
    3. '	x' → logprob: -16.47520637512207
    4. '>x' → logprob: -17.85020637512207
    5. '<|end|>' → logprob: -18.47520637512207
    6. '$x' → logprob: -18.60020637512207
    7. '"x' → logprob: -18.60020637512207
    8. ' ' → logprob: -18.97520637512207
    9. ''x' → logprob: -19.10020637512207
    10. ')x' → logprob: -19.22520637512207

Token 373: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.15244270861148834
    2. ':' → logprob: -2.652442693710327
    3. '):
' → logprob: -2.902442693710327
    4. '               ' → logprob: -4.402442932128906
    5. '                   ' → logprob: -6.027442932128906
    6. '):' → logprob: -7.527442932128906
    7. '           ' → logprob: -7.652442932128906
    8. ')' → logprob: -9.027442932128906
    9. 'min' → logprob: -9.652442932128906
    10. ':

' → logprob: -10.027442932128906

Token 374: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.7225183844566345
    2. '               ' → logprob: -0.9725183844566345
    3. 'min' → logprob: -2.0975184440612793
    4. ' min' → logprob: -4.847518444061279
    5. '           ' → logprob: -5.472518444061279
    6. '(min' → logprob: -7.722518444061279
    7. '	min' → logprob: -8.222517967224121
    8. '   ' → logprob: -8.597517967224121
    9. '[min' → logprob: -9.097517967224121
    10. ':min' → logprob: -9.097517967224121

Token 375: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -8.53050296427682e-05
    2. ' min' → logprob: -9.37508487701416
    3. 'max' → logprob: -15.50008487701416
    4. '	min' → logprob: -16.250085830688477
    5. '(min' → logprob: -18.000085830688477
    6. '[min' → logprob: -18.125085830688477
    7. 'm' → logprob: -18.250085830688477
    8. '_min' → logprob: -18.375085830688477
    9. 'minimum' → logprob: -18.625085830688477
    10. '   ' → logprob: -19.625085830688477

Token 376: '_de' (ID: 5047)
  Prédit: '_de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -0.0014043983537703753
    2. 'deque' → logprob: -6.751404285430908
    3. 'de' → logprob: -8.376404762268066
    4. 'Deque' → logprob: -13.501404762268066
    5. '_' → logprob: -14.001404762268066
    6. '	de' → logprob: -15.001404762268066
    7. ' deque' → logprob: -15.626404762268066
    8. 'De' → logprob: -15.626404762268066
    9. 'min' → logprob: -15.751404762268066
    10. 'd' → logprob: -16.50140380859375

Token 377: 'que' (ID: 1126)
  Prédit: 'que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.00021879478299524635
    2. 'deque' → logprob: -8.500218391418457
    3. 'ques' → logprob: -12.250218391418457
    4. 'q' → logprob: -12.500218391418457
    5. 'de' → logprob: -12.625218391418457
    6. 'qu' → logprob: -12.875218391418457
    7. 'queue' → logprob: -15.000218391418457
    8. ' deque' → logprob: -15.625218391418457
    9. 'qe' → logprob: -16.500219345092773
    10. 'oque' → logprob: -17.000219345092773

Token 378: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.0029440668877214193
    2. 'p' → logprob: -5.877943992614746
    3. '.append' → logprob: -9.127943992614746
    4. 'append' → logprob: -11.377943992614746
    5. 'pop' → logprob: -12.127943992614746
    6. '.pop' → logprob: -12.252943992614746
    7. ',p' → logprob: -12.377943992614746
    8. 'app' → logprob: -12.752943992614746
    9. ' p' → logprob: -14.127943992614746
    10. '.' → logprob: -14.877943992614746

Token 379: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.005580686964094639
    2. 'op' → logprob: -5.255580902099609
    3. 'ople' → logprob: -8.00558090209961
    4. 'p' → logprob: -12.25558090209961
    5. 'opt' → logprob: -12.88058090209961
    6. '```' → logprob: -13.13058090209961
    7. 'oplevel' → logprob: -13.50558090209961
    8. 'append' → logprob: -14.13058090209961
    9. 'left' → logprob: -14.25558090209961
    10. 'ple' → logprob: -14.38058090209961

Token 380: '()
' (ID: 1234)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007649341132491827
    2. '()' → logprob: -5.1326494216918945
    3. ')' → logprob: -6.5076494216918945
    4. '()
' → logprob: -8.882649421691895
    5. ')
' → logprob: -10.757649421691895
    6. '           ' → logprob: -10.757649421691895
    7. '                
' → logprob: -11.632649421691895
    8. '                ' → logprob: -11.757649421691895
    9. '                   ' → logprob: -11.882649421691895
    10. '              ' → logprob: -12.132649421691895

Token 381: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00021402664424385875
    2. '			' → logprob: -10.250213623046875
    3. '                
' → logprob: -10.625213623046875
    4. '           ' → logprob: -10.875213623046875
    5. '                ' → logprob: -11.000213623046875
    6. '                   ' → logprob: -11.125213623046875
    7. '	           ' → logprob: -11.125213623046875
    8. '              ' → logprob: -11.250213623046875
    9. 'min' → logprob: -11.250213623046875
    10. '		       ' → logprob: -11.750213623046875

Token 382: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -6.630610641877865e-06
    2. ' min' → logprob: -12.000006675720215
    3. '               ' → logprob: -15.500006675720215
    4. 'max' → logprob: -17.1250057220459
    5. '[min' → logprob: -17.1250057220459
    6. '(min' → logprob: -17.5000057220459
    7. '	min' → logprob: -18.0000057220459
    8. '           ' → logprob: -18.6250057220459
    9. 'minimum' → logprob: -18.6250057220459
    10. '                   ' → logprob: -18.6250057220459

Token 383: '_de' (ID: 5047)
  Prédit: '_de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -0.00015514736878685653
    2. 'deque' → logprob: -8.875155448913574
    3. 'de' → logprob: -11.125155448913574
    4. '_' → logprob: -16.250154495239258
    5. 'Deque' → logprob: -16.625154495239258
    6. '	de' → logprob: -16.625154495239258
    7. '.append' → logprob: -16.750154495239258
    8. '[' → logprob: -17.375154495239258
    9. 's' → logprob: -17.625154495239258
    10. '_.' → logprob: -17.750154495239258

Token 384: 'que' (ID: 1126)
  Prédit: 'que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.5766944289207458
    2. 'deque' → logprob: -0.8266944289207458
    3. 'de' → logprob: -7.326694488525391
    4. 'qu' → logprob: -9.57669448852539
    5. 'q' → logprob: -11.45169448852539
    6. ' deque' → logprob: -11.82669448852539
    7. 'queue' → logprob: -12.70169448852539
    8. '_de' → logprob: -13.32669448852539
    9. 'ques' → logprob: -13.45169448852539
    10. 'quet' → logprob: -13.57669448852539

Token 385: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -6.64708495605737e-05
    2. '.' → logprob: -9.625066757202148
    3. 'append' → logprob: -16.00006675720215
    4. '.app' → logprob: -16.50006675720215
    5. '.insert' → logprob: -16.87506675720215
    6. ' .' → logprob: -17.62506675720215
    7. '   ' → logprob: -17.87506675720215
    8. '.ap' → logprob: -18.62506675720215
    9. '	append' → logprob: -18.75006675720215
    10. '.Append' → logprob: -18.87506675720215

Token 386: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -5.512236498361744e-07
    2. 'lef' → logprob: -14.500000953674316
    3. 'opleft' → logprob: -18.0
    4. '0' → logprob: -18.875
    5. '1' → logprob: -21.0
    6. '```' → logprob: -21.375
    7. ' left' → logprob: -21.375
    8. 'le' → logprob: -21.5
    9. 'head' → logprob: -21.875
    10. ' ' → logprob: -22.25

Token 387: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -1.735893965815194e-05
    2. '(' → logprob: -11.000017166137695
    3. 'x' → logprob: -14.375017166137695
    4. '(
' → logprob: -17.250017166137695
    5. ' (' → logprob: -17.750017166137695
    6. '<|end|>' → logprob: -18.750017166137695
    7. '```' → logprob: -19.750017166137695
    8. ' ' → logprob: -20.375017166137695
    9. '((' → logprob: -20.625017166137695
    10. '(xs' → logprob: -21.125017166137695

Token 388: ')
' (ID: 446)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3522995710372925
    2. ')' → logprob: -1.2272995710372925
    3. '<|end|>' → logprob: -6.602299690246582
    4. '           ' → logprob: -6.977299690246582
    5. ',' → logprob: -6.977299690246582
    6. '
' → logprob: -7.977299690246582
    7. ')
' → logprob: -9.977299690246582
    8. '<|end|>' → logprob: -10.227299690246582
    9. '):
' → logprob: -10.602299690246582
    10. '),' → logprob: -10.727299690246582

Token 389: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0027365204878151417
    2. '           ' → logprob: -6.002736568450928
    3. ' for' → logprob: -9.12773609161377
    4. '<|end|>' → logprob: -10.25273609161377
    5. '	           ' → logprob: -10.87773609161377
    6. '                   ' → logprob: -11.12773609161377
    7. '                ' → logprob: -11.25273609161377
    8. '              ' → logprob: -11.25273609161377
    9. ')' → logprob: -11.37773609161377
    10. '```' → logprob: -12.37773609161377

Token 390: ' max' (ID: 2999)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.29593029618263245
    2. '               ' → logprob: -1.92093026638031
    3. ' cost' → logprob: -2.6709303855895996
    4. 'dp' → logprob: -3.6709303855895996
    5. 'current' → logprob: -5.1709303855896
    6. ' dp' → logprob: -5.1709303855896
    7. 'curr' → logprob: -7.2959303855896
    8. 'new' → logprob: -7.4209303855896
    9. 'if' → logprob: -7.9209303855896
    10. ' current' → logprob: -8.045929908752441

Token 391: '_or' (ID: 15400)
  Prédit: '_de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_de' → logprob: -0.08869132399559021
    2. '_val' → logprob: -2.963691234588623
    3. '_value' → logprob: -4.588691234588623
    4. '_cost' → logprob: -4.963691234588623
    5. '_size' → logprob: -5.213691234588623
    6. '_dp' → logprob: -6.088691234588623
    7. '_max' → logprob: -6.463691234588623
    8. 'Deque' → logprob: -6.588691234588623
    9. 'de' → logprob: -6.963691234588623
    10. '_' → logprob: -7.213691234588623

Token 392: 'ange' (ID: 1052)
  Prédit: 'ange'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ange' → logprob: -0.8320866227149963
    2. 'e' → logprob: -1.9570865631103516
    3. '_de' → logprob: -2.3320865631103516
    4. '_size' → logprob: -2.5820865631103516
    5. 'acle' → logprob: -2.7070865631103516
    6. '_value' → logprob: -3.0820865631103516
    7. 'q' → logprob: -3.3320865631103516
    8. 'que' → logprob: -3.7070865631103516
    9. '_val' → logprob: -3.9570865631103516
    10. 'age' → logprob: -4.082086563110352

Token 393: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.33188381791114807
    2. '=' → logprob: -1.3318837881088257
    3. '_size' → logprob: -4.206883907318115
    4. '=max' → logprob: -5.831883907318115
    5. 'size' → logprob: -8.331883430480957
    6. 's' → logprob: -8.331883430480957
    7. '=size' → logprob: -9.706883430480957
    8. '=min' → logprob: -10.831883430480957
    9. ' ' → logprob: -10.956883430480957
    10. ',' → logprob: -11.831883430480957

Token 394: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.1602243334054947
    2. ' max' → logprob: -1.9102243185043335
    3. '[max' → logprob: -17.03522491455078
    4. '	max' → logprob: -17.41022491455078
    5. '(max' → logprob: -17.91022491455078
    6. 'min' → logprob: -18.03522491455078
    7. ' ' → logprob: -18.41022491455078
    8. '=max' → logprob: -18.53522491455078
    9. '   ' → logprob: -18.78522491455078
    10. '_max' → logprob: -18.91022491455078

Token 395: '_de' (ID: 5047)
  Prédit: '_de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -6.704273118884885e-07
    2. 'deque' → logprob: -14.625000953674316
    3. '_or' → logprob: -15.750000953674316
    4. 'Deque' → logprob: -17.625
    5. '_' → logprob: -17.75
    6. '	de' → logprob: -18.875
    7. '```' → logprob: -19.0
    8. '_max' → logprob: -19.5
    9. '_DE' → logprob: -19.5
    10. 'de' → logprob: -19.75

Token 396: 'que' (ID: 1126)
  Prédit: 'que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -3.650518920039758e-06
    2. 'q' → logprob: -14.000003814697266
    3. 'qu' → logprob: -14.000003814697266
    4. 'ques' → logprob: -14.250003814697266
    5. 'deque' → logprob: -14.250003814697266
    6. 'Que' → logprob: -15.500003814697266
    7. 'queue' → logprob: -16.125003814697266
    8. 'uq' → logprob: -16.125003814697266
    9. '```' → logprob: -16.125003814697266
    10. 'e' → logprob: -17.125003814697266

Token 397: '[-' (ID: 17503)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9361264946837764e-07
    2. '0' → logprob: -16.125
    3. ' [' → logprob: -17.75
    4. '```' → logprob: -18.0
    5. '[
' → logprob: -18.625
    6. '][' → logprob: -19.75
    7. '   ' → logprob: -20.375
    8. ' ' → logprob: -20.875
    9. '
' → logprob: -21.25
    10. 'first' → logprob: -21.5

Token 398: '1' (ID: 16)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5434575080871582
    2. '()]' → logprob: -1.5434575080871582
    3. '<|end|>' → logprob: -2.918457508087158
    4. 'token' → logprob: -3.418457508087158
    5. '1' → logprob: -3.543457508087158
    6. 'right' → logprob: -4.168457508087158
    7. ']()' → logprob: -4.168457508087158
    8. 'index' → logprob: -4.793457508087158
    9. 'end' → logprob: -4.918457508087158
    10. 'value' → logprob: -5.668457508087158

Token 399: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5088510513305664
    2. '<|end|>' → logprob: -1.1338510513305664
    3. ' -' → logprob: -3.6338510513305664
    4. '
' → logprob: -4.258851051330566
    5. ' +' → logprob: -4.633851051330566
    6. ']' → logprob: -4.758851051330566
    7. ')
' → logprob: -5.133851051330566
    8. ' )' → logprob: -5.633851051330566
    9. '+' → logprob: -5.758851051330566
    10. '               ' → logprob: -7.008851051330566

Token 400: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0006637069745920599
    2. '<|end|>' → logprob: -8.000663757324219
    3. ',' → logprob: -9.500663757324219
    4. ' min' → logprob: -9.875663757324219
    5. '[min' → logprob: -10.375663757324219
    6. 'min' → logprob: -10.375663757324219
    7. '                ' → logprob: -10.875663757324219
    8. '       ' → logprob: -11.000663757324219
    9. ',min' → logprob: -11.125663757324219
    10. ')' → logprob: -11.125663757324219

Token 401: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -0.048591457307338715
    2. ' min' → logprob: -3.048591375350952
    3. '               ' → logprob: -13.673591613769531
    4. '	min' → logprob: -14.048591613769531
    5. '                   ' → logprob: -14.548591613769531
    6. '_min' → logprob: -14.923591613769531
    7. '(min' → logprob: -15.173591613769531
    8. '[min' → logprob: -15.173591613769531
    9. ',min' → logprob: -15.423591613769531
    10. '           ' → logprob: -16.04859161376953

Token 402: '_or' (ID: 15400)
  Prédit: '_or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_or' → logprob: -0.0890367403626442
    2. '_de' → logprob: -2.464036703109741
    3. '_min' → logprob: -9.71403694152832
    4. 'deque' → logprob: -11.58903694152832
    5. '_' → logprob: -11.71403694152832
    6. '_size' → logprob: -12.21403694152832
    7. 'min' → logprob: -12.33903694152832
    8. 'or' → logprob: -12.96403694152832
    9. 'orange' → logprob: -14.33903694152832
    10. '_OR' → logprob: -14.46403694152832

Token 403: 'ange' (ID: 1052)
  Prédit: '_de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_de' → logprob: -0.02368716150522232
    2. 'deque' → logprob: -3.8986871242523193
    3. 'de' → logprob: -5.773687362670898
    4. 'Deque' → logprob: -11.398687362670898
    5. '_or' → logprob: -11.523687362670898
    6. ' deque' → logprob: -12.648687362670898
    7. 'que' → logprob: -13.148687362670898
    8. '_' → logprob: -13.898687362670898
    9. 'e' → logprob: -14.148687362670898
    10. '```' → logprob: -14.273687362670898

Token 404: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889111340045929
    2. ' =' → logprob: -2.5788910388946533
    3. '=min' → logprob: -13.828890800476074
    4. '=max' → logprob: -15.828890800476074
    5. 's' → logprob: -16.57889175415039
    6. '=
' → logprob: -16.95389175415039
    7. ')' → logprob: -17.45389175415039
    8. 'de' → logprob: -17.70389175415039
    9. ' ' → logprob: -17.95389175415039
    10. '<|end|>' → logprob: -18.70389175415039

Token 405: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.3868713676929474
    2. ' min' → logprob: -1.136871337890625
    3. '[min' → logprob: -15.636871337890625
    4. '	min' → logprob: -15.886871337890625
    5. '(min' → logprob: -16.761871337890625
    6. 'max' → logprob: -18.011871337890625
    7. '=min' → logprob: -18.386871337890625
    8. '_min' → logprob: -18.886871337890625
    9. '   ' → logprob: -19.011871337890625
    10. ' max' → logprob: -19.136871337890625

Token 406: '_de' (ID: 5047)
  Prédit: '_de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -0.0002019907406065613
    2. '_or' → logprob: -8.625202178955078
    3. 'deque' → logprob: -10.875202178955078
    4. 'Deque' → logprob: -13.000202178955078
    5. 'de' → logprob: -14.500202178955078
    6. 'or' → logprob: -15.250202178955078
    7. '(min' → logprob: -16.000202178955078
    8. '```' → logprob: -16.250202178955078
    9. 'min' → logprob: -17.250202178955078
    10. '\' → logprob: -17.250202178955078

Token 407: 'que' (ID: 1126)
  Prédit: 'que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.07991975545883179
    2. 'deque' → logprob: -2.5799198150634766
    3. 'de' → logprob: -7.454919815063477
    4. '_de' → logprob: -8.954919815063477
    5. 'q' → logprob: -9.204919815063477
    6. 'qu' → logprob: -9.579919815063477
    7. 'queue' → logprob: -9.704919815063477
    8. ' deque' → logprob: -10.704919815063477
    9. 'quet' → logprob: -10.829919815063477
    10. 'ques' → logprob: -10.829919815063477

Token 408: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -15.75
    3. '][-' → logprob: -17.125
    4. '-' → logprob: -18.5
    5. '```' → logprob: -19.125
    6. '[
' → logprob: -19.25
    7. '...' → logprob: -19.625
    8. '[]' → logprob: -19.875
    9. '.pop' → logprob: -20.25
    10. '>' → logprob: -20.375

Token 409: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.500000953674316
    3. ']' → logprob: -16.125
    4. '```' → logprob: -17.8125
    5. '
' → logprob: -17.9375
    6. ')' → logprob: -18.0
    7. 'end' → logprob: -18.5
    8. '１' → logprob: -18.5625
    9. '!' → logprob: -18.75
    10. '   ' → logprob: -19.0625

Token 410: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007861658930778503
    2. '               ' → logprob: -5.382861614227295
    3. '<|end|>' → logprob: -6.007861614227295
    4. ']' → logprob: -7.882861614227295
    5. ')
' → logprob: -8.382862091064453
    6. ')]' → logprob: -10.257862091064453
    7. '
' → logprob: -10.382862091064453
    8. '<|end|>' → logprob: -10.757862091064453
    9. ' )' → logprob: -11.132862091064453
    10. '           ' → logprob: -11.257862091064453

Token 411: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00015229015843942761
    2. '           ' → logprob: -9.875152587890625
    3. '                
' → logprob: -10.375152587890625
    4. '<|end|>' → logprob: -10.750152587890625
    5. '```' → logprob: -11.375152587890625
    6. '              ' → logprob: -11.875152587890625
    7. '                   ' → logprob: -12.000152587890625
    8. '       ' → logprob: -12.250152587890625
    9. '                ' → logprob: -12.625152587890625
    10. '
' → logprob: -12.750152587890625

Token 412: ' size' (ID: 2349)
  Prédit: ' cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.07671120762825012
    2. 'cost' → logprob: -3.3267111778259277
    3. '               ' → logprob: -3.5767111778259277
    4. ' dp' → logprob: -5.326711177825928
    5. ' current' → logprob: -6.076711177825928
    6. ' if' → logprob: -7.076711177825928
    7. ' new' → logprob: -7.201711177825928
    8. 'dp' → logprob: -8.201711654663086
    9. ' curr' → logprob: -8.576711654663086
    10. ' potential' → logprob: -9.076711654663086

Token 413: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02639724500477314
    2. '=' → logprob: -3.651397228240967
    3. '           ' → logprob: -9.901397705078125
    4. '               ' → logprob: -10.776397705078125
    5. '=batch' → logprob: -11.651397705078125
    6. 's' → logprob: -12.776397705078125
    7. '=j' → logprob: -13.276397705078125
    8. ' ' → logprob: -13.526397705078125
    9. '                   ' → logprob: -13.651397705078125
    10. ')' → logprob: -13.776397705078125

Token 414: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.002476135268807411
    2. ' i' → logprob: -6.002476215362549
    3. '(i' → logprob: -15.87747573852539
    4. '   ' → logprob: -15.87747573852539
    5. '	i' → logprob: -16.25247573852539
    6. '           ' → logprob: -17.75247573852539
    7. '
' → logprob: -18.12747573852539
    8. '               ' → logprob: -18.12747573852539
    9. '_i' → logprob: -18.50247573852539
    10. ' ' → logprob: -18.50247573852539

Token 415: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5761542916297913
    2. ' -' → logprob: -0.8261542916297913
    3. '-j' → logprob: -8.451154708862305
    4. '-J' → logprob: -14.826154708862305
    5. ' ' → logprob: -15.326154708862305
    6. '-
' → logprob: -15.326154708862305
    7. '-i' → logprob: -16.201154708862305
    8. '   ' → logprob: -16.451154708862305
    9. '−' → logprob: -16.951154708862305
    10. ' -
' → logprob: -17.701154708862305

Token 416: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00010795372509164736
    2. ' j' → logprob: -9.250107765197754
    3. '(j' → logprob: -11.375107765197754
    4. ' (' → logprob: -15.750107765197754
    5. '(' → logprob: -16.37510871887207
    6. '   ' → logprob: -17.00010871887207
    7. '	j' → logprob: -17.50010871887207
    8. '[j' → logprob: -18.62510871887207
    9. '$j' → logprob: -18.87510871887207
    10. ' ' → logprob: -19.12510871887207

Token 417: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0701034888625145
    2. ' +' → logprob: -2.695103406906128
    3. '+
' → logprob: -9.945103645324707
    4. '           ' → logprob: -10.570103645324707
    5. '<|end|>' → logprob: -10.570103645324707
    6. '1' → logprob: -10.695103645324707
    7. '               ' → logprob: -10.695103645324707
    8. ' +
' → logprob: -11.820103645324707
    9. ')' → logprob: -12.945103645324707
    10. ' ' → logprob: -13.070103645324707

Token 418: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '   ' → logprob: -17.625011444091797
    4. '```' → logprob: -19.375011444091797
    5. '  ' → logprob: -20.250011444091797
    6. '
' → logprob: -21.000011444091797
    7. '       ' → logprob: -21.500011444091797
    8. '    ' → logprob: -21.500011444091797
    9. '           ' → logprob: -21.500011444091797
    10. '     ' → logprob: -22.375011444091797

Token 419: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '```' → logprob: -19.375
    4. '   ' → logprob: -20.5
    5. '
' → logprob: -22.25
    6. '۱' → logprob: -22.5
    7. '<|end|>' → logprob: -22.5625
    8. '...' → logprob: -22.75
    9. '0' → logprob: -22.9375
    10. '  ' → logprob: -23.0

Token 420: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0004610551695805043
    2. '                
' → logprob: -8.750460624694824
    3. '
' → logprob: -8.875460624694824
    4. '<|end|>' → logprob: -9.375460624694824
    5. ',' → logprob: -10.250460624694824
    6. ')' → logprob: -12.000460624694824
    7. '           ' → logprob: -12.125460624694824
    8. '                ' → logprob: -12.125460624694824
    9. '```' → logprob: -12.250460624694824
    10. '<|end|>' → logprob: -12.500460624694824

Token 421: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.000676096766255796
    2. '```' → logprob: -8.875676155090332
    3. '<|end|>' → logprob: -9.000676155090332
    4. '
' → logprob: -9.000676155090332
    5. '           ' → logprob: -9.500676155090332
    6. '                
' → logprob: -9.750676155090332
    7. '                   ' → logprob: -10.750676155090332
    8. ' if' → logprob: -10.875676155090332
    9. ' dp' → logprob: -10.875676155090332
    10. ')' → logprob: -11.750676155090332

Token 422: ' cost' (ID: 3097)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.9595769643783569
    2. ' dp' → logprob: -1.584576964378357
    3. ' cost' → logprob: -1.834576964378357
    4. 'dp' → logprob: -2.0845770835876465
    5. 'cost' (adapté à ' cost') → logprob: -2.0845770835876465
    6. 'current' → logprob: -6.9595770835876465
    7. ' current' → logprob: -7.0845770835876465
    8. ' if' → logprob: -7.5845770835876465
    9. 'new' → logprob: -7.8345770835876465
    10. ' new' → logprob: -8.459576606750488

Token 423: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141558349132538
    2. '=' → logprob: -1.7014155387878418
    3. '_' → logprob: -14.701416015625
    4. ']' → logprob: -14.951416015625
    5. ' ' → logprob: -15.576416015625
    6. '[' → logprob: -15.576416015625
    7. ' =
' → logprob: -15.951416015625
    8. ')' → logprob: -16.076416015625
    9. 's' → logprob: -16.076416015625
    10. '_candidate' → logprob: -16.326416015625

Token 424: ' self' (ID: 1051)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.04397629201412201
    2. ' dp' → logprob: -3.293976306915283
    3. 'self' → logprob: -5.293976306915283
    4. ' self' → logprob: -7.043976306915283
    5. '	dp' → logprob: -11.293975830078125
    6. '(dp' → logprob: -12.668975830078125
    7. '   ' → logprob: -13.668975830078125
    8. '           ' → logprob: -13.793975830078125
    9. ' ' → logprob: -14.293975830078125
    10. 'd' → logprob: -14.731475830078125

Token 425: '.K' (ID: 14475)
  Prédit: '.K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.K' → logprob: -1.8789383830153383e-05
    2. 'dp' → logprob: -11.625019073486328
    3. 'K' → logprob: -11.750019073486328
    4. '.dp' → logprob: -14.125019073486328
    5. '.' → logprob: -14.500019073486328
    6. '	K' → logprob: -15.875019073486328
    7. '.К' → logprob: -16.000019073486328
    8. ' .' → logprob: -16.500019073486328
    9. '.k' → logprob: -16.625019073486328
    10. 'self' → logprob: -17.375019073486328

Token 426: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.03804275393486023
    2. '+' → logprob: -3.2880427837371826
    3. ' +
' → logprob: -13.913043022155762
    4. '+
' → logprob: -15.413043022155762
    5. '*' → logprob: -16.413042068481445
    6. ' ' → logprob: -16.538042068481445
    7. ' ' → logprob: -17.163042068481445
    8. '[' → logprob: -17.788042068481445
    9. ' *' → logprob: -18.038042068481445
    10. ' +
' → logprob: -18.163042068481445

Token 427: ' size' (ID: 2349)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.0007327937055379152
    2. ' size' → logprob: -7.250732898712158
    3. 'dp' → logprob: -10.750732421875
    4. 'max' → logprob: -14.500732421875
    5. '(size' → logprob: -14.625732421875
    6. '               ' → logprob: -15.875732421875
    7. ' dp' → logprob: -16.250732421875
    8. '   ' → logprob: -16.750732421875
    9. '           ' → logprob: -16.875732421875
    10. '                   ' → logprob: -17.125732421875

Token 428: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.20165784657001495
    2. ' *' → logprob: -1.7016578912734985
    3. '*(' → logprob: -8.326658248901367
    4. ' ' → logprob: -13.326658248901367
    5. ' ' → logprob: -14.951658248901367
    6. ' *(' → logprob: -15.201658248901367
    7. '   ' → logprob: -15.826658248901367
    8. '**' → logprob: -16.326658248901367
    9. '```' → logprob: -16.951658248901367
    10. '  ' → logprob: -17.326658248901367

Token 429: ' (' (ID: 350)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.1269732564687729
    2. ' (' → logprob: -2.1269731521606445
    3. '(abs' → logprob: -10.251973152160645
    4. '(min' → logprob: -12.001973152160645
    5. '(' → logprob: -13.126973152160645
    6. '(Max' → logprob: -14.876973152160645
    7. '   ' → logprob: -15.501973152160645
    8. '(mx' → logprob: -15.501973152160645
    9. '[max' → logprob: -15.876973152160645
    10. '(int' → logprob: -15.876973152160645

Token 430: 'max' (ID: 3228)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.00011534435179783031
    2. ' (' → logprob: -9.375115394592285
    3. '(abs' → logprob: -11.000115394592285
    4. '(' → logprob: -11.375115394592285
    5. '           ' → logprob: -14.500115394592285
    6. '[max' → logprob: -14.875115394592285
    7. '   ' → logprob: -15.250115394592285
    8. '(min' → logprob: -15.375115394592285
    9. 'max' → logprob: -15.750115394592285
    10. '               ' → logprob: -15.750115394592285

Token 431: '_or' (ID: 15400)
  Prédit: '_or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_or' → logprob: -1.7954958821064793e-05
    2. '_' → logprob: -11.250018119812012
    3. '_max' → logprob: -13.500018119812012
    4. 'orange' → logprob: -13.625018119812012
    5. '_-' → logprob: -14.000018119812012
    6. 'or' → logprob: -14.625018119812012
    7. 'max' → logprob: -15.625018119812012
    8. '-or' → logprob: -16.125017166137695
    9. '__' → logprob: -16.500017166137695
    10. '_OR' → logprob: -16.625017166137695

Token 432: 'ange' (ID: 1052)
  Prédit: 'ange'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ange' → logprob: -0.1590680181980133
    2. 'orange' → logprob: -2.2840681076049805
    3. '_or' → logprob: -3.2840681076049805
    4. 'nge' → logprob: -5.9090681076049805
    5. 'age' → logprob: -6.4090681076049805
    6. '-orange' → logprob: -7.1590681076049805
    7. 'ge' → logprob: -7.4090681076049805
    8. 'max' → logprob: -7.5340681076049805
    9. 'anges' → logprob: -8.90906810760498
    10. 'ang' → logprob: -9.28406810760498

Token 433: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0021966483909636736
    2. '-' → logprob: -6.127196788787842
    3. ' ' → logprob: -11.627196311950684
    4. ' ' → logprob: -13.127196311950684
    5. ')' → logprob: -15.252196311950684
    6. ' -
' → logprob: -15.252196311950684
    7. '-min' → logprob: -16.252197265625
    8. '<|end|>' → logprob: -17.627197265625
    9. '-
' → logprob: -18.252197265625
    10. '```' → logprob: -18.502197265625

Token 434: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.00861456897109747
    2. ' min' → logprob: -4.758614540100098
    3. '(min' → logprob: -17.383615493774414
    4. '	min' → logprob: -17.758615493774414
    5. '_min' → logprob: -17.758615493774414
    6. 'max' → logprob: -18.508615493774414
    7. '[min' → logprob: -19.008615493774414
    8. 'mini' → logprob: -19.383615493774414
    9. '
' → logprob: -19.508615493774414
    10. ' ' → logprob: -20.133615493774414

Token 435: '_or' (ID: 15400)
  Prédit: '_or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_or' → logprob: -6.742448022123426e-05
    2. 'orange' → logprob: -9.625067710876465
    3. 'or' → logprob: -14.500067710876465
    4. '_' → logprob: -14.500067710876465
    5. ')' → logprob: -16.62506675720215
    6. 'orage' → logprob: -16.87506675720215
    7. 'orang' → logprob: -17.00006675720215
    8. 'Orange' → logprob: -17.87506675720215
    9. '.orange' → logprob: -18.12506675720215
    10. '-orange' → logprob: -18.25006675720215

Token 436: 'ange' (ID: 1052)
  Prédit: 'ange'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ange' → logprob: -0.14661471545696259
    2. 'orange' → logprob: -3.0216147899627686
    3. 'ge' → logprob: -3.1466147899627686
    4. '_or' → logprob: -3.6466147899627686
    5. 'age' → logprob: -4.5216145515441895
    6. 'or' → logprob: -5.3966145515441895
    7. 'nge' → logprob: -7.3966145515441895
    8. 'arge' → logprob: -7.6466145515441895
    9. 'range' → logprob: -7.8966145515441895
    10. 'ize' → logprob: -8.896615028381348

Token 437: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.31385520100593567
    2. ')' → logprob: -1.3138551712036133
    3. ')
' → logprob: -7.438855171203613
    4. '               ' → logprob: -12.688855171203613
    5. ')

' → logprob: -13.688855171203613
    6. ' )
' → logprob: -14.938855171203613
    7. ')`
' → logprob: -14.938855171203613
    8. '           ' → logprob: -15.313855171203613
    9. ')

' → logprob: -17.18885612487793
    10. ' )' → logprob: -17.31385612487793

Token 438: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02829236164689064
    2. '           ' → logprob: -3.903292417526245
    3. '
' → logprob: -5.278292179107666
    4. 'dp' → logprob: -7.153292179107666
    5. '```' → logprob: -7.153292179107666
    6. ' if' → logprob: -7.903292179107666
    7. 'if' → logprob: -8.278292655944824
    8. '                
' → logprob: -9.528292655944824
    9. '                   ' → logprob: -9.653292655944824
    10. ')' → logprob: -9.653292655944824

Token 439: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3793718218803406
    2. ' dp' → logprob: -1.5043718814849854
    3. 'dp' → logprob: -3.2543718814849854
    4. 'if' (adapté à ' if') → logprob: -3.6293718814849854
    5. '               ' → logprob: -3.7543718814849854
    6. '           ' → logprob: -5.379371643066406
    7. ' for' → logprob: -8.379371643066406
    8. '	dp' → logprob: -10.629371643066406
    9. ' ' → logprob: -10.879371643066406
    10. '
' → logprob: -10.879371643066406

Token 440: ' dp' (ID: 21546)
  Prédit: ' dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.04901367425918579
    2. 'dp' → logprob: -3.049013614654541
    3. ' cost' → logprob: -8.0490140914917
    4. 'cost' → logprob: -10.1740140914917
    5. '	dp' → logprob: -10.1740140914917
    6. '(dp' → logprob: -11.0490140914917
    7. '   ' → logprob: -12.2990140914917
    8. ' ' → logprob: -12.5490140914917
    9. ' ' → logprob: -13.7990140914917
    10. '```' → logprob: -13.9240140914917

Token 441: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0032181181013584137
    2. '[i' → logprob: -5.753218173980713
    3. '[' → logprob: -10.878217697143555
    4. 'j' → logprob: -10.878217697143555
    5. ' j' → logprob: -14.003217697143555
    6. '[
' → logprob: -14.128217697143555
    7. 'i' → logprob: -15.003217697143555
    8. ' [' → logprob: -15.253217697143555
    9. '
' → logprob: -16.628217697143555
    10. '_j' → logprob: -17.003217697143555

Token 442: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0001217813478433527
    2. ' -' → logprob: -9.1251220703125
    3. '[' → logprob: -12.0001220703125
    4. '-
' → logprob: -12.7501220703125
    5. ']' → logprob: -13.8751220703125
    6. '[-' → logprob: -13.8751220703125
    7. '1' → logprob: -14.2501220703125
    8. '0' → logprob: -15.2501220703125
    9. '```' → logprob: -15.2501220703125
    10. ']-' → logprob: -15.8751220703125

Token 443: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.00000286102295
    3. '<|end|>' → logprob: -17.875001907348633
    4. '   ' → logprob: -18.125001907348633
    5. ']' → logprob: -18.125001907348633
    6. ']>' → logprob: -18.625001907348633
    7. '```' → logprob: -18.875001907348633
    8. '                   ' → logprob: -18.875001907348633
    9. '           ' → logprob: -19.000001907348633
    10. '<|end|>' → logprob: -19.000001907348633

Token 444: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -12.000006675720215
    3. '
' → logprob: -15.375006675720215
    4. '<|end|>' → logprob: -15.812506675720215
    5. '   ' → logprob: -16.68750762939453
    6. ']' → logprob: -16.87500762939453
    7. '0' → logprob: -16.93750762939453
    8. '```' → logprob: -17.25000762939453
    9. '۱' → logprob: -17.43750762939453
    10. ')' → logprob: -17.56250762939453

Token 445: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05275867506861687
    2. '+' → logprob: -3.6777586936950684
    3. ']+' → logprob: -4.052758693695068
    4. ']!=' → logprob: -5.177758693695068
    5. ' +' → logprob: -5.927758693695068
    6. '!=' → logprob: -8.42775821685791
    7. ')' → logprob: -9.67775821685791
    8. ' ]' → logprob: -9.92775821685791
    9. '[' → logprob: -10.42775821685791
    10. ' !=' → logprob: -10.67775821685791

Token 446: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5759658217430115
    2. '+' → logprob: -0.8259658217430115
    3. '!=' → logprob: -10.950965881347656
    4. ' !=' → logprob: -11.950965881347656
    5. '+
' → logprob: -13.950965881347656
    6. '[' → logprob: -15.325965881347656
    7. ' +
' → logprob: -15.700965881347656
    8. '＋' → logprob: -16.075965881347656
    9. ' is' → logprob: -16.325965881347656
    10. '+self' → logprob: -16.450965881347656

Token 447: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.001170225441455841
    2. ' cost' → logprob: -6.7511701583862305
    3. '(cost' → logprob: -18.876171112060547
    4. '```' → logprob: -20.876171112060547
    5. '_cost' → logprob: -21.001171112060547
    6. 'Cost' → logprob: -21.126171112060547
    7. '   ' → logprob: -22.001171112060547
    8. '
' → logprob: -22.376171112060547
    9. '.cost' → logprob: -22.501171112060547
    10. ' ' → logprob: -22.751171112060547

Token 448: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.02325083687901497
    2. '<' → logprob: -3.7732508182525635
    3. '<int' → logprob: -13.773250579833984
    4. ' ' → logprob: -14.398250579833984
    5. '<size' → logprob: -14.523250579833984
    6. ')' → logprob: -14.648250579833984
    7. '<|end|>' → logprob: -14.648250579833984
    8. '<th' → logprob: -15.023250579833984
    9. '[' → logprob: -15.398250579833984
    10. '<span' → logprob: -15.398250579833984

Token 449: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.004081128165125847
    2. ' dp' → logprob: -5.5040812492370605
    3. '	dp' → logprob: -13.004080772399902
    4. '           ' → logprob: -15.504080772399902
    5. '(dp' → logprob: -16.25408172607422
    6. '_dp' → logprob: -16.62908172607422
    7. '               ' → logprob: -17.12908172607422
    8. '=' → logprob: -17.75408172607422
    9. '                   ' → logprob: -18.00408172607422
    10. 'd' → logprob: -18.37908172607422

Token 450: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.3856492842023727e-06
    2. 'i' → logprob: -14.000000953674316
    3. '[j' → logprob: -14.750000953674316
    4. '[' → logprob: -16.625001907348633
    5. '[
' → logprob: -17.125001907348633
    6. '
' → logprob: -20.625001907348633
    7. '```' → logprob: -20.625001907348633
    8. '   ' → logprob: -20.750001907348633
    9. ' i' → logprob: -21.750001907348633
    10. ' [' → logprob: -22.375001907348633

Token 451: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.00607680669054389
    2. ']:
' → logprob: -5.256076812744141
    3. ']' → logprob: -7.131076812744141
    4. ':' → logprob: -10.63107681274414
    5. '):' → logprob: -11.88107681274414
    6. ']:
' → logprob: -12.50607681274414
    7. '[' → logprob: -12.88107681274414
    8. ']:

' → logprob: -13.25607681274414
    9. ' ]' → logprob: -13.75607681274414
    10. '[i' → logprob: -14.13107681274414

Token 452: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0007805614150129259
    2. '               ' → logprob: -7.7507805824279785
    3. '                       ' → logprob: -8.75078010559082
    4. 'dp' → logprob: -9.00078010559082
    5. ' dp' → logprob: -11.00078010559082
    6. '           ' → logprob: -11.25078010559082
    7. '                  ' → logprob: -11.75078010559082
    8. '   ' → logprob: -12.37578010559082
    9. '(dp' → logprob: -12.50078010559082
    10. '                    
' → logprob: -12.62578010559082

Token 453: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.47458288073539734
    2. ' dp' → logprob: -1.4745829105377197
    3. '                   ' → logprob: -1.9745829105377197
    4. '               ' → logprob: -5.224582672119141
    5. '                       ' → logprob: -6.099582672119141
    6. '	dp' → logprob: -6.099582672119141
    7. '           ' → logprob: -8.84958267211914
    8. '(dp' → logprob: -9.47458267211914
    9. '   ' → logprob: -11.22458267211914
    10. '_dp' → logprob: -11.59958267211914

Token 454: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.704273118884885e-07
    2. '[j' → logprob: -15.125000953674316
    3. '[' → logprob: -15.250000953674316
    4. 'i' → logprob: -16.625
    5. '[
' → logprob: -18.5
    6. '```' → logprob: -19.625
    7. '[I' → logprob: -20.5
    8. '[int' → logprob: -22.5
    9. '
' → logprob: -22.625
    10. '(i' → logprob: -22.625

Token 455: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005278917378745973
    2. ']=' → logprob: -8.375528335571289
    3. ' ]' → logprob: -8.375528335571289
    4. ' =' → logprob: -10.250528335571289
    5. '=' → logprob: -11.000528335571289
    6. '[' → logprob: -11.375528335571289
    7. '[j' → logprob: -13.625528335571289
    8. '<|end|>' → logprob: -14.000528335571289
    9. ')' → logprob: -14.500528335571289
    10. '[i' → logprob: -15.000528335571289

Token 456: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01815052703022957
    2. '=' → logprob: -4.018150329589844
    3. ']' → logprob: -15.143150329589844
    4. '[' → logprob: -15.643150329589844
    5. ' =
' → logprob: -15.768150329589844
    6. ' ' → logprob: -17.393150329589844
    7. ']=' → logprob: -17.768150329589844
    8. ',' → logprob: -18.018150329589844
    9. '.' → logprob: -18.393150329589844
    10. ')' → logprob: -18.518150329589844

Token 457: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0009118211455643177
    2. ' dp' → logprob: -7.000911712646484
    3. '	dp' → logprob: -15.375911712646484
    4. 'dc' → logprob: -17.625911712646484
    5. 'dj' → logprob: -17.625911712646484
    6. 'd' → logprob: -17.750911712646484
    7. '   ' → logprob: -17.750911712646484
    8. '_dp' → logprob: -18.875911712646484
    9. '                   ' → logprob: -19.000911712646484
    10. 'df' → logprob: -19.000911712646484

Token 458: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -2.3199920178740285e-05
    2. 'j' → logprob: -10.750022888183594
    3. '
' → logprob: -14.125022888183594
    4. '[i' → logprob: -14.750022888183594
    5. '	j' → logprob: -15.750022888183594
    6. '[' → logprob: -15.875022888183594
    7. ',j' → logprob: -16.625022888183594
    8. '_j' → logprob: -16.875022888183594
    9. '```' → logprob: -17.125022888183594
    10. ' j' → logprob: -17.125022888183594

Token 459: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -4.024604277219623e-05
    2. ' -' → logprob: -10.125040054321289
    3. '[' → logprob: -16.12504005432129
    4. '[-' → logprob: -17.87504005432129
    5. '1' → logprob: -18.25004005432129
    6. '-
' → logprob: -19.50004005432129
    7. '<|end|>' → logprob: -19.50004005432129
    8. '```' → logprob: -19.62504005432129
    9. '           ' → logprob: -19.87504005432129
    10. ']-' → logprob: -20.12504005432129

Token 460: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2200749754119897e-06
    2. ' ' → logprob: -13.250001907348633
    3. '<|end|>' → logprob: -15.375001907348633
    4. '           ' → logprob: -17.125001907348633
    5. '-' → logprob: -17.750001907348633
    6. '```' → logprob: -17.750001907348633
    7. '   ' → logprob: -18.000001907348633
    8. '<|end|>' → logprob: -18.437501907348633
    9. '       ' → logprob: -18.500001907348633
    10. ']' → logprob: -18.875001907348633

Token 461: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '           ' → logprob: -18.375
    4. '   ' → logprob: -18.625
    5. 'i' → logprob: -19.25
    6. '```' → logprob: -19.25
    7. ']' → logprob: -20.1875
    8. ')' → logprob: -20.1875
    9. '۱' → logprob: -20.1875
    10. '<|end|>' → logprob: -20.1875

Token 462: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00040338258258998394
    2. ']+' → logprob: -8.12540340423584
    3. ' +' → logprob: -9.62540340423584
    4. '+' → logprob: -10.37540340423584
    5. ' ]' → logprob: -11.62540340423584
    6. ')' → logprob: -14.75040340423584
    7. '[' → logprob: -15.37540340423584
    8. '']' → logprob: -15.75040340423584
    9. '+]' → logprob: -15.75040340423584
    10. '   ' → logprob: -15.87540340423584

Token 463: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.07889176905155182
    2. '+' → logprob: -2.5788917541503906
    3. '+c' → logprob: -13.57889175415039
    4. '+p' → logprob: -15.57889175415039
    5. ']+' → logprob: -16.07889175415039
    6. 'dp' → logprob: -16.57889175415039
    7. '+self' → logprob: -16.57889175415039
    8. '＋' → logprob: -16.95389175415039
    9. '[' → logprob: -17.07889175415039
    10. '+d' → logprob: -17.20389175415039

Token 464: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -5.836499985889532e-05
    2. ' cost' → logprob: -9.7500581741333
    3. 'code' → logprob: -21.000059127807617
    4. '(cost' → logprob: -21.500059127807617
    5. '_cost' → logprob: -21.875059127807617
    6. 'Cost' → logprob: -22.625059127807617
    7. 'color' → logprob: -23.000059127807617
    8. 'cos' → logprob: -23.000059127807617
    9. 'count' → logprob: -23.250059127807617
    10. '.cost' → logprob: -24.250059127807617

Token 465: '
                    
' (ID: 158495)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014795857481658459
    2. 'return' → logprob: -4.264795780181885
    3. '           ' → logprob: -8.514796257019043
    4. ' return' → logprob: -8.639796257019043
    5. '<|end|>' → logprob: -8.639796257019043
    6. '
' → logprob: -10.139796257019043
    7. '               ' → logprob: -11.389796257019043
    8. '[' → logprob: -11.889796257019043
    9. '```' → logprob: -12.389796257019043
    10. '        
' → logprob: -12.514796257019043

Token 466: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3875214755535126
    2. 'return' → logprob: -1.137521505355835
    3. ' return' → logprob: -8.262521743774414
    4. 'self' → logprob: -8.887521743774414
    5. '```' → logprob: -9.262521743774414
    6. '               ' → logprob: -9.887521743774414
    7. '<|end|>' → logprob: -10.012521743774414
    8. '           ' → logprob: -10.887521743774414
    9. '   ' → logprob: -11.512521743774414
    10. '	return' → logprob: -11.512521743774414

Token 467: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.02871200628578663
    2. '       ' → logprob: -3.778712034225464
    3. 'r' → logprob: -5.528711795806885
    4. ' return' → logprob: -6.778711795806885
    5. '   ' → logprob: -8.778712272644043
    6. ' ' → logprob: -10.653712272644043
    7. ']' → logprob: -11.028712272644043
    8. '	return' → logprob: -11.028712272644043
    9. 'ret' → logprob: -11.028712272644043
    10. '```' → logprob: -11.153712272644043

Token 468: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.02975129522383213
    2. ' dp' → logprob: -3.5297513008117676
    3. '(dp' → logprob: -14.77975082397461
    4. '	dp' → logprob: -15.15475082397461
    5. '[' → logprob: -16.77975082397461
    6. '_dp' → logprob: -17.52975082397461
    7. '.dp' → logprob: -18.02975082397461
    8. '   ' → logprob: -18.27975082397461
    9. '
' → logprob: -19.90475082397461
    10. 'int' → logprob: -20.27975082397461

Token 469: '[self' (ID: 33734)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3312470316886902
    2. '[i' → logprob: -1.456247091293335
    3. '<|end|>' → logprob: -3.081247091293335
    4. ']' → logprob: -7.206246852874756
    5. '[:]' → logprob: -7.956246852874756
    6. '```' → logprob: -8.331247329711914
    7. '[
' → logprob: -8.331247329711914
    8. 'i' → logprob: -8.581247329711914
    9. '<|end|>' → logprob: -8.831247329711914
    10. '.' → logprob: -8.831247329711914

Token 470: '.N' (ID: 4439)
  Prédit: '.N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.N' → logprob: -7.896309739408025e-07
    2. 'N' → logprob: -14.750000953674316
    3. '.' → logprob: -15.000000953674316
    4. ' .' → logprob: -19.625
    5. '	N' → logprob: -19.625
    6. '.
' → logprob: -20.875
    7. '.I' → logprob: -21.0
    8. '.Н' → logprob: -21.25
    9. '.n' → logprob: -21.625
    10. '[N' → logprob: -22.25

Token 471: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.5332478142227046e-05
    2. ']
' → logprob: -11.375015258789062
    3. ' ]' → logprob: -12.500015258789062
    4. ']

' → logprob: -18.000015258789062
    5. '<|end|>' → logprob: -18.000015258789062
    6. '[' → logprob: -18.500015258789062
    7. '}' → logprob: -18.625015258789062
    8. ')' → logprob: -18.875015258789062
    9. ']()' → logprob: -18.875015258789062
    10. ']int' → logprob: -19.000015258789062

Token 472: 'def' (ID: 1314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16777938604354858
    2. '<|end|>' → logprob: -1.9177794456481934
    3. '        ' → logprob: -6.792779445648193
    4. '    ' → logprob: -6.917779445648193
    5. ')' → logprob: -6.917779445648193
    6. '}' → logprob: -7.417779445648193
    7. ']' → logprob: -7.792779445648193
    8. ' ]' → logprob: -7.792779445648193
    9. '```' → logprob: -8.292778968811035
    10. ' 
' → logprob: -8.542778968811035

Token 473: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.8796215653419495
    2. ' ' → logprob: -1.1296215057373047
    3. ' optimize' → logprob: -2.1296215057373047
    4. '_' → logprob: -3.0046215057373047
    5. '_opt' → logprob: -3.1296215057373047
    6. ' _' → logprob: -4.004621505737305
    7. '_main' → logprob: -5.254621505737305
    8. ' opt' → logprob: -5.879621505737305
    9. '<|end|>' → logprob: -6.004621505737305
    10. '_optimizer' → logprob: -6.129621505737305

Token 474: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.001216186792589724
    2. '():
' → logprob: -6.876216411590576
    3. ' ():' → logprob: -8.626215934753418
    4. '()' → logprob: -12.876215934753418
    5. '():
' → logprob: -13.876215934753418
    6. '_' → logprob: -15.126215934753418
    7. '():

' → logprob: -16.376216888427734
    8. '(' → logprob: -16.876216888427734
    9. ' ()' → logprob: -17.251216888427734
    10. ':' → logprob: -17.376216888427734

Token 475: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028707021847367287
    2. ' n' → logprob: -4.278707027435303
    3. 'n' → logprob: -5.403707027435303
    4. ' import' → logprob: -5.403707027435303
    5. ' N' → logprob: -5.778707027435303
    6. '    ' → logprob: -6.403707027435303
    7. ' input' → logprob: -9.278706550598145
    8. ' def' → logprob: -9.528706550598145
    9. ' try' → logprob: -9.653706550598145
    10. '   ' → logprob: -9.653706550598145

Token 476: ' import' (ID: 1588)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.5678194761276245
    2. ' N' → logprob: -1.1928194761276245
    3. '   ' → logprob: -2.192819595336914
    4. 'import' (adapté à ' import') → logprob: -4.817819595336914
    5. ' import' → logprob: -4.942819595336914
    6. 'n' → logprob: -6.067819595336914
    7. ' n' → logprob: -7.317819595336914
    8. '#' → logprob: -10.317819595336914
    9. '	N' → logprob: -11.692819595336914
    10. ' ' → logprob: -11.817819595336914

Token 477: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -4.842555426876061e-06
    2. ' sys' → logprob: -12.250004768371582
    3. 'math' → logprob: -18.7500057220459
    4. 'random' → logprob: -19.7500057220459
    5. '=sys' → logprob: -20.2500057220459
    6. 'io' → logprob: -21.6250057220459
    7. 'heap' → logprob: -21.6250057220459
    8. '(sys' → logprob: -21.8750057220459
    9. '	sys' → logprob: -22.0000057220459
    10. 'os' → logprob: -22.8750057220459

Token 478: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02974725142121315
    2. 'input' → logprob: -3.904747247695923
    3. '    
' → logprob: -5.654747486114502
    4. '
' → logprob: -5.779747486114502
    5. ' input' → logprob: -6.154747486114502
    6. 'n' → logprob: -9.029747009277344
    7. 'data' → logprob: -9.154747009277344
    8. ',' → logprob: -9.779747009277344
    9. 'def' → logprob: -9.779747009277344
    10. 'import' → logprob: -11.029747009277344

Token 479: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11002787947654724
    2. 'input' → logprob: -2.36002779006958
    3. ' input' → logprob: -4.73502779006958
    4. 'data' → logprob: -7.11002779006958
    5. ' readline' → logprob: -9.610028266906738
    6. 'def' → logprob: -10.735028266906738
    7. ' lines' → logprob: -10.735028266906738
    8. '    
' → logprob: -11.235028266906738
    9. ' data' → logprob: -11.360028266906738
    10. 'lines' → logprob: -11.985028266906738

Token 480: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' (adapté à ' input') → logprob: -0.5885082483291626
    2. ' input' → logprob: -0.8385082483291626
    3. '   ' → logprob: -4.463508129119873
    4. 'data' → logprob: -7.088508129119873
    5. ' data' → logprob: -9.213508605957031
    6. 'n' → logprob: -11.588508605957031
    7. ' readline' → logprob: -11.838508605957031
    8. 'def' → logprob: -11.963508605957031
    9. 'inputs' → logprob: -13.213508605957031
    10. '
' → logprob: -13.463508605957031

Token 481: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7038915753364563
    2. '=' → logprob: -1.7038915157318115
    3. '()' → logprob: -1.7038915157318115
    4. '_data' → logprob: -2.2038915157318115
    5. '_line' → logprob: -3.9538915157318115
    6. '_' → logprob: -4.703891754150391
    7. '_lines' → logprob: -7.203891754150391
    8. '=sys' → logprob: -7.328891754150391
    9. 'data' → logprob: -7.828891754150391
    10. '().' → logprob: -8.07889175415039

Token 482: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.02975083328783512
    2. ' sys' → logprob: -3.5297508239746094
    3. '=sys' → logprob: -15.52975082397461
    4. '	sys' → logprob: -16.40475082397461
    5. '(sys' → logprob: -17.52975082397461
    6. '   ' → logprob: -21.40475082397461
    7. 'input' → logprob: -22.02975082397461
    8. 'lambda' → logprob: -22.02975082397461
    9. '_sys' → logprob: -22.65475082397461
    10. 'stdin' → logprob: -23.02975082397461

Token 483: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -7.588793960167095e-05
    2. 'stdin' → logprob: -9.875076293945312
    3. ' stdin' → logprob: -11.625076293945312
    4. '.stdout' → logprob: -12.000076293945312
    5. '.readline' → logprob: -12.375076293945312
    6. ' .' → logprob: -13.750076293945312
    7. '(stdin' → logprob: -14.500076293945312
    8. '   ' → logprob: -14.875076293945312
    9. 't' → logprob: -15.000076293945312
    10. 'd' → logprob: -15.000076293945312

Token 484: '.readline' (ID: 74673)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.08350778371095657
    2. '.readline' → logprob: -2.583507776260376
    3. 'stdin' → logprob: -5.458508014678955
    4. 'reader' → logprob: -8.583507537841797
    5. ' readline' → logprob: -9.208507537841797
    6. 'buffer' → logprob: -10.833507537841797
    7. 'rea' → logprob: -10.958507537841797
    8. 'readonly' → logprob: -11.458507537841797
    9. 'input' → logprob: -12.083507537841797
    10. 'reading' → logprob: -13.208507537841797

Token 485: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002804633229970932
    2. '    
' → logprob: -6.502804756164551
    3. '
' → logprob: -6.752804756164551
    4. 'N' → logprob: -10.25280475616455
    5. 'n' → logprob: -10.50280475616455
    6. 'def' → logprob: -10.75280475616455
    7. '()' → logprob: -11.25280475616455
    8. ' N' → logprob: -11.50280475616455
    9. '()
' → logprob: -12.62780475616455
    10. '<|end|>' → logprob: -12.62780475616455

Token 486: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02472556196153164
    2. 'n' → logprob: -3.7747256755828857
    3. 'N' → logprob: -6.899725437164307
    4. ' N' → logprob: -8.399725914001465
    5. ' n' → logprob: -8.524725914001465
    6. '    
' → logprob: -10.899725914001465
    7. '	n' → logprob: -11.649725914001465
    8. '	N' → logprob: -13.024725914001465
    9. '(n' → logprob: -13.149725914001465
    10. '  ' → logprob: -13.274725914001465

Token 487: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -1.5094070477061905e-05
    2. 'n' → logprob: -11.875015258789062
    3. '   ' → logprob: -12.000015258789062
    4. ' N' → logprob: -13.250015258789062
    5. 'T' → logprob: -16.250015258789062
    6. '
' → logprob: -16.500015258789062
    7. 'NM' → logprob: -16.875015258789062
    8. '	N' → logprob: -19.125015258789062
    9. '```' → logprob: -19.250015258789062
    10. '    
' → logprob: -19.375015258789062

Token 488: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00412446865811944
    2. ',M' → logprob: -5.504124641418457
    3. ' ,' → logprob: -10.004124641418457
    4. ',
' → logprob: -14.879124641418457
    5. ',K' → logprob: -15.754124641418457
    6. 'M' → logprob: -16.75412368774414
    7. ',int' → logprob: -16.75412368774414
    8. ',m' → logprob: -16.87912368774414
    9. ',N' → logprob: -17.12912368774414
    10. ',\
' → logprob: -17.62912368774414

Token 489: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.6931807994842529
    2. ' M' → logprob: -0.6931807994842529
    3. ' ' → logprob: -10.318181037902832
    4. '  ' → logprob: -15.318181037902832
    5. ' 
' → logprob: -15.568181037902832
    6. '<|end|>' → logprob: -16.568180084228516
    7. ',M' → logprob: -16.943180084228516
    8. ' ' → logprob: -17.318180084228516
    9. ',' → logprob: -17.443180084228516
    10. '    ' → logprob: -17.818180084228516

Token 490: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2460930198431015
    2. ',' → logprob: -1.8710930347442627
    3. ' =' → logprob: -2.7460930347442627
    4. ' ,' → logprob: -12.121092796325684
    5. '<|end|>' → logprob: -12.621092796325684
    6. ',K' → logprob: -12.996092796325684
    7. ' ' → logprob: -13.371092796325684
    8. '=input' → logprob: -14.371092796325684
    9. ')' → logprob: -14.621092796325684
    10. ' =
' → logprob: -14.746092796325684

Token 491: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.018152514472603798
    2. ' K' → logprob: -4.018152713775635
    3. ' ' → logprob: -13.018152236938477
    4. 'self' → logprob: -15.893152236938477
    5. '  ' → logprob: -16.143152236938477
    6. ',K' → logprob: -16.643152236938477
    7. '<|end|>' → logprob: -17.018152236938477
    8. 'k' → logprob: -17.018152236938477
    9. '	K' → logprob: -17.518152236938477
    10. ',' → logprob: -18.018152236938477

Token 492: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03364904224872589
    2. ' =' → logprob: -3.40864896774292
    3. '=input' → logprob: -13.408649444580078
    4. ',' → logprob: -14.408649444580078
    5. '=line' → logprob: -14.783649444580078
    6. ')' → logprob: -15.408649444580078
    7. '=N' → logprob: -15.408649444580078
    8. ' ' → logprob: -16.158649444580078
    9. ')=' → logprob: -16.658649444580078
    10. '=list' → logprob: -16.783649444580078

Token 493: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.00317783304490149
    2. 'map' → logprob: -5.753177642822266
    3. ' list' → logprob: -17.378177642822266
    4. ' input' → logprob: -17.503177642822266
    5. '	map' → logprob: -18.378177642822266
    6. '(map' → logprob: -18.628177642822266
    7. 'input' → logprob: -19.628177642822266
    8. '[' → logprob: -19.878177642822266
    9. '_map' → logprob: -20.128177642822266
    10. ' [' → logprob: -20.378177642822266

Token 494: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -2.0339031834737398e-05
    2. 'int' → logprob: -11.375020027160645
    3. '(' → logprob: -12.000020027160645
    4. '(input' → logprob: -12.875020027160645
    5. '(
' → logprob: -17.37502098083496
    6. ' (' → logprob: -17.87502098083496
    7. '(str' → logprob: -18.12502098083496
    8. '<int' → logprob: -18.25002098083496
    9. ',int' → logprob: -18.50002098083496
    10. 'input' → logprob: -18.50002098083496

Token 495: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.7840986251831055
    2. ',' → logprob: -1.0340986251831055
    3. '(input' → logprob: -1.7840986251831055
    4. 'input' → logprob: -4.1590986251831055
    5. '(' → logprob: -5.9090986251831055
    6. ')' → logprob: -7.6590986251831055
    7. '=input' → logprob: -7.6590986251831055
    8. '(),' → logprob: -8.284098625183105
    9. ' input' → logprob: -9.409098625183105
    10. '[input' → logprob: -9.534098625183105

Token 496: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0019286326132714748
    2. ' input' → logprob: -6.251928806304932
    3. 'int' → logprob: -19.751928329467773
    4. ',input' → logprob: -21.251928329467773
    5. '=input' → logprob: -21.376928329467773
    6. ')' → logprob: -21.376928329467773
    7. ' ' → logprob: -22.001928329467773
    8. '<input' → logprob: -22.126928329467773
    9. '(input' → logprob: -22.251928329467773
    10. '   ' → logprob: -22.376928329467773

Token 497: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00020544764993246645
    2. '()' → logprob: -8.500205039978027
    3. '())' → logprob: -13.375205039978027
    4. ' ().' → logprob: -15.500205039978027
    5. '()
' → logprob: -16.750205993652344
    6. '(' → logprob: -17.000205993652344
    7. '().'' → logprob: -17.375205993652344
    8. '()[' → logprob: -18.000205993652344
    9. '()]' → logprob: -18.875205993652344
    10. '()>' → logprob: -18.875205993652344

Token 498: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.10802077502012253
    2. 'strip' → logprob: -2.358020782470703
    3. 'rstrip' → logprob: -4.858020782470703
    4. 'read' → logprob: -11.358020782470703
    5. '().' → logprob: -13.358020782470703
    6. ' split' → logprob: -13.483020782470703
    7. ')' → logprob: -13.858020782470703
    8. 'plit' → logprob: -14.233020782470703
    9. '(split' → logprob: -14.733020782470703
    10. ' strip' → logprob: -14.733020782470703

Token 499: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.012752845883369446
    2. ')' → logprob: -4.512753009796143
    3. '()' → logprob: -6.387753009796143
    4. '())
' → logprob: -11.387752532958984
    5. '(' → logprob: -12.512752532958984
    6. '()))' → logprob: -12.887752532958984
    7. '().' → logprob: -13.012752532958984
    8. ' ())' → logprob: -14.137752532958984
    9. '))' → logprob: -15.262752532958984
    10. '(),' → logprob: -15.637752532958984

Token 500: '   ' (ID: 271)
  Prédit: 'sizes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sizes' → logprob: -0.7208309173583984
    2. '   ' → logprob: -1.0958309173583984
    3. ' sizes' → logprob: -1.7208309173583984
    4. '_sizes' → logprob: -8.470830917358398
    5. 's' → logprob: -9.220830917358398
    6. 'Sizes' → logprob: -10.095830917358398
    7. '    
' → logprob: -10.345830917358398
    8. '
' → logprob: -10.470830917358398
    9. 'S' → logprob: -11.470830917358398
    10. '	s' → logprob: -11.845830917358398

Token 501: ' sizes' (ID: 16174)
  Prédit: 'sizes'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sizes' (adapté à ' sizes') → logprob: -0.04302190989255905
    2. ' sizes' → logprob: -3.1680219173431396
    3. '   ' → logprob: -11.418022155761719
    4. '_sizes' → logprob: -12.293022155761719
    5. 'Sizes' → logprob: -12.918022155761719
    6. 's' → logprob: -13.043022155761719
    7. 'size' → logprob: -13.293022155761719
    8. 'siz' → logprob: -15.418022155761719
    9. '```' → logprob: -16.41802215576172
    10. ' size' → logprob: -16.54302215576172

Token 502: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141470432281494
    2. '=' → logprob: -1.701414704322815
    3. ' =[' → logprob: -14.576415061950684
    4. ' =
' → logprob: -14.701415061950684
    5. ',' → logprob: -16.201414108276367
    6. ' ' → logprob: -16.326414108276367
    7. '=list' → logprob: -16.451414108276367
    8. '=[]' → logprob: -16.701414108276367
    9. ' ' → logprob: -16.826414108276367
    10. ')' → logprob: -16.951414108276367

Token 503: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.06196768581867218
    2. ' list' → logprob: -2.811967611312866
    3. '[list' → logprob: -17.811967849731445
    4. '=list' → logprob: -19.561967849731445
    5. '	list' → logprob: -19.936967849731445
    6. 'List' → logprob: -20.686967849731445
    7. ':list' → logprob: -21.811967849731445
    8. '(list' → logprob: -22.061967849731445
    9. '[' → logprob: -22.936967849731445
    10. 'map' → logprob: -22.936967849731445

Token 504: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -6.704273118884885e-07
    2. ' int' → logprob: -14.750000953674316
    3. ']int' → logprob: -15.875000953674316
    4. '*' → logprob: -17.25
    5. '   ' → logprob: -17.875
    6. ':int' → logprob: -18.625
    7. '<int' → logprob: -18.875
    8. '
' → logprob: -19.125
    9. '[int' → logprob: -19.5
    10. '(int' → logprob: -19.5

Token 505: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.10599872469902039
    2. '(x' → logprob: -2.4809987545013428
    3. '(' → logprob: -4.105998516082764
    4. '(i' → logprob: -8.230998992919922
    5. ']' → logprob: -9.855998992919922
    6. '(
' → logprob: -10.355998992919922
    7. '(token' → logprob: -10.480998992919922
    8. '()]' → logprob: -11.355998992919922
    9. 'input' → logprob: -11.480998992919922
    10. '(

' → logprob: -11.605998992919922

Token 506: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.023702412843704224
    2. '().' → logprob: -3.773702383041382
    3. '()' → logprob: -7.898702621459961
    4. '())
' → logprob: -10.023702621459961
    5. '()]' → logprob: -10.523702621459961
    6. '()
' → logprob: -11.773702621459961
    7. ' ())' → logprob: -12.898702621459961
    8. ')' → logprob: -13.023702621459961
    9. '())
' → logprob: -14.398702621459961
    10. '()),' → logprob: -15.023702621459961

Token 507: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0012460665311664343
    2. '()]' → logprob: -7.876245975494385
    3. '())' → logprob: -7.876245975494385
    4. '().' → logprob: -8.001246452331543
    5. ')' → logprob: -9.376246452331543
    6. 'for' → logprob: -10.376246452331543
    7. ' for' → logprob: -11.126246452331543
    8. '()
' → logprob: -12.126246452331543
    9. ' ()' → logprob: -12.126246452331543
    10. '(' → logprob: -13.251246452331543

Token 508: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -5.319370302458992e-06
    2. ' _' → logprob: -13.000005722045898
    3. '_range' → logprob: -13.375005722045898
    4. '_i' → logprob: -13.625005722045898
    5. '_in' → logprob: -16.3750057220459
    6. ' in' → logprob: -17.3750057220459
    7. ' range' → logprob: -18.0000057220459
    8. '_
' → logprob: -18.5000057220459
    9. '_x' → logprob: -18.5000057220459
    10. '_]' → logprob: -18.6250057220459

Token 509: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4117209017276764
    2. '_' → logprob: -1.411720871925354
    3. 'in' → logprob: -3.1617209911346436
    4. ' in' → logprob: -3.2867209911346436
    5. ' range' → logprob: -4.2867207527160645
    6. '_range' → logprob: -8.536721229553223
    7. '0' → logprob: -10.786721229553223
    8. 'i' → logprob: -10.911721229553223
    9. '	range' → logprob: -11.411721229553223
    10. ' ' → logprob: -11.661721229553223

Token 510: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00020354038861114532
    2. ' range' → logprob: -8.500203132629395
    3. '	range' → logprob: -19.50020408630371
    4. '(range' → logprob: -21.00020408630371
    5. 'rang' → logprob: -21.12520408630371
    6. '   ' → logprob: -21.37520408630371
    7. '  ' → logprob: -21.50020408630371
    8. ' ' → logprob: -21.62520408630371
    9. '
' → logprob: -21.87520408630371
    10. '.range' → logprob: -23.12520408630371

Token 511: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0004481885116547346
    2. 'N' → logprob: -7.750448226928711
    3. '(' → logprob: -11.000448226928711
    4. '(M' → logprob: -15.000448226928711
    5. '(
' → logprob: -15.125448226928711
    6. ' N' → logprob: -17.00044822692871
    7. '(n' → logprob: -17.37544822692871
    8. ' (' → logprob: -17.50044822692871
    9. '	N' → logprob: -17.50044822692871
    10. '   ' → logprob: -17.62544822692871

Token 512: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.06216060370206833
    2. ']' → logprob: -2.8121604919433594
    3. ')' → logprob: -8.81216049194336
    4. '()]' → logprob: -10.43716049194336
    5. ' ]' → logprob: -12.31216049194336
    6. '])' → logprob: -12.56216049194336
    7. '   ' → logprob: -13.18716049194336
    8. '])]' → logprob: -13.31216049194336
    9. ']
' → logprob: -13.81216049194336
    10. ')]
' → logprob: -14.43716049194336

Token 513: '   ' (ID: 271)
  Prédit: ' optimizer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' optimizer' → logprob: -0.0980781763792038
    2. 'optimizer' → logprob: -2.5980782508850098
    3. '   ' → logprob: -3.9730782508850098
    4. '_optimizer' → logprob: -9.348077774047852
    5. ' op' → logprob: -10.473077774047852
    6. 'opt' → logprob: -10.598077774047852
    7. '
' → logprob: -11.223077774047852
    8. 'op' → logprob: -11.723077774047852
    9. '    
' → logprob: -12.098077774047852
    10. 'pack' → logprob: -12.223077774047852

Token 514: ' optimizer' (ID: 56610)
  Prédit: 'optimizer'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'optimizer' (adapté à ' optimizer') → logprob: -0.01833934336900711
    2. ' optimizer' → logprob: -4.018339157104492
    3. '   ' → logprob: -9.393339157104492
    4. 'opt' → logprob: -9.393339157104492
    5. 'optim' → logprob: -11.518339157104492
    6. 'solver' → logprob: -12.643339157104492
    7. 'op' → logprob: -13.143339157104492
    8. '```' → logprob: -13.518339157104492
    9. '_optimizer' → logprob: -13.518339157104492
    10. 'opc' → logprob: -13.893339157104492

Token 515: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06993754208087921
    2. '=' → logprob: -2.6949374675750732
    3. '(' → logprob: -14.569937705993652
    4. ' ' → logprob: -15.694937705993652
    5. 's' → logprob: -15.819937705993652
    6. '.' → logprob: -15.944937705993652
    7. '   ' → logprob: -16.194936752319336
    8. ' =
' → logprob: -16.444936752319336
    9. '  ' → logprob: -16.569936752319336
    10. '<|end|>' → logprob: -17.444936752319336

Token 516: ' Orange' (ID: 31490)
  Prédit: 'Orange'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Orange' → logprob: -0.0005530327325686812
    2. ' Orange' → logprob: -7.500553131103516
    3. '   ' → logprob: -17.375553131103516
    4. 'Or' → logprob: -17.375553131103516
    5. 'orange' → logprob: -20.500553131103516
    6. 'Apple' → logprob: -21.125553131103516
    7. ' orange' → logprob: -21.625553131103516
    8. ' ' → logprob: -21.625553131103516
    9. 'Oracle' → logprob: -21.625553131103516
    10. 'Yellow' → logprob: -22.375553131103516

Token 517: 'Packaging' (ID: 134013)
  Prédit: 'Packaging'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Packaging' → logprob: 0.0
    2. 'Packing' → logprob: -17.875
    3. ' Packaging' → logprob: -18.125
    4. ' packaging' → logprob: -19.25
    5. 'Pricing' → logprob: -19.625
    6. '
' → logprob: -21.125
    7. '```' → logprob: -21.375
    8. 'Package' → logprob: -22.375
    9. 'Orange' → logprob: -22.75
    10. '包装' → logprob: -22.875

Token 518: 'Cost' (ID: 16815)
  Prédit: 'Cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Cost' → logprob: -3.173704271830502e-06
    2. 'cost' → logprob: -12.87500286102295
    3. 'Optimizer' → logprob: -15.50000286102295
    4. '_cost' → logprob: -15.50000286102295
    5. ' cost' → logprob: -17.875003814697266
    6. ' Cost' → logprob: -17.875003814697266
    7. 'Costs' → logprob: -18.125003814697266
    8. 'C' → logprob: -18.375003814697266
    9. 'ost' → logprob: -18.875003814697266
    10. '_COST' → logprob: -18.875003814697266

Token 519: 'Optimizer' (ID: 120293)
  Prédit: 'Optimizer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Optimizer' → logprob: -0.0004732102679554373
    2. 'optimizer' → logprob: -7.7504730224609375
    3. '_optimizer' → logprob: -10.375473022460938
    4. 'o' → logprob: -12.500473022460938
    5. ' optimizer' → logprob: -12.625473022460938
    6. 'izer' → logprob: -13.000473022460938
    7. 'Or' → logprob: -15.125473022460938
    8. '   ' → logprob: -15.375473022460938
    9. 'or' → logprob: -15.750473022460938
    10. 'OR' → logprob: -15.875473022460938

Token 520: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.002040937077254057
    2. '(' → logprob: -6.252040863037109
    3. '(
' → logprob: -9.12704086303711
    4. ' (' → logprob: -12.75204086303711
    5. '   ' → logprob: -15.37704086303711
    6. '(
' → logprob: -16.00204086303711
    7. '(n' → logprob: -16.00204086303711
    8. '```' → logprob: -16.87704086303711
    9. '(O' → logprob: -17.62704086303711
    10. '(

' → logprob: -17.75204086303711

Token 521: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002571673830971122
    2. ',M' → logprob: -8.50025749206543
    3. ' ,' → logprob: -9.87525749206543
    4. ',
' → logprob: -13.87525749206543
    5. '   ' → logprob: -14.37525749206543
    6. ',N' → logprob: -15.75025749206543
    7. '‌,' → logprob: -16.12525749206543
    8. 'M' → logprob: -16.37525749206543
    9. ',K' → logprob: -16.37525749206543
    10. '=' → logprob: -16.62525749206543

Token 522: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.005929982289671898
    2. ' M' → logprob: -5.130929946899414
    3. '   ' → logprob: -14.255929946899414
    4. ' ' → logprob: -15.255929946899414
    5. 'K' → logprob: -15.505929946899414
    6. '  ' → logprob: -16.505929946899414
    7. '	M' → logprob: -16.630929946899414
    8. '    ' → logprob: -16.880929946899414
    9. ')' → logprob: -17.505929946899414
    10. '
' → logprob: -17.943429946899414

Token 523: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.11996734328568e-05
    2. ' ,' → logprob: -10.500041007995605
    3. ',K' → logprob: -11.250041007995605
    4. ')' → logprob: -16.000041961669922
    5. ',
' → logprob: -16.250041961669922
    6. '<|end|>' → logprob: -16.500041961669922
    7. 'K' → logprob: -16.625041961669922
    8. '‌,' → logprob: -16.750041961669922
    9. '   ' → logprob: -16.875041961669922
    10. ',C' → logprob: -18.000041961669922

Token 524: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0026187049224972725
    2. ' K' → logprob: -6.377618789672852
    3. 'sizes' → logprob: -7.002618789672852
    4. ' sizes' → logprob: -12.127618789672852
    5. ' ' → logprob: -14.752618789672852
    6. '   ' → logprob: -15.877618789672852
    7. '	K' → logprob: -16.00261878967285
    8. 's' → logprob: -16.12761878967285
    9. ')' → logprob: -16.50261878967285
    10. '  ' → logprob: -16.75261878967285

Token 525: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.226628895296017e-06
    2. ',s' → logprob: -12.000007629394531
    3. ' ,' → logprob: -13.875007629394531
    4. ',
' → logprob: -16.50000762939453
    5. 'sizes' → logprob: -17.62500762939453
    6. ')' → logprob: -18.37500762939453
    7. '   ' → logprob: -18.62500762939453
    8. 's' → logprob: -19.00000762939453
    9. ',size' → logprob: -19.25000762939453
    10. '‌,' → logprob: -20.25000762939453

Token 526: ' sizes' (ID: 16174)
  Prédit: 'sizes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sizes' → logprob: -0.00015908108616713434
    2. ' sizes' → logprob: -8.75015926361084
    3. 'size' → logprob: -15.37515926361084
    4. 'siz' → logprob: -16.250158309936523
    5. 's' → logprob: -16.500158309936523
    6. '   ' → logprob: -16.625158309936523
    7. ' ' → logprob: -19.625158309936523
    8. '_sizes' → logprob: -20.750158309936523
    9. 'scores' → logprob: -21.000158309936523
    10. 'Sizes' → logprob: -21.375158309936523

Token 527: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04859906807541847
    2. ')
' → logprob: -3.0485990047454834
    3. '   ' → logprob: -11.923599243164062
    4. ').' → logprob: -13.048599243164062
    5. ')
' → logprob: -13.173599243164062
    6. ')

' → logprob: -14.548599243164062
    7. ')`
' → logprob: -16.173599243164062
    8. ' )' → logprob: -16.423599243164062
    9. ' )
' → logprob: -17.173599243164062
    10. '.' → logprob: -17.298599243164062

Token 528: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2020387500524521
    2. 'print' → logprob: -1.7020387649536133
    3. ' print' → logprob: -8.077038764953613
    4. 'result' → logprob: -8.077038764953613
    5. ' result' → logprob: -12.952038764953613
    6. '	print' → logprob: -14.202038764953613
    7. '```' → logprob: -14.952038764953613
    8. '    
' → logprob: -15.827038764953613
    9. 'output' → logprob: -16.202037811279297
    10. 'return' → logprob: -16.202037811279297

Token 529: ' result' (ID: 1534)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -7.815280696377158e-05
    2. 'result' (adapté à ' result') → logprob: -9.500078201293945
    3. '   ' → logprob: -13.250078201293945
    4. ' print' → logprob: -13.500078201293945
    5. 'return' → logprob: -18.625078201293945
    6. 'answer' → logprob: -19.250078201293945
    7. 'optimal' → logprob: -19.500078201293945
    8. '```' → logprob: -19.750078201293945
    9. 'res' → logprob: -20.000078201293945
    10. ' result' → logprob: -21.125078201293945

Token 530: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011051828041672707
    2. '=' → logprob: -4.511051654815674
    3. ' =
' → logprob: -13.261052131652832
    4. '.' → logprob: -13.886052131652832
    5. ')' → logprob: -14.761052131652832
    6. ' ' → logprob: -15.011052131652832
    7. '   ' → logprob: -15.386052131652832
    8. ' =)' → logprob: -16.261051177978516
    9. '=result' → logprob: -16.386051177978516
    10. ' ' → logprob: -16.886051177978516

Token 531: ' optimizer' (ID: 56610)
  Prédit: 'optimizer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'optimizer' → logprob: -0.0031777136027812958
    2. ' optimizer' → logprob: -5.753177642822266
    3. '_optimizer' → logprob: -17.253177642822266
    4. 'optim' → logprob: -17.503177642822266
    5. '   ' → logprob: -17.878177642822266
    6. '.optimizer' → logprob: -18.003177642822266
    7. 'opt' → logprob: -19.128177642822266
    8. 'Optimizer' → logprob: -19.503177642822266
    9. 'allocator' → logprob: -19.628177642822266
    10. 'optimization' → logprob: -20.378177642822266

Token 532: '.optimize' (ID: 175159)
  Prédit: '.optimize'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.optimize' → logprob: -8.41866585687967e-06
    2. '.' → logprob: -12.500008583068848
    3. '.opt' → logprob: -12.625008583068848
    4. ' .' → logprob: -13.875008583068848
    5. '.optim' → logprob: -14.875008583068848
    6. '.optimizer' → logprob: -16.75000762939453
    7. 'opt' → logprob: -18.37500762939453
    8. '.perform' → logprob: -18.62500762939453
    9. '.
' → logprob: -19.12500762939453
    10. '.solve' → logprob: -19.62500762939453

Token 533: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008823268115520477
    2. 'print' → logprob: -4.883823394775391
    3. '
' → logprob: -6.758823394775391
    4. ' print' → logprob: -10.25882339477539
    5. '    
' → logprob: -11.00882339477539
    6. '(print' → logprob: -13.25882339477539
    7. '(
' → logprob: -14.25882339477539
    8. '()
' → logprob: -14.50882339477539
    9. '	print' → logprob: -15.00882339477539
    10. '<|end|>' → logprob: -15.25882339477539

Token 534: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006721298210322857
    2. 'print' → logprob: -5.006721496582031
    3. ' print' → logprob: -12.256721496582031
    4. '	print' → logprob: -14.506721496582031
    5. '    
' → logprob: -15.131721496582031
    6. '```' → logprob: -16.13172149658203
    7. 'return' → logprob: -16.63172149658203
    8. '    ' → logprob: -17.00672149658203
    9. '       ' → logprob: -17.00672149658203
    10. '<|end|>' → logprob: -17.25672149658203

Token 535: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.10088993608951569
    2. '   ' → logprob: -2.3508899211883545
    3. ' print' → logprob: -7.350890159606934
    4. '
' → logprob: -10.600890159606934
    5. '```' → logprob: -11.225890159606934
    6. '	print' → logprob: -12.850890159606934
    7. '    
' → logprob: -16.100889205932617
    8. '  ' → logprob: -17.725889205932617
    9. '#print' → logprob: -17.975889205932617
    10. '``' → logprob: -17.975889205932617

Token 536: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.0002619318547658622
    2. '(' → logprob: -8.250262260437012
    3. 'result' → logprob: -15.375262260437012
    4. '(
' → logprob: -15.875262260437012
    5. ' (' → logprob: -16.000261306762695
    6. '(results' → logprob: -17.250261306762695
    7. '(res' → logprob: -17.375261306762695
    8. '=result' → logprob: -17.375261306762695
    9. '(f' → logprob: -18.000261306762695
    10. '(resultado' → logprob: -18.500261306762695

Token 537: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.014684110297821e-06
    2. ')
' → logprob: -11.750008583068848
    3. ' )' → logprob: -14.375008583068848
    4. '())' → logprob: -15.000008583068848
    5. '()' → logprob: -15.625008583068848
    6. ')`' → logprob: -18.750009536743164
    7. '')' → logprob: -18.875009536743164
    8. '))' → logprob: -19.000009536743164
    9. '(' → logprob: -19.750009536743164
    10. '）' → logprob: -19.875009536743164

Token 538: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00013595925702247769
    2. ' if' → logprob: -9.250136375427246
    3. '<|end|>' → logprob: -10.625136375427246
    4. '```' → logprob: -12.250136375427246
    5. ')' → logprob: -12.375136375427246
    6. '
' → logprob: -13.125136375427246
    7. 'for' → logprob: -13.500136375427246
    8. '   ' → logprob: -14.375136375427246
    9. '#' → logprob: -14.500136375427246
    10. ']' → logprob: -14.750136375427246

Token 539: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.6944220066070557
    2. ' __' → logprob: -0.6944220066070557
    3. '_' → logprob: -7.194421768188477
    4. '_name' → logprob: -7.694421768188477
    5. 'name' → logprob: -10.819421768188477
    6. ' ' → logprob: -10.819421768188477
    7. '___' → logprob: -10.944421768188477
    8. ' ' → logprob: -12.694421768188477
    9. ' _' → logprob: -13.444421768188477
    10. 'Name' → logprob: -13.444421768188477

Token 540: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.04309670254588127
    2. ' ==' → logprob: -3.4180967807769775
    3. '==' → logprob: -4.918096542358398
    4. 'name' → logprob: -6.793096542358398
    5. ' __' → logprob: -7.168096542358398
    6. '.__' → logprob: -9.543096542358398
    7. '=="' → logprob: -10.668096542358398
    8. '__.__' → logprob: -10.668096542358398
    9. '[' → logprob: -11.168096542358398
    10. '__.' → logprob: -11.418096542358398

Token 541: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00011403311509639025
    2. '==' → logprob: -9.250114440917969
    3. '__.__' → logprob: -11.375114440917969
    4. ' ==' → logprob: -12.125114440917969
    5. '=="' → logprob: -14.500114440917969
    6. '_' → logprob: -15.625114440917969
    7. '____' → logprob: -16.50011444091797
    8. '__
' → logprob: -16.62511444091797
    9. '__.' → logprob: -16.87511444091797
    10. '=' → logprob: -17.12511444091797

Token 542: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.419052392244339
    2. '__' → logprob: -1.1690523624420166
    3. ' ==' → logprob: -3.6690523624420166
    4. '=="' → logprob: -5.169052600860596
    5. '=='' → logprob: -7.794052600860596
    6. '=' → logprob: -10.419052124023438
    7. '==
' → logprob: -11.169052124023438
    8. '_' → logprob: -12.169052124023438
    9. '===' → logprob: -12.169052124023438
    10. '__.__' → logprob: -12.419052124023438

Token 543: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.02976229228079319
    2. ''' → logprob: -3.5297622680664062
    3. ' "__' → logprob: -11.654762268066406
    4. '__' → logprob: -12.779762268066406
    5. ' '__' → logprob: -15.904762268066406
    6. '"name' → logprob: -16.404762268066406
    7. '"user' → logprob: -17.029762268066406
    8. '"class' → logprob: -17.904762268066406
    9. '("__' → logprob: -18.029762268066406
    10. ''"' → logprob: -18.154762268066406

Token 544: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.3567313551902771
    2. '__' → logprob: -1.6067314147949219
    3. '"' → logprob: -2.356731414794922
    4. ''' → logprob: -5.356731414794922
    5. 'name' → logprob: -10.231731414794922
    6. '"name' → logprob: -12.481731414794922
    7. ' "__' → logprob: -12.731731414794922
    8. '__":
' → logprob: -13.481731414794922
    9. ' main' → logprob: -13.856731414794922
    10. '```' → logprob: -13.981731414794922

Token 545: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.16134166717529297
    2. '__' → logprob: -1.911341667175293
    3. '__':
' → logprob: -7.286341667175293
    4. '__.__' → logprob: -8.411341667175293
    5. '__.' → logprob: -8.911341667175293
    6. '__["' → logprob: -9.786341667175293
    7. '__
' → logprob: -11.286341667175293
    8. '__
' → logprob: -13.411341667175293
    9. '__",' → logprob: -13.661341667175293
    10. '__("' → logprob: -13.911341667175293

Token 546: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.03047862835228443
    2. '__' → logprob: -3.5304787158966064
    3. '"' → logprob: -7.280478477478027
    4. ''' → logprob: -11.155478477478027
    5. ' main' → logprob: -11.405478477478027
    6. '   ' → logprob: -11.405478477478027
    7. '	main' → logprob: -13.780478477478027
    8. '_main' → logprob: -14.780478477478027
    9. '____' → logprob: -15.030478477478027
    10. 'run' → logprob: -15.530478477478027

Token 547: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -18.0
    3. '	main' → logprob: -20.625
    4. '   ' → logprob: -21.25
    5. 'import' → logprob: -24.25
    6. '(main' → logprob: -24.875
    7. '_main' → logprob: -25.125
    8. '.main' → logprob: -25.125
    9. '```' → logprob: -26.75
    10. '
' → logprob: -28.625

Token 548: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 546
Tokens correctement prédits (1ère position, stricte): 265
Tokens correctement prédits (1ère position, avec adaptation): 289
Tokens correctement prédits (top 10): 483
Précision stricte (1ère position): 48.53%
Précision adaptée (1ère position): 52.93%
Précision (top 10): 88.46%
================================================================================
