================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 16:58:35
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Solution Python pour le problème Party Dress

# Le problème : Yae a A robes et B fêtes. Elle veut réduire au minimum possible
# la fréquence maximale d'utilisation d'une même robe, sachant qu'elle doit
# couvrir toutes les fêtes avec ses robes. Autrement dit, on cherche à minimiser
# le maximum d'utilisations d'une robe sachant qu'on a A robes et B utilisations à couvrir.

# Analyse :
# Chaque robe peut être utilisée un nombre certain de fois.
# Si on répartit les B fêtes sur A robes aussi uniformément que possible,
# alors la fréquence maximale d'utilisation d'une robe est le nombre entier
# minimal x tel que A*x >= B.
# En effet, si chaque robe est utilisée au maximum x fois,
# Le total de robes utilisables est A*x.
# On veut le plus petit x tel que A*x >= B.

# Cette valeur correspond donc au plafond de B / A.

def max_wear_frequency(A: int, B: int) -> int:
    """
    Calcule la fréquence maximale minimale à laquelle Yae doit porter la même robe.

    :param A: Nombre de robes disponibles.
    :param B: Nombre total de fêtes.
    :return: Fréquence maximale la plus basse possible de réutilisation d'une robe.
    """
    # Utilisation de la division entière avec arrondi supérieur
    # Pour calculer le plafond de B/A sans import de math
    return (B + A - 1) // A

# Lecture des entrées
A, B = map(int, input().split())

# Calcul du résultat
result = max_wear_frequency(A, B)

# Affichage du résultat
print(result)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Solution' (ID: 20858)
  → Token d'amorce (pas de prédiction)

Token 2: ' Python' (ID: 26534)
  → Token d'amorce (pas de prédiction)

Token 3: ' pour' (ID: 1930)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18757611513137817
    2. '```' → logprob: -1.8125760555267334
    3. '#' → logprob: -6.0625762939453125
    4. 'def' → logprob: -6.4375762939453125
    5. ':def' → logprob: -6.8125762939453125
    6. ':
' → logprob: -7.5625762939453125
    7. '``' → logprob: -7.5625762939453125
    8. '
' → logprob: -7.5625762939453125
    9. '\' → logprob: -7.8125762939453125
    10. '\n' → logprob: -8.062576293945312

Token 4: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.2687305510044098
    2. ' résoudre' → logprob: -1.6437305212020874
    3. ' la' → logprob: -4.768730640411377
    4. ' ' → logprob: -5.018730640411377
    5. ' tr' → logprob: -5.143730640411377
    6. ' calcul' → logprob: -5.268730640411377
    7. ' l' → logprob: -6.018730640411377
    8. 'le' → logprob: -6.143730640411377
    9. ' ' → logprob: -6.393730640411377
    10. 'l' → logprob: -6.518730640411377

Token 5: ' problème' (ID: 35630)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.31758683919906616
    2. ' problème' → logprob: -2.567586898803711
    3. '#' → logprob: -2.942586898803711
    4. ' #' → logprob: -3.692586898803711
    5. ' probl' → logprob: -3.942586898803711
    6. 'tri' → logprob: -4.192586898803711
    7. ' prochain' → logprob: -4.442586898803711
    8. ' ' → logprob: -4.567586898803711
    9. ' code' → logprob: -4.567586898803711
    10. ' tri' → logprob: -4.567586898803711

Token 6: ' Party' (ID: 15703)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5006914734840393
    2. ' :' → logprob: -1.0006914138793945
    3. '```' → logprob: -4.2506914138793945
    4. '#' → logprob: -5.3756914138793945
    5. '\' → logprob: -6.6256914138793945
    6. 's' → logprob: -6.7506914138793945
    7. 'def' → logprob: -6.7506914138793945
    8. '\n' → logprob: -6.8756914138793945
    9. '.' → logprob: -7.8756914138793945
    10. ''''' → logprob: -8.375691413879395

Token 7: ' Dress' (ID: 39758)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011191646568477154
    2. 'def' → logprob: -5.6361918449401855
    3. ' :' → logprob: -6.1361918449401855
    4. '```' → logprob: -6.5111918449401855
    5. '#' → logprob: -6.6361918449401855
    6. ':def' → logprob: -7.3861918449401855
    7. '.py' → logprob: -7.7611918449401855
    8. ':
' → logprob: -8.011191368103027
    9. '\' → logprob: -8.011191368103027
    10. '\n' → logprob: -8.386191368103027

Token 8: '

' (ID: 279)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.17852160334587097
    2. 'def' → logprob: -2.1785216331481934
    3. '#' → logprob: -3.3035216331481934
    4. '```' → logprob: -5.428521633148193
    5. 's' → logprob: -6.303521633148193
    6. ':def' → logprob: -6.303521633148193
    7. 'd' → logprob: -6.428521633148193
    8. '\' → logprob: -7.053521633148193
    9. ' :' → logprob: -7.053521633148193
    10. '\n' → logprob: -7.803521633148193

Token 9: '#' (ID: 2)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.022441623732447624
    2. 'def' → logprob: -4.272441387176514
    3. '#' → logprob: -5.772441387176514
    4. 's' → logprob: -6.147441387176514
    5. '```' → logprob: -7.147441387176514
    6. 'd' → logprob: -7.647441387176514
    7. ':def' → logprob: -7.897441387176514
    8. 'n' → logprob: -8.022441864013672
    9. '\' → logprob: -8.397441864013672
    10. ' :' → logprob: -9.022441864013672

Token 10: ' Le' (ID: 2018)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.18839766085147858
    2. ' def' → logprob: -1.8133976459503174
    3. ' ' → logprob: -5.6883978843688965
    4. ' class' → logprob: -5.9383978843688965
    5. 'class' → logprob: -6.5633978843688965
    6. 'd' → logprob: -8.313397407531738
    7. ' #' → logprob: -8.938397407531738
    8. ' n' → logprob: -9.063397407531738
    9. ' de' → logprob: -9.313397407531738
    10. ' d' → logprob: -9.563397407531738

Token 11: ' problème' (ID: 35630)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8110775351524353
    2. ' code' → logprob: -1.06107759475708
    3. 'd' → logprob: -2.68607759475708
    4. 'code' → logprob: -3.68607759475708
    5. 's' → logprob: -3.81107759475708
    6. 'pro' → logprob: -4.31107759475708
    7. ' problème' → logprob: -4.43607759475708
    8. '#' → logprob: -4.56107759475708
    9. 'class' → logprob: -5.18607759475708
    10. 'me' → logprob: -5.43607759475708

Token 12: ' :' (ID: 712)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6477785706520081
    2. ' :' → logprob: -0.7727785706520081
    3. ' ' → logprob: -4.897778511047363
    4. '<|end|>' → logprob: -5.897778511047363
    5. 's' → logprob: -6.772778511047363
    6. '<|end|>' → logprob: -6.897778511047363
    7. '#' → logprob: -7.272778511047363
    8. ' ' → logprob: -7.897778511047363
    9. ' #' → logprob: -8.522778511047363
    10. '```' → logprob: -8.647778511047363

Token 13: ' Y' (ID: 865)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08245240151882172
    2. ' 
' → logprob: -3.7074522972106934
    3. '#' → logprob: -4.207452297210693
    4. ' #' → logprob: -4.707452297210693
    5. '<|end|>' → logprob: -5.082452297210693
    6. ' ' → logprob: -5.582452297210693
    7. ' trouver' → logprob: -6.582452297210693
    8. ' class' → logprob: -6.582452297210693
    9. '  
' → logprob: -6.582452297210693
    10. ' code' → logprob: -6.707452297210693

Token 14: 'ae' (ID: 10202)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0529770851135254
    2. 'ou' → logprob: -1.3029770851135254
    3. 'a' → logprob: -1.9279770851135254
    4. ' =' → logprob: -1.9279770851135254
    5. 'our' → logprob: -3.9279770851135254
    6. 'eux' → logprob: -4.302977085113525
    7. '```' → logprob: -4.427977085113525
    8. ' a' → logprob: -4.927977085113525
    9. 'o' → logprob: -5.052977085113525
    10. '#' → logprob: -5.177977085113525

Token 15: ' a' (ID: 261)
  Prédit: 'ux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ux' → logprob: -0.6822564601898193
    2. 's' → logprob: -0.9322564601898193
    3. 'x' → logprob: -3.3072564601898193
    4. '```' → logprob: -3.9322564601898193
    5. 'z' → logprob: -4.557256698608398
    6. 'ah' → logprob: -5.182256698608398
    7. 'u' → logprob: -5.182256698608398
    8. 'a' → logprob: -5.682256698608398
    9. 'n' → logprob: -5.807256698608398
    10. 'r' → logprob: -6.057256698608398

Token 16: ' A' (ID: 355)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.3369833827018738
    2. ' un' → logprob: -1.9619834423065186
    3. 'une' → logprob: -3.5869834423065186
    4. ' besoin' → logprob: -3.7119834423065186
    5. ' ' → logprob: -4.2119832038879395
    6. ' reçu' → logprob: -4.3369832038879395
    7. 'un' → logprob: -4.5869832038879395
    8. '#' → logprob: -4.7119832038879395
    9. 'ime' → logprob: -4.8369832038879395
    10. ' acheté' → logprob: -5.0869832038879395

Token 17: ' robes' (ID: 127604)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' un' → logprob: -1.4222428798675537
    2. ' une' → logprob: -2.4847428798675537
    3. ' ' → logprob: -2.6097428798675537
    4. 'u' → logprob: -2.7347428798675537
    5. 'ux' → logprob: -3.2972428798675537
    6. 'd' → logprob: -3.5472428798675537
    7. 'ime' → logprob: -3.5472428798675537
    8. '```' → logprob: -3.9222428798675537
    9. 'pp' → logprob: -3.9847428798675537
    10. 's' → logprob: -3.9847428798675537

Token 18: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5132240056991577
    2. ' à' → logprob: -1.5132240056991577
    3. '.' → logprob: -1.6382240056991577
    4. 's' → logprob: -2.0132241249084473
    5. ' et' → logprob: -2.3882241249084473
    6. 'et' → logprob: -3.6382241249084473
    7. ' ,' → logprob: -3.8882241249084473
    8. ' de' → logprob: -4.388224124908447
    9. 'à' → logprob: -4.763224124908447
    10. ' ' → logprob: -5.388224124908447

Token 19: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -1.0716445446014404
    2. ' B' → logprob: -1.8216445446014404
    3. 'P' → logprob: -2.0716445446014404
    4. ' P' → logprob: -2.6966445446014404
    5. 'D' → logprob: -2.9466445446014404
    6. 'N' → logprob: -3.3216445446014404
    7. ' D' → logprob: -3.6966445446014404
    8. 'M' → logprob: -3.9466445446014404
    9. ' M' → logprob: -4.1966447830200195
    10. ' N' → logprob: -4.1966447830200195

Token 20: ' fêtes' (ID: 130551)
  Prédit: ' pantal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pantal' → logprob: -0.4163423478603363
    2. 'p' → logprob: -1.9163423776626587
    3. ' chem' → logprob: -3.541342258453369
    4. ' chaussures' → logprob: -3.666342258453369
    5. 'chem' → logprob: -4.228842258453369
    6. ' j' → logprob: -4.291342258453369
    7. ' cr' → logprob: -4.416342258453369
    8. 'cr' → logprob: -4.666342258453369
    9. ' vest' → logprob: -4.791342258453369
    10. ' costumes' → logprob: -4.916342258453369

Token 21: '.' (ID: 13)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3176741302013397
    2. '.' → logprob: -1.317674160003662
    3. ' ,' → logprob: -5.942674160003662
    4. ' ' → logprob: -7.692674160003662
    5. '<|end|>' → logprob: -7.817674160003662
    6. '```' → logprob: -8.442673683166504
    7. ' .' → logprob: -8.567673683166504
    8. 'a' → logprob: -8.817673683166504
    9. 's' → logprob: -9.692673683166504
    10. ' a' → logprob: -9.942673683166504

Token 22: ' Elle' (ID: 21300)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.619315505027771
    2. '.' → logprob: -1.244315505027771
    3. 'a' → logprob: -2.3693156242370605
    4. '#' → logprob: -3.4943156242370605
    5. ' ' → logprob: -4.3693156242370605
    6. '```' → logprob: -4.9943156242370605
    7. ' A' → logprob: -5.2443156242370605
    8. ' a' → logprob: -5.2443156242370605
    9. 'A' → logprob: -5.3693156242370605
    10. ' ,' → logprob: -5.6193156242370605

Token 23: ' veut' (ID: 41653)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9973238110542297
    2. 've' → logprob: -1.372323751449585
    3. ' veut' → logprob: -1.622323751449585
    4. ' a' → logprob: -1.997323751449585
    5. ' souhaite' → logprob: -4.122323989868164
    6. ' doit' → logprob: -4.997323989868164
    7. 'veux' → logprob: -5.122323989868164
    8. 'voud' → logprob: -5.247323989868164
    9. 'sou' → logprob: -5.997323989868164
    10. 'do' → logprob: -6.622323989868164

Token 24: ' réduire' (ID: 78295)
  Prédit: ' assister'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' assister' → logprob: -0.6103478074073792
    2. ' participer' → logprob: -1.3603477478027344
    3. ' aller' → logprob: -2.3603477478027344
    4. 'particip' → logprob: -3.6103477478027344
    5. ' savoir' → logprob: -4.735347747802734
    6. ' choisir' → logprob: -4.735347747802734
    7. ' acheter' → logprob: -4.735347747802734
    8. ' ' → logprob: -5.360347747802734
    9. ' porter' → logprob: -5.360347747802734
    10. 'ass' → logprob: -5.485347747802734

Token 25: ' au' (ID: 2791)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5702911019325256
    2. ' le' → logprob: -1.4452910423278809
    3. 'le' → logprob: -2.945291042327881
    4. ' ' → logprob: -3.570291042327881
    5. ' au' → logprob: -3.695291042327881
    6. ' l' → logprob: -3.945291042327881
    7. ' les' → logprob: -4.445291042327881
    8. ' son' → logprob: -4.695291042327881
    9. '_' → logprob: -5.070291042327881
    10. 's' → logprob: -5.195291042327881

Token 26: ' minimum' (ID: 11085)
  Prédit: ' moins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' moins' → logprob: -0.8469880819320679
    2. 'moins' → logprob: -0.9719880819320679
    3. ' maximum' → logprob: -2.2219882011413574
    4. ' minimum' → logprob: -2.9719882011413574
    5. 'maximum' → logprob: -4.346988201141357
    6. 'minimum' → logprob: -4.596988201141357
    7. ' ' → logprob: -5.721988201141357
    8. '```' → logprob: -6.346988201141357
    9. 'max' → logprob: -6.721988201141357
    10. '   ' → logprob: -6.846988201141357

Token 27: ' possible' (ID: 4149)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.859887957572937
    2. ' l' → logprob: -1.109887957572937
    3. 'le' → logprob: -1.984887957572937
    4. ' la' → logprob: -2.8598880767822266
    5. 'l' → logprob: -3.6098880767822266
    6. ' les' → logprob: -5.109888076782227
    7. ' ' → logprob: -5.484888076782227
    8. ' son' → logprob: -5.484888076782227
    9. ' ' → logprob: -5.859888076782227
    10. 'la' → logprob: -6.234888076782227

Token 28: '
' (ID: 198)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.3955411911010742
    2. 'le' → logprob: -1.7705411911010742
    3. ' la' → logprob: -2.520541191101074
    4. ' l' → logprob: -3.645541191101074
    5. 's' → logprob: -4.270541191101074
    6. ' ' → logprob: -4.645541191101074
    7. 'l' → logprob: -4.645541191101074
    8. ' les' → logprob: -5.270541191101074
    9. ' ' → logprob: -5.645541191101074
    10. ' de' → logprob: -6.520541191101074

Token 29: '#' (ID: 2)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.8152396082878113
    2. ' la' → logprob: -0.9402396082878113
    3. ' ' → logprob: -2.690239667892456
    4. ' l' → logprob: -3.065239667892456
    5. ' ' → logprob: -4.315239429473877
    6. 'le' → logprob: -4.565239429473877
    7. ' les' → logprob: -4.690239429473877
    8. ' de' → logprob: -5.690239429473877
    9. 'l' → logprob: -6.065239429473877
    10. 's' → logprob: -6.190239429473877

Token 30: ' la' (ID: 557)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.8608299493789673
    2. ' la' → logprob: -0.8608299493789673
    3. ' de' → logprob: -2.7358298301696777
    4. ' l' → logprob: -3.6108298301696777
    5. ' ' → logprob: -4.235829830169678
    6. ' les' → logprob: -4.360829830169678
    7. 's' → logprob: -4.485829830169678
    8. 'le' → logprob: -4.860829830169678
    9. ' leur' → logprob: -5.735829830169678
    10. ' d' → logprob: -5.860829830169678

Token 31: ' fréquence' (ID: 174518)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5439139008522034
    2. ' ' → logprob: -2.1689138412475586
    3. ' nombre' → logprob: -2.7939138412475586
    4. ' ' → logprob: -2.9189138412475586
    5. '  ' → logprob: -3.7939138412475586
    6. '#' → logprob: -4.043913841247559
    7. '   ' → logprob: -4.168913841247559
    8. ' différence' → logprob: -4.168913841247559
    9. 'n' → logprob: -4.418913841247559
    10. 'nombre' → logprob: -4.481413841247559

Token 32: ' maximale' (ID: 76380)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.9190763235092163
    2. ' des' → logprob: -1.4190763235092163
    3. ' d' → logprob: -1.4190763235092163
    4. ' ' → logprob: -2.419076442718506
    5. 'de' → logprob: -4.919076442718506
    6. 'd' → logprob: -5.169076442718506
    7. 'des' → logprob: -5.294076442718506
    8. 's' → logprob: -5.919076442718506
    9. ' maximale' → logprob: -6.544076442718506
    10. '```' → logprob: -6.919076442718506

Token 33: ' d' (ID: 272)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7154577374458313
    2. ' de' → logprob: -1.2154576778411865
    3. ' d' → logprob: -1.5904576778411865
    4. ' des' → logprob: -5.090457916259766
    5. '_' → logprob: -7.215457916259766
    6. '  ' → logprob: -7.340457916259766
    7. '.' → logprob: -7.465457916259766
    8. '<|end|>' → logprob: -7.715457916259766
    9. 's' → logprob: -8.090457916259766
    10. ' du' → logprob: -8.465457916259766

Token 34: ''utilisation' (ID: 73991)
  Prédit: ''appar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''appar' → logprob: -0.24424168467521667
    2. ''une' → logprob: -2.369241714477539
    3. 'e' → logprob: -2.869241714477539
    4. 'a' → logprob: -4.369241714477539
    5. 'une' → logprob: -4.619241714477539
    6. ''utilisation' → logprob: -4.744241714477539
    7. ''' → logprob: -4.869241714477539
    8. ''occ' → logprob: -5.369241714477539
    9. 'appar' → logprob: -5.494241714477539
    10. 'u' → logprob: -6.119241714477539

Token 35: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.745939314365387
    2. ' ' → logprob: -1.3709392547607422
    3. '.' → logprob: -1.9959392547607422
    4. ' d' → logprob: -2.245939254760742
    5. ' des' → logprob: -4.120939254760742
    6. 's' → logprob: -5.120939254760742
    7. '_' → logprob: -6.620939254760742
    8. 'd' → logprob: -6.870939254760742
    9. ',' → logprob: -6.995939254760742
    10. '  ' → logprob: -7.620939254760742

Token 36: ''une' (ID: 13337)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.2720438539981842
    2. 'es' → logprob: -2.1470439434051514
    3. ''une' → logprob: -2.3970439434051514
    4. ''' → logprob: -4.897043704986572
    5. 'u' → logprob: -5.272043704986572
    6. ''un' → logprob: -5.522043704986572
    7. 'a' → logprob: -5.772043704986572
    8. 'une' → logprob: -5.897043704986572
    9. ' chacune' → logprob: -6.772043704986572
    10. '’une' → logprob: -6.897043704986572

Token 37: ' même' (ID: 9679)
  Prédit: ' robe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' robe' → logprob: -0.1381407082080841
    2. 'robe' → logprob: -2.7631406784057617
    3. ' même' → logprob: -3.3881406784057617
    4. ' ' → logprob: -4.263140678405762
    5. ' rob' → logprob: -4.388140678405762
    6. ' des' → logprob: -6.763140678405762
    7. 'rob' → logprob: -7.013140678405762
    8. ' ' → logprob: -7.575640678405762
    9. '```' → logprob: -7.763140678405762
    10. 'robes' → logprob: -7.950640678405762

Token 38: ' robe' (ID: 71960)
  Prédit: ' robe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' robe' → logprob: -0.1043882966041565
    2. 'robe' → logprob: -2.4793882369995117
    3. ' rob' → logprob: -4.479388236999512
    4. ' ' → logprob: -6.229388236999512
    5. 'rob' → logprob: -7.354388236999512
    6. 'r' → logprob: -8.479388236999512
    7. ' ' → logprob: -8.854388236999512
    8. '```' → logprob: -8.854388236999512
    9. 'robes' → logprob: -8.854388236999512
    10. ' Rob' → logprob: -9.104388236999512

Token 39: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.10762393474578857
    2. ',' → logprob: -2.357624053955078
    3. ' .' → logprob: -5.982624053955078
    4. ' ,' → logprob: -6.357624053955078
    5. '#' → logprob: -7.232624053955078
    6. ':' → logprob: -7.607624053955078
    7. ' ' → logprob: -7.857624053955078
    8. '\' → logprob: -8.357624053955078
    9. ' afin' → logprob: -8.357624053955078
    10. '```' → logprob: -8.357624053955078

Token 40: ' sachant' (ID: 174239)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.1618340015411377
    2. ' en' → logprob: -1.2868340015411377
    3. ' c' → logprob: -2.0368340015411377
    4. ' afin' → logprob: -2.2868340015411377
    5. ',' → logprob: -2.7868340015411377
    6. ' ' → logprob: -2.7868340015411377
    7. ' .' → logprob: -4.661833763122559
    8. ' ,' → logprob: -5.036833763122559
    9. ' pour' → logprob: -5.161833763122559
    10. ' i' → logprob: -5.411833763122559

Token 41: ' qu' (ID: 474)
  Prédit: ' que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.3362322747707367
    2. ' qu' → logprob: -1.711232304573059
    3. ' ' → logprob: -2.4612321853637695
    4. ' ' → logprob: -4.8362321853637695
    5. '  ' → logprob: -5.8362321853637695
    6. ' that' → logprob: -6.3362321853637695
    7. '#' → logprob: -6.8362321853637695
    8. '```' → logprob: -7.2112321853637695
    9. 'que' → logprob: -7.5862321853637695
    10. ' une' → logprob: -7.7112321853637695

Token 42: ''elle' (ID: 36421)
  Prédit: ''elle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''elle' → logprob: -0.585361123085022
    2. ''il' → logprob: -1.835361123085022
    3. 'e' → logprob: -1.960361123085022
    4. ''' → logprob: -3.2103610038757324
    5. 'il' → logprob: -4.335361003875732
    6. ''elles' → logprob: -4.460361003875732
    7. 'u' → logprob: -4.585361003875732
    8. ''on' → logprob: -4.585361003875732
    9. 'une' → logprob: -4.710361003875732
    10. ''une' → logprob: -4.710361003875732

Token 43: ' doit' (ID: 21822)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.4420199394226074
    2. 'a' → logprob: -1.5670199394226074
    3. ' doit' → logprob: -2.0670199394226074
    4. ' ne' → logprob: -2.1920199394226074
    5. 'n' → logprob: -2.5670199394226074
    6. 'ne' → logprob: -2.8170199394226074
    7. ' possède' → logprob: -3.5670199394226074
    8. ' veut' → logprob: -3.6920199394226074
    9. 'poss' → logprob: -4.067019939422607
    10. 'do' → logprob: -4.067019939422607

Token 44: '
' (ID: 198)
  Prédit: ' utiliser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' utiliser' → logprob: -0.43603572249412537
    2. '<|end|>' → logprob: -2.061035633087158
    3. ' porter' → logprob: -2.311035633087158
    4. ' participer' → logprob: -4.311035633087158
    5. ' ' → logprob: -4.686035633087158
    6. 's' → logprob: -4.686035633087158
    7. 'n' → logprob: -4.686035633087158
    8. ' ' → logprob: -4.936035633087158
    9. 'porter' → logprob: -5.311035633087158
    10. ' les' → logprob: -5.311035633087158

Token 45: '#' (ID: 2)
  Prédit: ' utiliser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' utiliser' → logprob: -0.5857473015785217
    2. ' continuer' → logprob: -2.585747241973877
    3. ' porter' → logprob: -2.835747241973877
    4. ' les' → logprob: -2.960747241973877
    5. ' ' → logprob: -3.210747241973877
    6. ' ' → logprob: -3.460747241973877
    7. ' être' → logprob: -3.460747241973877
    8. ' participer' → logprob: -3.960747241973877
    9. ' rester' → logprob: -4.585747241973877
    10. '<|end|>' → logprob: -4.835747241973877

Token 46: ' couvrir' (ID: 197187)
  Prédit: ' porter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' porter' → logprob: -1.023801326751709
    2. ' participer' → logprob: -1.273801326751709
    3. ' assister' → logprob: -1.398801326751709
    4. ' les' → logprob: -3.023801326751709
    5. ' utiliser' → logprob: -3.773801326751709
    6. 'particip' → logprob: -4.773801326751709
    7. ' aller' → logprob: -5.273801326751709
    8. ' ass' → logprob: -5.898801326751709
    9. ' ' → logprob: -6.023801326751709
    10. ' particip' → logprob: -6.148801326751709

Token 47: ' toutes' (ID: 17502)
  Prédit: ' toutes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' toutes' → logprob: -0.043122176080942154
    2. ' ' → logprob: -4.543122291564941
    3. ' chaque' → logprob: -4.793122291564941
    4. 't' → logprob: -4.918122291564941
    5. ' ' → logprob: -5.418122291564941
    6. ' tous' → logprob: -5.793122291564941
    7. ' chacune' → logprob: -6.293122291564941
    8. ' all' → logprob: -6.418122291564941
    9. 'tout' → logprob: -6.418122291564941
    10. ' tout' → logprob: -7.168122291564941

Token 48: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.08169224858283997
    2. 'les' → logprob: -2.5816922187805176
    3. ' ' → logprob: -6.706692218780518
    4. ' ' → logprob: -7.456692218780518
    5. 's' → logprob: -7.956692218780518
    6. 'es' → logprob: -9.206692695617676
    7. '<|end|>' → logprob: -9.331692695617676
    8. 'l' → logprob: -9.769192695617676
    9. ' ces' → logprob: -9.956692695617676
    10. ' toutes' → logprob: -10.456692695617676

Token 49: ' fêtes' (ID: 130551)
  Prédit: ' fêtes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fêtes' → logprob: -0.06735346466302872
    2. ' ' → logprob: -3.5673534870147705
    3. ' B' → logprob: -4.067353248596191
    4. 'f' → logprob: -4.692353248596191
    5. ' f' → logprob: -5.942353248596191
    6. 'B' → logprob: -6.067353248596191
    7. ' soirées' → logprob: -6.192353248596191
    8. ' fête' → logprob: -7.067353248596191
    9. ' fiestas' → logprob: -7.192353248596191
    10. ' festas' → logprob: -7.692353248596191

Token 50: ' avec' (ID: 3937)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6352031230926514
    2. '#' → logprob: -1.7602031230926514
    3. ',' → logprob: -2.3852031230926514
    4. ':' → logprob: -2.5102031230926514
    5. 'def' → logprob: -2.7602031230926514
    6. '\' → logprob: -4.1352033615112305
    7. '```' → logprob: -4.2602033615112305
    8. '_' → logprob: -5.3852033615112305
    9. 'n' → logprob: -5.3852033615112305
    10. '
' → logprob: -5.5102033615112305

Token 51: ' ses' (ID: 6707)
  Prédit: ' au'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' au' → logprob: -0.1995282918214798
    2. ' une' → logprob: -2.824528217315674
    3. ' des' → logprob: -3.699528217315674
    4. ' toutes' → logprob: -3.824528217315674
    5. ' les' → logprob: -3.824528217315674
    6. 'au' → logprob: -4.074528217315674
    7. ' chacune' → logprob: -4.699528217315674
    8. ' un' → logprob: -5.324528217315674
    9. ' at' → logprob: -5.574528217315674
    10. ' ' → logprob: -5.824528217315674

Token 52: ' robes' (ID: 127604)
  Prédit: ' robes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' robes' → logprob: -0.4041299819946289
    2. 'robes' → logprob: -1.154129981994629
    3. ' A' → logprob: -4.904129981994629
    4. ' ' → logprob: -5.654129981994629
    5. 'd' → logprob: -6.529129981994629
    6. 'A' → logprob: -6.779129981994629
    7. 'rob' → logprob: -6.904129981994629
    8. ' rob' → logprob: -7.529129981994629
    9. ' vêtements' → logprob: -8.029129981994629
    10. '```' → logprob: -8.154129981994629

Token 53: '.' (ID: 13)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5987624526023865
    2. 'def' → logprob: -1.2237625122070312
    3. '
' → logprob: -3.4737625122070312
    4. '.' → logprob: -3.8487625122070312
    5. ',' → logprob: -4.098762512207031
    6. '\' → logprob: -4.348762512207031
    7. 'd' → logprob: -4.348762512207031
    8. ':' → logprob: -4.598762512207031
    9. '```' → logprob: -4.723762512207031
    10. 'import' → logprob: -4.723762512207031

Token 54: ' Aut' (ID: 8517)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.40273940563201904
    2. '#' → logprob: -2.4027395248413086
    3. '.' → logprob: -2.6527395248413086
    4. '```' → logprob: -2.7777395248413086
    5. ',' → logprob: -3.9027395248413086
    6. ':' → logprob: -3.9027395248413086
    7. '
' → logprob: -4.152739524841309
    8. 'A' → logprob: -4.902739524841309
    9. 'd' → logprob: -5.027739524841309
    10. 'import' → logprob: -5.527739524841309

Token 55: 'rement' (ID: 66132)
  Prédit: 'ant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.36975759267807007
    2. 'rement' → logprob: -1.8697576522827148
    3. 're' → logprob: -2.869757652282715
    4. 'or' → logprob: -3.869757652282715
    5. '#' → logprob: -3.994757652282715
    6. 'res' → logprob: -4.494757652282715
    7. 'e' → logprob: -4.619757652282715
    8. 'r' → logprob: -4.744757652282715
    9. 'oris' → logprob: -5.119757652282715
    10. 'es' → logprob: -5.244757652282715

Token 56: ' dit' (ID: 4758)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2723831832408905
    2. ' dit' → logprob: -1.522383213043213
    3. 'dit' → logprob: -5.397383213043213
    4. ' ' → logprob: -5.772383213043213
    5. 's' → logprob: -6.022383213043213
    6. ' ,' → logprob: -6.147383213043213
    7. ':' → logprob: -6.272383213043213
    8. ' ' → logprob: -6.772383213043213
    9. ' said' → logprob: -7.022383213043213
    10. '-' → logprob: -7.522383213043213

Token 57: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014504294842481613
    2. ' ,' → logprob: -4.389504432678223
    3. ' la' → logprob: -7.014504432678223
    4. ' ' → logprob: -7.264504432678223
    5. ' le' → logprob: -9.514504432678223
    6. ' l' → logprob: -9.764504432678223
    7. ' ' → logprob: -9.889504432678223
    8. ' elle' → logprob: -10.264504432678223
    9. ' il' → logprob: -10.514504432678223
    10. '  ' → logprob: -10.764504432678223

Token 58: ' on' (ID: 402)
  Prédit: ' elle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' elle' → logprob: -0.17499308288097382
    2. 'elle' → logprob: -2.6749930381774902
    3. 'il' → logprob: -3.1749930381774902
    4. ' il' → logprob: -3.2999930381774902
    5. ' comment' → logprob: -6.67499303817749
    6. ' on' → logprob: -6.79999303817749
    7. ' pour' → logprob: -7.04999303817749
    8. '```' → logprob: -7.04999303817749
    9. ' trouver' → logprob: -7.17499303817749
    10. ' le' → logprob: -7.29999303817749

Token 59: ' cherche' (ID: 52345)
  Prédit: ' veut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' veut' → logprob: -0.5457033514976501
    2. ' doit' → logprob: -1.170703411102295
    3. ' souhaite' → logprob: -2.545703411102295
    4. ' veux' → logprob: -5.170703411102295
    5. ' ' → logprob: -5.295703411102295
    6. ' a' → logprob: -5.545703411102295
    7. ' ne' → logprob: -6.420703411102295
    8. ' cherche' → logprob: -6.420703411102295
    9. ' devra' → logprob: -6.545703411102295
    10. ' ' → logprob: -6.670703411102295

Token 60: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.32276809215545654
    2. 'à' → logprob: -1.6977680921554565
    3. ' la' → logprob: -3.447768211364746
    4. ' une' → logprob: -3.947768211364746
    5. ' a' → logprob: -4.322768211364746
    6. 'une' → logprob: -4.947768211364746
    7. ' ' → logprob: -5.447768211364746
    8. 'la' → logprob: -5.572768211364746
    9. 'a' → logprob: -5.697768211364746
    10. ' un' → logprob: -5.822768211364746

Token 61: ' minim' (ID: 23874)
  Prédit: ' minim'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' minim' → logprob: -0.12667407095432281
    2. ' répart' → logprob: -3.251674175262451
    3. ' utiliser' → logprob: -4.001674175262451
    4. ' assign' → logprob: -5.251674175262451
    5. ' garantir' → logprob: -5.376674175262451
    6. ' réduire' → logprob: -5.376674175262451
    7. ' affect' → logprob: -5.626674175262451
    8. ' trouver' → logprob: -5.626674175262451
    9. ' pouvoir' → logprob: -5.751674175262451
    10. 'min' → logprob: -5.751674175262451

Token 62: 'iser' (ID: 7466)
  Prédit: 'ser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ser' → logprob: -0.008871828205883503
    2. 's' → logprob: -4.883872032165527
    3. 'm' → logprob: -6.883872032165527
    4. 'se' → logprob: -8.508872032165527
    5. 'iser' → logprob: -10.883872032165527
    6. '#' → logprob: -12.133872032165527
    7. 'u' → logprob: -12.758872032165527
    8. 'r' → logprob: -12.883872032165527
    9. 'zer' → logprob: -13.008872032165527
    10. '```' → logprob: -13.508872032165527

Token 63: '
' (ID: 198)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.4188896119594574
    2. ' ' → logprob: -2.1688895225524902
    3. ' l' → logprob: -2.1688895225524902
    4. ' le' → logprob: -3.1688895225524902
    5. ' ' → logprob: -3.5438895225524902
    6. 'l' → logprob: -4.66888952255249
    7. '_' → logprob: -4.66888952255249
    8. 'la' → logprob: -4.91888952255249
    9. 'le' → logprob: -5.16888952255249
    10. ' _' → logprob: -5.54388952255249

Token 64: '#' (ID: 2)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.20169486105442047
    2. ' ' → logprob: -2.826694965362549
    3. 'la' → logprob: -3.201694965362549
    4. 'le' → logprob: -3.951694965362549
    5. ' ' → logprob: -4.076694965362549
    6. ' le' → logprob: -4.326694965362549
    7. ' l' → logprob: -4.326694965362549
    8. 'l' → logprob: -4.451694965362549
    9. '_' → logprob: -5.826694965362549
    10. 'max' → logprob: -5.951694965362549

Token 65: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.08066530525684357
    2. ' ' → logprob: -3.080665349960327
    3. ' le' → logprob: -4.705665111541748
    4. ' ' → logprob: -4.830665111541748
    5. 'la' → logprob: -4.830665111541748
    6. ' l' → logprob: -5.580665111541748
    7. 'le' → logprob: -6.705665111541748
    8. 'l' → logprob: -6.830665111541748
    9. 'max' → logprob: -9.330665588378906
    10. ' #' → logprob: -9.455665588378906

Token 66: ' maximum' (ID: 10562)
  Prédit: ' nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.1047823503613472
    2. ' maximum' → logprob: -2.4797823429107666
    3. ' max' → logprob: -5.104782581329346
    4. 'nombre' → logprob: -5.229782581329346
    5. 'maximum' → logprob: -6.354782581329346
    6. ' maximal' → logprob: -6.854782581329346
    7. 'max' → logprob: -7.354782581329346
    8. ' maximale' → logprob: -8.479782104492188
    9. ' maxi' → logprob: -8.854782104492188
    10. ' nombres' → logprob: -9.104782104492188

Token 67: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.2519059181213379
    2. ' de' → logprob: -2.126905918121338
    3. '_' → logprob: -2.751905918121338
    4. 'd' → logprob: -4.501905918121338
    5. '_usage' → logprob: -4.751905918121338
    6. '_d' → logprob: -5.626905918121338
    7. ' usage' → logprob: -5.751905918121338
    8. 'de' → logprob: -5.876905918121338
    9. ' des' → logprob: -6.876905918121338
    10. '<|end|>' → logprob: -7.001905918121338

Token 68: ''util' (ID: 37761)
  Prédit: ''utilisation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisation' → logprob: -0.28482335805892944
    2. ''' → logprob: -1.6598234176635742
    3. 'e' → logprob: -3.284823417663574
    4. ''une' → logprob: -5.284823417663574
    5. ''util' → logprob: -5.284823417663574
    6. '’utilisation' → logprob: -5.659823417663574
    7. 'u' → logprob: -6.034823417663574
    8. ''u' → logprob: -6.534823417663574
    9. ''un' → logprob: -7.159823417663574
    10. ''utilisateur' → logprob: -8.034823417663574

Token 69: 'isations' (ID: 59651)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.003737018210813403
    2. 'sat' → logprob: -6.003736972808838
    3. 'sé' → logprob: -7.003736972808838
    4. 'se' → logprob: -9.878737449645996
    5. 'sa' → logprob: -10.128737449645996
    6. 'sal' → logprob: -10.128737449645996
    7. 'sage' → logprob: -10.378737449645996
    8. 'sam' → logprob: -10.378737449645996
    9. '#' → logprob: -11.128737449645996
    10. '```' → logprob: -11.128737449645996

Token 70: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.030236132442951202
    2. 'd' → logprob: -3.90523624420166
    3. '_' → logprob: -5.90523624420166
    4. ' possible' → logprob: -5.90523624420166
    5. ' de' → logprob: -7.15523624420166
    6. '_possible' → logprob: -7.40523624420166
    7. 'possible' → logprob: -7.65523624420166
    8. 'import' → logprob: -8.03023624420166
    9. '_d' → logprob: -8.03023624420166
    10. ' ' → logprob: -8.28023624420166

Token 71: ''une' (ID: 13337)
  Prédit: ''une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''une' → logprob: -0.03478410467505455
    2. ''' → logprob: -4.534784317016602
    3. 'une' → logprob: -4.659784317016602
    4. 'e' → logprob: -5.159784317016602
    5. ''un' → logprob: -5.534784317016602
    6. '’une' → logprob: -5.909784317016602
    7. 'a' → logprob: -7.159784317016602
    8. 'u' → logprob: -7.784784317016602
    9. '```' → logprob: -8.659784317016602
    10. ''u' → logprob: -9.784784317016602

Token 72: ' robe' (ID: 71960)
  Prédit: ' même'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' même' → logprob: -0.04178518056869507
    2. ' robe' → logprob: -3.91678524017334
    3. 'm' → logprob: -4.54178524017334
    4. 'robe' → logprob: -4.79178524017334
    5. ' rob' → logprob: -7.41678524017334
    6. '```' → logprob: -7.79178524017334
    7. ' ' → logprob: -8.29178524017334
    8. ' m' → logprob: -8.66678524017334
    9. 'rob' → logprob: -8.79178524017334
    10. ' even' → logprob: -9.41678524017334

Token 73: ' sachant' (ID: 174239)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4596506953239441
    2. ',' → logprob: -1.4596507549285889
    3. ':' → logprob: -3.084650754928589
    4. 's' → logprob: -3.459650754928589
    5. '\' → logprob: -4.08465051651001
    6. ' ' → logprob: -4.33465051651001
    7. '#' → logprob: -4.58465051651001
    8. '_' → logprob: -5.08465051651001
    9. '```' → logprob: -5.95965051651001
    10. '<|end|>' → logprob: -6.58465051651001

Token 74: ' qu' (ID: 474)
  Prédit: ' qu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' qu' → logprob: -0.09034231305122375
    2. ' que' → logprob: -2.7153422832489014
    3. '#' → logprob: -4.9653425216674805
    4. 'qu' → logprob: -5.0903425216674805
    5. ' ' → logprob: -6.4653425216674805
    6. ' ' → logprob: -6.5903425216674805
    7. 'que' → logprob: -6.9653425216674805
    8. ' #' → logprob: -7.2153425216674805
    9. '_' → logprob: -7.8403425216674805
    10. '```' → logprob: -7.9653425216674805

Token 75: ''on' (ID: 25812)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.4677082300186157
    2. ''elle' → logprob: -1.3427082300186157
    3. ''il' → logprob: -2.967708110809326
    4. ''on' → logprob: -3.467708110809326
    5. ''une' → logprob: -5.092708110809326
    6. '#' → logprob: -5.467708110809326
    7. 'u' → logprob: -5.592708110809326
    8. 'e' → logprob: -5.842708110809326
    9. ''un' → logprob: -6.092708110809326
    10. ''u' → logprob: -6.217708110809326

Token 76: ' a' (ID: 261)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4929240643978119
    2. ' a' → logprob: -1.6179240942001343
    3. ' doit' → logprob: -2.7429239749908447
    4. 'a' → logprob: -3.3679239749908447
    5. 'do' → logprob: -3.9929239749908447
    6. '#' → logprob: -4.492924213409424
    7. ' peut' → logprob: -4.742924213409424
    8. ' utilise' → logprob: -4.867924213409424
    9. ' do' → logprob: -5.242924213409424
    10. ' puisse' → logprob: -5.867924213409424

Token 77: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -1.1138983964920044
    2. ' ' → logprob: -1.2388983964920044
    3. ' au' → logprob: -1.9888983964920044
    4. ' une' → logprob: -2.488898277282715
    5. ' a' → logprob: -2.863898277282715
    6. ' un' → logprob: -3.113898277282715
    7. '_' → logprob: -4.988898277282715
    8. 'au' → logprob: -4.988898277282715
    9. ' suffisamment' → logprob: -5.363898277282715
    10. ' à' → logprob: -5.488898277282715

Token 78: ' robes' (ID: 127604)
  Prédit: ' robes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' robes' → logprob: -0.5365986824035645
    2. ' ' → logprob: -1.5365986824035645
    3. ' des' → logprob: -2.4115986824035645
    4. ' et' → logprob: -3.9115986824035645
    5. ' a' → logprob: -4.0365986824035645
    6. ' au' → logprob: -4.7865986824035645
    7. '  ' → logprob: -5.1615986824035645
    8. 'robes' → logprob: -5.2865986824035645
    9. 's' → logprob: -5.8490986824035645
    10. ' espaces' → logprob: -5.9115986824035645

Token 79: ' et' (ID: 859)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.0079822540283203
    2. ',' → logprob: -1.1329822540283203
    3. ' ' → logprob: -2.5079822540283203
    4. '#' → logprob: -2.7579822540283203
    5. '_' → logprob: -3.2579822540283203
    6. ':' → logprob: -3.6329822540283203
    7. ' 

' → logprob: -4.00798225402832
    8. '\' → logprob: -4.00798225402832
    9. 'def' → logprob: -4.25798225402832
    10. 'n' → logprob: -5.00798225402832

Token 80: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.016218768432736397
    2. 'B' → logprob: -4.641218662261963
    3. ' ' → logprob: -5.141218662261963
    4. ' ' → logprob: -8.016219139099121
    5. ' des' → logprob: -10.016219139099121
    6. ' un' → logprob: -10.391219139099121
    7. ' A' → logprob: -10.641219139099121
    8. ' a' → logprob: -10.891219139099121
    9. '\' → logprob: -10.891219139099121
    10. ' une' → logprob: -11.141219139099121

Token 81: ' utilis' (ID: 18688)
  Prédit: ' fêtes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' fêtes' → logprob: -0.10617144405841827
    2. ' ' → logprob: -2.8561713695526123
    3. 'f' → logprob: -3.9811713695526123
    4. ' f' → logprob: -4.731171607971191
    5. ' robes' → logprob: -5.356171607971191
    6. '_f' → logprob: -5.481171607971191
    7. '_' → logprob: -5.481171607971191
    8. ' ' → logprob: -7.231171607971191
    9. ' fiestas' → logprob: -8.356171607971191
    10. '  ' → logprob: -8.606171607971191

Token 82: 'ations' (ID: 929)
  Prédit: 'ations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ations' → logprob: -0.001010184409096837
    2. 'a' → logprob: -8.126009941101074
    3. 'és' → logprob: -8.626009941101074
    4. 'es' → logprob: -8.876009941101074
    5. 'ation' → logprob: -9.626009941101074
    6. 'ées' → logprob: -9.751009941101074
    7. 'atio' → logprob: -10.126009941101074
    8. ' at' → logprob: -10.251009941101074
    9. 'at' → logprob: -10.376009941101074
    10. '```' → logprob: -10.376009941101074

Token 83: ' à' (ID: 1221)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.285998672246933
    2. ',' → logprob: -2.660998582839966
    3. '#' → logprob: -3.035998582839966
    4. ' ' → logprob: -3.285998582839966
    5. ':' → logprob: -3.535998582839966
    6. 'def' → logprob: -3.785998582839966
    7. 'import' → logprob: -4.410998821258545
    8. ' 

' → logprob: -5.285998821258545
    9. ' ' → logprob: -5.410998821258545
    10. ' :' → logprob: -5.910998821258545

Token 84: ' couvrir' (ID: 197187)
  Prédit: 'ré'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ré' → logprob: -0.6564799547195435
    2. 'faire' → logprob: -1.0314799547195435
    3. 'assign' → logprob: -3.156479835510254
    4. 'effect' → logprob: -3.656479835510254
    5. 'attrib' → logprob: -4.781479835510254
    6. 'dis' → logprob: -4.906479835510254
    7. ' répart' → logprob: -4.906479835510254
    8. 'ass' → logprob: -5.156479835510254
    9. ' couvrir' → logprob: -5.156479835510254
    10. 'c' → logprob: -5.531479835510254

Token 85: '.

' (ID: 364)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0011030435562134
    2. 'def' → logprob: -1.1261030435562134
    3. '
' → logprob: -2.501102924346924
    4. ' 

' → logprob: -2.751102924346924
    5. ' ' → logprob: -3.251102924346924
    6. ' 
' → logprob: -4.001102924346924
    7. '

' → logprob: -4.126102924346924
    8. ',' → logprob: -4.126102924346924
    9. '\' → logprob: -4.376102924346924
    10. 'import' → logprob: -4.376102924346924

Token 86: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2038552165031433
    2. '#' → logprob: -2.203855276107788
    3. 'import' → logprob: -4.203855037689209
    4. '
' → logprob: -4.328855037689209
    5. ' 

' → logprob: -4.828855037689209
    6. '\' → logprob: -4.828855037689209
    7. '```' → logprob: -5.078855037689209
    8. 'a' → logprob: -5.328855037689209
    9. ' 
' → logprob: -5.453855037689209
    10. '

' → logprob: -5.703855037689209

Token 87: ' Analyse' (ID: 91441)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7999569773674011
    2. 'def' → logprob: -0.7999569773674011
    3. ' def' → logprob: -2.924957036972046
    4. 'import' → logprob: -4.174956798553467
    5. '#' → logprob: -4.299956798553467
    6. 'd' → logprob: -5.049956798553467
    7. ' import' → logprob: -6.424956798553467
    8. ' #' → logprob: -6.549956798553467
    9. ' d' → logprob: -6.674956798553467
    10. 'n' → logprob: -6.924956798553467

Token 88: ' :
' (ID: 10039)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.4926001727581024
    2. ':' → logprob: -1.1176002025604248
    3. '#' → logprob: -3.492600202560425
    4. '\' → logprob: -4.992599964141846
    5. ' :
' → logprob: -5.117599964141846
    6. ' de' → logprob: -5.492599964141846
    7. 'import' → logprob: -6.117599964141846
    8. ' :

' → logprob: -6.242599964141846
    9. ':
' → logprob: -6.492599964141846
    10. '\n' → logprob: -6.492599964141846

Token 89: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.04067280888557434
    2. ' #' → logprob: -4.040672779083252
    3. ' 
' → logprob: -4.665672779083252
    4. 'On' → logprob: -5.915672779083252
    5. ' Le' → logprob: -6.415672779083252
    6. ' 

' → logprob: -6.665672779083252
    7. ' On' → logprob: -6.790672779083252
    8. ' on' → logprob: -6.790672779083252
    9. 'def' → logprob: -7.040672779083252
    10. 'Le' → logprob: -7.540672779083252

Token 90: ' Chaque' (ID: 94758)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2407379299402237
    2. ' On' → logprob: -2.9907379150390625
    3. ' 
' → logprob: -3.2407379150390625
    4. 'On' → logprob: -3.3657379150390625
    5. ' #' → logprob: -3.7407379150390625
    6. ' Le' → logprob: -4.6157379150390625
    7. ' A' → logprob: -4.7407379150390625
    8. 'Pour' → logprob: -4.9907379150390625
    9. 'A' → logprob: -5.3657379150390625
    10. ' L' → logprob: -5.6157379150390625

Token 91: ' robe' (ID: 71960)
  Prédit: ' robe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' robe' → logprob: -0.5087422728538513
    2. 'robe' → logprob: -1.133742332458496
    3. 'f' → logprob: -4.008742332458496
    4. ' fête' → logprob: -4.008742332458496
    5. ' utilisation' → logprob: -5.008742332458496
    6. 'util' → logprob: -5.571242332458496
    7. ' rob' → logprob: -5.571242332458496
    8. 'rob' → logprob: -5.821242332458496
    9. ' usage' → logprob: -6.071242332458496
    10. ' ' → logprob: -6.258742332458496

Token 92: ' peut' (ID: 9216)
  Prédit: ' peut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' peut' → logprob: -0.1938645839691162
    2. ' doit' → logprob: -2.693864583969116
    3. ' a' → logprob: -2.943864583969116
    4. ' ' → logprob: -3.568864583969116
    5. ' pourra' → logprob: -4.568864822387695
    6. 'pe' → logprob: -5.068864822387695
    7. ' est' → logprob: -5.443864822387695
    8. ' peux' → logprob: -6.693864822387695
    9. ' devra' → logprob: -6.818864822387695
    10. ' sera' → logprob: -7.068864822387695

Token 93: ' être' (ID: 9104)
  Prédit: 'être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'être' → logprob: -0.3985360860824585
    2. ' être' → logprob: -1.1485360860824585
    3. ' servir' → logprob: -5.148536205291748
    4. ' au' → logprob: -6.898536205291748
    5. ' ' → logprob: -7.523536205291748
    6. 'êtres' → logprob: -7.523536205291748
    7. ' ' → logprob: -7.648536205291748
    8. ' couvrir' → logprob: -7.773536205291748
    9. ''être' → logprob: -7.898536205291748
    10. 'serv' → logprob: -8.02353572845459

Token 94: ' utilisée' (ID: 106548)
  Prédit: ' utilisée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' utilisée' → logprob: -0.20531313121318817
    2. 'util' → logprob: -1.7053130865097046
    3. ' portée' → logprob: -6.955313205718994
    4. 'port' → logprob: -7.080313205718994
    5. ' utilisées' → logprob: -7.955313205718994
    6. ' utilisé' → logprob: -7.955313205718994
    7. ' utilis' → logprob: -8.455312728881836
    8. 'part' → logprob: -8.830312728881836
    9. 'use' → logprob: -8.955312728881836
    10. ' ' → logprob: -9.080312728881836

Token 95: ' un' (ID: 537)
  Prédit: ' au'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' au' → logprob: -0.08476226031780243
    2. ' ' → logprob: -3.9597623348236084
    3. ' plusieurs' → logprob: -4.084762096405029
    4. 'au' → logprob: -4.459762096405029
    5. ' un' → logprob: -4.584762096405029
    6. ' jusqu' → logprob: -4.834762096405029
    7. ' multiple' → logprob: -5.834762096405029
    8. ' une' → logprob: -6.334762096405029
    9. ' dans' → logprob: -6.584762096405029
    10. ' soit' → logprob: -6.709762096405029

Token 96: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.4503049850463867
    2. 'e' → logprob: -1.2003049850463867
    3. 'nombre' → logprob: -3.0753049850463867
    4. 'certain' → logprob: -4.950304985046387
    5. ' certain' → logprob: -5.700304985046387
    6. ' maximum' → logprob: -6.325304985046387
    7. ' au' → logprob: -6.700304985046387
    8. '

' → logprob: -8.075304985046387
    9. 'au' → logprob: -8.200304985046387
    10. ' grand' → logprob: -8.325304985046387

Token 97: ' certain' (ID: 4454)
  Prédit: ' maximal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' maximal' → logprob: -0.639611542224884
    2. ' d' → logprob: -1.8896114826202393
    3. ' au' → logprob: -2.2646114826202393
    4. ' maximum' → logprob: -3.0146114826202393
    5. ' de' → logprob: -3.2646114826202393
    6. ' limité' → logprob: -3.6396114826202393
    7. ' ill' → logprob: -3.7646114826202393
    8. ' ' → logprob: -4.389611721038818
    9. ' quelcon' → logprob: -4.764611721038818
    10. 'au' → logprob: -4.764611721038818

Token 98: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.38520023226737976
    2. ' d' → logprob: -1.7602002620697021
    3. 'de' → logprob: -2.010200262069702
    4. 'd' → logprob: -4.510200023651123
    5. ' maximal' → logprob: -7.760200023651123
    6. ' ' → logprob: -7.885200023651123
    7. ' limité' → logprob: -8.635200500488281
    8. '<|end|>' → logprob: -8.635200500488281
    9. ' minimal' → logprob: -8.760200500488281
    10. '  ' → logprob: -8.760200500488281

Token 99: ' fois' (ID: 14697)
  Prédit: 'fois'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fois' → logprob: -0.3180105984210968
    2. ' fois' → logprob: -1.3180105686187744
    3. 'f' → logprob: -5.9430108070373535
    4. 'fo' → logprob: -6.9430108070373535
    5. ' ' → logprob: -7.6930108070373535
    6. '```' → logprob: -8.318010330200195
    7. '_' → logprob: -9.443010330200195
    8. 'times' → logprob: -9.568010330200195
    9. ' f' → logprob: -9.693010330200195
    10. ' ' → logprob: -10.193010330200195

Token 100: '.
' (ID: 558)
  Prédit: ' entre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' entre' → logprob: -1.3806582689285278
    2. ',' → logprob: -2.0056581497192383
    3. ' compris' → logprob: -2.0056581497192383
    4. ' au' → logprob: -2.1306581497192383
    5. ' maximum' → logprob: -2.5056581497192383
    6. ' maximal' → logprob: -3.1306581497192383
    7. '.' → logprob: -3.2556581497192383
    8. ' jusqu' → logprob: -3.6306581497192383
    9. ' allant' → logprob: -3.6306581497192383
    10. ' (' → logprob: -3.7556581497192383

Token 101: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.13699263334274292
    2. ' ' → logprob: -3.2619926929473877
    3. ',' → logprob: -3.7619926929473877
    4. '.' → logprob: -4.011992454528809
    5. 'def' → logprob: -4.386992454528809
    6. ' #' → logprob: -4.511992454528809
    7. '\' → logprob: -5.511992454528809
    8. ' max' → logprob: -5.511992454528809
    9. ' 
' → logprob: -5.761992454528809
    10. 's' → logprob: -6.136992454528809

Token 102: ' Si' (ID: 7832)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.1334693729877472
    2. 'def' → logprob: -3.133469343185425
    3. ' max' → logprob: -3.383469343185425
    4. ' #' → logprob: -4.008469581604004
    5. 'max' → logprob: -4.758469581604004
    6. ' 
' → logprob: -5.633469581604004
    7. ' def' → logprob: -6.008469581604004
    8. ' ' → logprob: -6.258469581604004
    9. ' ' → logprob: -6.508469581604004
    10. 'import' → logprob: -6.633469581604004

Token 103: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.4566721022129059
    2. 'on' → logprob: -1.2066720724105835
    3. ' chaque' → logprob: -3.956672191619873
    4. ' le' → logprob: -4.831672191619873
    5. 'une' → logprob: -5.081672191619873
    6. '#' → logprob: -5.206672191619873
    7. 'le' → logprob: -5.456672191619873
    8. ' la' → logprob: -5.706672191619873
    9. ' une' → logprob: -5.831672191619873
    10. 'la' → logprob: -6.081672191619873

Token 104: ' répart' (ID: 147636)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -1.7362480163574219
    2. ' veut' → logprob: -2.361248016357422
    3. ' considère' → logprob: -2.486248016357422
    4. 've' → logprob: -2.736248016357422
    5. 'pe' → logprob: -2.861248016357422
    6. ' suppose' → logprob: -2.986248016357422
    7. 'p' → logprob: -3.111248016357422
    8. ' div' → logprob: -3.111248016357422
    9. 'continue' → logprob: -3.111248016357422
    10. 'a' → logprob: -3.111248016357422

Token 105: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.06484156101942062
    2. 'ir' → logprob: -2.8148415088653564
    3. 'i' → logprob: -6.6898417472839355
    4. '#' → logprob: -7.6898417472839355
    5. 'ie' → logprob: -7.6898417472839355
    6. 'ies' → logprob: -8.564841270446777
    7. 'er' → logprob: -8.939841270446777
    8. ' it' → logprob: -9.939841270446777
    9. 'is' → logprob: -10.439841270446777
    10. '-' → logprob: -10.439841270446777

Token 106: ' les' (ID: 1341)
  Prédit: ' uniform'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' uniform' → logprob: -0.3509371876716614
    2. ' les' → logprob: -1.7259371280670166
    3. 'uniform' → logprob: -2.4759371280670166
    4. 'les' → logprob: -4.225937366485596
    5. ' équ' → logprob: -4.475937366485596
    6. ' B' → logprob: -6.225937366485596
    7. 'équ' → logprob: -7.100937366485596
    8. ' au' → logprob: -7.225937366485596
    9. ' ' → logprob: -7.350937366485596
    10. ' ' → logprob: -7.350937366485596

Token 107: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.8160416483879089
    2. ' utilis' → logprob: -0.9410416483879089
    3. 'B' → logprob: -2.6910417079925537
    4. ' robes' → logprob: -2.6910417079925537
    5. ' usages' → logprob: -4.191041469573975
    6. 'util' → logprob: -5.066041469573975
    7. 'robes' → logprob: -5.691041469573975
    8. ' utiliz' → logprob: -6.191041469573975
    9. ' A' → logprob: -6.941041469573975
    10. 'A' → logprob: -7.316041469573975

Token 108: ' fêtes' (ID: 130551)
  Prédit: ' robes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' robes' → logprob: -0.15172873437404633
    2. ' utilis' → logprob: -2.526728630065918
    3. 'robes' → logprob: -4.401728630065918
    4. ' au' → logprob: -5.026728630065918
    5. '/' → logprob: -5.276728630065918
    6. ' ' → logprob: -5.276728630065918
    7. ' /' → logprob: -5.401728630065918
    8. 'util' → logprob: -5.651728630065918
    9. 'd' → logprob: -5.901728630065918
    10. ' usages' → logprob: -6.026728630065918

Token 109: ' sur' (ID: 1512)
  Prédit: ' également'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' également' → logprob: -0.8363194465637207
    2. ' uniform' → logprob: -1.3363194465637207
    3. ' de' → logprob: -2.7113194465637207
    4. ' équ' → logprob: -2.9613194465637207
    5. 'égal' → logprob: -2.9613194465637207
    6. 'uniform' → logprob: -3.2113194465637207
    7. ' entre' → logprob: -3.3363194465637207
    8. ' au' → logprob: -3.4613194465637207
    9. ' ' → logprob: -4.711319446563721
    10. 'équ' → logprob: -5.336319446563721

Token 110: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.514829158782959
    2. ' les' → logprob: -1.139829158782959
    3. 'A' → logprob: -2.639829158782959
    4. 'les' → logprob: -4.889829158782959
    5. ' toutes' → logprob: -6.264829158782959
    6. ' ' → logprob: -6.764829158782959
    7. ' ' → logprob: -8.514829635620117
    8. '#' → logprob: -9.764829635620117
    9. ' chaque' → logprob: -10.139829635620117
    10. ' chacune' → logprob: -10.264829635620117

Token 111: ' robes' (ID: 127604)
  Prédit: ' robes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' robes' → logprob: -0.10704442858695984
    2. 'robes' → logprob: -2.3570444583892822
    3. ' ' → logprob: -5.982044219970703
    4. ' de' → logprob: -7.607044219970703
    5. 'rob' → logprob: -7.732044219970703
    6. ' rob' → logprob: -7.857044219970703
    7. 'robots' → logprob: -8.044544219970703
    8. ' lignes' → logprob: -8.232044219970703
    9. ' des' → logprob: -8.419544219970703
    10. ' les' → logprob: -8.919544219970703

Token 112: ' aussi' (ID: 9894)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.3062335252761841
    2. ',' → logprob: -1.431233525276184
    3. 'de' → logprob: -4.5562334060668945
    4. ' ,' → logprob: -4.9312334060668945
    5. ' en' → logprob: -6.6812334060668945
    6. ' uniform' → logprob: -6.8062334060668945
    7. 'égal' → logprob: -6.9312334060668945
    8. ' ' → logprob: -7.0562334060668945
    9. ' également' → logprob: -7.3062334060668945
    10. ' équ' → logprob: -7.9312334060668945

Token 113: ' uniform' (ID: 21219)
  Prédit: 'égal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'égal' → logprob: -0.019767524674534798
    2. 'uniform' → logprob: -4.644767761230469
    3. ' également' → logprob: -5.394767761230469
    4. ' uniform' → logprob: -5.769767761230469
    5. 'équ' → logprob: -6.144767761230469
    6. 'ég' → logprob: -9.644767761230469
    7. ' équ' → logprob: -10.019767761230469
    8. ' régulièrement' → logprob: -11.644767761230469
    9. 'é' → logprob: -11.894767761230469
    10. ' équilibr' → logprob: -12.269767761230469

Token 114: 'ément' (ID: 17645)
  Prédit: 'ément'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ément' → logprob: -0.00046081675100140274
    2. 'ement' → logprob: -7.750460624694824
    3. '#' → logprob: -10.625460624694824
    4. 'é' → logprob: -12.500460624694824
    5. 'éments' → logprob: -14.625460624694824
    6. 'EMENT' → logprob: -14.625460624694824
    7. 'es' → logprob: -15.000460624694824
    8. 'element' → logprob: -15.250460624694824
    9. '{' → logprob: -16.00046157836914
    10. '```' → logprob: -16.00046157836914

Token 115: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.030590210109949112
    2. 'que' → logprob: -3.530590295791626
    3. 'possible' → logprob: -7.905590057373047
    4. '#' → logprob: -8.780590057373047
    5. ' ' → logprob: -8.905590057373047
    6. ' possible' → logprob: -9.030590057373047
    7. 'qu' → logprob: -10.530590057373047
    8. ',' → logprob: -11.780590057373047
    9. ' #' → logprob: -12.030590057373047
    10. ' ' → logprob: -12.155590057373047

Token 116: ' possible' (ID: 4149)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.47424906492233276
    2. ' possible' → logprob: -0.9742490649223328
    3. '_possible' → logprob: -9.599248886108398
    4. 'poss' → logprob: -9.974248886108398
    5. ' ' → logprob: -11.099248886108398
    6. ' possibles' → logprob: -11.349248886108398
    7. 'pos' → logprob: -11.849248886108398
    8. '```' → logprob: -11.849248886108398
    9. ' ' → logprob: -12.349248886108398
    10. '#' → logprob: -12.974248886108398

Token 117: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013842822518199682
    2. ' ,' → logprob: -7.251384258270264
    3. '#' → logprob: -7.376384258270264
    4. ',#' → logprob: -11.376384735107422
    5. ',
' → logprob: -11.501384735107422
    6. ' #' → logprob: -12.001384735107422
    7. '.' → logprob: -12.376384735107422
    8. ' (' → logprob: -12.501384735107422
    9. 's' → logprob: -13.626384735107422
    10. 'en' → logprob: -13.876384735107422

Token 118: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5190646648406982
    2. ' on' → logprob: -1.5190646648406982
    3. ' la' → logprob: -2.1440646648406982
    4. ' #' → logprob: -2.7690646648406982
    5. ' le' → logprob: -6.269064903259277
    6. 'on' → logprob: -6.644064903259277
    7. ' alors' → logprob: -6.769064903259277
    8. 'la' → logprob: -7.144064903259277
    9. 'le' → logprob: -7.394064903259277
    10. ' ' → logprob: -9.394064903259277

Token 119: ' alors' (ID: 17971)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.7368789911270142
    2. ' la' → logprob: -1.3618789911270142
    3. '#' → logprob: -1.6118789911270142
    4. ' #' → logprob: -3.9868788719177246
    5. ' chaque' → logprob: -4.236878871917725
    6. 'on' → logprob: -4.486878871917725
    7. ' le' → logprob: -4.861878871917725
    8. 'la' → logprob: -5.111878871917725
    9. ' alors' → logprob: -5.736878871917725
    10. 'le' → logprob: -5.986878871917725

Token 120: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.1302725076675415
    2. ' on' → logprob: -1.2552725076675415
    3. ' chaque' → logprob: -1.3802725076675415
    4. ' le' → logprob: -2.880272388458252
    5. 'la' → logprob: -3.505272388458252
    6. 'on' → logprob: -3.880272388458252
    7. 'le' → logprob: -4.880272388458252
    8. ' chacune' → logprob: -5.005272388458252
    9. 'max' → logprob: -5.505272388458252
    10. 'ch' → logprob: -5.505272388458252

Token 121: ' fréquence' (ID: 174518)
  Prédit: ' fréquence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fréquence' → logprob: -0.249196857213974
    2. 'fr' → logprob: -1.8741968870162964
    3. 'util' → logprob: -4.124197006225586
    4. 'fre' → logprob: -4.374197006225586
    5. 'ré' → logprob: -5.124197006225586
    6. ' fré' → logprob: -5.374197006225586
    7. 'freq' → logprob: -5.499197006225586
    8. 'max' → logprob: -5.749197006225586
    9. 'val' → logprob: -5.874197006225586
    10. ' valeur' → logprob: -6.124197006225586

Token 122: ' maximale' (ID: 76380)
  Prédit: ' maximale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maximale' → logprob: -0.057743944227695465
    2. 'max' → logprob: -3.182744026184082
    3. ' max' → logprob: -5.057744026184082
    4. ' maximal' → logprob: -6.307744026184082
    5. ' d' → logprob: -6.557744026184082
    6. ' maximum' → logprob: -6.807744026184082
    7. '_max' → logprob: -6.932744026184082
    8. ' minimale' → logprob: -7.057744026184082
    9. ' maxim' → logprob: -7.307744026184082
    10. ' de' → logprob: -7.307744026184082

Token 123: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.22888627648353577
    2. 'd' → logprob: -1.6038862466812134
    3. ' sera' → logprob: -6.603886127471924
    4. ' est' → logprob: -7.353886127471924
    5. ' possible' → logprob: -8.103886604309082
    6. ' ' → logprob: -8.228886604309082
    7. 'de' → logprob: -8.478886604309082
    8. ' de' → logprob: -8.728886604309082
    9. 'est' → logprob: -8.978886604309082
    10. 's' → logprob: -9.353886604309082

Token 124: ''utilisation' (ID: 73991)
  Prédit: ''utilisation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisation' → logprob: -0.010220524854958057
    2. ''util' → logprob: -5.385220527648926
    3. ''' → logprob: -5.510220527648926
    4. 'util' → logprob: -7.010220527648926
    5. '’utilisation' → logprob: -7.760220527648926
    6. ''une' → logprob: -9.635220527648926
    7. ''utilisateur' → logprob: -9.760220527648926
    8. ''utiliser' → logprob: -10.760220527648926
    9. ''un' → logprob: -11.510220527648926
    10. '_util' → logprob: -11.510220527648926

Token 125: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.037515513598918915
    2. ' sera' → logprob: -4.162515640258789
    3. ' est' → logprob: -5.037515640258789
    4. ' ' → logprob: -5.037515640258789
    5. 'd' → logprob: -5.662515640258789
    6. ' des' → logprob: -6.287515640258789
    7. ' de' → logprob: -6.537515640258789
    8. ' serait' → logprob: -7.287515640258789
    9. ' possible' → logprob: -8.287515640258789
    10. 's' → logprob: -8.537515640258789

Token 126: ''une' (ID: 13337)
  Prédit: ''une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''une' → logprob: -0.038521647453308105
    2. ''' → logprob: -3.2885217666625977
    3. ''un' → logprob: -8.663521766662598
    4. '’une' → logprob: -8.663521766662598
    5. 'e' → logprob: -10.413521766662598
    6. 'une' → logprob: -10.538521766662598
    7. ''una' → logprob: -10.663521766662598
    8. ''u' → logprob: -10.788521766662598
    9. 'u' → logprob: -11.913521766662598
    10. '‘' → logprob: -12.413521766662598

Token 127: ' robe' (ID: 71960)
  Prédit: 'robe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'robe' → logprob: -0.4213709533214569
    2. ' robe' → logprob: -1.1713709831237793
    3. ' même' → logprob: -3.6713709831237793
    4. 'm' → logprob: -4.921370983123779
    5. 'rob' → logprob: -8.421370506286621
    6. ' ' → logprob: -8.546370506286621
    7. ' ' → logprob: -8.796370506286621
    8. ' m' → logprob: -8.921370506286621
    9. ' rob' → logprob: -9.733870506286621
    10. '   ' → logprob: -10.046370506286621

Token 128: ' est' (ID: 893)
  Prédit: ' sera'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sera' → logprob: -0.7900816202163696
    2. ' est' → logprob: -0.9150816202163696
    3. 'est' → logprob: -2.41508150100708
    4. 'sera' → logprob: -3.91508150100708
    5. '#' → logprob: -4.29008150100708
    6. 'ser' → logprob: -4.91508150100708
    7. ' ne' → logprob: -4.91508150100708
    8. 'ne' → logprob: -6.16508150100708
    9. ' serait' → logprob: -6.16508150100708
    10. ' vaut' → logprob: -7.04008150100708

Token 129: ' le' (ID: 505)
  Prédit: ' au'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' au' → logprob: -0.7049738764762878
    2. ' (' → logprob: -1.3299739360809326
    3. ' ' → logprob: -2.3299739360809326
    4. ' B' → logprob: -2.5799739360809326
    5. 'au' → logprob: -3.5799739360809326
    6. 'B' → logprob: -4.0799736976623535
    7. ' ceil' → logprob: -4.9549736976623535
    8. '(B' → logprob: -6.0799736976623535
    9. ' le' → logprob: -6.4549736976623535
    10. ' ' → logprob: -6.4549736976623535

Token 130: ' nombre' (ID: 9733)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6354663968086243
    2. '(B' → logprob: -1.1354663372039795
    3. ' B' → logprob: -2.7604663372039795
    4. '(' → logprob: -3.5104663372039795
    5. 'B' → logprob: -3.8854663372039795
    6. 'quot' → logprob: -5.260466575622559
    7. '(A' → logprob: -5.385466575622559
    8. '(b' → logprob: -5.760466575622559
    9. 'nombre' → logprob: -5.760466575622559
    10. 'ceil' → logprob: -5.885466575622559

Token 131: ' entier' (ID: 80473)
  Prédit: ' maximal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maximal' → logprob: -0.29108142852783203
    2. '_' → logprob: -2.291081428527832
    3. ' maximum' → logprob: -3.291081428527832
    4. ' max' → logprob: -3.791081428527832
    5. ' minimal' → logprob: -3.791081428527832
    6. ' d' → logprob: -4.166081428527832
    7. ' de' → logprob: -4.291081428527832
    8. ' entier' → logprob: -4.541081428527832
    9. '_max' → logprob: -5.041081428527832
    10. 'max' → logprob: -5.166081428527832

Token 132: '
' (ID: 198)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.5750524997711182
    2. ' minimal' → logprob: -2.450052499771118
    3. ' de' → logprob: -2.950052499771118
    4. ' B' → logprob: -3.075052499771118
    5. '#' → logprob: -3.450052499771118
    6. 'division' → logprob: -3.575052499771118
    7. 'quot' → logprob: -3.700052499771118
    8. ' division' → logprob: -3.825052499771118
    9. 'B' → logprob: -4.200052261352539
    10. ' maximal' → logprob: -4.325052261352539

Token 133: '#' (ID: 2)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.6357345581054688
    2. ' minimal' → logprob: -1.6357345581054688
    3. ' maximal' → logprob: -1.7607345581054688
    4. ' maximum' → logprob: -2.6357345581054688
    5. ' ' → logprob: -2.7607345581054688
    6. '#' → logprob: -3.3857345581054688
    7. 'div' → logprob: -3.3857345581054688
    8. ' minimum' → logprob: -3.5107345581054688
    9. 'd' → logprob: -3.5107345581054688
    10. ' d' → logprob: -3.7607345581054688

Token 134: ' minimal' (ID: 19957)
  Prédit: 'quot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'quot' → logprob: -0.7416948080062866
    2. 'div' → logprob: -1.9916948080062866
    3. 'B' → logprob: -2.491694927215576
    4. ' B' → logprob: -2.991694927215576
    5. 'division' → logprob: -3.116694927215576
    6. ' entier' → logprob: -3.616694927215576
    7. 'd' → logprob: -3.741694927215576
    8. ' quotient' → logprob: -3.866694927215576
    9. 'max' → logprob: -4.116694927215576
    10. 'ceil' → logprob: -4.241694927215576

Token 135: ' x' (ID: 1215)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' m' → logprob: -2.0295629501342773
    2. ' qui' → logprob: -2.1545629501342773
    3. ' ' → logprob: -2.2795629501342773
    4. ' t' → logprob: -2.4045629501342773
    5. ' f' → logprob: -2.5295629501342773
    6. ' k' → logprob: -2.5295629501342773
    7. 'qui' → logprob: -2.7795629501342773
    8. ' d' → logprob: -3.4045629501342773
    9. 'm' → logprob: -3.5295629501342773
    10. ' n' → logprob: -3.7795629501342773

Token 136: ' tel' (ID: 10716)
  Prédit: ' tel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tel' → logprob: -0.2865062355995178
    2. ' t' → logprob: -2.036506175994873
    3. 'tel' → logprob: -2.661506175994873
    4. 't' → logprob: -3.911506175994873
    5. ' ' → logprob: -4.411506175994873
    6. ' tq' → logprob: -4.536506175994873
    7. ' x' → logprob: -6.036506175994873
    8. 's' → logprob: -7.036506175994873
    9. 'x' → logprob: -7.536506175994873
    10. '   ' → logprob: -7.661506175994873

Token 137: ' que' (ID: 661)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.10413137823343277
    2. ' que' → logprob: -2.7291314601898193
    3. '#' → logprob: -3.4791314601898193
    4. 'qu' → logprob: -6.35413122177124
    5. ' that' → logprob: -7.72913122177124
    6. 'qui' → logprob: -8.104131698608398
    7. 'that' → logprob: -8.854131698608398
    8. 'x' → logprob: -10.104131698608398
    9. ' qu' → logprob: -10.479131698608398
    10. '   ' → logprob: -10.854131698608398

Token 138: ' A' (ID: 355)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5815078616142273
    2. ' x' → logprob: -0.8315078616142273
    3. ' A' → logprob: -5.706507682800293
    4. 'A' → logprob: -6.206507682800293
    5. ' ' → logprob: -8.956507682800293
    6. '   ' → logprob: -9.956507682800293
    7. ' ' → logprob: -11.081507682800293
    8. ' (' → logprob: -11.831507682800293
    9. '(x' → logprob: -12.456507682800293
    10. '```' → logprob: -12.956507682800293

Token 139: '*x' (ID: 46987)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3173651099205017
    2. ' *' → logprob: -1.3173651695251465
    3. ' >=' → logprob: -6.5673651695251465
    4. '*x' → logprob: -6.6923651695251465
    5. '>=' → logprob: -7.5673651695251465
    6. ' x' → logprob: -8.567364692687988
    7. '>' → logprob: -8.817364692687988
    8. 'x' → logprob: -9.067364692687988
    9. '*>' → logprob: -9.192364692687988
    10. ' ' → logprob: -9.192364692687988

Token 140: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.012651734054088593
    2. ' >=' → logprob: -4.3876519203186035
    3. '>' → logprob: -9.762651443481445
    4. '≥' → logprob: -10.012651443481445
    5. ' ' → logprob: -11.012651443481445
    6. ']>=' → logprob: -11.137651443481445
    7. ')>=' → logprob: -12.512651443481445
    8. '">' → logprob: -13.637651443481445
    9. '\' → logprob: -14.137651443481445
    10. 's' → logprob: -14.262651443481445

Token 141: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.1269380897283554
    2. 'B' → logprob: -2.1269381046295166
    3. ' ' → logprob: -11.751937866210938
    4. ' ' → logprob: -13.126937866210938
    5. 'b' → logprob: -15.751937866210938
    6. ' b' → logprob: -18.751937866210938
    7. '#' → logprob: -18.876937866210938
    8. '	B' → logprob: -18.876937866210938
    9. '_B' → logprob: -19.001937866210938
    10. '  ' → logprob: -19.251937866210938

Token 142: '.
' (ID: 558)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09182468801736832
    2. '

' → logprob: -3.341824769973755
    3. 'import' → logprob: -3.841824769973755
    4. '
' → logprob: -3.966824769973755
    5. '#' → logprob: -5.591824531555176
    6. 'A' → logprob: -5.716824531555176
    7. 'x' → logprob: -6.591824531555176
    8. '\' → logprob: -7.466824531555176
    9. '
' → logprob: -7.591824531555176
    10. ' 

' → logprob: -7.966824531555176

Token 143: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5007259249687195
    2. 'import' → logprob: -1.8757259845733643
    3. '
' → logprob: -2.1257259845733643
    4. 'x' → logprob: -2.7507259845733643
    5. '

' → logprob: -3.5007259845733643
    6. ' 
' → logprob: -4.875725746154785
    7. 'A' → logprob: -5.250725746154785
    8. '#' → logprob: -5.625725746154785
    9. '
' → logprob: -5.750725746154785
    10. ' 

' → logprob: -5.875725746154785

Token 144: ' En' (ID: 2130)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6179879307746887
    2. 'def' → logprob: -1.367987871170044
    3. '

' → logprob: -2.117987871170044
    4. 'x' → logprob: -2.742987871170044
    5. 'import' → logprob: -4.242988109588623
    6. '
' → logprob: -6.117988109588623
    7. 'A' → logprob: -6.242988109588623
    8. ' 
' → logprob: -7.367988109588623
    9. '#' → logprob: -7.867988109588623
    10. '' → logprob: -7.992988109588623

Token 145: ' effet' (ID: 24342)
  Prédit: 'suite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'suite' → logprob: -0.7941220998764038
    2. ' effet' → logprob: -1.2941220998764038
    3. 'def' → logprob: -2.4191222190856934
    4. ' d' → logprob: -2.5441222190856934
    5. 'd' → logprob: -3.7941222190856934
    6. '#' → logprob: -4.169122219085693
    7. 'python' → logprob: -4.294122219085693
    8. ' code' → logprob: -4.919122219085693
    9. 'eff' → logprob: -5.169122219085693
    10. ' math' → logprob: -5.544122219085693

Token 146: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1364385485649109
    2. '
' → logprob: -2.7614386081695557
    3. 'x' → logprob: -4.261438369750977
    4. 'def' → logprob: -4.261438369750977
    5. ',
' → logprob: -4.761438369750977
    6. ':' → logprob: -5.011438369750977
    7. '#' → logprob: -5.386438369750977
    8. ' ,' → logprob: -5.386438369750977
    9. ' x' → logprob: -5.886438369750977
    10. ':
' → logprob: -6.011438369750977

Token 147: ' si' (ID: 1784)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.6442466974258423
    2. ' x' → logprob: -1.6442466974258423
    3. ' si' → logprob: -2.7692465782165527
    4. 'x' → logprob: -2.7692465782165527
    5. '#' → logprob: -3.1442465782165527
    6. ' la' → logprob: -3.6442465782165527
    7. ' pour' → logprob: -3.7692465782165527
    8. ' il' → logprob: -4.394246578216553
    9. ' cela' → logprob: -4.644246578216553
    10. 'on' → logprob: -5.269246578216553

Token 148: ' chaque' (ID: 21194)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.5154194235801697
    2. 'A' → logprob: -2.1404194831848145
    3. 'on' → logprob: -2.1404194831848145
    4. ' A' → logprob: -2.1404194831848145
    5. 'x' → logprob: -3.2654194831848145
    6. ' x' → logprob: -4.8904194831848145
    7. ' B' → logprob: -6.0154194831848145
    8. 'B' → logprob: -6.6404194831848145
    9. ' ' → logprob: -8.515419006347656
    10. '#' → logprob: -9.640419006347656

Token 149: ' robe' (ID: 71960)
  Prédit: 'robe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'robe' → logprob: -0.20464029908180237
    2. ' robe' → logprob: -1.70464026927948
    3. '_' → logprob: -7.2046403884887695
    4. '#' → logprob: -7.7046403884887695
    5. 'rob' → logprob: -8.20464038848877
    6. 'x' → logprob: -8.20464038848877
    7. 'util' → logprob: -8.45464038848877
    8. ' ' → logprob: -8.57964038848877
    9. ' usage' → logprob: -9.14214038848877
    10. 'robes' → logprob: -9.26714038848877

Token 150: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.3688022196292877
    2. 'util' → logprob: -2.243802309036255
    3. ' peut' → logprob: -2.868802309036255
    4. ' utilise' → logprob: -3.118802309036255
    5. 'est' → logprob: -3.243802309036255
    6. 'pe' → logprob: -3.993802309036255
    7. '#' → logprob: -4.868802070617676
    8. ' a' → logprob: -4.993802070617676
    9. ' utilisée' → logprob: -5.493802070617676
    10. 'x' → logprob: -5.493802070617676

Token 151: ' utilisée' (ID: 106548)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'util' → logprob: -0.1605922132730484
    2. ' utilisée' → logprob: -1.9105921983718872
    3. 'used' → logprob: -9.160592079162598
    4. 'port' → logprob: -9.910592079162598
    5. ' utilis' → logprob: -10.160592079162598
    6. ' utilisé' → logprob: -10.160592079162598
    7. 'use' → logprob: -10.660592079162598
    8. ' utilisées' → logprob: -10.660592079162598
    9. 'au' → logprob: -10.785592079162598
    10. 'x' → logprob: -11.660592079162598

Token 152: ' au' (ID: 2791)
  Prédit: ' au'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' au' → logprob: -0.12192528694868088
    2. 'au' → logprob: -3.1219253540039062
    3. ' x' → logprob: -3.3719253540039062
    4. 'x' → logprob: -3.3719253540039062
    5. ' exactement' → logprob: -6.996925354003906
    6. 'exact' → logprob: -7.621925354003906
    7. ' ' → logprob: -8.496925354003906
    8. ''au' → logprob: -8.996925354003906
    9. ' une' → logprob: -10.121925354003906
    10. 'floor' → logprob: -10.496925354003906

Token 153: ' maximum' (ID: 10562)
  Prédit: 'moins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'moins' → logprob: -0.017892371863126755
    2. 'plus' → logprob: -4.142892360687256
    3. 'mo' → logprob: -6.642892360687256
    4. 'maximum' → logprob: -8.142892837524414
    5. 'minimum' → logprob: -9.017892837524414
    6. 'most' → logprob: -9.517892837524414
    7. 'max' → logprob: -10.267892837524414
    8. ' moins' → logprob: -10.642892837524414
    9. 'm' → logprob: -13.017892837524414
    10. '-mo' → logprob: -13.267892837524414

Token 154: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.4289298355579376
    2. ' x' → logprob: -1.0539298057556152
    3. ' de' → logprob: -9.678930282592773
    4. 'd' → logprob: -10.428930282592773
    5. '```' → logprob: -10.553930282592773
    6. ' fois' → logprob: -11.053930282592773
    7. ' au' → logprob: -11.053930282592773
    8. ' une' → logprob: -11.303930282592773
    9. 'de' → logprob: -11.428930282592773
    10. ' ' → logprob: -11.678930282592773

Token 155: ' fois' (ID: 14697)
  Prédit: ' fois'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fois' → logprob: -0.07228806614875793
    2. 'fois' → logprob: -2.8222880363464355
    3. ',' → logprob: -5.1972880363464355
    4. ' ' → logprob: -6.4472880363464355
    5. ' ou' → logprob: -7.1972880363464355
    6. ' ' → logprob: -7.6972880363464355
    7. ' au' → logprob: -7.9472880363464355
    8. ' ,' → logprob: -8.322288513183594
    9. ' times' → logprob: -8.322288513183594
    10. '+' → logprob: -8.447288513183594

Token 156: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009238460334017873
    2. ' ,' → logprob: -7.2509236335754395
    3. ' alors' → logprob: -9.125924110412598
    4. '#' → logprob: -10.750924110412598
    5. ' (' → logprob: -10.875924110412598
    6. '.' → logprob: -11.375924110412598
    7. ',
' → logprob: -11.750924110412598
    8. ':' → logprob: -11.750924110412598
    9. ' pour' → logprob: -12.375924110412598
    10. 'pour' → logprob: -12.500924110412598

Token 157: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.30691757798194885
    2. ' alors' → logprob: -1.6819175481796265
    3. ' #' → logprob: -3.181917667388916
    4. ' il' → logprob: -4.056917667388916
    5. ' on' → logprob: -4.806917667388916
    6. ',' → logprob: -5.181917667388916
    7. ' ' → logprob: -6.431917667388916
    8. ' la' → logprob: -6.681917667388916
    9. 'il' → logprob: -7.056917667388916
    10. 'al' → logprob: -7.931917667388916

Token 158: ' Le' (ID: 2018)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.8350079655647278
    2. ' alors' → logprob: -1.210007905960083
    3. '#' → logprob: -1.585007905960083
    4. ' #' → logprob: -3.585007905960083
    5. ' il' → logprob: -4.085008144378662
    6. ' la' → logprob: -4.960008144378662
    7. 'on' → logprob: -6.085008144378662
    8. ' ' → logprob: -6.335008144378662
    9. 'il' → logprob: -6.585008144378662
    10. 'al' → logprob: -6.710008144378662

Token 159: ' total' (ID: 3609)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.7529442310333252
    2. 'x' → logprob: -1.8779442310333252
    3. ' nombre' → logprob: -2.252944231033325
    4. ' maximum' → logprob: -2.252944231033325
    5. ' code' → logprob: -3.127944231033325
    6. ' x' → logprob: -3.252944231033325
    7. ' résultat' → logprob: -3.627944231033325
    8. 'max' → logprob: -3.877944231033325
    9. 's' → logprob: -5.752943992614746
    10. ' minimum' → logprob: -5.877943992614746

Token 160: ' de' (ID: 334)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.07557118684053421
    2. 'des' → logprob: -3.200571298599243
    3. ' d' → logprob: -4.950571060180664
    4. 'd' → logprob: -5.575571060180664
    5. ' possible' → logprob: -5.575571060180664
    6. ' de' → logprob: -5.700571060180664
    7. 'de' → logprob: -6.200571060180664
    8. ' est' → logprob: -6.325571060180664
    9. ' >=' → logprob: -6.575571060180664
    10. 'possible' → logprob: -6.575571060180664

Token 161: ' robes' (ID: 127604)
  Prédit: ' utilis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' utilis' → logprob: -0.5493623614311218
    2. 'util' → logprob: -1.9243624210357666
    3. 'A' → logprob: -2.0493624210357666
    4. ' A' → logprob: -2.4243624210357666
    5. ' robes' → logprob: -3.6743624210357666
    6. 'robes' → logprob: -4.7993621826171875
    7. ' utiliz' → logprob: -5.2993621826171875
    8. ' usages' → logprob: -5.5493621826171875
    9. 'x' → logprob: -5.6743621826171875
    10. 'l' → logprob: -5.9243621826171875

Token 162: ' utilis' (ID: 18688)
  Prédit: ' utilisées'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' utilisées' → logprob: -0.13216766715049744
    2. '*' → logprob: -3.1321675777435303
    3. ' *' → logprob: -3.1321675777435303
    4. 'util' → logprob: -3.7571675777435303
    5. ' utilis' → logprob: -5.382167816162109
    6. ' utilisés' → logprob: -6.132167816162109
    7. ' utilisé' → logprob: -6.382167816162109
    8. ' utilisée' → logprob: -6.632167816162109
    9. ' x' → logprob: -7.257167816162109
    10. 'x' → logprob: -8.13216781616211

Token 163: 'ables' (ID: 3232)
  Prédit: 'ées'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.500420331954956
    2. 't' → logprob: -1.375420331954956
    3. 'es' → logprob: -2.500420331954956
    4. 'tes' → logprob: -3.750420331954956
    5. 'nées' → logprob: -4.500420570373535
    6. 'é' → logprob: -4.625420570373535
    7. '#' → logprob: -5.500420570373535
    8. 'és' → logprob: -6.250420570373535
    9. 'ables' → logprob: -6.875420570373535
    10. 'r' → logprob: -7.125420570373535

Token 164: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.9313328266143799
    2. ' doit' → logprob: -1.6813328266143799
    3. ' utilisées' → logprob: -1.6813328266143799
    4. ' ' → logprob: -2.68133282661438
    5. ' multip' → logprob: -3.30633282661438
    6. ' disponibles' → logprob: -3.80633282661438
    7. ' utilis' → logprob: -3.80633282661438
    8. ' >=' → logprob: -3.93133282661438
    9. ' vaut' → logprob: -5.056332588195801
    10. 'util' → logprob: -5.056332588195801

Token 165: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.22541147470474243
    2. 'A' → logprob: -2.2254114151000977
    3. ' au' → logprob: -2.8504114151000977
    4. ' x' → logprob: -4.725411415100098
    5. 'au' → logprob: -4.850411415100098
    6. 'x' → logprob: -5.100411415100098
    7. ' >=' → logprob: -5.350411415100098
    8. ' ' → logprob: -5.600411415100098
    9. '>=' → logprob: -6.475411415100098
    10. ' B' → logprob: -6.725411415100098

Token 166: '*x' (ID: 46987)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.49471351504325867
    2. ' *' → logprob: -1.369713544845581
    3. '*x' → logprob: -1.994713544845581
    4. ' ' → logprob: -11.74471378326416
    5. '#' → logprob: -13.36971378326416
    6. '*object' → logprob: -13.49471378326416
    7. '*t' → logprob: -13.74471378326416
    8. '*u' → logprob: -13.86971378326416
    9. 'x' → logprob: -14.24471378326416
    10. '*f' → logprob: -14.49471378326416

Token 167: '.
' (ID: 558)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.9212721586227417
    2. ',' → logprob: -1.1712721586227417
    3. 'x' → logprob: -2.7962722778320312
    4. ' +' → logprob: -2.9212722778320312
    5. '.' → logprob: -3.2962722778320312
    6. ' x' → logprob: -3.4212722778320312
    7. ' ' → logprob: -3.5462722778320312
    8. '#' → logprob: -3.5462722778320312
    9. ':' → logprob: -4.921272277832031
    10. '=' → logprob: -4.921272277832031

Token 168: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4157227873802185
    2. '#' → logprob: -1.5407228469848633
    3. 'x' → logprob: -2.7907228469848633
    4. '
' → logprob: -3.4157228469848633
    5. '#
' → logprob: -4.165722846984863
    6. 'import' → logprob: -4.915722846984863
    7. '

' → logprob: -6.290722846984863
    8. '```' → logprob: -6.665722846984863
    9. '
' → logprob: -7.165722846984863
    10. '\' → logprob: -7.165722846984863

Token 169: ' On' (ID: 2160)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.012393918819725513
    2. '#' → logprob: -5.512393951416016
    3. 'x' → logprob: -5.512393951416016
    4. 'import' → logprob: -6.262393951416016
    5. '
' → logprob: -6.512393951416016
    6. ' def' → logprob: -8.387393951416016
    7. '

' → logprob: -8.637393951416016
    8. '#
' → logprob: -8.762393951416016
    9. 'from' → logprob: -9.512393951416016
    10. '\' → logprob: -9.887393951416016

Token 170: ' veut' (ID: 41653)
  Prédit: ' suffit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' suffit' → logprob: -0.56334388256073
    2. ' peut' → logprob: -1.56334388256073
    3. ' faut' → logprob: -2.4383440017700195
    4. 's' → logprob: -3.6883440017700195
    5. 'f' → logprob: -3.8133440017700195
    6. ' doit' → logprob: -4.3133440017700195
    7. ' suff' → logprob: -4.4383440017700195
    8. ' a' → logprob: -4.6883440017700195
    9. 'est' → logprob: -5.1883440017700195
    10. ' faudrait' → logprob: -5.5633440017700195

Token 171: ' le' (ID: 505)
  Prédit: ' trouver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' trouver' → logprob: -0.9472957849502563
    2. 'min' → logprob: -1.4472957849502563
    3. 'don' → logprob: -1.9472957849502563
    4. ' donc' → logprob: -1.9472957849502563
    5. 'tr' → logprob: -3.072295665740967
    6. ' simplement' → logprob: -4.197295665740967
    7. ' minim' → logprob: -4.572295665740967
    8. ' min' → logprob: -5.822295665740967
    9. ' juste' → logprob: -6.322295665740967
    10. ' savoir' → logprob: -6.322295665740967

Token 172: ' plus' (ID: 2932)
  Prédit: ' minimum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' minimum' → logprob: -1.6591565608978271
    2. 'minimum' → logprob: -1.6591565608978271
    3. 'max' → logprob: -2.034156560897827
    4. ' plus' → logprob: -2.159156560897827
    5. 'plus' → logprob: -2.534156560897827
    6. 'x' → logprob: -2.659156560897827
    7. 'min' → logprob: -2.659156560897827
    8. ' minimal' → logprob: -2.784156560897827
    9. ' max' → logprob: -3.409156560897827
    10. ' maximum' → logprob: -4.159156799316406

Token 173: ' petit' (ID: 20577)
  Prédit: ' petit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' petit' → logprob: -0.20223462581634521
    2. 'pet' → logprob: -1.7022346258163452
    3. ' pet' → logprob: -8.577234268188477
    4. 'grand' → logprob: -8.952234268188477
    5. ' small' → logprob: -9.077234268188477
    6. '_pet' → logprob: -9.577234268188477
    7. ' faible' → logprob: -9.827234268188477
    8. ' grand' → logprob: -9.827234268188477
    9. ' petite' → logprob: -10.452234268188477
    10. '```' → logprob: -10.452234268188477

Token 174: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.6051685214042664
    2. 'x' → logprob: -0.8551685214042664
    3. ' entier' → logprob: -3.730168581008911
    4. 'ent' → logprob: -6.230168342590332
    5. '_x' → logprob: -6.355168342590332
    6. '_' → logprob: -8.230168342590332
    7. ' possible' → logprob: -8.355168342590332
    8. 'possible' → logprob: -9.230168342590332
    9. ' nombre' → logprob: -9.355168342590332
    10. '_ent' → logprob: -9.730168342590332

Token 175: ' tel' (ID: 10716)
  Prédit: ' possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' possible' → logprob: -0.0712185800075531
    2. 'possible' → logprob: -3.321218490600586
    3. ' tel' → logprob: -3.946218490600586
    4. 'import' → logprob: -5.196218490600586
    5. ' qui' → logprob: -6.321218490600586
    6. '_possible' → logprob: -6.946218490600586
    7. 'tel' → logprob: -7.196218490600586
    8. ' =' → logprob: -7.196218490600586
    9. '=' → logprob: -7.446218490600586
    10. ' ' → logprob: -7.696218490600586

Token 176: ' que' (ID: 661)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.007518842350691557
    2. ' que' → logprob: -5.382518768310547
    3. 'qu' → logprob: -6.007518768310547
    4. '#' → logprob: -8.882518768310547
    5. 'quel' → logprob: -9.382518768310547
    6. '   ' → logprob: -9.507518768310547
    7. 'qui' → logprob: -9.757518768310547
    8. ' ' → logprob: -10.257518768310547
    9. 'x' → logprob: -11.382518768310547
    10. '```' → logprob: -11.882518768310547

Token 177: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.5760596990585327
    2. 'A' → logprob: -0.8260596990585327
    3. ' ' → logprob: -9.326059341430664
    4. ' ' → logprob: -10.826059341430664
    5. '   ' → logprob: -12.076059341430664
    6. '	A' → logprob: -13.326059341430664
    7. ' `' → logprob: -13.951059341430664
    8. '`' → logprob: -14.076059341430664
    9. '```' → logprob: -14.076059341430664
    10. '(A' → logprob: -14.576059341430664

Token 178: '*x' (ID: 46987)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.07116039842367172
    2. ' *' → logprob: -2.821160316467285
    3. '*x' → logprob: -4.696160316467285
    4. '*u' → logprob: -13.196160316467285
    5. '*y' → logprob: -13.446160316467285
    6. '*object' → logprob: -13.571160316467285
    7. '*t' → logprob: -13.571160316467285
    8. ' ' → logprob: -13.696160316467285
    9. '>=' → logprob: -13.696160316467285
    10. '*l' → logprob: -14.071160316467285

Token 179: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.22544345259666443
    2. ' >=' → logprob: -1.6004434823989868
    3. '>' → logprob: -11.225443840026855
    4. ']>=' → logprob: -12.225443840026855
    5. ' ' → logprob: -12.475443840026855
    6. ')>=' → logprob: -12.600443840026855
    7. '≥' → logprob: -12.850443840026855
    8. ' ' → logprob: -13.850443840026855
    9. '#' → logprob: -14.225443840026855
    10. '   ' → logprob: -15.350443840026855

Token 180: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.25194039940834045
    2. 'B' → logprob: -1.501940369606018
    3. ' ' → logprob: -12.001940727233887
    4. ' ' → logprob: -12.251940727233887
    5. 'b' → logprob: -16.37693977355957
    6. '	B' → logprob: -16.37693977355957
    7. '_B' → logprob: -16.50193977355957
    8. '```' → logprob: -16.75193977355957
    9. '`' → logprob: -18.00193977355957
    10. '   ' → logprob: -18.50193977355957

Token 181: '.

' (ID: 364)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.3468135893344879
    2. '
' → logprob: -1.4718135595321655
    3. 'def' → logprob: -3.346813678741455
    4. 'x' → logprob: -4.471813678741455
    5. '\n' → logprob: -4.721813678741455
    6. '
' → logprob: -6.096813678741455
    7. 'import' → logprob: -6.346813678741455
    8. '\' → logprob: -7.346813678741455
    9. '
 
' → logprob: -7.471813678741455
    10. '


' → logprob: -7.721813678741455

Token 182: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0067154900170862675
    2. 'A' → logprob: -6.006715297698975
    3. 'x' → logprob: -6.256715297698975
    4. 'import' → logprob: -6.756715297698975
    5. '\' → logprob: -8.256715774536133
    6. ' def' → logprob: -8.631715774536133
    7. '
' → logprob: -8.631715774536133
    8. ' A' → logprob: -9.131715774536133
    9. '#' → logprob: -9.381715774536133
    10. ' 
' → logprob: -9.506715774536133

Token 183: ' Cette' (ID: 27383)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.001530812936834991
    2. ' def' → logprob: -7.001530647277832
    3. 'import' → logprob: -8.001530647277832
    4. 'x' → logprob: -8.876530647277832
    5. 'A' → logprob: -9.251530647277832
    6. '```' → logprob: -11.126530647277832
    7. ' A' → logprob: -11.376530647277832
    8. '#' → logprob: -12.126530647277832
    9. 'n' → logprob: -12.376530647277832
    10. ' x' → logprob: -12.626530647277832

Token 184: ' valeur' (ID: 41664)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8503877520561218
    2. ' solution' → logprob: -1.3503878116607666
    3. 'solution' → logprob: -1.9753878116607666
    4. 'fonction' → logprob: -3.4753878116607666
    5. '#' → logprob: -3.8503878116607666
    6. 'part' → logprob: -4.4753875732421875
    7. ' fréquence' → logprob: -4.6003875732421875
    8. ' def' → logprob: -4.9753875732421875
    9. 'suite' → logprob: -5.1003875732421875
    10. 'dé' → logprob: -5.4753875732421875

Token 185: ' correspond' (ID: 11095)
  Prédit: ' minimale'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' minimale' → logprob: -0.2598108947277069
    2. ' minimal' → logprob: -2.1348109245300293
    3. ' =' → logprob: -3.5098109245300293
    4. ' x' → logprob: -3.7598109245300293
    5. ' est' → logprob: -4.634810924530029
    6. 'x' → logprob: -4.759810924530029
    7. 'min' → logprob: -5.134810924530029
    8. '_min' → logprob: -5.259810924530029
    9. 'minimal' → logprob: -5.259810924530029
    10. ' minimum' → logprob: -5.634810924530029

Token 186: ' donc' (ID: 14206)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.03299851715564728
    2. ' au' → logprob: -3.532998561859131
    3. ' a' → logprob: -6.407998561859131
    4. 'à' → logprob: -7.282998561859131
    5. 'ra' → logprob: -7.907998561859131
    6. ' =' → logprob: -8.407998085021973
    7. ' donc' → logprob: -9.407998085021973
    8. ' aux' → logprob: -9.407998085021973
    9. 'au' → logprob: -10.032998085021973
    10. ' ' → logprob: -10.532998085021973

Token 187: ' au' (ID: 2791)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.5082890391349792
    2. ' au' → logprob: -1.008289098739624
    3. 'à' → logprob: -4.133288860321045
    4. 'au' → logprob: -4.133288860321045
    5. ' a' → logprob: -7.633288860321045
    6. ' ' → logprob: -7.758288860321045
    7. ' simplement' → logprob: -8.008289337158203
    8. ' =' → logprob: -9.383289337158203
    9. ' exactement' → logprob: -9.383289337158203
    10. '=' → logprob: -10.758289337158203

Token 188: ' plafond' (ID: 114829)
  Prédit: '(B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.09255021810531616
    2. ' (' → logprob: -2.592550277709961
    3. 'B' → logprob: -5.092550277709961
    4. '(' → logprob: -5.717550277709961
    5. '-B' → logprob: -6.842550277709961
    6. '-' → logprob: -7.217550277709961
    7. ' -' → logprob: -7.592550277709961
    8. '-(' → logprob: -7.592550277709961
    9. '((' → logprob: -7.842550277709961
    10. ' B' → logprob: -7.967550277709961

Token 189: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.23140113055706024
    2. '(A' → logprob: -2.356401205062866
    3. 'def' → logprob: -3.106401205062866
    4. ' (' → logprob: -3.856401205062866
    5. 'div' → logprob: -3.981401205062866
    6. '(B' → logprob: -5.231400966644287
    7. '(math' → logprob: -5.231400966644287
    8. 'import' → logprob: -5.356400966644287
    9. '(
' → logprob: -5.981400966644287
    10. ' de' → logprob: -6.231400966644287

Token 190: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.1476728916168213
    2. ' B' → logprob: -2.0226728916168213
    3. '(B' → logprob: -5.397672653198242
    4. ' (' → logprob: -7.897672653198242
    5. 'div' → logprob: -10.272672653198242
    6. ' ' → logprob: -10.772672653198242
    7. 'division' → logprob: -11.772672653198242
    8. '	B' → logprob: -12.272672653198242
    9. ' division' → logprob: -12.272672653198242
    10. ' ' → logprob: -12.397672653198242

Token 191: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.40983644127845764
    2. '/' → logprob: -1.2848364114761353
    3. '/A' → logprob: -3.159836530685425
    4. '/B' → logprob: -4.284836292266846
    5. 'div' → logprob: -6.034836292266846
    6. ' ' → logprob: -7.909836292266846
    7. '#' → logprob: -9.159836769104004
    8. 'import' → logprob: -9.534836769104004
    9. ' ' → logprob: -9.659836769104004
    10. '/div' → logprob: -9.784836769104004

Token 192: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.3869074881076813
    2. ' A' → logprob: -1.1369074583053589
    3. ' ' → logprob: -10.261907577514648
    4. ' ' → logprob: -13.886907577514648
    5. '  ' → logprob: -15.761907577514648
    6. '	A' → logprob: -16.01190757751465
    7. '_A' → logprob: -16.51190757751465
    8. '   ' → logprob: -16.51190757751465
    9. ''A' → logprob: -18.01190757751465
    10. '```' → logprob: -18.01190757751465

Token 193: '.

' (ID: 364)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.17289477586746216
    2. '
' → logprob: -2.2978947162628174
    3. '

' → logprob: -3.2978947162628174
    4. 'import' → logprob: -4.6728949546813965
    5. 'x' → logprob: -4.7978949546813965
    6. '\' → logprob: -6.9228949546813965
    7. 'result' → logprob: -7.5478949546813965
    8. '\n' → logprob: -7.5478949546813965
    9. '
' → logprob: -7.6728949546813965
    10. '' → logprob: -8.922894477844238

Token 194: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.001375591498799622
    2. 'import' → logprob: -7.001375675201416
    3. '
' → logprob: -8.626375198364258
    4. 'x' → logprob: -8.876375198364258
    5. '

' → logprob: -10.126375198364258
    6. ' def' → logprob: -10.751375198364258
    7. '\' → logprob: -11.251375198364258
    8. '```' → logprob: -11.376375198364258
    9. ' 
' → logprob: -11.501375198364258
    10. '  
' → logprob: -11.626375198364258

Token 195: ' max' (ID: 2999)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.3422996997833252
    2. ' minimal' → logprob: -1.7172996997833252
    3. ' minimum' → logprob: -2.967299699783325
    4. 'min' → logprob: -4.217299461364746
    5. ' max' → logprob: -4.342299461364746
    6. ' freq' → logprob: -5.217299461364746
    7. ' frequency' → logprob: -5.592299461364746
    8. ' minimale' → logprob: -5.592299461364746
    9. ' usage' → logprob: -5.967299461364746
    10. ' fréquence' → logprob: -6.092299461364746

Token 196: '_w' (ID: 3567)
  Prédit: '_usage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_usage' → logprob: -0.418464332818985
    2. '_util' → logprob: -1.7934643030166626
    3. '_frequency' → logprob: -2.168464422225952
    4. '_freq' → logprob: -3.168464422225952
    5. '_' → logprob: -4.293464183807373
    6. '_use' → logprob: -6.293464183807373
    7. '_f' → logprob: -6.668464183807373
    8. '_max' → logprob: -7.168464183807373
    9. '_fr' → logprob: -7.793464183807373
    10. '_used' → logprob: -7.793464183807373

Token 197: 'ear' (ID: 830)
  Prédit: 'ear'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ear' → logprob: -0.12234973907470703
    2. 'ait' → logprob: -3.497349739074707
    3. 'idth' → logprob: -4.122349739074707
    4. 'ith' → logprob: -4.372349739074707
    5. 'ears' → logprob: -4.622349739074707
    6. '_use' → logprob: -4.622349739074707
    7. 'rite' → logprob: -4.997349739074707
    8. '(' → logprob: -5.497349739074707
    9. 'rap' → logprob: -5.622349739074707
    10. 'rapped' → logprob: -5.997349739074707

Token 198: '_frequency' (ID: 98311)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5060763955116272
    2. '(A' → logprob: -1.2560763359069824
    3. '(max' → logprob: -2.3810763359069824
    4. '(a' → logprob: -5.006076335906982
    5. '_count' → logprob: -6.506076335906982
    6. '(freq' → logprob: -6.631076335906982
    7. '(_' → logprob: -6.881076335906982
    8. '_frequency' → logprob: -7.006076335906982
    9. '_max' → logprob: -7.131076335906982
    10. 'def' → logprob: -7.256076335906982

Token 199: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.03339427709579468
    2. '(' → logprob: -3.5333943367004395
    3. '(a' → logprob: -6.1583943367004395
    4. '(B' → logprob: -6.7833943367004395
    5. ' (' → logprob: -7.9083943367004395
    6. '(b' → logprob: -11.658393859863281
    7. '(
' → logprob: -12.158393859863281
    8. '(#' → logprob: -13.908393859863281
    9. ' ' → logprob: -14.033393859863281
    10. '   ' → logprob: -14.033393859863281

Token 200: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -2.2127087504486553e-05
    2. ' ,' → logprob: -10.875021934509277
    3. ',B' → logprob: -13.125021934509277
    4. ',b' → logprob: -14.125021934509277
    5. ',
' → logprob: -15.000021934509277
    6. ',

' → logprob: -16.625022888183594
    7. ',A' → logprob: -17.375022888183594
    8. ',int' → logprob: -18.125022888183594
    9. ',a' → logprob: -19.125022888183594
    10. '‌,' → logprob: -19.500022888183594

Token 201: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5759419798851013
    2. ' int' → logprob: -0.8259419798851013
    3. ' ' → logprob: -13.825942039489746
    4. ':int' → logprob: -13.825942039489746
    5. ',' → logprob: -15.450942039489746
    6. ' ' → logprob: -16.07594108581543
    7. ')' → logprob: -16.20094108581543
    8. ',int' → logprob: -16.70094108581543
    9. '[int' → logprob: -17.07594108581543
    10. ':' → logprob: -17.70094108581543

Token 202: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.53050296427682e-05
    2. ' ,' → logprob: -9.37508487701416
    3. ',
' → logprob: -15.50008487701416
    4. ',B' → logprob: -15.62508487701416
    5. ')' → logprob: -17.125085830688477
    6. ',

' → logprob: -17.500085830688477
    7. ',b' → logprob: -17.500085830688477
    8. ',A' → logprob: -17.500085830688477
    9. ',int' → logprob: -18.125085830688477
    10. '‌,' → logprob: -18.500085830688477

Token 203: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.1002068892121315
    2. ' B' → logprob: -2.3502068519592285
    3. ' ' → logprob: -15.225207328796387
    4. '   ' → logprob: -17.35020637512207
    5. ' ' → logprob: -17.35020637512207
    6. 'b' → logprob: -18.22520637512207
    7. '	B' → logprob: -18.60020637512207
    8. '  ' → logprob: -18.85020637512207
    9. '    ' → logprob: -19.22520637512207
    10. '```' → logprob: -19.47520637512207

Token 204: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001342903997283429
    2. '):' → logprob: -9.000134468078613
    3. ' )' → logprob: -12.625134468078613
    4. '):
' → logprob: -12.750134468078613
    5. ')->' → logprob: -12.875134468078613
    6. ':' → logprob: -13.375134468078613
    7. ',' → logprob: -15.250134468078613
    8. '   ' → logprob: -16.125133514404297
    9. '`)' → logprob: -16.500133514404297
    10. '):
' → logprob: -17.500133514404297

Token 205: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.018160473555326462
    2. ' int' → logprob: -4.018160343170166
    3. ')' → logprob: -11.518160820007324
    4. ':int' → logprob: -15.268160820007324
    5. '[int' → logprob: -15.518160820007324
    6. '=int' → logprob: -16.143159866333008
    7. '	int' → logprob: -17.143159866333008
    8. ']int' → logprob: -17.768159866333008
    9. ' ' → logprob: -18.018159866333008
    10. ' )' → logprob: -18.268159866333008

Token 206: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0325924449716695e-05
    2. '):' → logprob: -12.12501049041748
    3. ')->' → logprob: -12.50001049041748
    4. '):
' → logprob: -14.75001049041748
    5. ' )' → logprob: -14.87501049041748
    6. '`)' → logprob: -15.37501049041748
    7. '   ' → logprob: -17.000009536743164
    8. ':' → logprob: -17.125009536743164
    9. '')' → logprob: -17.750009536743164
    10. '*)' → logprob: -18.000009536743164

Token 207: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.6828266978263855
    2. ':' → logprob: -1.0578267574310303
    3. ' ->' → logprob: -1.9328267574310303
    4. ')' → logprob: -6.182826519012451
    5. ')->' → logprob: -7.557826519012451
    6. ':
' → logprob: -8.80782699584961
    7. '   ' → logprob: -9.68282699584961
    8. '>' → logprob: -10.30782699584961
    9. '):' → logprob: -11.43282699584961
    10. ':return' → logprob: -12.55782699584961

Token 208: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0031777136027812958
    2. ' int' → logprob: -5.753177642822266
    3. '   ' → logprob: -17.378177642822266
    4. '(int' → logprob: -18.378177642822266
    5. '[int' → logprob: -18.378177642822266
    6. ':int' → logprob: -18.628177642822266
    7. '	int' → logprob: -18.753177642822266
    8. '```' → logprob: -20.253177642822266
    9. ' ' → logprob: -20.753177642822266
    10. '  ' → logprob: -21.128177642822266

Token 209: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -9.372294698550832e-06
    2. ':
' → logprob: -12.000009536743164
    3. '):' → logprob: -13.250009536743164
    4. ' :' → logprob: -14.625009536743164
    5. ':return' → logprob: -14.875009536743164
    6. ':def' → logprob: -15.000009536743164
    7. '():' → logprob: -15.500009536743164
    8. ':**' → logprob: -16.000009536743164
    9. '   ' → logprob: -17.125009536743164
    10. ':int' → logprob: -17.375009536743164

Token 210: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013327404158189893
    2. ':' → logprob: -7.001332759857178
    3. ' return' → logprob: -8.75133228302002
    4. '
' → logprob: -9.00133228302002
    5. '    
' → logprob: -9.50133228302002
    6. ':
' → logprob: -10.12633228302002
    7. ' 
' → logprob: -12.12633228302002
    8. '    ' → logprob: -12.25133228302002
    9. '   ' → logprob: -12.62633228302002
    10. ':return' → logprob: -12.75133228302002

Token 211: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7042509317398071
    2. 'if' → logprob: -1.0792509317398071
    3. 'return' → logprob: -2.4542508125305176
    4. ' if' → logprob: -3.2042508125305176
    5. 'import' → logprob: -3.7042508125305176
    6. ' return' → logprob: -4.454250812530518
    7. 'from' → logprob: -6.204250812530518
    8. ' import' → logprob: -7.329250812530518
    9. ' from' → logprob: -8.954251289367676
    10. '```' → logprob: -10.329251289367676

Token 212: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02144051343202591
    2. ' if' → logprob: -4.021440505981445
    3. 'if' → logprob: -5.896440505981445
    4. ' return' → logprob: -8.771440505981445
    5. '    ' → logprob: -8.896440505981445
    6. 'import' → logprob: -9.271440505981445
    7. 'return' → logprob: -10.021440505981445
    8. ' max' → logprob: -10.146440505981445
    9. 'x' → logprob: -10.896440505981445
    10. ' import' → logprob: -11.146440505981445

Token 213: ' Cal' (ID: 4453)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5908229947090149
    2. 'Calcul' → logprob: -0.9658229947090149
    3. '"""' → logprob: -3.34082293510437
    4. '"""
' → logprob: -4.715823173522949
    5. 'return' → logprob: -4.840823173522949
    6. 'if' → logprob: -5.465823173522949
    7. 'Retour' → logprob: -6.215823173522949
    8. 'Cal' (adapté à ' Cal') → logprob: -6.215823173522949
    9. 'Calculate' → logprob: -6.340823173522949
    10. 'Returns' → logprob: -7.090823173522949

Token 214: 'cule' (ID: 45017)
  Prédit: 'cul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cul' → logprob: -0.2923649549484253
    2. 'cule' → logprob: -1.4173649549484253
    3. 'c' → logprob: -4.542365074157715
    4. 'culate' → logprob: -7.917365074157715
    5. 'cules' → logprob: -10.167365074157715
    6. '   ' → logprob: -10.542365074157715
    7. 'culator' → logprob: -11.292365074157715
    8. 'cular' → logprob: -11.542365074157715
    9. 'culated' → logprob: -11.542365074157715
    10. '
' → logprob: -11.542365074157715

Token 215: ' la' (ID: 557)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.6476448774337769
    2. '   ' → logprob: -1.0226448774337769
    3. ' la' → logprob: -2.1476449966430664
    4. '    ' → logprob: -9.522644996643066
    5. ' l' → logprob: -9.647644996643066
    6. 'le' → logprob: -10.022644996643066
    7. ' the' → logprob: -10.272644996643066
    8. ' return' → logprob: -10.397644996643066
    9. ' et' → logprob: -11.022644996643066
    10. ' max' → logprob: -11.522644996643066

Token 216: ' fréquence' (ID: 174518)
  Prédit: ' fréquence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fréquence' → logprob: -0.41561952233314514
    2. 'fr' → logprob: -1.4156194925308228
    3. ' (' → logprob: -2.5406196117401123
    4. '(max' → logprob: -5.915619373321533
    5. '(' → logprob: -6.040619373321533
    6. 'max' → logprob: -6.165619373321533
    7. '((' → logprob: -6.415619373321533
    8. 'fre' → logprob: -6.540619373321533
    9. '   ' → logprob: -6.915619373321533
    10. '(fr' → logprob: -7.040619373321533

Token 217: ' maximale' (ID: 76380)
  Prédit: ' maximale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maximale' → logprob: -0.0438774973154068
    2. '   ' → logprob: -3.293877601623535
    3. ' minimale' → logprob: -6.043877601623535
    4. 'max' → logprob: -6.418877601623535
    5. ' max' → logprob: -7.293877601623535
    6. ' maximum' → logprob: -7.418877601623535
    7. '_max' → logprob: -8.168877601623535
    8. ' maximal' → logprob: -8.793877601623535
    9. ' maxim' → logprob: -10.668877601623535
    10. 'maximum' → logprob: -11.043877601623535

Token 218: ' minimale' (ID: 143217)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.43004167079925537
    2. '   ' → logprob: -1.9300416707992554
    3. ' maximale' → logprob: -2.055041790008545
    4. 'd' → logprob: -2.680041790008545
    5. ' minimale' → logprob: -5.305041790008545
    6. 'max' → logprob: -6.180041790008545
    7. ' possible' → logprob: -8.180041313171387
    8. ' max' → logprob: -9.055041313171387
    9. '	d' → logprob: -10.055041313171387
    10. 'possible' → logprob: -10.180041313171387

Token 219: ' à' (ID: 1221)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.009289432317018509
    2. ' possible' → logprob: -5.259289264678955
    3. '   ' → logprob: -5.884289264678955
    4. ' maximale' → logprob: -7.759289264678955
    5. ' que' → logprob: -8.634289741516113
    6. ' utilis' → logprob: -8.759289741516113
    7. ' ' → logprob: -8.884289741516113
    8. 'd' → logprob: -9.134289741516113
    9. ' de' → logprob: -9.384289741516113
    10. 'possible' → logprob: -10.259289741516113

Token 220: ' laquelle' (ID: 47998)
  Prédit: ' laquelle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' laquelle' → logprob: -0.304320365190506
    2. 'la' → logprob: -2.1793203353881836
    3. 'util' → logprob: -2.1793203353881836
    4. 'which' → logprob: -4.304320335388184
    5. 'part' → logprob: -4.804320335388184
    6. '#' → logprob: -5.804320335388184
    7. 'min' → logprob: -6.429320335388184
    8. 'l' → logprob: -6.554320335388184
    9. '   ' → logprob: -6.679320335388184
    10. '```' → logprob: -6.804320335388184

Token 221: ' Y' (ID: 865)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.27257680892944336
    2. ' une' → logprob: -1.5225768089294434
    3. ' chaque' → logprob: -4.772576808929443
    4. 'on' → logprob: -5.522576808929443
    5. '   ' → logprob: -5.522576808929443
    6. ' on' → logprob: -6.022576808929443
    7. 'porter' → logprob: -7.772576808929443
    8. 'cha' → logprob: -8.147577285766602
    9. ' ' → logprob: -9.272577285766602
    10. '```' → logprob: -9.522577285766602

Token 222: 'ae' (ID: 10202)
  Prédit: 'ae'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ae' → logprob: -0.12468427419662476
    2. ' doit' → logprob: -2.3746843338012695
    3. 'a' → logprob: -4.4996843338012695
    4. ' peut' → logprob: -4.8746843338012695
    5. ' devra' → logprob: -6.7496843338012695
    6. '   ' → logprob: -6.8746843338012695
    7. ' va' → logprob: -7.3746843338012695
    8. ' a' → logprob: -7.3746843338012695
    9. ' veut' → logprob: -8.24968433380127
    10. ' pourra' → logprob: -8.37468433380127

Token 223: ' doit' (ID: 21822)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -1.0280869007110596
    2. ' peut' → logprob: -1.2780869007110596
    3. ' doit' → logprob: -1.9030869007110596
    4. ' pourra' → logprob: -2.0280869007110596
    5. ' devra' → logprob: -3.0280869007110596
    6. '   ' → logprob: -3.7780869007110596
    7. 'util' → logprob: -5.9030866622924805
    8. ' peux' → logprob: -6.1530866622924805
    9. 'pour' → logprob: -6.5280866622924805
    10. ' pourrait' → logprob: -6.7780866622924805

Token 224: ' porter' (ID: 63049)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'util' → logprob: -0.01191683579236269
    2. ' utiliser' → logprob: -4.511916637420654
    3. 'porter' → logprob: -7.511916637420654
    4. 'mettre' → logprob: -8.886917114257812
    5. 'wear' → logprob: -10.261917114257812
    6. '```' → logprob: -10.636917114257812
    7. ' porter' → logprob: -11.011917114257812
    8. '#' → logprob: -11.511917114257812
    9. ''utiliser' → logprob: -11.511917114257812
    10. 'user' → logprob: -11.636917114257812

Token 225: ' la' (ID: 557)
  Prédit: ' sa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sa' → logprob: -0.5310124754905701
    2. ' une' → logprob: -1.1560125350952148
    3. ' chaque' → logprob: -2.906012535095215
    4. 'une' → logprob: -3.906012535095215
    5. ' ses' → logprob: -4.031012535095215
    6. ' chacune' → logprob: -6.281012535095215
    7. 'sa' → logprob: -7.031012535095215
    8. '   ' → logprob: -7.406012535095215
    9. ' la' → logprob: -7.906012535095215
    10. ' ' → logprob: -8.531012535095215

Token 226: ' même' (ID: 9679)
  Prédit: 'robe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'robe' → logprob: -0.40030166506767273
    2. ' robe' → logprob: -1.1503016948699951
    3. ' même' → logprob: -5.025301456451416
    4. 'm' → logprob: -5.400301456451416
    5. 'robes' → logprob: -7.400301456451416
    6. '   ' → logprob: -8.025301933288574
    7. 'rob' → logprob: -8.275301933288574
    8. ' rob' → logprob: -8.400301933288574
    9. 'ro' → logprob: -9.025301933288574
    10. ' ' → logprob: -9.150301933288574

Token 227: ' robe' (ID: 71960)
  Prédit: ' robe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' robe' → logprob: -0.5760784149169922
    2. 'robe' → logprob: -0.8260784149169922
    3. '   ' → logprob: -9.701078414916992
    4. ' ' → logprob: -10.326078414916992
    5. ' ' → logprob: -11.701078414916992
    6. '
' → logprob: -11.701078414916992
    7. 'rob' → logprob: -11.826078414916992
    8. ' rob' → logprob: -11.951078414916992
    9. '#' → logprob: -12.451078414916992
    10. '  ' → logprob: -12.701078414916992

Token 228: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002258856315165758
    2. ',' → logprob: -6.377258777618408
    3. ' pour' → logprob: -8.002259254455566
    4. ' afin' → logprob: -8.752259254455566
    5. '.' → logprob: -10.752259254455566
    6. ' en' → logprob: -11.502259254455566
    7. 'pour' → logprob: -11.627259254455566
    8. 'def' → logprob: -12.002259254455566
    9. ' (' → logprob: -12.627259254455566
    10. '   ' → logprob: -12.877259254455566

Token 229: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -3.368984107510187e-05
    2. '    
' → logprob: -11.250033378601074
    3. '"""' → logprob: -11.375033378601074
    4. '
' → logprob: -11.750033378601074
    5. '   ' → logprob: -14.625033378601074
    6. '"""
' → logprob: -14.875033378601074
    7. '```' → logprob: -15.250033378601074
    8. '    ' → logprob: -15.750033378601074
    9. 'return' → logprob: -17.00003433227539
    10. '   ' → logprob: -17.25003433227539

Token 230: ' :' (ID: 712)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002262663561850786
    2. '"""' → logprob: -6.627262592315674
    3. '"""
' → logprob: -7.502262592315674
    4. 'if' → logprob: -9.002263069152832
    5. 'Si' → logprob: -9.252263069152832
    6. '
' → logprob: -9.377263069152832
    7. '    
' → logprob: -10.752263069152832
    8. 'return' → logprob: -11.127263069152832
    9. ' if' → logprob: -11.627263069152832
    10. '```' → logprob: -12.127263069152832

Token 231: 'param' (ID: 1355)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20568877458572388
    2. '"""
' → logprob: -1.830688714981079
    3. '"""' → logprob: -4.080688953399658
    4. 'return' → logprob: -5.955688953399658
    5. 'param' → logprob: -6.455688953399658
    6. 'Returns' → logprob: -6.830688953399658
    7. '       ' → logprob: -7.330688953399658
    8. '    ' → logprob: -7.455688953399658
    9. '```' → logprob: -7.705688953399658
    10. ' """
' → logprob: -8.0806884765625

Token 232: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.005327912513166666
    2. ' A' → logprob: -5.3803277015686035
    3. 'int' → logprob: -7.3803277015686035
    4. '   ' → logprob: -9.630328178405762
    5. ' int' → logprob: -12.255328178405762
    6. ' ' → logprob: -12.630328178405762
    7. '  ' → logprob: -13.005328178405762
    8. '`' → logprob: -13.005328178405762
    9. 'param' → logprob: -13.130328178405762
    10. 'B' → logprob: -13.880328178405762

Token 233: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00026872646412812173
    2. ':int' → logprob: -8.250268936157227
    3. 'int' → logprob: -12.250268936157227
    4. ' :' → logprob: -13.875268936157227
    5. ' int' → logprob: -14.375268936157227
    6. '[int' → logprob: -14.500268936157227
    7. '(int' → logprob: -15.000268936157227
    8. '   ' → logprob: -15.125268936157227
    9. ',' → logprob: -16.750268936157227
    10. '```' → logprob: -17.375268936157227

Token 234: ' Nombre' (ID: 70208)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.01991232857108116
    2. ' int' → logprob: -4.019912242889404
    3. 'Nombre' → logprob: -6.394912242889404
    4. 'Le' → logprob: -9.769912719726562
    5. '   ' → logprob: -11.644912719726562
    6. 'Number' → logprob: -12.144912719726562
    7. 'nombre' → logprob: -12.144912719726562
    8. ' Nombre' → logprob: -12.144912719726562
    9. ' nombre' → logprob: -12.519912719726562
    10. ' Le' → logprob: -13.394912719726562

Token 235: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.014526855200529099
    2. '_de' → logprob: -4.764526844024658
    3. 'de' → logprob: -5.514526844024658
    4. ' ' → logprob: -6.639526844024658
    5. ' d' → logprob: -8.639527320861816
    6. '  ' → logprob: -8.889527320861816
    7. '   ' → logprob: -8.889527320861816
    8. ' des' → logprob: -10.514527320861816
    9. '_' → logprob: -11.014527320861816
    10. 'd' → logprob: -11.139527320861816

Token 236: ' robes' (ID: 127604)
  Prédit: ' robes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' robes' → logprob: -0.6337624192237854
    2. 'robes' → logprob: -0.7587624192237854
    3. 'rob' → logprob: -7.508762359619141
    4. ' rob' → logprob: -7.883762359619141
    5. 'ro' → logprob: -9.75876235961914
    6. ' ' → logprob: -10.25876235961914
    7. ' dresses' → logprob: -10.38376235961914
    8. 'robe' → logprob: -10.75876235961914
    9. 'rou' → logprob: -10.75876235961914
    10. 'robots' → logprob: -10.75876235961914

Token 237: ' disponibles' (ID: 36617)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09042126685380936
    2. '   ' → logprob: -2.465421199798584
    3. ',
' → logprob: -7.340421199798584
    4. '    
' → logprob: -8.215421676635742
    5. ' ,' → logprob: -8.590421676635742
    6. '
' → logprob: -9.090421676635742
    7. ' (' → logprob: -9.465421676635742
    8. ' disponible' → logprob: -9.590421676635742
    9. ':' → logprob: -9.840421676635742
    10. ' disponibles' → logprob: -10.965421676635742

Token 238: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5297788381576538
    2. '   ' → logprob: -0.9047788381576538
    3. ',
' → logprob: -6.029778957366943
    4. '    
' → logprob: -6.154778957366943
    5. '
' → logprob: -6.779778957366943
    6. ' ,' → logprob: -7.904778957366943
    7. ')' → logprob: -8.654778480529785
    8. '<|end|>' → logprob: -9.654778480529785
    9. 'A' → logprob: -9.904778480529785
    10. '   
' → logprob: -10.029778480529785

Token 239: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -6.599403423024341e-05
    2. ' :' → logprob: -10.250065803527832
    3. '    ' → logprob: -11.125065803527832
    4. ':param' → logprob: -11.500065803527832
    5. ':' → logprob: -13.125065803527832
    6. '  ' → logprob: -13.625065803527832
    7. '    
' → logprob: -14.375065803527832
    8. '
' → logprob: -14.875065803527832
    9. '@param' → logprob: -15.000065803527832
    10. '       ' → logprob: -15.000065803527832

Token 240: ' :' (ID: 712)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030356869101524353
    2. 'B' → logprob: -4.1553568840026855
    3. ' B' → logprob: -4.2803568840026855
    4. '    ' → logprob: -8.280356407165527
    5. ' :' → logprob: -9.530356407165527
    6. ' ' → logprob: -10.905356407165527
    7. '  ' → logprob: -11.280356407165527
    8. ':' (adapté à ' :') → logprob: -12.405356407165527
    9. '
' → logprob: -12.530356407165527
    10. ':param' → logprob: -12.780356407165527

Token 241: 'param' (ID: 1355)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.10326851159334183
    2. ' B' → logprob: -2.353268623352051
    3. '   ' → logprob: -6.228268623352051
    4. 'param' → logprob: -6.853268623352051
    5. ' param' → logprob: -11.47826862335205
    6. 'b' → logprob: -11.85326862335205
    7. ' ' → logprob: -12.47826862335205
    8. 'type' → logprob: -13.35326862335205
    9. '  ' → logprob: -13.47826862335205
    10. '	B' → logprob: -13.97826862335205

Token 242: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.2519713342189789
    2. ' B' → logprob: -1.5019713640213013
    3. '   ' → logprob: -10.126971244812012
    4. ' ' → logprob: -13.626971244812012
    5. ' ' → logprob: -14.251971244812012
    6. '    ' → logprob: -15.751971244812012
    7. '  ' → logprob: -16.001972198486328
    8. 'b' → logprob: -16.126972198486328
    9. '	B' → logprob: -17.126972198486328
    10. '     ' → logprob: -17.751972198486328

Token 243: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -5.955703818472102e-05
    2. ' :' → logprob: -9.750059127807617
    3. ':int' → logprob: -14.000059127807617
    4. ')' → logprob: -15.000059127807617
    5. '):' → logprob: -16.875059127807617
    6. '   ' → logprob: -17.625059127807617
    7. ',' → logprob: -18.250059127807617
    8. '  ' → logprob: -18.250059127807617
    9. ' ' → logprob: -19.000059127807617
    10. '```' → logprob: -19.500059127807617

Token 244: ' Nombre' (ID: 70208)
  Prédit: ' Nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Nombre' → logprob: -0.8731162548065186
    2. ' int' → logprob: -1.2481162548065186
    3. 'Nombre' → logprob: -1.2481162548065186
    4. 'int' → logprob: -4.873116493225098
    5. ' nombre' → logprob: -7.748116493225098
    6. ' ' → logprob: -9.373116493225098
    7. ' Number' → logprob: -9.998116493225098
    8. 'Number' → logprob: -10.998116493225098
    9. ' Le' → logprob: -11.998116493225098
    10. 'nombre' → logprob: -11.998116493225098

Token 245: ' total' (ID: 3609)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.4373321533203125
    2. ' de' → logprob: -1.9373321533203125
    3. 'd' → logprob: -2.1873321533203125
    4. '_de' → logprob: -3.4373321533203125
    5. '_d' → logprob: -4.1873321533203125
    6. ' ' → logprob: -4.4373321533203125
    7. '_' → logprob: -4.6873321533203125
    8. 'de' → logprob: -4.9373321533203125
    9. ' total' → logprob: -4.9373321533203125
    10. '_util' → logprob: -5.5623321533203125

Token 246: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.23409567773342133
    2. ' d' → logprob: -1.7340956926345825
    3. 'd' → logprob: -4.609095573425293
    4. '   ' → logprob: -4.859095573425293
    5. 'de' → logprob: -4.984095573425293
    6. ' ' → logprob: -5.109095573425293
    7. '  ' → logprob: -7.359095573425293
    8. '_de' → logprob: -7.984095573425293
    9. '_' → logprob: -9.234095573425293
    10. '#' → logprob: -9.359095573425293

Token 247: ' fêtes' (ID: 130551)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.7462015748023987
    2. ' fêtes' → logprob: -0.7462015748023987
    3. ' utilis' → logprob: -3.246201515197754
    4. 'util' → logprob: -5.496201515197754
    5. 'fest' → logprob: -6.496201515197754
    6. 'fois' → logprob: -6.746201515197754
    7. ' soirées' → logprob: -7.121201515197754
    8. 'faits' → logprob: -7.371201515197754
    9. ' robes' → logprob: -7.621201515197754
    10. '```' → logprob: -7.871201515197754

Token 248: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011715145781636238
    2. ')' → logprob: -4.636714935302734
    3. '):' → logprob: -6.886714935302734
    4. '):
' → logprob: -7.636714935302734
    5. '
' → logprob: -8.511714935302734
    6. ' à' → logprob: -9.761714935302734
    7. '```' → logprob: -10.011714935302734
    8. '    ' → logprob: -10.386714935302734
    9. ',' → logprob: -10.761714935302734
    10. '    
' → logprob: -10.886714935302734

Token 249: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000982435536570847
    2. '"""' → logprob: -7.125982284545898
    3. ')' → logprob: -9.125982284545898
    4. '```' → logprob: -10.875982284545898
    5. '    
' → logprob: -11.000982284545898
    6. '"""
' → logprob: -11.250982284545898
    7. '
' → logprob: -11.250982284545898
    8. '    ' → logprob: -13.250982284545898
    9. ' """' → logprob: -13.750982284545898
    10. '):
' → logprob: -13.750982284545898

Token 250: ' :' (ID: 712)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012249445542693138
    2. '"""' → logprob: -4.51224946975708
    3. '"""
' → logprob: -7.01224946975708
    4. '```' → logprob: -9.262248992919922
    5. ')' → logprob: -9.512248992919922
    6. '
' → logprob: -10.137248992919922
    7. '    
' → logprob: -10.262248992919922
    8. ' """
' → logprob: -11.262248992919922
    9. ' """' → logprob: -11.387248992919922
    10. '    ' → logprob: -11.637248992919922

Token 251: 'return' (ID: 1034)
  Prédit: 'return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0711146667599678
    2. '   ' → logprob: -3.1961147785186768
    3. ' return' → logprob: -4.071114540100098
    4. 'returns' → logprob: -5.446114540100098
    5. ':return' → logprob: -6.196114540100098
    6. '"""
' → logprob: -6.446114540100098
    7. '"""' → logprob: -6.821114540100098
    8. 'Returns' → logprob: -7.071114540100098
    9. ' returns' → logprob: -8.446114540100098
    10. '"' → logprob: -8.571114540100098

Token 252: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1682884842157364
    2. '   ' → logprob: -2.168288469314575
    3. ' int' → logprob: -3.293288469314575
    4. 'A' → logprob: -7.043288707733154
    5. 'int' → logprob: -7.043288707733154
    6. ' :' → logprob: -7.918288707733154
    7. '    ' → logprob: -7.918288707733154
    8. ' A' → logprob: -8.043288230895996
    9. ' max' → logprob: -8.418288230895996
    10. ':int' → logprob: -8.668288230895996

Token 253: ' Fr' (ID: 2312)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.7391155362129211
    2. ' int' → logprob: -0.9891155362129211
    3. 'int' → logprob: -3.1141154766082764
    4. '(int' → logprob: -3.3641154766082764
    5. 'Le' → logprob: -3.3641154766082764
    6. ' Le' → logprob: -3.9891154766082764
    7. '   ' → logprob: -4.4891157150268555
    8. ' le' → logprob: -5.8641157150268555
    9. ' L' → logprob: -6.3641157150268555
    10. 'L' → logprob: -6.7391157150268555

Token 254: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.05370655283331871
    2. 'équ' → logprob: -3.678706645965576
    3. '   ' → logprob: -4.178706645965576
    4. 'éc' → logprob: -5.053706645965576
    5. 'eq' → logprob: -6.553706645965576
    6. 'e' → logprob: -6.803706645965576
    7. '       ' → logprob: -7.553706645965576
    8. 'et' → logprob: -8.053706169128418
    9. ' maximale' → logprob: -8.428706169128418
    10. 'éf' → logprob: -8.553706169128418

Token 255: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.0034069207031279802
    2. 'q' → logprob: -5.753407001495361
    3. 'quent' → logprob: -9.128406524658203
    4. 'quency' → logprob: -10.003406524658203
    5. 'qu' → logprob: -10.378406524658203
    6. 'quences' → logprob: -11.003406524658203
    7. '   ' → logprob: -12.128406524658203
    8. '#' → logprob: -12.503406524658203
    9. 'QUENCE' → logprob: -12.503406524658203
    10. 'rence' → logprob: -12.878406524658203

Token 256: ' maximale' (ID: 76380)
  Prédit: ' maximale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maximale' → logprob: -0.14328373968601227
    2. '   ' → logprob: -2.1432838439941406
    3. ' max' → logprob: -5.268283843994141
    4. '_max' → logprob: -5.268283843994141
    5. ' minimale' → logprob: -5.518283843994141
    6. 'max' → logprob: -7.393283843994141
    7. ' maximum' → logprob: -7.643283843994141
    8. ' maximal' → logprob: -7.768283843994141
    9. ' maxim' → logprob: -9.26828384399414
    10. ' de' → logprob: -10.39328384399414

Token 257: ' la' (ID: 557)
  Prédit: ' minimale'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' minimale' → logprob: -0.03536916524171829
    2. ' d' → logprob: -3.5353691577911377
    3. ' maximale' → logprob: -6.160369396209717
    4. '_min' → logprob: -6.785369396209717
    5. 'min' → logprob: -7.035369396209717
    6. ' minimal' → logprob: -7.660369396209717
    7. '   ' → logprob: -8.160368919372559
    8. ' minim' → logprob: -8.660368919372559
    9. ' possible' → logprob: -8.785368919372559
    10. 'd' → logprob: -9.160368919372559

Token 258: ' plus' (ID: 2932)
  Prédit: ' minimale'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' minimale' → logprob: -0.08340238779783249
    2. ' plus' → logprob: -3.708402395248413
    3. '   ' → logprob: -3.958402395248413
    4. ' minimal' → logprob: -4.958402156829834
    5. 'plus' → logprob: -5.208402156829834
    6. 'min' → logprob: -5.583402156829834
    7. ' maximale' → logprob: -5.833402156829834
    8. '  ' → logprob: -5.833402156829834
    9. ' moindre' → logprob: -5.958402156829834
    10. ' même' → logprob: -6.208402156829834

Token 259: ' basse' (ID: 110686)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.2911109924316406
    2. 'pet' → logprob: -1.7911109924316406
    3. 'fa' → logprob: -3.1661109924316406
    4. ' faible' → logprob: -4.291110992431641
    5. 'min' → logprob: -4.541110992431641
    6. 'bas' → logprob: -5.041110992431641
    7. '```' → logprob: -5.666110992431641
    8. 'import' → logprob: -5.916110992431641
    9. 'minimal' → logprob: -6.916110992431641
    10. 'small' → logprob: -7.166110992431641

Token 260: ' possible' (ID: 4149)
  Prédit: ' possible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' possible' → logprob: -0.19929470121860504
    2. 'possible' → logprob: -1.8242946863174438
    3. '   ' → logprob: -4.074294567108154
    4. '_possible' → logprob: -7.449294567108154
    5. ' d' → logprob: -7.574294567108154
    6. '       ' → logprob: -8.449295043945312
    7. ' minimale' → logprob: -8.449295043945312
    8. '```' → logprob: -8.824295043945312
    9. 'd' → logprob: -9.199295043945312
    10. ' maximale' → logprob: -9.199295043945312

Token 261: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011665337951853871
    2. '    
' → logprob: -7.376166343688965
    3. '
' → logprob: -7.626166343688965
    4. '   
' → logprob: -11.126166343688965
    5. '     
' → logprob: -12.251166343688965
    6. '  
' → logprob: -12.251166343688965
    7. '```' → logprob: -12.376166343688965
    8. '    ' → logprob: -12.501166343688965
    9. '\n' → logprob: -12.626166343688965
    10. ',' → logprob: -12.876166343688965

Token 262: ' ré' (ID: 3146)
  Prédit: ' utilisation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' utilisation' → logprob: -0.5078152418136597
    2. 'port' → logprob: -2.257815361022949
    3. 'util' → logprob: -2.632815361022949
    4. ' l' → logprob: -2.757815361022949
    5. ' port' → logprob: -2.882815361022949
    6. ' la' → logprob: -2.882815361022949
    7. ' usage' → logprob: -4.132815361022949
    8. 'l' → logprob: -4.132815361022949
    9. 'la' → logprob: -5.257815361022949
    10. 'usage' → logprob: -5.507815361022949

Token 263: 'util' (ID: 2056)
  Prédit: 'util'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'util' → logprob: -0.001443568617105484
    2. 'partition' → logprob: -6.876443386077881
    3. 'p' → logprob: -8.376443862915039
    4. 'usage' → logprob: -10.376443862915039
    5. 'emploi' → logprob: -10.376443862915039
    6. '-util' → logprob: -10.501443862915039
    7. 'ut' → logprob: -10.626443862915039
    8. ''utilisation' → logprob: -11.376443862915039
    9. 'petition' → logprob: -12.126443862915039
    10. '_util' → logprob: -12.126443862915039

Token 264: 'isation' (ID: 6993)
  Prédit: 'isation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isation' → logprob: -0.09285695850849152
    2. 'ation' → logprob: -2.5928568840026855
    3. 'ication' → logprob: -5.0928568840026855
    4. 'er' → logprob: -5.5928568840026855
    5. 'iser' → logprob: -6.7178568840026855
    6. 'ition' → logprob: -7.0928568840026855
    7. 'ération' → logprob: -8.092857360839844
    8. 'isations' → logprob: -8.092857360839844
    9. 'ocation' → logprob: -8.467857360839844
    10. 'ization' → logprob: -8.592857360839844

Token 265: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.8060726523399353
    2. '   ' → logprob: -0.9310726523399353
    3. 'd' → logprob: -1.93107271194458
    4. ' de' → logprob: -4.55607271194458
    5. 'de' → logprob: -6.30607271194458
    6. ' ' → logprob: -6.80607271194458
    7. '"""
' → logprob: -8.306072235107422
    8. '```' → logprob: -8.556072235107422
    9. '  ' → logprob: -9.181072235107422
    10. ' pour' → logprob: -10.056072235107422

Token 266: ''une' (ID: 13337)
  Prédit: ''une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''une' → logprob: -0.0968942865729332
    2. 'une' → logprob: -2.4718942642211914
    3. 'a' → logprob: -5.471894264221191
    4. ' une' → logprob: -6.971894264221191
    5. '’une' → logprob: -7.471894264221191
    6. '   ' → logprob: -7.596894264221191
    7. 'la' → logprob: -7.721894264221191
    8. '```' → logprob: -7.721894264221191
    9. 'e' → logprob: -8.096894264221191
    10. ' la' → logprob: -8.346894264221191

Token 267: ' robe' (ID: 71960)
  Prédit: ' robe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' robe' → logprob: -0.5253514647483826
    2. 'robe' → logprob: -0.9003514647483826
    3. ' même' → logprob: -6.525351524353027
    4. 'm' → logprob: -8.025351524353027
    5. '   ' → logprob: -9.025351524353027
    6. ' ' → logprob: -9.525351524353027
    7. ' ' → logprob: -9.775351524353027
    8. '```' → logprob: -10.150351524353027
    9. 'rob' → logprob: -10.275351524353027
    10. ' rob' → logprob: -10.650351524353027

Token 268: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12576277554035187
    2. ')' → logprob: -3.000762701034546
    3. '):
' → logprob: -3.625762701034546
    4. ':' → logprob: -4.000762939453125
    5. '):' → logprob: -4.500762939453125
    6. '.' → logprob: -5.250762939453125
    7. ':
' → logprob: -5.375762939453125
    8. '
' → logprob: -7.250762939453125
    9. '.
' → logprob: -7.500762939453125
    10. '    
' → logprob: -8.375762939453125

Token 269: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -5.764977686339989e-05
    2. ')' → logprob: -10.875057220458984
    3. '
' → logprob: -11.250057220458984
    4. '"""' → logprob: -11.500057220458984
    5. '    
' → logprob: -11.625057220458984
    6. '```' → logprob: -12.125057220458984
    7. '   ' → logprob: -14.625057220458984
    8. '):
' → logprob: -15.500057220458984
    9. 'return' → logprob: -15.625057220458984
    10. '    ' → logprob: -16.250057220458984

Token 270: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001660662586800754
    2. '"""' → logprob: -6.5016608238220215
    3. '```' → logprob: -9.876660346984863
    4. 'return' → logprob: -9.876660346984863
    5. '
' → logprob: -10.751660346984863
    6. 'if' → logprob: -11.501660346984863
    7. '"""
' (adapté à ' """
') → logprob: -11.626660346984863
    8. ')' → logprob: -11.876660346984863
    9. '    
' → logprob: -13.251660346984863
    10. ' return' → logprob: -13.251660346984863

Token 271: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -9.13388703338569e-06
    2. 'return' → logprob: -11.625009536743164
    3. ' return' → logprob: -16.125009536743164
    4. '```' → logprob: -17.000009536743164
    5. '   ' → logprob: -17.750009536743164
    6. '    
' → logprob: -17.750009536743164
    7. 'if' → logprob: -18.250009536743164
    8. '
' → logprob: -18.500009536743164
    9. '    ' → logprob: -18.625009536743164
    10. '       ' → logprob: -19.250009536743164

Token 272: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.056398987770080566
    2. '   ' → logprob: -3.431398868560791
    3. 'if' → logprob: -3.806398868560791
    4. 'import' → logprob: -8.93139934539795
    5. ' return' → logprob: -9.05639934539795
    6. '#' (adapté à ' #') → logprob: -12.05639934539795
    7. 'result' → logprob: -12.30639934539795
    8. 'from' → logprob: -12.93139934539795
    9. ' if' → logprob: -13.18139934539795
    10. '```' → logprob: -13.43139934539795

Token 273: ' Util' (ID: 13564)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.08875524252653122
    2. '   ' → logprob: -2.7137551307678223
    3. 'if' → logprob: -4.463755130767822
    4. ' return' → logprob: -5.088755130767822
    5. 'import' → logprob: -7.838755130767822
    6. 'from' → logprob: -7.963755130767822
    7. ' if' → logprob: -9.08875560760498
    8. 'result' → logprob: -9.46375560760498
    9. '#' → logprob: -11.83875560760498
    10. 'max' → logprob: -12.21375560760498

Token 274: 'isation' (ID: 6993)
  Prédit: 'iser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.0035100337117910385
    2. 'isation' → logprob: -6.128509998321533
    3. 'ise' → logprob: -7.253509998321533
    4. 'isons' → logprob: -8.253510475158691
    5. 'isez' → logprob: -8.628510475158691
    6. '   ' → logprob: -9.878510475158691
    7. 'is' → logprob: -10.003510475158691
    8. 'er' → logprob: -10.253510475158691
    9. 'isant' → logprob: -11.253510475158691
    10. 'isé' → logprob: -11.378510475158691

Token 275: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008899010717868805
    2. 'return' → logprob: -5.508899211883545
    3. ' return' → logprob: -5.508899211883545
    4. ' (' → logprob: -7.883899211883545
    5. 'max' → logprob: -9.633898735046387
    6. ' de' → logprob: -9.758898735046387
    7. '(' → logprob: -9.883898735046387
    8. 'import' → logprob: -9.883898735046387
    9. ' max' → logprob: -10.383898735046387
    10. ' ' → logprob: -10.383898735046387

Token 276: ' la' (ID: 557)
  Prédit: '(B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.3376033306121826
    2. '(A' → logprob: -1.8376033306121826
    3. ' (' → logprob: -2.0876033306121826
    4. ' -' → logprob: -6.462603569030762
    5. '-' → logprob: -7.212603569030762
    6. '(b' → logprob: -7.712603569030762
    7. ' ' → logprob: -8.837603569030762
    8. '(a' → logprob: -9.212603569030762
    9. 'import' → logprob: -9.462603569030762
    10. '(' → logprob: -9.712603569030762

Token 277: ' division' (ID: 21629)
  Prédit: '(B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.12110153585672379
    2. '(A' → logprob: -2.7461016178131104
    3. '-' → logprob: -3.2461016178131104
    4. ' -' → logprob: -5.746101379394531
    5. 'import' → logprob: -6.246101379394531
    6. '-B' → logprob: -6.371101379394531
    7. ' (' → logprob: -6.496101379394531
    8. '-(' → logprob: -6.746101379394531
    9. '(math' → logprob: -7.996101379394531
    10. '-b' → logprob: -8.621101379394531

Token 278: ' entière' (ID: 61583)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1457158625125885
    2. ' return' → logprob: -2.5207159519195557
    3. 'return' → logprob: -3.1457159519195557
    4. 'B' → logprob: -5.520715713500977
    5. '  ' → logprob: -6.520715713500977
    6. ' (' → logprob: -6.645715713500977
    7. ' B' → logprob: -6.645715713500977
    8. '    ' → logprob: -7.145715713500977
    9. 'result' → logprob: -7.520715713500977
    10. ' =' → logprob: -7.895715713500977

Token 279: ' avec' (ID: 3937)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013117826310917735
    2. 'return' → logprob: -7.001311779022217
    3. ' return' → logprob: -7.876311779022217
    4. '    ' → logprob: -12.251312255859375
    5. '  ' → logprob: -12.626312255859375
    6. ',' → logprob: -12.751312255859375
    7. '    
' → logprob: -12.751312255859375
    8. '   ' → logprob: -13.751312255859375
    9. ' +' → logprob: -14.251312255859375
    10. 'result' → logprob: -14.251312255859375

Token 280: ' arr' (ID: 1724)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6109393239021301
    2. '-' → logprob: -1.3609392642974854
    3. ' -' → logprob: -2.6109392642974854
    4. '(A' → logprob: -3.2359392642974854
    5. '(B' → logprob: -3.3609392642974854
    6. '(' → logprob: -3.6109392642974854
    7. '(-' → logprob: -4.9859395027160645
    8. '-(' → logprob: -5.1109395027160645
    9. '((' → logprob: -5.8609395027160645
    10. 'import' → logprob: -5.9859395027160645

Token 281: 'ondi' (ID: 117409)
  Prédit: 'ondi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ondi' → logprob: -0.3885743021965027
    2. 'ond' → logprob: -1.1385743618011475
    3. 'ondissement' → logprob: -6.388574123382568
    4. 'on' → logprob: -11.638574600219727
    5. 'ont' → logprob: -12.638574600219727
    6. 'ound' → logprob: -13.263574600219727
    7. 'onde' → logprob: -13.513574600219727
    8. '```' → logprob: -13.638574600219727
    9. '##' → logprob: -14.138574600219727
    10. 'ivée' → logprob: -14.513574600219727

Token 282: ' supérieur' (ID: 98491)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00949184875935316
    2. ' supérieure' → logprob: -5.759491920471191
    3. '  ' → logprob: -6.634491920471191
    4. 'import' → logprob: -7.134491920471191
    5. 'sup' → logprob: -7.134491920471191
    6. ' ' → logprob: -7.759491920471191
    7. 'def' → logprob: -7.759491920471191
    8. ' vers' → logprob: -8.134491920471191
    9. '(B' → logprob: -8.134491920471191
    10. 'vers' → logprob: -8.259491920471191

Token 283: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006210576975718141
    2. 'return' → logprob: -7.8756208419799805
    3. ' return' → logprob: -9.00062084197998
    4. '    
' → logprob: -10.00062084197998
    5. '
' → logprob: -10.62562084197998
    6. ':' → logprob: -11.25062084197998
    7. '    ' → logprob: -11.25062084197998
    8. '  ' → logprob: -12.25062084197998
    9. '   
' → logprob: -13.00062084197998
    10. ',' → logprob: -13.12562084197998

Token 284: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0014366621617227793
    2. 'return' → logprob: -6.626436710357666
    3. ' return' → logprob: -9.126436233520508
    4. '
' → logprob: -13.876436233520508
    5. '    
' → logprob: -14.626436233520508
    6. '  ' → logprob: -15.751436233520508
    7. '    ' → logprob: -15.876436233520508
    8. 'import' → logprob: -16.126436233520508
    9. '   ' → logprob: -16.251436233520508
    10. 'def' → logprob: -17.001436233520508

Token 285: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1055971086025238
    2. 'return' → logprob: -2.3555970191955566
    3. ' return' → logprob: -5.230597019195557
    4. 'import' → logprob: -11.355597496032715
    5. 'if' → logprob: -11.730597496032715
    6. 'result' → logprob: -12.605597496032715
    7. ' if' → logprob: -13.980597496032715
    8. '   ' → logprob: -15.105597496032715
    9. '```' → logprob: -15.230597496032715
    10. '    ' → logprob: -15.480597496032715

Token 286: ' Pour' (ID: 13931)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4486936628818512
    2. '   ' → logprob: -1.0736936330795288
    3. ' return' → logprob: -3.9486937522888184
    4. 'result' → logprob: -8.44869327545166
    5. 'import' → logprob: -8.57369327545166
    6. 'max' → logprob: -10.19869327545166
    7. 'from' → logprob: -10.57369327545166
    8. 'if' → logprob: -10.94869327545166
    9. 'x' → logprob: -11.69869327545166
    10. ' result' → logprob: -12.44869327545166

Token 287: ' calcul' (ID: 7559)
  Prédit: ' B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.8325532078742981
    2. 'B' → logprob: -1.4575531482696533
    3. ' éviter' → logprob: -2.3325531482696533
    4. ' return' → logprob: -3.3325531482696533
    5. ' calcul' → logprob: -3.3325531482696533
    6. 'return' → logprob: -3.5825531482696533
    7. '   ' → logprob: -3.7075531482696533
    8. 'calcul' → logprob: -3.7075531482696533
    9. 'A' → logprob: -4.207553386688232
    10. ' garantir' → logprob: -4.207553386688232

Token 288: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -7.839121826691553e-05
    2. '#' → logprob: -10.000078201293945
    3. 'r' → logprob: -10.875078201293945
    4. 'ler' → logprob: -11.875078201293945
    5. 'ater' → logprob: -13.250078201293945
    6. '   ' → logprob: -14.125078201293945
    7. 'A' → logprob: -14.250078201293945
    8. 'rer' → logprob: -14.375078201293945
    9. 'ar' → logprob: -14.500078201293945
    10. 'uer' → logprob: -14.750078201293945

Token 289: ' le' (ID: 505)
  Prédit: '(B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.48966482281684875
    2. ' (' → logprob: -1.4896647930145264
    3. '   ' → logprob: -2.4896647930145264
    4. 'return' → logprob: -3.4896647930145264
    5. '(A' → logprob: -3.6146647930145264
    6. '(x' → logprob: -5.1146650314331055
    7. 'le' → logprob: -5.2396650314331055
    8. ' return' → logprob: -6.4896650314331055
    9. 'max' → logprob: -6.4896650314331055
    10. '(max' → logprob: -6.4896650314331055

Token 290: ' plafond' (ID: 114829)
  Prédit: '(B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.0821818932890892
    2. '(A' → logprob: -2.582181930541992
    3. 'return' → logprob: -6.457181930541992
    4. ' (' → logprob: -6.707181930541992
    5. 'result' → logprob: -8.457181930541992
    6. 'max' → logprob: -9.082181930541992
    7. '#' → logprob: -9.832181930541992
    8. '   ' → logprob: -10.707181930541992
    9. 'import' → logprob: -10.832181930541992
    10. 'frequency' → logprob: -10.957181930541992

Token 291: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006613884121179581
    2. 'return' → logprob: -5.631613731384277
    3. ' return' → logprob: -6.256613731384277
    4. '((' → logprob: -7.631613731384277
    5. ' (' → logprob: -8.631613731384277
    6. '(' → logprob: -8.756613731384277
    7. '(B' → logprob: -8.756613731384277
    8. 'def' → logprob: -10.256613731384277
    9. '  ' → logprob: -10.881613731384277
    10. '    ' → logprob: -11.256613731384277

Token 292: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.6997831463813782
    2. '(B' → logprob: -0.6997831463813782
    3. ' (' → logprob: -5.3247833251953125
    4. ' B' → logprob: -6.4497833251953125
    5. '(' → logprob: -9.574783325195312
    6. 'div' → logprob: -10.449783325195312
    7. ' ' → logprob: -11.074783325195312
    8. '   ' → logprob: -11.324783325195312
    9. '(b' → logprob: -11.574783325195312
    10. '((' → logprob: -12.074783325195312

Token 293: '/A' (ID: 18689)
  Prédit: ' /'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.09150967746973038
    2. '/' → logprob: -2.4665095806121826
    3. '/A' → logprob: -6.716509819030762
    4. ' ' → logprob: -7.466509819030762
    5. '   ' → logprob: -7.841509819030762
    6. '/B' → logprob: -8.216509819030762
    7. 'div' → logprob: -10.341509819030762
    8. '  ' → logprob: -10.841509819030762
    9. ' ' → logprob: -10.966509819030762
    10. ' /
' → logprob: -11.841509819030762

Token 294: ' sans' (ID: 9828)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0032990318723022938
    2. 'return' → logprob: -5.753299236297607
    3. ' return' → logprob: -9.25329875946045
    4. '
' → logprob: -11.00329875946045
    5. '    
' → logprob: -12.00329875946045
    6. '    ' → logprob: -14.75329875946045
    7. 'import' → logprob: -14.87829875946045
    8. '   ' → logprob: -14.87829875946045
    9. 'def' → logprob: -15.00329875946045
    10. 'if' → logprob: -15.12829875946045

Token 295: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.1858343631029129
    2. 'util' → logprob: -1.9358344078063965
    3. ' utiliser' → logprob: -4.4358344078063965
    4. 'div' → logprob: -4.9358344078063965
    5. '((' → logprob: -6.1858344078063965
    6. '(B' → logprob: -7.1858344078063965
    7. '(' → logprob: -7.5608344078063965
    8. '(util' → logprob: -7.5608344078063965
    9. '(import' → logprob: -7.6858344078063965
    10. 'division' → logprob: -7.8108344078063965

Token 296: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5240066051483154
    2. ' math' → logprob: -1.6490066051483154
    3. 'er' → logprob: -2.2740066051483154
    4. 'return' → logprob: -3.2740066051483154
    5. 'def' → logprob: -3.5240066051483154
    6. 'math' → logprob: -3.8990066051483154
    7. ' return' → logprob: -4.2740068435668945
    8. 'if' → logprob: -5.7740068435668945
    9. 'ant' → logprob: -6.6490068435668945
    10. 's' → logprob: -6.6490068435668945

Token 297: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.2519298195838928
    2. 'math' → logprob: -1.501929759979248
    3. 'cmath' → logprob: -15.376930236816406
    4. '(math' → logprob: -15.501930236816406
    5. 'import' → logprob: -16.001930236816406
    6. ' ' → logprob: -16.376930236816406
    7. 'mat' → logprob: -17.001930236816406
    8. '_math' → logprob: -17.001930236816406
    9. '.math' → logprob: -17.126930236816406
    10. ' la' → logprob: -18.251930236816406

Token 298: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -9.960946772480384e-05
    2. 'return' → logprob: -9.625099182128906
    3. ' return' → logprob: -10.875099182128906
    4. '    
' → logprob: -11.375099182128906
    5. '
' → logprob: -14.000099182128906
    6. '   ' → logprob: -14.000099182128906
    7. '    ' → logprob: -14.375099182128906
    8. '       ' → logprob: -15.500099182128906
    9. 'def' → logprob: -15.750099182128906
    10. '	return' → logprob: -16.500099182128906

Token 299: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001831538276746869
    2. 'return' → logprob: -7.001831531524658
    3. ' return' → logprob: -7.001831531524658
    4. '    ' → logprob: -12.501832008361816
    5. '   ' → logprob: -13.126832008361816
    6. '    
' → logprob: -13.251832008361816
    7. '
' → logprob: -14.251832008361816
    8. '	return' → logprob: -14.501832008361816
    9. '       ' → logprob: -14.876832008361816
    10. '  ' → logprob: -15.501832008361816

Token 300: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7449367046356201
    2. 'return' (adapté à ' return') → logprob: -0.8699367046356201
    3. ' return' → logprob: -2.24493670463562
    4. 'result' → logprob: -8.8699369430542
    5. 'if' → logprob: -9.2449369430542
    6. ' if' → logprob: -9.9949369430542
    7. ' result' → logprob: -10.9949369430542
    8. 'x' → logprob: -12.1199369430542
    9. 'max' → logprob: -12.6199369430542
    10. 'res' → logprob: -13.4949369430542

Token 301: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5931152105331421
    2. '(B' → logprob: -0.8431152105331421
    3. '(A' → logprob: -4.093115329742432
    4. '   ' → logprob: -8.093114852905273
    5. ' ' → logprob: -10.968114852905273
    6. '(' → logprob: -11.718114852905273
    7. '((' → logprob: -12.843114852905273
    8. '  ' → logprob: -12.968114852905273
    9. '(b' → logprob: -13.468114852905273
    10. ' -' → logprob: -13.593114852905273

Token 302: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -7.107425062713446e-06
    2. '(B' → logprob: -12.875006675720215
    3. ' B' → logprob: -12.875006675720215
    4. '   ' → logprob: -13.125006675720215
    5. '	B' → logprob: -18.12500762939453
    6. '_B' → logprob: -20.12500762939453
    7. '-B' → logprob: -20.37500762939453
    8. ' (' → logprob: -20.50000762939453
    9. '       ' → logprob: -20.62500762939453
    10. ')' → logprob: -20.62500762939453

Token 303: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.04858975484967232
    2. '+' → logprob: -3.0485897064208984
    3. '+A' → logprob: -13.423589706420898
    4. ' ' → logprob: -14.798589706420898
    5. '   ' → logprob: -15.673589706420898
    6. '+B' → logprob: -16.0485897064209
    7. ' +
' → logprob: -16.2985897064209
    8. '+
' → logprob: -17.2985897064209
    9. ' ' → logprob: -18.1735897064209
    10. '  ' → logprob: -18.7985897064209

Token 304: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.003178782993927598
    2. ' A' → logprob: -5.753178596496582
    3. '(A' → logprob: -13.878178596496582
    4. '   ' → logprob: -16.5031795501709
    5. ' (' → logprob: -17.3781795501709
    6. '	A' → logprob: -17.8781795501709
    7. '
' → logprob: -19.1281795501709
    8. ' ' → logprob: -19.3781795501709
    9. '[A' → logprob: -19.5031795501709
    10. '(' → logprob: -20.0031795501709

Token 305: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.20141403377056122
    2. ' -' → logprob: -1.7014139890670776
    3. ' ' → logprob: -15.451414108276367
    4. '   ' → logprob: -16.076414108276367
    5. ')' → logprob: -16.201414108276367
    6. '1' → logprob: -16.576414108276367
    7. '#' → logprob: -16.826414108276367
    8. '```' → logprob: -17.576414108276367
    9. 'def' → logprob: -17.951414108276367
    10. '–' → logprob: -18.076414108276367

Token 306: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.0
    3. '```' → logprob: -19.875
    4. '   ' → logprob: -21.875
    5. ')' → logprob: -22.0
    6. '۱' → logprob: -23.25
    7. '１' → logprob: -23.625
    8. 'def' → logprob: -24.0
    9. '`' → logprob: -24.625
    10. '-' → logprob: -24.75

Token 307: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.25
    3. '```' → logprob: -20.875
    4. '   ' → logprob: -21.375
    5. '۱' → logprob: -22.25
    6. '１' → logprob: -22.5
    7. ')' → logprob: -23.25
    8. '১' → logprob: -23.75
    9. '

' → logprob: -23.875
    10. 'def' → logprob: -24.375

Token 308: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.52788148727268e-05
    2. ')//' → logprob: -9.750064849853516
    3. ' )' → logprob: -11.875064849853516
    4. ')
' → logprob: -18.375064849853516
    5. '//' → logprob: -19.000064849853516
    6. '）' → logprob: -19.375064849853516
    7. ']' → logprob: -19.625064849853516
    8. ' //' → logprob: -19.875064849853516
    9. '")' → logprob: -21.500064849853516
    10. '   ' → logprob: -22.375064849853516

Token 309: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.5761896371841431
    2. ' //' → logprob: -0.8261896371841431
    3. ')' → logprob: -8.826189994812012
    4. '#' → logprob: -9.951189994812012
    5. ')//' → logprob: -10.451189994812012
    6. '   ' → logprob: -11.451189994812012
    7. '```' → logprob: -11.951189994812012
    8. ' ' → logprob: -12.451189994812012
    9. ' ' → logprob: -12.576189994812012
    10. 'div' → logprob: -14.951189994812012

Token 310: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0015023599844425917
    2. ' A' → logprob: -6.501502513885498
    3. '   ' → logprob: -16.876502990722656
    4. ' ' → logprob: -17.626502990722656
    5. '	A' → logprob: -18.626502990722656
    6. '  ' → logprob: -19.251502990722656
    7. 'a' → logprob: -21.126502990722656
    8. '
' → logprob: -23.001502990722656
    9. '_A' → logprob: -23.126502990722656
    10. 'А' → logprob: -23.126502990722656

Token 311: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 312: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 313: ' Lecture' (ID: 106534)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 314: ' des' (ID: 731)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7413232326507568
    2. 'n' → logprob: -2.116323232650757
    3. 's' → logprob: -2.616323232650757
    4. ' A' → logprob: -2.991323232650757
    5. ' des' → logprob: -3.116323232650757
    6. 'def' → logprob: -3.241323232650757
    7. 'input' → logprob: -3.366323232650757
    8. 'import' → logprob: -3.741323232650757
    9. 'A' → logprob: -3.866323232650757
    10. ' =' → logprob: -3.991323232650757

Token 315: ' entr' (ID: 7072)
  Prédit: ' entr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entr' → logprob: -0.5157670974731445
    2. ' données' → logprob: -1.6407670974731445
    3. 'entr' → logprob: -2.0157670974731445
    4. 'import' → logprob: -3.8907670974731445
    5. 'entrée' → logprob: -4.0157670974731445
    6. 'A' → logprob: -4.8907670974731445
    7. 'don' → logprob: -5.1407670974731445
    8. 'inputs' → logprob: -5.2657670974731445
    9. ' inputs' → logprob: -5.5157670974731445
    10. 'input' → logprob: -5.5157670974731445

Token 316: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.02702564187347889
    2. 'ees' → logprob: -4.4020256996154785
    3. 'r' → logprob: -4.7770256996154785
    4. 'ée' → logprob: -6.2770256996154785
    5. 'rees' → logprob: -6.9020256996154785
    6. '#' → logprob: -7.1520256996154785
    7. 't' → logprob: -7.6520256996154785
    8. 'tr' → logprob: -7.6520256996154785
    9. 'er' → logprob: -8.27702522277832
    10. 'e' → logprob: -8.40202522277832

Token 317: '
' (ID: 198)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0038316678255796432
    2. 'if' → logprob: -6.62883186340332
    3. '
' → logprob: -7.00383186340332
    4. ' A' → logprob: -7.00383186340332
    5. 'def' → logprob: -7.62883186340332
    6. 'n' → logprob: -9.50383186340332
    7. 'a' → logprob: -10.12883186340332
    8. '

' → logprob: -10.25383186340332
    9. '```' → logprob: -11.00383186340332
    10. 'import' → logprob: -11.87883186340332

Token 318: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.5451681974809617e-05
    2. ' A' → logprob: -11.125015258789062
    3. 'def' → logprob: -15.000015258789062
    4. 'if' → logprob: -15.500015258789062
    5. 'import' → logprob: -16.500015258789062
    6. '```' → logprob: -16.625015258789062
    7. 'a' → logprob: -17.000015258789062
    8. 'n' → logprob: -17.875015258789062
    9. '
' → logprob: -18.750015258789062
    10. '#' → logprob: -19.375015258789062

Token 319: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.407366916188039e-05
    2. ',B' → logprob: -9.875054359436035
    3. ' =' → logprob: -13.750054359436035
    4. ' ,' → logprob: -13.875054359436035
    5. '=' → logprob: -14.875054359436035
    6. 'B' → logprob: -16.25005340576172
    7. ',b' → logprob: -18.25005340576172
    8. ',
' → logprob: -18.75005340576172
    9. ',input' → logprob: -19.00005340576172
    10. ' B' → logprob: -19.12505340576172

Token 320: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.03804321587085724
    2. ' B' → logprob: -3.288043260574341
    3. ' ' → logprob: -13.288043022155762
    4. ' ' → logprob: -17.038043975830078
    5. '  ' → logprob: -18.038043975830078
    6. '=' → logprob: -18.038043975830078
    7. '=B' → logprob: -19.163043975830078
    8. ' =' → logprob: -19.413043975830078
    9. '<|end|>' → logprob: -20.413043975830078
    10. '    ' → logprob: -20.413043975830078

Token 321: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25193020701408386
    2. ' =' → logprob: -1.5019302368164062
    3. '=input' → logprob: -13.751930236816406
    4. '=int' → logprob: -17.001930236816406
    5. ' ' → logprob: -17.751930236816406
    6. ' ' → logprob: -18.001930236816406
    7. '=list' → logprob: -18.751930236816406
    8. ')' → logprob: -19.126930236816406
    9. '＝' → logprob: -19.501930236816406
    10. 'input' → logprob: -20.001930236816406

Token 322: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.038042064756155014
    2. ' map' → logprob: -3.2880420684814453
    3. '[' → logprob: -15.663042068481445
    4. '(map' → logprob: -15.663042068481445
    5. '	map' → logprob: -15.788042068481445
    6. ' ' → logprob: -17.288042068481445
    7. 'm' → logprob: -17.663042068481445
    8. ' ' → logprob: -18.038042068481445
    9. 'list' → logprob: -18.163042068481445
    10. 'input' → logprob: -18.288042068481445

Token 323: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0007119550718925893
    2. 'int' → logprob: -7.250711917877197
    3. '(' → logprob: -13.625712394714355
    4. ' int' → logprob: -15.250712394714355
    5. '(input' → logprob: -15.375712394714355
    6. '<int' → logprob: -16.25071144104004
    7. 'input' → logprob: -16.50071144104004
    8. '=int' → logprob: -16.62571144104004
    9. '[int' → logprob: -17.62571144104004
    10. ',int' → logprob: -18.12571144104004

Token 324: ',' (ID: 11)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.05511730536818504
    2. '(input' → logprob: -3.55511736869812
    3. ',input' → logprob: -3.80511736869812
    4. ',' → logprob: -6.055117130279541
    5. ' input' → logprob: -7.805117130279541
    6. '=input' → logprob: -10.5551176071167
    7. ')' → logprob: -11.8051176071167
    8. '	input' → logprob: -13.5551176071167
    9. '<input' → logprob: -14.1801176071167
    10. '(' → logprob: -14.3051176071167

Token 325: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0001584850688232109
    2. ' input' → logprob: -8.750158309936523
    3. '(input' → logprob: -20.000158309936523
    4. '   ' → logprob: -21.125158309936523
    5. '	input' → logprob: -21.375158309936523
    6. '=input' → logprob: -21.500158309936523
    7. ' ' → logprob: -21.500158309936523
    8. '<input' → logprob: -21.875158309936523
    9. 'open' → logprob: -22.625158309936523
    10. ',input' → logprob: -23.375158309936523

Token 326: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.5048530030981055e-06
    2. '()' → logprob: -13.500001907348633
    3. ' ().' → logprob: -17.125001907348633
    4. '()
' → logprob: -19.625001907348633
    5. '(' → logprob: -20.000001907348633
    6. '("").' → logprob: -21.875001907348633
    7. '('').' → logprob: -22.625001907348633
    8. '().
' → logprob: -22.750001907348633
    9. '()?.' → logprob: -22.750001907348633
    10. '()

' → logprob: -22.875001907348633

Token 327: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.3425219549390022e-05
    2. 'strip' → logprob: -11.25001335144043
    3. ' split' → logprob: -15.62501335144043
    4. '(split' → logprob: -16.62501335144043
    5. '().' → logprob: -17.00001335144043
    6. 'read' → logprob: -17.75001335144043
    7. 'rstrip' → logprob: -18.00001335144043
    8. 'spl' → logprob: -18.37501335144043
    9. '.split' → logprob: -19.87501335144043
    10. '_split' → logprob: -21.50001335144043

Token 328: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0030309518333524466
    2. '()))' → logprob: -6.003030776977539
    3. ')' → logprob: -8.003030776977539
    4. '()' → logprob: -8.503030776977539
    5. '))' → logprob: -11.003030776977539
    6. '(' → logprob: -14.378030776977539
    7. ' ())' → logprob: -14.753030776977539
    8. '())
' → logprob: -16.75303077697754
    9. '()))
' → logprob: -17.75303077697754
    10. '());' → logprob: -17.87803077697754

Token 329: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -7.896309739408025e-07
    2. 'result' → logprob: -14.500000953674316
    3. ' print' → logprob: -15.375000953674316
    4. 'prin' → logprob: -17.25
    5. '
' → logprob: -19.5
    6. 'pr' → logprob: -19.5
    7. '```' → logprob: -19.5
    8. '#print' → logprob: -19.75
    9. 'r' → logprob: -21.75
    10. '#' → logprob: -22.0

Token 330: ' Calcul' (ID: 57243)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.981667537620524e-06
    2. 'result' → logprob: -13.250001907348633
    3. ' print' → logprob: -15.750001907348633
    4. '#' → logprob: -17.500001907348633
    5. '#print' → logprob: -21.000001907348633
    6. 'rés' → logprob: -21.250001907348633
    7. 'res' → logprob: -21.875001907348633
    8. '```' → logprob: -22.250001907348633
    9. 'r' → logprob: -22.500001907348633
    10. 'output' → logprob: -23.500001907348633

Token 331: ' du' (ID: 1462)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.0059210932813584805
    2. 'print' → logprob: -5.255920886993408
    3. 'res' → logprob: -8.130921363830566
    4. 'freq' → logprob: -8.630921363830566
    5. 'frequency' → logprob: -9.255921363830566
    6. 'answer' → logprob: -9.880921363830566
    7. 'max' → logprob: -10.880921363830566
    8. 'rés' → logprob: -11.005921363830566
    9. 'r' → logprob: -11.255921363830566
    10. 'fre' → logprob: -12.005921363830566

Token 332: ' résultat' (ID: 62556)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.12767353653907776
    2. 'print' → logprob: -2.127673625946045
    3. 'max' → logprob: -8.252673149108887
    4. 'rés' → logprob: -8.377673149108887
    5. 'res' → logprob: -8.627673149108887
    6. 'r' → logprob: -9.877673149108887
    7. ' résultat' → logprob: -11.752673149108887
    8. 'resultado' → logprob: -11.877673149108887
    9. 'maximum' → logprob: -13.127673149108887
    10. 'answer' → logprob: -13.252673149108887

Token 333: '
' (ID: 198)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.1270247995853424
    2. 'print' → logprob: -2.1270248889923096
    3. 'res' → logprob: -9.62702465057373
    4. ' result' → logprob: -10.75202465057373
    5. 'answer' → logprob: -12.12702465057373
    6. ' print' → logprob: -13.62702465057373
    7. 'frequency' → logprob: -14.12702465057373
    8. 'r' → logprob: -14.37702465057373
    9. 'resultado' → logprob: -14.87702465057373
    10. '```' → logprob: -15.25202465057373

Token 334: 'result' (ID: 2521)
  Prédit: 'result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.03859928995370865
    2. 'print' → logprob: -3.2885992527008057
    3. 'res' → logprob: -7.538599491119385
    4. 'rés' → logprob: -11.163599014282227
    5. 'freq' → logprob: -11.788599014282227
    6. 'answer' → logprob: -13.413599014282227
    7. 'r' → logprob: -14.038599014282227
    8. 'frequency' → logprob: -14.163599014282227
    9. 'fre' → logprob: -15.038599014282227
    10. 'resultado' → logprob: -15.663599014282227

Token 335: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022463142871857
    2. '=' → logprob: -1.9102246761322021
    3. ')' → logprob: -15.410224914550781
    4. ' ' → logprob: -15.785224914550781
    5. '=max' → logprob: -17.03522491455078
    6. ' ' → logprob: -17.78522491455078
    7. '=result' → logprob: -18.16022491455078
    8. '＝' → logprob: -18.28522491455078
    9. 's' → logprob: -18.53522491455078
    10. '=int' → logprob: -19.03522491455078

Token 336: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0007099286303855479
    2. ' max' → logprob: -7.2507100105285645
    3. '(max' → logprob: -23.625709533691406
    4. '	max' → logprob: -24.875709533691406
    5. '_max' → logprob: -26.625709533691406
    6. '=max' → logprob: -27.625709533691406
    7. ' ' → logprob: -28.000709533691406
    8. '   ' → logprob: -28.250709533691406
    9. '[max' → logprob: -28.375709533691406
    10. 'maximum' → logprob: -28.500709533691406

Token 337: '_w' (ID: 3567)
  Prédit: '_w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_w' → logprob: -1.9361264946837764e-07
    2. 'wear' → logprob: -16.5
    3. 'w' → logprob: -18.125
    4. '_' → logprob: -19.0
    5. 'max' → logprob: -19.75
    6. 'Wear' → logprob: -19.75
    7. '_we' → logprob: -20.125
    8. '_use' → logprob: -20.25
    9. '_frequency' → logprob: -21.0
    10. ' wear' → logprob: -21.375

Token 338: 'ear' (ID: 830)
  Prédit: 'ear'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ear' → logprob: -0.28249749541282654
    2. 'wear' → logprob: -1.407497525215149
    3. '_w' → logprob: -7.407497406005859
    4. 'are' → logprob: -8.03249740600586
    5. 'ar' → logprob: -9.15749740600586
    6. 'er' → logprob: -9.78249740600586
    7. 'Wear' → logprob: -10.15749740600586
    8. 'w' → logprob: -10.28249740600586
    9. 'eat' → logprob: -10.40749740600586
    10. ' wear' → logprob: -10.90749740600586

Token 339: '_frequency' (ID: 98311)
  Prédit: '_frequency'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_frequency' → logprob: -0.00020354038861114532
    2. 'frequency' → logprob: -8.500203132629395
    3. ' frequency' → logprob: -17.50020408630371
    4. 'Frequency' → logprob: -17.87520408630371
    5. '_freq' → logprob: -19.25020408630371
    6. 'fre' → logprob: -19.37520408630371
    7. 'requency' → logprob: -19.50020408630371
    8. 'freq' → logprob: -20.25020408630371
    9. '_f' → logprob: -20.37520408630371
    10. '_probability' → logprob: -20.50020408630371

Token 340: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -7.822646693966817e-06
    2. '(' → logprob: -12.000007629394531
    3. ' (' → logprob: -13.750007629394531
    4. '(B' → logprob: -14.500007629394531
    5. '(
' → logprob: -16.62500762939453
    6. '(I' → logprob: -19.25000762939453
    7. '((' → logprob: -19.50000762939453
    8. '(C' → logprob: -19.62500762939453
    9. ')(' → logprob: -19.75000762939453
    10. '(E' → logprob: -20.00000762939453

Token 341: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.8193366486229934e-05
    2. ' ,' → logprob: -11.500018119812012
    3. ',B' → logprob: -11.750018119812012
    4. ',
' → logprob: -16.625019073486328
    5. ',A' → logprob: -17.000019073486328
    6. 'B' → logprob: -18.750019073486328
    7. ')' → logprob: -19.250019073486328
    8. ',b' → logprob: -19.500019073486328
    9. 'A' → logprob: -19.500019073486328
    10. '‌,' → logprob: -20.875019073486328

Token 342: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -5.836499985889532e-05
    2. ' B' → logprob: -9.7500581741333
    3. ')' → logprob: -23.750059127807617
    4. 'b' → logprob: -24.625059127807617
    5. '   ' → logprob: -25.000059127807617
    6. ' ' → logprob: -25.750059127807617
    7. '	B' → logprob: -25.750059127807617
    8. '_B' → logprob: -26.125059127807617
    9. '>B' → logprob: -26.250059127807617
    10. '#' → logprob: -26.375059127807617

Token 343: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ')
' → logprob: -14.375000953674316
    3. ')

' → logprob: -16.25
    4. ' )' → logprob: -18.625
    5. '))' → logprob: -19.0
    6. ')`' → logprob: -19.125
    7. ')#' → logprob: -20.0
    8. '),' → logprob: -20.375
    9. ')
' → logprob: -20.625
    10. ').' → logprob: -22.125

Token 344: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -19.25
    3. '#' → logprob: -19.5
    4. '#print' → logprob: -21.75
    5. '
' → logprob: -23.875
    6. '```' → logprob: -24.0
    7. '	print' → logprob: -27.375
    8. 'Print' → logprob: -27.375
    9. '(print' → logprob: -28.0
    10. 'printf' → logprob: -28.0

Token 345: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -22.0
    3. '#' → logprob: -22.625
    4. '#print' → logprob: -24.375
    5. 'prin' → logprob: -25.75
    6. 'pr' → logprob: -26.0
    7. 'printf' → logprob: -26.75
    8. 'Print' → logprob: -27.0
    9. '```' → logprob: -27.0
    10. '
' → logprob: -27.875

Token 346: 'ichage' (ID: 118475)
  Prédit: 'ichage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ichage' → logprob: -0.018161412328481674
    2. 'ich' → logprob: -4.893161296844482
    3. 'icher' → logprob: -5.018161296844482
    4. '#' → logprob: -6.143161296844482
    5. 'print' → logprob: -7.018161296844482
    6. 'iche' → logprob: -7.393161296844482
    7. 'ic' → logprob: -8.64316177368164
    8. '   ' → logprob: -10.76816177368164
    9. ' print' → logprob: -11.64316177368164
    10. 'f' → logprob: -12.51816177368164

Token 347: ' du' (ID: 1462)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.002464240649715066
    2. '(print' → logprob: -6.252464294433594
    3. '(' → logprob: -7.752464294433594
    4. '(result' → logprob: -9.877464294433594
    5. ' print' → logprob: -10.252464294433594
    6. '()' → logprob: -11.627464294433594
    7. 'result' → logprob: -11.627464294433594
    8. '(
' → logprob: -14.502464294433594
    9. '()
' → logprob: -14.877464294433594
    10. ')' → logprob: -15.877464294433594

Token 348: ' résultat' (ID: 62556)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -6.432518421206623e-05
    2. '(result' → logprob: -10.0000638961792
    3. ' result' → logprob: -11.8750638961792
    4. 'print' → logprob: -11.8750638961792
    5. 'rés' → logprob: -13.0000638961792
    6. ' résultat' → logprob: -13.0000638961792
    7. 'r' → logprob: -15.2500638961792
    8. ' resultat' → logprob: -16.375064849853516
    9. 'resultado' → logprob: -16.625064849853516
    10. '	result' → logprob: -18.375064849853516

Token 349: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. '
' → logprob: -16.0
    3. ' print' → logprob: -17.5
    4. '```' → logprob: -18.75
    5. '(print' → logprob: -23.375
    6. '#print' → logprob: -23.375
    7. '``' → logprob: -23.75
    8. '
' → logprob: -23.875
    9. '.print' → logprob: -25.25
    10. 'result' → logprob: -25.5

Token 350: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -23.5
    3. '```' → logprob: -26.0
    4. 'printf' → logprob: -28.875
    5. 'prin' → logprob: -29.375
    6. 'pr' → logprob: -29.75
    7. 'println' → logprob: -30.0
    8. '#print' → logprob: -30.125
    9. 'Print' → logprob: -30.75
    10. '
' → logprob: -31.0

Token 351: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.0015029559144750237
    2. '(' → logprob: -6.501502990722656
    3. 'result' → logprob: -15.376502990722656
    4. ' (' → logprob: -15.751502990722656
    5. '(res' → logprob: -16.001502990722656
    6. '(resultado' → logprob: -17.126502990722656
    7. '(results' → logprob: -17.376502990722656
    8. '=result' → logprob: -18.001502990722656
    9. '(
' → logprob: -18.126502990722656
    10. '()' → logprob: -18.751502990722656

Token 352: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: 0.0
    2. ' )' → logprob: -17.875
    3. ')`' → logprob: -18.625
    4. '))' → logprob: -19.125
    5. ')
' → logprob: -20.5
    6. ')}' → logprob: -21.625
    7. '())' → logprob: -21.875
    8. '),' → logprob: -22.125
    9. '()' → logprob: -22.125
    10. '')' → logprob: -22.5


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 350
Tokens correctement prédits (1ère position, stricte): 116
Tokens correctement prédits (1ère position, avec adaptation): 116
Tokens correctement prédits (top 10): 250
Précision stricte (1ère position): 33.14%
Précision adaptée (1ère position): 33.14%
Précision (top 10): 71.43%
================================================================================
