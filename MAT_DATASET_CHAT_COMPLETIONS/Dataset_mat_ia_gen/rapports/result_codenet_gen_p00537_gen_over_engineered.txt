================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:15:15
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class RailSegment:
    def __init__(self, index: int, paper_fare: int, ic_fare: int, ic_card_cost: int):
        self.index = index
        self.paper_fare = paper_fare
        self.ic_fare = ic_fare
        self.ic_card_cost = ic_card_cost
        self.trip_count = 0

    def compute_paper_cost(self) -> int:
        return self.paper_fare * self.trip_count

    def compute_ic_cost(self) -> int:
        return self.ic_card_cost + self.ic_fare * self.trip_count

    def cost_difference_if_ic(self) -> int:
        """Difference between paper cost and IC cost for this rail segment."""
        return self.compute_paper_cost() - self.compute_ic_cost()

    def should_buy_ic_card(self) -> bool:
        return self.cost_difference_if_ic() > 0


class TripPlan:
    def __init__(self, rail_segments: list, travel_route: list):
        self.rail_segments = rail_segments
        self.travel_route = travel_route  # List of city indices starting from 1
        # Tracks the total cost after optimization
        self.total_cost = 0

    def count_rail_usage(self):
        # Rail segment i connects city i and city i+1
        for day in range(len(self.travel_route) - 1):
            start = self.travel_route[day]
            end = self.travel_route[day + 1]
            if start < end:
                # Travel eastward on rails start..end-1
                for rail_index in range(start, end):
                    self.rail_segments[rail_index - 1].trip_count += 1
            else:
                # Travel westward on rails end..start-1
                for rail_index in range(end, start):
                    self.rail_segments[rail_index - 1].trip_count += 1

    def calculate_minimum_cost(self):
        self.count_rail_usage()
        # Initially, assume all trips are by paper tickets
        total_cost = sum(segment.compute_paper_cost() for segment in self.rail_segments)

        # Consider buying IC card for each rail segment if beneficial
        for segment in self.rail_segments:
            if segment.trip_count == 0:
                continue  # No travel on this rail, skip
            if segment.should_buy_ic_card():
                # Change cost from paper to IC for this segment
                cost_with_ic = segment.compute_ic_cost()
                cost_with_paper = segment.compute_paper_cost()
                total_cost += cost_with_ic - cost_with_paper

        self.total_cost = total_cost
        return total_cost


class InputReader:
    @staticmethod
    def read_ints():
        return list(map(int, input().split()))

    @classmethod
    def read_problem_instance(cls):
        N, M = cls.read_ints()
        travel_route = cls.read_ints()
        rail_segments = []
        for i in range(1, N):
            A_i, B_i, C_i = cls.read_ints()
            rail_segments.append(RailSegment(i, A_i, B_i, C_i))
        return N, M, travel_route, rail_segments


class Solver:
    def __init__(self):
        self.N = None
        self.M = None
        self.travel_route = None
        self.rail_segments = None
        self.trip_plan = None

    def load_data(self):
        self.N, self.M, self.travel_route, self.rail_segments = InputReader.read_problem_instance()
        self.trip_plan = TripPlan(self.rail_segments, self.travel_route)

    def solve(self):
        return self.trip_plan.calculate_minimum_cost()


def main():
    solver = Solver()
    solver.load_data()
    result = solver.solve()
    print(result)


if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Rail' (ID: 32384)
  → Token d'amorce (pas de prédiction)

Token 2: 'Segment' (ID: 24880)
  → Token d'amorce (pas de prédiction)

Token 3: ':
' (ID: 734)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.7532901763916016
    2. ':' → logprob: -1.1282901763916016
    3. '(' → logprob: -1.7532901763916016
    4. ' {' → logprob: -3.7532901763916016
    5. '.' → logprob: -5.003290176391602
    6. ' ' → logprob: -7.253290176391602
    7. '[' → logprob: -7.378290176391602
    8. '```' → logprob: -7.878290176391602
    9. ' :' → logprob: -8.378290176391602
    10. ' (' → logprob: -9.753290176391602

Token 4: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5267945528030396
    2. ':' → logprob: -0.9017945528030396
    3. '   ' → logprob: -6.65179443359375
    4. '.' → logprob: -7.15179443359375
    5. '```' → logprob: -7.52679443359375
    6. ':
' → logprob: -8.40179443359375
    7. ''' → logprob: -8.40179443359375
    8. '(
' → logprob: -8.77679443359375
    9. '\' → logprob: -9.15179443359375
    10. '():' → logprob: -9.65179443359375

Token 5: ' def' (ID: 1056)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16940683126449585
    2. '    ' → logprob: -2.5444068908691406
    3. '   ' → logprob: -3.2944068908691406
    4. ' def' → logprob: -4.919406890869141
    5. '<|end|>' → logprob: -5.169406890869141
    6. ' pass' → logprob: -5.294406890869141
    7. '(' → logprob: -5.544406890869141
    8. '(space' → logprob: -5.794406890869141
    9. '  ' → logprob: -6.169406890869141
    10. '```' → logprob: -6.794406890869141

Token 6: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.18897514045238495
    2. '__' → logprob: -1.9389750957489014
    3. ' ' → logprob: -3.6889750957489014
    4. ' init' → logprob: -7.1889753341674805
    5. ' ' → logprob: -7.4389753341674805
    6. '_' → logprob: -8.18897533416748
    7. '<|end|>' → logprob: -8.18897533416748
    8. '  ' → logprob: -8.31397533416748
    9. ' ‌' → logprob: -8.81397533416748
    10. ' ▁' → logprob: -9.06397533416748

Token 7: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -7.107425062713446e-06
    2. ' init' → logprob: -12.000006675720215
    3. '_init' → logprob: -14.125006675720215
    4. 'ini' → logprob: -16.37500762939453
    5. '	init' → logprob: -16.87500762939453
    6. '_' → logprob: -17.62500762939453
    7. 'in' → logprob: -18.12500762939453
    8. 'i' → logprob: -18.50000762939453
    9. 'inite' → logprob: -18.87500762939453
    10. 'innit' → logprob: -19.50000762939453

Token 8: '__(' (ID: 8241)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.5295005440711975
    2. '__(' → logprob: -0.9045005440711975
    3. '(' → logprob: -5.654500484466553
    4. '__(
' → logprob: -6.404500484466553
    5. '_' → logprob: -7.154500484466553
    6. '__((' → logprob: -8.529500961303711
    7. '__('' → logprob: -9.029500961303711
    8. '__(*' → logprob: -10.904500961303711
    9. '(self' → logprob: -11.029500961303711
    10. '___' → logprob: -11.279500961303711

Token 9: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.003610401414334774
    2. ' self' → logprob: -5.628610610961914
    3. ')' → logprob: -12.378610610961914
    4. 'rail' → logprob: -13.128610610961914
    5. '(self' → logprob: -13.253610610961914
    6. '	self' → logprob: -14.503610610961914
    7. ' ' → logprob: -15.128610610961914
    8. ' )' → logprob: -15.503610610961914
    9. '       ' → logprob: -16.003610610961914
    10. '   ' → logprob: -16.003610610961914

Token 10: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16048561036586761
    2. '):' → logprob: -2.1604855060577393
    3. '<|end|>' → logprob: -4.535485744476318
    4. ')' → logprob: -4.660485744476318
    5. 'self' → logprob: -5.410485744476318
    6. '.' → logprob: -5.785485744476318
    7. '(' → logprob: -6.535485744476318
    8. '(self' → logprob: -7.535485744476318
    9. '<|end|>' → logprob: -7.660485744476318
    10. '       ' → logprob: -7.785485744476318

Token 11: ' index' (ID: 3472)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5169033408164978
    2. 'self' → logprob: -1.2669034004211426
    3. ' start' → logprob: -2.2669034004211426
    4. 'start' → logprob: -4.641903400421143
    5. ' rail' → logprob: -6.391903400421143
    6. ' position' → logprob: -6.766903400421143
    7. ' length' → logprob: -7.016903400421143
    8. ' starting' → logprob: -7.141903400421143
    9. 'length' → logprob: -7.266903400421143
    10. 'rail' → logprob: -7.641903400421143

Token 12: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09018665552139282
    2. '):' → logprob: -2.465186595916748
    3. ')' → logprob: -7.340186595916748
    4. ':' → logprob: -7.715186595916748
    5. ' ,' → logprob: -9.465187072753906
    6. '=' → logprob: -10.715187072753906
    7. '):
' → logprob: -11.090187072753906
    8. '   ' → logprob: -11.465187072753906
    9. '_' → logprob: -12.465187072753906
    10. ',
' → logprob: -12.840187072753906

Token 13: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6326658725738525
    2. ' int' → logprob: -0.7576658725738525
    3. ')' → logprob: -11.007665634155273
    4. ':int' → logprob: -11.507665634155273
    5. '=int' → logprob: -11.632665634155273
    6. ' )' → logprob: -11.757665634155273
    7. '<int' → logprob: -12.882665634155273
    8. '[int' → logprob: -13.007665634155273
    9. ']int' → logprob: -13.007665634155273
    10. 'i' → logprob: -13.257665634155273

Token 14: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01742342673242092
    2. '):' → logprob: -4.142423629760742
    3. ')' → logprob: -6.642423629760742
    4. ' ,' → logprob: -10.642423629760742
    5. '   ' → logprob: -11.142423629760742
    6. '):
' → logprob: -11.267423629760742
    7. ',
' → logprob: -11.642423629760742
    8. '       ' → logprob: -12.267423629760742
    9. '```' → logprob: -12.767423629760742
    10. '<|end|>' → logprob: -12.767423629760742

Token 15: ' paper' (ID: 6651)
  Prédit: ' length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.6659704446792603
    2. ' start' → logprob: -1.1659704446792603
    3. ' position' → logprob: -2.4159703254699707
    4. ' name' → logprob: -3.5409703254699707
    5. ' distance' → logprob: -4.915970325469971
    6. ' rail' → logprob: -4.915970325469971
    7. ' direction' → logprob: -5.415970325469971
    8. ' next' → logprob: -5.540970325469971
    9. 'length' → logprob: -5.665970325469971
    10. 'start' → logprob: -5.790970325469971

Token 16: '_f' (ID: 1337)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.40188363194465637
    2. ')' → logprob: -1.776883602142334
    3. ':' → logprob: -3.026883602142334
    4. '=' → logprob: -3.276883602142334
    5. ' =' → logprob: -3.776883602142334
    6. '):' → logprob: -4.026883602142334
    7. 's' → logprob: -4.901883602142334
    8. '_type' → logprob: -5.026883602142334
    9. ' ' → logprob: -6.276883602142334
    10. ',' → logprob: -6.526883602142334

Token 17: 'are' (ID: 644)
  Prédit: 'ormat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ormat' → logprob: -0.5903397798538208
    2. 'ield' → logprob: -1.9653397798538208
    3. 'rame' → logprob: -2.0903396606445312
    4. 'iber' → logprob: -3.0903396606445312
    5. 'requency' → logprob: -3.5903396606445312
    6. 'e' → logprob: -3.8403396606445312
    7. 'orm' → logprob: -4.090339660644531
    8. 'lag' → logprob: -4.590339660644531
    9. 'r' → logprob: -5.090339660644531
    10. 'actor' → logprob: -5.215339660644531

Token 18: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005863136146217585
    2. '):' → logprob: -5.380863189697266
    3. ')' → logprob: -8.255863189697266
    4. '_type' → logprob: -8.630863189697266
    5. '_discount' → logprob: -9.130863189697266
    6. '_price' → logprob: -9.380863189697266
    7. '_rate' → logprob: -9.380863189697266
    8. ' ):' → logprob: -9.380863189697266
    9. '=' → logprob: -9.630863189697266
    10. ' :' → logprob: -10.005863189697266

Token 19: ' int' (ID: 677)
  Prédit: ' float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.3080779016017914
    2. 'float' → logprob: -1.8080779314041138
    3. ' int' → logprob: -2.933077812194824
    4. 'int' → logprob: -3.058077812194824
    5. ')' → logprob: -8.058077812194824
    6. ' bool' → logprob: -8.933077812194824
    7. '=float' → logprob: -8.933077812194824
    8. ' ' → logprob: -9.433077812194824
    9. 'bool' → logprob: -9.683077812194824
    10. '	float' → logprob: -9.683077812194824

Token 20: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6977419853210449
    2. '):' → logprob: -0.6977419853210449
    3. ')' → logprob: -5.447741985321045
    4. '):
' → logprob: -9.197742462158203
    5. '   ' → logprob: -9.572742462158203
    6. ' ,' → logprob: -10.072742462158203
    7. ':' → logprob: -10.822742462158203
    8. ' ):' → logprob: -11.322742462158203
    9. '```' → logprob: -12.197742462158203
    10. '<|end|>' → logprob: -12.322742462158203

Token 21: ' ic' (ID: 26007)
  Prédit: ' distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' distance' → logprob: -0.822334885597229
    2. ' length' → logprob: -1.447334885597229
    3. ' is' → logprob: -2.6973347663879395
    4. ' current' → logprob: -3.4473347663879395
    5. ' start' → logprob: -3.4473347663879395
    6. ' free' → logprob: -4.1973347663879395
    7. ' base' → logprob: -4.3223347663879395
    8. ' ticket' → logprob: -4.5723347663879395
    9. 'distance' → logprob: -4.6973347663879395
    10. ' starting' → logprob: -4.6973347663879395

Token 22: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.4492710828781128
    2. '_card' → logprob: -1.1992710828781128
    3. 'c' → logprob: -4.574271202087402
    4. 'd' → logprob: -5.199271202087402
    5. '_pass' → logprob: -5.199271202087402
    6. 'ard' → logprob: -5.324271202087402
    7. '_car' → logprob: -5.449271202087402
    8. 'card' → logprob: -5.699271202087402
    9. '_ticket' → logprob: -5.699271202087402
    10. '_' → logprob: -5.824271202087402

Token 23: 'are' (ID: 644)
  Prédit: 'are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'are' → logprob: -0.006302380934357643
    2. 'a' → logprob: -6.256302356719971
    3. 'ares' → logprob: -6.756302356719971
    4. 'c' → logprob: -7.131302356719971
    5. '_' → logprob: -7.631302356719971
    6. '_are' → logprob: -8.131302833557129
    7. 'ace' → logprob: -8.881302833557129
    8. '   ' → logprob: -9.131302833557129
    9. 'ar' → logprob: -9.256302833557129
    10. '```' → logprob: -9.506302833557129

Token 24: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008764470112510026
    2. '):' → logprob: -7.375876426696777
    3. ')' → logprob: -8.500876426696777
    4. ',' → logprob: -10.375876426696777
    5. ':int' → logprob: -12.125876426696777
    6. ' :' → logprob: -12.125876426696777
    7. ' ):' → logprob: -13.500876426696777
    8. '):
' → logprob: -13.625876426696777
    9. '=' → logprob: -14.625876426696777
    10. '=None' → logprob: -15.625876426696777

Token 25: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.31348615884780884
    2. 'int' → logprob: -1.313486099243164
    3. ':int' → logprob: -9.688486099243164
    4. '[int' → logprob: -9.688486099243164
    5. '<|end|>' → logprob: -10.563486099243164
    6. '=int' → logprob: -10.688486099243164
    7. '	int' → logprob: -11.188486099243164
    8. '<|end|>' → logprob: -11.313486099243164
    9. '(int' → logprob: -11.938486099243164
    10. ')' → logprob: -12.063486099243164

Token 26: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01892484538257122
    2. ',' → logprob: -4.143924713134766
    3. ')' → logprob: -5.893924713134766
    4. '):
' → logprob: -9.393924713134766
    5. ':' → logprob: -10.268924713134766
    6. '   ' → logprob: -12.518924713134766
    7. ' ):' → logprob: -13.018924713134766
    8. '),' → logprob: -13.268924713134766
    9. '```' → logprob: -14.018924713134766
    10. ' ' → logprob: -14.143924713134766

Token 27: ' ic' (ID: 26007)
  Prédit: ' length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.43481364846229553
    2. ' is' → logprob: -2.6848137378692627
    3. ' distance' → logprob: -2.9348137378692627
    4. ' start' → logprob: -3.3098137378692627
    5. '   ' → logprob: -3.4348137378692627
    6. 'distance' → logprob: -4.309813499450684
    7. 'length' → logprob: -4.559813499450684
    8. ' has' → logprob: -4.684813499450684
    9. ' station' → logprob: -4.809813499450684
    10. ' segment' → logprob: -4.809813499450684

Token 28: '_card' (ID: 37760)
  Prédit: '_f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.49960213899612427
    2. '_discount' → logprob: -1.7496020793914795
    3. '_fee' → logprob: -2.7496020793914795
    4. '_' → logprob: -3.3746020793914795
    5. '_code' → logprob: -3.6246020793914795
    6. '_price' → logprob: -4.374602317810059
    7. '_type' → logprob: -4.374602317810059
    8. '_pass' → logprob: -4.874602317810059
    9. '_name' → logprob: -5.374602317810059
    10. '_use' → logprob: -5.624602317810059

Token 29: '_cost' (ID: 36820)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7092589735984802
    2. '):' → logprob: -1.584259033203125
    3. ')' → logprob: -1.834259033203125
    4. '_discount' → logprob: -3.209259033203125
    5. '_type' → logprob: -3.709259033203125
    6. '_balance' → logprob: -3.709259033203125
    7. '_fee' → logprob: -4.209259033203125
    8. '_number' → logprob: -4.834259033203125
    9. '_enabled' → logprob: -5.584259033203125
    10. '_id' → logprob: -5.709259033203125

Token 30: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1440950185060501
    2. '):' → logprob: -2.019094944000244
    3. ')' → logprob: -6.894094944000244
    4. ' ):' → logprob: -8.644095420837402
    5. '=' → logprob: -9.394095420837402
    6. '=None' → logprob: -10.144095420837402
    7. ',' → logprob: -10.269095420837402
    8. ' :' → logprob: -10.644095420837402
    9. 's' → logprob: -11.769095420837402
    10. '):
' → logprob: -12.019095420837402

Token 31: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.3487042486667633
    2. 'int' → logprob: -1.223704218864441
    3. ')' → logprob: -8.72370433807373
    4. ':int' → logprob: -10.09870433807373
    5. ' )' → logprob: -11.47370433807373
    6. '):
' → logprob: -11.47370433807373
    7. '	int' → logprob: -11.97370433807373
    8. '=int' → logprob: -12.22370433807373
    9. '[int' → logprob: -12.22370433807373
    10. '):' → logprob: -12.34870433807373

Token 32: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009621975012123585
    2. ',' → logprob: -4.884622097015381
    3. ')' → logprob: -6.259622097015381
    4. ':' → logprob: -9.384621620178223
    5. '):
' → logprob: -11.759621620178223
    6. ' ):' → logprob: -12.259621620178223
    7. '   ' → logprob: -13.759621620178223
    8. ' ' → logprob: -14.134621620178223
    9. '),' → logprob: -14.259621620178223
    10. ' ,' → logprob: -14.634621620178223

Token 33: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006330213509500027
    2. '<|end|>' → logprob: -6.0063300132751465
    3. ':' → logprob: -6.3813300132751465
    4. '   ' → logprob: -6.7563300132751465
    5. 'newline' → logprob: -8.506330490112305
    6. '```' → logprob: -8.881330490112305
    7. '\n' → logprob: -9.381330490112305
    8. '
' → logprob: -9.631330490112305
    9. ')' → logprob: -9.756330490112305
    10. '<|end|>' → logprob: -10.006330490112305

Token 34: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9005477428436279
    2. 'self' (adapté à ' self') → logprob: -1.150547742843628
    3. ' ' → logprob: -1.900547742843628
    4. '_' → logprob: -3.650547742843628
    5. '<|end|>' → logprob: -3.650547742843628
    6. ' self' → logprob: -3.775547742843628
    7. '   ' → logprob: -4.400547981262207
    8. '        ' → logprob: -4.525547981262207
    9. '\' → logprob: -4.900547981262207
    10. '    ' → logprob: -4.900547981262207

Token 35: '.index' (ID: 9736)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0030853748321533203
    2. ' .' → logprob: -6.753085136413574
    3. '.index' → logprob: -6.878085136413574
    4. '.segment' → logprob: -9.503085136413574
    5. '.token' → logprob: -9.628085136413574
    6. '.code' → logprob: -9.878085136413574
    7. '.user' → logprob: -9.878085136413574
    8. '.price' → logprob: -10.253085136413574
    9. '.parent' → logprob: -10.503085136413574
    10. '.status' → logprob: -10.628085136413574

Token 36: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5672776103019714
    2. ' =' → logprob: -0.9422776103019714
    3. '.' → logprob: -3.942277669906616
    4. '<|end|>' → logprob: -4.067277431488037
    5. ')' → logprob: -5.817277431488037
    6. ' ' → logprob: -6.192277431488037
    7. ',' → logprob: -7.192277431488037
    8. '_' → logprob: -8.442277908325195
    9. '<|end|>' → logprob: -8.442277908325195
    10. '  ' → logprob: -10.067277908325195

Token 37: ' index' (ID: 3472)
  Prédit: ' index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' index' → logprob: -0.0003357006062287837
    2. 'index' → logprob: -8.000335693359375
    3. ' ' → logprob: -15.750335693359375
    4. ' ' → logprob: -17.500335693359375
    5. '	index' → logprob: -18.500335693359375
    6. ' int' → logprob: -19.125335693359375
    7. '#index' → logprob: -19.500335693359375
    8. '=index' → logprob: -19.875335693359375
    9. '(index' → logprob: -20.500335693359375
    10. '_index' → logprob: -20.500335693359375

Token 38: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4097552001476288
    2. '<|end|>' → logprob: -1.1597552299499512
    3. '\' → logprob: -5.159755229949951
    4. '.' → logprob: -5.659755229949951
    5. '        
' → logprob: -5.784755229949951
    6. 'newline' → logprob: -6.034755229949951
    7. '        ' → logprob: -6.409755229949951
    8. '<|end|>' → logprob: -6.909755229949951
    9. '```' → logprob: -7.034755229949951
    10. ' ' → logprob: -7.034755229949951

Token 39: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20143789052963257
    2. '<|end|>' → logprob: -1.8264379501342773
    3. ' ' → logprob: -5.076437950134277
    4. '        ' → logprob: -5.826437950134277
    5. '        
' → logprob: -5.826437950134277
    6. ')' → logprob: -6.201437950134277
    7. '   ' → logprob: -6.826437950134277
    8. ' 
' → logprob: -7.326437950134277
    9. 'newline' → logprob: -7.326437950134277
    10. '<|end|>' → logprob: -7.326437950134277

Token 40: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1784604787826538
    2. 'self' (adapté à ' self') → logprob: -1.9284604787826538
    3. ' ' → logprob: -5.053460597991943
    4. ' self' → logprob: -5.303460597991943
    5. '        ' → logprob: -5.428460597991943
    6. '        
' → logprob: -7.803460597991943
    7. ',' → logprob: -8.053460121154785
    8. ')' → logprob: -8.303460121154785
    9. '   ' → logprob: -8.553460121154785
    10. '<|end|>' → logprob: -8.928460121154785

Token 41: '.paper' (ID: 154286)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0005779353086836636
    2. '.f' → logprob: -9.000577926635742
    3. ' .' → logprob: -9.500577926635742
    4. '.cost' → logprob: -9.750577926635742
    5. '.user' → logprob: -10.125577926635742
    6. '.value' → logprob: -10.500577926635742
    7. '.paper' → logprob: -11.000577926635742
    8. '.price' → logprob: -11.000577926635742
    9. '.code' → logprob: -11.125577926635742
    10. '.period' → logprob: -11.125577926635742

Token 42: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.0018866342725232244
    2. '_' → logprob: -7.12688684463501
    3. '_p' → logprob: -8.126886367797852
    4. '_fee' → logprob: -8.376886367797852
    5. '_cost' → logprob: -8.501886367797852
    6. '_ticket' → logprob: -8.751886367797852
    7. '_price' → logprob: -9.251886367797852
    8. ' _' → logprob: -10.126886367797852
    9. '_s' → logprob: -11.626886367797852
    10. '_purchase' → logprob: -11.626886367797852

Token 43: 'are' (ID: 644)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.24305370450019836
    2. 'a' → logprob: -1.993053674697876
    3. '_a' → logprob: -2.868053674697876
    4. 'are' → logprob: -3.868053674697876
    5. '_f' → logprob: -6.743053913116455
    6. 'ares' → logprob: -8.618053436279297
    7. '_are' → logprob: -9.368053436279297
    8. ' _' → logprob: -9.993053436279297
    9. '__' → logprob: -9.993053436279297
    10. 'arer' → logprob: -10.243053436279297

Token 44: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5845338702201843
    2. ' =' → logprob: -0.8345338702201843
    3. '_' → logprob: -4.83453369140625
    4. ')' → logprob: -8.58453369140625
    5. '_space' → logprob: -8.95953369140625
    6. ',' → logprob: -9.20953369140625
    7. '.' → logprob: -9.45953369140625
    8. ' +=' → logprob: -10.20953369140625
    9. '<|end|>' → logprob: -10.33453369140625
    10. ' ' → logprob: -12.45953369140625

Token 45: ' paper' (ID: 6651)
  Prédit: ' paper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' paper' → logprob: -0.029765412211418152
    2. 'paper' → logprob: -3.5297653675079346
    3. '.paper' → logprob: -12.154765129089355
    4. ' pape' → logprob: -12.279765129089355
    5. ' ' → logprob: -12.654765129089355
    6. ' ' → logprob: -14.904765129089355
    7. ' pap' → logprob: -14.904765129089355
    8. 'Paper' → logprob: -15.154765129089355
    9. ' papir' → logprob: -15.154765129089355
    10. '-paper' → logprob: -16.279766082763672

Token 46: '_f' (ID: 1337)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3133496344089508
    2. '_f' → logprob: -1.3133496046066284
    3. '_space' → logprob: -11.188349723815918
    4. '_p' → logprob: -11.563349723815918
    5. '_s' → logprob: -11.813349723815918
    6. '_fee' → logprob: -12.313349723815918
    7. '_factor' → logprob: -12.563349723815918
    8. ' _' → logprob: -12.563349723815918
    9. '_far' → logprob: -12.938349723815918
    10. '_line' → logprob: -13.063349723815918

Token 47: 'are' (ID: 644)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0028122442308813334
    2. 'are' → logprob: -6.252812385559082
    3. '_a' → logprob: -7.252812385559082
    4. '_' → logprob: -8.752812385559082
    5. 'ares' → logprob: -12.002812385559082
    6. ' a' → logprob: -12.252812385559082
    7. 'а' → logprob: -12.627812385559082
    8. 'r' → logprob: -14.252812385559082
    9. 'ar' → logprob: -14.502812385559082
    10. '_are' → logprob: -15.002812385559082

Token 48: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03567875549197197
    2. 'self' → logprob: -4.785678863525391
    3. '```' → logprob: -4.785678863525391
    4. '<|end|>' → logprob: -5.035678863525391
    5. '`' → logprob: -5.910678863525391
    6. '        
' → logprob: -6.160678863525391
    7. '\' → logprob: -6.285678863525391
    8. '_' → logprob: -7.285678863525391
    9. 'newline' → logprob: -7.285678863525391
    10. '        ' → logprob: -7.535678863525391

Token 49: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02557302452623844
    2. 'self' → logprob: -3.7755730152130127
    3. '        
' → logprob: -7.775573253631592
    4. '`' → logprob: -7.900573253631592
    5. '```' → logprob: -7.900573253631592
    6. 'newline' → logprob: -7.900573253631592
    7. '   ' → logprob: -8.400572776794434
    8. '<|end|>' → logprob: -9.025572776794434
    9. '        ' → logprob: -9.525572776794434
    10. '\' → logprob: -9.900572776794434

Token 50: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.10078150779008865
    2. '       ' → logprob: -2.3507814407348633
    3. ' self' → logprob: -7.475781440734863
    4. '	self' → logprob: -12.225781440734863
    5. '   ' → logprob: -13.725781440734863
    6. '	' → logprob: -14.350781440734863
    7. ' ' → logprob: -14.725781440734863
    8. '\' → logprob: -15.100781440734863
    9. '```' → logprob: -15.850781440734863
    10. '      ' → logprob: -16.22578239440918

Token 51: '.ic' (ID: 49873)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.016116715967655182
    2. '.ic' → logprob: -4.141116619110107
    3. '_ic' → logprob: -10.391117095947266
    4. '.paper' → logprob: -10.516117095947266
    5. ' .' → logprob: -11.766117095947266
    6. '.period' → logprob: -12.141117095947266
    7. '.f' → logprob: -13.516117095947266
    8. '.IC' → logprob: -13.516117095947266
    9. 'ic' → logprob: -13.766117095947266
    10. '._' → logprob: -13.891117095947266

Token 52: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.1208680048584938
    2. '_card' → logprob: -2.620867967605591
    3. '_' → logprob: -3.245867967605591
    4. '_cost' → logprob: -6.37086820602417
    5. '_fee' → logprob: -9.245867729187012
    6. ' _' → logprob: -9.370867729187012
    7. '_price' → logprob: -9.745867729187012
    8. '_car' → logprob: -9.995867729187012
    9. '_cards' → logprob: -10.245867729187012
    10. '_code' → logprob: -10.870867729187012

Token 53: 'are' (ID: 644)
  Prédit: 'are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'are' → logprob: -0.002033084398135543
    2. '_' → logprob: -7.252033233642578
    3. '_are' → logprob: -7.377033233642578
    4. 'a' → logprob: -7.752033233642578
    5. '_f' → logprob: -8.877033233642578
    6. 'ar' → logprob: -10.377033233642578
    7. 'ares' → logprob: -10.877033233642578
    8. 'fare' → logprob: -11.252033233642578
    9. '_card' → logprob: -11.752033233642578
    10. '_a' → logprob: -11.752033233642578

Token 54: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47410982847213745
    2. ' =' → logprob: -0.9741098284721375
    3. ')' → logprob: -11.224109649658203
    4. '<|end|>' → logprob: -11.224109649658203
    5. '_' → logprob: -12.599109649658203
    6. ',' → logprob: -14.724109649658203
    7. '   ' → logprob: -14.724109649658203
    8. ' ' → logprob: -14.849109649658203
    9. '<|end|>' → logprob: -14.974109649658203
    10. ' is' → logprob: -15.224109649658203

Token 55: ' ic' (ID: 26007)
  Prédit: ' ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ic' → logprob: -0.004080658778548241
    2. 'ic' → logprob: -5.504080772399902
    3. '_ic' → logprob: -14.004080772399902
    4. '(ic' → logprob: -14.004080772399902
    5. '/ic' → logprob: -14.879080772399902
    6. ' ' → logprob: -15.879080772399902
    7. ' ' → logprob: -16.879079818725586
    8. '.ic' → logprob: -18.129079818725586
    9. 'icc' → logprob: -18.879079818725586
    10. 'Ic' → logprob: -19.129079818725586

Token 56: '_f' (ID: 1337)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3761049509048462
    2. '_card' → logprob: -1.2511049509048462
    3. '_f' → logprob: -3.6261048316955566
    4. ' _' → logprob: -7.751104831695557
    5. '_cost' → logprob: -9.251105308532715
    6. '_c' → logprob: -10.251105308532715
    7. '_car' → logprob: -10.876105308532715
    8. '_space' → logprob: -11.251105308532715
    9. '_
' → logprob: -11.876105308532715
    10. 'card' → logprob: -12.001105308532715

Token 57: 'are' (ID: 644)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9584965705871582
    2. 'a' → logprob: -0.9584965705871582
    3. '_a' → logprob: -1.8334965705871582
    4. 'are' → logprob: -2.708496570587158
    5. '_f' → logprob: -6.208496570587158
    6. ' _' → logprob: -6.958496570587158
    7. 'ares' → logprob: -7.208496570587158
    8. '_are' → logprob: -7.458496570587158
    9. '_
' → logprob: -7.958496570587158
    10. 'arer' → logprob: -8.08349609375

Token 58: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4378189146518707
    2. 'self' → logprob: -1.0628188848495483
    3. '<|end|>' → logprob: -5.562819004058838
    4. ' self' → logprob: -5.687819004058838
    5. '```' → logprob: -7.562819004058838
    6. ' ' → logprob: -8.06281852722168
    7. '
' → logprob: -8.56281852722168
    8. '        ' → logprob: -8.68781852722168
    9. '        
' → logprob: -8.93781852722168
    10. '\' → logprob: -9.31281852722168

Token 59: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01726701483130455
    2. 'self' → logprob: -4.142267227172852
    3. '```' → logprob: -7.517267227172852
    4. '<|end|>' → logprob: -8.142267227172852
    5. ' self' → logprob: -9.017267227172852
    6. '`' → logprob: -10.017267227172852
    7. '   ' → logprob: -10.142267227172852
    8. '        
' → logprob: -10.517267227172852
    9. ' ' → logprob: -10.642267227172852
    10. '	' → logprob: -10.642267227172852

Token 60: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.047472089529037476
    2. '       ' → logprob: -3.1724720001220703
    3. ' self' → logprob: -5.54747200012207
    4. '\' → logprob: -8.79747200012207
    5. '```' → logprob: -9.17247200012207
    6. '<|end|>' → logprob: -10.04747200012207
    7. ' ' → logprob: -10.17247200012207
    8. '        ' → logprob: -10.29747200012207
    9. ' ' → logprob: -10.29747200012207
    10. '   ' → logprob: -10.54747200012207

Token 61: '.ic' (ID: 49873)
  Prédit: '.ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ic' → logprob: -0.011145912110805511
    2. '.' → logprob: -4.511146068572998
    3. '_ic' → logprob: -10.13614559173584
    4. '.card' → logprob: -10.38614559173584
    5. '._' → logprob: -11.26114559173584
    6. ' .' → logprob: -12.76114559173584
    7. '.IC' → logprob: -12.76114559173584
    8. '/ic' → logprob: -13.88614559173584
    9. '.ip' → logprob: -14.26114559173584
    10. 'ic' → logprob: -14.26114559173584

Token 62: '_card' (ID: 37760)
  Prédit: '_card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_card' → logprob: -0.00015252856246661395
    2. '_cost' → logprob: -9.375152587890625
    3. '_' → logprob: -10.000152587890625
    4. '_f' → logprob: -11.250152587890625
    5. '_cards' → logprob: -12.875152587890625
    6. '_cart' → logprob: -13.125152587890625
    7. '_car' → logprob: -13.375152587890625
    8. ' _' → logprob: -13.500152587890625
    9. '_code' → logprob: -15.375152587890625
    10. '_coin' → logprob: -15.625152587890625

Token 63: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -4.60414821645827e-06
    2. '_' → logprob: -12.750004768371582
    3. ' _' → logprob: -13.875004768371582
    4. '_c' → logprob: -15.125004768371582
    5. '_code' → logprob: -16.250003814697266
    6. '_co' → logprob: -17.125003814697266
    7. 'cost' → logprob: -17.125003814697266
    8. '_cov' → logprob: -17.250003814697266
    9. '_COST' → logprob: -17.500003814697266
    10. '_cut' → logprob: -17.875003814697266

Token 64: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008656885474920273
    2. '=' → logprob: -4.758656978607178
    3. ' ' → logprob: -10.13365650177002
    4. '<|end|>' → logprob: -13.25865650177002
    5. ' =
' → logprob: -14.38365650177002
    6. '   ' → logprob: -16.758657455444336
    7. '.' → logprob: -17.258657455444336
    8. '  ' → logprob: -17.383657455444336
    9. ')' → logprob: -17.383657455444336
    10. '_' → logprob: -17.883657455444336

Token 65: ' ic' (ID: 26007)
  Prédit: 'ic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.07889506965875626
    2. ' ic' → logprob: -2.578895092010498
    3. '(ic' → logprob: -12.70389461517334
    4. '0' → logprob: -14.45389461517334
    5. ' ' → logprob: -14.82889461517334
    6. '_ic' → logprob: -15.20389461517334
    7. 'icmp' → logprob: -15.20389461517334
    8. ' ' → logprob: -15.32889461517334
    9. '/ic' → logprob: -15.32889461517334
    10. '   ' → logprob: -15.70389461517334

Token 66: '_card' (ID: 37760)
  Prédit: '_card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_card' → logprob: -0.007867809385061264
    2. '_' → logprob: -4.882867813110352
    3. '_cost' → logprob: -9.382867813110352
    4. 'ard' → logprob: -10.007867813110352
    5. '_f' → logprob: -10.507867813110352
    6. '_car' → logprob: -10.757867813110352
    7. '_c' → logprob: -10.882867813110352
    8. '_ca' → logprob: -11.382867813110352
    9. '_cart' → logprob: -11.507867813110352
    10. ' _' → logprob: -11.757867813110352

Token 67: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.03854344040155411
    2. '_' → logprob: -3.288543462753296
    3. '_card' → logprob: -7.913543224334717
    4. 'cost' → logprob: -10.413543701171875
    5. ' _' → logprob: -11.038543701171875
    6. 'ost' → logprob: -11.038543701171875
    7. '_c' → logprob: -11.038543701171875
    8. '_o' → logprob: -11.788543701171875
    9. '_code' → logprob: -11.913543701171875
    10. '_
' → logprob: -12.288543701171875

Token 68: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0924246311187744
    2. '   ' → logprob: -1.2174246311187744
    3. '<|end|>' → logprob: -1.3424246311187744
    4. '    
' → logprob: -3.5924246311187744
    5. '\' → logprob: -4.092424392700195
    6. ' ' → logprob: -4.342424392700195
    7. '\n' → logprob: -4.592424392700195
    8. ':' → logprob: -4.967424392700195
    9. '<|end|>' → logprob: -5.217424392700195
    10. 'newline' → logprob: -5.342424392700195

Token 69: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43855738639831543
    2. '
' → logprob: -1.3135573863983154
    3. '<|end|>' → logprob: -3.4385573863983154
    4. '```' → logprob: -4.1885576248168945
    5. '    
' → logprob: -4.6885576248168945
    6. ' ' → logprob: -4.8135576248168945
    7. '\' → logprob: -5.3135576248168945
    8. '\n' → logprob: -5.3135576248168945
    9. ' 
' → logprob: -6.0635576248168945
    10. 'n' → logprob: -6.1885576248168945

Token 70: ' self' (ID: 1051)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3914102613925934
    2. '<|end|>' → logprob: -1.641410231590271
    3. '   ' → logprob: -2.2664103507995605
    4. '    
' → logprob: -4.1414103507995605
    5. '\n' → logprob: -6.0164103507995605
    6. '```' → logprob: -6.3914103507995605
    7. '<|end|>' → logprob: -6.7664103507995605
    8. 'newline' → logprob: -6.8914103507995605
    9. '       ' → logprob: -7.1414103507995605
    10. ' 
' → logprob: -7.1414103507995605

Token 71: '.trip' (ID: 168825)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.021905388683080673
    2. '.is' → logprob: -4.146905422210693
    3. '._' → logprob: -7.271905422210693
    4. '.available' → logprob: -7.646905422210693
    5. '.has' → logprob: -7.771905422210693
    6. '.used' → logprob: -7.896905422210693
    7. '.cost' → logprob: -8.146904945373535
    8. '.f' → logprob: -8.271904945373535
    9. '.use' → logprob: -8.271904945373535
    10. '.user' → logprob: -8.271904945373535

Token 72: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.2744152545928955
    2. '_' → logprob: -2.7744152545928955
    3. '_length' → logprob: -2.7744152545928955
    4. 's' → logprob: -3.2744152545928955
    5. '_cost' → logprob: -3.2744152545928955
    6. '_distance' → logprob: -4.649415016174316
    7. '_type' → logprob: -4.649415016174316
    8. '=' → logprob: -5.024415016174316
    9. ' =' → logprob: -5.899415016174316
    10. '_duration' → logprob: -6.524415016174316

Token 73: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014165744185447693
    2. '=' → logprob: -4.264165878295898
    3. ' ' → logprob: -13.764165878295898
    4. '<|end|>' → logprob: -14.639165878295898
    5. ' =
' → logprob: -15.014165878295898
    6. 's' → logprob: -15.764165878295898
    7. ' =)' → logprob: -16.5141658782959
    8. '   ' → logprob: -16.6391658782959
    9. '=None' → logprob: -17.2641658782959
    10. '.' → logprob: -17.8891658782959

Token 74: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.17974622547626495
    2. '0' → logprob: -1.8047462701797485
    3. ' ' → logprob: -13.679746627807617
    4. '1' → logprob: -16.304746627807617
    5. '  ' → logprob: -16.679746627807617
    6. ' defaultdict' → logprob: -17.179746627807617
    7. '   ' → logprob: -17.304746627807617
    8. ' [' → logprob: -17.929746627807617
    9. '۰' → logprob: -18.367246627807617
    10. '<|end|>' → logprob: -18.554746627807617

Token 75: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007105246186256409
    2. ' ' → logprob: -7.250710487365723
    3. '{}' → logprob: -15.500710487365723
    4. '   ' → logprob: -16.00071144104004
    5. '1' → logprob: -16.25071144104004
    6. '[]' → logprob: -16.25071144104004
    7. '  ' → logprob: -16.87571144104004
    8. ' ' → logprob: -17.62571144104004
    9. '[' → logprob: -17.87571144104004
    10. '{' → logprob: -18.00071144104004

Token 76: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.835133969783783
    2. '
' → logprob: -1.4601340293884277
    3. '<|end|>' → logprob: -1.4601340293884277
    4. '    
' → logprob: -2.8351340293884277
    5. ' 
' → logprob: -3.7101340293884277
    6. ' ' → logprob: -4.960134029388428
    7. '<|end|>' → logprob: -5.835134029388428
    8. '  
' → logprob: -5.960134029388428
    9. '\n' → logprob: -6.710134029388428
    10. '    ' → logprob: -7.210134029388428

Token 77: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16982446610927582
    2. ' 
' → logprob: -3.1698243618011475
    3. '    
' → logprob: -3.2948243618011475
    4. '
' → logprob: -3.4198243618011475
    5. ' ' → logprob: -3.9198243618011475
    6. '<|end|>' → logprob: -5.169824600219727
    7. '\' → logprob: -5.544824600219727
    8. '```' → logprob: -5.794824600219727
    9. '\n' → logprob: -6.294824600219727
    10. '  
' → logprob: -6.294824600219727

Token 78: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49873146414756775
    2. 'def' (adapté à ' def') → logprob: -1.4987314939498901
    3. ' def' → logprob: -2.3737313747406006
    4. ' ' → logprob: -3.4987313747406006
    5. '    ' → logprob: -4.37373161315918
    6. '    
' → logprob: -4.49873161315918
    7. '	def' → logprob: -4.87373161315918
    8. ' 
' → logprob: -5.24873161315918
    9. '<|end|>' → logprob: -5.87373161315918
    10. '
' → logprob: -6.37373161315918

Token 79: ' compute' (ID: 23864)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2070067673921585
    2. ' increment' → logprob: -2.8320066928863525
    3. ' space' → logprob: -3.0820066928863525
    4. ' add' → logprob: -4.457006931304932
    5. ' _' → logprob: -4.582006931304932
    6. ' calculate' → logprob: -4.582006931304932
    7. ' increase' → logprob: -4.707006931304932
    8. ' ' → logprob: -4.957006931304932
    9. ' trip' → logprob: -4.957006931304932
    10. 'increment' → logprob: -5.582006931304932

Token 80: '_p' (ID: 1359)
  Prédit: '_cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.7457130551338196
    2. '_' → logprob: -1.6207129955291748
    3. '_total' → logprob: -1.6207129955291748
    4. '_trip' → logprob: -3.245712995529175
    5. '_price' → logprob: -3.370712995529175
    6. '_f' → logprob: -3.995712995529175
    7. '_ic' → logprob: -4.495713233947754
    8. '_discount' → logprob: -4.995713233947754
    9. '_fee' → logprob: -5.245713233947754
    10. '_p' → logprob: -5.370713233947754

Token 81: 'aper' (ID: 3831)
  Prédit: 'aper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aper' → logprob: -0.5421864986419678
    2. 'rice' → logprob: -1.5421864986419678
    3. 'er' → logprob: -2.1671864986419678
    4. 'ay' → logprob: -3.2921864986419678
    5. 'r' → logprob: -4.042186737060547
    6. '_' → logprob: -4.542186737060547
    7. 'ayment' → logprob: -4.792186737060547
    8. 'ap' → logprob: -5.417186737060547
    9. '_price' → logprob: -5.917186737060547
    10. '_r' → logprob: -6.167186737060547

Token 82: '_cost' (ID: 36820)
  Prédit: '_f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.016623204573988914
    2. '_cost' → logprob: -4.516623020172119
    3. '_' → logprob: -5.641623020172119
    4. '_price' → logprob: -7.141623020172119
    5. '_fee' → logprob: -7.141623020172119
    6. '_trip' → logprob: -9.266623497009277
    7. ' _' → logprob: -9.891623497009277
    8. '_p' → logprob: -10.141623497009277
    9. '_discount' → logprob: -10.266623497009277
    10. '_ticket' → logprob: -10.266623497009277

Token 83: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.25294971466064453
    2. '(' → logprob: -1.5029497146606445
    3. '_' → logprob: -7.7529497146606445
    4. ' (' → logprob: -7.8779497146606445
    5. 'self' → logprob: -9.002949714660645
    6. 's' → logprob: -11.002949714660645
    7. '   ' → logprob: -11.752949714660645
    8. '(
' → logprob: -11.752949714660645
    9. '_self' → logprob: -11.752949714660645
    10. '(s' → logprob: -11.877949714660645

Token 84: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.25794717669487
    2. ',' → logprob: -1.5079472064971924
    3. ')' → logprob: -5.257946968078613
    4. 'self' → logprob: -7.382946968078613
    5. ' ,' → logprob: -10.007946968078613
    6. '):
' → logprob: -10.757946968078613
    7. ' ):' → logprob: -10.757946968078613
    8. ',self' → logprob: -11.007946968078613
    9. '   ' → logprob: -11.507946968078613
    10. '(self' → logprob: -11.507946968078613

Token 85: ' ->' (ID: 2747)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6298366785049438
    2. '(self' → logprob: -1.2548366785049438
    3. ':' → logprob: -1.8798366785049438
    4. '():' → logprob: -3.8798365592956543
    5. '       ' → logprob: -5.879836559295654
    6. '<|end|>' → logprob: -6.379836559295654
    7. '(
' → logprob: -6.754836559295654
    8. '   ' → logprob: -7.004836559295654
    9. 'self' → logprob: -7.379836559295654
    10. '):' → logprob: -7.629836559295654

Token 86: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.06411531567573547
    2. 'int' → logprob: -2.814115285873413
    3. ' ' → logprob: -6.189115524291992
    4. ' ' → logprob: -10.814115524291992
    5. ' self' → logprob: -11.814115524291992
    6. ' None' → logprob: -11.939115524291992
    7. ' `' → logprob: -12.189115524291992
    8. '[int' → logprob: -12.189115524291992
    9. '(int' → logprob: -12.564115524291992
    10. '    ' → logprob: -12.564115524291992

Token 87: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006855101673863828
    2. '():' → logprob: -7.750685691833496
    3. '):' → logprob: -8.750685691833496
    4. ':return' → logprob: -10.250685691833496
    5. '       ' → logprob: -11.000685691833496
    6. ' :' → logprob: -11.375685691833496
    7. '<|end|>' → logprob: -11.375685691833496
    8. ':
' → logprob: -12.000685691833496
    9. ':**' → logprob: -12.500685691833496
    10. '   ' → logprob: -13.000685691833496

Token 88: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002524053445085883
    2. ' return' → logprob: -6.377523899078369
    3. 'return' → logprob: -7.627523899078369
    4. '<|end|>' → logprob: -8.877524375915527
    5. '   ' → logprob: -9.502524375915527
    6. '    ' → logprob: -10.252524375915527
    7. '\' → logprob: -11.377524375915527
    8. ' 
' → logprob: -11.377524375915527
    9. '        
' → logprob: -11.502524375915527
    10. '\n' → logprob: -11.877524375915527

Token 89: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.1437823325395584
    2. ' return' → logprob: -2.643782377243042
    3. '       ' → logprob: -2.768782377243042
    4. '```' → logprob: -9.518782615661621
    5. 'if' → logprob: -12.643782615661621
    6. 'result' → logprob: -12.768782615661621
    7. 'self' → logprob: -13.018782615661621
    8. '   ' → logprob: -13.143782615661621
    9. '	return' → logprob: -13.143782615661621
    10. ' if' → logprob: -13.393782615661621

Token 90: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.0021923754829913378
    2. 'self' → logprob: -6.127192497253418
    3. ' ' → logprob: -12.502192497253418
    4. ' ' → logprob: -13.127192497253418
    5. '	self' → logprob: -15.002192497253418
    6. '    ' → logprob: -15.252192497253418
    7. ' int' → logprob: -15.502192497253418
    8. '(self' → logprob: -15.627192497253418
    9. ' max' → logprob: -15.877192497253418
    10. '        ' → logprob: -16.1271915435791

Token 91: '.paper' (ID: 154286)
  Prédit: '.paper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.paper' → logprob: -0.3885524868965149
    2. '.' → logprob: -1.1385524272918701
    3. '.p' → logprob: -7.263552665710449
    4. '.trip' → logprob: -7.638552665710449
    5. ' .' → logprob: -8.01355266571045
    6. '._' → logprob: -10.13855266571045
    7. '.segment' → logprob: -10.63855266571045
    8. '.pet' → logprob: -10.88855266571045
    9. '.pdf' → logprob: -11.76355266571045
    10. '.py' → logprob: -12.01355266571045

Token 92: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -2.3319124011322856e-05
    2. '_cost' → logprob: -11.000022888183594
    3. '_' → logprob: -12.250022888183594
    4. ' _' → logprob: -13.625022888183594
    5. '_fee' → logprob: -15.250022888183594
    6. '_p' → logprob: -15.875022888183594
    7. '_price' → logprob: -16.500022888183594
    8. '_far' → logprob: -17.500022888183594
    9. '_s' → logprob: -17.875022888183594
    10. '```' → logprob: -18.125022888183594

Token 93: 'are' (ID: 644)
  Prédit: 'are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'are' → logprob: -2.9160102712921798e-05
    2. 'a' → logprob: -10.750029563903809
    3. 'fare' → logprob: -12.500029563903809
    4. 'ares' → logprob: -14.125029563903809
    5. 'aire' → logprob: -14.375029563903809
    6. 'air' → logprob: -14.875029563903809
    7. '```' → logprob: -15.000029563903809
    8. ' are' → logprob: -15.250029563903809
    9. 'ar' → logprob: -15.250029563903809
    10. 'аре' → logprob: -15.750029563903809

Token 94: ' *' (ID: 425)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 95: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5759419798851013
    2. ' self' → logprob: -0.8259419798851013
    3. '(self' → logprob: -14.200942039489746
    4. '       ' → logprob: -14.450942039489746
    5. '	self' → logprob: -14.575942039489746
    6. ' ' → logprob: -15.200942039489746
    7. '   ' → logprob: -15.575942039489746
    8. '1' → logprob: -15.825942039489746
    9. ' ' → logprob: -16.32594108581543
    10. '    ' → logprob: -17.45094108581543

Token 96: '.trip' (ID: 168825)
  Prédit: '.trip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.trip' → logprob: -0.0002738522016443312
    2. '.' → logprob: -8.250273704528809
    3. ' .' → logprob: -12.000273704528809
    4. '.travel' → logprob: -12.750273704528809
    5. 'trip' → logprob: -14.000273704528809
    6. '.segment' → logprob: -14.375273704528809
    7. '.tr' → logprob: -14.875273704528809
    8. '.tab' → logprob: -15.000273704528809
    9. '_trip' → logprob: -15.000273704528809
    10. '.user' → logprob: -15.125273704528809

Token 97: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -1.723973582556937e-05
    2. '_' → logprob: -11.875017166137695
    3. '_trip' → logprob: -12.250017166137695
    4. ' _' → logprob: -13.750017166137695
    5. '_counter' → logprob: -13.875017166137695
    6. '._' → logprob: -13.875017166137695
    7. '_counts' → logprob: -14.625017166137695
    8. '_cost' → logprob: -14.875017166137695
    9. ')_' → logprob: -15.125017166137695
    10. 'count' → logprob: -15.625017166137695

Token 98: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 99: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6618151664733887
    2. '<|end|>' → logprob: -1.2868151664733887
    3. '    
' → logprob: -2.6618151664733887
    4. '
' → logprob: -3.0368151664733887
    5. ' 
' → logprob: -3.6618151664733887
    6. '\n' → logprob: -3.9118151664733887
    7. ' ' → logprob: -4.536815166473389
    8. '```' → logprob: -4.661815166473389
    9. '  
' → logprob: -4.911815166473389
    10. '\' → logprob: -6.036815166473389

Token 100: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19715222716331482
    2. '
' → logprob: -2.1971521377563477
    3. ' ' → logprob: -4.072152137756348
    4. ' 
' → logprob: -4.072152137756348
    5. 'def' (adapté à ' def') → logprob: -4.322152137756348
    6. '    
' → logprob: -4.572152137756348
    7. '<|end|>' → logprob: -5.697152137756348
    8. ' def' → logprob: -5.947152137756348
    9. '  
' → logprob: -6.947152137756348
    10. '  ' → logprob: -7.447152137756348

Token 101: ' compute' (ID: 23864)
  Prédit: ' compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compute' → logprob: -0.020580658689141273
    2. 'compute' → logprob: -3.895580768585205
    3. '_compute' → logprob: -10.270580291748047
    4. '_' → logprob: -13.520580291748047
    5. ' ' → logprob: -14.145580291748047
    6. ' ' → logprob: -14.395580291748047
    7. ' def' → logprob: -14.770580291748047
    8. ' _' → logprob: -14.895580291748047
    9. ' calculate' → logprob: -15.020580291748047
    10. ' space' → logprob: -15.645580291748047

Token 102: '_ic' (ID: 79605)
  Prédit: '_ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ic' → logprob: -6.0391463193809614e-05
    2. '_' → logprob: -9.750060081481934
    3. 'ic' → logprob: -13.500060081481934
    4. '```' → logprob: -15.625060081481934
    5. ' _' → logprob: -16.25006103515625
    6. '_i' → logprob: -16.37506103515625
    7. '
' → logprob: -17.00006103515625
    8. '_IC' → logprob: -17.00006103515625
    9. '_mc' → logprob: -17.50006103515625
    10. '`' → logprob: -17.62506103515625

Token 103: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.0006383348954841495
    2. '_f' → logprob: -7.375638484954834
    3. '_' → logprob: -11.875638008117676
    4. '_fee' → logprob: -13.625638008117676
    5. '_code' → logprob: -14.375638008117676
    6. ' _' → logprob: -14.500638008117676
    7. '_c' → logprob: -14.500638008117676
    8. '_COST' → logprob: -14.500638008117676
    9. '_p' → logprob: -15.875638008117676
    10. '_total' → logprob: -16.000638961791992

Token 104: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.011883974075317383
    2. '(' → logprob: -4.511883735656738
    3. ' (' → logprob: -7.386883735656738
    4. '()' → logprob: -8.761883735656738
    5. 'self' → logprob: -10.136883735656738
    6. '<|end|>' → logprob: -11.511883735656738
    7. ' ' → logprob: -12.386883735656738
    8. '(
' → logprob: -13.011883735656738
    9. '   ' → logprob: -14.261883735656738
    10. '       ' → logprob: -14.636883735656738

Token 105: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010282796574756503
    2. '):' → logprob: -9.500102996826172
    3. ' )' → logprob: -10.625102996826172
    4. '):
' → logprob: -13.000102996826172
    5. '   ' → logprob: -14.625102996826172
    6. ' ' → logprob: -15.750102996826172
    7. '()' → logprob: -15.875102996826172
    8. 'self' → logprob: -16.000102996826172
    9. ')->' → logprob: -16.375102996826172
    10. '):

' → logprob: -16.625102996826172

Token 106: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.05188358575105667
    2. '->' → logprob: -3.4268836975097656
    3. ':' → logprob: -5.551883697509766
    4. ' ' → logprob: -5.676883697509766
    5. ')' → logprob: -5.801883697509766
    6. '       ' → logprob: -6.301883697509766
    7. '(self' → logprob: -6.301883697509766
    8. '(' → logprob: -6.301883697509766
    9. ' *' → logprob: -7.551883697509766
    10. '   ' → logprob: -7.551883697509766

Token 107: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.5760734677314758
    2. 'int' → logprob: -0.8260734677314758
    3. '(int' → logprob: -9.07607364654541
    4. ' (' → logprob: -11.57607364654541
    5. ' ' → logprob: -12.82607364654541
    6. 'self' → logprob: -13.07607364654541
    7. ' self' → logprob: -13.45107364654541
    8. '   ' → logprob: -14.20107364654541
    9. '	int' → logprob: -14.45107364654541
    10. '<int' → logprob: -14.45107364654541

Token 108: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0020680641755461693
    2. ':
' → logprob: -6.377068042755127
    3. '       ' → logprob: -9.002068519592285
    4. '(self' → logprob: -9.002068519592285
    5. '):' → logprob: -10.252068519592285
    6. '(' → logprob: -11.002068519592285
    7. '   ' → logprob: -11.377068519592285
    8. 'self' → logprob: -11.377068519592285
    9. '():' → logprob: -11.752068519592285
    10. ':return' → logprob: -11.752068519592285

Token 109: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09453010559082031
    2. ' return' → logprob: -2.7195301055908203
    3. 'return' → logprob: -3.7195301055908203
    4. 'self' → logprob: -10.96953010559082
    5. ' self' → logprob: -11.09453010559082
    6. '   ' → logprob: -12.34453010559082
    7. '	return' → logprob: -12.46953010559082
    8. ' ' → logprob: -13.21953010559082
    9. '	' → logprob: -13.34453010559082
    10. '    ' → logprob: -14.09453010559082

Token 110: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.050946205854415894
    2. ' return' → logprob: -3.0509462356567383
    3. '       ' → logprob: -6.050946235656738
    4. '	return' → logprob: -15.300946235656738
    5. '```' → logprob: -15.925946235656738
    6. '   ' → logprob: -16.175945281982422
    7. ' ' → logprob: -17.550945281982422
    8. 'if' → logprob: -17.925945281982422
    9. ' ' → logprob: -18.300945281982422
    10. 'self' → logprob: -18.550945281982422

Token 111: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.47407954931259155
    2. 'self' → logprob: -0.9740795493125916
    3. '(self' → logprob: -14.099079132080078
    4. ' max' → logprob: -14.099079132080078
    5. ' (' → logprob: -14.599079132080078
    6. ' ' → logprob: -15.474079132080078
    7. 'max' → logprob: -15.974079132080078
    8. '	self' → logprob: -16.599079132080078
    9. '   ' → logprob: -16.849079132080078
    10. ' ' → logprob: -17.349079132080078

Token 112: '.ic' (ID: 49873)
  Prédit: '.ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ic' → logprob: -5.796184723294573e-06
    2. '.' → logprob: -12.750005722045898
    3. 'ic' → logprob: -13.500005722045898
    4. ' .' → logprob: -14.250005722045898
    5. '_ic' → logprob: -15.000005722045898
    6. '._' → logprob: -15.875005722045898
    7. '/ic' → logprob: -15.875005722045898
    8. '.IC' → logprob: -16.2500057220459
    9. '.ir' → logprob: -17.5000057220459
    10. '_.' → logprob: -17.7500057220459

Token 113: '_card' (ID: 37760)
  Prédit: '_f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -1.9862216504407115e-05
    2. '_card' → logprob: -11.375020027160645
    3. '_cost' → logprob: -12.000020027160645
    4. '_' → logprob: -13.375020027160645
    5. ' _' → logprob: -15.625020027160645
    6. '_fee' → logprob: -15.625020027160645
    7. 'f' → logprob: -16.125019073486328
    8. '_ic' → logprob: -16.750019073486328
    9. '_far' → logprob: -16.875019073486328
    10. '_code' → logprob: -17.750019073486328

Token 114: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -1.735893965815194e-05
    2. '_f' → logprob: -11.000017166137695
    3. 'cost' → logprob: -15.250017166137695
    4. ' _' → logprob: -15.375017166137695
    5. '_' → logprob: -15.625017166137695
    6. '_fee' → logprob: -17.750017166137695
    7. '_card' → logprob: -18.125017166137695
    8. '_COST' → logprob: -18.250017166137695
    9. '```' → logprob: -19.125017166137695
    10. 'Cost' → logprob: -19.125017166137695

Token 115: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.09572762995958328
    2. '+' → logprob: -2.4707276821136475
    3. ' *' → logprob: -5.345727443695068
    4. '*' → logprob: -6.220727443695068
    5. ' ' → logprob: -12.845727920532227
    6. '+self' → logprob: -13.345727920532227
    7. ' ' → logprob: -13.470727920532227
    8. '<|end|>' → logprob: -13.845727920532227
    9. ')' → logprob: -14.220727920532227
    10. ' +
' → logprob: -14.595727920532227

Token 116: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.049659889191389084
    2. 'self' → logprob: -3.0496599674224854
    3. ' (' → logprob: -6.924659729003906
    4. '(self' → logprob: -9.549659729003906
    5. '(' → logprob: -11.424659729003906
    6. ' ' → logprob: -12.549659729003906
    7. '       ' → logprob: -14.049659729003906
    8. '   ' → logprob: -14.299659729003906
    9. ' sum' → logprob: -14.924659729003906
    10. '	self' → logprob: -15.174659729003906

Token 117: '.ic' (ID: 49873)
  Prédit: '.ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ic' → logprob: -7.517272024415433e-05
    2. 'ic' → logprob: -9.625075340270996
    3. '.' → logprob: -13.000075340270996
    4. '_ic' → logprob: -13.250075340270996
    5. ' .' → logprob: -13.500075340270996
    6. '/ic' → logprob: -13.875075340270996
    7. '.ir' → logprob: -14.500075340270996
    8. ' ic' → logprob: -14.625075340270996
    9. '.IC' → logprob: -15.125075340270996
    10. '._' → logprob: -15.625075340270996

Token 118: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -3.173704271830502e-06
    2. '_' → logprob: -13.62500286102295
    3. ' _' → logprob: -14.37500286102295
    4. '_cost' → logprob: -14.37500286102295
    5. '_trip' → logprob: -14.87500286102295
    6. '_fee' → logprob: -15.62500286102295
    7. '_far' → logprob: -16.250003814697266
    8. '_card' → logprob: -17.625003814697266
    9. 'fare' → logprob: -18.125003814697266
    10. 'f' → logprob: -18.250003814697266

Token 119: 'are' (ID: 644)
  Prédit: 'are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'are' → logprob: -0.3213907778263092
    2. '_f' → logprob: -1.3213907480239868
    3. 'fare' → logprob: -5.446390628814697
    4. '_are' → logprob: -5.821390628814697
    5. '_' → logprob: -8.071391105651855
    6. '_cost' → logprob: -9.321391105651855
    7. 'ar' → logprob: -9.446391105651855
    8. '_far' → logprob: -9.696391105651855
    9. 'ares' → logprob: -9.821391105651855
    10. 'arer' → logprob: -10.196391105651855

Token 120: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.00038539018714800477
    2. '*' → logprob: -7.875385284423828
    3. ' ' → logprob: -13.125385284423828
    4. '       ' → logprob: -13.875385284423828
    5. '*self' → logprob: -14.125385284423828
    6. ' ' → logprob: -14.375385284423828
    7. '   ' → logprob: -15.250385284423828
    8. '        ' → logprob: -15.750385284423828
    9. '```' → logprob: -16.125385284423828
    10. ' **' → logprob: -16.250385284423828

Token 121: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.08894284814596176
    2. 'self' → logprob: -2.463942766189575
    3. ' ' → logprob: -13.588942527770996
    4. ' ' → logprob: -14.463942527770996
    5. '	self' → logprob: -14.463942527770996
    6. '(self' → logprob: -14.713942527770996
    7. '<|end|>' → logprob: -14.963942527770996
    8. ' (' → logprob: -16.588943481445312
    9. 's' → logprob: -16.588943481445312
    10. '```' → logprob: -17.338943481445312

Token 122: '.trip' (ID: 168825)
  Prédit: '.trip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.trip' → logprob: -2.641841820150148e-05
    2. '.' → logprob: -11.00002670288086
    3. 'trip' → logprob: -12.00002670288086
    4. ' .' → logprob: -12.75002670288086
    5. '.travel' → logprob: -15.37502670288086
    6. '_trip' → logprob: -15.75002670288086
    7. ' trip' → logprob: -16.37502670288086
    8. '.tr' → logprob: -17.00002670288086
    9. '.ticket' → logprob: -18.25002670288086
    10. '.segment' → logprob: -18.37502670288086

Token 123: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -1.2471589798224159e-05
    2. '_' → logprob: -11.625012397766113
    3. ' _' → logprob: -12.875012397766113
    4. '_trip' → logprob: -14.875012397766113
    5. '_counts' → logprob: -16.00001335144043
    6. '_counter' → logprob: -16.12501335144043
    7. '_cnt' → logprob: -17.12501335144043
    8. '._' → logprob: -17.25001335144043
    9. 'count' → logprob: -17.25001335144043
    10. '_segment' → logprob: -17.25001335144043

Token 124: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.47824084758758545
    2. '<|end|>' → logprob: -0.9782408475875854
    3. '<|end|>' → logprob: -6.103240966796875
    4. '   ' → logprob: -7.603240966796875
    5. '

' → logprob: -7.978240966796875
    6. '\n' → logprob: -7.978240966796875
    7. '  
' → logprob: -8.603240966796875
    8. '    
' → logprob: -8.603240966796875
    9. ' 
' → logprob: -9.228240966796875
    10. '```' → logprob: -9.228240966796875

Token 125: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11916644126176834
    2. '<|end|>' → logprob: -2.744166374206543
    3. '   ' → logprob: -3.119166374206543
    4. '    
' → logprob: -6.744166374206543
    5. '<|end|>' → logprob: -7.244166374206543
    6. ' 
' → logprob: -7.619166374206543
    7. '

' → logprob: -8.119166374206543
    8. 'def' → logprob: -8.369166374206543
    9. ' ' → logprob: -8.494166374206543
    10. '\n' → logprob: -8.619166374206543

Token 126: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.5779383778572083
    2. '
' → logprob: -0.9529383778572083
    3. '<|end|>' → logprob: -3.0779383182525635
    4. ' def' → logprob: -5.452938556671143
    5. '   ' → logprob: -6.452938556671143
    6. '<|end|>' → logprob: -7.577938556671143
    7. '```' → logprob: -8.452938079833984
    8. 'newline' → logprob: -8.702938079833984
    9. '

' → logprob: -9.077938079833984
    10. '	def' → logprob: -9.327938079833984

Token 127: ' cost' (ID: 3097)
  Prédit: 'increment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'increment' → logprob: -0.25629013776779175
    2. ' increment' → logprob: -1.8812901973724365
    3. 'reset' → logprob: -3.7562901973724365
    4. 'add' → logprob: -3.8812901973724365
    5. ' reset' → logprob: -5.006289958953857
    6. ' add' → logprob: -5.006289958953857
    7. '__' → logprob: -5.506289958953857
    8. 'update' → logprob: -6.006289958953857
    9. 'def' → logprob: -6.256289958953857
    10. 'compute' → logprob: -6.256289958953857

Token 128: '_difference' (ID: 123771)
  Prédit: '_difference'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_difference' → logprob: -0.3209557831287384
    2. '_' → logprob: -2.445955753326416
    3. '_diff' → logprob: -3.320955753326416
    4. 's' → logprob: -3.320955753326416
    5. '_per' → logprob: -3.445955753326416
    6. '(' → logprob: -3.695955753326416
    7. '()' → logprob: -4.570955753326416
    8. '_compare' → logprob: -4.820955753326416
    9. '_s' → logprob: -5.195955753326416
    10. '_type' → logprob: -5.820955753326416

Token 129: '_if' (ID: 25821)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.018226973712444305
    2. '(' → logprob: -4.0182271003723145
    3. 'self' → logprob: -9.893226623535156
    4. '(
' → logprob: -11.018226623535156
    5. '<|end|>' → logprob: -12.143226623535156
    6. ' (' → logprob: -12.893226623535156
    7. ' self' → logprob: -14.518226623535156
    8. '	self' → logprob: -14.768226623535156
    9. '(

' → logprob: -14.893226623535156
    10. 's' → logprob: -15.518226623535156

Token 130: '_ic' (ID: 79605)
  Prédit: '_used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.8331069350242615
    2. '_ic' → logprob: -1.4581069946289062
    3. '_p' → logprob: -2.5831069946289062
    4. '_use' → logprob: -2.7081069946289062
    5. '_sw' → logprob: -2.7081069946289062
    6. '_' → logprob: -3.4581069946289062
    7. '_using' → logprob: -3.4581069946289062
    8. '_removed' → logprob: -3.8331069946289062
    9. '_trip' → logprob: -5.208106994628906
    10. '_paid' → logprob: -5.708106994628906

Token 131: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.4869955778121948
    2. '_used' → logprob: -1.2369955778121948
    3. '_(' → logprob: -2.7369956970214844
    4. '_b' → logprob: -3.9869956970214844
    5. '_selected' → logprob: -5.736995697021484
    6. '_' → logprob: -6.361995697021484
    7. '_ch' → logprob: -6.861995697021484
    8. '_p' → logprob: -6.861995697021484
    9. '(' → logprob: -6.986995697021484
    10. '_use' → logprob: -7.236995697021484

Token 132: ')' (ID: 8)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0729110985994339
    2. ')' → logprob: -2.822911024093628
    3. 'self' → logprob: -5.572911262512207
    4. '):
' → logprob: -5.947911262512207
    5. '):' → logprob: -6.697911262512207
    6. '   ' → logprob: -7.072911262512207
    7. ')(' → logprob: -7.322911262512207
    8. '       ' → logprob: -7.447911262512207
    9. ' (' → logprob: -7.822911262512207
    10. ' )' → logprob: -8.322911262512207

Token 133: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0028741767164319754
    2. 'self' → logprob: -6.752874374389648
    3. ':' → logprob: -7.127874374389648
    4. '->' → logprob: -8.252874374389648
    5. ' self' → logprob: -8.877874374389648
    6. '(' → logprob: -8.877874374389648
    7. ' ->' → logprob: -9.002874374389648
    8. '   ' → logprob: -9.252874374389648
    9. 'def' → logprob: -10.127874374389648
    10. '       ' → logprob: -10.127874374389648

Token 134: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.061987634748220444
    2. 'int' → logprob: -2.8119876384735107
    3. ' ' → logprob: -11.31198787689209
    4. '(int' → logprob: -12.81198787689209
    5. ' None' → logprob: -13.06198787689209
    6. ' ' → logprob: -13.81198787689209
    7. '	int' → logprob: -14.68698787689209
    8. 'None' → logprob: -15.06198787689209
    9. '  ' → logprob: -15.31198787689209
    10. '   ' → logprob: -15.68698787689209

Token 135: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.27496257424354553
    2. '(self' → logprob: -1.6499625444412231
    3. '(' → logprob: -3.1499626636505127
    4. ':
' → logprob: -6.149962425231934
    5. '       ' → logprob: -6.774962425231934
    6. 'self' → logprob: -7.399962425231934
    7. '   ' → logprob: -7.649962425231934
    8. '(
' → logprob: -8.399962425231934
    9. ' self' → logprob: -8.649962425231934
    10. '):' → logprob: -9.024962425231934

Token 136: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07952987402677536
    2. 'return' → logprob: -2.7045297622680664
    3. ' return' → logprob: -4.704529762268066
    4. '{return' → logprob: -8.579529762268066
    5. '   ' → logprob: -8.829529762268066
    6. 'self' → logprob: -10.079529762268066
    7. '        
' → logprob: -10.079529762268066
    8. '           ' → logprob: -11.204529762268066
    9. '```' → logprob: -11.579529762268066
    10. '        ' → logprob: -11.704529762268066

Token 137: ' """' (ID: 9280)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0003312937042210251
    2. '       ' → logprob: -8.250330924987793
    3. ' return' → logprob: -9.625330924987793
    4. '
' → logprob: -13.125330924987793
    5. 'self' → logprob: -13.750330924987793
    6. '```' → logprob: -14.250330924987793
    7. '	return' → logprob: -17.00033187866211
    8. '   ' → logprob: -17.50033187866211
    9. 'result' → logprob: -17.62533187866211
    10. '        
' → logprob: -17.62533187866211

Token 138: 'Difference' (ID: 72917)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.15447384119033813
    2. ' return' → logprob: -2.1544737815856934
    3. '       ' → logprob: -3.9044737815856934
    4. '"""' → logprob: -5.904473781585693
    5. '
' → logprob: -6.654473781585693
    6. '#' → logprob: -7.029473781585693
    7. '"""
' → logprob: -7.029473781585693
    8. 'Return' → logprob: -7.904473781585693
    9. '   ' → logprob: -8.279474258422852
    10. 'Returns' → logprob: -8.904474258422852

Token 139: ' between' (ID: 2870)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10195163637399673
    2. '=' → logprob: -2.7269515991210938
    3. ' between' → logprob: -3.8519515991210938
    4. '(self' → logprob: -5.976951599121094
    5. 'self' → logprob: -6.601951599121094
    6. '       ' → logprob: -6.851951599121094
    7. ':' → logprob: -6.851951599121094
    8. '   ' → logprob: -6.976951599121094
    9. ' (' → logprob: -7.226951599121094
    10. ' if' → logprob: -7.226951599121094

Token 140: ' paper' (ID: 6651)
  Prédit: 'paper'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'paper' → logprob: -0.6286840438842773
    2. 'self' → logprob: -0.8786840438842773
    3. ' paper' → logprob: -3.5036840438842773
    4. 'using' → logprob: -4.628684043884277
    5. ' self' → logprob: -5.378684043884277
    6. 'the' → logprob: -5.378684043884277
    7. ' using' → logprob: -7.253684043884277
    8. ' the' → logprob: -8.003684043884277
    9. '   ' → logprob: -8.128684043884277
    10. 'ic' → logprob: -8.753684043884277

Token 141: ' cost' (ID: 3097)
  Prédit: 'fare'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fare' → logprob: -0.8763084411621094
    2. ' fare' → logprob: -1.2513084411621094
    3. ' and' → logprob: -2.6263084411621094
    4. ' ticket' → logprob: -2.8763084411621094
    5. 'cost' → logprob: -3.1263084411621094
    6. 'and' → logprob: -3.3763084411621094
    7. 'ticket' → logprob: -3.6263084411621094
    8. '_f' → logprob: -3.7513084411621094
    9. ' cost' → logprob: -3.7513084411621094
    10. '_cost' → logprob: -4.876308441162109

Token 142: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.03832731023430824
    2. 'and' → logprob: -3.288327217102051
    3. '       ' → logprob: -8.78832721710205
    4. ' if' → logprob: -9.41332721710205
    5. ' (' → logprob: -10.53832721710205
    6. '   ' → logprob: -11.53832721710205
    7. 'if' → logprob: -12.03832721710205
    8. 'return' → logprob: -13.53832721710205
    9. ' with' → logprob: -13.91332721710205
    10. ' ' → logprob: -14.03832721710205

Token 143: ' IC' (ID: 30492)
  Prédit: ' ic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ic' → logprob: -0.7859165072441101
    2. 'ic' → logprob: -1.5359165668487549
    3. 'self' → logprob: -1.5359165668487549
    4. ' self' → logprob: -2.410916566848755
    5. ' paper' → logprob: -5.160916328430176
    6. 'IC' → logprob: -5.160916328430176
    7. ' the' → logprob: -5.535916328430176
    8. 'paper' → logprob: -5.910916328430176
    9. 'the' → logprob: -6.410916328430176
    10. ' IC' → logprob: -7.035916328430176

Token 144: ' cost' (ID: 3097)
  Prédit: ' cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.09172158688306808
    2. ' ticket' → logprob: -3.341721534729004
    3. 'cost' → logprob: -3.591721534729004
    4. ' fare' → logprob: -3.966721534729004
    5. '_cost' → logprob: -6.341721534729004
    6. ' -' → logprob: -7.091721534729004
    7. ' usage' → logprob: -7.466721534729004
    8. 'ticket' → logprob: -8.091721534729004
    9. ' if' → logprob: -8.341721534729004
    10. ' return' → logprob: -8.341721534729004

Token 145: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11313778907060623
    2. ' (' → logprob: -3.113137722015381
    3. ' if' → logprob: -4.238137722015381
    4. ' in' → logprob: -4.363137722015381
    5. '   ' → logprob: -4.488137722015381
    6. ':' → logprob: -4.488137722015381
    7. '"""' → logprob: -5.738137722015381
    8. ' for' → logprob: -6.488137722015381
    9. ' return' → logprob: -6.613137722015381
    10. '"""
' → logprob: -6.738137722015381

Token 146: ' this' (ID: 495)
  Prédit: ' this'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' this' → logprob: -0.26978960633277893
    2. 'this' → logprob: -2.644789695739746
    3. ' using' → logprob: -2.769789695739746
    4. ' one' → logprob: -3.019789695739746
    5. ' the' → logprob: -3.894789695739746
    6. ' a' → logprob: -4.769789695739746
    7. 'using' → logprob: -5.019789695739746
    8. ' buying' → logprob: -5.144789695739746
    9. ' purchasing' → logprob: -5.269789695739746
    10. 'one' → logprob: -6.144789695739746

Token 147: ' rail' (ID: 21665)
  Prédit: ' trip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' trip' → logprob: -0.7468090653419495
    2. ' segment' → logprob: -0.8718090653419495
    3. ' ticket' → logprob: -2.4968090057373047
    4. ' rail' → logprob: -4.746809005737305
    5. 'segment' → logprob: -5.121809005737305
    6. 'trip' → logprob: -5.371809005737305
    7. ' ride' → logprob: -5.496809005737305
    8. ' journey' → logprob: -6.871809005737305
    9. ' travel' → logprob: -8.121809005737305
    10. 'rail' → logprob: -8.996809005737305

Token 148: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.49189797043800354
    2. ' segment' → logprob: -0.9918979406356812
    3. '_segment' → logprob: -4.241898059844971
    4. '   ' → logprob: -6.366898059844971
    5. '       ' → logprob: -6.741898059844971
    6. 'Segment' → logprob: -7.991898059844971
    7. ' Segment' → logprob: -11.241897583007812
    8. ' ticket' → logprob: -11.616897583007812
    9. 'ticket' → logprob: -12.991897583007812
    10. '.segment' → logprob: -13.241897583007812

Token 149: '."""
' (ID: 33044)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14087195694446564
    2. '"""' → logprob: -2.390872001647949
    3. '   ' → logprob: -3.890872001647949
    4. ':' → logprob: -4.765872001647949
    5. '"""
' → logprob: -5.515872001647949
    6. '
' → logprob: -6.015872001647949
    7. '\n' → logprob: -6.765872001647949
    8. ' (' → logprob: -7.015872001647949
    9. '```' → logprob: -7.765872001647949
    10. ' """' → logprob: -8.01587200164795

Token 150: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008598385378718376
    2. ' return' → logprob: -5.508598327636719
    3. 'return' → logprob: -5.633598327636719
    4. '        
' → logprob: -8.008598327636719
    5. '
' → logprob: -8.508598327636719
    6. ' 
' → logprob: -8.508598327636719
    7. '   ' → logprob: -9.633598327636719
    8. '<|end|>' → logprob: -10.133598327636719
    9. '    
' → logprob: -10.383598327636719
    10. '  
' → logprob: -11.133598327636719

Token 151: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.011773223988711834
    2. '       ' → logprob: -4.886773109436035
    3. 'paper' → logprob: -5.511773109436035
    4. ' return' → logprob: -9.136773109436035
    5. 'cost' → logprob: -12.136773109436035
    6. '   ' → logprob: -13.386773109436035
    7. 'diff' → logprob: -13.386773109436035
    8. '```' → logprob: -13.636773109436035
    9. 'if' → logprob: -14.386773109436035
    10. 'difference' → logprob: -14.761773109436035

Token 152: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.28120848536491394
    2. 'self' → logprob: -1.4062085151672363
    3. '(self' → logprob: -10.406208038330078
    4. '       ' → logprob: -10.906208038330078
    5. ' (' → logprob: -11.781208038330078
    6. '	self' → logprob: -14.281208038330078
    7. ' ' → logprob: -14.656208038330078
    8. '        ' → logprob: -15.281208038330078
    9. '(' → logprob: -15.531208038330078
    10. '   ' → logprob: -16.031208038330078

Token 153: '.compute' (ID: 60156)
  Prédit: '.compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.compute' → logprob: -0.02693246677517891
    2. '.' → logprob: -3.77693247795105
    3. '.paper' → logprob: -5.651932239532471
    4. ' .' → logprob: -8.901932716369629
    5. '.cost' → logprob: -11.151932716369629
    6. 'compute' → logprob: -12.776932716369629
    7. '.calculate' → logprob: -12.901932716369629
    8. '​.' → logprob: -13.026932716369629
    9. '._' → logprob: -13.401932716369629
    10. '.p' → logprob: -13.651932716369629

Token 154: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -6.511406809295295e-06
    2. '_' → logprob: -12.125006675720215
    3. 'paper' → logprob: -14.000006675720215
    4. ' _' → logprob: -16.6250057220459
    5. '_cost' → logprob: -17.5000057220459
    6. '\' → logprob: -17.6250057220459
    7. '_ic' → logprob: -17.7500057220459
    8. 'p' → logprob: -17.8750057220459
    9. '_pc' → logprob: -17.8750057220459
    10. ' paper' → logprob: -18.6250057220459

Token 155: 'aper' (ID: 3831)
  Prédit: 'aper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aper' → logprob: -1.1279553291387856e-05
    2. 'paper' → logprob: -11.875011444091797
    3. 'a' → logprob: -13.125011444091797
    4. 'per' → logprob: -15.125011444091797
    5. 'ap' → logprob: -15.125011444091797
    6. 'ape' → logprob: -15.125011444091797
    7. 'er' → logprob: -15.375011444091797
    8. 'ayer' → logprob: -15.500011444091797
    9. 'apper' → logprob: -15.500011444091797
    10. '_' → logprob: -15.750011444091797

Token 156: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -9.088346359931165e-07
    2. '_' → logprob: -14.625000953674316
    3. '_code' → logprob: -15.875000953674316
    4. '_p' → logprob: -16.25
    5. ' _' → logprob: -17.25
    6. 'cost' → logprob: -17.625
    7. '_COST' → logprob: -17.875
    8. '_f' → logprob: -18.25
    9. '_c' → logprob: -18.375
    10. '_co' → logprob: -18.75

Token 157: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -4.35837464465294e-05
    2. '()-' → logprob: -10.125043869018555
    3. ' ()' → logprob: -13.125043869018555
    4. '(' → logprob: -13.750043869018555
    5. '()*' → logprob: -15.875043869018555
    6. '（）' → logprob: -16.125043869018555
    7. '-' → logprob: -17.000043869018555
    8. '()>' → logprob: -17.250043869018555
    9. '()+' → logprob: -17.875043869018555
    10. '()
' → logprob: -18.000043869018555

Token 158: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.023262249305844307
    2. '-' → logprob: -3.7732622623443604
    3. ' ' → logprob: -11.398262023925781
    4. ' ' → logprob: -12.398262023925781
    5. '-self' → logprob: -13.898262023925781
    6. ' -
' → logprob: -16.02326202392578
    7. '   ' → logprob: -16.27326202392578
    8. '()' → logprob: -16.27326202392578
    9. ' –' → logprob: -17.14826202392578
    10. '()-' → logprob: -17.39826202392578

Token 159: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.25193214416503906
    2. ' self' → logprob: -1.501932144165039
    3. '(self' → logprob: -13.501932144165039
    4. '       ' → logprob: -13.876932144165039
    5. '	self' → logprob: -14.626932144165039
    6. ' ' → logprob: -15.626932144165039
    7. ' ' → logprob: -17.62693214416504
    8. '   ' → logprob: -18.00193214416504
    9. '[self' → logprob: -18.00193214416504
    10. '```' → logprob: -18.12693214416504

Token 160: '.compute' (ID: 60156)
  Prédit: '.compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.compute' → logprob: -0.003142300993204117
    2. '.' → logprob: -6.253142356872559
    3. 'compute' → logprob: -7.253142356872559
    4. '._' → logprob: -7.753142356872559
    5. '_.' → logprob: -9.753142356872559
    6. ' .' → logprob: -11.753142356872559
    7. '_compute' → logprob: -12.628142356872559
    8. ' compute' → logprob: -13.753142356872559
    9. '​.' → logprob: -13.878142356872559
    10. '.calculate' → logprob: -14.253142356872559

Token 161: '_ic' (ID: 79605)
  Prédit: '_ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ic' → logprob: -6.718606891809031e-05
    2. 'ic' → logprob: -9.625066757202148
    3. '_' → logprob: -14.250066757202148
    4. 'IC' → logprob: -15.875066757202148
    5. '_IC' → logprob: -16.87506675720215
    6. ' _' → logprob: -17.25006675720215
    7. '```' → logprob: -17.25006675720215
    8. '_uc' → logprob: -17.37506675720215
    9. '__' → logprob: -17.50006675720215
    10. '_ci' → logprob: -17.50006675720215

Token 162: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.00019412329129409045
    2. '_card' → logprob: -9.000194549560547
    3. 'cost' → logprob: -9.750194549560547
    4. '_c' → logprob: -12.500194549560547
    5. '_f' → logprob: -12.875194549560547
    6. 'ic' → logprob: -13.375194549560547
    7. 'ost' → logprob: -13.625194549560547
    8. '_COST' → logprob: -14.500194549560547
    9. '_' → logprob: -14.750194549560547
    10. 'Cost' → logprob: -14.750194549560547

Token 163: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.09369398653507233
    2. '<|end|>' → logprob: -2.593693971633911
    3. '
' → logprob: -5.34369421005249
    4. '(' → logprob: -5.46869421005249
    5. '()
' → logprob: -5.46869421005249
    6. '(
' → logprob: -7.71869421005249
    7. '\n' → logprob: -7.84369421005249
    8. '()\' → logprob: -8.968693733215332
    9. '<|end|>' → logprob: -8.968693733215332
    10. 'newline' → logprob: -9.468693733215332

Token 164: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1811099648475647
    2. '<|end|>' → logprob: -1.93110990524292
    3. '   ' → logprob: -4.93110990524292
    4. ' 
' → logprob: -5.68110990524292
    5. '\n' → logprob: -6.43110990524292
    6. ' ' → logprob: -6.43110990524292
    7. '<|end|>' → logprob: -6.68110990524292
    8. '    
' → logprob: -6.68110990524292
    9. '

' → logprob: -6.80610990524292
    10. 'def' → logprob: -6.93110990524292

Token 165: ' def' (ID: 1056)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2615620791912079
    2. '<|end|>' → logprob: -1.7615621089935303
    3. '   ' → logprob: -3.3865621089935303
    4. 'def' (adapté à ' def') → logprob: -4.761561870574951
    5. '<|end|>' → logprob: -5.261561870574951
    6. 'newline' → logprob: -5.761561870574951
    7. 'class' → logprob: -6.261561870574951
    8. ' ' → logprob: -6.636561870574951
    9. '```' → logprob: -6.886561870574951
    10. '

' → logprob: -6.886561870574951

Token 166: ' should' (ID: 1757)
  Prédit: 'increment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'increment' → logprob: -0.05728183686733246
    2. 'reset' → logprob: -4.057281970977783
    3. ' increment' → logprob: -4.057281970977783
    4. 'add' → logprob: -4.307281970977783
    5. 'update' → logprob: -6.432281970977783
    6. '__' → logprob: -6.432281970977783
    7. 'increase' → logprob: -6.807281970977783
    8. ' reset' → logprob: -7.057281970977783
    9. 'can' → logprob: -7.682281970977783
    10. ' add' → logprob: -7.932281970977783

Token 167: '_buy' (ID: 121084)
  Prédit: '_use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_use' → logprob: -0.1731039434671402
    2. '_buy' → logprob: -1.923103928565979
    3. '_choose' → logprob: -5.2981038093566895
    4. '_purchase' → logprob: -6.5481038093566895
    5. '_upgrade' → logprob: -6.6731038093566895
    6. '_continue' → logprob: -6.7981038093566895
    7. '_apply' → logprob: -7.1731038093566895
    8. '_save' → logprob: -7.4231038093566895
    9. '_be' → logprob: -7.5481038093566895
    10. '_' → logprob: -7.9231038093566895

Token 168: '_ic' (ID: 79605)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0252740029245615
    2. '_ic' → logprob: -3.7752740383148193
    3. '(self' → logprob: -6.52527379989624
    4. '(' → logprob: -8.150274276733398
    5. 'self' → logprob: -8.900274276733398
    6. '_IC' → logprob: -10.150274276733398
    7. 'IC' → logprob: -11.025274276733398
    8. '_(' → logprob: -11.025274276733398
    9. 'ic' → logprob: -11.150274276733398
    10. '_self' → logprob: -11.525274276733398

Token 169: '_card' (ID: 37760)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001253207796253264
    2. 'self' → logprob: -7.501253128051758
    3. '_' → logprob: -7.626253128051758
    4. '(self' → logprob: -8.751253128051758
    5. ' (' → logprob: -10.626253128051758
    6. '_(' → logprob: -10.626253128051758
    7. '()' → logprob: -13.251253128051758
    8. '(
' → logprob: -14.126253128051758
    9. '__(' → logprob: -14.376253128051758
    10. '   ' → logprob: -14.626253128051758

Token 170: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00010688089241739362
    2. '(' → logprob: -9.250106811523438
    3. 'self' → logprob: -11.500106811523438
    4. ' (' → logprob: -14.625106811523438
    5. ' self' → logprob: -16.500106811523438
    6. '(
' → logprob: -17.000106811523438
    7. '   ' → logprob: -17.750106811523438
    8. '(Self' → logprob: -18.125106811523438
    9. '	self' → logprob: -19.000106811523438
    10. '=self' → logprob: -19.250106811523438

Token 171: ')' (ID: 8)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.023815801367163658
    2. 'self' → logprob: -3.773815870285034
    3. ')' → logprob: -7.898815631866455
    4. ' self' → logprob: -9.398816108703613
    5. '(' → logprob: -10.023816108703613
    6. '):
' → logprob: -10.898816108703613
    7. ')(' → logprob: -11.273816108703613
    8. '   ' → logprob: -11.523816108703613
    9. '       ' → logprob: -11.523816108703613
    10. ' (' → logprob: -11.898816108703613

Token 172: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.003801738377660513
    2. '(' → logprob: -5.7538018226623535
    3. 'self' → logprob: -7.5038018226623535
    4. '->' → logprob: -10.378801345825195
    5. ' (' → logprob: -11.628801345825195
    6. ' self' → logprob: -11.878801345825195
    7. '       ' → logprob: -11.878801345825195
    8. '(
' → logprob: -12.128801345825195
    9. ' ->' → logprob: -12.503801345825195
    10. ':' → logprob: -12.628801345825195

Token 173: ' bool' (ID: 3792)
  Prédit: ' bool'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bool' → logprob: -0.4094028174877167
    2. 'bool' → logprob: -1.159402847290039
    3. 'self' → logprob: -4.034402847290039
    4. ' self' → logprob: -5.409402847290039
    5. '   ' → logprob: -10.284402847290039
    6. ' ' → logprob: -11.284402847290039
    7. 'int' → logprob: -11.409402847290039
    8. '_bool' → logprob: -11.534402847290039
    9. ' True' → logprob: -11.784402847290039
    10. ')' → logprob: -12.034402847290039

Token 174: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4255797863006592
    2. '(self' → logprob: -1.1755797863006592
    3. '(' → logprob: -3.800579786300659
    4. ':
' → logprob: -5.300580024719238
    5. '(
' → logprob: -5.800580024719238
    6. '():' → logprob: -5.925580024719238
    7. '       ' → logprob: -6.175580024719238
    8. 'self' → logprob: -6.800580024719238
    9. '   ' → logprob: -7.550580024719238
    10. '):' → logprob: -7.925580024719238

Token 175: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012299923691898584
    2. ' return' → logprob: -7.251229763031006
    3. '<|end|>' → logprob: -8.126230239868164
    4. '   ' → logprob: -10.001230239868164
    5. ' 
' → logprob: -10.126230239868164
    6. 'return' → logprob: -10.251230239868164
    7. '        
' → logprob: -10.501230239868164
    8. '
' → logprob: -11.751230239868164
    9. '<|end|>' → logprob: -11.751230239868164
    10. '	' → logprob: -11.876230239868164

Token 176: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.1718984991312027
    2. ' return' → logprob: -2.421898603439331
    3. '       ' → logprob: -2.671898603439331
    4. 'self' → logprob: -11.04689884185791
    5. 'if' → logprob: -11.29689884185791
    6. ' if' → logprob: -11.67189884185791
    7. '#' → logprob: -11.79689884185791
    8. 'threshold' → logprob: -12.29689884185791
    9. 'diff' → logprob: -12.79689884185791
    10. ' self' → logprob: -13.67189884185791

Token 177: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0788913294672966
    2. ' self' → logprob: -2.5788912773132324
    3. '(self' → logprob: -13.82889175415039
    4. '	self' → logprob: -15.07889175415039
    5. '   ' → logprob: -15.95389175415039
    6. 'abs' → logprob: -16.95389175415039
    7. '[self' → logprob: -17.32889175415039
    8. '       ' → logprob: -17.95389175415039
    9. ' abs' → logprob: -18.32889175415039
    10. ' ' → logprob: -19.07889175415039

Token 178: '.cost' (ID: 80655)
  Prédit: '.cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.cost' → logprob: -0.00029363270732574165
    2. '.compute' → logprob: -8.500293731689453
    3. 'cost' → logprob: -9.750293731689453
    4. '.trip' → logprob: -10.625293731689453
    5. '.' → logprob: -12.250293731689453
    6. ' .' → logprob: -14.250293731689453
    7. ' cost' → logprob: -14.375293731689453
    8. '.ic' → logprob: -14.500293731689453
    9. '.calculate' → logprob: -15.500293731689453
    10. '.paper' → logprob: -15.750293731689453

Token 179: '_difference' (ID: 123771)
  Prédit: '_difference'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_difference' → logprob: -8.061054359131958e-06
    2. 'difference' → logprob: -11.750007629394531
    3. '_d' → logprob: -15.875007629394531
    4. 'Difference' → logprob: -17.62500762939453
    5. '_distance' → logprob: -17.87500762939453
    6. 'ifference' → logprob: -18.25000762939453
    7. 'd' → logprob: -18.37500762939453
    8. '_' → logprob: -18.87500762939453
    9. '_diff' → logprob: -19.87500762939453
    10. ' difference' → logprob: -20.00000762939453

Token 180: '_if' (ID: 25821)
  Prédit: '_if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_if' → logprob: -9.491498531133402e-06
    2. '>' → logprob: -12.500009536743164
    3. 'if' → logprob: -12.625009536743164
    4. 'If' → logprob: -13.250009536743164
    5. '_IF' → logprob: -15.875009536743164
    6. '()' → logprob: -16.500009536743164
    7. '>If' → logprob: -16.875009536743164
    8. ' if' → logprob: -17.000009536743164
    9. '>=' → logprob: -17.500009536743164
    10. '()>' → logprob: -17.625009536743164

Token 181: '_ic' (ID: 79605)
  Prédit: '_ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ic' → logprob: -8.888114098226652e-05
    2. 'ic' → logprob: -9.375088691711426
    3. '(_' → logprob: -13.500088691711426
    4. '_if' → logprob: -14.625088691711426
    5. 'IC' → logprob: -15.000088691711426
    6. '('_' → logprob: -15.625088691711426
    7. '_il' → logprob: -15.750088691711426
    8. 'c' → logprob: -15.875088691711426
    9. '```' → logprob: -16.000089645385742
    10. '_ir' → logprob: -16.250089645385742

Token 182: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004626649431884289
    2. '()>' → logprob: -5.379626750946045
    3. ' ()' → logprob: -12.254626274108887
    4. '()!=' → logprob: -14.629626274108887
    5. '(' → logprob: -14.754626274108887
    6. '()<' → logprob: -14.879626274108887
    7. '()

' → logprob: -16.254627227783203
    8. '()
' → logprob: -16.379627227783203
    9. '()==' → logprob: -16.379627227783203
    10. '()*' → logprob: -16.379627227783203

Token 183: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.1739247441291809
    2. '>' → logprob: -1.9239246845245361
    3. ' >=' → logprob: -4.423924922943115
    4. '>=' → logprob: -7.048924922943115
    5. '()>' → logprob: -7.423924922943115
    6. ' ' → logprob: -9.298924446105957
    7. '()' → logprob: -9.798924446105957
    8. ' ' → logprob: -12.423924446105957
    9. ' <=' → logprob: -13.048924446105957
    10. ' <' → logprob: -14.923924446105957

Token 184: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011711753904819489
    2. ' ' → logprob: -6.751171112060547
    3. 'self' → logprob: -14.001171112060547
    4. '=' → logprob: -16.251171112060547
    5. '   ' → logprob: -17.126171112060547
    6. ' ' → logprob: -18.751171112060547
    7. '```' → logprob: -18.751171112060547
    8. '1' → logprob: -19.001171112060547
    9. ' self' → logprob: -19.251171112060547
    10. '  ' → logprob: -19.626171112060547

Token 185: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.875000953674316
    3. 'self' → logprob: -15.250000953674316
    4. '```' → logprob: -20.000001907348633
    5. '   ' → logprob: -20.375001907348633
    6. '=' → logprob: -21.375001907348633
    7. '1' → logprob: -21.375001907348633
    8. '
' → logprob: -22.000001907348633
    9. ' ' → logprob: -22.500001907348633
    10. '-' → logprob: -22.750001907348633

Token 186: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 187: 'class' (ID: 1444)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4591502547264099
    2. 'def' → logprob: -1.0841503143310547
    3. 'class' → logprob: -3.9591503143310547
    4. '\n' → logprob: -6.084150314331055
    5. '#' → logprob: -6.459150314331055
    6. 'n' → logprob: -6.709150314331055
    7. '\' → logprob: -6.834150314331055
    8. 'c' → logprob: -7.209150314331055
    9. '
' → logprob: -7.209150314331055
    10. '[' → logprob: -7.334150314331055

Token 188: ' Trip' (ID: 19291)
  Prédit: ' Rail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Rail' → logprob: -0.09101329743862152
    2. ' Train' → logprob: -3.591013193130493
    3. ' Railway' → logprob: -3.966013193130493
    4. 'Rail' → logprob: -4.216013431549072
    5. ' Trip' → logprob: -4.591013431549072
    6. ' Ticket' → logprob: -4.966013431549072
    7. ' Fare' → logprob: -5.841013431549072
    8. ' Travel' → logprob: -6.091013431549072
    9. ' Ride' → logprob: -7.341013431549072
    10. ' Transit' → logprob: -7.591013431549072

Token 189: 'Plan' (ID: 15274)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007413726998493075
    2. ':
' → logprob: -7.250741481781006
    3. '():' → logprob: -11.250741004943848
    4. '(' → logprob: -11.625741004943848
    5. '):' → logprob: -13.250741004943848
    6. 'Segment' → logprob: -13.625741004943848
    7. '(object' → logprob: -13.875741004943848
    8. '<|end|>' → logprob: -14.250741004943848
    9. ':

' → logprob: -14.625741004943848
    10. ':**' → logprob: -14.750741004943848

Token 190: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -6.384836888173595e-05
    2. ':
' → logprob: -9.8750638961792
    3. ' :' → logprob: -12.5000638961792
    4. '(' → logprob: -12.6250638961792
    5. '<|end|>' → logprob: -12.8750638961792
    6. ':

' → logprob: -14.3750638961792
    7. '):' → logprob: -14.5000638961792
    8. ':def' → logprob: -14.7500638961792
    9. '(object' → logprob: -15.1250638961792
    10. '():' → logprob: -15.2500638961792

Token 191: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006532642524689436
    2. '```' → logprob: -6.381532669067383
    3. '    
' → logprob: -6.631532669067383
    4. ' 
' → logprob: -7.256532669067383
    5. ' def' → logprob: -7.256532669067383
    6. 'class' → logprob: -7.506532669067383
    7. '    ' → logprob: -8.006532669067383
    8. 'def' → logprob: -8.256532669067383
    9. '(
' → logprob: -8.506532669067383
    10. '(' → logprob: -8.881532669067383

Token 192: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.20708994567394257
    2. ' def' → logprob: -1.707089900970459
    3. 'class' → logprob: -5.457089900970459
    4. '   ' → logprob: -6.582089900970459
    5. '```' → logprob: -12.082090377807617
    6. ' class' → logprob: -12.707090377807617
    7. '	def' → logprob: -14.832090377807617
    8. ' ' → logprob: -16.082090377807617
    9. 'import' → logprob: -16.082090377807617
    10. '    ' → logprob: -16.457090377807617

Token 193: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.5358402729034424
    2. '__' → logprob: -1.6608402729034424
    3. ' def' → logprob: -2.0358402729034424
    4. 'def' → logprob: -2.4108402729034424
    5. '```' → logprob: -6.035840034484863
    6. ' ' → logprob: -6.785840034484863
    7. 'init' → logprob: -7.660840034484863
    8. '_init' → logprob: -9.285840034484863
    9. '   ' → logprob: -9.660840034484863
    10. 'classmethod' → logprob: -9.660840034484863

Token 194: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.9361264946837764e-07
    2. 'def' → logprob: -16.0
    3. '_init' → logprob: -17.75
    4. ' init' → logprob: -17.875
    5. 'int' → logprob: -18.75
    6. '   ' → logprob: -19.0
    7. '```' → logprob: -19.125
    8. 'ini' → logprob: -19.25
    9. '__' → logprob: -20.5
    10. '(init' → logprob: -20.5

Token 195: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.00046951865078881383
    2. '(self' → logprob: -8.125469207763672
    3. '__(
' → logprob: -9.125469207763672
    4. '__' → logprob: -9.750469207763672
    5. 'self' → logprob: -13.000469207763672
    6. '_(' → logprob: -13.125469207763672
    7. '(' → logprob: -13.750469207763672
    8. '__((' → logprob: -15.625469207763672
    9. ' (' → logprob: -15.750469207763672
    10. '   ' → logprob: -16.125469207763672

Token 196: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.002807013690471649
    2. ' self' → logprob: -5.877807140350342
    3. '   ' → logprob: -13.877806663513184
    4. '
' → logprob: -14.127806663513184
    5. '       ' → logprob: -16.0028076171875
    6. ')' → logprob: -16.2528076171875
    7. ' ' → logprob: -16.2528076171875
    8. '	self' → logprob: -16.3778076171875
    9. '0' → logprob: -17.2528076171875
    10. ',' → logprob: -17.2528076171875

Token 197: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.028330953791737556
    2. 'self' → logprob: -3.6533310413360596
    3. '(self' → logprob: -7.0283308029174805
    4. '):
' → logprob: -8.02833080291748
    5. ' self' → logprob: -8.40333080291748
    6. '       ' → logprob: -8.65333080291748
    7. ')' → logprob: -8.77833080291748
    8. '   ' → logprob: -9.40333080291748
    9. ' ,' → logprob: -9.52833080291748
    10. ' (' → logprob: -10.27833080291748

Token 198: ' rail' (ID: 21665)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.8388856053352356
    2. 'rail' → logprob: -1.0888855457305908
    3. 'self' → logprob: -1.7138855457305908
    4. ' segments' → logprob: -3.588885545730591
    5. ' rail' → logprob: -4.71388578414917
    6. ' self' → logprob: -5.21388578414917
    7. ')' → logprob: -5.96388578414917
    8. '   ' → logprob: -6.46388578414917
    9. 'segment' → logprob: -7.08888578414917
    10. 'trip' → logprob: -7.21388578414917

Token 199: '_segments' (ID: 142925)
  Prédit: '_segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segments' → logprob: -0.00028851060778833926
    2. 'segments' → logprob: -8.625288963317871
    3. 'Segments' → logprob: -9.250288963317871
    4. '_segment' → logprob: -11.750288963317871
    5. 's' → logprob: -13.500288963317871
    6. '_lines' → logprob: -14.250288963317871
    7. '_sequences' → logprob: -14.375288963317871
    8. '   ' → logprob: -14.875288963317871
    9. '_lengths' → logprob: -15.000288963317871
    10. '_' → logprob: -15.125288963317871

Token 200: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10550014674663544
    2. ':' → logprob: -2.4805002212524414
    3. '):
' → logprob: -4.355500221252441
    4. ',' → logprob: -5.855500221252441
    5. ')' → logprob: -7.980500221252441
    6. '   ' → logprob: -9.355500221252441
    7. ' ):' → logprob: -9.730500221252441
    8. ':list' → logprob: -9.730500221252441
    9. '=None' → logprob: -9.980500221252441
    10. '=[]' → logprob: -10.230500221252441

Token 201: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.7527282238006592
    2. 'list' → logprob: -0.7527282238006592
    3. 'List' → logprob: -2.877728223800659
    4. ' List' → logprob: -6.502728462219238
    5. '[list' → logprob: -10.752728462219238
    6. '   ' → logprob: -10.877728462219238
    7. '[List' → logprob: -11.377728462219238
    8. '_list' → logprob: -11.502728462219238
    9. ')' → logprob: -12.252728462219238
    10. ' ' → logprob: -13.002728462219238

Token 202: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004340271931141615
    2. '):
' → logprob: -6.129340171813965
    3. '[R' → logprob: -6.379340171813965
    4. '):' → logprob: -8.504340171813965
    5. '[int' → logprob: -8.754340171813965
    6. ')' → logprob: -10.254340171813965
    7. 'Rail' → logprob: -10.629340171813965
    8. '):

' → logprob: -12.129340171813965
    9. ' Rail' → logprob: -12.379340171813965
    10. ' ' → logprob: -12.379340171813965

Token 203: ' travel' (ID: 6410)
  Prédit: 'trip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trip' → logprob: -1.2193723917007446
    2. 'total' → logprob: -1.8443723917007446
    3. 'num' → logprob: -2.344372272491455
    4. ' trip' → logprob: -2.594372272491455
    5. ' trips' → logprob: -2.594372272491455
    6. ' total' → logprob: -2.844372272491455
    7. '   ' → logprob: -3.594372272491455
    8. ' ic' → logprob: -3.844372272491455
    9. 'ic' → logprob: -3.844372272491455
    10. ' num' → logprob: -4.094372272491455

Token 204: '_route' (ID: 67828)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.435994952917099
    2. '_dist' → logprob: -2.810994863510132
    3. '_counts' → logprob: -2.935994863510132
    4. 's' → logprob: -3.060994863510132
    5. '_segments' → logprob: -3.060994863510132
    6. '_distance' → logprob: -3.560994863510132
    7. '_days' → logprob: -3.685994863510132
    8. '_dates' → logprob: -4.435995101928711
    9. '_pl' → logprob: -4.560995101928711
    10. '_times' → logprob: -4.560995101928711

Token 205: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001769616355886683
    2. '):' → logprob: -9.625177383422852
    3. ':list' → logprob: -10.000177383422852
    4. ' :' → logprob: -10.500177383422852
    5. '):
' → logprob: -10.875177383422852
    6. ')' → logprob: -12.500177383422852
    7. 's' → logprob: -12.750177383422852
    8. '_ids' → logprob: -12.875177383422852
    9. '_lengths' → logprob: -13.375177383422852
    10. '=' → logprob: -13.500177383422852

Token 206: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.2815419137477875
    2. ' list' → logprob: -1.4065419435501099
    3. '[list' → logprob: -9.03154182434082
    4. '   ' → logprob: -9.15654182434082
    5. 'int' → logprob: -10.53154182434082
    6. 'List' → logprob: -10.53154182434082
    7. ')' → logprob: -10.78154182434082
    8. ' ' → logprob: -11.03154182434082
    9. ':list' → logprob: -11.28154182434082
    10. 'tuple' → logprob: -11.28154182434082

Token 207: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2021915763616562
    2. '):
' → logprob: -1.7021915912628174
    3. '   ' → logprob: -7.952191352844238
    4. ',' → logprob: -8.827191352844238
    5. '):
' → logprob: -8.827191352844238
    6. ')' → logprob: -9.452191352844238
    7. ':' → logprob: -10.327191352844238
    8. '):

' → logprob: -11.952191352844238
    9. '       ' → logprob: -12.077191352844238
    10. ' ):' → logprob: -13.577191352844238

Token 208: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.3544423381972592e-05
    2. '   ' → logprob: -12.25001335144043
    3. 'self' → logprob: -12.37501335144043
    4. ' self' → logprob: -13.00001335144043
    5. '<|end|>' → logprob: -14.50001335144043
    6. '```' → logprob: -14.87501335144043
    7. '           ' → logprob: -15.12501335144043
    8. '      ' → logprob: -15.12501335144043
    9. '        
' → logprob: -15.62501335144043
    10. '[' → logprob: -15.87501335144043

Token 209: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.12127038836479187
    2. '       ' → logprob: -2.3712704181671143
    3. ' self' → logprob: -3.8712704181671143
    4. '   ' → logprob: -11.496270179748535
    5. '	self' → logprob: -13.996270179748535
    6. ' ' → logprob: -15.121270179748535
    7. '      ' → logprob: -16.74627113342285
    8. '(self' → logprob: -16.87127113342285
    9. 'super' → logprob: -17.12127113342285
    10. '     ' → logprob: -17.24627113342285

Token 210: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -4.23917081207037e-05
    2. ' .' → logprob: -10.500041961669922
    3. 'rail' → logprob: -11.500041961669922
    4. '.ra' → logprob: -13.250041961669922
    5. '.r' → logprob: -13.750041961669922
    6. '   ' → logprob: -14.250041961669922
    7. '._' → logprob: -15.250041961669922
    8. ' rail' → logprob: -15.625041961669922
    9. 'Rail' → logprob: -16.000041961669922
    10. '       ' → logprob: -16.000041961669922

Token 211: 'rail' (ID: 66046)
  Prédit: 'rail'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rail' → logprob: -4.320199877838604e-07
    2. 'rails' → logprob: -15.375
    3. ' rail' → logprob: -16.625
    4. 'travel' → logprob: -16.875
    5. 'ra' → logprob: -18.625
    6. 'class' → logprob: -18.875
    7. 'def' → logprob: -19.0
    8. 'trip' → logprob: -19.5
    9. 'Rail' → logprob: -19.75
    10. '
' → logprob: -20.25

Token 212: '_segments' (ID: 142925)
  Prédit: '_segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segments' → logprob: -2.45848218582978e-06
    2. '_' → logprob: -13.25000286102295
    3. ' _' → logprob: -15.12500286102295
    4. '_segment' → logprob: -16.125001907348633
    5. 'segments' → logprob: -16.250001907348633
    6. 'Segments' → logprob: -16.750001907348633
    7. '   ' → logprob: -18.000001907348633
    8. '\' → logprob: -18.500001907348633
    9. '```' → logprob: -18.625001907348633
    10. '_s' → logprob: -19.000001907348633

Token 213: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38717761635780334
    2. '=' → logprob: -1.137177586555481
    3. ':' → logprob: -8.137177467346191
    4. '=[]' → logprob: -12.137177467346191
    5. ' ' → logprob: -12.637177467346191
    6. '   ' → logprob: -12.637177467346191
    7. ' :' → logprob: -14.762177467346191
    8. ')' → logprob: -14.762177467346191
    9. ' =[' → logprob: -15.387177467346191
    10. '[' → logprob: -15.637177467346191

Token 214: ' rail' (ID: 21665)
  Prédit: 'rail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rail' → logprob: -0.016208095476031303
    2. ' rail' → logprob: -4.141208171844482
    3. '[]' → logprob: -9.141207695007324
    4. '[' → logprob: -10.266207695007324
    5. 'rails' → logprob: -10.891207695007324
    6. 'ra' → logprob: -12.266207695007324
    7. ' railway' → logprob: -12.641207695007324
    8. ' []' → logprob: -14.391207695007324
    9. '{}' → logprob: -14.391207695007324
    10. '[]}' → logprob: -14.391207695007324

Token 215: '_segments' (ID: 142925)
  Prédit: '_segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segments' → logprob: -1.3856492842023727e-06
    2. 'segments' → logprob: -13.750000953674316
    3. '_' → logprob: -15.625000953674316
    4. 'Segments' → logprob: -16.750001907348633
    5. 's' → logprob: -17.875001907348633
    6. ' _' → logprob: -18.000001907348633
    7. '_segment' → logprob: -18.125001907348633
    8. '\' → logprob: -19.375001907348633
    9. '   ' → logprob: -19.750001907348633
    10. '_s' → logprob: -20.125001907348633

Token 216: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00023643692838959396
    2. '
' → logprob: -8.875236511230469
    3. 'self' → logprob: -9.375236511230469
    4. '<|end|>' → logprob: -12.875236511230469
    5. ' self' → logprob: -13.000236511230469
    6. '   ' → logprob: -13.125236511230469
    7. ',' → logprob: -13.500236511230469
    8. '      ' → logprob: -14.375236511230469
    9. '           ' → logprob: -14.500236511230469
    10. '[' → logprob: -15.125236511230469

Token 217: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009919608710333705
    2. 'self' → logprob: -7.0009918212890625
    3. '   ' → logprob: -9.875991821289062
    4. ' self' → logprob: -10.500991821289062
    5. '
' → logprob: -14.125991821289062
    6. '      ' → logprob: -15.500991821289062
    7. '	self' → logprob: -15.500991821289062
    8. '        
' → logprob: -16.375991821289062
    9. '     ' → logprob: -16.375991821289062
    10. '           ' → logprob: -16.375991821289062

Token 218: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.3880833089351654
    2. ' self' → logprob: -1.1380833387374878
    3. '       ' → logprob: -6.888083457946777
    4. '   ' → logprob: -9.388083457946777
    5. ' travel' → logprob: -10.013083457946777
    6. ' ' → logprob: -10.763083457946777
    7. 'travel' → logprob: -11.388083457946777
    8. '        ' → logprob: -11.763083457946777
    9. '	self' → logprob: -12.013083457946777
    10. '    ' → logprob: -12.013083457946777

Token 219: '.travel' (ID: 152570)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.697228193283081
    2. '.travel' → logprob: -0.697228193283081
    3. '.trip' → logprob: -5.57222843170166
    4. ' .' → logprob: -8.69722843170166
    5. '.route' → logprob: -9.94722843170166
    6. '.train' → logprob: -11.44722843170166
    7. '.current' → logprob: -12.44722843170166
    8. '.plan' → logprob: -12.82222843170166
    9. 'travel' → logprob: -12.94722843170166
    10. '.tr' → logprob: -12.94722843170166

Token 220: '_route' (ID: 67828)
  Prédit: '_route'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_route' → logprob: -3.5716304410016164e-05
    2. '_' → logprob: -10.875035285949707
    3. '_routes' → logprob: -11.250035285949707
    4. '_segments' → logprob: -13.625035285949707
    5. 'route' → logprob: -14.625035285949707
    6. '_router' → logprob: -14.750035285949707
    7. '_path' → logprob: -15.000035285949707
    8. '_plan' → logprob: -15.125035285949707
    9. ' _' → logprob: -15.375035285949707
    10. '_map' → logprob: -16.125036239624023

Token 221: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740787148475647
    2. '=' → logprob: -0.9740787148475647
    3. ' ' → logprob: -14.224079132080078
    4. '=[]' → logprob: -14.974079132080078
    5. '   ' → logprob: -15.599079132080078
    6. '<|end|>' → logprob: -15.849079132080078
    7. ' =[' → logprob: -16.349079132080078
    8. '[' → logprob: -16.349079132080078
    9. '=list' → logprob: -16.849079132080078
    10. '.append' → logprob: -16.974079132080078

Token 222: ' travel' (ID: 6410)
  Prédit: ' travel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' travel' → logprob: -0.16023123264312744
    2. 'travel' → logprob: -1.9102312326431274
    3. '[]' → logprob: -12.285231590270996
    4. 'trav' → logprob: -14.285231590270996
    5. '.travel' → logprob: -14.410231590270996
    6. ' ' → logprob: -14.785231590270996
    7. ' []' → logprob: -14.910231590270996
    8. ' ' → logprob: -15.660231590270996
    9. '[' → logprob: -16.03523063659668
    10. ' list' → logprob: -16.66023063659668

Token 223: '_route' (ID: 67828)
  Prédit: '_route'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_route' → logprob: -0.00011009939044015482
    2. '_' → logprob: -9.125109672546387
    3. 'route' → logprob: -15.125109672546387
    4. ' _' → logprob: -15.375109672546387
    5. '_routes' → logprob: -15.875109672546387
    6. '_r' → logprob: -16.250110626220703
    7. '_router' → logprob: -16.750110626220703
    8. '_
' → logprob: -16.750110626220703
    9. '_plan' → logprob: -17.000110626220703
    10. '_

' → logprob: -17.000110626220703

Token 224: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06283733248710632
    2. '   ' → logprob: -3.5628373622894287
    3. '<|end|>' → logprob: -4.06283712387085
    4. '       ' → logprob: -4.31283712387085
    5. '    
' → logprob: -7.18783712387085
    6. 'def' → logprob: -7.68783712387085
    7. '```' → logprob: -8.687837600708008
    8. '<|end|>' → logprob: -8.687837600708008
    9. '        
' → logprob: -9.062837600708008
    10. '  
' → logprob: -9.187837600708008

Token 225: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3340173363685608
    2. '
' → logprob: -1.459017276763916
    3. '   ' → logprob: -3.834017276763916
    4. '<|end|>' → logprob: -4.459017276763916
    5. '       ' → logprob: -4.959017276763916
    6. 'for' → logprob: -5.334017276763916
    7. ' ' → logprob: -6.334017276763916
    8. ' def' → logprob: -7.084017276763916
    9. '    
' → logprob: -7.209017276763916
    10. ')' → logprob: -7.584017276763916

Token 226: ' List' (ID: 2655)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.16068418323993683
    2. 'list' → logprob: -2.035684108734131
    3. 'List' → logprob: -4.410684108734131
    4. ' List' → logprob: -5.410684108734131
    5. ' a' → logprob: -7.785684108734131
    6. 'A' → logprob: -7.910684108734131
    7. ' A' → logprob: -9.035684585571289
    8. '[' → logprob: -9.285684585571289
    9. '[]' → logprob: -10.160684585571289
    10. ' indices' → logprob: -10.410684585571289

Token 227: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.1458224058151245
    2. '[int' → logprob: -2.020822525024414
    3. '[' → logprob: -5.895822525024414
    4. 'of' → logprob: -8.395822525024414
    5. '<int' → logprob: -10.395822525024414
    6. '[
' → logprob: -10.395822525024414
    7. '   ' → logprob: -10.395822525024414
    8. '<|end|>' → logprob: -10.645822525024414
    9. '[class' → logprob: -11.770822525024414
    10. '[Int' → logprob: -12.145822525024414

Token 228: ' city' (ID: 5030)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.17741508781909943
    2. '(int' → logprob: -2.802415132522583
    3. 'indices' → logprob: -3.427415132522583
    4. 'inte' → logprob: -4.052414894104004
    5. 'Rail' → logprob: -4.052414894104004
    6. 'segment' → logprob: -4.552414894104004
    7. 'ints' → logprob: -4.677414894104004
    8. 'rail' → logprob: -5.552414894104004
    9. ' int' → logprob: -6.427414894104004
    10. 'tu' → logprob: -6.552414894104004

Token 229: ' indices' (ID: 30378)
  Prédit: ' indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' indices' → logprob: -0.3856573700904846
    2. '_indices' → logprob: -2.51065731048584
    3. 's' → logprob: -2.63565731048584
    4. 'indices' → logprob: -2.63565731048584
    5. '_ids' → logprob: -3.01065731048584
    6. '_indexes' → logprob: -3.51065731048584
    7. ' indexes' → logprob: -4.51065731048584
    8. 'indexes' → logprob: -6.01065731048584
    9. ' ids' → logprob: -6.63565731048584
    10. '_pairs' → logprob: -7.51065731048584

Token 230: ' starting' (ID: 8601)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45121273398399353
    2. '
' → logprob: -1.451212763786316
    3. 'def' → logprob: -2.3262126445770264
    4. '<|end|>' → logprob: -4.3262128829956055
    5. '       ' → logprob: -4.8262128829956055
    6. ' def' → logprob: -4.9512128829956055
    7. '<|end|>' → logprob: -6.9512128829956055
    8. '    
' → logprob: -7.3262128829956055
    9. ',' → logprob: -8.576212882995605
    10. '```' → logprob: -8.576212882995605

Token 231: ' from' (ID: 591)
  Prédit: ' with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.7802196145057678
    2. ' from' → logprob: -1.030219554901123
    3. 'from' → logprob: -2.030219554901123
    4. 'with' → logprob: -3.280219554901123
    5. ' at' → logprob: -4.155219554901123
    6. '[' → logprob: -10.530220031738281
    7. 'at' → logprob: -10.530220031738281
    8. '_with' → logprob: -10.655220031738281
    9. '_from' → logprob: -10.780220031738281
    10. '<|end|>' → logprob: -11.405220031738281

Token 232: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6585631370544434
    2. ' the' → logprob: -1.1585631370544434
    3. ' ' → logprob: -2.0335631370544434
    4. 'the' → logprob: -4.158563137054443
    5. ' source' → logprob: -4.908563137054443
    6. ' start' → logprob: -5.158563137054443
    7. '1' → logprob: -6.408563137054443
    8. ' origin' → logprob: -6.408563137054443
    9. 'source' → logprob: -6.658563137054443
    10. 'start' → logprob: -6.783563137054443

Token 233: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007665063603781164
    2. ' ' → logprob: -7.625766277313232
    3. 'the' → logprob: -9.00076675415039
    4. 'self' → logprob: -10.00076675415039
    5. '1' → logprob: -11.00076675415039
    6. 'start' → logprob: -11.00076675415039
    7. ' the' → logprob: -11.12576675415039
    8. 'source' → logprob: -11.50076675415039
    9. 'city' → logprob: -11.62576675415039
    10. 'origin' → logprob: -11.87576675415039

Token 234: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5834092497825623
    2. '
' → logprob: -1.458409309387207
    3. 'def' → logprob: -2.333409309387207
    4. '       ' → logprob: -2.583409309387207
    5. '<|end|>' → logprob: -4.458409309387207
    6. ')' → logprob: -4.833409309387207
    7. ' def' → logprob: -5.583409309387207
    8. ',' → logprob: -5.833409309387207
    9. '```' → logprob: -6.083409309387207
    10. '    
' → logprob: -6.458409309387207

Token 235: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03579757735133171
    2. 'def' → logprob: -3.535797595977783
    3. '    
' → logprob: -5.785797595977783
    4. '
' → logprob: -6.160797595977783
    5. ' def' → logprob: -7.410797595977783
    6. '       ' → logprob: -8.785797119140625
    7. '        
' → logprob: -9.785797119140625
    8. '	def' → logprob: -11.535797119140625
    9. ' 
' → logprob: -12.160797119140625
    10. '  
' → logprob: -12.660797119140625

Token 236: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8090273141860962
    2. 'def' → logprob: -0.9340273141860962
    3. '   ' → logprob: -2.3090271949768066
    4. ' for' → logprob: -3.6840271949768066
    5. 'for' → logprob: -4.184027194976807
    6. ' def' → logprob: -4.434027194976807
    7. 'self' → logprob: -5.184027194976807
    8. ' self' → logprob: -6.434027194976807
    9. '
' → logprob: -6.684027194976807
    10. ' ' → logprob: -7.934027194976807

Token 237: ' Tracks' (ID: 114463)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.21601824462413788
    2. ' self' → logprob: -2.4660181999206543
    3. '#' → logprob: -2.7160181999206543
    4. 'for' → logprob: -3.8410181999206543
    5. 'def' → logprob: -4.841018199920654
    6. ' for' → logprob: -5.091018199920654
    7. ' #' → logprob: -5.841018199920654
    8. 'from' → logprob: -6.216018199920654
    9. '       ' → logprob: -6.591018199920654
    10. '   ' → logprob: -7.591018199920654

Token 238: ' the' (ID: 290)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.7697666883468628
    2. ' self' → logprob: -1.0197666883468628
    3. '       ' → logprob: -2.8947668075561523
    4. ' current' → logprob: -3.7697668075561523
    5. ' the' → logprob: -4.019766807556152
    6. ' segment' → logprob: -4.269766807556152
    7. '   ' → logprob: -4.394766807556152
    8. ' for' → logprob: -4.769766807556152
    9. 'segment' → logprob: -4.769766807556152
    10. ' usage' → logprob: -4.894766807556152

Token 239: ' total' (ID: 3609)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segment' → logprob: -1.85381019115448
    2. 'trip' → logprob: -1.85381019115448
    3. ' usage' → logprob: -2.2288103103637695
    4. 'total' → logprob: -2.4788103103637695
    5. 'current' → logprob: -2.7288103103637695
    6. 'rail' → logprob: -3.1038103103637695
    7. 'usage' → logprob: -3.2288103103637695
    8. 'pass' → logprob: -3.4788103103637695
    9. ' segment' → logprob: -3.6038103103637695
    10. 'cost' → logprob: -3.6038103103637695

Token 240: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.32116714119911194
    2. ' cost' → logprob: -1.8211671113967896
    3. 'trip' → logprob: -3.196167230606079
    4. ' number' → logprob: -3.821167230606079
    5. 'number' → logprob: -3.946167230606079
    6. '_cost' → logprob: -5.4461669921875
    7. 'rail' → logprob: -5.5711669921875
    8. ' trip' → logprob: -5.8211669921875
    9. ' trips' → logprob: -5.9461669921875
    10. 'fare' → logprob: -5.9461669921875

Token 241: ' after' (ID: 1934)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1246255487203598
    2. 'self' → logprob: -2.8746254444122314
    3. ' self' → logprob: -2.9996254444122314
    4. ' of' → logprob: -5.7496256828308105
    5. ' for' → logprob: -5.9996256828308105
    6. '   ' → logprob: -6.2496256828308105
    7. ' ' → logprob: -6.9996256828308105
    8. '        ' → logprob: -7.3746256828308105
    9. ',' → logprob: -8.249625205993652
    10. ' in' → logprob: -8.374625205993652

Token 242: ' optimization' (ID: 34658)
  Prédit: ' initialization'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' initialization' → logprob: -1.615522861480713
    2. 'initial' → logprob: -1.740522861480713
    3. 'each' → logprob: -1.865522861480713
    4. 'p' → logprob: -2.240522861480713
    5. 'processing' → logprob: -2.615522861480713
    6. 'app' → logprob: -2.740522861480713
    7. 'calcul' → logprob: -2.865522861480713
    8. ' each' → logprob: -3.740522861480713
    9. 'purchase' → logprob: -3.990522861480713
    10. 'comput' → logprob: -4.115522861480713

Token 243: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7473809719085693
    2. '
' → logprob: -0.8723809719085693
    3. 'self' → logprob: -2.2473809719085693
    4. ' self' → logprob: -6.122381210327148
    5. '        
' → logprob: -7.997381210327148
    6. ' 
' → logprob: -9.622381210327148
    7. '   ' → logprob: -10.372381210327148
    8. '	self' → logprob: -10.497381210327148
    9. '
' → logprob: -10.747381210327148
    10. '    
' → logprob: -11.247381210327148

Token 244: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08260224014520645
    2. 'self' → logprob: -2.5826022624969482
    3. ' self' → logprob: -5.707602024078369
    4. '   ' → logprob: -8.332602500915527
    5. '
' → logprob: -9.457602500915527
    6. 'def' → logprob: -10.082602500915527
    7. '	self' → logprob: -11.957602500915527
    8. '      ' → logprob: -12.582602500915527
    9. '        
' → logprob: -12.582602500915527
    10. '        ' → logprob: -13.082602500915527

Token 245: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.022160077467560768
    2. ' self' → logprob: -4.022160053253174
    3. '       ' → logprob: -5.522160053253174
    4. '   ' → logprob: -12.397160530090332
    5. 'def' → logprob: -15.147160530090332
    6. '	self' → logprob: -15.147160530090332
    7. ' ' → logprob: -15.897160530090332
    8. '
' → logprob: -17.397159576416016
    9. '```' → logprob: -17.647159576416016
    10. ' ' → logprob: -17.897159576416016

Token 246: '.total' (ID: 23374)
  Prédit: '.total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.total' → logprob: -0.0869692862033844
    2. '.optim' → logprob: -2.8369693756103516
    3. '.' → logprob: -4.336969375610352
    4. 'total' → logprob: -5.461969375610352
    5. '.best' → logprob: -5.961969375610352
    6. '.opt' → logprob: -6.211969375610352
    7. 'optimized' → logprob: -6.461969375610352
    8. ' .' → logprob: -7.461969375610352
    9. '.current' → logprob: -8.461969375610352
    10. 'optimal' → logprob: -9.461969375610352

Token 247: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.0007940204231999815
    2. '_' → logprob: -7.375793933868408
    3. ' _' → logprob: -8.875794410705566
    4. '_p' → logprob: -11.125794410705566
    5. '_price' → logprob: -12.500794410705566
    6. '_trip' → logprob: -12.500794410705566
    7. '_total' → logprob: -13.500794410705566
    8. '_co' → logprob: -14.250794410705566
    9. '_code' → logprob: -14.750794410705566
    10. 'cost' → logprob: -14.875794410705566

Token 248: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31335702538490295
    2. '=' → logprob: -1.3133569955825806
    3. ':' → logprob: -9.81335735321045
    4. '   ' → logprob: -10.43835735321045
    5. ' ' → logprob: -12.31335735321045
    6. '_' → logprob: -12.81335735321045
    7. '<|end|>' → logprob: -13.43835735321045
    8. '=None' → logprob: -13.56335735321045
    9. ')' → logprob: -15.06335735321045
    10. '  ' → logprob: -15.18835735321045

Token 249: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009612997062504292
    2. ' ' → logprob: -5.884613037109375
    3. 'None' → logprob: -6.009613037109375
    4. 'float' → logprob: -6.134613037109375
    5. ' None' → logprob: -6.634613037109375
    6. 'sum' → logprob: -7.759613037109375
    7. ' float' → logprob: -8.009613037109375
    8. ' sum' → logprob: -9.509613037109375
    9. 'self' → logprob: -12.009613037109375
    10. '   ' → logprob: -12.134613037109375

Token 250: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.021051650866866112
    2. 'float' → logprob: -4.27105188369751
    3. 'None' → logprob: -5.02105188369751
    4. 'sum' → logprob: -8.271051406860352
    5. 'self' → logprob: -12.021051406860352
    6. ' None' → logprob: -13.521051406860352
    7. 'int' → logprob: -13.521051406860352
    8. ' float' → logprob: -14.146051406860352
    9. ' ' → logprob: -14.646051406860352
    10. 'math' → logprob: -14.896051406860352

Token 251: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.015551289543509483
    2. '<|end|>' → logprob: -5.0155510902404785
    3. 'def' → logprob: -5.3905510902404785
    4. '   ' → logprob: -6.1405510902404785
    5. '

' → logprob: -6.5155510902404785
    6. '    
' → logprob: -8.390551567077637
    7. '<|end|>' → logprob: -8.515551567077637
    8. ' def' → logprob: -9.265551567077637
    9. '	def' → logprob: -11.390551567077637
    10. ' 
' → logprob: -11.390551567077637

Token 252: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3314700722694397
    2. 'def' → logprob: -1.581470012664795
    3. ' def' → logprob: -2.581470012664795
    4. '
' → logprob: -7.706470012664795
    5. '    
' → logprob: -8.206470489501953
    6. '	def' → logprob: -9.956470489501953
    7. ' 
' → logprob: -11.456470489501953
    8. ' ' → logprob: -12.206470489501953
    9. '   
' → logprob: -13.956470489501953
    10. '

' → logprob: -13.956470489501953

Token 253: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0024848117027431726
    2. ' def' → logprob: -6.0024847984313965
    3. '   ' → logprob: -11.627485275268555
    4. '	def' → logprob: -15.252485275268555
    5. ' ' → logprob: -18.002485275268555
    6. '```' → logprob: -19.002485275268555
    7. '
' → logprob: -19.252485275268555
    8. 'class' → logprob: -19.377485275268555
    9. '  ' → logprob: -20.002485275268555
    10. 'de' → logprob: -20.252485275268555

Token 254: ' count' (ID: 3605)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -1.6050149202346802
    2. 'calculate' → logprob: -1.6050149202346802
    3. 'opt' → logprob: -1.9800149202346802
    4. 'count' → logprob: -2.2300148010253906
    5. ' compute' → logprob: -2.2300148010253906
    6. ' calculate' → logprob: -2.3550148010253906
    7. ' count' → logprob: -2.4800148010253906
    8. 'update' → logprob: -3.9800148010253906
    9. ' update' → logprob: -3.9800148010253906
    10. ' optimize' → logprob: -4.230014801025391

Token 255: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4368787109851837
    2. '_tr' → logprob: -1.1868786811828613
    3. '_trip' → logprob: -3.0618786811828613
    4. '_segments' → logprob: -6.811878681182861
    5. '_usage' → logprob: -7.561878681182861
    6. '_pass' → logprob: -9.06187915802002
    7. '_all' → logprob: -10.43687915802002
    8. '_vis' → logprob: -10.56187915802002
    9. '_self' → logprob: -10.56187915802002
    10. '_trials' → logprob: -10.81187915802002

Token 256: 'rail' (ID: 66046)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.16263407468795776
    2. 'trip' → logprob: -2.6626341342926025
    3. 'segments' → logprob: -2.7876341342926025
    4. 'segment' → logprob: -4.912633895874023
    5. 'rail' → logprob: -5.287633895874023
    6. 'travel' → logprob: -6.287633895874023
    7. 'trav' → logprob: -7.287633895874023
    8. 'rides' → logprob: -7.412633895874023
    9. 'self' → logprob: -8.037633895874023
    10. 'usage' → logprob: -8.162633895874023

Token 257: '_usage' (ID: 77753)
  Prédit: '_segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segments' → logprob: -0.02111048437654972
    2. '_' → logprob: -4.771110534667969
    3. '_segment' → logprob: -5.021110534667969
    4. '_tr' → logprob: -5.521110534667969
    5. '_trip' → logprob: -6.521110534667969
    6. '_usage' → logprob: -9.521110534667969
    7. '_counts' → logprob: -9.646110534667969
    8. 's' → logprob: -9.771110534667969
    9. '_p' → logprob: -10.396110534667969
    10. '_seg' → logprob: -10.521110534667969

Token 258: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0011963017750531435
    2. '(' → logprob: -6.751196384429932
    3. 'self' → logprob: -11.126195907592773
    4. ' (' → logprob: -12.001195907592773
    5. 's' → logprob: -12.376195907592773
    6. '(s' → logprob: -14.876195907592773
    7. '_(' → logprob: -16.001195907592773
    8. ' ' → logprob: -16.001195907592773
    9. '   ' → logprob: -16.376195907592773
    10. '(Self' → logprob: -16.751195907592773

Token 259: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009300066158175468
    2. 'self' → logprob: -5.384300231933594
    3. ')' → logprob: -6.009300231933594
    4. ',' → logprob: -6.634300231933594
    5. '):
' → logprob: -7.384300231933594
    6. '_' → logprob: -9.259300231933594
    7. ' ):' → logprob: -9.509300231933594
    8. ')_' → logprob: -10.384300231933594
    9. '(self' → logprob: -10.759300231933594
    10. '_self' → logprob: -11.259300231933594

Token 260: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008712020353414118
    2. '
' → logprob: -7.625871181488037
    3. '(self' → logprob: -8.625871658325195
    4. 'self' → logprob: -9.375871658325195
    5. '        
' → logprob: -10.250871658325195
    6. ' for' → logprob: -10.875871658325195
    7. '```' → logprob: -11.000871658325195
    8. ' self' → logprob: -11.500871658325195
    9. '   ' → logprob: -12.000871658325195
    10. '    
' → logprob: -12.250871658325195

Token 261: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5188533663749695
    2. 'for' → logprob: -1.1438534259796143
    3. ' for' → logprob: -2.6438534259796143
    4. 'from' → logprob: -4.893853187561035
    5. 'prev' → logprob: -5.768853187561035
    6. 'current' → logprob: -7.018853187561035
    7. 'self' → logprob: -7.393853187561035
    8. 'route' → logprob: -7.643853187561035
    9. '   ' → logprob: -7.768853187561035
    10. 'segment' → logprob: -8.018853187561035

Token 262: ' Rail' (ID: 32384)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13296595215797424
    2. ' for' → logprob: -2.6329660415649414
    3. 'from' → logprob: -4.257966041564941
    4. 'self' → logprob: -4.632966041564941
    5. 'route' → logprob: -5.257966041564941
    6. '       ' → logprob: -5.507966041564941
    7. 'prev' → logprob: -5.632966041564941
    8. 'segment' → logprob: -5.757966041564941
    9. '#' → logprob: -6.007966041564941
    10. '   ' → logprob: -6.132966041564941

Token 263: ' segment' (ID: 14806)
  Prédit: '_segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_segments' → logprob: -0.1786767691373825
    2. '_usage' → logprob: -2.9286768436431885
    3. '_segment' → logprob: -3.1786768436431885
    4. '_' → logprob: -3.3036768436431885
    5. '       ' → logprob: -4.053676605224609
    6. 'segments' → logprob: -5.178676605224609
    7. '_indices' → logprob: -6.553676605224609
    8. ' segments' → logprob: -6.803676605224609
    9. 'for' → logprob: -6.928676605224609
    10. 'segment' → logprob: -7.053676605224609

Token 264: ' i' (ID: 575)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.44580456614494324
    2. '_usage' → logprob: -1.6958045959472656
    3. '_indices' → logprob: -2.4458045959472656
    4. '_' → logprob: -2.9458045959472656
    5. '_counts' → logprob: -4.195804595947266
    6. '_start' → logprob: -4.570804595947266
    7. '_index' → logprob: -5.695804595947266
    8. ' =' → logprob: -6.445804595947266
    9. '_map' → logprob: -6.695804595947266
    10. '_indexes' → logprob: -6.695804595947266

Token 265: ' connects' (ID: 47599)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.3057984709739685
    2. ' =' → logprob: -2.0557985305786133
    3. 's' → logprob: -2.4307985305786133
    4. '_usage' → logprob: -4.180798530578613
    5. ' for' → logprob: -4.555798530578613
    6. 'f' → logprob: -5.180798530578613
    7. 'for' → logprob: -5.680798530578613
    8. 'n' → logprob: -6.055798530578613
    9. '_index' → logprob: -6.305798530578613
    10. ' usage' → logprob: -6.555798530578613

Token 266: ' city' (ID: 5030)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3224804103374481
    2. ' self' → logprob: -1.3224804401397705
    3. '(self' → logprob: -4.947480201721191
    4. ' (' → logprob: -7.322480201721191
    5. ' cities' → logprob: -7.697480201721191
    6. ' city' → logprob: -8.322480201721191
    7. 'cities' → logprob: -8.322480201721191
    8. 'city' → logprob: -8.572480201721191
    9. ' the' → logprob: -9.822480201721191
    10. '   ' → logprob: -10.572480201721191

Token 267: ' i' (ID: 575)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6627877354621887
    2. ' i' → logprob: -1.662787675857544
    3. 'i' → logprob: -2.287787675857544
    4. 'self' → logprob: -2.412787675857544
    5. '[i' → logprob: -2.912787675857544
    6. '[self' → logprob: -3.537787675857544
    7. 's' → logprob: -5.287787914276123
    8. '[' → logprob: -5.912787914276123
    9. '       ' → logprob: -6.162787914276123
    10. ' [' → logprob: -6.287787914276123

Token 268: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.28866609930992126
    2. ' to' → logprob: -1.4136661291122437
    3. ' ' → logprob: -5.788666248321533
    4. 'and' → logprob: -6.038666248321533
    5. 'to' → logprob: -6.663666248321533
    6. ' with' → logprob: -8.538665771484375
    7. '   ' → logprob: -8.663665771484375
    8. '    ' → logprob: -9.163665771484375
    9. '       ' → logprob: -9.288665771484375
    10. '+' → logprob: -9.663665771484375

Token 269: ' city' (ID: 5030)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.016055485233664513
    2. ' i' → logprob: -4.141055583953857
    3. '(i' → logprob: -11.5160551071167
    4. ' ' → logprob: -13.0160551071167
    5. ' (' → logprob: -13.1410551071167
    6. '	i' → logprob: -13.2660551071167
    7. ' city' → logprob: -13.2660551071167
    8. '   ' → logprob: -13.7660551071167
    9. 'city' → logprob: -14.1410551071167
    10. ' ' → logprob: -14.5160551071167

Token 270: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.42873916029930115
    2. ' i' → logprob: -1.0537391901016235
    3. ' (' → logprob: -11.303739547729492
    4. ' ' → logprob: -12.428739547729492
    5. '(i' → logprob: -12.678739547729492
    6. '	i' → logprob: -12.928739547729492
    7. '   ' → logprob: -12.928739547729492
    8. '{i' → logprob: -13.053739547729492
    9. '_i' → logprob: -13.178739547729492
    10. '<|end|>' → logprob: -13.303739547729492

Token 271: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04886315390467644
    2. ' +' → logprob: -3.048863172531128
    3. ' ' → logprob: -9.173863410949707
    4. '1' → logprob: -9.923863410949707
    5. '-' → logprob: -10.173863410949707
    6. 's' → logprob: -10.423863410949707
    7. '```' → logprob: -10.673863410949707
    8. '+
' → logprob: -11.923863410949707
    9. '   ' → logprob: -12.048863410949707
    10. '       ' → logprob: -12.673863410949707

Token 272: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.017940841615200043
    2. '-' → logprob: -4.267940998077393
    3. ' -' → logprob: -5.767940998077393
    4. ' ' → logprob: -8.142940521240234
    5. '_' → logprob: -8.517940521240234
    6. '+' → logprob: -10.267940521240234
    7. '```' → logprob: -10.892940521240234
    8. 'i' → logprob: -11.142940521240234
    9. ' to' → logprob: -11.267940521240234
    10. 's' → logprob: -11.642940521240234

Token 273: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12236407399177551
    2. '
' → logprob: -2.497364044189453
    3. '<|end|>' → logprob: -4.372364044189453
    4. ' for' → logprob: -4.997364044189453
    5. '        
' → logprob: -5.747364044189453
    6. '  
' → logprob: -5.997364044189453
    7. ':' → logprob: -6.622364044189453
    8. '.' → logprob: -6.747364044189453
    9. '<|end|>' → logprob: -6.747364044189453
    10. 'for' → logprob: -6.872364044189453

Token 274: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011042879894375801
    2. '
' → logprob: -5.386043071746826
    3. ' for' → logprob: -5.386043071746826
    4. '   ' → logprob: -7.636043071746826
    5. 'for' → logprob: -7.886043071746826
    6. '        
' → logprob: -8.511042594909668
    7. ',' → logprob: -8.636042594909668
    8. ':' → logprob: -8.886042594909668
    9. '<|end|>' → logprob: -9.261042594909668
    10. '    
' → logprob: -9.511042594909668

Token 275: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.16402894258499146
    2. 'for' (adapté à ' for') → logprob: -2.1640288829803467
    3. '       ' → logprob: -3.4140288829803467
    4. ' current' → logprob: -6.789029121398926
    5. 'current' → logprob: -7.664029121398926
    6. ' prev' → logprob: -8.039029121398926
    7. ' previous' → logprob: -8.164029121398926
    8. ' from' → logprob: -8.414029121398926
    9. 'prev' → logprob: -8.414029121398926
    10. 'from' → logprob: -8.789029121398926

Token 276: ' day' (ID: 2163)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2270117849111557
    2. ' i' → logprob: -1.602011799812317
    3. ' city' → logprob: -7.227011680603027
    4. ' idx' → logprob: -7.852011680603027
    5. 'idx' → logprob: -8.852011680603027
    6. 'city' → logprob: -8.852011680603027
    7. ' segment' → logprob: -9.602011680603027
    8. ' ' → logprob: -10.102011680603027
    9. 'segment' → logprob: -10.602011680603027
    10. '   ' → logprob: -10.977011680603027

Token 277: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012030149810016155
    2. 'in' → logprob: -4.512030124664307
    3. '_' → logprob: -7.887030124664307
    4. ',' → logprob: -8.762030601501465
    5. '   ' → logprob: -9.012030601501465
    6. '       ' → logprob: -9.262030601501465
    7. '        ' → logprob: -9.512030601501465
    8. '_in' → logprob: -9.887030601501465
    9. '    ' → logprob: -10.262030601501465
    10. ' ,' → logprob: -11.012030601501465

Token 278: ' range' (ID: 3352)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4355369806289673
    2. 'range' → logprob: -1.3105369806289673
    3. ' range' → logprob: -3.0605368614196777
    4. ' self' → logprob: -3.3105368614196777
    5. '   ' → logprob: -10.560537338256836
    6. ' ' → logprob: -11.685537338256836
    7. '  ' → logprob: -12.685537338256836
    8. '	self' → logprob: -13.060537338256836
    9. '(self' → logprob: -13.185537338256836
    10. '    ' → logprob: -13.310537338256836

Token 279: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.0012770227622240782
    2. '(' → logprob: -6.751276969909668
    3. 'len' → logprob: -9.501276969909668
    4. ' len' → logprob: -10.876276969909668
    5. '(self' → logprob: -11.501276969909668
    6. ' (' → logprob: -13.126276969909668
    7. '       ' → logprob: -15.001276969909668
    8. ',len' → logprob: -15.751276969909668
    9. '[len' → logprob: -15.751276969909668
    10. '=len' → logprob: -15.876276969909668

Token 280: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -6.051066520740278e-05
    2. '(' → logprob: -9.875060081481934
    3. 'self' → logprob: -11.750060081481934
    4. ' (' → logprob: -14.375060081481934
    5. ' self' → logprob: -14.875060081481934
    6. ')' → logprob: -16.37506103515625
    7. '=self' → logprob: -17.75006103515625
    8. ')(' → logprob: -18.50006103515625
    9. ',self' → logprob: -18.75006103515625
    10. '(
' → logprob: -19.00006103515625

Token 281: '.travel' (ID: 152570)
  Prédit: '.travel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.travel' → logprob: -0.0003422567679081112
    2. '.' → logprob: -8.12534236907959
    3. ' .' → logprob: -10.25034236907959
    4. 'travel' → logprob: -12.00034236907959
    5. '.trip' → logprob: -12.75034236907959
    6. ' travel' → logprob: -13.37534236907959
    7. '.train' → logprob: -16.500341415405273
    8. '.transport' → logprob: -17.625341415405273
    9. '.trade' → logprob: -17.625341415405273
    10. ' ' → logprob: -17.875341415405273

Token 282: '_route' (ID: 67828)
  Prédit: '_route'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_route' → logprob: -5.512236498361744e-07
    2. 'route' → logprob: -15.000000953674316
    3. '_plan' → logprob: -16.25
    4. '_' → logprob: -16.875
    5. '   ' → logprob: -17.5
    6. ' _' → logprob: -17.75
    7. '_ROUTE' → logprob: -18.625
    8. '_routes' → logprob: -18.625
    9. '_role' → logprob: -19.0
    10. 'Route' → logprob: -19.375

Token 283: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002783600240945816
    2. ' )' → logprob: -6.00278377532959
    3. ')-' → logprob: -8.75278377532959
    4. '()' → logprob: -9.00278377532959
    5. ' ' → logprob: -11.75278377532959
    6. ' -' → logprob: -11.75278377532959
    7. '   ' → logprob: -12.00278377532959
    8. ')):
' → logprob: -13.87778377532959
    9. '-' → logprob: -14.12778377532959
    10. '[' → logprob: -14.62778377532959

Token 284: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3115936517715454
    2. '-' → logprob: -1.4365936517715454
    3. ')' → logprob: -3.561593532562256
    4. ' ' → logprob: -7.561593532562256
    5. '   ' → logprob: -7.811593532562256
    6. '()' → logprob: -7.936593532562256
    7. ')-' → logprob: -8.936594009399414
    8. '()-' → logprob: -9.311594009399414
    9. ' )' → logprob: -11.186594009399414
    10. '):
' → logprob: -11.186594009399414

Token 285: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007610532455146313
    2. ' ' → logprob: -4.882610321044922
    3. '   ' → logprob: -12.507610321044922
    4. '2' → logprob: -14.757610321044922
    5. '  ' → logprob: -16.507610321044922
    6. '```' → logprob: -16.882610321044922
    7. '       ' → logprob: -17.007610321044922
    8. '0' → logprob: -17.132610321044922
    9. '    ' → logprob: -17.132610321044922
    10. '<|end|>' → logprob: -17.945110321044922

Token 286: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.860340752406046e-05
    2. ' ' → logprob: -9.7500581741333
    3. '
' → logprob: -16.250059127807617
    4. '2' → logprob: -17.000059127807617
    5. '```' → logprob: -17.062559127807617
    6. '   ' → logprob: -17.500059127807617
    7. '0' → logprob: -18.000059127807617
    8. ')' → logprob: -18.437559127807617
    9. '۱' → logprob: -19.000059127807617
    10. '１' → logprob: -19.125059127807617

Token 287: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.07218082249164581
    2. '):' → logprob: -2.69718074798584
    3. ' ):
' → logprob: -6.19718074798584
    4. ' ):' → logprob: -8.94718074798584
    5. '):
' → logprob: -10.07218074798584
    6. '       ' → logprob: -11.32218074798584
    7. '   ' → logprob: -11.44718074798584
    8. ':' → logprob: -11.94718074798584
    9. '):

' → logprob: -13.44718074798584
    10. '    ' → logprob: -13.69718074798584

Token 288: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019072700291872025
    2. '           ' → logprob: -4.644072532653809
    3. ' current' → logprob: -5.269072532653809
    4. 'current' → logprob: -6.394072532653809
    5. ',' → logprob: -7.144072532653809
    6. ' next' → logprob: -8.144072532653809
    7. '        ' → logprob: -8.269072532653809
    8. ' city' → logprob: -8.769072532653809
    9. '   ' → logprob: -9.019072532653809
    10. ' if' → logprob: -9.144072532653809

Token 289: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' (adapté à ' start') → logprob: -0.8641923069953918
    2. ' start' → logprob: -1.114192247390747
    3. ' current' → logprob: -2.489192247390747
    4. 'current' → logprob: -2.614192247390747
    5. 'from' → logprob: -2.739192247390747
    6. ' from' → logprob: -3.739192247390747
    7. '           ' → logprob: -6.239192485809326
    8. '       ' → logprob: -7.364192485809326
    9. 'next' → logprob: -7.489192485809326
    10. 'origin' → logprob: -7.489192485809326

Token 290: ' =' (ID: 314)
  Prédit: '_city'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_city' → logprob: -0.5848827958106995
    2. ' =' → logprob: -0.8348827958106995
    3. '=' → logprob: -4.959882736206055
    4. ',' → logprob: -7.334882736206055
    5. '_index' → logprob: -7.584882736206055
    6. '_idx' → logprob: -8.209882736206055
    7. '   ' → logprob: -8.709882736206055
    8. 'city' → logprob: -9.084882736206055
    9. 'City' → logprob: -9.334882736206055
    10. '_c' → logprob: -11.209882736206055

Token 291: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004078758880496025
    2. ' self' → logprob: -5.5040788650512695
    3. '           ' → logprob: -15.75407886505127
    4. '   ' → logprob: -16.254077911376953
    5. '	self' → logprob: -16.879077911376953
    6. '       ' → logprob: -17.129077911376953
    7. '(self' → logprob: -18.129077911376953
    8. 'min' → logprob: -18.254077911376953
    9. '
' → logprob: -19.004077911376953
    10. ' ' → logprob: -19.879077911376953

Token 292: '.travel' (ID: 152570)
  Prédit: '.travel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.travel' → logprob: -2.4868770196917467e-05
    2. 'travel' → logprob: -10.875024795532227
    3. '.' → logprob: -12.125024795532227
    4. ' travel' → logprob: -15.625024795532227
    5. ' .' → logprob: -15.750024795532227
    6. '.user' → logprob: -16.250024795532227
    7. '.train' → logprob: -17.000024795532227
    8. '.trip' → logprob: -17.500024795532227
    9. '   ' → logprob: -18.000024795532227
    10. '.training' → logprob: -18.875024795532227

Token 293: '_route' (ID: 67828)
  Prédit: '_route'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_route' → logprob: -5.848420551046729e-05
    2. 'route' → logprob: -10.5000581741333
    3. '_segment' → logprob: -10.8750581741333
    4. '_plan' → logprob: -12.3750581741333
    5. 'Route' → logprob: -12.7500581741333
    6. '_segments' → logprob: -13.2500581741333
    7. '   ' → logprob: -14.2500581741333
    8. '_ROUTE' → logprob: -14.7500581741333
    9. '_' → logprob: -15.0000581741333
    10. '[' → logprob: -15.5000581741333

Token 294: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.896309739408025e-07
    2. ' [' → logprob: -14.375000953674316
    3. '   ' → logprob: -15.875000953674316
    4. '[line' → logprob: -17.5
    5. '(day' → logprob: -18.0
    6. '[
' → logprob: -18.5
    7. '```' → logprob: -18.5
    8. '       ' → logprob: -18.75
    9. 'day' → logprob: -18.875
    10. '[level' → logprob: -19.0

Token 295: 'day' (ID: 1635)
  Prédit: 'day'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'day' → logprob: -9.627176768844947e-05
    2. ' day' → logprob: -9.250096321105957
    3. '(day' → logprob: -17.25009536743164
    4. '[' → logprob: -18.00009536743164
    5. '   ' → logprob: -19.12509536743164
    6. '_day' → logprob: -19.62509536743164
    7. '
' → logprob: -19.75009536743164
    8. ' ' → logprob: -20.62509536743164
    9. '0' → logprob: -21.37509536743164
    10. ']' → logprob: -21.37509536743164

Token 296: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.20557056367397308
    2. ']' → logprob: -1.7055705785751343
    3. '           ' → logprob: -5.830570697784424
    4. ')
' → logprob: -7.455570697784424
    5. '-' → logprob: -8.830570220947266
    6. ')' → logprob: -8.955570220947266
    7. '
' → logprob: -9.580570220947266
    8. '<|end|>' → logprob: -9.830570220947266
    9. ']
' → logprob: -9.830570220947266
    10. ']

' → logprob: -9.955570220947266

Token 297: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18669909238815308
    2. '
' → logprob: -2.686699151992798
    3. '+' → logprob: -3.561699151992798
    4. ' 
' → logprob: -3.811699151992798
    5. ' next' → logprob: -4.811698913574219
    6. '            
' → logprob: -4.811698913574219
    7. ' if' → logprob: -4.936698913574219
    8. 'next' → logprob: -5.686698913574219
    9. ',' → logprob: -6.186698913574219
    10. '<|end|>' → logprob: -6.186698913574219

Token 298: ' end' (ID: 1268)
  Prédit: ' end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.3868716359138489
    2. 'end' (adapté à ' end') → logprob: -1.136871576309204
    3. '	end' → logprob: -15.761871337890625
    4. '           ' → logprob: -16.261871337890625
    5. 'next' → logprob: -16.386871337890625
    6. '_end' → logprob: -16.386871337890625
    7. ' next' → logprob: -17.136871337890625
    8. '[end' → logprob: -18.011871337890625
    9. 'endt' → logprob: -18.136871337890625
    10. '1' → logprob: -18.136871337890625

Token 299: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07890884578227997
    2. '=' → logprob: -2.578908920288086
    3. '<|end|>' → logprob: -11.578908920288086
    4. ' ' → logprob: -13.203908920288086
    5. '=end' → logprob: -13.328908920288086
    6. ',' → logprob: -13.703908920288086
    7. ')' → logprob: -13.828908920288086
    8. '   ' → logprob: -14.703908920288086
    9. ' =
' → logprob: -14.703908920288086
    10. '=self' → logprob: -14.828908920288086

Token 300: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3868728280067444
    2. ' self' → logprob: -1.1368727684020996
    3. '	self' → logprob: -14.136873245239258
    4. '(self' → logprob: -15.261873245239258
    5. '   ' → logprob: -15.386873245239258
    6. '=self' → logprob: -15.636873245239258
    7. '[self' → logprob: -15.761873245239258
    8. ' ' → logprob: -15.886873245239258
    9. '           ' → logprob: -16.386873245239258
    10. ' ' → logprob: -17.136873245239258

Token 301: '.travel' (ID: 152570)
  Prédit: '.travel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.travel' → logprob: -0.3133021295070648
    2. 'travel' → logprob: -1.3133021593093872
    3. ' travel' → logprob: -10.563302040100098
    4. '.' → logprob: -12.188302040100098
    5. '旅行' → logprob: -13.688302040100098
    6. '[' → logprob: -13.688302040100098
    7. '.train' → logprob: -13.813302040100098
    8. 'trav' → logprob: -14.188302040100098
    9. '   ' → logprob: -14.188302040100098
    10. '```' → logprob: -14.188302040100098

Token 302: '_route' (ID: 67828)
  Prédit: '_route'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_route' → logprob: -7.465036105713807e-06
    2. 'route' → logprob: -11.875007629394531
    3. '.route' → logprob: -15.750007629394531
    4. '_ROUTE' → logprob: -16.25000762939453
    5. 'Route' → logprob: -16.37500762939453
    6. '$route' → logprob: -17.37500762939453
    7. '_' → logprob: -17.50000762939453
    8. ' route' → logprob: -17.75000762939453
    9. '[' → logprob: -18.00000762939453
    10. '	Route' → logprob: -18.37500762939453

Token 303: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.465036105713807e-06
    2. ' [' → logprob: -13.250007629394531
    3. 'day' → logprob: -13.500007629394531
    4. '+' → logprob: -13.625007629394531
    5. '[
' → logprob: -14.125007629394531
    6. '   ' → logprob: -14.250007629394531
    7. '(day' → logprob: -14.750007629394531
    8. '```' → logprob: -15.000007629394531
    9. ' day' → logprob: -15.750007629394531
    10. ' +' → logprob: -15.750007629394531

Token 304: 'day' (ID: 1635)
  Prédit: 'day'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'day' → logprob: -0.0019291093340143561
    2. ' day' → logprob: -6.25192928314209
    3. '(day' → logprob: -15.00192928314209
    4. '   ' → logprob: -15.62692928314209
    5. ']' → logprob: -17.501928329467773
    6. '
' → logprob: -18.126928329467773
    7. '_day' → logprob: -18.626928329467773
    8. ' ' → logprob: -18.876928329467773
    9. '[' → logprob: -19.501928329467773
    10. '.day' → logprob: -19.626928329467773

Token 305: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.030087847262620926
    2. ' +' → logprob: -3.530087947845459
    3. ']' → logprob: -8.0300874710083
    4. ']+' → logprob: -12.1550874710083
    5. '1' → logprob: -12.2800874710083
    6. '   ' → logprob: -13.9050874710083
    7. ']
' → logprob: -15.5300874710083
    8. ' ' → logprob: -15.6550874710083
    9. '+
' → logprob: -16.030088424682617
    10. ')' → logprob: -16.155088424682617

Token 306: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.848420551046729e-05
    2. ' ' → logprob: -9.7500581741333
    3. '0' → logprob: -16.125059127807617
    4. '
' → logprob: -16.750059127807617
    5. '   ' → logprob: -17.750059127807617
    6. '```' → logprob: -18.125059127807617
    7. '  ' → logprob: -19.625059127807617
    8. '

' → logprob: -19.625059127807617
    9. '１' → logprob: -20.187559127807617
    10. ']' → logprob: -20.562559127807617

Token 307: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.200166469876422e-06
    2. ' ' → logprob: -12.250004768371582
    3. '0' → logprob: -15.500004768371582
    4. '
' → logprob: -17.1250057220459
    5. '```' → logprob: -17.2500057220459
    6. '   ' → logprob: -17.3750057220459
    7. ')' → logprob: -19.2500057220459
    8. '  ' → logprob: -20.7500057220459
    9. '-' → logprob: -20.8750057220459
    10. '

' → logprob: -20.8750057220459

Token 308: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08948124945163727
    2. '           ' → logprob: -2.7144813537597656
    3. '       ' → logprob: -4.964481353759766
    4. '
' → logprob: -5.214481353759766
    5. ')
' → logprob: -5.964481353759766
    6. ']' → logprob: -6.214481353759766
    7. '<|end|>' → logprob: -6.714481353759766
    8. '               ' → logprob: -7.964481353759766
    9. ' if' → logprob: -8.714481353759766
    10. '<|end|>' → logprob: -9.214481353759766

Token 309: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5582481026649475
    2. '       ' → logprob: -0.9332481026649475
    3. '        
' → logprob: -4.558248043060303
    4. '
' → logprob: -4.683248043060303
    5. ' if' → logprob: -5.183248043060303
    6. '<|end|>' → logprob: -5.933248043060303
    7. '            
' → logprob: -6.558248043060303
    8. '    
' → logprob: -6.683248043060303
    9. 'if' → logprob: -7.058248043060303
    10. '  
' → logprob: -7.183248043060303

Token 310: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2551935017108917
    2. '           ' → logprob: -1.6301934719085693
    3. ' if' → logprob: -4.755193710327148
    4. 'for' → logprob: -5.005193710327148
    5. 'direction' → logprob: -5.005193710327148
    6. 'step' → logprob: -5.130193710327148
    7. 'diff' → logprob: -8.380193710327148
    8. 'while' → logprob: -8.505193710327148
    9. 'current' → logprob: -8.880193710327148
    10. '```' → logprob: -9.005193710327148

Token 311: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.6440539956092834
    2. ' start' → logprob: -0.7690539956092834
    3. ' abs' → logprob: -5.269053936004639
    4. 'abs' → logprob: -5.519053936004639
    5. ' end' → logprob: -6.644053936004639
    6. 'end' → logprob: -7.019053936004639
    7. '(start' → logprob: -11.394054412841797
    8. '	start' → logprob: -11.394054412841797
    9. ' ' → logprob: -12.019054412841797
    10. '   ' → logprob: -13.519054412841797

Token 312: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.8657402396202087
    2. ' <' → logprob: -0.9907402396202087
    3. '+' → logprob: -2.3657402992248535
    4. ' ==' → logprob: -2.8657402992248535
    5. '==' → logprob: -3.8657402992248535
    6. ' +' → logprob: -3.9907402992248535
    7. ' >' → logprob: -4.8657402992248535
    8. '>' → logprob: -4.9907402992248535
    9. ' !=' → logprob: -6.4907402992248535
    10. '!=' → logprob: -7.3657402992248535

Token 313: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.12699352204799652
    2. ' end' → logprob: -2.126993417739868
    3. '=end' → logprob: -10.126993179321289
    4. '=' → logprob: -10.751993179321289
    5. '(end' → logprob: -13.501993179321289
    6. '	end' → logprob: -14.001993179321289
    7. ' ' → logprob: -15.001993179321289
    8. '_end' → logprob: -15.251993179321289
    9. '[end' → logprob: -15.501993179321289
    10. '>end' → logprob: -15.751993179321289

Token 314: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5795714855194092
    2. ':
' → logprob: -0.8295714855194092
    3. '               ' → logprob: -6.329571723937988
    4. '           ' → logprob: -6.704571723937988
    5. ' and' → logprob: -8.079571723937988
    6. ':

' → logprob: -9.579571723937988
    7. '):
' → logprob: -10.329571723937988
    8. ' :
' → logprob: -10.329571723937988
    9. ':
' → logprob: -10.454571723937988
    10. ' or' → logprob: -10.704571723937988

Token 315: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6302907466888428
    2. '           ' → logprob: -1.2552907466888428
    3. ' for' → logprob: -1.7552907466888428
    4. '<|end|>' → logprob: -6.380290985107422
    5. '	       ' → logprob: -6.505290985107422
    6. 'for' → logprob: -6.630290985107422
    7. ',' → logprob: -7.255290985107422
    8. '       ' → logprob: -7.380290985107422
    9. '
' → logprob: -7.380290985107422
    10. '            
' → logprob: -7.630290985107422

Token 316: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3385539650917053
    2. 'for' → logprob: -1.3385539054870605
    3. '               ' → logprob: -3.8385539054870605
    4. '           ' → logprob: -5.7135539054870605
    5. '```' → logprob: -10.338554382324219
    6. '	for' → logprob: -10.463554382324219
    7. '	           ' → logprob: -10.463554382324219
    8. '   ' → logprob: -11.588554382324219
    9. 'i' → logprob: -11.713554382324219
    10. '	       ' → logprob: -11.713554382324219

Token 317: ' Travel' (ID: 20922)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04657520353794098
    2. ' for' → logprob: -3.1715753078460693
    3. '               ' → logprob: -5.67157506942749
    4. '           ' → logprob: -9.296575546264648
    5. '	for' → logprob: -11.421575546264648
    6. '                   ' → logprob: -11.421575546264648
    7. '	           ' → logprob: -11.921575546264648
    8. '   ' → logprob: -13.421575546264648
    9. '```' → logprob: -13.796575546264648
    10. '		           ' → logprob: -13.921575546264648

Token 318: ' east' (ID: 23557)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3396580219268799
    2. ' for' → logprob: -1.3396580219268799
    3. 'from' → logprob: -4.464657783508301
    4. 'through' → logprob: -5.214657783508301
    5. ' through' → logprob: -5.839657783508301
    6. '           ' → logprob: -6.464657783508301
    7. '               ' → logprob: -6.714657783508301
    8. '=' → logprob: -6.964657783508301
    9. ' from' → logprob: -7.464657783508301
    10. ' between' → logprob: -8.3396577835083

Token 319: 'ward' (ID: 2076)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5116825103759766
    2. '           ' → logprob: -1.2616825103759766
    3. 'for' → logprob: -3.1366825103759766
    4. '               ' → logprob: -3.5116825103759766
    5. ',' → logprob: -4.386682510375977
    6. ':' → logprob: -4.886682510375977
    7. ' segment' → logprob: -5.011682510375977
    8. 'segment' → logprob: -5.261682510375977
    9. ':
' → logprob: -5.886682510375977
    10. '<|end|>' → logprob: -6.386682510375977

Token 320: ' on' (ID: 402)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2163289189338684
    2. '               ' → logprob: -2.4663288593292236
    3. 'for' → logprob: -2.8413288593292236
    4. '           ' → logprob: -3.0913288593292236
    5. ':' → logprob: -5.841329097747803
    6. ',' → logprob: -6.466329097747803
    7. ' and' → logprob: -7.966329097747803
    8. ':
' → logprob: -8.091328620910645
    9. '                   ' → logprob: -8.341328620910645
    10. '	           ' → logprob: -9.591328620910645

Token 321: ' rails' (ID: 74357)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6778870820999146
    2. ' range' → logprob: -1.4278870820999146
    3. ' the' → logprob: -2.177886962890625
    4. ' for' → logprob: -3.302886962890625
    5. 'for' → logprob: -3.552886962890625
    6. 'the' → logprob: -4.052886962890625
    7. ' segments' → logprob: -4.052886962890625
    8. 'segments' → logprob: -4.552886962890625
    9. 'segment' → logprob: -5.677886962890625
    10. ' a' → logprob: -5.802886962890625

Token 322: ' start' (ID: 1604)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07073855400085449
    2. 'for' → logprob: -3.3207385540008545
    3. '               ' → logprob: -3.6957385540008545
    4. '           ' → logprob: -5.070738792419434
    5. '<|end|>' → logprob: -8.445738792419434
    6. '                   ' → logprob: -8.820738792419434
    7. ',' → logprob: -9.070738792419434
    8. '	       ' → logprob: -9.320738792419434
    9. '	for' → logprob: -9.445738792419434
    10. '	           ' → logprob: -9.445738792419434

Token 323: '..' (ID: 485)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.2945892810821533
    2. '           ' → logprob: -1.2945892810821533
    3. ' +' → logprob: -1.6695892810821533
    4. '               ' → logprob: -1.7945892810821533
    5. ' -' → logprob: -3.6695892810821533
    6. '-' → logprob: -3.9195892810821533
    7. '_segment' → logprob: -4.419589042663574
    8. '       ' → logprob: -5.169589042663574
    9. '                   ' → logprob: -5.419589042663574
    10. '   ' → logprob: -5.419589042663574

Token 324: 'end' (ID: 419)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.2683474123477936
    2. 'end' → logprob: -2.3933475017547607
    3. '+' → logprob: -2.7683475017547607
    4. '               ' → logprob: -3.6433475017547607
    5. '...' → logprob: -4.518347263336182
    6. '           ' → logprob: -4.893347263336182
    7. ',' → logprob: -5.518347263336182
    8. ' start' → logprob: -5.768347263336182
    9. '_start' → logprob: -6.268347263336182
    10. 'for' → logprob: -6.393347263336182

Token 325: '-' (ID: 12)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6421231031417847
    2. '           ' → logprob: -1.6421231031417847
    3. 'for' → logprob: -2.017123222351074
    4. ' for' → logprob: -2.392123222351074
    5. ':' → logprob: -4.642123222351074
    6. ':
' → logprob: -5.142123222351074
    7. '-' → logprob: -5.142123222351074
    8. '+' → logprob: -5.142123222351074
    9. ' -' → logprob: -5.392123222351074
    10. ',' → logprob: -5.392123222351074

Token 326: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.436450636712834e-05
    2. ' ' → logprob: -9.500094413757324
    3. '-' → logprob: -12.000094413757324
    4. ')' → logprob: -12.500094413757324
    5. '```' → logprob: -13.000094413757324
    6. '_' → logprob: -14.000094413757324
    7. 'end' → logprob: -14.250094413757324
    8. 'index' → logprob: -14.375094413757324
    9. ']' → logprob: -14.500094413757324
    10. ' -' → logprob: -14.562594413757324

Token 327: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2921639084815979
    2. ' for' → logprob: -1.6671638488769531
    3. '           ' → logprob: -3.417163848876953
    4. 'for' → logprob: -3.667163848876953
    5. '                   ' → logprob: -5.417163848876953
    6. ':' → logprob: -7.042163848876953
    7. ',' → logprob: -8.667163848876953
    8. '                ' → logprob: -9.167163848876953
    9. ':
' → logprob: -9.167163848876953
    10. '
' → logprob: -9.667163848876953

Token 328: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03735785558819771
    2. ' for' → logprob: -3.912357807159424
    3. '           ' → logprob: -4.162357807159424
    4. '                   ' → logprob: -7.662357807159424
    5. 'for' → logprob: -7.787357807159424
    6. ':' → logprob: -9.287358283996582
    7. '                ' → logprob: -10.912358283996582
    8. ',' → logprob: -10.912358283996582
    9. '       ' → logprob: -11.287358283996582
    10. '                
' → logprob: -11.287358283996582

Token 329: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.46617627143859863
    2. 'for' (adapté à ' for') → logprob: -1.4661762714385986
    3. '               ' → logprob: -1.9661762714385986
    4. '           ' → logprob: -6.5911760330200195
    5. '                   ' → logprob: -8.46617603302002
    6. '	for' → logprob: -9.46617603302002
    7. '	           ' → logprob: -9.96617603302002
    8. '   ' → logprob: -10.96617603302002
    9. '			' → logprob: -11.34117603302002
    10. '			   ' → logprob: -11.34117603302002

Token 330: ' rail' (ID: 21665)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.42199864983558655
    2. ' i' → logprob: -1.4219986200332642
    3. ' segment' → logprob: -3.1719987392425537
    4. 'segment' → logprob: -3.4219987392425537
    5. 'rail' → logprob: -3.7969987392425537
    6. ' rail' → logprob: -5.671998500823975
    7. ' station' → logprob: -7.421998500823975
    8. 'seg' → logprob: -7.796998500823975
    9. 'section' → logprob: -8.421998977661133
    10. 'station' → logprob: -8.546998977661133

Token 331: '_index' (ID: 7748)
  Prédit: '_segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segment' → logprob: -0.1255713254213333
    2. '_segments' → logprob: -3.5005712509155273
    3. '_index' → logprob: -3.6255712509155273
    4. '_' → logprob: -3.8755712509155273
    5. ' in' → logprob: -4.375571250915527
    6. '_idx' → logprob: -4.625571250915527
    7. ' =' → logprob: -6.000571250915527
    8. ' _' → logprob: -6.000571250915527
    9. 's' → logprob: -6.125571250915527
    10. '   ' → logprob: -6.500571250915527

Token 332: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0011813003802672029
    2. 'in' → logprob: -6.751181125640869
    3. '	in' → logprob: -12.001181602478027
    4. ' ' → logprob: -13.001181602478027
    5. 's' → logprob: -14.001181602478027
    6. '<|end|>' → logprob: -14.751181602478027
    7. '_in' → logprob: -15.501181602478027
    8. ' =' → logprob: -16.25118064880371
    9. '=' → logprob: -16.25118064880371
    10. 'd' → logprob: -16.50118064880371

Token 333: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6931579113006592
    2. 'range' → logprob: -0.6931579113006592
    3. '	range' → logprob: -12.318158149719238
    4. '(range' → logprob: -12.943158149719238
    5. '   ' → logprob: -13.193158149719238
    6. ' ' → logprob: -13.568158149719238
    7. '  ' → logprob: -15.193158149719238
    8. 'start' → logprob: -16.068157196044922
    9. '_range' → logprob: -16.443157196044922
    10. '    ' → logprob: -16.693157196044922

Token 334: '(start' (ID: 20008)
  Prédit: '(start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.004302645567804575
    2. 'start' → logprob: -5.504302501678467
    3. '(' → logprob: -9.129302978515625
    4. ' start' → logprob: -9.129302978515625
    5. ' (' → logprob: -12.629302978515625
    6. '	start' → logprob: -12.754302978515625
    7. '[start' → logprob: -14.629302978515625
    8. '=start' → logprob: -14.879302978515625
    9. '(
' → logprob: -15.754302978515625
    10. ',start' → logprob: -16.004302978515625

Token 335: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009872245602309704
    2. ' ,' → logprob: -4.6348724365234375
    3. ',end' → logprob: -9.884872436523438
    4. '+' → logprob: -10.759872436523438
    5. '   ' → logprob: -11.009872436523438
    6. '-' → logprob: -12.134872436523438
    7. ' -' → logprob: -12.384872436523438
    8. ' +' → logprob: -12.384872436523438
    9. ' ' → logprob: -13.009872436523438
    10. '	' → logprob: -13.259872436523438

Token 336: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.12692831456661224
    2. ' end' → logprob: -2.1269283294677734
    3. '(end' → logprob: -16.126928329467773
    4. '	end' → logprob: -16.251928329467773
    5. '_end' → logprob: -17.001928329467773
    6. '   ' → logprob: -17.376928329467773
    7. '[end' → logprob: -17.501928329467773
    8. '           ' → logprob: -17.626928329467773
    9. '       ' → logprob: -18.251928329467773
    10. 'End' → logprob: -18.251928329467773

Token 337: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.038190435618162155
    2. '):
' → logprob: -3.2881903648376465
    3. ' ):' → logprob: -9.163190841674805
    4. ':' → logprob: -11.663190841674805
    5. '       ' → logprob: -11.788190841674805
    6. ')' → logprob: -12.038190841674805
    7. '):
' → logprob: -12.163190841674805
    8. ' ):
' → logprob: -12.413190841674805
    9. '<|end|>' → logprob: -12.413190841674805
    10. '           ' → logprob: -12.913190841674805

Token 338: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.447619765996933
    2. '                   ' → logprob: -1.0726197957992554
    3. '           ' → logprob: -4.447619915008545
    4. '                       ' → logprob: -6.197619915008545
    5. ' self' → logprob: -7.197619915008545
    6. 'self' → logprob: -7.197619915008545
    7. '):
' → logprob: -7.447619915008545
    8. '                           ' → logprob: -7.572619915008545
    9. '   ' → logprob: -7.697619915008545
    10. ':
' → logprob: -7.822619915008545

Token 339: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.18877005577087402
    2. ' self' → logprob: -1.813770055770874
    3. '                       ' → logprob: -5.563770294189453
    4. '                   ' → logprob: -6.063770294189453
    5. '               ' → logprob: -6.063770294189453
    6. '           ' → logprob: -8.688770294189453
    7. '       ' → logprob: -9.188770294189453
    8. '	self' → logprob: -9.188770294189453
    9. '(self' → logprob: -10.063770294189453
    10. '   ' → logprob: -10.438770294189453

Token 340: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.664371848164592e-05
    2. '.ra' → logprob: -12.125016212463379
    3. 'rail' → logprob: -12.375016212463379
    4. ' .' → logprob: -12.500016212463379
    5. '.r' → logprob: -13.625016212463379
    6. '           ' → logprob: -15.000016212463379
    7. '       ' → logprob: -15.125016212463379
    8. '.train' → logprob: -15.625016212463379
    9. '‌.' → logprob: -16.125017166137695
    10. ').' → logprob: -16.625017166137695

Token 341: 'rail' (ID: 66046)
  Prédit: 'rail'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rail' → logprob: -1.2233183042553719e-05
    2. 'count' → logprob: -12.500012397766113
    3. 'increment' → logprob: -12.625012397766113
    4. 'rails' → logprob: -13.750012397766113
    5. ' rail' → logprob: -13.750012397766113
    6. '   ' → logprob: -14.750012397766113
    7. 'ra' → logprob: -15.125012397766113
    8. '           ' → logprob: -15.375012397766113
    9. '       ' → logprob: -15.500012397766113
    10. 'travel' → logprob: -15.625012397766113

Token 342: '_segments' (ID: 142925)
  Prédit: '_segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segments' → logprob: -3.297462171758525e-05
    2. 'segments' → logprob: -10.375033378601074
    3. 'Segments' → logprob: -14.125033378601074
    4. '_' → logprob: -14.750033378601074
    5. '_indices' → logprob: -15.500033378601074
    6. '_segment' → logprob: -15.625033378601074
    7. 's' → logprob: -16.625032424926758
    8. '_index' → logprob: -16.750032424926758
    9. '           ' → logprob: -17.500032424926758
    10. ' segments' → logprob: -17.750032424926758

Token 343: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0002632430987432599
    2. '[self' → logprob: -8.250263214111328
    3. '                   ' → logprob: -13.375263214111328
    4. '[
' → logprob: -16.000263214111328
    5. ' [' → logprob: -16.375263214111328
    6. '```' → logprob: -16.875263214111328
    7. '[assembly' → logprob: -17.000263214111328
    8. '       ' → logprob: -17.750263214111328
    9. '   ' → logprob: -18.000263214111328
    10. '               ' → logprob: -18.125263214111328

Token 344: 'rail' (ID: 66046)
  Prédit: 'rail'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rail' → logprob: -5.319370302458992e-06
    2. ' rail' → logprob: -12.500005722045898
    3. 'rails' → logprob: -14.000005722045898
    4. 'ra' → logprob: -14.875005722045898
    5. '[' → logprob: -16.1250057220459
    6. 'raid' → logprob: -16.3750057220459
    7. '   ' → logprob: -17.1250057220459
    8. 'ail' → logprob: -17.5000057220459
    9. 'r' → logprob: -17.6250057220459
    10. 'rai' → logprob: -17.7500057220459

Token 345: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.0007212492637336254
    2. 'index' → logprob: -7.750721454620361
    3. '_segments' → logprob: -8.250720977783203
    4. 's' → logprob: -12.000720977783203
    5. 'segments' → logprob: -12.000720977783203
    6. '_segment' → logprob: -12.125720977783203
    7. '_' → logprob: -13.125720977783203
    8. '_indices' → logprob: -13.500720977783203
    9. 'nd' → logprob: -13.875720977783203
    10. 'Index' → logprob: -13.875720977783203

Token 346: ' -' (ID: 533)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.46858012676239014
    2. '.trip' → logprob: -1.2185801267623901
    3. '].' → logprob: -3.2185802459716797
    4. ').' → logprob: -3.9685802459716797
    5. ' .' → logprob: -4.34358024597168
    6. '.increment' → logprob: -5.96858024597168
    7. '.tab' → logprob: -6.84358024597168
    8. '.ticket' → logprob: -7.59358024597168
    9. '}.' → logprob: -8.09358024597168
    10. '           ' → logprob: -8.59358024597168

Token 347: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. '<|end|>' → logprob: -17.625024795532227
    4. '0' → logprob: -19.000024795532227
    5. '   ' → logprob: -19.375024795532227
    6. '```' → logprob: -20.125024795532227
    7. '=' → logprob: -20.625024795532227
    8. '  ' → logprob: -21.312524795532227
    9. 'to' → logprob: -21.437524795532227
    10. '<|end|>' → logprob: -21.812524795532227

Token 348: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.875000953674316
    3. '0' → logprob: -16.375001907348633
    4. '   ' → logprob: -19.250001907348633
    5. '```' → logprob: -19.625001907348633
    6. '<|end|>' → logprob: -20.000001907348633
    7. '2' → logprob: -20.500001907348633
    8. '=' → logprob: -20.687501907348633
    9. ')' → logprob: -21.375001907348633
    10. '۱' → logprob: -21.375001907348633

Token 349: '].' (ID: 1651)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.48105692863464355
    2. '.trip' → logprob: -0.9810569286346436
    3. '].' → logprob: -5.981057167053223
    4. ').' → logprob: -6.231057167053223
    5. ' .' → logprob: -6.481057167053223
    6. '.increment' → logprob: -7.356057167053223
    7. '.ticket' → logprob: -10.106057167053223
    8. '.tab' → logprob: -10.231057167053223
    9. '                   ' → logprob: -10.981057167053223
    10. '}.' → logprob: -10.981057167053223

Token 350: 'trip' (ID: 51122)
  Prédit: 'trip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trip' → logprob: -1.9361264946837764e-07
    2. ' trip' → logprob: -16.5
    3. '_trip' → logprob: -21.625
    4. '.trip' → logprob: -22.5
    5. '-trip' → logprob: -23.5
    6. 'travel' → logprob: -24.125
    7. '   ' → logprob: -24.375
    8. 'trial' → logprob: -24.75
    9. 'Trip' → logprob: -25.0
    10. 'tour' → logprob: -26.375

Token 351: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: 0.0
    2. 'count' → logprob: -16.875
    3. '_' → logprob: -20.875
    4. '\' → logprob: -21.25
    5. '_counts' → logprob: -22.125
    6. '_trip' → logprob: -22.25
    7. '_cost' → logprob: -22.625
    8. 's' → logprob: -22.875
    9. '_COUNT' → logprob: -22.875
    10. '__' → logprob: -23.0

Token 352: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.02326178550720215
    2. ' +=' → logprob: -3.773261785507202
    3. ']+=' → logprob: -11.273262023925781
    4. '   ' → logprob: -13.148262023925781
    5. '+' → logprob: -14.023262023925781
    6. '+='' → logprob: -15.273262023925781
    7. '```' → logprob: -16.02326202392578
    8. '+="' → logprob: -16.52326202392578
    9. '<|end|>' → logprob: -16.52326202392578
    10. '+=(' → logprob: -16.64826202392578

Token 353: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.13388703338569e-06
    2. ' ' → logprob: -11.625009536743164
    3. '   ' → logprob: -15.750009536743164
    4. '```' → logprob: -18.000009536743164
    5. '0' → logprob: -19.187509536743164
    6. '           ' → logprob: -19.750009536743164
    7. '2' → logprob: -19.750009536743164
    8. ' ' → logprob: -19.937509536743164
    9. '+' → logprob: -20.125009536743164
    10. 's' → logprob: -20.250009536743164

Token 354: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.00000286102295
    3. '   ' → logprob: -16.875001907348633
    4. '```' → logprob: -19.000001907348633
    5. '0' → logprob: -19.125001907348633
    6. '+' → logprob: -20.000001907348633
    7. '۱' → logprob: -20.062501907348633
    8. '2' → logprob: -20.312501907348633
    9. '１' → logprob: -20.312501907348633
    10. '  ' → logprob: -20.687501907348633

Token 355: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00018697108316700906
    2. 'else' → logprob: -9.750186920166016
    3. ' else' → logprob: -10.500186920166016
    4. '		' → logprob: -10.500186920166016
    5. '<|end|>' → logprob: -10.625186920166016
    6. 'elif' → logprob: -10.875186920166016
    7. '       ' → logprob: -11.625186920166016
    8. '                   ' → logprob: -12.500186920166016
    9. '<|end|>' → logprob: -12.875186920166016
    10. ' elif' → logprob: -12.875186920166016

Token 356: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08253143727779388
    2. '<|end|>' → logprob: -2.582531452178955
    3. '       ' → logprob: -6.832531452178955
    4. '<|end|>' → logprob: -7.082531452178955
    5. '		' → logprob: -7.957531452178955
    6. '               ' → logprob: -8.082530975341797
    7. 'elif' → logprob: -8.707530975341797
    8. '                   ' → logprob: -8.957530975341797
    9. '[' → logprob: -9.207530975341797
    10. '          ' → logprob: -9.457530975341797

Token 357: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -1.0349076986312866
    2. ' else' → logprob: -1.6599076986312866
    3. '           ' → logprob: -1.7849076986312866
    4. 'elif' → logprob: -1.9099076986312866
    5. '       ' → logprob: -2.409907817840576
    6. ' elif' → logprob: -3.034907817840576
    7. '               ' → logprob: -8.159907341003418
    8. '        ' → logprob: -9.034907341003418
    9. '	elif' → logprob: -9.409907341003418
    10. '   ' → logprob: -10.159907341003418

Token 358: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23082807660102844
    2. ':
' → logprob: -1.605828046798706
    3. '               ' → logprob: -5.355828285217285
    4. '           ' → logprob: -7.605828285217285
    5. '       ' → logprob: -9.980828285217285
    6. '            ' → logprob: -10.105828285217285
    7. ' :' → logprob: -10.480828285217285
    8. ' :
' → logprob: -10.980828285217285
    9. '                ' → logprob: -12.105828285217285
    10. ':
' → logprob: -12.105828285217285

Token 359: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05616290867328644
    2. ' for' → logprob: -3.1811628341674805
    3. 'for' → logprob: -4.4311628341674805
    4. '           ' → logprob: -7.1811628341674805
    5. '#' → logprob: -8.43116283416748
    6. ' #' → logprob: -9.55616283416748
    7. '                ' → logprob: -10.55616283416748
    8. '            ' → logprob: -10.55616283416748
    9. '              ' → logprob: -11.05616283416748
    10. '       ' → logprob: -11.18116283416748

Token 360: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5234591960906982
    2. 'for' → logprob: -1.0234591960906982
    3. '#' (adapté à ' #') → logprob: -3.6484591960906982
    4. '               ' → logprob: -4.023459434509277
    5. ' #' → logprob: -6.148459434509277
    6. '           ' → logprob: -6.273459434509277
    7. '	for' → logprob: -9.273459434509277
    8. '                   ' → logprob: -10.148459434509277
    9. '       ' → logprob: -10.398459434509277
    10. '   ' → logprob: -10.523459434509277

Token 361: ' Travel' (ID: 20922)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2022726982831955
    2. 'for' → logprob: -1.702272653579712
    3. 'Travel' → logprob: -7.577272891998291
    4. ' travel' → logprob: -8.827272415161133
    5. '               ' → logprob: -9.327272415161133
    6. ' Travel' → logprob: -9.952272415161133
    7. '           ' → logprob: -10.327272415161133
    8. 'travel' → logprob: -11.452272415161133
    9. '#' → logprob: -12.077272415161133
    10. ' #' → logprob: -12.202272415161133

Token 362: ' west' (ID: 14078)
  Prédit: ' west'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' west' → logprob: -0.020960718393325806
    2. ' east' → logprob: -4.645960807800293
    3. ' reverse' → logprob: -5.145960807800293
    4. 'west' → logprob: -5.770960807800293
    5. 'reverse' → logprob: -6.895960807800293
    6. ' range' → logprob: -8.145960807800293
    7. 'east' → logprob: -8.395960807800293
    8. 'from' → logprob: -9.145960807800293
    9. ' backward' → logprob: -9.145960807800293
    10. ' reversed' → logprob: -9.270960807800293

Token 363: 'ward' (ID: 2076)
  Prédit: 'ward'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ward' → logprob: -0.000601169012952596
    2. 'for' → logprob: -8.125600814819336
    3. 'wards' → logprob: -9.375600814819336
    4. '```' → logprob: -9.375600814819336
    5. '               ' → logprob: -9.750600814819336
    6. '-' → logprob: -9.750600814819336
    7. '           ' → logprob: -11.375600814819336
    8. 'ard' → logprob: -13.125600814819336
    9. '   ' → logprob: -13.625600814819336
    10. 'on' → logprob: -14.500600814819336

Token 364: ' on' (ID: 402)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7572941184043884
    2. ' on' → logprob: -1.2572941780090332
    3. ' for' → logprob: -1.7572941780090332
    4. 'on' → logprob: -2.882294178009033
    5. '               ' → logprob: -4.132294178009033
    6. ' in' → logprob: -7.257294178009033
    7. '                   ' → logprob: -7.257294178009033
    8. '           ' → logprob: -7.757294178009033
    9. 'in' → logprob: -8.882293701171875
    10. ':' → logprob: -10.882293701171875

Token 365: ' rails' (ID: 74357)
  Prédit: 'rails'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rails' → logprob: -0.10735456645488739
    2. 'range' → logprob: -2.8573546409606934
    3. ' rails' → logprob: -3.2323546409606934
    4. ' range' → logprob: -5.607354640960693
    5. 'self' → logprob: -7.482354640960693
    6. 'rail' → logprob: -8.107354164123535
    7. 'Rails' → logprob: -9.357354164123535
    8. 'for' → logprob: -9.482354164123535
    9. 'the' → logprob: -9.482354164123535
    10. 'ranges' → logprob: -9.982354164123535

Token 366: ' end' (ID: 1268)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22794252634048462
    2. ' for' → logprob: -1.6029424667358398
    3. ' in' → logprob: -6.47794246673584
    4. 'range' → logprob: -7.60294246673584
    5. ' range' → logprob: -8.97794246673584
    6. '                   ' → logprob: -8.97794246673584
    7. 'in' → logprob: -9.35294246673584
    8. '               ' → logprob: -9.72794246673584
    9. '           ' → logprob: -10.60294246673584
    10. 'from' → logprob: -10.72794246673584

Token 367: '..' (ID: 485)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004971643444150686
    2. '..' → logprob: -6.129971504211426
    3. '-' → logprob: -6.629971504211426
    4. ',end' → logprob: -8.004971504211426
    5. ' ,' → logprob: -8.254971504211426
    6. ' -' → logprob: -8.754971504211426
    7. '...' → logprob: -9.004971504211426
    8. '+' → logprob: -9.129971504211426
    9. 'index' → logprob: -9.504971504211426
    10. 'for' → logprob: -9.754971504211426

Token 368: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.0034596563782542944
    2. ' start' → logprob: -5.753459453582764
    3. '(start' → logprob: -8.253459930419922
    4. '(' → logprob: -10.878459930419922
    5. ' (' → logprob: -13.128459930419922
    6. 'end' → logprob: -15.378459930419922
    7. '[start' → logprob: -15.378459930419922
    8. '	start' → logprob: -16.878459930419922
    9. 'Start' → logprob: -17.128459930419922
    10. ':start' → logprob: -17.503459930419922

Token 369: '-' (ID: 12)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.31195831298828125
    2. '               ' → logprob: -2.0619583129882812
    3. ' for' → logprob: -2.6869583129882812
    4. '-' → logprob: -2.8119583129882812
    5. '                   ' → logprob: -4.936958312988281
    6. ' -' → logprob: -5.686958312988281
    7. '```' → logprob: -7.936958312988281
    8. ',' → logprob: -8.061958312988281
    9. '           ' → logprob: -8.186958312988281
    10. '+' → logprob: -8.561958312988281

Token 370: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.054492443799972534
    2. '2' → logprob: -3.179492473602295
    3. '-' → logprob: -4.554492473602295
    4. 'end' → logprob: -7.304492473602295
    5. ' ' → logprob: -9.054491996765137
    6. ' -' → logprob: -9.804491996765137
    7. 'start' → logprob: -10.679491996765137
    8. '   ' → logprob: -11.179491996765137
    9. '```' → logprob: -11.804491996765137
    10. '(' → logprob: -13.116991996765137

Token 371: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05608109012246132
    2. ' for' → logprob: -3.3060810565948486
    3. 'for' → logprob: -4.056081295013428
    4. '                   ' → logprob: -7.556081295013428
    5. '           ' → logprob: -11.18108081817627
    6. '                ' → logprob: -11.43108081817627
    7. ',' → logprob: -12.68108081817627
    8. '              ' → logprob: -13.18108081817627
    9. '```' → logprob: -13.18108081817627
    10. '       ' → logprob: -13.80608081817627

Token 372: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.17473995685577393
    2. ' for' → logprob: -2.2997398376464844
    3. 'for' → logprob: -2.9247398376464844
    4. '           ' → logprob: -5.174739837646484
    5. '                   ' → logprob: -7.424739837646484
    6. '       ' → logprob: -9.799739837646484
    7. '	for' → logprob: -11.174739837646484
    8. '```' → logprob: -11.549739837646484
    9. '			' → logprob: -11.799739837646484
    10. '   ' → logprob: -11.799739837646484

Token 373: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.02977907471358776
    2. ' for' → logprob: -3.5297789573669434
    3. '               ' → logprob: -10.779779434204102
    4. '           ' → logprob: -12.279779434204102
    5. '                   ' → logprob: -12.904779434204102
    6. '	for' → logprob: -14.654779434204102
    7. '       ' → logprob: -16.4047794342041
    8. '   ' → logprob: -16.9047794342041
    9. '```' → logprob: -17.5297794342041
    10. ' ' → logprob: -18.4047794342041

Token 374: ' rail' (ID: 21665)
  Prédit: 'rail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rail' → logprob: -0.22541698813438416
    2. ' rail' → logprob: -1.6004170179367065
    3. 'i' → logprob: -13.475417137145996
    4. 'Rail' → logprob: -14.350417137145996
    5. 'ra' → logprob: -14.850417137145996
    6. ' railway' → logprob: -14.975417137145996
    7. 'index' → logprob: -15.225417137145996
    8. '`' → logprob: -15.600417137145996
    9. 'rails' → logprob: -15.600417137145996
    10. '```' → logprob: -15.725417137145996

Token 375: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -3.2378600735682994e-05
    2. 'index' → logprob: -10.500032424926758
    3. '_' → logprob: -12.500032424926758
    4. 'in' → logprob: -15.125032424926758
    5. '_in' → logprob: -15.875032424926758
    6. 'Index' → logprob: -16.125032424926758
    7. '_segment' → logprob: -16.500032424926758
    8. 'dex' → logprob: -16.750032424926758
    9. 'd' → logprob: -16.875032424926758
    10. 'x' → logprob: -17.250032424926758

Token 376: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005933655425906181
    2. 'in' → logprob: -5.13093376159668
    3. 'd' → logprob: -13.63093376159668
    4. 'import' → logprob: -14.25593376159668
    5. ' ' → logprob: -14.50593376159668
    6. 'n' → logprob: -15.13093376159668
    7. 's' → logprob: -15.25593376159668
    8. '   ' → logprob: -15.38093376159668
    9. 'range' → logprob: -15.63093376159668
    10. 'In' → logprob: -16.19343376159668

Token 377: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0005530327325686812
    2. ' range' → logprob: -7.500553131103516
    3. '   ' → logprob: -17.875553131103516
    4. '(range' → logprob: -17.875553131103516
    5. '	range' → logprob: -19.375553131103516
    6. ' ' → logprob: -19.500553131103516
    7. 're' → logprob: -19.625553131103516
    8. 'in' → logprob: -20.250553131103516
    9. '
' → logprob: -20.250553131103516
    10. 'Range' → logprob: -20.750553131103516

Token 378: '(end' (ID: 29409)
  Prédit: '(end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(end' → logprob: -0.004092292860150337
    2. 'end' → logprob: -5.504092216491699
    3. 'range' → logprob: -11.3790922164917
    4. ' end' → logprob: -13.8790922164917
    5. '(range' → logprob: -14.3790922164917
    6. '[end' → logprob: -14.7540922164917
    7. '(' → logprob: -15.2540922164917
    8. '=end' → logprob: -15.8790922164917
    9. '(min' → logprob: -16.129093170166016
    10. ' (' → logprob: -17.254093170166016

Token 379: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.256334695033729e-05
    2. ' ,' → logprob: -10.125082969665527
    3. '           ' → logprob: -11.000082969665527
    4. ',start' → logprob: -11.000082969665527
    5. ',end' → logprob: -12.875082969665527
    6. '   ' → logprob: -13.000082969665527
    7. '               ' → logprob: -13.375082969665527
    8. ',
' → logprob: -13.875082969665527
    9. 'start' → logprob: -14.375082969665527
    10. '       ' → logprob: -14.750082969665527

Token 380: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.0002613358374219388
    2. ' start' → logprob: -8.250261306762695
    3. '[start' → logprob: -17.500261306762695
    4. '   ' → logprob: -18.875261306762695
    5. 'star' → logprob: -18.875261306762695
    6. '(start' → logprob: -19.125261306762695
    7. '           ' → logprob: -19.125261306762695
    8. '=start' → logprob: -19.375261306762695
    9. ':start' → logprob: -19.500261306762695
    10. '               ' → logprob: -19.625261306762695

Token 381: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1489580273628235
    2. '):
' → logprob: -2.0239579677581787
    3. '-' → logprob: -5.523958206176758
    4. ' -' → logprob: -6.398958206176758
    5. ',' → logprob: -8.023958206176758
    6. '):

' → logprob: -9.648958206176758
    7. '           ' → logprob: -9.898958206176758
    8. ' ):' → logprob: -10.023958206176758
    9. '       ' → logprob: -10.148958206176758
    10. '):
' → logprob: -11.023958206176758

Token 382: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.03249655291438103
    2. '               ' → logprob: -4.282496452331543
    3. 'self' → logprob: -4.407496452331543
    4. ' self' → logprob: -5.407496452331543
    5. '   ' → logprob: -7.032496452331543
    6. '                       ' → logprob: -7.657496452331543
    7. '           ' → logprob: -9.532496452331543
    8. '       ' → logprob: -10.157496452331543
    9. ' ' → logprob: -12.157496452331543
    10. '                  ' → logprob: -12.157496452331543

Token 383: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0070234378799796104
    2. ' self' → logprob: -5.007023334503174
    3. '               ' → logprob: -8.382023811340332
    4. '                   ' → logprob: -9.757023811340332
    5. '   ' → logprob: -11.632023811340332
    6. '           ' → logprob: -12.382023811340332
    7. '                       ' → logprob: -12.757023811340332
    8. '	self' → logprob: -13.257023811340332
    9. '       ' → logprob: -13.632023811340332
    10. ' ' → logprob: -13.757023811340332

Token 384: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.004080420359969139
    2. 'rail' → logprob: -5.504080295562744
    3. ' rail' → logprob: -13.629080772399902
    4. 'rails' → logprob: -14.504080772399902
    5. 'Rail' → logprob: -15.754080772399902
    6. '           ' → logprob: -17.129079818725586
    7. ' .' → logprob: -17.129079818725586
    8. 'self' → logprob: -17.629079818725586
    9. 'ra' → logprob: -17.754079818725586
    10. 'Rails' → logprob: -17.754079818725586

Token 385: 'rail' (ID: 66046)
  Prédit: 'rail'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rail' → logprob: -1.0280383548888494e-06
    2. ' rail' → logprob: -14.000000953674316
    3. '.' → logprob: -17.125001907348633
    4. 'Rail' → logprob: -17.250001907348633
    5. 'travel' → logprob: -18.000001907348633
    6. 'rails' → logprob: -18.500001907348633
    7. 'ra' → logprob: -18.750001907348633
    8. 'self' → logprob: -19.375001907348633
    9. '
' → logprob: -19.375001907348633
    10. 'train' → logprob: -19.750001907348633

Token 386: '_segments' (ID: 142925)
  Prédit: '_segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segments' → logprob: -2.236549335066229e-05
    2. '_index' → logprob: -11.250021934509277
    3. 'segments' → logprob: -12.000021934509277
    4. 'index' → logprob: -13.875021934509277
    5. 'Segments' → logprob: -14.000021934509277
    6. '_segment' → logprob: -14.250021934509277
    7. '_indices' → logprob: -14.875021934509277
    8. 's' → logprob: -16.375022888183594
    9. '\' → logprob: -16.750022888183594
    10. '_' → logprob: -17.000022888183594

Token 387: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.128163257315464e-07
    2. '[
' → logprob: -15.75
    3. 'index' → logprob: -17.625
    4. '   ' → logprob: -18.0
    5. '```' → logprob: -18.25
    6. 'rail' → logprob: -18.375
    7. ' [' → logprob: -18.75
    8. '           ' → logprob: -19.125
    9. '[index' → logprob: -19.125
    10. '[self' → logprob: -19.125

Token 388: 'rail' (ID: 66046)
  Prédit: 'rail'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rail' → logprob: -4.320199877838604e-07
    2. ' rail' → logprob: -15.125
    3. '[' → logprob: -17.5
    4. 'rael' → logprob: -18.25
    5. 'rial' → logprob: -18.5
    6. 'rails' → logprob: -19.5
    7. 'ra' → logprob: -19.625
    8. 'ral' → logprob: -20.25
    9. '```' → logprob: -20.25
    10. 'Rail' → logprob: -20.375

Token 389: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.0010344763286411762
    2. 'index' → logprob: -6.876034259796143
    3. 'Index' → logprob: -14.6260347366333
    4. '-' → logprob: -15.2510347366333
    5. '[index' → logprob: -15.3760347366333
    6. '```' → logprob: -15.3760347366333
    7. '   ' → logprob: -16.626033782958984
    8. '_INDEX' → logprob: -16.626033782958984
    9. 'ind' → logprob: -17.001033782958984
    10. '[' → logprob: -17.001033782958984

Token 390: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0889984667301178
    2. ' -' → logprob: -2.463998556137085
    3. '[' → logprob: -10.088998794555664
    4. '[-' → logprob: -12.088998794555664
    5. ' ' → logprob: -12.588998794555664
    6. '   ' → logprob: -13.213998794555664
    7. '           ' → logprob: -13.838998794555664
    8. '                   ' → logprob: -14.088998794555664
    9. 'def' → logprob: -14.213998794555664
    10. ']' → logprob: -14.463998794555664

Token 391: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006289214943535626
    2. ' ' → logprob: -7.37562894821167
    3. '-' → logprob: -13.625628471374512
    4. 'start' → logprob: -15.125628471374512
    5. '   ' → logprob: -15.688128471374512
    6. ' -' → logprob: -15.813128471374512
    7. '```' → logprob: -16.125629425048828
    8. ')' → logprob: -16.375629425048828
    9. 'end' → logprob: -16.875629425048828
    10. '
' → logprob: -16.938129425048828

Token 392: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007135047344490886
    2. 'start' → logprob: -7.375713348388672
    3. '-' → logprob: -9.750713348388672
    4. ' ' → logprob: -11.000713348388672
    5. 'end' → logprob: -12.250713348388672
    6. '0' → logprob: -13.625713348388672
    7. ' start' → logprob: -13.750713348388672
    8. 'index' → logprob: -13.750713348388672
    9. '   ' → logprob: -14.250713348388672
    10. '
' → logprob: -14.375713348388672

Token 393: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.32999956607818604
    2. '.' → logprob: -1.829999566078186
    3. ').' → logprob: -2.7049994468688965
    4. '.trip' → logprob: -2.9549994468688965
    5. ' .' → logprob: -7.2049994468688965
    6. '}.' → logprob: -7.3299994468688965
    7. 'trip' → logprob: -9.329999923706055
    8. '                   ' → logprob: -10.079999923706055
    9. ' ].' → logprob: -10.329999923706055
    10. '           ' → logprob: -10.579999923706055

Token 394: 'trip' (ID: 51122)
  Prédit: 'trip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trip' → logprob: -2.339278580620885e-06
    2. ' trip' → logprob: -13.000001907348633
    3. '.trip' → logprob: -18.000001907348633
    4. '_trip' → logprob: -22.125001907348633
    5. 'trial' → logprob: -22.250001907348633
    6. '   ' → logprob: -22.500001907348633
    7. 'tr' → logprob: -23.000001907348633
    8. '
' → logprob: -23.250001907348633
    9. '-trip' → logprob: -23.375001907348633
    10. '```' → logprob: -24.500001907348633

Token 395: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -1.3856492842023727e-06
    2. '._' → logprob: -13.875000953674316
    3. 'count' → logprob: -15.750000953674316
    4. '                   ' → logprob: -17.000001907348633
    5. '_index' → logprob: -17.000001907348633
    6. ']_' → logprob: -17.000001907348633
    7. ' _' → logprob: -17.375001907348633
    8. ')_' → logprob: -17.500001907348633
    9. '\' → logprob: -17.875001907348633
    10. '_code' → logprob: -18.125001907348633

Token 396: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.16046468913555145
    2. ' +=' → logprob: -1.9104646444320679
    3. '.' → logprob: -9.1604642868042
    4. ']+=' → logprob: -9.2854642868042
    5. '           ' → logprob: -10.7854642868042
    6. '   ' → logprob: -12.2854642868042
    7. '    ' → logprob: -12.9104642868042
    8. '       ' → logprob: -12.9104642868042
    9. ' .' → logprob: -13.0354642868042
    10. '            ' → logprob: -13.0354642868042

Token 397: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.5491004129871726e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -17.250045776367188
    4. '```' → logprob: -19.500045776367188
    5. '-' → logprob: -19.625045776367188
    6. '0' → logprob: -19.937545776367188
    7. '１' → logprob: -20.125045776367188
    8. '
' → logprob: -20.312545776367188
    9. '<|end|>' → logprob: -20.375045776367188
    10. '           ' → logprob: -20.437545776367188

Token 398: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '<|end|>' → logprob: -17.875
    4. '```' → logprob: -18.125
    5. '0' → logprob: -18.75
    6. '   ' → logprob: -19.125
    7. '-' → logprob: -19.375
    8. '۱' → logprob: -20.75
    9. '１' → logprob: -20.9375
    10. '১' → logprob: -21.5

Token 399: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5262911319732666
    2. '<|end|>' → logprob: -1.2762911319732666
    3. '   ' → logprob: -2.1512911319732666
    4. '<|end|>' → logprob: -5.1512908935546875
    5. '```' → logprob: -5.7762908935546875
    6. '

' → logprob: -6.4012908935546875
    7. '    
' → logprob: -6.4012908935546875
    8. 'def' → logprob: -6.9012908935546875
    9. ' def' → logprob: -9.276290893554688
    10. ' ' → logprob: -9.651290893554688

Token 400: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3968435227870941
    2. '
' → logprob: -1.1468435525894165
    3. '<|end|>' → logprob: -5.646843433380127
    4. 'def' → logprob: -5.771843433380127
    5. ' def' → logprob: -6.396843433380127
    6. '    
' → logprob: -7.521843433380127
    7. '```' → logprob: -7.521843433380127
    8. '	def' → logprob: -8.271843910217285
    9. '<|end|>' → logprob: -9.396843910217285
    10. '

' → logprob: -9.521843910217285

Token 401: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.062712162733078
    2. 'def' (adapté à ' def') → logprob: -2.8127121925354004
    3. ' def' → logprob: -7.4377121925354
    4. '
' → logprob: -9.062711715698242
    5. '    
' → logprob: -10.937711715698242
    6. '```' → logprob: -10.937711715698242
    7. '	def' → logprob: -13.187711715698242
    8. ' ' → logprob: -14.062711715698242
    9. '<|end|>' → logprob: -14.937711715698242
    10. '  ' → logprob: -15.062711715698242

Token 402: ' calculate' (ID: 17950)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.15402428805828094
    2. ' compute' → logprob: -3.029024362564087
    3. 'opt' → logprob: -3.154024362564087
    4. 'calculate' → logprob: -3.154024362564087
    5. 'def' → logprob: -5.279024124145508
    6. ' calculate' → logprob: -6.154024124145508
    7. ' optimize' → logprob: -6.779024124145508
    8. ' def' → logprob: -8.154024124145508
    9. 'total' → logprob: -8.904024124145508
    10. 'estimate' → logprob: -9.904024124145508

Token 403: '_min' (ID: 15950)
  Prédit: '_total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_total' → logprob: -0.002202593954280019
    2. '_cost' → logprob: -6.25220251083374
    3. '_' → logprob: -8.502202987670898
    4. '_opt' → logprob: -10.377202987670898
    5. 'total' → logprob: -11.127202987670898
    6. '_tot' → logprob: -11.752202987670898
    7. '_final' → logprob: -11.877202987670898
    8. '_all' → logprob: -13.377202987670898
    9. '_trip' → logprob: -13.377202987670898
    10. '_initial' → logprob: -13.502202987670898

Token 404: 'imum' (ID: 4556)
  Prédit: '_cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.09427390992641449
    2. '_total' → logprob: -2.594273805618286
    3. 'imize' → logprob: -4.594274044036865
    4. 'imum' → logprob: -5.844274044036865
    5. 'imal' → logprob: -6.469274044036865
    6. 'imized' → logprob: -7.969274044036865
    7. '_' → logprob: -8.219273567199707
    8. 'cost' → logprob: -11.094273567199707
    9. '_trip' → logprob: -11.219273567199707
    10. '_tr' → logprob: -11.344273567199707

Token 405: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.062153544276952744
    2. '_total' → logprob: -2.8121535778045654
    3. '_' → logprob: -9.062153816223145
    4. 'cost' → logprob: -10.062153816223145
    5. '_trip' → logprob: -11.562153816223145
    6. '_tr' → logprob: -11.937153816223145
    7. 'total' → logprob: -12.437153816223145
    8. '_payment' → logprob: -12.812153816223145
    9. '_price' → logprob: -13.812153816223145
    10. '_possible' → logprob: -14.312153816223145

Token 406: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.005277157761156559
    2. '(' → logprob: -5.255277156829834
    3. 'self' → logprob: -10.130277633666992
    4. '   ' → logprob: -12.880277633666992
    5. 's' → logprob: -15.130277633666992
    6. '(
' → logprob: -15.380277633666992
    7. '(Self' → logprob: -15.755277633666992
    8. '       ' → logprob: -15.880277633666992
    9. ' (' → logprob: -16.130277633666992
    10. 'def' → logprob: -16.880277633666992

Token 407: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.3946421444416046
    2. 'self' → logprob: -1.7696421146392822
    3. '):' → logprob: -2.5196421146392822
    4. '):
' → logprob: -2.7696421146392822
    5. '   ' → logprob: -5.269642353057861
    6. ')' → logprob: -5.394642353057861
    7. '       ' → logprob: -6.394642353057861
    8. 'def' → logprob: -7.644642353057861
    9. '	self' → logprob: -8.394641876220703
    10. ')(' → logprob: -8.644641876220703

Token 408: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006647797417826951
    2. 'total' → logprob: -8.125664710998535
    3. 'self' → logprob: -8.375664710998535
    4. ' total' → logprob: -9.625664710998535
    5. 'cost' → logprob: -10.500664710998535
    6. ' self' → logprob: -10.875664710998535
    7. '   ' → logprob: -11.625664710998535
    8. '```' → logprob: -11.625664710998535
    9. ' cost' → logprob: -12.375664710998535
    10. '
' → logprob: -13.500664710998535

Token 409: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.20680807530879974
    2. 'total' → logprob: -2.331808090209961
    3. '       ' → logprob: -2.581808090209961
    4. 'cost' → logprob: -4.706808090209961
    5. ' self' → logprob: -5.706808090209961
    6. ' total' → logprob: -6.956808090209961
    7. '#' → logprob: -8.331808090209961
    8. 'for' → logprob: -8.706808090209961
    9. 'def' → logprob: -8.956808090209961
    10. ' cost' → logprob: -9.456808090209961

Token 410: '.count' (ID: 14019)
  Prédit: '.total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.total' → logprob: -0.02405719831585884
    2. '.count' → logprob: -3.774057149887085
    3. '.' → logprob: -7.274057388305664
    4. 'total' → logprob: -9.274057388305664
    5. '.calculate' → logprob: -11.524057388305664
    6. '.trip' → logprob: -11.774057388305664
    7. '   ' → logprob: -13.524057388305664
    8. 'count' → logprob: -13.649057388305664
    9. '.travel' → logprob: -13.899057388305664
    10. '.sum' → logprob: -14.274057388305664

Token 411: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: 0.0
    2. 'rail' → logprob: -17.625
    3. '_
' → logprob: -19.375
    4. '\' → logprob: -20.0
    5. ' _' → logprob: -20.75
    6. '_

' → logprob: -21.125
    7. '_usage' → logprob: -21.25
    8. '‌' → logprob: -21.75
    9. '_total' → logprob: -21.75
    10. 'Rail' → logprob: -21.875

Token 412: 'rail' (ID: 66046)
  Prédit: 'rail'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rail' → logprob: -1.0325924449716695e-05
    2. '_' → logprob: -11.50001049041748
    3. ' rail' → logprob: -16.125009536743164
    4. 'travel' → logprob: -17.000009536743164
    5. 'Rail' → logprob: -17.250009536743164
    6. 'rails' → logprob: -17.250009536743164
    7. '```' → logprob: -18.000009536743164
    8. '
' → logprob: -18.875009536743164
    9. 'ra' → logprob: -19.000009536743164
    10. '-' → logprob: -19.250009536743164

Token 413: '_usage' (ID: 77753)
  Prédit: '_usage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_usage' → logprob: -0.0005718595930375159
    2. 'usage' → logprob: -7.5005717277526855
    3. '_' → logprob: -11.625572204589844
    4. '_segments' → logprob: -12.500572204589844
    5. '_use' → logprob: -13.375572204589844
    6. '   ' → logprob: -13.375572204589844
    7. ' usage' → logprob: -13.750572204589844
    8. '       ' → logprob: -14.000572204589844
    9. '_USAGE' → logprob: -15.000572204589844
    10. 'Usage' → logprob: -15.125572204589844

Token 414: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39394375681877136
    2. '
' → logprob: -1.1439437866210938
    3. 'for' → logprob: -5.643943786621094
    4. ' for' → logprob: -5.893943786621094
    5. '        
' → logprob: -8.018943786621094
    6. 'self' → logprob: -8.643943786621094
    7. '<|end|>' → logprob: -9.643943786621094
    8. 'total' → logprob: -9.893943786621094
    9. ',' → logprob: -10.393943786621094
    10. '   ' → logprob: -10.768943786621094

Token 415: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04400970786809921
    2. '
' → logprob: -3.2940096855163574
    3. 'for' → logprob: -5.669009685516357
    4. 'total' → logprob: -6.794009685516357
    5. '        
' → logprob: -7.669009685516357
    6. ' for' → logprob: -7.919009685516357
    7. 'self' → logprob: -8.169010162353516
    8. '```' → logprob: -9.044010162353516
    9. '   ' → logprob: -10.294010162353516
    10. ' total' → logprob: -10.419010162353516

Token 416: ' #' (ID: 1069)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.31973984837532043
    2. 'self' → logprob: -1.569739818572998
    3. 'cost' → logprob: -3.319739818572998
    4. '       ' → logprob: -4.194739818572998
    5. 'paper' → logprob: -4.444739818572998
    6. 'for' → logprob: -6.069739818572998
    7. '```' → logprob: -9.569740295410156
    8. '#' (adapté à ' #') → logprob: -10.069740295410156
    9. 'ic' → logprob: -10.069740295410156
    10. ' total' → logprob: -10.319740295410156

Token 417: ' Initially' (ID: 96924)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3043794631958008
    2. 'total' → logprob: -1.6793794631958008
    3. 'cost' → logprob: -2.929379463195801
    4. 'for' → logprob: -3.929379463195801
    5. '       ' → logprob: -6.179379463195801
    6. 'paper' → logprob: -8.1793794631958
    7. 'ic' → logprob: -8.6793794631958
    8. 'min' → logprob: -10.1793794631958
    9. 'subtotal' → logprob: -10.1793794631958
    10. ' self' → logprob: -10.3043794631958

Token 418: ',' (ID: 11)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.11552649736404419
    2. '       ' → logprob: -2.7405264377593994
    3. ',' → logprob: -3.3655264377593994
    4. 'total' → logprob: -4.9905266761779785
    5. ' self' → logprob: -6.3655266761779785
    6. '=' → logprob: -7.3655266761779785
    7. 'calculate' → logprob: -8.24052619934082
    8. 'for' → logprob: -8.74052619934082
    9. 'sum' → logprob: -8.86552619934082
    10. 'cost' → logprob: -9.49052619934082

Token 419: ' assume' (ID: 19429)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.09895210713148117
    2. 'total' → logprob: -2.598952054977417
    3. 'paper' → logprob: -4.598952293395996
    4. '       ' → logprob: -5.598952293395996
    5. 'cost' → logprob: -5.723952293395996
    6. 'for' → logprob: -6.723952293395996
    7. ' self' → logprob: -7.223952293395996
    8. '#' → logprob: -7.973952293395996
    9. 'ic' → logprob: -8.223952293395996
    10. ' total' → logprob: -9.223952293395996

Token 420: ' all' (ID: 722)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1081581711769104
    2. 'total' → logprob: -2.3581581115722656
    3. '       ' → logprob: -5.608158111572266
    4. 'for' → logprob: -6.608158111572266
    5. 'paper' → logprob: -6.858158111572266
    6. 'cost' → logprob: -7.358158111572266
    7. 'all' → logprob: -7.483158111572266
    8. 'sum' → logprob: -8.483158111572266
    9. ' self' → logprob: -8.483158111572266
    10. 'the' → logprob: -9.858158111572266

Token 421: ' trips' (ID: 27647)
  Prédit: 'paper'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'paper' → logprob: -0.9405304789543152
    2. 'segments' → logprob: -1.69053053855896
    3. 'tr' → logprob: -2.06553053855896
    4. ' trips' → logprob: -2.19053053855896
    5. ' paper' → logprob: -2.56553053855896
    6. ' segments' → logprob: -2.81553053855896
    7. 'rail' → logprob: -3.94053053855896
    8. 'cost' → logprob: -4.940530300140381
    9. '_tr' → logprob: -5.940530300140381
    10. 'trip' → logprob: -6.190530300140381

Token 422: ' are' (ID: 553)
  Prédit: 'use'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'use' → logprob: -0.6662623286247253
    2. ' use' → logprob: -1.2912623882293701
    3. 'are' → logprob: -2.41626238822937
    4. '=' → logprob: -3.29126238822937
    5. ' are' → logprob: -3.41626238822937
    6. '       ' → logprob: -4.166262149810791
    7. ' cost' → logprob: -4.666262149810791
    8. ' =' → logprob: -4.791262149810791
    9. 'pay' → logprob: -4.916262149810791
    10. 'cost' → logprob: -5.416262149810791

Token 423: ' by' (ID: 656)
  Prédit: 'paid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'paid' → logprob: -0.11663388460874557
    2. 'paper' → logprob: -2.741633892059326
    3. ' paid' → logprob: -3.991633892059326
    4. 'by' → logprob: -4.366633892059326
    5. 'pay' → logprob: -4.991633892059326
    6. 'using' → logprob: -5.991633892059326
    7. ' paper' → logprob: -6.366633892059326
    8. 'p' → logprob: -6.991633892059326
    9. 'covered' → logprob: -7.991633892059326
    10. ' by' → logprob: -8.116633415222168

Token 424: ' paper' (ID: 6651)
  Prédit: 'paper'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'paper' → logprob: -0.005942779127508402
    2. ' paper' → logprob: -5.1309428215026855
    3. '   ' → logprob: -12.130942344665527
    4. '       ' → logprob: -12.630942344665527
    5. 'papers' → logprob: -14.005942344665527
    6. 'pap' → logprob: -14.130942344665527
    7. 'Paper' → logprob: -14.505942344665527
    8. 'papier' → logprob: -14.630942344665527
    9. 'ticket' → logprob: -15.005942344665527
    10. '.paper' → logprob: -15.130942344665527

Token 425: ' tickets' (ID: 17323)
  Prédit: '_f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.9388602375984192
    2. 'tickets' → logprob: -1.1888601779937744
    3. '       ' → logprob: -1.9388601779937744
    4. ' tickets' → logprob: -2.9388601779937744
    5. '_ticket' → logprob: -3.5638601779937744
    6. '_t' → logprob: -3.5638601779937744
    7. 'fare' → logprob: -4.1888604164123535
    8. ' fare' → logprob: -4.1888604164123535
    9. 'ticket' → logprob: -4.9388604164123535
    10. '_cost' → logprob: -5.6888604164123535

Token 426: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03071587160229683
    2. '
' → logprob: -5.1557159423828125
    3. 'for' → logprob: -5.2807159423828125
    4. ',' → logprob: -5.4057159423828125
    5. 'total' → logprob: -5.4057159423828125
    6. ' for' → logprob: -5.5307159423828125
    7. 'cost' → logprob: -6.5307159423828125
    8. 'self' → logprob: -6.5307159423828125
    9. ' cost' → logprob: -6.9057159423828125
    10. '.' → logprob: -7.0307159423828125

Token 427: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004616203252226114
    2. 'self' → logprob: -5.8796162605285645
    3. 'total' → logprob: -6.5046162605285645
    4. '```' → logprob: -9.379615783691406
    5. 'for' → logprob: -9.504615783691406
    6. 'cost' → logprob: -9.879615783691406
    7. '        
' → logprob: -10.504615783691406
    8. ' self' → logprob: -10.754615783691406
    9. ' total' → logprob: -11.129615783691406
    10. '   ' → logprob: -11.129615783691406

Token 428: ' total' (ID: 3609)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.056048065423965454
    2. 'total' (adapté à ' total') → logprob: -3.1810481548309326
    3. 'paper' → logprob: -5.1810479164123535
    4. 'cost' → logprob: -5.3060479164123535
    5. '       ' → logprob: -6.3060479164123535
    6. ' self' → logprob: -7.8060479164123535
    7. 'for' → logprob: -9.431048393249512
    8. ' total' → logprob: -10.431048393249512
    9. 'current' → logprob: -11.806048393249512
    10. '```' → logprob: -11.806048393249512

Token 429: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.014379034750163555
    2. '_p' → logprob: -4.264379024505615
    3. '_' → logprob: -9.514379501342773
    4. 'cost' → logprob: -9.639379501342773
    5. ' =' → logprob: -10.014379501342773
    6. '=' → logprob: -10.639379501342773
    7. '_price' → logprob: -12.514379501342773
    8. '_ticket' → logprob: -13.639379501342773
    9. ' cost' → logprob: -14.014379501342773
    10. 'Cost' → logprob: -14.389379501342773

Token 430: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022950410842896
    2. '=' → logprob: -1.9102294445037842
    3. '   ' → logprob: -13.160229682922363
    4. '       ' → logprob: -13.285229682922363
    5. ' ' → logprob: -14.410229682922363
    6. '=self' → logprob: -15.035229682922363
    7. ' +=' → logprob: -15.035229682922363
    8. '```' → logprob: -15.910229682922363
    9. '+=' → logprob: -16.660228729248047
    10. '    ' → logprob: -16.910228729248047

Token 431: ' sum' (ID: 4215)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2520741820335388
    2. 'sum' → logprob: -1.5020742416381836
    3. ' sum' → logprob: -8.877074241638184
    4. ' ' → logprob: -12.502074241638184
    5. '   ' → logprob: -13.377074241638184
    6. '	sum' → logprob: -16.252073287963867
    7. '       ' → logprob: -16.502073287963867
    8. '(sum' → logprob: -17.002073287963867
    9. '  ' → logprob: -18.002073287963867
    10. '=sum' → logprob: -18.002073287963867

Token 432: '(segment' (ID: 144369)
  Prédit: '(segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(segment' → logprob: -0.49596408009529114
    2. 'segment' → logprob: -0.9959640502929688
    3. '(' → logprob: -4.745964050292969
    4. '(rs' → logprob: -5.120964050292969
    5. 'rs' → logprob: -5.370964050292969
    6. '(seg' → logprob: -6.870964050292969
    7. 'seg' → logprob: -6.995964050292969
    8. '(r' → logprob: -8.620964050292969
    9. 'rail' → logprob: -8.745964050292969
    10. '([' → logprob: -10.495964050292969

Token 433: '.compute' (ID: 60156)
  Prédit: '.compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.compute' → logprob: -0.018272263929247856
    2. '.' → logprob: -4.018272399902344
    3. '.paper' → logprob: -10.143272399902344
    4. ' .' → logprob: -10.268272399902344
    5. '.segment' → logprob: -10.893272399902344
    6. '   ' → logprob: -11.518272399902344
    7. '.calculate' → logprob: -12.143272399902344
    8. '.cost' → logprob: -12.518272399902344
    9. '       ' → logprob: -12.518272399902344
    10. 'compute' → logprob: -12.643272399902344

Token 434: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -2.5776860184123507e-06
    2. '_' → logprob: -13.00000286102295
    3. ' _' → logprob: -16.500001907348633
    4. '```' → logprob: -16.875001907348633
    5. '._' → logprob: -17.375001907348633
    6. ')_' → logprob: -17.625001907348633
    7. '   ' → logprob: -17.750001907348633
    8. '(_' → logprob: -17.875001907348633
    9. 'paper' → logprob: -18.875001907348633
    10. ' ' → logprob: -19.250001907348633

Token 435: 'aper' (ID: 3831)
  Prédit: 'aper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aper' → logprob: -8.745069499127567e-05
    2. 'paper' → logprob: -9.75008773803711
    3. 'per' → logprob: -10.62508773803711
    4. 'er' → logprob: -14.12508773803711
    5. 'a' → logprob: -14.37508773803711
    6. 'r' → logprob: -14.37508773803711
    7. 'ap' → logprob: -14.62508773803711
    8. '_' → logprob: -15.12508773803711
    9. '```' → logprob: -15.12508773803711
    10. 'apter' → logprob: -15.75008773803711

Token 436: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -2.339278580620885e-06
    2. 'cost' → logprob: -13.000001907348633
    3. '_' → logprob: -17.500001907348633
    4. '_p' → logprob: -18.250001907348633
    5. 'Cost' → logprob: -18.250001907348633
    6. '_COST' → logprob: -18.500001907348633
    7. ' cost' → logprob: -18.625001907348633
    8. '```' → logprob: -18.875001907348633
    9. '_c' → logprob: -19.000001907348633
    10. '_co' → logprob: -20.125001907348633

Token 437: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0009130131802521646
    2. '())' → logprob: -7.000913143157959
    3. '()
' → logprob: -14.6259126663208
    4. ')' → logprob: -14.7509126663208
    5. ' ()' → logprob: -15.2509126663208
    6. '(' → logprob: -15.2509126663208
    7. '()`' → logprob: -16.875913619995117
    8. '（）' → logprob: -17.375913619995117
    9. '()]' → logprob: -17.625913619995117
    10. '())
' → logprob: -18.375913619995117

Token 438: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0002883913984987885
    2. '())' → logprob: -8.750288009643555
    3. 'for' → logprob: -9.625288009643555
    4. ' for' → logprob: -10.125288009643555
    5. ' ()' → logprob: -11.125288009643555
    6. ')' → logprob: -11.750288009643555
    7. '()
' → logprob: -14.750288009643555
    8. '       ' → logprob: -15.125288009643555
    9. '   ' → logprob: -15.125288009643555
    10. '(' → logprob: -15.375288009643555

Token 439: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.16050519049167633
    2. ' segment' → logprob: -1.9105051755905151
    3. 'self' → logprob: -8.285505294799805
    4. ' self' → logprob: -10.660505294799805
    5. '.segment' → logprob: -13.160505294799805
    6. '(segment' → logprob: -13.410505294799805
    7. 'seg' → logprob: -14.660505294799805
    8. '_segment' → logprob: -14.785505294799805
    9. '   ' → logprob: -15.285505294799805
    10. ' segmento' → logprob: -15.785505294799805

Token 440: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009881336241960526
    2. 'in' → logprob: -5.009881496429443
    3. 'segment' → logprob: -6.009881496429443
    4. ' segment' → logprob: -7.259881496429443
    5. '.segment' → logprob: -13.884881019592285
    6. ' ' → logprob: -14.509881019592285
    7. '(segment' → logprob: -14.509881019592285
    8. ')' → logprob: -14.759881019592285
    9. '   ' → logprob: -15.384881019592285
    10. '_segment' → logprob: -16.0098819732666

Token 441: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.003179855877533555
    2. ' self' → logprob: -5.753180027008057
    3. '   ' → logprob: -14.378179550170898
    4. '	self' → logprob: -14.378179550170898
    5. '(self' → logprob: -15.378179550170898
    6. ')' → logprob: -15.628179550170898
    7. '[self' → logprob: -16.0031795501709
    8. ' ' → logprob: -16.2531795501709
    9. '=self' → logprob: -16.5031795501709
    10. 'segment' → logprob: -16.5031795501709

Token 442: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -7.896309739408025e-07
    2. 'rail' → logprob: -14.125000953674316
    3. '.ra' → logprob: -18.25
    4. 'Rail' → logprob: -18.5
    5. ' .' → logprob: -19.0
    6. '.r' → logprob: -19.5
    7. ' rail' → logprob: -20.0
    8. ')' → logprob: -20.25
    9. 'class' → logprob: -20.625
    10. '.travel' → logprob: -20.625

Token 443: 'rail' (ID: 66046)
  Prédit: 'rail'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rail' → logprob: -1.0280383548888494e-06
    2. ' rail' → logprob: -14.750000953674316
    3. 'ail' → logprob: -16.000001907348633
    4. 'rails' → logprob: -16.375001907348633
    5. 'ral' → logprob: -16.625001907348633
    6. '
' → logprob: -16.750001907348633
    7. 'Rail' → logprob: -16.750001907348633
    8. 'segments' → logprob: -16.875001907348633
    9. 'ra' → logprob: -17.000001907348633
    10. '   ' → logprob: -17.500001907348633

Token 444: '_segments' (ID: 142925)
  Prédit: '_segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segments' → logprob: -2.999452772201039e-05
    2. '_segment' → logprob: -10.750029563903809
    3. 'segments' → logprob: -12.125029563903809
    4. 'segment' → logprob: -12.750029563903809
    5. 's' → logprob: -16.000030517578125
    6. 'Segments' → logprob: -16.750030517578125
    7. '_' → logprob: -17.625030517578125
    8. '   ' → logprob: -18.625030517578125
    9. ' сег' → logprob: -19.000030517578125
    10. '_seg' → logprob: -19.125030517578125

Token 445: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.362307223957032e-05
    2. ')
' → logprob: -10.000073432922363
    3. '       ' → logprob: -10.625073432922363
    4. ' )' → logprob: -12.875073432922363
    5. ')

' → logprob: -14.375073432922363
    6. ' if' → logprob: -14.875073432922363
    7. 'if' → logprob: -15.250073432922363
    8. '   ' → logprob: -15.750073432922363
    9. ')
' → logprob: -18.00007438659668
    10. ')`' → logprob: -18.25007438659668

Token 446: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8599154949188232
    2. '
' → logprob: -0.9849154949188232
    3. 'for' → logprob: -1.7349154949188232
    4. ' for' → logprob: -3.8599154949188232
    5. '        
' → logprob: -5.984915733337402
    6. '```' → logprob: -6.859915733337402
    7. 'self' → logprob: -7.109915733337402
    8. 'total' → logprob: -7.484915733337402
    9. '
' → logprob: -8.359915733337402
    10. 'diff' → logprob: -9.109915733337402

Token 447: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05839870125055313
    2. 'ic' → logprob: -3.558398723602295
    3. '       ' → logprob: -4.433398723602295
    4. '#' (adapté à ' #') → logprob: -5.058398723602295
    5. 's' → logprob: -5.058398723602295
    6. 'total' → logprob: -6.683398723602295
    7. 'discount' → logprob: -6.933398723602295
    8. 'cost' → logprob: -7.558398723602295
    9. '   ' → logprob: -8.933398246765137
    10. 'additional' → logprob: -9.183398246765137

Token 448: ' Consider' (ID: 26632)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.043177083134651184
    2. '#' → logprob: -3.5431771278381348
    3. '       ' → logprob: -4.918177127838135
    4. ' for' → logprob: -6.668177127838135
    5. 'total' → logprob: -6.918177127838135
    6. 's' → logprob: -6.918177127838135
    7. 'ic' → logprob: -7.043177127838135
    8. 'cost' → logprob: -7.668177127838135
    9. 'For' → logprob: -7.668177127838135
    10. 'additional' → logprob: -8.668176651000977

Token 449: ' buying' (ID: 12398)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.40389329195022583
    2. ' for' → logprob: -1.903893232345581
    3. ' buying' → logprob: -2.778893232345581
    4. '       ' → logprob: -3.153893232345581
    5. ' purchasing' → logprob: -3.278893232345581
    6. ' each' → logprob: -4.65389347076416
    7. '   ' → logprob: -4.65389347076416
    8. 'each' → logprob: -5.15389347076416
    9. 'purchase' → logprob: -6.40389347076416
    10. ' all' → logprob: -6.52889347076416

Token 450: ' IC' (ID: 30492)
  Prédit: 'ic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.01744215562939644
    2. 'for' → logprob: -5.017442226409912
    3. ' ic' → logprob: -5.517442226409912
    4. '       ' → logprob: -6.392442226409912
    5. 'an' → logprob: -6.517442226409912
    6. '_ic' → logprob: -6.767442226409912
    7. ' for' → logprob: -7.017442226409912
    8. '   ' → logprob: -7.767442226409912
    9. 'cards' → logprob: -8.517441749572754
    10. 'each' → logprob: -8.767441749572754

Token 451: ' card' (ID: 4766)
  Prédit: ' cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cards' → logprob: -0.659246563911438
    2. '_card' → logprob: -1.659246563911438
    3. 'cards' → logprob: -1.909246563911438
    4. '_cards' → logprob: -2.5342464447021484
    5. 'card' → logprob: -3.6592464447021484
    6. ' card' → logprob: -4.034246444702148
    7. ' for' → logprob: -4.409246444702148
    8. 'for' → logprob: -5.034246444702148
    9. '       ' → logprob: -6.659246444702148
    10. '   ' → logprob: -7.159246444702148

Token 452: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6295461058616638
    2. '       ' → logprob: -1.1295461654663086
    3. ' for' → logprob: -2.0045461654663086
    4. 'discount' → logprob: -5.754546165466309
    5. 's' → logprob: -5.879546165466309
    6. ' discounts' → logprob: -6.379546165466309
    7. '_discount' → logprob: -8.254546165466309
    8. ' and' → logprob: -8.379546165466309
    9. '   ' → logprob: -8.879546165466309
    10. 'and' → logprob: -9.004546165466309

Token 453: ' each' (ID: 2454)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.031015396118164062
    2. ' segment' → logprob: -3.531015396118164
    3. 'segments' → logprob: -7.406015396118164
    4. 'each' → logprob: -7.656015396118164
    5. ' each' → logprob: -9.531015396118164
    6. 'all' → logprob: -10.531015396118164
    7. ' segments' → logprob: -10.656015396118164
    8. ' all' → logprob: -11.406015396118164
    9. 'rail' → logprob: -11.531015396118164
    10. 'self' → logprob: -11.656015396118164

Token 454: ' rail' (ID: 21665)
  Prédit: ' segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segment' → logprob: -0.387116014957428
    2. 'segment' → logprob: -1.1371159553527832
    3. ' rail' → logprob: -8.637116432189941
    4. 'rail' → logprob: -9.762116432189941
    5. '_segment' → logprob: -11.887116432189941
    6. '.segment' → logprob: -14.012116432189941
    7. '(segment' → logprob: -14.512116432189941
    8. ' segmento' → logprob: -14.512116432189941
    9. 'seg' → logprob: -15.137116432189941
    10. 'Segment' → logprob: -15.637116432189941

Token 455: ' segment' (ID: 14806)
  Prédit: '_segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segment' → logprob: -0.07918168604373932
    2. ' segment' → logprob: -2.829181671142578
    3. 'segment' → logprob: -4.704181671142578
    4. '_' → logprob: -5.079181671142578
    5. '_segments' → logprob: -6.704181671142578
    6. '       ' → logprob: -8.204181671142578
    7. '   ' → logprob: -8.829181671142578
    8. '           ' → logprob: -10.329181671142578
    9. ' _' → logprob: -10.454181671142578
    10. ' for' → logprob: -10.704181671142578

Token 456: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04405420646071434
    2. ' for' → logprob: -3.6690542697906494
    3. 'for' → logprob: -4.04405403137207
    4. ',' → logprob: -10.54405403137207
    5. ' and' → logprob: -11.41905403137207
    6. '   ' → logprob: -11.91905403137207
    7. '           ' → logprob: -12.04405403137207
    8. ':' → logprob: -12.41905403137207
    9. ' to' → logprob: -12.79405403137207
    10. ')' → logprob: -13.79405403137207

Token 457: ' beneficial' (ID: 27102)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.055239591747522354
    2. ' segment' → logprob: -2.930239677429199
    3. 'self' → logprob: -8.0552396774292
    4. ' self' → logprob: -10.9302396774292
    5. '(segment' → logprob: -11.5552396774292
    6. '   ' → logprob: -12.6802396774292
    7. '           ' → logprob: -13.0552396774292
    8. '       ' → logprob: -13.3052396774292
    9. 'seg' → logprob: -13.8052396774292
    10. '_segment' → logprob: -13.9302396774292

Token 458: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013617662712931633
    2. ' for' → logprob: -4.513617515563965
    3. 'for' → logprob: -6.013617515563965
    4. ',' → logprob: -9.638617515563965
    5. '
' → logprob: -10.013617515563965
    6. '        
' → logprob: -12.513617515563965
    7. '   ' → logprob: -13.013617515563965
    8. ' and' → logprob: -13.638617515563965
    9. '           ' → logprob: -13.763617515563965
    10. ':' → logprob: -14.013617515563965

Token 459: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16986732184886932
    2. 'for' → logprob: -2.1698672771453857
    3. ' for' → logprob: -3.1698672771453857
    4. '   ' → logprob: -11.419867515563965
    5. '```' → logprob: -13.169867515563965
    6. '           ' → logprob: -13.294867515563965
    7. ',' → logprob: -13.669867515563965
    8. '
' → logprob: -13.794867515563965
    9. '        
' → logprob: -13.919867515563965
    10. '	for' → logprob: -14.294867515563965

Token 460: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.03834038972854614
    2. ' for' → logprob: -3.9133403301239014
    3. '       ' → logprob: -4.0383405685424805
    4. '   ' → logprob: -11.66334056854248
    5. '	for' → logprob: -12.91334056854248
    6. '```' → logprob: -13.16334056854248
    7. '           ' → logprob: -15.03834056854248
    8. '``' → logprob: -15.53834056854248
    9. ' ' → logprob: -15.66334056854248
    10. '        
' → logprob: -16.413339614868164

Token 461: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.07889056205749512
    2. ' segment' → logprob: -2.578890562057495
    3. 'seg' → logprob: -14.953890800476074
    4. '(segment' → logprob: -15.328890800476074
    5. 'rail' → logprob: -16.453889846801758
    6. 'Segment' → logprob: -17.203889846801758
    7. '.segment' → logprob: -17.203889846801758
    8. '_segment' → logprob: -17.578889846801758
    9. '   ' → logprob: -17.703889846801758
    10. '```' → logprob: -17.828889846801758

Token 462: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008620485663414001
    2. 'in' → logprob: -4.758620262145996
    3. ' ' → logprob: -13.133620262145996
    4. '	in' → logprob: -13.883620262145996
    5. 'import' → logprob: -14.758620262145996
    6. ' ' → logprob: -14.758620262145996
    7. 's' → logprob: -14.758620262145996
    8. '   ' → logprob: -15.133620262145996
    9. '<|end|>' → logprob: -15.508620262145996
    10. 'In' → logprob: -15.758620262145996

Token 463: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.3484906256198883
    2. 'self' → logprob: -1.223490595817566
    3. '(self' → logprob: -10.723490715026855
    4. '	self' → logprob: -11.348490715026855
    5. '[self' → logprob: -12.973490715026855
    6. ' ' → logprob: -13.473490715026855
    7. 'elf' → logprob: -13.598490715026855
    8. '   ' → logprob: -13.723490715026855
    9. '=self' → logprob: -13.848490715026855
    10. '_self' → logprob: -14.473490715026855

Token 464: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00021509946964215487
    2. 'rail' → logprob: -8.750215530395508
    3. 'self' → logprob: -10.375215530395508
    4. 'Rail' → logprob: -11.875215530395508
    5. 'in' → logprob: -12.875215530395508
    6. '.se' → logprob: -13.500215530395508
    7. '```' → logprob: -13.500215530395508
    8. ' .' → logprob: -13.750215530395508
    9. '.segment' → logprob: -13.750215530395508
    10. '   ' → logprob: -13.875215530395508

Token 465: 'rail' (ID: 66046)
  Prédit: 'rail'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rail' → logprob: -6.551721889991313e-05
    2. 'segments' → logprob: -10.125065803527832
    3. 'should' → logprob: -11.375065803527832
    4. 'rails' → logprob: -11.625065803527832
    5. 'ic' → logprob: -13.375065803527832
    6. ' rail' → logprob: -13.875065803527832
    7. 'segment' → logprob: -14.500065803527832
    8. 'Rail' → logprob: -15.125065803527832
    9. '```' → logprob: -15.500065803527832
    10. 'ra' → logprob: -16.000064849853516

Token 466: '_segments' (ID: 142925)
  Prédit: '_segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segments' → logprob: -0.05318818613886833
    2. '_segment' → logprob: -3.5531880855560303
    3. 'segment' → logprob: -3.8031880855560303
    4. 'segments' → logprob: -7.553188323974609
    5. '.segment' → logprob: -8.42818832397461
    6. 's' → logprob: -11.05318832397461
    7. ' segment' → logprob: -11.55318832397461
    8. '_' → logprob: -11.55318832397461
    9. ' сег' → logprob: -11.55318832397461
    10. ' in' → logprob: -11.67818832397461

Token 467: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5765071511268616
    2. ':
' → logprob: -0.8265071511268616
    3. '):
' → logprob: -7.701507091522217
    4. '       ' → logprob: -10.076507568359375
    5. ' if' → logprob: -10.701507568359375
    6. '():
' → logprob: -11.326507568359375
    7. '   ' → logprob: -11.576507568359375
    8. ',' → logprob: -12.076507568359375
    9. ':
' → logprob: -12.201507568359375
    10. ':

' → logprob: -12.451507568359375

Token 468: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.49360933899879456
    2. '       ' → logprob: -1.7436093091964722
    3. ' if' → logprob: -1.7436093091964722
    4. 'if' → logprob: -3.3686094284057617
    5. '   ' → logprob: -5.243609428405762
    6. '```' → logprob: -10.243609428405762
    7. '<|end|>' → logprob: -11.493609428405762
    8. '	   ' → logprob: -11.493609428405762
    9. '	       ' → logprob: -12.243609428405762
    10. '               ' → logprob: -12.493609428405762

Token 469: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.04574894905090332
    2. ' if' → logprob: -3.4207489490509033
    3. '           ' → logprob: -4.545748710632324
    4. '       ' → logprob: -6.920748710632324
    5. 'difference' → logprob: -8.545748710632324
    6. '   ' → logprob: -9.045748710632324
    7. 'diff' → logprob: -9.420748710632324
    8. 'cost' → logprob: -10.920748710632324
    9. '	if' → logprob: -12.545748710632324
    10. 'd' → logprob: -13.045748710632324

Token 470: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.02975395694375038
    2. ' segment' → logprob: -3.5297539234161377
    3. '           ' → logprob: -13.279753684997559
    4. '(segment' → logprob: -14.154753684997559
    5. '   ' → logprob: -14.529753684997559
    6. 'seg' → logprob: -15.029753684997559
    7. '.segment' → logprob: -16.904754638671875
    8. '       ' → logprob: -16.904754638671875
    9. ' ' → logprob: -17.279754638671875
    10. '    ' → logprob: -17.529754638671875

Token 471: '.trip' (ID: 168825)
  Prédit: '.should'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.should' → logprob: -0.0001017551330733113
    2. '.' → logprob: -9.250102043151855
    3. '.has' → logprob: -12.375102043151855
    4. ' .' → logprob: -14.625102043151855
    5. '.can' → logprob: -15.500102043151855
    6. '.must' → logprob: -15.625102043151855
    7. '   ' → logprob: -16.00010108947754
    8. '.s' → logprob: -16.25010108947754
    9. '.Should' → logprob: -16.25010108947754
    10. 'should' → logprob: -16.50010108947754

Token 472: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -7.465036105713807e-06
    2. 'count' → logprob: -11.875007629394531
    3. '_' → logprob: -16.00000762939453
    4. '   ' → logprob: -16.87500762939453
    5. 's' → logprob: -17.62500762939453
    6. '._' → logprob: -18.00000762939453
    7. '\' → logprob: -18.37500762939453
    8. ' count' → logprob: -18.37500762939453
    9. '_counts' → logprob: -18.50000762939453
    10. '>' → logprob: -18.62500762939453

Token 473: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.3489130437374115
    2. '>' → logprob: -1.2239130735397339
    3. ' ==' → logprob: -8.598913192749023
    4. '==' → logprob: -8.848913192749023
    5. ' ' → logprob: -10.348913192749023
    6. ' >=' → logprob: -10.598913192749023
    7. '<|end|>' → logprob: -10.848913192749023
    8. 'and' → logprob: -11.098913192749023
    9. '<|end|>' → logprob: -11.473913192749023
    10. ' and' → logprob: -11.723913192749023

Token 474: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '   ' → logprob: -19.87500762939453
    4. '۰' → logprob: -20.75000762939453
    5. '```' → logprob: -21.50000762939453
    6. '>' → logprob: -21.87500762939453
    7. '    ' → logprob: -22.12500762939453
    8. '  ' → logprob: -22.25000762939453
    9. '<|end|>' → logprob: -22.50000762939453
    10. '０' → logprob: -22.75000762939453

Token 475: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '۰' → logprob: -19.875001907348633
    4. '   ' → logprob: -20.500001907348633
    5. '<|end|>' → logprob: -20.625001907348633
    6. '```' → logprob: -21.000001907348633
    7. '０' → logprob: -21.875001907348633
    8. '  ' → logprob: -22.250001907348633
    9. '>' → logprob: -22.375001907348633
    10. '00' → logprob: -22.750001907348633

Token 476: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.610410213470459
    2. '               ' → logprob: -1.485410213470459
    3. ':
' → logprob: -1.860410213470459
    4. ' or' → logprob: -2.610410213470459
    5. '           ' → logprob: -6.735410213470459
    6. '       ' → logprob: -10.110410690307617
    7. '   ' → logprob: -10.985410690307617
    8. ':return' → logprob: -10.985410690307617
    9. '                   ' → logprob: -11.110410690307617
    10. '              ' → logprob: -11.610410690307617

Token 477: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0010181600227952003
    2. '           ' → logprob: -7.001018047332764
    3. ' continue' → logprob: -9.376018524169922
    4. 'continue' → logprob: -11.126018524169922
    5. '       ' → logprob: -13.626018524169922
    6. '                   ' → logprob: -13.751018524169922
    7. '	       ' → logprob: -13.876018524169922
    8. '	           ' → logprob: -13.876018524169922
    9. ':' → logprob: -14.251018524169922
    10. '   ' → logprob: -14.626018524169922

Token 478: ' continue' (ID: 4901)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3707907795906067
    2. 'continue' (adapté à ' continue') → logprob: -1.370790719985962
    3. '                   ' → logprob: -3.370790719985962
    4. ' continue' → logprob: -3.870790719985962
    5. '           ' → logprob: -7.745790958404541
    6. '	continue' → logprob: -9.495790481567383
    7. '   ' → logprob: -9.495790481567383
    8. '_continue' → logprob: -9.995790481567383
    9. '
' → logprob: -10.245790481567383
    10. '	           ' → logprob: -10.995790481567383

Token 479: ' ' (ID: 220)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07323963940143585
    2. '
' → logprob: -2.69823956489563
    3. '            
' → logprob: -5.948239803314209
    4. ' 
' → logprob: -8.32323932647705
    5. '    
' → logprob: -8.32323932647705
    6. '
' → logprob: -10.19823932647705
    7. '  
' → logprob: -10.57323932647705
    8. '               ' → logprob: -10.69823932647705
    9. '           
' → logprob: -10.82323932647705
    10. '   
' → logprob: -11.32323932647705

Token 480: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002821158617734909
    2. '
' → logprob: -6.12782096862793
    3. 'if' → logprob: -7.87782096862793
    4. ' if' → logprob: -9.12782096862793
    5. '            
' → logprob: -9.25282096862793
    6. 'total' → logprob: -11.62782096862793
    7. '    
' → logprob: -12.00282096862793
    8. '               ' → logprob: -12.00282096862793
    9. '       ' → logprob: -12.25282096862793
    10. '   ' → logprob: -12.50282096862793

Token 481: ' No' (ID: 3004)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0989517793059349
    2. ' continue' → logprob: -2.723951816558838
    3. 'continue' → logprob: -3.598951816558838
    4. '       ' → logprob: -7.723951816558838
    5. '   ' → logprob: -8.34895133972168
    6. ' if' → logprob: -8.47395133972168
    7. 'if' → logprob: -8.59895133972168
    8. '               ' → logprob: -9.34895133972168
    9. '```' → logprob: -10.59895133972168
    10. '
' → logprob: -11.22395133972168

Token 482: ' travel' (ID: 6410)
  Prédit: ' trips'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' trips' → logprob: -0.6722546219825745
    2. 'tr' → logprob: -0.9222546219825745
    3. 'cost' → logprob: -3.6722545623779297
    4. ' need' → logprob: -4.04725456237793
    5. 'trip' → logprob: -4.17225456237793
    6. ' cost' → logprob: -4.42225456237793
    7. 'need' → logprob: -5.04725456237793
    8. ' usage' → logprob: -5.17225456237793
    9. 'travel' → logprob: -5.92225456237793
    10. 'usage' → logprob: -6.17225456237793

Token 483: ' on' (ID: 402)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23929938673973083
    2. ' on' → logprob: -1.8642994165420532
    3. 'on' → logprob: -3.1142992973327637
    4. '               ' → logprob: -4.989299297332764
    5. 'segments' → logprob: -6.489299297332764
    6. '       ' → logprob: -6.864299297332764
    7. 'for' → logprob: -7.239299297332764
    8. 'cost' → logprob: -7.364299297332764
    9. '   ' → logprob: -7.489299297332764
    10. '
' → logprob: -7.989299297332764

Token 484: ' this' (ID: 495)
  Prédit: 'this'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'this' → logprob: -0.14713139832019806
    2. ' this' → logprob: -2.6471314430236816
    3. 'that' → logprob: -3.1471314430236816
    4. 'segment' → logprob: -3.8971314430236816
    5. ' that' → logprob: -6.397131443023682
    6. ' segment' → logprob: -6.897131443023682
    7. 'the' → logprob: -12.272130966186523
    8. '           ' → logprob: -12.272130966186523
    9. '_this' → logprob: -13.522130966186523
    10. '(segment' → logprob: -14.772130966186523

Token 485: ' rail' (ID: 21665)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.04882865026593208
    2. ' segment' → logprob: -3.048828601837158
    3. 'rail' → logprob: -8.548829078674316
    4. 'line' → logprob: -11.423829078674316
    5. ' rail' → logprob: -11.548829078674316
    6. '.segment' → logprob: -11.798829078674316
    7. '_segment' → logprob: -12.173829078674316
    8. '(segment' → logprob: -12.673829078674316
    9. '           ' → logprob: -12.923829078674316
    10. ' line' → logprob: -13.673829078674316

Token 486: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1721242368221283
    2. 'segment' → logprob: -2.422124147415161
    3. ' segment' → logprob: -2.797124147415161
    4. '
' → logprob: -5.29712438583374
    5. '            
' → logprob: -6.67212438583374
    6. ',' → logprob: -7.54712438583374
    7. '_segment' → logprob: -7.54712438583374
    8. '               ' → logprob: -7.67212438583374
    9. '       ' → logprob: -8.297123908996582
    10. '   ' → logprob: -9.672123908996582

Token 487: ' skip' (ID: 16677)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003354758722707629
    2. '               ' → logprob: -6.503354549407959
    3. ' continue' → logprob: -7.253354549407959
    4. 'continue' → logprob: -7.503354549407959
    5. ' so' → logprob: -8.128355026245117
    6. '       ' → logprob: -9.128355026245117
    7. '   ' → logprob: -9.878355026245117
    8. '          ' → logprob: -10.253355026245117
    9. '                   ' → logprob: -10.503355026245117
    10. '
' → logprob: -11.253355026245117

Token 488: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1140432208776474
    2. '
' → logprob: -2.2390432357788086
    3. '            
' → logprob: -6.864043235778809
    4. '    
' → logprob: -9.739043235778809
    5. '
' → logprob: -10.114043235778809
    6. '  
' → logprob: -10.864043235778809
    7. ' 
' → logprob: -11.739043235778809
    8. ',' → logprob: -11.989043235778809
    9. '           
' → logprob: -12.239043235778809
    10. '<|end|>' → logprob: -12.239043235778809

Token 489: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00019042797794099897
    2. '
' → logprob: -8.750190734863281
    3. '            
' → logprob: -11.375190734863281
    4. ' if' → logprob: -11.875190734863281
    5. 'if' → logprob: -12.125190734863281
    6. '       ' → logprob: -13.250190734863281
    7. '               ' → logprob: -13.750190734863281
    8. '   ' → logprob: -13.875190734863281
    9. '```' → logprob: -14.125190734863281
    10. '          ' → logprob: -14.125190734863281

Token 490: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1368889957666397
    2. ' if' → logprob: -3.1368889808654785
    3. 'if' (adapté à ' if') → logprob: -3.1368889808654785
    4. '       ' → logprob: -3.3868889808654785
    5. 'cost' → logprob: -6.5118889808654785
    6. 'diff' → logprob: -6.6368889808654785
    7. 'total' → logprob: -6.7618889808654785
    8. 'difference' → logprob: -6.8868889808654785
    9. ' cost' → logprob: -7.1368889808654785
    10. ' total' → logprob: -7.3868889808654785

Token 491: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.008622493594884872
    2. ' segment' → logprob: -4.758622646331787
    3. '           ' → logprob: -12.008622169494629
    4. '   ' → logprob: -14.258622169494629
    5. 'not' → logprob: -15.008622169494629
    6. 'seg' → logprob: -15.133622169494629
    7. '(segment' → logprob: -15.133622169494629
    8. '       ' → logprob: -16.008623123168945
    9. ' ' → logprob: -16.633623123168945
    10. '               ' → logprob: -17.008623123168945

Token 492: '.should' (ID: 33296)
  Prédit: '.should'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.should' → logprob: -2.2603901015827432e-05
    2. '.' → logprob: -10.750022888183594
    3. '.has' → logprob: -14.375022888183594
    4. '.cost' → logprob: -15.750022888183594
    5. '.s' → logprob: -15.875022888183594
    6. ' .' → logprob: -16.875022888183594
    7. '.must' → logprob: -17.250022888183594
    8. '.need' → logprob: -17.250022888183594
    9. '.can' → logprob: -17.375022888183594
    10. '.Should' → logprob: -17.500022888183594

Token 493: '_buy' (ID: 121084)
  Prédit: '_buy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_buy' → logprob: -9.043078898685053e-05
    2. 'buy' → logprob: -9.375090599060059
    3. '_b' → logprob: -12.750090599060059
    4. '_' → logprob: -13.750090599060059
    5. '_purchase' → logprob: -14.875090599060059
    6. '_choose' → logprob: -14.875090599060059
    7. '_have' → logprob: -15.875090599060059
    8. ' buy' → logprob: -16.250089645385742
    9. 'Buy' → logprob: -16.250089645385742
    10. '_get' → logprob: -16.500089645385742

Token 494: '_ic' (ID: 79605)
  Prédit: '_ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ic' → logprob: -2.8087270038668066e-05
    2. 'ic' → logprob: -10.500027656555176
    3. '```' → logprob: -15.625027656555176
    4. '   ' → logprob: -16.500028610229492
    5. '_iv' → logprob: -17.375028610229492
    6. 'IC' → logprob: -17.500028610229492
    7. '`' → logprob: -18.000028610229492
    8. ' _' → logprob: -18.125028610229492
    9. '_ip' → logprob: -18.125028610229492
    10. '_' → logprob: -18.125028610229492

Token 495: '_card' (ID: 37760)
  Prédit: '_card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_card' → logprob: -2.339278580620885e-06
    2. 'card' → logprob: -13.750001907348633
    3. 'Card' → logprob: -14.875001907348633
    4. '()' → logprob: -15.500001907348633
    5. '_car' → logprob: -16.000001907348633
    6. '_cart' → logprob: -16.000001907348633
    7. '_cards' → logprob: -16.375001907348633
    8. '_' → logprob: -16.500001907348633
    9. '_CARD' → logprob: -16.875001907348633
    10. '   ' → logprob: -17.000001907348633

Token 496: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.004094308707863092
    2. '():
' → logprob: -5.504094123840332
    3. '()' → logprob: -11.254094123840332
    4. ' ():' → logprob: -13.004094123840332
    5. '():
' → logprob: -14.629094123840332
    6. ':' → logprob: -15.879094123840332
    7. '():

' → logprob: -16.12909507751465
    8. '()):
' → logprob: -17.00409507751465
    9. '()==' → logprob: -17.87909507751465
    10. '()>' → logprob: -19.00409507751465

Token 497: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.28684794902801514
    2. '           ' → logprob: -1.4118479490280151
    3. ' total' → logprob: -5.786848068237305
    4. 'total' → logprob: -6.411848068237305
    5. 'self' → logprob: -7.661848068237305
    6. ' self' → logprob: -7.786848068237305
    7. '   ' → logprob: -10.161848068237305
    8. '       ' → logprob: -10.411848068237305
    9. '                   ' → logprob: -12.286848068237305
    10. '```' → logprob: -12.786848068237305

Token 498: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.051891155540943146
    2. '           ' → logprob: -4.051891326904297
    3. '               ' → logprob: -4.426891326904297
    4. 'segment' → logprob: -4.426891326904297
    5. 'total' → logprob: -5.426891326904297
    6. ' self' → logprob: -5.426891326904297
    7. '                   ' → logprob: -8.926891326904297
    8. '   ' → logprob: -8.926891326904297
    9. ' segment' → logprob: -9.176891326904297
    10. ' total' → logprob: -10.301891326904297

Token 499: ' Change' (ID: 16167)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1066296175122261
    2. 'total' → logprob: -2.4816296100616455
    3. '           ' → logprob: -4.731629848480225
    4. 'segment' → logprob: -5.606629848480225
    5. ' self' → logprob: -5.731629848480225
    6. '               ' → logprob: -6.856629848480225
    7. ' total' → logprob: -7.356629848480225
    8. '   ' → logprob: -9.981629371643066
    9. ' segment' → logprob: -10.731629371643066
    10. '       ' → logprob: -11.356629371643066

Token 500: ' cost' (ID: 3097)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -1.2968647480010986
    2. 'segment' → logprob: -1.2968647480010986
    3. ' total' → logprob: -1.5468647480010986
    4. ' to' → logprob: -2.5468647480010986
    5. ' segment' → logprob: -2.5468647480010986
    6. '               ' → logprob: -3.7968647480010986
    7. '           ' → logprob: -4.0468645095825195
    8. ' the' → logprob: -4.5468645095825195
    9. 'to' → logprob: -4.5468645095825195
    10. 'trip' → logprob: -5.5468645095825195

Token 501: ' from' (ID: 591)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.21004337072372437
    2. '=' → logprob: -2.585043430328369
    3. '_difference' → logprob: -3.085043430328369
    4. '           ' → logprob: -3.710043430328369
    5. 'difference' → logprob: -4.585043430328369
    6. 'to' → logprob: -5.085043430328369
    7. '               ' → logprob: -5.335043430328369
    8. 'diff' → logprob: -5.835043430328369
    9. '_diff' → logprob: -5.960043430328369
    10. ' to' → logprob: -5.960043430328369

Token 502: ' paper' (ID: 6651)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.23428016901016235
    2. 'paper' → logprob: -1.6092801094055176
    3. 'total' → logprob: -5.734280109405518
    4. ' segment' → logprob: -5.859280109405518
    5. ' paper' → logprob: -6.234280109405518
    6. '   ' → logprob: -8.234280586242676
    7. ' total' → logprob: -9.609280586242676
    8. 'self' → logprob: -9.984280586242676
    9. 'using' → logprob: -10.109280586242676
    10. '           ' → logprob: -10.359280586242676

Token 503: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.13071313500404358
    2. 'to' → logprob: -2.6307132244110107
    3. ' =' → logprob: -3.5057132244110107
    4. 'cost' → logprob: -4.755712985992432
    5. '_cost' → logprob: -5.755712985992432
    6. ' cost' → logprob: -5.880712985992432
    7. '=' → logprob: -5.880712985992432
    8. '               ' → logprob: -7.380712985992432
    9. '_ticket' → logprob: -7.755712985992432
    10. 'ticket' → logprob: -8.00571346282959

Token 504: ' IC' (ID: 30492)
  Prédit: 'ic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.22705985605716705
    2. ' ic' → logprob: -2.352059841156006
    3. 'segment' → logprob: -3.477059841156006
    4. 'IC' → logprob: -3.477059841156006
    5. ' segment' → logprob: -4.227059841156006
    6. '_ic' → logprob: -4.477059841156006
    7. 'self' → logprob: -4.852059841156006
    8. ' IC' → logprob: -4.977059841156006
    9. ' self' → logprob: -6.102059841156006
    10. 'Ic' → logprob: -6.727059841156006

Token 505: ' for' (ID: 395)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.22821280360221863
    2. 'total' → logprob: -2.603212833404541
    3. ' =' → logprob: -2.853212833404541
    4. '           ' → logprob: -3.478212833404541
    5. '=' → logprob: -4.603212833404541
    6. ' -=' → logprob: -4.728212833404541
    7. ':' → logprob: -5.228212833404541
    8. ' total' → logprob: -5.728212833404541
    9. 'segment' → logprob: -5.853212833404541
    10. '_total' → logprob: -6.103212833404541

Token 506: ' this' (ID: 495)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.3740641176700592
    2. 'this' → logprob: -1.4990640878677368
    3. ' this' → logprob: -3.3740642070770264
    4. 'total' → logprob: -3.3740642070770264
    5. ' segment' → logprob: -4.374063968658447
    6. 'the' → logprob: -5.999063968658447
    7. ' total' → logprob: -6.499063968658447
    8. 'that' → logprob: -6.624063968658447
    9. ' the' → logprob: -7.749063968658447
    10. ' that' → logprob: -7.749063968658447

Token 507: ' segment' (ID: 14806)
  Prédit: ' segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segment' → logprob: -0.4742172658443451
    2. 'segment' → logprob: -0.9742172956466675
    3. ' rail' → logprob: -9.974217414855957
    4. 'rail' → logprob: -10.224217414855957
    5. '_segment' → logprob: -10.724217414855957
    6. '.segment' → logprob: -10.849217414855957
    7. ' trip' → logprob: -12.349217414855957
    8. 'trip' → logprob: -12.849217414855957
    9. 'Segment' → logprob: -13.224217414855957
    10. '.' → logprob: -13.599217414855957

Token 508: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.058332014828920364
    2. '
' → logprob: -3.4333319664001465
    3. '           ' → logprob: -4.0583319664001465
    4. 'total' → logprob: -6.5583319664001465
    5. ' =' → logprob: -6.8083319664001465
    6. 'self' → logprob: -6.8083319664001465
    7. '                   ' → logprob: -6.9333319664001465
    8. ':' → logprob: -7.1833319664001465
    9. '=' → logprob: -7.3083319664001465
    10. ':
' → logprob: -8.683332443237305

Token 509: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002763390773907304
    2. 'self' → logprob: -6.502763271331787
    3. '           ' → logprob: -6.752763271331787
    4. ' self' → logprob: -10.002763748168945
    5. '                   ' → logprob: -10.752763748168945
    6. 'total' → logprob: -11.627763748168945
    7. ' =' → logprob: -12.377763748168945
    8. ' total' → logprob: -12.752763748168945
    9. ',' → logprob: -12.877763748168945
    10. '
' → logprob: -13.002763748168945

Token 510: ' cost' (ID: 3097)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.07223960757255554
    2. 'self' → logprob: -2.947239637374878
    3. '           ' → logprob: -4.322239398956299
    4. ' total' → logprob: -6.197239398956299
    5. '               ' → logprob: -6.572239398956299
    6. 'segment' → logprob: -8.322239875793457
    7. '   ' → logprob: -8.947239875793457
    8. ' self' → logprob: -9.447239875793457
    9. '       ' → logprob: -10.572239875793457
    10. '                   ' → logprob: -10.822239875793457

Token 511: '_with' (ID: 14161)
  Prédit: '_difference'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_difference' → logprob: -0.10424685478210449
    2. '_diff' → logprob: -3.4792468547821045
    3. '_s' → logprob: -3.6042468547821045
    4. ' =' → logprob: -3.8542468547821045
    5. '       ' → logprob: -5.604247093200684
    6. '   ' → logprob: -5.729247093200684
    7. 'difference' → logprob: -5.854247093200684
    8. '           ' → logprob: -5.854247093200684
    9. '_re' → logprob: -6.479247093200684
    10. '=' → logprob: -7.104247093200684

Token 512: '_ic' (ID: 79605)
  Prédit: '_ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ic' → logprob: -0.075668565928936
    2. 'segment' → logprob: -3.3256685733795166
    3. 'ic' → logprob: -3.4506685733795166
    4. ' segment' → logprob: -6.3256683349609375
    5. ' =' → logprob: -6.9506683349609375
    6. 'IC' → logprob: -7.2006683349609375
    7. '=' → logprob: -7.4506683349609375
    8. 'Ic' → logprob: -8.450668334960938
    9. '_segment' → logprob: -8.825668334960938
    10. '_' → logprob: -9.200668334960938

Token 513: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10021594911813736
    2. '=' → logprob: -2.3502159118652344
    3. '   ' → logprob: -12.225215911865234
    4. '           ' → logprob: -13.475215911865234
    5. ' -=' → logprob: -13.975215911865234
    6. '       ' → logprob: -14.600215911865234
    7. ' +=' → logprob: -15.225215911865234
    8. ' ' → logprob: -15.225215911865234
    9. 's' → logprob: -15.600215911865234
    10. '               ' → logprob: -15.725215911865234

Token 514: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -6.988221684878226e-06
    2. ' segment' → logprob: -12.000006675720215
    3. '           ' → logprob: -14.875006675720215
    4. '   ' → logprob: -15.625006675720215
    5. '(segment' → logprob: -16.25000762939453
    6. 'seg' → logprob: -17.00000762939453
    7. '       ' → logprob: -17.50000762939453
    8. '               ' → logprob: -17.50000762939453
    9. '.segment' → logprob: -17.50000762939453
    10. '                   ' → logprob: -18.50000762939453

Token 515: '.compute' (ID: 60156)
  Prédit: '.compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.compute' → logprob: -2.8921695047756657e-05
    2. '.' → logprob: -10.875028610229492
    3. 'compute' → logprob: -11.875028610229492
    4. '.calculate' → logprob: -13.000028610229492
    5. '.ic' → logprob: -14.250028610229492
    6. ' .' → logprob: -16.000028610229492
    7. '.com' → logprob: -17.625028610229492
    8. '   ' → logprob: -17.750028610229492
    9. '.collect' → logprob: -18.375028610229492
    10. '.evaluate' → logprob: -18.750028610229492

Token 516: '_ic' (ID: 79605)
  Prédit: '_ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ic' → logprob: -0.0007183883571997285
    2. 'ic' → logprob: -7.250718593597412
    3. 'IC' → logprob: -12.500718116760254
    4. '```' → logprob: -13.375718116760254
    5. '\' → logprob: -14.000718116760254
    6. ' ic' → logprob: -15.000718116760254
    7. '_' → logprob: -15.375718116760254
    8. '`' → logprob: -15.375718116760254
    9. '_IC' → logprob: -15.375718116760254
    10. '__' → logprob: -16.12571907043457

Token 517: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -1.9027791495318525e-05
    2. 'cost' → logprob: -10.875019073486328
    3. ' cost' → logprob: -18.125019073486328
    4. 'Cost' → logprob: -19.000019073486328
    5. '_COST' → logprob: -19.250019073486328
    6. '-cost' → logprob: -19.625019073486328
    7. '成本' → logprob: -19.750019073486328
    8. '__' → logprob: -19.875019073486328
    9. '```' → logprob: -20.750019073486328
    10. 'ic' → logprob: -21.125019073486328

Token 518: '()
' (ID: 1234)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.029706742614507675
    2. '()' → logprob: -4.654706954956055
    3. '()
' → logprob: -5.404706954956055
    4. '           ' → logprob: -5.529706954956055
    5. ')' → logprob: -5.654706954956055
    6. '       ' → logprob: -6.154706954956055
    7. '
' → logprob: -6.279706954956055
    8. '                
' → logprob: -7.029706954956055
    9. ')
' → logprob: -7.404706954956055
    10. '<|end|>' → logprob: -7.904706954956055

Token 519: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00019936825265176594
    2. '           ' → logprob: -10.000199317932129
    3. 'total' → logprob: -10.000199317932129
    4. '                
' → logprob: -10.000199317932129
    5. '
' → logprob: -10.625199317932129
    6. ' total' → logprob: -10.875199317932129
    7. '                   ' → logprob: -12.125199317932129
    8. '```' → logprob: -13.375199317932129
    9. '       ' → logprob: -13.500199317932129
    10. 'self' → logprob: -13.625199317932129

Token 520: ' cost' (ID: 3097)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.1473434418439865
    2. '               ' → logprob: -2.522343397140503
    3. ' total' → logprob: -2.897343397140503
    4. 'self' → logprob: -7.272343635559082
    5. '           ' → logprob: -7.897343635559082
    6. '   ' → logprob: -8.772343635559082
    7. 'segment' → logprob: -9.647343635559082
    8. '-' → logprob: -9.897343635559082
    9. ' self' → logprob: -9.897343635559082
    10. '       ' → logprob: -10.147343635559082

Token 521: '_with' (ID: 14161)
  Prédit: '_difference'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_difference' → logprob: -0.9129331111907959
    2. '=' → logprob: -1.162933111190796
    3. '_with' → logprob: -2.037933111190796
    4. ' =' → logprob: -2.412933111190796
    5. '_diff' → logprob: -3.287933111190796
    6. '_re' → logprob: -4.787933349609375
    7. '_s' → logprob: -5.412933349609375
    8. '_change' → logprob: -5.787933349609375
    9. ' -=' → logprob: -6.037933349609375
    10. '-=' → logprob: -6.037933349609375

Token 522: '_p' (ID: 1359)
  Prédit: '_ic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_ic' → logprob: -0.12835904955863953
    2. 'ic' → logprob: -2.128359079360962
    3. 'segment' → logprob: -6.753358840942383
    4. 'IC' → logprob: -9.003358840942383
    5. ' ic' → logprob: -10.753358840942383
    6. 'Ic' → logprob: -11.003358840942383
    7. '_' → logprob: -11.628358840942383
    8. 'the' → logprob: -11.753358840942383
    9. '=' → logprob: -11.878358840942383
    10. 'self' → logprob: -12.003358840942383

Token 523: 'aper' (ID: 3831)
  Prédit: 'aper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aper' → logprob: -1.1875571544806007e-05
    2. 'a' → logprob: -12.625011444091797
    3. 'er' → logprob: -13.375011444091797
    4. 'paper' → logprob: -13.375011444091797
    5. '_' → logprob: -14.000011444091797
    6. '   ' → logprob: -14.250011444091797
    7. '```' → logprob: -14.500011444091797
    8. 'ap' → logprob: -14.750011444091797
    9. 'ape' → logprob: -14.750011444091797
    10. '
' → logprob: -15.000011444091797

Token 524: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.42876479029655457
    2. '=' → logprob: -1.053764820098877
    3. ' -=' → logprob: -10.053764343261719
    4. '-=' → logprob: -11.678764343261719
    5. '-' → logprob: -12.303764343261719
    6. '   ' → logprob: -13.178764343261719
    7. ' ' → logprob: -13.803764343261719
    8. ' -' → logprob: -13.928764343261719
    9. ')' → logprob: -14.303764343261719
    10. '<|end|>' → logprob: -14.553764343261719

Token 525: ' segment' (ID: 14806)
  Prédit: ' segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segment' → logprob: -0.5759649872779846
    2. 'segment' → logprob: -0.8259649872779846
    3. '               ' → logprob: -10.70096492767334
    4. '                ' → logprob: -13.57596492767334
    5. '(segment' → logprob: -14.45096492767334
    6. '.segment' → logprob: -15.57596492767334
    7. ' ' → logprob: -15.70096492767334
    8. ' segmento' → logprob: -15.70096492767334
    9. '                   ' → logprob: -15.95096492767334
    10. '_segment' → logprob: -16.075965881347656

Token 526: '.compute' (ID: 60156)
  Prédit: '.compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.compute' → logprob: -0.0072770873084664345
    2. 'compute' → logprob: -5.757277011871338
    3. '.paper' → logprob: -5.757277011871338
    4. '._' → logprob: -7.882277011871338
    5. '_p' → logprob: -9.007277488708496
    6. '_compute' → logprob: -9.132277488708496
    7. '.calculate' → logprob: -9.257277488708496
    8. '.' → logprob: -9.632277488708496
    9. '.p' → logprob: -10.132277488708496
    10. '_.' → logprob: -10.257277488708496

Token 527: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.0004074354947078973
    2. 'paper' → logprob: -7.8754072189331055
    3. 'p' → logprob: -10.875407218933105
    4. '_' → logprob: -12.125407218933105
    5. 'aper' → logprob: -13.750407218933105
    6. '\' → logprob: -14.125407218933105
    7. ' paper' → logprob: -15.250407218933105
    8. 'ap' → logprob: -15.875407218933105
    9. '```' → logprob: -16.375408172607422
    10. 'er' → logprob: -16.500408172607422

Token 528: 'aper' (ID: 3831)
  Prédit: 'aper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aper' → logprob: -1.0280383548888494e-06
    2. 'paper' → logprob: -14.250000953674316
    3. 'a' → logprob: -15.750000953674316
    4. 'ap' → logprob: -17.125001907348633
    5. 'per' → logprob: -17.250001907348633
    6. 'er' → logprob: -17.750001907348633
    7. 'ape' → logprob: -18.000001907348633
    8. 'r' → logprob: -18.500001907348633
    9. 'apter' → logprob: -18.500001907348633
    10. '
' → logprob: -18.875001907348633

Token 529: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.000204851632588543
    2. '_f' → logprob: -9.000205039978027
    3. 'cost' → logprob: -9.500205039978027
    4. 'Cost' → logprob: -12.250205039978027
    5. 'fare' → logprob: -14.750205039978027
    6. '_code' → logprob: -14.750205039978027
    7. '_' → logprob: -15.125205039978027
    8. '_p' → logprob: -15.875205039978027
    9. '_ticket' → logprob: -16.37520408630371
    10. '_COST' → logprob: -16.37520408630371

Token 530: '()
' (ID: 1234)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.14596828818321228
    2. '
' → logprob: -2.645968198776245
    3. '<|end|>' → logprob: -3.520968198776245
    4. '-' → logprob: -4.395968437194824
    5. ')' → logprob: -5.145968437194824
    6. '           ' → logprob: -5.895968437194824
    7. '<|end|>' → logprob: -6.145968437194824
    8. '                
' → logprob: -6.145968437194824
    9. '       ' → logprob: -6.270968437194824
    10. '                ' → logprob: -6.520968437194824

Token 531: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001381305861286819
    2. '
' → logprob: -6.6263813972473145
    3. '           ' → logprob: -10.876380920410156
    4. '                
' → logprob: -11.126380920410156
    5. '       ' → logprob: -12.376380920410156
    6. '                   ' → logprob: -12.501380920410156
    7. '```' → logprob: -12.876380920410156
    8. ' total' → logprob: -12.876380920410156
    9. '
' → logprob: -13.001380920410156
    10. '<|end|>' → logprob: -13.376380920410156

Token 532: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.41827401518821716
    2. '               ' → logprob: -1.1682740449905396
    3. 'self' → logprob: -3.79327392578125
    4. ' total' → logprob: -5.04327392578125
    5. 'if' → logprob: -6.66827392578125
    6. ' self' → logprob: -8.79327392578125
    7. '       ' → logprob: -8.79327392578125
    8. 'difference' → logprob: -8.79327392578125
    9. '   ' → logprob: -9.79327392578125
    10. '                   ' → logprob: -10.04327392578125

Token 533: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -1.0683535037969705e-05
    2. 'cost' → logprob: -12.50001049041748
    3. '_' → logprob: -12.62501049041748
    4. ' -=' → logprob: -13.62501049041748
    5. '-=' → logprob: -14.12501049041748
    6. ' cost' → logprob: -15.00001049041748
    7. '-cost' → logprob: -15.12501049041748
    8. '_COST' → logprob: -15.25001049041748
    9. 'Cost' → logprob: -15.62501049041748
    10. '           ' → logprob: -15.62501049041748

Token 534: ' +=' (ID: 2757)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.48087137937545776
    2. ' -=' → logprob: -0.9808713793754578
    3. '+=' → logprob: -5.605871200561523
    4. '=' → logprob: -6.105871200561523
    5. ' +=' → logprob: -7.480871200561523
    6. ' =' → logprob: -8.480871200561523
    7. '   ' → logprob: -9.730871200561523
    8. '-' → logprob: -10.355871200561523
    9. ' -' → logprob: -13.855871200561523
    10. '       ' → logprob: -14.355871200561523

Token 535: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.0822640135884285
    2. ' cost' → logprob: -2.582263946533203
    3. '(cost' → logprob: -5.832263946533203
    4. '-cost' → logprob: -7.832263946533203
    5. '-' → logprob: -10.707263946533203
    6. '   ' → logprob: -12.207263946533203
    7. ' (' → logprob: -12.332263946533203
    8. '_cost' → logprob: -13.082263946533203
    9. ' -' → logprob: -13.082263946533203
    10. '
' → logprob: -13.332263946533203

Token 536: '_with' (ID: 14161)
  Prédit: '_with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_with' → logprob: -0.0008615575497969985
    2. '_difference' → logprob: -7.750861644744873
    3. '-with' → logprob: -8.000861167907715
    4. '-' → logprob: -10.375861167907715
    5. '_diff' → logprob: -11.250861167907715
    6. '_segment' → logprob: -11.750861167907715
    7. 'with' → logprob: -12.125861167907715
    8. '_cost' → logprob: -12.250861167907715
    9. 'segment' → logprob: -12.375861167907715
    10. '_-' → logprob: -12.375861167907715

Token 537: '_ic' (ID: 79605)
  Prédit: '_ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ic' → logprob: -0.0006291598547250032
    2. 'ic' → logprob: -8.250629425048828
    3. '-' → logprob: -8.750629425048828
    4. '_with' → logprob: -9.000629425048828
    5. 'segment' → logprob: -10.500629425048828
    6. 'with' → logprob: -11.250629425048828
    7. 'cost' → logprob: -11.750629425048828
    8. '_if' → logprob: -11.750629425048828
    9. 'IC' → logprob: -12.750629425048828
    10. '
' → logprob: -12.875629425048828

Token 538: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4741095006465912
    2. ' -' → logprob: -0.9741095304489136
    3. '-token' → logprob: -11.349109649658203
    4. '-total' → logprob: -11.974109649658203
    5. '   ' → logprob: -12.599109649658203
    6. '-cost' → logprob: -13.724109649658203
    7. '           ' → logprob: -14.224109649658203
    8. '                   ' → logprob: -14.474109649658203
    9. '-ex' → logprob: -14.474109649658203
    10. '-n' → logprob: -14.599109649658203

Token 539: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.01416350994259119
    2. ' cost' → logprob: -4.264163494110107
    3. 'segment' → logprob: -18.014163970947266
    4. '(cost' → logprob: -19.139163970947266
    5. '_cost' → logprob: -19.264163970947266
    6. 'code' → logprob: -20.389163970947266
    7. 'count' → logprob: -21.139163970947266
    8. '```' → logprob: -21.389163970947266
    9. '               ' → logprob: -21.639163970947266
    10. 'Cost' → logprob: -21.639163970947266

Token 540: '_with' (ID: 14161)
  Prédit: '_with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_with' → logprob: -0.00046558488975279033
    2. '_cost' → logprob: -8.125465393066406
    3. '_p' → logprob: -9.125465393066406
    4. 'with' → logprob: -9.875465393066406
    5. 'With' → logprob: -12.875465393066406
    6. 'cost' → logprob: -13.750465393066406
    7. '_segment' → logprob: -13.875465393066406
    8. '_' → logprob: -14.375465393066406
    9. 'p' → logprob: -14.500465393066406
    10. ' with' → logprob: -14.750465393066406

Token 541: '_p' (ID: 1359)
  Prédit: 'paper'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'paper' → logprob: -0.0633711889386177
    2. '_p' → logprob: -2.813371181488037
    3. 'p' → logprob: -6.688371181488037
    4. 'segment' → logprob: -9.563371658325195
    5. 'aper' → logprob: -10.313371658325195
    6. 'ap' → logprob: -11.313371658325195
    7. 'book' → logprob: -11.688371658325195
    8. '```' → logprob: -11.688371658325195
    9. 'pap' → logprob: -12.438371658325195
    10. ' paper' → logprob: -13.188371658325195

Token 542: 'aper' (ID: 3831)
  Prédit: 'aper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aper' → logprob: -2.3915141355246305e-05
    2. 'paper' → logprob: -11.25002384185791
    3. 'a' → logprob: -12.50002384185791
    4. 'ap' → logprob: -13.37502384185791
    5. 'per' → logprob: -13.87502384185791
    6. 'er' → logprob: -13.87502384185791
    7. 'apter' → logprob: -14.62502384185791
    8. 'ayer' → logprob: -14.62502384185791
    9. 'ape' → logprob: -14.62502384185791
    10. '```' → logprob: -15.00002384185791

Token 543: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0024085890036076307
    2. '
' → logprob: -6.252408504486084
    3. 'self' → logprob: -7.877408504486084
    4. ' self' → logprob: -9.752408981323242
    5. 'return' → logprob: -11.252408981323242
    6. '<|end|>' → logprob: -12.127408981323242
    7. '        
' → logprob: -12.127408981323242
    8. 'else' → logprob: -12.627408981323242
    9. ' return' → logprob: -13.002408981323242
    10. '
' → logprob: -13.002408981323242

Token 544: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35179606080055237
    2. 'self' → logprob: -1.22679603099823
    3. ' self' → logprob: -6.1017961502075195
    4. '
' → logprob: -7.2267961502075195
    5. 'return' → logprob: -8.85179615020752
    6. '   ' → logprob: -8.97679615020752
    7. '	' → logprob: -10.85179615020752
    8. '	self' → logprob: -10.97679615020752
    9. '        
' → logprob: -10.97679615020752
    10. '```' → logprob: -11.22679615020752

Token 545: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47718513011932373
    2. 'self' (adapté à ' self') → logprob: -0.9771851301193237
    3. ' self' → logprob: -5.852185249328613
    4. 'return' → logprob: -8.977185249328613
    5. '   ' → logprob: -9.352185249328613
    6. '	self' → logprob: -11.352185249328613
    7. '	' → logprob: -12.977185249328613
    8. ' return' → logprob: -14.352185249328613
    9. '
' → logprob: -14.602185249328613
    10. ' ' → logprob: -14.602185249328613

Token 546: '.total' (ID: 23374)
  Prédit: '.total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.total' → logprob: -0.004080062732100487
    2. '.' → logprob: -5.504080295562744
    3. 'total' → logprob: -14.254079818725586
    4. ' .' → logprob: -14.379079818725586
    5. '.next' → logprob: -16.629079818725586
    6. '.Total' → logprob: -16.879079818725586
    7. '.current' → logprob: -17.004079818725586
    8. '.user' → logprob: -17.004079818725586
    9. '	total' → logprob: -17.754079818725586
    10. '._' → logprob: -17.879079818725586

Token 547: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -7.896309739408025e-07
    2. 'cost' → logprob: -14.500000953674316
    3. '_' → logprob: -15.625000953674316
    4. '_code' → logprob: -17.875
    5. 'Cost' → logprob: -18.0
    6. '_COST' → logprob: -18.375
    7. ' _' → logprob: -19.0
    8. '._' → logprob: -19.875
    9. '\' → logprob: -19.875
    10. '_score' → logprob: -20.25

Token 548: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3869124948978424
    2. ' =' → logprob: -1.13691246509552
    3. ' +=' → logprob: -10.13691234588623
    4. ' ' → logprob: -14.01191234588623
    5. '+=' → logprob: -14.01191234588623
    6. '   ' → logprob: -15.63691234588623
    7. ' ' → logprob: -17.261913299560547
    8. ' |=' → logprob: -17.636913299560547
    9. '.=' → logprob: -17.636913299560547
    10. ' -=' → logprob: -17.886913299560547

Token 549: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.03804585337638855
    2. ' total' → logprob: -3.288045883178711
    3. 'int' → logprob: -12.413045883178711
    4. ' int' → logprob: -15.288045883178711
    5. '   ' → logprob: -16.03804588317871
    6. '	total' → logprob: -16.91304588317871
    7. '(total' → logprob: -17.16304588317871
    8. ' ' → logprob: -18.16304588317871
    9. 'tot' → logprob: -18.28804588317871
    10. '$total' → logprob: -18.41304588317871

Token 550: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -2.8802491215174086e-05
    2. '_' → logprob: -11.125028610229492
    3. 'cost' → logprob: -11.375028610229492
    4. '_code' → logprob: -13.375028610229492
    5. ' _' → logprob: -14.875028610229492
    6. 'Cost' → logprob: -15.500028610229492
    7. '_COST' → logprob: -16.375028610229492
    8. '_total' → logprob: -16.750028610229492
    9. '._' → logprob: -16.750028610229492
    10. ' cost' → logprob: -17.125028610229492

Token 551: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.038282688707113266
    2. '<|end|>' → logprob: -3.288282632827759
    3. '       ' → logprob: -9.41328239440918
    4. '   ' → logprob: -9.78828239440918
    5. '<|end|>' → logprob: -10.16328239440918
    6. '    
' → logprob: -10.78828239440918
    7. '```' → logprob: -11.66328239440918
    8. '

' → logprob: -11.91328239440918
    9. '\n' → logprob: -11.91328239440918
    10. '  
' → logprob: -11.91328239440918

Token 552: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 553: ' return' (ID: 622)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 554: ' total' (ID: 3609)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1851826012134552
    2. ' self' → logprob: -2.185182571411133
    3. 'total' → logprob: -3.185182571411133
    4. ' total' → logprob: -4.185182571411133
    5. ' ' → logprob: -17.685182571411133
    6. '   ' → logprob: -17.935182571411133
    7. ' ' → logprob: -18.310182571411133
    8. '	self' → logprob: -18.685182571411133
    9. '_total' → logprob: -18.810182571411133
    10. '$total' → logprob: -19.310182571411133

Token 555: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.2294992059469223
    2. '_' → logprob: -1.6044992208480835
    3. '_code' → logprob: -6.979499340057373
    4. '_token' → logprob: -7.229499340057373
    5. '_total' → logprob: -7.354499340057373
    6. '_t' → logprob: -7.354499340057373
    7. ')' → logprob: -8.604498863220215
    8. ' _' → logprob: -9.104498863220215
    9. '.' → logprob: -9.354498863220215
    10. '```' → logprob: -9.354498863220215

Token 556: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 557: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 558: ' Input' (ID: 10090)
  Prédit: 'Rail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Rail' → logprob: -1.5342926979064941
    2. ' Travel' → logprob: -1.9092926979064941
    3. ' Train' → logprob: -1.9092926979064941
    4. ' Trip' → logprob: -2.159292697906494
    5. ' Railway' → logprob: -2.409292697906494
    6. ' Rail' → logprob: -2.784292697906494
    7. 'Trip' → logprob: -2.909292697906494
    8. 'Travel' → logprob: -3.409292697906494
    9. 'Train' → logprob: -3.534292697906494
    10. ' Solution' → logprob: -3.659292697906494

Token 559: 'Reader' (ID: 7171)
  Prédit: 'Reader'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Reader' → logprob: -0.8491140604019165
    2. 'Handler' → logprob: -1.3491140604019165
    3. 'Data' → logprob: -1.5991140604019165
    4. 'Parser' → logprob: -2.474113941192627
    5. 'Processor' → logprob: -4.724113941192627
    6. ':' → logprob: -4.849113941192627
    7. ':
' → logprob: -5.099113941192627
    8. '():
' → logprob: -6.724113941192627
    9. '():' → logprob: -7.099113941192627
    10. 'Manager' → logprob: -7.349113941192627

Token 560: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011069757863879204
    2. ':
' → logprob: -4.5110697746276855
    3. ':def' → logprob: -11.636069297790527
    4. '):' → logprob: -12.136069297790527
    5. '():' → logprob: -13.386069297790527
    6. '(' → logprob: -13.511069297790527
    7. '(object' → logprob: -13.761069297790527
    8. 'def' → logprob: -14.136069297790527
    9. ':

' → logprob: -14.386069297790527
    10. '):
' → logprob: -14.636069297790527

Token 561: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0034527680836617947
    2. ' def' → logprob: -5.878452777862549
    3. 'def' → logprob: -8.12845230102539
    4. '<|end|>' → logprob: -8.62845230102539
    5. '    ' → logprob: -10.37845230102539
    6. '    
' → logprob: -10.50345230102539
    7. '```' → logprob: -10.62845230102539
    8. 'import' → logprob: -10.87845230102539
    9. '‌' → logprob: -11.25345230102539
    10. ':' → logprob: -11.37845230102539

Token 562: ' @' (ID: 759)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.577761709690094
    2. ' def' → logprob: -0.827761709690094
    3. '   ' → logprob: -6.327761650085449
    4. 'import' → logprob: -10.45276165008545
    5. '@' (adapté à ' @') → logprob: -13.20276165008545
    6. '	def' → logprob: -13.20276165008545
    7. '```' → logprob: -13.45276165008545
    8. 'class' → logprob: -15.07776165008545
    9. ' @' → logprob: -16.077762603759766
    10. ' import' → logprob: -16.452762603759766

Token 563: 'staticmethod' (ID: 53164)
  Prédit: 'staticmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -6.24179228907451e-05
    2. 'classmethod' → logprob: -9.750061988830566
    3. 'static' → logprob: -12.500061988830566
    4. 'dat' → logprob: -15.000061988830566
    5. 'st' → logprob: -17.625062942504883
    6. ' static' → logprob: -17.875062942504883
    7. 'stat' → logprob: -18.750062942504883
    8. 'property' → logprob: -20.375062942504883
    9. 'sta' → logprob: -20.625062942504883
    10. '@' → logprob: -22.750062942504883

Token 564: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.014551159925758839
    2. ' def' → logprob: -4.514551162719727
    3. '   ' → logprob: -6.014551162719727
    4. '
' → logprob: -7.014551162719727
    5. '(' → logprob: -10.389551162719727
    6. '	def' → logprob: -10.389551162719727
    7. '(def' → logprob: -10.389551162719727
    8. '()
' → logprob: -11.264551162719727
    9. ' ' → logprob: -11.389551162719727
    10. '    
' → logprob: -11.514551162719727

Token 565: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.006721995305269957
    2. ' def' → logprob: -5.0067219734191895
    3. '
' → logprob: -12.006722450256348
    4. '   ' → logprob: -15.506722450256348
    5. '```' → logprob: -15.881722450256348
    6. ' ' → logprob: -16.50672149658203
    7. '	def' → logprob: -17.00672149658203
    8. '  
' → logprob: -17.50672149658203
    9. ':def' → logprob: -18.25672149658203
    10. '_def' → logprob: -18.63172149658203

Token 566: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0001234428636962548
    2. ' def' → logprob: -9.000123023986816
    3. 'read' → logprob: -17.750123977661133
    4. '   ' → logprob: -19.125123977661133
    5. 'from' → logprob: -19.125123977661133
    6. '
' → logprob: -20.875123977661133
    7. ' ' → logprob: -21.375123977661133
    8. 'import' → logprob: -21.375123977661133
    9. 'input' → logprob: -21.500123977661133
    10. 'get' → logprob: -21.625123977661133

Token 567: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.0011741555063053966
    2. ' read' → logprob: -6.751173973083496
    3. 'parse' → logprob: -13.001173973083496
    4. ' readline' → logprob: -14.126173973083496
    5. 'from' → logprob: -14.751173973083496
    6. 'get' → logprob: -15.126173973083496
    7. '.read' → logprob: -16.376174926757812
    8. 'input' → logprob: -16.501174926757812
    9. '_read' → logprob: -17.126174926757812
    10. '	read' → logprob: -17.751174926757812

Token 568: '_int' (ID: 12285)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.2969784736633301
    2. '():
' → logprob: -2.17197847366333
    3. '_input' → logprob: -2.79697847366333
    4. '()' → logprob: -2.79697847366333
    5. '_trip' → logprob: -5.17197847366333
    6. '_lines' → logprob: -5.54697847366333
    7. '_line' → logprob: -5.54697847366333
    8. 'int' → logprob: -6.29697847366333
    9. '_int' → logprob: -7.04697847366333
    10. 'input' → logprob: -7.29697847366333

Token 569: 's' (ID: 82)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.11826694011688232
    2. '()' → logprob: -2.368267059326172
    3. '():
' → logprob: -4.243267059326172
    4. 's' → logprob: -6.118267059326172
    5. '_list' → logprob: -7.368267059326172
    6. ' ()' → logprob: -8.743267059326172
    7. '_line' → logprob: -9.243267059326172
    8. '()>' → logprob: -9.493267059326172
    9. '():

' → logprob: -9.743267059326172
    10. ' ():' → logprob: -10.243267059326172

Token 570: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0005986657342873514
    2. '():
' → logprob: -8.000598907470703
    3. '(line' → logprob: -8.625598907470703
    4. ' ():' → logprob: -9.875598907470703
    5. '()' → logprob: -10.500598907470703
    6. '(' → logprob: -13.375598907470703
    7. '(prompt' → logprob: -13.875598907470703
    8. ' ()' → logprob: -14.625598907470703
    9. '(file' → logprob: -15.125598907470703
    10. '(input' → logprob: -15.375598907470703

Token 571: '       ' (ID: 309)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.007871832698583603
    2. '():
' → logprob: -5.132871627807617
    3. '()' → logprob: -6.257871627807617
    4. '()->' → logprob: -11.507871627807617
    5. 'return' → logprob: -12.007871627807617
    6. '()[' → logprob: -12.757871627807617
    7. ' ():' → logprob: -12.882871627807617
    8. '(' → logprob: -13.632871627807617
    9. '().' → logprob: -14.507871627807617
    10. '():
' → logprob: -14.507871627807617

Token 572: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.006849284749478102
    2. 'list' → logprob: -5.63184928894043
    3. ' return' → logprob: -5.88184928894043
    4. '[]' → logprob: -8.88184928894043
    5. 'map' → logprob: -9.00684928894043
    6. '()' → logprob: -9.00684928894043
    7. ' list' → logprob: -10.50684928894043
    8. '   ' → logprob: -10.88184928894043
    9. 'int' → logprob: -11.25684928894043
    10. 'input' → logprob: -12.38184928894043

Token 573: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0011918948730453849
    2. ' list' → logprob: -6.751192092895508
    3. 'map' → logprob: -10.751192092895508
    4. '[list' → logprob: -15.126192092895508
    5. '[' → logprob: -17.001192092895508
    6. '	list' → logprob: -18.751192092895508
    7. ' map' → logprob: -18.876192092895508
    8. 'tuple' → logprob: -20.751192092895508
    9. '=list' → logprob: -20.876192092895508
    10. '(list' → logprob: -20.876192092895508

Token 574: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -1.4617256056226324e-05
    2. '(' → logprob: -11.250014305114746
    3. '(int' → logprob: -13.750014305114746
    4. '(input' → logprob: -15.250014305114746
    5. 'map' → logprob: -15.625014305114746
    6. '(
' → logprob: -17.750015258789062
    7. '_map' → logprob: -18.500015258789062
    8. '()' → logprob: -18.875015258789062
    9. '(list' → logprob: -19.000015258789062
    10. '	map' → logprob: -19.375015258789062

Token 575: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.018165279179811478
    2. 'int' → logprob: -4.018165111541748
    3. ',int' → logprob: -12.393165588378906
    4. '(' → logprob: -12.893165588378906
    5. ' int' → logprob: -13.018165588378906
    6. 'input' → logprob: -13.518165588378906
    7. '<int' → logprob: -13.518165588378906
    8. '```' → logprob: -13.518165588378906
    9. '[int' → logprob: -13.643165588378906
    10. '=int' → logprob: -14.268165588378906

Token 576: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7152654528617859
    2. ',input' → logprob: -0.7152654528617859
    3. 'input' → logprob: -3.8402655124664307
    4. '(input' → logprob: -7.965265274047852
    5. ' input' → logprob: -10.715265274047852
    6. ' ,' → logprob: -11.590265274047852
    7. '   ' → logprob: -12.215265274047852
    8. '(' → logprob: -13.965265274047852
    9. '	input' → logprob: -14.215265274047852
    10. '<input' → logprob: -14.715265274047852

Token 577: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.001171056181192398
    2. ' input' → logprob: -6.751171112060547
    3. ',input' → logprob: -14.376171112060547
    4. '   ' → logprob: -15.501171112060547
    5. '<input' → logprob: -17.126171112060547
    6. 'sys' → logprob: -17.626171112060547
    7. '=input' → logprob: -17.626171112060547
    8. ' ' → logprob: -18.001171112060547
    9. '(input' → logprob: -18.126171112060547
    10. '	input' → logprob: -18.126171112060547

Token 578: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.0280383548888494e-06
    2. '()' → logprob: -14.000000953674316
    3. ' ().' → logprob: -16.250001907348633
    4. '(' → logprob: -18.375001907348633
    5. '.' → logprob: -19.000001907348633
    6. '.split' → logprob: -19.375001907348633
    7. ' .' → logprob: -19.750001907348633
    8. '().__' → logprob: -20.875001907348633
    9. '   ' → logprob: -21.375001907348633
    10. '()
' → logprob: -21.375001907348633

Token 579: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.000912774819880724
    2. 'strip' → logprob: -7.000912666320801
    3. 'read' → logprob: -14.5009126663208
    4. 'rstrip' → logprob: -14.5009126663208
    5. ' split' → logprob: -15.3759126663208
    6. 'spl' → logprob: -16.625913619995117
    7. '(split' → logprob: -16.750913619995117
    8. '_split' → logprob: -17.750913619995117
    9. '.split' → logprob: -17.875913619995117
    10. 'str' → logprob: -19.250913619995117

Token 580: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.005619804374873638
    2. '()' → logprob: -5.505620002746582
    3. '))' → logprob: -6.505620002746582
    4. '()))
' → logprob: -10.880620002746582
    5. '())' → logprob: -11.130620002746582
    6. '(' → logprob: -11.630620002746582
    7. '())))' → logprob: -13.505620002746582
    8. '()));' → logprob: -14.005620002746582
    9. '())).' → logprob: -15.755620002746582
    10. '()))

' → logprob: -16.130619049072266

Token 581: '   ' (ID: 271)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.04191574081778526
    2. 'def' → logprob: -3.7919156551361084
    3. '
' → logprob: -4.7919158935546875
    4. '<|end|>' → logprob: -5.0419158935546875
    5. '```' → logprob: -5.7919158935546875
    6. '

' → logprob: -8.291915893554688
    7. ' class' → logprob: -8.541915893554688
    8. '   ' → logprob: -9.916915893554688
    9. '<|end|>' → logprob: -9.916915893554688
    10. '    
' → logprob: -10.041915893554688

Token 582: ' @' (ID: 759)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' (adapté à ' @') → logprob: -0.0012149984249845147
    2. 'def' → logprob: -6.751214981079102
    3. ' @' → logprob: -10.751214981079102
    4. '   ' → logprob: -11.001214981079102
    5. 'class' → logprob: -12.376214981079102
    6. '```' → logprob: -13.751214981079102
    7. ' def' → logprob: -14.251214981079102
    8. 'staticmethod' → logprob: -14.376214981079102
    9. 'classmethod' → logprob: -16.1262149810791
    10. '@property' → logprob: -16.7512149810791

Token 583: 'classmethod' (ID: 64680)
  Prédit: 'staticmethod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -1.6240566083070007e-06
    2. 'classmethod' → logprob: -13.500001907348633
    3. 'static' → logprob: -15.750001907348633
    4. ' static' → logprob: -22.625001907348633
    5. 'property' → logprob: -24.500001907348633
    6. 'stat' → logprob: -25.250001907348633
    7. 'dat' → logprob: -26.750001907348633
    8. '@' → logprob: -26.875001907348633
    9. 'Static' → logprob: -27.500001907348633
    10. '_static' → logprob: -27.750001907348633

Token 584: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43444979190826416
    2. 'def' → logprob: -1.0594497919082642
    3. ' def' → logprob: -5.184449672698975
    4. '
' → logprob: -9.559450149536133
    5. '<|end|>' → logprob: -10.809450149536133
    6. '	def' → logprob: -11.059450149536133
    7. '  ' → logprob: -11.684450149536133
    8. '    
' → logprob: -12.809450149536133
    9. '_def' → logprob: -13.309450149536133
    10. ',' → logprob: -13.684450149536133

Token 585: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.014513926580548286
    2. '   ' → logprob: -4.889513969421387
    3. ' def' → logprob: -5.014513969421387
    4. '	def' → logprob: -8.889513969421387
    5. '_def' → logprob: -10.639513969421387
    6. '
' → logprob: -10.764513969421387
    7. ':def' → logprob: -11.264513969421387
    8. '```' → logprob: -11.639513969421387
    9. '<|end|>' → logprob: -11.764513969421387
    10. '(def' → logprob: -11.889513969421387

Token 586: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -6.704273118884885e-07
    2. ' def' → logprob: -14.375000953674316
    3. '   ' → logprob: -17.25
    4. 'from' → logprob: -20.875
    5. 'de' → logprob: -21.125
    6. '    
' → logprob: -21.375
    7. '
' → logprob: -21.375
    8. '	def' → logprob: -22.375
    9. ' ' → logprob: -23.0
    10. 's' → logprob: -23.25

Token 587: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.31341439485549927
    2. 'def' → logprob: -1.3134143352508545
    3. ' def' → logprob: -9.688414573669434
    4. ' read' → logprob: -9.938414573669434
    5. 'from' → logprob: -10.563414573669434
    6. '
' → logprob: -11.688414573669434
    7. 'get' → logprob: -12.813414573669434
    8. 'parse' → logprob: -13.563414573669434
    9. '_read' → logprob: -14.188414573669434
    10. 'classmethod' → logprob: -14.313414573669434

Token 588: '_problem' (ID: 162384)
  Prédit: '_trip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_trip' → logprob: -0.29285597801208496
    2. '_input' → logprob: -1.792855978012085
    3. '_data' → logprob: -3.292855978012085
    4. '_test' → logprob: -4.167856216430664
    5. '_inputs' → logprob: -5.042856216430664
    6. 'trip' → logprob: -5.292856216430664
    7. '_list' → logprob: -5.417856216430664
    8. '_line' → logprob: -5.542856216430664
    9. '_lines' → logprob: -6.167856216430664
    10. '(cls' → logprob: -6.167856216430664

Token 589: '_instance' (ID: 27848)
  Prédit: '_input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.4551248252391815
    2. '(cls' → logprob: -1.330124855041504
    3. '_data' → logprob: -2.455124855041504
    4. '_instance' → logprob: -4.705124855041504
    5. '_parameters' → logprob: -5.330124855041504
    6. '(
' → logprob: -7.830124855041504
    7. '_inputs' → logprob: -7.955124855041504
    8. 'data' → logprob: -8.455124855041504
    9. '(' → logprob: -8.955124855041504
    10. 'input' → logprob: -10.205124855041504

Token 590: '(cls' (ID: 46446)
  Prédit: '(cls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -3.128163257315464e-07
    2. 'cls' → logprob: -15.625
    3. '(clazz' → logprob: -16.625
    4. '(' → logprob: -17.0
    5. '(
' → logprob: -17.5
    6. '(cl' → logprob: -17.5
    7. 'classmethod' → logprob: -19.5
    8. '   ' → logprob: -19.875
    9. '(class' → logprob: -20.0
    10. '(ctx' → logprob: -20.5

Token 591: '):
' (ID: 1883)
  Prédit: '(cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -2.939851037808694e-05
    2. '):
' → logprob: -11.625029563903809
    3. '):' → logprob: -11.625029563903809
    4. '():
' → logprob: -12.375029563903809
    5. '():' → logprob: -12.500029563903809
    6. '   ' → logprob: -13.500029563903809
    7. 'cls' → logprob: -14.000029563903809
    8. ')(' → logprob: -15.000029563903809
    9. ',' → logprob: -15.250029563903809
    10. '(clazz' → logprob: -15.250029563903809

Token 592: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000377645599655807
    2. '()' → logprob: -8.000377655029297
    3. '(' → logprob: -11.125377655029297
    4. '```' → logprob: -12.250377655029297
    5. ',' → logprob: -12.500377655029297
    6. '():
' → logprob: -13.000377655029297
    7. '<|end|>' → logprob: -13.000377655029297
    8. '():' → logprob: -13.250377655029297
    9. '   ' → logprob: -13.500377655029297
    10. '        
' → logprob: -13.750377655029297

Token 593: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.15353016555309296
    2. 'N' (adapté à ' N') → logprob: -2.2785301208496094
    3. '       ' → logprob: -3.4035301208496094
    4. ' n' → logprob: -5.528530120849609
    5. 'num' → logprob: -6.653530120849609
    6. ' N' → logprob: -7.528530120849609
    7. 'rail' → logprob: -8.15353012084961
    8. 'nums' → logprob: -9.40353012084961
    9. 'm' → logprob: -10.02853012084961
    10. 'M' → logprob: -10.27853012084961

Token 594: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8115256428718567
    2. ',' → logprob: -0.9365256428718567
    3. '=' → logprob: -1.811525583267212
    4. ',N' → logprob: -8.936525344848633
    5. '   ' → logprob: -9.186525344848633
    6. '       ' → logprob: -9.686525344848633
    7. ' ,' → logprob: -9.686525344848633
    8. '=int' → logprob: -10.936525344848633
    9. ',n' → logprob: -11.436525344848633
    10. '    ' → logprob: -11.686525344848633

Token 595: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.8983241319656372
    2. 'K' → logprob: -1.1483241319656372
    3. ' M' → logprob: -1.7733241319656372
    4. ' K' → logprob: -2.5233240127563477
    5. 'Q' → logprob: -4.523324012756348
    6. 'T' → logprob: -5.273324012756348
    7. ' Q' → logprob: -6.773324012756348
    8. ' =' → logprob: -6.898324012756348
    9. ' T' → logprob: -6.898324012756348
    10. 'S' → logprob: -6.898324012756348

Token 596: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16055037081241608
    2. '=' → logprob: -1.9105503559112549
    3. ',' → logprob: -8.035550117492676
    4. '   ' → logprob: -13.910550117492676
    5. '    ' → logprob: -14.035550117492676
    6. '＝' → logprob: -15.285550117492676
    7. ' ' → logprob: -15.660550117492676
    8. '  ' → logprob: -16.785551071166992
    9. '=N' → logprob: -16.785551071166992
    10. '        ' → logprob: -17.035551071166992

Token 597: ' cls' (ID: 26133)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cls' → logprob: -0.15188820660114288
    2. ' cls' → logprob: -2.276888132095337
    3. 'map' → logprob: -3.526888132095337
    4. ' map' → logprob: -5.026888370513916
    5. 'Input' → logprob: -6.151888370513916
    6. ' Input' → logprob: -9.276887893676758
    7. 'list' → logprob: -9.901887893676758
    8. '(cls' → logprob: -10.276887893676758
    9. 'read' → logprob: -10.901887893676758
    10. 'input' → logprob: -11.401887893676758

Token 598: '.read' (ID: 7211)
  Prédit: '.read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.read' → logprob: -2.057743949990254e-05
    2. '.' → logprob: -11.375020980834961
    3. 'read' → logprob: -11.625020980834961
    4. ' .' → logprob: -16.25002098083496
    5. '.readline' → logprob: -19.12502098083496
    6. ' read' → logprob: -19.75002098083496
    7. '   ' → logprob: -20.50002098083496
    8. '().' → logprob: -20.75002098083496
    9. '(read' → logprob: -21.00002098083496
    10. '._' → logprob: -21.00002098083496

Token 599: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.060310088098049164
    2. '()' → logprob: -3.685310125350952
    3. 'ints' → logprob: -3.685310125350952
    4. 'int' → logprob: -5.060309886932373
    5. 'Ints' → logprob: -7.060309886932373
    6. 's' → logprob: -7.435309886932373
    7. '()
' → logprob: -8.060310363769531
    8. '())' → logprob: -9.685310363769531
    9. '_' → logprob: -9.935310363769531
    10. ' ints' → logprob: -10.310310363769531

Token 600: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.038056179881095886
    2. '()' → logprob: -3.2880561351776123
    3. '()
' → logprob: -11.663056373596191
    4. '())' → logprob: -13.163056373596191
    5. ' ()' → logprob: -13.413056373596191
    6. '(' → logprob: -13.788056373596191
    7. '(),' → logprob: -15.288056373596191
    8. 'S' → logprob: -15.413056373596191
    9. ' s' → logprob: -15.413056373596191
    10. '()]' → logprob: -15.538056373596191

Token 601: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.020579377189278603
    2. '()
' → logprob: -3.8955793380737305
    3. '       ' → logprob: -10.77057933807373
    4. '<|end|>' → logprob: -12.39557933807373
    5. '()
' → logprob: -12.64557933807373
    6. '();' → logprob: -12.77057933807373
    7. '()\' → logprob: -13.02057933807373
    8. '()

' → logprob: -13.89557933807373
    9. '()[' → logprob: -14.39557933807373
    10. '()`' → logprob: -14.77057933807373

Token 602: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0033441828563809395
    2. '<|end|>' → logprob: -6.7533440589904785
    3. 'rail' → logprob: -7.5033440589904785
    4. '        
' → logprob: -7.8783440589904785
    5. 'segments' → logprob: -7.8783440589904785
    6. ',' → logprob: -8.628344535827637
    7. ' rail' → logprob: -8.878344535827637
    8. '
' → logprob: -9.753344535827637
    9. 'rails' → logprob: -9.753344535827637
    10. '```' → logprob: -9.878344535827637

Token 603: ' travel' (ID: 6410)
  Prédit: 'rail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rail' → logprob: -0.03418131172657013
    2. ' rail' → logprob: -3.6591813564300537
    3. '       ' → logprob: -5.659181118011475
    4. 'rails' → logprob: -5.909181118011475
    5. 'segments' → logprob: -7.284181118011475
    6. ' rails' → logprob: -7.784181118011475
    7. 'paper' → logprob: -9.034181594848633
    8. ' segments' → logprob: -9.284181594848633
    9. 'ra' → logprob: -9.534181594848633
    10. '   ' → logprob: -9.784181594848633

Token 604: '_route' (ID: 67828)
  Prédit: '_route'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_route' → logprob: -5.049755782238208e-05
    2. 'route' → logprob: -10.37505054473877
    3. '_path' → logprob: -11.87505054473877
    4. '_routes' → logprob: -12.00005054473877
    5. '_plan' → logprob: -12.37505054473877
    6. '=' → logprob: -14.87505054473877
    7. '   ' → logprob: -15.00005054473877
    8. ' =' → logprob: -15.12505054473877
    9. '```' → logprob: -15.62505054473877
    10. '_points' → logprob: -15.87505054473877

Token 605: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022422909736633
    2. ' =' → logprob: -1.910224199295044
    3. '＝' → logprob: -17.53522491455078
    4. '=[]' → logprob: -17.78522491455078
    5. ' ' → logprob: -18.66022491455078
    6. ',' → logprob: -19.16022491455078
    7. '   ' → logprob: -19.66022491455078
    8. ')' → logprob: -19.91022491455078
    9. '[' → logprob: -20.03522491455078
    10. 's' → logprob: -20.16022491455078

Token 606: ' cls' (ID: 26133)
  Prédit: 'cls'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cls' → logprob: -0.05044785141944885
    2. ' cls' → logprob: -3.300447940826416
    3. '[' → logprob: -4.550447940826416
    4. ' [' → logprob: -6.550447940826416
    5. '[]' → logprob: -9.050447463989258
    6. '[class' → logprob: -9.550447463989258
    7. '[]
' → logprob: -10.175447463989258
    8. 'Cls' → logprob: -10.675447463989258
    9. 'Input' → logprob: -10.800447463989258
    10. '(cls' → logprob: -11.175447463989258

Token 607: '.read' (ID: 7211)
  Prédit: '.read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.read' → logprob: -0.002584697213023901
    2. 'read' → logprob: -6.127584934234619
    3. '.' → logprob: -8.252584457397461
    4. '().' → logprob: -10.002584457397461
    5. '.readline' → logprob: -10.502584457397461
    6. '[].' → logprob: -10.627584457397461
    7. '[' → logprob: -10.877584457397461
    8. '   ' → logprob: -12.877584457397461
    9. '[]
' → logprob: -12.877584457397461
    10. '[]' → logprob: -13.252584457397461

Token 608: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.7096485495567322
    2. 'Ints' → logprob: -1.209648609161377
    3. 'ints' → logprob: -2.459648609161377
    4. 'Int' → logprob: -2.834648609161377
    5. '_input' → logprob: -3.959648609161377
    6. '[' → logprob: -4.334648609161377
    7. 'Input' → logprob: -4.709648609161377
    8. 'int' → logprob: -5.584648609161377
    9. 'reader' → logprob: -5.709648609161377
    10. '[Int' → logprob: -5.834648609161377

Token 609: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1301220804452896
    2. 'ts' → logprob: -2.755122184753418
    3. '()' → logprob: -2.880122184753418
    4. 't' → logprob: -6.505122184753418
    5. '())' → logprob: -7.755122184753418
    6. '()
' → logprob: -8.880122184753418
    7. '().' → logprob: -9.380122184753418
    8. 'list' → logprob: -10.755122184753418
    9. 'ints' → logprob: -10.755122184753418
    10. 'sts' → logprob: -10.880122184753418

Token 610: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00081487005809322
    2. '()
' → logprob: -7.125814914703369
    3. '(' → logprob: -12.625814437866211
    4. ' ()' → logprob: -12.875814437866211
    5. '()

' → logprob: -14.125814437866211
    6. '()
' → logprob: -14.125814437866211
    7. '())' → logprob: -14.625814437866211
    8. '()]' → logprob: -14.875814437866211
    9. '()<' → logprob: -15.000814437866211
    10. '()[' → logprob: -15.125814437866211

Token 611: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02391287311911583
    2. 'rail' → logprob: -3.7739129066467285
    3. ' rail' → logprob: -7.8989129066467285
    4. 'rails' → logprob: -8.77391242980957
    5. '   ' → logprob: -10.14891242980957
    6. 'segments' → logprob: -10.27391242980957
    7. '           ' → logprob: -11.52391242980957
    8. ' rails' → logprob: -11.77391242980957
    9. '```' → logprob: -11.89891242980957
    10. '[' → logprob: -12.02391242980957

Token 612: ' rail' (ID: 21665)
  Prédit: 'rail'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rail' (adapté à ' rail') → logprob: -0.001908289035782218
    2. ' rail' → logprob: -7.001908302307129
    3. '       ' → logprob: -8.001908302307129
    4. 'segments' → logprob: -8.126908302307129
    5. 'rails' → logprob: -8.376908302307129
    6. 'ic' → logprob: -9.876908302307129
    7. '   ' → logprob: -10.501908302307129
    8. 'segment' → logprob: -11.126908302307129
    9. '```' → logprob: -11.751908302307129
    10. 'ra' → logprob: -12.001908302307129

Token 613: '_segments' (ID: 142925)
  Prédit: '_segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segments' → logprob: -2.2200749754119897e-06
    2. 'segments' → logprob: -13.875001907348633
    3. '_cost' → logprob: -14.125001907348633
    4. '_segment' → logprob: -15.250001907348633
    5. 's' → logprob: -16.000001907348633
    6. '_' → logprob: -17.250001907348633
    7. '_lengths' → logprob: -17.375001907348633
    8. 'Segments' → logprob: -17.875001907348633
    9. '_s' → logprob: -18.500001907348633
    10. '_data' → logprob: -18.875001907348633

Token 614: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6932983994483948
    2. ' =' → logprob: -0.6932983994483948
    3. '=[]' → logprob: -8.94329833984375
    4. '=[]
' → logprob: -11.69329833984375
    5. '       ' → logprob: -11.94329833984375
    6. '   ' → logprob: -12.56829833984375
    7. '=[' → logprob: -14.31829833984375
    8. '[]' → logprob: -15.19329833984375
    9. '        ' → logprob: -15.31829833984375
    10. '=
' → logprob: -15.44329833984375

Token 615: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5328119397163391
    2. '[
' → logprob: -1.2828118801116943
    3. '[]
' → logprob: -2.2828118801116943
    4. '[class' → logprob: -3.5328118801116943
    5. '[]' → logprob: -5.532812118530273
    6. ' [' → logprob: -7.782812118530273
    7. '[]

' → logprob: -9.782812118530273
    8. ' [
' → logprob: -10.407812118530273
    9. '[start' → logprob: -11.032812118530273
    10. ' []
' → logprob: -11.157812118530273

Token 616: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001840229262597859
    2. ' for' → logprob: -6.501840114593506
    3. 'for' → logprob: -8.001840591430664
    4. '   ' → logprob: -13.376840591430664
    5. '<|end|>' → logprob: -14.001840591430664
    6. ',' → logprob: -15.626840591430664
    7. '	for' → logprob: -15.876840591430664
    8. '           ' → logprob: -16.126840591430664
    9. '	   ' → logprob: -16.876840591430664
    10. '	' → logprob: -17.251840591430664

Token 617: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.2868831157684326
    2. ' for' → logprob: -1.9118831157684326
    3. '       ' → logprob: -2.2868831157684326
    4. '   ' → logprob: -11.786883354187012
    5. '	for' → logprob: -12.286883354187012
    6. '```' → logprob: -14.161883354187012
    7. '        
' → logprob: -14.286883354187012
    8. '
' → logprob: -14.411883354187012
    9. ' ' → logprob: -15.536883354187012
    10. '[' → logprob: -15.661883354187012

Token 618: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0010793721303343773
    2. '_i' → logprob: -7.376079559326172
    3. '_' → logprob: -8.126079559326172
    4. 'index' → logprob: -9.626079559326172
    5. ' i' → logprob: -10.251079559326172
    6. 'rail' → logprob: -10.751079559326172
    7. 'idx' → logprob: -11.001079559326172
    8. '_index' → logprob: -11.501079559326172
    9. 'segment' → logprob: -13.126079559326172
    10. '```' → logprob: -13.501079559326172

Token 619: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0031803252641111612
    2. 'in' → logprob: -5.753180503845215
    3. ',' → logprob: -14.128180503845215
    4. '_' → logprob: -14.628180503845215
    5. ' ' → logprob: -14.753180503845215
    6. 'n' → logprob: -14.878180503845215
    7. '	in' → logprob: -15.753180503845215
    8. 'range' → logprob: -15.878180503845215
    9. '   ' → logprob: -16.1281795501709
    10. 's' → logprob: -16.8781795501709

Token 620: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.000912774819880724
    2. ' range' → logprob: -7.000912666320801
    3. 'in' → logprob: -13.6259126663208
    4. '   ' → logprob: -16.250913619995117
    5. '(range' → logprob: -17.000913619995117
    6. '```' → logprob: -17.250913619995117
    7. '	range' → logprob: -17.625913619995117
    8. '  ' → logprob: -18.625913619995117
    9. ' in' → logprob: -18.750913619995117
    10. ' ' → logprob: -18.750913619995117

Token 621: '(' (ID: 7)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.25207382440567017
    2. '(' → logprob: -1.5020737648010254
    3. '(M' → logprob: -9.377074241638184
    4. 'N' → logprob: -10.627074241638184
    5. ' (' → logprob: -11.502074241638184
    6. ' N' → logprob: -11.627074241638184
    7. '1' → logprob: -11.877074241638184
    8. ' range' → logprob: -12.502074241638184
    9. 'range' → logprob: -13.377074241638184
    10. '   ' → logprob: -13.627074241638184

Token 622: '1' (ID: 16)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.018152866512537003
    2. '1' → logprob: -4.018152713775635
    3. ' N' → logprob: -13.143153190612793
    4. 'M' → logprob: -14.143153190612793
    5. '0' → logprob: -16.518152236938477
    6. '   ' → logprob: -16.643152236938477
    7. '(N' → logprob: -17.018152236938477
    8. '	N' → logprob: -17.643152236938477
    9. ' ' → logprob: -18.268152236938477
    10. '2' → logprob: -19.018152236938477

Token 623: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017190889921039343
    2. ' ,' → logprob: -6.376718997955322
    3. '<|end|>' → logprob: -12.37671947479248
    4. ',N' → logprob: -13.37671947479248
    5. '   ' → logprob: -13.50171947479248
    6. '       ' → logprob: -13.62671947479248
    7. 'to' → logprob: -13.62671947479248
    8. ',len' → logprob: -13.75171947479248
    9. ',
' → logprob: -14.37671947479248
    10. ' to' → logprob: -14.50171947479248

Token 624: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0004306692280806601
    2. ' N' → logprob: -7.750430583953857
    3. 'M' → logprob: -17.125431060791016
    4. '   ' → logprob: -19.250431060791016
    5. '>N' → logprob: -19.625431060791016
    6. '<N' → logprob: -19.875431060791016
    7. ' ' → logprob: -20.250431060791016
    8. ')' → logprob: -20.375431060791016
    9. '	N' → logprob: -20.625431060791016
    10. '(N' → logprob: -20.875431060791016

Token 625: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.09194169193506241
    2. '):
' → logprob: -3.0919415950775146
    3. ' +' → logprob: -3.5919415950775146
    4. '):' → logprob: -4.216941833496094
    5. '   ' → logprob: -10.091941833496094
    6. ',' → logprob: -10.841941833496094
    7. '=' → logprob: -10.966941833496094
    8. ' ):
' → logprob: -11.716941833496094
    9. ' ):' → logprob: -11.716941833496094
    10. '       ' → logprob: -11.841941833496094

Token 626: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10049887001514435
    2. '           ' → logprob: -2.725498914718628
    3. '<|end|>' → logprob: -3.725498914718628
    4. '```' → logprob: -6.100498676300049
    5. '<|end|>' → logprob: -6.975498676300049
    6. '   ' → logprob: -7.225498676300049
    7. ',' → logprob: -7.975498676300049
    8. ':' → logprob: -8.100499153137207
    9. ':
' → logprob: -8.850499153137207
    10. '	       ' → logprob: -9.350499153137207

Token 627: ' A' (ID: 355)
  Prédit: 'paper'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'paper' → logprob: -0.06631290912628174
    2. 'p' → logprob: -3.691312789916992
    3. 'pf' → logprob: -4.066312789916992
    4. 'ic' → logprob: -4.816312789916992
    5. 'a' → logprob: -4.941312789916992
    6. 'c' → logprob: -5.441312789916992
    7. 'cost' → logprob: -7.316312789916992
    8. 'pc' → logprob: -7.441312789916992
    9. 'fare' → logprob: -8.191312789916992
    10. '           ' → logprob: -8.816312789916992

Token 628: '_i' (ID: 10853)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000727921025827527
    2. ',B' → logprob: -7.375728130340576
    3. 'B' → logprob: -9.500727653503418
    4. ' ,' → logprob: -11.125727653503418
    5. '_,' → logprob: -12.250727653503418
    6. '=' → logprob: -13.000727653503418
    7. ' =' → logprob: -13.500727653503418
    8. ',C' → logprob: -14.125727653503418
    9. ' B' → logprob: -14.750727653503418
    10. ',p' → logprob: -14.750727653503418

Token 629: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007532857125625014
    2. ',B' → logprob: -7.250753402709961
    3. ' ,' → logprob: -10.875753402709961
    4. ',C' → logprob: -11.250753402709961
    5. 'B' → logprob: -12.625753402709961
    6. ',b' → logprob: -13.500753402709961
    7. ',I' → logprob: -13.875753402709961
    8. '_,' → logprob: -13.875753402709961
    9. ',A' → logprob: -13.875753402709961
    10. '=' → logprob: -14.250753402709961

Token 630: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0037134999874979258
    2. 'C' → logprob: -5.878713607788086
    3. 'P' → logprob: -8.003713607788086
    4. ' B' → logprob: -8.753713607788086
    5. 'K' → logprob: -9.128713607788086
    6. 'D' → logprob: -9.128713607788086
    7. 'I' → logprob: -10.003713607788086
    8. 'T' → logprob: -10.128713607788086
    9. 'F' → logprob: -10.753713607788086
    10. 'S' → logprob: -11.253713607788086

Token 631: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0011873723706230521
    2. ',' → logprob: -6.751187324523926
    3. 'i' → logprob: -11.876187324523926
    4. ',_' → logprob: -12.251187324523926
    5. ',i' → logprob: -13.001187324523926
    6. '=' → logprob: -14.251187324523926
    7. ' =' → logprob: -14.501187324523926
    8. '_' → logprob: -15.126187324523926
    9. ' ,' → logprob: -15.126187324523926
    10. '_,' → logprob: -15.126187324523926

Token 632: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009546292014420033
    2. '=' → logprob: -4.759546279907227
    3. ' =' → logprob: -7.009546279907227
    4. ' ,' → logprob: -11.134546279907227
    5. 'C' → logprob: -11.759546279907227
    6. ',C' → logprob: -12.884546279907227
    7. ' C' → logprob: -14.759546279907227
    8. 'A' → logprob: -14.884546279907227
    9. '<|end|>' → logprob: -14.884546279907227
    10. '_i' → logprob: -15.384546279907227

Token 633: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0007921205251477659
    2. ' C' → logprob: -7.250792026519775
    3. 'c' → logprob: -11.125792503356934
    4. 'Ic' → logprob: -11.250792503356934
    5. 'K' → logprob: -11.500792503356934
    6. 'IC' → logprob: -11.875792503356934
    7. 'I' → logprob: -12.125792503356934
    8. 'F' → logprob: -12.375792503356934
    9. ' ' → logprob: -12.375792503356934
    10. 'S' → logprob: -12.500792503356934

Token 634: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.019938509911298752
    2. ' =' → logprob: -4.3949384689331055
    3. '=' → logprob: -5.0199384689331055
    4. 'i' → logprob: -7.2699384689331055
    5. ',' → logprob: -9.519938468933105
    6. ',i' → logprob: -11.519938468933105
    7. '=i' → logprob: -12.519938468933105
    8. '   ' → logprob: -13.269938468933105
    9. '_' → logprob: -13.769938468933105
    10. ')' → logprob: -13.769938468933105

Token 635: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326544284820557
    2. '=' → logprob: -1.3132654428482056
    3. ' ' → logprob: -14.188265800476074
    4. '<|end|>' → logprob: -14.188265800476074
    5. ')' → logprob: -14.438265800476074
    6. '=input' → logprob: -14.813265800476074
    7. '=line' → logprob: -14.938265800476074
    8. ',' → logprob: -15.438265800476074
    9. ')=' → logprob: -15.563265800476074
    10. '   ' → logprob: -15.813265800476074

Token 636: ' cls' (ID: 26133)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -0.1471332460641861
    2. 'map' → logprob: -2.5221333503723145
    3. 'cls' → logprob: -2.8971333503723145
    4. ' Input' → logprob: -7.0221333503723145
    5. ' map' → logprob: -8.272132873535156
    6. ' cls' → logprob: -9.147132873535156
    7. 'input' → logprob: -10.022132873535156
    8. 'list' → logprob: -10.147132873535156
    9. '_input' → logprob: -12.272132873535156
    10. 'class' → logprob: -13.397132873535156

Token 637: '.read' (ID: 7211)
  Prédit: '.read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.read' → logprob: -0.18046773970127106
    2. 'read' → logprob: -1.8054677248001099
    3. 'map' → logprob: -7.68046760559082
    4. '.map' → logprob: -9.43046760559082
    5. '.readline' → logprob: -9.80546760559082
    6. 'int' → logprob: -10.05546760559082
    7. 'Input' → logprob: -10.30546760559082
    8. '_read' → logprob: -11.18046760559082
    9. 'Read' → logprob: -11.68046760559082
    10. 'input' → logprob: -11.93046760559082

Token 638: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.0016948189586400986
    2. 'ints' → logprob: -6.876694679260254
    3. 'int' → logprob: -7.376694679260254
    4. 'Ints' → logprob: -10.376694679260254
    5. 's' → logprob: -13.251694679260254
    6. 'Int' → logprob: -13.501694679260254
    7. '(int' → logprob: -14.626694679260254
    8. ' ints' → logprob: -14.751694679260254
    9. '()' → logprob: -15.126694679260254
    10. '_in' → logprob: -15.251694679260254

Token 639: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.10949400067329407
    2. 'ts' → logprob: -2.6094939708709717
    3. 'ints' → logprob: -3.8594939708709717
    4. 't' → logprob: -5.734494209289551
    5. 'nts' → logprob: -5.734494209289551
    6. '()' → logprob: -6.484494209289551
    7. 'sts' → logprob: -7.984494209289551
    8. 'ents' → logprob: -8.35949420928955
    9. '())' → logprob: -8.85949420928955
    10. 'int' → logprob: -9.48449420928955

Token 640: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.29629555344581604
    2. '           ' → logprob: -1.6712955236434937
    3. ')' → logprob: -3.421295642852783
    4. '()
' → logprob: -3.921295642852783
    5. '<|end|>' → logprob: -4.796295642852783
    6. '():
' → logprob: -6.296295642852783
    7. '(' → logprob: -6.671295642852783
    8. '<|end|>' → logprob: -6.671295642852783
    9. '       ' → logprob: -7.671295642852783
    10. '):
' → logprob: -7.921295642852783

Token 641: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00028648413717746735
    2. '<|end|>' → logprob: -8.500286102294922
    3. '       ' → logprob: -9.750286102294922
    4. '   ' → logprob: -11.625286102294922
    5. ',' → logprob: -11.875286102294922
    6. '<|end|>' → logprob: -13.000286102294922
    7. '               ' → logprob: -13.500286102294922
    8. '
' → logprob: -14.125286102294922
    9. '[' → logprob: -14.125286102294922
    10. '```' → logprob: -14.500286102294922

Token 642: ' rail' (ID: 21665)
  Prédit: 'rail'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rail' (adapté à ' rail') → logprob: -0.2209158092737198
    2. '           ' → logprob: -1.8459157943725586
    3. ' rail' → logprob: -3.2209157943725586
    4. '   ' → logprob: -8.595915794372559
    5. '       ' → logprob: -8.720915794372559
    6. '```' → logprob: -10.595915794372559
    7. 'rails' → logprob: -11.095915794372559
    8. 'ra' → logprob: -11.595915794372559
    9. '		' → logprob: -12.595915794372559
    10. '
' → logprob: -12.970915794372559

Token 643: '_segments' (ID: 142925)
  Prédit: '_segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segments' → logprob: -3.666993507067673e-05
    2. '_segment' → logprob: -10.250036239624023
    3. 'segments' → logprob: -14.000036239624023
    4. '_' → logprob: -15.625036239624023
    5. 'segment' → logprob: -15.750036239624023
    6. '=' → logprob: -16.875036239624023
    7. '_seg' → logprob: -17.750036239624023
    8. 'Segments' → logprob: -18.500036239624023
    9. ' =' → logprob: -18.625036239624023
    10. '_SEG' → logprob: -19.625036239624023

Token 644: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0009126556105911732
    2. '.' → logprob: -7.000912666320801
    3. 'append' → logprob: -14.6259126663208
    4. ' .' → logprob: -14.8759126663208
    5. '.app' → logprob: -15.6259126663208
    6. '.ap' → logprob: -16.250911712646484
    7. '.
' → logprob: -19.000911712646484
    8. '=' → logprob: -19.375911712646484
    9. '   ' → logprob: -19.375911712646484
    10. '].' → logprob: -19.625911712646484

Token 645: '(R' (ID: 4092)
  Prédit: '(R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(R' → logprob: -1.981667537620524e-06
    2. '(' → logprob: -13.500001907348633
    3. '(
' → logprob: -14.500001907348633
    4. 'Rail' → logprob: -17.125001907348633
    5. '	R' → logprob: -19.000001907348633
    6. 'R' → logprob: -19.125001907348633
    7. ' Rail' → logprob: -20.750001907348633
    8. '((' → logprob: -20.750001907348633
    9. ' R' → logprob: -21.000001907348633
    10. '(C' → logprob: -21.125001907348633

Token 646: 'ail' (ID: 663)
  Prédit: 'ail'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ail' → logprob: -0.0005541055579669774
    2. 'Rail' → logprob: -7.500554084777832
    3. ' Rail' → logprob: -14.250554084777832
    4. 'AIL' → logprob: -15.500554084777832
    5. ' ail' → logprob: -15.875554084777832
    6. 'rail' → logprob: -16.12555503845215
    7. 'ails' → logprob: -18.62555503845215
    8. 'A' → logprob: -19.00055503845215
    9. 'a' → logprob: -19.12555503845215
    10. '#' → logprob: -19.25055503845215

Token 647: 'Segment' (ID: 24880)
  Prédit: 'Segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: 0.0
    2. 'egment' → logprob: -18.125
    3. '_segment' → logprob: -18.875
    4. 'segment' → logprob: -19.125
    5. ' Segment' → logprob: -19.875
    6. 'Segments' → logprob: -20.125
    7. 'Seg' → logprob: -20.625
    8. '_SEG' → logprob: -22.625
    9. 'Sector' → logprob: -24.0
    10. ' segment' → logprob: -24.25

Token 648: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -8.537868779967539e-06
    2. '(' → logprob: -11.875008583068848
    3. '(
' → logprob: -13.500008583068848
    4. 'i' → logprob: -16.00000762939453
    5. ' (' → logprob: -18.25000762939453
    6. ')i' → logprob: -18.87500762939453
    7. ')' → logprob: -19.00000762939453
    8. ' i' → logprob: -19.12500762939453
    9. '   ' → logprob: -19.75000762939453
    10. '           ' → logprob: -19.75000762939453

Token 649: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005681642796844244
    2. ',A' → logprob: -7.500568389892578
    3. ' ,' → logprob: -11.250568389892578
    4. 'A' → logprob: -13.250568389892578
    5. ',
' → logprob: -15.375568389892578
    6. '   ' → logprob: -16.375568389892578
    7. '           ' → logprob: -16.375568389892578
    8. '‌,' → logprob: -17.750568389892578
    9. ' A' → logprob: -18.625568389892578
    10. '    ' → logprob: -18.750568389892578

Token 650: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.005285576917231083
    2. ' A' → logprob: -5.255285739898682
    3. 'B' → logprob: -9.880285263061523
    4. ' B' → logprob: -15.505285263061523
    5. 'C' → logprob: -16.130285263061523
    6. '           ' → logprob: -16.130285263061523
    7. '	A' → logprob: -16.880285263061523
    8. '   ' → logprob: -17.380285263061523
    9. '       ' → logprob: -19.505285263061523
    10. ' ' → logprob: -19.505285263061523

Token 651: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -6.24179228907451e-05
    2. 'i' → logprob: -9.750061988830566
    3. '[i' → logprob: -13.125061988830566
    4. ',' → logprob: -13.375061988830566
    5. ',i' → logprob: -15.375061988830566
    6. 'I' → logprob: -15.750061988830566
    7. 'A' → logprob: -16.625062942504883
    8. 'B' → logprob: -17.500062942504883
    9. '   ' → logprob: -17.625062942504883
    10. '_,' → logprob: -17.750062942504883

Token 652: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002895834331866354
    2. ' ,' → logprob: -8.375289916992188
    3. ',B' → logprob: -9.875289916992188
    4. 'B' → logprob: -11.875289916992188
    5. ',
' → logprob: -14.750289916992188
    6. ' B' → logprob: -16.375289916992188
    7. ',b' → logprob: -17.250289916992188
    8. '   ' → logprob: -17.750289916992188
    9. ' ' → logprob: -18.250289916992188
    10. '           ' → logprob: -18.625289916992188

Token 653: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.005234121344983578
    2. ' B' → logprob: -5.255234241485596
    3. '           ' → logprob: -16.130233764648438
    4. '<|end|>' → logprob: -16.130233764648438
    5. ')' → logprob: -17.005233764648438
    6. ' ' → logprob: -17.380233764648438
    7. 'A' → logprob: -17.505233764648438
    8. ',' → logprob: -17.755233764648438
    9. '               ' → logprob: -17.755233764648438
    10. '            ' → logprob: -17.755233764648438

Token 654: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.002509070560336113
    2. ',' → logprob: -6.002509117126465
    3. 'i' → logprob: -10.752509117126465
    4. '_,' → logprob: -12.002509117126465
    5. ',C' → logprob: -13.127509117126465
    6. ' ,' → logprob: -13.377509117126465
    7. ',_' → logprob: -13.752509117126465
    8. ',i' → logprob: -14.752509117126465
    9. '
' → logprob: -15.627509117126465
    10. ',
' → logprob: -15.752509117126465

Token 655: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007131471065804362
    2. ',C' → logprob: -7.875713348388672
    3. ' ,' → logprob: -8.125713348388672
    4. 'C' → logprob: -10.250713348388672
    5. ' C' → logprob: -14.375713348388672
    6. ',
' → logprob: -14.750713348388672
    7. '   ' → logprob: -14.750713348388672
    8. '           ' → logprob: -15.125713348388672
    9. '       ' → logprob: -17.000713348388672
    10. ' ' → logprob: -17.125713348388672

Token 656: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0015023599844425917
    2. ' C' → logprob: -6.501502513885498
    3. '   ' → logprob: -18.001502990722656
    4. '
' → logprob: -18.001502990722656
    5. '           ' → logprob: -18.501502990722656
    6. '	C' → logprob: -18.751502990722656
    7. '```' → logprob: -19.001502990722656
    8. ' ' → logprob: -19.126502990722656
    9. '       ' → logprob: -19.376502990722656
    10. '               ' → logprob: -19.626502990722656

Token 657: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.00022392053506337106
    2. ',' → logprob: -8.625224113464355
    3. '))' → logprob: -10.625224113464355
    4. 'i' → logprob: -11.125224113464355
    5. '```' → logprob: -13.000224113464355
    6. ')' → logprob: -13.750224113464355
    7. '_,' → logprob: -14.250224113464355
    8. 'I' → logprob: -14.875224113464355
    9. '))
' → logprob: -16.12522315979004
    10. ',_' → logprob: -16.37522315979004

Token 658: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00015955790877342224
    2. '))
' → logprob: -8.75015926361084
    3. ')' → logprob: -14.25015926361084
    4. ' ))' → logprob: -15.12515926361084
    5. '))

' → logprob: -15.75015926361084
    6. '       ' → logprob: -17.875160217285156
    7. '));' → logprob: -18.000160217285156
    8. ')))' → logprob: -18.500160217285156
    9. '   ' → logprob: -19.500160217285156
    10. '))
' → logprob: -19.500160217285156

Token 659: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013774950057268143
    2. 'return' → logprob: -6.626377582550049
    3. ' return' → logprob: -10.62637710571289
    4. '
' → logprob: -11.75137710571289
    5. '```' → logprob: -12.12637710571289
    6. '<|end|>' → logprob: -12.12637710571289
    7. '   ' → logprob: -12.25137710571289
    8. '	return' → logprob: -13.37637710571289
    9. '	' → logprob: -13.87637710571289
    10. '           ' → logprob: -15.12637710571289

Token 660: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008676023222506046
    2. 'return' (adapté à ' return') → logprob: -4.758676052093506
    3. ' return' → logprob: -9.883675575256348
    4. '   ' → logprob: -11.633675575256348
    5. '	return' → logprob: -14.258675575256348
    6. '
' → logprob: -14.758675575256348
    7. '	' → logprob: -16.008676528930664
    8. '           ' → logprob: -16.258676528930664
    9. ' ' → logprob: -16.508676528930664
    10. '{return' → logprob: -16.758676528930664

Token 661: ' N' (ID: 478)
  Prédit: 'Trip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Trip' → logprob: -0.0019565867260098457
    2. ' Trip' → logprob: -6.376956462860107
    3. 'Rail' → logprob: -9.001956939697266
    4. 'Travel' → logprob: -9.501956939697266
    5. 'trip' → logprob: -11.001956939697266
    6. 'cls' → logprob: -11.126956939697266
    7. 'Train' → logprob: -11.501956939697266
    8. '   ' → logprob: -12.501956939697266
    9. 'N' → logprob: -12.626956939697266
    10. 'rail' → logprob: -13.251956939697266

Token 662: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004101077560335398
    2. ',M' → logprob: -5.629101276397705
    3. '<|end|>' → logprob: -8.129100799560547
    4. ' ,' → logprob: -8.879100799560547
    5. ',m' → logprob: -10.504100799560547
    6. ',
' → logprob: -10.754100799560547
    7. ',N' → logprob: -12.004100799560547
    8. '   ' → logprob: -12.504100799560547
    9. 'M' → logprob: -12.879100799560547
    10. ',class' → logprob: -13.379100799560547

Token 663: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.011885743588209152
    2. ' M' → logprob: -4.636885643005371
    3. 'rail' → logprob: -6.261885643005371
    4. 'travel' → logprob: -8.636885643005371
    5. ' rail' → logprob: -11.011885643005371
    6. 'trip' → logprob: -11.761885643005371
    7. ' travel' → logprob: -11.886885643005371
    8. '   ' → logprob: -12.949385643005371
    9. 'train' → logprob: -13.761885643005371
    10. '```' → logprob: -13.824385643005371

Token 664: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5487077236175537
    2. '<|end|>' → logprob: -0.9237077236175537
    3. 'trip' → logprob: -4.673707962036133
    4. '```' → logprob: -5.423707962036133
    5. 'travel' → logprob: -5.548707962036133
    6. 'rail' → logprob: -6.173707962036133
    7. 'return' → logprob: -6.798707962036133
    8. '       ' → logprob: -7.048707962036133
    9. '.travel' → logprob: -7.173707962036133
    10. '   ' → logprob: -7.298707962036133

Token 665: ' travel' (ID: 6410)
  Prédit: 'travel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'travel' → logprob: -0.5808925628662109
    2. 'rail' → logprob: -0.8308925628662109
    3. ' travel' → logprob: -5.705892562866211
    4. ' rail' → logprob: -6.705892562866211
    5. 'trip' → logprob: -9.205892562866211
    6. 'train' → logprob: -9.205892562866211
    7. 'rails' → logprob: -9.705892562866211
    8. '   ' → logprob: -10.330892562866211
    9. 'trav' → logprob: -10.330892562866211
    10. 'transport' → logprob: -11.080892562866211

Token 666: '_route' (ID: 67828)
  Prédit: '_route'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_route' → logprob: -3.4121114822482923e-06
    2. 'travel' → logprob: -13.750003814697266
    3. '_tr' → logprob: -14.000003814697266
    4. '_' → logprob: -14.250003814697266
    5. '_plan' → logprob: -15.250003814697266
    6. 'route' → logprob: -15.500003814697266
    7. 'oute' → logprob: -15.750003814697266
    8. '_trip' → logprob: -15.875003814697266
    9. '_routes' → logprob: -16.625003814697266
    10. '_router' → logprob: -17.125003814697266

Token 667: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 668: ' rail' (ID: 21665)
  Prédit: 'rail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rail' → logprob: -0.00026169343618676066
    2. ' rail' → logprob: -8.250261306762695
    3. 'rails' → logprob: -14.750261306762695
    4. 'ra' → logprob: -17.125261306762695
    5. '   ' → logprob: -19.250261306762695
    6. '```' → logprob: -19.250261306762695
    7. 'Rail' → logprob: -20.125261306762695
    8. 'raid' → logprob: -20.250261306762695
    9. 'ral' → logprob: -20.375261306762695
    10. '
' → logprob: -20.625261306762695

Token 669: '_segments' (ID: 142925)
  Prédit: '_segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segments' → logprob: -1.9361264946837764e-07
    2. 'segments' → logprob: -15.75
    3. 'Segments' → logprob: -20.875
    4. '_segment' → logprob: -22.75
    5. '_seg' → logprob: -24.875
    6. '_SEG' → logprob: -25.0
    7. '```' → logprob: -25.0
    8. '_sequences' → logprob: -25.25
    9. '_sections' → logprob: -25.375
    10. 'seg' → logprob: -25.75

Token 670: '


' (ID: 2499)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.002226264216005802
    2. 'def' → logprob: -6.25222635269165
    3. '```' → logprob: -8.252225875854492
    4. 'if' → logprob: -10.877225875854492
    5. '<|end|>' → logprob: -11.127225875854492
    6. ' class' → logprob: -13.127225875854492
    7. 'import' → logprob: -14.877225875854492
    8. '``' → logprob: -15.002225875854492
    9. '#' → logprob: -15.877225875854492
    10. '"class' → logprob: -16.502225875854492

Token 671: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5957383513450623
    2. 'class' → logprob: -0.8457383513450623
    3. 'if' → logprob: -3.970738410949707
    4. '```' → logprob: -7.220738410949707
    5. '<|end|>' → logprob: -12.720738410949707
    6. ' class' → logprob: -12.845738410949707
    7. 'import' → logprob: -12.845738410949707
    8. '#' → logprob: -12.970738410949707
    9. ' if' → logprob: -13.345738410949707
    10. 'from' → logprob: -14.970738410949707

Token 672: ' Solver' (ID: 141655)
  Prédit: 'Output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Output' → logprob: -0.9029868245124817
    2. 'Solution' → logprob: -1.402986764907837
    3. 'Solver' → logprob: -2.152986764907837
    4. 'Main' → logprob: -2.152986764907837
    5. 'Trip' → logprob: -3.402986764907837
    6. 'Optimizer' → logprob: -3.527986764907837
    7. 'Problem' → logprob: -3.777986764907837
    8. 'main' → logprob: -4.152987003326416
    9. 'Rail' → logprob: -5.277987003326416
    10. ' Solver' → logprob: -6.402987003326416

Token 673: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6349474191665649
    2. ':
' → logprob: -0.7599474191665649
    3. '():
' → logprob: -7.009947299957275
    4. '```' → logprob: -7.259947299957275
    5. '<|end|>' → logprob: -7.884947299957275
    6. '(' → logprob: -9.634947776794434
    7. '):
' → logprob: -10.134947776794434
    8. '   ' → logprob: -10.134947776794434
    9. '(object' → logprob: -10.634947776794434
    10. 'class' → logprob: -10.884947776794434

Token 674: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.040689170360565186
    2. ' def' → logprob: -4.040688991546631
    3. 'class' → logprob: -4.290688991546631
    4. 'def' → logprob: -5.540688991546631
    5. ' class' → logprob: -6.165688991546631
    6. '<|end|>' → logprob: -6.290688991546631
    7. '```' → logprob: -7.790688991546631
    8. '	def' → logprob: -9.290689468383789
    9. 'classmethod' → logprob: -9.915689468383789
    10. '<|end|>' → logprob: -10.540689468383789

Token 675: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.112514927983284
    2. ' def' → logprob: -2.6125149726867676
    3. '   ' → logprob: -3.6125149726867676
    4. '@' → logprob: -5.112514972686768
    5. 'class' → logprob: -10.11251449584961
    6. ' @' → logprob: -10.98751449584961
    7. '```' → logprob: -12.86251449584961
    8. 'staticmethod' → logprob: -14.23751449584961
    9. '	def' → logprob: -14.98751449584961
    10. 'classmethod' → logprob: -16.36251449584961

Token 676: ' __' (ID: 2516)
  Prédit: 'staticmethod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -0.002206639386713505
    2. 'init' → logprob: -6.627206802368164
    3. '__' → logprob: -7.752206802368164
    4. 'classmethod' → logprob: -7.877206802368164
    5. ' __' → logprob: -10.002206802368164
    6. 'static' → logprob: -11.252206802368164
    7. 'def' → logprob: -12.502206802368164
    8. ' static' → logprob: -12.502206802368164
    9. '_init' → logprob: -13.002206802368164
    10. ' def' → logprob: -13.627206802368164

Token 677: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.9361264946837764e-07
    2. 'staticmethod' → logprob: -16.375
    3. ' init' → logprob: -17.625
    4. 'def' → logprob: -18.0
    5. 'next' → logprob: -18.375
    6. 'new' → logprob: -18.375
    7. '_init' → logprob: -19.375
    8. 'inite' → logprob: -20.0
    9. '	init' → logprob: -20.25
    10. 'ini' → logprob: -20.375

Token 678: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0050318981520831585
    2. '__(' → logprob: -5.755032062530518
    3. ' (' → logprob: -7.255032062530518
    4. '(' → logprob: -7.505032062530518
    5. '   ' → logprob: -8.38003158569336
    6. 'self' → logprob: -8.63003158569336
    7. '(Self' → logprob: -10.50503158569336
    8. 'def' → logprob: -10.75503158569336
    9. '__(
' → logprob: -10.75503158569336
    10. ',' → logprob: -11.00503158569336

Token 679: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.842555426876061e-06
    2. ' self' → logprob: -12.500004768371582
    3. '(self' → logprob: -14.000004768371582
    4. '   ' → logprob: -16.1250057220459
    5. '```' → logprob: -16.8750057220459
    6. '	self' → logprob: -17.0000057220459
    7. '=self' → logprob: -17.7500057220459
    8. '
' → logprob: -17.8750057220459
    9. ',self' → logprob: -18.5000057220459
    10. ')' → logprob: -18.5000057220459

Token 680: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005974736995995045
    2. 'self' → logprob: -7.6255974769592285
    3. ',self' → logprob: -9.87559700012207
    4. ' ,' → logprob: -10.50059700012207
    5. '(self' → logprob: -10.62559700012207
    6. '   ' → logprob: -12.62559700012207
    7. ' self' → logprob: -13.75059700012207
    8. ' (' → logprob: -14.50059700012207
    9. ')' → logprob: -15.12559700012207
    10. ',
' → logprob: -15.75059700012207

Token 681: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.036524842376821e-05
    2. ' self' → logprob: -10.625040054321289
    3. '   ' → logprob: -11.375040054321289
    4. '(self' → logprob: -13.125040054321289
    5. '       ' → logprob: -13.250040054321289
    6. '	self' → logprob: -15.250040054321289
    7. 'def' → logprob: -15.375040054321289
    8. '
' → logprob: -16.12504005432129
    9. '```' → logprob: -16.62504005432129
    10. ',self' → logprob: -17.00004005432129

Token 682: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.14151446521282196
    2. 'def' → logprob: -2.266514539718628
    3. 'pass' → logprob: -4.516514301300049
    4. '       ' → logprob: -4.641514301300049
    5. '   ' → logprob: -4.891514301300049
    6. ' self' → logprob: -8.766514778137207
    7. ' def' → logprob: -10.391514778137207
    8. ' pass' → logprob: -11.266514778137207
    9. 'class' → logprob: -13.266514778137207
    10. '
' → logprob: -14.391514778137207

Token 683: '.N' (ID: 4439)
  Prédit: '.N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.N' → logprob: -0.15017718076705933
    2. '.' → logprob: -2.400177240371704
    3. '.trip' → logprob: -3.525177240371704
    4. '.input' → logprob: -4.900177001953125
    5. '.problem' → logprob: -4.900177001953125
    6. '.n' → logprob: -5.900177001953125
    7. '.solution' → logprob: -7.525177001953125
    8. '.plan' → logprob: -8.150177001953125
    9. '.total' → logprob: -8.900177001953125
    10. '.num' → logprob: -9.400177001953125

Token 684: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.437592476606369
    2. '=' → logprob: -1.0625925064086914
    3. ',' → logprob: -5.062592506408691
    4. '   ' → logprob: -6.812592506408691
    5. '=None' → logprob: -7.562592506408691
    6. '<|end|>' → logprob: -7.562592506408691
    7. '       ' → logprob: -9.312592506408691
    8. '<|end|>' → logprob: -9.312592506408691
    9. ':' → logprob: -9.437592506408691
    10. '    ' → logprob: -10.187592506408691

Token 685: ' None' (ID: 4662)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0238003171980381
    2. 'None' → logprob: -3.7738003730773926
    3. 'self' → logprob: -7.773800373077393
    4. ' None' → logprob: -9.273799896240234
    5. ' ' → logprob: -10.148799896240234
    6. ' self' → logprob: -14.398799896240234
    7. '   ' → logprob: -15.523799896240234
    8. '<|end|>' → logprob: -16.148799896240234
    9. 'int' → logprob: -16.398799896240234
    10. '[]' → logprob: -17.023799896240234

Token 686: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06056133285164833
    2. '<|end|>' → logprob: -3.435561418533325
    3. 'self' → logprob: -4.310561180114746
    4. '   ' → logprob: -5.560561180114746
    5. ',' → logprob: -5.560561180114746
    6. '
' → logprob: -5.685561180114746
    7. ' self' → logprob: -7.185561180114746
    8. '<|end|>' → logprob: -7.810561180114746
    9. 'def' → logprob: -8.185561180114746
    10. '	self' → logprob: -8.310561180114746

Token 687: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3151414096355438
    2. 'self' → logprob: -1.9401414394378662
    3. '
' → logprob: -2.315141439437866
    4. '<|end|>' → logprob: -4.440141201019287
    5. '   ' → logprob: -4.940141201019287
    6. ' self' → logprob: -5.190141201019287
    7. '	self' → logprob: -6.815141201019287
    8. '        
' → logprob: -7.190141201019287
    9. ',' → logprob: -7.440141201019287
    10. ' ' → logprob: -8.315141677856445

Token 688: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0001475220051361248
    2. '       ' → logprob: -9.125147819519043
    3. ' self' → logprob: -10.375147819519043
    4. '   ' → logprob: -12.000147819519043
    5. '	self' → logprob: -13.750147819519043
    6. '           ' → logprob: -16.500146865844727
    7. 'def' → logprob: -18.375146865844727
    8. '
' → logprob: -18.500146865844727
    9. 's' → logprob: -18.875146865844727
    10. '  ' → logprob: -18.875146865844727

Token 689: '.M' (ID: 2015)
  Prédit: '.M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.M' → logprob: -0.0019379158038645983
    2. 'M' → logprob: -6.3769378662109375
    3. '.' → logprob: -8.501937866210938
    4. '.travel' → logprob: -11.001937866210938
    5. ' M' → logprob: -12.751937866210938
    6. '.m' → logprob: -13.126937866210938
    7. '.trip' → logprob: -13.126937866210938
    8. '   ' → logprob: -13.251937866210938
    9. '	M' → logprob: -13.626937866210938
    10. ',M' → logprob: -13.626937866210938

Token 690: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14154717326164246
    2. ' =' → logprob: -2.391547203063965
    3. '<|end|>' → logprob: -3.266547203063965
    4. '=None' → logprob: -6.391547203063965
    5. ',' → logprob: -8.266547203063965
    6. '<|end|>' → logprob: -8.391547203063965
    7. ' ' → logprob: -10.266547203063965
    8. '=self' → logprob: -10.391547203063965
    9. '   ' → logprob: -10.641547203063965
    10. '       ' → logprob: -11.141547203063965

Token 691: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.006790443789213896
    2. ' None' → logprob: -5.006790637969971
    3. '0' → logprob: -9.506790161132812
    4. '(None' → logprob: -14.506790161132812
    5. '_None' → logprob: -16.256790161132812
    6. ' ' → logprob: -16.381790161132812
    7. '   ' → logprob: -16.756790161132812
    8. '=None' → logprob: -17.006790161132812
    9. ',None' → logprob: -17.506790161132812
    10. 'none' → logprob: -18.881790161132812

Token 692: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03938740864396095
    2. 'self' → logprob: -3.2893874645233154
    3. ' self' → logprob: -7.039387226104736
    4. '<|end|>' → logprob: -9.039387702941895
    5. '
' → logprob: -9.164387702941895
    6. '   ' → logprob: -9.289387702941895
    7. ',' → logprob: -9.664387702941895
    8. '	self' → logprob: -9.914387702941895
    9. ',self' → logprob: -11.414387702941895
    10. '(self' → logprob: -11.914387702941895

Token 693: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5810268521308899
    2. 'self' → logprob: -0.8310268521308899
    3. '   ' → logprob: -5.456027030944824
    4. ' self' → logprob: -7.206027030944824
    5. '	self' → logprob: -10.581027030944824
    6. 'def' → logprob: -10.706027030944824
    7. '
' → logprob: -12.706027030944824
    8. ' ' → logprob: -13.331027030944824
    9. '<|end|>' → logprob: -13.456027030944824
    10. '           ' → logprob: -13.581027030944824

Token 694: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0004378214362077415
    2. '       ' → logprob: -7.7504377365112305
    3. '   ' → logprob: -12.25043773651123
    4. ' self' → logprob: -13.25043773651123
    5. 'travel' → logprob: -15.37543773651123
    6. 'def' → logprob: -15.87543773651123
    7. '	self' → logprob: -16.500438690185547
    8. '           ' → logprob: -16.625438690185547
    9. '
' → logprob: -18.750438690185547
    10. '=self' → logprob: -18.875438690185547

Token 695: '.travel' (ID: 152570)
  Prédit: '.travel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.travel' → logprob: -0.31481295824050903
    2. '.' → logprob: -1.3148128986358643
    3. '.train' → logprob: -7.064813137054443
    4. '.trip' → logprob: -7.439813137054443
    5. '._' → logprob: -11.189812660217285
    6. ' .' → logprob: -11.189812660217285
    7. 'travel' → logprob: -11.314812660217285
    8. '.user' → logprob: -11.564812660217285
    9. '.training' → logprob: -11.814812660217285
    10. '   ' → logprob: -11.939812660217285

Token 696: '_route' (ID: 67828)
  Prédit: '_route'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_route' → logprob: -7.107425062713446e-06
    2. 'route' → logprob: -12.250006675720215
    3. '_routes' → logprob: -13.625006675720215
    4. '_plan' → logprob: -14.375006675720215
    5. '_path' → logprob: -15.250006675720215
    6. 'Route' → logprob: -16.37500762939453
    7. '_' → logprob: -17.12500762939453
    8. '_router' → logprob: -17.62500762939453
    9. '   ' → logprob: -17.75000762939453
    10. '_method' → logprob: -17.75000762939453

Token 697: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5286419987678528
    2. ' =' → logprob: -0.9036419987678528
    3. '<|end|>' → logprob: -5.653642177581787
    4. '=None' → logprob: -6.403642177581787
    5. '=[]' → logprob: -9.278641700744629
    6. '   ' → logprob: -9.528641700744629
    7. ' ' → logprob: -10.278641700744629
    8. '       ' → logprob: -10.403641700744629
    9. '<|end|>' → logprob: -10.653641700744629
    10. '=self' → logprob: -10.903641700744629

Token 698: ' None' (ID: 4662)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.25547200441360474
    2. 'None' → logprob: -1.50547194480896
    3. ' None' → logprob: -6.005472183227539
    4. ' []' → logprob: -7.130472183227539
    5. '[]
' → logprob: -8.255472183227539
    6. '[]

' → logprob: -12.255472183227539
    7. '=[]' → logprob: -12.630472183227539
    8. ' []
' → logprob: -13.880472183227539
    9. '(None' → logprob: -14.130472183227539
    10. '[]}' → logprob: -14.880472183227539

Token 699: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3237626850605011
    2. 'self' → logprob: -1.3237626552581787
    3. '   ' → logprob: -4.698762893676758
    4. ',' → logprob: -7.698762893676758
    5. ' self' → logprob: -7.948762893676758
    6. '```' → logprob: -8.698762893676758
    7. '<|end|>' → logprob: -8.948762893676758
    8. '	self' → logprob: -10.323762893676758
    9. ',self' → logprob: -10.323762893676758
    10. '(self' → logprob: -10.448762893676758

Token 700: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7448278665542603
    2. 'self' → logprob: -0.7448278665542603
    3. '   ' → logprob: -2.9948277473449707
    4. ' self' → logprob: -8.369828224182129
    5. '```' → logprob: -9.494828224182129
    6. '           ' → logprob: -11.619828224182129
    7. '	self' → logprob: -13.369828224182129
    8. '(self' → logprob: -13.744828224182129
    9. ' ' → logprob: -14.119828224182129
    10. '     ' → logprob: -14.619828224182129

Token 701: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -9.73446003627032e-05
    2. '       ' → logprob: -9.250097274780273
    3. '   ' → logprob: -14.250097274780273
    4. ' self' → logprob: -14.500097274780273
    5. '
' → logprob: -17.000097274780273
    6. '```' → logprob: -17.000097274780273
    7. 'def' → logprob: -17.500097274780273
    8. '	self' → logprob: -18.375097274780273
    9. '           ' → logprob: -18.625097274780273
    10. '(self' → logprob: -19.625097274780273

Token 702: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -2.0100624169572257e-05
    2. ' .' → logprob: -11.750020027160645
    3. 'rail' → logprob: -11.875020027160645
    4. '.r' → logprob: -13.375020027160645
    5. '.ra' → logprob: -13.375020027160645
    6. '.train' → logprob: -14.750020027160645
    7. '._' → logprob: -15.250020027160645
    8. 'Rail' → logprob: -15.500020027160645
    9. ' rail' → logprob: -15.625020027160645
    10. '‌.' → logprob: -15.625020027160645

Token 703: 'rail' (ID: 66046)
  Prédit: 'rail'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rail' → logprob: -3.702754474943504e-05
    2. ' rail' → logprob: -11.00003719329834
    3. 'ic' → logprob: -11.75003719329834
    4. 'travel' → logprob: -12.12503719329834
    5. 'rails' → logprob: -12.87503719329834
    6. 'def' → logprob: -13.50003719329834
    7. 'road' → logprob: -14.50003719329834
    8. 'train' → logprob: -14.62503719329834
    9. 'Rail' → logprob: -14.62503719329834
    10. '_' → logprob: -15.75003719329834

Token 704: '_segments' (ID: 142925)
  Prédit: '_segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segments' → logprob: -1.6240566083070007e-06
    2. 'segments' → logprob: -13.500001907348633
    3. '_segment' → logprob: -16.375001907348633
    4. 'Segments' → logprob: -17.250001907348633
    5. '```' → logprob: -17.875001907348633
    6. '_' → logprob: -18.375001907348633
    7. '_s' → logprob: -19.750001907348633
    8. 's' → logprob: -20.000001907348633
    9. '   ' → logprob: -20.000001907348633
    10. '_sections' → logprob: -20.500001907348633

Token 705: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6352851390838623
    2. ' =' → logprob: -0.7602851390838623
    3. '<|end|>' → logprob: -6.635285377502441
    4. '=None' → logprob: -7.135285377502441
    5. '   ' → logprob: -7.885285377502441
    6. '=[]' → logprob: -9.885285377502441
    7. '=
' → logprob: -10.010285377502441
    8. 'def' → logprob: -10.510285377502441
    9. '<|end|>' → logprob: -11.135285377502441
    10. ',' → logprob: -11.260285377502441

Token 706: ' None' (ID: 4662)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.31364551186561584
    2. 'None' → logprob: -1.3136454820632935
    3. ' None' → logprob: -8.188645362854004
    4. '[]
' → logprob: -9.438645362854004
    5. ' []' → logprob: -11.188645362854004
    6. '[]

' → logprob: -12.313645362854004
    7. '[]}' → logprob: -12.438645362854004
    8. '=[]' → logprob: -13.813645362854004
    9. '(None' → logprob: -13.813645362854004
    10. '[])' → logprob: -14.813645362854004

Token 707: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003229994559660554
    2. '
' → logprob: -6.378230094909668
    3. 'def' → logprob: -6.753230094909668
    4. ' def' → logprob: -8.878230094909668
    5. '<|end|>' → logprob: -9.253230094909668
    6. '    
' → logprob: -9.378230094909668
    7. '```' → logprob: -11.003230094909668
    8. '<|end|>' → logprob: -11.253230094909668
    9. '	def' → logprob: -12.253230094909668
    10. '        
' → logprob: -13.628230094909668

Token 708: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007590418215841055
    2. 'def' → logprob: -5.257590293884277
    3. ' def' → logprob: -6.382590293884277
    4. '<|end|>' → logprob: -8.257590293884277
    5. '
' → logprob: -8.507590293884277
    6. '```' → logprob: -9.382590293884277
    7. '	def' → logprob: -10.007590293884277
    8. '    
' → logprob: -10.257590293884277
    9. '<|end|>' → logprob: -10.507590293884277
    10. ',' → logprob: -12.382590293884277

Token 709: ' self' (ID: 1051)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.025137873366475105
    2. ' def' → logprob: -4.275137901306152
    3. '   ' → logprob: -4.525137901306152
    4. '
' → logprob: -9.650137901306152
    5. '	def' → logprob: -11.650137901306152
    6. '```' → logprob: -12.400137901306152
    7. '<|end|>' → logprob: -12.775137901306152
    8. '    
' → logprob: -15.150137901306152
    9. ' ' → logprob: -15.650137901306152
    10. '<|end|>' → logprob: -15.775137901306152

Token 710: '.trip' (ID: 168825)
  Prédit: '.total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.total' → logprob: -0.028972823172807693
    2. '.' → logprob: -3.778972864151001
    3. '.def' → logprob: -6.028972625732422
    4. ' def' → logprob: -6.903972625732422
    5. 'def' → logprob: -7.278972625732422
    6. ' total' → logprob: -7.778972625732422
    7. '.result' → logprob: -8.278972625732422
    8. 'total' → logprob: -8.778972625732422
    9. '.input' → logprob: -8.778972625732422
    10. '.results' → logprob: -9.653972625732422

Token 711: '_plan' (ID: 53840)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.6534159183502197
    2. '_plan' → logprob: -0.9034159183502197
    3. '_counts' → logprob: -2.7784159183502197
    4. '_pl' → logprob: -5.028415679931641
    5. '_counter' → logprob: -6.153415679931641
    6. 'count' → logprob: -7.528415679931641
    7. 'plan' → logprob: -7.653415679931641
    8. '_data' → logprob: -8.15341567993164
    9. '_route' → logprob: -8.15341567993164
    10. '_' → logprob: -8.27841567993164

Token 712: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08910217881202698
    2. ' =' → logprob: -2.464102268218994
    3. '   ' → logprob: -9.214101791381836
    4. '.' → logprob: -10.214101791381836
    5. '_' → logprob: -11.339101791381836
    6. '=None' → logprob: -12.839101791381836
    7. ')' → logprob: -13.214101791381836
    8. '<|end|>' → logprob: -13.214101791381836
    9. '=[]' → logprob: -13.214101791381836
    10. '.=' → logprob: -14.089101791381836

Token 713: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.47407716512680054
    2. 'None' → logprob: -0.9740771651268005
    3. '(None' → logprob: -16.724077224731445
    4. '_None' → logprob: -17.099077224731445
    5. '   ' → logprob: -17.474077224731445
    6. '=None' → logprob: -17.599077224731445
    7. ',None' → logprob: -19.349077224731445
    8. 'Trip' → logprob: -19.599077224731445
    9. ' ' → logprob: -19.724077224731445
    10. 'none' → logprob: -19.974077224731445

Token 714: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00921869371086359
    2. '
' → logprob: -4.759218692779541
    3. 'def' → logprob: -8.5092191696167
    4. '```' → logprob: -8.6342191696167
    5. '    
' → logprob: -9.1342191696167
    6. '<|end|>' → logprob: -9.5092191696167
    7. ' def' → logprob: -10.6342191696167
    8. '<|end|>' → logprob: -11.6342191696167
    9. '	def' → logprob: -12.7592191696167
    10. '[' → logprob: -13.6342191696167

Token 715: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02152230218052864
    2. ' def' → logprob: -4.146522521972656
    3. 'def' → logprob: -5.271522521972656
    4. '```' → logprob: -8.146522521972656
    5. '	def' → logprob: -10.146522521972656
    6. '
' → logprob: -12.896522521972656
    7. '<|end|>' → logprob: -13.896522521972656
    8. '    
' → logprob: -14.521522521972656
    9. '``' → logprob: -14.646522521972656
    10. '_def' → logprob: -14.646522521972656

Token 716: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0016261448618024588
    2. ' def' → logprob: -6.501626014709473
    3. '   ' → logprob: -9.001626014709473
    4. '	def' → logprob: -14.626626014709473
    5. '```' → logprob: -17.12662696838379
    6. '
' → logprob: -17.50162696838379
    7. '@' → logprob: -18.75162696838379
    8. 'Def' → logprob: -19.12662696838379
    9. '_def' → logprob: -20.00162696838379
    10. '    
' → logprob: -21.12662696838379

Token 717: ' load' (ID: 4700)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -1.1294382810592651
    2. 'load' → logprob: -1.1294382810592651
    3. 'solve' → logprob: -1.1294382810592651
    4. ' load' → logprob: -4.379438400268555
    5. ' solve' → logprob: -4.879438400268555
    6. ' read' → logprob: -5.379438400268555
    7. 'run' → logprob: -6.004438400268555
    8. 'parse' → logprob: -7.004438400268555
    9. 'setup' → logprob: -7.254438400268555
    10. 'prepare' → logprob: -7.379438400268555

Token 718: '_data' (ID: 3537)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.30057066679000854
    2. '_data' → logprob: -2.0505707263946533
    3. '_input' → logprob: -3.3005707263946533
    4. '()' → logprob: -3.3005707263946533
    5. '_problem' → logprob: -3.3005707263946533
    6. '(' → logprob: -4.425570487976074
    7. '(
' → logprob: -6.550570487976074
    8. 'self' → logprob: -6.675570487976074
    9. 'input' → logprob: -6.800570487976074
    10. 'problem' → logprob: -6.925570487976074

Token 719: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.558399319241289e-05
    2. '(' → logprob: -10.750025749206543
    3. ' (' → logprob: -13.250025749206543
    4. '(
' → logprob: -13.750025749206543
    5. 'self' → logprob: -14.500025749206543
    6. '   ' → logprob: -14.625025749206543
    7. '       ' → logprob: -15.000025749206543
    8. 'from' → logprob: -18.375024795532227
    9. '	self' → logprob: -18.625024795532227
    10. '(Self' → logprob: -18.750024795532227

Token 720: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7361744046211243
    2. '(self' → logprob: -1.1111743450164795
    3. '):' → logprob: -1.9861743450164795
    4. '):
' → logprob: -2.9861743450164795
    5. 'self' → logprob: -5.986174583435059
    6. '   ' → logprob: -6.986174583435059
    7. '       ' → logprob: -7.861174583435059
    8. ',self' → logprob: -8.986174583435059
    9. ')' → logprob: -10.111174583435059
    10. '(' → logprob: -10.361174583435059

Token 721: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0032597112003713846
    2. 'self' → logprob: -5.753259658813477
    3. 'def' → logprob: -10.503259658813477
    4. '   ' → logprob: -11.253259658813477
    5. ' self' → logprob: -11.628259658813477
    6. 'data' → logprob: -11.628259658813477
    7. '```' → logprob: -11.628259658813477
    8. 'N' → logprob: -12.253259658813477
    9. '(self' → logprob: -13.378259658813477
    10. 'for' → logprob: -13.503259658813477

Token 722: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00013858173042535782
    2. ' self' → logprob: -9.250138282775879
    3. '       ' → logprob: -10.125138282775879
    4. '(self' → logprob: -13.125138282775879
    5. '	self' → logprob: -15.500138282775879
    6. '[self' → logprob: -15.750138282775879
    7. '```' → logprob: -17.125139236450195
    8. '
' → logprob: -17.500139236450195
    9. '        
' → logprob: -17.750139236450195
    10. '   ' → logprob: -17.875139236450195

Token 723: '.N' (ID: 4439)
  Prédit: '.N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.N' → logprob: -9.372294698550832e-06
    2. 'N' → logprob: -12.000009536743164
    3. ' .' → logprob: -13.750009536743164
    4. '.' → logprob: -13.750009536743164
    5. 'data' → logprob: -14.750009536743164
    6. '```' → logprob: -16.250009536743164
    7. '   ' → logprob: -16.375009536743164
    8. 'self' → logprob: -16.375009536743164
    9. ' =' → logprob: -17.000009536743164
    10. '=N' → logprob: -17.250009536743164

Token 724: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.44312788406387e-05
    2. ',self' → logprob: -9.875054359436035
    3. 'self' → logprob: -13.125054359436035
    4. ' ,' → logprob: -14.125054359436035
    5. '       ' → logprob: -16.00005531311035
    6. ',
' → logprob: -16.87505531311035
    7. '   ' → logprob: -17.75005531311035
    8. ' self' → logprob: -17.87505531311035
    9. '=' → logprob: -18.12505531311035
    10. '‌,' → logprob: -19.50005531311035

Token 725: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.08952146023511887
    2. ' self' → logprob: -2.4645214080810547
    3. '<|end|>' → logprob: -7.464521408081055
    4. '(self' → logprob: -13.339521408081055
    5. '	self' → logprob: -13.589521408081055
    6. ',self' → logprob: -13.714521408081055
    7. '<|end|>' → logprob: -13.964521408081055
    8. '=self' → logprob: -13.964521408081055
    9. '[self' → logprob: -14.339521408081055
    10. '       ' → logprob: -14.464521408081055

Token 726: '.M' (ID: 2015)
  Prédit: '.M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.M' → logprob: -0.003419508459046483
    2. 'M' → logprob: -5.753419399261475
    3. ',M' → logprob: -8.503419876098633
    4. ',' → logprob: -10.253419876098633
    5. '.travel' → logprob: -13.878419876098633
    6. 'travel' → logprob: -14.003419876098633
    7. '	M' → logprob: -14.878419876098633
    8. '.' → logprob: -15.128419876098633
    9. '=M' → logprob: -15.378419876098633
    10. ' M' → logprob: -15.378419876098633

Token 727: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001290454383706674
    2. ',self' → logprob: -9.125128746032715
    3. ' ,' → logprob: -10.875128746032715
    4. 'self' → logprob: -14.250128746032715
    5. ' =' → logprob: -16.12512969970703
    6. ',
' → logprob: -16.25012969970703
    7. '_,' → logprob: -16.37512969970703
    8. ',\
' → logprob: -16.62512969970703
    9. '<|end|>' → logprob: -17.00012969970703
    10. '‌,' → logprob: -17.00012969970703

Token 728: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5759404897689819
    2. ' self' → logprob: -0.8259404897689819
    3. '=self' → logprob: -14.700940132141113
    4. '	self' → logprob: -14.950940132141113
    5. '(self' → logprob: -15.575940132141113
    6. '<|end|>' → logprob: -16.70094108581543
    7. ',self' → logprob: -16.82594108581543
    8. '       ' → logprob: -17.20094108581543
    9. '[self' → logprob: -17.57594108581543
    10. ' ' → logprob: -17.95094108581543

Token 729: '.travel' (ID: 152570)
  Prédit: 'travel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'travel' → logprob: -0.11021699011325836
    2. '.travel' → logprob: -2.3602170944213867
    3. ' travel' → logprob: -4.610217094421387
    4. 'trip' → logprob: -12.360217094421387
    5. '.trip' → logprob: -13.110217094421387
    6. 'trav' → logprob: -13.485217094421387
    7. 'Travel' → logprob: -13.985217094421387
    8. 'train' → logprob: -14.235217094421387
    9. '.' → logprob: -14.860217094421387
    10. '   ' → logprob: -15.360217094421387

Token 730: '_route' (ID: 67828)
  Prédit: '_route'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_route' → logprob: -5.9153885558771435e-06
    2. 'route' → logprob: -12.250005722045898
    3. '_plan' → logprob: -13.875005722045898
    4. 'Route' → logprob: -17.2500057220459
    5. '_path' → logprob: -17.6250057220459
    6. '_' → logprob: -19.0000057220459
    7. 'self' → logprob: -19.0000057220459
    8. '_ROUTE' → logprob: -19.1250057220459
    9. '_segment' → logprob: -19.2500057220459
    10. '_routes' → logprob: -19.5000057220459

Token 731: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.810037742368877e-05
    2. ',self' → logprob: -10.500038146972656
    3. ' ,' → logprob: -12.125038146972656
    4. '=' → logprob: -12.375038146972656
    5. ' =' → logprob: -14.875038146972656
    6. 'self' → logprob: -14.875038146972656
    7. ',\
' → logprob: -16.750038146972656
    8. '       ' → logprob: -17.250038146972656
    9. '<|end|>' → logprob: -17.375038146972656
    10. ',
' → logprob: -17.875038146972656

Token 732: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.3132646679878235
    2. 'self' → logprob: -1.3132646083831787
    3. '       ' → logprob: -13.438264846801758
    4. '	self' → logprob: -14.063264846801758
    5. '=self' → logprob: -15.188264846801758
    6. '   ' → logprob: -15.438264846801758
    7. '           ' → logprob: -16.688264846801758
    8. '(self' → logprob: -16.813264846801758
    9. '[self' → logprob: -17.188264846801758
    10. '<|end|>' → logprob: -17.688264846801758

Token 733: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0005287261446937919
    2. 'rail' → logprob: -7.625528812408447
    3. ' rail' → logprob: -10.500528335571289
    4. ' .' → logprob: -12.375528335571289
    5. 'Rail' → logprob: -12.625528335571289
    6. ' =' → logprob: -13.625528335571289
    7. 'Rails' → logprob: -13.875528335571289
    8. '.ra' → logprob: -14.375528335571289
    9. '_' → logprob: -14.625528335571289
    10. '.train' → logprob: -14.750528335571289

Token 734: 'rail' (ID: 66046)
  Prédit: 'rail'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rail' → logprob: -1.8624639324116288e-06
    2. ' rail' → logprob: -13.375001907348633
    3. 'rails' → logprob: -16.500001907348633
    4. 'Rail' → logprob: -17.625001907348633
    5. 'ail' → logprob: -18.000001907348633
    6. 'ra' → logprob: -18.625001907348633
    7. '
' → logprob: -19.000001907348633
    8. 'ral' → logprob: -19.375001907348633
    9. '```' → logprob: -19.500001907348633
    10. '_' → logprob: -19.875001907348633

Token 735: '_segments' (ID: 142925)
  Prédit: '_segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segments' → logprob: -7.896309739408025e-07
    2. 'segments' → logprob: -14.125000953674316
    3. 'Segments' → logprob: -18.625
    4. '_segment' → logprob: -19.625
    5. '```' → logprob: -21.0
    6. '   ' → logprob: -21.125
    7. '_' → logprob: -21.25
    8. 's' → logprob: -21.625
    9. '           ' → logprob: -21.75
    10. '_seg' → logprob: -21.75

Token 736: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868720829486847
    2. '=' → logprob: -1.1368720531463623
    3. '=self' → logprob: -14.511872291564941
    4. '       ' → logprob: -15.011872291564941
    5. '<|end|>' → logprob: -16.261871337890625
    6. '   ' → logprob: -16.386871337890625
    7. '        ' → logprob: -16.511871337890625
    8. '    ' → logprob: -17.761871337890625
    9. ' ' → logprob: -17.761871337890625
    10. 'self' → logprob: -18.761871337890625

Token 737: ' Input' (ID: 10090)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -0.0031777136027812958
    2. ' Input' → logprob: -5.753177642822266
    3. '	Input' → logprob: -18.753177642822266
    4. '       ' → logprob: -20.128177642822266
    5. '   ' → logprob: -20.253177642822266
    6. '<Input' → logprob: -21.253177642822266
    7. '_input' → logprob: -21.628177642822266
    8. '_Input' → logprob: -21.878177642822266
    9. '    ' → logprob: -22.253177642822266
    10. '\Input' → logprob: -22.753177642822266

Token 738: 'Reader' (ID: 7171)
  Prédit: 'Reader'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Reader' → logprob: 0.0
    2. '_reader' → logprob: -20.125
    3. 'reader' → logprob: -20.25
    4. '.Reader' → logprob: -20.625
    5. ' Reader' → logprob: -21.125
    6. 'Readers' → logprob: -21.5
    7. 'Reading' → logprob: -22.875
    8. 'Receiver' → logprob: -23.0
    9. '-reader' → logprob: -23.875
    10. 'Read' → logprob: -24.125

Token 739: '.read' (ID: 7211)
  Prédit: '.read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.read' → logprob: -1.5570885807392187e-05
    2. '.' → logprob: -11.375015258789062
    3. '.readline' → logprob: -12.875015258789062
    4. '().' → logprob: -14.375015258789062
    5. ' .' → logprob: -14.375015258789062
    6. '.readlines' → logprob: -15.750015258789062
    7. '.load' → logprob: -16.375015258789062
    8. 'read' → logprob: -17.750015258789062
    9. '.Read' → logprob: -19.000015258789062
    10. '```' → logprob: -19.375015258789062

Token 740: '_problem' (ID: 162384)
  Prédit: '_problem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_problem' → logprob: -0.10203493386507034
    2. '_int' → logprob: -2.3520350456237793
    3. '_pro' → logprob: -7.352035045623779
    4. 'int' → logprob: -7.352035045623779
    5. '_prob' → logprob: -8.227034568786621
    6. '_' → logprob: -8.852034568786621
    7. 'problem' → logprob: -9.352034568786621
    8. 'Problem' → logprob: -10.977034568786621
    9. 'ints' → logprob: -11.102034568786621
    10. '```' → logprob: -12.602034568786621

Token 741: '_instance' (ID: 27848)
  Prédit: '_instance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_instance' → logprob: -0.0002900565741583705
    2. '_instances' → logprob: -8.625289916992188
    3. 'instance' → logprob: -9.125289916992188
    4. 'Instance' → logprob: -13.500289916992188
    5. '_segments' → logprob: -17.000289916992188
    6. ' instance' → logprob: -17.125289916992188
    7. '_INSTANCE' → logprob: -17.125289916992188
    8. '	instance' → logprob: -17.375289916992188
    9. '_Instance' → logprob: -17.375289916992188
    10. '```' → logprob: -18.375289916992188

Token 742: '()
' (ID: 1234)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 743: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31353121995925903
    2. '<|end|>' → logprob: -1.4385311603546143
    3. '```' → logprob: -3.9385311603546143
    4. '<|end|>' → logprob: -5.063531398773193
    5. 'def' → logprob: -5.313531398773193
    6. ' def' → logprob: -7.813531398773193
    7. '
' → logprob: -7.938531398773193
    8. '    
' → logprob: -9.438530921936035
    9. '``' → logprob: -9.438530921936035
    10. '       ' → logprob: -9.938530921936035

Token 744: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.5810430645942688
    2. '       ' → logprob: -0.8310430645942688
    3. ' self' → logprob: -5.331043243408203
    4. '   ' → logprob: -8.331043243408203
    5. 'def' → logprob: -12.331043243408203
    6. '	self' → logprob: -12.581043243408203
    7. '```' → logprob: -13.331043243408203
    8. '
' → logprob: -14.581043243408203
    9. '           ' → logprob: -15.831043243408203
    10. ' ' → logprob: -16.331043243408203

Token 745: '.trip' (ID: 168825)
  Prédit: '.trip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.trip' → logprob: -0.00018923594325315207
    2. '.' → logprob: -9.000188827514648
    3. '.travel' → logprob: -9.875188827514648
    4. ' .' → logprob: -11.375188827514648
    5. 'trip' → logprob: -12.875188827514648
    6. '.train' → logprob: -16.25018882751465
    7. '   ' → logprob: -16.50018882751465
    8. '.ticket' → logprob: -17.37518882751465
    9. ' trip' → logprob: -17.62518882751465
    10. '.trade' → logprob: -17.75018882751465

Token 746: '_plan' (ID: 53840)
  Prédit: '_plan'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_plan' → logprob: -4.320199877838604e-07
    2. 'plan' → logprob: -14.75
    3. '_pl' → logprob: -18.875
    4. 'Plan' → logprob: -19.125
    5. '_' → logprob: -21.0
    6. ' plan' → logprob: -21.0
    7. ' план' → logprob: -21.5
    8. '_PLAN' → logprob: -21.75
    9. '_trip' → logprob: -22.875
    10. '\' → logprob: -23.0

Token 747: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25192946195602417
    2. ' =' → logprob: -1.501929521560669
    3. '=create' → logprob: -16.376930236816406
    4. '＝' → logprob: -16.751930236816406
    5. '=
' → logprob: -16.876930236816406
    6. ' =
' → logprob: -17.376930236816406
    7. '.=' → logprob: -18.001930236816406
    8. ' ' → logprob: -18.501930236816406
    9. '=new' → logprob: -18.501930236816406
    10. '   ' → logprob: -18.876930236816406

Token 748: ' Trip' (ID: 19291)
  Prédit: 'Trip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Trip' → logprob: -0.000553151941858232
    2. ' Trip' → logprob: -7.500553131103516
    3. '   ' → logprob: -16.500553131103516
    4. '       ' → logprob: -17.125553131103516
    5. 'Trips' → logprob: -17.625553131103516
    6. 'Triple' → logprob: -17.750553131103516
    7. 'trip' → logprob: -18.000553131103516
    8. 'Travel' → logprob: -18.375553131103516
    9. '(' → logprob: -19.375553131103516
    10. ' trip' → logprob: -19.375553131103516

Token 749: 'Plan' (ID: 15274)
  Prédit: 'Plan'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Plan' → logprob: 0.0
    2. '_plan' → logprob: -18.0
    3. ' Plan' → logprob: -18.25
    4. 'plan' → logprob: -19.875
    5. '   ' → logprob: -20.75
    6. '_P' → logprob: -21.875
    7. 'Pl' → logprob: -22.0
    8. '```' → logprob: -22.25
    9. 'Planner' → logprob: -22.625
    10. 'Plant' → logprob: -22.875

Token 750: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0001649220648687333
    2. '(' → logprob: -8.750164985656738
    3. '(
' → logprob: -12.250164985656738
    4. 'self' → logprob: -13.375164985656738
    5. ' (' → logprob: -17.875164031982422
    6. '(R' → logprob: -18.500164031982422
    7. '((' → logprob: -18.625164031982422
    8. '(list' → logprob: -18.625164031982422
    9. '([' → logprob: -18.750164031982422
    10. '=self' → logprob: -19.500164031982422

Token 751: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0008151084766723216
    2. 'rail' → logprob: -7.375814914703369
    3. 'self' → logprob: -8.625815391540527
    4. ',' → logprob: -12.875815391540527
    5. '.self' → logprob: -13.000815391540527
    6. ',self' → logprob: -13.875815391540527
    7. 'Rail' → logprob: -14.000815391540527
    8. '=self' → logprob: -14.250815391540527
    9. '[self' → logprob: -14.750815391540527
    10. '(self' → logprob: -15.000815391540527

Token 752: 'rail' (ID: 66046)
  Prédit: 'rail'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rail' → logprob: -8.745069499127567e-05
    2. 'ail' → logprob: -9.62508773803711
    3. 'rails' → logprob: -11.12508773803711
    4. ' rail' → logprob: -13.00008773803711
    5. '.' → logprob: -13.50008773803711
    6. 'ra' → logprob: -14.37508773803711
    7. '
' → logprob: -15.00008773803711
    8. 'ral' → logprob: -15.00008773803711
    9. 'segments' → logprob: -15.00008773803711
    10. 'Rail' → logprob: -15.00008773803711

Token 753: '_segments' (ID: 142925)
  Prédit: '_segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segments' → logprob: -4.246537173457909e-06
    2. 'segments' → logprob: -12.750003814697266
    3. '_plan' → logprob: -13.750003814697266
    4. '_segment' → logprob: -16.375003814697266
    5. 'Segments' → logprob: -16.625003814697266
    6. 'plan' → logprob: -16.750003814697266
    7. '```' → logprob: -17.250003814697266
    8. 's' → logprob: -18.375003814697266
    9. '   ' → logprob: -19.125003814697266
    10. '_seg' → logprob: -19.625003814697266

Token 754: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.2127087504486553e-05
    2. ',self' → logprob: -11.250021934509277
    3. ' ,' → logprob: -11.875021934509277
    4. 'self' → logprob: -13.250021934509277
    5. ',
' → logprob: -15.250021934509277
    6. ')' → logprob: -18.125022888183594
    7. '       ' → logprob: -19.250022888183594
    8. '   ' → logprob: -19.250022888183594
    9. ' self' → logprob: -19.500022888183594
    10. '```' → logprob: -19.500022888183594

Token 755: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0297551192343235
    2. ' self' → logprob: -3.529755115509033
    3. '           ' → logprob: -13.154755592346191
    4. '       ' → logprob: -13.404755592346191
    5. '        ' → logprob: -14.404755592346191
    6. '	self' → logprob: -15.654755592346191
    7. '               ' → logprob: -15.779755592346191
    8. '[self' → logprob: -16.279754638671875
    9. '            ' → logprob: -16.529754638671875
    10. '   ' → logprob: -16.654754638671875

Token 756: '.travel' (ID: 152570)
  Prédit: '.travel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.travel' → logprob: -5.080963092041202e-06
    2. 'travel' → logprob: -12.250004768371582
    3. '.' → logprob: -15.250004768371582
    4. '.trip' → logprob: -17.6250057220459
    5. ' travel' → logprob: -18.1250057220459
    6. '.train' → logprob: -19.8750057220459
    7. 'Travel' → logprob: -20.1250057220459
    8. '旅行' → logprob: -21.0000057220459
    9. ' .' → logprob: -21.2500057220459
    10. '.trade' → logprob: -21.3750057220459

Token 757: '_route' (ID: 67828)
  Prédit: '_route'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_route' → logprob: -1.1994775377388578e-05
    2. 'route' → logprob: -11.500012397766113
    3. '_plan' → logprob: -13.250012397766113
    4. 'oute' → logprob: -17.500011444091797
    5. '.route' → logprob: -18.375011444091797
    6. 'plan' → logprob: -19.250011444091797
    7. '_ROUTE' → logprob: -19.625011444091797
    8. 'Route' → logprob: -19.750011444091797
    9. '   ' → logprob: -20.125011444091797
    10. '_routes' → logprob: -20.125011444091797

Token 758: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.650518920039758e-06
    2. '       ' → logprob: -13.625003814697266
    3. ' )' → logprob: -14.000003814697266
    4. '   ' → logprob: -14.125003814697266
    5. ')
' → logprob: -14.250003814697266
    6. '))' → logprob: -17.125003814697266
    7. '<|end|>' → logprob: -17.500003814697266
    8. '())' → logprob: -18.125003814697266
    9. '[' → logprob: -18.500003814697266
    10. ')}' → logprob: -18.625003814697266

Token 759: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001060675480403006
    2. 'def' → logprob: -7.126060485839844
    3. ' def' → logprob: -8.626060485839844
    4. '```' → logprob: -9.876060485839844
    5. '<|end|>' → logprob: -11.376060485839844
    6. '
' → logprob: -11.876060485839844
    7. '    
' → logprob: -12.751060485839844
    8. '<|end|>' → logprob: -13.626060485839844
    9. ' ' → logprob: -13.876060485839844
    10. '	def' → logprob: -14.001060485839844

Token 760: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.006878410466015339
    2. '   ' → logprob: -5.00687837600708
    3. ' def' → logprob: -8.756878852844238
    4. '```' → logprob: -12.131878852844238
    5. '	def' → logprob: -15.131878852844238
    6. '``' → logprob: -19.006877899169922
    7. '
' → logprob: -20.506877899169922
    8. '@' → logprob: -20.506877899169922
    9. ' ' → logprob: -20.631877899169922
    10. '    
' → logprob: -20.881877899169922

Token 761: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.001239752396941185
    2. 'compute' → logprob: -7.376239776611328
    3. 'run' → logprob: -8.251239776611328
    4. ' solve' → logprob: -8.376239776611328
    5. 'calculate' → logprob: -9.126239776611328
    6. 'def' → logprob: -11.876239776611328
    7. 'opt' → logprob: -12.376239776611328
    8. 'execute' → logprob: -14.001239776611328
    9. ' compute' → logprob: -15.626239776611328
    10. 'resolve' → logprob: -15.626239776611328

Token 762: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00012844942102674395
    2. '(' → logprob: -9.625128746032715
    3. '   ' → logprob: -10.000128746032715
    4. '       ' → logprob: -11.750128746032715
    5. 'self' → logprob: -12.500128746032715
    6. '(
' → logprob: -12.625128746032715
    7. 'def' → logprob: -14.375128746032715
    8. '	self' → logprob: -14.625128746032715
    9. ' (' → logprob: -15.500128746032715
    10. '():
' → logprob: -15.875128746032715

Token 763: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -1.1186245679855347
    2. '(self' → logprob: -1.1186245679855347
    3. '):' → logprob: -1.3686245679855347
    4. 'self' → logprob: -2.868624687194824
    5. '   ' → logprob: -4.618624687194824
    6. ')' → logprob: -4.618624687194824
    7. ')(' → logprob: -4.743624687194824
    8. '       ' → logprob: -6.118624687194824
    9. '):
' → logprob: -6.743624687194824
    10. '_' → logprob: -7.243624687194824

Token 764: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00012166214582975954
    2. '
' → logprob: -9.8751220703125
    3. 'self' → logprob: -10.2501220703125
    4. 'return' → logprob: -11.5001220703125
    5. '   ' → logprob: -12.1251220703125
    6. '        
' → logprob: -12.5001220703125
    7. '```' → logprob: -12.6251220703125
    8. 'result' → logprob: -13.0001220703125
    9. ',' → logprob: -13.7501220703125
    10. ' self' → logprob: -13.7501220703125

Token 765: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.05149075388908386
    2. '       ' → logprob: -3.0514907836914062
    3. 'result' → logprob: -6.051490783691406
    4. ' return' → logprob: -7.551490783691406
    5. 'total' → logprob: -11.801490783691406
    6. 'self' → logprob: -12.051490783691406
    7. 'cost' → logprob: -12.551490783691406
    8. ' result' → logprob: -13.676490783691406
    9. '
' → logprob: -14.676490783691406
    10. '   ' → logprob: -14.801490783691406

Token 766: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.06196768581867218
    2. 'self' → logprob: -2.811967611312866
    3. '(self' → logprob: -18.436967849731445
    4. '	self' → logprob: -19.561967849731445
    5. ' ' → logprob: -20.811967849731445
    6. ' ' → logprob: -22.811967849731445
    7. '[self' → logprob: -23.686967849731445
    8. '=self' → logprob: -24.186967849731445
    9. '   ' → logprob: -24.811967849731445
    10. '
' → logprob: -25.311967849731445

Token 767: '.trip' (ID: 168825)
  Prédit: '.trip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.trip' → logprob: -3.273621405242011e-05
    2. '.total' → logprob: -10.500032424926758
    3. '.' → logprob: -12.750032424926758
    4. '.travel' → logprob: -13.875032424926758
    5. 'trip' → logprob: -14.250032424926758
    6. ' .' → logprob: -15.875032424926758
    7. '.task' → logprob: -16.625032424926758
    8. '.step' → logprob: -16.750032424926758
    9. '.ticket' → logprob: -17.000032424926758
    10. '._' → logprob: -17.000032424926758

Token 768: '_plan' (ID: 53840)
  Prédit: '_plan'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_plan' → logprob: 0.0
    2. 'plan' → logprob: -16.875
    3. '_pl' → logprob: -18.125
    4. 'Plan' → logprob: -18.5
    5. '\' → logprob: -20.875
    6. '_' → logprob: -20.875
    7. ' план' → logprob: -21.375
    8. '_PLAN' → logprob: -21.375
    9. ' _' → logprob: -22.375
    10. '._' → logprob: -23.0

Token 769: '.calculate' (ID: 67851)
  Prédit: '.calculate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.calculate' → logprob: -0.001935065840370953
    2. '.' → logprob: -6.376935005187988
    3. '.compute' → logprob: -9.001935005187988
    4. '.solve' → logprob: -10.001935005187988
    5. 'calculate' → logprob: -11.001935005187988
    6. '.total' → logprob: -11.251935005187988
    7. '.count' → logprob: -11.501935005187988
    8. '.calc' → logprob: -12.376935005187988
    9. '.evaluate' → logprob: -12.626935005187988
    10. '._' → logprob: -12.751935005187988

Token 770: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -5.080963092041202e-06
    2. 'minimum' → logprob: -12.750004768371582
    3. '_total' → logprob: -13.250004768371582
    4. '_max' → logprob: -15.250004768371582
    5. '_' → logprob: -17.1250057220459
    6. 'min' → logprob: -17.7500057220459
    7. '.minimum' → logprob: -18.3750057220459
    8. ' minimum' → logprob: -18.3750057220459
    9. '```' → logprob: -18.7500057220459
    10. '_cost' → logprob: -18.7500057220459

Token 771: 'imum' (ID: 4556)
  Prédit: 'imum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imum' → logprob: -0.00016468366084154695
    2. 'um' → logprob: -8.875164985656738
    3. 'inum' → logprob: -11.500164985656738
    4. 'ium' → logprob: -11.500164985656738
    5. 'im' → logprob: -13.000164985656738
    6. 'mum' → logprob: -14.000164985656738
    7. '_' → logprob: -14.500164985656738
    8. 'inium' → logprob: -15.625164985656738
    9. 'imal' → logprob: -15.750164985656738
    10. '```' → logprob: -16.125164031982422

Token 772: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -1.9361264946837764e-07
    2. 'cost' → logprob: -16.625
    3. '_' → logprob: -18.75
    4. '_code' → logprob: -19.0
    5. '_co' → logprob: -19.5
    6. ' _' → logprob: -20.25
    7. '_COST' → logprob: -20.875
    8. '_price' → logprob: -21.375
    9. '```' → logprob: -21.625
    10. '_total' → logprob: -21.625

Token 773: '()


' (ID: 29771)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 774: 'def' (ID: 1314)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.550889790058136
    2. '```' → logprob: -1.0508897304534912
    3. 'def' → logprob: -2.925889730453491
    4. '#' → logprob: -4.30088996887207
    5. '<|end|>' → logprob: -5.17588996887207
    6. 'solver' → logprob: -7.80088996887207
    7. ' if' → logprob: -8.05088996887207
    8. 'import' → logprob: -8.80088996887207
    9. '<|end|>' → logprob: -10.30088996887207
    10. '``' → logprob: -10.55088996887207

Token 775: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0007497096667066216
    2. 'main' → logprob: -7.250749588012695
    3. ' run' → logprob: -10.750749588012695
    4. ' __' → logprob: -12.125749588012695
    5. '__' → logprob: -12.250749588012695
    6. '_main' → logprob: -12.375749588012695
    7. ' solve' → logprob: -12.750749588012695
    8. 'if' → logprob: -15.125749588012695
    9. ' def' → logprob: -15.375749588012695
    10. '_' → logprob: -15.625749588012695

Token 776: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -6.392202976712724e-06
    2. '():
' → logprob: -12.125006675720215
    3. ' ():' → logprob: -14.125006675720215
    4. '()' → logprob: -15.875006675720215
    5. '():
' → logprob: -17.7500057220459
    6. '(' → logprob: -18.8750057220459
    7. '_' → logprob: -19.2500057220459
    8. '().' → logprob: -19.3750057220459
    9. '():

' → logprob: -19.5000057220459
    10. '(":' → logprob: -19.6250057220459

Token 777: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002453662164043635
    2. 'solver' → logprob: -8.625245094299316
    3. ' solver' → logprob: -10.000245094299316
    4. 'def' → logprob: -11.375245094299316
    5. '```' → logprob: -12.750245094299316
    6. '_solver' → logprob: -13.250245094299316
    7. 's' → logprob: -13.250245094299316
    8. '	s' → logprob: -13.750245094299316
    9. 'import' → logprob: -14.750245094299316
    10. '   ' → logprob: -14.875245094299316

Token 778: ' solver' (ID: 63271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' (adapté à ' solver') → logprob: -0.0008616767590865493
    2. ' solver' → logprob: -7.125861644744873
    3. '   ' → logprob: -10.000862121582031
    4. 'import' → logprob: -12.125862121582031
    5. 's' → logprob: -12.875862121582031
    6. 'sol' → logprob: -13.500862121582031
    7. 'Solver' → logprob: -14.000862121582031
    8. '```' → logprob: -14.750862121582031
    9. 'solve' → logprob: -15.000862121582031
    10. 'if' → logprob: -15.125862121582031

Token 779: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007634781766682863
    2. '=' → logprob: -4.88263463973999
    3. '.' → logprob: -11.257635116577148
    4. '()' → logprob: -11.882635116577148
    5. '().' → logprob: -12.132635116577148
    6. '.solve' → logprob: -13.132635116577148
    7. '   ' → logprob: -14.007635116577148
    8. '.load' → logprob: -16.13263511657715
    9. '_' → logprob: -16.38263511657715
    10. '	' → logprob: -16.38263511657715

Token 780: ' Solver' (ID: 141655)
  Prédit: 'Solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Solver' → logprob: -0.38687190413475037
    2. ' Solver' → logprob: -1.1368719339370728
    3. ' solver' → logprob: -14.261872291564941
    4. '_solver' → logprob: -16.011871337890625
    5. 'solver' → logprob: -16.136871337890625
    6. 'Sol' → logprob: -16.636871337890625
    7. ' Sol' → logprob: -19.136871337890625
    8. 'Solution' → logprob: -19.386871337890625
    9. 'Solved' → logprob: -19.511871337890625
    10. 'Solve' → logprob: -20.386871337890625

Token 781: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28715813159942627
    2. '
' → logprob: -1.4121581315994263
    3. '()
' → logprob: -5.537158012390137
    4. '    
' → logprob: -7.037158012390137
    5. '<|end|>' → logprob: -7.912158012390137
    6. '()' → logprob: -8.537158012390137
    7. '```' → logprob: -8.787158012390137
    8. '  
' → logprob: -9.162158012390137
    9. 'solver' → logprob: -9.287158012390137
    10. '<|end|>' → logprob: -9.537158012390137

Token 782: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.3080716346157715e-05
    2. 'solver' → logprob: -11.000022888183594
    3. '
' → logprob: -12.625022888183594
    4. '    
' → logprob: -13.750022888183594
    5. '```' → logprob: -14.125022888183594
    6. '  ' → logprob: -14.875022888183594
    7. ' solver' → logprob: -15.125022888183594
    8. 'def' → logprob: -15.625022888183594
    9. '	s' → logprob: -15.625022888183594
    10. '_solver' → logprob: -15.750022888183594

Token 783: ' solver' (ID: 63271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' (adapté à ' solver') → logprob: -3.128163257315464e-07
    2. ' solver' → logprob: -15.5
    3. '```' → logprob: -16.75
    4. '   ' → logprob: -17.75
    5. 'scheduler' → logprob: -19.25
    6. '``' → logprob: -21.75
    7. '_solver' → logprob: -22.5
    8. 'sol' → logprob: -22.5
    9. '
' → logprob: -23.25
    10. 'resolver' → logprob: -23.5

Token 784: '.load' (ID: 9383)
  Prédit: '.load'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.load' → logprob: -4.842555426876061e-06
    2. '.' → logprob: -12.250004768371582
    3. '.solve' → logprob: -18.8750057220459
    4. '.loads' → logprob: -19.8750057220459
    5. '.run' → logprob: -20.0000057220459
    6. '.Load' → logprob: -20.2500057220459
    7. ' .' → logprob: -21.0000057220459
    8. '.reload' → logprob: -21.1250057220459
    9. '.import' → logprob: -21.2500057220459
    10. 'load' → logprob: -21.3750057220459

Token 785: '_data' (ID: 3537)
  Prédit: '_data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -6.704273118884885e-07
    2. '_' → logprob: -14.625000953674316
    3. '()' → logprob: -16.5
    4. '_Data' → logprob: -18.125
    5. 'data' → logprob: -18.625
    6. 'Data' → logprob: -19.25
    7. '_DATA' → logprob: -19.75
    8. '()
' → logprob: -20.5
    9. ' _' → logprob: -21.625
    10. ' data' → logprob: -22.0

Token 786: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08596944808959961
    2. 'result' → logprob: -2.9609694480895996
    3. '
' → logprob: -3.5859694480895996
    4. '    
' → logprob: -6.0859694480896
    5. ' result' → logprob: -8.335969924926758
    6. '<|end|>' → logprob: -9.210969924926758
    7. '	result' → logprob: -9.710969924926758
    8. 'output' → logprob: -9.835969924926758
    9. '  
' → logprob: -9.960969924926758
    10. 'resultado' → logprob: -10.835969924926758

Token 787: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7587659955024719
    2. 'print' → logprob: -0.7587659955024719
    3. 'result' → logprob: -2.758765935897827
    4. ' print' → logprob: -9.258766174316406
    5. ' result' → logprob: -10.508766174316406
    6. '```' → logprob: -11.383766174316406
    7. 'answer' → logprob: -12.258766174316406
    8. 'cost' → logprob: -12.758766174316406
    9. 'output' → logprob: -15.883766174316406
    10. '``' → logprob: -16.133766174316406

Token 788: ' result' (ID: 1534)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04863312840461731
    2. 'result' (adapté à ' result') → logprob: -3.048633098602295
    3. 'answer' → logprob: -10.048633575439453
    4. ' print' → logprob: -13.423633575439453
    5. 'cost' → logprob: -14.423633575439453
    6. 'ans' → logprob: -15.423633575439453
    7. '   ' → logprob: -15.798633575439453
    8. ' result' → logprob: -16.548633575439453
    9. 'res' → logprob: -16.798633575439453
    10. '```' → logprob: -17.798633575439453

Token 789: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06197262182831764
    2. '=' → logprob: -2.8119726181030273
    3. '   ' → logprob: -12.561972618103027
    4. ' ' → logprob: -14.811972618103027
    5. ')' → logprob: -14.936972618103027
    6. 'print' → logprob: -15.311972618103027
    7. '.' → logprob: -15.311972618103027
    8. '  ' → logprob: -16.436973571777344
    9. ' =
' → logprob: -16.561973571777344
    10. '()' → logprob: -16.561973571777344

Token 790: ' solver' (ID: 63271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' → logprob: -0.00861456897109747
    2. ' solver' → logprob: -4.758614540100098
    3. 'sol' → logprob: -17.758615493774414
    4. '_solver' → logprob: -19.758615493774414
    5. '   ' → logprob: -20.258615493774414
    6. 'resolver' → logprob: -21.883615493774414
    7. 's' → logprob: -22.133615493774414
    8. ' ' → logprob: -22.508615493774414
    9. 'scheduler' → logprob: -22.633615493774414
    10. 'Solver' → logprob: -22.758615493774414

Token 791: '.solve' (ID: 151960)
  Prédit: '.solve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.solve' → logprob: -1.1472419600977446e-06
    2. '.' → logprob: -13.750000953674316
    3. ' .' → logprob: -18.125001907348633
    4. 'solve' → logprob: -18.250001907348633
    5. '.sol' → logprob: -19.000001907348633
    6. '.resolve' → logprob: -20.750001907348633
    7. '.save' → logprob: -21.000001907348633
    8. '.s' → logprob: -21.125001907348633
    9. '.calculate' → logprob: -22.000001907348633
    10. '.solution' → logprob: -22.000001907348633

Token 792: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.16072335839271545
    2. '()' → logprob: -1.910723328590393
    3. 'print' → logprob: -7.7857232093811035
    4. '(
' → logprob: -10.410723686218262
    5. '   ' → logprob: -10.535723686218262
    6. '(' → logprob: -11.535723686218262
    7. '
' → logprob: -12.160723686218262
    8. '()
' → logprob: -12.410723686218262
    9. '(print' → logprob: -13.160723686218262
    10. ' print' → logprob: -13.660723686218262

Token 793: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018160121515393257
    2. 'print' → logprob: -4.018160343170166
    3. '```' → logprob: -11.893159866333008
    4. '
' → logprob: -13.018159866333008
    5. ' print' → logprob: -14.018159866333008
    6. '    
' → logprob: -15.393159866333008
    7. '	print' → logprob: -15.893159866333008
    8. '``' → logprob: -18.393159866333008
    9. '`' → logprob: -19.018159866333008
    10. '       ' → logprob: -19.143159866333008

Token 794: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -2.45848218582978e-06
    2. ' print' → logprob: -13.25000286102295
    3. '   ' → logprob: -14.50000286102295
    4. '```' → logprob: -16.000001907348633
    5. '
' → logprob: -18.125001907348633
    6. '	print' → logprob: -21.625001907348633
    7. '``' → logprob: -22.125001907348633
    8. '
' → logprob: -24.250001907348633
    9. '`' → logprob: -24.250001907348633
    10. 'printf' → logprob: -24.500001907348633

Token 795: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -9.627176768844947e-05
    2. '(' → logprob: -9.250096321105957
    3. 'result' → logprob: -16.37509536743164
    4. '(f' → logprob: -16.62509536743164
    5. '(res' → logprob: -19.25009536743164
    6. '(results' → logprob: -19.25009536743164
    7. '(
' → logprob: -19.25009536743164
    8. '=result' → logprob: -20.75009536743164
    9. ' (' → logprob: -21.00009536743164
    10. '()' → logprob: -21.12509536743164

Token 796: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. '())' → logprob: -14.875000953674316
    3. ')
' → logprob: -15.250000953674316
    4. '()' → logprob: -16.0
    5. ' )' → logprob: -17.0
    6. ')`' → logprob: -18.0
    7. '```' → logprob: -19.125
    8. '")' → logprob: -19.25
    9. '`)' → logprob: -19.375
    10. '')' → logprob: -19.375

Token 797: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -5.512236498361744e-07
    2. ' if' → logprob: -14.500000953674316
    3. '```' → logprob: -17.375
    4. 'main' → logprob: -20.75
    5. '	if' → logprob: -22.125
    6. '#' → logprob: -22.25
    7. 'import' → logprob: -22.625
    8. 'If' → logprob: -23.0
    9. '#if' → logprob: -23.125
    10. '@if' → logprob: -24.75

Token 798: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.3485638201236725
    2. ' __' → logprob: -1.22356379032135
    3. 'name' → logprob: -9.223564147949219
    4. '_name' → logprob: -11.223564147949219
    5. '___' → logprob: -13.473564147949219
    6. ' ' → logprob: -13.848564147949219
    7. '```' → logprob: -14.098564147949219
    8. 'Name' → logprob: -14.223564147949219
    9. '_' → logprob: -14.348564147949219
    10. ' name' → logprob: -14.473564147949219

Token 799: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.051690924912691116
    2. ' ==' → logprob: -3.8016908168792725
    3. ' __' → logprob: -4.301691055297852
    4. '==' → logprob: -4.301691055297852
    5. 'name' → logprob: -7.551691055297852
    6. 'if' → logprob: -8.051691055297852
    7. '.__' → logprob: -10.051691055297852
    8. '=="' → logprob: -10.801691055297852
    9. ' if' → logprob: -12.051691055297852
    10. '```' → logprob: -12.176691055297852

Token 800: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -8.77627644513268e-06
    2. '==' → logprob: -11.750008583068848
    3. '__.__' → logprob: -14.875008583068848
    4. ' ==' → logprob: -15.125008583068848
    5. '__.' → logprob: -16.500009536743164
    6. '=="' → logprob: -16.750009536743164
    7. '___' → logprob: -17.375009536743164
    8. 'name' → logprob: -17.500009536743164
    9. '____' → logprob: -17.750009536743164
    10. '```' → logprob: -18.375009536743164

Token 801: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.10186280310153961
    2. '==' → logprob: -2.351862907409668
    3. ' ==' → logprob: -6.601862907409668
    4. '=="' → logprob: -8.226862907409668
    5. '=='' → logprob: -10.726862907409668
    6. '__.__' → logprob: -12.726862907409668
    7. '===' → logprob: -13.351862907409668
    8. '=' → logprob: -13.851862907409668
    9. '___' → logprob: -14.976862907409668
    10. '==
' → logprob: -15.101862907409668

Token 802: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.04859089106321335
    2. ''' → logprob: -3.048590898513794
    3. '__' → logprob: -12.673590660095215
    4. ' "__' → logprob: -15.048590660095215
    5. '"name' → logprob: -18.17359161376953
    6. '"class' → logprob: -18.42359161376953
    7. '   ' → logprob: -18.54859161376953
    8. '"user' → logprob: -18.79859161376953
    9. ' '__' → logprob: -18.92359161376953
    10. ''"' → logprob: -19.17359161376953

Token 803: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -3.607391408877447e-05
    2. '__' → logprob: -10.375036239624023
    3. 'name' → logprob: -12.250036239624023
    4. 'ma' → logprob: -17.625036239624023
    5. 'm' → logprob: -18.375036239624023
    6. 'built' → logprob: -18.625036239624023
    7. '_main' → logprob: -19.000036239624023
    8. ' main' → logprob: -19.625036239624023
    9. 'maine' → logprob: -19.750036239624023
    10. 'builtin' → logprob: -20.500036239624023

Token 804: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.014176792465150356
    2. '__' → logprob: -4.264176845550537
    3. '__":
' → logprob: -11.764176368713379
    4. '_' → logprob: -12.139176368713379
    5. '__:' → logprob: -16.264177322387695
    6. '___' → logprob: -17.139177322387695
    7. '__.' → logprob: -17.389177322387695
    8. '':
' → logprob: -17.889177322387695
    9. '__
' → logprob: -18.264177322387695
    10. '__('' → logprob: -18.764177322387695

Token 805: '   ' (ID: 271)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.10826899856328964
    2. 'main' → logprob: -2.358268976211548
    3. ''' → logprob: -4.858269214630127
    4. '"' → logprob: -9.483268737792969
    5. '____' → logprob: -9.858268737792969
    6. ' main' → logprob: -10.233268737792969
    7. '__':
' → logprob: -10.233268737792969
    8. '   ' → logprob: -10.483268737792969
    9. '_main' → logprob: -11.483268737792969
    10. '___' → logprob: -11.608268737792969

Token 806: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -19.5
    3. '	main' → logprob: -22.5
    4. 'import' → logprob: -26.625
    5. '.main' → logprob: -27.0
    6. '_main' → logprob: -28.375
    7. '(main' → logprob: -28.625
    8. '   ' → logprob: -28.75
    9. 'Main' → logprob: -31.625
    10. '```' → logprob: -31.75

Token 807: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 805
Tokens correctement prédits (1ère position, stricte): 380
Tokens correctement prédits (1ère position, avec adaptation): 423
Tokens correctement prédits (top 10): 694
Précision stricte (1ère position): 47.20%
Précision adaptée (1ère position): 52.55%
Précision (top 10): 86.21%
================================================================================
