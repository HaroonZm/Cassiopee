================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:12:20
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class LinearCongruentialGenerator:
    def __init__(self, a: int, b: int, c: int, seed: int):
        self.a = a
        self.b = b
        self.c = c
        self.current = seed

    def next(self) -> int:
        self.current = (self.a * self.current + self.b) % self.c
        return self.current

    def reset(self, seed: int):
        self.current = seed


class ReelCondition:
    def __init__(self, target_value: int):
        self.target_value = target_value

    def matches(self, value: int) -> bool:
        return self.target_value == value


class FrameAnalyzer:
    MAX_FRAMES = 10000

    def __init__(self, n: int, lcg: LinearCongruentialGenerator, conditions: list[ReelCondition]):
        self.n = n
        self.lcg = lcg
        self.conditions = conditions

    def find_min_frame(self) -> int:
        '''
        Returns the minimal frame count (1-based) at which all reels can be stopped
        with the respective target values on the RNG sequence. Returns -1 if impossible
        within MAX_FRAMES.
        '''
        # The stopping process requires N button presses, exactly one per reel in left-right order.
        # Frame counting is 1-based per problem statement.
        # However, if the needed value for a reel is exactly the initial RNG value, 
        # we can consider that reel stopped at frame 0 (without waiting).
        current_rng_value = self.lcg.current
        time = 0
        # We will simulate frame by frame the RNG values, keeping track when each reel can be stopped.
        # For reel i, we want to find the earliest frame >= time + 1 (because pressing stops leftmost)
        # where RNG matches conditions[i].target_value.
        # Then update time to that frame index.
        for i in range(self.n):
            target = self.conditions[i].target_value
            if i == 0 and current_rng_value == target:
                # Can stop first reel immediately, no wait
                continue
            # Otherwise we must find the earliest frame > time where RNG == target
            found_frame = -1
            # We continue RNG sequence from frame (time+1)
            # Let's compute the RNG after time frames since seed:
            # We don't reset RNG, but we can simulate frame by frame for clarity
            # Save current RNG and restore after search to avoid side effects
            saved_state = self.lcg.current
            # Advance RNG to frame time (run RNG for 'time' times because current is initial)
            self.lcg.current = current_rng_value
            for _ in range(time):
                self.lcg.next()
            # From frame time+1 to MAX_FRAMES search for matching target
            for frame in range(time + 1, self.MAX_FRAMES + 1):
                val = self.lcg.next()
                if val == target:
                    found_frame = frame
                    break
            self.lcg.current = saved_state
            if found_frame == -1:
                return -1
            time = found_frame
        return time


class SlotMachineSolver:
    def __init__(self):
        self.results = []

    def parse_and_solve(self, input_lines: list[str]):
        index = 0
        while True:
            if index >= len(input_lines):
                break
            line = input_lines[index].strip()
            index += 1
            if not line:
                continue
            n_a_b_c_x = list(map(int, line.split()))
            if len(n_a_b_c_x) != 5:
                # Malformed input, ignore or break
                break
            n, a, b, c, x = n_a_b_c_x
            if n == 0 and a == 0 and b == 0 and c == 0 and x == 0:
                break  # end of input
            if index >= len(input_lines):
                break
            condition_line = input_lines[index].strip()
            index += 1
            y_list = list(map(int, condition_line.split()))
            if len(y_list) != n:
                # malformed input
                break
            lcg = LinearCongruentialGenerator(a, b, c, x)
            conditions = [ReelCondition(y) for y in y_list]
            analyzer = FrameAnalyzer(n, lcg, conditions)
            res = analyzer.find_min_frame()
            self.results.append(res)

    def output_results(self):
        for res in self.results:
            print(res)


def main():
    import sys
    solver = SlotMachineSolver()
    solver.parse_and_solve(sys.stdin.readlines())
    solver.output_results()


if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Linear' (ID: 29092)
  → Token d'amorce (pas de prédiction)

Token 2: 'Cong' (ID: 40085)
  → Token d'amorce (pas de prédiction)

Token 3: 'ru' (ID: 1942)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.21866554021835327
    2. 'uent' → logprob: -1.718665599822998
    3. 'r' → logprob: -4.843665599822998
    4. 'ru' → logprob: -5.718665599822998
    5. 'ue' → logprob: -5.968665599822998
    6. 'e' → logprob: -7.093665599822998
    7. 'uer' → logprob: -7.718665599822998
    8. '```' → logprob: -7.843665599822998
    9. 'uen' → logprob: -7.968665599822998
    10. 'rent' → logprob: -7.968665599822998

Token 4: 'ential' (ID: 2972)
  Prédit: 'nt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nt' → logprob: -0.10337493568658829
    2. 'ent' → logprob: -2.72837495803833
    3. 'ential' → logprob: -3.97837495803833
    4. 'al' → logprob: -4.47837495803833
    5. '```' → logprob: -6.47837495803833
    6. 'n' → logprob: -8.103374481201172
    7. 'ental' → logprob: -8.478374481201172
    8. ' ent' → logprob: -8.978374481201172
    9. 'ence' → logprob: -8.978374481201172
    10. 'e' → logprob: -9.228374481201172

Token 5: 'Generator' (ID: 14802)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.46807360649108887
    2. '{' → logprob: -1.0930736064910889
    3. ':' → logprob: -3.843073606491089
    4. 'Generator' → logprob: -4.468073844909668
    5. '<' → logprob: -6.593073844909668
    6. '```' → logprob: -6.843073844909668
    7. '[' → logprob: -7.093073844909668
    8. '<class' → logprob: -8.468073844909668
    9. 'Random' → logprob: -8.718073844909668
    10. '<T' → logprob: -9.093073844909668

Token 6: ':
' (ID: 734)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02015712484717369
    2. ':' → logprob: -4.270157337188721
    3. '{' → logprob: -5.145157337188721
    4. ' (' → logprob: -9.895156860351562
    5. '```' → logprob: -10.395156860351562
    6. '.' → logprob: -11.520156860351562
    7. '(
' → logprob: -11.895156860351562
    8. '({' → logprob: -12.020156860351562
    9. '(:' → logprob: -12.020156860351562
    10. '_' → logprob: -12.145156860351562

Token 7: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08900774270296097
    2. '```' → logprob: -3.08900785446167
    3. ':' → logprob: -3.46400785446167
    4. '   ' → logprob: -5.33900785446167
    5. ''' → logprob: -7.21400785446167
    6. '.' → logprob: -7.71400785446167
    7. '`' → logprob: -8.089007377624512
    8. '_' → logprob: -8.214007377624512
    9. '():' → logprob: -8.589007377624512
    10. '``' → logprob: -8.714007377624512

Token 8: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.8260335922241211
    2. '    ' → logprob: -1.451033592224121
    3. ' ' → logprob: -1.701033592224121
    4. '   ' → logprob: -3.326033592224121
    5. '```' → logprob: -3.701033592224121
    6. ' ```' → logprob: -3.826033592224121
    7. 'def' (adapté à ' def') → logprob: -4.076033592224121
    8. '_' → logprob: -4.201033592224121
    9. ' 
' → logprob: -5.076033592224121
    10. '(space' → logprob: -5.451033592224121

Token 9: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.43371206521987915
    2. ' __' → logprob: -1.6837120056152344
    3. '__' → logprob: -2.1837120056152344
    4. ' ' → logprob: -3.9337120056152344
    5. ' calculate' → logprob: -5.183712005615234
    6. '_' → logprob: -5.433712005615234
    7. ' generate' → logprob: -5.558712005615234
    8. ' advance' → logprob: -6.183712005615234
    9. '  ' → logprob: -6.433712005615234
    10. ' )' → logprob: -6.558712005615234

Token 10: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.981667537620524e-06
    2. 'ini' → logprob: -13.750001907348633
    3. ' init' → logprob: -14.375001907348633
    4. 'in' → logprob: -15.250001907348633
    5. 'i' → logprob: -18.000001907348633
    6. 'int' → logprob: -19.250001907348633
    7. '_init' → logprob: -19.375001907348633
    8. '	init' → logprob: -19.750001907348633
    9. 'inite' → logprob: -20.000001907348633
    10. 'innit' → logprob: -20.000001907348633

Token 11: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.28056198358535767
    2. '__' → logprob: -1.530561923980713
    3. '(' → logprob: -3.780561923980713
    4. '(self' → logprob: -6.280561923980713
    5. '__(
' → logprob: -6.405561923980713
    6. '__((' → logprob: -7.155561923980713
    7. '_' → logprob: -8.405562400817871
    8. '<|end|>' → logprob: -8.530562400817871
    9. '__(*' → logprob: -8.655562400817871
    10. '__('' → logprob: -8.905562400817871

Token 12: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04861484840512276
    2. ' self' → logprob: -3.048614740371704
    3. '(self' → logprob: -11.298614501953125
    4. ')' → logprob: -11.423614501953125
    5. ' ' → logprob: -14.048614501953125
    6. '_self' → logprob: -14.548614501953125
    7. ' )' → logprob: -14.798614501953125
    8. '	self' → logprob: -14.798614501953125
    9. ',self' → logprob: -15.298614501953125
    10. 'sel' → logprob: -15.548614501953125

Token 13: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.030111102387309074
    2. ')' → logprob: -4.280111312866211
    3. ' ,' → logprob: -5.155111312866211
    4. '<|end|>' → logprob: -5.405111312866211
    5. '(' → logprob: -6.405111312866211
    6. 'self' → logprob: -6.530111312866211
    7. '_' → logprob: -7.280111312866211
    8. '):' → logprob: -7.905111312866211
    9. ' )' → logprob: -8.530111312866211
    10. '.' → logprob: -8.530111312866211

Token 14: ' a' (ID: 261)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6696079969406128
    2. 'self' → logprob: -0.7946079969406128
    3. ' seed' → logprob: -3.7946081161499023
    4. 'seed' → logprob: -4.294608116149902
    5. '   ' → logprob: -8.919608116149902
    6. '       ' → logprob: -10.294608116149902
    7. '    ' → logprob: -11.544608116149902
    8. 'state' → logprob: -12.294608116149902
    9. '	self' → logprob: -12.794608116149902
    10. '```' → logprob: -12.919608116149902

Token 15: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12015681713819504
    2. ')' → logprob: -2.370156764984131
    3. '_' → logprob: -4.745156764984131
    4. 'a' → logprob: -5.745156764984131
    5. ' ,' → logprob: -5.745156764984131
    6. ',a' → logprob: -5.870156764984131
    7. '<|end|>' → logprob: -7.120156764984131
    8. '=' → logprob: -7.870156764984131
    9. ' )' → logprob: -8.745157241821289
    10. '.' → logprob: -9.620157241821289

Token 16: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.45272237062454224
    2. ' int' → logprob: -1.0777223110198975
    3. '<|end|>' → logprob: -3.8277223110198975
    4. ' ' → logprob: -7.452722549438477
    5. ')' → logprob: -7.702722549438477
    6. ' )' → logprob: -7.827722549438477
    7. ',' → logprob: -9.077722549438477
    8. '=int' → logprob: -9.077722549438477
    9. '[int' → logprob: -9.827722549438477
    10. '<|end|>' → logprob: -9.952722549438477

Token 17: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001784894848242402
    2. ' ,' → logprob: -6.501784801483154
    3. ',a' → logprob: -9.001785278320312
    4. '<|end|>' → logprob: -9.501785278320312
    5. ')' → logprob: -10.126785278320312
    6. 'a' → logprob: -11.001785278320312
    7. '   ' → logprob: -11.626785278320312
    8. ',b' → logprob: -12.126785278320312
    9. '<|end|>' → logprob: -13.251785278320312
    10. ',
' → logprob: -13.251785278320312

Token 18: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.038946766406297684
    2. 'b' → logprob: -3.2889468669891357
    3. ' ' → logprob: -7.913946628570557
    4. ' seed' → logprob: -8.788947105407715
    5. ',' → logprob: -9.413947105407715
    6. ' space' → logprob: -9.788947105407715
    7. '    ' → logprob: -10.163947105407715
    8. 'space' → logprob: -10.413947105407715
    9. ' ,' → logprob: -10.663947105407715
    10. ' r' → logprob: -11.038947105407715

Token 19: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.30445271730422974
    2. ':' → logprob: -1.429452657699585
    3. '=' → logprob: -4.054452896118164
    4. ')' → logprob: -5.554452896118164
    5. '):' → logprob: -7.054452896118164
    6. ' ,' → logprob: -7.304452896118164
    7. ':int' → logprob: -9.179452896118164
    8. ' ' → logprob: -10.054452896118164
    9. '<|end|>' → logprob: -10.554452896118164
    10. '<|end|>' → logprob: -10.929452896118164

Token 20: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6933169960975647
    2. ' int' → logprob: -0.6933169960975647
    3. ':int' → logprob: -9.693317413330078
    4. ')' → logprob: -10.193317413330078
    5. '=int' → logprob: -10.818317413330078
    6. '<|end|>' → logprob: -10.818317413330078
    7. '(int' → logprob: -11.693317413330078
    8. '<int' → logprob: -12.068317413330078
    9. '<|end|>' → logprob: -12.693317413330078
    10. ' ' → logprob: -12.818317413330078

Token 21: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011791547294706106
    2. '):' → logprob: -7.376179218292236
    3. ')' → logprob: -7.626179218292236
    4. ' ,' → logprob: -10.126178741455078
    5. ',
' → logprob: -11.001178741455078
    6. '<|end|>' → logprob: -12.876178741455078
    7. '):
' → logprob: -13.376178741455078
    8. ',int' → logprob: -14.376178741455078
    9. ':' → logprob: -14.376178741455078
    10. '),' → logprob: -14.876178741455078

Token 22: ' c' (ID: 274)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.04019220545887947
    2. ' c' → logprob: -4.040192127227783
    3. 'm' → logprob: -4.665192127227783
    4. ' modulus' → logprob: -5.540192127227783
    5. ' seed' → logprob: -5.790192127227783
    6. ' M' → logprob: -6.540192127227783
    7. ' ' → logprob: -7.040192127227783
    8. 'seed' → logprob: -7.790192127227783
    9. ' x' → logprob: -8.040192604064941
    10. ',' → logprob: -8.040192604064941

Token 23: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11714984476566315
    2. '):' → logprob: -2.242149829864502
    3. ')' → logprob: -5.742149829864502
    4. ',' → logprob: -7.117149829864502
    5. ' :' → logprob: -9.24215030670166
    6. ':int' → logprob: -9.36715030670166
    7. ' ):' → logprob: -10.61715030670166
    8. '=' → logprob: -10.61715030670166
    9. '):
' → logprob: -10.99215030670166
    10. '_:' → logprob: -11.49215030670166

Token 24: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.6329333782196045
    2. 'int' → logprob: -0.7579333782196045
    3. ':int' → logprob: -8.757933616638184
    4. '[int' → logprob: -9.882933616638184
    5. ')' → logprob: -10.132933616638184
    6. '=int' → logprob: -10.257933616638184
    7. '(int' → logprob: -11.007933616638184
    8. '<|end|>' → logprob: -11.632933616638184
    9. '<int' → logprob: -12.132933616638184
    10. ']int' → logprob: -12.632933616638184

Token 25: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005310365930199623
    2. ',' → logprob: -5.755310535430908
    3. ')' → logprob: -6.255310535430908
    4. ':' → logprob: -8.75531005859375
    5. '):
' → logprob: -10.63031005859375
    6. '   ' → logprob: -11.00531005859375
    7. ''):' → logprob: -12.88031005859375
    8. ' ):' → logprob: -13.50531005859375
    9. '```' → logprob: -13.50531005859375
    10. '),' → logprob: -13.75531005859375

Token 26: ' seed' (ID: 17284)
  Prédit: ' seed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' seed' → logprob: -0.10563068091869354
    2. 'seed' → logprob: -2.73063063621521
    3. ' x' → logprob: -4.105630874633789
    4. ')' → logprob: -5.730630874633789
    5. ' s' → logprob: -5.855630874633789
    6. ' )' → logprob: -6.105630874633789
    7. ' ' → logprob: -6.230630874633789
    8. ' r' → logprob: -6.605630874633789
    9. ' X' → logprob: -7.105630874633789
    10. 'x' → logprob: -7.230630874633789

Token 27: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1369807869195938
    2. ':' → logprob: -2.7619807720184326
    3. '=' → logprob: -2.8869807720184326
    4. ')' → logprob: -4.761981010437012
    5. ' ):' → logprob: -8.636981010437012
    6. '):
' → logprob: -8.886981010437012
    7. ',' → logprob: -9.011981010437012
    8. '_' → logprob: -10.511981010437012
    9. ' :' → logprob: -10.636981010437012
    10. '=None' → logprob: -11.511981010437012

Token 28: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.38812148571014404
    2. 'int' → logprob: -1.138121485710144
    3. ' ' → logprob: -7.638121604919434
    4. ')' → logprob: -8.013121604919434
    5. ' )' → logprob: -8.013121604919434
    6. ':int' → logprob: -10.513121604919434
    7. '<|end|>' → logprob: -11.513121604919434
    8. '<|end|>' → logprob: -11.763121604919434
    9. '=int' → logprob: -11.888121604919434
    10. '  ' → logprob: -12.138121604919434

Token 29: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0012874980457127094
    2. ')' → logprob: -6.751287460327148
    3. ':' → logprob: -9.501287460327148
    4. '):
' → logprob: -10.751287460327148
    5. ',' → logprob: -11.251287460327148
    6. '   ' → logprob: -12.126287460327148
    7. ''):' → logprob: -14.126287460327148
    8. ' ):' → logprob: -14.501287460327148
    9. '```' → logprob: -15.501287460327148
    10. '),' → logprob: -15.626287460327148

Token 30: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08850891888141632
    2. '    ' → logprob: -3.5885088443756104
    3. '   ' → logprob: -3.8385088443756104
    4. '<|end|>' → logprob: -4.5885090827941895
    5. ' ' → logprob: -4.9635090827941895
    6. ')' → logprob: -4.9635090827941895
    7. ':' → logprob: -5.7135090827941895
    8. '        ' → logprob: -6.4635090827941895
    9. '_' → logprob: -6.8385090827941895
    10. ' 
' → logprob: -6.9635090827941895

Token 31: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.27030619978904724
    2. '       ' → logprob: -1.5203062295913696
    3. ' self' → logprob: -4.27030611038208
    4. '   ' → logprob: -6.39530611038208
    5. '        ' → logprob: -7.52030611038208
    6. 's' → logprob: -7.64530611038208
    7. '           ' → logprob: -8.270306587219238
    8. ' ' → logprob: -8.270306587219238
    9. '```' → logprob: -8.770306587219238
    10. '<|end|>' → logprob: -8.895306587219238

Token 32: '.a' (ID: 8772)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0015430726343765855
    2. '.a' → logprob: -6.876543045043945
    3. ' .' → logprob: -7.751543045043945
    4. '<|end|>' → logprob: -10.376543045043945
    5. ' ' → logprob: -11.501543045043945
    6. '.c' → logprob: -12.501543045043945
    7. '<|end|>' → logprob: -12.501543045043945
    8. '.b' → logprob: -13.251543045043945
    9. '._' → logprob: -13.251543045043945
    10. '.n' → logprob: -13.501543045043945

Token 33: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.04346852004528046
    2. '=' → logprob: -4.168468475341797
    3. ' =' → logprob: -4.793468475341797
    4. '<|end|>' → logprob: -4.793468475341797
    5. ' ' → logprob: -5.418468475341797
    6. ',' → logprob: -5.543468475341797
    7. ' .' → logprob: -7.293468475341797
    8. '_' → logprob: -7.793468475341797
    9. ')' → logprob: -8.293468475341797
    10. '<|end|>' → logprob: -8.543468475341797

Token 34: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.06197508051991463
    2. 'a' → logprob: -2.8119750022888184
    3. ' ' → logprob: -12.436975479125977
    4. '	a' → logprob: -13.061975479125977
    5. ' ' → logprob: -14.061975479125977
    6. ' ‌' → logprob: -15.686975479125977
    7. '<|end|>' → logprob: -15.936975479125977
    8. ' а' → logprob: -16.811975479125977
    9. '_a' → logprob: -17.061975479125977
    10. '‌' → logprob: -17.561975479125977

Token 35: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 36: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 37: ' self' (ID: 1051)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9150873422622681
    2. '<|end|>' → logprob: -1.290087342262268
    3. '.' → logprob: -2.4150872230529785
    4. 'self' (adapté à ' self') → logprob: -2.7900872230529785
    5. ' 
' → logprob: -2.7900872230529785
    6. ',' → logprob: -3.4150872230529785
    7. 'b' → logprob: -4.2900872230529785
    8. '       ' → logprob: -4.4150872230529785
    9. ')' → logprob: -4.5400872230529785
    10. '_' → logprob: -4.7900872230529785

Token 38: '.b' (ID: 1292)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -5.2762428822461516e-05
    2. ' .' → logprob: -11.000052452087402
    3. '.a' → logprob: -11.250052452087402
    4. '.b' → logprob: -11.875052452087402
    5. '<|end|>' → logprob: -11.875052452087402
    6. ' ' → logprob: -13.375052452087402
    7. '.c' → logprob: -13.750052452087402
    8. '.period' → logprob: -14.000052452087402
    9. '‌.' → logprob: -14.750052452087402
    10. '​.' → logprob: -14.750052452087402

Token 39: ' =' (ID: 314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7644407153129578
    2. ' =' → logprob: -0.8894407153129578
    3. '=' → logprob: -2.1394407749176025
    4. '<|end|>' → logprob: -5.639440536499023
    5. '.' → logprob: -7.514440536499023
    6. '_' → logprob: -7.514440536499023
    7. '  ' → logprob: -7.889440536499023
    8. ' ,' → logprob: -8.639440536499023
    9. ')' → logprob: -8.639440536499023
    10. '    ' → logprob: -9.764440536499023

Token 40: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.04861791059374809
    2. 'b' → logprob: -3.0486178398132324
    3. ' ' → logprob: -10.54861831665039
    4. ' ' → logprob: -13.29861831665039
    5. '<|end|>' → logprob: -13.54861831665039
    6. ' б' → logprob: -14.29861831665039
    7. ' ​' → logprob: -15.79861831665039
    8. '	b' → logprob: -15.92361831665039
    9. ' ‌' → logprob: -16.17361831665039
    10. ')b' → logprob: -16.54861831665039

Token 41: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 42: '       ' (ID: 309)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.4036370515823364
    2. ' ' → logprob: -1.5286370515823364
    3. '       ' → logprob: -1.6536370515823364
    4. '=' → logprob: -2.153636932373047
    5. 'self' → logprob: -2.403636932373047
    6. ' =' → logprob: -3.403636932373047
    7. ' self' → logprob: -4.028636932373047
    8. '<|end|>' → logprob: -4.278636932373047
    9. '_' → logprob: -4.403636932373047
    10. '```' → logprob: -4.903636932373047

Token 43: ' self' (ID: 1051)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.23025429248809814
    2. ' c' → logprob: -2.1052541732788086
    3. ' ' → logprob: -2.9802541732788086
    4. '=' → logprob: -4.105254173278809
    5. ' self' → logprob: -5.105254173278809
    6. 'self' (adapté à ' self') → logprob: -5.230254173278809
    7. ' =' → logprob: -6.605254173278809
    8. ')' → logprob: -6.730254173278809
    9. '.' → logprob: -7.105254173278809
    10. ',' → logprob: -8.230254173278809

Token 44: '.c' (ID: 1081)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00100601592566818
    2. '.c' → logprob: -7.126006126403809
    3. ' .' → logprob: -9.001006126403809
    4. '=' → logprob: -10.501006126403809
    5. ' =' → logprob: -10.626006126403809
    6. 'c' → logprob: -11.376006126403809
    7. ' ' → logprob: -11.876006126403809
    8. ' c' → logprob: -12.626006126403809
    9. '.
' → logprob: -14.251006126403809
    10. ')' → logprob: -14.626006126403809

Token 45: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14276175200939178
    2. '=' → logprob: -2.017761707305908
    3. ' ' → logprob: -9.517762184143066
    4. ' =
' → logprob: -12.267762184143066
    5. ')' → logprob: -12.642762184143066
    6. '<|end|>' → logprob: -13.017762184143066
    7. '.' → logprob: -14.267762184143066
    8. '_' → logprob: -14.517762184143066
    9. ',' → logprob: -14.642762184143066
    10. 'c' → logprob: -15.392762184143066

Token 46: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.09084272384643555
    2. 'c' → logprob: -2.4658427238464355
    3. ' ' → logprob: -6.4658427238464355
    4. ' seed' → logprob: -8.590843200683594
    5. 'seed' → logprob: -9.590843200683594
    6. ' ' → logprob: -9.965843200683594
    7. '	c' → logprob: -10.715843200683594
    8. '  ' → logprob: -11.590843200683594
    9. '<|end|>' → logprob: -12.840843200683594
    10. ' ‌' → logprob: -13.090843200683594

Token 47: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6702239513397217
    2. '
' → logprob: -0.7952239513397217
    3. '        
' → logprob: -4.295224189758301
    4. '\n' → logprob: -5.170224189758301
    5. 'self' → logprob: -5.420224189758301
    6. '<|end|>' → logprob: -5.420224189758301
    7. ' 
' → logprob: -5.920224189758301
    8. '\' → logprob: -6.170224189758301
    9. '  
' → logprob: -6.295224189758301
    10. '```' → logprob: -7.795224189758301

Token 48: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3931367099285126
    2. ' 
' → logprob: -2.018136739730835
    3. '        
' → logprob: -3.018136739730835
    4. ' ' → logprob: -3.268136739730835
    5. 'self' → logprob: -3.643136739730835
    6. '  
' → logprob: -3.768136739730835
    7. '<|end|>' → logprob: -4.393136501312256
    8. ' self' → logprob: -4.768136501312256
    9. '        ' → logprob: -5.268136501312256
    10. '    
' → logprob: -5.518136501312256

Token 49: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1960452795028687
    2. ' ' → logprob: -1.5710452795028687
    3. 'self' (adapté à ' self') → logprob: -1.5710452795028687
    4. 'seed' → logprob: -2.571045398712158
    5. ' 
' → logprob: -2.946045398712158
    6. '        ' → logprob: -3.071045398712158
    7. '_' → logprob: -3.946045398712158
    8. ' self' → logprob: -4.196045398712158
    9. 's' → logprob: -4.321045398712158
    10. '```' → logprob: -4.446045398712158

Token 50: '.current' (ID: 8357)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6934947371482849
    2. '.seed' → logprob: -0.6934947371482849
    3. '.current' → logprob: -9.31849479675293
    4. '.random' → logprob: -9.44349479675293
    5. ' .' → logprob: -10.44349479675293
    6. '.s' → logprob: -10.44349479675293
    7. '.se' → logprob: -10.56849479675293
    8. '.value' → logprob: -10.81849479675293
    9. 'seed' → logprob: -11.31849479675293
    10. '.Se' → logprob: -11.94349479675293

Token 51: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0012851139763370156
    2. ' _' → logprob: -7.876285076141357
    3. ' =' → logprob: -8.126285552978516
    4. '_token' → logprob: -8.501285552978516
    5. '_value' → logprob: -8.751285552978516
    6. '=' → logprob: -9.376285552978516
    7. '_val' → logprob: -10.126285552978516
    8. '_space' → logprob: -10.626285552978516
    9. '_random' → logprob: -10.751285552978516
    10. '_seed' → logprob: -10.876285552978516

Token 52: ' seed' (ID: 17284)
  Prédit: ' seed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' seed' → logprob: -0.0076578580774366856
    2. 'seed' → logprob: -4.882658004760742
    3. ' ' → logprob: -10.257658004760742
    4. '(seed' → logprob: -11.257658004760742
    5. ' ' → logprob: -13.007658004760742
    6. '_seed' → logprob: -13.882658004760742
    7. '.seed' → logprob: -15.257658004760742
    8. 'Seed' → logprob: -16.382658004760742
    9. ' 
' → logprob: -17.007658004760742
    10. ' see' → logprob: -17.382658004760742

Token 53: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08677005022764206
    2. '    
' → logprob: -3.0867700576782227
    3. '   ' → logprob: -4.211770057678223
    4. '\n' → logprob: -5.211770057678223
    5. '

' → logprob: -5.586770057678223
    6. '```' → logprob: -5.711770057678223
    7. ' 
' → logprob: -5.961770057678223
    8. '  
' → logprob: -5.961770057678223
    9. '' → logprob: -6.836770057678223
    10. '
' → logprob: -7.086770057678223

Token 54: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06458164751529694
    2. '    
' → logprob: -3.5645816326141357
    3. '   ' → logprob: -3.9395816326141357
    4. '  
' → logprob: -5.064581871032715
    5. ' 
' → logprob: -6.189581871032715
    6. 'def' → logprob: -6.439581871032715
    7. '```' → logprob: -6.439581871032715
    8. '\n' → logprob: -6.939581871032715
    9. ' def' → logprob: -7.439581871032715
    10. '   
' → logprob: -7.564581871032715

Token 55: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.9577713012695312
    2. ' 
' → logprob: -1.3327713012695312
    3. '
' → logprob: -2.0827713012695312
    4. 'd' → logprob: -2.5827713012695312
    5. '   ' → logprob: -2.7077713012695312
    6. '    
' → logprob: -3.2077713012695312
    7. '\n' → logprob: -3.9577713012695312
    8. ' def' → logprob: -4.582771301269531
    9. '  
' → logprob: -5.582771301269531
    10. '\' → logprob: -6.207771301269531

Token 56: ' next' (ID: 2613)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06405135244131088
    2. ' space' → logprob: -3.439051389694214
    3. '_' → logprob: -3.814051389694214
    4. ' generate' → logprob: -6.439051151275635
    5. ' next' → logprob: -6.439051151275635
    6. '_space' → logprob: -6.564051151275635
    7. ' _' → logprob: -7.189051151275635
    8. ' def' → logprob: -7.689051151275635
    9. ' a' → logprob: -7.939051151275635
    10. 'space' → logprob: -8.064051628112793

Token 57: '(self' (ID: 2402)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.041867490857839584
    2. '(' → logprob: -3.29186749458313
    3. '_value' → logprob: -6.166867256164551
    4. '_token' → logprob: -6.916867256164551
    5. '(self' → logprob: -8.79186725616455
    6. '_random' → logprob: -8.79186725616455
    7. '_number' → logprob: -9.04186725616455
    8. '_val' → logprob: -9.16686725616455
    9. '()' → logprob: -9.54186725616455
    10. '_(' → logprob: -10.41686725616455

Token 58: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6402624845504761
    2. '):' → logprob: -0.8902624845504761
    3. '_' → logprob: -3.2652626037597656
    4. ' )' → logprob: -4.640262603759766
    5. ' ):' → logprob: -5.140262603759766
    6. ')_' → logprob: -5.890262603759766
    7. ':' → logprob: -6.140262603759766
    8. '_value' → logprob: -6.890262603759766
    9. ' ' → logprob: -7.015262603759766
    10. '():' → logprob: -7.515262603759766

Token 59: ' ->' (ID: 2747)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4911808669567108
    2. ':' → logprob: -1.4911808967590332
    3. '(self' → logprob: -2.116180896759033
    4. '():' → logprob: -3.241180896759033
    5. '):' → logprob: -6.741180896759033
    6. '(
' → logprob: -7.116180896759033
    7. '<|end|>' → logprob: -7.741180896759033
    8. ')' → logprob: -8.616180419921875
    9. ':**' → logprob: -8.741180419921875
    10. 'self' → logprob: -9.241180419921875

Token 60: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.07889188081026077
    2. 'int' → logprob: -2.5788919925689697
    3. '[int' → logprob: -14.20389175415039
    4. ' ' → logprob: -14.70389175415039
    5. ' ' → logprob: -15.07889175415039
    6. '	int' → logprob: -15.45389175415039
    7. ' 
' → logprob: -16.20389175415039
    8. ' i' → logprob: -16.45389175415039
    9. '(int' → logprob: -16.70389175415039
    10. '<int' → logprob: -16.95389175415039

Token 61: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -7.314625690924004e-05
    2. '():' → logprob: -9.875073432922363
    3. '):' → logprob: -11.250073432922363
    4. ':
' → logprob: -12.250073432922363
    5. ':**' → logprob: -13.375073432922363
    6. ':return' → logprob: -14.000073432922363
    7. ':def' → logprob: -14.750073432922363
    8. '<|end|>' → logprob: -15.125073432922363
    9. ',' → logprob: -15.250073432922363
    10. ' :' → logprob: -15.500073432922363

Token 62: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009560934267938137
    2. '
' → logprob: -6.259561061859131
    3. ' 
' → logprob: -6.384561061859131
    4. '        ' → logprob: -6.509561061859131
    5. ' ' → logprob: -6.884561061859131
    6. '        
' → logprob: -6.884561061859131
    7. '    ' → logprob: -7.634561061859131
    8. '\' → logprob: -7.634561061859131
    9. '   ' → logprob: -7.884561061859131
    10. '\n' → logprob: -8.384560585021973

Token 63: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.079109326004982
    2. '       ' → logprob: -2.8291094303131104
    3. ' self' → logprob: -4.079109191894531
    4. '   ' → logprob: -10.954109191894531
    5. '```' → logprob: -10.954109191894531
    6. ' ' → logprob: -11.579109191894531
    7. '        ' → logprob: -11.704109191894531
    8. '	self' → logprob: -11.829109191894531
    9. 's' → logprob: -13.079109191894531
    10. 'x' → logprob: -13.329109191894531

Token 64: '.current' (ID: 8357)
  Prédit: '.current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.current' → logprob: -0.016095725819468498
    2. '.' → logprob: -4.1410956382751465
    3. 'current' → logprob: -10.141096115112305
    4. ' .' → logprob: -11.266096115112305
    5. '.next' → logprob: -12.641096115112305
    6. ' ' → logprob: -13.516096115112305
    7. '`.' → logprob: -13.766096115112305
    8. '.cur' → logprob: -14.141096115112305
    9. '	current' → logprob: -14.766096115112305
    10. ' current' → logprob: -15.016096115112305

Token 65: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05489424243569374
    2. '=' → logprob: -2.929894208908081
    3. ' ' → logprob: -11.42989444732666
    4. ' =
' → logprob: -14.55489444732666
    5. ' *=' → logprob: -14.80489444732666
    6. ' +=' → logprob: -16.679893493652344
    7. ')' → logprob: -16.929893493652344
    8. ' =(' → logprob: -17.054893493652344
    9. ' =)' → logprob: -17.429893493652344
    10. ' ' → logprob: -17.929893493652344

Token 66: ' (' (ID: 350)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.5767083168029785
    2. ' (' → logprob: -0.8267083168029785
    3. '(' → logprob: -7.2017083168029785
    4. '(next' → logprob: -12.32670783996582
    5. '(a' → logprob: -12.70170783996582
    6. '(abs' → logprob: -13.07670783996582
    7. '((' → logprob: -13.32670783996582
    8. '(
' → logprob: -13.70170783996582
    9. '(f' → logprob: -13.82670783996582
    10. '(s' → logprob: -13.95170783996582

Token 67: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0001310719089815393
    2. '(self' → logprob: -9.500130653381348
    3. ' self' → logprob: -9.875130653381348
    4. 's' → logprob: -13.750130653381348
    5. 'se' → logprob: -14.000130653381348
    6. '*self' → logprob: -14.000130653381348
    7. '   ' → logprob: -14.375130653381348
    8. '(' → logprob: -14.375130653381348
    9. ')' → logprob: -15.750130653381348
    10. 'sel' → logprob: -15.875130653381348

Token 68: '.a' (ID: 8772)
  Prédit: '.a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.a' → logprob: -0.0984812080860138
    2. '.' → logprob: -2.4734811782836914
    3. '.current' → logprob: -5.348481178283691
    4. ' *' → logprob: -5.473481178283691
    5. '*' → logprob: -8.598481178283691
    6. 'a' → logprob: -8.848481178283691
    7. ' .' → logprob: -8.973481178283691
    8. '*a' → logprob: -9.973481178283691
    9. ' ' → logprob: -11.473481178283691
    10. ' a' → logprob: -12.473481178283691

Token 69: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0019483910873532295
    2. '*' → logprob: -6.251948356628418
    3. ' ' → logprob: -11.126948356628418
    4. '*self' → logprob: -12.251948356628418
    5. ' ' → logprob: -15.876948356628418
    6. '*object' → logprob: -16.501949310302734
    7. ' **' → logprob: -17.001949310302734
    8. ' *
' → logprob: -19.251949310302734
    9. '*this' → logprob: -19.251949310302734
    10. '<|end|>' → logprob: -19.376949310302734

Token 70: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10021809488534927
    2. ' self' → logprob: -2.3502180576324463
    3. ' ' → logprob: -12.100217819213867
    4. '<|end|>' → logprob: -12.725217819213867
    5. ')' → logprob: -14.100217819213867
    6. 's' → logprob: -14.600217819213867
    7. ' current' → logprob: -15.475217819213867
    8. '	self' → logprob: -15.600217819213867
    9. 'current' → logprob: -15.725217819213867
    10. '  ' → logprob: -15.725217819213867

Token 71: '.current' (ID: 8357)
  Prédit: '.current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.current' → logprob: -0.0008348815608769655
    2. '.' → logprob: -7.250834941864014
    3. 'current' → logprob: -9.000834465026855
    4. 'urrent' → logprob: -14.625834465026855
    5. '.previous' → logprob: -14.875834465026855
    6. '.cur' → logprob: -15.250834465026855
    7. '.
' → logprob: -15.750834465026855
    8. ' current' → logprob: -16.250835418701172
    9. ' .' → logprob: -16.250835418701172
    10. '	current' → logprob: -16.875835418701172

Token 72: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.0232982374727726
    2. '+' → logprob: -3.7732982635498047
    3. ')' → logprob: -10.398298263549805
    4. ' ' → logprob: -10.898298263549805
    5. '<|end|>' → logprob: -13.523298263549805
    6. ' +
' → logprob: -13.773298263549805
    7. '+)' → logprob: -15.273298263549805
    8. ' )' → logprob: -15.273298263549805
    9. ' plus' → logprob: -15.398298263549805
    10. ' +

' → logprob: -15.898298263549805

Token 73: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.03376326709985733
    2. 'self' → logprob: -3.4087631702423096
    3. ' ' → logprob: -9.15876293182373
    4. ')' → logprob: -12.90876293182373
    5. '    ' → logprob: -13.28376293182373
    6. 'b' → logprob: -13.40876293182373
    7. ' ' → logprob: -13.53376293182373
    8. '1' → logprob: -13.65876293182373
    9. '	self' → logprob: -13.65876293182373
    10. '<|end|>' → logprob: -13.90876293182373

Token 74: '.b' (ID: 1292)
  Prédit: '.b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.b' → logprob: -0.16523899137973785
    2. '.' → logprob: -2.040239095687866
    3. ')' → logprob: -3.915239095687866
    4. 'b' → logprob: -6.165238857269287
    5. ' b' → logprob: -9.290239334106445
    6. ')b' → logprob: -10.165239334106445
    7. '<|end|>' → logprob: -10.290239334106445
    8. ' )' → logprob: -10.540239334106445
    9. ' ' → logprob: -10.665239334106445
    10. ' .' → logprob: -11.165239334106445

Token 75: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000553151941858232
    2. ' )' → logprob: -7.500553131103516
    3. ')%' → logprob: -17.375553131103516
    4. '}' → logprob: -18.375553131103516
    5. ')
' → logprob: -18.625553131103516
    6. ']' → logprob: -18.625553131103516
    7. '```' → logprob: -18.625553131103516
    8. ' ' → logprob: -18.875553131103516
    9. '）' → logprob: -19.250553131103516
    10. ' ' → logprob: -19.250553131103516

Token 76: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.0893453061580658
    2. ' ' → logprob: -2.4643452167510986
    3. ')' → logprob: -8.58934497833252
    4. '%' → logprob: -8.58934497833252
    5. ' )' → logprob: -11.21434497833252
    6. ' ' → logprob: -12.33934497833252
    7. ' %
' → logprob: -12.58934497833252
    8. ' %)' → logprob: -12.58934497833252
    9. '<|end|>' → logprob: -12.71434497833252
    10. ')%' → logprob: -12.83934497833252

Token 77: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.11286851763725281
    2. 'self' → logprob: -2.237868547439575
    3. ' ' → logprob: -10.487868309020996
    4. 'c' → logprob: -11.362868309020996
    5. ' ' → logprob: -12.737868309020996
    6. ' c' → logprob: -13.487868309020996
    7. '	self' → logprob: -14.112868309020996
    8. '<|end|>' → logprob: -14.862868309020996
    9. '  ' → logprob: -15.362868309020996
    10. ' 
' → logprob: -15.487868309020996

Token 78: '.c' (ID: 1081)
  Prédit: '.c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.c' → logprob: -0.006723771803081036
    2. '.' → logprob: -5.006723880767822
    3. ' .' → logprob: -12.756723403930664
    4. '‌.' → logprob: -14.006723403930664
    5. '<|end|>' → logprob: -14.006723403930664
    6. '>.' → logprob: -14.131723403930664
    7. 'c' → logprob: -14.381723403930664
    8. '​.' → logprob: -14.756723403930664
    9. '.
' → logprob: -14.756723403930664
    10. '.current' → logprob: -15.256723403930664

Token 79: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17444032430648804
    2. '
' → logprob: -1.9244403839111328
    3. 'return' → logprob: -5.049440383911133
    4. '\n' → logprob: -6.174440383911133
    5. ' return' → logprob: -6.799440383911133
    6. '<|end|>' → logprob: -6.799440383911133
    7. '        
' → logprob: -7.049440383911133
    8. '\' → logprob: -7.549440383911133
    9. ' 
' → logprob: -7.799440383911133
    10. '  
' → logprob: -7.924440383911133

Token 80: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029731975868344307
    2. '
' → logprob: -3.6547319889068604
    3. 'return' → logprob: -6.279731750488281
    4. ' return' → logprob: -7.404731750488281
    5. '<|end|>' → logprob: -8.029731750488281
    6. '        
' → logprob: -8.654731750488281
    7. '   ' → logprob: -9.404731750488281
    8. '\n' → logprob: -9.529731750488281
    9. '\' → logprob: -9.654731750488281
    10. '```' → logprob: -10.404731750488281

Token 81: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0019645551219582558
    2. ' return' → logprob: -6.251964569091797
    3. '       ' → logprob: -10.251964569091797
    4. 'self' → logprob: -15.376964569091797
    5. ':return' → logprob: -16.251964569091797
    6. '```' → logprob: -16.501964569091797
    7. 'eturn' → logprob: -16.626964569091797
    8. '_return' → logprob: -16.751964569091797
    9. 'Return' → logprob: -16.876964569091797
    10. '{return' → logprob: -17.126964569091797

Token 82: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.004080062732100487
    2. 'self' → logprob: -5.504080295562744
    3. ' ' → logprob: -13.754079818725586
    4. ' ' → logprob: -14.254079818725586
    5. '_self' → logprob: -17.254079818725586
    6. ' sel' → logprob: -18.254079818725586
    7. '	self' → logprob: -18.754079818725586
    8. ' selfs' → logprob: -19.254079818725586
    9. 'Self' → logprob: -20.254079818725586
    10. ' seld' → logprob: -20.629079818725586

Token 83: '.current' (ID: 8357)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6932841539382935
    2. '.current' → logprob: -0.6932841539382935
    3. '.cur' → logprob: -9.443284034729004
    4. ' .' → logprob: -11.068284034729004
    5. '.curr' → logprob: -11.318284034729004
    6. '.user' → logprob: -11.943284034729004
    7. '.
' → logprob: -12.193284034729004
    8. 'current' → logprob: -12.693284034729004
    9. ' ' → logprob: -12.693284034729004
    10. '.c' → logprob: -13.068284034729004

Token 84: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 85: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2431313693523407
    2. '#' → logprob: -2.368131399154663
    3. 'n' → logprob: -2.743131399154663
    4. '<|end|>' → logprob: -4.118131160736084
    5. '```' → logprob: -4.618131160736084
    6. '\n' → logprob: -5.118131160736084
    7. '' → logprob: -5.368131160736084
    8. ' 
' → logprob: -5.743131160736084
    9. 'r' → logprob: -6.118131160736084
    10. '.' → logprob: -6.368131160736084

Token 86: ' def' (ID: 1056)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.27573761343955994
    2. 'n' → logprob: -2.2757375240325928
    3. '
' → logprob: -2.6507375240325928
    4. 'd' → logprob: -4.900737762451172
    5. '<|end|>' → logprob: -4.900737762451172
    6. '   ' → logprob: -5.025737762451172
    7. '\n' → logprob: -5.025737762451172
    8. '```' → logprob: -5.025737762451172
    9. '    
' → logprob: -5.275737762451172
    10. ' ' → logprob: -5.525737762451172

Token 87: ' reset' (ID: 12820)
  Prédit: ' reset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reset' → logprob: -0.24565552175045013
    2. ' space' → logprob: -2.7456555366516113
    3. ' ' → logprob: -2.8706555366516113
    4. ' seed' → logprob: -3.3706555366516113
    5. ' rese' → logprob: -4.245655536651611
    6. ' peek' → logprob: -4.495655536651611
    7. ' current' → logprob: -4.620655536651611
    8. ' generate' → logprob: -4.745655536651611
    9. ' get' → logprob: -5.370655536651611
    10. ' def' → logprob: -5.995655536651611

Token 88: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1432434618473053
    2. '(self' → logprob: -2.0182435512542725
    3. '()' → logprob: -8.393243789672852
    4. ' (' → logprob: -9.143243789672852
    5. '(
' → logprob: -9.268243789672852
    6. '(s' → logprob: -9.643243789672852
    7. '():' → logprob: -10.643243789672852
    8. '<|end|>' → logprob: -11.143243789672852
    9. '_' → logprob: -12.143243789672852
    10. '(

' → logprob: -12.268243789672852

Token 89: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.31467393040657043
    2. ',' → logprob: -1.314673900604248
    3. ')' → logprob: -6.689673900604248
    4. '():' → logprob: -9.689674377441406
    5. ':' → logprob: -10.439674377441406
    6. ' ):' → logprob: -11.064674377441406
    7. ' ,' → logprob: -11.189674377441406
    8. '(' → logprob: -11.314674377441406
    9. '):
' → logprob: -11.689674377441406
    10. 'self' → logprob: -12.064674377441406

Token 90: ' seed' (ID: 17284)
  Prédit: ' seed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' seed' → logprob: -0.052544135600328445
    2. 'seed' → logprob: -4.052544116973877
    3. ')' → logprob: -4.177544116973877
    4. ' )' → logprob: -4.677544116973877
    5. ' self' → logprob: -5.552544116973877
    6. ' ' → logprob: -6.177544116973877
    7. '<|end|>' → logprob: -6.177544116973877
    8. 'self' → logprob: -8.177544593811035
    9. ' ' → logprob: -8.552544593811035
    10. ' current' → logprob: -8.552544593811035

Token 91: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6237071752548218
    2. '):' → logprob: -0.8737071752548218
    3. '=' → logprob: -3.1237072944641113
    4. '=None' → logprob: -6.498707294464111
    5. ')' → logprob: -6.873707294464111
    6. ' ):' → logprob: -9.998706817626953
    7. ' =' → logprob: -10.873706817626953
    8. '):
' → logprob: -10.873706817626953
    9. ' :' → logprob: -11.748706817626953
    10. ' ' → logprob: -12.498706817626953

Token 92: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.45542219281196594
    2. ' int' → logprob: -1.3304221630096436
    3. 'int' → logprob: -3.2054221630096436
    4. ' None' → logprob: -3.3304221630096436
    5. ')' → logprob: -4.580422401428223
    6. ' )' → logprob: -4.705422401428223
    7. 'None' → logprob: -5.330422401428223
    8. ' seed' → logprob: -7.455422401428223
    9. '=None' → logprob: -8.955422401428223
    10. 'seed' → logprob: -9.455422401428223

Token 93: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008641989901661873
    2. ')' → logprob: -4.758642196655273
    3. '):
' → logprob: -11.133642196655273
    4. ':' → logprob: -11.508642196655273
    5. ' ):' → logprob: -13.508642196655273
    6. '   ' → logprob: -14.008642196655273
    7. '       ' → logprob: -15.508642196655273
    8. ' ' → logprob: -16.258642196655273
    9. ')：' → logprob: -16.633642196655273
    10. '):

' → logprob: -17.008642196655273

Token 94: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01721147447824478
    2. '<|end|>' → logprob: -4.267211437225342
    3. ' ' → logprob: -6.642211437225342
    4. ' self' → logprob: -7.517211437225342
    5. '        
' → logprob: -8.2672119140625
    6. '   ' → logprob: -8.2672119140625
    7. ' 
' → logprob: -8.6422119140625
    8. ' ' → logprob: -9.0172119140625
    9. 'self' → logprob: -9.3922119140625
    10. '```' → logprob: -9.7672119140625

Token 95: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.5240944623947144
    2. ' self' → logprob: -1.0240944623947144
    3. '       ' → logprob: -3.024094581604004
    4. '   ' → logprob: -9.524094581604004
    5. '	self' → logprob: -9.899094581604004
    6. ' ' → logprob: -11.149094581604004
    7. ' ' → logprob: -11.399094581604004
    8. '        
' → logprob: -11.524094581604004
    9. '```' → logprob: -11.649094581604004
    10. ' 
' → logprob: -12.524094581604004

Token 96: '.current' (ID: 8357)
  Prédit: '.current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.current' → logprob: -0.12706145644187927
    2. '.' → logprob: -2.127061367034912
    3. ' .' → logprob: -10.00206184387207
    4. '.reset' → logprob: -10.25206184387207
    5. 'current' → logprob: -11.12706184387207
    6. '.user' → logprob: -11.87706184387207
    7. '.cur' → logprob: -11.87706184387207
    8. ' ' → logprob: -12.62706184387207
    9. '.period' → logprob: -12.75206184387207
    10. '.next' → logprob: -13.00206184387207

Token 97: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0013261953135952353
    2. '=' → logprob: -6.626326084136963
    3. ' ' → logprob: -15.876326560974121
    4. ' =
' → logprob: -16.626325607299805
    5. ' ' → logprob: -18.126325607299805
    6. '<|end|>' → logprob: -18.626325607299805
    7. ' =)' → logprob: -19.501325607299805
    8. ' =",' → logprob: -19.876325607299805
    9. ' ="' → logprob: -20.001325607299805
    10. ' ='' → logprob: -20.626325607299805

Token 98: ' seed' (ID: 17284)
  Prédit: ' seed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' seed' → logprob: -0.011052416637539864
    2. 'seed' → logprob: -4.51105260848999
    3. '(seed' → logprob: -12.511052131652832
    4. ' ' → logprob: -14.261052131652832
    5. ' ' → logprob: -15.386052131652832
    6. '.seed' → logprob: -17.01105308532715
    7. '_seed' → logprob: -17.13605308532715
    8. ' 
' → logprob: -18.63605308532715
    9. ' se' → logprob: -19.51105308532715
    10. ' see' → logprob: -19.51105308532715

Token 99: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 100: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1357119083404541
    2. 'n' → logprob: -3.385711908340454
    3. '#' → logprob: -3.510711908340454
    4. ' 
' → logprob: -4.635711669921875
    5. ' ' → logprob: -4.885711669921875
    6. '' → logprob: -5.260711669921875
    7. 'd' → logprob: -5.260711669921875
    8. 'c' → logprob: -5.260711669921875
    9. '\n' → logprob: -5.260711669921875
    10. '   ' → logprob: -5.510711669921875

Token 101: ' Reel' (ID: 148800)
  Prédit: ' Linear'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Linear' → logprob: -0.2197590172290802
    2. ' Random' → logprob: -2.344758987426758
    3. ' ' → logprob: -2.594758987426758
    4. ' M' → logprob: -5.594758987426758
    5. ' Quadr' → logprob: -5.844758987426758
    6. ' Uniform' → logprob: -6.469758987426758
    7. ' Python' → logprob: -6.594758987426758
    8. ' Square' → logprob: -6.969758987426758
    9. ' Fibonacci' → logprob: -6.969758987426758
    10. ' Mult' → logprob: -7.094758987426758

Token 102: 'Condition' (ID: 14232)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003494707867503166
    2. '(' → logprob: -6.003494739532471
    3. ':
' → logprob: -8.003494262695312
    4. 's' → logprob: -8.128494262695312
    5. '():' → logprob: -8.878494262695312
    6. '):' → logprob: -10.378494262695312
    7. ' :' → logprob: -10.378494262695312
    8. '<|end|>' → logprob: -10.503494262695312
    9. 'Segment' → logprob: -10.878494262695312
    10. 'Spin' → logprob: -11.378494262695312

Token 103: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004820868838578463
    2. 's' → logprob: -5.879820823669434
    3. '(' → logprob: -6.379820823669434
    4. ':
' → logprob: -8.879820823669434
    5. '):' → logprob: -10.129820823669434
    6. ' :' → logprob: -10.379820823669434
    7. '():' → logprob: -10.629820823669434
    8. 'ed' → logprob: -10.629820823669434
    9. 'ing' → logprob: -10.754820823669434
    10. '(s' → logprob: -11.504820823669434

Token 104: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022809894755482674
    2. ' def' → logprob: -4.147809982299805
    3. 'def' → logprob: -5.897809982299805
    4. ':' → logprob: -6.897809982299805
    5. '    ' → logprob: -7.272809982299805
    6. '<|end|>' → logprob: -7.272809982299805
    7. '    
' → logprob: -7.647809982299805
    8. ':
' → logprob: -8.272809982299805
    9. ' ' → logprob: -8.397809982299805
    10. '  ' → logprob: -8.522809982299805

Token 105: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.225673109292984
    2. ' def' → logprob: -1.6006730794906616
    3. '   ' → logprob: -8.350672721862793
    4. 'de' → logprob: -11.475672721862793
    5. 'class' → logprob: -12.350672721862793
    6. ' ' → logprob: -13.100672721862793
    7. ' __' → logprob: -13.225672721862793
    8. '__' → logprob: -13.350672721862793
    9. '```' → logprob: -14.350672721862793
    10. ' de' → logprob: -14.600672721862793

Token 106: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.2200041562318802
    2. 'init' → logprob: -1.9700042009353638
    3. '_init' → logprob: -3.720004081726074
    4. '__' → logprob: -4.595004081726074
    5. ' init' → logprob: -4.595004081726074
    6. '_' → logprob: -4.720004081726074
    7. ' ' → logprob: -6.220004081726074
    8. ' def' → logprob: -6.470004081726074
    9. ' _' → logprob: -7.095004081726074
    10. 'def' → logprob: -9.095004081726074

Token 107: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -3.9650025428272784e-05
    2. 'ini' → logprob: -10.875040054321289
    3. 'i' → logprob: -11.125040054321289
    4. 'in' → logprob: -12.875040054321289
    5. 'int' → logprob: -14.500040054321289
    6. 'inite' → logprob: -14.625040054321289
    7. 'def' → logprob: -14.750040054321289
    8. '_init' → logprob: -14.875040054321289
    9. 'innit' → logprob: -14.875040054321289
    10. '   ' → logprob: -15.375040054321289

Token 108: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.001966577721759677
    2. '__' → logprob: -6.25196647644043
    3. '__(
' → logprob: -10.25196647644043
    4. '__((' → logprob: -13.37696647644043
    5. '__('' → logprob: -14.37696647644043
    6. '__("' → logprob: -15.87696647644043
    7. '(self' → logprob: -16.12696647644043
    8. '_' → logprob: -16.75196647644043
    9. '_(' → logprob: -16.75196647644043
    10. '__(*' → logprob: -16.75196647644043

Token 109: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.009819486178457737
    2. ' self' → logprob: -4.634819507598877
    3. ')' → logprob: -10.009819030761719
    4. ' ' → logprob: -12.384819030761719
    5. '
' → logprob: -12.509819030761719
    6. '0' → logprob: -12.634819030761719
    7. '   ' → logprob: -12.884819030761719
    8. '       ' → logprob: -13.634819030761719
    9. ',' → logprob: -14.259819030761719
    10. 's' → logprob: -14.384819030761719

Token 110: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005934843793511391
    2. ' ,' → logprob: -5.130934715270996
    3. '<|end|>' → logprob: -13.505934715270996
    4. 'self' → logprob: -13.630934715270996
    5. ')' → logprob: -13.880934715270996
    6. '‌,' → logprob: -14.005934715270996
    7. ',
' → logprob: -14.505934715270996
    8. ' ' → logprob: -15.255934715270996
    9. ',self' → logprob: -15.380934715270996
    10. '_,' → logprob: -15.755934715270996

Token 111: ' target' (ID: 3783)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' min' → logprob: -1.8329322338104248
    2. ' reels' → logprob: -1.9579322338104248
    3. ' self' → logprob: -2.207932233810425
    4. ' symbols' → logprob: -2.582932233810425
    5. ' length' → logprob: -2.707932233810425
    6. ' symbol' → logprob: -3.207932233810425
    7. 're' → logprob: -3.332932233810425
    8. 'min' → logprob: -3.457932233810425
    9. ' reel' → logprob: -3.457932233810425
    10. 'self' → logprob: -3.457932233810425

Token 112: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.514375627040863
    2. ':' → logprob: -1.2643756866455078
    3. '_positions' → logprob: -3.889375686645508
    4. '):' → logprob: -4.014375686645508
    5. '_position' → logprob: -4.014375686645508
    6. '_index' → logprob: -4.514375686645508
    7. ',' → logprob: -4.639375686645508
    8. '_values' → logprob: -4.889375686645508
    9. '_symbol' → logprob: -5.139375686645508
    10. '_count' → logprob: -5.264375686645508

Token 113: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.026360677555203438
    2. ',' → logprob: -3.7763607501983643
    3. '):' → logprob: -6.151360511779785
    4. '=' → logprob: -7.401360511779785
    5. ':int' → logprob: -8.901360511779785
    6. ' :' → logprob: -9.651360511779785
    7. ' ,' → logprob: -9.776360511779785
    8. ')' → logprob: -10.151360511779785
    9. '=None' → logprob: -10.401360511779785
    10. ' ):' → logprob: -10.901360511779785

Token 114: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.1130359098315239
    2. 'int' → logprob: -2.2380359172821045
    3. ' ' → logprob: -9.238036155700684
    4. '[int' → logprob: -9.488036155700684
    5. ')' → logprob: -11.613036155700684
    6. '<|end|>' → logprob: -11.988036155700684
    7. ' list' → logprob: -12.738036155700684
    8. '	int' → logprob: -12.863036155700684
    9. ' )' → logprob: -13.113036155700684
    10. '<int' → logprob: -13.238036155700684

Token 115: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3497585356235504
    2. '):' → logprob: -1.224758505821228
    3. ')' → logprob: -6.974758625030518
    4. ':' → logprob: -8.97475814819336
    5. ' ,' → logprob: -9.22475814819336
    6. ' ):' → logprob: -9.59975814819336
    7. '):
' → logprob: -10.34975814819336
    8. '=' → logprob: -10.72475814819336
    9. '   ' → logprob: -11.09975814819336
    10. ' ' → logprob: -12.59975814819336

Token 116: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020440280437469482
    2. ',' → logprob: -4.145440101623535
    3. ' ' → logprob: -6.270440101623535
    4. 'self' → logprob: -7.020440101623535
    5. ' self' → logprob: -7.895440101623535
    6. ' ,' → logprob: -8.145440101623535
    7. '        ' → logprob: -8.645440101623535
    8. '<|end|>' → logprob: -8.770440101623535
    9. ')' → logprob: -8.895440101623535
    10. ':' → logprob: -9.270440101623535

Token 117: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.1683964729309082
    2. ' self' → logprob: -2.293396472930908
    3. '       ' → logprob: -2.918396472930908
    4. '	self' → logprob: -11.16839599609375
    5. '   ' → logprob: -11.29339599609375
    6. ' ' → logprob: -12.04339599609375
    7. ' ' → logprob: -13.29339599609375
    8. '        
' → logprob: -14.66839599609375
    9. '	' → logprob: -14.79339599609375
    10. 'super' → logprob: -14.91839599609375

Token 118: '.target' (ID: 11090)
  Prédit: '.target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.target' → logprob: -0.4063774645328522
    2. ' =' → logprob: -1.6563774347305298
    3. '.' → logprob: -2.1563775539398193
    4. 'target' → logprob: -4.90637731552124
    5. ' ==' → logprob: -4.90637731552124
    6. '=' → logprob: -5.15637731552124
    7. ' target' → logprob: -6.03137731552124
    8. ' .' → logprob: -6.15637731552124
    9. ' ' → logprob: -6.78137731552124
    10. '.current' → logprob: -7.78137731552124

Token 119: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -1.0206720617134124e-05
    2. '_' → logprob: -11.62501049041748
    3. '_val' → logprob: -14.37501049041748
    4. ' _' → logprob: -14.50001049041748
    5. '_values' → logprob: -16.500009536743164
    6. '=_' → logprob: -18.500009536743164
    7. '_Value' → logprob: -18.625009536743164
    8. '_VALUE' → logprob: -19.500009536743164
    9. ')_' → logprob: -19.625009536743164
    10. 'value' → logprob: -19.625009536743164

Token 120: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2281275987625122
    2. '=' → logprob: -1.6031275987625122
    3. ' ' → logprob: -5.978127479553223
    4. ')' → logprob: -9.478127479553223
    5. ' ==' → logprob: -9.853127479553223
    6. ' =
' → logprob: -10.853127479553223
    7. '<|end|>' → logprob: -11.353127479553223
    8. ',' → logprob: -12.228127479553223
    9. ':' → logprob: -12.478127479553223
    10. ' )' → logprob: -13.478127479553223

Token 121: ' target' (ID: 3783)
  Prédit: ' target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' target' → logprob: -0.6931594014167786
    2. 'target' → logprob: -0.6931594014167786
    3. ' ' → logprob: -11.693159103393555
    4. '(target' → logprob: -13.568159103393555
    5. '0' → logprob: -14.068159103393555
    6. '	target' → logprob: -14.193159103393555
    7. ' targ' → logprob: -14.568159103393555
    8. '_target' → logprob: -15.693159103393555
    9. '<|end|>' → logprob: -15.943159103393555
    10. 't' → logprob: -16.818159103393555

Token 122: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.0003079334564972669
    2. '_' → logprob: -8.1253080368042
    3. '_val' → logprob: -11.5003080368042
    4. ' _' → logprob: -13.7503080368042
    5. '_
' → logprob: -15.2503080368042
    6. '_s' → logprob: -16.750307083129883
    7. '_

' → logprob: -16.875307083129883
    8. '_VALUE' → logprob: -17.125307083129883
    9. '_condition' → logprob: -17.125307083129883
    10. '_Value' → logprob: -17.250307083129883

Token 123: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16476432979106903
    2. '<|end|>' → logprob: -2.039764404296875
    3. '

' → logprob: -3.914764404296875
    4. '<|end|>' → logprob: -7.789764404296875
    5. 'def' → logprob: -8.164764404296875
    6. '   ' → logprob: -8.539764404296875
    7. ' 
' → logprob: -8.664764404296875
    8. '    
' → logprob: -8.664764404296875
    9. '
    
' → logprob: -8.664764404296875
    10. ' def' → logprob: -8.664764404296875

Token 124: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1748291403055191
    2. '<|end|>' → logprob: -2.2998292446136475
    3. '

' → logprob: -3.0498292446136475
    4. '   ' → logprob: -4.924829006195068
    5. 'def' → logprob: -6.299829006195068
    6. ' def' → logprob: -6.424829006195068
    7. '<|end|>' → logprob: -7.549829006195068
    8. ' 
' → logprob: -7.799829006195068
    9. ' ' → logprob: -7.799829006195068
    10. '    
' → logprob: -8.549829483032227

Token 125: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0015208146069198847
    2. ' def' → logprob: -6.50152063369751
    3. '   ' → logprob: -11.251521110534668
    4. ' ' → logprob: -13.001521110534668
    5. 'd' → logprob: -13.376521110534668
    6. 'de' → logprob: -14.126521110534668
    7. ')' → logprob: -15.126521110534668
    8. '	def' → logprob: -15.251521110534668
    9. '```' → logprob: -15.876521110534668
    10. '
' → logprob: -16.62652015686035

Token 126: ' matches' (ID: 15248)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.11566857993602753
    2. ' evaluate' → logprob: -2.615668535232544
    3. ' def' → logprob: -4.365668773651123
    4. ' check' → logprob: -4.490668773651123
    5. ' matches' → logprob: -5.740668773651123
    6. ' match' → logprob: -6.365668773651123
    7. 'is' → logprob: -6.365668773651123
    8. 'evaluate' → logprob: -6.990668773651123
    9. ' ' → logprob: -7.115668773651123
    10. ' apply' → logprob: -7.240668773651123

Token 127: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.004108084831386805
    2. '(' → logprob: -5.50410795211792
    3. '(
' → logprob: -10.879108428955078
    4. '<|end|>' → logprob: -12.379108428955078
    5. '(s' → logprob: -12.754108428955078
    6. 'self' → logprob: -13.004108428955078
    7. ' (' → logprob: -14.504108428955078
    8. '(sel' → logprob: -15.004108428955078
    9. '(this' → logprob: -16.129108428955078
    10. ' self' → logprob: -16.129108428955078

Token 128: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009152670972980559
    2. ' ,' → logprob: -7.000915050506592
    3. '):' → logprob: -13.62591552734375
    4. ')' → logprob: -14.37591552734375
    5. ',
' → logprob: -14.50091552734375
    6. '<|end|>' → logprob: -14.50091552734375
    7. 'self' → logprob: -15.25091552734375
    8. ',value' → logprob: -15.75091552734375
    9. 's' → logprob: -15.75091552734375
    10. ',re' → logprob: -16.62591552734375

Token 129: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.024023916572332382
    2. ' current' → logprob: -4.64902400970459
    3. ' reel' → logprob: -4.64902400970459
    4. 'value' → logprob: -5.64902400970459
    5. ' ' → logprob: -7.64902400970459
    6. ' self' → logprob: -8.89902400970459
    7. ' number' → logprob: -9.27402400970459
    8. ' val' → logprob: -9.89902400970459
    9. ' slot' → logprob: -10.27402400970459
    10. ' other' → logprob: -10.27402400970459

Token 130: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5270835161209106
    2. '):' → logprob: -0.9020835161209106
    3. ')' → logprob: -5.777083396911621
    4. ' ):' → logprob: -7.402083396911621
    5. ':int' → logprob: -8.652083396911621
    6. ' :' → logprob: -10.527083396911621
    7. '):
' → logprob: -10.652083396911621
    8. ' )' → logprob: -11.527083396911621
    9. '<|end|>' → logprob: -12.527083396911621
    10. ',' → logprob: -13.652083396911621

Token 131: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.1073676198720932
    2. 'int' → logprob: -2.482367515563965
    3. ' value' → logprob: -4.107367515563965
    4. ' ' → logprob: -7.107367515563965
    5. 'value' → logprob: -7.482367515563965
    6. ')' → logprob: -8.607367515563965
    7. ':int' → logprob: -8.857367515563965
    8. ' )' → logprob: -9.607367515563965
    9. ' self' → logprob: -11.982367515563965
    10. '=int' → logprob: -11.982367515563965

Token 132: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016102410852909088
    2. '):' → logprob: -4.141102313995361
    3. ' )' → logprob: -10.51610279083252
    4. ':' → logprob: -10.51610279083252
    5. '):
' → logprob: -11.51610279083252
    6. ' ):' → logprob: -13.14110279083252
    7. ')->' → logprob: -13.89110279083252
    8. '   ' → logprob: -14.14110279083252
    9. '):

' → logprob: -16.766101837158203
    10. ' ' → logprob: -16.766101837158203

Token 133: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00133595522493124
    2. ' ->' → logprob: -7.501336097717285
    3. '):' → logprob: -7.751336097717285
    4. '->' → logprob: -8.751336097717285
    5. ')' → logprob: -9.751336097717285
    6. ' :' → logprob: -9.876336097717285
    7. ':
' → logprob: -10.251336097717285
    8. ')->' → logprob: -11.001336097717285
    9. ':return' → logprob: -11.251336097717285
    10. '():' → logprob: -11.501336097717285

Token 134: ' bool' (ID: 3792)
  Prédit: ' bool'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bool' → logprob: -0.024555053561925888
    2. 'bool' → logprob: -3.774554967880249
    3. ' ' → logprob: -6.649555206298828
    4. ' True' → logprob: -12.024555206298828
    5. ' 
' → logprob: -13.774555206298828
    6. '	bool' → logprob: -13.899555206298828
    7. ' ' → logprob: -14.024555206298828
    8. ' "' → logprob: -14.149555206298828
    9. 'True' → logprob: -14.149555206298828
    10. '"' → logprob: -14.149555206298828

Token 135: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002799279463943094
    2. ':
' → logprob: -8.625280380249023
    3. '):' → logprob: -9.750280380249023
    4. '():' → logprob: -11.000280380249023
    5. ':return' → logprob: -11.375280380249023
    6. '<|end|>' → logprob: -11.500280380249023
    7. ':**' → logprob: -14.125280380249023
    8. '):
' → logprob: -14.250280380249023
    9. ')' → logprob: -14.625280380249023
    10. '       ' → logprob: -15.000280380249023

Token 136: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0023468725848942995
    2. ' return' → logprob: -6.377346992492676
    3. 'return' → logprob: -7.377346992492676
    4. '<|end|>' → logprob: -12.127346992492676
    5. '   ' → logprob: -12.502346992492676
    6. ' ' → logprob: -13.127346992492676
    7. '
' → logprob: -13.252346992492676
    8. '      ' → logprob: -13.377346992492676
    9. '	' → logprob: -13.752346992492676
    10. ' ' → logprob: -14.377346992492676

Token 137: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0025590185541659594
    2. '       ' → logprob: -6.252559185028076
    3. ' return' → logprob: -7.377559185028076
    4. '   ' → logprob: -13.252558708190918
    5. '	return' → logprob: -13.377558708190918
    6. '```' → logprob: -14.252558708190918
    7. '
' → logprob: -14.377558708190918
    8. '{return' → logprob: -16.002559661865234
    9. ':return' → logprob: -16.002559661865234
    10. '	' → logprob: -16.127559661865234

Token 138: ' self' (ID: 1051)
  Prédit: ' value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.0033971716184169054
    2. 'value' → logprob: -6.003396987915039
    3. ' self' → logprob: -7.003396987915039
    4. 'self' → logprob: -12.003396987915039
    5. '(value' → logprob: -13.503396987915039
    6. ' (' → logprob: -13.628396987915039
    7. ' ' → logprob: -13.628396987915039
    8. ' ' → logprob: -13.753396987915039
    9. '"value' → logprob: -14.003396987915039
    10. '	value' → logprob: -16.00339698791504

Token 139: '.target' (ID: 11090)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7748092412948608
    2. '.target' → logprob: -0.7748092412948608
    3. '.value' → logprob: -2.6498093605041504
    4. '.current' → logprob: -4.89980936050415
    5. '.user' → logprob: -9.274808883666992
    6. ' .' → logprob: -9.649808883666992
    7. '.token' → logprob: -10.149808883666992
    8. '.t' → logprob: -11.024808883666992
    9. '.targets' → logprob: -11.524808883666992
    10. 'target' → logprob: -11.774808883666992

Token 140: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -1.0280383548888494e-06
    2. '_' → logprob: -14.250000953674316
    3. 'value' → logprob: -15.625000953674316
    4. '_val' → logprob: -16.000001907348633
    5. ' _' → logprob: -18.375001907348633
    6. '_values' → logprob: -18.500001907348633
    7. 'alue' → logprob: -18.500001907348633
    8. '_VALUE' → logprob: -18.625001907348633
    9. 'Value' → logprob: -19.375001907348633
    10. '_v' → logprob: -19.625001907348633

Token 141: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.004644792061299086
    2. '==' → logprob: -5.379644870758057
    3. '=' → logprob: -11.254644393920898
    4. ' <=' → logprob: -12.504644393920898
    5. ' ' → logprob: -13.129644393920898
    6. ' =' → logprob: -13.254644393920898
    7. ' ==
' → logprob: -13.379644393920898
    8. '<|end|>' → logprob: -14.129644393920898
    9. '==
' → logprob: -14.254644393920898
    10. ' ' → logprob: -15.129644393920898

Token 142: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.018150296062231064
    2. 'value' → logprob: -4.018150329589844
    3. ' ' → logprob: -15.018150329589844
    4. ' ' → logprob: -17.643150329589844
    5. '	value' → logprob: -18.268150329589844
    6. '"value' → logprob: -18.393150329589844
    7. ''value' → logprob: -18.393150329589844
    8. 'v' → logprob: -19.018150329589844
    9. '(value' → logprob: -19.268150329589844
    10. ')value' → logprob: -19.268150329589844

Token 143: '


' (ID: 2499)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5152904987335205
    2. '

' → logprob: -1.0152904987335205
    3. '<|end|>' → logprob: -3.2652904987335205
    4. '


' → logprob: -6.515290260314941
    5. 'class' → logprob: -7.765290260314941
    6. '<|end|>' → logprob: -8.765290260314941
    7. '
' → logprob: -10.640290260314941
    8. '\n' → logprob: -11.515290260314941
    9. ' ' → logprob: -11.515290260314941
    10. '  
' → logprob: -11.640290260314941

Token 144: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -4.0484450437361374e-05
    2. 'c' → logprob: -10.375040054321289
    3. ' class' → logprob: -12.625040054321289
    4. 'def' → logprob: -13.000040054321289
    5. 'from' → logprob: -13.875040054321289
    6. 'clas' → logprob: -14.250040054321289
    7. 'cl' → logprob: -14.875040054321289
    8. 'import' → logprob: -15.250040054321289
    9. '[' → logprob: -15.500040054321289
    10. 'cla' → logprob: -15.500040054321289

Token 145: ' Frame' (ID: 29120)
  Prédit: ' Slot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Slot' → logprob: -0.09352246671915054
    2. 'Slot' → logprob: -2.843522548675537
    3. ' Reel' → logprob: -4.968522548675537
    4. ' Spin' → logprob: -5.093522548675537
    5. ' Re' → logprob: -5.718522548675537
    6. 'Re' → logprob: -5.718522548675537
    7. ' Game' → logprob: -6.343522548675537
    8. ' Linear' → logprob: -6.343522548675537
    9. ' Symbol' → logprob: -6.593522548675537
    10. ' Machine' → logprob: -7.218522548675537

Token 146: 'Analyzer' (ID: 61604)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08121512830257416
    2. 'Condition' → logprob: -2.9562151432037354
    3. 'Size' → logprob: -5.456214904785156
    4. ' :' → logprob: -6.081214904785156
    5. 'Selector' → logprob: -6.331214904785156
    6. ':
' → logprob: -6.581214904785156
    7. 'Generator' → logprob: -6.706214904785156
    8. 'Sizer' → logprob: -6.706214904785156
    9. '():' → logprob: -6.831214904785156
    10. 'Re' → logprob: -6.956214904785156

Token 147: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04861427843570709
    2. ':
' → logprob: -3.048614263534546
    3. ':

' → logprob: -11.423614501953125
    4. ' :' → logprob: -11.548614501953125
    5. '(' → logprob: -13.298614501953125
    6. ':def' → logprob: -13.673614501953125
    7. ' :
' → logprob: -13.673614501953125
    8. '(object' → logprob: -14.923614501953125
    9. 'def' → logprob: -15.048614501953125
    10. ':
' → logprob: -15.173614501953125

Token 148: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008295765146613121
    2. ' def' → logprob: -5.25829553604126
    3. '    ' → logprob: -6.25829553604126
    4. 'class' → logprob: -8.133296012878418
    5. ' class' → logprob: -8.133296012878418
    6. '    
' → logprob: -9.008296012878418
    7. '
' → logprob: -9.133296012878418
    8. ' 
' → logprob: -9.508296012878418
    9. 'def' → logprob: -9.633296012878418
    10. '<|end|>' → logprob: -10.008296012878418

Token 149: ' MAX' (ID: 16960)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.013196704909205437
    2. 'def' → logprob: -4.5131964683532715
    3. '   ' → logprob: -6.3881964683532715
    4. '    ' → logprob: -8.26319694519043
    5. 'class' → logprob: -8.88819694519043
    6. ' class' → logprob: -9.88819694519043
    7. ' ' → logprob: -12.13819694519043
    8. ':' → logprob: -12.51319694519043
    9. '	def' → logprob: -12.63819694519043
    10. ':def' → logprob: -13.51319694519043

Token 150: '_FR' (ID: 32174)
  Prédit: '_RE'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_RE' → logprob: -1.5149952173233032
    2. '_FRAME' → logprob: -1.5149952173233032
    3. '_FR' → logprob: -1.5149952173233032
    4. '_CON' → logprob: -3.0149950981140137
    5. '_MATCH' → logprob: -3.0149950981140137
    6. '_VALUE' → logprob: -3.7649950981140137
    7. '_WIDTH' → logprob: -4.264995098114014
    8. '_SP' → logprob: -4.389995098114014
    9. '_LENGTH' → logprob: -4.514995098114014
    10. '_DISTANCE' → logprob: -4.639995098114014

Token 151: 'AMES' (ID: 31920)
  Prédit: 'AMES'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AMES' → logprob: -0.20212319493293762
    2. 'AME' → logprob: -1.7021231651306152
    3. 'A' → logprob: -8.327123641967773
    4. 'AM' → logprob: -8.827123641967773
    5. 'ames' → logprob: -9.702123641967773
    6. 'E' → logprob: -9.952123641967773
    7. 'ES' → logprob: -10.577123641967773
    8. 'OM' → logprob: -10.827123641967773
    9. 'EM' → logprob: -11.327123641967773
    10. 'MES' → logprob: -11.327123641967773

Token 152: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007818840444087982
    2. '=' → logprob: -5.757818698883057
    3. ' ' → logprob: -6.007818698883057
    4. '_PER' → logprob: -6.507818698883057
    5. '_COUNT' → logprob: -8.257819175720215
    6. '_' → logprob: -8.757819175720215
    7. '_TO' → logprob: -9.507819175720215
    8. '_CAP' → logprob: -9.632819175720215
    9. ' _' → logprob: -11.382819175720215
    10. '_NUM' → logprob: -11.507819175720215

Token 153: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.012265336699783802
    2. '100' → logprob: -4.887265205383301
    3. '10' → logprob: -5.512265205383301
    4. '20' → logprob: -8.5122652053833
    5. '16' → logprob: -9.2622652053833
    6. '50' → logprob: -9.5122652053833
    7. '30' → logprob: -10.1372652053833
    8. '5' → logprob: -10.5122652053833
    9. '200' → logprob: -11.1372652053833
    10. '64' → logprob: -11.2622652053833

Token 154: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.27153703570365906
    2. '10' → logprob: -1.7715370655059814
    3. '50' → logprob: -4.521536827087402
    4. '5' → logprob: -4.771536827087402
    5. '30' → logprob: -4.771536827087402
    6. '60' → logprob: -5.021536827087402
    7. ' ' → logprob: -5.146536827087402
    8. '20' → logprob: -5.146536827087402
    9. '3' → logprob: -5.521536827087402
    10. '500' → logprob: -5.521536827087402

Token 155: '00' (ID: 504)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0655321255326271
    2. '<|end|>' → logprob: -3.5655322074890137
    3. '   ' → logprob: -4.190532207489014
    4. ' 
' → logprob: -5.315532207489014
    5. '

' → logprob: -5.565532207489014
    6. ':' → logprob: -5.565532207489014
    7. '    
' → logprob: -6.190532207489014
    8. '0' → logprob: -7.190532207489014
    9. '  
' → logprob: -7.315532207489014
    10. ' ' → logprob: -7.440532207489014

Token 156: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.040730491280555725
    2. '

' → logprob: -4.6657304763793945
    3. '   ' → logprob: -4.6657304763793945
    4. ':' → logprob: -4.7907304763793945
    5. ' 
' → logprob: -5.9157304763793945
    6. '<|end|>' → logprob: -6.1657304763793945
    7. '    
' → logprob: -6.2907304763793945
    8. 'def' → logprob: -6.5407304763793945
    9. ':
' → logprob: -6.5407304763793945
    10. ' def' → logprob: -6.6657304763793945

Token 157: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8042722940444946
    2. '
' → logprob: -1.0542722940444946
    3. '   ' → logprob: -1.8042722940444946
    4. ':
' → logprob: -3.679272174835205
    5. '    
' → logprob: -5.804272174835205
    6. ' 
' → logprob: -6.054272174835205
    7. ' def' → logprob: -6.179272174835205
    8. 'def' → logprob: -6.304272174835205
    9. '<|end|>' → logprob: -6.429272174835205
    10. '    ' → logprob: -7.304272174835205

Token 158: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.28128620982170105
    2. ' def' → logprob: -1.4062862396240234
    3. '   ' → logprob: -9.031286239624023
    4. 'de' → logprob: -12.031286239624023
    5. 'class' → logprob: -12.531286239624023
    6. 'import' → logprob: -13.656286239624023
    7. ' ' → logprob: -13.906286239624023
    8. '@' → logprob: -14.031286239624023
    9. '	def' → logprob: -14.281286239624023
    10. ' de' → logprob: -14.781286239624023

Token 159: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.3885554373264313
    2. ' ' → logprob: -1.2635554075241089
    3. ' def' → logprob: -3.6385555267333984
    4. ' _' → logprob: -5.138555526733398
    5. '_' → logprob: -5.513555526733398
    6. ' analyze' → logprob: -6.263555526733398
    7. 'def' → logprob: -7.388555526733398
    8. ' ' → logprob: -7.638555526733398
    9. '__' → logprob: -10.388555526733398
    10. ' ‌' → logprob: -11.138555526733398

Token 160: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.6286106983898208e-05
    2. ' init' → logprob: -11.750016212463379
    3. '   ' → logprob: -12.750016212463379
    4. 'in' → logprob: -13.000016212463379
    5. 'i' → logprob: -14.375016212463379
    6. 'ini' → logprob: -14.500016212463379
    7. 'def' → logprob: -14.875016212463379
    8. 'innit' → logprob: -15.125016212463379
    9. 'int' → logprob: -15.250016212463379
    10. ' ' → logprob: -15.375016212463379

Token 161: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.004103215876966715
    2. '__' → logprob: -5.504103183746338
    3. '__(
' → logprob: -10.754103660583496
    4. '__((' → logprob: -13.629103660583496
    5. '__('' → logprob: -13.879103660583496
    6. '_' → logprob: -14.129103660583496
    7. '___' → logprob: -15.379103660583496
    8. '_(' → logprob: -15.629103660583496
    9. '__("' → logprob: -15.879103660583496
    10. '__(*' → logprob: -16.87910270690918

Token 162: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.007476363331079483
    2. ' self' → logprob: -5.007476329803467
    3. ')' → logprob: -8.257476806640625
    4. '
' → logprob: -8.382476806640625
    5. '   ' → logprob: -8.382476806640625
    6. ' ' → logprob: -11.007476806640625
    7. '  ' → logprob: -11.632476806640625
    8. '       ' → logprob: -12.507476806640625
    9. '    ' → logprob: -12.757476806640625
    10. ',' → logprob: -12.882476806640625

Token 163: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001441780710592866
    2. ' ,' → logprob: -6.751441955566406
    3. '__,' → logprob: -9.126441955566406
    4. 'self' → logprob: -9.626441955566406
    5. '_,' → logprob: -11.001441955566406
    6. '__(' → logprob: -11.376441955566406
    7. ')' → logprob: -11.376441955566406
    8. '(self' → logprob: -11.501441955566406
    9. '__' → logprob: -11.626441955566406
    10. ' ' → logprob: -12.376441955566406

Token 164: ' n' (ID: 297)
  Prédit: ' generator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' generator' → logprob: -0.751756489276886
    2. ' rng' → logprob: -1.8767564296722412
    3. ' seed' → logprob: -2.001756429672241
    4. ' l' → logprob: -3.126756429672241
    5. ' conditions' → logprob: -3.876756429672241
    6. ' frame' → logprob: -3.876756429672241
    7. ' pr' → logprob: -3.876756429672241
    8. ' frames' → logprob: -4.50175666809082
    9. ' condition' → logprob: -4.62675666809082
    10. ' target' → logprob: -4.62675666809082

Token 165: ':' (ID: 25)
  Prédit: '_frames'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_frames' → logprob: -0.5743285417556763
    2. '_re' → logprob: -1.3243285417556763
    3. ':' → logprob: -1.9493285417556763
    4. 'um' → logprob: -4.699328422546387
    5. '_' → logprob: -5.199328422546387
    6. 'frames' → logprob: -6.574328422546387
    7. 'umber' → logprob: -6.699328422546387
    8. 'umbers' → logprob: -6.949328422546387
    9. 're' → logprob: -7.574328422546387
    10. '_frame' → logprob: -7.699328422546387

Token 166: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.5792109370231628
    2. 'int' → logprob: -0.8292109370231628
    3. 't' → logprob: -6.2042107582092285
    4. ' ' → logprob: -8.204211235046387
    5. ')' → logprob: -8.579211235046387
    6. '=int' → logprob: -9.204211235046387
    7. '[int' → logprob: -9.204211235046387
    8. 'frames' → logprob: -9.204211235046387
    9. ':int' → logprob: -9.454211235046387
    10. '   ' → logprob: -9.454211235046387

Token 167: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20112286508083344
    2. '):' → logprob: -1.8261228799819946
    3. '):
' → logprob: -4.826122760772705
    4. ' ,' → logprob: -5.076122760772705
    5. ':' → logprob: -5.701122760772705
    6. ' ):' → logprob: -5.826122760772705
    7. ')' → logprob: -8.326123237609863
    8. ' ):
' → logprob: -9.201123237609863
    9. '   ' → logprob: -9.576123237609863
    10. '       ' → logprob: -9.701123237609863

Token 168: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -1.2545342445373535
    2. ' generator' → logprob: -1.7545342445373535
    3. ' conditions' → logprob: -2.2545342445373535
    4. ' seed' → logprob: -2.3795342445373535
    5. ' initial' → logprob: -3.2545342445373535
    6. ' a' → logprob: -3.2545342445373535
    7. ' rng' → logprob: -3.3795342445373535
    8. ' condition' → logprob: -3.5045342445373535
    9. ' generators' → logprob: -3.5045342445373535
    10. ' lc' → logprob: -4.1295342445373535

Token 169: 'cg' (ID: 54237)
  Prédit: 'cg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cg' → logprob: -0.8051306009292603
    2. 'ength' → logprob: -2.0551304817199707
    3. 'inear' → logprob: -2.0551304817199707
    4. 'en' → logprob: -2.1801304817199707
    5. 'e' → logprob: -2.6801304817199707
    6. ':' → logprob: -3.8051304817199707
    7. 'c' → logprob: -4.055130481719971
    8. 'ine' → logprob: -4.180130481719971
    9. '):
' → logprob: -5.055130481719971
    10. 'ist' → logprob: -5.180130481719971

Token 170: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005682834889739752
    2. '):' → logprob: -8.625568389892578
    3. '_generator' → logprob: -8.625568389892578
    4. '_:' → logprob: -9.875568389892578
    5. ' :' → logprob: -10.000568389892578
    6. ',' → logprob: -10.000568389892578
    7. 's' → logprob: -10.500568389892578
    8. '):
' → logprob: -11.375568389892578
    9. ')' → logprob: -11.750568389892578
    10. '_list' → logprob: -13.125568389892578

Token 171: ' Linear' (ID: 29092)
  Prédit: ' Linear'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Linear' → logprob: -0.003682140028104186
    2. 'Linear' → logprob: -5.7536821365356445
    3. ' ' → logprob: -7.6286821365356445
    4. ' linear' → logprob: -11.503682136535645
    5. ' )' → logprob: -13.003682136535645
    6. ')' → logprob: -13.628682136535645
    7. ' Line' → logprob: -14.003682136535645
    8. ' None' → logprob: -14.128682136535645
    9. ' Lin' → logprob: -14.253682136535645
    10. ' ):
' → logprob: -14.753682136535645

Token 172: 'Cong' (ID: 40085)
  Prédit: 'Cong'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Cong' → logprob: -4.894790981779806e-05
    2. 'Con' → logprob: -10.500048637390137
    3. ' Cong' → logprob: -11.125048637390137
    4. '_con' → logprob: -13.250048637390137
    5. 'C' → logprob: -13.875048637390137
    6. '
' → logprob: -14.250048637390137
    7. 'Congress' → logprob: -14.375048637390137
    8. ')' → logprob: -15.000048637390137
    9. 'con' → logprob: -15.000048637390137
    10. '_C' → logprob: -15.500048637390137

Token 173: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -0.04873940721154213
    2. 'u' → logprob: -3.048739433288574
    3. 'r' → logprob: -9.673739433288574
    4. 'ential' → logprob: -10.173739433288574
    5. 'uent' → logprob: -10.548739433288574
    6. 'ur' → logprob: -12.173739433288574
    7. 'uc' → logprob: -12.298739433288574
    8. ' ru' → logprob: -12.798739433288574
    9. 'Ru' → logprob: -13.048739433288574
    10. 'ucl' → logprob: -13.673739433288574

Token 174: 'ential' (ID: 2972)
  Prédit: 'ential'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ential' → logprob: -0.0007018264150246978
    2. 'ental' → logprob: -8.250701904296875
    3. 't' → logprob: -9.000701904296875
    4. 'al' → logprob: -9.250701904296875
    5. 'itial' → logprob: -9.500701904296875
    6. 'tion' → logprob: -11.125701904296875
    7. 'ent' → logprob: -11.125701904296875
    8. 'cial' → logprob: -11.375701904296875
    9. 'hal' → logprob: -11.500701904296875
    10. 'ital' → logprob: -11.625701904296875

Token 175: 'Generator' (ID: 14802)
  Prédit: 'Generator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Generator' → logprob: -1.3782830137643032e-05
    2. ' Generator' → logprob: -11.50001335144043
    3. 'enerator' → logprob: -13.50001335144043
    4. '_generator' → logprob: -14.12501335144043
    5. '   ' → logprob: -14.50001335144043
    6. 'Gen' → logprob: -15.12501335144043
    7. 'generator' → logprob: -16.12501335144043
    8. '  ' → logprob: -16.37501335144043
    9. 'Gener' → logprob: -16.50001335144043
    10. '       ' → logprob: -16.75001335144043

Token 176: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.22793275117874146
    2. '):
' → logprob: -1.6029326915740967
    3. ',' → logprob: -6.227932929992676
    4. ')' → logprob: -7.977932929992676
    5. ' ):' → logprob: -8.852932929992676
    6. '):
' → logprob: -10.977932929992676
    7. ' ):
' → logprob: -11.102932929992676
    8. '   ' → logprob: -11.977932929992676
    9. ':' → logprob: -12.227932929992676
    10. '):

' → logprob: -12.602932929992676

Token 177: ' conditions' (ID: 6409)
  Prédit: ' conditions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' conditions' → logprob: -0.6285445094108582
    2. ' condition' → logprob: -1.878544569015503
    3. ' frame' → logprob: -2.753544569015503
    4. 'conditions' → logprob: -2.878544569015503
    5. 'condition' → logprob: -3.003544569015503
    6. 're' → logprob: -3.003544569015503
    7. ' target' → logprob: -3.253544569015503
    8. ' reel' → logprob: -3.628544569015503
    9. 'frame' → logprob: -4.503544330596924
    10. 'target' → logprob: -5.503544330596924

Token 178: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008182968012988567
    2. '):' → logprob: -5.008183002471924
    3. '):
' → logprob: -7.258183002471924
    4. ' :' → logprob: -7.508183002471924
    5. ' ):' → logprob: -9.383182525634766
    6. ',' → logprob: -9.883182525634766
    7. ')' → logprob: -10.008182525634766
    8. ':list' → logprob: -11.258182525634766
    9. ' ):
' → logprob: -12.258182525634766
    10. '=None' → logprob: -12.758182525634766

Token 179: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.0732474997639656
    2. 'list' → logprob: -3.1982474327087402
    3. 'List' → logprob: -4.07324743270874
    4. ' List' → logprob: -4.57324743270874
    5. ' [' → logprob: -7.44824743270874
    6. '[list' → logprob: -7.57324743270874
    7. '[List' → logprob: -7.94824743270874
    8. '[' → logprob: -7.94824743270874
    9. ')' → logprob: -8.698247909545898
    10. ' ' → logprob: -9.198247909545898

Token 180: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7055054306983948
    2. '):
' → logprob: -1.20550537109375
    3. '):' → logprob: -1.58050537109375
    4. '[int' → logprob: -8.45550537109375
    5. '):

' → logprob: -9.20550537109375
    6. ':' → logprob: -9.33050537109375
    7. ' ):
' → logprob: -9.45550537109375
    8. ' ):' → logprob: -9.95550537109375
    9. ' [' → logprob: -10.08050537109375
    10. '):
' → logprob: -10.45550537109375

Token 181: 'Re' (ID: 720)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10088194906711578
    2. 'Re' → logprob: -2.350882053375244
    3. '   ' → logprob: -8.725881576538086
    4. '	' → logprob: -9.100881576538086
    5. ' Re' → logprob: -9.100881576538086
    6. '[
' → logprob: -9.350881576538086
    7. ',' → logprob: -10.225881576538086
    8. '(Re' → logprob: -10.350881576538086
    9. '[int' → logprob: -10.850881576538086
    10. ']' → logprob: -11.100881576538086

Token 182: 'el' (ID: 296)
  Prédit: 'el'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'el' → logprob: -0.00010020548506872728
    2. 'e' → logprob: -9.250100135803223
    3. 'ел' → logprob: -13.375100135803223
    4. 'eel' → logprob: -14.250100135803223
    5. '```' → logprob: -15.000100135803223
    6. '
' → logprob: -15.437600135803223
    7. 'els' → logprob: -15.937600135803223
    8. 'е' → logprob: -16.37510108947754
    9. '(el' → logprob: -16.37510108947754
    10. 'elif' → logprob: -16.75010108947754

Token 183: 'Condition' (ID: 14232)
  Prédit: 'Condition'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Condition' → logprob: -4.723352049040841e-06
    2. ']' → logprob: -13.500004768371582
    3. 'Con' → logprob: -14.000004768371582
    4. '_condition' → logprob: -14.000004768371582
    5. ' Condition' → logprob: -14.125004768371582
    6. 'condition' → logprob: -14.875004768371582
    7. ' condition' → logprob: -15.750004768371582
    8. 'Conditions' → logprob: -16.500003814697266
    9. '   ' → logprob: -16.750003814697266
    10. '.Condition' → logprob: -16.750003814697266

Token 184: ']):
' (ID: 51989)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.2495713084936142
    2. '])' → logprob: -2.3745713233947754
    3. ']):
' → logprob: -2.3745713233947754
    4. ']' → logprob: -3.3745713233947754
    5. '],' → logprob: -7.999571323394775
    6. ' ]' → logprob: -9.249570846557617
    7. '[' → logprob: -10.624570846557617
    8. ')' → logprob: -11.374570846557617
    9. ']
' → logprob: -11.499570846557617
    10. ' ])' → logprob: -11.749570846557617

Token 185: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02153770625591278
    2. ':' → logprob: -4.021537780761719
    3. '
' → logprob: -6.646537780761719
    4. ':
' → logprob: -7.021537780761719
    5. '   ' → logprob: -7.271537780761719
    6. ',' → logprob: -8.771537780761719
    7. '):
' → logprob: -9.146537780761719
    8. 'self' → logprob: -9.396537780761719
    9. ' self' → logprob: -10.021537780761719
    10. '):' → logprob: -10.271537780761719

Token 186: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.7177731394767761
    2. 'self' (adapté à ' self') → logprob: -0.7177731394767761
    3. '       ' → logprob: -3.717773199081421
    4. '   ' → logprob: -10.9677734375
    5. ' ' → logprob: -11.8427734375
    6. '	self' → logprob: -11.8427734375
    7. ' ' → logprob: -13.2177734375
    8. ' super' → logprob: -14.2177734375
    9. 'super' → logprob: -14.3427734375
    10. '(self' → logprob: -15.2177734375

Token 187: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.04275822639465332
    2. '.' → logprob: -3.2927582263946533
    3. ' .' → logprob: -5.417757987976074
    4. 'n' → logprob: -8.792757987976074
    5. ' n' → logprob: -10.042757987976074
    6. '.l' → logprob: -11.292757987976074
    7. ' ' → logprob: -12.042757987976074
    8. '.current' → logprob: -12.417757987976074
    9. '.m' → logprob: -12.542757987976074
    10. '.num' → logprob: -12.667757987976074

Token 188: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04898325726389885
    2. '=' → logprob: -3.048983335494995
    3. ' ' → logprob: -7.923983097076416
    4. ' =
' → logprob: -11.423983573913574
    5. ',' → logprob: -12.298983573913574
    6. ')' → logprob: -12.298983573913574
    7. '<|end|>' → logprob: -12.923983573913574
    8. '=int' → logprob: -13.173983573913574
    9. '  ' → logprob: -13.298983573913574
    10. '=n' → logprob: -13.673983573913574

Token 189: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.018150413408875465
    2. 'n' → logprob: -4.018150329589844
    3. '	n' → logprob: -14.768150329589844
    4. '
' → logprob: -16.018150329589844
    5. '_n' → logprob: -18.268150329589844
    6. ' 
' → logprob: -18.893150329589844
    7. ' ' → logprob: -19.018150329589844
    8. '$n' → logprob: -19.393150329589844
    9. ')n' → logprob: -19.393150329589844
    10. ' ' → logprob: -19.768150329589844

Token 190: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.004165656864643097
    2. '       ' → logprob: -5.8791656494140625
    3. '<|end|>' → logprob: -6.8791656494140625
    4. ' 
' → logprob: -9.004165649414062
    5. '        
' → logprob: -9.129165649414062
    6. '  
' → logprob: -10.254165649414062
    7. '
' → logprob: -10.629165649414062
    8. '        ' → logprob: -11.504165649414062
    9. 'self' → logprob: -11.754165649414062
    10. '<|end|>' → logprob: -11.879165649414062

Token 191: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.25404712557792664
    2. '       ' → logprob: -1.504047155380249
    3. 'self' → logprob: -6.87904691696167
    4. ' 
' → logprob: -8.254047393798828
    5. '<|end|>' → logprob: -8.254047393798828
    6. '        
' → logprob: -8.379047393798828
    7. ' self' → logprob: -8.629047393798828
    8. '  
' → logprob: -10.379047393798828
    9. '    
' → logprob: -10.504047393798828
    10. '
' → logprob: -10.629047393798828

Token 192: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.07498941570520401
    2. 'lc' → logprob: -3.0749893188476562
    3. ' self' → logprob: -3.6999893188476562
    4. 'l' → logprob: -7.699989318847656
    5. ' lc' → logprob: -7.949989318847656
    6. ' l' → logprob: -7.949989318847656
    7. 'lg' → logprob: -9.699989318847656
    8. '       ' → logprob: -9.824989318847656
    9. '   ' → logprob: -11.074989318847656
    10. 'len' → logprob: -11.449989318847656

Token 193: '.l' (ID: 1000)
  Prédit: '.l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.l' → logprob: -0.738469660282135
    2. '.' → logprob: -0.988469660282135
    3. ' .' → logprob: -2.1134696006774902
    4. '.conditions' → logprob: -4.61346960067749
    5. '.n' → logprob: -5.61346960067749
    6. '.re' → logprob: -5.61346960067749
    7. ' =' → logprob: -5.86346960067749
    8. ' ' → logprob: -6.36346960067749
    9. '.an' → logprob: -7.36346960067749
    10. '       ' → logprob: -7.86346960067749

Token 194: 'cg' (ID: 54237)
  Prédit: 'cg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cg' → logprob: -0.0009483799804002047
    2. 'c' → logprob: -7.000948429107666
    3. '   ' → logprob: -11.000947952270508
    4. ' cg' → logprob: -12.000947952270508
    5. 'gc' → logprob: -12.750947952270508
    6. ' c' → logprob: -13.500947952270508
    7. '
' → logprob: -13.875947952270508
    8. '_c' → logprob: -13.938447952270508
    9. 'cgi' → logprob: -14.000947952270508
    10. 'с' → logprob: -14.625947952270508

Token 195: ' =' (ID: 314)
  Prédit: '.next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.next' → logprob: -0.015465479344129562
    2. '.' → logprob: -4.265465259552002
    3. ' =' → logprob: -7.765465259552002
    4. '.current' → logprob: -8.14046573638916
    5. '.generate' → logprob: -8.14046573638916
    6. ' .' → logprob: -8.89046573638916
    7. '=' → logprob: -10.14046573638916
    8. 'next' → logprob: -11.01546573638916
    9. '.get' → logprob: -11.01546573638916
    10. ',' → logprob: -11.14046573638916

Token 196: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.1906907558441162
    2. ' lc' → logprob: -2.065690755844116
    3. 'lc' → logprob: -3.065690755844116
    4. 'l' → logprob: -8.690690994262695
    5. '	l' → logprob: -10.065690994262695
    6. 'lg' → logprob: -11.065690994262695
    7. '
' → logprob: -11.440690994262695
    8. ' lg' → logprob: -11.565690994262695
    9. 'LC' → logprob: -12.315690994262695
    10. ' ' → logprob: -13.440690994262695

Token 197: 'cg' (ID: 54237)
  Prédit: 'cg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cg' → logprob: -0.3546733856201172
    2. 'c' → logprob: -1.2296733856201172
    3. 'g' → logprob: -5.229673385620117
    4. 'gc' → logprob: -7.729673385620117
    5. ' cg' → logprob: -8.854673385620117
    6. '
' → logprob: -10.292173385620117
    7. 'с' → logprob: -10.542173385620117
    8. 'CG' → logprob: -10.667173385620117
    9. '   ' → logprob: -10.729673385620117
    10. '

' → logprob: -10.792173385620117

Token 198: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3876751661300659
    2. '
' → logprob: -1.137675166130066
    3. '<|end|>' → logprob: -7.6376752853393555
    4. '  
' → logprob: -9.387675285339355
    5. 'self' → logprob: -9.637675285339355
    6. '        
' → logprob: -9.637675285339355
    7. ' 
' → logprob: -10.387675285339355
    8. '
' → logprob: -10.637675285339355
    9. '    
' → logprob: -11.387675285339355
    10. '   ' → logprob: -11.512675285339355

Token 199: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002680112374946475
    2. 'self' → logprob: -8.50026798248291
    3. ' self' → logprob: -9.75026798248291
    4. '   ' → logprob: -12.25026798248291
    5. '	self' → logprob: -14.75026798248291
    6. '
' → logprob: -15.00026798248291
    7. '	' → logprob: -15.62526798248291
    8. '<|end|>' → logprob: -15.87526798248291
    9. '      ' → logprob: -16.000268936157227
    10. '           ' → logprob: -16.375268936157227

Token 200: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00030900631099939346
    2. ' self' → logprob: -8.250308990478516
    3. 'conditions' → logprob: -10.500308990478516
    4. '       ' → logprob: -10.875308990478516
    5. '
' → logprob: -14.375308990478516
    6. '   ' → logprob: -15.625308990478516
    7. '        
' → logprob: -16.000308990478516
    8. ' conditions' → logprob: -16.125308990478516
    9. '	self' → logprob: -16.375308990478516
    10. 'condition' → logprob: -17.500308990478516

Token 201: '.conditions' (ID: 195697)
  Prédit: '.conditions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.conditions' → logprob: -0.0019609862938523293
    2. '.' → logprob: -6.251960754394531
    3. '.condition' → logprob: -10.876960754394531
    4. 'conditions' → logprob: -12.126960754394531
    5. ' .' → logprob: -12.126960754394531
    6. '.con' → logprob: -13.751960754394531
    7. '.re' → logprob: -14.626960754394531
    8. '.current' → logprob: -15.126960754394531
    9. '.positions' → logprob: -15.376960754394531
    10. ' conditions' → logprob: -16.37696075439453

Token 202: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22544316947460175
    2. '=' → logprob: -1.6004431247711182
    3. '[' → logprob: -10.725442886352539
    4. ' ' → logprob: -13.350442886352539
    5. ' =
' → logprob: -13.475442886352539
    6. '.' → logprob: -13.725442886352539
    7. '.append' → logprob: -14.100442886352539
    8. '[:]' → logprob: -14.100442886352539
    9. ',' → logprob: -14.725442886352539
    10. ')' → logprob: -14.725442886352539

Token 203: ' conditions' (ID: 6409)
  Prédit: ' conditions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' conditions' → logprob: -0.08899028599262238
    2. 'conditions' → logprob: -2.4639902114868164
    3. ' [' → logprob: -11.088990211486816
    4. '[]' → logprob: -11.713990211486816
    5. '[' → logprob: -12.088990211486816
    6. ' []' → logprob: -12.088990211486816
    7. ' ' → logprob: -12.588990211486816
    8. '.conditions' → logprob: -12.713990211486816
    9. ' list' → logprob: -12.963990211486816
    10. ' ' → logprob: -13.338990211486816

Token 204: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 205: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6384650468826294
    2. '       ' → logprob: -0.8884650468826294
    3. '
' → logprob: -3.01346492767334
    4. 'def' → logprob: -4.63846492767334
    5. '    
' → logprob: -7.63846492767334
    6. ' def' → logprob: -7.63846492767334
    7. '

' → logprob: -8.13846492767334
    8. '<|end|>' → logprob: -8.26346492767334
    9. ' ' → logprob: -9.76346492767334
    10. 'self' → logprob: -10.01346492767334

Token 206: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00011093381908722222
    2. ' def' → logprob: -9.125110626220703
    3. '   ' → logprob: -13.250110626220703
    4. 'de' → logprob: -15.750110626220703
    5. '
' → logprob: -17.000110626220703
    6. 'from' → logprob: -18.250110626220703
    7. 'd' → logprob: -18.625110626220703
    8. 'async' → logprob: -19.125110626220703
    9. 'class' → logprob: -19.250110626220703
    10. ' ' → logprob: -19.250110626220703

Token 207: ' find' (ID: 1646)
  Prédit: ' analyze'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' analyze' → logprob: -0.4234035611152649
    2. ' def' → logprob: -1.6734035015106201
    3. ' find' → logprob: -1.9234035015106201
    4. ' run' → logprob: -5.548403739929199
    5. 'an' → logprob: -6.048403739929199
    6. ' check' → logprob: -6.548403739929199
    7. 'def' → logprob: -7.173403739929199
    8. ' simulate' → logprob: -7.673403739929199
    9. ' count' → logprob: -7.798403739929199
    10. ' matches' → logprob: -8.0484037399292

Token 208: '_min' (ID: 15950)
  Prédit: '_frame'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_frame' → logprob: -1.285202980041504
    2. '_start' → logprob: -1.910202980041504
    3. '_frames' → logprob: -2.410202980041504
    4. '_matching' → logprob: -2.410202980041504
    5. '_' → logprob: -2.660202980041504
    6. '_first' → logprob: -3.160202980041504
    7. '_match' → logprob: -3.285202980041504
    8. '_max' → logprob: -3.660202980041504
    9. '_target' → logprob: -3.660202980041504
    10. '_best' → logprob: -3.785202980041504

Token 209: '_frame' (ID: 19952)
  Prédit: '_frame'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_frame' → logprob: -0.2707189619541168
    2. '_frames' → logprob: -1.8957189321517944
    3. '_' → logprob: -2.770719051361084
    4. 'imum' → logprob: -5.395719051361084
    5. '_index' → logprob: -5.520719051361084
    6. '(self' → logprob: -6.270719051361084
    7. 'imal' → logprob: -6.395719051361084
    8. '_length' → logprob: -6.645719051361084
    9. '_max' → logprob: -6.895719051361084
    10. '_value' → logprob: -7.145719051361084

Token 210: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.014337434433400631
    2. '(' → logprob: -4.264337539672852
    3. '_(' → logprob: -9.764337539672852
    4. ' (' → logprob: -10.389337539672852
    5. 's' → logprob: -10.889337539672852
    6. '_' → logprob: -11.014337539672852
    7. 'self' → logprob: -11.264337539672852
    8. '(
' → logprob: -11.389337539672852
    9. '_frame' → logprob: -12.014337539672852
    10. '   ' → logprob: -12.389337539672852

Token 211: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01856122352182865
    2. ' ,' → logprob: -4.268561363220215
    3. 'self' → logprob: -5.768561363220215
    4. '       ' → logprob: -7.518561363220215
    5. '   ' → logprob: -8.268561363220215
    6. ' self' → logprob: -8.268561363220215
    7. '(self' → logprob: -9.268561363220215
    8. '):
' → logprob: -10.643561363220215
    9. ',self' → logprob: -10.643561363220215
    10. ')' → logprob: -10.893561363220215

Token 212: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0009424308082088828
    2. '(' → logprob: -7.250942230224609
    3. 'self' → logprob: -9.62594223022461
    4. '       ' → logprob: -10.00094223022461
    5. ' (' → logprob: -10.12594223022461
    6. ':' → logprob: -10.25094223022461
    7. '   ' → logprob: -10.87594223022461
    8. ' self' → logprob: -12.12594223022461
    9. ':self' → logprob: -12.12594223022461
    10. '(s' → logprob: -12.50094223022461

Token 213: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.020578909665346146
    2. ' int' → logprob: -3.8955788612365723
    3. 'None' → logprob: -10.77057933807373
    4. '   ' → logprob: -12.52057933807373
    5. ' None' → logprob: -12.52057933807373
    6. 'Optional' → logprob: -12.52057933807373
    7. ' Optional' → logprob: -13.14557933807373
    8. '(int' → logprob: -13.77057933807373
    9. ' ' → logprob: -14.27057933807373
    10. '	int' → logprob: -14.77057933807373

Token 214: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31018808484077454
    2. ':' → logprob: -1.5601880550384521
    3. ':
' → logprob: -3.435188055038452
    4. '(self' → logprob: -3.810188055038452
    5. '   ' → logprob: -6.810188293457031
    6. '(' → logprob: -7.560188293457031
    7. 'self' → logprob: -8.310188293457031
    8. '(
' → logprob: -9.185188293457031
    9. '):
' → logprob: -9.685188293457031
    10. ' self' → logprob: -10.185188293457031

Token 215: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002993544621858746
    2. ' for' → logprob: -8.375299453735352
    3. '        
' → logprob: -10.500299453735352
    4. '
' → logprob: -11.000299453735352
    5. '    ' → logprob: -11.875299453735352
    6. '   ' → logprob: -12.500299453735352
    7. ' 
' → logprob: -12.750299453735352
    8. '      ' → logprob: -13.000299453735352
    9. 'for' → logprob: -13.000299453735352
    10. '    
' → logprob: -13.500299453735352

Token 216: ' '''
' (ID: 26725)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5060276985168457
    2. 'for' → logprob: -1.2560276985168457
    3. '       ' → logprob: -2.6310276985168457
    4. 'current' → logprob: -4.131027698516846
    5. ' current' → logprob: -4.256027698516846
    6. 'frame' → logprob: -5.131027698516846
    7. ' frame' → logprob: -6.381027698516846
    8. 'frames' → logprob: -7.256027698516846
    9. 'self' → logprob: -8.131027221679688
    10. ' frames' → logprob: -8.256027221679688

Token 217: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0048610917292535305
    2. ' for' → logprob: -5.379860877990723
    3. 'for' → logprob: -8.754860877990723
    4. ''''' → logprob: -10.504860877990723
    5. '        ' → logprob: -11.254860877990723
    6. ' max' → logprob: -12.254860877990723
    7. '#' → logprob: -12.254860877990723
    8. ' current' → logprob: -12.379860877990723
    9. '   ' → logprob: -12.629860877990723
    10. ' '''' → logprob: -13.004860877990723

Token 218: ' Returns' (ID: 9609)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6301431655883789
    2. '       ' → logprob: -1.005143165588379
    3. ' for' → logprob: -3.380143165588379
    4. 'Checks' → logprob: -3.880143165588379
    5. '#' → logprob: -4.755143165588379
    6. '"""
' → logprob: -5.005143165588379
    7. '"""' → logprob: -5.130143165588379
    8. 'Search' → logprob: -5.380143165588379
    9. 'Iter' → logprob: -5.630143165588379
    10. ' Searches' → logprob: -6.380143165588379

Token 219: ' the' (ID: 290)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.006700450554490089
    2. '-' → logprob: -5.25670051574707
    3. ' the' → logprob: -6.88170051574707
    4. '0' → logprob: -8.75670051574707
    5. ' ' → logprob: -9.38170051574707
    6. ' self' → logprob: -9.63170051574707
    7. '       ' → logprob: -10.13170051574707
    8. ' None' → logprob: -10.63170051574707
    9. 'the' → logprob: -11.38170051574707
    10. ':' → logprob: -11.38170051574707

Token 220: ' minimal' (ID: 19957)
  Prédit: 'minimum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'minimum' → logprob: -0.3979479670524597
    2. ' minimum' → logprob: -1.8979480266571045
    3. 'min' → logprob: -2.7729480266571045
    4. 'index' → logprob: -3.5229480266571045
    5. ' first' → logprob: -3.6479480266571045
    6. ' minimal' → logprob: -4.022947788238525
    7. 'first' → logprob: -4.272947788238525
    8. ' index' → logprob: -4.397947788238525
    9. 'minimal' → logprob: -4.522947788238525
    10. ' smallest' → logprob: -6.522947788238525

Token 221: ' frame' (ID: 7298)
  Prédit: ' frame'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' frame' → logprob: -0.007032666355371475
    2. 'frame' → logprob: -5.507032871246338
    3. ' index' → logprob: -6.257032871246338
    4. ' number' → logprob: -7.507032871246338
    5. 'index' → logprob: -8.00703239440918
    6. '_frame' → logprob: -10.25703239440918
    7. '       ' → logprob: -10.63203239440918
    8. 'Frame' → logprob: -10.88203239440918
    9. ' ' → logprob: -11.00703239440918
    10. '```' → logprob: -11.13203239440918

Token 222: ' count' (ID: 3605)
  Prédit: ' number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.36217138171195984
    2. ' where' → logprob: -1.7371714115142822
    3. ' index' → logprob: -2.9871714115142822
    4. '       ' → logprob: -3.1121714115142822
    5. '   ' → logprob: -4.487171173095703
    6. ' that' → logprob: -4.612171173095703
    7. ' for' → logprob: -5.612171173095703
    8. '_number' → logprob: -6.362171173095703
    9. ' at' → logprob: -6.487171173095703
    10. '    ' → logprob: -6.612171173095703

Token 223: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6910534501075745
    2. ' where' → logprob: -1.3160533905029297
    3. ' to' → logprob: -2.3160533905029297
    4. ' for' → logprob: -3.1910533905029297
    5. ' that' → logprob: -3.4410533905029297
    6. ' after' → logprob: -4.69105339050293
    7. ' such' → logprob: -4.69105339050293
    8. ',' → logprob: -4.94105339050293
    9. ' or' → logprob: -4.94105339050293
    10. ' in' → logprob: -5.19105339050293

Token 224: '1' (ID: 16)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.44021010398864746
    2. 'int' → logprob: -1.5652101039886475
    3. ' int' → logprob: -3.1902101039886475
    4. '>=' → logprob: -4.315210342407227
    5. 'starting' → logprob: -4.440210342407227
    6. ' that' → logprob: -5.065210342407227
    7. 'index' → logprob: -5.190210342407227
    8. '```' → logprob: -5.190210342407227
    9. ' starting' → logprob: -5.315210342407227
    10. 'from' → logprob: -5.315210342407227

Token 225: '-based' (ID: 8235)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5619862079620361
    2. '-based' → logprob: -0.9369862079620361
    3. 'based' → logprob: -4.186985969543457
    4. '-' → logprob: -5.061985969543457
    5. ' if' → logprob: -5.436985969543457
    6. ' to' → logprob: -5.561985969543457
    7. ' based' → logprob: -6.061985969543457
    8. ')-' → logprob: -6.936985969543457
    9. '-index' → logprob: -7.561985969543457
    10. '+' → logprob: -7.561985969543457

Token 226: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002905920147895813
    2. ' )' → logprob: -6.62790584564209
    3. ' at' → logprob: -7.25290584564209
    4. ' where' → logprob: -8.00290584564209
    5. ' index' → logprob: -8.12790584564209
    6. 'index' → logprob: -9.37790584564209
    7. ' or' → logprob: -9.62790584564209
    8. ',' → logprob: -10.50290584564209
    9. ')
' → logprob: -10.75290584564209
    10. ' to' → logprob: -12.00290584564209

Token 227: ' at' (ID: 540)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5928301811218262
    2. '       ' → logprob: -1.7178301811218262
    3. ' where' → logprob: -1.9678301811218262
    4. ' to' → logprob: -2.592830181121826
    5. ' that' → logprob: -3.467830181121826
    6. ' or' → logprob: -4.342830181121826
    7. ',' → logprob: -5.967830181121826
    8. ' if' → logprob: -6.092830181121826
    9. ' in' → logprob: -6.592830181121826
    10. '   ' → logprob: -7.217830181121826

Token 228: ' which' (ID: 1118)
  Prédit: 'which'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'which' → logprob: -0.22550053894519806
    2. ' which' → logprob: -1.6005005836486816
    3. '       ' → logprob: -10.600500106811523
    4. '   ' → logprob: -11.225500106811523
    5. '```' → logprob: -11.225500106811523
    6. ' ' → logprob: -11.725500106811523
    7. '<|end|>' → logprob: -12.475500106811523
    8. 'wh' → logprob: -12.475500106811523
    9. 'Which' → logprob: -12.975500106811523
    10. '#' → logprob: -13.100500106811523

Token 229: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.00885647814720869
    2. 'all' → logprob: -4.883856296539307
    3. ' the' → logprob: -6.758856296539307
    4. 'the' → logprob: -10.508856773376465
    5. ' for' → logprob: -11.008856773376465
    6. '       ' → logprob: -11.258856773376465
    7. ' a' → logprob: -11.883856773376465
    8. ' conditions' → logprob: -12.258856773376465
    9. ' any' → logprob: -12.508856773376465
    10. ' al' → logprob: -12.508856773376465

Token 230: ' reels' (ID: 67012)
  Prédit: ' conditions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' conditions' → logprob: -0.3288404047489166
    2. 'conditions' → logprob: -1.3288403749465942
    3. 're' → logprob: -5.328840255737305
    4. ' the' → logprob: -5.828840255737305
    5. '       ' → logprob: -5.953840255737305
    6. ' reels' → logprob: -6.328840255737305
    7. 'self' → logprob: -7.328840255737305
    8. ' self' → logprob: -7.453840255737305
    9. ' reel' → logprob: -7.953840255737305
    10. 'the' → logprob: -8.203840255737305

Token 231: ' can' (ID: 665)
  Prédit: ' match'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' match' → logprob: -0.19525915384292603
    2. 'match' → logprob: -2.8202590942382812
    3. ' satisfy' → logprob: -3.3202590942382812
    4. ' have' → logprob: -3.9452590942382812
    5. ' meet' → logprob: -3.9452590942382812
    6. ' are' → logprob: -4.445259094238281
    7. '       ' → logprob: -4.695259094238281
    8. ' conditions' → logprob: -5.195259094238281
    9. 'conditions' → logprob: -5.945259094238281
    10. ' simultaneously' → logprob: -6.195259094238281

Token 232: ' be' (ID: 413)
  Prédit: ' match'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' match' → logprob: -0.34159114956855774
    2. ' be' → logprob: -1.8415911197662354
    3. ' simultaneously' → logprob: -2.8415911197662354
    4. 'match' → logprob: -3.4665911197662354
    5. ' satisfy' → logprob: -3.8415911197662354
    6. ' align' → logprob: -4.3415913581848145
    7. 'matches' → logprob: -6.5915913581848145
    8. ' have' → logprob: -6.5915913581848145
    9. ' show' → logprob: -7.5915913581848145
    10. '       ' → logprob: -7.7165913581848145

Token 233: ' stopped' (ID: 18145)
  Prédit: ' aligned'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' aligned' → logprob: -1.1074899435043335
    2. ' simultaneously' → logprob: -1.2324899435043335
    3. ' matched' → logprob: -1.3574899435043335
    4. 'matched' → logprob: -3.857490062713623
    5. ' observed' → logprob: -4.232490062713623
    6. ' in' → logprob: -4.232490062713623
    7. 'aligned' → logprob: -4.232490062713623
    8. ' stopped' → logprob: -4.482490062713623
    9. ' found' → logprob: -4.982490062713623
    10. ' seen' → logprob: -5.482490062713623

Token 234: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2883946895599365
    2. ' to' → logprob: -2.2883946895599365
    3. ' such' → logprob: -2.7883946895599365
    4. ' so' → logprob: -3.2883946895599365
    5. ' with' → logprob: -3.9133946895599365
    6. ' at' → logprob: -4.538394927978516
    7. ' that' → logprob: -5.038394927978516
    8. ',' → logprob: -5.163394927978516
    9. ' simultaneously' → logprob: -5.913394927978516
    10. ' for' → logprob: -6.663394927978516

Token 235: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29016169905662537
    2. ' to' → logprob: -1.9151617288589478
    3. ' such' → logprob: -3.415161609649658
    4. ' so' → logprob: -4.165161609649658
    5. ' simultaneously' → logprob: -4.165161609649658
    6. ',' → logprob: -4.540161609649658
    7. ' at' → logprob: -4.790161609649658
    8. ' with' → logprob: -4.790161609649658
    9. ' by' → logprob: -5.790161609649658
    10. ' that' → logprob: -6.040161609649658

Token 236: ' with' (ID: 483)
  Prédit: ' such'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' such' → logprob: -0.2118520885705948
    2. ' so' → logprob: -2.4618520736694336
    3. ' simultaneously' → logprob: -2.9618520736694336
    4. ' to' → logprob: -3.3368520736694336
    5. ' with' → logprob: -4.836852073669434
    6. ' at' → logprob: -5.711852073669434
    7. '       ' → logprob: -5.711852073669434
    8. ',' → logprob: -7.586852073669434
    9. 'such' → logprob: -7.586852073669434
    10. ' by' → logprob: -7.711852073669434

Token 237: ' the' (ID: 290)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.6148237586021423
    2. ' self' → logprob: -1.614823818206787
    3. ' the' → logprob: -1.864823818206787
    4. ' their' → logprob: -3.864823818206787
    5. 'self' → logprob: -3.864823818206787
    6. ' each' → logprob: -3.989823818206787
    7. ' matching' → logprob: -4.364823818206787
    8. 'all' → logprob: -4.739823818206787
    9. 'out' → logprob: -4.989823818206787
    10. ' matches' → logprob: -5.364823818206787

Token 238: ' respective' (ID: 24958)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.6920521259307861
    2. ' given' → logprob: -1.8170521259307861
    3. ' same' → logprob: -2.692052125930786
    4. ' next' → logprob: -2.692052125930786
    5. ' conditions' → logprob: -2.817052125930786
    6. 'current' → logprob: -3.567052125930786
    7. ' value' → logprob: -3.942052125930786
    8. 're' → logprob: -4.442051887512207
    9. 'next' → logprob: -4.567051887512207
    10. ' reels' → logprob: -4.817051887512207

Token 239: ' target' (ID: 3783)
  Prédit: ' conditions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' conditions' → logprob: -0.863560676574707
    2. ' values' → logprob: -1.488560676574707
    3. ' generated' → logprob: -2.988560676574707
    4. 'conditions' → logprob: -3.238560676574707
    5. ' reels' → logprob: -3.238560676574707
    6. ' condition' → logprob: -3.363560676574707
    7. 'values' → logprob: -3.613560676574707
    8. ' value' → logprob: -3.738560676574707
    9. ' generator' → logprob: -3.988560676574707
    10. 'condition' → logprob: -3.988560676574707

Token 240: ' values' (ID: 4824)
  Prédit: ' values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' values' → logprob: -0.5972660183906555
    2. '_value' → logprob: -1.3472659587860107
    3. '_values' → logprob: -2.2222659587860107
    4. '_' → logprob: -2.9722659587860107
    5. ' value' → logprob: -3.7222659587860107
    6. 'values' → logprob: -5.84726619720459
    7. ' _' → logprob: -6.97226619720459
    8. 'value' → logprob: -7.09726619720459
    9. 's' → logprob: -7.22226619720459
    10. '_re' → logprob: -8.47226619720459

Token 241: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41038164496421814
    2. '.' → logprob: -1.7853816747665405
    3. ',' → logprob: -2.660381555557251
    4. ' by' → logprob: -3.785381555557251
    5. '
' → logprob: -3.910381555557251
    6. ' for' → logprob: -4.16038179397583
    7. '.
' → logprob: -4.41038179397583
    8. ' at' → logprob: -4.91038179397583
    9. ' that' → logprob: -5.53538179397583
    10. ':' → logprob: -6.03538179397583

Token 242: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.5899456143379211
    2. ' each' → logprob: -1.5899455547332764
    3. 'the' → logprob: -2.4649455547332764
    4. ' all' → logprob: -2.7149455547332764
    5. ' their' → logprob: -2.9649455547332764
    6. 'each' → logprob: -3.8399455547332764
    7. ' reels' → logprob: -4.4649457931518555
    8. 'all' → logprob: -5.9649457931518555
    9. 'their' → logprob: -6.3399457931518555
    10. 're' → logprob: -7.7149457931518555

Token 243: ' RNG' (ID: 165661)
  Prédit: ' reels'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' reels' → logprob: -0.2100411355495453
    2. 're' → logprob: -2.210041046142578
    3. ' screen' → logprob: -3.460041046142578
    4. 'screen' → logprob: -3.960041046142578
    5. ' display' → logprob: -4.835041046142578
    6. 'display' → logprob: -5.210041046142578
    7. 'n' → logprob: -5.960041046142578
    8. ' first' → logprob: -6.585041046142578
    9. ' reel' → logprob: -6.585041046142578
    10. 'frame' → logprob: -6.585041046142578

Token 244: ' sequence' (ID: 16281)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5932828187942505
    2. ':' → logprob: -1.9682828187942505
    3. '.' → logprob: -2.468282699584961
    4. ',' → logprob: -2.718282699584961
    5. ' for' → logprob: -3.343282699584961
    6. ' at' → logprob: -3.468282699584961
    7. '.
' → logprob: -3.968282699584961
    8. '   ' → logprob: -4.218282699584961
    9. ' generated' → logprob: -4.968282699584961
    10. ' after' → logprob: -5.093282699584961

Token 245: '.' (ID: 13)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41843682527542114
    2. '.' → logprob: -1.2934367656707764
    3. ',' → logprob: -4.0434370040893555
    4. '.
' → logprob: -4.5434370040893555
    5. '
' → logprob: -4.7934370040893555
    6. ':' → logprob: -4.7934370040893555
    7. '   ' → logprob: -4.9184370040893555
    8. ' for' → logprob: -5.1684370040893555
    9. '        
' → logprob: -6.5434370040893555
    10. ' or' → logprob: -6.7934370040893555

Token 246: ' Returns' (ID: 9609)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2282775342464447
    2. '
' → logprob: -1.603277564048767
    3. '        
' → logprob: -6.728277683258057
    4. '\n' → logprob: -7.228277683258057
    5. ' for' → logprob: -7.853277683258057
    6. '```' → logprob: -8.478277206420898
    7. ' 
' → logprob: -9.228277206420898
    8. '   ' → logprob: -9.853277206420898
    9. 'n' → logprob: -9.978277206420898
    10. '  
' → logprob: -10.728277206420898

Token 247: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6327511668205261
    2. ' -' → logprob: -0.7577511668205261
    3. ' ' → logprob: -9.75775146484375
    4. '0' → logprob: -10.38275146484375
    5. '       ' → logprob: -10.38275146484375
    6. '   ' → logprob: -11.25775146484375
    7. ' None' → logprob: -12.25775146484375
    8. 'None' → logprob: -12.50775146484375
    9. '```' → logprob: -13.38275146484375
    10. '100' → logprob: -13.57025146484375

Token 248: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.117345684382599e-05
    2. ' ' → logprob: -10.875020980834961
    3. '       ' → logprob: -13.625020980834961
    4. '   ' → logprob: -14.000020980834961
    5. '```' → logprob: -16.87502098083496
    6. ' -' → logprob: -17.12502098083496
    7. '  ' → logprob: -17.87502098083496
    8. '        ' → logprob: -18.12502098083496
    9. '2' → logprob: -18.12502098083496
    10. '-' → logprob: -18.25002098083496

Token 249: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3541336953639984
    2. ' if' → logprob: -1.2291337251663208
    3. ' for' → logprob: -5.854133605957031
    4. '<|end|>' → logprob: -6.979133605957031
    5. ',' → logprob: -7.104133605957031
    6. '   ' → logprob: -8.104133605957031
    7. '.' → logprob: -8.854133605957031
    8. ' in' → logprob: -8.979133605957031
    9. '        ' → logprob: -9.604133605957031
    10. 'if' → logprob: -9.729133605957031

Token 250: ' impossible' (ID: 19786)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.15234199166297913
    2. ' no' → logprob: -2.2773420810699463
    3. 'not' → logprob: -4.152341842651367
    4. ' all' → logprob: -4.652341842651367
    5. ' none' → logprob: -4.777341842651367
    6. '       ' → logprob: -6.777341842651367
    7. ' the' → logprob: -6.777341842651367
    8. 'no' → logprob: -6.902341842651367
    9. ' self' → logprob: -7.277341842651367
    10. ' impossible' → logprob: -8.402341842651367

Token 251: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3458888530731201
    2. '.' → logprob: -1.5958888530731201
    3. ' to' → logprob: -2.47088885307312
    4. '   ' → logprob: -6.720889091491699
    5. '.
' → logprob: -6.970889091491699
    6. ',' → logprob: -7.470889091491699
    7. '
' → logprob: -7.470889091491699
    8. ' for' → logprob: -7.720889091491699
    9. '```' → logprob: -7.720889091491699
    10. ')' → logprob: -8.4708890914917

Token 252: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10095717757940292
    2. ' to' → logprob: -2.850957155227661
    3. '.' → logprob: -3.350957155227661
    4. ' for' → logprob: -6.60095739364624
    5. '   ' → logprob: -7.97595739364624
    6. ',' → logprob: -7.97595739364624
    7. ')' → logprob: -8.100956916809082
    8. ' at' → logprob: -8.850956916809082
    9. ' or' → logprob: -8.850956916809082
    10. '```' → logprob: -8.850956916809082

Token 253: ' within' (ID: 3518)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018556781113147736
    2. '.' → logprob: -4.893556594848633
    3. ' to' → logprob: -5.018556594848633
    4. '```' → logprob: -6.643556594848633
    5. ''''' → logprob: -7.018556594848633
    6. '   ' → logprob: -7.268556594848633
    7. ')' → logprob: -7.893556594848633
    8. '
' → logprob: -8.018556594848633
    9. ' for' → logprob: -8.018556594848633
    10. ''''
' → logprob: -8.768556594848633

Token 254: ' MAX' (ID: 16960)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.01851382665336132
    2. 'self' → logprob: -4.0185136795043945
    3. ' Frame' → logprob: -8.018513679504395
    4. 'Frame' → logprob: -10.768513679504395
    5. ' the' → logprob: -12.268513679504395
    6. '   ' → logprob: -12.643513679504395
    7. '       ' → logprob: -12.893513679504395
    8. '
' → logprob: -13.893513679504395
    9. ' Linear' → logprob: -14.393513679504395
    10. '	self' → logprob: -14.893513679504395

Token 255: '_FR' (ID: 32174)
  Prédit: '_FR'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_FR' → logprob: -0.00011653638648567721
    2. '_' → logprob: -9.500116348266602
    3. '_FRAME' → logprob: -10.625116348266602
    4. '_frames' → logprob: -11.625116348266602
    5. '_Fr' → logprob: -11.875116348266602
    6. '_F' → logprob: -14.000116348266602
    7. '_fr' → logprob: -15.875116348266602
    8. 'Frames' → logprob: -16.0001163482666
    9. '_
' → logprob: -16.2501163482666
    10. '\' → logprob: -16.3751163482666

Token 256: 'AMES' (ID: 31920)
  Prédit: 'AMES'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AMES' → logprob: -0.00019567293929867446
    2. 'AME' → logprob: -8.750195503234863
    3. 'ames' → logprob: -10.250195503234863
    4. 'MES' → logprob: -14.375195503234863
    5. 'A' → logprob: -14.500195503234863
    6. 'AM' → logprob: -15.125195503234863
    7. '
' → logprob: -15.875195503234863
    8. 'P' → logprob: -17.25019645690918
    9. 'IM' → logprob: -17.37519645690918
    10. '   ' → logprob: -17.37519645690918

Token 257: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01574164628982544
    2. '.' → logprob: -4.64074182510376
    3. '
' → logprob: -5.39074182510376
    4. ')' → logprob: -7.26574182510376
    5. '.
' → logprob: -8.140741348266602
    6. '   ' → logprob: -9.015741348266602
    7. '        
' → logprob: -9.890741348266602
    8. '```' → logprob: -9.890741348266602
    9. '):
' → logprob: -10.015741348266602
    10. ',' → logprob: -10.140741348266602

Token 258: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2816147804260254
    2. '       ' → logprob: -1.4066147804260254
    3. '        
' → logprob: -8.781614303588867
    4. ' for' → logprob: -9.281614303588867
    5. '\n' → logprob: -9.406614303588867
    6. '```' → logprob: -9.781614303588867
    7. '
' → logprob: -11.031614303588867
    8. '   ' → logprob: -11.156614303588867
    9. '    
' → logprob: -11.656614303588867
    10. ' 
' → logprob: -11.656614303588867

Token 259: ' '''
' (ID: 26725)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06561529636383057
    2. '
' → logprob: -2.815615177154541
    3. '        
' → logprob: -6.315615177154541
    4. ' for' → logprob: -6.440615177154541
    5. ' 
' → logprob: -9.8156156539917
    6. 'for' → logprob: -10.0656156539917
    7. '```' → logprob: -10.1906156539917
    8. '   ' → logprob: -10.8156156539917
    9. '  
' → logprob: -11.5656156539917
    10. '    
' → logprob: -11.6906156539917

Token 260: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014705838402733207
    2. ' for' → logprob: -6.876470565795898
    3. 'for' → logprob: -7.876470565795898
    4. 'current' → logprob: -10.251470565795898
    5. ' current' → logprob: -11.376470565795898
    6. 'count' → logprob: -12.376470565795898
    7. 'frame' → logprob: -12.876470565795898
    8. '   ' → logprob: -13.251470565795898
    9. 'i' → logprob: -14.626470565795898
    10. ' frame' → logprob: -14.751470565795898

Token 261: ' #' (ID: 1069)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.8927107453346252
    2. 'for' → logprob: -1.3927106857299805
    3. 'frame' → logprob: -1.3927106857299805
    4. '       ' → logprob: -4.2677106857299805
    5. 'count' → logprob: -4.5177106857299805
    6. 'self' → logprob: -4.6427106857299805
    7. 'frames' → logprob: -4.6427106857299805
    8. 'positions' → logprob: -4.8927106857299805
    9. ' for' → logprob: -5.1427106857299805
    10. ' current' → logprob: -5.5177106857299805

Token 262: ' The' (ID: 623)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7192050814628601
    2. 'current' → logprob: -1.8442051410675049
    3. 'frame' → logprob: -2.219205141067505
    4. 'frames' → logprob: -2.969205141067505
    5. 'positions' → logprob: -3.469205141067505
    6. ' for' → logprob: -3.594205141067505
    7. 'seed' → logprob: -4.094204902648926
    8. 'found' → logprob: -4.219204902648926
    9. 'results' → logprob: -4.469204902648926
    10. ' current' → logprob: -4.594204902648926

Token 263: ' stopping' (ID: 36616)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -1.2013053894042969
    2. ' current' → logprob: -1.4513053894042969
    3. ' for' → logprob: -2.076305389404297
    4. 'frame' → logprob: -2.951305389404297
    5. 'for' → logprob: -3.201305389404297
    6. 'frames' → logprob: -3.201305389404297
    7. ' frames' → logprob: -3.576305389404297
    8. ' frame' → logprob: -3.951305389404297
    9. 'found' → logprob: -4.201305389404297
    10. 'results' → logprob: -4.326305389404297

Token 264: ' process' (ID: 2273)
  Prédit: '_frame'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_frame' → logprob: -0.9913801550865173
    2. 'frame' → logprob: -1.616380214691162
    3. ' frames' → logprob: -2.116380214691162
    4. '_frames' → logprob: -2.116380214691162
    5. ' frame' → logprob: -2.241380214691162
    6. 'frames' → logprob: -2.866380214691162
    7. '_times' → logprob: -5.366380214691162
    8. '_time' → logprob: -5.491380214691162
    9. 'times' → logprob: -5.616380214691162
    10. '_' → logprob: -6.116380214691162

Token 265: ' requires' (ID: 10860)
  Prédit: ' frame'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' frame' → logprob: -1.0176894664764404
    2. 'frame' → logprob: -1.1426894664764404
    3. ' current' → logprob: -2.7676894664764404
    4. 'current' → logprob: -2.7676894664764404
    5. ' for' → logprob: -3.2676894664764404
    6. '       ' → logprob: -3.5176894664764404
    7. ' is' → logprob: -4.1426897048950195
    8. ' occurs' → logprob: -4.2676897048950195
    9. 'for' → logprob: -4.3926897048950195
    10. ' positions' → logprob: -4.5176897048950195

Token 266: ' N' (ID: 478)
  Prédit: 'frame'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'frame' → logprob: -0.3310702443122864
    2. 'current' → logprob: -2.0810701847076416
    3. ' frame' → logprob: -3.0810701847076416
    4. 'count' → logprob: -3.3310701847076416
    5. 'st' → logprob: -3.8310701847076416
    6. ' current' → logprob: -3.9560701847076416
    7. 'for' → logprob: -5.206070423126221
    8. 'frames' → logprob: -5.206070423126221
    9. 'found' → logprob: -6.081070423126221
    10. ' for' → logprob: -6.331070423126221

Token 267: ' button' (ID: 5057)
  Prédit: ' frames'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' frames' → logprob: -0.17450520396232605
    2. ' steps' → logprob: -3.5495052337646484
    3. ' stops' → logprob: -3.7995052337646484
    4. 'frames' → logprob: -4.049505233764648
    5. ' consecutive' → logprob: -4.174505233764648
    6. ' separate' → logprob: -4.424505233764648
    7. ' stopped' → logprob: -4.549505233764648
    8. ' current' → logprob: -5.049505233764648
    9. ' reels' → logprob: -5.424505233764648
    10. ' values' → logprob: -5.674505233764648

Token 268: ' presses' (ID: 102313)
  Prédit: ' presses'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' presses' → logprob: -0.5914751291275024
    2. '_p' → logprob: -0.8414751291275024
    3. 'press' → logprob: -5.091475009918213
    4. 's' → logprob: -5.341475009918213
    5. '_' → logprob: -6.341475009918213
    6. '_press' → logprob: -6.591475009918213
    7. '   ' → logprob: -7.216475009918213
    8. ' pushes' → logprob: -8.591475486755371
    9. '```' → logprob: -8.966475486755371
    10. '_push' → logprob: -9.591475486755371

Token 269: ',' (ID: 11)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.1953437328338623
    2. '       ' → logprob: -1.3203437328338623
    3. 'frame' → logprob: -2.0703437328338623
    4. 'current' → logprob: -3.0703437328338623
    5. ' for' → logprob: -3.1953437328338623
    6. ',' → logprob: -3.1953437328338623
    7. ' frame' → logprob: -3.4453437328338623
    8. ' current' → logprob: -3.5703437328338623
    9. ' count' → logprob: -3.9453437328338623
    10. 'pressed' → logprob: -4.195343971252441

Token 270: ' exactly' (ID: 9707)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.7054750323295593
    2. ' frame' → logprob: -1.830475091934204
    3. '       ' → logprob: -2.455475091934204
    4. ' frames' → logprob: -3.080475091934204
    5. ' so' → logprob: -3.330475091934204
    6. ' each' → logprob: -3.455475091934204
    7. 'current' → logprob: -3.955475091934204
    8. ' which' → logprob: -4.330474853515625
    9. ' and' → logprob: -4.580474853515625
    10. ' count' → logprob: -4.705474853515625

Token 271: ' one' (ID: 1001)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0664968490600586
    2. ' n' → logprob: -1.5664968490600586
    3. ' one' → logprob: -1.5664968490600586
    4. 'N' → logprob: -2.0664968490600586
    5. ' N' → logprob: -2.6914968490600586
    6. 'one' → logprob: -4.316496849060059
    7. ' at' → logprob: -4.566496849060059
    8. 'self' → logprob: -4.816496849060059
    9. ' self' → logprob: -5.066496849060059
    10. ' once' → logprob: -6.941496849060059

Token 272: ' per' (ID: 777)
  Prédit: ' per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' per' → logprob: -0.8792514801025391
    2. ' for' → logprob: -1.504251480102539
    3. ' frame' → logprob: -2.504251480102539
    4. 'per' → logprob: -2.504251480102539
    5. 'frame' → logprob: -2.504251480102539
    6. '       ' → logprob: -3.379251480102539
    7. 'for' → logprob: -3.879251480102539
    8. ' at' → logprob: -4.004251480102539
    9. ' more' → logprob: -4.754251480102539
    10. ' after' → logprob: -5.129251480102539

Token 273: ' reel' (ID: 72033)
  Prédit: 'frame'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'frame' → logprob: -0.022290879860520363
    2. 're' → logprob: -4.3972907066345215
    3. ' frame' → logprob: -4.6472907066345215
    4. ' reel' → logprob: -9.39729118347168
    5. 'step' → logprob: -11.89729118347168
    6. '   ' → logprob: -12.14729118347168
    7. 'iteration' → logprob: -12.14729118347168
    8. 'fr' → logprob: -12.27229118347168
    9. 'button' → logprob: -12.64729118347168
    10. ' ' → logprob: -12.77229118347168

Token 274: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8238757848739624
    2. 'current' → logprob: -1.4488757848739624
    3. '
' → logprob: -1.6988757848739624
    4. ',' → logprob: -3.073875904083252
    5. 'frame' → logprob: -3.698875904083252
    6. 'count' → logprob: -4.323875904083252
    7. ' current' → logprob: -4.323875904083252
    8. 'press' → logprob: -5.073875904083252
    9. ' frame' → logprob: -5.198875904083252
    10. 'result' → logprob: -5.823875904083252

Token 275: ' left' (ID: 3561)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5440607070922852
    2. 'range' → logprob: -1.9190607070922852
    3. ' sequence' → logprob: -2.169060707092285
    4. ' order' → logprob: -2.294060707092285
    5. 'sequence' → logprob: -4.044060707092285
    6. ' any' → logprob: -4.294060707092285
    7. 'self' → logprob: -4.919060707092285
    8. ' each' → logprob: -5.169060707092285
    9. 'order' → logprob: -5.419060707092285
    10. 'each' → logprob: -6.044060707092285

Token 276: '-right' (ID: 14810)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.032481320202350616
    2. 'to' → logprob: -3.5324814319610596
    3. '       ' → logprob: -6.5324811935424805
    4. '-to' → logprob: -7.6574811935424805
    5. '   ' → logprob: -7.9074811935424805
    6. '_to' → logprob: -8.40748119354248
    7. ' ' → logprob: -9.78248119354248
    8. ',' → logprob: -10.40748119354248
    9. 'To' → logprob: -10.65748119354248
    10. '        
' → logprob: -11.15748119354248

Token 277: ' order' (ID: 2569)
  Prédit: ' order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' order' → logprob: -0.026469474658370018
    2. 'order' → logprob: -3.7764694690704346
    3. ' to' → logprob: -6.776469707489014
    4. 'to' → logprob: -7.151469707489014
    5. ' sequence' → logprob: -7.401469707489014
    6. ' direction' → logprob: -7.526469707489014
    7. '-to' → logprob: -10.526469230651855
    8. 'direction' → logprob: -10.776469230651855
    9. 'most' → logprob: -11.026469230651855
    10. 'sequence' → logprob: -11.151469230651855

Token 278: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04591095447540283
    2. '
' → logprob: -4.045910835266113
    3. 'current' → logprob: -4.545910835266113
    4. 'frame' → logprob: -4.920910835266113
    5. ',' → logprob: -6.170910835266113
    6. ' frame' → logprob: -6.295910835266113
    7. ' current' → logprob: -6.545910835266113
    8. 'count' → logprob: -7.545910835266113
    9. 'n' → logprob: -8.045910835266113
    10. 'result' → logprob: -8.045910835266113

Token 279: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2117660492658615
    2. ' current' → logprob: -2.086766004562378
    3. 'current' → logprob: -3.711766004562378
    4. ' frame' → logprob: -3.711766004562378
    5. ' result' → logprob: -5.711766242980957
    6. 'frame' → logprob: -5.961766242980957
    7. '
' → logprob: -6.336766242980957
    8. ' value' → logprob: -6.586766242980957
    9. ' for' → logprob: -6.836766242980957
    10. 'result' → logprob: -6.961766242980957

Token 280: ' #' (ID: 1069)
  Prédit: 'frame'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'frame' → logprob: -1.1079052686691284
    2. 'current' → logprob: -1.7329052686691284
    3. ' frame' → logprob: -1.9829052686691284
    4. ' for' → logprob: -2.607905387878418
    5. ' current' → logprob: -2.607905387878418
    6. 'for' → logprob: -2.732905387878418
    7. '       ' → logprob: -2.982905387878418
    8. 'count' → logprob: -4.357905387878418
    9. 'pressed' → logprob: -4.482905387878418
    10. 'press' → logprob: -4.607905387878418

Token 281: ' Frame' (ID: 29120)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.3725899457931519
    2. 'frame' → logprob: -1.4975899457931519
    3. ' for' → logprob: -2.1225900650024414
    4. 'current' → logprob: -2.1225900650024414
    5. ' current' → logprob: -2.6225900650024414
    6. ' frame' → logprob: -2.9975900650024414
    7. '       ' → logprob: -3.1225900650024414
    8. 'seed' → logprob: -3.3725900650024414
    9. ' seed' → logprob: -4.497590065002441
    10. 'self' → logprob: -4.747590065002441

Token 282: ' counting' (ID: 43276)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.013534283265471458
    2. '_count' → logprob: -5.138534069061279
    3. '_offset' → logprob: -6.388534069061279
    4. '_' → logprob: -6.513534069061279
    5. '_number' → logprob: -6.638534069061279
    6. '=' → logprob: -7.013534069061279
    7. '_index' → logprob: -7.388534069061279
    8. '       ' → logprob: -8.138534545898438
    9. '_counter' → logprob: -8.138534545898438
    10. 's' → logprob: -8.638534545898438

Token 283: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.027803219854831696
    2. '=' → logprob: -3.7778031826019287
    3. '_start' → logprob: -6.652803421020508
    4. ',' → logprob: -6.902803421020508
    5. ' starts' → logprob: -7.652803421020508
    6. ' is' → logprob: -7.902803421020508
    7. '_frame' → logprob: -8.027803421020508
    8. '_count' → logprob: -8.777803421020508
    9. '_started' → logprob: -9.277803421020508
    10. '_offset' → logprob: -9.402803421020508

Token 284: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8113591074943542
    2. '1' → logprob: -1.311359167098999
    3. '0' → logprob: -1.811359167098999
    4. '       ' → logprob: -2.561359167098999
    5. ' self' → logprob: -4.18635892868042
    6. ' zero' → logprob: -5.06135892868042
    7. '   ' → logprob: -5.43635892868042
    8. 'self' → logprob: -6.18635892868042
    9. ' continuous' → logprob: -6.18635892868042
    10. ' incremental' → logprob: -6.18635892868042

Token 285: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05195511505007744
    2. '0' → logprob: -3.301955223083496
    3. ' ' → logprob: -4.676955223083496
    4. 'one' → logprob: -6.176955223083496
    5. ' one' → logprob: -7.426955223083496
    6. 'based' → logprob: -7.676955223083496
    7. 'starting' → logprob: -7.801955223083496
    8. 'started' → logprob: -8.426955223083496
    9. 'done' → logprob: -8.676955223083496
    10. 'start' → logprob: -8.926955223083496

Token 286: '-based' (ID: 8235)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9300727844238281
    2. '-based' → logprob: -1.0550727844238281
    3. '-' → logprob: -2.555072784423828
    4. '        ' → logprob: -2.680072784423828
    5. ' based' → logprob: -3.680072784423828
    6. ' ' → logprob: -3.930072784423828
    7. '    ' → logprob: -4.555072784423828
    8. 'based' → logprob: -4.680072784423828
    9. '   ' → logprob: -4.805072784423828
    10. '
' → logprob: -5.055072784423828

Token 287: ' per' (ID: 777)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16652104258537292
    2. '
' → logprob: -2.1665210723876953
    3. 'current' → logprob: -3.5415210723876953
    4. 'frame' → logprob: -5.416521072387695
    5. ',' → logprob: -7.041521072387695
    6. ' current' → logprob: -7.041521072387695
    7. '        
' → logprob: -7.416521072387695
    8. ' frame' → logprob: -7.416521072387695
    9. 'count' → logprob: -7.791521072387695
    10. ' for' → logprob: -8.166521072387695

Token 288: ' problem' (ID: 4792)
  Prédit: ' frame'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' frame' → logprob: -0.24095167219638824
    2. ' range' → logprob: -2.7409517765045166
    3. ' self' → logprob: -3.2409517765045166
    4. 'self' → logprob: -4.2409515380859375
    5. 'frame' → logprob: -4.3659515380859375
    6. ' def' → logprob: -4.3659515380859375
    7. ' step' → logprob: -4.4909515380859375
    8. ' each' → logprob: -4.7409515380859375
    9. 'def' → logprob: -5.1159515380859375
    10. ' press' → logprob: -5.2409515380859375

Token 289: ' statement' (ID: 9710)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01230690535157919
    2. '
' → logprob: -4.6373066902160645
    3. '        
' → logprob: -8.012307167053223
    4. ',' → logprob: -8.137307167053223
    5. ' frame' → logprob: -8.262307167053223
    6. 'count' → logprob: -8.387307167053223
    7. 'frame' → logprob: -8.637307167053223
    8. '#' → logprob: -8.637307167053223
    9. '_frame' → logprob: -8.887307167053223
    10. '   ' → logprob: -9.137307167053223

Token 290: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28965020179748535
    2. '
' → logprob: -1.4146502017974854
    3. 'current' → logprob: -5.289649963378906
    4. '        
' → logprob: -6.914649963378906
    5. 'frame' → logprob: -6.914649963378906
    6. ' current' → logprob: -8.289649963378906
    7. ',' → logprob: -8.789649963378906
    8. 'n' → logprob: -8.914649963378906
    9. ' for' → logprob: -9.039649963378906
    10. '
' → logprob: -9.164649963378906

Token 291: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028186092153191566
    2. ' frame' → logprob: -4.778186321258545
    3. ' current' → logprob: -5.153186321258545
    4. 'current' → logprob: -5.653186321258545
    5. 'frame' → logprob: -5.653186321258545
    6. ' for' → logprob: -5.778186321258545
    7. 'count' → logprob: -7.278186321258545
    8. '
' → logprob: -7.778186321258545
    9. 'for' → logprob: -7.903186321258545
    10. 'result' → logprob: -8.403185844421387

Token 292: ' #' (ID: 1069)
  Prédit: 'frame'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'frame' → logprob: -0.6336632370948792
    2. 'current' → logprob: -1.8836631774902344
    3. '       ' → logprob: -2.3836631774902344
    4. ' frame' → logprob: -2.6336631774902344
    5. ' current' → logprob: -2.8836631774902344
    6. 'for' → logprob: -3.3836631774902344
    7. ' for' → logprob: -3.3836631774902344
    8. 'press' → logprob: -5.383663177490234
    9. 'frames' → logprob: -6.008663177490234
    10. 'count' → logprob: -6.133663177490234

Token 293: ' However' (ID: 5551)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.3633687496185303
    2. 'for' → logprob: -1.3633687496185303
    3. ' current' → logprob: -2.2383687496185303
    4. 'frame' → logprob: -2.2383687496185303
    5. 'current' → logprob: -2.6133687496185303
    6. ' frame' → logprob: -2.9883687496185303
    7. '       ' → logprob: -3.3633687496185303
    8. ' self' → logprob: -4.113368988037109
    9. ' def' → logprob: -4.613368988037109
    10. 'self' → logprob: -4.863368988037109

Token 294: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000739707553293556
    2. '       ' → logprob: -8.000740051269531
    3. ' ,' → logprob: -8.500740051269531
    4. ',
' → logprob: -9.125740051269531
    5. '
' → logprob: -10.875740051269531
    6. '<|end|>' → logprob: -11.250740051269531
    7. ' for' → logprob: -11.750740051269531
    8. ' we' → logprob: -12.125740051269531
    9. ' the' → logprob: -12.500740051269531
    10. '        ' → logprob: -12.500740051269531

Token 295: ' if' (ID: 538)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.3383881747722626
    2. ' for' → logprob: -1.963388204574585
    3. ' frame' → logprob: -2.463388204574585
    4. ' self' → logprob: -4.338387966156006
    5. 'current' → logprob: -4.963387966156006
    6. ' index' → logprob: -5.213387966156006
    7. ' press' → logprob: -5.463387966156006
    8. ' result' → logprob: -5.588387966156006
    9. 'for' → logprob: -5.588387966156006
    10. ' we' → logprob: -5.713387966156006

Token 296: ' the' (ID: 290)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.09796523302793503
    2. ' all' → logprob: -2.7229652404785156
    3. ' not' → logprob: -4.722965240478516
    4. ' the' → logprob: -4.847965240478516
    5. 'self' → logprob: -5.097965240478516
    6. ' any' → logprob: -6.347965240478516
    7. ' n' → logprob: -6.597965240478516
    8. 'all' → logprob: -8.472965240478516
    9. ' (' → logprob: -8.597965240478516
    10. ' N' → logprob: -8.722965240478516

Token 297: ' needed' (ID: 6118)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.40019747614860535
    2. ' n' → logprob: -2.1501975059509277
    3. ' current' → logprob: -2.4001975059509277
    4. 'self' → logprob: -3.1501975059509277
    5. ' self' → logprob: -3.5251975059509277
    6. 'current' → logprob: -4.400197505950928
    7. ' next' → logprob: -4.400197505950928
    8. 're' → logprob: -5.650197505950928
    9. ' conditions' → logprob: -5.775197505950928
    10. ' not' → logprob: -6.275197505950928

Token 298: ' value' (ID: 1432)
  Prédit: ' frame'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' frame' → logprob: -0.40665966272354126
    2. ' frames' → logprob: -1.6566596031188965
    3. ' conditions' → logprob: -3.5316596031188965
    4. 'frame' → logprob: -3.7816596031188965
    5. ' presses' → logprob: -3.7816596031188965
    6. ' value' → logprob: -4.9066596031188965
    7. ' reels' → logprob: -5.0316596031188965
    8. ' values' → logprob: -5.2816596031188965
    9. '_frame' → logprob: -5.4066596031188965
    10. 're' → logprob: -5.5316596031188965

Token 299: ' for' (ID: 395)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.5152300596237183
    2. ' for' → logprob: -1.6402300596237183
    3. ' at' → logprob: -2.140230178833008
    4. 's' → logprob: -3.765230178833008
    5. ' on' → logprob: -3.765230178833008
    6. ' in' → logprob: -4.515230178833008
    7. ' not' → logprob: -5.265230178833008
    8. ' occurs' → logprob: -5.390230178833008
    9. ' isn't' → logprob: -5.765230178833008
    10. ' ' → logprob: -5.765230178833008

Token 300: ' a' (ID: 261)
  Prédit: ' reel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reel' → logprob: -1.1760926246643066
    2. ' a' → logprob: -1.6760926246643066
    3. ' any' → logprob: -1.9260926246643066
    4. ' the' → logprob: -2.1760926246643066
    5. 'a' → logprob: -2.3010926246643066
    6. ' self' → logprob: -3.4260926246643066
    7. ' each' → logprob: -3.5510926246643066
    8. 're' → logprob: -3.6760926246643066
    9. ' i' → logprob: -4.426092624664307
    10. 'the' → logprob: -4.551092624664307

Token 301: ' reel' (ID: 72033)
  Prédit: ' reel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reel' → logprob: -0.2304306924343109
    2. 're' → logprob: -2.1054306030273438
    3. ' given' → logprob: -3.7304306030273438
    4. 'll' → logprob: -4.355430603027344
    5. 'ny' → logprob: -4.855430603027344
    6. 'n' → logprob: -4.855430603027344
    7. '   ' → logprob: -5.605430603027344
    8. ' condition' → logprob: -5.980430603027344
    9. 'nd' → logprob: -6.105430603027344
    10. ' stop' → logprob: -6.355430603027344

Token 302: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.09639406204223633
    2. ' at' → logprob: -3.7213940620422363
    3. ' isn't' → logprob: -3.8463940620422363
    4. ' does' → logprob: -5.096394062042236
    5. 'is' → logprob: -5.221394062042236
    6. ' appears' → logprob: -5.221394062042236
    7. ' occurs' → logprob: -5.346394062042236
    8. ' has' → logprob: -5.721394062042236
    9. ' on' → logprob: -5.846394062042236
    10. ' cannot' → logprob: -5.971394062042236

Token 303: ' exactly' (ID: 9707)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -1.5920079946517944
    2. ' already' → logprob: -1.7170079946517944
    3. 'already' → logprob: -1.9670079946517944
    4. ' found' → logprob: -2.092008113861084
    5. 'found' → logprob: -2.217008113861084
    6. ' self' → logprob: -2.592008113861084
    7. 'not' → logprob: -2.842008113861084
    8. 'self' → logprob: -2.967008113861084
    9. ' equal' → logprob: -4.842008113861084
    10. ' at' → logprob: -4.842008113861084

Token 304: ' the' (ID: 290)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.13777796924114227
    2. ' self' → logprob: -2.3877780437469482
    3. ' the' → logprob: -4.262777805328369
    4. 'the' → logprob: -4.387777805328369
    5. 'at' → logprob: -6.137777805328369
    6. ' equal' → logprob: -6.137777805328369
    7. ' at' → logprob: -6.387777805328369
    8. 'equal' → logprob: -6.637777805328369
    9. 'current' → logprob: -7.012777805328369
    10. '0' → logprob: -7.137777805328369

Token 305: ' initial' (ID: 4871)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.17410343885421753
    2. 'self' → logprob: -2.6741034984588623
    3. 'initial' → logprob: -3.1741034984588623
    4. ' current' → logprob: -3.6741034984588623
    5. 'seed' → logprob: -5.049103260040283
    6. 'value' → logprob: -5.049103260040283
    7. ' initial' → logprob: -5.799103260040283
    8. 'lc' → logprob: -5.799103260040283
    9. 're' → logprob: -6.424103260040283
    10. 'starting' → logprob: -6.924103260040283

Token 306: ' RNG' (ID: 165661)
  Prédit: ' value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' value' → logprob: -1.1231623888015747
    2. ' current' → logprob: -1.8731623888015747
    3. ' self' → logprob: -2.123162269592285
    4. 'self' → logprob: -2.123162269592285
    5. ' seed' → logprob: -2.498162269592285
    6. ' state' → logprob: -2.998162269592285
    7. 'value' → logprob: -2.998162269592285
    8. 'seed' → logprob: -3.248162269592285
    9. 'current' → logprob: -3.248162269592285
    10. 'state' → logprob: -3.998162269592285

Token 307: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.4238852858543396
    2. 'value' → logprob: -1.7988853454589844
    3. ' current' → logprob: -2.4238853454589844
    4. ' state' → logprob: -3.2988853454589844
    5. 'current' → logprob: -3.4238853454589844
    6. 'state' → logprob: -4.173885345458984
    7. ' output' → logprob: -6.048885345458984
    8. ' seed' → logprob: -6.548885345458984
    9. 'seed' → logprob: -6.923885345458984
    10. 'self' → logprob: -7.173885345458984

Token 308: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03890010342001915
    2. '       ' → logprob: -3.663900136947632
    3. ' (' → logprob: -5.163899898529053
    4. ' at' → logprob: -5.788899898529053
    5. ':' → logprob: -6.413899898529053
    6. ',
' → logprob: -6.663899898529053
    7. ' ,' → logprob: -8.413900375366211
    8. ' on' → logprob: -9.413900375366211
    9. '(self' → logprob: -9.413900375366211
    10. ' or' → logprob: -9.663900375366211

Token 309: ' 
' (ID: 793)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.0681285858154297
    2. ' we' → logprob: -1.3181285858154297
    3. '       ' → logprob: -1.9431285858154297
    4. ' return' → logprob: -2.3181285858154297
    5. ' you' → logprob: -3.5681285858154297
    6. ' then' → logprob: -3.6931285858154297
    7. ' there' → logprob: -3.8181285858154297
    8. ' continue' → logprob: -4.06812858581543
    9. ' it' → logprob: -4.44312858581543
    10. '           ' → logprob: -4.56812858581543

Token 310: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02255328558385372
    2. '           ' → logprob: -4.897553443908691
    3. '\n' → logprob: -5.522553443908691
    4. '
' → logprob: -5.647553443908691
    5. ' we' → logprob: -6.647553443908691
    6. ' you' → logprob: -6.897553443908691
    7. ' then' → logprob: -6.897553443908691
    8. ',' → logprob: -7.147553443908691
    9. '#' → logprob: -7.272553443908691
    10. ' the' → logprob: -7.522553443908691

Token 311: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.650219202041626
    2. '       ' → logprob: -1.025219202041626
    3. ' we' → logprob: -3.525219202041626
    4. ' return' → logprob: -4.025218963623047
    5. ' the' → logprob: -4.150218963623047
    6. 'return' → logprob: -4.275218963623047
    7. ' #' → logprob: -4.525218963623047
    8. 'we' → logprob: -4.525218963623047
    9. ' then' → logprob: -4.900218963623047
    10. 'the' → logprob: -5.775218963623047

Token 312: ' we' (ID: 581)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.531221866607666
    2. ' return' → logprob: -1.906221866607666
    3. ' #' → logprob: -2.906221866607666
    4. ' we' → logprob: -3.156221866607666
    5. 'return' → logprob: -3.281221866607666
    6. ' current' → logprob: -3.656221866607666
    7. ' the' → logprob: -3.781221866607666
    8. '       ' → logprob: -4.031221866607666
    9. ' self' → logprob: -4.531221866607666
    10. 'we' → logprob: -5.156221866607666

Token 313: ' can' (ID: 665)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3591572046279907
    2. '       ' → logprob: -1.8591572046279907
    3. ' continue' → logprob: -2.234157085418701
    4. '        ' → logprob: -4.734157085418701
    5. 'return' → logprob: -4.984157085418701
    6. ' can' → logprob: -5.234157085418701
    7. '           ' → logprob: -5.859157085418701
    8. 'continue' → logprob: -5.859157085418701
    9. ' should' → logprob: -5.984157085418701
    10. ' need' → logprob: -6.109157085418701

Token 314: ' consider' (ID: 3331)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.37505781650543213
    2. 'return' → logprob: -1.5000578165054321
    3. ' stop' → logprob: -2.7500576972961426
    4. 'stop' → logprob: -3.7500576972961426
    5. '   ' → logprob: -7.000057697296143
    6. ' consider' → logprob: -8.2500581741333
    7. ' press' → logprob: -8.3750581741333
    8. 'st' → logprob: -9.5000581741333
    9. 'press' → logprob: -9.6250581741333
    10. ' ' → logprob: -9.7500581741333

Token 315: ' that' (ID: 484)
  Prédit: ' stopping'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stopping' → logprob: -0.9300631284713745
    2. ' it' → logprob: -1.5550631284713745
    3. ' the' → logprob: -1.8050631284713745
    4. ' that' → logprob: -2.055063247680664
    5. '0' → logprob: -2.805063247680664
    6. ' ' → logprob: -3.680063247680664
    7. ' frame' → logprob: -5.430063247680664
    8. 'that' → logprob: -5.680063247680664
    9. 'the' → logprob: -5.805063247680664
    10. 'it' → logprob: -6.430063247680664

Token 316: ' reel' (ID: 72033)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.4167754054069519
    2. '0' → logprob: -2.1667754650115967
    3. 'the' → logprob: -2.1667754650115967
    4. ' it' → logprob: -3.5417754650115967
    5. ' ' → logprob: -4.166775226593018
    6. 'return' → logprob: -4.416775226593018
    7. '1' → logprob: -4.666775226593018
    8. ' return' → logprob: -4.791775226593018
    9. '       ' → logprob: -4.916775226593018
    10. ' we' → logprob: -5.041775226593018

Token 317: ' stopped' (ID: 18145)
  Prédit: ' as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -1.0390264987945557
    2. ' stopped' → logprob: -1.4140264987945557
    3. ' to' → logprob: -1.6640264987945557
    4. ' can' → logprob: -1.9140264987945557
    5. ' is' → logprob: -3.4140264987945557
    6. ' at' → logprob: -4.664026260375977
    7. ' ' → logprob: -6.164026260375977
    8. ' pressed' → logprob: -6.289026260375977
    9. '       ' → logprob: -6.414026260375977
    10. '   ' → logprob: -6.664026260375977

Token 318: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.5839948654174805
    2. '       ' → logprob: -1.3339948654174805
    3. ',' → logprob: -2.8339948654174805
    4. '        ' → logprob: -2.9589948654174805
    5. '.' → logprob: -4.2089948654174805
    6. ' in' → logprob: -4.4589948654174805
    7. ' for' → logprob: -4.8339948654174805
    8. ' on' → logprob: -4.9589948654174805
    9. ' after' → logprob: -5.5839948654174805
    10. ' immediately' → logprob: -5.5839948654174805

Token 319: ' frame' (ID: 7298)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.43141496181488037
    2. ' frame' → logprob: -1.6814149618148804
    3. 'frame' → logprob: -2.05641508102417
    4. '0' → logprob: -4.43141508102417
    5. ' ' → logprob: -4.43141508102417
    6. ' the' → logprob: -4.68141508102417
    7. 'the' → logprob: -6.05641508102417
    8. ' current' → logprob: -7.68141508102417
    9. 'current' → logprob: -8.181414604187012
    10. '   ' → logprob: -9.056414604187012

Token 320: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.31380292773246765
    2. ' ' → logprob: -1.43880295753479
    3. '0' → logprob: -3.43880295753479
    4. '   ' → logprob: -11.438802719116211
    5. ' =' → logprob: -12.813802719116211
    6. '       ' → logprob: -13.563802719116211
    7. '=' → logprob: -13.563802719116211
    8. '
' → logprob: -13.813802719116211
    9. '    ' → logprob: -14.188802719116211
    10. '+' → logprob: -14.313802719116211

Token 321: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.027592528611421585
    2. '0' → logprob: -3.652592420578003
    3. ' ' → logprob: -6.652592658996582
    4. '   ' → logprob: -14.652592658996582
    5. '
' → logprob: -16.590091705322266
    6. '    ' → logprob: -17.527591705322266
    7. '  ' → logprob: -17.590091705322266
    8. ' one' → logprob: -17.715091705322266
    9. '2' → logprob: -17.777591705322266
    10. '=' → logprob: -18.027591705322266

Token 322: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.023031625896692276
    2. '       ' → logprob: -4.023031711578369
    3. '

' → logprob: -6.398031711578369
    4. '        
' → logprob: -6.398031711578369
    5. '
        
' → logprob: -6.898031711578369
    6. ' 
' → logprob: -9.023031234741211
    7. '<|end|>' → logprob: -9.398031234741211
    8. ',' → logprob: -9.648031234741211
    9. '
' → logprob: -10.023031234741211
    10. '    
' → logprob: -10.273031234741211

Token 323: 'without' (ID: 55931)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1527097225189209
    2. '       ' → logprob: -2.527709722518921
    3. ' )' → logprob: -3.902709722518921
    4. ').' → logprob: -4.2777099609375
    5. ')
' → logprob: -4.5277099609375
    6. '),' → logprob: -5.0277099609375
    7. '
' → logprob: -5.7777099609375
    8. '#' → logprob: -7.1527099609375
    9. ').
' → logprob: -7.1527099609375
    10. '):
' → logprob: -7.4027099609375

Token 324: ' waiting' (ID: 12028)
  Prédit: ' pressing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pressing' → logprob: -0.239198699593544
    2. ' any' → logprob: -3.364198684692383
    3. 'press' → logprob: -3.364198684692383
    4. ' advancing' → logprob: -3.489198684692383
    5. ' presses' → logprob: -3.489198684692383
    6. ' stopping' → logprob: -3.614198684692383
    7. ' waiting' → logprob: -4.114198684692383
    8. ' a' → logprob: -5.364198684692383
    9. 'waiting' → logprob: -5.364198684692383
    10. ' needing' → logprob: -5.489198684692383

Token 325: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16047118604183197
    2. ').' → logprob: -2.410471200942993
    3. ')
' → logprob: -3.660471200942993
    4. ').
' → logprob: -4.660470962524414
    5. ' for' → logprob: -4.910470962524414
    6. '),' → logprob: -5.035470962524414
    7. '       ' → logprob: -5.160470962524414
    8. ' )' → logprob: -6.660470962524414
    9. ',' → logprob: -8.035470962524414
    10. ' to' → logprob: -8.035470962524414

Token 326: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18720804154872894
    2. '
' → logprob: -1.8122080564498901
    3. '        
' → logprob: -5.43720817565918
    4. '\n' → logprob: -7.43720817565918
    5. '<|end|>' → logprob: -7.56220817565918
    6. ' 
' → logprob: -7.93720817565918
    7. '#' → logprob: -8.18720817565918
    8. '    
' → logprob: -8.31220817565918
    9. '   ' → logprob: -8.56220817565918
    10. '  
' → logprob: -8.81220817565918

Token 327: ' current' (ID: 2208)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16858895123004913
    2. ' frame' → logprob: -2.543588876724243
    3. ' current' → logprob: -3.418588876724243
    4. 'frame' → logprob: -4.293589115142822
    5. ' result' → logprob: -4.543589115142822
    6. 'current' (adapté à ' current') → logprob: -4.918589115142822
    7. 'result' → logprob: -5.668589115142822
    8. ' value' → logprob: -6.418589115142822
    9. ' results' → logprob: -6.793589115142822
    10. ' target' → logprob: -7.293589115142822

Token 328: '_rng' (ID: 168456)
  Prédit: '_value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.08619912713766098
    2. '_frame' → logprob: -2.8361990451812744
    3. '_' → logprob: -4.4611992835998535
    4. '_values' → logprob: -4.8361992835998535
    5. ' =' → logprob: -6.0861992835998535
    6. '_val' → logprob: -6.5861992835998535
    7. '_state' → logprob: -8.336198806762695
    8. '_seed' → logprob: -8.461198806762695
    9. '_frames' → logprob: -8.961198806762695
    10. '=' → logprob: -10.336198806762695

Token 329: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.07195655256509781
    2. ' =' → logprob: -2.6969566345214844
    3. '_' → logprob: -6.696956634521484
    4. '_val' → logprob: -7.946956634521484
    5. '=' → logprob: -8.071956634521484
    6. '_values' → logprob: -9.696956634521484
    7. 'Value' → logprob: -10.821956634521484
    8. 'value' → logprob: -11.196956634521484
    9. '=_' → logprob: -11.821956634521484
    10. ' _' → logprob: -12.321956634521484

Token 330: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004085758700966835
    2. '=' → logprob: -5.504085540771484
    3. ' ' → logprob: -12.754085540771484
    4. ':' → logprob: -13.504085540771484
    5. ' =
' → logprob: -13.504085540771484
    6. 's' → logprob: -14.379085540771484
    7. ',' → logprob: -14.379085540771484
    8. '   ' → logprob: -16.379085540771484
    9. ' ' → logprob: -16.504085540771484
    10. '	' → logprob: -16.629085540771484

Token 331: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.16047565639019012
    2. ' self' → logprob: -1.9104756116867065
    3. '0' → logprob: -8.410475730895996
    4. '(self' → logprob: -11.910475730895996
    5. ' ' → logprob: -12.660475730895996
    6. '1' → logprob: -12.660475730895996
    7. '       ' → logprob: -12.785475730895996
    8. '[self' → logprob: -13.035475730895996
    9. '   ' → logprob: -13.160475730895996
    10. 's' → logprob: -13.597975730895996

Token 332: '.l' (ID: 1000)
  Prédit: '.l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.l' → logprob: -0.008776000700891018
    2. '.current' → logprob: -4.7587761878967285
    3. '.' → logprob: -9.13377571105957
    4. 'current' → logprob: -10.88377571105957
    5. ' .' → logprob: -11.13377571105957
    6. '.n' → logprob: -11.50877571105957
    7. '.next' → logprob: -12.00877571105957
    8. '
' → logprob: -15.00877571105957
    9. '.cur' → logprob: -15.00877571105957
    10. '.c' → logprob: -15.13377571105957

Token 333: 'cg' (ID: 54237)
  Prédit: 'cg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cg' → logprob: -0.0002646735229063779
    2. 'c' → logprob: -8.250265121459961
    3. 'CG' → logprob: -14.125265121459961
    4. ' cg' → logprob: -14.250265121459961
    5. 'g' → logprob: -14.875265121459961
    6. 'cgi' → logprob: -15.000265121459961
    7. 'gc' → logprob: -15.125265121459961
    8. '   ' → logprob: -15.750265121459961
    9. 'fg' → logprob: -16.25026512145996
    10. 'current' → logprob: -16.25026512145996

Token 334: '.current' (ID: 8357)
  Prédit: '.current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.current' → logprob: -0.00023965541913639754
    2. '.next' → logprob: -9.000239372253418
    3. '.' → logprob: -9.250239372253418
    4. 'current' → logprob: -11.250239372253418
    5. ' .' → logprob: -12.500239372253418
    6. '.cur' → logprob: -14.875239372253418
    7. ').' → logprob: -15.125239372253418
    8. '.curr' → logprob: -15.125239372253418
    9. '.c' → logprob: -15.625239372253418
    10. '
' → logprob: -15.625239372253418

Token 335: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.020414821803569794
    2. '       ' → logprob: -4.02041482925415
    3. '        
' → logprob: -7.39541482925415
    4. ' for' → logprob: -7.64541482925415
    5. '
' → logprob: -7.77041482925415
    6. 'for' → logprob: -8.895414352416992
    7. ',' → logprob: -8.895414352416992
    8. '

' → logprob: -9.770414352416992
    9. 'frame' → logprob: -10.145414352416992
    10. '\n' → logprob: -10.395414352416992

Token 336: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20372755825519562
    2. '
' → logprob: -2.0787274837493896
    3. 'frame' → logprob: -3.9537274837493896
    4. ' for' → logprob: -4.828727722167969
    5. 'for' → logprob: -5.078727722167969
    6. 'frames' → logprob: -5.203727722167969
    7. ' frame' → logprob: -5.453727722167969
    8. '        
' → logprob: -5.578727722167969
    9. '```' → logprob: -5.828727722167969
    10. '#' → logprob: -6.578727722167969

Token 337: ' time' (ID: 1058)
  Prédit: 'frame'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'frame' → logprob: -0.1436421275138855
    2. 'frames' → logprob: -2.6436421871185303
    3. 'for' → logprob: -3.8936421871185303
    4. 'min' → logprob: -4.143641948699951
    5. '       ' → logprob: -5.518641948699951
    6. 'total' → logprob: -5.643641948699951
    7. 'current' → logprob: -5.643641948699951
    8. 'press' → logprob: -6.143641948699951
    9. 'positions' → logprob: -6.393641948699951
    10. 'result' → logprob: -6.393641948699951

Token 338: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9275349378585815
    2. ' =' → logprob: -1.1775349378585815
    3. '_' → logprob: -2.052535057067871
    4. '_to' → logprob: -2.677535057067871
    5. '_needed' → logprob: -3.552535057067871
    6. '=' → logprob: -3.927535057067871
    7. '_pass' → logprob: -4.552535057067871
    8. '_elapsed' → logprob: -4.802535057067871
    9. '_taken' → logprob: -4.927535057067871
    10. '_wait' → logprob: -5.177535057067871

Token 339: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011128702200949192
    2. ' ' → logprob: -4.511128902435303
    3. '1' → logprob: -9.511128425598145
    4. ' -' → logprob: -13.136128425598145
    5. '[' → logprob: -13.511128425598145
    6. '-' → logprob: -13.511128425598145
    7. '   ' → logprob: -14.073628425598145
    8. ' [' → logprob: -15.073628425598145
    9. ' ' → logprob: -16.01112937927246
    10. '
' → logprob: -16.19862937927246

Token 340: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002800471556838602
    2. '1' → logprob: -8.750280380249023
    3. ' ' → logprob: -9.125280380249023
    4. '-' → logprob: -11.500280380249023
    5. '[' → logprob: -14.062780380249023
    6. ' -' → logprob: -14.250280380249023
    7. '[]' → logprob: -15.187780380249023
    8. '   ' → logprob: -15.562780380249023
    9. '[]
' → logprob: -16.000280380249023
    10. '
' → logprob: -16.437780380249023

Token 341: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08662019670009613
    2. '       ' → logprob: -2.5866200923919678
    3. ' for' → logprob: -5.711620330810547
    4. 'while' → logprob: -6.836620330810547
    5. 'for' → logprob: -7.086620330810547
    6. '        
' → logprob: -7.336620330810547
    7. ' while' → logprob: -7.461620330810547
    8. ',' → logprob: -7.836620330810547
    9. ',
' → logprob: -8.836620330810547
    10. ' 
' → logprob: -8.961620330810547

Token 342: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21907736361026764
    2. '       ' → logprob: -1.7190773487091064
    3. ' for' → logprob: -5.0940775871276855
    4. ' while' → logprob: -5.4690775871276855
    5. '        
' → logprob: -6.3440775871276855
    6. ',' → logprob: -6.8440775871276855
    7. 'while' → logprob: -7.2190775871276855
    8. ' 
' → logprob: -7.3440775871276855
    9. 'for' → logprob: -7.8440775871276855
    10. '   ' → logprob: -7.8440775871276855

Token 343: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0531432069838047
    2. 'st' → logprob: -4.42814302444458
    3. 'while' → logprob: -4.55314302444458
    4. 'frame' → logprob: -5.05314302444458
    5. '       ' → logprob: -5.55314302444458
    6. 'pressed' → logprob: -5.55314302444458
    7. ' for' → logprob: -5.67814302444458
    8. 'press' → logprob: -6.55314302444458
    9. 'stop' → logprob: -6.67814302444458
    10. 'index' → logprob: -6.80314302444458

Token 344: ' We' (ID: 1416)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.43671342730522156
    2. 'st' → logprob: -1.311713457107544
    3. 'pressed' → logprob: -3.686713457107544
    4. 'positions' → logprob: -3.811713457107544
    5. 'press' → logprob: -5.061713218688965
    6. 'indices' → logprob: -5.436713218688965
    7. 'results' → logprob: -5.436713218688965
    8. 'buttons' → logprob: -5.686713218688965
    9. 'while' → logprob: -5.811713218688965
    10. 'found' → logprob: -6.186713218688965

Token 345: ' will' (ID: 738)
  Prédit: ' need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' need' → logprob: -1.5173001289367676
    2. 'for' → logprob: -1.7673001289367676
    3. ' for' → logprob: -2.2673001289367676
    4. ':' → logprob: -2.6423001289367676
    5. ' =' → logprob: -2.6423001289367676
    6. ' stopped' → logprob: -3.0173001289367676
    7. ' while' → logprob: -3.3923001289367676
    8. ' have' → logprob: -3.6423001289367676
    9. 'while' → logprob: -3.6423001289367676
    10. 'hile' → logprob: -3.7673001289367676

Token 346: ' simulate' (ID: 66687)
  Prédit: 'simulate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'simulate' → logprob: -0.6699392795562744
    2. ' use' → logprob: -2.7949392795562744
    3. ' simulate' → logprob: -2.7949392795562744
    4. ' for' → logprob: -3.2949392795562744
    5. 'iterate' → logprob: -3.4199392795562744
    6. 'stop' → logprob: -3.5449392795562744
    7. 'try' → logprob: -3.5449392795562744
    8. ' try' → logprob: -3.5449392795562744
    9. ' iterate' → logprob: -3.9199392795562744
    10. ' find' → logprob: -3.9199392795562744

Token 347: ' frame' (ID: 7298)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.9949209690093994
    2. 'while' → logprob: -1.2449209690093994
    3. ' for' → logprob: -2.1199209690093994
    4. 'for' → logprob: -2.2449209690093994
    5. ' until' → logprob: -3.4949209690093994
    6. ' frames' → logprob: -3.6199209690093994
    7. ' the' → logprob: -3.9949209690093994
    8. 'frames' → logprob: -4.11992073059082
    9. 'until' → logprob: -5.11992073059082
    10. '   ' → logprob: -5.24492073059082

Token 348: ' by' (ID: 656)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.06407393515110016
    2. ' by' → logprob: -3.3140740394592285
    3. 'by' → logprob: -4.9390740394592285
    4. ' =' → logprob: -5.3140740394592285
    5. '_' → logprob: -5.8140740394592285
    6. '=' → logprob: -5.8140740394592285
    7. ' s' → logprob: -6.4390740394592285
    8. ' +=' → logprob: -6.5640740394592285
    9. '_by' → logprob: -6.6890740394592285
    10. '-by' → logprob: -7.1890740394592285

Token 349: ' frame' (ID: 7298)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3366645872592926
    2. 'frame' → logprob: -1.3366645574569702
    3. 'time' → logprob: -4.21166467666626
    4. ' frame' → logprob: -5.08666467666626
    5. ' ' → logprob: -6.58666467666626
    6. ' time' → logprob: -7.83666467666626
    7. '   ' → logprob: -9.211664199829102
    8. 'range' → logprob: -9.711664199829102
    9. '0' → logprob: -9.961664199829102
    10. '
' → logprob: -10.086664199829102

Token 350: ' the' (ID: 290)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04260595887899399
    2. ',' → logprob: -4.042605876922607
    3. '
' → logprob: -4.542605876922607
    4. ' while' → logprob: -5.292605876922607
    5. ':' → logprob: -5.792605876922607
    6. ' for' → logprob: -6.417605876922607
    7. '        
' → logprob: -7.292605876922607
    8. '.' → logprob: -7.542605876922607
    9. 'while' → logprob: -7.542605876922607
    10. ',
' → logprob: -7.917605876922607

Token 351: ' RNG' (ID: 165661)
  Prédit: ' stopping'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' stopping' → logprob: -0.8937851786613464
    2. ' presses' → logprob: -1.1437852382659912
    3. ' process' → logprob: -2.768785238265991
    4. ' pressing' → logprob: -3.018785238265991
    5. 'press' → logprob: -3.518785238265991
    6. ' stops' → logprob: -3.893785238265991
    7. 're' → logprob: -4.518784999847412
    8. ' press' → logprob: -4.643784999847412
    9. ' for' → logprob: -4.768784999847412
    10. ' progress' → logprob: -4.893784999847412

Token 352: ' values' (ID: 4824)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9080647230148315
    2. ' while' → logprob: -1.7830647230148315
    3. ':' → logprob: -2.158064842224121
    4. ' value' → logprob: -2.658064842224121
    5. 'while' → logprob: -3.283064842224121
    6. '   ' → logprob: -3.408064842224121
    7. '_value' → logprob: -3.408064842224121
    8. 'value' → logprob: -3.533064842224121
    9. ',' → logprob: -3.658064842224121
    10. ' for' → logprob: -4.533064842224121

Token 353: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14473956823349
    2. ',' → logprob: -2.3947396278381348
    3. '
' → logprob: -4.644739627838135
    4. '.' → logprob: -4.769739627838135
    5. ' while' → logprob: -4.894739627838135
    6. ' for' → logprob: -5.144739627838135
    7. 'while' → logprob: -6.394739627838135
    8. '        
' → logprob: -6.519739627838135
    9. ',
' → logprob: -6.644739627838135
    10. ' ' → logprob: -6.894739627838135

Token 354: ' keeping' (ID: 13958)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.7015165686607361
    2. 'while' → logprob: -2.201516628265381
    3. ' stopped' → logprob: -2.701516628265381
    4. ' frame' → logprob: -2.826516628265381
    5. ' pressed' → logprob: -3.451516628265381
    6. ' stopping' → logprob: -3.576516628265381
    7. 'frame' → logprob: -3.826516628265381
    8. ' presses' → logprob: -3.951516628265381
    9. ' stops' → logprob: -4.076516628265381
    10. 'st' → logprob: -4.076516628265381

Token 355: ' track' (ID: 5290)
  Prédit: 'track'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'track' → logprob: -0.6467821002006531
    2. ' track' → logprob: -0.7717821002006531
    3. 'a' → logprob: -5.021781921386719
    4. ' a' → logprob: -5.271781921386719
    5. 'the' → logprob: -7.396781921386719
    6. ' the' → logprob: -8.396781921386719
    7. 'waiting' → logprob: -8.396781921386719
    8. 'self' → logprob: -8.521781921386719
    9. ' an' → logprob: -8.646781921386719
    10. 'an' → logprob: -9.021781921386719

Token 356: ' when' (ID: 1261)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.04099439084529877
    2. '       ' → logprob: -3.79099440574646
    3. ' ' → logprob: -5.290994167327881
    4. '    ' → logprob: -5.540994167327881
    5. '        ' → logprob: -5.665994167327881
    6. 'of' → logprob: -6.040994167327881
    7. '   ' → logprob: -7.290994167327881
    8. '_' → logprob: -7.290994167327881
    9. '      ' → logprob: -8.165994644165039
    10. '  ' → logprob: -8.665994644165039

Token 357: ' each' (ID: 2454)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -1.1302425861358643
    2. ' each' → logprob: -1.2552425861358643
    3. ' all' → logprob: -2.2552425861358643
    4. ' the' → logprob: -2.5052425861358643
    5. 'all' → logprob: -2.6302425861358643
    6. 'the' → logprob: -2.7552425861358643
    7. 'time' → logprob: -4.130242347717285
    8. 're' → logprob: -4.755242347717285
    9. '   ' → logprob: -5.130242347717285
    10. 'self' → logprob: -5.255242347717285

Token 358: ' reel' (ID: 72033)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.09451784193515778
    2. ' reel' → logprob: -3.094517946243286
    3. 'condition' → logprob: -3.719517946243286
    4. '       ' → logprob: -5.469517707824707
    5. ' condition' → logprob: -5.844517707824707
    6. '   ' → logprob: -6.344517707824707
    7. 'st' → logprob: -6.719517707824707
    8. ' of' → logprob: -6.719517707824707
    9. 'if' → logprob: -7.094517707824707
    10. '_re' → logprob: -7.219517707824707

Token 359: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.872742772102356
    2. ' matches' → logprob: -1.622742772102356
    3. ' is' → logprob: -2.4977426528930664
    4. 'matches' → logprob: -2.4977426528930664
    5. ''s' → logprob: -2.7477426528930664
    6. ' should' → logprob: -3.4977426528930664
    7. 'can' → logprob: -3.4977426528930664
    8. 's' → logprob: -3.8727426528930664
    9. ' will' → logprob: -3.9977426528930664
    10. 'is' → logprob: -4.122742652893066

Token 360: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.10784967243671417
    2. 'be' → logprob: -2.482849597930908
    3. 'stop' → logprob: -4.857849597930908
    4. 'match' → logprob: -5.732849597930908
    5. 'next' → logprob: -5.857849597930908
    6. ' stop' → logprob: -6.857849597930908
    7. ' match' → logprob: -6.982849597930908
    8. ' first' → logprob: -7.232849597930908
    9. ' next' → logprob: -7.232849597930908
    10. 'first' → logprob: -7.232849597930908

Token 361: ' stopped' (ID: 18145)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.0754302591085434
    2. 'matched' → logprob: -2.950430154800415
    3. ' stopped' → logprob: -4.200430393218994
    4. ' matched' → logprob: -5.825430393218994
    5. 'consider' → logprob: -6.950430393218994
    6. '```' → logprob: -7.700430393218994
    7. 'pressed' → logprob: -8.700429916381836
    8. 'found' → logprob: -9.450429916381836
    9. 's' → logprob: -9.450429916381836
    10. 'paused' → logprob: -9.575429916381836

Token 362: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24911248683929443
    2. '.' → logprob: -2.374112606048584
    3. ',' → logprob: -2.874112606048584
    4. ':' → logprob: -3.124112606048584
    5. ' at' → logprob: -4.499112606048584
    6. ' and' → logprob: -4.749112606048584
    7. ' for' → logprob: -6.624112606048584
    8. ' to' → logprob: -6.874112606048584
    9. '=' → logprob: -7.499112606048584
    10. ' =' → logprob: -7.624112606048584

Token 363: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11753412336111069
    2. '
' → logprob: -3.8675341606140137
    3. ' found' → logprob: -4.742534160614014
    4. ' for' → logprob: -4.867534160614014
    5. ' stopped' → logprob: -4.867534160614014
    6. ' stops' → logprob: -4.867534160614014
    7. ' while' → logprob: -5.242534160614014
    8. 'found' → logprob: -5.367534160614014
    9. 'pressed' → logprob: -5.492534160614014
    10. ' pressed' → logprob: -5.742534160614014

Token 364: ' #' (ID: 1069)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.7321130037307739
    2. ' stopped' → logprob: -1.107113003730774
    3. '       ' → logprob: -2.7321128845214844
    4. ' stops' → logprob: -3.2321128845214844
    5. 'stop' → logprob: -3.3571128845214844
    6. 're' → logprob: -3.9821128845214844
    7. 'found' → logprob: -4.982112884521484
    8. ' stop' → logprob: -5.357112884521484
    9. ' found' → logprob: -5.982112884521484
    10. 'pressed' → logprob: -5.982112884521484

Token 365: ' For' (ID: 2214)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.1222650334239006
    2. ' stopped' → logprob: -2.997265100479126
    3. 'stop' → logprob: -3.997265100479126
    4. 'found' → logprob: -4.622264862060547
    5. 're' → logprob: -4.747264862060547
    6. 'pressed' → logprob: -5.247264862060547
    7. '       ' → logprob: -5.497264862060547
    8. ' stops' → logprob: -5.747264862060547
    9. 'positions' → logprob: -5.872264862060547
    10. 'for' → logprob: -6.747264862060547

Token 366: ' reel' (ID: 72033)
  Prédit: ' reel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reel' → logprob: -0.6584828495979309
    2. ' i' → logprob: -1.2834827899932861
    3. 'i' → logprob: -2.033482789993286
    4. 're' → logprob: -3.283482789993286
    5. ' stopped' → logprob: -4.658483028411865
    6. ' idx' → logprob: -5.283483028411865
    7. ' frame' → logprob: -5.658483028411865
    8. 'frame' → logprob: -6.033483028411865
    9. ' _' → logprob: -6.033483028411865
    10. '_' → logprob: -6.158483028411865

Token 367: ' i' (ID: 575)
  Prédit: '_index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.33469152450561523
    2. '_idx' → logprob: -1.3346915245056152
    3. ' in' → logprob: -4.709691524505615
    4. '_' → logprob: -4.709691524505615
    5. '_i' → logprob: -6.334691524505615
    6. 's' → logprob: -7.209691524505615
    7. ' _' → logprob: -8.709692001342773
    8. ' index' → logprob: -9.209692001342773
    9. '_id' → logprob: -9.334692001342773
    10. ' idx' → logprob: -9.584692001342773

Token 368: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02108188532292843
    2. ',' → logprob: -4.521081924438477
    3. 'in' → logprob: -4.771081924438477
    4. ' i' → logprob: -7.396081924438477
    5. ' ,' → logprob: -7.646081924438477
    6. ':' → logprob: -8.646081924438477
    7. ' ' → logprob: -9.771081924438477
    8. ' =' → logprob: -9.896081924438477
    9. '_in' → logprob: -10.771081924438477
    10. '   ' → logprob: -11.146081924438477

Token 369: ' we' (ID: 581)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.5659165382385254
    2. 'i' → logprob: -1.6909165382385254
    3. ' for' → logprob: -1.9409165382385254
    4. 'for' → logprob: -2.9409165382385254
    5. ' next' → logprob: -2.9409165382385254
    6. ' last' → logprob: -3.0659165382385254
    7. ' stopped' → logprob: -3.3159165382385254
    8. '       ' → logprob: -3.5659165382385254
    9. ' idx' → logprob: -3.6909165382385254
    10. 'stop' → logprob: -3.8159165382385254

Token 370: ' want' (ID: 1682)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7613222002983093
    2. 'for' → logprob: -1.511322259902954
    3. '       ' → logprob: -2.261322259902954
    4. ' have' → logprob: -3.261322259902954
    5. ' need' → logprob: -3.386322259902954
    6. ' =' → logprob: -3.511322259902954
    7. ' i' → logprob: -3.636322259902954
    8. ' want' → logprob: -4.636322021484375
    9. ' will' → logprob: -4.636322021484375
    10. ' can' → logprob: -4.886322021484375

Token 371: ' to' (ID: 316)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.13883115351200104
    2. ' in' → logprob: -2.51383113861084
    3. ' to' → logprob: -3.63883113861084
    4. 'i' → logprob: -4.01383113861084
    5. '       ' → logprob: -6.76383113861084
    6. 'in' → logprob: -7.01383113861084
    7. ' the' → logprob: -7.63883113861084
    8. ' range' → logprob: -8.26383113861084
    9. 'to' → logprob: -8.38883113861084
    10. 'range' → logprob: -8.63883113861084

Token 372: ' find' (ID: 1646)
  Prédit: ' find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -1.0400786399841309
    2. 'find' → logprob: -1.2900786399841309
    3. ' i' → logprob: -2.165078639984131
    4. 'i' → logprob: -2.540078639984131
    5. 'stop' → logprob: -2.790078639984131
    6. ' stop' → logprob: -3.540078639984131
    7. ' range' → logprob: -3.915078639984131
    8. 'range' → logprob: -4.165078639984131
    9. 'match' → logprob: -4.415078639984131
    10. ' match' → logprob: -4.665078639984131

Token 373: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.06155874580144882
    2. 'the' → logprob: -3.186558723449707
    3. ' i' → logprob: -5.061558723449707
    4. ' next' → logprob: -5.561558723449707
    5. ' for' → logprob: -6.561558723449707
    6. ' a' → logprob: -6.686558723449707
    7. ' =' → logprob: -6.811558723449707
    8. 'i' → logprob: -7.311558723449707
    9. ' first' → logprob: -7.436558723449707
    10. 'next' → logprob: -8.061558723449707

Token 374: ' earliest' (ID: 48721)
  Prédit: ' earliest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' earliest' → logprob: -1.0224941968917847
    2. ' next' → logprob: -1.1474941968917847
    3. ' first' → logprob: -1.7724941968917847
    4. ' current' → logprob: -3.272494316101074
    5. ' index' → logprob: -3.647494316101074
    6. ' time' → logprob: -4.022494316101074
    7. ' minimal' → logprob: -4.147494316101074
    8. ' frame' → logprob: -4.647494316101074
    9. ' i' → logprob: -5.022494316101074
    10. 'first' → logprob: -5.022494316101074

Token 375: ' frame' (ID: 7298)
  Prédit: ' frame'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' frame' → logprob: -0.07674676179885864
    2. ' time' → logprob: -3.326746702194214
    3. 'frame' → logprob: -3.576746702194214
    4. 'time' → logprob: -5.326746940612793
    5. '_frame' → logprob: -6.201746940612793
    6. ' i' → logprob: -7.201746940612793
    7. ' index' → logprob: -7.576746940612793
    8. ' space' → logprob: -8.576746940612793
    9. '=' → logprob: -8.576746940612793
    10. ' =' → logprob: -8.576746940612793

Token 376: ' >=' (ID: 5064)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.8681764602661133
    2. ' where' → logprob: -1.3681764602661133
    3. ',' → logprob: -2.7431764602661133
    4. ' >=' → logprob: -3.1181764602661133
    5. ' i' → logprob: -3.2431764602661133
    6. '       ' → logprob: -3.3681764602661133
    7. ' =' → logprob: -3.6181764602661133
    8. ' after' → logprob: -3.7431764602661133
    9. ' when' → logprob: -3.9931764602661133
    10. ' for' → logprob: -4.368176460266113

Token 377: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.20312117040157318
    2. '1' → logprob: -1.9531211853027344
    3. '0' → logprob: -3.2031211853027344
    4. ' time' → logprob: -6.828121185302734
    5. ' ' → logprob: -8.828121185302734
    6. '(time' → logprob: -10.328121185302734
    7. 'current' → logprob: -11.078121185302734
    8. '"time' → logprob: -11.265621185302734
    9. 'max' → logprob: -11.703121185302734
    10. '=time' → logprob: -11.828121185302734

Token 378: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.0296630859375
    2. '       ' → logprob: -1.1546630859375
    3. ' where' → logprob: -1.6546630859375
    4. ' +' → logprob: -2.5296630859375
    5. ' for' → logprob: -4.1546630859375
    6. ' at' → logprob: -4.4046630859375
    7. ',' → logprob: -4.7796630859375
    8. ' to' → logprob: -4.7796630859375
    9. ' that' → logprob: -5.7796630859375
    10. '           ' → logprob: -6.0296630859375

Token 379: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001785112835932523
    2. ' ' → logprob: -8.750178337097168
    3. '0' → logprob: -10.875178337097168
    4. '
' → logprob: -14.875178337097168
    5. '   ' → logprob: -15.500178337097168
    6. 'i' → logprob: -16.187679290771484
    7. ' (' → logprob: -16.500179290771484
    8. '(' → logprob: -16.687679290771484
    9. ' i' → logprob: -16.812679290771484
    10. '+' → logprob: -16.937679290771484

Token 380: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001705246395431459
    2. '0' → logprob: -8.750170707702637
    3. ' ' → logprob: -11.500170707702637
    4. '(' → logprob: -13.875170707702637
    5. 'i' → logprob: -15.000170707702637
    6. ' (' → logprob: -15.625170707702637
    7. '
' → logprob: -15.875170707702637
    8. '(i' → logprob: -16.00016975402832
    9. '   ' → logprob: -16.62516975402832
    10. '+' → logprob: -17.75016975402832

Token 381: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7423202991485596
    2. ' where' → logprob: -1.6173202991485596
    3. ' for' → logprob: -2.2423202991485596
    4. ' that' → logprob: -2.2423202991485596
    5. ' to' → logprob: -2.8673202991485596
    6. ',' → logprob: -3.4923202991485596
    7. '           ' → logprob: -5.4923200607299805
    8. '        ' → logprob: -5.7423200607299805
    9. ' (' → logprob: -6.2423200607299805
    10. ' and' → logprob: -6.2423200607299805

Token 382: 'because' (ID: 53081)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03268854692578316
    2. ' where' → logprob: -3.907688617706299
    3. '       ' → logprob: -5.407688617706299
    4. ' )' → logprob: -5.532688617706299
    5. ' that' → logprob: -6.282688617706299
    6. ' and' → logprob: -7.782688617706299
    7. 'where' → logprob: -7.907688617706299
    8. 'that' → logprob: -8.65768814086914
    9. ' to' → logprob: -8.90768814086914
    10. '           ' → logprob: -9.03268814086914

Token 383: ' pressing' (ID: 45097)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.0439246892929077
    2. ' we' → logprob: -1.2939246892929077
    3. ' each' → logprob: -2.4189248085021973
    4. 'we' → logprob: -2.7939248085021973
    5. 'the' → logprob: -2.7939248085021973
    6. ' pressing' → logprob: -3.0439248085021973
    7. ' of' → logprob: -3.2939248085021973
    8. 'each' → logprob: -3.9189248085021973
    9. ' presses' → logprob: -4.668924808502197
    10. ' for' → logprob: -4.668924808502197

Token 384: ' stops' (ID: 29924)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.06640126556158066
    2. ' a' → logprob: -3.191401243209839
    3. ' ' → logprob: -4.691401481628418
    4. 'the' → logprob: -4.816401481628418
    5. ' space' → logprob: -6.316401481628418
    6. ')' → logprob: -6.816401481628418
    7. ' button' → logprob: -6.941401481628418
    8. ' buttons' → logprob: -7.191401481628418
    9. ' )' → logprob: -8.066401481628418
    10. 'space' → logprob: -8.691401481628418

Token 385: ' left' (ID: 3561)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.06603553146123886
    2. 'the' → logprob: -3.191035509109497
    3. ' a' → logprob: -4.566035747528076
    4. ' at' → logprob: -4.691035747528076
    5. ' that' → logprob: -6.941035747528076
    6. ')' → logprob: -7.066035747528076
    7. ' each' → logprob: -7.941035747528076
    8. 'a' → logprob: -8.316035270690918
    9. ' on' → logprob: -8.816035270690918
    10. ' them' → logprob: -8.941035270690918

Token 386: 'most' (ID: 5309)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.31643784046173096
    2. '_' → logprob: -2.0664377212524414
    3. ' -' → logprob: -2.0664377212524414
    4. ')' → logprob: -4.941437721252441
    5. '_re' → logprob: -5.441437721252441
    6. ' )' → logprob: -6.566437721252441
    7. ' ' → logprob: -6.566437721252441
    8. 'most' → logprob: -6.816437721252441
    9. ' _' → logprob: -7.816437721252441
    10. ',' → logprob: -8.191437721252441

Token 387: ')
' (ID: 446)
  Prédit: ' reel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' reel' → logprob: -0.8724337220191956
    2. 're' → logprob: -1.8724336624145508
    3. ')' → logprob: -2.247433662414551
    4. ' ' → logprob: -2.497433662414551
    5. ' )' → logprob: -2.872433662414551
    6. '_re' → logprob: -2.872433662414551
    7. ' at' → logprob: -3.622433662414551
    8. ' reels' → logprob: -4.122433662414551
    9. '+' → logprob: -4.247433662414551
    10. ' +' → logprob: -4.372433662414551

Token 388: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39766085147857666
    2. ' where' → logprob: -2.022660732269287
    3. ' that' → logprob: -3.022660732269287
    4. ' ' → logprob: -3.022660732269287
    5. '        ' → logprob: -3.647660732269287
    6. ' for' → logprob: -4.147660732269287
    7. ',' → logprob: -4.522660732269287
    8. ' to' → logprob: -4.522660732269287
    9. ')' → logprob: -5.397660732269287
    10. ' +' → logprob: -5.522660732269287

Token 389: ' #' (ID: 1069)
  Prédit: ' where'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' where' → logprob: -1.0937076807022095
    2. '       ' → logprob: -1.3437076807022095
    3. '+' → logprob: -1.9687076807022095
    4. ' that' → logprob: -2.34370756149292
    5. ' for' → logprob: -3.09370756149292
    6. ' at' → logprob: -4.09370756149292
    7. ',' → logprob: -4.09370756149292
    8. ' to' → logprob: -4.21870756149292
    9. ' while' → logprob: -4.21870756149292
    10. ' after' → logprob: -4.59370756149292

Token 390: ' where' (ID: 1919)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7611489295959473
    2. ' for' → logprob: -1.3861489295959473
    3. ' that' → logprob: -1.6361489295959473
    4. 'for' → logprob: -3.7611489295959473
    5. ' where' → logprob: -4.011148929595947
    6. ' to' → logprob: -4.261148929595947
    7. 'that' → logprob: -4.386148929595947
    8. ' i' → logprob: -5.636148929595947
    9. ' at' → logprob: -6.136148929595947
    10. ' after' → logprob: -6.511148929595947

Token 391: ' RNG' (ID: 165661)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2415577918291092
    2. ' self' → logprob: -1.6165578365325928
    3. ' all' → logprob: -4.366557598114014
    4. 'all' → logprob: -6.616557598114014
    5. ' the' → logprob: -6.991557598114014
    6. 'the' → logprob: -7.866557598114014
    7. '(self' → logprob: -7.991557598114014
    8. '       ' → logprob: -9.116558074951172
    9. '   ' → logprob: -9.866558074951172
    10. ' any' → logprob: -10.116558074951172

Token 392: ' matches' (ID: 15248)
  Prédit: ' value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' value' → logprob: -1.191717267036438
    2. '.next' → logprob: -1.441717267036438
    3. 'value' → logprob: -1.816717267036438
    4. '_value' → logprob: -2.1917171478271484
    5. '.value' → logprob: -3.1917171478271484
    6. ' .' → logprob: -3.3167171478271484
    7. '.current' → logprob: -3.8167171478271484
    8. '.' → logprob: -3.9417171478271484
    9. ' %' → logprob: -4.441717147827148
    10. '   ' → logprob: -4.816717147827148

Token 393: ' conditions' (ID: 6409)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.5155795812606812
    2. ' self' → logprob: -1.5155795812606812
    3. '(self' → logprob: -2.1405797004699707
    4. 'self' → logprob: -3.1405797004699707
    5. '       ' → logprob: -4.640579700469971
    6. 'the' → logprob: -5.140579700469971
    7. ' for' → logprob: -6.890579700469971
    8. '=self' → logprob: -6.890579700469971
    9. ' (' → logprob: -7.015579700469971
    10. ' with' → logprob: -7.140579700469971

Token 394: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.2892797291278839
    2. '       ' → logprob: -2.1642796993255615
    3. ' for' → logprob: -3.1642796993255615
    4. '[' → logprob: -3.2892796993255615
    5. ' and' → logprob: -4.289279937744141
    6. '.' → logprob: -4.664279937744141
    7. '[next' → logprob: -5.039279937744141
    8. ',' → logprob: -5.289279937744141
    9. '           ' → logprob: -5.789279937744141
    10. '[self' → logprob: -6.164279937744141

Token 395: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0030459275003522635
    2. ']' → logprob: -6.628046035766602
    3. '.value' → logprob: -7.253046035766602
    4. '[i' → logprob: -7.628046035766602
    5. ').' → logprob: -8.503046035766602
    6. '])' → logprob: -8.628046035766602
    7. ' ].' → logprob: -10.253046035766602
    8. '.' → logprob: -10.628046035766602
    9. '.i' → logprob: -10.878046035766602
    10. '.index' → logprob: -11.503046035766602

Token 396: 'target' (ID: 10857)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0891772508621216
    2. ' for' → logprob: -1.2141772508621216
    3. '       ' → logprob: -1.5891772508621216
    4. 'i' → logprob: -3.089177131652832
    5. 'value' → logprob: -3.089177131652832
    6. ' i' → logprob: -4.339177131652832
    7. '   ' → logprob: -4.714177131652832
    8. 'while' → logprob: -4.839177131652832
    9. 'current' → logprob: -4.839177131652832
    10. '
' → logprob: -5.089177131652832

Token 397: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.0012310652527958155
    2. '_values' → logprob: -7.0012311935424805
    3. 's' → logprob: -9.00123119354248
    4. 'value' → logprob: -9.37623119354248
    5. '_' → logprob: -10.87623119354248
    6. ' value' → logprob: -11.12623119354248
    7. '[i' → logprob: -11.37623119354248
    8. '       ' → logprob: -11.50123119354248
    9. ']' → logprob: -11.87623119354248
    10. '_condition' → logprob: -11.87623119354248

Token 398: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06855155527591705
    2. '
' → logprob: -3.318551540374756
    3. '.' → logprob: -4.068551540374756
    4. ',' → logprob: -4.943551540374756
    5. '.
' → logprob: -6.818551540374756
    6. ' for' → logprob: -6.943551540374756
    7. '        
' → logprob: -7.068551540374756
    8. ':' → logprob: -7.443551540374756
    9. ',
' → logprob: -7.693551540374756
    10. '<|end|>' → logprob: -8.068552017211914

Token 399: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.034923404455184937
    2. '
' → logprob: -3.9099233150482178
    3. ' for' → logprob: -5.284923553466797
    4. '\n' → logprob: -6.284923553466797
    5. ' 
' → logprob: -6.909923553466797
    6. '   ' → logprob: -6.909923553466797
    7. '        
' → logprob: -7.034923553466797
    8. 'n' → logprob: -7.159923553466797
    9. '<|end|>' → logprob: -7.534923553466797
    10. '  
' → logprob: -7.659923553466797

Token 400: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.040989637374878
    2. '       ' → logprob: -1.165989637374878
    3. ' for' → logprob: -1.165989637374878
    4. ' i' → logprob: -5.415989875793457
    5. 'i' → logprob: -5.540989875793457
    6. 'frame' → logprob: -5.790989875793457
    7. 'result' → logprob: -5.915989875793457
    8. 'time' → logprob: -6.290989875793457
    9. 'results' → logprob: -6.665989875793457
    10. 'n' → logprob: -7.290989875793457

Token 401: ' Then' (ID: 7801)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.23328110575675964
    2. '       ' → logprob: -2.858281135559082
    3. 'st' → logprob: -2.983281135559082
    4. ' for' → logprob: -3.733281135559082
    5. 'time' → logprob: -4.108281135559082
    6. 'result' → logprob: -4.483281135559082
    7. 'frame' → logprob: -4.483281135559082
    8. 'results' → logprob: -4.733281135559082
    9. 'found' → logprob: -5.108281135559082
    10. 'i' → logprob: -5.108281135559082

Token 402: ' update' (ID: 4027)
  Prédit: ' time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' time' → logprob: -0.22504879534244537
    2. '       ' → logprob: -2.225048780441284
    3. 'time' → logprob: -2.850048780441284
    4. ' for' → logprob: -3.475048780441284
    5. 'for' → logprob: -6.600049018859863
    6. ' i' → logprob: -7.225049018859863
    7. '
' → logprob: -7.850049018859863
    8. ' if' → logprob: -7.975049018859863
    9. '        ' → logprob: -8.100049018859863
    10. '           ' → logprob: -8.100049018859863

Token 403: ' time' (ID: 1058)
  Prédit: ' time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' time' → logprob: -0.3137088418006897
    2. 'time' → logprob: -1.313708782196045
    3. '       ' → logprob: -8.563709259033203
    4. '
' → logprob: -8.688709259033203
    5. '   ' → logprob: -10.063709259033203
    6. ' the' → logprob: -11.563709259033203
    7. ' current' → logprob: -11.688709259033203
    8. '           ' → logprob: -12.063709259033203
    9. '	time' → logprob: -12.313709259033203
    10. '_time' → logprob: -13.063709259033203

Token 404: ' to' (ID: 316)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.2215932309627533
    2. '+=' → logprob: -1.9715932607650757
    3. ' =' → logprob: -3.346593141555786
    4. '=' → logprob: -3.721593141555786
    5. ' ' → logprob: -9.971592903137207
    6. '+' → logprob: -10.846592903137207
    7. ']+=' → logprob: -11.596592903137207
    8. '
' → logprob: -11.721592903137207
    9. '    ' → logprob: -11.846592903137207
    10. ' 
' → logprob: -11.846592903137207

Token 405: ' that' (ID: 484)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.3242839574813843
    2. ' time' → logprob: -1.3242839574813843
    3. ' that' → logprob: -5.699284076690674
    4. 'the' → logprob: -5.824284076690674
    5. ' the' → logprob: -6.324284076690674
    6. 'that' → logprob: -6.824284076690674
    7. 'frame' → logprob: -7.574284076690674
    8. ' frame' → logprob: -8.574283599853516
    9. ' current' → logprob: -8.824283599853516
    10. 'found' → logprob: -8.949283599853516

Token 406: ' frame' (ID: 7298)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8483824133872986
    2. 'frame' → logprob: -0.8483824133872986
    3. ' +' → logprob: -2.8483824729919434
    4. ' frame' → logprob: -3.4733824729919434
    5. 'time' → logprob: -3.7233824729919434
    6. 'i' → logprob: -5.223382472991943
    7. 'value' → logprob: -5.348382472991943
    8. 'found' → logprob: -5.598382472991943
    9. 'match' → logprob: -5.848382472991943
    10. '_frame' → logprob: -5.973382472991943

Token 407: ' index' (ID: 3472)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17613914608955383
    2. '
' → logprob: -1.9261391162872314
    3. ' +' → logprob: -4.5511393547058105
    4. '+' → logprob: -6.0511393547058105
    5. ',' → logprob: -7.0511393547058105
    6. '        
' → logprob: -7.5511393547058105
    7. '<|end|>' → logprob: -8.301138877868652
    8. '
' → logprob: -8.426138877868652
    9. ' for' → logprob: -8.801138877868652
    10. ',
' → logprob: -8.926138877868652

Token 408: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5698952674865723
    2. ' +' → logprob: -1.5698952674865723
    3. '+' → logprob: -1.9448952674865723
    4. '
' → logprob: -2.5698952674865723
    5. '        
' → logprob: -6.319895267486572
    6. '+
' → logprob: -6.819895267486572
    7. '<|end|>' → logprob: -7.194895267486572
    8. ',' → logprob: -7.319895267486572
    9. ' +
' → logprob: -7.944895267486572
    10. '<|end|>' → logprob: -7.944895267486572

Token 409: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001137358252890408
    2. '
' → logprob: -7.7511372566223145
    3. ' for' → logprob: -8.001137733459473
    4. '        
' → logprob: -8.626137733459473
    5. 'for' → logprob: -9.376137733459473
    6. '   ' → logprob: -10.376137733459473
    7. 'n' → logprob: -11.376137733459473
    8. ' i' → logprob: -11.876137733459473
    9. '    
' → logprob: -12.001137733459473
    10. '	' → logprob: -12.251137733459473

Token 410: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.6856072545051575
    2. ' for' → logprob: -1.1856071949005127
    3. '       ' → logprob: -1.6856071949005127
    4. ' i' → logprob: -6.685607433319092
    5. 'i' → logprob: -7.060607433319092
    6. 'frame' → logprob: -7.060607433319092
    7. 'result' → logprob: -7.810607433319092
    8. 'time' → logprob: -7.935607433319092
    9. ' time' → logprob: -8.435606956481934
    10. 'current' → logprob: -8.560606956481934

Token 411: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.02978995256125927
    2. 'i' → logprob: -3.529789924621582
    3. '_i' → logprob: -11.654789924621582
    4. '	i' → logprob: -11.779789924621582
    5. ' ' → logprob: -12.154789924621582
    6. ',' → logprob: -12.279789924621582
    7. '   ' → logprob: -13.154789924621582
    8. ' idx' → logprob: -13.154789924621582
    9. ' index' → logprob: -13.904789924621582
    10. '_' → logprob: -13.904789924621582

Token 412: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016381077468395233
    2. 'in' → logprob: -4.14138126373291
    3. ' ' → logprob: -8.39138126373291
    4. ',' → logprob: -9.51638126373291
    5. ' i' → logprob: -10.76638126373291
    6. ' ,' → logprob: -12.14138126373291
    7. 'import' → logprob: -12.76638126373291
    8. ')' → logprob: -13.01638126373291
    9. '<|end|>' → logprob: -13.39138126373291
    10. '	in' → logprob: -13.51638126373291

Token 413: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.20142708718776703
    2. 'range' → logprob: -1.7014271020889282
    3. ' ' → logprob: -12.076427459716797
    4. '	range' → logprob: -12.326427459716797
    5. '   ' → logprob: -13.826427459716797
    6. '(range' → logprob: -13.951427459716797
    7. ' xrange' → logprob: -13.951427459716797
    8. '  ' → logprob: -14.701427459716797
    9. '    ' → logprob: -15.576427459716797
    10. '_range' → logprob: -16.451427459716797

Token 414: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.578071117401123
    2. '(self' → logprob: -0.828071117401123
    3. '(n' → logprob: -7.203071117401123
    4. ' (' → logprob: -7.578071117401123
    5. '(
' → logprob: -7.828071117401123
    6. '(len' → logprob: -7.953071117401123
    7. '(i' → logprob: -9.328071594238281
    8. '(s' → logprob: -10.578071594238281
    9. 'self' → logprob: -13.328071594238281
    10. ')' → logprob: -13.703071594238281

Token 415: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.0017688281368464231
    2. '.' → logprob: -6.376769065856934
    3. '.i' → logprob: -10.751769065856934
    4. ' .' → logprob: -10.876769065856934
    5. '.
' → logprob: -11.626769065856934
    6. ').' → logprob: -12.251769065856934
    7. ')' → logprob: -12.376769065856934
    8. 'n' → logprob: -12.501769065856934
    9. '.)' → logprob: -13.626769065856934
    10. '   ' → logprob: -14.876769065856934

Token 416: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5761518478393555
    2. '):
' → logprob: -0.8261518478393555
    3. ' ):' → logprob: -9.326151847839355
    4. '):
' → logprob: -9.951151847839355
    5. ' ):
' → logprob: -10.451151847839355
    6. '       ' → logprob: -10.951151847839355
    7. ':' → logprob: -11.451151847839355
    8. ')' → logprob: -11.701151847839355
    9. '   ' → logprob: -12.076151847839355
    10. '):

' → logprob: -12.951151847839355

Token 417: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003996123094111681
    2. '
' → logprob: -6.003995895385742
    3. '        
' → logprob: -7.253995895385742
    4. '           ' → logprob: -8.128995895385742
    5. ' if' → logprob: -9.003995895385742
    6. ':
' → logprob: -9.753995895385742
    7. '  
' → logprob: -9.878995895385742
    8. '<|end|>' → logprob: -9.878995895385742
    9. ',' → logprob: -10.003995895385742
    10. ':' → logprob: -10.378995895385742

Token 418: ' target' (ID: 3783)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5244780778884888
    2. '           ' → logprob: -1.8994780778884888
    3. 'while' → logprob: -2.024477958679199
    4. 'found' → logprob: -2.899477958679199
    5. 'target' (adapté à ' target') → logprob: -3.899477958679199
    6. '       ' → logprob: -3.899477958679199
    7. 'frame' → logprob: -4.149477958679199
    8. 'time' → logprob: -5.524477958679199
    9. 'value' → logprob: -5.649477958679199
    10. ' if' → logprob: -6.274477958679199

Token 419: ' =' (ID: 314)
  Prédit: '_value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.014535190537571907
    2. ' =' → logprob: -4.514535427093506
    3. '=' → logprob: -6.264535427093506
    4. '_val' → logprob: -6.514535427093506
    5. '_' → logprob: -9.514534950256348
    6. 'value' → logprob: -11.639534950256348
    7. 'Value' → logprob: -12.264534950256348
    8. '=_' → logprob: -12.889534950256348
    9. '_values' → logprob: -13.264534950256348
    10. '_target' → logprob: -13.764534950256348

Token 420: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.029751529917120934
    2. ' self' → logprob: -3.5297515392303467
    3. '(self' → logprob: -14.904751777648926
    4. '	self' → logprob: -15.529751777648926
    5. '[self' → logprob: -15.654751777648926
    6. '       ' → logprob: -16.02975082397461
    7. '=self' → logprob: -16.15475082397461
    8. '   ' → logprob: -16.27975082397461
    9. '           ' → logprob: -16.65475082397461
    10. ' ' → logprob: -18.02975082397461

Token 421: '.conditions' (ID: 195697)
  Prédit: '.conditions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.conditions' → logprob: -0.00021748353901784867
    2. 'conditions' → logprob: -8.62521743774414
    3. '.' → logprob: -10.25021743774414
    4. '.condition' → logprob: -13.50021743774414
    5. ' .' → logprob: -14.87521743774414
    6. ' conditions' → logprob: -14.87521743774414
    7. '.targets' → logprob: -15.62521743774414
    8. '.target' → logprob: -16.00021743774414
    9. '.con' → logprob: -17.00021743774414
    10. '.
' → logprob: -17.00021743774414

Token 422: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0683535037969705e-05
    2. '[' → logprob: -11.50001049041748
    3. '[
' → logprob: -15.50001049041748
    4. ' [' → logprob: -15.87501049041748
    5. '```' → logprob: -16.375011444091797
    6. '[I' → logprob: -16.875011444091797
    7. '[s' → logprob: -17.125011444091797
    8. '[self' → logprob: -17.375011444091797
    9. '[index' → logprob: -17.375011444091797
    10. 's' → logprob: -17.375011444091797

Token 423: '].' (ID: 1651)
  Prédit: '.target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.target' → logprob: -0.145731121301651
    2. '].' → logprob: -2.145731210708618
    3. ').' → logprob: -4.395730972290039
    4. '.' → logprob: -5.145730972290039
    5. '}.' → logprob: -8.520730972290039
    6. '.value' → logprob: -9.270730972290039
    7. ' .' → logprob: -9.395730972290039
    8. '.token' → logprob: -10.520730972290039
    9. ' ].' → logprob: -11.770730972290039
    10. '.user' → logprob: -11.895730972290039

Token 424: 'target' (ID: 10857)
  Prédit: 'target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.02054760977625847
    2. 'matches' → logprob: -3.89554762840271
    3. ' target' → logprob: -12.895547866821289
    4. 'value' → logprob: -14.145547866821289
    5. 'match' → logprob: -14.270547866821289
    6. '	target' → logprob: -14.645547866821289
    7. ' matches' → logprob: -14.645547866821289
    8. '(target' → logprob: -15.520547866821289
    9. 'Matches' → logprob: -16.02054786682129
    10. '   ' → logprob: -16.02054786682129

Token 425: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -3.4121114822482923e-06
    2. 'value' → logprob: -12.750003814697266
    3. '_' → logprob: -14.750003814697266
    4. '_val' → logprob: -16.500003814697266
    5. 'alue' → logprob: -17.875003814697266
    6. 'Value' → logprob: -18.125003814697266
    7. '_values' → logprob: -18.500003814697266
    8. ' _' → logprob: -18.500003814697266
    9. ' value' → logprob: -18.625003814697266
    10. '_VALUE' → logprob: -18.750003814697266

Token 426: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.283972829580307
    2. '
' → logprob: -1.4089728593826294
    3. '            
' → logprob: -6.78397274017334
    4. 'while' → logprob: -7.15897274017334
    5. ' while' → logprob: -7.65897274017334
    6. ',' → logprob: -9.40897274017334
    7. '
' → logprob: -9.65897274017334
    8. '  
' → logprob: -9.90897274017334
    9. ' if' → logprob: -10.03397274017334
    10. '    
' → logprob: -10.28397274017334

Token 427: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0010030358098447323
    2. 'if' → logprob: -7.501003265380859
    3. ' if' → logprob: -8.37600326538086
    4. '
' → logprob: -9.00100326538086
    5. '            
' → logprob: -10.12600326538086
    6. 'while' → logprob: -10.62600326538086
    7. '       ' → logprob: -11.00100326538086
    8. ' while' → logprob: -13.00100326538086
    9. '        
' → logprob: -13.37600326538086
    10. '   ' → logprob: -13.50100326538086

Token 428: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.03179042413830757
    2. 'found' → logprob: -4.406790256500244
    3. 'while' → logprob: -4.781790256500244
    4. '           ' → logprob: -4.781790256500244
    5. 'frame' → logprob: -6.281790256500244
    6. '#' → logprob: -8.531790733337402
    7. ' if' → logprob: -9.406790733337402
    8. 'value' → logprob: -9.406790733337402
    9. '       ' → logprob: -10.156790733337402
    10. 'match' → logprob: -11.531790733337402

Token 429: ' i' (ID: 575)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.4863363802433014
    2. ' current' → logprob: -1.486336350440979
    3. 'target' → logprob: -1.986336350440979
    4. ' target' → logprob: -4.1113362312316895
    5. 'self' → logprob: -5.3613362312316895
    6. ' self' → logprob: -7.4863362312316895
    7. 'time' → logprob: -10.361336708068848
    8. '   ' → logprob: -11.236336708068848
    9. '(current' → logprob: -11.736336708068848
    10. '	current' → logprob: -11.986336708068848

Token 430: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.014511817134916782
    2. '==' → logprob: -4.264511585235596
    3. ' ' → logprob: -8.639512062072754
    4. ' >' → logprob: -9.764512062072754
    5. '0' → logprob: -10.389512062072754
    6. ' =' → logprob: -10.639512062072754
    7. '=' → logprob: -10.639512062072754
    8. ' and' → logprob: -12.014512062072754
    9. ':' → logprob: -12.264512062072754
    10. '>' → logprob: -12.639512062072754

Token 431: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1426754593849182
    2. ' ' → logprob: -2.0176753997802734
    3. '=' → logprob: -15.767675399780273
    4. ' ' → logprob: -16.705175399780273
    5. '<|end|>' → logprob: -17.517675399780273
    6. '   ' → logprob: -17.580175399780273
    7. '
' → logprob: -17.705175399780273
    8. '۰' → logprob: -17.830175399780273
    9. '#' → logprob: -18.142675399780273
    10. '1' → logprob: -18.205175399780273

Token 432: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000804745068307966
    2. ' ' → logprob: -7.125804901123047
    3. '   ' → logprob: -15.625804901123047
    4. '=' → logprob: -16.750804901123047
    5. 'self' → logprob: -17.688304901123047
    6. 'i' → logprob: -18.313304901123047
    7. '       ' → logprob: -18.438304901123047
    8. '  ' → logprob: -18.563304901123047
    9. '۰' → logprob: -18.688304901123047
    10. '     ' → logprob: -18.750804901123047

Token 433: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.023972000926733017
    2. 'and' → logprob: -3.7739720344543457
    3. ':
' → logprob: -7.523972034454346
    4. '           ' → logprob: -8.773971557617188
    5. ':' → logprob: -10.648971557617188
    6. ' ' → logprob: -13.023971557617188
    7. '               ' → logprob: -13.148971557617188
    8. '       ' → logprob: -13.898971557617188
    9. '	and' → logprob: -14.273971557617188
    10. '   ' → logprob: -14.648971557617188

Token 434: ' current' (ID: 2208)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.6744036674499512
    2. 'current' → logprob: -1.1744036674499512
    3. ' current' → logprob: -2.299403667449951
    4. ' target' → logprob: -2.674403667449951
    5. 'self' → logprob: -4.549403667449951
    6. ' self' → logprob: -6.424403667449951
    7. '   ' → logprob: -11.29940414428711
    8. '(target' → logprob: -11.54940414428711
    9. 'time' → logprob: -11.92440414428711
    10. '	target' → logprob: -12.04940414428711

Token 435: '_rng' (ID: 168456)
  Prédit: '_rng'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rng' → logprob: -0.00023154958034865558
    2. '_' → logprob: -9.000231742858887
    3. ' ==' → logprob: -10.250231742858887
    4. '==' → logprob: -10.625231742858887
    5. 'rng' → logprob: -11.250231742858887
    6. '_r' → logprob: -11.500231742858887
    7. '_value' → logprob: -12.000231742858887
    8. ' ' → logprob: -12.250231742858887
    9. ' _' → logprob: -12.875231742858887
    10. '   ' → logprob: -13.125231742858887

Token 436: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.001853792811743915
    2. ' ==' → logprob: -7.001853942871094
    3. ' _' → logprob: -8.251853942871094
    4. ' ' → logprob: -8.501853942871094
    5. '_' → logprob: -8.626853942871094
    6. 'value' → logprob: -8.876853942871094
    7. '==' → logprob: -9.251853942871094
    8. ' value' → logprob: -10.251853942871094
    9. 'Value' → logprob: -11.751853942871094
    10. '_val' → logprob: -11.876853942871094

Token 437: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3132699131965637
    2. '==' → logprob: -1.313269853591919
    3. '=' → logprob: -11.93826961517334
    4. '==
' → logprob: -13.81326961517334
    5. ' ' → logprob: -14.93826961517334
    6. ' =' → logprob: -16.063270568847656
    7. ' ==
' → logprob: -16.813270568847656
    8. '	' → logprob: -17.188270568847656
    9. ']==' → logprob: -18.063270568847656
    10. ')==' → logprob: -18.188270568847656

Token 438: ' target' (ID: 3783)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.048587486147880554
    2. ' target' → logprob: -3.0485875606536865
    3. '	target' → logprob: -16.798587799072266
    4. '(target' → logprob: -17.423587799072266
    5. '[target' → logprob: -18.548587799072266
    6. 't' → logprob: -18.798587799072266
    7. 'self' → logprob: -19.673587799072266
    8. '
' → logprob: -19.673587799072266
    9. ' ' → logprob: -19.798587799072266
    10. '           ' → logprob: -19.798587799072266

Token 439: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6933634281158447
    2. ':
' → logprob: -0.6933634281158447
    3. '           ' → logprob: -8.943363189697266
    4. '               ' → logprob: -10.193363189697266
    5. ':return' → logprob: -10.693363189697266
    6. ':
' → logprob: -10.818363189697266
    7. '):
' → logprob: -12.818363189697266
    8. ':

' → logprob: -13.693363189697266
    9. '       ' → logprob: -14.943363189697266
    10. '):' → logprob: -15.193363189697266

Token 440: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1078610047698021
    2. ':
' → logprob: -2.607861042022705
    3. ':' → logprob: -3.732861042022705
    4. '           ' → logprob: -5.732861042022705
    5. 'continue' → logprob: -7.482861042022705
    6. '
' → logprob: -7.732861042022705
    7. ' continue' → logprob: -8.732860565185547
    8. ',' → logprob: -10.482860565185547
    9. '0' → logprob: -10.607860565185547
    10. '              ' → logprob: -11.107860565185547

Token 441: ' #' (ID: 1069)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.11364046484231949
    2. ' time' → logprob: -2.488640546798706
    3. '               ' → logprob: -4.238640308380127
    4. 'continue' → logprob: -4.863640308380127
    5. '           ' → logprob: -6.863640308380127
    6. ' continue' → logprob: -6.988640308380127
    7. 'return' → logprob: -9.113640785217285
    8. 'pass' → logprob: -9.613640785217285
    9. '0' → logprob: -10.363640785217285
    10. '                   ' → logprob: -10.738640785217285

Token 442: ' Can' (ID: 4101)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.02783219702541828
    2. 'continue' → logprob: -4.40283203125
    3. ' time' → logprob: -4.52783203125
    4. '               ' → logprob: -6.40283203125
    5. '           ' → logprob: -6.52783203125
    6. 'pass' → logprob: -7.65283203125
    7. ' continue' → logprob: -7.90283203125
    8. '#' → logprob: -8.15283203125
    9. 'return' → logprob: -9.52783203125
    10. '   ' → logprob: -10.27783203125

Token 443: ' stop' (ID: 5666)
  Prédit: ' stop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stop' → logprob: -0.1709936559200287
    2. 'stop' → logprob: -1.920993685722351
    3. ' be' → logprob: -4.795993804931641
    4. ' continue' → logprob: -7.420993804931641
    5. '_stop' → logprob: -7.420993804931641
    6. 'press' → logprob: -8.29599380493164
    7. 'continue' → logprob: -8.54599380493164
    8. ' press' → logprob: -8.79599380493164
    9. '	stop' → logprob: -9.17099380493164
    10. ' return' → logprob: -9.17099380493164

Token 444: ' first' (ID: 1577)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 're' → logprob: -1.125857949256897
    2. ' at' → logprob: -1.125857949256897
    3. ' the' → logprob: -1.875857949256897
    4. ' this' → logprob: -2.7508578300476074
    5. 'the' → logprob: -3.0008578300476074
    6. '           ' → logprob: -3.7508578300476074
    7. 'at' → logprob: -3.7508578300476074
    8. 'this' → logprob: -4.250857830047607
    9. 'im' → logprob: -5.125857830047607
    10. ' immediately' → logprob: -5.875857830047607

Token 445: ' reel' (ID: 72033)
  Prédit: ' reel'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reel' → logprob: -0.5954978466033936
    2. 're' → logprob: -0.8454978466033936
    3. ' at' → logprob: -4.220498085021973
    4. '_re' → logprob: -5.970498085021973
    5. '           ' → logprob: -7.470498085021973
    6. 'Re' → logprob: -7.595498085021973
    7. ' ' → logprob: -8.845498085021973
    8. '	re' → logprob: -9.220498085021973
    9. ' re' → logprob: -9.220498085021973
    10. 'at' → logprob: -9.595498085021973

Token 446: ' immediately' (ID: 10731)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.14941343665122986
    2. '           ' → logprob: -2.1494133472442627
    3. '               ' → logprob: -4.149413585662842
    4. 'at' → logprob: -6.149413585662842
    5. ',' → logprob: -6.524413585662842
    6. ' immediately' → logprob: -6.899413585662842
    7. ' without' → logprob: -7.774413585662842
    8. '            
' → logprob: -8.024413108825684
    9. '
' → logprob: -8.649413108825684
    10. ';' → logprob: -8.649413108825684

Token 447: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4995722770690918
    2. '               ' → logprob: -1.2495722770690918
    3. '
' → logprob: -2.499572277069092
    4. ',' → logprob: -4.124572277069092
    5. ';' → logprob: -6.249572277069092
    6. ',
' → logprob: -6.499572277069092
    7. ':' → logprob: -6.999572277069092
    8. ' at' → logprob: -7.124572277069092
    9. '            
' → logprob: -7.124572277069092
    10. ':
' → logprob: -7.249572277069092

Token 448: ' no' (ID: 860)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.3877153992652893
    2. '           ' → logprob: -1.5127153396606445
    3. ' time' → logprob: -2.5127153396606445
    4. '               ' → logprob: -4.0127153396606445
    5. 'continue' → logprob: -6.5127153396606445
    6. ' continue' → logprob: -8.262715339660645
    7. '   ' → logprob: -10.012715339660645
    8. '                   ' → logprob: -10.012715339660645
    9. '       ' → logprob: -10.012715339660645
    10. '		' → logprob: -11.512715339660645

Token 449: ' wait' (ID: 5238)
  Prédit: 'wait'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wait' → logprob: -1.2560045719146729
    2. ' need' → logprob: -1.3810045719146729
    3. ' wait' → logprob: -1.3810045719146729
    4. 'need' → logprob: -2.506004571914673
    5. 'time' → logprob: -3.006004571914673
    6. ' waiting' → logprob: -3.506004571914673
    7. 'waiting' → logprob: -3.631004571914673
    8. ' time' → logprob: -4.631004333496094
    9. 'delay' → logprob: -5.256004333496094
    10. ' delay' → logprob: -6.631004333496094

Token 450: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20431654155254364
    2. '               ' → logprob: -2.2043166160583496
    3. '
' → logprob: -2.8293166160583496
    4. '.' → logprob: -4.82931661605835
    5. ',' → logprob: -6.32931661605835
    6. ';' → logprob: -6.45431661605835
    7. '       ' → logprob: -6.95431661605835
    8. '            
' → logprob: -7.07931661605835
    9. '		' → logprob: -7.57931661605835
    10. '.
' → logprob: -7.82931661605835

Token 451: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6545860767364502
    2. '               ' → logprob: -0.7795860767364502
    3. '
' → logprob: -4.154585838317871
    4. '            
' → logprob: -6.154585838317871
    5. '		' → logprob: -7.029585838317871
    6. '\n' → logprob: -7.154585838317871
    7. ',' → logprob: -7.904585838317871
    8. ',
' → logprob: -8.029585838317871
    9. '                
' → logprob: -8.154585838317871
    10. '			' → logprob: -8.404585838317871

Token 452: ' continue' (ID: 4901)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.012531664222478867
    2. 'continue' (adapté à ' continue') → logprob: -4.637531757354736
    3. ' time' → logprob: -6.762531757354736
    4. 'pass' → logprob: -6.762531757354736
    5. '           ' → logprob: -8.762531280517578
    6. ' continue' → logprob: -9.262531280517578
    7. '   ' → logprob: -9.637531280517578
    8. '       ' → logprob: -10.012531280517578
    9. '               ' → logprob: -10.262531280517578
    10. 'return' → logprob: -10.762531280517578

Token 453: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07696058601140976
    2. '
' → logprob: -2.951960563659668
    3. '            
' → logprob: -4.326960563659668
    4. '    
' → logprob: -5.451960563659668
    5. ' 
' → logprob: -6.701960563659668
    6. '       ' → logprob: -7.576960563659668
    7. '        
' → logprob: -7.701960563659668
    8. '  
' → logprob: -7.951960563659668
    9. ' else' → logprob: -7.951960563659668
    10. 'else' → logprob: -8.201960563659668

Token 454: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0015941266901791096
    2. '            
' → logprob: -7.626594066619873
    3. '       ' → logprob: -7.876594066619873
    4. 'else' → logprob: -8.626594543457031
    5. 'elif' → logprob: -9.376594543457031
    6. '
' → logprob: -9.376594543457031
    7. '    
' → logprob: -9.501594543457031
    8. ' else' → logprob: -9.751594543457031
    9. '        
' → logprob: -10.376594543457031
    10. '   ' → logprob: -10.376594543457031

Token 455: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8656383156776428
    2. 'while' → logprob: -1.490638256072998
    3. 'time' → logprob: -1.865638256072998
    4. 'found' → logprob: -2.740638256072998
    5. 'frame' → logprob: -3.115638256072998
    6. ' while' → logprob: -3.740638256072998
    7. ' time' → logprob: -4.240638256072998
    8. '       ' → logprob: -4.240638256072998
    9. 'else' → logprob: -4.615638256072998
    10. ' frame' → logprob: -5.115638256072998

Token 456: ' Otherwise' (ID: 33987)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -1.10784912109375
    2. 'frame' → logprob: -1.35784912109375
    3. 'found' → logprob: -1.60784912109375
    4. 'for' → logprob: -2.48284912109375
    5. 'time' → logprob: -2.48284912109375
    6. '       ' → logprob: -4.48284912109375
    7. ' while' → logprob: -5.60784912109375
    8. 'search' → logprob: -5.73284912109375
    9. 'wait' → logprob: -5.73284912109375
    10. 'value' → logprob: -5.85784912109375

Token 457: ' we' (ID: 581)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16066275537014008
    2. ',' → logprob: -2.1606626510620117
    3. 'while' → logprob: -5.160662651062012
    4. 'time' → logprob: -5.285662651062012
    5. ' for' → logprob: -5.535662651062012
    6. '
' → logprob: -5.535662651062012
    7. 'for' → logprob: -6.160662651062012
    8. ' while' → logprob: -6.160662651062012
    9. ' time' → logprob: -6.285662651062012
    10. 'current' → logprob: -6.660662651062012

Token 458: ' must' (ID: 2804)
  Prédit: ' need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' need' → logprob: -0.5076798796653748
    2. '           ' → logprob: -1.8826799392700195
    3. 'need' → logprob: -2.3826799392700195
    4. ' have' → logprob: -3.5076799392700195
    5. '       ' → logprob: -3.5076799392700195
    6. ' must' → logprob: -3.6326799392700195
    7. 'must' → logprob: -4.3826799392700195
    8. 'have' → logprob: -4.5076799392700195
    9. '   ' → logprob: -4.6326799392700195
    10. '    ' → logprob: -4.7576799392700195

Token 459: ' find' (ID: 1646)
  Prédit: 'advance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'advance' → logprob: -0.9770131707191467
    2. 'search' → logprob: -1.727013111114502
    3. 'simulate' → logprob: -1.852013111114502
    4. 'increment' → logprob: -2.227013111114502
    5. 'find' → logprob: -2.602013111114502
    6. 'wait' → logprob: -3.352013111114502
    7. ' advance' → logprob: -4.102013111114502
    8. 'move' → logprob: -4.602013111114502
    9. 'start' → logprob: -4.852013111114502
    10. ' find' → logprob: -4.977013111114502

Token 460: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.8950332403182983
    2. 'a' → logprob: -1.3950332403182983
    3. 'next' → logprob: -2.395033359527588
    4. 'frame' → logprob: -2.395033359527588
    5. ' the' → logprob: -2.645033359527588
    6. 'found' → logprob: -3.145033359527588
    7. ' a' → logprob: -3.520033359527588
    8. ' next' → logprob: -4.770033359527588
    9. ' frame' → logprob: -5.645033359527588
    10. '           ' → logprob: -7.145033359527588

Token 461: ' earliest' (ID: 48721)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.12438483536243439
    2. 'frame' → logprob: -2.999384880065918
    3. 'first' → logprob: -3.124384880065918
    4. 'ear' → logprob: -4.499384880065918
    5. 'minimal' → logprob: -5.249384880065918
    6. 'minimum' → logprob: -5.749384880065918
    7. ' next' → logprob: -6.499384880065918
    8. 'time' → logprob: -7.124384880065918
    9. 'small' → logprob: -7.874384880065918
    10. 'waiting' → logprob: -9.249384880065918

Token 462: ' frame' (ID: 7298)
  Prédit: ' frame'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' frame' → logprob: -0.24762921035289764
    2. 'frame' → logprob: -1.622629165649414
    3. '_frame' → logprob: -4.622629165649414
    4. 'time' → logprob: -4.997629165649414
    5. ' time' → logprob: -5.872629165649414
    6. '           ' → logprob: -7.622629165649414
    7. '
' → logprob: -7.872629165649414
    8. '            
' → logprob: -8.497629165649414
    9. 'next' → logprob: -8.622629165649414
    10. 'possible' → logprob: -8.872629165649414

Token 463: ' >' (ID: 1424)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.619438886642456
    2. ' >' → logprob: -1.994438886642456
    3. '>=' → logprob: -1.994438886642456
    4. '           ' → logprob: -2.744438886642456
    5. ' =' → logprob: -2.994438886642456
    6. '+' → logprob: -3.744438886642456
    7. '>' → logprob: -3.869438886642456
    8. '=' → logprob: -4.869439125061035
    9. '               ' → logprob: -5.869439125061035
    10. ' greater' → logprob: -5.994439125061035

Token 464: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.001943514565937221
    2. ' time' → logprob: -6.251943588256836
    3. '=time' → logprob: -11.376943588256836
    4. '=' → logprob: -12.876943588256836
    5. '
' → logprob: -14.626943588256836
    6. '"time' → logprob: -16.126943588256836
    7. 't' → logprob: -16.501943588256836
    8. '0' → logprob: -17.251943588256836
    9. '(time' → logprob: -17.626943588256836
    10. '_time' → logprob: -17.626943588256836

Token 465: ' where' (ID: 1919)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1877155303955078
    2. ' +' → logprob: -2.562715530395508
    3. '           ' → logprob: -2.687715530395508
    4. '            ' → logprob: -5.312715530395508
    5. ' and' → logprob: -5.687715530395508
    6. ' where' → logprob: -5.937715530395508
    7. ':' → logprob: -6.312715530395508
    8. ' at' → logprob: -6.562715530395508
    9. ' ' → logprob: -6.562715530395508
    10. ' that' → logprob: -6.687715530395508

Token 466: ' RNG' (ID: 165661)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04213748127222061
    2. '(self' → logprob: -3.417137384414673
    3. ' self' → logprob: -5.417137622833252
    4. 'current' → logprob: -6.667137622833252
    5. 'True' → logprob: -6.917137622833252
    6. ' (' → logprob: -7.292137622833252
    7. '(True' → logprob: -8.542137145996094
    8. '(current' → logprob: -8.792137145996094
    9. '
' → logprob: -8.917137145996094
    10. '       ' → logprob: -9.292137145996094

Token 467: ' ==' (ID: 951)
  Prédit: '.next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.next' → logprob: -0.5071116089820862
    2. '.current' → logprob: -1.0071115493774414
    3. '.' → logprob: -3.5071115493774414
    4. 'current' → logprob: -7.382111549377441
    5. '.value' → logprob: -7.507111549377441
    6. ' .' → logprob: -7.632111549377441
    7. 'next' → logprob: -9.007111549377441
    8. '   ' → logprob: -9.132111549377441
    9. 'value' → logprob: -9.132111549377441
    10. '.get' → logprob: -9.257111549377441

Token 468: ' target' (ID: 3783)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.16022635996341705
    2. ' target' → logprob: -1.9102263450622559
    3. '(target' → logprob: -14.285226821899414
    4. '	target' → logprob: -14.535226821899414
    5. 'self' → logprob: -14.660226821899414
    6. '[target' → logprob: -15.035226821899414
    7. ' self' → logprob: -16.660226821899414
    8. '
' → logprob: -16.785226821899414
    9. '_target' → logprob: -17.160226821899414
    10. '.target' → logprob: -17.285226821899414

Token 469: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.31697916984558105
    2. '
' → logprob: -1.316979169845581
    3. '            
' → logprob: -6.56697940826416
    4. ',' → logprob: -7.06697940826416
    5. '
' → logprob: -8.31697940826416
    6. '    
' → logprob: -8.44197940826416
    7. '\n' → logprob: -8.56697940826416
    8. ',
' → logprob: -9.19197940826416
    9. '.' → logprob: -9.44197940826416
    10. '        
' → logprob: -9.56697940826416

Token 470: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0042943344451487064
    2. '
' → logprob: -5.879294395446777
    3. '       ' → logprob: -6.754294395446777
    4. '            
' → logprob: -9.629294395446777
    5. ',' → logprob: -10.004294395446777
    6. 'current' → logprob: -10.379294395446777
    7. '   ' → logprob: -11.004294395446777
    8. 'while' → logprob: -11.254294395446777
    9. '        
' → logprob: -11.379294395446777
    10. ' while' → logprob: -11.754294395446777

Token 471: ' found' (ID: 2491)
  Prédit: 'frame'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'frame' → logprob: -0.16851000487804413
    2. '           ' → logprob: -2.6685099601745605
    3. 'found' (adapté à ' found') → logprob: -3.1685099601745605
    4. 'search' → logprob: -4.1685099601745605
    5. 'time' → logprob: -4.5435099601745605
    6. ' frame' → logprob: -4.7935099601745605
    7. 'start' → logprob: -6.0435099601745605
    8. ' found' → logprob: -6.7935099601745605
    9. 'while' → logprob: -6.7935099601745605
    10. 't' → logprob: -7.2935099601745605

Token 472: '_frame' (ID: 19952)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8731881380081177
    2. '_frame' → logprob: -0.9981881380081177
    3. '=' → logprob: -1.6231881380081177
    4. '_' → logprob: -4.623188018798828
    5. '_at' → logprob: -5.498188018798828
    6. '_found' → logprob: -6.248188018798828
    7. '_time' → logprob: -8.373188018798828
    8. ':' → logprob: -8.998188018798828
    9. 'frame' → logprob: -9.623188018798828
    10. '_index' → logprob: -9.748188018798828

Token 473: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08905147016048431
    2. '=' → logprob: -2.4640514850616455
    3. ':' → logprob: -9.339051246643066
    4. '=None' → logprob: -11.839051246643066
    5. ' ' → logprob: -11.964051246643066
    6. ',' → logprob: -12.214051246643066
    7. '_' → logprob: -13.964051246643066
    8. '<|end|>' → logprob: -14.214051246643066
    9. 's' → logprob: -14.339051246643066
    10. '   ' → logprob: -14.964051246643066

Token 474: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.007229158189147711
    2. ' -' → logprob: -5.757229328155518
    3. '-time' → logprob: -6.507229328155518
    4. 'None' → logprob: -7.007229328155518
    5. 'time' → logprob: -7.257229328155518
    6. 'False' → logprob: -7.257229328155518
    7. ' time' → logprob: -9.13222885131836
    8. ' None' → logprob: -9.63222885131836
    9. ' False' → logprob: -10.63222885131836
    10. '   ' → logprob: -11.38222885131836

Token 475: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '2' → logprob: -17.0
    4. '<|end|>' → logprob: -18.625
    5. '       ' → logprob: -18.875
    6. '   ' → logprob: -19.0
    7. '```' → logprob: -19.375
    8. '-' → logprob: -19.5
    9. '
' → logprob: -19.625
    10. '=' → logprob: -19.625

Token 476: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5785430073738098
    2. '
' → logprob: -0.8285430073738098
    3. '<|end|>' → logprob: -6.953543186187744
    4. '       ' → logprob: -8.203542709350586
    5. '
' → logprob: -8.328542709350586
    6. ' for' → logprob: -8.703542709350586
    7. '            
' → logprob: -8.828542709350586
    8. '\n' → logprob: -8.953542709350586
    9. '    
' → logprob: -9.078542709350586
    10. '<|end|>' → logprob: -9.328542709350586

Token 477: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11486101895570755
    2. '
' → logprob: -2.239861011505127
    3. ' for' → logprob: -7.364861011505127
    4. '            
' → logprob: -8.114861488342285
    5. '       ' → logprob: -8.489861488342285
    6. '    
' → logprob: -8.864861488342285
    7. 'current' → logprob: -8.864861488342285
    8. ' current' → logprob: -8.864861488342285
    9. ' 
' → logprob: -9.864861488342285
    10. '        
' → logprob: -9.989861488342285

Token 478: ' #' (ID: 1069)
  Prédit: 'frame'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'frame' → logprob: -0.5600358843803406
    2. 'search' → logprob: -1.3100359439849854
    3. 'for' → logprob: -2.3100359439849854
    4. 'temp' → logprob: -3.5600359439849854
    5. 'start' → logprob: -4.810035705566406
    6. 'current' → logprob: -5.060035705566406
    7. 'rng' → logprob: -5.560035705566406
    8. 'value' → logprob: -6.060035705566406
    9. 'check' → logprob: -6.560035705566406
    10. 'step' → logprob: -6.685035705566406

Token 479: ' We' (ID: 1416)
  Prédit: 'search'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'search' → logprob: -0.5991829037666321
    2. 'for' → logprob: -1.5991828441619873
    3. 'frame' → logprob: -1.8491828441619873
    4. 'rng' → logprob: -3.8491828441619873
    5. 'temp' → logprob: -3.9741828441619873
    6. 'start' → logprob: -4.349183082580566
    7. 'value' → logprob: -4.724183082580566
    8. 'current' → logprob: -4.724183082580566
    9. ' search' → logprob: -5.849183082580566
    10. 'next' → logprob: -6.224183082580566

Token 480: ' continue' (ID: 4901)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.7039951086044312
    2. 'for' → logprob: -2.0789952278137207
    3. ' =' → logprob: -2.2039952278137207
    4. '=' → logprob: -2.7039952278137207
    5. ' for' → logprob: -2.8289952278137207
    6. ' current' → logprob: -3.7039952278137207
    7. 'self' → logprob: -4.203995227813721
    8. 'value' → logprob: -4.203995227813721
    9. 'temp' → logprob: -4.453995227813721
    10. '           ' → logprob: -4.578995227813721

Token 481: ' RNG' (ID: 165661)
  Prédit: 'frame'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'frame' → logprob: -0.7853041291236877
    2. '           ' → logprob: -0.9103041291236877
    3. 'for' → logprob: -2.535304069519043
    4. 'search' → logprob: -3.535304069519043
    5. '_frame' → logprob: -5.035304069519043
    6. 'time' → logprob: -5.285304069519043
    7. ' for' → logprob: -5.535304069519043
    8. 'while' → logprob: -5.785304069519043
    9. 'from' → logprob: -5.910304069519043
    10. ' frame' → logprob: -6.035304069519043

Token 482: ' sequence' (ID: 16281)
  Prédit: '_value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.3989059627056122
    2. 'value' → logprob: -2.5239059925079346
    3. '.next' → logprob: -3.3989059925079346
    4. 'for' → logprob: -3.5239059925079346
    5. '.current' → logprob: -3.6489059925079346
    6. '       ' → logprob: -3.6489059925079346
    7. '.' → logprob: -3.8989059925079346
    8. '           ' → logprob: -4.0239057540893555
    9. ' for' → logprob: -4.1489057540893555
    10. 'current' → logprob: -4.3989057540893555

Token 483: ' from' (ID: 591)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.039851345121860504
    2. ' for' → logprob: -4.414851188659668
    3. ' at' → logprob: -5.164851188659668
    4. ',' → logprob: -5.289851188659668
    5. 'for' → logprob: -5.289851188659668
    6. 'while' → logprob: -5.914851188659668
    7. ' while' → logprob: -6.414851188659668
    8. '            
' → logprob: -6.914851188659668
    9. '<|end|>' → logprob: -7.164851188659668
    10. '<|end|>' → logprob: -7.164851188659668

Token 484: ' frame' (ID: 7298)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.009857137687504292
    2. 'current' → logprob: -5.759857177734375
    3. 'self' → logprob: -5.759857177734375
    4. ' time' → logprob: -6.384857177734375
    5. '(time' → logprob: -7.259857177734375
    6. 'the' → logprob: -7.509857177734375
    7. '
' → logprob: -8.259857177734375
    8. ' current' → logprob: -9.759857177734375
    9. ' (' → logprob: -10.259857177734375
    10. '   ' → logprob: -10.259857177734375

Token 485: ' (' (ID: 350)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.128167062997818
    2. ' time' → logprob: -2.128167152404785
    3. '=time' → logprob: -7.628167152404785
    4. '=' → logprob: -8.003167152404785
    5. '(time' → logprob: -9.128167152404785
    6. ' =' → logprob: -9.253167152404785
    7. '
' → logprob: -9.378167152404785
    8. '+' → logprob: -9.878167152404785
    9. '   ' → logprob: -11.003167152404785
    10. '_time' → logprob: -11.378167152404785

Token 486: 'time' (ID: 4580)
  Prédit: 'time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.004080658778548241
    2. ' time' → logprob: -5.504080772399902
    3. '=time' → logprob: -13.504080772399902
    4. '(time' → logprob: -15.004080772399902
    5. '1' → logprob: -16.129079818725586
    6. '
' → logprob: -16.254079818725586
    7. '	time' → logprob: -16.504079818725586
    8. ')' → logprob: -16.629079818725586
    9. '   ' → logprob: -17.129079818725586
    10. '=' → logprob: -17.254079818725586

Token 487: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3871423304080963
    2. ' +' → logprob: -1.137142300605774
    3. '+
' → logprob: -9.012142181396484
    4. ' +
' → logprob: -10.137142181396484
    5. '
' → logprob: -10.387142181396484
    6. ')' → logprob: -10.387142181396484
    7. '   ' → logprob: -11.387142181396484
    8. ')+' → logprob: -11.512142181396484
    9. '+)' → logprob: -11.512142181396484
    10. ' ' → logprob: -11.887142181396484

Token 488: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.126521035796031e-05
    2. ' ' → logprob: -9.500091552734375
    3. '
' → logprob: -11.875091552734375
    4. ')' → logprob: -11.875091552734375
    5. '   ' → logprob: -14.500091552734375
    6. '0' → logprob: -14.750091552734375
    7. ' )' → logprob: -14.750091552734375
    8. '```' → logprob: -15.250091552734375
    9. '+' → logprob: -15.937591552734375
    10. '<|end|>' → logprob: -16.250091552734375

Token 489: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014959346503019333
    2. '):
' → logprob: -5.264959335327148
    3. '           ' → logprob: -5.389959335327148
    4. ')
' → logprob: -6.014959335327148
    5. '):' → logprob: -6.514959335327148
    6. '),' → logprob: -7.639959335327148
    7. ' )' → logprob: -8.764959335327148
    8. '       ' → logprob: -8.764959335327148
    9. ',' → logprob: -8.889959335327148
    10. '):

' → logprob: -9.514959335327148

Token 490: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0011311669368296862
    2. ',' → logprob: -7.876131057739258
    3. ' for' → logprob: -8.001131057739258
    4. 'for' → logprob: -9.251131057739258
    5. 'current' → logprob: -9.626131057739258
    6. '
' → logprob: -9.751131057739258
    7. '       ' → logprob: -9.876131057739258
    8. ' =' → logprob: -10.876131057739258
    9. '            
' → logprob: -11.376131057739258
    10. ' current' → logprob: -11.376131057739258

Token 491: ' #' (ID: 1069)
  Prédit: 'frame'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'frame' → logprob: -0.5649222135543823
    2. '           ' → logprob: -2.189922332763672
    3. 'for' → logprob: -2.314922332763672
    4. 'self' → logprob: -2.814922332763672
    5. 'current' → logprob: -2.814922332763672
    6. 'rng' → logprob: -3.439922332763672
    7. 'value' → logprob: -3.939922332763672
    8. '       ' → logprob: -5.064922332763672
    9. 'curr' → logprob: -5.064922332763672
    10. 'step' → logprob: -5.314922332763672

Token 492: ' Let's' (ID: 41021)
  Prédit: 'frame'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'frame' → logprob: -0.6134026646614075
    2. 'for' → logprob: -1.4884026050567627
    3. 'self' → logprob: -2.4884026050567627
    4. 'rng' → logprob: -3.1134026050567627
    5. '           ' → logprob: -3.8634026050567627
    6. 'current' → logprob: -3.9884026050567627
    7. 'start' → logprob: -4.488402843475342
    8. '       ' → logprob: -4.738402843475342
    9. 'value' → logprob: -4.863402843475342
    10. 'temp' → logprob: -5.113402843475342

Token 493: ' compute' (ID: 23864)
  Prédit: 'frame'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'frame' → logprob: -0.2602345943450928
    2. 'rng' → logprob: -3.0102345943450928
    3. 'temp' → logprob: -3.3852345943450928
    4. 'start' → logprob: -3.5102345943450928
    5. 'current' → logprob: -3.6352345943450928
    6. 'simulate' → logprob: -4.135234832763672
    7. 'value' → logprob: -4.260234832763672
    8. 'step' → logprob: -4.885234832763672
    9. 'curr' → logprob: -5.135234832763672
    10. ' frame' → logprob: -5.260234832763672

Token 494: ' the' (ID: 290)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -1.6388920545578003
    2. 'frame' → logprob: -2.01389217376709
    3. '           ' → logprob: -2.26389217376709
    4. ' rng' → logprob: -2.63889217376709
    5. ' current' → logprob: -2.88889217376709
    6. ' the' → logprob: -2.88889217376709
    7. 'rng' → logprob: -2.88889217376709
    8. 'next' → logprob: -3.13889217376709
    9. 'temp' → logprob: -3.26389217376709
    10. '       ' → logprob: -3.63889217376709

Token 495: ' RNG' (ID: 165661)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.9893951416015625
    2. 'next' → logprob: -1.6143951416015625
    3. 'state' → logprob: -2.4893951416015625
    4. 'steps' → logprob: -2.7393951416015625
    5. 'value' → logprob: -2.8643951416015625
    6. 'rng' → logprob: -3.3643951416015625
    7. 'temp' → logprob: -3.6143951416015625
    8. 'frame' → logprob: -3.7393951416015625
    9. 'start' → logprob: -3.8643951416015625
    10. 'lc' → logprob: -4.4893951416015625

Token 496: ' after' (ID: 1934)
  Prédit: '_value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.6552592515945435
    2. 'value' → logprob: -1.0302592515945435
    3. ' value' → logprob: -2.905259132385254
    4. 'state' → logprob: -3.405259132385254
    5. '_state' → logprob: -4.030259132385254
    6. 'current' → logprob: -5.780259132385254
    7. '_index' → logprob: -6.030259132385254
    8. ' state' → logprob: -6.155259132385254
    9. '_step' → logprob: -6.780259132385254
    10. 'index' → logprob: -6.905259132385254

Token 497: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.5899568200111389
    2. ' time' → logprob: -0.8399568200111389
    3. '(time' → logprob: -4.964956760406494
    4. ' (' → logprob: -5.089956760406494
    5. ' self' → logprob: -8.214957237243652
    6. 'self' → logprob: -8.714957237243652
    7. '_time' → logprob: -9.214957237243652
    8. '1' → logprob: -10.214957237243652
    9. '
' → logprob: -10.339957237243652
    10. '(' → logprob: -10.464957237243652

Token 498: ' frames' (ID: 25516)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06994444131851196
    2. ' +' → logprob: -2.694944381713867
    3. '+
' → logprob: -12.569944381713867
    4. '+i' → logprob: -13.819944381713867
    5. '
' → logprob: -13.944944381713867
    6. ' +
' → logprob: -14.569944381713867
    7. '   ' → logprob: -14.944944381713867
    8. '+self' → logprob: -15.194944381713867
    9. 'time' → logprob: -15.569944381713867
    10. 's' → logprob: -15.694944381713867

Token 499: ' since' (ID: 3630)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09554454684257507
    2. '       ' → logprob: -2.8455445766448975
    3. 'current' → logprob: -4.595544338226318
    4. ' =' → logprob: -5.220544338226318
    5. ',' → logprob: -5.345544338226318
    6. 'self' → logprob: -6.095544338226318
    7. '=' → logprob: -6.220544338226318
    8. 'value' → logprob: -6.845544338226318
    9. ' for' → logprob: -6.970544338226318
    10. '<|end|>' → logprob: -7.470544338226318

Token 500: ' seed' (ID: 17284)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3461453318595886
    2. 'current' → logprob: -1.9711453914642334
    3. 'the' → logprob: -2.5961453914642334
    4. 'seed' → logprob: -3.4711453914642334
    5. 'time' → logprob: -3.7211453914642334
    6. ' the' → logprob: -5.471145153045654
    7. 'initial' → logprob: -5.471145153045654
    8. ' current' → logprob: -5.971145153045654
    9. '0' → logprob: -5.971145153045654
    10. ' self' → logprob: -6.096145153045654

Token 501: ':
' (ID: 734)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.4943608045578003
    2. '+' → logprob: -2.11936092376709
    3. 'self' → logprob: -2.11936092376709
    4. ' =' → logprob: -2.24436092376709
    5. '           ' → logprob: -2.36936092376709
    6. 'current' → logprob: -2.49436092376709
    7. '       ' → logprob: -3.11936092376709
    8. '=' → logprob: -3.24436092376709
    9. ',' → logprob: -3.61936092376709
    10. ':' → logprob: -4.11936092376709

Token 502: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7682775259017944
    2. ' current' → logprob: -2.143277645111084
    3. 'current' → logprob: -2.143277645111084
    4. ' self' → logprob: -3.268277645111084
    5. 'next' → logprob: -3.393277645111084
    6. ' next' → logprob: -3.393277645111084
    7. ' state' → logprob: -3.518277645111084
    8. '           ' → logprob: -3.643277645111084
    9. 'self' → logprob: -3.643277645111084
    10. ' value' → logprob: -3.643277645111084

Token 503: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.3128026723861694
    2. '       ' → logprob: -1.4378026723861694
    3. ' self' → logprob: -2.187802791595459
    4. 'temp' → logprob: -2.312802791595459
    5. 'frame' → logprob: -3.187802791595459
    6. 'rng' → logprob: -3.562802791595459
    7. 'value' → logprob: -3.687802791595459
    8. 'for' → logprob: -3.812802791595459
    9. 'next' → logprob: -3.937802791595459
    10. ' for' → logprob: -4.062802791595459

Token 504: ' We' (ID: 1416)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.7252683639526367
    2. '       ' → logprob: -1.9752683639526367
    3. 'temp' → logprob: -2.1002683639526367
    4. 'frame' → logprob: -2.3502683639526367
    5. 'rng' → logprob: -2.6002683639526367
    6. 'next' → logprob: -3.1002683639526367
    7. 'state' → logprob: -3.1002683639526367
    8. 'val' → logprob: -3.3502683639526367
    9. 'value' → logprob: -3.3502683639526367
    10. ' self' → logprob: -3.4752683639526367

Token 505: ' don't' (ID: 4128)
  Prédit: '.l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.l' → logprob: -0.8133213520050049
    2. '.' → logprob: -1.8133213520050049
    3. '.current' → logprob: -1.8133213520050049
    4. 'current' → logprob: -2.563321352005005
    5. 'l' → logprob: -2.938321352005005
    6. ' current' → logprob: -4.313321113586426
    7. '=' → logprob: -4.813321113586426
    8. 'for' → logprob: -4.813321113586426
    9. ' need' → logprob: -4.813321113586426
    10. ' will' → logprob: -4.938321113586426

Token 506: ' reset' (ID: 12820)
  Prédit: ' have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' have' → logprob: -0.9839553833007812
    2. '       ' → logprob: -1.8589553833007812
    3. 'have' → logprob: -2.1089553833007812
    4. 'current' → logprob: -2.2339553833007812
    5. 'self' → logprob: -3.1089553833007812
    6. '   ' → logprob: -3.3589553833007812
    7. '           ' → logprob: -3.4839553833007812
    8. 'for' → logprob: -3.4839553833007812
    9. ' =' → logprob: -4.108955383300781
    10. ' current' → logprob: -4.483955383300781

Token 507: ' RNG' (ID: 165661)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6357173323631287
    2. ' the' → logprob: -1.2607173919677734
    3. 'current' → logprob: -3.1357173919677734
    4. 'the' → logprob: -3.3857173919677734
    5. ',' → logprob: -3.6357173919677734
    6. ' self' → logprob: -3.8857173919677734
    7. ' current' → logprob: -4.135717391967773
    8. 'time' → logprob: -4.760717391967773
    9. ')' → logprob: -4.885717391967773
    10. ';' → logprob: -5.385717391967773

Token 508: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4765409231185913
    2. ';' → logprob: -2.601541042327881
    3. ' at' → logprob: -2.601541042327881
    4. '           ' → logprob: -2.851541042327881
    5. '.' → logprob: -2.976541042327881
    6. '
' → logprob: -3.226541042327881
    7. '=' → logprob: -4.601541042327881
    8. ')' → logprob: -4.726541042327881
    9. 'current' → logprob: -4.726541042327881
    10. 'self' → logprob: -4.976541042327881

Token 509: ' but' (ID: 889)
  Prédit: ' but'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' but' → logprob: -1.309415578842163
    2. ' so' → logprob: -2.184415578842163
    3. 'current' → logprob: -2.184415578842163
    4. '           ' → logprob: -2.434415578842163
    5. ' for' → logprob: -2.434415578842163
    6. ' current' → logprob: -2.559415578842163
    7. 'frame' → logprob: -3.184415578842163
    8. 'for' → logprob: -3.309415578842163
    9. ' rng' → logprob: -3.434415578842163
    10. 'self' → logprob: -3.434415578842163

Token 510: ' we' (ID: 581)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -1.3031220436096191
    2. 'temp' → logprob: -1.3031220436096191
    3. 'self' → logprob: -2.428122043609619
    4. 'for' → logprob: -2.428122043609619
    5. 'value' → logprob: -2.928122043609619
    6. ' for' → logprob: -3.303122043609619
    7. 'curr' → logprob: -3.428122043609619
    8. 'cur' → logprob: -3.553122043609619
    9. 'tmp' → logprob: -3.803122043609619
    10. 'rng' → logprob: -4.428122043609619

Token 511: ' can' (ID: 665)
  Prédit: ' simulate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' simulate' → logprob: -1.0306345224380493
    2. 'simulate' → logprob: -1.5306345224380493
    3. ' need' → logprob: -1.9056345224380493
    4. ' can' → logprob: -2.1556344032287598
    5. ' must' → logprob: -3.6556344032287598
    6. 'advance' → logprob: -3.7806344032287598
    7. ' advance' → logprob: -3.9056344032287598
    8. ' have' → logprob: -3.9056344032287598
    9. ' continue' → logprob: -4.28063440322876
    10. 'need' → logprob: -4.90563440322876

Token 512: ' simulate' (ID: 66687)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -1.2340425252914429
    2. 'simulate' → logprob: -1.9840425252914429
    3. 'for' → logprob: -2.3590426445007324
    4. 'lc' → logprob: -2.4840426445007324
    5. 'self' → logprob: -2.6090426445007324
    6. ' for' → logprob: -3.2340426445007324
    7. 'current' → logprob: -3.3590426445007324
    8. 'reset' → logprob: -3.7340426445007324
    9. 'advance' → logprob: -3.8590426445007324
    10. 'state' → logprob: -3.9840426445007324

Token 513: ' frame' (ID: 7298)
  Prédit: 'frame'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'frame' → logprob: -0.955124020576477
    2. '           ' → logprob: -1.455124020576477
    3. 'current' → logprob: -2.5801239013671875
    4. 'for' → logprob: -2.8301239013671875
    5. 'self' → logprob: -3.0801239013671875
    6. '       ' → logprob: -3.4551239013671875
    7. 'the' → logprob: -3.8301239013671875
    8. 'step' → logprob: -4.2051239013671875
    9. ' for' → logprob: -4.4551239013671875
    10. 'frames' → logprob: -4.4551239013671875

Token 514: ' by' (ID: 656)
  Prédit: 'by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -0.8171530961990356
    2. ' by' → logprob: -1.0671530961990356
    3. '+' → logprob: -1.8171530961990356
    4. '           ' → logprob: -3.817152976989746
    5. '+=' → logprob: -4.942152976989746
    6. '=' → logprob: -4.942152976989746
    7. '       ' → logprob: -5.192152976989746
    8. '   ' → logprob: -6.067152976989746
    9. '-by' → logprob: -6.192152976989746
    10. 's' → logprob: -6.317152976989746

Token 515: ' frame' (ID: 7298)
  Prédit: 'frame'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'frame' → logprob: -0.014016230590641499
    2. 'time' → logprob: -4.639016151428223
    3. '1' → logprob: -6.014016151428223
    4. ' frame' → logprob: -6.764016151428223
    5. 'one' → logprob: -8.014016151428223
    6. 'step' → logprob: -8.764016151428223
    7. '_frame' → logprob: -10.264016151428223
    8. ' time' → logprob: -10.514016151428223
    9. ' ' → logprob: -11.264016151428223
    10. '
' → logprob: -11.264016151428223

Token 516: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.015864837914705276
    2. ' for' → logprob: -5.515864849090576
    3. '
' → logprob: -6.015864849090576
    4. ',' → logprob: -6.140864849090576
    5. '            
' → logprob: -6.390864849090576
    6. '       ' → logprob: -6.890864849090576
    7. '.' → logprob: -6.890864849090576
    8. '<|end|>' → logprob: -7.765864849090576
    9. '<|end|>' → logprob: -7.890864849090576
    10. ' at' → logprob: -8.390864372253418

Token 517: ' clarity' (ID: 45632)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.6047978401184082
    2. '_' → logprob: -1.2297978401184082
    3. ' j' → logprob: -2.604797840118408
    4. ' f' → logprob: -3.604797840118408
    5. ' frame' → logprob: -3.979797840118408
    6. ' time' → logprob: -5.104797840118408
    7. '_j' → logprob: -5.229797840118408
    8. 'frame' → logprob: -5.354797840118408
    9. 'j' → logprob: -5.354797840118408
    10. '_f' → logprob: -5.479797840118408

Token 518: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007110436912626028
    2. '
' → logprob: -5.507110595703125
    3. ' for' → logprob: -6.632110595703125
    4. '            
' → logprob: -7.757110595703125
    5. '<|end|>' → logprob: -8.132110595703125
    6. ',' → logprob: -8.132110595703125
    7. 'for' → logprob: -9.007110595703125
    8. 'current' → logprob: -9.007110595703125
    9. '       ' → logprob: -9.257110595703125
    10. '<|end|>' → logprob: -9.507110595703125

Token 519: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003174740821123123
    2. ' for' → logprob: -6.253174781799316
    3. 'for' → logprob: -7.628174781799316
    4. 'current' → logprob: -8.128174781799316
    5. ' current' → logprob: -8.628174781799316
    6. 'frame' → logprob: -9.503174781799316
    7. '       ' → logprob: -10.128174781799316
    8. ' frame' → logprob: -10.128174781799316
    9. '
' → logprob: -10.128174781799316
    10. '            
' → logprob: -11.503174781799316

Token 520: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7123553156852722
    2. 'frame' → logprob: -1.462355375289917
    3. '           ' → logprob: -1.837355375289917
    4. ' for' → logprob: -3.087355375289917
    5. 'current' → logprob: -3.712355375289917
    6. 'self' → logprob: -4.462355136871338
    7. 'rng' → logprob: -5.087355136871338
    8. ' frame' → logprob: -5.462355136871338
    9. 'start' → logprob: -5.587355136871338
    10. 'value' → logprob: -5.587355136871338

Token 521: ' Save' (ID: 15564)
  Prédit: 'frame'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'frame' → logprob: -0.4738788902759552
    2. '           ' → logprob: -1.8488788604736328
    3. 'for' → logprob: -2.348878860473633
    4. 'current' → logprob: -2.973878860473633
    5. 'rng' → logprob: -4.098878860473633
    6. 'value' → logprob: -4.598878860473633
    7. 'start' → logprob: -4.973878860473633
    8. 'self' → logprob: -5.348878860473633
    9. ' frame' → logprob: -5.473878860473633
    10. 'next' → logprob: -5.598878860473633

Token 522: ' current' (ID: 2208)
  Prédit: 'temp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'temp' → logprob: -0.5032662153244019
    2. 'backup' → logprob: -2.2532663345336914
    3. 'saved' → logprob: -2.2532663345336914
    4. 'state' → logprob: -3.3782663345336914
    5. 'rng' → logprob: -3.5032663345336914
    6. 'tmp' → logprob: -3.6282663345336914
    7. 'prev' → logprob: -4.128266334533691
    8. '_rng' → logprob: -4.128266334533691
    9. 'pos' → logprob: -4.253266334533691
    10. ' temp' → logprob: -4.628266334533691

Token 523: ' RNG' (ID: 165661)
  Prédit: '_rng'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_rng' → logprob: -1.0305346250534058
    2. '_state' → logprob: -1.5305346250534058
    3. '_pos' → logprob: -1.6555346250534058
    4. '_value' → logprob: -1.6555346250534058
    5. '_position' → logprob: -3.9055347442626953
    6. 'pos' → logprob: -5.155534744262695
    7. '_val' → logprob: -5.530534744262695
    8. '_l' → logprob: -5.655534744262695
    9. 'state' → logprob: -5.905534744262695
    10. '_frame' → logprob: -6.030534744262695

Token 524: ' and' (ID: 326)
  Prédit: '_value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.15825887024402618
    2. '_state' → logprob: -2.0332589149475098
    3. '_' → logprob: -4.78325891494751
    4. 'value' → logprob: -5.78325891494751
    5. '_backup' → logprob: -6.65825891494751
    6. '_val' → logprob: -6.90825891494751
    7. 'state' → logprob: -7.15825891494751
    8. '_snapshot' → logprob: -8.033258438110352
    9. '_temp' → logprob: -8.783258438110352
    10. '_copy' → logprob: -9.033258438110352

Token 525: ' restore' (ID: 24540)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9373710751533508
    2. 'temp' → logprob: -1.937371015548706
    3. 'state' → logprob: -1.937371015548706
    4. 'self' → logprob: -2.437371015548706
    5. 'pos' → logprob: -2.812371015548706
    6. 'lc' → logprob: -3.187371015548706
    7. 'restore' → logprob: -3.687371015548706
    8. 'backup' → logprob: -3.937371015548706
    9. 'simulate' → logprob: -4.437371253967285
    10. 'l' → logprob: -4.562371253967285

Token 526: ' after' (ID: 1934)
  Prédit: '_rng'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_rng' → logprob: -0.7750896215438843
    2. '_state' → logprob: -1.2750896215438843
    3. ' state' → logprob: -2.275089740753174
    4. 'state' → logprob: -2.525089740753174
    5. ' rng' → logprob: -4.400089740753174
    6. ' current' → logprob: -4.775089740753174
    7. '_value' → logprob: -4.775089740753174
    8. 'current' → logprob: -5.150089740753174
    9. '       ' → logprob: -5.525089740753174
    10. '           ' → logprob: -5.650089740753174

Token 527: ' search' (ID: 3684)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.3082321882247925
    2. ' self' → logprob: -2.433232307434082
    3. '_state' → logprob: -2.433232307434082
    4. '_rng' → logprob: -2.433232307434082
    5. 'temp' → logprob: -3.058232307434082
    6. 'frame' → logprob: -3.183232307434082
    7. 'pos' → logprob: -3.308232307434082
    8. 'current' → logprob: -3.308232307434082
    9. '_frame' → logprob: -3.433232307434082
    10. 'state' → logprob: -3.433232307434082

Token 528: ' to' (ID: 316)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.44361451268196106
    2. '
' → logprob: -1.0686144828796387
    3. '            
' → logprob: -4.568614482879639
    4. ',' → logprob: -6.318614482879639
    5. ' current' → logprob: -7.818614482879639
    6. 'current' → logprob: -7.943614482879639
    7. ' for' → logprob: -8.443614959716797
    8. ':' → logprob: -8.818614959716797
    9. '
' → logprob: -8.943614959716797
    10. '<|end|>' → logprob: -8.943614959716797

Token 529: ' avoid' (ID: 8397)
  Prédit: ' avoid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' avoid' → logprob: -0.6479870676994324
    2. 'avoid' → logprob: -0.8979870676994324
    3. ' preserve' → logprob: -3.647987127304077
    4. 'not' → logprob: -4.397986888885498
    5. 'ensure' → logprob: -4.772986888885498
    6. 'pres' → logprob: -5.772986888885498
    7. 'self' → logprob: -5.772986888885498
    8. ' not' → logprob: -5.897986888885498
    9. 'find' → logprob: -5.897986888885498
    10. 'try' → logprob: -6.022986888885498

Token 530: ' side' (ID: 4307)
  Prédit: ' state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' state' → logprob: -0.881733238697052
    2. ' side' → logprob: -1.8817331790924072
    3. 'state' → logprob: -2.0067331790924072
    4. ' modifying' → logprob: -3.1317331790924072
    5. ' perturb' → logprob: -3.2567331790924072
    6. 'side' → logprob: -3.3817331790924072
    7. ' altering' → logprob: -3.7567331790924072
    8. ' messing' → logprob: -3.7567331790924072
    9. 'mod' → logprob: -3.8817331790924072
    10. 'changing' → logprob: -4.131733417510986

Token 531: ' effects' (ID: 9327)
  Prédit: ' effects'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' effects' → logprob: -0.33454710245132446
    2. 'effects' → logprob: -1.3345470428466797
    3. '_effect' → logprob: -4.70954704284668
    4. ' effect' → logprob: -5.08454704284668
    5. 'effect' → logprob: -5.70954704284668
    6. '-effects' → logprob: -6.70954704284668
    7. ' ' → logprob: -6.95954704284668
    8. '   ' → logprob: -8.08454704284668
    9. '  ' → logprob: -10.45954704284668
    10. '-effect' → logprob: -11.33454704284668

Token 532: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1914464682340622
    2. '
' → logprob: -1.8164464235305786
    3. '            
' → logprob: -5.191446304321289
    4. 'current' → logprob: -6.316446304321289
    5. ',' → logprob: -6.441446304321289
    6. ' current' → logprob: -6.816446304321289
    7. '       ' → logprob: -8.316446304321289
    8. '<|end|>' → logprob: -8.941446304321289
    9. '    
' → logprob: -9.316446304321289
    10. '            ' → logprob: -9.316446304321289

Token 533: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007178252562880516
    2. '
' → logprob: -5.88217830657959
    3. ' current' → logprob: -6.00717830657959
    4. 'current' → logprob: -7.00717830657959
    5. '       ' → logprob: -7.88217830657959
    6. '            
' → logprob: -8.00717830657959
    7. '            ' → logprob: -9.88217830657959
    8. ',' → logprob: -10.50717830657959
    9. ' saved' → logprob: -10.50717830657959
    10. 'saved' → logprob: -11.13217830657959

Token 534: ' saved' (ID: 10576)
  Prédit: ' saved'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' saved' → logprob: -0.288970023393631
    2. 'saved' (adapté à ' saved') → logprob: -2.6639699935913086
    3. ' original' → logprob: -3.1639699935913086
    4. '           ' → logprob: -3.4139699935913086
    5. ' current' → logprob: -3.5389699935913086
    6. ' save' → logprob: -4.163969993591309
    7. ' temp' → logprob: -4.288969993591309
    8. ' rng' → logprob: -4.538969993591309
    9. ' backup' → logprob: -4.788969993591309
    10. ' prev' → logprob: -4.913969993591309

Token 535: '_state' (ID: 9479)
  Prédit: '_rng'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rng' → logprob: -0.2771202027797699
    2. '_current' → logprob: -1.9021202325820923
    3. '_value' → logprob: -2.7771201133728027
    4. '_l' → logprob: -3.9021201133728027
    5. '_state' → logprob: -5.027120113372803
    6. ' =' → logprob: -6.277120113372803
    7. 'current' → logprob: -6.777120113372803
    8. '_val' → logprob: -8.027120590209961
    9. '=' → logprob: -8.527120590209961
    10. '=current' → logprob: -9.277120590209961

Token 536: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132841885089874
    2. '=' → logprob: -1.313284158706665
    3. '=self' → logprob: -11.563283920288086
    4. ',' → logprob: -13.063283920288086
    5. '_' → logprob: -13.188283920288086
    6. '=current' → logprob: -13.188283920288086
    7. '    ' → logprob: -13.313283920288086
    8. '=
' → logprob: -13.688283920288086
    9. '        ' → logprob: -14.188283920288086
    10. '   ' → logprob: -14.313283920288086

Token 537: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00023095356300473213
    2. ' self' → logprob: -8.37523078918457
    3. 'current' → logprob: -14.75023078918457
    4. '       ' → logprob: -17.87523078918457
    5. 'Linear' → logprob: -18.37523078918457
    6. '=self' → logprob: -18.50023078918457
    7. '(self' → logprob: -18.50023078918457
    8. '
' → logprob: -18.50023078918457
    9. '   ' → logprob: -18.75023078918457
    10. ' current' → logprob: -19.37523078918457

Token 538: '.l' (ID: 1000)
  Prédit: '.l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.l' → logprob: -0.0362984761595726
    2. 'current' → logprob: -4.1612982749938965
    3. 'l' → logprob: -4.5362982749938965
    4. 'lc' → logprob: -5.0362982749938965
    5. '.current' → logprob: -6.5362982749938965
    6. 'self' → logprob: -6.6612982749938965
    7. '       ' → logprob: -10.786298751831055
    8. 'class' → logprob: -11.286298751831055
    9. 'lg' → logprob: -11.536298751831055
    10. '           ' → logprob: -11.786298751831055

Token 539: 'cg' (ID: 54237)
  Prédit: 'cg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cg' → logprob: -1.9385402993066236e-05
    2. 'c' → logprob: -11.000019073486328
    3. 'gc' → logprob: -13.750019073486328
    4. ' cg' → logprob: -15.125019073486328
    5. 'CG' → logprob: -15.875019073486328
    6. 'self' → logprob: -16.000019073486328
    7. 'cq' → logprob: -16.000019073486328
    8. 'cgi' → logprob: -16.000019073486328
    9. 'cf' → logprob: -16.125019073486328
    10. 'cl' → logprob: -16.250019073486328

Token 540: '.current' (ID: 8357)
  Prédit: '.current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.current' → logprob: -0.0003103175258729607
    2. 'current' → logprob: -8.750309944152832
    3. '.' → logprob: -8.875309944152832
    4. '.cur' → logprob: -12.750309944152832
    5. '
' → logprob: -13.375309944152832
    6. ' .' → logprob: -13.500309944152832
    7. '.curr' → logprob: -13.500309944152832
    8. '.c' → logprob: -13.625309944152832
    9. '.
' → logprob: -14.500309944152832
    10. '.next' → logprob: -14.750309944152832

Token 541: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0615730918943882
    2. '           ' → logprob: -2.936573028564453
    3. '            
' → logprob: -5.561573028564453
    4. ' 
' → logprob: -7.311573028564453
    5. '\n' → logprob: -7.311573028564453
    6. '
' → logprob: -8.311573028564453
    7. '<|end|>' → logprob: -8.686573028564453
    8. '       ' → logprob: -8.686573028564453
    9. 'self' → logprob: -9.436573028564453
    10. '    
' → logprob: -9.436573028564453

Token 542: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.40543439984321594
    2. '
' → logprob: -1.1554343700408936
    3. ' for' → logprob: -5.530434608459473
    4. '       ' → logprob: -5.530434608459473
    5. '            
' → logprob: -5.655434608459473
    6. '<|end|>' → logprob: -6.905434608459473
    7. '    
' → logprob: -7.405434608459473
    8. '        
' → logprob: -7.405434608459473
    9. 'for' → logprob: -7.530434608459473
    10. ' 
' → logprob: -7.780434608459473

Token 543: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.7846179008483887
    2. 'for' → logprob: -0.9096179008483887
    3. 'frame' → logprob: -2.2846179008483887
    4. '           ' → logprob: -3.7846179008483887
    5. 'found' → logprob: -4.534617900848389
    6. 'current' → logprob: -6.534617900848389
    7. 'value' → logprob: -7.534617900848389
    8. ' for' → logprob: -7.534617900848389
    9. 'start' → logprob: -7.659617900848389
    10. 'next' → logprob: -7.784617900848389

Token 544: ' Advance' (ID: 71813)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.558576226234436
    2. 'self' → logprob: -1.308576226234436
    3. 'frame' → logprob: -1.933576226234436
    4. 'found' → logprob: -5.5585761070251465
    5. 'start' → logprob: -5.6835761070251465
    6. 'current' → logprob: -6.4335761070251465
    7. 'step' → logprob: -6.6835761070251465
    8. 'search' → logprob: -6.9335761070251465
    9. 'value' → logprob: -7.6835761070251465
    10. 'pos' → logprob: -8.183576583862305

Token 545: ' RNG' (ID: 165661)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.40386250615119934
    2. 'time' → logprob: -1.528862476348877
    3. ' self' → logprob: -3.278862476348877
    4. 'for' → logprob: -3.278862476348877
    5. ' for' → logprob: -4.903862476348877
    6. '<|end|>' → logprob: -5.028862476348877
    7. ' time' → logprob: -5.278862476348877
    8. 'the' → logprob: -5.653862476348877
    9. '(self' → logprob: -5.903862476348877
    10. 'tokens' → logprob: -6.028862476348877

Token 546: ' to' (ID: 316)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 547: ' frame' (ID: 7298)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.04349248483777046
    2. ' time' → logprob: -3.168492555618286
    3. '(time' → logprob: -8.418492317199707
    4. '
' → logprob: -9.418492317199707
    5. 'self' → logprob: -9.418492317199707
    6. 'the' → logprob: -10.418492317199707
    7. '=time' → logprob: -11.043492317199707
    8. ' the' → logprob: -11.168492317199707
    9. 'current' → logprob: -11.668492317199707
    10. ' (' → logprob: -11.918492317199707

Token 548: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.3972626328468323
    2. ' time' → logprob: -1.1472625732421875
    3. ' =' → logprob: -5.3972625732421875
    4. '=' → logprob: -5.7722625732421875
    5. '=time' → logprob: -6.3972625732421875
    6. '
' → logprob: -7.8972625732421875
    7. '(time' → logprob: -8.522262573242188
    8. '_time' → logprob: -8.772262573242188
    9. ' (' → logprob: -10.022262573242188
    10. '+' → logprob: -10.147262573242188

Token 549: ' (' (ID: 350)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12700161337852478
    2. ' +' → logprob: -2.1270015239715576
    3. '+
' → logprob: -10.502001762390137
    4. '
' → logprob: -10.627001762390137
    5. ' +
' → logprob: -12.127001762390137
    6. '   ' → logprob: -12.627001762390137
    7. '           ' → logprob: -13.252001762390137
    8. '+self' → logprob: -13.627001762390137
    9. '    
' → logprob: -14.127001762390137
    10. '    ' → logprob: -14.127001762390137

Token 550: 'run' (ID: 12935)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8043276071548462
    2. 'time' → logprob: -0.9293276071548462
    3. ')
' → logprob: -2.4293274879455566
    4. '+' → logprob: -3.5543274879455566
    5. 'self' → logprob: -4.679327487945557
    6. '           ' → logprob: -4.929327487945557
    7. ' )' → logprob: -5.304327487945557
    8. ' time' → logprob: -5.554327487945557
    9. '
' → logprob: -5.804327487945557
    10. ' +' → logprob: -5.804327487945557

Token 551: ' RNG' (ID: 165661)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.945929765701294
    2. ' for' → logprob: -1.820929765701294
    3. '_' → logprob: -1.945929765701294
    4. 'for' → logprob: -2.195929765701294
    5. ' time' → logprob: -2.445929765701294
    6. ')' → logprob: -3.445929765701294
    7. '_time' → logprob: -4.195929527282715
    8. 'self' → logprob: -4.570929527282715
    9. ' _' → logprob: -4.820929527282715
    10. '(time' → logprob: -5.070929527282715

Token 552: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15500874817371368
    2. ' for' → logprob: -2.4050087928771973
    3. '.current' → logprob: -3.7800087928771973
    4. ')' → logprob: -4.530008792877197
    5. 'current' → logprob: -5.155008792877197
    6. 'self' → logprob: -5.780008792877197
    7. '.next' → logprob: -6.030008792877197
    8. '
' → logprob: -7.030008792877197
    9. 'while' → logprob: -7.155008792877197
    10. 'steps' → logprob: -7.280008792877197

Token 553: ' '' (ID: 461)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.0729215145111084
    2. ' time' → logprob: -2.6979215145111084
    3. '(time' → logprob: -6.5729217529296875
    4. ' (' → logprob: -7.5729217529296875
    5. 'self' → logprob: -8.072921752929688
    6. '1' → logprob: -8.322921752929688
    7. ')' → logprob: -8.322921752929688
    8. '
' → logprob: -10.197921752929688
    9. '0' → logprob: -10.572921752929688
    10. 't' → logprob: -10.697921752929688

Token 554: 'time' (ID: 4580)
  Prédit: 'time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.026413271203637123
    2. ' time' → logprob: -3.6514132022857666
    3. '(time' → logprob: -9.901412963867188
    4. ' (' → logprob: -10.651412963867188
    5. 't' → logprob: -11.651412963867188
    6. '
' → logprob: -11.651412963867188
    7. ' 
' → logprob: -12.651412963867188
    8. ')' → logprob: -13.151412963867188
    9. '1' → logprob: -13.276412963867188
    10. ' ' → logprob: -13.401412963867188

Token 555: ''' (ID: 6)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2517576515674591
    2. ''' → logprob: -2.7517576217651367
    3. ')' → logprob: -2.7517576217651367
    4. '')' → logprob: -3.1267576217651367
    5. ' +' → logprob: -3.3767576217651367
    6. 'tokens' → logprob: -5.751757621765137
    7. 'times' → logprob: -6.376757621765137
    8. 'steps' → logprob: -6.501757621765137
    9. '   ' → logprob: -6.626757621765137
    10. ' )' → logprob: -7.126757621765137

Token 556: ' times' (ID: 4238)
  Prédit: ' steps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' steps' → logprob: -0.42207542061805725
    2. 'steps' → logprob: -2.1720755100250244
    3. ')' → logprob: -2.6720755100250244
    4. ' times' → logprob: -2.6720755100250244
    5. ' frames' → logprob: -3.4220755100250244
    6. 'frames' → logprob: -3.7970755100250244
    7. 'times' → logprob: -4.172075271606445
    8. ' iterations' → logprob: -4.297075271606445
    9. 'iterations' → logprob: -5.922075271606445
    10. ' ' → logprob: -6.797075271606445

Token 557: ' because' (ID: 2236)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.053430505096912384
    2. ')
' → logprob: -3.0534305572509766
    3. '):' → logprob: -5.678430557250977
    4. '):
' → logprob: -6.928430557250977
    5. '           ' → logprob: -9.553430557250977
    6. 'for' → logprob: -10.053430557250977
    7. ':' → logprob: -10.178430557250977
    8. ' for' → logprob: -10.428430557250977
    9. ')

' → logprob: -10.428430557250977
    10. '
' → logprob: -10.428430557250977

Token 558: ' current' (ID: 2208)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.6190767288208008
    2. 'range' → logprob: -1.6190767288208008
    3. ' the' → logprob: -1.9940767288208008
    4. 'time' → logprob: -2.244076728820801
    5. ' time' → logprob: -2.619076728820801
    6. 'the' → logprob: -2.744076728820801
    7. ' we' → logprob: -3.119076728820801
    8. ' self' → logprob: -3.119076728820801
    9. ' range' → logprob: -3.119076728820801
    10. ')' → logprob: -4.744076728820801

Token 559: ' is' (ID: 382)
  Prédit: '_rng'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rng' → logprob: -0.5440837740898132
    2. ')' → logprob: -2.294083833694458
    3. 'value' → logprob: -2.544083833694458
    4. ' value' → logprob: -2.544083833694458
    5. ' is' → logprob: -3.294083833694458
    6. 'state' → logprob: -4.294083595275879
    7. '_value' → logprob: -4.419083595275879
    8. '.' → logprob: -4.544083595275879
    9. ' state' → logprob: -5.044083595275879
    10. ' has' → logprob: -5.044083595275879

Token 560: ' initial' (ID: 4871)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.913816511631012
    2. 'already' → logprob: -1.2888164520263672
    3. 'after' → logprob: -2.038816452026367
    4. 'the' → logprob: -2.913816452026367
    5. 'self' → logprob: -2.913816452026367
    6. ' at' → logprob: -3.288816452026367
    7. ' already' → logprob: -4.913816452026367
    8. 'current' → logprob: -5.163816452026367
    9. ' after' → logprob: -5.163816452026367
    10. 'time' → logprob: -5.288816452026367

Token 561: ')
' (ID: 446)
  Prédit: ' value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.9675626754760742
    2. ' +' → logprob: -1.8425626754760742
    3. ')' → logprob: -2.092562675476074
    4. '_value' → logprob: -2.717562675476074
    5. '_rng' → logprob: -2.717562675476074
    6. 'value' → logprob: -2.842562675476074
    7. ' state' → logprob: -2.842562675476074
    8. 'state' → logprob: -3.717562675476074
    9. '_state' → logprob: -4.217562675476074
    10. '+' → logprob: -4.217562675476074

Token 562: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1957278996706009
    2. ' for' → logprob: -2.570727825164795
    3. 'for' → logprob: -2.820727825164795
    4. '
' → logprob: -3.320727825164795
    5. 'self' → logprob: -5.820727825164795
    6. '            
' → logprob: -6.945727825164795
    7. '       ' → logprob: -8.070728302001953
    8. ' self' → logprob: -8.320728302001953
    9. '<|end|>' → logprob: -8.695728302001953
    10. ',' → logprob: -9.445728302001953

Token 563: ' self' (ID: 1051)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2810285687446594
    2. '           ' → logprob: -2.4060285091400146
    3. ' for' → logprob: -2.5310285091400146
    4. 'self' (adapté à ' self') → logprob: -2.6560285091400146
    5. ' self' → logprob: -5.531028747558594
    6. '            
' → logprob: -8.156028747558594
    7. '
' → logprob: -8.531028747558594
    8. 'while' → logprob: -8.781028747558594
    9. 'temp' → logprob: -9.656028747558594
    10. 'current' → logprob: -9.656028747558594

Token 564: '.l' (ID: 1000)
  Prédit: '.l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.l' → logprob: -0.002095303265377879
    2. 'current' → logprob: -7.2520952224731445
    3. '.' → logprob: -7.5020952224731445
    4. 'for' → logprob: -7.7520952224731445
    5. '.current' → logprob: -8.752095222473145
    6. 'time' → logprob: -9.377095222473145
    7. 'l' → logprob: -10.377095222473145
    8. '   ' → logprob: -10.502095222473145
    9. '.time' → logprob: -12.252095222473145
    10. '```' → logprob: -12.439595222473145

Token 565: 'cg' (ID: 54237)
  Prédit: 'cg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cg' → logprob: -2.3915141355246305e-05
    2. 'c' → logprob: -11.25002384185791
    3. 'gc' → logprob: -12.62502384185791
    4. '   ' → logprob: -13.75002384185791
    5. ' cg' → logprob: -14.00002384185791
    6. 'ine' → logprob: -14.37502384185791
    7. '```' → logprob: -14.37502384185791
    8. 'og' → logprob: -14.75002384185791
    9. 'rg' → logprob: -14.75002384185791
    10. 'in' → logprob: -15.37502384185791

Token 566: '.current' (ID: 8357)
  Prédit: '.reset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.reset' → logprob: -0.478098064661026
    2. '.current' → logprob: -0.9780980348587036
    3. '.' → logprob: -5.728097915649414
    4. '.next' → logprob: -7.478097915649414
    5. 'current' → logprob: -9.103097915649414
    6. '.restart' → logprob: -10.228097915649414
    7. 'reset' → logprob: -11.478097915649414
    8. ' .' → logprob: -12.353097915649414
    9. '=current' → logprob: -12.603097915649414
    10. '.set' → logprob: -12.603097915649414

Token 567: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05108021944761276
    2. ' =' → logprob: -3.0510802268981934
    3. '<|end|>' → logprob: -6.426080226898193
    4. '+=' → logprob: -8.301079750061035
    5. '<|end|>' → logprob: -8.926079750061035
    6. ',' → logprob: -9.051079750061035
    7. '=
' → logprob: -9.551079750061035
    8. 'for' → logprob: -9.926079750061035
    9. ')' → logprob: -10.051079750061035
    10. ' ' → logprob: -10.301079750061035

Token 568: ' current' (ID: 2208)
  Prédit: 'saved'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'saved' → logprob: -0.13277368247509003
    2. 'current' → logprob: -2.1327736377716064
    3. 'self' → logprob: -5.2577738761901855
    4. ' saved' → logprob: -8.382773399353027
    5. '(saved' → logprob: -8.507773399353027
    6. ' current' → logprob: -9.882773399353027
    7. 'time' → logprob: -10.507773399353027
    8. 'sal' → logprob: -11.132773399353027
    9. 'cur' → logprob: -11.257773399353027
    10. '   ' → logprob: -11.382773399353027

Token 569: '_rng' (ID: 168456)
  Prédit: '_rng'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_rng' → logprob: -0.016467614099383354
    2. 'time' → logprob: -4.766467571258545
    3. 'rng' → logprob: -6.516467571258545
    4. '_time' → logprob: -6.641467571258545
    5. 'value' → logprob: -6.766467571258545
    6. '_state' → logprob: -6.891467571258545
    7. 'state' → logprob: -7.141467571258545
    8. '_' → logprob: -8.391468048095703
    9. 'saved' → logprob: -8.391468048095703
    10. '_value' → logprob: -8.391468048095703

Token 570: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.007740073837339878
    2. 'value' → logprob: -4.882740020751953
    3. 'alue' → logprob: -9.757740020751953
    4. '_val' → logprob: -11.132740020751953
    5. '_' → logprob: -11.507740020751953
    6. '+' → logprob: -11.632740020751953
    7. 'Value' → logprob: -11.757740020751953
    8. 'val' → logprob: -11.757740020751953
    9. ' value' → logprob: -11.882740020751953
    10. '
' → logprob: -12.632740020751953

Token 571: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21396750211715698
    2. '
' → logprob: -2.0889675617218018
    3. 'for' → logprob: -2.9639675617218018
    4. '       ' → logprob: -4.713967323303223
    5. ' for' → logprob: -5.088967323303223
    6. '            
' → logprob: -7.713967323303223
    7. '        
' → logprob: -7.838967323303223
    8. '		' → logprob: -8.338967323303223
    9. '    
' → logprob: -8.338967323303223
    10. '   ' → logprob: -8.963967323303223

Token 572: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0011346201645210385
    2. 'for' → logprob: -7.376134395599365
    3. '
' → logprob: -8.126134872436523
    4. ' for' → logprob: -9.001134872436523
    5. '            
' → logprob: -10.251134872436523
    6. '       ' → logprob: -10.251134872436523
    7. '        
' → logprob: -12.626134872436523
    8. '		' → logprob: -13.001134872436523
    9. '               ' → logprob: -13.001134872436523
    10. '   ' → logprob: -13.376134872436523

Token 573: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.33001628518104553
    2. '           ' → logprob: -1.4550162553787231
    3. ' for' → logprob: -3.0800163745880127
    4. 'time' → logprob: -7.580016136169434
    5. '
' → logprob: -7.705016136169434
    6. '            
' → logprob: -7.955016136169434
    7. 'self' → logprob: -9.205016136169434
    8. '       ' → logprob: -9.455016136169434
    9. 'i' → logprob: -10.205016136169434
    10. 'frame' → logprob: -10.330016136169434

Token 574: ' _' (ID: 1175)
  Prédit: 'frame'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'frame' → logprob: -0.5935666561126709
    2. '_' → logprob: -1.093566656112671
    3. 'f' → logprob: -3.343566656112671
    4. '_frame' → logprob: -3.343566656112671
    5. 'step' → logprob: -4.09356689453125
    6. ' frame' → logprob: -4.96856689453125
    7. '_f' → logprob: -5.21856689453125
    8. '_step' → logprob: -5.84356689453125
    9. '_j' → logprob: -6.09356689453125
    10. ' _' → logprob: -6.09356689453125

Token 575: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0337759405374527
    2. 'in' → logprob: -3.408776044845581
    3. 'frame' → logprob: -9.90877628326416
    4. ' ' → logprob: -10.28377628326416
    5. ' i' → logprob: -10.65877628326416
    6. 'i' → logprob: -11.15877628326416
    7. '  ' → logprob: -13.53377628326416
    8. '   ' → logprob: -13.65877628326416
    9. '    ' → logprob: -14.03377628326416
    10. '	in' → logprob: -14.53377628326416

Token 576: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0017102824058383703
    2. ' range' → logprob: -6.376710414886475
    3. '   ' → logprob: -13.001709938049316
    4. '
' → logprob: -13.501709938049316
    5. ' ' → logprob: -13.876709938049316
    6. '(range' → logprob: -14.126709938049316
    7. '	range' → logprob: -14.376709938049316
    8. 'r' → logprob: -14.626709938049316
    9. '  ' → logprob: -14.876709938049316
    10. '    ' → logprob: -15.626709938049316

Token 577: '(time' (ID: 19192)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.5786347985267639
    2. '(time' → logprob: -0.9536347985267639
    3. ' time' → logprob: -2.953634738922119
    4. ' (' → logprob: -6.578634738922119
    5. '(' → logprob: -8.078635215759277
    6. '   ' → logprob: -9.703635215759277
    7. '	time' → logprob: -10.953635215759277
    8. '
' → logprob: -11.578635215759277
    9. '(t' → logprob: -11.828635215759277
    10. '           ' → logprob: -12.078635215759277

Token 578: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.22600866854190826
    2. ' +' → logprob: -1.601008653640747
    3. ',' → logprob: -7.601008892059326
    4. '   ' → logprob: -10.601008415222168
    5. '    ' → logprob: -11.226008415222168
    6. '+
' → logprob: -11.351008415222168
    7. ' ,' → logprob: -11.351008415222168
    8. '):' → logprob: -11.726008415222168
    9. '+,' → logprob: -12.226008415222168
    10. '):
' → logprob: -12.601008415222168

Token 579: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0039730858989059925
    2. ' self' → logprob: -6.503973007202148
    3. '   ' → logprob: -7.003973007202148
    4. 'self' → logprob: -8.128973007202148
    5. '                
' → logprob: -8.253973007202148
    6. '           ' → logprob: -8.503973007202148
    7. '	           ' → logprob: -8.878973007202148
    8. '       ' → logprob: -9.128973007202148
    9. '                   ' → logprob: -9.378973007202148
    10. ':' → logprob: -9.753973007202148

Token 580: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.019089888781309128
    2. '_' → logprob: -4.019089698791504
    3. ' self' → logprob: -7.394089698791504
    4. '               ' → logprob: -8.269089698791504
    5. '_self' → logprob: -11.019089698791504
    6. ' _' → logprob: -11.144089698791504
    7. '                   ' → logprob: -11.144089698791504
    8. 'next' → logprob: -11.644089698791504
    9. '   ' → logprob: -12.394089698791504
    10. '	self' → logprob: -12.769089698791504

Token 581: '.l' (ID: 1000)
  Prédit: '.l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.l' → logprob: -0.0026332074776291847
    2. '.next' → logprob: -6.002633094787598
    3. '.current' → logprob: -9.627633094787598
    4. '.' → logprob: -10.377633094787598
    5. 'next' → logprob: -10.627633094787598
    6. 'l' → logprob: -12.252633094787598
    7. ' .' → logprob: -12.377633094787598
    8. '	l' → logprob: -12.502633094787598
    9. 'current' → logprob: -12.627633094787598
    10. '   ' → logprob: -12.752633094787598

Token 582: 'cg' (ID: 54237)
  Prédit: 'cg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cg' → logprob: -0.0017080175457522273
    2. 'c' → logprob: -6.376708030700684
    3. 'cgi' → logprob: -13.626708030700684
    4. 'gc' → logprob: -14.001708030700684
    5. ' cg' → logprob: -14.251708030700684
    6. '.cg' → logprob: -14.376708030700684
    7. 'g' → logprob: -14.876708030700684
    8. '   ' → logprob: -15.251708030700684
    9. '```' → logprob: -15.501708030700684
    10. 'CG' → logprob: -15.501708030700684

Token 583: '.next' (ID: 6689)
  Prédit: '.next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.next' → logprob: -0.007698895409703255
    2. '.' → logprob: -5.257699012756348
    3. '.current' → logprob: -6.007699012756348
    4. 'next' → logprob: -13.757699012756348
    5. ' .' → logprob: -15.132699012756348
    6. '   ' → logprob: -15.757699012756348
    7. ').' → logprob: -16.00769805908203
    8. '=' → logprob: -16.13269805908203
    9. '.previous' → logprob: -16.13269805908203
    10. 'current' → logprob: -16.50769805908203

Token 584: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3505766689777374
    2. '()
' → logprob: -1.225576639175415
    3. '           ' → logprob: -6.600576877593994
    4. '
' → logprob: -7.600576877593994
    5. '()

' → logprob: -9.350576400756836
    6. '()\' → logprob: -9.350576400756836
    7. '()
' → logprob: -9.725576400756836
    8. '       ' → logprob: -12.225576400756836
    9. '();' → logprob: -12.475576400756836
    10. '            
' → logprob: -12.975576400756836

Token 585: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005993809318169951
    2. '            
' → logprob: -7.625599384307861
    3. '
' → logprob: -9.750598907470703
    4. ' 
' → logprob: -11.125598907470703
    5. '       ' → logprob: -11.625598907470703
    6. '               ' → logprob: -11.875598907470703
    7. '        
' → logprob: -12.375598907470703
    8. '                
' → logprob: -12.500598907470703
    9. '           
' → logprob: -12.625598907470703
    10. '  
' → logprob: -12.750598907470703

Token 586: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6755808591842651
    2. '           ' → logprob: -0.8005808591842651
    3. ' for' → logprob: -3.1755809783935547
    4. '            
' → logprob: -9.550580978393555
    5. '
' → logprob: -9.675580978393555
    6. '       ' → logprob: -10.800580978393555
    7. 'frame' → logprob: -10.925580978393555
    8. 'time' → logprob: -11.050580978393555
    9. 'while' → logprob: -11.175580978393555
    10. '   ' → logprob: -11.300580978393555

Token 587: ' From' (ID: 7217)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0039609745144844055
    2. 'self' → logprob: -6.503961086273193
    3. '           ' → logprob: -6.753961086273193
    4. 'start' → logprob: -7.128961086273193
    5. 'frame' → logprob: -8.503960609436035
    6. 'search' → logprob: -8.878960609436035
    7. 'found' → logprob: -9.878960609436035
    8. 'target' → logprob: -10.128960609436035
    9. ' for' → logprob: -11.128960609436035
    10. 'while' → logprob: -12.128960609436035

Token 588: ' frame' (ID: 7298)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.35036447644233704
    2. ' time' → logprob: -1.2253644466400146
    3. '1' → logprob: -7.350364685058594
    4. '(time' → logprob: -7.350364685058594
    5. ' (' → logprob: -8.725364685058594
    6. '
' → logprob: -9.225364685058594
    7. 'range' → logprob: -9.350364685058594
    8. ' range' → logprob: -9.975364685058594
    9. ' ' → logprob: -9.975364685058594
    10. '_' → logprob: -10.225364685058594

Token 589: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -0.22258616983890533
    2. ' time' → logprob: -1.7225861549377441
    3. '(time' → logprob: -3.972586154937744
    4. ' (' → logprob: -6.472586154937744
    5. '+' → logprob: -8.722586631774902
    6. '=time' → logprob: -8.972586631774902
    7. '	time' → logprob: -9.722586631774902
    8. '
' → logprob: -10.222586631774902
    9. '           ' → logprob: -10.347586631774902
    10. '=' → logprob: -10.597586631774902

Token 590: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.052709586918354034
    2. ' +' → logprob: -3.1777095794677734
    3. '           ' → logprob: -4.927709579467773
    4. 'time' → logprob: -7.302709579467773
    5. ',' → logprob: -7.677709579467773
    6. '   ' → logprob: -8.177709579467773
    7. '       ' → logprob: -8.177709579467773
    8. '
' → logprob: -8.427709579467773
    9. 'for' → logprob: -9.302709579467773
    10. ')' → logprob: -9.927709579467773

Token 591: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5928495486150496e-05
    2. '+' → logprob: -11.625016212463379
    3. ' ' → logprob: -12.375016212463379
    4. '
' → logprob: -13.000016212463379
    5. '   ' → logprob: -15.750016212463379
    6. ' +' → logprob: -16.250015258789062
    7. '```' → logprob: -16.500015258789062
    8. '

' → logprob: -17.375015258789062
    9. '    ' → logprob: -17.875015258789062
    10. '`' → logprob: -17.875015258789062

Token 592: ' to' (ID: 316)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12312187999486923
    2. ':' → logprob: -2.373121976852417
    3. ',' → logprob: -4.998121738433838
    4. 'for' → logprob: -5.123121738433838
    5. ' onwards' → logprob: -5.998121738433838
    6. 'to' → logprob: -5.998121738433838
    7. ' for' → logprob: -6.623121738433838
    8. ' to' → logprob: -6.748121738433838
    9. '):' → logprob: -7.373121738433838
    10. ' onward' → logprob: -8.123122215270996

Token 593: ' MAX' (ID: 16960)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0818219855427742
    2. 'Frame' → logprob: -2.706821918487549
    3. ' self' → logprob: -4.581821918487549
    4. 'Linear' → logprob: -7.456821918487549
    5. ' Frame' → logprob: -7.581821918487549
    6. '   ' → logprob: -8.706822395324707
    7. '
' → logprob: -9.081822395324707
    8. 's' → logprob: -10.206822395324707
    9. '       ' → logprob: -10.581822395324707
    10. '(self' → logprob: -10.831822395324707

Token 594: '_FR' (ID: 32174)
  Prédit: '_FR'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_FR' → logprob: -0.02879343554377556
    2. 'Frames' → logprob: -3.7787933349609375
    3. '_Fr' → logprob: -5.9037933349609375
    4. '_FRAME' → logprob: -6.9037933349609375
    5. '_frames' → logprob: -7.1537933349609375
    6. '_' → logprob: -7.1537933349609375
    7. 'self' → logprob: -9.903793334960938
    8. '_F' → logprob: -9.903793334960938
    9. '\' → logprob: -10.278793334960938
    10. '   ' → logprob: -10.778793334960938

Token 595: 'AMES' (ID: 31920)
  Prédit: 'AMES'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AMES' → logprob: -0.001634835614822805
    2. 'ames' → logprob: -6.75163459777832
    3. 'AME' → logprob: -7.75163459777832
    4. 'R' → logprob: -11.12663459777832
    5. 'MES' → logprob: -12.12663459777832
    6. '_frames' → logprob: -12.75163459777832
    7. 'AM' → logprob: -12.87663459777832
    8. 'Frames' → logprob: -13.75163459777832
    9. 'frames' → logprob: -14.00163459777832
    10. '_' → logprob: -14.00163459777832

Token 596: ' search' (ID: 3684)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010244123637676239
    2. ':' → logprob: -4.760243892669678
    3. ',' → logprob: -7.510243892669678
    4. ' for' → logprob: -7.760243892669678
    5. ':
' → logprob: -8.010244369506836
    6. '               ' → logprob: -9.010244369506836
    7. '<|end|>' → logprob: -9.635244369506836
    8. '
' → logprob: -10.385244369506836
    9. '<|end|>' → logprob: -10.385244369506836
    10. 'for' → logprob: -11.510244369506836

Token 597: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08789542317390442
    2. ' for' → logprob: -2.712895393371582
    3. 'for' → logprob: -4.212895393371582
    4. '(' → logprob: -6.837895393371582
    5. '               ' → logprob: -6.962895393371582
    6. ':' → logprob: -8.462895393371582
    7. ',' → logprob: -8.837895393371582
    8. ' in' → logprob: -8.962895393371582
    9. ' (' → logprob: -10.087895393371582
    10. '            ' → logprob: -10.087895393371582

Token 598: ' matching' (ID: 20238)
  Prédit: 'frame'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'frame' → logprob: -0.25127866864204407
    2. 'found' → logprob: -1.6262786388397217
    3. 'f' → logprob: -4.251278877258301
    4. ' frame' → logprob: -5.126278877258301
    5. ' found' → logprob: -6.251278877258301
    6. '_frame' → logprob: -7.001278877258301
    7. '_' → logprob: -7.251278877258301
    8. 'target' → logprob: -7.501278877258301
    9. '_found' → logprob: -8.6262788772583
    10. '(frame' → logprob: -9.1262788772583

Token 599: ' target' (ID: 3783)
  Prédit: 'frame'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'frame' → logprob: -0.2861056923866272
    2. ' frame' → logprob: -2.2861056327819824
    3. 'value' → logprob: -3.1611056327819824
    4. 'for' → logprob: -3.2861056327819824
    5. '_frame' → logprob: -3.7861056327819824
    6. ' in' → logprob: -4.161105632781982
    7. ' for' → logprob: -4.786105632781982
    8. 'range' → logprob: -4.911105632781982
    9. ' value' → logprob: -5.786105632781982
    10. 'in' → logprob: -6.036105632781982

Token 600: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011407596059143543
    2. ' for' → logprob: -5.136407375335693
    3. '
' → logprob: -5.511407375335693
    4. 'for' → logprob: -6.886407375335693
    5. '            
' → logprob: -8.511407852172852
    6. ',' → logprob: -10.261407852172852
    7. '<|end|>' → logprob: -10.636407852172852
    8. '    
' → logprob: -11.011407852172852
    9. '       ' → logprob: -11.136407852172852
    10. '<|end|>' → logprob: -11.261407852172852

Token 601: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006863446324132383
    2. '
' → logprob: -7.500686168670654
    3. ' for' → logprob: -9.375686645507812
    4. '            
' → logprob: -10.625686645507812
    5. 'for' → logprob: -11.625686645507812
    6. '		' → logprob: -13.125686645507812
    7. '               ' → logprob: -13.375686645507812
    8. '    
' → logprob: -13.375686645507812
    9. '       ' → logprob: -13.750686645507812
    10. '\n' → logprob: -13.875686645507812

Token 602: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.04429702088236809
    2. '           ' → logprob: -3.169296979904175
    3. ' for' → logprob: -6.669297218322754
    4. 'found' → logprob: -10.794297218322754
    5. 'start' → logprob: -13.544297218322754
    6. '               ' → logprob: -13.794297218322754
    7. 'frame' → logprob: -13.794297218322754
    8. '       ' → logprob: -14.169297218322754
    9. '
' → logprob: -14.419297218322754
    10. 'self' → logprob: -14.794297218322754

Token 603: ' frame' (ID: 7298)
  Prédit: 'frame'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'frame' → logprob: -0.003919057082384825
    2. 'f' → logprob: -6.2539191246032715
    3. ' frame' → logprob: -6.3789191246032715
    4. '_frame' → logprob: -8.378918647766113
    5. 'frm' → logprob: -11.003918647766113
    6. '_' → logprob: -11.878918647766113
    7. ' f' → logprob: -11.878918647766113
    8. 'fr' → logprob: -11.878918647766113
    9. '(frame' → logprob: -12.128918647766113
    10. '_f' → logprob: -12.503918647766113

Token 604: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03829335421323776
    2. 'in' → logprob: -3.2882933616638184
    3. '_' → logprob: -9.41329288482666
    4. 'time' → logprob: -9.66329288482666
    5. '_in' → logprob: -9.91329288482666
    6. '	in' → logprob: -11.16329288482666
    7. ' ' → logprob: -11.66329288482666
    8. '_time' → logprob: -11.78829288482666
    9. '   ' → logprob: -12.53829288482666
    10. '_index' → logprob: -13.16329288482666

Token 605: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.000565541791729629
    2. ' range' → logprob: -7.500565528869629
    3. '   ' → logprob: -11.500565528869629
    4. ' ' → logprob: -14.125565528869629
    5. '(range' → logprob: -14.375565528869629
    6. '	range' → logprob: -15.000565528869629
    7. '
' → logprob: -15.500565528869629
    8. '

' → logprob: -15.500565528869629
    9. '  ' → logprob: -15.625565528869629
    10. '    ' → logprob: -16.875566482543945

Token 606: '(time' (ID: 19192)
  Prédit: '(time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(time' → logprob: -0.00410143518820405
    2. 'time' → logprob: -5.504101276397705
    3. '(' → logprob: -11.629101753234863
    4. ' time' → logprob: -11.754101753234863
    5. '   ' → logprob: -12.379101753234863
    6. '	time' → logprob: -13.879101753234863
    7. ' (' → logprob: -14.879101753234863
    8. '=time' → logprob: -15.254101753234863
    9. ',time' → logprob: -15.754101753234863
    10. '1' → logprob: -16.129100799560547

Token 607: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10022284835577011
    2. ' +' → logprob: -2.3502228260040283
    3. '+
' → logprob: -11.47522258758545
    4. ',' → logprob: -13.47522258758545
    5. '   ' → logprob: -13.47522258758545
    6. ' +
' → logprob: -14.10022258758545
    7. '1' → logprob: -14.22522258758545
    8. '+,' → logprob: -14.22522258758545
    9. '       ' → logprob: -15.97522258758545
    10. ' ' → logprob: -16.350223541259766

Token 608: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0445127372804563e-05
    2. ' ' → logprob: -11.50001049041748
    3. '
' → logprob: -15.75001049041748
    4. '   ' → logprob: -15.75001049041748
    5. '+' → logprob: -18.750009536743164
    6. '```' → logprob: -18.750009536743164
    7. '  ' → logprob: -19.000009536743164
    8. '

' → logprob: -19.250009536743164
    9. '۱' → logprob: -19.250009536743164
    10. '    ' → logprob: -19.375009536743164

Token 609: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.080963092041202e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -15.375004768371582
    4. '2' → logprob: -17.2500057220459
    5. '+' → logprob: -17.6250057220459
    6. '
' → logprob: -17.6875057220459
    7. '```' → logprob: -18.1250057220459
    8. '۱' → logprob: -18.6875057220459
    9. '  ' → logprob: -18.7500057220459
    10. '       ' → logprob: -18.9375057220459

Token 610: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.200166469876422e-06
    2. ' ,' → logprob: -12.625004768371582
    3. ',
' → logprob: -14.000004768371582
    4. ',self' → logprob: -14.625004768371582
    5. ',max' → logprob: -15.375004768371582
    6. '   ' → logprob: -15.875004768371582
    7. ',time' → logprob: -17.1250057220459
    8. 'self' → logprob: -17.1250057220459
    9. ',

' → logprob: -17.3750057220459
    10. '       ' → logprob: -17.5000057220459

Token 611: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.002494683489203453
    2. 'Frame' → logprob: -6.002494812011719
    3. ' self' → logprob: -11.252494812011719
    4. '
' → logprob: -13.002494812011719
    5. 'min' → logprob: -13.127494812011719
    6. '(self' → logprob: -14.252494812011719
    7. '   ' → logprob: -15.002494812011719
    8. ' Frame' → logprob: -15.877494812011719
    9. '       ' → logprob: -16.12749481201172
    10. '1' → logprob: -16.25249481201172

Token 612: '.MAX' (ID: 25075)
  Prédit: '.MAX'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.MAX' → logprob: -0.0011946328449994326
    2. 'MAX' → logprob: -6.751194477081299
    3. '.' → logprob: -11.376194953918457
    4. '.frame' → logprob: -12.626194953918457
    5. '.MIN' → logprob: -12.751194953918457
    6. '.max' → logprob: -12.876194953918457
    7. '.n' → logprob: -13.876194953918457
    8. '.l' → logprob: -14.001194953918457
    9. '(MAX' → logprob: -14.751194953918457
    10. '.FR' → logprob: -14.876194953918457

Token 613: '_FR' (ID: 32174)
  Prédit: '_FR'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_FR' → logprob: -0.0007457832107320428
    2. 'FR' → logprob: -7.37574577331543
    3. 'Frames' → logprob: -9.87574577331543
    4. '_frames' → logprob: -10.25074577331543
    5. '\' → logprob: -11.50074577331543
    6. '_FRAME' → logprob: -11.75074577331543
    7. '_Fr' → logprob: -12.62574577331543
    8. '   ' → logprob: -13.37574577331543
    9. '```' → logprob: -13.37574577331543
    10. ')' → logprob: -13.37574577331543

Token 614: 'AMES' (ID: 31920)
  Prédit: 'AMES'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AMES' → logprob: -0.00029959288076497614
    2. 'MES' → logprob: -8.750299453735352
    3. 'ames' → logprob: -9.500299453735352
    4. 'ES' → logprob: -10.125299453735352
    5. 'AME' → logprob: -11.625299453735352
    6. 'FR' → logprob: -12.500299453735352
    7. '_frames' → logprob: -13.000299453735352
    8. '_FR' → logprob: -13.375299453735352
    9. '```' → logprob: -13.500299453735352
    10. 'frames' → logprob: -14.000299453735352

Token 615: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2401217371225357
    2. '):' → logprob: -2.240121841430664
    3. ' +' → logprob: -2.365121841430664
    4. '):
' → logprob: -4.365121841430664
    5. ':' → logprob: -8.115121841430664
    6. '   ' → logprob: -10.740121841430664
    7. '+:' → logprob: -11.240121841430664
    8. '):
' → logprob: -11.740121841430664
    9. ',' → logprob: -11.865121841430664
    10. ')' → logprob: -11.990121841430664

Token 616: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -16.625001907348633
    4. '
' → logprob: -19.125001907348633
    5. '    ' → logprob: -20.125001907348633
    6. '  ' → logprob: -20.500001907348633
    7. '       ' → logprob: -21.125001907348633
    8. '```' → logprob: -21.125001907348633
    9. '     ' → logprob: -21.375001907348633
    10. '2' → logprob: -21.625001907348633

Token 617: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.008129963040119e-06
    2. ' ' → logprob: -12.500003814697266
    3. '   ' → logprob: -15.375003814697266
    4. '       ' → logprob: -19.500003814697266
    5. '  ' → logprob: -19.625003814697266
    6. '2' → logprob: -19.875003814697266
    7. '
' → logprob: -20.125003814697266
    8. '           ' → logprob: -20.250003814697266
    9. ')' → logprob: -20.375003814697266
    10. '    ' → logprob: -20.500003814697266

Token 618: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5831540822982788
    2. '):
' → logprob: -0.8331540822982788
    3. ':' → logprob: -4.958154201507568
    4. '):
' → logprob: -9.20815372467041
    5. ':
' → logprob: -10.08315372467041
    6. ')' → logprob: -12.20815372467041
    7. ',' → logprob: -12.45815372467041
    8. '           ' → logprob: -12.45815372467041
    9. '):

' → logprob: -12.95815372467041
    10. '       ' → logprob: -13.33315372467041

Token 619: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0001246348983841017
    2. '           ' → logprob: -9.87512493133545
    3. '                   ' → logprob: -11.50012493133545
    4. '                
' → logprob: -11.50012493133545
    5. ',' → logprob: -11.62512493133545
    6. '   ' → logprob: -11.87512493133545
    7. '       ' → logprob: -12.00012493133545
    8. '                ' → logprob: -12.00012493133545
    9. '              ' → logprob: -12.00012493133545
    10. '<|end|>' → logprob: -12.25012493133545

Token 620: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' (adapté à ' val') → logprob: -0.8982580304145813
    2. 'value' → logprob: -1.1482579708099365
    3. ' val' → logprob: -2.2732579708099365
    4. 'self' → logprob: -2.5232579708099365
    5. 'v' → logprob: -3.2732579708099365
    6. '               ' → logprob: -4.148258209228516
    7. ' value' → logprob: -4.273258209228516
    8. ' self' → logprob: -5.273258209228516
    9. 'current' → logprob: -5.398258209228516
    10. '                   ' → logprob: -5.523258209228516

Token 621: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759400725364685
    2. '=' → logprob: -0.8259400725364685
    3. ' ' → logprob: -15.950940132141113
    4. '=self' → logprob: -16.700939178466797
    5. ' ==' → logprob: -16.700939178466797
    6. ' =
' → logprob: -17.075939178466797
    7. '=
' → logprob: -17.075939178466797
    8. '	' → logprob: -17.325939178466797
    9. ')' → logprob: -17.450939178466797
    10. '   ' → logprob: -17.575939178466797

Token 622: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.018150994554162025
    2. ' self' → logprob: -4.018150806427002
    3. '               ' → logprob: -15.14315128326416
    4. '(self' → logprob: -15.26815128326416
    5. '
' → logprob: -15.64315128326416
    6. '                   ' → logprob: -16.018150329589844
    7. '	self' → logprob: -16.393150329589844
    8. '=self' → logprob: -17.518150329589844
    9. 's' → logprob: -17.893150329589844
    10. '[self' → logprob: -18.018150329589844

Token 623: '.l' (ID: 1000)
  Prédit: '.l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.l' → logprob: -0.00031174797913990915
    2. 'l' → logprob: -8.875311851501465
    3. 'lc' → logprob: -9.125311851501465
    4. 'next' → logprob: -10.500311851501465
    5. '.next' → logprob: -11.500311851501465
    6. 'self' → logprob: -11.750311851501465
    7. '	l' → logprob: -12.500311851501465
    8. '```' → logprob: -12.625311851501465
    9. '   ' → logprob: -13.625311851501465
    10. '
' → logprob: -13.750311851501465

Token 624: 'cg' (ID: 54237)
  Prédit: 'cg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cg' → logprob: -1.5928495486150496e-05
    2. 'c' → logprob: -11.250016212463379
    3. 'gc' → logprob: -13.125016212463379
    4. ' cg' → logprob: -15.000016212463379
    5. '.cg' → logprob: -16.000015258789062
    6. 'cgi' → logprob: -16.000015258789062
    7. 'CG' → logprob: -16.125015258789062
    8. 'g' → logprob: -16.375015258789062
    9. 'cq' → logprob: -17.750015258789062
    10. 'cd' → logprob: -18.000015258789062

Token 625: '.next' (ID: 6689)
  Prédit: '.next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.next' → logprob: -1.6240566083070007e-06
    2. '.' → logprob: -13.625001907348633
    3. 'next' → logprob: -15.250001907348633
    4. '.current' → logprob: -16.500001907348633
    5. '	next' → logprob: -20.000001907348633
    6. ' next' → logprob: -21.250001907348633
    7. ' .' → logprob: -21.375001907348633
    8. '_next' → logprob: -21.625001907348633
    9. '.Next' → logprob: -22.125001907348633
    10. '.n' → logprob: -22.625001907348633

Token 626: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.16149158775806427
    2. '               ' → logprob: -2.036491632461548
    3. '()
' → logprob: -4.411491394042969
    4. '<|end|>' → logprob: -5.286491394042969
    5. '<|end|>' → logprob: -8.411491394042969
    6. '                ' → logprob: -8.661491394042969
    7. '           ' → logprob: -8.786491394042969
    8. '(' → logprob: -8.786491394042969
    9. '                   ' → logprob: -9.161491394042969
    10. '
' → logprob: -9.286491394042969

Token 627: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00011844364780699834
    2. ' if' → logprob: -10.125118255615234
    3. '<|end|>' → logprob: -10.625118255615234
    4. '           ' → logprob: -10.875118255615234
    5. '```' → logprob: -11.750118255615234
    6. 'if' → logprob: -11.750118255615234
    7. '
' → logprob: -12.125118255615234
    8. '                
' → logprob: -12.625118255615234
    9. '              ' → logprob: -12.625118255615234
    10. '       ' → logprob: -13.125118255615234

Token 628: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.17231892049312592
    2. '               ' → logprob: -1.922318935394287
    3. ' if' → logprob: -4.422318935394287
    4. '           ' → logprob: -11.172318458557129
    5. '                   ' → logprob: -14.922318458557129
    6. '   ' → logprob: -15.047318458557129
    7. '	if' → logprob: -15.547318458557129
    8. ';if' → logprob: -16.047319412231445
    9. 'If' → logprob: -16.172319412231445
    10. '	           ' → logprob: -16.172319412231445

Token 629: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.1269425004720688
    2. ' val' → logprob: -2.1269423961639404
    3. '(val' → logprob: -11.50194263458252
    4. '	val' → logprob: -13.50194263458252
    5. '           ' → logprob: -13.75194263458252
    6. '               ' → logprob: -14.37694263458252
    7. '                   ' → logprob: -14.75194263458252
    8. '[val' → logprob: -15.00194263458252
    9. '   ' → logprob: -16.126941680908203
    10. ',val' → logprob: -16.751941680908203

Token 630: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.005930931773036718
    2. '==' → logprob: -5.1309309005737305
    3. '=' → logprob: -13.88093090057373
    4. ' ' → logprob: -14.50593090057373
    5. ' =' → logprob: -15.38093090057373
    6. '==
' → logprob: -15.75593090057373
    7. ' ==
' → logprob: -16.005931854248047
    8. ')==' → logprob: -16.255931854248047
    9. ')' → logprob: -16.505931854248047
    10. '	' → logprob: -17.130931854248047

Token 631: ' target' (ID: 3783)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.00033546582562848926
    2. ' target' → logprob: -8.000335693359375
    3. '(target' → logprob: -18.375335693359375
    4. '	target' → logprob: -18.500335693359375
    5. '   ' → logprob: -19.250335693359375
    6. 't' → logprob: -20.000335693359375
    7. '[target' → logprob: -20.125335693359375
    8. ' ' → logprob: -20.250335693359375
    9. '
' → logprob: -20.250335693359375
    10. '  ' → logprob: -21.375335693359375

Token 632: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14403153955936432
    2. ':
' → logprob: -2.019031524658203
    3. '                   ' → logprob: -7.019031524658203
    4. '               ' → logprob: -7.894031524658203
    5. '):
' → logprob: -11.269031524658203
    6. '                       ' → logprob: -11.394031524658203
    7. ' and' → logprob: -11.519031524658203
    8. ':return' → logprob: -11.644031524658203
    9. '<|end|>' → logprob: -11.644031524658203
    10. ':
' → logprob: -11.644031524658203

Token 633: '                   ' (ID: 699)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6445717811584473
    2. ':
' → logprob: -1.3945717811584473
    3. '                   ' → logprob: -1.5195717811584473
    4. '               ' → logprob: -5.019571781158447
    5. '                       ' → logprob: -7.269571781158447
    6. '
' → logprob: -7.769571781158447
    7. '           ' → logprob: -8.769571304321289
    8. '):
' → logprob: -9.394571304321289
    9. '                           ' → logprob: -10.019571304321289
    10. '                    
' → logprob: -10.019571304321289

Token 634: ' found' (ID: 2491)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' (adapté à ' found') → logprob: -0.16704349219799042
    2. ' found' → logprob: -1.9170434474945068
    3. '
' → logprob: -5.167043685913086
    4. '                   ' → logprob: -7.042043685913086
    5. '               ' → logprob: -9.042043685913086
    6. '                       ' → logprob: -9.792043685913086
    7. '	found' → logprob: -11.167043685913086
    8. '                    
' → logprob: -11.792043685913086
    9. '_found' → logprob: -11.917043685913086
    10. '(found' → logprob: -12.167043685913086

Token 635: '_frame' (ID: 19952)
  Prédit: '_frame'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_frame' → logprob: -1.4021237802808173e-05
    2. '_' → logprob: -12.375014305114746
    3. 'frame' → logprob: -12.750014305114746
    4. '_Frame' → logprob: -13.375014305114746
    5. '_FRAME' → logprob: -13.500014305114746
    6. 'Frame' → logprob: -13.750014305114746
    7. '_frames' → logprob: -14.250014305114746
    8. '_token' → logprob: -14.500014305114746
    9. '_f' → logprob: -15.250014305114746
    10. '
' → logprob: -15.875014305114746

Token 636: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.126929372549057
    2. '=' → logprob: -2.12692928314209
    3. ' =
' → logprob: -14.12692928314209
    4. '=
' → logprob: -15.37692928314209
    5. ' ' → logprob: -15.62692928314209
    6. '                   ' → logprob: -16.126930236816406
    7. '               ' → logprob: -17.126930236816406
    8. '                       ' → logprob: -17.501930236816406
    9. 'found' → logprob: -17.751930236816406
    10. ':' → logprob: -17.876930236816406

Token 637: ' frame' (ID: 7298)
  Prédit: 'frame'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'frame' → logprob: -0.20141440629959106
    2. ' frame' → logprob: -1.7014143466949463
    3. '	frame' → logprob: -14.701414108276367
    4. '(frame' → logprob: -15.201414108276367
    5. '                   ' → logprob: -15.826414108276367
    6. '               ' → logprob: -15.951414108276367
    7. '
' → logprob: -16.951414108276367
    8. 'fram' → logprob: -17.076414108276367
    9. '```' → logprob: -17.576414108276367
    10. '.frame' → logprob: -17.826414108276367

Token 638: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0006851525395177305
    2. '
' → logprob: -8.12568473815918
    3. '				' → logprob: -9.25068473815918
    4. '<|end|>' → logprob: -9.50068473815918
    5. '                       ' → logprob: -9.62568473815918
    6. '               ' → logprob: -9.75068473815918
    7. '                    
' → logprob: -10.37568473815918
    8. '           ' → logprob: -10.50068473815918
    9. '                    ' → logprob: -12.12568473815918
    10. '       ' → logprob: -12.37568473815918

Token 639: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00010509284038562328
    2. '               ' → logprob: -10.500104904174805
    3. '                       ' → logprob: -10.625104904174805
    4. '           ' → logprob: -10.750104904174805
    5. '				' → logprob: -11.500104904174805
    6. '                    
' → logprob: -11.750104904174805
    7. '
' → logprob: -12.500104904174805
    8. '       ' → logprob: -12.625104904174805
    9. '                    ' → logprob: -12.750104904174805
    10. '                  ' → logprob: -14.375104904174805

Token 640: ' break' (ID: 2338)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.12775756418704987
    2. 'break' (adapté à ' break') → logprob: -2.1277575492858887
    3. ' break' → logprob: -7.377757549285889
    4. '               ' → logprob: -9.002758026123047
    5. '                       ' → logprob: -10.002758026123047
    6. '           ' → logprob: -11.252758026123047
    7. 'self' → logprob: -11.377758026123047
    8. '				' → logprob: -12.752758026123047
    9. '	break' → logprob: -13.002758026123047
    10. '                    
' → logprob: -13.252758026123047

Token 641: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0367744155228138
    2. '
' → logprob: -3.6617743968963623
    3. '       ' → logprob: -5.911774635314941
    4. '  
' → logprob: -6.161774635314941
    5. '    
' → logprob: -6.286774635314941
    6. ' 
' → logprob: -7.036774635314941
    7. '            
' → logprob: -7.161774635314941
    8. '<|end|>' → logprob: -7.286774635314941
    9. '        
' → logprob: -7.661774635314941
    10. '		' → logprob: -8.411774635314941

Token 642: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006951583200134337
    2. '       ' → logprob: -7.87569522857666
    3. '
' → logprob: -8.87569522857666
    4. '               ' → logprob: -9.62569522857666
    5. '                   ' → logprob: -9.87569522857666
    6. '		' → logprob: -10.75069522857666
    7. '            
' → logprob: -12.00069522857666
    8. '   ' → logprob: -12.25069522857666
    9. '    
' → logprob: -12.25069522857666
    10. '        
' → logprob: -12.62569522857666

Token 643: ' self' (ID: 1051)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1849609911441803
    2. ' if' → logprob: -2.3099610805511475
    3. 'if' → logprob: -3.3099610805511475
    4. '       ' → logprob: -3.4349610805511475
    5. '   ' → logprob: -7.684960842132568
    6. '               ' → logprob: -8.684961318969727
    7. '
' → logprob: -10.309961318969727
    8. '<|end|>' → logprob: -10.809961318969727
    9. ' else' → logprob: -10.934961318969727
    10. 'else' → logprob: -10.934961318969727

Token 644: '.l' (ID: 1000)
  Prédit: '.l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.l' → logprob: -0.00016110755677800626
    2. '.' → logprob: -8.750161170959473
    3. 'l' → logprob: -13.375161170959473
    4. ' .' → logprob: -14.125161170959473
    5. '.
' → logprob: -17.125160217285156
    6. '.ll' → logprob: -17.375160217285156
    7. '.current' → logprob: -17.500160217285156
    8. '	l' → logprob: -17.625160217285156
    9. ').' → logprob: -17.625160217285156
    10. 'current' → logprob: -17.875160217285156

Token 645: 'cg' (ID: 54237)
  Prédit: 'cg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cg' → logprob: -1.1756367712223437e-05
    2. '.cg' → logprob: -11.750011444091797
    3. 'c' → logprob: -13.625011444091797
    4. 'gc' → logprob: -14.000011444091797
    5. 'cgi' → logprob: -14.000011444091797
    6. 'lc' → logprob: -15.625011444091797
    7. 'CG' → logprob: -15.750011444091797
    8. ' cg' → logprob: -15.875011444091797
    9. 'cq' → logprob: -16.750011444091797
    10. '.c' → logprob: -17.000011444091797

Token 646: '.current' (ID: 8357)
  Prédit: '.current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.current' → logprob: -5.180879816180095e-05
    2. 'current' → logprob: -10.125051498413086
    3. '.' → logprob: -11.375051498413086
    4. '[current' → logprob: -16.875051498413086
    5. ' .' → logprob: -17.000051498413086
    6. '
' → logprob: -17.125051498413086
    7. '.reset' → logprob: -17.375051498413086
    8. '	current' → logprob: -17.375051498413086
    9. '=current' → logprob: -17.625051498413086
    10. '.
' → logprob: -18.000051498413086

Token 647: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04858805239200592
    2. ' =' → logprob: -3.0485880374908447
    3. '=s' → logprob: -14.423587799072266
    4. ',' → logprob: -17.173587799072266
    5. ')' → logprob: -17.173587799072266
    6. ' ' → logprob: -17.548587799072266
    7. '+=' → logprob: -17.923587799072266
    8. '.=' → logprob: -18.423587799072266
    9. '=re' → logprob: -18.923587799072266
    10. '=
' → logprob: -18.923587799072266

Token 648: ' saved' (ID: 10576)
  Prédit: 'saved'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'saved' → logprob: -6.2729995988775045e-06
    2. ' saved' → logprob: -12.000006675720215
    3. 'stored' → logprob: -17.3750057220459
    4. 'save' → logprob: -19.5000057220459
    5. '(saved' → logprob: -19.6250057220459
    6. '.saved' → logprob: -20.2500057220459
    7. 's' → logprob: -20.5000057220459
    8. 'sorted' → logprob: -20.7500057220459
    9. 'safe' → logprob: -21.6250057220459
    10. '_saved' → logprob: -21.7500057220459

Token 649: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -9.372294698550832e-06
    2. 'state' → logprob: -11.625009536743164
    3. '_' → logprob: -15.125009536743164
    4. '_stat' → logprob: -17.500009536743164
    5. '_
' → logprob: -17.750009536743164
    6. '\' → logprob: -18.500009536743164
    7. '_s' → logprob: -19.250009536743164
    8. 's' → logprob: -19.750009536743164
    9. '_STATE' → logprob: -19.750009536743164
    10. '_value' → logprob: -19.750009536743164

Token 650: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16055332124233246
    2. '           ' → logprob: -1.9105533361434937
    3. ' if' → logprob: -9.535552978515625
    4. ' 
' → logprob: -9.660552978515625
    5. '
' → logprob: -9.785552978515625
    6. 'if' → logprob: -10.285552978515625
    7. '            
' → logprob: -10.535552978515625
    8. '  
' → logprob: -10.910552978515625
    9. '    
' → logprob: -10.910552978515625
    10. '<|end|>' → logprob: -11.910552978515625

Token 651: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08944549411535263
    2. '
' → logprob: -2.4644455909729004
    3. 'if' → logprob: -8.839445114135742
    4. ' 
' → logprob: -9.214445114135742
    5. '            
' → logprob: -9.339445114135742
    6. ' if' → logprob: -9.839445114135742
    7. '    
' → logprob: -9.964445114135742
    8. '  
' → logprob: -10.839445114135742
    9. '   ' → logprob: -11.089445114135742
    10. '```' → logprob: -11.464445114135742

Token 652: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6950075030326843
    2. 'if' (adapté à ' if') → logprob: -0.6950075030326843
    3. ' if' → logprob: -6.32000732421875
    4. '
' → logprob: -10.82000732421875
    5. '       ' → logprob: -11.07000732421875
    6. 'time' → logprob: -11.44500732421875
    7. '   ' → logprob: -11.82000732421875
    8. '            
' → logprob: -13.44500732421875
    9. '               ' → logprob: -13.82000732421875
    10. '```' → logprob: -14.19500732421875

Token 653: ' found' (ID: 2491)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' → logprob: -0.47413942217826843
    2. ' found' → logprob: -0.9741394519805908
    3. '           ' → logprob: -9.849139213562012
    4. '	found' → logprob: -12.599139213562012
    5. '   ' → logprob: -12.724139213562012
    6. '(found' → logprob: -13.724139213562012
    7. '       ' → logprob: -14.349139213562012
    8. '    ' → logprob: -14.974139213562012
    9. '               ' → logprob: -15.099139213562012
    10. '        ' → logprob: -15.474139213562012

Token 654: '_frame' (ID: 19952)
  Prédit: '_frame'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_frame' → logprob: -1.7432603272027336e-06
    2. '_' → logprob: -13.375001907348633
    3. '_FRAME' → logprob: -17.000001907348633
    4. '_Frame' → logprob: -17.500001907348633
    5. '_f' → logprob: -17.750001907348633
    6. '_found' → logprob: -17.875001907348633
    7. '==' → logprob: -18.125001907348633
    8. '_frames' → logprob: -18.500001907348633
    9. '_token' → logprob: -18.625001907348633
    10. '"_' → logprob: -18.875001907348633

Token 655: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.01706920936703682
    2. '==' → logprob: -4.142069339752197
    3. '==-' → logprob: -7.017069339752197
    4. '>' → logprob: -9.892068862915039
    5. ' !=' → logprob: -10.267068862915039
    6. ' <=' → logprob: -11.017068862915039
    7. ' >' → logprob: -11.267068862915039
    8. '<=' → logprob: -12.017068862915039
    9. ' ' → logprob: -12.642068862915039
    10. ' <' → logprob: -12.642068862915039

Token 656: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -3.1424973713001236e-05
    2. ' -' → logprob: -10.375031471252441
    3. '   ' → logprob: -16.875030517578125
    4. '-
' → logprob: -18.500030517578125
    5. '           ' → logprob: -18.750030517578125
    6. '       ' → logprob: -19.500030517578125
    7. ' ' → logprob: -19.625030517578125
    8. '=-' → logprob: -20.750030517578125
    9. '-time' → logprob: -20.750030517578125
    10. '−' → logprob: -20.750030517578125

Token 657: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '   ' → logprob: -18.750001907348633
    4. '```' → logprob: -18.750001907348633
    5. '<|end|>' → logprob: -19.000001907348633
    6. ',' → logprob: -20.000001907348633
    7. '۱' → logprob: -20.125001907348633
    8. ')' → logprob: -20.250001907348633
    9. '           ' → logprob: -20.500001907348633
    10. '  ' → logprob: -20.937501907348633

Token 658: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3391985297203064
    2. ':' → logprob: -1.7141985893249512
    3. '               ' → logprob: -2.464198589324951
    4. ':return' → logprob: -4.214198589324951
    5. '           ' → logprob: -4.964198589324951
    6. 'return' → logprob: -8.714198112487793
    7. ' return' → logprob: -8.839198112487793
    8. '                       ' → logprob: -9.089198112487793
    9. '                   ' → logprob: -9.339198112487793
    10. '):
' → logprob: -9.964198112487793

Token 659: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006188891362398863
    2. ' return' → logprob: -5.631188869476318
    3. 'return' → logprob: -6.006188869476318
    4. '           ' → logprob: -9.381189346313477
    5. '
' → logprob: -10.631189346313477
    6. '                   ' → logprob: -11.756189346313477
    7. '                
' → logprob: -13.256189346313477
    8. '   ' → logprob: -13.256189346313477
    9. '                       ' → logprob: -14.256189346313477
    10. '    
' → logprob: -14.756189346313477

Token 660: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.006606303155422211
    2. ' return' → logprob: -5.256606101989746
    3. '               ' → logprob: -7.006606101989746
    4. '           ' → logprob: -7.756606101989746
    5. '                   ' → logprob: -10.756606101989746
    6. '   ' → logprob: -11.131606101989746
    7. '       ' → logprob: -14.131606101989746
    8. '	return' → logprob: -14.131606101989746
    9. '{return' → logprob: -15.756606101989746
    10. '                       ' → logprob: -16.381607055664062

Token 661: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00020377879263833165
    2. ' -' → logprob: -8.500204086303711
    3. '
' → logprob: -15.625204086303711
    4. '```' → logprob: -17.37520408630371
    5. '   ' → logprob: -18.12520408630371
    6. '                   ' → logprob: -18.75020408630371
    7. ' ' → logprob: -19.12520408630371
    8. '‌' → logprob: -19.25020408630371
    9. '  ' → logprob: -19.62520408630371
    10. '\-' → logprob: -19.75020408630371

Token 662: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.75
    3. '۱' → logprob: -18.1875
    4. '１' → logprob: -18.5625
    5. '```' → logprob: -18.5625
    6. '   ' → logprob: -18.75
    7. '
' → logprob: -19.0
    8. '2' → logprob: -19.625
    9. '१' → logprob: -19.625
    10. '-' → logprob: -19.75

Token 663: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16059820353984833
    2. '           ' → logprob: -1.9105981588363647
    3. '    
' → logprob: -9.285597801208496
    4. '            
' → logprob: -9.285597801208496
    5. '
' → logprob: -9.535597801208496
    6. '  
' → logprob: -10.160597801208496
    7. ' 
' → logprob: -10.285597801208496
    8. '        
' → logprob: -10.910597801208496
    9. '		' → logprob: -12.160597801208496
    10. '<|end|>' → logprob: -12.535597801208496

Token 664: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9267387986183167
    2. ' 
' → logprob: -1.0517387390136719
    3. '
' → logprob: -1.5517387390136719
    4. '    
' → logprob: -3.926738739013672
    5. '  
' → logprob: -4.801738739013672
    6. '            
' → logprob: -4.801738739013672
    7. '        
' → logprob: -5.926738739013672
    8. '     
' → logprob: -6.551738739013672
    9. '   
' → logprob: -7.051738739013672
    10. '<|end|>' → logprob: -8.176738739013672

Token 665: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' (adapté à ' time') → logprob: -0.5965240597724915
    2. '           ' → logprob: -0.8465240597724915
    3. ' time' → logprob: -3.9715240001678467
    4. '       ' → logprob: -6.846524238586426
    5. '
' → logprob: -7.721524238586426
    6. '   ' → logprob: -11.221524238586426
    7. '	time' → logprob: -12.721524238586426
    8. '
' → logprob: -13.971524238586426
    9. '            
' → logprob: -14.096524238586426
    10. ',time' → logprob: -14.221524238586426

Token 666: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12693366408348083
    2. ' =' → logprob: -2.1269335746765137
    3. ' +=' → logprob: -12.626934051513672
    4. '+=' → logprob: -13.001934051513672
    5. '＝' → logprob: -17.376934051513672
    6. '.=' → logprob: -18.001934051513672
    7. '=

' → logprob: -18.376934051513672
    8. ' ' → logprob: -18.626934051513672
    9. '=
' → logprob: -18.751934051513672
    10. '=}' → logprob: -19.001934051513672

Token 667: ' found' (ID: 2491)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' → logprob: -0.10020678490400314
    2. ' found' → logprob: -2.3502068519592285
    3. '	found' → logprob: -16.22520637512207
    4. '(found' → logprob: -17.10020637512207
    5. '_found' → logprob: -18.22520637512207
    6. 'Found' → logprob: -18.72520637512207
    7. ' ' → logprob: -20.97520637512207
    8. 'find' → logprob: -21.35020637512207
    9. '
' → logprob: -21.47520637512207
    10. 'f' → logprob: -21.47520637512207

Token 668: '_frame' (ID: 19952)
  Prédit: '_frame'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_frame' → logprob: -4.320199877838604e-07
    2. 'frame' → logprob: -15.5
    3. '_FRAME' → logprob: -16.625
    4. 'Frame' → logprob: -17.125
    5. '_Frame' → logprob: -17.625
    6. '_' → logprob: -18.375
    7. '_f' → logprob: -18.375
    8. '_frames' → logprob: -18.625
    9. 'ed' → logprob: -18.875
    10. 'f' → logprob: -19.375

Token 669: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3334778845310211
    2. '       ' → logprob: -1.8334778547286987
    3. '+
' → logprob: -2.8334779739379883
    4. '+' → logprob: -3.0834779739379883
    5. ' 
' → logprob: -4.958477973937988
    6. '        
' → logprob: -5.083477973937988
    7. ' return' → logprob: -6.333477973937988
    8. 'return' → logprob: -7.208477973937988
    9. '<|end|>' → logprob: -7.208477973937988
    10. ' +' → logprob: -7.333477973937988

Token 670: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.035814374685287476
    2. '
' → logprob: -4.16081428527832
    3. ' return' → logprob: -4.53581428527832
    4. 'return' → logprob: -4.91081428527832
    5. '        
' → logprob: -7.66081428527832
    6. '+
' → logprob: -7.78581428527832
    7. '   ' → logprob: -8.78581428527832
    8. '+' → logprob: -9.16081428527832
    9. '	return' → logprob: -9.28581428527832
    10. '<|end|>' → logprob: -9.91081428527832

Token 671: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17433378100395203
    2. 'return' (adapté à ' return') → logprob: -1.9243338108062744
    3. ' return' → logprob: -4.299333572387695
    4. '   ' → logprob: -8.049333572387695
    5. '
' → logprob: -9.799333572387695
    6. '```' → logprob: -10.299333572387695
    7. '	return' → logprob: -11.674333572387695
    8. '        
' → logprob: -12.174333572387695
    9. 'eturn' → logprob: -12.549333572387695
    10. '{return' → logprob: -13.299333572387695

Token 672: ' time' (ID: 1058)
  Prédit: ' time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' time' → logprob: -0.00033546582562848926
    2. 'time' → logprob: -8.000335693359375
    3. '	time' → logprob: -18.000335693359375
    4. ' times' → logprob: -19.125335693359375
    5. '(time' → logprob: -19.250335693359375
    6. '"time' → logprob: -19.500335693359375
    7. ' space' → logprob: -19.875335693359375
    8. ' ' → logprob: -20.000335693359375
    9. '_time' → logprob: -20.250335693359375
    10. ' t' → logprob: -20.375335693359375

Token 673: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 674: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 675: ' Slot' (ID: 28486)
  Prédit: 'Slot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Slot' → logprob: -0.39212220907211304
    2. 'Test' → logprob: -2.142122268676758
    3. 'Solution' → logprob: -2.767122268676758
    4. ' Slot' → logprob: -2.892122268676758
    5. 'Game' → logprob: -3.017122268676758
    6. 'Frame' → logprob: -4.392122268676758
    7. 'Main' → logprob: -5.892122268676758
    8. 'Solver' → logprob: -5.892122268676758
    9. 'Simulator' → logprob: -6.017122268676758
    10. ' Game' → logprob: -6.017122268676758

Token 676: 'Machine' (ID: 25519)
  Prédit: 'Machine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Machine' → logprob: -6.988221684878226e-06
    2. ' Machine' → logprob: -12.125006675720215
    3. 'Mach' → logprob: -14.250006675720215
    4. '   ' → logprob: -15.250006675720215
    5. 'Mac' → logprob: -15.625006675720215
    6. ' machine' → logprob: -15.625006675720215
    7. '_machine' → logprob: -15.875006675720215
    8. '  ' → logprob: -17.12500762939453
    9. 'Game' → logprob: -17.37500762939453
    10. '    ' → logprob: -17.50000762939453

Token 677: 'Solver' (ID: 70484)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -7.588793960167095e-05
    2. '(' → logprob: -10.250076293945312
    3. '():' → logprob: -10.875076293945312
    4. ':
' → logprob: -12.375076293945312
    5. ' :' → logprob: -12.875076293945312
    6. '{' → logprob: -13.000076293945312
    7. ':**' → logprob: -13.000076293945312
    8. '(object' → logprob: -13.250076293945312
    9. '(QWidget' → logprob: -13.875076293945312
    10. ':

' → logprob: -14.250076293945312

Token 678: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00032485672272741795
    2. ':
' → logprob: -8.250325202941895
    3. ' :' → logprob: -9.875325202941895
    4. ':def' → logprob: -12.875325202941895
    5. '(' → logprob: -13.250325202941895
    6. '():' → logprob: -13.375325202941895
    7. '):' → logprob: -13.625325202941895
    8. ':

' → logprob: -13.750325202941895
    9. '<|end|>' → logprob: -13.875325202941895
    10. '(object' → logprob: -13.875325202941895

Token 679: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03651423379778862
    2. ':
' → logprob: -4.2865142822265625
    3. ' def' → logprob: -4.4115142822265625
    4. ':' → logprob: -4.9115142822265625
    5. 'def' → logprob: -6.4115142822265625
    6. '
' → logprob: -8.161514282226562
    7. '```' → logprob: -9.036514282226562
    8. '    
' → logprob: -9.161514282226562
    9. ':def' → logprob: -9.411514282226562
    10. 'class' → logprob: -9.536514282226562

Token 680: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.5766978859901428
    2. 'def' (adapté à ' def') → logprob: -0.8266978859901428
    3. '   ' → logprob: -7.201697826385498
    4. 'class' → logprob: -11.326698303222656
    5. '```' → logprob: -14.701698303222656
    6. '	def' → logprob: -15.951698303222656
    7. ':def' → logprob: -15.951698303222656
    8. 'de' → logprob: -16.951698303222656
    9. ' class' → logprob: -17.201698303222656
    10. ':' → logprob: -17.826698303222656

Token 681: ' __' (ID: 2516)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.08875349909067154
    2. '__' → logprob: -2.5887534618377686
    3. ' __' → logprob: -4.838753700256348
    4. '_init' → logprob: -6.463753700256348
    5. 'def' → logprob: -8.338753700256348
    6. ' init' → logprob: -9.463753700256348
    7. ' def' → logprob: -11.463753700256348
    8. '```' → logprob: -12.213753700256348
    9. '___' → logprob: -13.213753700256348
    10. '__
' → logprob: -13.338753700256348

Token 682: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. '_init' → logprob: -18.75
    3. ' init' → logprob: -19.0
    4. 'ini' → logprob: -19.5
    5. 'def' → logprob: -20.0
    6. '(init' → logprob: -21.25
    7. 'i' → logprob: -21.25
    8. 'inite' → logprob: -21.375
    9. '	init' → logprob: -21.875
    10. 'int' → logprob: -21.875

Token 683: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.04879355803132057
    2. '(self' → logprob: -3.0487935543060303
    3. '(' → logprob: -9.29879379272461
    4. '__' → logprob: -9.42379379272461
    5. '__(
' → logprob: -10.92379379272461
    6. '_(' → logprob: -11.79879379272461
    7. ' (' → logprob: -11.92379379272461
    8. 'self' → logprob: -14.04879379272461
    9. '   ' → logprob: -15.04879379272461
    10. '>(' → logprob: -16.29879379272461

Token 684: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.9153885558771435e-06
    2. ' self' → logprob: -12.250005722045898
    3. '   ' → logprob: -13.750005722045898
    4. '
' → logprob: -17.7500057220459
    5. '       ' → logprob: -17.8750057220459
    6. '(self' → logprob: -18.1250057220459
    7. ')' → logprob: -18.7500057220459
    8. 'n' → logprob: -19.1250057220459
    9. ' ' → logprob: -20.0000057220459
    10. ',' → logprob: -20.1250057220459

Token 685: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004141329787671566
    2. 'self' → logprob: -5.504141330718994
    3. '(self' → logprob: -10.504140853881836
    4. '   ' → logprob: -11.004140853881836
    5. ' self' → logprob: -11.754140853881836
    6. ',self' → logprob: -12.379140853881836
    7. ' ,' → logprob: -12.754140853881836
    8. '       ' → logprob: -13.879140853881836
    9. ' (' → logprob: -14.254140853881836
    10. ',
' → logprob: -14.254140853881836

Token 686: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00016921341011766344
    2. ' self' → logprob: -9.250168800354004
    3. '   ' → logprob: -9.750168800354004
    4. '       ' → logprob: -11.125168800354004
    5. '
' → logprob: -17.12516975402832
    6. '```' → logprob: -18.25016975402832
    7. ',' → logprob: -19.25016975402832
    8. ' ' → logprob: -19.50016975402832
    9. '(self' → logprob: -19.50016975402832
    10. 's' → logprob: -19.87516975402832

Token 687: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.38605573773384094
    2. ' self' → logprob: -1.6360557079315186
    3. '       ' → logprob: -2.1360557079315186
    4. ' pass' → logprob: -5.136055946350098
    5. 'pass' → logprob: -6.511055946350098
    6. '   ' → logprob: -10.886055946350098
    7. '
' → logprob: -11.886055946350098
    8. 'def' → logprob: -13.511055946350098
    9. ' ' → logprob: -13.761055946350098
    10. '        
' → logprob: -14.011055946350098

Token 688: '.results' (ID: 53203)
  Prédit: '.n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.022934334352612495
    2. '.l' → logprob: -4.272934436798096
    3. '.re' → logprob: -5.147934436798096
    4. '.s' → logprob: -7.022934436798096
    5. '.sl' → logprob: -7.272934436798096
    6. '.frames' → logprob: -8.647933959960938
    7. '.linear' → logprob: -8.772933959960938
    8. '.' → logprob: -8.897933959960938
    9. '.conditions' → logprob: -9.022933959960938
    10. '.classes' → logprob: -9.022933959960938

Token 689: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931886672973633
    2. ' =' → logprob: -0.6931886672973633
    3. ':' → logprob: -10.568188667297363
    4. '=[]' → logprob: -11.693188667297363
    5. '={}' → logprob: -12.443188667297363
    6. ' ' → logprob: -13.943188667297363
    7. '   ' → logprob: -14.068188667297363
    8. '_' → logprob: -14.693188667297363
    9. '[' → logprob: -15.443188667297363
    10. '[]' → logprob: -15.568188667297363

Token 690: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.006737631279975176
    2. '{}' → logprob: -5.00673770904541
    3. ' []' → logprob: -10.75673770904541
    4. '[]
' → logprob: -14.25673770904541
    5. 'dict' → logprob: -16.381736755371094
    6. '[]}' → logprob: -16.506736755371094
    7. '[' → logprob: -16.631736755371094
    8. '[]

' → logprob: -18.006736755371094
    9. '[])' → logprob: -18.131736755371094
    10. ' {}' → logprob: -18.381736755371094

Token 691: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15558122098445892
    2. '
' → logprob: -2.03058123588562
    3. ' def' → logprob: -5.155580997467041
    4. 'def' → logprob: -5.155580997467041
    5. '    
' → logprob: -7.155580997467041
    6. '<|end|>' → logprob: -8.2805814743042
    7. ' ' → logprob: -9.5305814743042
    8. ' 
' → logprob: -10.4055814743042
    9. '```' → logprob: -10.5305814743042
    10. '<|end|>' → logprob: -10.7805814743042

Token 692: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.062254924327135086
    2. ' def' → logprob: -2.8122549057006836
    3. '   ' → logprob: -8.187254905700684
    4. '
' → logprob: -12.062254905700684
    5. '	def' → logprob: -12.687254905700684
    6. 'de' → logprob: -15.937254905700684
    7. ' ' → logprob: -16.812255859375
    8. '    
' → logprob: -18.312255859375
    9. ' 
' → logprob: -18.437255859375
    10. 'd' → logprob: -18.562255859375

Token 693: ' parse' (ID: 8420)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.03335658088326454
    2. 'add' → logprob: -3.9083566665649414
    3. 'process' → logprob: -5.283356666564941
    4. ' solve' → logprob: -5.408356666564941
    5. 'run' → logprob: -6.158356666564941
    6. 'read' → logprob: -8.283356666564941
    7. 'parse' → logprob: -8.408356666564941
    8. ' add' → logprob: -8.533356666564941
    9. ' process' → logprob: -9.283356666564941
    10. ' run' → logprob: -9.283356666564941

Token 694: '_and' (ID: 18645)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.668472170829773
    2. '_input' → logprob: -0.918472170829773
    3. '(' → logprob: -3.0434722900390625
    4. '_line' → logprob: -3.2934722900390625
    5. '_' → logprob: -6.0434722900390625
    6. 'self' → logprob: -7.9184722900390625
    7. '_code' → logprob: -8.793472290039062
    8. '_inputs' → logprob: -8.918472290039062
    9. '_lines' → logprob: -9.293472290039062
    10. '_self' → logprob: -9.293472290039062

Token 695: '_s' (ID: 1278)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.008157075382769108
    2. '_s' → logprob: -5.008157253265381
    3. 'run' → logprob: -6.758157253265381
    4. 'process' → logprob: -9.008156776428223
    5. '_run' → logprob: -9.883156776428223
    6. 'execute' → logprob: -10.258156776428223
    7. 'simulate' → logprob: -10.758156776428223
    8. 'compute' → logprob: -11.258156776428223
    9. '_process' → logprob: -11.383156776428223
    10. 's' → logprob: -11.883156776428223

Token 696: 'olve' (ID: 11460)
  Prédit: 'olve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olve' → logprob: -1.4259644558478612e-05
    2. 't' → logprob: -11.750014305114746
    3. 'earch' → logprob: -12.500014305114746
    4. 'kip' → logprob: -13.250014305114746
    5. 'ubmit' → logprob: -15.625014305114746
    6. 'ee' → logprob: -15.750014305114746
    7. 'im' → logprob: -16.12501335144043
    8. 'OLVE' → logprob: -16.25001335144043
    9. 'et' → logprob: -16.50001335144043
    10. 'erialize' → logprob: -16.75001335144043

Token 697: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0007106438861228526
    2. '(' → logprob: -7.250710487365723
    3. '(s' → logprob: -15.250710487365723
    4. '(
' → logprob: -15.625710487365723
    5. ' (' → logprob: -15.625710487365723
    6. '(sel' → logprob: -15.875710487365723
    7. 'self' → logprob: -16.62571144104004
    8. '(Self' → logprob: -18.25071144104004
    9. '(line' → logprob: -18.75071144104004
    10. '(se' → logprob: -19.25071144104004

Token 698: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011939727846765891
    2. 'self' → logprob: -9.25011920928955
    3. ' ,' → logprob: -11.62511920928955
    4. '):' → logprob: -12.37511920928955
    5. ',self' → logprob: -13.12511920928955
    6. ',
' → logprob: -13.37511920928955
    7. ',input' → logprob: -13.50011920928955
    8. ',s' → logprob: -13.50011920928955
    9. '(self' → logprob: -13.62511920928955
    10. '   ' → logprob: -14.50011920928955

Token 699: ' input' (ID: 3422)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4292440414428711
    2. 'input' → logprob: -1.429244041442871
    3. ' input' → logprob: -2.804244041442871
    4. ' self' → logprob: -3.054244041442871
    5. ' lines' → logprob: -6.929244041442871
    6. 'lines' → logprob: -7.554244041442871
    7. 'data' → logprob: -8.804244041442871
    8. ')' → logprob: -10.554244041442871
    9. '   ' → logprob: -10.554244041442871
    10. 'inputs' → logprob: -10.554244041442871

Token 700: '_lines' (ID: 42980)
  Prédit: '_text'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_text' → logprob: -1.7812769412994385
    2. '():' → logprob: -1.9062769412994385
    3. '_data' → logprob: -1.9062769412994385
    4. '_string' → logprob: -2.1562769412994385
    5. '_lines' → logprob: -2.1562769412994385
    6. '_str' → logprob: -2.4062769412994385
    7. '):' → logprob: -2.5312769412994385
    8. '_line' → logprob: -2.7812769412994385
    9. ':' → logprob: -3.5312769412994385
    10. '()' → logprob: -4.281276702880859

Token 701: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.7004165053367615
    2. ':' → logprob: -1.0754165649414062
    3. '):
' → logprob: -2.4504165649414062
    4. 'self' → logprob: -3.3254165649414062
    5. '(self' → logprob: -3.4504165649414062
    6. ',' → logprob: -5.450416564941406
    7. ')' → logprob: -6.450416564941406
    8. '       ' → logprob: -6.700416564941406
    9. ' self' → logprob: -7.575416564941406
    10. '   ' → logprob: -7.950416564941406

Token 702: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.10322065651416779
    2. 'self' → logprob: -2.3532207012176514
    3. ' list' → logprob: -6.228220462799072
    4. ')' → logprob: -7.853220462799072
    5. 'List' → logprob: -8.22822093963623
    6. '[list' → logprob: -8.60322093963623
    7. '[self' → logprob: -9.60322093963623
    8. ' self' → logprob: -10.10322093963623
    9. 'str' → logprob: -10.97822093963623
    10. '[str' → logprob: -11.10322093963623

Token 703: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: 0.0
    2. 'str' → logprob: -17.75
    3. '):
' → logprob: -17.875
    4. '   ' → logprob: -19.125
    5. '[int' → logprob: -19.375
    6. '[' → logprob: -19.5
    7. '	str' → logprob: -19.625
    8. '):' → logprob: -19.875
    9. ':str' → logprob: -20.625
    10. ')' → logprob: -20.75

Token 704: ']):
' (ID: 51989)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.3229457437992096
    2. ')' → logprob: -1.3229457139968872
    3. ']):
' → logprob: -4.822945594787598
    4. '):
' → logprob: -7.072945594787598
    5. ']):' → logprob: -7.822945594787598
    6. ']' → logprob: -8.572945594787598
    7. '   ' → logprob: -9.447945594787598
    8. '):' → logprob: -10.447945594787598
    9. '）' → logprob: -11.447945594787598
    10. ' ])' → logprob: -11.572945594787598

Token 705: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00017243190086446702
    2. ' for' → logprob: -10.50017261505127
    3. '        
' → logprob: -10.62517261505127
    4. '   ' → logprob: -10.75017261505127
    5. 'n' → logprob: -10.87517261505127
    6. '	' → logprob: -11.00017261505127
    7. '```' → logprob: -11.12517261505127
    8. 'for' → logprob: -11.62517261505127
    9. ',' → logprob: -12.12517261505127
    10. '    ' → logprob: -12.25017261505127

Token 706: ' index' (ID: 3472)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.38779231905937195
    2. '       ' → logprob: -1.6377923488616943
    3. ' n' → logprob: -2.7627923488616943
    4. 'index' (adapté à ' index') → logprob: -4.262792110443115
    5. 'idx' → logprob: -4.637792110443115
    6. 'lines' → logprob: -5.012792110443115
    7. 'results' → logprob: -5.387792110443115
    8. 'i' → logprob: -5.512792110443115
    9. '   ' → logprob: -5.637792110443115
    10. ' lines' → logprob: -5.887792110443115

Token 707: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06196970492601395
    2. '=' → logprob: -2.811969757080078
    3. ' ' → logprob: -14.061969757080078
    4. '   ' → logprob: -14.686969757080078
    5. ')' → logprob: -15.311969757080078
    6. '```' → logprob: -16.186969757080078
    7. '	' → logprob: -16.436969757080078
    8. '    ' → logprob: -16.436969757080078
    9. '       ' → logprob: -16.811969757080078
    10. '_' → logprob: -16.811969757080078

Token 708: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00012606535165105015
    2. ' ' → logprob: -9.000125885009766
    3. '1' → logprob: -12.875125885009766
    4. '   ' → logprob: -17.625125885009766
    5. '=' → logprob: -19.500125885009766
    6. '۰' → logprob: -20.000125885009766
    7. '```' → logprob: -21.000125885009766
    8. '  ' → logprob: -21.812625885009766
    9. 'int' → logprob: -21.812625885009766
    10. '       ' → logprob: -21.875125885009766

Token 709: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0445127372804563e-05
    2. ' ' → logprob: -11.62501049041748
    3. '1' → logprob: -13.50001049041748
    4. '   ' → logprob: -19.750009536743164
    5. '=' → logprob: -20.250009536743164
    6. 'int' → logprob: -20.500009536743164
    7. 'len' → logprob: -21.125009536743164
    8. '۰' → logprob: -21.875009536743164
    9. '  ' → logprob: -22.000009536743164
    10. '2' → logprob: -22.062509536743164

Token 710: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0690072774887085
    2. '
' → logprob: -3.694007396697998
    3. 'while' → logprob: -3.944007396697998
    4. ' while' → logprob: -4.069007396697998
    5. '<|end|>' → logprob: -6.194007396697998
    6. '        
' → logprob: -6.819007396697998
    7. '	while' → logprob: -6.944007396697998
    8. '```' → logprob: -8.19400691986084
    9. '   ' → logprob: -9.19400691986084
    10. 'n' → logprob: -9.19400691986084

Token 711: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7465224862098694
    2. 'while' → logprob: -0.7465224862098694
    3. ' while' → logprob: -3.7465224266052246
    4. '
' → logprob: -3.8715224266052246
    5. 'n' → logprob: -5.496522426605225
    6. '   ' → logprob: -6.621522426605225
    7. '```' → logprob: -6.746522426605225
    8. '	while' → logprob: -7.496522426605225
    9. ',' → logprob: -9.746522903442383
    10. ' n' → logprob: -9.871522903442383

Token 712: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.5763434767723083
    2. ' while' → logprob: -0.8263434767723083
    3. 'n' → logprob: -8.576343536376953
    4. ' n' → logprob: -9.326343536376953
    5. '
' → logprob: -9.826343536376953
    6. 'num' → logprob: -10.451343536376953
    7. '   ' → logprob: -10.951343536376953
    8. '	while' → logprob: -11.451343536376953
    9. '       ' → logprob: -12.326343536376953
    10. ' num' → logprob: -12.451343536376953

Token 713: ' True' (ID: 6432)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.20144031941890717
    2. ' index' → logprob: -1.7014403343200684
    3. ' True' → logprob: -11.07643985748291
    4. 'True' → logprob: -11.95143985748291
    5. '	index' → logprob: -12.32643985748291
    6. '   ' → logprob: -14.57643985748291
    7. '_index' → logprob: -15.57643985748291
    8. '(index' → logprob: -17.576440811157227
    9. '#index' → logprob: -17.951440811157227
    10. ' ' → logprob: -18.201440811157227

Token 714: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0797630250453949
    2. ':
' → logprob: -2.5797629356384277
    3. '       ' → logprob: -7.954762935638428
    4. '           ' → logprob: -8.954763412475586
    5. ' and' → logprob: -9.079763412475586
    6. ',' → logprob: -9.204763412475586
    7. '<|end|>' → logprob: -9.579763412475586
    8. '   ' → logprob: -10.829763412475586
    9. '{' → logprob: -11.204763412475586
    10. 'and' → logprob: -11.329763412475586

Token 715: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11700235307216644
    2. '       ' → logprob: -3.242002248764038
    3. 'if' → logprob: -3.742002248764038
    4. ' if' → logprob: -3.742002248764038
    5. '   ' → logprob: -4.492002487182617
    6. '<|end|>' → logprob: -5.867002487182617
    7. ' ' → logprob: -6.242002487182617
    8. '    ' → logprob: -6.742002487182617
    9. '            
' → logprob: -6.992002487182617
    10. '        ' → logprob: -7.492002487182617

Token 716: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.06479396671056747
    2. ' if' → logprob: -3.1897940635681152
    3. 'line' → logprob: -4.189794063568115
    4. 'n' → logprob: -5.814794063568115
    5. '           ' → logprob: -5.814794063568115
    6. ' line' → logprob: -8.314793586730957
    7. 'num' → logprob: -9.564793586730957
    8. 'lines' → logprob: -10.064793586730957
    9. ' n' → logprob: -10.314793586730957
    10. '   ' → logprob: -10.814793586730957

Token 717: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.023249439895153046
    2. ' index' → logprob: -3.773249387741089
    3. '	index' → logprob: -13.023249626159668
    4. '   ' → logprob: -13.898249626159668
    5. 'input' → logprob: -14.648249626159668
    6. ' ' → logprob: -15.898249626159668
    7. '_index' → logprob: -16.02324867248535
    8. '
' → logprob: -16.64824867248535
    9. '#index' → logprob: -17.52324867248535
    10. ' input' → logprob: -17.77324867248535

Token 718: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.25203046202659607
    2. ' >=' → logprob: -1.5020304918289185
    3. ']>=' → logprob: -9.377030372619629
    4. ')>=' → logprob: -11.252030372619629
    5. '==' → logprob: -13.627030372619629
    6. ' ' → logprob: -14.002030372619629
    7. '=' → logprob: -14.877030372619629
    8. '>' → logprob: -15.002030372619629
    9. '≥' → logprob: -15.377030372619629
    10. ')' → logprob: -15.627030372619629

Token 719: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -3.547789674485102e-05
    2. ' len' → logprob: -10.250035285949707
    3. '(len' → logprob: -18.875036239624023
    4. '           ' → logprob: -19.125036239624023
    5. '	len' → logprob: -19.375036239624023
    6. '=len' → logprob: -19.750036239624023
    7. '
' → logprob: -20.500036239624023
    8. ',len' → logprob: -20.625036239624023
    9. '<len' → logprob: -20.625036239624023
    10. 'length' → logprob: -22.000036239624023

Token 720: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0027708823326975107
    2. 'input' → logprob: -6.502770900726318
    3. '(' → logprob: -6.752770900726318
    4. ' input' → logprob: -9.25277042388916
    5. '(
' → logprob: -12.50277042388916
    6. ' (' → logprob: -15.50277042388916
    7. '=input' → logprob: -15.75277042388916
    8. ',input' → logprob: -16.377771377563477
    9. '<input' → logprob: -16.627771377563477
    10. '	input' → logprob: -17.752771377563477

Token 721: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.00011760921915993094
    2. '_' → logprob: -9.750117301940918
    3. ')' → logprob: -10.000117301940918
    4. ' _' → logprob: -12.875117301940918
    5. 'lines' → logprob: -13.000117301940918
    6. '_
' → logprob: -13.375117301940918
    7. '_)' → logprob: -13.750117301940918
    8. '(lines' → logprob: -13.875117301940918
    9. '_LINES' → logprob: -14.000117301940918
    10. 's' → logprob: -14.375117301940918

Token 722: '):
' (ID: 1883)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.07315044850111008
    2. ':
' → logprob: -3.198150396347046
    3. ':' → logprob: -3.698150396347046
    4. '):
' → logprob: -6.323150634765625
    5. ')' → logprob: -6.448150634765625
    6. 'or' → logprob: -6.948150634765625
    7. '           ' → logprob: -8.198150634765625
    8. '):' → logprob: -8.823150634765625
    9. ':return' → logprob: -10.448150634765625
    10. ' :
' → logprob: -10.573150634765625

Token 723: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.31470534205436707
    2. '               ' → logprob: -1.3147053718566895
    3. '   ' → logprob: -7.4397053718566895
    4. ':
' → logprob: -8.064704895019531
    5. '       ' → logprob: -9.564704895019531
    6. '
' → logprob: -9.814704895019531
    7. 'break' → logprob: -9.814704895019531
    8. ':' → logprob: -9.939704895019531
    9. ' ' → logprob: -9.939704895019531
    10. ' break' → logprob: -9.939704895019531

Token 724: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.06859152764081955
    2. 'return' → logprob: -2.818591594696045
    3. ' break' → logprob: -5.818591594696045
    4. '               ' → logprob: -5.943591594696045
    5. '           ' → logprob: -7.568591594696045
    6. '	break' → logprob: -8.193591117858887
    7. '
' → logprob: -9.318591117858887
    8. ' return' → logprob: -9.818591117858887
    9. '                   ' → logprob: -9.943591117858887
    10. '   ' → logprob: -12.318591117858887

Token 725: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.368924081325531
    2. '
' → logprob: -1.6189241409301758
    3. '            
' → logprob: -2.493924140930176
    4. '    
' → logprob: -4.118924140930176
    5. '  
' → logprob: -4.993924140930176
    6. ' 
' → logprob: -6.618924140930176
    7. '\n' → logprob: -6.993924140930176
    8. '        
' → logprob: -7.243924140930176
    9. '<|end|>' → logprob: -7.743924140930176
    10. '   
' → logprob: -8.118924140930176

Token 726: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5280600786209106
    2. '           ' → logprob: -1.4030600786209106
    3. '    
' → logprob: -2.403059959411621
    4. '            
' → logprob: -2.778059959411621
    5. '  
' → logprob: -5.153059959411621
    6. ' 
' → logprob: -6.403059959411621
    7. '   
' → logprob: -6.528059959411621
    8. '        
' → logprob: -7.028059959411621
    9. '   ' → logprob: -7.653059959411621
    10. '\n' → logprob: -8.278059959411621

Token 727: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.036585140973329544
    2. ' line' → logprob: -3.4115850925445557
    3. 'n' → logprob: -6.661585330963135
    4. '           ' → logprob: -6.911585330963135
    5. 'count' → logprob: -7.786585330963135
    6. 'num' → logprob: -8.661584854125977
    7. ' n' → logprob: -10.036584854125977
    8. '   ' → logprob: -12.036584854125977
    9. 'length' → logprob: -12.036584854125977
    10. 'lines' → logprob: -13.036584854125977

Token 728: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16024371981620789
    2. '=' → logprob: -1.9102437496185303
    3. '=line' → logprob: -11.03524398803711
    4. ' =
' → logprob: -13.28524398803711
    5. '=
' → logprob: -14.28524398803711
    6. '=index' → logprob: -15.16024398803711
    7. 's' → logprob: -15.28524398803711
    8. 'strip' → logprob: -15.53524398803711
    9. '_strip' → logprob: -16.16024398803711
    10. '.strip' → logprob: -16.66024398803711

Token 729: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.029750604182481766
    2. ' input' → logprob: -3.5297505855560303
    3. '=input' → logprob: -17.15475082397461
    4. '(input' → logprob: -17.52975082397461
    5. '
' → logprob: -19.15475082397461
    6. '	input' → logprob: -19.40475082397461
    7. '   ' → logprob: -20.90475082397461
    8. 'index' → logprob: -20.90475082397461
    9. ',input' → logprob: -21.02975082397461
    10. '<input' → logprob: -21.02975082397461

Token 730: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -1.3902033970225602e-05
    2. ' =' → logprob: -11.875014305114746
    3. '=' → logprob: -12.875014305114746
    4. 's' → logprob: -13.625014305114746
    5. 'lines' → logprob: -14.000014305114746
    6. '_line' → logprob: -14.625014305114746
    7. 'Lines' → logprob: -14.875014305114746
    8. '_' → logprob: -15.375014305114746
    9. '[line' → logprob: -15.375014305114746
    10. '=_' → logprob: -15.375014305114746

Token 731: '[index' (ID: 11815)
  Prédit: '[index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[index' → logprob: -5.407366916188039e-05
    2. '.strip' → logprob: -10.500054359436035
    3. '[' → logprob: -10.750054359436035
    4. '```' → logprob: -12.875054359436035
    5. '[ind' → logprob: -14.375054359436035
    6. '[line' → logprob: -15.125054359436035
    7. '[
' → logprob: -15.250054359436035
    8. '       ' → logprob: -15.250054359436035
    9. 'index' → logprob: -15.500054359436035
    10. '   ' → logprob: -15.750054359436035

Token 732: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0240337997674942
    2. '.strip' → logprob: -4.274034023284912
    3. ']' → logprob: -4.649034023284912
    4. ']
' → logprob: -8.399033546447754
    5. '.' → logprob: -11.524033546447754
    6. ').' → logprob: -12.274033546447754
    7. 'strip' → logprob: -12.399033546447754
    8. '.rstrip' → logprob: -13.149033546447754
    9. ' ].' → logprob: -13.399033546447754
    10. '
' → logprob: -13.524033546447754

Token 733: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: 0.0
    2. 'split' → logprob: -17.25
    3. 'rstrip' → logprob: -19.25
    4. '.strip' → logprob: -21.125
    5. ' strip' → logprob: -21.625
    6. '_strip' → logprob: -23.375
    7. '(strip' → logprob: -24.25
    8. '-strip' → logprob: -25.25
    9. 'startswith' → logprob: -25.625
    10. 'str' → logprob: -25.75

Token 734: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2014451026916504
    2. '()
' → logprob: -1.7014451026916504
    3. '           ' → logprob: -11.076444625854492
    4. '()
' → logprob: -12.201444625854492
    5. '()

' → logprob: -12.201444625854492
    6. '()\' → logprob: -13.201444625854492
    7. '       ' → logprob: -13.826444625854492
    8. '():
' → logprob: -14.326444625854492
    9. '())' → logprob: -14.576444625854492
    10. 'if' → logprob: -14.701444625854492

Token 735: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10494743287563324
    2. 'if' → logprob: -2.354947328567505
    3. ' if' → logprob: -5.604947566986084
    4. '<|end|>' → logprob: -7.229947566986084
    5. '       ' → logprob: -9.229947090148926
    6. '            
' → logprob: -9.354947090148926
    7. '<|end|>' → logprob: -10.104947090148926
    8. '
' → logprob: -10.729947090148926
    9. '   ' → logprob: -10.979947090148926
    10. '[' → logprob: -11.979947090148926

Token 736: ' index' (ID: 3472)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -4.179569077678025e-05
    2. ' if' → logprob: -10.750041961669922
    3. '           ' → logprob: -10.875041961669922
    4. 'index' (adapté à ' index') → logprob: -14.250041961669922
    5. '       ' → logprob: -14.875041961669922
    6. '            
' → logprob: -15.750041961669922
    7. '<|end|>' → logprob: -16.375041961669922
    8. '
' → logprob: -17.125041961669922
    9. 'If' → logprob: -18.000041961669922
    10. '               ' → logprob: -18.125041961669922

Token 737: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.2015274614095688
    2. ' +=' → logprob: -1.70152747631073
    3. '+' → logprob: -9.45152759552002
    4. '==' → logprob: -10.57652759552002
    5. ']+=' → logprob: -12.57652759552002
    6. ' ==' → logprob: -13.07652759552002
    7. '++' → logprob: -13.20152759552002
    8. '=' → logprob: -13.57652759552002
    9. '>=' → logprob: -14.95152759552002
    10. '+="' → logprob: -15.20152759552002

Token 738: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '
' → logprob: -19.500001907348633
    4. '```' → logprob: -20.250001907348633
    5. '   ' → logprob: -21.250001907348633
    6. '0' → logprob: -21.500001907348633
    7. '１' → logprob: -21.500001907348633
    8. '۱' → logprob: -22.625001907348633
    9. '`' → logprob: -23.062501907348633
    10. '``' → logprob: -23.125001907348633

Token 739: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '
' → logprob: -17.875
    4. '0' → logprob: -18.125
    5. '```' → logprob: -18.125
    6. '   ' → logprob: -20.125
    7. '``' → logprob: -21.0625
    8. '`' → logprob: -21.125
    9. '１' → logprob: -21.1875
    10. '

' → logprob: -22.0

Token 740: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2523476481437683
    2. 'if' → logprob: -1.877347707748413
    3. ' if' → logprob: -3.127347707748413
    4. '
' → logprob: -4.752347469329834
    5. '<|end|>' → logprob: -4.752347469329834
    6. '            
' → logprob: -5.502347469329834
    7. '       ' → logprob: -5.752347469329834
    8. ' 
' → logprob: -8.377347946166992
    9. '        
' → logprob: -8.627347946166992
    10. '    
' → logprob: -8.627347946166992

Token 741: '           ' (ID: 352)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10145188868045807
    2. '           ' → logprob: -2.726451873779297
    3. ' if' → logprob: -3.476451873779297
    4. '       ' → logprob: -9.351451873779297
    5. '            
' → logprob: -12.351451873779297
    6. '
' → logprob: -12.476451873779297
    7. 'If' → logprob: -12.976451873779297
    8. '```' → logprob: -12.976451873779297
    9. '<|end|>' → logprob: -13.226451873779297
    10. '	if' → logprob: -13.726451873779297

Token 742: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -1.4378848391061183e-05
    2. '           ' → logprob: -11.750014305114746
    3. ' if' → logprob: -12.000014305114746
    4. 'i' → logprob: -15.500014305114746
    5. '
' → logprob: -16.000015258789062
    6. '       ' → logprob: -18.500015258789062
    7. 'If' → logprob: -19.625015258789062
    8. '```' → logprob: -19.875015258789062
    9. '            
' → logprob: -20.125015258789062
    10. '   ' → logprob: -20.500015258789062

Token 743: ' not' (ID: 625)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.1279832124710083
    2. 'not' → logprob: -2.8779830932617188
    3. ' not' → logprob: -3.0029830932617188
    4. ' line' → logprob: -4.252983093261719
    5. ' ' → logprob: -12.377983093261719
    6. '(line' → logprob: -12.502983093261719
    7. 'len' → logprob: -12.502983093261719
    8. '   ' → logprob: -12.627983093261719
    9. '	line' → logprob: -12.877983093261719
    10. '!' → logprob: -13.627983093261719

Token 744: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.004078401252627373
    2. ' line' → logprob: -5.504078388214111
    3. '
' → logprob: -17.379077911376953
    4. '	line' → logprob: -17.379077911376953
    5. '(line' → logprob: -19.004077911376953
    6. '#line' → logprob: -20.129077911376953
    7. 'lin' → logprob: -20.254077911376953
    8. '=line' → logprob: -20.879077911376953
    9. ' ' → logprob: -21.004077911376953
    10. '[line' → logprob: -21.504077911376953

Token 745: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04482169449329376
    2. ' or' → logprob: -3.6698217391967773
    3. 'or' → logprob: -4.169821739196777
    4. ':
' → logprob: -5.919821739196777
    5. '.startswith' → logprob: -9.294821739196777
    6. '.' → logprob: -9.919821739196777
    7. ':return' → logprob: -10.669821739196777
    8. '):' → logprob: -11.169821739196777
    9. '<|end|>' → logprob: -12.044821739196777
    10. '=' → logprob: -12.169821739196777

Token 746: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.014521447941660881
    2. '           ' → logprob: -4.514521598815918
    3. ':' → logprob: -6.889521598815918
    4. ':
' → logprob: -7.014521598815918
    5. 'break' → logprob: -7.264521598815918
    6. ' or' → logprob: -8.264521598815918
    7. '   ' → logprob: -8.389521598815918
    8. ' break' → logprob: -8.639521598815918
    9. '       ' → logprob: -10.014521598815918
    10. '                   ' → logprob: -10.139521598815918

Token 747: ' continue' (ID: 4901)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.015940165147185326
    2. 'continue' (adapté à ' continue') → logprob: -4.265940189361572
    3. ' break' → logprob: -6.515940189361572
    4. '               ' → logprob: -8.640939712524414
    5. '           ' → logprob: -9.640939712524414
    6. ' continue' → logprob: -10.390939712524414
    7. 'return' → logprob: -11.015939712524414
    8. '	break' → logprob: -12.765939712524414
    9. '                   ' → logprob: -13.515939712524414
    10. '
' → logprob: -13.890939712524414

Token 748: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5384848117828369
    2. 'n' → logprob: -1.538484811782837
    3. ' parts' → logprob: -2.163484811782837
    4. ' n' → logprob: -3.413484811782837
    5. 'parts' → logprob: -3.538484811782837
    6. 'num' → logprob: -4.788484573364258
    7. '
' → logprob: -5.038484573364258
    8. '            
' → logprob: -5.413484573364258
    9. 'tokens' → logprob: -5.913484573364258
    10. 'count' → logprob: -7.413484573364258

Token 749: '           ' (ID: 352)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1835460662841797
    2. 'num' → logprob: -2.5585460662841797
    3. ' n' → logprob: -3.1835460662841797
    4. '           ' → logprob: -3.3085460662841797
    5. 'count' → logprob: -5.55854606628418
    6. ' num' → logprob: -6.05854606628418
    7. ' parts' → logprob: -6.05854606628418
    8. 'parts' → logprob: -6.43354606628418
    9. 'number' → logprob: -7.93354606628418
    10. 'a' → logprob: -7.93354606628418

Token 750: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.07933850586414337
    2. 'parts' → logprob: -2.704338550567627
    3. ' parts' → logprob: -5.204338550567627
    4. 'N' → logprob: -6.954338550567627
    5. 'params' → logprob: -6.954338550567627
    6. 'num' → logprob: -7.329338550567627
    7. ' n' → logprob: -7.454338550567627
    8. 't' → logprob: -8.579338073730469
    9. 'count' → logprob: -8.954338073730469
    10. '           ' → logprob: -8.954338073730469

Token 751: '_a' (ID: 10852)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7284798622131348
    2. ',' → logprob: -1.3534798622131348
    3. '=' → logprob: -1.3534798622131348
    4. ')' → logprob: -8.228479385375977
    5. ' ,' → logprob: -8.353479385375977
    6. ' ' → logprob: -9.853479385375977
    7. '<|end|>' → logprob: -10.228479385375977
    8. '=int' → logprob: -11.353479385375977
    9. 'tokens' → logprob: -11.853479385375977
    10. 'space' → logprob: -11.853479385375977

Token 752: '_b' (ID: 1535)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12080398947000504
    2. 'b' → logprob: -2.6208040714263916
    3. '=' → logprob: -3.8708040714263916
    4. ',b' → logprob: -4.4958038330078125
    5. '_b' → logprob: -4.9958038330078125
    6. 'nd' → logprob: -7.4958038330078125
    7. ' =' → logprob: -7.4958038330078125
    8. ' ,' → logprob: -7.9958038330078125
    9. ' b' → logprob: -8.245803833007812
    10. 'n' → logprob: -8.370803833007812

Token 753: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.00013679367839358747
    2. 'c' → logprob: -9.000136375427246
    3. '=' → logprob: -12.250136375427246
    4. ',' → logprob: -12.750136375427246
    5. ' =' → logprob: -13.125136375427246
    6. '_' → logprob: -13.125136375427246
    7. ',c' → logprob: -14.000136375427246
    8. '	c' → logprob: -15.625136375427246
    9. ',_' → logprob: -15.625136375427246
    10. '=_' → logprob: -16.125137329101562

Token 754: '_x' (ID: 7054)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.40493977069854736
    2. ' =' → logprob: -1.1549397706985474
    3. ',' → logprob: -4.154939651489258
    4. '_' → logprob: -7.029939651489258
    5. ' ' → logprob: -8.404939651489258
    6. 'c' → logprob: -8.404939651489258
    7. '_c' → logprob: -8.654939651489258
    8. '_str' → logprob: -9.029939651489258
    9. '_tokens' → logprob: -10.029939651489258
    10. '=line' → logprob: -10.029939651489258

Token 755: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6933026313781738
    2. ' =' → logprob: -0.6933026313781738
    3. ',' → logprob: -9.068302154541016
    4. 's' → logprob: -11.443302154541016
    5. '=int' → logprob: -11.818302154541016
    6. '=line' → logprob: -12.193302154541016
    7. ' ' → logprob: -13.193302154541016
    8. '_tokens' → logprob: -13.568302154541016
    9. 'tokens' → logprob: -13.693302154541016
    10. 'split' → logprob: -13.693302154541016

Token 756: ' list' (ID: 1562)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.06231977790594101
    2. 'list' → logprob: -2.812319755554199
    3. ' line' → logprob: -8.1873197555542
    4. ' list' → logprob: -9.6873197555542
    5. '[line' → logprob: -11.4373197555542
    6. '=line' → logprob: -15.0623197555542
    7. 'lin' → logprob: -15.3123197555542
    8. '(line' → logprob: -15.4373197555542
    9. '#line' → logprob: -15.6873197555542
    10. '[' → logprob: -16.562320709228516

Token 757: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -4.842555426876061e-06
    2. '(' → logprob: -12.750004768371582
    3. 'map' → logprob: -13.625004768371582
    4. '(int' → logprob: -14.375004768371582
    5. '[int' → logprob: -17.1250057220459
    6. '	map' → logprob: -17.5000057220459
    7. ' map' → logprob: -17.7500057220459
    8. '(
' → logprob: -19.1250057220459
    9. '(line' → logprob: -19.2500057220459
    10. '_map' → logprob: -19.3750057220459

Token 758: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0002479886752553284
    2. 'int' → logprob: -8.500247955322266
    3. '(' → logprob: -10.125247955322266
    4. '(
' → logprob: -13.375247955322266
    5. '(str' → logprob: -13.500247955322266
    6. ' int' → logprob: -14.000247955322266
    7. ',int' → logprob: -15.500247955322266
    8. '   ' → logprob: -15.750247955322266
    9. '=int' → logprob: -16.750247955322266
    10. '[int' → logprob: -16.875247955322266

Token 759: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.0001863750658230856
    2. '(' → logprob: -8.6251859664917
    3. '(
' → logprob: -12.3751859664917
    4. '=line' → logprob: -14.5001859664917
    5. ',line' → logprob: -14.5001859664917
    6. ' line' → logprob: -14.8751859664917
    7. ' (' → logprob: -15.0001859664917
    8. 'line' → logprob: -15.5001859664917
    9. '#line' → logprob: -15.5001859664917
    10. ')' → logprob: -15.7501859664917

Token 760: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0009142052149400115
    2. ' line' → logprob: -7.000914096832275
    3. '(line' → logprob: -13.000914573669434
    4. '[line' → logprob: -15.125914573669434
    5. '	line' → logprob: -16.500913619995117
    6. '#line' → logprob: -17.000913619995117
    7. '=line' → logprob: -17.125913619995117
    8. ',line' → logprob: -17.875913619995117
    9. '           ' → logprob: -19.125913619995117
    10. '_line' → logprob: -19.250913619995117

Token 761: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.034731023013591766
    2. '().' → logprob: -3.534730911254883
    3. '.strip' → logprob: -5.909730911254883
    4. '.' → logprob: -6.159730911254883
    5. ' .' → logprob: -9.659730911254883
    6. 'split' → logprob: -10.284730911254883
    7. '))' → logprob: -10.909730911254883
    8. '.readline' → logprob: -11.659730911254883
    9. '()))' → logprob: -12.159730911254883
    10. '.rstrip' → logprob: -12.534730911254883

Token 762: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.0072176759131252766
    2. '()' → logprob: -5.382217884063721
    3. '))' → logprob: -6.882217884063721
    4. '(' → logprob: -6.882217884063721
    5. '()))
' → logprob: -7.632217884063721
    6. '('' → logprob: -10.632217407226562
    7. '())' → logprob: -11.257217407226562
    8. '()));' → logprob: -12.007217407226562
    9. '(','' → logprob: -12.632217407226562
    10. '()))

' → logprob: -12.757217407226562

Token 763: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008276138687506318
    2. '       ' → logprob: -8.00082778930664
    3. '<|end|>' → logprob: -8.25082778930664
    4. 'if' → logprob: -9.12582778930664
    5. ' if' → logprob: -10.25082778930664
    6. '          ' → logprob: -10.62582778930664
    7. '            
' → logprob: -11.12582778930664
    8. '<|end|>' → logprob: -11.50082778930664
    9. '	       ' → logprob: -12.12582778930664
    10. '        
' → logprob: -12.25082778930664

Token 764: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.055102866142988205
    2. '           ' → logprob: -3.305102825164795
    3. ' if' → logprob: -4.180102825164795
    4. '       ' → logprob: -6.930102825164795
    5. 'n' → logprob: -7.680102825164795
    6. '[' → logprob: -9.680103302001953
    7. 'i' → logprob: -10.805103302001953
    8. '	if' → logprob: -10.930103302001953
    9. '
' → logprob: -11.430103302001953
    10. '            
' → logprob: -11.680103302001953

Token 765: ' len' (ID: 4631)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.25798529386520386
    2. 'len' → logprob: -1.5079853534698486
    3. 'not' → logprob: -5.5079851150512695
    4. ' n' → logprob: -6.7579851150512695
    5. ' len' → logprob: -7.8829851150512695
    6. ' not' → logprob: -8.63298511505127
    7. 'all' → logprob: -8.63298511505127
    8. 'sum' → logprob: -9.50798511505127
    9. ' all' → logprob: -12.00798511505127
    10. '   ' → logprob: -12.25798511505127

Token 766: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0012889248318970203
    2. 'n' → logprob: -6.751288890838623
    3. '(' → logprob: -9.376289367675781
    4. '<n' → logprob: -10.376289367675781
    5. ' n' → logprob: -13.876289367675781
    6. '!=' → logprob: -14.876289367675781
    7. '(not' → logprob: -15.001289367675781
    8. '==' → logprob: -15.251289367675781
    9. '	n' → logprob: -15.501289367675781
    10. 'not' → logprob: -15.501289367675781

Token 767: '_a' (ID: 10852)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7584607601165771
    2. '_a' → logprob: -1.0084607601165771
    3. ' ==' → logprob: -2.883460760116577
    4. '==' → logprob: -3.258460760116577
    5. ' !=' → logprob: -4.383460998535156
    6. ')==' → logprob: -4.383460998535156
    7. '_' → logprob: -4.508460998535156
    8. '[' → logprob: -4.758460998535156
    9. ' )' → logprob: -5.258460998535156
    10. '   ' → logprob: -5.383460998535156

Token 768: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -9.472211968386546e-05
    2. '_a' → logprob: -10.000094413757324
    3. '_n' → logprob: -10.875094413757324
    4. 'b' → logprob: -11.750094413757324
    5. 'a' → logprob: -12.250094413757324
    6. '_' → logprob: -12.625094413757324
    7. ')' → logprob: -13.000094413757324
    8. 'n' → logprob: -13.125094413757324
    9. '>' → logprob: -13.625094413757324
    10. '==' → logprob: -13.625094413757324

Token 769: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.0229562446475029
    2. '_b' → logprob: -3.897956132888794
    3. 'c' → logprob: -6.147956371307373
    4. '_a' → logprob: -9.272955894470215
    5. 'C' → logprob: -9.647955894470215
    6. '_' → logprob: -10.022955894470215
    7. '<' → logprob: -10.772955894470215
    8. '==' → logprob: -11.897955894470215
    9. ' ' → logprob: -12.147955894470215
    10. ')' → logprob: -12.522955894470215

Token 770: '_x' (ID: 7054)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.2700481712818146
    2. '_b' → logprob: -1.5200481414794922
    3. 'c' → logprob: -4.145048141479492
    4. 'b' → logprob: -7.270048141479492
    5. '   ' → logprob: -7.895048141479492
    6. '_' → logprob: -8.145048141479492
    7. ' ' → logprob: -8.520048141479492
    8. '==' → logprob: -8.895048141479492
    9. ')' → logprob: -9.145048141479492
    10. '```' → logprob: -9.770048141479492

Token 771: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018793005496263504
    2. '!=' → logprob: -4.768793106079102
    3. '<' → logprob: -5.393793106079102
    4. ')!=' → logprob: -6.143793106079102
    5. ' !=' → logprob: -6.268793106079102
    6. ')<' → logprob: -7.143793106079102
    7. '==' → logprob: -7.643793106079102
    8. ' <' → logprob: -9.393793106079102
    9. ')==' → logprob: -9.768793106079102
    10. ' ==' → logprob: -10.768793106079102

Token 772: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.18387193977832794
    2. '<' → logprob: -1.9338719844818115
    3. ' !=' → logprob: -4.058871746063232
    4. '==' → logprob: -5.183871746063232
    5. ' <' → logprob: -8.80887222290039
    6. '<len' → logprob: -8.93387222290039
    7. ')!=' → logprob: -9.93387222290039
    8. '()!=' → logprob: -10.55887222290039
    9. ' ==' → logprob: -10.93387222290039
    10. '[' → logprob: -11.43387222290039

Token 773: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.10025326162576675
    2. '5' → logprob: -2.3502533435821533
    3. ' ' → logprob: -9.975253105163574
    4. '6' → logprob: -16.97525405883789
    5. '' → logprob: -17.35025405883789
    6. '```' → logprob: -18.10025405883789
    7. '
' → logprob: -18.85025405883789
    8. '0' → logprob: -19.35025405883789
    9. '=' → logprob: -19.78775405883789
    10. '   ' → logprob: -19.91275405883789

Token 774: '5' (ID: 20)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.012510471045970917
    2. '5' → logprob: -4.387510299682617
    3. ' ' → logprob: -14.012510299682617
    4. '```' → logprob: -17.762510299682617
    5. '
' → logprob: -18.075010299682617
    6. '' → logprob: -18.137510299682617
    7. '   ' → logprob: -18.262510299682617
    8. '４' → logprob: -19.262510299682617
    9. '۴' → logprob: -19.325010299682617
    10. '{' → logprob: -19.887510299682617

Token 775: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3227366805076599
    2. ' or' → logprob: -1.3227367401123047
    3. ':
' → logprob: -5.322736740112305
    4. 'or' → logprob: -5.572736740112305
    5. ' and' → logprob: -8.447736740112305
    6. '           ' → logprob: -8.447736740112305
    7. 'and' → logprob: -8.822736740112305
    8. ':return' → logprob: -9.572736740112305
    9. '<|end|>' → logprob: -10.197736740112305
    10. '               ' → logprob: -10.822736740112305

Token 776: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.24020564556121826
    2. ':' → logprob: -2.240205764770508
    3. ':
' → logprob: -2.365205764770508
    4. '           ' → logprob: -4.490205764770508
    5. ' or' → logprob: -6.490205764770508
    6. '                   ' → logprob: -8.490205764770508
    7. '   ' → logprob: -9.615205764770508
    8. ':return' → logprob: -9.990205764770508
    9. '       ' → logprob: -10.490205764770508
    10. ' and' → logprob: -10.865205764770508

Token 777: ' #' (ID: 1069)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.20380543172359467
    2. '               ' → logprob: -1.7038054466247559
    3. ' break' → logprob: -6.703805446624756
    4. '	break' → logprob: -7.453805446624756
    5. 'return' → logprob: -7.828805446624756
    6. '           ' → logprob: -9.203804969787598
    7. '                   ' → logprob: -9.953804969787598
    8. '   ' → logprob: -11.078804969787598
    9. 'continue' → logprob: -11.078804969787598
    10. '			' → logprob: -12.953804969787598

Token 778: ' Mal' (ID: 7825)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.00046022076276130974
    2. 'return' → logprob: -8.125460624694824
    3. 'b' → logprob: -9.000460624694824
    4. 'br' → logprob: -10.875460624694824
    5. ' break' → logprob: -11.000460624694824
    6. 'continue' → logprob: -13.500460624694824
    7. '           ' → logprob: -14.000460624694824
    8. '       ' → logprob: -14.250460624694824
    9. 'bre' → logprob: -14.375460624694824
    10. '   ' → logprob: -14.750460624694824

Token 779: 'formed' (ID: 11144)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.1173948422074318
    2. 't' → logprob: -2.2423949241638184
    3. 'break' → logprob: -5.867394924163818
    4. 'd' → logprob: -7.117394924163818
    5. 'e' → logprob: -7.867394924163818
    6. 'ks' → logprob: -9.49239444732666
    7. 'f' → logprob: -9.86739444732666
    8. 'king' → logprob: -9.86739444732666
    9. 'b' → logprob: -9.99239444732666
    10. '
' → logprob: -10.61739444732666

Token 780: ' input' (ID: 3422)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.2998492121696472
    2. 'return' → logprob: -1.549849271774292
    3. ' break' → logprob: -3.299849271774292
    4. ' return' → logprob: -5.424849033355713
    5. 'continue' → logprob: -6.049849033355713
    6. 'input' → logprob: -7.049849033355713
    7. '   ' → logprob: -7.299849033355713
    8. ' ' → logprob: -7.924849033355713
    9. '
' → logprob: -8.549849510192871
    10. ' continue' → logprob: -8.549849510192871

Token 781: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.035297926515340805
    2. '           ' → logprob: -3.5352978706359863
    3. '
' → logprob: -6.035297870635986
    4. '                   ' → logprob: -6.535297870635986
    5. 'continue' → logprob: -7.660297870635986
    6. ':
' → logprob: -8.410298347473145
    7. ' continue' → logprob: -8.410298347473145
    8. ',' → logprob: -9.160298347473145
    9. '                
' → logprob: -9.285298347473145
    10. '            
' → logprob: -9.285298347473145

Token 782: ' ignore' (ID: 17887)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.0014555935049429536
    2. 'return' → logprob: -7.501455783843994
    3. ' break' → logprob: -7.751455783843994
    4. 'continue' → logprob: -8.501455307006836
    5. '               ' → logprob: -8.876455307006836
    6. '	break' → logprob: -9.501455307006836
    7. '           ' → logprob: -9.876455307006836
    8. '       ' → logprob: -13.751455307006836
    9. '                   ' → logprob: -14.001455307006836
    10. '		' → logprob: -15.376455307006836

Token 783: ' or' (ID: 503)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06227060779929161
    2. '           ' → logprob: -3.1872706413269043
    3. 'continue' → logprob: -4.562270641326904
    4. ' continue' → logprob: -4.937270641326904
    5. '                   ' → logprob: -7.937270641326904
    6. ',' → logprob: -8.062270164489746
    7. '
' → logprob: -8.562270164489746
    8. '	continue' → logprob: -8.812270164489746
    9. ' or' → logprob: -9.062270164489746
    10. '.' → logprob: -9.937270164489746

Token 784: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.0009527906076982617
    2. ' break' → logprob: -7.00095272064209
    3. 'return' → logprob: -10.25095272064209
    4. 'raise' → logprob: -12.12595272064209
    5. 'continue' → logprob: -14.87595272064209
    6. '	break' → logprob: -16.625953674316406
    7. ' return' → logprob: -17.625953674316406
    8. ' raise' → logprob: -19.000953674316406
    9. '_break' → logprob: -19.500953674316406
    10. '   ' → logprob: -19.750953674316406

Token 785: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03607773035764694
    2. '           ' → logprob: -3.6610777378082275
    3. '
' → logprob: -5.411077499389648
    4. '                   ' → logprob: -6.036077499389648
    5. '       ' → logprob: -6.786077499389648
    6. '                
' → logprob: -8.286077499389648
    7. '\n' → logprob: -8.536077499389648
    8. '            
' → logprob: -8.661077499389648
    9. '                ' → logprob: -8.786077499389648
    10. '   ' → logprob: -9.036077499389648

Token 786: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07059215754270554
    2. '           ' → logprob: -2.820592164993286
    3. 'break' → logprob: -5.320591926574707
    4. 'return' → logprob: -6.320591926574707
    5. '                   ' → logprob: -7.320591926574707
    6. '       ' → logprob: -8.195591926574707
    7. '   ' → logprob: -8.445591926574707
    8. ' break' → logprob: -8.570591926574707
    9. '	break' → logprob: -8.945591926574707
    10. '                       ' → logprob: -9.445591926574707

Token 787: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.00021021578868385404
    2. '           ' → logprob: -9.75020980834961
    3. '               ' → logprob: -9.75020980834961
    4. ' break' → logprob: -10.00020980834961
    5. '	break' → logprob: -10.00020980834961
    6. 'return' → logprob: -13.37520980834961
    7. 'continue' → logprob: -15.25020980834961
    8. '```' → logprob: -15.25020980834961
    9. '       ' → logprob: -15.37520980834961
    10. '   ' → logprob: -15.37520980834961

Token 788: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010892306454479694
    2. '
' → logprob: -4.760892391204834
    3. 'n' → logprob: -6.385892391204834
    4. '            
' → logprob: -8.135891914367676
    5. '       ' → logprob: -8.635891914367676
    6. '    
' → logprob: -9.760891914367676
    7. '        
' → logprob: -11.010891914367676
    8. '		' → logprob: -11.385891914367676
    9. '  
' → logprob: -12.260891914367676
    10. '
' → logprob: -12.510891914367676

Token 789: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007668147794902325
    2. '
' → logprob: -5.3826680183410645
    3. '       ' → logprob: -6.0076680183410645
    4. 'n' → logprob: -7.7576680183410645
    5. '            
' → logprob: -9.507668495178223
    6. '		' → logprob: -10.257668495178223
    7. '        
' → logprob: -11.007668495178223
    8. '   ' → logprob: -11.882668495178223
    9. '    
' → logprob: -12.007668495178223
    10. '	       ' → logprob: -12.757668495178223

Token 790: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.001048646867275238
    2. '           ' → logprob: -7.126048564910889
    3. '       ' → logprob: -8.876049041748047
    4. ' n' → logprob: -9.251049041748047
    5. '   ' → logprob: -12.501049041748047
    6. '```' → logprob: -13.251049041748047
    7. '
' → logprob: -14.001049041748047
    8. '	n' → logprob: -14.876049041748047
    9. '(n' → logprob: -15.126049041748047
    10. '            
' → logprob: -15.251049041748047

Token 791: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017406281549483538
    2. '=' → logprob: -6.751740455627441
    3. ',a' → logprob: -8.126740455627441
    4. ' =' → logprob: -8.251740455627441
    5. ' ,' → logprob: -11.876740455627441
    6. ',
' → logprob: -13.751740455627441
    7. ',b' → logprob: -13.751740455627441
    8. ',n' → logprob: -14.001740455627441
    9. ',c' → logprob: -14.876740455627441
    10. 'a' → logprob: -14.876740455627441

Token 792: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -8.53050296427682e-05
    2. ' a' → logprob: -9.37508487701416
    3. 'self' → logprob: -15.25008487701416
    4. '_a' → logprob: -16.125085830688477
    5. '	a' → logprob: -16.750085830688477
    6. '=' → logprob: -17.625085830688477
    7. ',a' → logprob: -17.750085830688477
    8. '
' → logprob: -18.000085830688477
    9. '   ' → logprob: -18.125085830688477
    10. '    ' → logprob: -18.375085830688477

Token 793: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006161278113722801
    2. '=' → logprob: -5.881161212921143
    3. ',b' → logprob: -6.756161212921143
    4. ' =' → logprob: -6.881161212921143
    5. '<|end|>' → logprob: -7.756161212921143
    6. ' ,' → logprob: -7.881161212921143
    7. ' ' → logprob: -8.3811616897583
    8. 'b' → logprob: -9.6311616897583
    9. ' b' → logprob: -11.0061616897583
    10. '_,' → logprob: -11.8811616897583

Token 794: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0015023599844425917
    2. ' b' → logprob: -6.501502513885498
    3. '	b' → logprob: -19.126502990722656
    4. '   ' → logprob: -20.001502990722656
    5. ' ' → logprob: -20.001502990722656
    6. '
' → logprob: -20.501502990722656
    7. '<|end|>' → logprob: -20.501502990722656
    8. '       ' → logprob: -20.626502990722656
    9. '    ' → logprob: -21.126502990722656
    10. ',' → logprob: -21.126502990722656

Token 795: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001421068562194705
    2. ',c' → logprob: -6.751420974731445
    3. 'c' → logprob: -9.001420974731445
    4. '=' → logprob: -9.751420974731445
    5. ' ,' → logprob: -9.876420974731445
    6. ' =' → logprob: -11.501420974731445
    7. ' c' → logprob: -12.501420974731445
    8. '<|end|>' → logprob: -13.001420974731445
    9. '_,' → logprob: -14.626420974731445
    10. ',
' → logprob: -15.501420974731445

Token 796: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.12692853808403015
    2. ' c' → logprob: -2.1269285678863525
    3. '<|end|>' → logprob: -15.876928329467773
    4. '	c' → logprob: -16.001928329467773
    5. ',c' → logprob: -16.251928329467773
    6. '_c' → logprob: -16.376928329467773
    7. '
' → logprob: -17.501928329467773
    8. '*c' → logprob: -17.626928329467773
    9. '=c' → logprob: -17.876928329467773
    10. '_' → logprob: -18.001928329467773

Token 797: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.531315314830863e-06
    2. ',x' → logprob: -13.000003814697266
    3. '=' → logprob: -14.875003814697266
    4. ' ,' → logprob: -15.125003814697266
    5. ',user' → logprob: -15.875003814697266
    6. ',
' → logprob: -16.125003814697266
    7. ',current' → logprob: -16.250003814697266
    8. ' =' → logprob: -16.625003814697266
    9. ',\
' → logprob: -16.750003814697266
    10. '_,' → logprob: -18.125003814697266

Token 798: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00025526012177579105
    2. 'seed' → logprob: -8.750255584716797
    3. ' x' → logprob: -9.250255584716797
    4. ' seed' → logprob: -15.125255584716797
    5. 'current' → logprob: -15.875255584716797
    6. '_x' → logprob: -16.375255584716797
    7. '   ' → logprob: -16.875255584716797
    8. '	x' → logprob: -17.000255584716797
    9. '_seed' → logprob: -17.625255584716797
    10. '
' → logprob: -18.250255584716797

Token 799: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12692810595035553
    2. ' =' → logprob: -2.1269280910491943
    3. ',' → logprob: -17.001928329467773
    4. '=
' → logprob: -18.376928329467773
    5. ' =
' → logprob: -18.501928329467773
    6. ' ' → logprob: -18.626928329467773
    7. '_' → logprob: -19.251928329467773
    8. '＝' → logprob: -19.501928329467773
    9. '=

' → logprob: -19.501928329467773
    10. '=}' → logprob: -19.501928329467773

Token 800: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2014147937297821
    2. ' n' → logprob: -1.7014148235321045
    3. '	n' → logprob: -13.451415061950684
    4. '_n' → logprob: -16.076414108276367
    5. '=n' → logprob: -18.576414108276367
    6. ')n' → logprob: -19.451414108276367
    7. '[n' → logprob: -19.576414108276367
    8. '(n' → logprob: -19.701414108276367
    9. '    ' → logprob: -19.951414108276367
    10. '
' → logprob: -19.951414108276367

Token 801: '_a' (ID: 10852)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4400266110897064
    2. '=' → logprob: -1.0650266408920288
    3. '_' → logprob: -5.440026760101318
    4. '_a' → logprob: -5.690026760101318
    5. '=index' → logprob: -7.065026760101318
    6. '   ' → logprob: -8.06502628326416
    7. '=line' → logprob: -8.56502628326416
    8. '
' → logprob: -8.81502628326416
    9. 'x' → logprob: -8.81502628326416
    10. '_current' → logprob: -8.94002628326416

Token 802: '_b' (ID: 1535)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.39614126086235046
    2. '_b' → logprob: -1.5211412906646729
    3. '_a' → logprob: -2.521141290664673
    4. 'x' → logprob: -4.396141052246094
    5. '=' → logprob: -5.396141052246094
    6. ' =' → logprob: -5.896141052246094
    7. '[' → logprob: -6.271141052246094
    8. '_
' → logprob: -6.646141052246094
    9. '_=' → logprob: -7.021141052246094
    10. '_x' → logprob: -7.271141052246094

Token 803: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.6652505397796631
    2. '_' → logprob: -0.7902505397796631
    3. '_
' → logprob: -4.290250778198242
    4. 'c' → logprob: -4.290250778198242
    5. '<|end|>' → logprob: -6.790250778198242
    6. 'x' → logprob: -7.165250778198242
    7. ' _' → logprob: -7.790250778198242
    8. '[' → logprob: -8.040250778198242
    9. ',' → logprob: -8.165250778198242
    10. '_a' → logprob: -8.290250778198242

Token 804: '_x' (ID: 7054)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.03533659502863884
    2. 'c' → logprob: -3.410336494445801
    3. '=' → logprob: -6.785336494445801
    4. '_c' → logprob: -8.1603364944458
    5. '_x' → logprob: -8.9103364944458
    6. ' =' → logprob: -10.1603364944458
    7. ' ' → logprob: -11.4103364944458
    8. '_' → logprob: -11.4103364944458
    9. '   ' → logprob: -11.4103364944458
    10. 'C' → logprob: -11.7853364944458

Token 805: '
' (ID: 198)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6013897657394409
    2. ':' → logprob: -1.476389765739441
    3. '<|end|>' → logprob: -2.2263898849487305
    4. ' =' → logprob: -2.4763898849487305
    5. '
' → logprob: -4.3513898849487305
    6. ',' → logprob: -5.4763898849487305
    7. '<|end|>' → logprob: -5.9763898849487305
    8. '       ' → logprob: -5.9763898849487305
    9. ')' → logprob: -6.1013898849487305
    10. ' ' → logprob: -6.7263898849487305

Token 806: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03275488689541817
    2. '       ' → logprob: -4.157754898071289
    3. 'conditions' → logprob: -5.282754898071289
    4. 're' → logprob: -5.532754898071289
    5. '            
' → logprob: -5.532754898071289
    6. ' conditions' → logprob: -6.407754898071289
    7. '        
' → logprob: -7.907754898071289
    8. 'if' → logprob: -8.032754898071289
    9. ' if' → logprob: -8.282754898071289
    10. 'condition' → logprob: -8.907754898071289

Token 807: ' if' (ID: 538)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.6681357622146606
    2. 'conditions' → logprob: -1.6681357622146606
    3. 'if' (adapté à ' if') → logprob: -2.168135643005371
    4. 'conds' → logprob: -2.293135643005371
    5. 'k' → logprob: -3.668135643005371
    6. '           ' → logprob: -3.668135643005371
    7. 're' → logprob: -4.168135643005371
    8. 'num' → logprob: -4.418135643005371
    9. 'condition' → logprob: -6.168135643005371
    10. 'r' → logprob: -7.293135643005371

Token 808: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0013263145228847861
    2. ' n' → logprob: -6.626326084136963
    3. '
' → logprob: -16.001325607299805
    4. 'not' → logprob: -16.501325607299805
    5. '(n' → logprob: -16.501325607299805
    6. 'self' → logprob: -16.751325607299805
    7. '	n' → logprob: -16.876325607299805
    8. 'n't' → logprob: -17.126325607299805
    9. 'c' → logprob: -17.501325607299805
    10. ' not' → logprob: -17.751325607299805

Token 809: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4742279648780823
    2. ' ==' → logprob: -0.9742279648780823
    3. '<=' → logprob: -9.349227905273438
    4. '=' → logprob: -10.099227905273438
    5. ' <=' → logprob: -11.099227905273438
    6. '<' → logprob: -12.849227905273438
    7. '==
' → logprob: -13.349227905273438
    8. '===' → logprob: -13.849227905273438
    9. ' <' → logprob: -14.349227905273438
    10. ' =' → logprob: -14.724227905273438

Token 810: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '-' → logprob: -18.625
    4. '<|end|>' → logprob: -20.75
    5. '۰' → logprob: -20.875
    6. '```' → logprob: -21.0
    7. 'n' → logprob: -21.125
    8. '
' → logprob: -21.5
    9. '=' → logprob: -21.75
    10. '#' → logprob: -22.0

Token 811: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '-' → logprob: -17.125001907348633
    4. '۰' → logprob: -21.000001907348633
    5. '
' → logprob: -21.125001907348633
    6. '<|end|>' → logprob: -21.375001907348633
    7. ' -' → logprob: -21.875001907348633
    8. '=' → logprob: -22.000001907348633
    9. '```' → logprob: -22.125001907348633
    10. '_' → logprob: -22.125001907348633

Token 812: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05731087177991867
    2. ':
' → logprob: -3.5573108196258545
    3. ' and' → logprob: -3.8073108196258545
    4. 'and' → logprob: -5.307311058044434
    5. ':return' → logprob: -11.307311058044434
    6. '   ' → logprob: -12.682311058044434
    7. '           ' → logprob: -13.307311058044434
    8. ':
' → logprob: -14.557311058044434
    9. '	and' → logprob: -14.557311058044434
    10. ' or' → logprob: -14.682311058044434

Token 813: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0001584850688232109
    2. ' a' → logprob: -8.750158309936523
    3. '	a' → logprob: -17.500158309936523
    4. '   ' → logprob: -18.000158309936523
    5. ' ' → logprob: -19.375158309936523
    6. '    ' → logprob: -19.375158309936523
    7. '  ' → logprob: -19.625158309936523
    8. 'n' → logprob: -20.000158309936523
    9. '
' → logprob: -20.375158309936523
    10. '_a' → logprob: -20.500158309936523

Token 814: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.00407923199236393
    2. ' ==' → logprob: -5.504079341888428
    3. '===' → logprob: -14.87907886505127
    4. '=' → logprob: -15.37907886505127
    5. '==
' → logprob: -15.62907886505127
    6. 'b' → logprob: -16.879079818725586
    7. '()==' → logprob: -17.754079818725586
    8. '<|end|>' → logprob: -18.254079818725586
    9. '0' → logprob: -18.379079818725586
    10. 'a' → logprob: -18.879079818725586

Token 815: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00018983196059707552
    2. 'b' → logprob: -8.750189781188965
    3. ' ' → logprob: -10.375189781188965
    4. ' b' → logprob: -15.875189781188965
    5. '<|end|>' → logprob: -18.50019073486328
    6. ' ' → logprob: -20.62519073486328
    7. '۰' → logprob: -20.62519073486328
    8. 'and' → logprob: -21.50019073486328
    9. '  ' → logprob: -21.50019073486328
    10. '
' → logprob: -22.37519073486328

Token 816: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.618001053633634e-05
    2. 'b' → logprob: -10.625025749206543
    3. ' ' → logprob: -13.250025749206543
    4. ' b' → logprob: -18.25002670288086
    5. '<|end|>' → logprob: -19.37502670288086
    6. '۰' → logprob: -20.12502670288086
    7. ' ' → logprob: -21.75002670288086
    8. '_' → logprob: -22.87502670288086
    9. '=' → logprob: -23.25002670288086
    10. '
' → logprob: -23.50002670288086

Token 817: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.4740787148475647
    2. ' and' → logprob: -0.9740787148475647
    3. '0' → logprob: -13.724079132080078
    4. ' ' → logprob: -15.224079132080078
    5. '<|end|>' → logprob: -15.474079132080078
    6. 'b' → logprob: -16.724079132080078
    7. '==' → logprob: -17.599079132080078
    8. 'a' → logprob: -17.849079132080078
    9. '	and' → logprob: -18.474079132080078
    10. ',' → logprob: -19.099079132080078

Token 818: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0005530327325686812
    2. ' b' → logprob: -7.500553131103516
    3. '	b' → logprob: -20.750553131103516
    4. '0' → logprob: -20.875553131103516
    5. ' ' → logprob: -21.375553131103516
    6. '   ' → logprob: -23.250553131103516
    7. '_b' → logprob: -24.500553131103516
    8. '  ' → logprob: -24.500553131103516
    9. 'and' → logprob: -25.000553131103516
    10. ')b' → logprob: -25.500553131103516

Token 819: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.004081959370523691
    2. ' ==' → logprob: -5.504081726074219
    3. '==
' → logprob: -13.629081726074219
    4. '=' → logprob: -13.629081726074219
    5. '===' → logprob: -15.004081726074219
    6. '()==' → logprob: -15.254081726074219
    7. '0' → logprob: -15.379081726074219
    8. '<|end|>' → logprob: -15.879081726074219
    9. ')==' → logprob: -16.25408172607422
    10. ']==' → logprob: -16.87908172607422

Token 820: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009138475870713592
    2. ' ' → logprob: -7.000913619995117
    3. '<|end|>' → logprob: -13.125913619995117
    4. '=' → logprob: -15.250913619995117
    5. ' and' → logprob: -16.500913619995117
    6. 'and' → logprob: -17.000913619995117
    7. '==' → logprob: -17.875913619995117
    8. '<|end|>' → logprob: -18.625913619995117
    9. ' =' → logprob: -18.875913619995117
    10. '```' → logprob: -19.250913619995117

Token 821: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00038455575122497976
    2. ' ' → logprob: -7.875384330749512
    3. '<|end|>' → logprob: -12.375384330749512
    4. '=' → logprob: -15.500384330749512
    5. '<|end|>' → logprob: -17.000385284423828
    6. '```' → logprob: -17.375385284423828
    7. 'and' → logprob: -18.000385284423828
    8. ' and' → logprob: -18.250385284423828
    9. '۰' → logprob: -18.625385284423828
    10. '==' → logprob: -18.875385284423828

Token 822: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.20142298936843872
    2. 'and' → logprob: -1.701422929763794
    3. '0' → logprob: -12.201422691345215
    4. ' ' → logprob: -12.451422691345215
    5. '==' → logprob: -14.451422691345215
    6. 'a' → logprob: -15.951422691345215
    7. '=' → logprob: -16.70142364501953
    8. ' a' → logprob: -17.20142364501953
    9. '&&' → logprob: -17.45142364501953
    10. '<|end|>' → logprob: -17.45142364501953

Token 823: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.011083661578595638
    2. ' c' → logprob: -4.511083602905273
    3. ' and' → logprob: -11.011083602905273
    4. 'and' → logprob: -11.136083602905273
    5. '   ' → logprob: -13.386083602905273
    6. '0' → logprob: -13.386083602905273
    7. ' ' → logprob: -14.136083602905273
    8. '	c' → logprob: -14.886083602905273
    9. '  ' → logprob: -15.761083602905273
    10. '           ' → logprob: -16.011083602905273

Token 824: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2519945204257965
    2. ' ==' → logprob: -1.5019944906234741
    3. '=' → logprob: -10.126994132995605
    4. '0' → logprob: -11.626994132995605
    5. '==
' → logprob: -11.626994132995605
    6. ' ' → logprob: -12.751994132995605
    7. ' =' → logprob: -12.876994132995605
    8. '<|end|>' → logprob: -14.001994132995605
    9. ')==' → logprob: -14.626994132995605
    10. '===' → logprob: -15.501994132995605

Token 825: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002043748099822551
    2. ' ' → logprob: -8.500204086303711
    3. '=' → logprob: -14.125204086303711
    4. '<|end|>' → logprob: -16.25020408630371
    5. ' =' → logprob: -18.25020408630371
    6. '۰' → logprob: -18.75020408630371
    7. '<|end|>' → logprob: -18.87520408630371
    8. '```' → logprob: -19.50020408630371
    9. '   ' → logprob: -19.75020408630371
    10. '==' → logprob: -20.00020408630371

Token 826: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.5577775128767826e-06
    2. ' ' → logprob: -12.125005722045898
    3. '<|end|>' → logprob: -19.0000057220459
    4. '۰' → logprob: -19.2500057220459
    5. '=' → logprob: -19.2500057220459
    6. '   ' → logprob: -20.2500057220459
    7. '```' → logprob: -20.3125057220459
    8. '<|end|>' → logprob: -20.6250057220459
    9. '
' → logprob: -21.0000057220459
    10. ' ' → logprob: -21.6250057220459

Token 827: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.16023458540439606
    2. 'and' → logprob: -1.9102345705032349
    3. '0' → logprob: -11.660234451293945
    4. ' ' → logprob: -14.035234451293945
    5. 'a' → logprob: -14.910234451293945
    6. 'x' → logprob: -14.910234451293945
    7. '	and' → logprob: -15.910234451293945
    8. '==' → logprob: -17.410234451293945
    9. ' an' → logprob: -17.535234451293945
    10. '<|end|>' → logprob: -17.910234451293945

Token 828: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -7.941850526549388e-06
    2. ' x' → logprob: -11.750007629394531
    3. '	x' → logprob: -22.25000762939453
    4. '0' → logprob: -23.75000762939453
    5. '   ' → logprob: -24.37500762939453
    6. ' ' → logprob: -24.87500762939453
    7. ')x' → logprob: -26.25000762939453
    8. '  ' → logprob: -26.50000762939453
    9. '"x' → logprob: -26.87500762939453
    10. '_x' → logprob: -26.87500762939453

Token 829: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.014169150963425636
    2. ' ==' → logprob: -4.264169216156006
    3. '=' → logprob: -12.514168739318848
    4. '==
' → logprob: -13.389168739318848
    5. ')==' → logprob: -16.014169692993164
    6. '0' → logprob: -16.014169692993164
    7. '===' → logprob: -16.389169692993164
    8. ']==' → logprob: -16.514169692993164
    9. '<|end|>' → logprob: -17.514169692993164
    10. '()==' → logprob: -17.764169692993164

Token 830: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '=' → logprob: -20.0
    4. '۰' → logprob: -21.125
    5. '-' → logprob: -22.625
    6. '_' → logprob: -22.875
    7. '   ' → logprob: -22.875
    8. '০' → logprob: -23.0
    9. '==' → logprob: -23.5
    10. '०' → logprob: -23.625

Token 831: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '۰' → logprob: -19.125001907348633
    4. '=' → logprob: -20.125001907348633
    5. '০' → logprob: -20.125001907348633
    6. '-' → logprob: -20.125001907348633
    7. '<|end|>' → logprob: -20.375001907348633
    8. '०' → logprob: -20.750001907348633
    9. '   ' → logprob: -21.250001907348633
    10. '000' → logprob: -22.437501907348633

Token 832: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.38689863681793213
    2. ':
' → logprob: -1.1368986368179321
    3. ':return' → logprob: -11.5118989944458
    4. '           ' → logprob: -11.6368989944458
    5. '   ' → logprob: -12.8868989944458
    6. '               ' → logprob: -13.0118989944458
    7. '       ' → logprob: -13.2618989944458
    8. ':
' → logprob: -13.8868989944458
    9. ':

' → logprob: -14.6368989944458
    10. '):
' → logprob: -15.1368989944458

Token 833: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001354402513243258
    2. '           ' → logprob: -6.626354217529297
    3. '                   ' → logprob: -11.751354217529297
    4. '	           ' → logprob: -11.876354217529297
    5. '              ' → logprob: -12.626354217529297
    6. '
' → logprob: -12.751354217529297
    7. '   ' → logprob: -13.126354217529297
    8. '			' → logprob: -13.251354217529297
    9. '       ' → logprob: -13.626354217529297
    10. ':' → logprob: -15.126354217529297

Token 834: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3911161422729492
    2. 'break' (adapté à ' break') → logprob: -1.1411161422729492
    3. ' break' → logprob: -6.016116142272949
    4. 'return' → logprob: -7.266116142272949
    5. '           ' → logprob: -7.641116142272949
    6. '	break' → logprob: -8.01611614227295
    7. '                   ' → logprob: -8.26611614227295
    8. '	           ' → logprob: -11.76611614227295
    9. '			' → logprob: -11.89111614227295
    10. '_break' → logprob: -12.64111614227295

Token 835: ' ' (ID: 220)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08499814569950104
    2. ' conditions' → logprob: -3.20999813079834
    3. 'conditions' → logprob: -3.33499813079834
    4. 'n' → logprob: -6.95999813079834
    5. 'conds' → logprob: -6.95999813079834
    6. 're' → logprob: -6.95999813079834
    7. 'num' → logprob: -7.20999813079834
    8. 'condition' → logprob: -7.70999813079834
    9. 'targets' → logprob: -8.08499813079834
    10. ' reels' → logprob: -8.33499813079834

Token 836: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014425568282604218
    2. '       ' → logprob: -4.514425754547119
    3. '            
' → logprob: -6.514425754547119
    4. '
' → logprob: -6.764425754547119
    5. '        
' → logprob: -7.764425754547119
    6. '    
' → logprob: -9.264425277709961
    7. 're' → logprob: -9.764425277709961
    8. 'self' → logprob: -11.139425277709961
    9. '   ' → logprob: -11.264425277709961
    10. '          ' → logprob: -11.264425277709961

Token 837: ' end' (ID: 1268)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.40062373876571655
    2. '           ' → logprob: -1.4006237983703613
    3. ' return' → logprob: -2.5256237983703613
    4. 'continue' → logprob: -6.400623798370361
    5. '       ' → logprob: -7.150623798370361
    6. '
' → logprob: -7.275623798370361
    7. ' continue' → logprob: -8.650623321533203
    8. '   ' → logprob: -9.275623321533203
    9. '#' → logprob: -9.400623321533203
    10. 'for' → logprob: -10.025623321533203

Token 838: ' of' (ID: 328)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18299812078475952
    2. '<|end|>' → logprob: -1.8079981803894043
    3. '    
' → logprob: -7.182998180389404
    4. '           ' → logprob: -7.182998180389404
    5. '<|end|>' → logprob: -7.682998180389404
    6. '            
' → logprob: -7.682998180389404
    7. '\n' → logprob: -8.807997703552246
    8. '  
' → logprob: -9.432997703552246
    9. '        
' → logprob: -9.807997703552246
    10. '  ' → logprob: -10.057997703552246

Token 839: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0015391462948173285
    2. ' input' → logprob: -6.50153923034668
    3. 'inputs' → logprob: -10.87653923034668
    4. '_input' → logprob: -11.25153923034668
    5. 'all' → logprob: -13.37653923034668
    6. 'program' → logprob: -13.50153923034668
    7. 'data' → logprob: -13.62653923034668
    8. 'test' → logprob: -15.37653923034668
    9. 'inp' → logprob: -16.00153923034668
    10. 'Input' → logprob: -16.12653923034668

Token 840: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007041551638394594
    2. 'conditions' → logprob: -5.8820414543151855
    3. '       ' → logprob: -6.1320414543151855
    4. ' conditions' → logprob: -7.0070414543151855
    5. '            
' → logprob: -7.2570414543151855
    6. 're' → logprob: -9.132041931152344
    7. '    
' → logprob: -9.507041931152344
    8. '        
' → logprob: -10.007041931152344
    9. 'condition' → logprob: -10.132041931152344
    10. '   ' → logprob: -10.257041931152344

Token 841: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12530864775180817
    2. 'conditions' → logprob: -2.3753087520599365
    3. 'conds' → logprob: -4.625308513641357
    4. ' conditions' → logprob: -5.125308513641357
    5. 're' → logprob: -5.250308513641357
    6. '       ' → logprob: -6.625308513641357
    7. 'num' → logprob: -7.000308513641357
    8. 'n' → logprob: -7.000308513641357
    9. 'm' → logprob: -9.000308990478516
    10. '   ' → logprob: -9.250308990478516

Token 842: ' if' (ID: 538)
  Prédit: 'conditions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'conditions' → logprob: -0.45064178109169006
    2. '           ' → logprob: -1.8256417512893677
    3. 'conds' → logprob: -2.0756418704986572
    4. 're' → logprob: -3.2006418704986572
    5. ' conditions' → logprob: -4.325641632080078
    6. 'm' → logprob: -4.575641632080078
    7. 'num' → logprob: -5.575641632080078
    8. 'targets' → logprob: -5.950641632080078
    9. 'n' → logprob: -6.200641632080078
    10. 'k' → logprob: -7.200641632080078

Token 843: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.3520737886428833
    2. 'n' → logprob: -1.3520737886428833
    3. 'len' → logprob: -3.6020736694335938
    4. 'a' → logprob: -5.977073669433594
    5. ' index' → logprob: -5.977073669433594
    6. ' n' → logprob: -6.852073669433594
    7. 'not' → logprob: -6.977073669433594
    8. 'c' → logprob: -7.102073669433594
    9. ' len' → logprob: -7.352073669433594
    10. 'self' → logprob: -7.602073669433594

Token 844: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.5797030329704285
    2. '>=' → logprob: -0.8297030329704285
    3. '+' → logprob: -6.454702854156494
    4. ' >' → logprob: -7.204702854156494
    5. '>' → logprob: -7.454702854156494
    6. '==' → logprob: -7.704702854156494
    7. ' ==' → logprob: -8.454703330993652
    8. ' +' → logprob: -9.204703330993652
    9. ']>=' → logprob: -10.329703330993652
    10. '<|end|>' → logprob: -10.954703330993652

Token 845: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00020413640595506877
    2. ' len' → logprob: -8.500204086303711
    3. '	len' → logprob: -15.375204086303711
    4. '<len' → logprob: -16.00020408630371
    5. '[len' → logprob: -16.37520408630371
    6. '=len' → logprob: -16.50020408630371
    7. '(len' → logprob: -16.50020408630371
    8. ',len' → logprob: -16.87520408630371
    9. '           ' → logprob: -17.25020408630371
    10. '          ' → logprob: -19.37520408630371

Token 846: '(input' (ID: 10054)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.06829194724559784
    2. '(input' → logprob: -2.8182919025421143
    3. ' input' → logprob: -5.068292140960693
    4. '=input' → logprob: -12.693291664123535
    5. ',input' → logprob: -12.818291664123535
    6. '<input' → logprob: -13.443291664123535
    7. '[input' → logprob: -13.693291664123535
    8. 'line' → logprob: -13.818291664123535
    9. '_input' → logprob: -14.318291664123535
    10. '	input' → logprob: -15.443291664123535

Token 847: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.0001242772996192798
    2. 'input' → logprob: -9.625123977661133
    3. 'lines' → logprob: -10.250123977661133
    4. '_inputs' → logprob: -10.875123977661133
    5. 'Lines' → logprob: -13.250123977661133
    6. '```' → logprob: -14.625123977661133
    7. '_LINES' → logprob: -14.750123977661133
    8. '_input' → logprob: -14.750123977661133
    9. ')' → logprob: -15.000123977661133
    10. '_' → logprob: -15.750123977661133

Token 848: '):
' (ID: 1883)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7388805150985718
    2. ':
' → logprob: -0.7388805150985718
    3. '               ' → logprob: -3.9888806343078613
    4. '):
' → logprob: -4.488880634307861
    5. '           ' → logprob: -5.113880634307861
    6. '):' → logprob: -5.363880634307861
    7. ' or' → logprob: -5.738880634307861
    8. ' and' → logprob: -8.863880157470703
    9. ':return' → logprob: -8.863880157470703
    10. 'and' → logprob: -8.988880157470703

Token 849: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00013893934374209493
    2. 'break' → logprob: -10.250139236450195
    3. '           ' → logprob: -10.375139236450195
    4. '   ' → logprob: -10.875139236450195
    5. '	           ' → logprob: -11.375139236450195
    6. '              ' → logprob: -11.875139236450195
    7. '                   ' → logprob: -11.875139236450195
    8. '                ' → logprob: -12.250139236450195
    9. ' break' → logprob: -12.375139236450195
    10. 'return' → logprob: -12.750139236450195

Token 850: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.20281194150447845
    2. '               ' → logprob: -1.9528119564056396
    3. ' break' → logprob: -3.2028119564056396
    4. 'return' → logprob: -7.9528117179870605
    5. '	break' → logprob: -7.9528117179870605
    6. '           ' → logprob: -8.077812194824219
    7. '   ' → logprob: -11.577812194824219
    8. '                   ' → logprob: -11.952812194824219
    9. ' return' → logprob: -12.202812194824219
    10. '```' → logprob: -12.952812194824219

Token 851: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003751423500943929
    2. '       ' → logprob: -8.250374794006348
    3. '               ' → logprob: -10.125374794006348
    4. '            
' → logprob: -11.375374794006348
    5. '          ' → logprob: -11.500374794006348
    6. 're' → logprob: -11.625374794006348
    7. 'n' → logprob: -11.750374794006348
    8. 'condition' → logprob: -12.000374794006348
    9. '            ' → logprob: -12.250374794006348
    10. 'conditions' → logprob: -12.750374794006348

Token 852: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0017916783690452576
    2. 're' → logprob: -7.251791477203369
    3. 'lines' → logprob: -7.376791477203369
    4. 'conditions' → logprob: -9.126791954040527
    5. 'line' → logprob: -9.501791954040527
    6. '       ' → logprob: -9.626791954040527
    7. 'condition' → logprob: -10.001791954040527
    8. ' lines' → logprob: -10.126791954040527
    9. 'num' → logprob: -10.751791954040527
    10. 'n' → logprob: -10.876791954040527

Token 853: ' condition' (ID: 7060)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.07575509697198868
    2. 'k' → logprob: -2.7007551193237305
    3. 'num' → logprob: -5.8257551193237305
    4. '           ' → logprob: -6.0757551193237305
    5. ' m' → logprob: -8.57575511932373
    6. ' k' → logprob: -9.70075511932373
    7. 'r' → logprob: -9.82575511932373
    8. 'conditions' → logprob: -10.07575511932373
    9. 'line' → logprob: -10.45075511932373
    10. 're' → logprob: -10.57575511932373

Token 854: '_line' (ID: 14418)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.20545408129692078
    2. '_line' → logprob: -1.7054541110992432
    3. '_lines' → logprob: -5.830453872680664
    4. '_values' → logprob: -6.955453872680664
    5. '_count' → logprob: -9.205453872680664
    6. ' =' → logprob: -10.705453872680664
    7. '_s' → logprob: -11.705453872680664
    8. 'line' → logprob: -13.455453872680664
    9. '_vals' → logprob: -13.455453872680664
    10. '_counts' → logprob: -13.580453872680664

Token 855: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06197093799710274
    2. '=' → logprob: -2.8119709491729736
    3. '           ' → logprob: -13.686970710754395
    4. 's' → logprob: -13.686970710754395
    5. '       ' → logprob: -14.561970710754395
    6. '   ' → logprob: -15.686970710754395
    7. '=line' → logprob: -15.686970710754395
    8. ' =
' → logprob: -17.56197166442871
    9. ' ' → logprob: -17.81197166442871
    10. '	' → logprob: -17.81197166442871

Token 856: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.25192928314208984
    2. ' input' → logprob: -1.5019292831420898
    3. '	input' → logprob: -16.626930236816406
    4. '=input' → logprob: -17.501930236816406
    5. '(input' → logprob: -18.501930236816406
    6. '   ' → logprob: -18.751930236816406
    7. 'Input' → logprob: -18.876930236816406
    8. 'list' → logprob: -19.251930236816406
    9. ' ' → logprob: -19.251930236816406
    10. 'inputs' → logprob: -19.376930236816406

Token 857: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.0006204616511240602
    2. ' =' → logprob: -7.750620365142822
    3. 'Lines' → logprob: -9.12562084197998
    4. '=' → logprob: -10.25062084197998
    5. 's' → logprob: -11.50062084197998
    6. '```' → logprob: -11.50062084197998
    7. 'lines' → logprob: -11.62562084197998
    8. '   ' → logprob: -12.62562084197998
    9. '_line' → logprob: -13.00062084197998
    10. '[index' → logprob: -13.37562084197998

Token 858: '[index' (ID: 11815)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4945252537727356
    2. '=' → logprob: -1.8695251941680908
    3. '[index' → logprob: -1.9945251941680908
    4. 'index' → logprob: -2.369525194168091
    5. '=index' → logprob: -5.49452543258667
    6. 's' → logprob: -7.99452543258667
    7. '_index' → logprob: -8.119524955749512
    8. '[' → logprob: -8.494524955749512
    9. '           ' → logprob: -8.744524955749512
    10. '
' → logprob: -8.744524955749512

Token 859: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.00023119196703191847
    2. ']' → logprob: -8.62523078918457
    3. ']
' → logprob: -10.62523078918457
    4. '.strip' → logprob: -10.75023078918457
    5. '.' → logprob: -13.12523078918457
    6. '           ' → logprob: -13.25023078918457
    7. '"].' → logprob: -14.87523078918457
    8. ' ].' → logprob: -15.00023078918457
    9. '       ' → logprob: -15.12523078918457
    10. ').' → logprob: -15.37523078918457

Token 860: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -1.6240566083070007e-06
    2. 'rstrip' → logprob: -13.500001907348633
    3. 'split' → logprob: -16.000001907348633
    4. ' strip' → logprob: -19.375001907348633
    5. '.strip' → logprob: -21.750001907348633
    6. '_strip' → logprob: -22.625001907348633
    7. 'str' → logprob: -23.750001907348633
    8. '-strip' → logprob: -24.375001907348633
    9. '
' → logprob: -24.500001907348633
    10. '(strip' → logprob: -24.625001907348633

Token 861: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.28785714507102966
    2. '<|end|>' → logprob: -1.662857174873352
    3. '<|end|>' → logprob: -4.0378570556640625
    4. '            
' → logprob: -4.2878570556640625
    5. ')' → logprob: -4.4128570556640625
    6. '
' → logprob: -5.4128570556640625
    7. '       ' → logprob: -6.1628570556640625
    8. '	       ' → logprob: -7.1628570556640625
    9. '\n' → logprob: -7.2878570556640625
    10. ',' → logprob: -7.2878570556640625

Token 862: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2056559920310974
    2. '       ' → logprob: -2.205656051635742
    3. '<|end|>' → logprob: -2.705656051635742
    4. 'index' → logprob: -5.705656051635742
    5. '<|end|>' → logprob: -6.455656051635742
    6. '#index' → logprob: -6.580656051635742
    7. '=index' → logprob: -7.455656051635742
    8. '[index' → logprob: -7.705656051635742
    9. '```' → logprob: -8.330656051635742
    10. ' index' → logprob: -8.330656051635742

Token 863: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' (adapté à ' index') → logprob: -0.003575953422114253
    2. '       ' → logprob: -6.628575801849365
    3. '           ' → logprob: -6.878575801849365
    4. ' index' → logprob: -7.253575801849365
    5. 'conditions' → logprob: -8.253576278686523
    6. 'condition' → logprob: -8.503576278686523
    7. '#index' → logprob: -11.253576278686523
    8. '[index' → logprob: -11.378576278686523
    9. '	index' → logprob: -11.503576278686523
    10. ' conditions' → logprob: -12.253576278686523

Token 864: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.3132770359516144
    2. ' +=' → logprob: -1.313277006149292
    3. ']+=' → logprob: -11.813277244567871
    4. '           ' → logprob: -12.813277244567871
    5. '+' → logprob: -13.313277244567871
    6. '   ' → logprob: -13.688277244567871
    7. '=' → logprob: -13.938277244567871
    8. '++' → logprob: -14.688277244567871
    9. '```' → logprob: -15.688277244567871
    10. '            ' → logprob: -15.688277244567871

Token 865: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0325924449716695e-05
    2. ' ' → logprob: -11.50001049041748
    3. '0' → logprob: -16.000009536743164
    4. 'len' → logprob: -17.000009536743164
    5. '
' → logprob: -18.500009536743164
    6. '   ' → logprob: -19.625009536743164
    7. 'n' → logprob: -19.875009536743164
    8. '```' → logprob: -21.000009536743164
    9. ' len' → logprob: -21.125009536743164
    10. ')' → logprob: -21.375009536743164

Token 866: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. 'len' → logprob: -17.500001907348633
    4. '0' → logprob: -18.000001907348633
    5. '
' → logprob: -18.000001907348633
    6. '   ' → logprob: -18.250001907348633
    7. '```' → logprob: -18.375001907348633
    8. '１' → logprob: -19.625001907348633
    9. '-' → logprob: -19.750001907348633
    10. '`' → logprob: -20.250001907348633

Token 867: '
' (ID: 198)
  Prédit: 'conditions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'conditions' → logprob: -0.4247485399246216
    2. '           ' → logprob: -1.4247485399246216
    3. ' conditions' → logprob: -2.299748420715332
    4. 'condition' → logprob: -6.174748420715332
    5. 'targets' → logprob: -6.299748420715332
    6. 'target' → logprob: -8.049748420715332
    7. 'conds' → logprob: -8.424748420715332
    8. '       ' → logprob: -8.549748420715332
    9. 'tokens' → logprob: -8.549748420715332
    10. 'values' → logprob: -9.424748420715332

Token 868: '           ' (ID: 352)
  Prédit: 'conditions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'conditions' → logprob: -0.19491636753082275
    2. 'targets' → logprob: -2.319916248321533
    3. '           ' → logprob: -3.069916248321533
    4. 'condition' → logprob: -4.069916248321533
    5. 'target' → logprob: -4.944916248321533
    6. 're' → logprob: -5.694916248321533
    7. 'values' → logprob: -5.819916248321533
    8. 'if' → logprob: -7.444916248321533
    9. 'conds' → logprob: -7.819916248321533
    10. ' conditions' → logprob: -7.819916248321533

Token 869: ' y' (ID: 342)
  Prédit: 'targets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'targets' → logprob: -0.11523725837469101
    2. 'target' → logprob: -3.115237236022949
    3. 'conditions' → logprob: -3.115237236022949
    4. 'condition' → logprob: -4.115237236022949
    5. 'values' → logprob: -5.740237236022949
    6. 'if' → logprob: -8.36523723602295
    7. 'conds' → logprob: -9.36523723602295
    8. 're' → logprob: -9.49023723602295
    9. 'tokens' → logprob: -9.49023723602295
    10. 'vals' → logprob: -10.74023723602295

Token 870: '_list' (ID: 4162)
  Prédit: '_values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -0.08443418890237808
    2. 's' → logprob: -3.0844342708587646
    3. 'values' → logprob: -4.2094340324401855
    4. '=' → logprob: -4.5844340324401855
    5. ' =' → logprob: -4.9594340324401855
    6. '_vals' → logprob: -6.2094340324401855
    7. '_targets' → logprob: -7.8344340324401855
    8. 'vals' → logprob: -7.9594340324401855
    9. '_tokens' → logprob: -8.584434509277344
    10. '_list' → logprob: -9.209434509277344

Token 871: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25193020701408386
    2. ' =' → logprob: -1.5019302368164062
    3. 's' → logprob: -14.626930236816406
    4. '=[]' → logprob: -15.876930236816406
    5. 'tokens' → logprob: -16.376930236816406
    6. ',' → logprob: -16.376930236816406
    7. '=[' → logprob: -17.126930236816406
    8. ' =[' → logprob: -17.376930236816406
    9. '_tokens' → logprob: -17.501930236816406
    10. '＝' → logprob: -17.501930236816406

Token 872: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.01814994215965271
    2. ' list' → logprob: -4.0181498527526855
    3. 'List' → logprob: -18.393150329589844
    4. '[list' → logprob: -18.393150329589844
    5. '=list' → logprob: -18.768150329589844
    6. '[' → logprob: -19.643150329589844
    7. '	list' → logprob: -19.893150329589844
    8. '(list' → logprob: -20.518150329589844
    9. 'lis' → logprob: -20.768150329589844
    10. 'li' → logprob: -21.268150329589844

Token 873: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.00012475410767365247
    2. '(' → logprob: -9.62512493133545
    3. 'map' → logprob: -9.87512493133545
    4. '(
' → logprob: -12.00012493133545
    5. 'y' → logprob: -15.25012493133545
    6. '(int' → logprob: -15.87512493133545
    7. '[int' → logprob: -16.000123977661133
    8. '[' → logprob: -16.125123977661133
    9. '.map' → logprob: -16.250123977661133
    10. ' map' → logprob: -16.500123977661133

Token 874: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.004128149710595608
    2. '(' → logprob: -5.6291279792785645
    3. 'int' → logprob: -7.7541279792785645
    4. '(lambda' → logprob: -9.629128456115723
    5. '[int' → logprob: -10.879128456115723
    6. '(
' → logprob: -11.629128456115723
    7. '<int' → logprob: -13.004128456115723
    8. ']int' → logprob: -13.504128456115723
    9. '(in' → logprob: -14.379128456115723
    10. '=int' → logprob: -14.379128456115723

Token 875: ',' (ID: 11)
  Prédit: '(condition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(condition' → logprob: -0.1803710013628006
    2. ',' → logprob: -1.8053710460662842
    3. 'condition' → logprob: -7.805370807647705
    4. '(' → logprob: -8.555371284484863
    5. '(),' → logprob: -11.930371284484863
    6. ' ,' → logprob: -12.180371284484863
    7. ')' → logprob: -12.430371284484863
    8. ' (' → logprob: -12.680371284484863
    9. 'y' → logprob: -14.055371284484863
    10. ' condition' → logprob: -14.055371284484863

Token 876: ' condition' (ID: 7060)
  Prédit: 'condition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'condition' → logprob: -4.2987729102605954e-05
    2. ' condition' → logprob: -10.750042915344238
    3. '(condition' → logprob: -10.750042915344238
    4. ')' → logprob: -19.375043869018555
    5. '   ' → logprob: -19.500043869018555
    6. '_condition' → logprob: -20.250043869018555
    7. '.condition' → logprob: -21.000043869018555
    8. 'comment' → logprob: -21.625043869018555
    9. 'code' → logprob: -21.875043869018555
    10. ',' → logprob: -22.000043869018555

Token 877: '_line' (ID: 14418)
  Prédit: '(condition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(condition' → logprob: -0.15713715553283691
    2. 'condition' → logprob: -2.657137155532837
    3. '_line' → logprob: -3.032137155532837
    4. 's' → logprob: -4.032136917114258
    5. '[' → logprob: -6.407136917114258
    6. ')' → logprob: -6.657136917114258
    7. '(' → logprob: -6.782136917114258
    8. '.condition' → logprob: -6.907136917114258
    9. ' condition' → logprob: -7.032136917114258
    10. '().' → logprob: -7.782136917114258

Token 878: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.13314157724380493
    2. '().' → logprob: -2.13314151763916
    3. '.strip' → logprob: -5.38314151763916
    4. '.' → logprob: -6.88314151763916
    5. ' .' → logprob: -9.13314151763916
    6. '))' → logprob: -9.25814151763916
    7. '.readline' → logprob: -9.25814151763916
    8. ')' → logprob: -9.75814151763916
    9. '()))' → logprob: -10.00814151763916
    10. '()' → logprob: -10.25814151763916

Token 879: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.1876322478055954
    2. '))' → logprob: -1.8126322031021118
    3. '()' → logprob: -5.562632083892822
    4. '())' → logprob: -5.937632083892822
    5. '(' → logprob: -7.312632083892822
    6. '()))
' → logprob: -7.562632083892822
    7. ')' → logprob: -8.68763256072998
    8. '))
' → logprob: -11.43763256072998
    9. '()));' → logprob: -12.56263256072998
    10. '()))
' → logprob: -13.43763256072998

Token 880: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05206715315580368
    2. '<|end|>' → logprob: -3.5520670413970947
    3. '       ' → logprob: -4.302067279815674
    4. ' if' → logprob: -6.052067279815674
    5. '            
' → logprob: -6.552067279815674
    6. '
' → logprob: -6.802067279815674
    7. '          ' → logprob: -7.427067279815674
    8. '[' → logprob: -7.802067279815674
    9. '   ' → logprob: -7.927067279815674
    10. '               ' → logprob: -7.927067279815674

Token 881: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.028165223076939583
    2. '           ' → logprob: -3.653165340423584
    3. 'conditions' → logprob: -7.278165340423584
    4. ' if' → logprob: -7.403165340423584
    5. 'i' → logprob: -7.903165340423584
    6. 'assert' → logprob: -9.278164863586426
    7. '       ' → logprob: -9.903164863586426
    8. 'self' → logprob: -11.028164863586426
    9. 'condition' → logprob: -12.028164863586426
    10. ' conditions' → logprob: -12.153164863586426

Token 882: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -3.173704271830502e-06
    2. ' len' → logprob: -12.75000286102295
    3. '           ' → logprob: -16.750003814697266
    4. '(len' → logprob: -16.875003814697266
    5. 'y' → logprob: -17.750003814697266
    6. '       ' → logprob: -18.625003814697266
    7. '	len' → logprob: -18.625003814697266
    8. '   ' → logprob: -18.875003814697266
    9. '[len' → logprob: -19.250003814697266
    10. '
' → logprob: -19.375003814697266

Token 883: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -4.723352049040841e-06
    2. 'y' → logprob: -12.750004768371582
    3. '(' → logprob: -13.375004768371582
    4. '(
' → logprob: -15.375004768371582
    5. '	y' → logprob: -19.750003814697266
    6. ' (' → logprob: -20.750003814697266
    7. '=' → logprob: -21.125003814697266
    8. '(

' → logprob: -21.250003814697266
    9. ' y' → logprob: -21.375003814697266
    10. '>' → logprob: -21.625003814697266

Token 884: '_list' (ID: 4162)
  Prédit: '(y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.0014301169430837035
    2. '(' → logprob: -7.126430034637451
    3. ')' → logprob: -8.25143051147461
    4. '_list' → logprob: -8.75143051147461
    5. '!=' → logprob: -9.50143051147461
    6. 'y' → logprob: -9.75143051147461
    7. ')!=' → logprob: -11.12643051147461
    8. '	y' → logprob: -11.62643051147461
    9. ' !=' → logprob: -11.62643051147461
    10. '()' → logprob: -11.75143051147461

Token 885: ')' (ID: 8)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.3234679698944092
    2. ' !=' → logprob: -1.6984679698944092
    3. '<' → logprob: -2.698467969894409
    4. ')' → logprob: -4.948468208312988
    5. '()!=' → logprob: -5.073468208312988
    6. '()' → logprob: -5.323468208312988
    7. ' <' → logprob: -5.823468208312988
    8. '<|end|>' → logprob: -6.198468208312988
    9. ')!=' → logprob: -6.698468208312988
    10. '()<' → logprob: -6.948468208312988

Token 886: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.3255470395088196
    2. '<' → logprob: -1.4505469799041748
    3. ' !=' → logprob: -3.200546979904175
    4. ' <' → logprob: -6.950547218322754
    5. '<n' → logprob: -7.075547218322754
    6. '()!=' → logprob: -7.825547218322754
    7. ')!=' → logprob: -8.575547218322754
    8. '<|end|>' → logprob: -9.700547218322754
    9. '<len' → logprob: -10.200547218322754
    10. ']!=' → logprob: -10.825547218322754

Token 887: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.4391956685576588e-05
    2. ' n' → logprob: -10.625024795532227
    3. ')n' → logprob: -18.500024795532227
    4. '	n' → logprob: -18.625024795532227
    5. '(n' → logprob: -20.000024795532227
    6. '_n' → logprob: -20.500024795532227
    7. '$n' → logprob: -20.625024795532227
    8. '?n' → logprob: -22.000024795532227
    9. '=n' → logprob: -22.375024795532227
    10. '[n' → logprob: -22.500024795532227

Token 888: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006895224563777447
    2. ':
' → logprob: -5.006895065307617
    3. ':return' → logprob: -9.256895065307617
    4. ' or' → logprob: -10.131895065307617
    5. '           ' → logprob: -11.256895065307617
    6. '):' → logprob: -11.381895065307617
    7. '               ' → logprob: -11.506895065307617
    8. ')' → logprob: -13.256895065307617
    9. 'continue' → logprob: -13.756895065307617
    10. 'or' → logprob: -14.006895065307617

Token 889: '               ' (ID: 506)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002333547454327345
    2. ':
' → logprob: -6.502333641052246
    3. '               ' → logprob: -7.877333641052246
    4. '           ' → logprob: -8.502333641052246
    5. ':return' → logprob: -9.002333641052246
    6. '):' → logprob: -9.752333641052246
    7. ' :' → logprob: -11.002333641052246
    8. '       ' → logprob: -11.752333641052246
    9. '[' → logprob: -11.877333641052246
    10. '.' → logprob: -12.002333641052246

Token 890: ' #' (ID: 1069)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.981791079044342
    2. '               ' → logprob: -1.2317910194396973
    3. 'return' → logprob: -1.2317910194396973
    4. 'break' → logprob: -3.2317910194396973
    5. ' continue' → logprob: -6.356791019439697
    6. '           ' → logprob: -8.356791496276855
    7. ' return' → logprob: -8.856791496276855
    8. '```' → logprob: -9.106791496276855
    9. '                   ' → logprob: -9.856791496276855
    10. ' break' → logprob: -10.481791496276855

Token 891: ' malformed' (ID: 152298)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.006994081195443869
    2. 'continue' → logprob: -5.006994247436523
    3. 'return' → logprob: -8.256994247436523
    4. 'raise' → logprob: -12.006994247436523
    5. ' break' → logprob: -12.381994247436523
    6. '           ' → logprob: -12.381994247436523
    7. '#' → logprob: -12.506994247436523
    8. '               ' → logprob: -14.756994247436523
    9. '       ' → logprob: -14.881994247436523
    10. ' continue' → logprob: -15.506994247436523

Token 892: ' input' (ID: 3422)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.46938109397888184
    2. '           ' → logprob: -2.094381093978882
    3. ' continue' → logprob: -2.344381093978882
    4. 'break' → logprob: -2.719381093978882
    5. '               ' → logprob: -2.969381093978882
    6. '
' → logprob: -3.719381093978882
    7. 'return' → logprob: -4.719381332397461
    8. ' break' → logprob: -5.969381332397461
    9. '            
' → logprob: -7.719381332397461
    10. '       ' → logprob: -7.844381332397461

Token 893: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0037844041362404823
    2. '           ' → logprob: -6.1287841796875
    3. ':' → logprob: -6.8787841796875
    4. ':
' → logprob: -8.5037841796875
    5. '                   ' → logprob: -9.0037841796875
    6. ' continue' → logprob: -9.0037841796875
    7. 'continue' → logprob: -9.5037841796875
    8. ',' → logprob: -11.3787841796875
    9. '              ' → logprob: -11.7537841796875
    10. ' or' → logprob: -12.5037841796875

Token 894: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.000297685619443655
    2. '                   ' → logprob: -8.625297546386719
    3. '           ' → logprob: -9.500297546386719
    4. 'continue' → logprob: -11.250297546386719
    5. ',' → logprob: -11.625297546386719
    6. ' continue' → logprob: -11.750297546386719
    7. '
' → logprob: -12.875297546386719
    8. '   ' → logprob: -13.125297546386719
    9. ':
' → logprob: -13.250297546386719
    10. 'return' → logprob: -13.625297546386719

Token 895: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.0033661695197224617
    2. 'return' → logprob: -6.753365993499756
    3. 'continue' → logprob: -6.753365993499756
    4. ' break' → logprob: -7.003365993499756
    5. '           ' → logprob: -9.253366470336914
    6. '               ' → logprob: -11.128366470336914
    7. ' continue' → logprob: -12.503366470336914
    8. '	break' → logprob: -13.753366470336914
    9. '       ' → logprob: -13.878366470336914
    10. ' return' → logprob: -14.753366470336914

Token 896: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0013046413660049438
    2. '            
' → logprob: -6.876304626464844
    3. '
' → logprob: -9.001304626464844
    4. '       ' → logprob: -10.126304626464844
    5. ',' → logprob: -10.251304626464844
    6. '        
' → logprob: -10.626304626464844
    7. '               ' → logprob: -11.376304626464844
    8. '<|end|>' → logprob: -11.376304626464844
    9. '    
' → logprob: -12.126304626464844
    10. '           
' → logprob: -12.376304626464844

Token 897: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012774971313774586
    2. '       ' → logprob: -5.26277494430542
    3. '
' → logprob: -5.63777494430542
    4. '            
' → logprob: -5.76277494430542
    5. '        
' → logprob: -8.012775421142578
    6. 'lc' → logprob: -8.137775421142578
    7. '               ' → logprob: -9.637775421142578
    8. '    
' → logprob: -10.637775421142578
    9. ' lc' → logprob: -11.012775421142578
    10. '           
' → logprob: -11.637775421142578

Token 898: ' l' (ID: 305)
  Prédit: 'lc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lc' → logprob: -0.0019633667543530464
    2. '           ' → logprob: -6.251963138580322
    3. 'lg' → logprob: -11.25196361541748
    4. ' lc' → logprob: -11.37696361541748
    5. 'l' (adapté à ' l') → logprob: -12.37696361541748
    6. '       ' → logprob: -12.87696361541748
    7. ' l' → logprob: -13.50196361541748
    8. 'self' → logprob: -14.25196361541748
    9. 'seed' → logprob: -15.12696361541748
    10. '
' → logprob: -15.12696361541748

Token 899: 'cg' (ID: 54237)
  Prédit: 'cg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cg' → logprob: -0.00017886889690998942
    2. 'c' → logprob: -8.750179290771484
    3. '   ' → logprob: -10.875179290771484
    4. '       ' → logprob: -15.125179290771484
    5. ' cg' → logprob: -15.375179290771484
    6. 'cgi' → logprob: -15.500179290771484
    7. 'gc' → logprob: -15.750179290771484
    8. 'CG' → logprob: -16.375179290771484
    9. '```' → logprob: -16.375179290771484
    10. 'lc' → logprob: -16.875179290771484

Token 900: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029751067981123924
    2. '=' → logprob: -3.5297510623931885
    3. '.' → logprob: -15.02975082397461
    4. ' =
' → logprob: -16.40475082397461
    5. ' ' → logprob: -17.27975082397461
    6. '=
' → logprob: -17.27975082397461
    7. '.=' → logprob: -17.27975082397461
    8. '	' → logprob: -18.77975082397461
    9. '.reset' → logprob: -19.15475082397461
    10. '_' → logprob: -19.15475082397461

Token 901: ' Linear' (ID: 29092)
  Prédit: 'Linear'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Linear' → logprob: -1.676292231422849e-05
    2. ' Linear' → logprob: -11.000017166137695
    3. 'linear' → logprob: -20.000017166137695
    4. 'Lin' → logprob: -20.000017166137695
    5. 'Line' → logprob: -20.125017166137695
    6. '.Linear' → logprob: -21.250017166137695
    7. '_linear' → logprob: -22.375017166137695
    8. '   ' → logprob: -23.375017166137695
    9. ' linear' → logprob: -23.625017166137695
    10. '       ' → logprob: -25.375017166137695

Token 902: 'Cong' (ID: 40085)
  Prédit: 'Cong'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Cong' → logprob: -1.3856492842023727e-06
    2. ' Cong' → logprob: -14.500000953674316
    3. 'Con' → logprob: -14.625000953674316
    4. 'C' → logprob: -16.500001907348633
    5. 'Congress' → logprob: -16.500001907348633
    6. 'Cons' → logprob: -16.875001907348633
    7. 'Conc' → logprob: -17.375001907348633
    8. '_con' → logprob: -18.750001907348633
    9. '
' → logprob: -18.750001907348633
    10. 'con' → logprob: -19.125001907348633

Token 903: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -0.006342299282550812
    2. 'Cong' → logprob: -5.75634241104126
    3. 'u' → logprob: -6.00634241104126
    4. 'uent' → logprob: -7.50634241104126
    5. 'ur' → logprob: -10.381341934204102
    6. 'urrent' → logprob: -10.881341934204102
    7. 'uer' → logprob: -11.381341934204102
    8. '```' → logprob: -11.506341934204102
    9. 'uir' → logprob: -11.631341934204102
    10. 'r' → logprob: -11.881341934204102

Token 904: 'ential' (ID: 2972)
  Prédit: 'ential'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ential' → logprob: -0.00389437610283494
    2. 'u' → logprob: -6.128894329071045
    3. 'itial' → logprob: -8.003894805908203
    4. 'ru' → logprob: -8.378894805908203
    5. 'uc' → logprob: -8.628894805908203
    6. 'ur' → logprob: -8.628894805908203
    7. 'uent' → logprob: -8.753894805908203
    8. 'r' → logprob: -9.128894805908203
    9. 'iential' → logprob: -9.753894805908203
    10. 'ual' → logprob: -9.878894805908203

Token 905: 'Generator' (ID: 14802)
  Prédit: 'Generator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Generator' → logprob: -4.008129963040119e-06
    2. ' Generator' → logprob: -13.125003814697266
    3. 'generator' → logprob: -13.750003814697266
    4. 'enerator' → logprob: -14.875003814697266
    5. '_generator' → logprob: -15.375003814697266
    6. 'Gen' → logprob: -16.000003814697266
    7. 'Generators' → logprob: -17.000003814697266
    8. 'Gener' → logprob: -17.125003814697266
    9. ' generator' → logprob: -17.625003814697266
    10. 'Generate' → logprob: -17.625003814697266

Token 906: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -2.2200749754119897e-06
    2. '(' → logprob: -13.750001907348633
    3. '(
' → logprob: -14.000001907348633
    4. 'a' → logprob: -16.375001907348633
    5. ' (' → logprob: -16.375001907348633
    6. '=a' → logprob: -18.625001907348633
    7. '(A' → logprob: -18.750001907348633
    8. '((' → logprob: -18.875001907348633
    9. '   ' → logprob: -19.125001907348633
    10. '       ' → logprob: -20.125001907348633

Token 907: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002529760589823127
    2. ',b' → logprob: -6.002529621124268
    3. 'b' → logprob: -10.377530097961426
    4. ' ,' → logprob: -11.002530097961426
    5. ',
' → logprob: -12.627530097961426
    6. ' b' → logprob: -12.877530097961426
    7. 'a' → logprob: -15.502530097961426
    8. '=' → logprob: -16.00252914428711
    9. ')' → logprob: -16.75252914428711
    10. '   ' → logprob: -16.87752914428711

Token 908: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0011703446507453918
    2. ' b' → logprob: -6.7511701583862305
    3. 'c' → logprob: -16.876171112060547
    4. '   ' → logprob: -17.751171112060547
    5. 'x' → logprob: -18.376171112060547
    6. ',b' → logprob: -18.376171112060547
    7. '       ' → logprob: -19.251171112060547
    8. '	b' → logprob: -19.251171112060547
    9. '    ' → logprob: -19.251171112060547
    10. 'bc' → logprob: -19.501171112060547

Token 909: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0023127419408410788
    2. ',c' → logprob: -6.127312660217285
    3. 'c' → logprob: -9.502312660217285
    4. ' ,' → logprob: -9.877312660217285
    5. ',
' → logprob: -13.877312660217285
    6. ' c' → logprob: -14.627312660217285
    7. '```' → logprob: -16.0023136138916
    8. '_,' → logprob: -17.5023136138916
    9. '`,' → logprob: -17.7523136138916
    10. '   ' → logprob: -17.7523136138916

Token 910: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0004307884373702109
    2. ' c' → logprob: -7.750430583953857
    3. '   ' → logprob: -18.000431060791016
    4. '	c' → logprob: -18.125431060791016
    5. '           ' → logprob: -19.625431060791016
    6. '       ' → logprob: -20.125431060791016
    7. '    ' → logprob: -20.500431060791016
    8. ')c' → logprob: -20.500431060791016
    9. ',c' → logprob: -20.500431060791016
    10. '
' → logprob: -21.125431060791016

Token 911: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006355931982398033
    2. ',x' → logprob: -7.625635623931885
    3. 'x' → logprob: -9.000635147094727
    4. ',
' → logprob: -11.375635147094727
    5. ' ,' → logprob: -11.500635147094727
    6. ' x' → logprob: -13.500635147094727
    7. '```' → logprob: -14.375635147094727
    8. ')' → logprob: -16.125635147094727
    9. '   ' → logprob: -16.500635147094727
    10. '(x' → logprob: -16.875635147094727

Token 912: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -4.320199877838604e-07
    2. ' x' → logprob: -14.75
    3. 'seed' → logprob: -17.125
    4. ')x' → logprob: -21.0
    5. '(x' → logprob: -21.25
    6. '   ' → logprob: -21.375
    7. '	x' → logprob: -22.25
    8. '       ' → logprob: -22.625
    9. '```' → logprob: -22.875
    10. '%x' → logprob: -23.625

Token 913: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018151817843317986
    2. ')
' → logprob: -4.018151760101318
    3. '       ' → logprob: -13.643152236938477
    4. ')
' → logprob: -15.393152236938477
    5. '           ' → logprob: -15.518152236938477
    6. ')

' → logprob: -15.893152236938477
    7. ' )' → logprob: -16.143152236938477
    8. '),' → logprob: -17.643152236938477
    9. '   ' → logprob: -17.893152236938477
    10. ' )
' → logprob: -18.018152236938477

Token 914: '           ' (ID: 352)
  Prédit: 'conditions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'conditions' → logprob: -0.4671880304813385
    2. '           ' → logprob: -1.0921880006790161
    3. ' conditions' → logprob: -3.3421881198883057
    4. '       ' → logprob: -6.717187881469727
    5. 'condition' → logprob: -7.217187881469727
    6. 'conds' → logprob: -8.092187881469727
    7. '               ' → logprob: -10.342187881469727
    8. '          ' → logprob: -10.842187881469727
    9. '   ' → logprob: -10.842187881469727
    10. '.conditions' → logprob: -11.092187881469727

Token 915: ' conditions' (ID: 6409)
  Prédit: 'conditions'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'conditions' (adapté à ' conditions') → logprob: -0.00013512482109945267
    2. ' conditions' → logprob: -9.25013542175293
    3. '           ' → logprob: -10.87513542175293
    4. 'conds' → logprob: -11.25013542175293
    5. 'condition' → logprob: -12.00013542175293
    6. 're' → logprob: -14.50013542175293
    7. '       ' → logprob: -16.37513542175293
    8. '.conditions' → logprob: -16.37513542175293
    9. 'cond' → logprob: -16.87513542175293
    10. '
' → logprob: -17.12513542175293

Token 916: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.038044821470975876
    2. ' =' → logprob: -3.2880449295043945
    3. '=[]' → logprob: -13.288044929504395
    4. '=[' → logprob: -13.538044929504395
    5. '=
' → logprob: -16.413043975830078
    6. '[' → logprob: -16.788043975830078
    7. '=[]
' → logprob: -16.913043975830078
    8. ' =[' → logprob: -17.163043975830078
    9. '=

' → logprob: -17.538043975830078
    10. '=[
' → logprob: -17.538043975830078

Token 917: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0004001641063950956
    2. ' [' → logprob: -8.62540054321289
    3. '[List' → logprob: -9.37540054321289
    4. '[list' → logprob: -10.00040054321289
    5. '[class' → logprob: -10.62540054321289
    6. '[]' → logprob: -11.00040054321289
    7. '[]
' → logprob: -11.25040054321289
    8. '[self' → logprob: -11.50040054321289
    9. '[y' → logprob: -11.87540054321289
    10. '[array' → logprob: -13.12540054321289

Token 918: 'Re' (ID: 720)
  Prédit: 'Re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Re' → logprob: -3.128163257315464e-07
    2. '   ' → logprob: -16.5
    3. '(Re' → logprob: -17.125
    4. '
' → logprob: -17.875
    5. '```' → logprob: -18.625
    6. ''Re' → logprob: -18.75
    7. '[' → logprob: -19.625
    8. '       ' → logprob: -19.625
    9. 'Roll' → logprob: -19.875
    10. '_Re' → logprob: -19.875

Token 919: 'el' (ID: 296)
  Prédit: 'el'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'el' → logprob: -9.088346359931165e-07
    2. 'e' → logprob: -14.000000953674316
    3. 'eel' → logprob: -17.625
    4. 'El' → logprob: -20.0
    5. '(el' → logprob: -20.5
    6. 'al' → logprob: -20.875
    7. '
' → logprob: -21.125
    8. 'ел' → logprob: -21.75
    9. '[' → logprob: -21.875
    10. 'els' → logprob: -22.125

Token 920: 'Condition' (ID: 14232)
  Prédit: 'Condition'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Condition' → logprob: -4.320199877838604e-07
    2. 'Con' → logprob: -15.375
    3. 'condition' → logprob: -16.125
    4. '_condition' → logprob: -18.125
    5. 'Re' → logprob: -19.625
    6. ' Condition' → logprob: -19.75
    7. ' condition' → logprob: -19.875
    8. 'Cond' → logprob: -19.875
    9. '.Condition' → logprob: -20.125
    10. 'Conditions' → logprob: -20.25

Token 921: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.021474938839673996
    2. '(value' → logprob: -4.646474838256836
    3. '(target' → logprob: -4.896474838256836
    4. '(val' → logprob: -6.146474838256836
    5. '(' → logprob: -6.771474838256836
    6. '(v' → logprob: -7.396474838256836
    7. 'y' → logprob: -8.896474838256836
    8. '(t' → logprob: -9.146474838256836
    9. 'target' → logprob: -11.646474838256836
    10. '(i' → logprob: -12.146474838256836

Token 922: ')' (ID: 8)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.39626404643058777
    2. ')' → logprob: -1.1462640762329102
    3. '_list' → logprob: -4.77126407623291
    4. 'List' → logprob: -8.39626407623291
    5. '(i' → logprob: -8.52126407623291
    6. ')
' → logprob: -9.27126407623291
    7. 'list' → logprob: -9.77126407623291
    8. '=' → logprob: -10.39626407623291
    9. 'y' → logprob: -10.39626407623291
    10. 'for' → logprob: -10.39626407623291

Token 923: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6830205321311951
    2. ' for' → logprob: -0.9330205321311951
    3. '(y' → logprob: -2.30802059173584
    4. ')' → logprob: -6.43302059173584
    5. 'y' → logprob: -8.18302059173584
    6. ' y' → logprob: -9.68302059173584
    7. '           ' → logprob: -10.55802059173584
    8. '               ' → logprob: -10.55802059173584
    9. '(' → logprob: -10.80802059173584
    10. ']' → logprob: -11.05802059173584

Token 924: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0002613358374219388
    2. ' y' → logprob: -8.250261306762695
    3. '	y' → logprob: -16.500261306762695
    4. 'yll' → logprob: -17.750261306762695
    5. 'y's' → logprob: -18.125261306762695
    6. '
' → logprob: -19.375261306762695
    7. '_y' → logprob: -19.500261306762695
    8. '<|end|>' → logprob: -19.500261306762695
    9. 'ykl' → logprob: -19.750261306762695
    10. 'yv' → logprob: -19.750261306762695

Token 925: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3489929437637329
    2. ' in' → logprob: -1.223992943763733
    3. 'y' → logprob: -7.723992824554443
    4. ' y' → logprob: -9.223993301391602
    5. ' ' → logprob: -13.098993301391602
    6. 'i' → logprob: -13.973993301391602
    7. ' ' → logprob: -14.098993301391602
    8. '_' → logprob: -14.348993301391602
    9. '
' → logprob: -14.473993301391602
    10. '<|end|>' → logprob: -14.598993301391602

Token 926: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0015023599844425917
    2. ' y' → logprob: -6.501502513885498
    3. '	y' → logprob: -16.751502990722656
    4. '
' → logprob: -18.251502990722656
    5. 'yll' → logprob: -18.251502990722656
    6. 'yl' → logprob: -18.501502990722656
    7. 'ys' → logprob: -19.501502990722656
    8. 'yt' → logprob: -19.751502990722656
    9. 'y's' → logprob: -19.751502990722656
    10. 'yel' → logprob: -20.001502990722656

Token 927: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0005309910629875958
    2. 'list' → logprob: -8.250531196594238
    3. 'y' → logprob: -8.750531196594238
    4. 'List' → logprob: -9.375531196594238
    5. 'in' → logprob: -11.125531196594238
    6. 'ist' → logprob: -12.125531196594238
    7. 'lst' → logprob: -13.125531196594238
    8. '_LIST' → logprob: -13.625531196594238
    9. '_lst' → logprob: -14.250531196594238
    10. '_List' → logprob: -14.625531196594238

Token 928: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.022165320813655853
    2. ']
' → logprob: -4.022165298461914
    3. '           ' → logprob: -5.522165298461914
    4. ' ]' → logprob: -12.772165298461914
    5. ']
' → logprob: -12.897165298461914
    6. ']

' → logprob: -13.272165298461914
    7. ')' → logprob: -13.522165298461914
    8. '       ' → logprob: -14.272165298461914
    9. '
' → logprob: -15.522165298461914
    10. '               ' → logprob: -15.772165298461914

Token 929: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02145346626639366
    2. '       ' → logprob: -3.896453380584717
    3. '
' → logprob: -7.646453380584717
    4. 'result' → logprob: -8.396453857421875
    5. 'solver' → logprob: -9.146453857421875
    6. 'frame' → logprob: -9.896453857421875
    7. 'an' → logprob: -11.646453857421875
    8. '               ' → logprob: -12.021453857421875
    9. ' solver' → logprob: -12.396453857421875
    10. '        
' → logprob: -12.396453857421875

Token 930: ' analyzer' (ID: 107715)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.31279227137565613
    2. 'an' → logprob: -1.4377923011779785
    3. 'frame' → logprob: -3.9377923011779785
    4. '       ' → logprob: -5.0627923011779785
    5. 'fa' → logprob: -6.0627923011779785
    6. ' analyzer' → logprob: -6.4377923011779785
    7. 'solver' → logprob: -6.9377923011779785
    8. 'result' → logprob: -9.68779182434082
    9. '
' → logprob: -9.68779182434082
    10. '	an' → logprob: -9.81279182434082

Token 931: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011047935113310814
    2. '=' → logprob: -4.511047840118408
    3. '＝' → logprob: -17.26104736328125
    4. '   ' → logprob: -17.38604736328125
    5. ' =
' → logprob: -17.63604736328125
    6. '.' → logprob: -17.63604736328125
    7. '=find' → logprob: -17.63604736328125
    8. '.=' → logprob: -18.01104736328125
    9. '    ' → logprob: -18.26104736328125
    10. '	' → logprob: -18.51104736328125

Token 932: ' Frame' (ID: 29120)
  Prédit: 'Frame'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Frame' → logprob: -0.038048721849918365
    2. ' Frame' → logprob: -3.28804874420166
    3. '           ' → logprob: -11.91304874420166
    4. '(Frame' → logprob: -15.28804874420166
    5. '   ' → logprob: -16.288047790527344
    6. '_Frame' → logprob: -16.413047790527344
    7. 'Framework' → logprob: -16.913047790527344
    8. '.Frame' → logprob: -17.038047790527344
    9. '_frame' → logprob: -17.663047790527344
    10. '       ' → logprob: -18.038047790527344

Token 933: 'Analyzer' (ID: 61604)
  Prédit: 'Analyzer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Analyzer' → logprob: -1.2664456789934775e-06
    2. 'Analy' → logprob: -13.875000953674316
    3. 'an' → logprob: -15.375000953674316
    4. 'Analyze' → logprob: -17.375001907348633
    5. ' Analyzer' → logprob: -19.375001907348633
    6. '
' → logprob: -19.500001907348633
    7. 'A' → logprob: -20.000001907348633
    8. 'An' → logprob: -20.000001907348633
    9. 'alyzer' → logprob: -20.125001907348633
    10. 'Finder' → logprob: -20.250001907348633

Token 934: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.3139535188674927
    2. '(self' → logprob: -1.3139535188674927
    3. '(' → logprob: -7.438953399658203
    4. '           ' → logprob: -9.688953399658203
    5. '(
' → logprob: -11.313953399658203
    6. 'self' → logprob: -11.938953399658203
    7. ' =' → logprob: -11.938953399658203
    8. '=self' → logprob: -12.188953399658203
    9. '(len' → logprob: -12.438953399658203
    10. '(an' → logprob: -13.438953399658203

Token 935: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.843177233240567e-05
    2. '           ' → logprob: -11.250018119812012
    3. ',
' → logprob: -12.750018119812012
    4. ' ,' → logprob: -14.000018119812012
    5. ',l' → logprob: -14.750018119812012
    6. '       ' → logprob: -14.875018119812012
    7. ',self' → logprob: -15.625018119812012
    8. 'LC' → logprob: -15.750018119812012
    9. 'self' → logprob: -15.750018119812012
    10. ',ll' → logprob: -16.125019073486328

Token 936: ' l' (ID: 305)
  Prédit: 'lc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lc' → logprob: -0.00017028623551595956
    2. 'l' → logprob: -9.250170707702637
    3. ' lc' → logprob: -9.750170707702637
    4. ' l' → logprob: -11.375170707702637
    5. 'lg' → logprob: -12.875170707702637
    6. '           ' → logprob: -14.125170707702637
    7. 'lcd' → logprob: -14.875170707702637
    8. '   ' → logprob: -14.875170707702637
    9. '
' → logprob: -16.50016975402832
    10. 'LC' → logprob: -16.62516975402832

Token 937: 'cg' (ID: 54237)
  Prédit: 'cg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cg' → logprob: -0.001983829541131854
    2. 'c' → logprob: -6.251983642578125
    3. 'g' → logprob: -10.126983642578125
    4. 'an' → logprob: -12.126983642578125
    5. 'gc' → logprob: -12.626983642578125
    6. ' cg' → logprob: -13.751983642578125
    7. 'cgi' → logprob: -13.876983642578125
    8. '   ' → logprob: -14.001983642578125
    9. '
' → logprob: -14.001983642578125
    10. 'CG' → logprob: -14.876983642578125

Token 938: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.759734732331708e-05
    2. ' ,' → logprob: -12.000017166137695
    3. ',
' → logprob: -12.125017166137695
    4. 'conditions' → logprob: -12.750017166137695
    5. '           ' → logprob: -13.000017166137695
    6. '```' → logprob: -15.125017166137695
    7. 'condition' → logprob: -16.500017166137695
    8. '   ' → logprob: -16.625017166137695
    9. '       ' → logprob: -16.750017166137695
    10. '[' → logprob: -17.000017166137695

Token 939: ' conditions' (ID: 6409)
  Prédit: 'conditions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'conditions' → logprob: -0.00020449401927180588
    2. ' conditions' → logprob: -8.500204086303711
    3. '           ' → logprob: -15.000204086303711
    4. 'condition' → logprob: -15.125204086303711
    5. 'conds' → logprob: -16.25020408630371
    6. '.conditions' → logprob: -16.50020408630371
    7. '               ' → logprob: -16.62520408630371
    8. '[' → logprob: -16.62520408630371
    9. '   ' → logprob: -17.37520408630371
    10. '
' → logprob: -17.50020408630371

Token 940: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.32580775022506714
    2. ')
' → logprob: -1.450807809829712
    3. '           ' → logprob: -3.200807809829712
    4. '       ' → logprob: -6.450807571411133
    5. ').' → logprob: -6.825807571411133
    6. ')find' → logprob: -9.325807571411133
    7. ')
' → logprob: -10.200807571411133
    8. '<|end|>' → logprob: -10.700807571411133
    9. '   ' → logprob: -10.950807571411133
    10. '.find' → logprob: -11.075807571411133

Token 941: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14483630657196045
    2. 'result' → logprob: -2.01983642578125
    3. '       ' → logprob: -7.01983642578125
    4. ' result' → logprob: -7.14483642578125
    5. 'self' → logprob: -8.01983642578125
    6. 'results' → logprob: -10.14483642578125
    7. '
' → logprob: -10.26983642578125
    8. 'print' → logprob: -10.76983642578125
    9. 'answer' → logprob: -11.14483642578125
    10. ' self' → logprob: -11.89483642578125

Token 942: ' res' (ID: 694)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.002042840700596571
    2. '           ' → logprob: -6.627042770385742
    3. 'self' → logprob: -8.377042770385742
    4. 'res' (adapté à ' res') → logprob: -8.877042770385742
    5. ' result' → logprob: -9.127042770385742
    6. 'answer' → logprob: -9.252042770385742
    7. 'min' → logprob: -9.377042770385742
    8. 'time' → logprob: -10.502042770385742
    9. 'frame' → logprob: -10.752042770385742
    10. '```' → logprob: -13.252042770385742

Token 943: ' =' (ID: 314)
  Prédit: 'ult'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ult' → logprob: -0.3227625787258148
    2. ' =' → logprob: -1.3227626085281372
    3. 'ults' → logprob: -4.822762489318848
    4. '=' → logprob: -6.947762489318848
    5. 's' → logprob: -8.572762489318848
    6. 'ultat' → logprob: -9.197762489318848
    7. '           ' → logprob: -9.322762489318848
    8. 'u' → logprob: -10.322762489318848
    9. 'ULT' → logprob: -12.072762489318848
    10. 'ul' → logprob: -12.447762489318848

Token 944: ' analyzer' (ID: 107715)
  Prédit: 'an'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'an' → logprob: -6.933173426659778e-05
    2. ' analyzer' → logprob: -9.625069618225098
    3. '           ' → logprob: -12.875069618225098
    4. '	an' → logprob: -14.625069618225098
    5. '   ' → logprob: -15.750069618225098
    6. '       ' → logprob: -16.62506866455078
    7. '(an' → logprob: -17.50006866455078
    8. ' analy' → logprob: -17.62506866455078
    9. 'Analyzer' → logprob: -18.37506866455078
    10. '_an' → logprob: -18.75006866455078

Token 945: '.find' (ID: 4231)
  Prédit: '.find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.find' → logprob: -0.004189279396086931
    2. 'find' → logprob: -5.504189491271973
    3. '.' → logprob: -9.129189491271973
    4. '.findall' → logprob: -13.379189491271973
    5. ' .' → logprob: -15.129189491271973
    6. ' find' → logprob: -15.754189491271973
    7. '=find' → logprob: -16.004188537597656
    8. ')find' → logprob: -17.004188537597656
    9. '   ' → logprob: -17.254188537597656
    10. ').' → logprob: -17.379188537597656

Token 946: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -7.896309739408025e-07
    2. 'min' → logprob: -14.875000953674316
    3. '_' → logprob: -16.125
    4. '```' → logprob: -16.125
    5. '_max' → logprob: -16.5
    6. '
' → logprob: -18.25
    7. '_m' → logprob: -18.375
    8. '`' → logprob: -18.75
    9. '_
' → logprob: -18.875
    10. 's' → logprob: -19.625

Token 947: '_frame' (ID: 19952)
  Prédit: '_frame'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_frame' → logprob: -4.596781946020201e-05
    2. 'frame' → logprob: -10.125045776367188
    3. '_' → logprob: -12.500045776367188
    4. '_min' → logprob: -14.625045776367188
    5. '_frames' → logprob: -15.125045776367188
    6. '_f' → logprob: -15.250045776367188
    7. '```' → logprob: -15.625045776367188
    8. '_FRAME' → logprob: -16.125045776367188
    9. '_
' → logprob: -16.250045776367188
    10. '._' → logprob: -16.875045776367188

Token 948: '()
' (ID: 1234)
  Prédit: '(res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.22864776849746704
    2. '()' → logprob: -1.8536477088928223
    3. '(' → logprob: -3.8536477088928223
    4. '(
' → logprob: -4.228647708892822
    5. '()
' → logprob: -4.478647708892822
    6. 'res' → logprob: -7.853647708892822
    7. '
' → logprob: -9.22864818572998
    8. '           ' → logprob: -10.97864818572998
    9. '       ' → logprob: -11.10364818572998
    10. ')' → logprob: -11.35364818572998

Token 949: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010864351876080036
    2. '
' → logprob: -4.7608642578125
    3. '       ' → logprob: -6.7608642578125
    4. 'self' → logprob: -6.8858642578125
    5. ' self' → logprob: -11.0108642578125
    6. '		' → logprob: -11.1358642578125
    7. '```' → logprob: -12.0108642578125
    8. '               ' → logprob: -12.1358642578125
    9. '<|end|>' → logprob: -12.1358642578125
    10. '\' → logprob: -12.5108642578125

Token 950: ' self' (ID: 1051)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6939911842346191
    2. 'self' (adapté à ' self') → logprob: -0.6939911842346191
    3. ' self' → logprob: -7.193991184234619
    4. '       ' → logprob: -9.818990707397461
    5. '
' → logprob: -11.068990707397461
    6. '		' → logprob: -11.568990707397461
    7. '	self' → logprob: -12.193990707397461
    8. '	       ' → logprob: -13.193990707397461
    9. '   ' → logprob: -13.318990707397461
    10. '```' → logprob: -14.068990707397461

Token 951: '.results' (ID: 53203)
  Prédit: '.results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.results' → logprob: -9.77022064034827e-05
    2. 'results' → logprob: -9.750097274780273
    3. '.' → logprob: -10.375097274780273
    4. ' .' → logprob: -12.250097274780273
    5. '	results' → logprob: -14.000097274780273
    6. '.s' → logprob: -14.625097274780273
    7. '`.' → logprob: -14.750097274780273
    8. '.res' → logprob: -15.125097274780273
    9. '
' → logprob: -15.625097274780273
    10. 's' → logprob: -15.750097274780273

Token 952: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0006900362786836922
    2. '.' → logprob: -7.37568998336792
    3. '.ap' → logprob: -10.625690460205078
    4. '.app' → logprob: -11.000690460205078
    5. '.extend' → logprob: -11.500690460205078
    6. '.setdefault' → logprob: -11.750690460205078
    7. '.add' → logprob: -13.250690460205078
    8. '.Append' → logprob: -14.500690460205078
    9. '.push' → logprob: -14.750690460205078
    10. '.insert' → logprob: -15.250690460205078

Token 953: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -3.4121114822482923e-06
    2. 'res' → logprob: -13.000003814697266
    3. '(' → logprob: -13.750003814697266
    4. '(str' → logprob: -17.250003814697266
    5. '(
' → logprob: -17.625003814697266
    6. '(r' → logprob: -19.625003814697266
    7. '	res' → logprob: -19.625003814697266
    8. ' res' → logprob: -19.750003814697266
    9. '(re' → logprob: -20.625003814697266
    10. '=res' → logprob: -20.625003814697266

Token 954: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005658994195982814
    2. '<|end|>' → logprob: -7.625566005706787
    3. ')
' → logprob: -10.375565528869629
    4. '           ' → logprob: -10.750565528869629
    5. '
' → logprob: -11.500565528869629
    6. '       ' → logprob: -12.000565528869629
    7. '()' → logprob: -13.125565528869629
    8. '<|end|>' → logprob: -13.500565528869629
    9. ')return' → logprob: -13.750565528869629
    10. '               ' → logprob: -14.250565528869629

Token 955: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 956: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0008715596632100642
    2. ' def' → logprob: -7.250871658325195
    3. '   ' → logprob: -9.125871658325195
    4. '
' → logprob: -11.000871658325195
    5. '	def' → logprob: -11.000871658325195
    6. '<|end|>' → logprob: -11.125871658325195
    7. '```' → logprob: -12.500871658325195
    8. '    
' → logprob: -15.125871658325195
    9. ' ' → logprob: -15.500871658325195
    10. '       ' → logprob: -16.250871658325195

Token 957: ' output' (ID: 4733)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.050108883529901505
    2. 'get' → logprob: -3.0501089096069336
    3. 'output' → logprob: -6.800108909606934
    4. ' print' → logprob: -8.050108909606934
    5. ' get' → logprob: -9.800108909606934
    6. ' output' → logprob: -11.550108909606934
    7. 'solve' → logprob: -11.800108909606934
    8. 'run' → logprob: -12.175108909606934
    9. 'format' → logprob: -12.175108909606934
    10. 'write' → logprob: -12.675108909606934

Token 958: '_results' (ID: 31049)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.10460617393255234
    2. '_results' → logprob: -2.3546061515808105
    3. '(' → logprob: -5.9796061515808105
    4. 'self' → logprob: -6.7296061515808105
    5. '_' → logprob: -7.9796061515808105
    6. '_result' → logprob: -8.354606628417969
    7. 'results' → logprob: -10.729606628417969
    8. '_(' → logprob: -11.229606628417969
    9. '_lines' → logprob: -11.479606628417969
    10. '(
' → logprob: -11.979606628417969

Token 959: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00021760274830739945
    2. '(' → logprob: -8.62521743774414
    3. '   ' → logprob: -11.00021743774414
    4. 'self' → logprob: -11.12521743774414
    5. '       ' → logprob: -12.25021743774414
    6. '(
' → logprob: -13.62521743774414
    7. 'def' → logprob: -15.12521743774414
    8. ' (' → logprob: -15.87521743774414
    9. '(Self' → logprob: -16.37521743774414
    10. '()' → logprob: -17.62521743774414

Token 960: '):
' (ID: 1883)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.32950636744499207
    2. '):' → logprob: -1.4545063972473145
    3. ',' → logprob: -3.5795063972473145
    4. '):
' → logprob: -4.7045063972473145
    5. '(self' → logprob: -5.3295063972473145
    6. '   ' → logprob: -5.7045063972473145
    7. '       ' → logprob: -6.7045063972473145
    8. ')' → logprob: -7.7045063972473145
    9. ',self' → logprob: -8.954505920410156
    10. ' self' → logprob: -9.204505920410156

Token 961: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25641512870788574
    2. '   ' → logprob: -1.5064151287078857
    3. 'def' → logprob: -5.756415367126465
    4. 'for' → logprob: -7.506415367126465
    5. 'self' → logprob: -7.631415367126465
    6. '(self' → logprob: -8.506415367126465
    7. ' for' → logprob: -10.381415367126465
    8. '(' → logprob: -11.006415367126465
    9. ' def' → logprob: -12.131415367126465
    10. ' self' → logprob: -12.256415367126465

Token 962: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0024440274573862553
    2. '       ' → logprob: -6.252443790435791
    3. ' for' → logprob: -7.752443790435791
    4. 'def' → logprob: -9.50244426727295
    5. '   ' → logprob: -11.50244426727295
    6. 'print' → logprob: -15.00244426727295
    7. '	for' → logprob: -15.00244426727295
    8. '```' → logprob: -15.87744426727295
    9. 'return' → logprob: -18.877443313598633
    10. '           ' → logprob: -19.252443313598633

Token 963: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.0844582319259644
    2. 'result' → logprob: -1.0844582319259644
    3. ' res' → logprob: -1.3344582319259644
    4. ' result' → logprob: -2.834458351135254
    5. 'r' → logprob: -6.584458351135254
    6. ' r' → logprob: -7.834458351135254
    7. '   ' → logprob: -13.459458351135254
    8. '       ' → logprob: -17.084457397460938
    9. '	res' → logprob: -17.209457397460938
    10. ' ' → logprob: -17.584457397460938

Token 964: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.001728372066281736
    2. 'in' → logprob: -6.376728534698486
    3. '  ' → logprob: -11.501728057861328
    4. '   ' → logprob: -11.751728057861328
    5. ' ' → logprob: -13.001728057861328
    6. '_' → logprob: -13.251728057861328
    7. '       ' → logprob: -13.501728057861328
    8. ',' → logprob: -14.751728057861328
    9. 'print' → logprob: -14.751728057861328
    10. '
' → logprob: -14.876728057861328

Token 965: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -7.505351095460355e-05
    2. ' self' → logprob: -9.500075340270996
    3. '(self' → logprob: -17.12507438659668
    4. '
' → logprob: -17.37507438659668
    5. '   ' → logprob: -17.50007438659668
    6. '       ' → logprob: -20.87507438659668
    7. '[self' → logprob: -20.87507438659668
    8. '	self' → logprob: -21.62507438659668
    9. '```' → logprob: -22.37507438659668
    10. '    ' → logprob: -22.62507438659668

Token 966: '.results' (ID: 53203)
  Prédit: '.results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.results' → logprob: -2.9160102712921798e-05
    2. '.' → logprob: -10.875029563903809
    3. 'results' → logprob: -12.000029563903809
    4. ' .' → logprob: -12.875029563903809
    5. '.
' → logprob: -14.000029563903809
    6. '._' → logprob: -15.375029563903809
    7. '	results' → logprob: -16.375028610229492
    8. '.result' → logprob: -16.625028610229492
    9. ' results' → logprob: -16.625028610229492
    10. '
' → logprob: -17.250028610229492

Token 967: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5449169874191284
    2. 'print' → logprob: -1.4199169874191284
    3. ':
' → logprob: -2.294917106628418
    4. ':' → logprob: -3.169917106628418
    5. '       ' → logprob: -5.044917106628418
    6. '():
' → logprob: -5.169917106628418
    7. ',' → logprob: -5.294917106628418
    8. ' print' → logprob: -5.544917106628418
    9. '.print' → logprob: -6.044917106628418
    10. '<|end|>' → logprob: -6.294917106628418

Token 968: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03163093701004982
    2. 'print' → logprob: -3.5316309928894043
    3. ' print' → logprob: -6.281630992889404
    4. '   ' → logprob: -12.406630516052246
    5. '       ' → logprob: -13.031630516052246
    6. '```' → logprob: -13.656630516052246
    7. '	       ' → logprob: -15.281630516052246
    8. '	print' → logprob: -15.281630516052246
    9. '               ' → logprob: -16.156631469726562
    10. '		' → logprob: -16.656631469726562

Token 969: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -4.320199877838604e-07
    2. ' print' → logprob: -15.5
    3. '           ' → logprob: -16.5
    4. '```' → logprob: -22.5
    5. '	print' → logprob: -22.75
    6. '   ' → logprob: -24.25
    7. '_print' → logprob: -25.125
    8. 'println' → logprob: -25.25
    9. 'pr' → logprob: -25.75
    10. '.print' → logprob: -26.0

Token 970: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.000553151941858232
    2. 'res' → logprob: -7.500553131103516
    3. '(' → logprob: -16.125553131103516
    4. ' res' → logprob: -18.000553131103516
    5. '(f' → logprob: -19.500553131103516
    6. '$res' → logprob: -19.500553131103516
    7. '	res' → logprob: -20.500553131103516
    8. ',res' → logprob: -21.375553131103516
    9. '(
' → logprob: -21.750553131103516
    10. '=res' → logprob: -22.000553131103516

Token 971: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1279553291387856e-05
    2. '())' → logprob: -11.875011444091797
    3. ')
' → logprob: -13.000011444091797
    4. '()' → logprob: -13.375011444091797
    5. ' )' → logprob: -15.250011444091797
    6. '<|end|>' → logprob: -17.125011444091797
    7. '   ' → logprob: -17.250011444091797
    8. ')`' → logprob: -17.500011444091797
    9. ')#' → logprob: -17.750011444091797
    10. '```' → logprob: -17.875011444091797

Token 972: 'def' (ID: 1314)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0026534171774983406
    2. 'def' → logprob: -6.6276535987854
    3. 'solver' → logprob: -7.1276535987854
    4. 'slot' → logprob: -8.377653121948242
    5. '```' → logprob: -8.502653121948242
    6. ' if' → logprob: -10.002653121948242
    7. '#' → logprob: -10.252653121948242
    8. 'Solver' → logprob: -12.252653121948242
    9. 'Slot' → logprob: -13.502653121948242
    10. '<|end|>' → logprob: -13.877653121948242

Token 973: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.00041053479071706533
    2. 'main' → logprob: -8.250410079956055
    3. ' run' → logprob: -9.375410079956055
    4. ' solve' → logprob: -9.875410079956055
    5. '_main' → logprob: -11.625410079956055
    6. ' solution' → logprob: -13.875410079956055
    7. '_' → logprob: -14.000410079956055
    8. ' process' → logprob: -14.375410079956055
    9. ' parse' → logprob: -15.000410079956055
    10. '__' → logprob: -15.500410079956055

Token 974: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -1.9623810658231378e-05
    2. '():
' → logprob: -10.875020027160645
    3. ' ():' → logprob: -14.750020027160645
    4. '()' → logprob: -15.250020027160645
    5. '():
' → logprob: -17.500019073486328
    6. ':' → logprob: -18.375019073486328
    7. '()>' → logprob: -18.625019073486328
    8. '(' → logprob: -19.125019073486328
    9. '();' → logprob: -19.875019073486328
    10. '():

' → logprob: -19.875019073486328

Token 975: '   ' (ID: 271)
  Prédit: ' import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.48916730284690857
    2. 'import' → logprob: -0.989167332649231
    3. '   ' → logprob: -4.364167213439941
    4. ' solver' → logprob: -6.489167213439941
    5. 'solver' → logprob: -7.364167213439941
    6. '	import' → logprob: -10.239167213439941
    7. ' input' → logprob: -10.739167213439941
    8. ' s' → logprob: -11.239167213439941
    9. 's' → logprob: -11.989167213439941
    10. 'input' → logprob: -12.114167213439941

Token 976: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' (adapté à ' import') → logprob: -0.0386495366692543
    2. ' import' → logprob: -3.288649559020996
    3. 'solver' → logprob: -7.538649559020996
    4. '   ' → logprob: -9.663649559020996
    5. ' solver' → logprob: -11.413649559020996
    6. 'input' → logprob: -14.413649559020996
    7. '	import' → logprob: -15.038649559020996
    8. 'from' → logprob: -16.41364860534668
    9. '```' → logprob: -16.53864860534668
    10. 'slot' → logprob: -16.91364860534668

Token 977: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -2.935296834039036e-06
    2. ' sys' → logprob: -12.75000286102295
    3. '=sys' → logprob: -21.875003814697266
    4. '	sys' → logprob: -22.750003814697266
    5. '(sys' → logprob: -23.625003814697266
    6. 'io' → logprob: -23.625003814697266
    7. 'stdin' → logprob: -25.125003814697266
    8. '```' → logprob: -25.125003814697266
    9. '.sys' → logprob: -26.125003814697266
    10. 'os' → logprob: -26.250003814697266

Token 978: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0029642691370099783
    2. 'input' → logprob: -6.377964496612549
    3. '    
' → logprob: -7.502964496612549
    4. '
' → logprob: -7.627964496612549
    5. ' lines' → logprob: -9.50296401977539
    6. ' input' → logprob: -9.62796401977539
    7. 'for' → logprob: -10.62796401977539
    8. 'lines' → logprob: -11.37796401977539
    9. '```' → logprob: -11.62796401977539
    10. '	lines' → logprob: -12.00296401977539

Token 979: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006482661236077547
    2. 'input' → logprob: -5.5064826011657715
    3. ' input' → logprob: -6.1314826011657715
    4. ' lines' → logprob: -8.63148307800293
    5. 'lines' → logprob: -11.00648307800293
    6. '    
' → logprob: -11.13148307800293
    7. '	input' → logprob: -12.88148307800293
    8. 'inputs' → logprob: -12.88148307800293
    9. '
' → logprob: -13.25648307800293
    10. 'for' → logprob: -13.38148307800293

Token 980: ' solver' (ID: 63271)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.7489956617355347
    2. '   ' → logprob: -0.9989956617355347
    3. 'lines' → logprob: -2.498995780944824
    4. ' input' → logprob: -3.623995780944824
    5. ' lines' → logprob: -3.748995780944824
    6. 'for' → logprob: -3.748995780944824
    7. ' for' → logprob: -5.873995780944824
    8. 'inputs' → logprob: -9.373995780944824
    9. 'line' → logprob: -10.498995780944824
    10. '	lines' → logprob: -11.123995780944824

Token 981: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011052416637539864
    2. '=' → logprob: -4.51105260848999
    3. '.' → logprob: -12.636052131652832
    4. '   ' → logprob: -14.636052131652832
    5. ' ' → logprob: -14.761052131652832
    6. '	' → logprob: -15.636052131652832
    7. ' =
' → logprob: -16.51105308532715
    8. '_' → logprob: -16.76105308532715
    9. '()' → logprob: -17.38605308532715
    10. ')' → logprob: -17.38605308532715

Token 982: ' Slot' (ID: 28486)
  Prédit: 'Slot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Slot' → logprob: -3.7697225252486533e-06
    2. ' Slot' → logprob: -12.500003814697266
    3. 'Spot' → logprob: -19.250003814697266
    4. 'Sl' → logprob: -20.250003814697266
    5. 'Slots' → logprob: -20.250003814697266
    6. 'Socket' → logprob: -20.750003814697266
    7. 'Slider' → logprob: -21.250003814697266
    8. 'Site' → logprob: -21.375003814697266
    9. 'Solver' → logprob: -21.375003814697266
    10. 'Slug' → logprob: -21.375003814697266

Token 983: 'Machine' (ID: 25519)
  Prédit: 'Machine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Machine' → logprob: -6.704273118884885e-07
    2. '   ' → logprob: -15.375000953674316
    3. '_machine' → logprob: -16.0
    4. 'Mach' → logprob: -16.0
    5. '
' → logprob: -17.25
    6. ' Machine' → logprob: -17.375
    7. '_MACHINE' → logprob: -18.25
    8. 'machine' → logprob: -18.625
    9. 'Machines' → logprob: -18.875
    10. 'Solver' → logprob: -18.875

Token 984: 'Solver' (ID: 70484)
  Prédit: 'Solver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Solver' → logprob: -6.153795766294934e-06
    2. 'solver' → logprob: -12.125005722045898
    3. '_solver' → logprob: -14.875005722045898
    4. 'Solve' → logprob: -16.2500057220459
    5. ' Solver' → logprob: -16.5000057220459
    6. ' solver' → logprob: -16.8750057220459
    7. 'olver' → logprob: -17.0000057220459
    8. 'Sol' → logprob: -17.3750057220459
    9. 'Resolver' → logprob: -18.5000057220459
    10. '
' → logprob: -18.7500057220459

Token 985: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.031572844833135605
    2. '   ' → logprob: -3.5315728187561035
    3. 'for' → logprob: -6.6565728187561035
    4. '    
' → logprob: -7.7815728187561035
    5. '
' → logprob: -10.531573295593262
    6. ' for' → logprob: -10.656573295593262
    7. 'solver' → logprob: -10.781573295593262
    8. '  
' → logprob: -11.406573295593262
    9. ' 
' → logprob: -12.031573295593262
    10. 'while' → logprob: -12.031573295593262

Token 986: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016000831965357065
    2. 'solver' → logprob: -7.12660026550293
    3. 'input' → logprob: -7.75160026550293
    4. 'lines' → logprob: -8.25160026550293
    5. 'for' → logprob: -10.00160026550293
    6. '
' → logprob: -10.50160026550293
    7. '```' → logprob: -11.75160026550293
    8. ' lines' → logprob: -12.00160026550293
    9. ' solver' → logprob: -12.50160026550293
    10. '    
' → logprob: -12.62660026550293

Token 987: ' solver' (ID: 63271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' (adapté à ' solver') → logprob: -0.09961767494678497
    2. 'lines' → logprob: -3.0996177196502686
    3. 'input' → logprob: -3.4746177196502686
    4. 'for' → logprob: -4.0996174812316895
    5. '   ' → logprob: -6.3496174812316895
    6. 'data' → logprob: -8.474617958068848
    7. ' solver' → logprob: -8.974617958068848
    8. 'line' → logprob: -10.474617958068848
    9. ' lines' → logprob: -10.599617958068848
    10. 'inputs' → logprob: -11.224617958068848

Token 988: '.parse' (ID: 7259)
  Prédit: '.parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parse' → logprob: -7.5649528298527e-05
    2. '.' → logprob: -9.500075340270996
    3. '.solve' → logprob: -15.625075340270996
    4. 'parse' → logprob: -15.750075340270996
    5. ' .' → logprob: -16.125076293945312
    6. '   ' → logprob: -16.500076293945312
    7. '=parse' → logprob: -16.750076293945312
    8. '.process' → logprob: -16.875076293945312
    9. '.predict' → logprob: -17.125076293945312
    10. '.parser' → logprob: -17.625076293945312

Token 989: '_and' (ID: 18645)
  Prédit: '_and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_and' → logprob: -2.5107177862082608e-05
    2. '_' → logprob: -10.750024795532227
    3. '_lines' → logprob: -13.375024795532227
    4. '(sys' → logprob: -13.875024795532227
    5. 'and' → logprob: -14.500024795532227
    6. '_(' → logprob: -15.250024795532227
    7. '_input' → logprob: -15.875024795532227
    8. 'sys' → logprob: -16.750024795532227
    9. '_sys' → logprob: -17.125024795532227
    10. '_or' → logprob: -17.500024795532227

Token 990: '_s' (ID: 1278)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.0011724866926670074
    2. 'sys' → logprob: -6.7511725425720215
    3. 'split' → logprob: -13.501172065734863
    4. 'olve' → logprob: -14.751172065734863
    5. 'stdin' → logprob: -15.751172065734863
    6. 'sol' → logprob: -16.37617301940918
    7. ' solve' → logprob: -16.62617301940918
    8. '(sys' → logprob: -17.12617301940918
    9. 'parse' → logprob: -17.62617301940918
    10. 'input' → logprob: -17.62617301940918

Token 991: 'olve' (ID: 11460)
  Prédit: 'olve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'olve' → logprob: -0.01536569930613041
    2. 'ys' → logprob: -4.7653656005859375
    3. 'solve' → logprob: -5.1403656005859375
    4. 'sys' → logprob: -7.5153656005859375
    5. 'olver' → logprob: -9.015365600585938
    6. 'ol' → logprob: -9.015365600585938
    7. '```' → logprob: -10.640365600585938
    8. 'sol' → logprob: -11.140365600585938
    9. 'ove' → logprob: -12.015365600585938
    10. 'o' → logprob: -12.390365600585938

Token 992: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.00010425841173855588
    2. 'sys' → logprob: -9.250103950500488
    3. '([' → logprob: -12.125103950500488
    4. '(list' → logprob: -13.875103950500488
    5. ' sys' → logprob: -14.250103950500488
    6. '(' → logprob: -14.750103950500488
    7. '   ' → logprob: -15.375103950500488
    8. '(s' → logprob: -15.500103950500488
    9. '	sys' → logprob: -16.000104904174805
    10. '=sys' → logprob: -16.625104904174805

Token 993: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.006821935996413231
    2. '.argv' → logprob: -5.006822109222412
    3. '.' → logprob: -9.381821632385254
    4. '.stdout' → logprob: -10.881821632385254
    5. 'stdin' → logprob: -13.256821632385254
    6. '.std' → logprob: -14.256821632385254
    7. ' .' → logprob: -14.631821632385254
    8. '.stderr' → logprob: -15.256821632385254
    9. '(stdin' → logprob: -16.13182258605957
    10. '.st' → logprob: -16.25682258605957

Token 994: '.readlines' (ID: 92237)
  Prédit: '.readlines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readlines' → logprob: -0.5476467609405518
    2. ')' → logprob: -1.0476467609405518
    3. '.readline' → logprob: -2.6726467609405518
    4. '.' → logprob: -6.422646522521973
    5. '.read' → logprob: -8.547646522521973
    6. '.)' → logprob: -11.297646522521973
    7. 'read' → logprob: -11.422646522521973
    8. '   ' → logprob: -12.547646522521973
    9. ')
' → logprob: -12.672646522521973
    10. '
' → logprob: -13.422646522521973

Token 995: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00019424250058364123
    2. '()' → logprob: -8.750194549560547
    3. ')' → logprob: -10.375194549560547
    4. '())
' → logprob: -12.750194549560547
    5. ' ())' → logprob: -13.875194549560547
    6. '[])' → logprob: -15.125194549560547
    7. '()]' → logprob: -15.375194549560547
    8. '()[' → logprob: -15.750194549560547
    9. '   ' → logprob: -17.000194549560547
    10. '();)' → logprob: -17.750194549560547

Token 996: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003196727717295289
    2. 'solver' → logprob: -5.753196716308594
    3. '
' → logprob: -11.128196716308594
    4. ' solver' → logprob: -13.378196716308594
    5. '    
' → logprob: -13.503196716308594
    6. '```' → logprob: -14.378196716308594
    7. '_solver' → logprob: -14.878196716308594
    8. '	s' → logprob: -15.253196716308594
    9. '       ' → logprob: -16.378196716308594
    10. 'sol' → logprob: -17.003196716308594

Token 997: ' solver' (ID: 63271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' (adapté à ' solver') → logprob: -1.7835754988482222e-05
    2. '   ' → logprob: -11.250018119812012
    3. ' solver' → logprob: -12.250018119812012
    4. '
' → logprob: -17.875017166137695
    5. '```' → logprob: -18.375017166137695
    6. 'sol' → logprob: -19.250017166137695
    7. 'scheduler' → logprob: -20.500017166137695
    8. '    
' → logprob: -20.875017166137695
    9. '_solver' → logprob: -20.875017166137695
    10. '  ' → logprob: -21.375017166137695

Token 998: '.output' (ID: 27521)
  Prédit: '.output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.output' → logprob: -0.0003013809327967465
    2. '.' → logprob: -8.125301361083984
    3. 'output' → logprob: -13.125301361083984
    4. '.
' → logprob: -14.125301361083984
    5. '.results' → logprob: -14.500301361083984
    6. '.run' → logprob: -15.125301361083984
    7. '.print' → logprob: -15.125301361083984
    8. ' .' → logprob: -15.250301361083984
    9. '.outputs' → logprob: -15.500301361083984
    10. '.input' → logprob: -15.625301361083984

Token 999: '_results' (ID: 31049)
  Prédit: '_results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_results' → logprob: -0.030718529596924782
    2. '()' → logprob: -3.5307185649871826
    3. '_' → logprob: -7.0307183265686035
    4. '()
' → logprob: -9.655718803405762
    5. 'results' → logprob: -11.405718803405762
    6. 'Results' → logprob: -13.030718803405762
    7. '()`' → logprob: -13.530718803405762
    8. '(' → logprob: -13.905718803405762
    9. '_res' → logprob: -14.155718803405762
    10. '```' → logprob: -14.405718803405762

Token 1000: '()


' (ID: 29771)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08246129006147385
    2. '()' → logprob: -3.332461357116699
    3. 'if' → logprob: -3.707461357116699
    4. '()
' → logprob: -4.832461357116699
    5. '<|end|>' → logprob: -4.832461357116699
    6. '(
' → logprob: -6.207461357116699
    7. '```' → logprob: -7.832461357116699
    8. '\n' → logprob: -8.4574613571167
    9. '(' → logprob: -9.5824613571167
    10. 'main' → logprob: -9.9574613571167

Token 1001: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -9.817902173381299e-05
    2. 'main' → logprob: -9.50009822845459
    3. '```' → logprob: -11.25009822845459
    4. '
' → logprob: -12.00009822845459
    5. ' if' → logprob: -12.62509822845459
    6. '#' → logprob: -14.75009822845459
    7. '\n' → logprob: -15.12509822845459
    8. '\' → logprob: -17.125097274780273
    9. '__' → logprob: -17.625097274780273
    10. '(main' → logprob: -17.750097274780273

Token 1002: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.5760092735290527
    2. ' __' → logprob: -0.8260092735290527
    3. '_' → logprob: -10.576009750366211
    4. '_name' → logprob: -10.826009750366211
    5. '___' → logprob: -11.826009750366211
    6. 'name' → logprob: -11.951009750366211
    7. ' ' → logprob: -11.951009750366211
    8. 'Name' → logprob: -13.951009750366211
    9. ' ' → logprob: -14.826009750366211
    10. '```' → logprob: -15.076009750366211

Token 1003: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.10607580840587616
    2. '==' → logprob: -2.3560757637023926
    3. ' ==' → logprob: -5.606075763702393
    4. '=='' → logprob: -6.731075763702393
    5. '=="' → logprob: -8.10607624053955
    6. 'if' → logprob: -8.73107624053955
    7. '[' → logprob: -9.10607624053955
    8. 'name' → logprob: -9.23107624053955
    9. '=' → logprob: -9.98107624053955
    10. '__.__' → logprob: -9.98107624053955

Token 1004: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00026169343618676066
    2. '==' → logprob: -8.500261306762695
    3. '__.__' → logprob: -10.000261306762695
    4. '=="' → logprob: -12.125261306762695
    5. ' ==' → logprob: -12.500261306762695
    6. '__
' → logprob: -14.000261306762695
    7. '__.' → logprob: -14.125261306762695
    8. '=='' → logprob: -14.750261306762695
    9. '__[' → logprob: -14.750261306762695
    10. '__["' → logprob: -15.000261306762695

Token 1005: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.1615951508283615
    2. '==' → logprob: -1.911595106124878
    3. ' ==' → logprob: -7.161595344543457
    4. '=="' → logprob: -7.911595344543457
    5. '=='' → logprob: -8.536595344543457
    6. '```' → logprob: -11.911595344543457
    7. '==
' → logprob: -12.161595344543457
    8. '=' → logprob: -12.661595344543457
    9. '[' → logprob: -12.661595344543457
    10. '"' → logprob: -13.036595344543457

Token 1006: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.20142541825771332
    2. ''' → logprob: -1.7014254331588745
    3. '__' → logprob: -11.451425552368164
    4. ' "__' → logprob: -13.701425552368164
    5. ' '__' → logprob: -16.451425552368164
    6. '"name' → logprob: -16.576425552368164
    7. '   ' → logprob: -16.951425552368164
    8. ''"' → logprob: -17.826425552368164
    9. '"user' → logprob: -17.826425552368164
    10. '"class' → logprob: -17.951425552368164

Token 1007: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -3.054500666621607e-06
    2. '__' → logprob: -13.00000286102295
    3. '_main' → logprob: -14.50000286102295
    4. 'name' → logprob: -15.87500286102295
    5. ' main' → logprob: -16.375003814697266
    6. '"' → logprob: -19.125003814697266
    7. '(main' → logprob: -20.875003814697266
    8. '-main' → logprob: -20.875003814697266
    9. '	main' → logprob: -21.375003814697266
    10. ''' → logprob: -21.375003814697266

Token 1008: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.16053281724452972
    2. '__' → logprob: -1.910532832145691
    3. '__':
' → logprob: -8.16053295135498
    4. '__.' → logprob: -11.41053295135498
    5. '__
' → logprob: -12.41053295135498
    6. '__.__' → logprob: -12.53553295135498
    7. '__["' → logprob: -12.66053295135498
    8. '__
' → logprob: -15.03553295135498
    9. '__:' → logprob: -16.035531997680664
    10. '=="' → logprob: -16.285531997680664

Token 1009: '   ' (ID: 271)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.05056809261441231
    2. ''' → logprob: -3.550568103790283
    3. '__' → logprob: -3.925568103790283
    4. '   ' → logprob: -7.300568103790283
    5. ' "__' → logprob: -8.925567626953125
    6. 'main' → logprob: -10.050567626953125
    7. '"_' → logprob: -12.675567626953125
    8. ' '__' → logprob: -12.925567626953125
    9. '("__' → logprob: -13.050567626953125
    10. '____' → logprob: -13.050567626953125

Token 1010: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -19.25
    3. '	main' → logprob: -21.75
    4. '   ' → logprob: -22.375
    5. 'mai' → logprob: -23.875
    6. 'ma' → logprob: -24.75
    7. 'import' → logprob: -25.75
    8. '.main' → logprob: -26.625
    9. 'm' → logprob: -26.625
    10. '(main' → logprob: -26.75

Token 1011: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1009
Tokens correctement prédits (1ère position, stricte): 388
Tokens correctement prédits (1ère position, avec adaptation): 435
Tokens correctement prédits (top 10): 802
Précision stricte (1ère position): 38.45%
Précision adaptée (1ère position): 43.11%
Précision (top 10): 79.48%
================================================================================
